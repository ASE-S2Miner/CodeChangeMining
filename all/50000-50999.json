[{"original_method":"protected void addStatements() {\n    extend(\n      CompletionType.BASIC,\n      psiElement().withLanguage(PythonLanguage.getInstance()).andNot(AFTER_QUALIFIED_REFERENCE).andNot(IN_IMPORT_STMT).andNot(IN_PARAM_LIST).andNot(AFTER_DEF_OR_CLASS),\n      new CompletionProvider<CompletionParameters>() {\n        protected void addCompletions(\n          @NotNull final CompletionParameters parameters, final ProcessingContext context, @NotNull final CompletionResultSet result\n        ) {\n          final @NonNls String[] space_strings = {\n            \"assert\", \"def\", \"class\", \"for\", \"del\", \"exec\", \"from\", \"if\", \"import\", \"lambda\", \"print\", \"raise\", \"while\", \"with\"\n          };\n          final @NonNls String[] colon_strings = {\"try\"};\n          final @NonNls String[] just_strings = {\"pass\"};\n          addKeywords(space_strings, TailType.SPACE, parameters, result);\n          addKeywords(colon_strings, TailType.CASE_COLON, parameters, result);\n          addKeywords(just_strings, TailType.NONE, parameters, result);\n        }\n      }\n    );\n  }","id":50000,"modified_method":"private void addStatements() {\n    extend(\n      CompletionType.BASIC,\n      psiElement()\n        .withLanguage(PythonLanguage.getInstance())\n        .and(IN_BEGIN_STMT)\n        .andNot(IN_IMPORT_STMT)\n        .andNot(IN_PARAM_LIST)\n        .andNot(IN_ARG_LIST)\n        .andNot(IN_FUNC_OR_CLASS_DESCRIPTION)\n        .andNot(BEFORE_COND)\n        .andNot(AFTER_QUALIFIER)\n      ,\n      new CompletionProvider<CompletionParameters>() {\n        protected void addCompletions(\n          @NotNull final CompletionParameters parameters, final ProcessingContext context, @NotNull final CompletionResultSet result\n        ) {\n          final @NonNls String[] space_strings = {\"assert\", \"del\", \"exec\", \"from\", \"import\", \"lambda\", \"print\", \"raise\"};\n          final @NonNls String[] just_strings = {\"pass\"};\n          putKeywords(space_strings, TailType.SPACE, result);\n          putKeywords(just_strings, TailType.NONE, result);\n        }\n      }\n    );\n  }","commit_id":"10aec64c1a027e42eebd33242cc0aa2bcf5bc8cd","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected void addElse() {\n    extend(\n      CompletionType.BASIC, psiElement().withLanguage(PythonLanguage.getInstance())\n        .andNot(AFTER_QUALIFIED_REFERENCE).andOr(IN_LOOP, IN_IF, IN_TRY, AFTER_LOOP, AFTER_IF, AFTER_TRY),\n      new CompletionProvider<CompletionParameters>() {\n        protected void addCompletions(\n          @NotNull final CompletionParameters parameters, final ProcessingContext context, @NotNull final CompletionResultSet result\n        ) {\n          final @NonNls String[] colon_strings = {\"else\"};\n          addKeywords(colon_strings, TailType.CASE_COLON, parameters, result);\n        }\n      }\n    );\n  }","id":50001,"modified_method":"private void addElse() {\n    extend(\n      CompletionType.BASIC, psiElement()\n        .withLanguage(PythonLanguage.getInstance())\n        .and(FIRST_ON_LINE)\n        .andOr(IN_COND_STMT, IN_TRY_BODY, IN_EXCEPT_BODY, AFTER_COND_STMT_NO_ELSE, AFTER_TRY_NO_ELSE)\n        //.andNot(RIGHT_AFTER_COLON)\n        .andNot(AFTER_QUALIFIER)\n      ,\n      new CompletionProvider<CompletionParameters>() {\n        protected void addCompletions(\n          @NotNull final CompletionParameters parameters, final ProcessingContext context, @NotNull final CompletionResultSet result\n        ) {\n          final @NonNls String[] colon_strings = {\"else\"};\n          putKeywords(colon_strings, TailType.CASE_COLON, result); // TODO: have it dedent properly\n        }\n      }\n    );\n  }","commit_id":"10aec64c1a027e42eebd33242cc0aa2bcf5bc8cd","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n   * @see com.jetbrains.python.psi.PyUtil#flattenedParens(T[]) \n   */\n  protected static <T extends PyElement> List<T> _unfoldParenExprs(T[] targets, List<T> receiver) {\n    // NOTE: this proliferation of instanceofs is not very beautiful. Maybe rewrite using a visitor.\n    for (T exp : targets) {\n      if (exp instanceof PyParenthesizedExpression) {\n        final PyParenthesizedExpression parex = (PyParenthesizedExpression)exp;\n        PyExpression cont = parex.getContainedExpression();\n        if (cont instanceof PyTupleExpression) {\n          final PyTupleExpression tupex = (PyTupleExpression)cont;\n          _unfoldParenExprs((T[])tupex.getElements(), receiver);\n        }\n        else receiver.add(exp);\n      }\n      else if (exp instanceof PyTupleExpression) {\n        final PyTupleExpression tupex = (PyTupleExpression)exp;\n        _unfoldParenExprs((T[])tupex.getElements(), receiver);\n      }\n      else {\n        receiver.add(exp);\n      }\n    }\n    return receiver;\n  }","id":50002,"modified_method":"/**\n   * @see PyUtil#flattenedParens \n   */\n  protected static <T extends PyElement> List<T> _unfoldParenExprs(T[] targets, List<T> receiver) {\n    // NOTE: this proliferation of instanceofs is not very beautiful. Maybe rewrite using a visitor.\n    for (T exp : targets) {\n      if (exp instanceof PyParenthesizedExpression) {\n        final PyParenthesizedExpression parex = (PyParenthesizedExpression)exp;\n        PyExpression cont = parex.getContainedExpression();\n        if (cont instanceof PyTupleExpression) {\n          final PyTupleExpression tupex = (PyTupleExpression)cont;\n          _unfoldParenExprs((T[])tupex.getElements(), receiver);\n        }\n        else receiver.add(exp);\n      }\n      else if (exp instanceof PyTupleExpression) {\n        final PyTupleExpression tupex = (PyTupleExpression)exp;\n        _unfoldParenExprs((T[])tupex.getElements(), receiver);\n      }\n      else {\n        receiver.add(exp);\n      }\n    }\n    return receiver;\n  }","commit_id":"10aec64c1a027e42eebd33242cc0aa2bcf5bc8cd","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n     * Stops the calendar service.\n     */\n    static void stopCalendarService()\n    {\n        if(OSUtils.IS_WINDOWS\n                && !getConfigService().getBoolean(\n                        CalendarService.PNAME_FREE_BUSY_STATUS_DISABLED,\n                        false))\n        {\n            bundleContext.removeServiceListener(serviceListener);\n            synchronized(providers)\n            {\n                for(ProtocolProviderService pps : providers)\n                   pps.removeRegistrationStateChangeListener(providerListener);\n            }\n            calendarService = null;\n            MsOutlookAddrBookContactSourceService.UninitializeMAPI();\n        }\n    }","id":50003,"modified_method":"/**\n     * Stops the calendar service.\n     */\n    static void stopCalendarService()\n    {\n        if(OSUtils.IS_WINDOWS\n                && !getConfigService().getBoolean(\n                        CalendarService.PNAME_FREE_BUSY_STATUS_DISABLED,\n                        false))\n        {\n            bundleContext.removeServiceListener(serviceListener);\n            synchronized(providers)\n            {\n                for(ProtocolProviderService pps : getProtocolProviders())\n                   pps.removeRegistrationStateChangeListener(providerListener);\n            }\n            calendarService = null;\n            MsOutlookAddrBookContactSourceService.UninitializeMAPI();\n        }\n    }","commit_id":"667905490c55b2036bd279a73614c012c58fd93a","url":"https://github.com/jitsi/jitsi"},{"original_method":"public static List<ProtocolProviderService> getProtocolProviders()\n    {\n        ServiceReference[] ppsRefs;\n        List<ProtocolProviderService> result\n            = new ArrayList<ProtocolProviderService>();\n\n        try\n        {\n            ppsRefs\n                = bundleContext.getServiceReferences(\n                        ProtocolProviderService.class.getName(),\n                        null);\n        }\n        catch (InvalidSyntaxException ise)\n        {\n            ppsRefs = null;\n        }\n        if ((ppsRefs != null) && (ppsRefs.length != 0))\n        {\n            for (ServiceReference ppsRef : ppsRefs)\n            {\n                ProtocolProviderService pps\n                    = (ProtocolProviderService)\n                        bundleContext.getService(ppsRef);\n\n                result.add(pps);\n            }\n        }\n        return result;\n\n    }","id":50004,"modified_method":"public static List<ProtocolProviderService> getProtocolProviders()\n    {\n        List<ProtocolProviderService> result;\n        \n        if(providers == null)\n        {\n            providers = new ArrayList<ProtocolProviderService>();\n            synchronized(providers)\n            {\n                ServiceReference[] ppsRefs;\n                try\n                {\n                    ppsRefs\n                        = bundleContext.getServiceReferences(\n                                ProtocolProviderService.class.getName(),\n                                null);\n                }\n                catch (InvalidSyntaxException ise)\n                {\n                    ppsRefs = null;\n                }\n                if ((ppsRefs != null) && (ppsRefs.length != 0))\n                {\n                    for (ServiceReference ppsRef : ppsRefs)\n                    {\n                        ProtocolProviderService pps\n                            = (ProtocolProviderService)\n                                bundleContext.getService(ppsRef);\n                        providers.add(pps);\n                    }\n                }\n            }\n        }\n        \n        synchronized(providers)\n        {\n            result = new ArrayList<ProtocolProviderService>(providers);\n        }\n        \n        return result;\n    }","commit_id":"667905490c55b2036bd279a73614c012c58fd93a","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Tries to start the calendar service.\n     */\n    static void startCalendarService()\n    {\n        if(OSUtils.IS_WINDOWS\n                && !getConfigService().getBoolean(\n                        CalendarService.PNAME_FREE_BUSY_STATUS_DISABLED,\n                        false))\n        {\n            calendarService = new CalendarServiceImpl();\n\n            try\n            {\n                MsOutlookAddrBookContactSourceService.initMAPI(null);\n            }\n            catch (MsOutlookMAPIHResultException ex)\n            {\n                String msg = \"Failed to initialize MAPI: \" + ex.getMessage();\n\n                logger.error(msg);\n                if (logger.isDebugEnabled())\n                    logger.debug(msg, ex);\n                return;\n            }\n\n            bundleContext.addServiceListener(serviceListener);\n            for(ProtocolProviderService pps : getProtocolProviders())\n            {\n                synchronized(providers)\n                {\n                    providers.add(pps);\n                }\n                pps.addRegistrationStateChangeListener(providerListener);\n            }\n            bundleContext.registerService(CalendarService.class.getName(),\n                calendarService, null);\n            calendarService.start();\n        }\n    }","id":50005,"modified_method":"/**\n     * Tries to start the calendar service.\n     */\n    static void startCalendarService()\n    {\n        if(OSUtils.IS_WINDOWS\n                && !getConfigService().getBoolean(\n                        CalendarService.PNAME_FREE_BUSY_STATUS_DISABLED,\n                        false))\n        {\n            calendarService = new CalendarServiceImpl();\n\n            try\n            {\n                MsOutlookAddrBookContactSourceService.initMAPI(null);\n            }\n            catch (MsOutlookMAPIHResultException ex)\n            {\n                String msg = \"Failed to initialize MAPI: \" + ex.getMessage();\n\n                logger.error(msg);\n                if (logger.isDebugEnabled())\n                    logger.debug(msg, ex);\n                return;\n            }\n\n            bundleContext.addServiceListener(serviceListener);\n            for(ProtocolProviderService pps : getProtocolProviders())\n            {\n                if(!pps.isRegistered())\n                    pps.addRegistrationStateChangeListener(providerListener);\n            }\n            bundleContext.registerService(CalendarService.class.getName(),\n                calendarService, null);\n            calendarService.start();\n        }\n    }","commit_id":"667905490c55b2036bd279a73614c012c58fd93a","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n         * Callback method when receiving notifications for updated items.\n         */\n        public void updated(String id)\n        {\n            try\n            {\n                synchronized(taskMap)\n                {\n                    CalendarItemTimerTask task = taskMap.get(id);\n                    if(task != null)\n                    {\n                        task.remove();\n                    }\n                    else\n                    {\n                        return;\n                    }\n                }\n                insert(id);\n            }\n            catch (MsOutlookMAPIHResultException e)\n            {\n                e.printStackTrace();\n            }\n        }","id":50006,"modified_method":"/**\n         * Callback method when receiving notifications for updated items.\n         */\n        public void updated(String id)\n        {\n            try\n            {\n                synchronized(taskMap)\n                {\n                    CalendarItemTimerTask task = taskMap.get(id);\n                    //Expired tasks can be removed earlier from the taskMap.\n                    if(task != null)\n                    {\n                        task.remove();\n                    }\n                }\n                insert(id);\n            }\n            catch (MsOutlookMAPIHResultException e)\n            {\n                e.printStackTrace();\n            }\n        }","commit_id":"667905490c55b2036bd279a73614c012c58fd93a","url":"https://github.com/jitsi/jitsi"},{"original_method":"public void handleProviderAdded(ProtocolProviderService pps)\n    {\n        inMeetingStatusPolicy.handleProtocolProvider(pps, null, false);\n    }","id":50007,"modified_method":"public void handleProviderAdded(ProtocolProviderService pps)\n    {\n        inMeetingStatusPolicy.handleProtocolProvider(pps, null, false, false);\n    }","commit_id":"667905490c55b2036bd279a73614c012c58fd93a","url":"https://github.com/jitsi/jitsi"},{"original_method":"public void handleProtocolProvider(ProtocolProviderService pps,\n            Boolean isInMeeting, boolean onThePhoneStatusChanged)\n        {\n            if(isInMeeting == null)\n                isInMeeting = isInMeeting();\n\n            OperationSetPresence presence\n                = pps.getOperationSet(OperationSetPresence.class);\n\n            if (presence == null)\n            {\n                /*\n                 * \"In meeting\" is a PresenceStatus so it is available\n                 * only to accounts which support presence in the first\n                 * place.\n                 */\n                forgetPresenceStatus(pps);\n            }\n            else if (pps.isRegistered())\n            {\n                PresenceStatus inMeetingPresenceStatus\n                    = findInMeetingPresenceStatus(presence);\n\n                PresenceStatus onThePhone\n                    = findOnThePhonePresenceStatus(presence);\n\n                if (inMeetingPresenceStatus == null)\n                {\n                    /*\n                     * If do not know how to define \"On the phone\" for\n                     * an OperationSetPresence, then we'd better not\n                     * mess with it in the first place.\n                     */\n                    forgetPresenceStatus(pps);\n                }\n                else if (isInMeeting)\n                {\n                    PresenceStatus presenceStatus\n                        = presence.getPresenceStatus();\n\n                    if (presenceStatus == null)\n                    {\n                        /*\n                         * It is strange that an OperationSetPresence\n                         * does not have a PresenceStatus so it may be\n                         * safer to not mess with it.\n                         */\n                        forgetPresenceStatus(pps);\n                    }\n                    else if (!inMeetingPresenceStatus.equals(\n                            presenceStatus)\n                            && (!presenceStatus.equals(onThePhone)\n                                || onThePhoneStatusChanged))\n                    {\n                        publishPresenceStatus(\n                                presence,\n                                inMeetingPresenceStatus);\n                        if (inMeetingPresenceStatus.equals(\n                                presence.getPresenceStatus()))\n                        {\n                            rememberPresenceStatus(pps, presenceStatus);\n                        }\n                        else\n                        {\n                            forgetPresenceStatus(pps);\n                        }\n                    }\n                }\n                else\n                {\n                    PresenceStatus presenceStatus\n                        = forgetPresenceStatus(pps);\n\n                    if ((presenceStatus != null)\n                            && inMeetingPresenceStatus.equals(\n                                    presence.getPresenceStatus()))\n                    {\n                        publishPresenceStatus(presence, presenceStatus);\n                    }\n                }\n            }\n            else\n            {\n                /*\n                 * Offline accounts do not get their PresenceStatus\n                 * modified for the purposes of \"On the phone\".\n                 */\n                forgetPresenceStatus(pps);\n            }\n\n        }","id":50008,"modified_method":"public void handleProtocolProvider(ProtocolProviderService pps,\n            Boolean isInMeeting, boolean onThePhoneStatusChanged, \n            boolean dontAddListeners)\n        {\n            \n            if(isInMeeting == null)\n                isInMeeting = isInMeeting();\n\n            OperationSetPresence presence\n                = pps.getOperationSet(OperationSetPresence.class);\n            if (presence == null)\n            {\n                /*\n                 * \"In meeting\" is a PresenceStatus so it is available\n                 * only to accounts which support presence in the first\n                 * place.\n                 */\n                forgetPresenceStatus(pps);\n            }\n            else if (pps.isRegistered())\n            {\n                PresenceStatus inMeetingPresenceStatus\n                    = findInMeetingPresenceStatus(presence);\n\n                PresenceStatus onThePhone\n                    = findOnThePhonePresenceStatus(presence);\n\n                if (inMeetingPresenceStatus == null)\n                {\n                    /*\n                     * If do not know how to define \"On the phone\" for\n                     * an OperationSetPresence, then we'd better not\n                     * mess with it in the first place.\n                     */\n                    forgetPresenceStatus(pps);\n                }\n                else if (isInMeeting)\n                {\n                    if(!dontAddListeners)\n                    {\n                        presence.addProviderPresenceStatusListener(\n                            presenceStatusListener);\n                    }\n                    PresenceStatus presenceStatus\n                        = presence.getPresenceStatus();\n\n                    if (presenceStatus == null)\n                    {\n                        logger.info(\"HANDLE provider 55\");\n                        /*\n                         * It is strange that an OperationSetPresence\n                         * does not have a PresenceStatus so it may be\n                         * safer to not mess with it.\n                         */\n                        forgetPresenceStatus(pps);\n                        presence.removeProviderPresenceStatusListener(\n                            presenceStatusListener);\n                    }\n                    else if (!inMeetingPresenceStatus.equals(\n                            presenceStatus)\n                            && (!presenceStatus.equals(onThePhone)\n                                || onThePhoneStatusChanged))\n                    {\n                        if(!dontAddListeners)\n                        {\n                            if(!presenceStatus.isOnline())\n                            {\n                                return;\n                            }\n                            presence.removeProviderPresenceStatusListener(\n                                presenceStatusListener);\n                        }\n                        publishPresenceStatus(\n                                presence,\n                                inMeetingPresenceStatus);\n                        if (inMeetingPresenceStatus.equals(\n                                presence.getPresenceStatus()))\n                        {\n                            rememberPresenceStatus(pps, presenceStatus);\n                        }\n                        else\n                        {\n                            forgetPresenceStatus(pps);\n                        }\n                    }\n                    else\n                    {\n                        presence.removeProviderPresenceStatusListener(\n                            presenceStatusListener);\n                    }\n                }\n                else\n                {\n                    PresenceStatus presenceStatus\n                        = forgetPresenceStatus(pps);\n\n                    if ((presenceStatus != null)\n                            && inMeetingPresenceStatus.equals(\n                                    presence.getPresenceStatus()))\n                    {\n                        publishPresenceStatus(presence, presenceStatus);\n                    }\n                }\n            }\n            else\n            {\n                forgetPresenceStatus(pps);\n            }\n\n        }","commit_id":"667905490c55b2036bd279a73614c012c58fd93a","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n         * Applies this policy to the current state of the application.\n         */\n        private void run(boolean onThePhoneStatusChanged)\n        {\n            List<ProtocolProviderService> providers\n                = AddrBookActivator.getProtocolProviders();\n\n            if ((providers == null) || (providers.size() == 0))\n            {\n                forgetPresenceStatuses();\n            }\n            else\n            {\n                boolean isInMeeting = isInMeeting();\n\n                for (ProtocolProviderService pps : providers)\n                {\n                    if (pps == null)\n                        continue;\n\n                    handleProtocolProvider(pps, isInMeeting, onThePhoneStatusChanged);\n                }\n            }\n        }","id":50009,"modified_method":"/**\n         * Applies this policy to the current state of the application.\n         */\n        private void run(boolean onThePhoneStatusChanged)\n        {\n            List<ProtocolProviderService> providers\n                = AddrBookActivator.getProtocolProviders();\n\n            if ((providers == null) || (providers.size() == 0))\n            {\n                forgetPresenceStatuses();\n            }\n            else\n            {\n                boolean isInMeeting = isInMeeting();\n\n                for (ProtocolProviderService pps : providers)\n                {\n                    if (pps == null)\n                        continue;\n\n                    handleProtocolProvider(pps, isInMeeting, \n                        onThePhoneStatusChanged, false);\n                }\n            }\n        }","commit_id":"667905490c55b2036bd279a73614c012c58fd93a","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\r\n     * Handles stored accounts for a protocol provider factory and add them\r\n     * to the UI and register them if needed.\r\n     * @param providerFactory the factory to handle.\r\n     */\r\n    private void addAccountsForProtocolProviderFactory(\r\n        ProtocolProviderFactory providerFactory)\r\n    {\r\n        ServiceReference serRef;\r\n        ProtocolProviderService protocolProvider;\r\n\r\n        for (AccountID accountID : providerFactory.getRegisteredAccounts())\r\n        {\r\n            serRef = providerFactory.getProviderForAccount(accountID);\r\n\r\n            protocolProvider =\r\n                (ProtocolProviderService) UtilActivator.bundleContext\r\n                    .getService(serRef);\r\n\r\n            // check whether we have already loaded this provider\r\n            if(loginRenderer.containsProtocolProviderUI(protocolProvider))\r\n                continue;\r\n\r\n            protocolProvider.addRegistrationStateChangeListener(this);\r\n\r\n            loginRenderer.addProtocolProviderUI(protocolProvider);\r\n\r\n            Object status =\r\n                AccountStatusUtils\r\n                    .getProtocolProviderLastStatus(protocolProvider);\r\n\r\n            if (status == null\r\n                || status.equals(GlobalStatusEnum.ONLINE_STATUS)\r\n                || ((status instanceof PresenceStatus)\r\n                    && (((PresenceStatus) status)\r\n                    .getStatus() >= PresenceStatus.ONLINE_THRESHOLD)))\r\n            {\r\n                login(protocolProvider);\r\n            }\r\n        }\r\n    }","id":50010,"modified_method":"/**\r\n     * Handles stored accounts for a protocol provider factory and add them\r\n     * to the UI and register them if needed.\r\n     * @param providerFactory the factory to handle.\r\n     */\r\n    private void addAccountsForProtocolProviderFactory(\r\n        ProtocolProviderFactory providerFactory)\r\n    {\r\n        ServiceReference serRef;\r\n        ProtocolProviderService protocolProvider;\r\n\r\n        for (AccountID accountID : providerFactory.getRegisteredAccounts())\r\n        {\r\n            serRef = providerFactory.getProviderForAccount(accountID);\r\n\r\n            protocolProvider =\r\n                (ProtocolProviderService) UtilActivator.bundleContext\r\n                    .getService(serRef);\r\n\r\n            if(!loginRenderer.containsProtocolProviderUI(protocolProvider))\r\n            {\r\n                protocolProvider.addRegistrationStateChangeListener(this);\r\n                loginRenderer.addProtocolProviderUI(protocolProvider);\r\n            }\r\n\r\n            Object status =\r\n                AccountStatusUtils\r\n                    .getProtocolProviderLastStatus(protocolProvider);\r\n\r\n            if (status == null\r\n                || status.equals(GlobalStatusEnum.ONLINE_STATUS)\r\n                || ((status instanceof PresenceStatus)\r\n                    && (((PresenceStatus) status)\r\n                    .getStatus() >= PresenceStatus.ONLINE_THRESHOLD)))\r\n            {\r\n                login(protocolProvider);\r\n            }\r\n        }\r\n    }","commit_id":"e9ed00f9c22445d2da1180cd38ee13716cb7e707","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\r\n     * Handles stored accounts for a protocol provider factory and add them\r\n     * to the UI and register them if needed.\r\n     * @param providerFactory the factory to handle.\r\n     */\r\n    private void addAccountsForProtocolProviderFactory(\r\n        ProtocolProviderFactory providerFactory)\r\n    {\r\n        ServiceReference serRef;\r\n        ProtocolProviderService protocolProvider;\r\n\r\n        for (AccountID accountID : providerFactory.getRegisteredAccounts())\r\n        {\r\n            serRef = providerFactory.getProviderForAccount(accountID);\r\n\r\n            protocolProvider =\r\n                (ProtocolProviderService) UtilActivator.bundleContext\r\n                    .getService(serRef);\r\n\r\n            if(!loginRenderer.containsProtocolProviderUI(protocolProvider))\r\n            {\r\n                protocolProvider.addRegistrationStateChangeListener(this);\r\n                loginRenderer.addProtocolProviderUI(protocolProvider);\r\n            }\r\n\r\n            Object status =\r\n                AccountStatusUtils\r\n                    .getProtocolProviderLastStatus(protocolProvider);\r\n\r\n            if (status == null\r\n                || status.equals(GlobalStatusEnum.ONLINE_STATUS)\r\n                || ((status instanceof PresenceStatus)\r\n                    && (((PresenceStatus) status)\r\n                    .getStatus() >= PresenceStatus.ONLINE_THRESHOLD)))\r\n            {\r\n                login(protocolProvider);\r\n            }\r\n        }\r\n    }","id":50011,"modified_method":"/**\r\n     * Handles stored accounts for a protocol provider factory and add them\r\n     * to the UI and register them if needed.\r\n     * @param providerFactory the factory to handle.\r\n     */\r\n    private void addAccountsForProtocolProviderFactory(\r\n        ProtocolProviderFactory providerFactory)\r\n    {\r\n        ServiceReference serRef;\r\n        ProtocolProviderService protocolProvider;\r\n\r\n        for (AccountID accountID : providerFactory.getRegisteredAccounts())\r\n        {\r\n            serRef = providerFactory.getProviderForAccount(accountID);\r\n\r\n            protocolProvider =\r\n                (ProtocolProviderService) UtilActivator.bundleContext\r\n                    .getService(serRef);\r\n\r\n            handleProviderAdded(protocolProvider);\r\n        }\r\n    }","commit_id":"39ff767a8b7126de44b4e13d4bee28f7b63365f7","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\r\n     * Adds all UI components (status selector box, etc) related to the given\r\n     * protocol provider.\r\n     *\r\n     * @param protocolProvider the <tt>ProtocolProviderService<\/tt>\r\n     */\r\n    private void handleProviderAdded(ProtocolProviderService protocolProvider)\r\n    {\r\n        if (logger.isTraceEnabled())\r\n            logger.trace(\"The following protocol provider was just added: \"\r\n            + protocolProvider.getAccountID().getAccountAddress());\r\n\r\n        protocolProvider.addRegistrationStateChangeListener(this);\r\n        loginRenderer.addProtocolProviderUI(protocolProvider);\r\n\r\n        Object status = AccountStatusUtils\r\n            .getProtocolProviderLastStatus(protocolProvider);\r\n\r\n        if (status == null\r\n            || status.equals(GlobalStatusEnum.ONLINE_STATUS)\r\n            || ((status instanceof PresenceStatus) && (((PresenceStatus) status)\r\n                .getStatus() >= PresenceStatus.ONLINE_THRESHOLD)))\r\n        {\r\n            login(protocolProvider);\r\n        }\r\n    }","id":50012,"modified_method":"/**\r\n     * Adds all UI components (status selector box, etc) related to the given\r\n     * protocol provider.\r\n     *\r\n     * @param protocolProvider the <tt>ProtocolProviderService<\/tt>\r\n     */\r\n    private void handleProviderAdded(ProtocolProviderService protocolProvider)\r\n    {\r\n        if (logger.isTraceEnabled())\r\n            logger.trace(\"The following protocol provider was just added: \"\r\n            + protocolProvider.getAccountID().getAccountAddress());\r\n\r\n        synchronized(loginRenderer)\r\n        {\r\n            if(!loginRenderer.containsProtocolProviderUI(protocolProvider))\r\n            {\r\n                protocolProvider.addRegistrationStateChangeListener(this);\r\n                loginRenderer.addProtocolProviderUI(protocolProvider);\r\n            }\r\n            // we have already added this provider and scheduled\r\n            // a login if needed\r\n            // we've done our work, if it fails or something else\r\n            // reconnect or other plugins will take care\r\n            else\r\n                return;\r\n        }\r\n\r\n        Object status = AccountStatusUtils\r\n            .getProtocolProviderLastStatus(protocolProvider);\r\n\r\n        if (status == null\r\n            || status.equals(GlobalStatusEnum.ONLINE_STATUS)\r\n            || ((status instanceof PresenceStatus) && (((PresenceStatus) status)\r\n                .getStatus() >= PresenceStatus.ONLINE_THRESHOLD)))\r\n        {\r\n            login(protocolProvider);\r\n        }\r\n    }","commit_id":"39ff767a8b7126de44b4e13d4bee28f7b63365f7","url":"https://github.com/jitsi/jitsi"},{"original_method":"@Before\n    public void setUp() {\n        NodeBuilder builder = EMPTY_NODE.builder();\n        builder.setProperty(\"a\", 1L);\n        builder.setProperty(\"b\", 2L);\n        builder.setProperty(\"c\", 3L);\n        builder.child(\"x\").child(\"q\");\n        builder.child(\"y\");\n        builder.child(\"z\");\n        base = builder.getNodeState();\n    }","id":50013,"modified_method":"@Before\n    public void setUp() {\n        NodeBuilder builder = EMPTY_NODE.builder();\n        builder.setProperty(\"a\", 1L);\n        builder.setProperty(\"b\", 2L);\n        builder.setProperty(\"c\", 3L);\n        builder.child(\"x\").child(\"q\");\n        builder.child(\"y\");\n        builder.child(\"z\");\n        base = ModifiedNodeState.squeeze(builder.getNodeState());\n    }","commit_id":"9a78fa9d8a49ccd3a30b3911e842ea9804340942","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"@Override\n    public void initialize(NodeBuilder builder) {\n        builder.setProperty(JCR_PRIMARYTYPE, NT_REP_ROOT, Type.NAME);\n\n        if (!builder.hasChildNode(JCR_SYSTEM)) {\n            NodeBuilder system = builder.child(JCR_SYSTEM);\n            system.setProperty(JCR_PRIMARYTYPE, NT_REP_SYSTEM, Type.NAME);\n\n            system.child(JCR_VERSIONSTORAGE)\n                    .setProperty(JCR_PRIMARYTYPE, VersionConstants.REP_VERSIONSTORAGE, Type.NAME);\n            system.child(JCR_NODE_TYPES)\n                    .setProperty(JCR_PRIMARYTYPE, NT_REP_NODE_TYPES, Type.NAME);\n            system.child(VersionConstants.JCR_ACTIVITIES)\n                    .setProperty(JCR_PRIMARYTYPE, VersionConstants.REP_ACTIVITIES, Type.NAME);\n\n            Namespaces.setupNamespaces(system);\n        }\n\n        if (!builder.hasChildNode(IndexConstants.INDEX_DEFINITIONS_NAME)) {\n            NodeBuilder index = IndexUtils.getOrCreateOakIndex(builder);\n\n            IndexUtils.createIndexDefinition(index, \"uuid\", true, true,\n                    ImmutableList.<String>of(JCR_UUID), null);\n            IndexUtils.createIndexDefinition(index, \"nodetype\", true, false,\n                    ImmutableList.of(JCR_PRIMARYTYPE, JCR_MIXINTYPES), null);\n            IndexUtils.createReferenceIndex(index);\n            \n            index.child(\"counter\")\n                    .setProperty(JCR_PRIMARYTYPE, INDEX_DEFINITIONS_NODE_TYPE, NAME)\n                    .setProperty(TYPE_PROPERTY_NAME, NodeCounterEditorProvider.TYPE)\n                    .setProperty(IndexConstants.ASYNC_PROPERTY_NAME, \n                            IndexConstants.ASYNC_PROPERTY_NAME);\n        }\n\n        NodeState base = builder.getNodeState();\n        NodeStore store = new MemoryNodeStore(base);\n        NodeTypeRegistry.registerBuiltIn(RootFactory.createSystemRoot(\n                store, new EditorHook(new CompositeEditorProvider(\n                new NamespaceEditorProvider(),\n                new TypeEditorProvider())), null, null, null, null));\n        NodeState target = store.getRoot();\n        target.compareAgainstBaseState(base, new ApplyDiff(builder));\n    }","id":50014,"modified_method":"@Override\n    public void initialize(NodeBuilder builder) {\n        builder.setProperty(JCR_PRIMARYTYPE, NT_REP_ROOT, Type.NAME);\n\n        if (!builder.hasChildNode(JCR_SYSTEM)) {\n            NodeBuilder system = builder.child(JCR_SYSTEM);\n            system.setProperty(JCR_PRIMARYTYPE, NT_REP_SYSTEM, Type.NAME);\n\n            system.child(JCR_VERSIONSTORAGE)\n                    .setProperty(JCR_PRIMARYTYPE, VersionConstants.REP_VERSIONSTORAGE, Type.NAME);\n            system.child(JCR_NODE_TYPES)\n                    .setProperty(JCR_PRIMARYTYPE, NT_REP_NODE_TYPES, Type.NAME);\n            system.child(VersionConstants.JCR_ACTIVITIES)\n                    .setProperty(JCR_PRIMARYTYPE, VersionConstants.REP_ACTIVITIES, Type.NAME);\n\n            Namespaces.setupNamespaces(system);\n        }\n\n        if (!builder.hasChildNode(IndexConstants.INDEX_DEFINITIONS_NAME)) {\n            NodeBuilder index = IndexUtils.getOrCreateOakIndex(builder);\n\n            IndexUtils.createIndexDefinition(index, \"uuid\", true, true,\n                    ImmutableList.<String>of(JCR_UUID), null);\n            IndexUtils.createIndexDefinition(index, \"nodetype\", true, false,\n                    ImmutableList.of(JCR_PRIMARYTYPE, JCR_MIXINTYPES), null);\n            IndexUtils.createReferenceIndex(index);\n            \n            index.child(\"counter\")\n                    .setProperty(JCR_PRIMARYTYPE, INDEX_DEFINITIONS_NODE_TYPE, NAME)\n                    .setProperty(TYPE_PROPERTY_NAME, NodeCounterEditorProvider.TYPE)\n                    .setProperty(IndexConstants.ASYNC_PROPERTY_NAME, \n                            IndexConstants.ASYNC_PROPERTY_NAME);\n        }\n\n        // squeeze node state before it is passed to store (OAK-2411)\n        NodeState base = ModifiedNodeState.squeeze(builder.getNodeState());\n        NodeStore store = new MemoryNodeStore(base);\n        NodeTypeRegistry.registerBuiltIn(RootFactory.createSystemRoot(\n                store, new EditorHook(new CompositeEditorProvider(\n                new NamespaceEditorProvider(),\n                new TypeEditorProvider())), null, null, null, null));\n        NodeState target = store.getRoot();\n        target.compareAgainstBaseState(base, new ApplyDiff(builder));\n    }","commit_id":"a6fe69f7df86f60c5eeb2ae16b341bacbaf5e91d","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"@Override\n    public void initialize(NodeBuilder builder) {\n        NodeBuilder system = builder.child(JcrConstants.JCR_SYSTEM);\n        system.setProperty(JcrConstants.JCR_PRIMARYTYPE, NodeTypeConstants.NT_REP_SYSTEM, Type.NAME);\n\n        if (!system.hasChildNode(REP_PRIVILEGES)) {\n            NodeBuilder privileges = system.child(REP_PRIVILEGES);\n            privileges.setProperty(JcrConstants.JCR_PRIMARYTYPE, NT_REP_PRIVILEGES, Type.NAME);\n\n            NodeState base = builder.getNodeState();\n            NodeStore store = new MemoryNodeStore(base);\n            try {\n                Root systemRoot = RootFactory.createSystemRoot(store, null, null, null, null, null);\n                new PrivilegeDefinitionWriter(systemRoot).writeBuiltInDefinitions();\n            } catch (RepositoryException e) {\n                log.error(\"Failed to register built-in privileges\", e);\n                throw new RuntimeException(e);\n            }\n            NodeState target = store.getRoot();\n            target.compareAgainstBaseState(base, new ApplyDiff(builder));\n        }\n    }","id":50015,"modified_method":"@Override\n    public void initialize(NodeBuilder builder) {\n        NodeBuilder system = builder.child(JcrConstants.JCR_SYSTEM);\n        system.setProperty(JcrConstants.JCR_PRIMARYTYPE, NodeTypeConstants.NT_REP_SYSTEM, Type.NAME);\n\n        if (!system.hasChildNode(REP_PRIVILEGES)) {\n            NodeBuilder privileges = system.child(REP_PRIVILEGES);\n            privileges.setProperty(JcrConstants.JCR_PRIMARYTYPE, NT_REP_PRIVILEGES, Type.NAME);\n\n            // squeeze node state before it is passed to store (OAK-2411)\n            NodeState base = ModifiedNodeState.squeeze(builder.getNodeState());\n            NodeStore store = new MemoryNodeStore(base);\n            try {\n                Root systemRoot = RootFactory.createSystemRoot(store, null, null, null, null, null);\n                new PrivilegeDefinitionWriter(systemRoot).writeBuiltInDefinitions();\n            } catch (RepositoryException e) {\n                log.error(\"Failed to register built-in privileges\", e);\n                throw new RuntimeException(e);\n            }\n            NodeState target = store.getRoot();\n            target.compareAgainstBaseState(base, new ApplyDiff(builder));\n        }\n    }","commit_id":"a6fe69f7df86f60c5eeb2ae16b341bacbaf5e91d","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"@Override\n    public void initialize(NodeBuilder builder, String workspaceName) {\n        NodeState base = builder.getNodeState();\n        MemoryNodeStore store = new MemoryNodeStore(base);\n\n        Root root = RootFactory.createSystemRoot(store, EmptyHook.INSTANCE, workspaceName,\n                securityProvider, new QueryEngineSettings(),\n                new CompositeQueryIndexProvider(new PropertyIndexProvider(),\n                        new NodeTypeIndexProvider()));\n\n        UserConfiguration userConfiguration = securityProvider.getConfiguration(UserConfiguration.class);\n        UserManager userManager = userConfiguration.getUserManager(root, NamePathMapper.DEFAULT);\n\n        String errorMsg = \"Failed to initialize user content.\";\n        try {\n            NodeUtil rootTree = checkNotNull(new NodeUtil(root.getTree(\"/\")));\n            NodeUtil index = rootTree.getOrAddChild(IndexConstants.INDEX_DEFINITIONS_NAME, JcrConstants.NT_UNSTRUCTURED);\n\n            if (!index.hasChild(\"authorizableId\")) {\n                IndexUtils.createIndexDefinition(index, \"authorizableId\", true, new String[]{REP_AUTHORIZABLE_ID}, null);\n            }\n            if (!index.hasChild(\"principalName\")) {\n                IndexUtils.createIndexDefinition(index, \"principalName\", true,\n                        new String[]{REP_PRINCIPAL_NAME},\n                        new String[]{NT_REP_AUTHORIZABLE});\n            }\n\n            ConfigurationParameters params = userConfiguration.getParameters();\n            String adminId = params.getConfigValue(PARAM_ADMIN_ID, DEFAULT_ADMIN_ID);\n            if (userManager.getAuthorizable(adminId) == null) {\n                boolean omitPw = params.getConfigValue(PARAM_OMIT_ADMIN_PW, false);\n                userManager.createUser(adminId, (omitPw) ? null : adminId);\n            }\n            String anonymousId = Strings.emptyToNull(params.getConfigValue(PARAM_ANONYMOUS_ID, DEFAULT_ANONYMOUS_ID, String.class));\n            if (anonymousId != null && userManager.getAuthorizable(anonymousId) == null) {\n                userManager.createUser(anonymousId, null);\n            }\n            if (root.hasPendingChanges()) {\n                root.commit();\n            }\n        } catch (RepositoryException e) {\n            log.error(errorMsg, e);\n            throw new RuntimeException(e);\n        } catch (CommitFailedException e) {\n            log.error(errorMsg, e);\n            throw new RuntimeException(e);\n        }\n\n        NodeState target = store.getRoot();\n        target.compareAgainstBaseState(base, new ApplyDiff(builder));\n    }","id":50016,"modified_method":"@Override\n    public void initialize(NodeBuilder builder, String workspaceName) {\n        // squeeze node state before it is passed to store (OAK-2411)\n        NodeState base = ModifiedNodeState.squeeze(builder.getNodeState());\n        MemoryNodeStore store = new MemoryNodeStore(base);\n\n        Root root = RootFactory.createSystemRoot(store, EmptyHook.INSTANCE, workspaceName,\n                securityProvider, new QueryEngineSettings(),\n                new CompositeQueryIndexProvider(new PropertyIndexProvider(),\n                        new NodeTypeIndexProvider()));\n\n        UserConfiguration userConfiguration = securityProvider.getConfiguration(UserConfiguration.class);\n        UserManager userManager = userConfiguration.getUserManager(root, NamePathMapper.DEFAULT);\n\n        String errorMsg = \"Failed to initialize user content.\";\n        try {\n            NodeUtil rootTree = checkNotNull(new NodeUtil(root.getTree(\"/\")));\n            NodeUtil index = rootTree.getOrAddChild(IndexConstants.INDEX_DEFINITIONS_NAME, JcrConstants.NT_UNSTRUCTURED);\n\n            if (!index.hasChild(\"authorizableId\")) {\n                IndexUtils.createIndexDefinition(index, \"authorizableId\", true, new String[]{REP_AUTHORIZABLE_ID}, null);\n            }\n            if (!index.hasChild(\"principalName\")) {\n                IndexUtils.createIndexDefinition(index, \"principalName\", true,\n                        new String[]{REP_PRINCIPAL_NAME},\n                        new String[]{NT_REP_AUTHORIZABLE});\n            }\n\n            ConfigurationParameters params = userConfiguration.getParameters();\n            String adminId = params.getConfigValue(PARAM_ADMIN_ID, DEFAULT_ADMIN_ID);\n            if (userManager.getAuthorizable(adminId) == null) {\n                boolean omitPw = params.getConfigValue(PARAM_OMIT_ADMIN_PW, false);\n                userManager.createUser(adminId, (omitPw) ? null : adminId);\n            }\n            String anonymousId = Strings.emptyToNull(params.getConfigValue(PARAM_ANONYMOUS_ID, DEFAULT_ANONYMOUS_ID, String.class));\n            if (anonymousId != null && userManager.getAuthorizable(anonymousId) == null) {\n                userManager.createUser(anonymousId, null);\n            }\n            if (root.hasPendingChanges()) {\n                root.commit();\n            }\n        } catch (RepositoryException e) {\n            log.error(errorMsg, e);\n            throw new RuntimeException(e);\n        } catch (CommitFailedException e) {\n            log.error(errorMsg, e);\n            throw new RuntimeException(e);\n        }\n\n        NodeState target = store.getRoot();\n        target.compareAgainstBaseState(base, new ApplyDiff(builder));\n    }","commit_id":"a6fe69f7df86f60c5eeb2ae16b341bacbaf5e91d","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"public void testAddFeed() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=RSS Test Page\");\n\t\tselenium.clickAt(\"link=RSS Test Page\",\n\t\t\tRuntimeVariables.replace(\"RSS Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tselenium.waitForVisible(\"//strong/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//strong/a\"));\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\");\n\t\tselenium.waitForVisible(\"//div[2]/span/span/button[1]\");\n\t\tselenium.click(\"//div[2]/span/span/button[1]\");\n\t\tselenium.waitForVisible(\"//input[@id='_86_url3']\");\n\t\tselenium.type(\"//input[@id='_86_url3']\",\n\t\t\tRuntimeVariables.replace(\"http://feeds.digg.com/digg/popular.rss\"));\n\t\tselenium.select(\"//select[@id='_86_entriesPerFeed']\",\n\t\t\tRuntimeVariables.replace(\"4\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=RSS Test Page\");\n\t\tselenium.clickAt(\"link=RSS Test Page\",\n\t\t\tRuntimeVariables.replace(\"RSS Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//a[@href='http://feeds.digg.com']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Stories(Opens New Window)\"),\n\t\t\tselenium.getText(\"//a[@href='http://feeds.digg.com']\"));\n\t}","id":50017,"modified_method":"public void testAddFeed() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=RSS Test Page\",\n\t\t\tRuntimeVariables.replace(\"RSS Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'http://localhost:8080/html/themes/classic/js/main.js')]\");\n\t\tselenium.waitForVisible(\"//div[2]/span/span/button[1]\");\n\t\tselenium.click(\"//div[2]/span/span/button[1]\");\n\t\tselenium.waitForVisible(\"//input[@id='_86_url3']\");\n\t\tselenium.type(\"//input[@id='_86_url3']\",\n\t\t\tRuntimeVariables.replace(\"http://digg.com/rss/topstories.xml\"));\n\t\tselenium.select(\"//select[@id='_86_entriesPerFeed']\",\n\t\t\tRuntimeVariables.replace(\"4\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=RSS Test Page\",\n\t\t\tRuntimeVariables.replace(\"RSS Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@href='http://digg.com/rss/topstories.xml']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Digg Top Stories(Opens New Window)\"),\n\t\t\tselenium.getText(\"//a[@href='http://digg.com/rss/topstories.xml']\"));\n\t}","commit_id":"7d69f68e660a24994c67c330f235f65a29cd4c30","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletRSS2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=RSS Test Page\",\n\t\t\tRuntimeVariables.replace(\"RSS Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"r\"));\n\t\tselenium.waitForVisible(\"//li[@title='RSS']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='RSS']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t\tselenium.waitForVisible(\"//div[2]/div/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[2]/div/section\"));\n\t}","id":50018,"modified_method":"public void testAddPortletRSS2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=RSS Test Page\",\n\t\t\tRuntimeVariables.replace(\"RSS Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"r\"));\n\t\tselenium.waitForVisible(\"//li[@title='RSS']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='RSS']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t\tselenium.waitForVisible(\"//div[2]/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[2]/section\"));\n\t}","commit_id":"7d69f68e660a24994c67c330f235f65a29cd4c30","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletRSS3() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=RSS Test Page\",\n\t\t\tRuntimeVariables.replace(\"RSS Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"r\"));\n\t\tselenium.waitForVisible(\"//li[@title='RSS']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='RSS']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t\tselenium.waitForVisible(\"//div[2]/div/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[2]/div/section\"));\n\t\tselenium.waitForVisible(\"//div[3]/div/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[3]/div/section\"));\n\t}","id":50019,"modified_method":"public void testAddPortletRSS3() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=RSS Test Page\",\n\t\t\tRuntimeVariables.replace(\"RSS Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"r\"));\n\t\tselenium.waitForVisible(\"//li[@title='RSS']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='RSS']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t\tselenium.waitForVisible(\"//div[2]/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[2]/section\"));\n\t\tselenium.waitForVisible(\"//div[3]/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[3]/section\"));\n\t}","commit_id":"7d69f68e660a24994c67c330f235f65a29cd4c30","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testRemoveWCWebContentFooterRSS() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=RSS Test Page\");\n\t\tselenium.clickAt(\"link=RSS Test Page\",\n\t\t\tRuntimeVariables.replace(\"RSS Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//div[@class='portlet-content']/div/div/p\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Content\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-content']/div/div/p\"));\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//strong/a\"));\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\");\n\t\tselenium.waitForVisible(\"xPath=(//input[@id='_86_removeButton'])[2]\");\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"xPath=(//input[@id='_86_removeButton'])[2]\",\n\t\t\tRuntimeVariables.replace(\"Remove\"));\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=RSS Test Page\");\n\t\tselenium.clickAt(\"link=RSS Test Page\",\n\t\t\tRuntimeVariables.replace(\"RSS Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertFalse(selenium.isTextPresent(\"WC WebContent Content\"));\n\t}","id":50020,"modified_method":"public void testRemoveWCWebContentFooterRSS() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=RSS Test Page\",\n\t\t\tRuntimeVariables.replace(\"RSS Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tselenium.waitForVisible(\"//div[@class='portlet-content']/div/div/p\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Content\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-content']/div/div/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'http://localhost:8080/html/themes/classic/js/main.js')]\");\n\t\tselenium.waitForVisible(\"xPath=(//input[@id='_86_removeButton'])[2]\");\n\t\tselenium.clickAt(\"xPath=(//input[@id='_86_removeButton'])[2]\",\n\t\t\tRuntimeVariables.replace(\"Remove\"));\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=RSS Test Page\",\n\t\t\tRuntimeVariables.replace(\"RSS Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"WC WebContent Content\"));\n\t}","commit_id":"7d69f68e660a24994c67c330f235f65a29cd4c30","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testRemoveWCWebContentHeaderRSS() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=RSS Test Page\");\n\t\tselenium.clickAt(\"link=RSS Test Page\",\n\t\t\tRuntimeVariables.replace(\"RSS Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForTextPresent(\"WC WebContent Content\");\n\t\tassertTrue(selenium.isTextPresent(\"WC WebContent Content\"));\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//strong/a\"));\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\");\n\t\tselenium.waitForVisible(\"xPath=(//input[@id='_86_removeButton'])[1]\");\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"xPath=(//input[@id='_86_removeButton'])[1]\",\n\t\t\tRuntimeVariables.replace(\"Remove\"));\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=RSS Test Page\");\n\t\tselenium.clickAt(\"link=RSS Test Page\",\n\t\t\tRuntimeVariables.replace(\"RSS Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertFalse(selenium.isTextPresent(\"WC WebContent Content\"));\n\t}","id":50021,"modified_method":"public void testRemoveWCWebContentHeaderRSS() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=RSS Test Page\",\n\t\t\tRuntimeVariables.replace(\"RSS Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'http://localhost:8080/html/themes/classic/js/main.js')]\");\n\t\tselenium.waitForVisible(\"xPath=(//input[@id='_86_removeButton'])[1]\");\n\t\tselenium.clickAt(\"xPath=(//input[@id='_86_removeButton'])[1]\",\n\t\t\tRuntimeVariables.replace(\"Remove\"));\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=RSS Test Page\",\n\t\t\tRuntimeVariables.replace(\"RSS Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"WC WebContent Content\"));\n\t}","commit_id":"7d69f68e660a24994c67c330f235f65a29cd4c30","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectWCWebContentFooterRSS() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=RSS Test Page\");\n\t\tselenium.clickAt(\"link=RSS Test Page\",\n\t\t\tRuntimeVariables.replace(\"RSS Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//strong/a\"));\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\");\n\t\tselenium.waitForVisible(\"xPath=(//input[@id='_86_selectButton'])[2]\");\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"xPath=(//input[@id='_86_selectButton'])[2]\",\n\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\tselenium.waitForVisible(\"//td[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.clickAt(\"//td[2]/a\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent Title\"));\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Footer Web Content WC WebContent Title\"),\n\t\t\tselenium.getText(\"//div[2]/div[2]/fieldset/div/div[2]/div\"));\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=RSS Test Page\");\n\t\tselenium.clickAt(\"link=RSS Test Page\",\n\t\t\tRuntimeVariables.replace(\"RSS Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//div[@class='portlet-content']/div/div/p\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Content\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-content']/div/div/p\"));\n\t}","id":50022,"modified_method":"public void testSelectWCWebContentFooterRSS() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=RSS Test Page\",\n\t\t\tRuntimeVariables.replace(\"RSS Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'http://localhost:8080/html/themes/classic/js/main.js')]\");\n\t\tselenium.waitForVisible(\"xPath=(//input[@id='_86_selectButton'])[2]\");\n\t\tselenium.clickAt(\"xPath=(//input[@id='_86_selectButton'])[2]\",\n\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//td[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.clickAt(\"//td[2]/a\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Footer Web Content WC WebContent Title\"),\n\t\t\tselenium.getText(\"//div[2]/div[2]/fieldset/div/div[2]/div\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=RSS Test Page\",\n\t\t\tRuntimeVariables.replace(\"RSS Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//div[@class='portlet-content']/div/div/p\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Content\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-content']/div/div/p\"));\n\t}","commit_id":"7d69f68e660a24994c67c330f235f65a29cd4c30","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectWCWebContentHeaderRSS() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=RSS Test Page\");\n\t\tselenium.clickAt(\"link=RSS Test Page\",\n\t\t\tRuntimeVariables.replace(\"RSS Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//strong/a\"));\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\");\n\t\tselenium.waitForVisible(\"xPath=(//input[@id='_86_selectButton'])[1]\");\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"xPath=(//input[@id='_86_selectButton'])[1]\",\n\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\tselenium.waitForVisible(\"//td[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.clickAt(\"//td[2]/a\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent Title\"));\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Header Web Content WC WebContent Title\"),\n\t\t\tselenium.getText(\"//div[2]/div[2]/fieldset/div/div[1]/div\"));\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=RSS Test Page\");\n\t\tselenium.clickAt(\"link=RSS Test Page\",\n\t\t\tRuntimeVariables.replace(\"RSS Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//div[@class='portlet-content']/div/div/p\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Content\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-content']/div/div/p\"));\n\t}","id":50023,"modified_method":"public void testSelectWCWebContentHeaderRSS() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=RSS Test Page\",\n\t\t\tRuntimeVariables.replace(\"RSS Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'http://localhost:8080/html/themes/classic/js/main.js')]\");\n\t\tselenium.waitForVisible(\"xPath=(//input[@id='_86_selectButton'])[1]\");\n\t\tselenium.clickAt(\"xPath=(//input[@id='_86_selectButton'])[1]\",\n\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//td[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.clickAt(\"//td[2]/a\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent Title\"));\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Header Web Content WC WebContent Title\"),\n\t\t\tselenium.getText(\"//div[2]/div[2]/fieldset/div/div[1]/div\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=RSS Test Page\",\n\t\t\tRuntimeVariables.replace(\"RSS Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//div[@class='portlet-content']/div/div/p\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Content\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-content']/div/div/p\"));\n\t}","commit_id":"7d69f68e660a24994c67c330f235f65a29cd4c30","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWDFrontPageAttachment() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"0 Attachments\"),\n\t\t\tselenium.getText(\"//div[@class='article-actions']/span[2]/a/span\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span[2]/a/span\",\n\t\t\tRuntimeVariables.replace(\"0 Attachments\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This page does not have file attachments.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tselenium.clickAt(\"//input[@value='Add Attachments']\",\n\t\t\tRuntimeVariables.replace(\"Add Attachments\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tselenium.waitForVisible(\"//input[@value='Select Files']\");\n\t\tselenium.clickAt(\"//input[@value='Select Files']\",\n\t\t\tRuntimeVariables.replace(\"Select Files\"));\n\t\tselenium.waitForVisible(\"//input[@type='file']\");\n\t\tselenium.uploadCommonFile(\"//input[@type='file']\",\n\t\t\tRuntimeVariables.replace(\"Document_1.jpg\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Successfully saved.\"),\n\t\t\tselenium.getText(\"//span[@class='success-message']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Document_1.jpg\"),\n\t\t\tselenium.getText(\"//span[@class='file-title']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"1 Attachment\"),\n\t\t\tselenium.getText(\"//div[@class='article-actions']/span[2]/a/span\"));\n\t\tassertFalse(selenium.isTextPresent(\"0 Attachments\"));\n\t}","id":50024,"modified_method":"public void testAddWDFrontPageAttachment() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"0 Attachments\"),\n\t\t\tselenium.getText(\"//div[@class='article-actions']/span[2]/a/span\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span[2]/a/span\",\n\t\t\tRuntimeVariables.replace(\"0 Attachments\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This page does not have file attachments.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tselenium.clickAt(\"//input[@value='Add Attachments']\",\n\t\t\tRuntimeVariables.replace(\"Add Attachments\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//div[contains(@class,'yui3-uploader')]\");\n\t\tselenium.waitForElementPresent(\"//input[@type='file']\");\n\t\tselenium.uploadCommonFile(\"//input[@type='file']\",\n\t\t\tRuntimeVariables.replace(\"Document_1.jpg\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//ul[contains(@id,'_fileListContent')]/li[contains(@class,'upload-complete')]\");\n\t\tselenium.clickAt(\"xpath=(//input[@value='Save'])[2]\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForText(\"//span[@class='success-message']\",\n\t\t\t\"Successfully saved.\");\n\t\tassertEquals(RuntimeVariables.replace(\"Successfully saved.\"),\n\t\t\tselenium.getText(\"//span[@class='success-message']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Document_1.jpg\"),\n\t\t\tselenium.getText(\"//span[@class='file-title']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"1 Attachment\"),\n\t\t\tselenium.getText(\"//div[@class='article-actions']/span[2]/a/span\"));\n\t\tassertFalse(selenium.isTextPresent(\"0 Attachments\"));\n\t}","commit_id":"b6d307ddcbd93a9d47585b9795c4318f634cfd43","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeleteWDFrontPageAttachment() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"1 Attachment\"),\n\t\t\tselenium.getText(\"//div[@class='article-actions']/span[2]/a/span\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span[2]/a/span\",\n\t\t\tRuntimeVariables.replace(\"1 Attachment\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Document_1.jpg\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\tselenium.getText(\"//td[3]/span/a/span\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//td[3]/span/a/span\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"The selected item was moved to the Recycle Bin. Undo\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='portlet-msg-success taglib-trash-undo']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This page does not have file attachments.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tassertFalse(selenium.isTextPresent(\"Document_1.jpg\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"0 Attachments\"),\n\t\t\tselenium.getText(\"//div[@class='article-actions']/span[2]/a/span\"));\n\t\tassertFalse(selenium.isTextPresent(\"link=1 Attachment\"));\n\t}","id":50025,"modified_method":"public void testDeleteWDFrontPageAttachment() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"1 Attachment\"),\n\t\t\tselenium.getText(\"//div[@class='article-actions']/span[2]/a/span\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span[2]/a/span\",\n\t\t\tRuntimeVariables.replace(\"1 Attachment\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Document_1.jpg\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Remove\"),\n\t\t\tselenium.getText(\"//td[3]/span/a/span\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//td[3]/span/a/span\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"The selected item was moved to the Recycle Bin. Undo\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='portlet-msg-success taglib-trash-undo']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This page does not have file attachments.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tassertFalse(selenium.isTextPresent(\"Document_1.jpg\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"0 Attachments\"),\n\t\t\tselenium.getText(\"//div[@class='article-actions']/span[2]/a/span\"));\n\t\tassertFalse(selenium.isTextPresent(\"link=1 Attachment\"));\n\t}","commit_id":"b6d307ddcbd93a9d47585b9795c4318f634cfd43","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewWDFrontPageAttachment() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"1 Attachment\"),\n\t\t\tselenium.getText(\"//div[@class='article-actions']/span[2]/a/span\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span[2]/a/span\",\n\t\t\tRuntimeVariables.replace(\"1 Attachment\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'FrontPage')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Recent Changes\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Recent Changes')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"All Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'All Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Orphan Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Orphan Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Draft Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Draft Pages')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//span[@class='aui-search-bar']/span/span/span/input\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@title='Search Pages']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertTrue(selenium.isVisible(\"link=Content\"));\n\t\tassertTrue(selenium.isVisible(\"link=Details\"));\n\t\tassertTrue(selenium.isVisible(\"link=History\"));\n\t\tassertTrue(selenium.isVisible(\"link=Incoming Links\"));\n\t\tassertTrue(selenium.isVisible(\"link=Outgoing Links\"));\n\t\tassertTrue(selenium.isVisible(\"link=Attachments\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@value='Add Attachments']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"File Name\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-header results-header']/th[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Size\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-header results-header']/th[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-header results-header']/th[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Document_1.jpg\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"12.9k\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\tselenium.getText(\"//tr[3]/td[3]/span/a/span\"));\n\t\tselenium.clickAt(\"//tr[3]/td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Document_1.jpg\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//img[contains(@src,'fileName=Document_1.jpg')]\"));\n\t}","id":50026,"modified_method":"public void testViewWDFrontPageAttachment() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"1 Attachment\"),\n\t\t\tselenium.getText(\"//div[@class='article-actions']/span[2]/a/span\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span[2]/a/span\",\n\t\t\tRuntimeVariables.replace(\"1 Attachment\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'FrontPage')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Recent Changes\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Recent Changes')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"All Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'All Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Orphan Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Orphan Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Draft Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Draft Pages')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//span[@class='aui-search-bar']/span/span/span/input\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@title='Search Pages']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertTrue(selenium.isVisible(\"link=Content\"));\n\t\tassertTrue(selenium.isVisible(\"link=Details\"));\n\t\tassertTrue(selenium.isVisible(\"link=History\"));\n\t\tassertTrue(selenium.isVisible(\"link=Incoming Links\"));\n\t\tassertTrue(selenium.isVisible(\"link=Outgoing Links\"));\n\t\tassertTrue(selenium.isVisible(\"link=Attachments\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@value='Add Attachments']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"File Name\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-header results-header']/th[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Size\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-header results-header']/th[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-header results-header']/th[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Document_1.jpg\"),\n\t\t\tselenium.getText(\"//tr[2]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"13k\"),\n\t\t\tselenium.getText(\"//tr[2]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Remove\"),\n\t\t\tselenium.getText(\"//tr[2]/td[3]/span/a/span\"));\n\t\tselenium.clickAt(\"//tr[2]/td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Document_1.jpg\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//img[contains(@src,'fileName=Document_1.jpg')]\"));\n\t}","commit_id":"b6d307ddcbd93a9d47585b9795c4318f634cfd43","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletWD2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"w\"));\n\t\tselenium.waitForVisible(\"//li[@title='Wiki Display']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Wiki Display']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t\tselenium.waitForVisible(\"//div[2]/div/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[2]/div/section\"));\n\t}","id":50027,"modified_method":"public void testAddPortletWD2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"w\"));\n\t\tselenium.waitForVisible(\"//li[@title='Wiki Display']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Wiki Display']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='portlet-layout']/div/div/div/section\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='portlet-layout']/div/div/div/section\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='portlet-layout']/div/div/div[2]/section\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='portlet-layout']/div/div/div[2]/section\"));\n\t}","commit_id":"e7560f35d1dfd3ee1835fb041657cded8f3f9eb7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletWD3() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"w\"));\n\t\tselenium.waitForVisible(\"//li[@title='Wiki Display']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Wiki Display']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t\tselenium.waitForVisible(\"//div[2]/div/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[2]/div/section\"));\n\t\tselenium.waitForVisible(\"//div[3]/div/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[3]/div/section\"));\n\t}","id":50028,"modified_method":"public void testAddPortletWD3() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"w\"));\n\t\tselenium.waitForVisible(\"//li[@title='Wiki Display']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Wiki Display']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t\tselenium.waitForVisible(\"//div[2]/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[2]/section\"));\n\t\tselenium.waitForVisible(\"//div[3]/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[3]/section\"));\n\t}","commit_id":"e7560f35d1dfd3ee1835fb041657cded8f3f9eb7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletWD() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"w\"));\n\t\tselenium.waitForVisible(\"//li[@title='Wiki Display']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Wiki Display']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":50029,"modified_method":"public void testAddPortletWD() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Display Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"w\"));\n\t\tselenium.waitForVisible(\"//li[@title='Wiki Display']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Wiki Display']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"e7560f35d1dfd3ee1835fb041657cded8f3f9eb7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletWiki() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"w\"));\n\t\tselenium.waitForVisible(\"//li[@title='Wiki']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Wiki']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":50030,"modified_method":"public void testAddPortletWiki() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"w\"));\n\t\tselenium.waitForVisible(\"//li[@title='Wiki']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Wiki']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"e7560f35d1dfd3ee1835fb041657cded8f3f9eb7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWDFrontPageAttachment() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"0 Attachments\"),\n\t\t\tselenium.getText(\"//div[@class='article-actions']/span[2]/a/span\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span[2]/a/span\",\n\t\t\tRuntimeVariables.replace(\"0 Attachments\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This page does not have file attachments.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tselenium.clickAt(\"//input[@value='Add Attachments']\",\n\t\t\tRuntimeVariables.replace(\"Add Attachments\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tselenium.waitForVisible(\"//input[@value='Select Files']\");\n\t\tselenium.clickAt(\"//input[@value='Select Files']\",\n\t\t\tRuntimeVariables.replace(\"Select Files\"));\n\t\tselenium.waitForVisible(\"//input[@type='file']\");\n\t\tselenium.uploadCommonFile(\"//input[@type='file']\",\n\t\t\tRuntimeVariables.replace(\"Document_1.jpg\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Successfully saved.\"),\n\t\t\tselenium.getText(\"//span[@class='success-message']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Document_1.jpg\"),\n\t\t\tselenium.getText(\"//span[@class='file-title']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"1 Attachment\"),\n\t\t\tselenium.getText(\"//div[@class='article-actions']/span[2]/a/span\"));\n\t\tassertFalse(selenium.isTextPresent(\"0 Attachments\"));\n\t}","id":50031,"modified_method":"public void testAddWDFrontPageAttachment() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"0 Attachments\"),\n\t\t\tselenium.getText(\"//div[@class='article-actions']/span[2]/a/span\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span[2]/a/span\",\n\t\t\tRuntimeVariables.replace(\"0 Attachments\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This page does not have file attachments.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tselenium.clickAt(\"//input[@value='Add Attachments']\",\n\t\t\tRuntimeVariables.replace(\"Add Attachments\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tselenium.waitForVisible(\"//input[@value='Select Files']\");\n\t\tselenium.clickAt(\"//input[@value='Select Files']\",\n\t\t\tRuntimeVariables.replace(\"Select Files\"));\n\t\tselenium.waitForVisible(\"//input[@type='file']\");\n\t\tselenium.uploadCommonFile(\"//input[@type='file']\",\n\t\t\tRuntimeVariables.replace(\"Document_1.jpg\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Successfully saved.\"),\n\t\t\tselenium.getText(\"//span[@class='success-message']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Document_1.jpg\"),\n\t\t\tselenium.getText(\"//span[@class='file-title']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"1 Attachment\"),\n\t\t\tselenium.getText(\"//div[@class='article-actions']/span[2]/a/span\"));\n\t\tassertFalse(selenium.isTextPresent(\"0 Attachments\"));\n\t}","commit_id":"e7560f35d1dfd3ee1835fb041657cded8f3f9eb7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWDFrontPageChildPage1() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage1 Title\"));\n\t\tselenium.waitForVisible(\"//td[@class='cke_top']\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[contains(@id,'_editor') and contains(@style,'display: none;')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[contains(@id,'cke_contents__54')]/textarea\");\n\t\tselenium.type(\"//td[contains(@id,'cke_contents__54')]/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage1 Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_off']\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//td[contains(@id,'cke_contents__54')]/iframe\"));\n\t\tselenium.selectFrame(\"//td[contains(@id,'cke_contents__54')]/iframe\");\n\t\tselenium.waitForText(\"//body\", \"Wiki FrontPage ChildPage1 Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage1 Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='child-pages']/ul/li/a[contains(.,'Wiki FrontPage ChildPage1 Title')]\"));\n\t\tselenium.clickAt(\"//div[@class='child-pages']/ul/li/a[contains(.,'Wiki FrontPage ChildPage1 Title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage1 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage1 Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage1 Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","id":50032,"modified_method":"public void testAddWDFrontPageChildPage1() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Display Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage1 Title\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//a[@title='Paragraph Format']/span\", \"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage1 Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_off']\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki FrontPage ChildPage1 Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage1 Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='child-pages']/ul/li/a[contains(.,'Wiki FrontPage ChildPage1 Title')]\"));\n\t\tselenium.clickAt(\"//div[@class='child-pages']/ul/li/a[contains(.,'Wiki FrontPage ChildPage1 Title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage1 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage1 Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage1 Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","commit_id":"e7560f35d1dfd3ee1835fb041657cded8f3f9eb7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWDFrontPageChildPage2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage2 Title\"));\n\t\tselenium.waitForVisible(\"//td[@class='cke_top']\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[contains(@id,'_editor') and contains(@style,'display: none;')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[contains(@id,'cke_contents__54')]/textarea\");\n\t\tselenium.type(\"//td[contains(@id,'cke_contents__54')]/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage2 Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_off']\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//td[contains(@id,'cke_contents__54')]/iframe\"));\n\t\tselenium.selectFrame(\"//td[contains(@id,'cke_contents__54')]/iframe\");\n\t\tselenium.waitForText(\"//body\", \"Wiki FrontPage ChildPage2 Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage2 Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='child-pages']/ul/li/a[contains(.,'Wiki FrontPage ChildPage2 Title')]\"));\n\t\tselenium.clickAt(\"//div[@class='child-pages']/ul/li/a[contains(.,'Wiki FrontPage ChildPage2 Title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage2 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage2 Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage2 Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","id":50033,"modified_method":"public void testAddWDFrontPageChildPage2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Display Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\t\"Add Child Page\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage2 Title\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//a[@title='Paragraph Format']/span\", \"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage2 Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_off']\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki FrontPage ChildPage2 Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage2 Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='child-pages']/ul/li/a[contains(.,'Wiki FrontPage ChildPage2 Title')]\"));\n\t\tselenium.clickAt(\"//div[@class='child-pages']/ul/li/a[contains(.,'Wiki FrontPage ChildPage2 Title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage2 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//h1[@class='header-title']/span\",\n\t\t\t\"Wiki FrontPage ChildPage2 Title\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage2 Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage2 Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","commit_id":"e7560f35d1dfd3ee1835fb041657cded8f3f9eb7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWDFrontPageChildPage3() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage3 Title\"));\n\t\tselenium.waitForVisible(\"//td[@class='cke_top']\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[contains(@id,'_editor') and contains(@style,'display: none;')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[contains(@id,'cke_contents__54')]/textarea\");\n\t\tselenium.type(\"//td[contains(@id,'cke_contents__54')]/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage3 Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_off']\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//td[contains(@id,'cke_contents__54')]/iframe\"));\n\t\tselenium.selectFrame(\"//td[contains(@id,'cke_contents__54')]/iframe\");\n\t\tselenium.waitForText(\"//body\", \"Wiki FrontPage ChildPage3 Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage3 Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='child-pages']/ul/li/a[contains(.,'Wiki FrontPage ChildPage3 Title')]\"));\n\t\tselenium.clickAt(\"//div[@class='child-pages']/ul/li/a[contains(.,'Wiki FrontPage ChildPage3 Title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage3 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage3 Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage3 Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","id":50034,"modified_method":"public void testAddWDFrontPageChildPage3() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Display Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage3 Title\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//a[@title='Paragraph Format']/span\", \"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage3 Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_off']\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki FrontPage ChildPage3 Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage3 Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='child-pages']/ul/li/a[contains(.,'Wiki FrontPage ChildPage3 Title')]\"));\n\t\tselenium.clickAt(\"//div[@class='child-pages']/ul/li/a[contains(.,'Wiki FrontPage ChildPage3 Title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage3 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage3 Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage3 Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","commit_id":"e7560f35d1dfd3ee1835fb041657cded8f3f9eb7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWDFrontPageChildPageFormatHTML()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"HTML\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^You may lose some formatting when switching from Creole to HTML. Do you want to continue[\\\\s\\\\S]$\"));\n\t\tassertEquals(\"HTML\", selenium.getSelectedLabel(\"//select\"));\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.waitForVisible(\"//td[@class='cke_top']\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[contains(@id,'_editor') and contains(@style,'display: none;')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[contains(@id,'cke_contents__54')]/textarea\");\n\t\tselenium.type(\"//td[contains(@id,'cke_contents__54')]/textarea\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"<a herf=http://www.liferay.com>Welcome to LIFERAY<\/a>\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[contains(@id,'_editor') and contains(@style,'display: none;')]\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//td[contains(@id,'cke_contents__54')]/iframe\"));\n\t\tselenium.selectFrame(\"//td[contains(@id,'cke_contents__54')]/iframe\");\n\t\tselenium.waitForText(\"//body\", \"Welcome to LIFERAY\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//div[@class='child-pages']/ul/li/a\"));\n\t\tselenium.clickAt(\"//div[@class='child-pages']/ul/li/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Welcome to LIFERAY\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\",\n\t\t\tRuntimeVariables.replace(\"Details\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"HTML\"),\n\t\t\tselenium.getText(\"//tr[2]/td\"));\n\t}","id":50035,"modified_method":"public void testAddWDFrontPageChildPageFormatHTML()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tassertTrue(selenium.isVisible(\"//select\"));\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"HTML\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^You may lose some formatting when switching from Creole to HTML. Do you want to continue[\\\\s\\\\S]$\"));\n\t\tassertEquals(\"HTML\", selenium.getSelectedLabel(\"//select\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//span[@class='cke_toolbar']/span[contains(.,'Normal')]/a\",\n\t\t\t\"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"<a herf=http://www.liferay.com>Welcome to LIFERAY<\/a>\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Welcome to LIFERAY\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//div[@class='child-pages']/ul/li/a\"));\n\t\tselenium.clickAt(\"//div[@class='child-pages']/ul/li/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Welcome to LIFERAY\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\",\n\t\t\tRuntimeVariables.replace(\"Details\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"HTML\"),\n\t\t\tselenium.getText(\"//tr[2]/td\"));\n\t}","commit_id":"e7560f35d1dfd3ee1835fb041657cded8f3f9eb7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\t\ttestSuite.addTestSuite(AddPageWikiTest.class);\n\t\ttestSuite.addTestSuite(AddPortletWikiTest.class);\n\t\ttestSuite.addTestSuite(AddPageWDTest.class);\n\t\ttestSuite.addTestSuite(AddPortletWDTest.class);\n\t\ttestSuite.addTestSuite(AddWikiFrontPageTest.class);\n\t\ttestSuite.addTestSuite(SelectMainNodeTest.class);\n\t\ttestSuite.addTestSuite(AddWDFrontPageChildPageFormatHTMLTest.class);\n\t\ttestSuite.addTestSuite(ViewWDFrontPageChildPageTest.class);\n\t\ttestSuite.addTestSuite(TearDownWikiNodeTest.class);\n\t\ttestSuite.addTestSuite(TearDownPageTest.class);\n\n\t\treturn testSuite;\n\t}","id":50036,"modified_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\t\ttestSuite.addTestSuite(AddPageWikiTest.class);\n\t\ttestSuite.addTestSuite(AddPortletWikiTest.class);\n\t\ttestSuite.addTestSuite(AddPageWDTest.class);\n\t\ttestSuite.addTestSuite(AddPortletWDTest.class);\n\t\ttestSuite.addTestSuite(AddWikiFrontPageTest.class);\n\t\ttestSuite.addTestSuite(SelectMainNodeTest.class);\n\t\ttestSuite.addTestSuite(AddWDFrontPageChildPageFormatHTMLTest.class);\n\t\ttestSuite.addTestSuite(ViewWDFrontPageChildPageFormatHTMLTest.class);\n\t\ttestSuite.addTestSuite(TearDownWikiNodeTest.class);\n\t\ttestSuite.addTestSuite(TearDownPageTest.class);\n\n\t\treturn testSuite;\n\t}","commit_id":"e7560f35d1dfd3ee1835fb041657cded8f3f9eb7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWDFrontPageChildPageNameDuplicate()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.waitForVisible(\"//td[@class='cke_top']\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[contains(@id,'_editor') and contains(@style,'display: none;')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[contains(@id,'cke_contents__54')]/textarea\");\n\t\tselenium.type(\"//td[contains(@id,'cke_contents__54')]/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_off']\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//td[contains(@id,'cke_contents__54')]/iframe\"));\n\t\tselenium.selectFrame(\"//td[contains(@id,'cke_contents__54')]/iframe\");\n\t\tselenium.waitForText(\"//body\", \"Wiki FrontPage ChildPage Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There is already a page with the specified title.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This page does not exist yet. Use the form below to create it.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='child-pages']/ul/li/a)[1]\"));\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"xpath=(//div[@class='child-pages']/ul/li/a)[2]\"));\n\t}","id":50037,"modified_method":"public void testAddWDFrontPageChildPageNameDuplicate()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//span[@class='cke_toolbar']/span[contains(.,'Normal')]/a\",\n\t\t\t\"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_off']\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki FrontPage ChildPage Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There is already a page with the specified title.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This page does not exist yet. Use the form below to create it.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Display Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='child-pages']/ul/li/a)[1]\"));\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"xpath=(//div[@class='child-pages']/ul/li/a)[2]\"));\n\t}","commit_id":"e7560f35d1dfd3ee1835fb041657cded8f3f9eb7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWDFrontPageChildPageNameInvalid()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Wiki\\\\ Front\\\\ Page\\\\ Child\\\\ Page\\\\ Title\\\\\"));\n\t\tselenium.waitForVisible(\"//td[@class='cke_top']\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[contains(@id,'_editor') and contains(@style,'display: none;')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[contains(@id,'cke_contents__54')]/textarea\");\n\t\tselenium.type(\"//td[contains(@id,'cke_contents__54')]/textarea\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Wiki\\\\ Front\\\\ Page\\\\ Child\\\\ Page\\\\ Content\\\\\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[contains(@id,'_editor') and contains(@style,'display: none;')]\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//td[contains(@id,'cke_contents__54')]/iframe\"));\n\t\tselenium.selectFrame(\"//td[contains(@id,'cke_contents__54')]/iframe\");\n\t\tselenium.waitForText(\"//body\",\n\t\t\t\"Wiki\\\\ Front\\\\ Page\\\\ Child\\\\ Page\\\\ Content\\\\\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid title.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t\tselenium.clickAt(\"link=FrontPage\", RuntimeVariables.replace(\"FrontPage\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki] Front] Page] Child] Page] Title]\"));\n\t\tselenium.waitForVisible(\"//td[@class='cke_top']\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[contains(@id,'_editor') and contains(@style,'display: none;')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[contains(@id,'cke_contents__54')]/textarea\");\n\t\tselenium.type(\"//td[contains(@id,'cke_contents__54')]/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki] Front] Page] Child] Page] Content]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[contains(@id,'_editor') and contains(@style,'display: none;')]\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//td[contains(@id,'cke_contents__54')]/iframe\"));\n\t\tselenium.selectFrame(\"//td[contains(@id,'cke_contents__54')]/iframe\");\n\t\tselenium.waitForText(\"//body\",\n\t\t\t\"Wiki] Front] Page] Child] Page] Content]\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid title.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t\tselenium.clickAt(\"link=FrontPage\", RuntimeVariables.replace(\"FrontPage\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki[ Front[ Page[ Child[ Page[ Title[\"));\n\t\tselenium.waitForVisible(\"//td[@class='cke_top']\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[contains(@id,'_editor') and contains(@style,'display: none;')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[contains(@id,'cke_contents__54')]/textarea\");\n\t\tselenium.type(\"//td[contains(@id,'cke_contents__54')]/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki[ Front[ Page[ Child[ Page[ Content[\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[contains(@id,'_editor') and contains(@style,'display: none;')]\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//td[contains(@id,'cke_contents__54')]/iframe\"));\n\t\tselenium.selectFrame(\"//td[contains(@id,'cke_contents__54')]/iframe\");\n\t\tselenium.waitForText(\"//body\",\n\t\t\t\"Wiki[ Front[ Page[ Child[ Page[ Content[\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid title.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t\tselenium.clickAt(\"link=FrontPage\", RuntimeVariables.replace(\"FrontPage\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki; Front; Page; Child; Page; Title;\"));\n\t\tselenium.waitForVisible(\"//td[@class='cke_top']\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[contains(@id,'_editor') and contains(@style,'display: none;')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[contains(@id,'cke_contents__54')]/textarea\");\n\t\tselenium.type(\"//td[contains(@id,'cke_contents__54')]/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki; Front; Page; Child; Page; Content;\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[contains(@id,'_editor') and contains(@style,'display: none;')]\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//td[contains(@id,'cke_contents__54')]/iframe\"));\n\t\tselenium.selectFrame(\"//td[contains(@id,'cke_contents__54')]/iframe\");\n\t\tselenium.waitForText(\"//body\",\n\t\t\t\"Wiki; Front; Page; Child; Page; Content;\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid title.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t\tselenium.clickAt(\"link=FrontPage\", RuntimeVariables.replace(\"FrontPage\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki: Front: Page: Child: Page: Title:\"));\n\t\tselenium.waitForVisible(\"//td[@class='cke_top']\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[contains(@id,'_editor') and contains(@style,'display: none;')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[contains(@id,'cke_contents__54')]/textarea\");\n\t\tselenium.type(\"//td[contains(@id,'cke_contents__54')]/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki: Front: Page: Child: Page: Content:\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[contains(@id,'_editor') and contains(@style,'display: none;')]\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//td[contains(@id,'cke_contents__54')]/iframe\"));\n\t\tselenium.selectFrame(\"//td[contains(@id,'cke_contents__54')]/iframe\");\n\t\tselenium.waitForText(\"//body\",\n\t\t\t\"Wiki: Front: Page: Child: Page: Content:\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid title.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t\tselenium.clickAt(\"link=FrontPage\", RuntimeVariables.replace(\"FrontPage\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki| Front| Page| Child| Page| Title|\"));\n\t\tselenium.waitForVisible(\"//td[@class='cke_top']\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[contains(@id,'_editor') and contains(@style,'display: none;')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[contains(@id,'cke_contents__54')]/textarea\");\n\t\tselenium.type(\"//td[contains(@id,'cke_contents__54')]/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki| Front| Page| Child| Page| Content|\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[contains(@id,'_editor') and contains(@style,'display: none;')]\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//td[contains(@id,'cke_contents__54')]/iframe\"));\n\t\tselenium.selectFrame(\"//td[contains(@id,'cke_contents__54')]/iframe\");\n\t\tselenium.waitForText(\"//body\",\n\t\t\t\"Wiki| Front| Page| Child| Page| Content|\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid title.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t\tselenium.clickAt(\"link=FrontPage\", RuntimeVariables.replace(\"FrontPage\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\"//div[1]/span[1]/a/span\"));\n\t\tselenium.clickAt(\"//div[1]/span[1]/a/span\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki< Front< Page< Child< Page< Title<\"));\n\t\tselenium.waitForVisible(\"//td[@class='cke_top']\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[contains(@id,'_editor') and contains(@style,'display: none;')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[contains(@id,'cke_contents__54')]/textarea\");\n\t\tselenium.type(\"//td[contains(@id,'cke_contents__54')]/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki< Front< Page< Child< Page< Content<\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[contains(@id,'_editor') and contains(@style,'display: none;')]\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//td[contains(@id,'cke_contents__54')]/iframe\"));\n\t\tselenium.selectFrame(\"//td[contains(@id,'cke_contents__54')]/iframe\");\n\t\tselenium.waitForText(\"//body\",\n\t\t\t\"Wiki< Front< Page< Child< Page< Content<\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid title.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t\tselenium.clickAt(\"link=FrontPage\", RuntimeVariables.replace(\"FrontPage\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki> Front> Page> Child> Page> Title>\"));\n\t\tselenium.waitForVisible(\"//td[@class='cke_top']\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[contains(@id,'_editor') and contains(@style,'display: none;')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[contains(@id,'cke_contents__54')]/textarea\");\n\t\tselenium.type(\"//td[contains(@id,'cke_contents__54')]/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki> Front> Page> Child> Page> Content>\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[contains(@id,'_editor') and contains(@style,'display: none;')]\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//td[contains(@id,'cke_contents__54')]/iframe\"));\n\t\tselenium.selectFrame(\"//td[contains(@id,'cke_contents__54')]/iframe\");\n\t\tselenium.waitForText(\"//body\",\n\t\t\t\"Wiki> Front> Page> Child> Page> Content>\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid title.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"Children Pages\"));\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"//div[@class='child-pages']/ul/li/a\"));\n\t}","id":50038,"modified_method":"public void testAddWDFrontPageChildPageNameInvalid()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Wiki\\\\ Front\\\\ Page\\\\ Child\\\\ Page\\\\ Title\\\\\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//a[@title='Paragraph Format']/span\", \"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Wiki\\\\ Front\\\\ Page\\\\ Child\\\\ Page\\\\ Content\\\\\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki\\\\ Front\\\\ Page\\\\ Child\\\\ Page\\\\ Content\\\\\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid title.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t\tselenium.clickAt(\"link=FrontPage\", RuntimeVariables.replace(\"FrontPage\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki] Front] Page] Child] Page] Title]\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//a[@title='Paragraph Format']/span\", \"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki] Front] Page] Child] Page] Content]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki] Front] Page] Child] Page] Content]\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid title.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t\tselenium.clickAt(\"link=FrontPage\", RuntimeVariables.replace(\"FrontPage\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki[ Front[ Page[ Child[ Page[ Title[\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//a[@title='Paragraph Format']/span\", \"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki[ Front[ Page[ Child[ Page[ Content[\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki[ Front[ Page[ Child[ Page[ Content[\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid title.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t\tselenium.clickAt(\"link=FrontPage\", RuntimeVariables.replace(\"FrontPage\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki; Front; Page; Child; Page; Title;\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//a[@title='Paragraph Format']/span\", \"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki; Front; Page; Child; Page; Content;\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki; Front; Page; Child; Page; Content;\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid title.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t\tselenium.clickAt(\"link=FrontPage\", RuntimeVariables.replace(\"FrontPage\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki: Front: Page: Child: Page: Title:\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//a[@title='Paragraph Format']/span\", \"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki: Front: Page: Child: Page: Content:\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki: Front: Page: Child: Page: Content:\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid title.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t\tselenium.clickAt(\"link=FrontPage\", RuntimeVariables.replace(\"FrontPage\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki| Front| Page| Child| Page| Title|\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//a[@title='Paragraph Format']/span\", \"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki| Front| Page| Child| Page| Content|\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki| Front| Page| Child| Page| Content|\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid title.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t\tselenium.clickAt(\"link=FrontPage\", RuntimeVariables.replace(\"FrontPage\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\"//div[1]/span[1]/a/span\"));\n\t\tselenium.clickAt(\"//div[1]/span[1]/a/span\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki< Front< Page< Child< Page< Title<\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//a[@title='Paragraph Format']/span\", \"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki< Front< Page< Child< Page< Content<\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki< Front< Page< Child< Page< Content<\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid title.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t\tselenium.clickAt(\"link=FrontPage\", RuntimeVariables.replace(\"FrontPage\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki> Front> Page> Child> Page> Title>\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//a[@title='Paragraph Format']/span\", \"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki> Front> Page> Child> Page> Content>\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki> Front> Page> Child> Page> Content>\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid title.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"Children Pages\"));\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"//div[@class='child-pages']/ul/li/a\"));\n\t}","commit_id":"e7560f35d1dfd3ee1835fb041657cded8f3f9eb7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWDFrontPageChildPageNameNull() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForVisible(\"//td[@class='cke_top']\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[contains(@id,'_editor') and contains(@style,'display: none;')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[contains(@id,'cke_contents__54')]/textarea\");\n\t\tselenium.type(\"//td[contains(@id,'cke_contents__54')]/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage Child Page Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[contains(@id,'_editor') and contains(@style,'display: none;')]\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//td[contains(@id,'cke_contents__54')]/iframe\"));\n\t\tselenium.selectFrame(\"//td[contains(@id,'cke_contents__54')]/iframe\");\n\t\tselenium.waitForText(\"//body\", \"Wiki FrontPage Child Page Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid title.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"Children Pages\"));\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"//div[@class='child-pages']/ul/li/a\"));\n\t}","id":50039,"modified_method":"public void testAddWDFrontPageChildPageNameNull() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Display Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//a[@title='Paragraph Format']/span\", \"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage Child Page Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki FrontPage Child Page Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid title.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Display Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"Children Pages\"));\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"//div[@class='child-pages']/ul/li/a\"));\n\t}","commit_id":"e7560f35d1dfd3ee1835fb041657cded8f3f9eb7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWDFrontPageChildPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.waitForVisible(\"//td[@class='cke_top']\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[contains(@id,'_editor') and contains(@style,'display: none;')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[contains(@id,'cke_contents__54')]/textarea\");\n\t\tselenium.type(\"//td[contains(@id,'cke_contents__54')]/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_off']\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//td[contains(@id,'cke_contents__54')]/iframe\"));\n\t\tselenium.selectFrame(\"//td[contains(@id,'cke_contents__54')]/iframe\");\n\t\tselenium.waitForText(\"//body\", \"Wiki FrontPage ChildPage Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//div[@class='child-pages']/ul/li/a\"));\n\t\tselenium.clickAt(\"//div[@class='child-pages']/ul/li/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","id":50040,"modified_method":"public void testAddWDFrontPageChildPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Display Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//a[@title='Paragraph Format']/span\", \"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_off']\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki FrontPage ChildPage Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//div[@class='child-pages']/ul/li/a\"));\n\t\tselenium.clickAt(\"//div[@class='child-pages']/ul/li/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//h1[@class='header-title']/span\",\n\t\t\t\"Wiki FrontPage ChildPage Title\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","commit_id":"e7560f35d1dfd3ee1835fb041657cded8f3f9eb7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWDFrontPageComment2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Comment\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//fieldset[@class='aui-fieldset add-comment ']/div/span/a/span\"));\n\t\tselenium.clickAt(\"//fieldset[@class='aui-fieldset add-comment ']/div/span/a/span\",\n\t\t\tRuntimeVariables.replace(\"Add Comment\"));\n\t\tselenium.waitForVisible(\"//textarea\");\n\t\tselenium.type(\"//textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage Comment2\"));\n\t\tselenium.click(\"//input[@value='Reply']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-message-response portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-message-response portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Comment1\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"xpath=(//div[@class='lfr-discussion-message'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Comment2\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"xpath=(//div[@class='lfr-discussion-message'])[2]\"));\n\t}","id":50041,"modified_method":"public void testAddWDFrontPageComment2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Comment\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//fieldset[contains(@class,'add-comment')]/div/span/a/span\"));\n\t\tselenium.clickAt(\"//fieldset[contains(@class,'add-comment')]/div/span/a/span\",\n\t\t\tRuntimeVariables.replace(\"Add Comment\"));\n\t\tselenium.waitForVisible(\"//textarea\");\n\t\tselenium.type(\"//textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage Comment2\"));\n\t\tselenium.click(\"//input[@value='Reply']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-message-response portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-message-response portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Comment1\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"xpath=(//div[@class='lfr-discussion-message'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Comment2\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"xpath=(//div[@class='lfr-discussion-message'])[2]\"));\n\t}","commit_id":"e7560f35d1dfd3ee1835fb041657cded8f3f9eb7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWDFrontPageComment3() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Comment\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//fieldset[@class='aui-fieldset add-comment ']/div/span/a/span\"));\n\t\tselenium.clickAt(\"//fieldset[@class='aui-fieldset add-comment ']/div/span/a/span\",\n\t\t\tRuntimeVariables.replace(\"Add Comment\"));\n\t\tselenium.waitForVisible(\"//textarea\");\n\t\tselenium.type(\"//textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage Comment3\"));\n\t\tselenium.click(\"//input[@value='Reply']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-message-response portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-message-response portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Comment1\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"xpath=(//div[@class='lfr-discussion-message'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Comment2\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"xpath=(//div[@class='lfr-discussion-message'])[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Comment3\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"xpath=(//div[@class='lfr-discussion-message'])[3]\"));\n\t}","id":50042,"modified_method":"public void testAddWDFrontPageComment3() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Comment\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//fieldset[contains(@class,'add-comment')]/div/span/a/span\"));\n\t\tselenium.clickAt(\"//fieldset[contains(@class,'add-comment')]/div/span/a/span\",\n\t\t\tRuntimeVariables.replace(\"Add Comment\"));\n\t\tselenium.waitForVisible(\"//textarea\");\n\t\tselenium.type(\"//textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage Comment3\"));\n\t\tselenium.click(\"//input[@value='Reply']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-message-response portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-message-response portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Comment1\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"xpath=(//div[@class='lfr-discussion-message'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Comment2\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"xpath=(//div[@class='lfr-discussion-message'])[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Comment3\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"xpath=(//div[@class='lfr-discussion-message'])[3]\"));\n\t}","commit_id":"e7560f35d1dfd3ee1835fb041657cded8f3f9eb7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWDFrontPageCommentNull() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Be the first.\"),\n\t\t\tselenium.getText(\"//fieldset/div/a\"));\n\t\tselenium.clickAt(\"//fieldset/div/a\",\n\t\t\tRuntimeVariables.replace(\"Be the first.\"));\n\t\tselenium.waitForVisible(\"//textarea\");\n\t\tselenium.click(\"//input[@value='Reply']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-message-response portlet-msg-error']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid message.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-message-response portlet-msg-error']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Be the first.\"),\n\t\t\tselenium.getText(\"//fieldset/div/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"//textarea\"));\n\t}","id":50043,"modified_method":"public void testAddWDFrontPageCommentNull() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Be the first.\"),\n\t\t\tselenium.getText(\"//fieldset[contains(@class,'add-comment')]/div/a\"));\n\t\tselenium.clickAt(\"//fieldset[contains(@class,'add-comment')]/div/a\",\n\t\t\tRuntimeVariables.replace(\"Be the first.\"));\n\t\tselenium.waitForVisible(\"//textarea\");\n\t\tselenium.click(\"//input[@value='Reply']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-message-response portlet-msg-error']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid message.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-message-response portlet-msg-error']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Be the first.\"),\n\t\t\tselenium.getText(\"//fieldset/div/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"//textarea\"));\n\t}","commit_id":"e7560f35d1dfd3ee1835fb041657cded8f3f9eb7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWikiFrontPage1() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Wiki Node1 Name\",\n\t\t\tRuntimeVariables.replace(\"Wiki Node1 Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This page is empty. Edit it to add some text.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/div/a\"));\n\t\tselenium.clickAt(\"//div[@class='wiki-body']/div/a\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This page is empty. Edit it to add some text.\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_36_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__36_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__36_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage1 Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_36_editor' and @style='display: none;']\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//td[@id='cke_contents__36_editor']/iframe\"));\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__36_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"Wiki FrontPage1 Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage1 Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","id":50044,"modified_method":"public void testAddWikiFrontPage1() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"link=Wiki Node1 Name\");\n\t\tselenium.clickAt(\"link=Wiki Node1 Name\",\n\t\t\tRuntimeVariables.replace(\"Wiki Node1 Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This page is empty. Edit it to add some text.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/div/a\"));\n\t\tselenium.clickAt(\"//div[@class='wiki-body']/div/a\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This page is empty. Edit it to add some text.\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage1 Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki FrontPage1 Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage1 Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","commit_id":"e7560f35d1dfd3ee1835fb041657cded8f3f9eb7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWikiFrontPage2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Wiki Node2 Name\",\n\t\t\tRuntimeVariables.replace(\"Wiki Node2 Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This page is empty. Edit it to add some text.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/div/a\"));\n\t\tselenium.clickAt(\"//div[@class='wiki-body']/div/a\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This page is empty. Edit it to add some text.\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_36_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__36_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__36_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage2 Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_36_editor' and @style='display: none;']\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//td[@id='cke_contents__36_editor']/iframe\"));\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__36_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"Wiki FrontPage2 Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage2 Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","id":50045,"modified_method":"public void testAddWikiFrontPage2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"link=Wiki Node2 Name\");\n\t\tselenium.clickAt(\"link=Wiki Node2 Name\",\n\t\t\tRuntimeVariables.replace(\"Wiki Node2 Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This page is empty. Edit it to add some text.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/div/a\"));\n\t\tselenium.clickAt(\"//div[@class='wiki-body']/div/a\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This page is empty. Edit it to add some text.\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage2 Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki FrontPage2 Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage2 Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","commit_id":"e7560f35d1dfd3ee1835fb041657cded8f3f9eb7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWikiFrontPage3() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Wiki Node3 Name\",\n\t\t\tRuntimeVariables.replace(\"Wiki Node3 Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This page is empty. Edit it to add some text.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/div/a\"));\n\t\tselenium.clickAt(\"//div[@class='wiki-body']/div/a\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This page is empty. Edit it to add some text.\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_36_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__36_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__36_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage3 Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_36_editor' and @style='display: none;']\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//td[@id='cke_contents__36_editor']/iframe\"));\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__36_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"Wiki FrontPage3 Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage3 Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","id":50046,"modified_method":"public void testAddWikiFrontPage3() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"link=Wiki Node3 Name\");\n\t\tselenium.clickAt(\"link=Wiki Node3 Name\",\n\t\t\tRuntimeVariables.replace(\"Wiki Node3 Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This page is empty. Edit it to add some text.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/div/a\"));\n\t\tselenium.clickAt(\"//div[@class='wiki-body']/div/a\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This page is empty. Edit it to add some text.\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage3 Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki FrontPage3 Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage3 Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","commit_id":"e7560f35d1dfd3ee1835fb041657cded8f3f9eb7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testCancelAddWDFrontPageChildPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.waitForVisible(\"//td[@class='cke_top']\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[contains(@id,'_editor') and contains(@style,'display: none;')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[contains(@id,'cke_contents__54')]/textarea\");\n\t\tselenium.type(\"//td[contains(@id,'cke_contents__54')]/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[contains(@id,'_editor') and contains(@style,'display: none;')]\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//td[contains(@id,'cke_contents__54')]/iframe\"));\n\t\tselenium.selectFrame(\"//td[contains(@id,'cke_contents__54')]/iframe\");\n\t\tselenium.waitForText(\"//body\", \"Wiki FrontPage ChildPage Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Cancel']\",\n\t\t\tRuntimeVariables.replace(\"Cancel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t\tassertFalse(selenium.isTextPresent(\"Wiki FrontPage Child Page Title\"));\n\t\tassertFalse(selenium.isTextPresent(\"Wiki FrontPage Child Page Content\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"Children Pages\"));\n\t\tassertFalse(selenium.isTextPresent(\"Wiki FrontPage ChildPage Title\"));\n\t}","id":50047,"modified_method":"public void testCancelAddWDFrontPageChildPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki FrontPage ChildPage Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Cancel']\",\n\t\t\tRuntimeVariables.replace(\"Cancel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t\tassertFalse(selenium.isTextPresent(\"Wiki FrontPage Child Page Title\"));\n\t\tassertFalse(selenium.isTextPresent(\"Wiki FrontPage Child Page Content\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"Children Pages\"));\n\t\tassertFalse(selenium.isTextPresent(\"Wiki FrontPage ChildPage Title\"));\n\t}","commit_id":"e7560f35d1dfd3ee1835fb041657cded8f3f9eb7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testChangeParentWDFrontPageChildPageToNone()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//div[@class='child-pages']/ul/li/a\"));\n\t\tselenium.clickAt(\"//div[@class='child-pages']/ul/li/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\\u00ab Back to FrontPage\"),\n\t\t\tselenium.getText(\"//span[@class='header-back-to']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\",\n\t\t\tRuntimeVariables.replace(\"Details\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Move\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='lfr-component taglib-icon-list']/li/a/span[contains(.,'Move')]\"));\n\t\tselenium.clickAt(\"//ul[@class='lfr-component taglib-icon-list']/li/a/span[contains(.,'Move')]\",\n\t\t\tRuntimeVariables.replace(\"Move\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Change Parent\",\n\t\t\tRuntimeVariables.replace(\"Change Parent\"));\n\t\tselenium.waitForVisible(\"//select[contains(@id,'newParentTitle')]\");\n\t\tselenium.select(\"//select[contains(@id,'newParentTitle')]\",\n\t\t\tRuntimeVariables.replace(\"None\"));\n\t\tselenium.clickAt(\"//input[@value='Change Parent']\",\n\t\t\tRuntimeVariables.replace(\"Change Parent\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"Children Pages\"));\n\t\tassertFalse(selenium.isTextPresent(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=All Pages\", RuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[contains(.,'Wiki FrontPage ChildPage Title')]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Approved\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[contains(.,'Wiki FrontPage ChildPage Title')]/td[2]/a\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//tr[contains(.,'Wiki FrontPage ChildPage Title')]/td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[contains(.,'Wiki FrontPage ChildPage Title')]/td[4]/a\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//tr[contains(.,'Wiki FrontPage ChildPage Title')]/td[5]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[contains(.,'Wiki FrontPage ChildPage Title')]/td[6]/span/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'Wiki FrontPage ChildPage Title')]/td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertFalse(selenium.isTextPresent(\"\\u00ab Back to FrontPage\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","id":50048,"modified_method":"public void testChangeParentWDFrontPageChildPageToNone()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Display Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\"//div[@class='child-pages']/ul/li/a\");\n\t\tselenium.clickAt(\"//div[@class='child-pages']/ul/li/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//h1[@class='header-title']/span\",\n\t\t\t\"Wiki FrontPage ChildPage Title\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\\u00ab Back to FrontPage\"),\n\t\t\tselenium.getText(\"//span[@class='header-back-to']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\",\n\t\t\tRuntimeVariables.replace(\"Details\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Move\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='lfr-component taglib-icon-list']/li/a/span[contains(.,'Move')]\"));\n\t\tselenium.clickAt(\"//ul[@class='lfr-component taglib-icon-list']/li/a/span[contains(.,'Move')]\",\n\t\t\tRuntimeVariables.replace(\"Move\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Change Parent\",\n\t\t\tRuntimeVariables.replace(\"Change Parent\"));\n\t\tselenium.waitForVisible(\"//select[contains(@id,'newParentTitle')]\");\n\t\tselenium.select(\"//select[contains(@id,'newParentTitle')]\",\n\t\t\tRuntimeVariables.replace(\"None\"));\n\t\tselenium.clickAt(\"//input[@value='Change Parent']\",\n\t\t\tRuntimeVariables.replace(\"Change Parent\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"Children Pages\"));\n\t\tassertFalse(selenium.isTextPresent(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Display Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\"link=All Pages\");\n\t\tselenium.clickAt(\"link=All Pages\", RuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[contains(.,'Wiki FrontPage ChildPage Title')]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Approved\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[contains(.,'Wiki FrontPage ChildPage Title')]/td[2]/a\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//tr[contains(.,'Wiki FrontPage ChildPage Title')]/td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[contains(.,'Wiki FrontPage ChildPage Title')]/td[4]/a\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//tr[contains(.,'Wiki FrontPage ChildPage Title')]/td[5]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[contains(.,'Wiki FrontPage ChildPage Title')]/td[6]/span/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'Wiki FrontPage ChildPage Title')]/td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertFalse(selenium.isTextPresent(\"\\u00ab Back to FrontPage\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","commit_id":"e7560f35d1dfd3ee1835fb041657cded8f3f9eb7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testCompareVersionEditWikiFrontPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\",\n\t\t\tRuntimeVariables.replace(\"Details\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=History\", RuntimeVariables.replace(\"History\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"1.2\"),\n\t\t\tselenium.getText(\"//tr[3]/td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.1\"),\n\t\t\tselenium.getText(\"//tr[4]/td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.0 (Minor Edit)\"),\n\t\t\tselenium.getText(\"//tr[5]/td[4]/a\"));\n\t\tassertFalse(selenium.isChecked(\"//tr[3]/td[1]/input\"));\n\t\tselenium.check(\"//tr[3]/td[1]/input\");\n\t\tassertTrue(selenium.isChecked(\"//tr[3]/td[1]/input\"));\n\t\tassertFalse(selenium.isChecked(\"//tr[4]/td[1]/input\"));\n\t\tselenium.check(\"//tr[4]/td[1]/input\");\n\t\tassertTrue(selenium.isChecked(\"//tr[4]/td[1]/input\"));\n\t\tassertFalse(selenium.isChecked(\"//tr[5]/td[1]/input\"));\n\t\tselenium.clickAt(\"//input[@value='Compare Versions']\",\n\t\t\tRuntimeVariables.replace(\"Compare Versions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Comparing Versions 1.1 and 1.2 (Last Version)\"),\n\t\t\tselenium.getText(\"//span[@class='central-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content Edit\"),\n\t\t\tselenium.getText(\"//p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\"//span[@class='diff-html-added']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Text Mode\"),\n\t\t\tselenium.getText(\"//a[@class='change-mode']\"));\n\t\tselenium.clickAt(\"//a[@class='change-mode']\",\n\t\t\tRuntimeVariables.replace(\"Text Mode\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage 1.1\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"xPath=(//table[@id='taglib-diff-results']/tbody/tr/td)[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage 1.2\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"xPath=(//table[@id='taglib-diff-results']/tbody/tr/td)[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"xPath=(//table[@class='taglib-diff-table']/tbody/tr/td)[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"xPath=(//table[@class='taglib-diff-table']/tbody/tr/td)[2]\"));\n\t}","id":50049,"modified_method":"public void testCompareVersionEditWikiFrontPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Display Test Page\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\");\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\",\n\t\t\tRuntimeVariables.replace(\"Details\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\"link=History\");\n\t\tselenium.clickAt(\"link=History\", RuntimeVariables.replace(\"History\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"1.2\"),\n\t\t\tselenium.getText(\"//tr[3]/td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.1\"),\n\t\t\tselenium.getText(\"//tr[4]/td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.0 (Minor Edit)\"),\n\t\t\tselenium.getText(\"//tr[5]/td[4]/a\"));\n\t\tassertFalse(selenium.isChecked(\"//tr[3]/td[1]/input\"));\n\t\tselenium.check(\"//tr[3]/td[1]/input\");\n\t\tassertTrue(selenium.isChecked(\"//tr[3]/td[1]/input\"));\n\t\tassertFalse(selenium.isChecked(\"//tr[4]/td[1]/input\"));\n\t\tselenium.check(\"//tr[4]/td[1]/input\");\n\t\tassertTrue(selenium.isChecked(\"//tr[4]/td[1]/input\"));\n\t\tassertFalse(selenium.isChecked(\"//tr[5]/td[1]/input\"));\n\t\tselenium.clickAt(\"//input[@value='Compare Versions']\",\n\t\t\tRuntimeVariables.replace(\"Compare Versions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Comparing Versions 1.1 and 1.2 (Last Version)\"),\n\t\t\tselenium.getText(\"//span[@class='central-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content Edit\"),\n\t\t\tselenium.getText(\"//p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\"//span[@class='diff-html-added']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Text Mode\"),\n\t\t\tselenium.getText(\"//a[@class='change-mode']\"));\n\t\tselenium.clickAt(\"//a[@class='change-mode']\",\n\t\t\tRuntimeVariables.replace(\"Text Mode\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage 1.1\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"xPath=(//table[@id='taglib-diff-results']/tbody/tr/td)[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage 1.2\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"xPath=(//table[@id='taglib-diff-results']/tbody/tr/td)[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"xPath=(//table[@class='taglib-diff-table']/tbody/tr/td)[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"xPath=(//table[@class='taglib-diff-table']/tbody/tr/td)[2]\"));\n\t}","commit_id":"e7560f35d1dfd3ee1835fb041657cded8f3f9eb7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testCopyWDFrontPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\",\n\t\t\tRuntimeVariables.replace(\"Details\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Copy\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='lfr-component taglib-icon-list']/li/a/span[contains(.,'Copy')]\"));\n\t\tselenium.clickAt(\"//ul[@class='lfr-component taglib-icon-list']/li/a/span[contains(.,'Copy')]\",\n\t\t\tRuntimeVariables.replace(\"Copy\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tselenium.type(\"//input[contains(@id,'title')]\",\n\t\t\tRuntimeVariables.replace(\"FrontPage2\"));\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"All Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'All Pages')]\"));\n\t\tselenium.clickAt(\"//ul[@class='top-links-navigation']/li/span[contains(.,'All Pages')]/a\",\n\t\t\tRuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage2\"),\n\t\t\tselenium.getText(\"//tr[4]/td[1]/a\"));\n\t\tselenium.clickAt(\"//tr[4]/td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"FrontPage2\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage2\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","id":50050,"modified_method":"public void testCopyWDFrontPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\",\n\t\t\tRuntimeVariables.replace(\"Details\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Copy\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='lfr-component taglib-icon-list']/li/a/span[contains(.,'Copy')]\"));\n\t\tselenium.clickAt(\"//ul[@class='lfr-component taglib-icon-list']/li/a/span[contains(.,'Copy')]\",\n\t\t\tRuntimeVariables.replace(\"Copy\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tselenium.type(\"//input[contains(@id,'title')]\",\n\t\t\tRuntimeVariables.replace(\"FrontPage2\"));\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"All Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'All Pages')]\"));\n\t\tselenium.clickAt(\"//ul[@class='top-links-navigation']/li/span[contains(.,'All Pages')]/a\",\n\t\t\tRuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage2\"),\n\t\t\tselenium.getText(\"//tr[4]/td[1]/a\"));\n\t\tselenium.clickAt(\"//tr[4]/td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"FrontPage2\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage2\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","commit_id":"e7560f35d1dfd3ee1835fb041657cded8f3f9eb7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeleteWDFrontPageChildPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Children Pages\"),\n\t\t\tselenium.getText(\"//div[@class='child-pages']/h2\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//div[@class='child-pages']/ul/li/a\"));\n\t\tselenium.clickAt(\"//div[@class='child-pages']/ul/li/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\",\n\t\t\tRuntimeVariables.replace(\"Details\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='lfr-component taglib-icon-list']/li/a[contains(.,'Delete')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//ul[@class='lfr-component taglib-icon-list']/li/a[contains(.,'Delete')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tassertFalse(selenium.isTextPresent(\"Children Pages\"));\n\t\tassertFalse(selenium.isTextPresent(\"Wiki FrontPage ChildPage Title\"));\n\t}","id":50051,"modified_method":"public void testDeleteWDFrontPageChildPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Children Pages\"),\n\t\t\tselenium.getText(\"//div[@class='child-pages']/h2\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//div[@class='child-pages']/ul/li/a\"));\n\t\tselenium.clickAt(\"//div[@class='child-pages']/ul/li/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\");\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\",\n\t\t\tRuntimeVariables.replace(\"Details\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//ul[@class='lfr-component taglib-icon-list']/li/a[contains(.,'Delete')]\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//ul[@class='lfr-component taglib-icon-list']/li/a[contains(.,'Delete')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\t\tassertFalse(selenium.isTextPresent(\"Children Pages\"));\n\t\tassertFalse(selenium.isTextPresent(\"Wiki FrontPage ChildPage Title\"));\n\t}","commit_id":"e7560f35d1dfd3ee1835fb041657cded8f3f9eb7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeleteWDFrontPageComment() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Comment\"),\n\t\t\tselenium.getText(\"//div[@class='lfr-discussion-message']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='lfr-discussion-actions']/li/span/a[contains(.,'Delete')]\"));\n\t\tselenium.clickAt(\"//ul[@class='lfr-discussion-actions']/li/span/a[contains(.,'Delete')]\",\n\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\tselenium.waitForConfirmation(\"Are you sure you want to delete this?\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-message-response portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-message-response portlet-msg-success']\"));\n\t\tassertFalse(selenium.isTextPresent(\"Wiki FrontPage Comment\"));\n\t}","id":50052,"modified_method":"public void testDeleteWDFrontPageComment() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Comment\"),\n\t\t\tselenium.getText(\"//div[@class='lfr-discussion-message']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='lfr-discussion-actions']/li/span/a[contains(.,'Delete')]\"));\n\t\tselenium.clickAt(\"//ul[@class='lfr-discussion-actions']/li/span/a[contains(.,'Delete')]\",\n\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\tselenium.waitForConfirmation(\n\t\t\t\"Are you sure you want to delete this? It will be deleted immediately.\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-message-response portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-message-response portlet-msg-success']\"));\n\t\tassertFalse(selenium.isTextPresent(\"Wiki FrontPage Comment\"));\n\t}","commit_id":"e7560f35d1dfd3ee1835fb041657cded8f3f9eb7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditWikiFrontPageMinorChange() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Edit')]\"));\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Edit')]\",\n\t\t\tRuntimeVariables.replace(\"Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//td[@class='cke_top']\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[contains(@id,'_editor') and contains(@style,'display: none;')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[contains(@id,'cke_contents__54')]/textarea\");\n\t\tselenium.type(\"//td[contains(@id,'cke_contents__54')]/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage Content Edit\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[contains(@id,'_editor') and contains(@style,'display: none;')]\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//td[contains(@id,'cke_contents__54')]/iframe\"));\n\t\tselenium.selectFrame(\"//td[contains(@id,'cke_contents__54')]/iframe\");\n\t\tselenium.waitForText(\"//body\", \"Wiki FrontPage Content Edit\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[contains(@id,'_minorEditCheckbox')]\"));\n\t\tselenium.clickAt(\"//input[contains(@id,'_minorEditCheckbox')]\",\n\t\t\tRuntimeVariables.replace(\"This is a minor edit.\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[contains(@id,'_minorEditCheckbox')]\"));\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content Edit\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertNotEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\",\n\t\t\tRuntimeVariables.replace(\"Details\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=History\", RuntimeVariables.replace(\"History\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"1.2 (Minor Edit)\"),\n\t\t\tselenium.getText(\"//tr[3]/td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.1\"),\n\t\t\tselenium.getText(\"//tr[4]/td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.0 (Minor Edit)\"),\n\t\t\tselenium.getText(\"//tr[5]/td[4]/a\"));\n\t}","id":50053,"modified_method":"public void testEditWikiFrontPageMinorChange() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//div[@class='wiki-body']/p\",\n\t\t\t\"Wiki FrontPage Content\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Edit')]\"));\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Edit')]\",\n\t\t\tRuntimeVariables.replace(\"Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage Content Edit\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki FrontPage Content Edit\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[contains(@id,'_minorEditCheckbox')]\"));\n\t\tselenium.clickAt(\"//input[contains(@id,'_minorEditCheckbox')]\",\n\t\t\tRuntimeVariables.replace(\"This is a minor edit.\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[contains(@id,'_minorEditCheckbox')]\"));\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content Edit\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertNotEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\",\n\t\t\tRuntimeVariables.replace(\"Details\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=History\", RuntimeVariables.replace(\"History\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"1.2 (Minor Edit)\"),\n\t\t\tselenium.getText(\"//tr[3]/td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.1\"),\n\t\t\tselenium.getText(\"//tr[4]/td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.0 (Minor Edit)\"),\n\t\t\tselenium.getText(\"//tr[5]/td[4]/a\"));\n\t}","commit_id":"e7560f35d1dfd3ee1835fb041657cded8f3f9eb7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditWikiFrontPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Edit')]\"));\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Edit')]\",\n\t\t\tRuntimeVariables.replace(\"Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//td[@class='cke_top']\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[contains(@id,'_editor') and contains(@style,'display: none;')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[contains(@id,'cke_contents__54')]/textarea\");\n\t\tselenium.type(\"//td[contains(@id,'cke_contents__54')]/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage Content Edit\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[contains(@id,'_editor') and contains(@style,'display: none;')]\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//td[contains(@id,'cke_contents__54')]/iframe\"));\n\t\tselenium.selectFrame(\"//td[contains(@id,'cke_contents__54')]/iframe\");\n\t\tselenium.waitForText(\"//body\", \"Wiki FrontPage Content Edit\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content Edit\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertNotEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\",\n\t\t\tRuntimeVariables.replace(\"Details\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=History\", RuntimeVariables.replace(\"History\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"1.2\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.1\"),\n\t\t\tselenium.getText(\"//tr[4]/td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.0 (Minor Edit)\"),\n\t\t\tselenium.getText(\"//tr[5]/td[4]/a\"));\n\t}","id":50054,"modified_method":"public void testEditWikiFrontPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Display Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Edit')]\"));\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Edit')]\",\n\t\t\tRuntimeVariables.replace(\"Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//span[@class='cke_toolbar']/span[contains(.,'Format')]/a\",\n\t\t\t\"Format\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage Content Edit\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki FrontPage Content Edit\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content Edit\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertNotEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Display Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\");\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\",\n\t\t\tRuntimeVariables.replace(\"Details\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\"link=History\");\n\t\tselenium.clickAt(\"link=History\", RuntimeVariables.replace(\"History\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"1.2\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.1\"),\n\t\t\tselenium.getText(\"//tr[4]/td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.0 (Minor Edit)\"),\n\t\t\tselenium.getText(\"//tr[5]/td[4]/a\"));\n\t}","commit_id":"e7560f35d1dfd3ee1835fb041657cded8f3f9eb7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testLinkWDFrontPageChildPageToWDFrontPageChildPage()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage2 Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='child-pages']/ul/li/a[contains(.,'Wiki FrontPage ChildPage2 Title')]\"));\n\t\tselenium.clickAt(\"//div[@class='child-pages']/ul/li/a[contains(.,'Wiki FrontPage ChildPage2 Title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage2 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"Wiki FrontPage Child Page1 Title\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Edit')]\"));\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Edit')]\",\n\t\t\tRuntimeVariables.replace(\"Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//td[@class='cke_top']\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[contains(@id,'_editor') and contains(@style,'display: none;')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[contains(@id,'cke_contents__54')]/textarea\");\n\t\tselenium.type(\"//td[contains(@id,'cke_contents__54')]/textarea\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage2 Content\\n\\n[[Wiki FrontPage ChildPage1 Title]]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[contains(@id,'_editor') and contains(@style,'display: none;')]\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//td[contains(@id,'cke_contents__54')]/iframe\"));\n\t\tselenium.selectFrame(\"//td[contains(@id,'cke_contents__54')]/iframe\");\n\t\tselenium.waitForPartialText(\"//body\", \"Wiki FrontPage ChildPage1 Title\");\n\t\tselenium.waitForPartialText(\"//body\",\n\t\t\t\"Wiki FrontPage ChildPage2 Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage1 Title\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p/a\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage2 Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='child-pages']/ul/li/a[contains(.,'Wiki FrontPage ChildPage2 Title')]\"));\n\t\tselenium.clickAt(\"//div[@class='child-pages']/ul/li/a[contains(.,'Wiki FrontPage ChildPage2 Title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage2 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage1 Title\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p/a\"));\n\t\tselenium.clickAt(\"//div[@class='wiki-body']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage1 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage1 Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage1 Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","id":50055,"modified_method":"public void testLinkWDFrontPageChildPageToWDFrontPageChildPage()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Display Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//div[@class='child-pages']/ul/li/a[contains(.,'Wiki FrontPage ChildPage2 Title')]\",\n\t\t\t\"Wiki FrontPage ChildPage2 Title\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage2 Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='child-pages']/ul/li/a[contains(.,'Wiki FrontPage ChildPage2 Title')]\"));\n\t\tselenium.clickAt(\"//div[@class='child-pages']/ul/li/a[contains(.,'Wiki FrontPage ChildPage2 Title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage2 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"Wiki FrontPage Child Page1 Title\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Edit')]\"));\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Edit')]\",\n\t\t\tRuntimeVariables.replace(\"Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tselenium.waitForText(\"//span[@class='cke_toolbar']/span[contains(.,'Format')]/a\",\n\t\t\t\"Format\");\n\t\tselenium.waitForText(\"//span[.='Source']\", \"Source\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage2 Content\\n\\n[[Wiki FrontPage ChildPage1 Title]]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForPartialText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki FrontPage ChildPage2 Content\");\n\t\tselenium.waitForPartialText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p[2]\",\n\t\t\t\"Wiki FrontPage ChildPage1 Title\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage1 Title\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p/a\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Display Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//div[@class='child-pages']/ul/li/a[contains(.,'Wiki FrontPage ChildPage2 Title')]\",\n\t\t\t\"Wiki FrontPage ChildPage2 Title\");\n\t\tselenium.clickAt(\"//div[@class='child-pages']/ul/li/a[contains(.,'Wiki FrontPage ChildPage2 Title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage2 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//div[@class='wiki-body']/p/a\",\n\t\t\t\"Wiki FrontPage ChildPage1 Title\");\n\t\tselenium.clickAt(\"//div[@class='wiki-body']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage1 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage1 Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage1 Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","commit_id":"e7560f35d1dfd3ee1835fb041657cded8f3f9eb7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testPreviewWDFrontPageChildPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.waitForVisible(\"//td[@class='cke_top']\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[contains(@id,'_editor') and contains(@style,'display: none;')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[contains(@id,'cke_contents__54')]/textarea\");\n\t\tselenium.type(\"//td[contains(@id,'cke_contents__54')]/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[contains(@id,'_editor') and contains(@style,'display: none;')]\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//td[contains(@id,'cke_contents__54')]/iframe\"));\n\t\tselenium.selectFrame(\"//td[contains(@id,'cke_contents__54')]/iframe\");\n\t\tselenium.waitForText(\"//body\", \"Wiki FrontPage ChildPage Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Preview']\",\n\t\t\tRuntimeVariables.replace(\"Preview\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[contains(@id,'_editor') and contains(@style,'display: none;')]\");\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Content\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='preview']/div[@class='wiki-body']/p\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"Wiki FrontPage ChildPage Title\"));\n\t\tassertFalse(selenium.isTextPresent(\"Wiki FrontPage ChildPage Content\"));\n\t}","id":50056,"modified_method":"public void testPreviewWDFrontPageChildPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki FrontPage ChildPage Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Preview']\",\n\t\t\tRuntimeVariables.replace(\"Preview\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Content\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='preview']/div[@class='wiki-body']/p\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"Wiki FrontPage ChildPage Title\"));\n\t\tassertFalse(selenium.isTextPresent(\"Wiki FrontPage ChildPage Content\"));\n\t}","commit_id":"e7560f35d1dfd3ee1835fb041657cded8f3f9eb7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testRemoveRedirectWDFrontPageChildPage()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"All Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span/a[contains(.,'All Pages')]\"));\n\t\tselenium.clickAt(\"//ul[@class='top-links-navigation']/li/span/a[contains(.,'All Pages')]\",\n\t\t\tRuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//tr[4]/td[1]/a\"));\n\t\tselenium.clickAt(\"//tr[4]/td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Title Rename\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"(Redirected from Wiki FrontPage ChildPage Title)\"),\n\t\t\tselenium.getText(\"//div[@class='page-redirect']\"));\n\t\tselenium.clickAt(\"//div[@class='page-redirect']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"(Redirected from Wiki FrontPage ChildPage Title)\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This page is currently redirected to Wiki FrontPage ChildPage Title Rename.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/div\"));\n\t\tselenium.clickAt(\"//input[@value='Remove Redirect']\",\n\t\t\tRuntimeVariables.replace(\"Remove Redirect\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//td[@class='cke_top']\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[contains(@id,'_editor') and contains(@style,'display: none;')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[contains(@id,'cke_contents__54')]/textarea\");\n\t\tselenium.type(\"//td[contains(@id,'cke_contents__54')]/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Content Rename\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[contains(@id,'_editor') and contains(@style,'display: none;')]\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//td[contains(@id,'cke_contents__54')]/iframe\"));\n\t\tselenium.selectFrame(\"//td[contains(@id,'cke_contents__54')]/iframe\");\n\t\tselenium.waitForText(\"//body\", \"Wiki FrontPage ChildPage Content Rename\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Content Rename\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"All Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span/a[contains(.,'All Pages')]\"));\n\t\tselenium.clickAt(\"//ul[@class='top-links-navigation']/li/span/a[contains(.,'All Pages')]\",\n\t\t\tRuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//tr[4]/td[1]/a\"));\n\t\tselenium.clickAt(\"//tr[4]/td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Content Rename\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertNotEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage Child Page Title Rename\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"(Redirected from Wiki FrontPage ChildPage Title1)\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"All Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span/a[contains(.,'All Pages')]\"));\n\t\tselenium.clickAt(\"//ul[@class='top-links-navigation']/li/span/a[contains(.,'All Pages')]\",\n\t\t\tRuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Title Rename\"),\n\t\t\tselenium.getText(\"//tr[5]/td[1]/a\"));\n\t\tselenium.clickAt(\"//tr[5]/td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title Rename\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Title Rename\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertNotEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"(Redirected from Wiki FrontPage ChildPage Title)\"));\n\t}","id":50057,"modified_method":"public void testRemoveRedirectWDFrontPageChildPage()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Display Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"All Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span/a[contains(.,'All Pages')]\"));\n\t\tselenium.clickAt(\"//ul[@class='top-links-navigation']/li/span/a[contains(.,'All Pages')]\",\n\t\t\tRuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//tr[4]/td[1]/a\"));\n\t\tselenium.clickAt(\"//tr[4]/td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Title Rename\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"(Redirected from Wiki FrontPage ChildPage Title)\"),\n\t\t\tselenium.getText(\"//div[@class='page-redirect']\"));\n\t\tselenium.clickAt(\"//div[@class='page-redirect']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"(Redirected from Wiki FrontPage ChildPage Title)\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This page is currently redirected to Wiki FrontPage ChildPage Title Rename.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/div\"));\n\t\tselenium.clickAt(\"//input[@value='Remove Redirect']\",\n\t\t\tRuntimeVariables.replace(\"Remove Redirect\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Content Rename\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki FrontPage ChildPage Content Rename\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Content Rename\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"All Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span/a[contains(.,'All Pages')]\"));\n\t\tselenium.clickAt(\"//ul[@class='top-links-navigation']/li/span/a[contains(.,'All Pages')]\",\n\t\t\tRuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//tr[4]/td[1]/a\"));\n\t\tselenium.clickAt(\"//tr[4]/td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//h1[@class='header-title']/span\",\n\t\t\t\"Wiki FrontPage ChildPage Title\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Content Rename\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertNotEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage Child Page Title Rename\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"(Redirected from Wiki FrontPage ChildPage Title1)\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Display Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"All Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span/a[contains(.,'All Pages')]\"));\n\t\tselenium.clickAt(\"//ul[@class='top-links-navigation']/li/span/a[contains(.,'All Pages')]\",\n\t\t\tRuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Title Rename\"),\n\t\t\tselenium.getText(\"//tr[5]/td[1]/a\"));\n\t\tselenium.clickAt(\"//tr[5]/td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title Rename\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//h1[@class='header-title']/span\",\n\t\t\t\"Wiki FrontPage ChildPage Title Rename\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Title Rename\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertNotEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"(Redirected from Wiki FrontPage ChildPage Title)\"));\n\t}","commit_id":"e7560f35d1dfd3ee1835fb041657cded8f3f9eb7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testRenameWDFrontPageChildPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//div[@class='child-pages']/ul/li/a\"));\n\t\tselenium.clickAt(\"//div[@class='child-pages']/ul/li/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\",\n\t\t\tRuntimeVariables.replace(\"Details\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Move\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='lfr-component taglib-icon-list']/li/a[contains(.,'Move')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//ul[@class='lfr-component taglib-icon-list']/li/a[contains(.,'Move')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tselenium.type(\"//input[contains(@id,'_newTitle')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title Rename\"));\n\t\tselenium.clickAt(\"//input[@value='Rename']\",\n\t\t\tRuntimeVariables.replace(\"Rename\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Title Rename\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertNotEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"(Redirected from Wiki FrontPage ChildPage Title)\"),\n\t\t\tselenium.getText(\"//div[@class='page-redirect']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Title Rename\"),\n\t\t\tselenium.getText(\"//div[@class='child-pages']/ul/li/a\"));\n\t\tassertNotEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//div[@class='child-pages']/ul/li/a\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=All Pages\", RuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//tr[4]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Title Rename\"),\n\t\t\tselenium.getText(\"//tr[5]/td[1]/a\"));\n\t}","id":50058,"modified_method":"public void testRenameWDFrontPageChildPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Display Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//div[@class='child-pages']/ul/li/a\",\n\t\t\t\"Wiki FrontPage ChildPage Title\");\n\t\tselenium.clickAt(\"//div[@class='child-pages']/ul/li/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//h1[@class='header-title']/span\",\n\t\t\t\"Wiki FrontPage ChildPage Title\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\",\n\t\t\tRuntimeVariables.replace(\"Details\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//ul[@class='lfr-component taglib-icon-list']/li/a[contains(.,'Move')]\",\n\t\t\t\"Move\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//ul[@class='lfr-component taglib-icon-list']/li/a[contains(.,'Move')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//h1[@class='header-title']/span\",\n\t\t\t\"Wiki FrontPage ChildPage Title\");\n\t\tselenium.type(\"//input[contains(@id,'_newTitle')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title Rename\"));\n\t\tselenium.clickAt(\"//input[@value='Rename']\",\n\t\t\tRuntimeVariables.replace(\"Rename\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Title Rename\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertNotEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"(Redirected from Wiki FrontPage ChildPage Title)\"),\n\t\t\tselenium.getText(\"//div[@class='page-redirect']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Display Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//div[@class='child-pages']/ul/li/a\",\n\t\t\t\"Wiki FrontPage ChildPage Title Rename\");\n\t\tassertNotEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//div[@class='child-pages']/ul/li/a\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Display Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\"link=All Pages\");\n\t\tselenium.clickAt(\"link=All Pages\", RuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//tr[4]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Title Rename\"),\n\t\t\tselenium.getText(\"//tr[5]/td[1]/a\"));\n\t}","commit_id":"e7560f35d1dfd3ee1835fb041657cded8f3f9eb7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testRevertEditWikiFrontPageMinorChange()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content Edit\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\",\n\t\t\tRuntimeVariables.replace(\"Details\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=History\", RuntimeVariables.replace(\"History\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"1.3\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.2 (Minor Edit)\"),\n\t\t\tselenium.getText(\"//tr[3]/td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Revert\"),\n\t\t\tselenium.getText(\"//tr[4]/td[8]/span/a/span\"));\n\t\tselenium.clickAt(\"//tr[4]/td[8]/span/a/span\",\n\t\t\tRuntimeVariables.replace(\"Revert\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"1.3\"),\n\t\t\tselenium.getText(\"//tr[3]/td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Reverted to 1.1\"),\n\t\t\tselenium.getText(\"//tr[3]/td[7]\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertFalse(selenium.isTextPresent(\"Wiki FrontPage Content Edit\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\",\n\t\t\tRuntimeVariables.replace(\"Details\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"Minor Edit\"));\n\t}","id":50059,"modified_method":"public void testRevertEditWikiFrontPageMinorChange()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content Edit\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\",\n\t\t\tRuntimeVariables.replace(\"Details\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=History\", RuntimeVariables.replace(\"History\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"1.3\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.2 (Minor Edit)\"),\n\t\t\tselenium.getText(\"//tr[3]/td[contains(.,'1.2 (Minor Edit)')]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Revert\"),\n\t\t\tselenium.getText(\"//tr[4]/td[contains(.,'Revert')]/span/a/span\"));\n\t\tselenium.clickAt(\"//tr[4]/td[contains(.,'Revert')]/span/a/span\",\n\t\t\tRuntimeVariables.replace(\"Revert\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"1.3\"),\n\t\t\tselenium.getText(\"//tr[3]/td[contains(.,'1.3')]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Reverted to 1.1\"),\n\t\t\tselenium.getText(\"//tr[3]/td[contains(.,'Reverted to 1.1')]\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertFalse(selenium.isTextPresent(\"Wiki FrontPage Content Edit\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\",\n\t\t\tRuntimeVariables.replace(\"Details\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"Minor Edit\"));\n\t}","commit_id":"e7560f35d1dfd3ee1835fb041657cded8f3f9eb7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testRevertEditWikiFrontPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content Edit\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\",\n\t\t\tRuntimeVariables.replace(\"Details\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=History\", RuntimeVariables.replace(\"History\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"1.3\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.2\"),\n\t\t\tselenium.getText(\"//tr[3]/td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Revert\"),\n\t\t\tselenium.getText(\"//tr[4]/td[8]/span/a/span\"));\n\t\tselenium.clickAt(\"//tr[4]/td[8]/span/a/span\",\n\t\t\tRuntimeVariables.replace(\"Revert\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"1.3\"),\n\t\t\tselenium.getText(\"//tr[3]/td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Reverted to 1.1\"),\n\t\t\tselenium.getText(\"//tr[3]/td[7]\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertFalse(selenium.isTextPresent(\"Wiki FrontPage Content Edit\"));\n\t}","id":50060,"modified_method":"public void testRevertEditWikiFrontPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Display Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//div[@class='wiki-body']/p\",\n\t\t\t\"Wiki FrontPage Content Edit\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content Edit\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\",\n\t\t\tRuntimeVariables.replace(\"Details\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\"link=History\");\n\t\tselenium.clickAt(\"link=History\", RuntimeVariables.replace(\"History\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"1.3\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.2\"),\n\t\t\tselenium.getText(\"//tr[3]/td[contains(.,'1.2')]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Revert\"),\n\t\t\tselenium.getText(\"//tr[4]/td[contains(.,'Revert')]/span/a/span\"));\n\t\tselenium.clickAt(\"//tr[4]/td[contains(.,'Revert')]/span/a/span\",\n\t\t\tRuntimeVariables.replace(\"Revert\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"1.3\"),\n\t\t\tselenium.getText(\"//tr[3]/td[contains(.,'1.3')]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Reverted to 1.1\"),\n\t\t\tselenium.getText(\"//tr[3]/td[contains(.,'Reverted to 1.1')]\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertFalse(selenium.isTextPresent(\"Wiki FrontPage Content Edit\"));\n\t}","commit_id":"e7560f35d1dfd3ee1835fb041657cded8f3f9eb7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectMainNodeFrontPageChildPage()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_nodeId']\");\n\t\tselenium.select(\"//select[@id='_86_nodeId']\",\n\t\t\tRuntimeVariables.replace(\"Main\"));\n\t\tselenium.select(\"//select[@id='_86_title']\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Main\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_nodeId']\"));\n\t\tassertEquals(\"Wiki FrontPage ChildPage Title\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_title']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Title Rename\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","id":50061,"modified_method":"public void testSelectMainNodeFrontPageChildPage()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Display Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\t\"Options\");\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_nodeId']\");\n\t\tselenium.select(\"//select[@id='_86_nodeId']\",\n\t\t\tRuntimeVariables.replace(\"Main\"));\n\t\tselenium.select(\"//select[@id='_86_title']\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Main\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_nodeId']\"));\n\t\tassertEquals(\"Wiki FrontPage ChildPage Title\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_title']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Display Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//h1[@class='header-title']/span\",\n\t\t\t\"Wiki FrontPage ChildPage Title Rename\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Title Rename\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","commit_id":"e7560f35d1dfd3ee1835fb041657cded8f3f9eb7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\"//iFrame\");\n\t\tselenium.selectFrame(\"//iFrame\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_nodeId']\");\n\t\tselenium.select(\"//select[@id='_86_nodeId']\",\n\t\t\tRuntimeVariables.replace(\"Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Main\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_nodeId']\"));\n\t\tassertEquals(\"FrontPage\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_title']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","id":50062,"modified_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Display Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//span[@title='Options']/ul/li/strong/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\"//iFrame\");\n\t\tselenium.selectFrame(\"//iFrame\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_nodeId']\");\n\t\tselenium.select(\"//select[@id='_86_nodeId']\",\n\t\t\tRuntimeVariables.replace(\"Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Main\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_nodeId']\"));\n\t\tassertEquals(\"FrontPage\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_title']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Display Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//div[@class='wiki-body']/p\",\n\t\t\t\"Wiki FrontPage Content\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","commit_id":"e7560f35d1dfd3ee1835fb041657cded8f3f9eb7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectWikiNode1() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\"//iFrame\");\n\t\tselenium.selectFrame(\"//iFrame\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_nodeId']\");\n\t\tselenium.select(\"//select[@id='_86_nodeId']\",\n\t\t\tRuntimeVariables.replace(\"Wiki Node1 Name\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Wiki Node1 Name\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_nodeId']\"));\n\t\tassertEquals(\"FrontPage\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_title']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage1 Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","id":50063,"modified_method":"public void testSelectWikiNode1() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\"//iFrame\");\n\t\tselenium.selectFrame(\"//iFrame\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_nodeId']\");\n\t\tselenium.select(\"//select[@id='_86_nodeId']\",\n\t\t\tRuntimeVariables.replace(\"Wiki Node1 Name\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Wiki Node1 Name\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_nodeId']\"));\n\t\tassertEquals(\"FrontPage\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_title']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tThread.sleep(1000);\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage1 Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","commit_id":"e7560f35d1dfd3ee1835fb041657cded8f3f9eb7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectWikiNode2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\"//iFrame\");\n\t\tselenium.selectFrame(\"//iFrame\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_nodeId']\");\n\t\tselenium.select(\"//select[@id='_86_nodeId']\",\n\t\t\tRuntimeVariables.replace(\"Wiki Node2 Name\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Wiki Node2 Name\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_nodeId']\"));\n\t\tassertEquals(\"FrontPage\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_title']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage2 Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","id":50064,"modified_method":"public void testSelectWikiNode2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\"//iFrame\");\n\t\tselenium.selectFrame(\"//iFrame\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_nodeId']\");\n\t\tselenium.select(\"//select[@id='_86_nodeId']\",\n\t\t\tRuntimeVariables.replace(\"Wiki Node2 Name\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Wiki Node2 Name\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_nodeId']\"));\n\t\tassertEquals(\"FrontPage\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_title']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tThread.sleep(1000);\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage2 Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","commit_id":"e7560f35d1dfd3ee1835fb041657cded8f3f9eb7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectWikiNode3() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\"//iFrame\");\n\t\tselenium.selectFrame(\"//iFrame\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_nodeId']\");\n\t\tselenium.select(\"//select[@id='_86_nodeId']\",\n\t\t\tRuntimeVariables.replace(\"Wiki Node3 Name\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Wiki Node3 Name\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_nodeId']\"));\n\t\tassertEquals(\"FrontPage\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_title']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage3 Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","id":50065,"modified_method":"public void testSelectWikiNode3() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\"//iFrame\");\n\t\tselenium.selectFrame(\"//iFrame\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_nodeId']\");\n\t\tselenium.select(\"//select[@id='_86_nodeId']\",\n\t\t\tRuntimeVariables.replace(\"Wiki Node3 Name\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Wiki Node3 Name\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_nodeId']\"));\n\t\tassertEquals(\"FrontPage\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_title']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tThread.sleep(1000);\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage3 Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","commit_id":"e7560f35d1dfd3ee1835fb041657cded8f3f9eb7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewEditWikiFrontPageMinorChange()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\",\n\t\t\tRuntimeVariables.replace(\"Details\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=History\", RuntimeVariables.replace(\"History\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'FrontPage')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Recent Changes\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Recent Changes')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"All Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'All Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Orphan Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Orphan Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Draft Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Draft Pages')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//span[@class='aui-search-bar']/span/span/span/input\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@title='Search Pages']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\\u00ab Back\"),\n\t\t\tselenium.getText(\"//span[@class='header-back-to']/a\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@value='Compare Versions']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-header results-header']/th[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-header results-header']/th[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Status\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-header results-header']/th[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Revision\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-header results-header']/th[4]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"User\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-header results-header']/th[5]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Date\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-header results-header']/th[6]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Summary\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-header results-header']/th[7]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-header results-header']/th[8]\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[3]/td[1]/input\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Approved\"),\n\t\t\tselenium.getText(\"//tr[3]/td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.2 (Minor Edit)\"),\n\t\t\tselenium.getText(\"//tr[3]/td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//tr[3]/td[5]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[3]/td[6]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\"),\n\t\t\tselenium.getText(\"//tr[3]/td[7]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\"),\n\t\t\tselenium.getText(\"//tr[3]/td[8]\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[4]/td[1]/input\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"//tr[4]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Approved\"),\n\t\t\tselenium.getText(\"//tr[4]/td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.1\"),\n\t\t\tselenium.getText(\"//tr[4]/td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//tr[4]/td[5]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[4]/td[6]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\"),\n\t\t\tselenium.getText(\"//tr[4]/td[7]\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[4]/td[8]/span/a/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Revert\"),\n\t\t\tselenium.getText(\"//tr[4]/td[8]/span/a/span\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[5]/td[1]/input\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"//tr[5]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Approved\"),\n\t\t\tselenium.getText(\"//tr[5]/td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.0 (Minor Edit)\"),\n\t\t\tselenium.getText(\"//tr[5]/td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\"),\n\t\t\tselenium.getText(\"//tr[5]/td[5]\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[5]/td[6]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"New\"),\n\t\t\tselenium.getText(\"//tr[5]/td[7]\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[5]/td[8]/span/a/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Revert\"),\n\t\t\tselenium.getText(\"//tr[5]/td[8]/span/a/span\"));\n\t}","id":50066,"modified_method":"public void testViewEditWikiFrontPageMinorChange()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\",\n\t\t\tRuntimeVariables.replace(\"Details\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=History\", RuntimeVariables.replace(\"History\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'FrontPage')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Recent Changes\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Recent Changes')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"All Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'All Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Orphan Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Orphan Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Draft Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Draft Pages')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//span[@class='aui-search-bar']/span/span/span/input\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@title='Search Pages']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\\u00ab Back\"),\n\t\t\tselenium.getText(\"//span[@class='header-back-to']/a\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='aui-button-holder ']/span/span/input\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-header results-header']/th[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-header results-header']/th[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Status\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-header results-header']/th[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Revision\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-header results-header']/th[4]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"User\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-header results-header']/th[5]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Date\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-header results-header']/th[6]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Summary\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-header results-header']/th[7]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-header results-header']/th[8]\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[3]/td[1]/input\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"//tr[3]/td[contains(.,'FrontPage')]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Approved\"),\n\t\t\tselenium.getText(\"//tr[3]/td[contains(.,'Approved')]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.2 (Minor Edit)\"),\n\t\t\tselenium.getText(\"//tr[3]/td[contains(.,'1.2 (Minor Edit)')]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//tr[3]/td[contains(.,'Joe Bloggs')]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[3]/td[6]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\"),\n\t\t\tselenium.getText(\"//tr[3]/td[7]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\"),\n\t\t\tselenium.getText(\"//tr[3]/td[8]\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[4]/td[1]/input\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"//tr[4]/td[contains(.,'FrontPage')]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Approved\"),\n\t\t\tselenium.getText(\"//tr[4]/td[contains(.,'Approved')]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.1\"),\n\t\t\tselenium.getText(\"//tr[4]/td[contains(.,'1.1')]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//tr[4]/td[contains(.,'Joe Bloggs')]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[4]/td[6]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\"),\n\t\t\tselenium.getText(\"//tr[4]/td[7]\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[4]/td[8]/span/a/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Revert\"),\n\t\t\tselenium.getText(\"//tr[4]/td[contains(.,'Revert')]/span/a/span\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[5]/td[1]/input\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"//tr[5]/td[contains(.,'FrontPage')]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Approved\"),\n\t\t\tselenium.getText(\"//tr[5]/td[contains(.,'Approved')]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.0 (Minor Edit)\"),\n\t\t\tselenium.getText(\"//tr[5]/td[contains(.,'1.0 (Minor Edit)')]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\"),\n\t\t\tselenium.getText(\"//tr[5]/td[5]\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[5]/td[6]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"New\"),\n\t\t\tselenium.getText(\"//tr[5]/td[7]\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[5]/td[8]/span/a/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Revert\"),\n\t\t\tselenium.getText(\"//tr[5]/td[contains(.,'Revert')]/span/a/span\"));\n\t}","commit_id":"e7560f35d1dfd3ee1835fb041657cded8f3f9eb7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewEditWikiFrontPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'FrontPage')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Recent Changes\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Recent Changes')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"All Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'All Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Orphan Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Orphan Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Draft Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Draft Pages')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//span[@class='aui-search-bar']/span/span/span/input\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@title='Search Pages']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content Edit\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Edit')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Print\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Print')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0 Attachments\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'0 Attachments')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='page-actions']/div[@class='stats']\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[contains(@id,'ratingStarContent')]\", \"Your Rating\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Average (0 Votes)\"),\n\t\t\tselenium.getText(\"//div[contains(@id,'ratingScoreContent')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Comments\"),\n\t\t\tselenium.getText(\"//div[@id='wikiCommentsPanel']/div/div/span\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//fieldset[@class='aui-fieldset add-comment ']/div\",\n\t\t\t\t\"No comments yet.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Be the first.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//fieldset[@class='aui-fieldset add-comment ']/div/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Subscribe to Comments\"),\n\t\t\tselenium.getText(\"//span[@class='subscribe-link']/a/span\"));\n\t}","id":50067,"modified_method":"public void testViewEditWikiFrontPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Display Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//ul[@class='top-links-navigation']/li/span[contains(.,'FrontPage')]\",\n\t\t\t\"FrontPage\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'FrontPage')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Recent Changes\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Recent Changes')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"All Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'All Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Orphan Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Orphan Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Draft Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Draft Pages')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//span[@class='aui-search-bar']/span/span/span/input\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@title='Search Pages']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content Edit\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Edit')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Print\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Print')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0 Attachments\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'0 Attachments')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='page-actions']/div[@class='stats']\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[contains(@id,'ratingStarContent')]\", \"Your Rating\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Average (0 Votes)\"),\n\t\t\tselenium.getText(\"//div[contains(@id,'ratingScoreContent')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Comments\"),\n\t\t\tselenium.getText(\"//div[@id='wikiCommentsPanel']/div/div/span\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//fieldset[@class='aui-fieldset add-comment ']/div\",\n\t\t\t\t\"No comments yet.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Be the first.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//fieldset[@class='aui-fieldset add-comment ']/div/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Subscribe to Comments\"),\n\t\t\tselenium.getText(\"//span[@class='subscribe-link']/a/span\"));\n\t}","commit_id":"e7560f35d1dfd3ee1835fb041657cded8f3f9eb7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewRenameWDFrontPageChildPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=All Pages\", RuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Title Rename\"),\n\t\t\tselenium.getText(\"//tr[5]/td[1]/a\"));\n\t\tselenium.clickAt(\"//tr[5]/td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title Rename\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'FrontPage')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Recent Changes\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Recent Changes')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"All Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'All Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Orphan Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Orphan Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Draft Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Draft Pages')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//span[@class='aui-search-bar']/span/span/span/input\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@title='Search Pages']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Title Rename\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\\u00ab Back to FrontPage\"),\n\t\t\tselenium.getText(\"//span[@class='header-back-to']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Edit')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Print\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Print')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0 Attachments\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'0 Attachments')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='page-actions']/div[@class='stats']\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[contains(@id,'ratingStarContent')]\", \"Your Rating\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Average (0 Votes)\"),\n\t\t\tselenium.getText(\"//div[contains(@id,'ratingScoreContent')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Comments\"),\n\t\t\tselenium.getText(\"//div[@id='wikiCommentsPanel']/div/div/span\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//fieldset[@class='aui-fieldset add-comment ']/div\",\n\t\t\t\t\"No comments yet.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Be the first.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//fieldset[@class='aui-fieldset add-comment ']/div/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Subscribe to Comments\"),\n\t\t\tselenium.getText(\"//span[@class='subscribe-link']/a/span\"));\n\t}","id":50068,"modified_method":"public void testViewRenameWDFrontPageChildPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Display Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\"link=All Pages\");\n\t\tselenium.clickAt(\"link=All Pages\", RuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Title Rename\"),\n\t\t\tselenium.getText(\"//tr[5]/td[1]/a\"));\n\t\tselenium.clickAt(\"//tr[5]/td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title Rename\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'FrontPage')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Recent Changes\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Recent Changes')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"All Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'All Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Orphan Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Orphan Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Draft Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Draft Pages')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//span[@class='aui-search-bar']/span/span/span/input\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@title='Search Pages']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Title Rename\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\\u00ab Back to FrontPage\"),\n\t\t\tselenium.getText(\"//span[@class='header-back-to']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Edit')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Print\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Print')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0 Attachments\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'0 Attachments')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='page-actions']/div[@class='stats']\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[contains(@id,'ratingStarContent')]\", \"Your Rating\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Average (0 Votes)\"),\n\t\t\tselenium.getText(\"//div[contains(@id,'ratingScoreContent')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Comments\"),\n\t\t\tselenium.getText(\"//div[@id='wikiCommentsPanel']/div/div/span\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//fieldset[@class='aui-fieldset add-comment ']/div\",\n\t\t\t\t\"No comments yet.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Be the first.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//fieldset[@class='aui-fieldset add-comment ']/div/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Subscribe to Comments\"),\n\t\t\tselenium.getText(\"//span[@class='subscribe-link']/a/span\"));\n\t}","commit_id":"e7560f35d1dfd3ee1835fb041657cded8f3f9eb7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewWDFrontPageChildPageFormatHTML()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//div[@class='child-pages']/ul/li/a\"));\n\t\tselenium.clickAt(\"//div[@class='child-pages']/ul/li/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Welcome to LIFERAY\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\",\n\t\t\tRuntimeVariables.replace(\"Details\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'FrontPage')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Recent Changes\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Recent Changes')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"All Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'All Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Orphan Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Orphan Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Draft Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Draft Pages')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//span[@class='aui-search-bar']/span/span/span/input\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@title='Search Pages']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\\u00ab Back\"),\n\t\t\tselenium.getText(\"//span[@class='header-back-to']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Content\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[contains(@class,'tabview-list')]/li/span/a[contains(.,'Content')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[contains(@class,'tabview-list')]/li/span/a[contains(.,'Details')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"History\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[contains(@class,'tabview-list')]/li/span/a[contains(.,'History')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Incoming Links\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[contains(@class,'tabview-list')]/li/span/a[contains(.,'Incoming Links')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Outgoing Links\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[contains(@class,'tabview-list')]/li/span/a[contains(.,'Outgoing Links')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Attachments\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[contains(@class,'tabview-list')]/li/span/a[contains(.,'Attachments')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Title\"),\n\t\t\tselenium.getText(\"//tr[1]/th\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//tr[1]/td\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Format\"),\n\t\t\tselenium.getText(\"//tr[2]/th\"));\n\t\tassertEquals(RuntimeVariables.replace(\"HTML\"),\n\t\t\tselenium.getText(\"//tr[2]/td\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Latest Version\"),\n\t\t\tselenium.getText(\"//tr[3]/th\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.0\"),\n\t\t\tselenium.getText(\"//tr[3]/td\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Created By\"),\n\t\t\tselenium.getText(\"//tr[4]/th\"));\n\t\tassertTrue(selenium.isPartialText(\"//tr[4]/td\", \"Joe Bloggs\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Last Changed By\"),\n\t\t\tselenium.getText(\"//tr[5]/th\"));\n\t\tassertTrue(selenium.isPartialText(\"//tr[5]/td\", \"Joe Bloggs\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Attachments\"),\n\t\t\tselenium.getText(\"//tr[6]/th\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0\"),\n\t\t\tselenium.getText(\"//tr[6]/td\"));\n\t\tassertEquals(RuntimeVariables.replace(\"RSS Subscription\"),\n\t\t\tselenium.getText(\"//tr[7]/th\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Atom 1.0 (Opens New Window) RSS 1.0 (Opens New Window) RSS 2.0 (Opens New Window)\"),\n\t\t\tselenium.getText(\"//tr[7]/td\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Email Subscription\"),\n\t\t\tselenium.getText(\"//tr[8]/th\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You are not subscribed to this page. Subscribe You are not subscribed to this wiki. Subscribe\"),\n\t\t\tselenium.getText(\"//tr[8]/td\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Advanced Actions\"),\n\t\t\tselenium.getText(\"//tr[9]/th\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Permissions Copy Move Delete\"),\n\t\t\tselenium.getText(\"//tr[9]/td\"));\n\t}","id":50069,"modified_method":"public void testViewWDFrontPageChildPageFormatHTML()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Display Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//div[@class='child-pages']/h2\", \"Children Pages\");\n\t\tassertEquals(RuntimeVariables.replace(\"Children Pages\"),\n\t\t\tselenium.getText(\"//div[@class='child-pages']/h2\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//div[@class='child-pages']/ul/li/a\"));\n\t\tselenium.clickAt(\"//div[@class='child-pages']/ul/li/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'FrontPage')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Recent Changes\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Recent Changes')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"All Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'All Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Orphan Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Orphan Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Draft Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Draft Pages')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//span[@class='aui-search-bar']/span/span/span/input\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@title='Search Pages']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\\u00ab Back to FrontPage\"),\n\t\t\tselenium.getText(\"//span[@class='header-back-to']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Edit')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Print\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Print')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Welcome to LIFERAY\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0 Attachments\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'0 Attachments')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='page-actions']/div[@class='stats']\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[contains(@id,'ratingStarContent')]\", \"Your Rating\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Average (0 Votes)\"),\n\t\t\tselenium.getText(\"//div[contains(@id,'ratingScoreContent')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Comments\"),\n\t\t\tselenium.getText(\"//div[@id='wikiCommentsPanel']/div/div/span\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//fieldset[@class='aui-fieldset add-comment ']/div\",\n\t\t\t\t\"No comments yet.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Be the first.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//fieldset[@class='aui-fieldset add-comment ']/div/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Subscribe to Comments\"),\n\t\t\tselenium.getText(\"//span[@class='subscribe-link']/a/span\"));\n\t}","commit_id":"e7560f35d1dfd3ee1835fb041657cded8f3f9eb7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewWDFrontPageChildPageIncomingLinksNull()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage1 Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='child-pages']/ul/li/a[contains(.,'Wiki FrontPage ChildPage1 Title')]\"));\n\t\tselenium.clickAt(\"//div[@class='child-pages']/ul/li/a[contains(.,'Wiki FrontPage ChildPage1 Title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage1 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage1 Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage1 Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\",\n\t\t\tRuntimeVariables.replace(\"Details\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Incoming Links\",\n\t\t\tRuntimeVariables.replace(\"Incoming Links\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pages that link to this page.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tassertFalse(selenium.isTextPresent(\"Wiki FrontPage ChildPage2 Title\"));\n\t}","id":50070,"modified_method":"public void testViewWDFrontPageChildPageIncomingLinksNull()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//div[@class='child-pages']/ul/li/a[contains(.,'Wiki FrontPage ChildPage2 Title')]\");\n\t\tselenium.clickAt(\"//div[@class='child-pages']/ul/li/a[contains(.,'Wiki FrontPage ChildPage1 Title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage1 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//h1[@class='header-title']/span\",\n\t\t\t\"Wiki FrontPage ChildPage1 Title\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage1 Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage1 Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\",\n\t\t\tRuntimeVariables.replace(\"Details\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Incoming Links\",\n\t\t\tRuntimeVariables.replace(\"Incoming Links\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pages that link to this page.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tassertFalse(selenium.isTextPresent(\"Wiki FrontPage ChildPage2 Title\"));\n\t}","commit_id":"e7560f35d1dfd3ee1835fb041657cded8f3f9eb7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewWDFrontPageChildPageIncomingLinks()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage1 Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='child-pages']/ul/li/a[contains(.,'Wiki FrontPage ChildPage1 Title')]\"));\n\t\tselenium.clickAt(\"//div[@class='child-pages']/ul/li/a[contains(.,'Wiki FrontPage ChildPage1 Title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage1 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage1 Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage1 Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\",\n\t\t\tRuntimeVariables.replace(\"Details\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Incoming Links\",\n\t\t\tRuntimeVariables.replace(\"Incoming Links\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"There are no pages that link to this page.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage2 Title\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t}","id":50071,"modified_method":"public void testViewWDFrontPageChildPageIncomingLinks()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//div[@class='child-pages']/ul/li/a[contains(.,'Wiki FrontPage ChildPage1 Title')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage1 Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='child-pages']/ul/li/a[contains(.,'Wiki FrontPage ChildPage1 Title')]\"));\n\t\tselenium.clickAt(\"//div[@class='child-pages']/ul/li/a[contains(.,'Wiki FrontPage ChildPage1 Title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage1 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//h1[@class='header-title']/span\",\n\t\t\t\"Wiki FrontPage ChildPage1 Title\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage1 Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage1 Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\",\n\t\t\tRuntimeVariables.replace(\"Details\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Incoming Links\",\n\t\t\tRuntimeVariables.replace(\"Incoming Links\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"There are no pages that link to this page.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage2 Title\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t}","commit_id":"e7560f35d1dfd3ee1835fb041657cded8f3f9eb7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewWDFrontPageChildPageMulitple()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage1 Title\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='child-pages']/ul/li/a)[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage2 Title\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='child-pages']/ul/li/a)[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage3 Title\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='child-pages']/ul/li/a)[3]\"));\n\t\tselenium.clickAt(\"xpath=(//div[@class='child-pages']/ul/li/a)[1]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage1 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'FrontPage')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Recent Changes\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Recent Changes')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"All Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'All Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Orphan Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Orphan Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Draft Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Draft Pages')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//span[@class='aui-search-bar']/span/span/span/input\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@title='Search Pages']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage1 Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\\u00ab Back to FrontPage\"),\n\t\t\tselenium.getText(\"//span[@class='header-back-to']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Edit')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Print\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Print')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage1 Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0 Attachments\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'0 Attachments')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='page-actions']/div[@class='stats']\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[contains(@id,'ratingStarContent')]\", \"Your Rating\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Average (0 Votes)\"),\n\t\t\tselenium.getText(\"//div[contains(@id,'ratingScoreContent')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Comments\"),\n\t\t\tselenium.getText(\"//div[@id='wikiCommentsPanel']/div/div/span\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//fieldset[@class='aui-fieldset add-comment ']/div\",\n\t\t\t\t\"No comments yet.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Be the first.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//fieldset[@class='aui-fieldset add-comment ']/div/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Subscribe to Comments\"),\n\t\t\tselenium.getText(\"//span[@class='subscribe-link']/a/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\\u00ab Back to FrontPage\"),\n\t\t\tselenium.getText(\"//span[@class='header-back-to']/a\"));\n\t\tselenium.clickAt(\"//span[@class='header-back-to']/a\",\n\t\t\tRuntimeVariables.replace(\"\\u00ab Back to FrontPage\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage2 Title\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='child-pages']/ul/li/a)[2]\"));\n\t\tselenium.clickAt(\"xpath=(//div[@class='child-pages']/ul/li/a)[2]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage2 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'FrontPage')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Recent Changes\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Recent Changes')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"All Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'All Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Orphan Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Orphan Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Draft Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Draft Pages')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//span[@class='aui-search-bar']/span/span/span/input\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@title='Search Pages']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage2 Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\\u00ab Back to FrontPage\"),\n\t\t\tselenium.getText(\"//span[@class='header-back-to']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Edit')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Print\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Print')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage2 Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0 Attachments\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'0 Attachments')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='page-actions']/div[@class='stats']\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[contains(@id,'ratingStarContent')]\", \"Your Rating\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Average (0 Votes)\"),\n\t\t\tselenium.getText(\"//div[contains(@id,'ratingScoreContent')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Comments\"),\n\t\t\tselenium.getText(\"//div[@id='wikiCommentsPanel']/div/div/span\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//fieldset[@class='aui-fieldset add-comment ']/div\",\n\t\t\t\t\"No comments yet.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Be the first.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//fieldset[@class='aui-fieldset add-comment ']/div/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Subscribe to Comments\"),\n\t\t\tselenium.getText(\"//span[@class='subscribe-link']/a/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\\u00ab Back to FrontPage\"),\n\t\t\tselenium.getText(\"//span[@class='header-back-to']/a\"));\n\t\tselenium.clickAt(\"//span[@class='header-back-to']/a\",\n\t\t\tRuntimeVariables.replace(\"\\u00ab Back to FrontPage\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage3 Title\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='child-pages']/ul/li/a)[3]\"));\n\t\tselenium.clickAt(\"xpath=(//div[@class='child-pages']/ul/li/a)[3]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage3 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'FrontPage')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Recent Changes\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Recent Changes')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"All Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'All Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Orphan Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Orphan Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Draft Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Draft Pages')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//span[@class='aui-search-bar']/span/span/span/input\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@title='Search Pages']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage3 Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\\u00ab Back to FrontPage\"),\n\t\t\tselenium.getText(\"//span[@class='header-back-to']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Edit')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Print\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Print')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage3 Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0 Attachments\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'0 Attachments')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='page-actions']/div[@class='stats']\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[contains(@id,'ratingStarContent')]\", \"Your Rating\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Average (0 Votes)\"),\n\t\t\tselenium.getText(\"//div[contains(@id,'ratingScoreContent')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Comments\"),\n\t\t\tselenium.getText(\"//div[@id='wikiCommentsPanel']/div/div/span\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//fieldset[@class='aui-fieldset add-comment ']/div\",\n\t\t\t\t\"No comments yet.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Be the first.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//fieldset[@class='aui-fieldset add-comment ']/div/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Subscribe to Comments\"),\n\t\t\tselenium.getText(\"//span[@class='subscribe-link']/a/span\"));\n\t}","id":50072,"modified_method":"public void testViewWDFrontPageChildPageMulitple()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Display Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"xpath=(//div[@class='child-pages']/ul/li/a)[1]\",\n\t\t\t\"Wiki FrontPage ChildPage1 Title\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage1 Title\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='child-pages']/ul/li/a)[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage2 Title\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='child-pages']/ul/li/a)[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage3 Title\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='child-pages']/ul/li/a)[3]\"));\n\t\tselenium.clickAt(\"xpath=(//div[@class='child-pages']/ul/li/a)[1]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage1 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'FrontPage')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Recent Changes\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Recent Changes')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"All Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'All Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Orphan Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Orphan Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Draft Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Draft Pages')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//span[@class='aui-search-bar']/span/span/span/input\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@title='Search Pages']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage1 Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\\u00ab Back to FrontPage\"),\n\t\t\tselenium.getText(\"//span[@class='header-back-to']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Edit')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Print\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Print')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage1 Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0 Attachments\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'0 Attachments')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='page-actions']/div[@class='stats']\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[contains(@id,'ratingStarContent')]\", \"Your Rating\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Average (0 Votes)\"),\n\t\t\tselenium.getText(\"//div[contains(@id,'ratingScoreContent')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Comments\"),\n\t\t\tselenium.getText(\"//div[@id='wikiCommentsPanel']/div/div/span\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//fieldset[@class='aui-fieldset add-comment ']/div\",\n\t\t\t\t\"No comments yet.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Be the first.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//fieldset[@class='aui-fieldset add-comment ']/div/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Subscribe to Comments\"),\n\t\t\tselenium.getText(\"//span[@class='subscribe-link']/a/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\\u00ab Back to FrontPage\"),\n\t\t\tselenium.getText(\"//span[@class='header-back-to']/a\"));\n\t\tselenium.clickAt(\"//span[@class='header-back-to']/a\",\n\t\t\tRuntimeVariables.replace(\"\\u00ab Back to FrontPage\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage2 Title\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='child-pages']/ul/li/a)[2]\"));\n\t\tselenium.clickAt(\"xpath=(//div[@class='child-pages']/ul/li/a)[2]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage2 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'FrontPage')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Recent Changes\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Recent Changes')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"All Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'All Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Orphan Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Orphan Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Draft Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Draft Pages')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//span[@class='aui-search-bar']/span/span/span/input\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@title='Search Pages']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage2 Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\\u00ab Back to FrontPage\"),\n\t\t\tselenium.getText(\"//span[@class='header-back-to']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Edit')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Print\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Print')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage2 Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0 Attachments\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'0 Attachments')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='page-actions']/div[@class='stats']\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[contains(@id,'ratingStarContent')]\", \"Your Rating\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Average (0 Votes)\"),\n\t\t\tselenium.getText(\"//div[contains(@id,'ratingScoreContent')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Comments\"),\n\t\t\tselenium.getText(\"//div[@id='wikiCommentsPanel']/div/div/span\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//fieldset[@class='aui-fieldset add-comment ']/div\",\n\t\t\t\t\"No comments yet.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Be the first.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//fieldset[@class='aui-fieldset add-comment ']/div/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Subscribe to Comments\"),\n\t\t\tselenium.getText(\"//span[@class='subscribe-link']/a/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\\u00ab Back to FrontPage\"),\n\t\t\tselenium.getText(\"//span[@class='header-back-to']/a\"));\n\t\tselenium.clickAt(\"//span[@class='header-back-to']/a\",\n\t\t\tRuntimeVariables.replace(\"\\u00ab Back to FrontPage\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage3 Title\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='child-pages']/ul/li/a)[3]\"));\n\t\tselenium.clickAt(\"xpath=(//div[@class='child-pages']/ul/li/a)[3]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage3 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'FrontPage')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Recent Changes\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Recent Changes')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"All Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'All Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Orphan Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Orphan Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Draft Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Draft Pages')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//span[@class='aui-search-bar']/span/span/span/input\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@title='Search Pages']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage3 Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\\u00ab Back to FrontPage\"),\n\t\t\tselenium.getText(\"//span[@class='header-back-to']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Edit')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Print\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Print')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage3 Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0 Attachments\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'0 Attachments')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='page-actions']/div[@class='stats']\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[contains(@id,'ratingStarContent')]\", \"Your Rating\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Average (0 Votes)\"),\n\t\t\tselenium.getText(\"//div[contains(@id,'ratingScoreContent')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Comments\"),\n\t\t\tselenium.getText(\"//div[@id='wikiCommentsPanel']/div/div/span\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//fieldset[@class='aui-fieldset add-comment ']/div\",\n\t\t\t\t\"No comments yet.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Be the first.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//fieldset[@class='aui-fieldset add-comment ']/div/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Subscribe to Comments\"),\n\t\t\tselenium.getText(\"//span[@class='subscribe-link']/a/span\"));\n\t}","commit_id":"e7560f35d1dfd3ee1835fb041657cded8f3f9eb7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewWDFrontPageChildPageOutgoingLinksNull()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage2 Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='child-pages']/ul/li/a[contains(.,'Wiki FrontPage ChildPage2 Title')]\"));\n\t\tselenium.clickAt(\"//div[@class='child-pages']/ul/li/a[contains(.,'Wiki FrontPage ChildPage2 Title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage2 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage2 Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage2 Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\",\n\t\t\tRuntimeVariables.replace(\"Details\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Outgoing Links\",\n\t\t\tRuntimeVariables.replace(\"Outgoing Links\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"This page has no links.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tassertFalse(selenium.isTextPresent(\"Wiki FrontPage ChildPage1 Title\"));\n\t}","id":50073,"modified_method":"public void testViewWDFrontPageChildPageOutgoingLinksNull()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//div[@class='child-pages']/ul/li/a[contains(.,'Wiki FrontPage ChildPage2 Title')]\");\n\t\tselenium.clickAt(\"//div[@class='child-pages']/ul/li/a[contains(.,'Wiki FrontPage ChildPage2 Title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage2 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//h1[@class='header-title']/span\",\n\t\t\t\"Wiki FrontPage ChildPage2 Title\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage2 Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage2 Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\",\n\t\t\tRuntimeVariables.replace(\"Details\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Outgoing Links\",\n\t\t\tRuntimeVariables.replace(\"Outgoing Links\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"This page has no links.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tassertFalse(selenium.isTextPresent(\"Wiki FrontPage ChildPage1 Title\"));\n\t}","commit_id":"e7560f35d1dfd3ee1835fb041657cded8f3f9eb7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewWDFrontPageChildPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Children Pages\"),\n\t\t\tselenium.getText(\"//div[@class='child-pages']/h2\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//div[@class='child-pages']/ul/li/a\"));\n\t\tselenium.clickAt(\"//div[@class='child-pages']/ul/li/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'FrontPage')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Recent Changes\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Recent Changes')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"All Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'All Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Orphan Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Orphan Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Draft Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Draft Pages')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//span[@class='aui-search-bar']/span/span/span/input\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@title='Search Pages']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\\u00ab Back to FrontPage\"),\n\t\t\tselenium.getText(\"//span[@class='header-back-to']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Edit')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Print\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Print')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0 Attachments\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'0 Attachments')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='page-actions']/div[@class='stats']\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[contains(@id,'ratingStarContent')]\", \"Your Rating\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Average (0 Votes)\"),\n\t\t\tselenium.getText(\"//div[contains(@id,'ratingScoreContent')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Comments\"),\n\t\t\tselenium.getText(\"//div[@id='wikiCommentsPanel']/div/div/span\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//fieldset[@class='aui-fieldset add-comment ']/div\",\n\t\t\t\t\"No comments yet.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Be the first.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//fieldset[@class='aui-fieldset add-comment ']/div/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Subscribe to Comments\"),\n\t\t\tselenium.getText(\"//span[@class='subscribe-link']/a/span\"));\n\t}","id":50074,"modified_method":"public void testViewWDFrontPageChildPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Display Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Children Pages\"),\n\t\t\tselenium.getText(\"//div[@class='child-pages']/h2\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//div[@class='child-pages']/ul/li/a\"));\n\t\tselenium.clickAt(\"//div[@class='child-pages']/ul/li/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'FrontPage')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Recent Changes\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Recent Changes')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"All Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'All Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Orphan Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Orphan Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Draft Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Draft Pages')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//span[@class='aui-search-bar']/span/span/span/input\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@title='Search Pages']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\\u00ab Back to FrontPage\"),\n\t\t\tselenium.getText(\"//span[@class='header-back-to']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Edit')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Print\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Print')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0 Attachments\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'0 Attachments')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='page-actions']/div[@class='stats']\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[contains(@id,'ratingStarContent')]\", \"Your Rating\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Average (0 Votes)\"),\n\t\t\tselenium.getText(\"//div[contains(@id,'ratingScoreContent')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Comments\"),\n\t\t\tselenium.getText(\"//div[@id='wikiCommentsPanel']/div/div/span\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//fieldset[@class='aui-fieldset add-comment ']/div\",\n\t\t\t\t\"No comments yet.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Be the first.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//fieldset[@class='aui-fieldset add-comment ']/div/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Subscribe to Comments\"),\n\t\t\tselenium.getText(\"//span[@class='subscribe-link']/a/span\"));\n\t}","commit_id":"e7560f35d1dfd3ee1835fb041657cded8f3f9eb7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testIgnoreNotificationsAddConnnection()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/user/joebloggs/so/dashboard/\");\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//li[@id='_145_notificationsMenu']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1\"),\n\t\t\tselenium.getText(\"//span[@class='notification-count']\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_notificationsMenu']\");\n\t\tselenium.waitForVisible(\"//div[@class='title']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Social01 Office01 User01 would like to add you as a connection.\"),\n\t\t\tselenium.getText(\"//div[@class='title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Ignore\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='notification-entry']/div[2]/span[2]/a\"));\n\t\tselenium.clickAt(\"//div[@class='notification-entry']/div[2]/span[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Ignore\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//li[@id='_145_notificationsMenu']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0\"),\n\t\t\tselenium.getText(\"//span[@class='notification-count']\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_notificationsMenu']\");\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"Social01 Office01 User01 would like to add you as a connection.\"));\n\t}","id":50075,"modified_method":"public void testIgnoreNotificationsAddConnnection()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/user/joebloggs/so/dashboard/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//li[@id='_145_notificationsMenu']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1\"),\n\t\t\tselenium.getText(\"//span[@class='notification-count']\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_notificationsMenu']\");\n\t\tselenium.waitForVisible(\"//div[@class='title']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Social01 Office01 User01 would like to add you as a connection.\"),\n\t\t\tselenium.getText(\"//div[@class='title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Ignore\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='notification-entry']/div[2]/span[2]/a\"));\n\t\tselenium.clickAt(\"//div[@class='notification-entry']/div[2]/span[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Ignore\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//li[@id='_145_notificationsMenu']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0\"),\n\t\t\tselenium.getText(\"//span[@class='notification-count']\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_notificationsMenu']\");\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"Social01 Office01 User01 would like to add you as a connection.\"));\n\t}","commit_id":"a90a466dad1b5fbee2479a0a8ab3d81d1c650c20","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testIgnoreNotificationsAddConnnection()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/user/joebloggs/so/dashboard/\");\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//li[@id='_145_notificationsMenu']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1\"),\n\t\t\tselenium.getText(\"//span[@class='notification-count']\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_notificationsMenu']\");\n\t\tselenium.waitForVisible(\"//div[@class='title']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Social01 Office01 User01 would like to add you as a connection.\"),\n\t\t\tselenium.getText(\"//div[@class='title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Confirm\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//span[@class='lfr-user-action-item lfr-user-action-confirm']/a\"));\n\t\tselenium.clickAt(\"//span[@class='lfr-user-action-item lfr-user-action-confirm']/a\",\n\t\t\tRuntimeVariables.replace(\"Confirm\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//li[@id='_145_notificationsMenu']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0\"),\n\t\t\tselenium.getText(\"//span[@class='notification-count']\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_notificationsMenu']\");\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"Social01 Office01 User01 would like to add you as a connection.\"));\n\t}","id":50076,"modified_method":"public void testIgnoreNotificationsAddConnnection()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/user/joebloggs/so/dashboard/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//li[@id='_145_notificationsMenu']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1\"),\n\t\t\tselenium.getText(\"//span[@class='notification-count']\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_notificationsMenu']\");\n\t\tselenium.waitForVisible(\"//div[@class='title']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Social01 Office01 User01 would like to add you as a connection.\"),\n\t\t\tselenium.getText(\"//div[@class='title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Ignore\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//span[@class='lfr-user-action-item lfr-user-action-ignore']/a\"));\n\t\tselenium.clickAt(\"//span[@class='lfr-user-action-item lfr-user-action-ignore']/a\",\n\t\t\tRuntimeVariables.replace(\"Ignore\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//li[@id='_145_notificationsMenu']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0\"),\n\t\t\tselenium.getText(\"//span[@class='notification-count']\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_notificationsMenu']\");\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"Social01 Office01 User01 would like to add you as a connection.\"));\n\t}","commit_id":"a90a466dad1b5fbee2479a0a8ab3d81d1c650c20","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n    public boolean isReady() {\n        return ib.isReady();\n    }","id":50077,"modified_method":"@Override\n    public boolean isReady() {\n        ready = Boolean.valueOf(ib.isReady());\n        return ready.booleanValue();\n    }","commit_id":"d754fec74ad84f090f893b9e6d05231d0b6cfaf5","url":"https://github.com/apache/tomcat"},{"original_method":"private void checkNonBlockingRead() {\n        if (ib.isBlocking() && !ib.isReady()) {\n            throw new IllegalStateException(\n                    sm.getString(\"coyoteInputStream.nbNotready\"));\n        }\n    }","id":50078,"modified_method":"private void checkNonBlockingRead() {\n        if (ib.isBlocking() && (ready == null || !ready.booleanValue())) {\n            throw new IllegalStateException(\n                    sm.getString(\"coyoteInputStream.nbNotready\"));\n        }\n        ready = null;\n    }","commit_id":"d754fec74ad84f090f893b9e6d05231d0b6cfaf5","url":"https://github.com/apache/tomcat"},{"original_method":"@Override\n    public boolean isReady() {\n        return ob.isReady();\n    }","id":50079,"modified_method":"@Override\n    public boolean isReady() {\n        ready = Boolean.valueOf(ob.isReady());\n        return ready.booleanValue();\n    }","commit_id":"d754fec74ad84f090f893b9e6d05231d0b6cfaf5","url":"https://github.com/apache/tomcat"},{"original_method":"/**\n     * Checks for concurrent writes which are not permitted. This object has no\n     * state information so the call chain is\n     * CoyoyeOutputStream->OutputBuffer->CoyoteResponse.\n     *\n     * @return <code>true<\/code> if this OutputStream is currently in\n     *         non-blocking mode.\n     */\n    private boolean checkNonBlockingWrite() {\n        boolean nonBlocking = !ob.isBlocking();\n        if (nonBlocking && !ob.isReady()) {\n            throw new IllegalStateException(\n                    sm.getString(\"coyoteOutputStream.nbNotready\"));\n        }\n        return nonBlocking;\n    }","id":50080,"modified_method":"/**\n     * Checks for concurrent writes which are not permitted. This object has no\n     * state information so the call chain is\n     * CoyoyeOutputStream->OutputBuffer->CoyoteResponse.\n     *\n     * @return <code>true<\/code> if this OutputStream is currently in\n     *         non-blocking mode.\n     */\n    private boolean checkNonBlockingWrite() {\n        boolean nonBlocking = !ob.isBlocking();\n        if (nonBlocking && (ready == null || !ready.booleanValue())) {\n            throw new IllegalStateException(\n                    sm.getString(\"coyoteOutputStream.nbNotready\"));\n        }\n        ready = null;\n        return nonBlocking;\n    }","commit_id":"d754fec74ad84f090f893b9e6d05231d0b6cfaf5","url":"https://github.com/apache/tomcat"},{"original_method":"@Override\n    public boolean isReady() {\n        ready = Boolean.valueOf(ib.isReady());\n        return ready.booleanValue();\n    }","id":50081,"modified_method":"@Override\n    public boolean isReady() {\n        return ib.isReady();\n    }","commit_id":"737b8b9c52d78955ce4d4c56b2baca9ae3f4e18e","url":"https://github.com/apache/tomcat"},{"original_method":"private void checkNonBlockingRead() {\n        if (ib.isBlocking() && (ready == null || !ready.booleanValue())) {\n            throw new IllegalStateException(\n                    sm.getString(\"coyoteInputStream.nbNotready\"));\n        }\n        ready = null;\n    }","id":50082,"modified_method":"private void checkNonBlockingRead() {\n        if (ib.isBlocking() && !ib.isReady()) {\n            throw new IllegalStateException(\n                    sm.getString(\"coyoteInputStream.nbNotready\"));\n        }\n    }","commit_id":"737b8b9c52d78955ce4d4c56b2baca9ae3f4e18e","url":"https://github.com/apache/tomcat"},{"original_method":"@Override\n    public boolean isReady() {\n        ready = Boolean.valueOf(ob.isReady());\n        return ready.booleanValue();\n    }","id":50083,"modified_method":"@Override\n    public boolean isReady() {\n        return ob.isReady();\n    }","commit_id":"737b8b9c52d78955ce4d4c56b2baca9ae3f4e18e","url":"https://github.com/apache/tomcat"},{"original_method":"/**\n     * Checks for concurrent writes which are not permitted. This object has no\n     * state information so the call chain is\n     * CoyoyeOutputStream->OutputBuffer->CoyoteResponse.\n     *\n     * @return <code>true<\/code> if this OutputStream is currently in\n     *         non-blocking mode.\n     */\n    private boolean checkNonBlockingWrite() {\n        boolean nonBlocking = !ob.isBlocking();\n        if (nonBlocking && (ready == null || !ready.booleanValue())) {\n            throw new IllegalStateException(\n                    sm.getString(\"coyoteOutputStream.nbNotready\"));\n        }\n        ready = null;\n        return nonBlocking;\n    }","id":50084,"modified_method":"/**\n     * Checks for concurrent writes which are not permitted. This object has no\n     * state information so the call chain is\n     * CoyoyeOutputStream->OutputBuffer->CoyoteResponse.\n     *\n     * @return <code>true<\/code> if this OutputStream is currently in\n     *         non-blocking mode.\n     */\n    private boolean checkNonBlockingWrite() {\n        boolean nonBlocking = !ob.isBlocking();\n        if (nonBlocking && !ob.isReady()) {\n            throw new IllegalStateException(\n                    sm.getString(\"coyoteOutputStream.nbNotready\"));\n        }\n        return nonBlocking;\n    }","commit_id":"737b8b9c52d78955ce4d4c56b2baca9ae3f4e18e","url":"https://github.com/apache/tomcat"},{"original_method":"private static void setupBasic_ConstantCell6968_0(EditorCell editorCell, SNode node, EditorContext context) {\n    editorCell.putUserObject(EditorCell.CELL_ID, node.getId() + \"_ConstantCell6968_0\");\n    BaseLanguageStyle_StyleSheet.BRACKET.apply(editorCell);\n    {\n      Style inlineStyle = new Style(editorCell) {\n        {\n          this.set(StyleAttributes.FIRST_POSITION_ALLOWED, false);\n          this.set(StyleAttributes.PADDING_LEFT, 0.0);\n          this.set(StyleAttributes.PADDING_RIGHT, 0.0);\n        }\n\n      };\n      inlineStyle.apply(editorCell);\n    }\n    ArrayType_Brackets_Actions.setCellActions(editorCell, node, context);\n  }","id":50085,"modified_method":"private static void setupBasic_ConstantCell6968_0(EditorCell editorCell, SNode node, EditorContext context) {\n    editorCell.putUserObject(EditorCell.CELL_ID, node.getId() + \"_ConstantCell6968_0\");\n    BaseLanguageStyle_StyleSheet.BRACKET.apply(editorCell);\n    {\n      Style inlineStyle = new Style(editorCell) {\n        {\n          this.set(StyleAttributes.FIRST_POSITION_ALLOWED, false);\n          this.set(StyleAttributes.PADDING_LEFT, 0.0);\n          this.set(StyleAttributes.PADDING_RIGHT, 0.0);\n        }\n\n      };\n      inlineStyle.apply(editorCell);\n    }\n    if (true) {\n      editorCell.setFocusPolicy(FocusPolicy.ATTRACTS_FOCUS);\n    }\n    ArrayType_Brackets_Actions.setCellActions(editorCell, node, context);\n  }","commit_id":"63f449fb849817702a451fd57f986a5a16ee885c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public boolean processKeyPressed(final EditorContext editorContext, final KeyEvent keyEvent) {\n    editorContext.getNodeEditorComponent().hideMessageToolTip();\n\n    if (keyEvent.isConsumed()) return false;\n\n    AbstractEditorComponent editor = editorContext.getNodeEditorComponent();\n    SNodePointer pointer = editor.getRootCell().getSNodePointer();\n    boolean notEditable = pointer != null &&  pointer.getModel() != null && pointer.getModel().isNotEditable();\n    notEditable = (editorContext.getNodeEditorComponent().isReadOnly() || notEditable);\n\n    if (notEditable) return false;\n\n    EditorCell selectedCell = editor.getSelectedCell();\n\n    if (selectedCell != null) {\n      if (allowCellToProcessEvent(selectedCell, keyEvent, false)) {\n        return true;\n      }\n    }\n\n    // process cell keymaps first\n    if (selectedCell != null) {\n      List<Pair<EditorCellKeyMapAction, EditorCell>> actionsInfo = KeyMapUtil.getKeyMapActionsForEvent(selectedCell, keyEvent, editorContext);\n      if (actionsInfo.size() == 1 && !(actionsInfo.get(0).o1.isMenuAlwaysShown())) {\n        EditorCellKeyMapAction action = actionsInfo.get(0).o1;\n        EditorCell contextCell = actionsInfo.get(0).o2;\n        KeyMapUtil.executeKeyMapAction(action, keyEvent, contextCell, editorContext);\n        return true;\n      } else if (actionsInfo.size() > 1 ||\n        (actionsInfo.size() == 1 && actionsInfo.get(0).o1.isMenuAlwaysShown())) {\n        // show menu\n        EditorUtil.showActionsMenu(actionsInfo, keyEvent, editorContext, selectedCell);\n        return true;\n      }\n    }\n\n    String actionType = editor.getActionType(keyEvent, editorContext);\n\n    // pre-process action\n\n    boolean dontExecuteRT = false;\n\n    if (selectedCell != null) {\n      boolean endEditKeystroke = isEndEditKeystroke(keyEvent);      \n      boolean strictMatching = endEditKeystroke || EditorCellAction.RIGHT_TRANSFORM.equals(actionType);\n\n      if (keyEvent.getModifiers() == KeyEvent.CTRL_MASK && keyEvent.getKeyCode() == KeyEvent.VK_F1) {\n        editorContext.getNodeEditorComponent().showMessageTooltip();\n        return true;\n      }\n\n\n      if (!EditorUtil.isValidCell(selectedCell)) {\n        if (endEditKeystroke ||\n          EditorCellAction.INSERT.equals(actionType) ||\n          EditorCellAction.INSERT_BEFORE.equals(actionType)) {\n          EditorUtil.validateCell(selectedCell, editorContext, strictMatching);\n          return true;\n        }\n\n        if (EditorCellAction.RIGHT_TRANSFORM.equals(actionType)) {\n          // !side effect: can change selection!\n          if (EditorUtil.validateCell(selectedCell, editorContext, strictMatching, true) != 0) {\n            return true;\n          }\n        }\n\n        selectedCell = editor.getSelectedCell();\n        if (selectedCell == null) {\n          return true;\n        }\n      }\n\n      if (EditorCellAction.RIGHT_TRANSFORM.equals(actionType)) {\n        if (selectedCell instanceof EditorCell_Label && selectedCell.isErrorState()) {\n          //return true;\n          dontExecuteRT = true;\n        }\n      }\n    }\n\n    // process action\n\n    if (selectedCell != null) {\n      if (selectedCell instanceof EditorCell_Label && selectedCell.getUserObject(EditorCell.ROLE) == null && (EditorCellAction.INSERT.equals(actionType) || EditorCellAction.INSERT_BEFORE.equals(actionType))) {\n        EditorCell cellWithRole = new ChildrenCollectionFinder(selectedCell, EditorCellAction.INSERT.equals(actionType)).find();\n        if (cellWithRole != null && EditorUtil.executeCellAction(cellWithRole, actionType, editorContext)) {\n          return true;\n        }\n      }\n\n\n      if (actionType != null && !actionType.equals(EditorCellAction.DELETE)) {\n        if (!(EditorCellAction.RIGHT_TRANSFORM.equals(actionType) && dontExecuteRT)) {\n          if (EditorUtil.executeCellAction(selectedCell, actionType, editorContext)) {\n            return true;\n          }\n        }\n      }\n\n      if (!keyEvent.isConsumed()) {        \n        // auto-completion (AKA node substitution)\n        if ((keyEvent.getKeyCode() == KeyEvent.VK_SPACE && keyEvent.isControlDown() && !(keyEvent.isAltDown() || keyEvent.isShiftDown())) ||\n          (keyEvent.getKeyCode() == KeyEvent.VK_ENTER && (!keyEvent.isAltDown()) && !(keyEvent.isControlDown() || keyEvent.isShiftDown()))) {\n          if (editor.activateNodeSubstituteChooser(selectedCell, keyEvent.getKeyCode() == KeyEvent.VK_ENTER)) {\n            LOG.debug(\"SUBSTITUTE\");\n            return true;\n          }\n          LOG.debug(\"NO SUBSTITUTE\");\n        }\n\n        if (editor.getNodeRangeSelection().isSelectionKeystroke(keyEvent)) {\n          if (editor.getNodeRangeSelection().activate(keyEvent)) {\n            return true;\n          }\n        }\n\n        // allow selected cell to process event.\n        if (allowCellToProcessEvent(selectedCell, keyEvent, true)) {\n          return true;\n        }\n      }\n\n      if (EditorCellAction.DELETE.equals(actionType)) {\n        if (EditorUtil.executeCellAction(selectedCell, actionType, editorContext)) {\n          return true;\n        }\n      }\n\n      if (!keyEvent.isConsumed()) {\n        //allow deepest selected cell to process event.\n        EditorCell deepestSelectedCell = editor.getDeepestSelectedCell();\n        if (allowCellToProcessEvent(deepestSelectedCell, keyEvent, true)) {\n          editor.changeSelection(deepestSelectedCell);\n          return true;\n        }\n      }\n    }\n\n    if (actionType != null) {\n      if (editor.executeComponentAction(actionType)) {\n        return true;\n      }\n    }\n\n    // special case - don't allow kbd focus to leave editor area\n    if (keyEvent.getKeyCode() == KeyEvent.VK_UP && keyEvent.isControlDown() && !keyEvent.isAltDown() && !keyEvent.isShiftDown()) {\n      keyEvent.consume();\n    }\n\n    return false;\n  }","id":50086,"modified_method":"public boolean processKeyPressed(final EditorContext editorContext, final KeyEvent keyEvent) {\n    AbstractEditorComponent nodeEditor = editorContext.getNodeEditorComponent();\n    nodeEditor.hideMessageToolTip();\n\n    if (keyEvent.isConsumed()) return false;\n\n    AbstractEditorComponent editor = nodeEditor;\n    SNodePointer pointer = editor.getRootCell().getSNodePointer();\n    boolean notEditable = pointer != null &&  pointer.getModel() != null && pointer.getModel().isNotEditable();\n    notEditable = (nodeEditor.isReadOnly() || notEditable);\n\n    if (notEditable) return false;\n\n    EditorCell selectedCell = editor.getSelectedCell();\n\n    if (selectedCell != null) {\n      if (allowCellToProcessEvent(selectedCell, keyEvent, false)) {\n        return true;\n      }\n    }\n\n    // process cell keymaps first\n    if (selectedCell != null) {\n      List<Pair<EditorCellKeyMapAction, EditorCell>> actionsInfo = KeyMapUtil.getKeyMapActionsForEvent(selectedCell, keyEvent, editorContext);\n      if (actionsInfo.size() == 1 && !(actionsInfo.get(0).o1.isMenuAlwaysShown())) {\n        EditorCellKeyMapAction action = actionsInfo.get(0).o1;\n        EditorCell contextCell = actionsInfo.get(0).o2;\n        KeyMapUtil.executeKeyMapAction(action, keyEvent, contextCell, editorContext);\n        return true;\n      } else if (actionsInfo.size() > 1 ||\n        (actionsInfo.size() == 1 && actionsInfo.get(0).o1.isMenuAlwaysShown())) {\n        // show menu\n        EditorUtil.showActionsMenu(actionsInfo, keyEvent, editorContext, selectedCell);\n        return true;\n      }\n    }\n\n    String actionType = editor.getActionType(keyEvent, editorContext);\n\n    // pre-process action\n\n    boolean dontExecuteRT = false;\n\n    if (selectedCell != null) {\n      boolean endEditKeystroke = isEndEditKeystroke(keyEvent);      \n      boolean strictMatching = endEditKeystroke || EditorCellAction.RIGHT_TRANSFORM.equals(actionType);\n\n      if (keyEvent.getModifiers() == KeyEvent.CTRL_MASK && keyEvent.getKeyCode() == KeyEvent.VK_F1) {\n        nodeEditor.showMessageTooltip();\n        return true;\n      }\n\n\n      if (!EditorUtil.isValidCell(selectedCell)) {\n        if (endEditKeystroke ||\n          EditorCellAction.INSERT.equals(actionType) ||\n          EditorCellAction.INSERT_BEFORE.equals(actionType)) {\n          EditorUtil.validateCell(selectedCell, editorContext, strictMatching);\n          return true;\n        }\n\n        if (EditorCellAction.RIGHT_TRANSFORM.equals(actionType)) {\n          // !side effect: can change selection!\n          if (EditorUtil.validateCell(selectedCell, editorContext, strictMatching, true) != 0) {\n            return true;\n          }\n        }\n\n        selectedCell = editor.getSelectedCell();\n        if (selectedCell == null) {\n          return true;\n        }\n      }\n\n      if (EditorCellAction.RIGHT_TRANSFORM.equals(actionType)) {\n        if (selectedCell instanceof EditorCell_Label && selectedCell.isErrorState()) {\n          //return true;\n          dontExecuteRT = true;\n        }\n      }\n    }\n\n    // process action\n\n    if (selectedCell != null) {\n      if (selectedCell instanceof EditorCell_Label && selectedCell.getUserObject(EditorCell.ROLE) == null && (EditorCellAction.INSERT.equals(actionType) || EditorCellAction.INSERT_BEFORE.equals(actionType))) {\n        EditorCell cellWithRole = new ChildrenCollectionFinder(selectedCell, EditorCellAction.INSERT.equals(actionType)).find();\n        if (cellWithRole != null && EditorUtil.executeCellAction(cellWithRole, actionType, editorContext)) {\n          return true;\n        }\n      }\n\n\n      if (actionType != null && !actionType.equals(EditorCellAction.DELETE)) {\n        if (!(EditorCellAction.RIGHT_TRANSFORM.equals(actionType) && dontExecuteRT)) {\n          if (EditorUtil.executeCellAction(selectedCell, actionType, editorContext)) {\n            return true;\n          }\n        }\n      }\n\n      if (!keyEvent.isConsumed()) {        \n        // auto-completion (AKA node substitution)\n        if ((keyEvent.getKeyCode() == KeyEvent.VK_SPACE && keyEvent.isControlDown() && !(keyEvent.isAltDown() || keyEvent.isShiftDown())) ||\n          (keyEvent.getKeyCode() == KeyEvent.VK_ENTER && (!keyEvent.isAltDown()) && !(keyEvent.isControlDown() || keyEvent.isShiftDown()))) {\n          if (editor.activateNodeSubstituteChooser(selectedCell, keyEvent.getKeyCode() == KeyEvent.VK_ENTER)) {\n            LOG.debug(\"SUBSTITUTE\");\n            return true;\n          }\n          LOG.debug(\"NO SUBSTITUTE\");\n        }\n\n        if (editor.getNodeRangeSelection().isSelectionKeystroke(keyEvent)) {\n          if (editor.getNodeRangeSelection().activate(keyEvent)) {\n            return true;\n          }\n        }\n\n        // allow selected cell to process event.\n        if (allowCellToProcessEvent(selectedCell, keyEvent, true)) {\n          return true;\n        }\n      }\n\n      if (EditorCellAction.DELETE.equals(actionType)) {\n        if (EditorUtil.executeCellAction(selectedCell, actionType, editorContext)) {\n          return true;\n        }\n      }\n\n      if (!keyEvent.isConsumed()) {\n        if (!(selectedCell instanceof EditorCell_Label) && !selectedCell.getSNode().isRoot() && KeyboardUtil.isDefaultAction(keyEvent)) {\n          SNode node = selectedCell.getSNode();\n          LinkDeclaration link = node.getParent().getLinkDeclaration(node.getRole_());\n          AbstractConceptDeclaration concept = link.getTarget();\n          String concreteConceptFqName = ModelConstraintsManager.getInstance().getDefaultConcreteConceptFqName(NameUtil.nodeFQName(concept), editorContext.getScope());\n          SNode newNode = new SNode(node.getModel(), concreteConceptFqName);\n          node.getParent().replaceChild(node, newNode);\n\n          editorContext.flushEvents();\n\n          EditorCell nodeCell = nodeEditor.findNodeCell(newNode);\n          EditorCell_Label editable = EditorUtil.findEditableCell(nodeCell);\n          if (editable != null) {\n            nodeEditor.changeSelection(editable);\n            allowCellToProcessEvent(editable, keyEvent, true);\n          } else {\n            nodeEditor.changeSelection(nodeCell);\n            nodeEditor.activateNodeSubstituteChooser(nodeCell, true);\n            nodeEditor.processKeyPressed(keyEvent);\n          }\n\n          return true;\n        }\n      }\n    }\n\n    if (actionType != null) {\n      if (editor.executeComponentAction(actionType)) {\n        return true;\n      }\n    }\n\n    // special case - don't allow kbd focus to leave editor area\n    if (keyEvent.getKeyCode() == KeyEvent.VK_UP && keyEvent.isControlDown() && !keyEvent.isAltDown() && !keyEvent.isShiftDown()) {\n      keyEvent.consume();\n    }\n\n    return false;\n  }","commit_id":"63f449fb849817702a451fd57f986a5a16ee885c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void modelChangedInCommand(List<SModelEvent> events, EditorContext editorContext) {\n      if (!EventUtil.isDramaticalChange(events)) {\n        myRootCell.updateView();\n        relayout();\n      } else {\n\n        EditorCell selectedCell = editorContext.getNodeEditorComponent().getSelectedCell();\n        String cellId = (String)selectedCell.getUserObject(EditorCell.CELL_ID);\n\n        rebuildEditorContent();\n\n        SModelEvent lastAdd = null;\n        SModelEvent lastRemove = null;\n\n\n        for (SModelEvent e : events) {\n          if (e instanceof SModelChildEvent) {\n            SModelChildEvent ce = (SModelChildEvent) e;\n            if (ce.isAdded()) lastAdd = ce;\n            if (ce.isRemoved()) lastRemove = ce;\n          }\n\n          if (e instanceof SModelReferenceEvent) {\n            SModelReferenceEvent re = (SModelReferenceEvent) e;\n            if (re.isAdded()) lastAdd = re;\n            if (re.isRemoved()) lastRemove = re;\n          }\n        }\n\n        if (lastAdd != null) {\n          if (lastAdd instanceof SModelChildEvent) {\n            SModelChildEvent ce = (SModelChildEvent) lastAdd;\n\n            EditorCell error = findErrorOrEditableCell(findNodeCell(ce.getChild()));\n            if (error == null) {\n              selectNode(ce.getChild());\n            } else {\n              changeSelection(error);\n              if (error instanceof EditorCell_Label && !error.isErrorState()) {\n                ((EditorCell_Label) error).getTextLine().end();\n              }\n            }\n            return;\n          }\n\n          if (lastAdd instanceof SModelReferenceEvent) {\n            SModelReferenceEvent re = (SModelReferenceEvent) lastAdd;\n            //selectNode(re.getReference().getSourceNode());\n            selectRefCell(re.getReference(), cellId);\n            return;\n          }\n\n        }\n\n        if (lastRemove != null) {\n          if (lastRemove instanceof SModelChildEvent) {\n            SModelChildEvent ce = (SModelChildEvent) lastRemove;\n            int index = ce.getChildIndex();\n            String role = ce.getChildRole();\n            SNode parent = ce.getParent();\n\n            if (parent.getChildCount() > index) {\n              SNode child = parent.getChildAt(index);\n              if (child.getRole_().equals(role)) {\n                selectNode(child);\n                return;\n              }\n            }\n\n            if (index != 0) {\n              SNode child = parent.getChildAt(index - 1);\n              if (child.getRole_().equals(role)) {\n                selectNode(child);\n                return;\n              }\n            }\n\n            selectNode(parent);\n            return;\n          }\n\n          if (lastRemove instanceof SModelReferenceEvent) {\n            SModelReferenceEvent re = (SModelReferenceEvent) lastRemove;\n            //selectNode(re.getReference().getSourceNode());\n            selectRefCell(re.getReference(), cellId);\n            return;\n          }\n        }\n      }\n    }","id":50087,"modified_method":"public void modelChangedInCommand(List<SModelEvent> events, EditorContext editorContext) {\n      if (!EventUtil.isDramaticalChange(events)) {\n        myRootCell.updateView();\n        relayout();\n      } else {\n\n        String cellId = null;\n\n        if (editorContext != null) {\n          AbstractEditorComponent nodeEditorComponent = editorContext.getNodeEditorComponent();\n          if (nodeEditorComponent != null) {\n            EditorCell selectedCell = nodeEditorComponent.getSelectedCell();\n            if (selectedCell != null) cellId = (String)selectedCell.getUserObject(EditorCell.CELL_ID);\n          }\n        }\n\n        rebuildEditorContent();\n\n        SModelEvent lastAdd = null;\n        SModelEvent lastRemove = null;\n\n\n        for (SModelEvent e : events) {\n          if (e instanceof SModelChildEvent) {\n            SModelChildEvent ce = (SModelChildEvent) e;\n            if (ce.isAdded()) lastAdd = ce;\n            if (ce.isRemoved()) lastRemove = ce;\n          }\n\n          if (e instanceof SModelReferenceEvent) {\n            SModelReferenceEvent re = (SModelReferenceEvent) e;\n            if (re.isAdded()) lastAdd = re;\n            if (re.isRemoved()) lastRemove = re;\n          }\n        }\n\n        if (lastAdd != null) {\n          if (lastAdd instanceof SModelChildEvent) {\n            SModelChildEvent ce = (SModelChildEvent) lastAdd;\n\n            EditorCell error = findErrorOrEditableCell(findNodeCell(ce.getChild()));\n            if (error == null) {\n              selectNode(ce.getChild());\n            } else {\n              changeSelection(error);\n              if (error instanceof EditorCell_Label && !error.isErrorState()) {\n                ((EditorCell_Label) error).getTextLine().end();\n              }\n            }\n            return;\n          }\n\n          if (lastAdd instanceof SModelReferenceEvent) {\n            SModelReferenceEvent re = (SModelReferenceEvent) lastAdd;\n            //selectNode(re.getReference().getSourceNode());\n            selectRefCell(re.getReference(), cellId);\n            return;\n          }\n\n        }\n\n        if (lastRemove != null) {\n          if (lastRemove instanceof SModelChildEvent) {\n            SModelChildEvent ce = (SModelChildEvent) lastRemove;\n            int index = ce.getChildIndex();\n            String role = ce.getChildRole();\n            SNode parent = ce.getParent();\n\n            if (parent.getChildCount() > index) {\n              SNode child = parent.getChildAt(index);\n              if (child.getRole_().equals(role)) {\n                selectNode(child);\n                return;\n              }\n            }\n\n            if (index != 0) {\n              SNode child = parent.getChildAt(index - 1);\n              if (child.getRole_().equals(role)) {\n                selectNode(child);\n                return;\n              }\n            }\n\n            selectNode(parent);\n            return;\n          }\n\n          if (lastRemove instanceof SModelReferenceEvent) {\n            SModelReferenceEvent re = (SModelReferenceEvent) lastRemove;\n            //selectNode(re.getReference().getSourceNode());\n            selectRefCell(re.getReference(), cellId);\n            return;\n          }\n        }\n      }\n    }","commit_id":"f2687d3c5c5b4c191b998744582182f928cfabbe","url":"https://github.com/JetBrains/MPS"},{"original_method":"public EditorCell createNameCell(EditorContext context, SNode node) {\n    PropertyAccessor propertyAccessor = new PropertyAccessor(node, \"name\", false, false, context);\n    EditorCell_Property editorCell = EditorCell_Property.create(context, propertyAccessor, node);\n    editorCell.setSelectable(true);\n    editorCell.setDrawBorder(false);\n    editorCell.setEditable(true);\n    editorCell.setDefaultText(\"<no name>\");\n    editorCell.setDrawBrackets(false);\n    editorCell.setBracketsColor(Color.black);\n    editorCell.setAction(EditorCellAction.DELETE, new CellAction_DeleteProperty(node, \"name\"));\n    ParameterDeclaration_NameCellActions.setCellActions(editorCell, node, context);\n    editorCell.putUserObject(EditorCell.CELL_ID, \"1075302295737\");\n    return editorCell;\n  }","id":50088,"modified_method":"public EditorCell createNameCell(EditorContext context, SNode node) {\n    PropertyAccessor propertyAccessor = new PropertyAccessor(node, \"name\", false, false, context);\n    EditorCell_Property editorCell = EditorCell_Property.create(context, propertyAccessor, node);\n    editorCell.setSelectable(true);\n    editorCell.setDrawBorder(false);\n    editorCell.setEditable(true);\n    editorCell.setDefaultText(\"<no name>\");\n    editorCell.setDrawBrackets(false);\n    editorCell.setBracketsColor(Color.black);\n    editorCell.setAction(EditorCellAction.DELETE, new CellAction_DeleteProperty(node, \"name\"));\n    ParameterDeclaration_NameCellActions.setCellActions(editorCell, node, context);\n    editorCell.addKeyMap(new _ParameterDeclaration_KeyMap());\n    editorCell.putUserObject(EditorCell.CELL_ID, \"1075302295737\");\n    return editorCell;\n  }","commit_id":"f2687d3c5c5b4c191b998744582182f928cfabbe","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void execute(EditorContext context) {\n      context.getNodeEditorComponent().clearSelectionStack();\n      EditorCell selection = context.getNodeEditorComponent().getSelectedCell();\n      EditorCell target = findTarget(selection);\n      context.getNodeEditorComponent().changeSelection(target);\n      if (target instanceof EditorCell_Label) {\n        ((EditorCell_Label)target).getTextLine().setCaretPosition(0);\n      }\n    }","id":50089,"modified_method":"public void execute(EditorContext context) {\n      context.getNodeEditorComponent().clearSelectionStack();\n      EditorCell selection = context.getNodeEditorComponent().getSelectedCell();\n      EditorCell target = findTarget(selection);\n      context.getNodeEditorComponent().changeSelection(target);\n      if (target instanceof  EditorCell_Punctuation) {\n        ((EditorCell_Label)target).getTextLine().setCaretPosition(1);\n      } else\n      if (target instanceof EditorCell_Label) {\n        ((EditorCell_Label)target).getTextLine().setCaretPosition(0);\n      }\n    }","commit_id":"9c6164e8b9fad0ee8995bb77eeb410ce011a26c0","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void execute(EditorContext context) {\n      context.getNodeEditorComponent().clearSelectionStack();\n      EditorCell selection = context.getNodeEditorComponent().getSelectedCell();\n      EditorCell target = findTarget(selection);\n      context.getNodeEditorComponent().changeSelection(target);\n      if (target instanceof EditorCell_Label) {\n        TextLine textLine = ((EditorCell_Label) target).getTextLine();\n        textLine.setCaretPositionToLast();\n      }\n    }","id":50090,"modified_method":"public void execute(EditorContext context) {\n      AbstractEditorComponent nodeEditorComponent = context.getNodeEditorComponent();\n      nodeEditorComponent.clearSelectionStack();\n      EditorCell selection = nodeEditorComponent.getSelectedCell();\n      EditorCell target = findTarget(selection);\n      nodeEditorComponent.changeSelection(target);\n      if (selection instanceof EditorCell_Punctuation && target instanceof EditorCell_Label) {\n        TextLine textLine = ((EditorCell_Label) target).getTextLine();\n        int textLength = textLine.getText().length();\n        if (textLength > 0) {\n          textLine.setCaretPosition(textLength -1);\n        } else {\n          if (this.canExecute(context)) this.execute(context);\n        }\n      } else\n      if (target instanceof EditorCell_Label) {\n        TextLine textLine = ((EditorCell_Label) target).getTextLine();\n        textLine.setCaretPositionToLast();\n      }\n    }","commit_id":"9c6164e8b9fad0ee8995bb77eeb410ce011a26c0","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n\tprotected long getActivitySetId(long activityId) {\n\t\ttry {\n\t\t\tSocialActivity activity =\n\t\t\t\tSocialActivityLocalServiceUtil.getActivity(activityId);\n\n\t\t\tif ((activity.getType() == _ACTIVITY_KEY_ADD_COMMENT) ||\n\t\t\t\t(activity.getType() ==\n\t\t\t\t\tSocialActivityConstants.TYPE_ADD_COMMENT)) {\n\n\t\t\t\tSocialActivitySet activitySet =\n\t\t\t\t\tSocialActivitySetLocalServiceUtil.getClassActivitySet(\n\t\t\t\t\t\tactivity.getClassNameId(), activity.getClassPK(),\n\t\t\t\t\t\tactivity.getType());\n\n\t\t\t\tif ((activitySet != null) && !isExpired(activitySet)) {\n\t\t\t\t\treturn activitySet.getActivitySetId();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (activity.getType() == _ACTIVITY_KEY_UPDATE_ENTRY) {\n\t\t\t\tSocialActivitySet activitySet =\n\t\t\t\t\tSocialActivitySetLocalServiceUtil.getClassActivitySet(\n\t\t\t\t\t\tactivity.getUserId(), activity.getClassNameId(),\n\t\t\t\t\t\tactivity.getClassPK(), activity.getType());\n\n\t\t\t\tif ((activitySet != null) && !isExpired(activitySet)) {\n\t\t\t\t\treturn activitySet.getActivitySetId();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t}\n\n\t\treturn 0;\n\t}","id":50091,"modified_method":"@Override\n\tprotected long getActivitySetId(long activityId) {\n\t\ttry {\n\t\t\tSocialActivity activity =\n\t\t\t\tSocialActivityLocalServiceUtil.getActivity(activityId);\n\n\t\t\tSocialActivitySet activitySet = null;\n\n\t\t\tif ((activity.getType() == _ACTIVITY_KEY_ADD_COMMENT) ||\n\t\t\t\t(activity.getType() == _ACTIVITY_KEY_ADD_ENTRY) ||\n\t\t\t\t(activity.getType() ==\n\t\t\t\t\tSocialActivityConstants.TYPE_ADD_COMMENT)) {\n\n\t\t\t\tactivitySet =\n\t\t\t\t\tSocialActivitySetLocalServiceUtil.getUserActivitySet(\n\t\t\t\t\t\tactivity.getGroupId(), activity.getUserId(),\n\t\t\t\t\t\tactivity.getClassNameId(), activity.getType());\n\t\t\t}\n\t\t\telse if (activity.getType() == _ACTIVITY_KEY_UPDATE_ENTRY) {\n\t\t\t\tactivitySet =\n\t\t\t\t\tSocialActivitySetLocalServiceUtil.getClassActivitySet(\n\t\t\t\t\t\tactivity.getUserId(), activity.getClassNameId(),\n\t\t\t\t\t\tactivity.getClassPK(), activity.getType());\n\t\t\t}\n\n\t\t\tif ((activitySet != null) && !isExpired(activitySet)) {\n\t\t\t\treturn activitySet.getActivitySetId();\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t}\n\n\t\treturn 0;\n\t}","commit_id":"ff98eff4a9790d631b396185edda7469d6c4bf05","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"@Override\n\tprotected long getActivitySetId(long activityId) {\n\t\ttry {\n\t\t\tSocialActivity activity =\n\t\t\t\tSocialActivityLocalServiceUtil.getActivity(activityId);\n\n\t\t\tif (activity.getType() == _ACTIVITY_KEY_UPDATE_ENTRY) {\n\t\t\t\tSocialActivitySet activitySet =\n\t\t\t\t\tSocialActivitySetLocalServiceUtil.getClassActivitySet(\n\t\t\t\t\t\tactivity.getUserId(), activity.getClassNameId(),\n\t\t\t\t\t\tactivity.getClassPK(), activity.getType());\n\n\t\t\t\tif ((activitySet != null) && !isExpired(activitySet)) {\n\t\t\t\t\treturn activitySet.getActivitySetId();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t}\n\n\t\treturn 0;\n\t}","id":50092,"modified_method":"@Override\n\tprotected long getActivitySetId(long activityId) {\n\t\ttry {\n\t\t\tSocialActivity activity =\n\t\t\t\tSocialActivityLocalServiceUtil.getActivity(activityId);\n\n\t\t\tSocialActivitySet activitySet = null;\n\n\t\t\tif (activity.getType() == _ACTIVITY_KEY_ADD_ENTRY) {\n\t\t\t\tactivitySet =\n\t\t\t\t\tSocialActivitySetLocalServiceUtil.getUserActivitySet(\n\t\t\t\t\t\tactivity.getGroupId(), activity.getUserId(),\n\t\t\t\t\t\tactivity.getClassNameId(), activity.getType());\n\t\t\t}\n\t\t\telse if (activity.getType() == _ACTIVITY_KEY_UPDATE_ENTRY) {\n\t\t\t\tactivitySet =\n\t\t\t\t\tSocialActivitySetLocalServiceUtil.getClassActivitySet(\n\t\t\t\t\t\tactivity.getUserId(), activity.getClassNameId(),\n\t\t\t\t\t\tactivity.getClassPK(), activity.getType());\n\t\t\t}\n\n\t\t\tif ((activitySet != null) && !isExpired(activitySet)) {\n\t\t\t\treturn activitySet.getActivitySetId();\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t}\n\n\t\treturn 0;\n\t}","commit_id":"ff98eff4a9790d631b396185edda7469d6c4bf05","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"@Override\n\tprotected long getActivitySetId(long activityId) {\n\t\ttry {\n\t\t\tSocialActivity activity =\n\t\t\t\tSocialActivityLocalServiceUtil.getActivity(activityId);\n\n\t\t\tif (activity.getType() == _ACTIVITY_KEY_UPDATE_EVENT) {\n\t\t\t\tSocialActivitySet activitySet =\n\t\t\t\t\tSocialActivitySetLocalServiceUtil.getClassActivitySet(\n\t\t\t\t\t\tactivity.getUserId(), activity.getClassNameId(),\n\t\t\t\t\t\tactivity.getClassPK(), activity.getType());\n\n\t\t\t\tif ((activitySet != null) && !isExpired(activitySet)) {\n\t\t\t\t\treturn activitySet.getActivitySetId();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t}\n\n\t\treturn 0;\n\t}","id":50093,"modified_method":"@Override\n\tprotected long getActivitySetId(long activityId) {\n\t\ttry {\n\t\t\tSocialActivity activity =\n\t\t\t\tSocialActivityLocalServiceUtil.getActivity(activityId);\n\n\t\t\tSocialActivitySet activitySet = null;\n\n\t\t\tif (activity.getType() == _ACTIVITY_KEY_ADD_EVENT) {\n\t\t\t\tactivitySet =\n\t\t\t\t\tSocialActivitySetLocalServiceUtil.getUserActivitySet(\n\t\t\t\t\t\tactivity.getGroupId(), activity.getUserId(),\n\t\t\t\t\t\tactivity.getClassNameId(), activity.getType());\n\t\t\t}\n\t\t\telse if (activity.getType() == _ACTIVITY_KEY_UPDATE_EVENT) {\n\t\t\t\tactivitySet =\n\t\t\t\t\tSocialActivitySetLocalServiceUtil.getClassActivitySet(\n\t\t\t\t\t\tactivity.getUserId(), activity.getClassNameId(),\n\t\t\t\t\t\tactivity.getClassPK(), activity.getType());\n\t\t\t}\n\n\t\t\tif ((activitySet != null) && !isExpired(activitySet)) {\n\t\t\t\treturn activitySet.getActivitySetId();\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t}\n\n\t\treturn 0;\n\t}","commit_id":"ff98eff4a9790d631b396185edda7469d6c4bf05","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"@Override\n\tprotected long getActivitySetId(long activityId) {\n\t\ttry {\n\t\t\tSocialActivity activity =\n\t\t\t\tSocialActivityLocalServiceUtil.getActivity(activityId);\n\n\t\t\tif (activity.getType() == _ACTIVITY_KEY_ADD_FILE_ENTRY) {\n\t\t\t\tSocialActivitySet activitySet =\n\t\t\t\t\tSocialActivitySetLocalServiceUtil.getUserActivitySet(\n\t\t\t\t\t\tactivity.getGroupId(), activity.getUserId(),\n\t\t\t\t\t\tactivity.getType());\n\n\t\t\t\tif ((activitySet != null) && !isExpired(activitySet)) {\n\t\t\t\t\treturn activitySet.getActivitySetId();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (activity.getType() == _ACTIVITY_KEY_UPDATE_FILE_ENTRY) {\n\t\t\t\tSocialActivitySet activitySet =\n\t\t\t\t\tSocialActivitySetLocalServiceUtil.getClassActivitySet(\n\t\t\t\t\t\tactivity.getUserId(), activity.getClassNameId(),\n\t\t\t\t\t\tactivity.getClassPK(), activity.getType());\n\n\t\t\t\tif ((activitySet != null) && !isExpired(activitySet)) {\n\t\t\t\t\treturn activitySet.getActivitySetId();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t}\n\n\t\treturn 0;\n\t}","id":50094,"modified_method":"@Override\n\tprotected long getActivitySetId(long activityId) {\n\t\ttry {\n\t\t\tSocialActivity activity =\n\t\t\t\tSocialActivityLocalServiceUtil.getActivity(activityId);\n\n\t\t\tSocialActivitySet activitySet = null;\n\n\t\t\tif (activity.getType() == _ACTIVITY_KEY_ADD_FILE_ENTRY) {\n\t\t\t\tactivitySet =\n\t\t\t\t\tSocialActivitySetLocalServiceUtil.getUserActivitySet(\n\t\t\t\t\t\tactivity.getGroupId(), activity.getUserId(),\n\t\t\t\t\t\tactivity.getClassNameId(), activity.getType());\n\t\t\t}\n\t\t\telse if (activity.getType() == _ACTIVITY_KEY_UPDATE_FILE_ENTRY) {\n\t\t\t\tactivitySet =\n\t\t\t\t\tSocialActivitySetLocalServiceUtil.getClassActivitySet(\n\t\t\t\t\t\tactivity.getUserId(), activity.getClassNameId(),\n\t\t\t\t\t\tactivity.getClassPK(), activity.getType());\n\t\t\t}\n\n\t\t\tif ((activitySet != null) && !isExpired(activitySet)) {\n\t\t\t\treturn activitySet.getActivitySetId();\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t}\n\n\t\treturn 0;\n\t}","commit_id":"ff98eff4a9790d631b396185edda7469d6c4bf05","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"@Override\n\tprotected long getActivitySetId(long activityId) {\n\t\ttry {\n\t\t\tSocialActivity activity =\n\t\t\t\tSocialActivityLocalServiceUtil.getActivity(activityId);\n\n\t\t\tif (((activity.getType() == _ACTIVITY_KEY_ADD_MESSAGE) &&\n\t\t\t\t (activity.getReceiverUserId() > 0)) ||\n\t\t\t\t(activity.getType() == _ACTIVITY_KEY_REPLY_MESSAGE)) {\n\n\t\t\t\tSocialActivitySet activitySet =\n\t\t\t\t\tSocialActivitySetLocalServiceUtil.getClassActivitySet(\n\t\t\t\t\t\tactivity.getUserId(), activity.getClassNameId(),\n\t\t\t\t\t\tactivity.getClassPK(), activity.getType());\n\n\t\t\t\tif ((activitySet != null) && !isExpired(activitySet)) {\n\t\t\t\t\treturn activitySet.getActivitySetId();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t}\n\n\t\treturn 0;\n\t}","id":50095,"modified_method":"@Override\n\tprotected long getActivitySetId(long activityId) {\n\t\ttry {\n\t\t\tSocialActivity activity =\n\t\t\t\tSocialActivityLocalServiceUtil.getActivity(activityId);\n\n\t\t\tint activityType = activity.getType();\n\n\t\t\tif ((activity.getType() == _ACTIVITY_KEY_ADD_MESSAGE) &&\n\t\t\t\t(activity.getReceiverUserId() > 0)) {\n\n\t\t\t\tactivityType = _ACTIVITY_KEY_REPLY_MESSAGE;\n\t\t\t}\n\n\t\t\tSocialActivitySet activitySet = null;\n\n\t\t\tif ((activityType == _ACTIVITY_KEY_ADD_MESSAGE) ||\n\t\t\t\t(activityType == _ACTIVITY_KEY_REPLY_MESSAGE)) {\n\n\t\t\t\tactivitySet =\n\t\t\t\t\tSocialActivitySetLocalServiceUtil.getUserActivitySet(\n\t\t\t\t\t\tactivity.getGroupId(), activity.getUserId(),\n\t\t\t\t\t\tactivity.getClassNameId(), activityType);\n\t\t\t}\n\n\t\t\tif ((activitySet != null) && !isExpired(activitySet)) {\n\t\t\t\treturn activitySet.getActivitySetId();\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t}\n\n\t\treturn 0;\n\t}","commit_id":"ff98eff4a9790d631b396185edda7469d6c4bf05","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"@Override\n\tprotected long getActivitySetId(long activityId) {\n\t\ttry {\n\t\t\tSocialActivity activity =\n\t\t\t\tSocialActivityLocalServiceUtil.getActivity(activityId);\n\n\t\t\tif (activity.getType() == _ACTIVITY_KEY_ADD_COMMENT) {\n\t\t\t\tSocialActivitySet activitySet =\n\t\t\t\t\tSocialActivitySetLocalServiceUtil.getClassActivitySet(\n\t\t\t\t\t\tactivity.getClassNameId(), activity.getClassPK(),\n\t\t\t\t\t\tactivity.getType());\n\n\t\t\t\tif ((activitySet != null) && !isExpired(activitySet)) {\n\t\t\t\t\treturn activitySet.getActivitySetId();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (activity.getType() == _ACTIVITY_KEY_UPDATE_PAGE) {\n\t\t\t\tSocialActivitySet activitySet =\n\t\t\t\t\tSocialActivitySetLocalServiceUtil.getClassActivitySet(\n\t\t\t\t\t\tactivity.getUserId(), activity.getClassNameId(),\n\t\t\t\t\t\tactivity.getClassPK(), activity.getType());\n\n\t\t\t\tif ((activitySet != null) && !isExpired(activitySet)) {\n\t\t\t\t\treturn activitySet.getActivitySetId();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t}\n\n\t\treturn 0;\n\t}","id":50096,"modified_method":"@Override\n\tprotected long getActivitySetId(long activityId) {\n\t\ttry {\n\t\t\tSocialActivity activity =\n\t\t\t\tSocialActivityLocalServiceUtil.getActivity(activityId);\n\n\t\t\tSocialActivitySet activitySet = null;\n\n\t\t\tif ((activity.getType() == _ACTIVITY_KEY_ADD_COMMENT) ||\n\t\t\t\t(activity.getType() == _ACTIVITY_KEY_ADD_PAGE) ||\n\t\t\t\t(activity.getType() ==\n\t\t\t\t\tSocialActivityConstants.TYPE_ADD_COMMENT)) {\n\n\t\t\t\tactivitySet =\n\t\t\t\t\tSocialActivitySetLocalServiceUtil.getUserActivitySet(\n\t\t\t\t\t\tactivity.getGroupId(), activity.getUserId(),\n\t\t\t\t\t\tactivity.getClassNameId(), activity.getType());\n\t\t\t}\n\t\t\telse if (activity.getType() == _ACTIVITY_KEY_UPDATE_PAGE) {\n\t\t\t\tactivitySet =\n\t\t\t\t\tSocialActivitySetLocalServiceUtil.getClassActivitySet(\n\t\t\t\t\t\tactivity.getUserId(), activity.getClassNameId(),\n\t\t\t\t\t\tactivity.getClassPK(), activity.getType());\n\t\t\t}\n\n\t\t\tif ((activitySet != null) && !isExpired(activitySet)) {\n\t\t\t\treturn activitySet.getActivitySetId();\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t}\n\n\t\treturn 0;\n\t}","commit_id":"944fff16f8fd328d5079ed2af683ecad7f9e8248","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"/**\n     * wait for all pending packets to be acked. Then shutdown thread.\n     */\n    @Override\n    public synchronized void close() {\n      while (running && ackQueue.size() != 0 && datanode.shouldRun) {\n        try {\n          wait();\n        } catch (InterruptedException e) {\n          running = false;\n          Thread.currentThread().interrupt();\n        }\n      }\n      if(LOG.isDebugEnabled()) {\n        LOG.debug(myString + \": closing\");\n      }\n      running = false;\n      notifyAll();\n    }","id":50097,"modified_method":"/**\n     * wait for all pending packets to be acked. Then shutdown thread.\n     */\n    @Override\n    public synchronized void close() {\n      while (isRunning() && ackQueue.size() != 0) {\n        try {\n          wait();\n        } catch (InterruptedException e) {\n          running = false;\n          Thread.currentThread().interrupt();\n        }\n      }\n      if(LOG.isDebugEnabled()) {\n        LOG.debug(myString + \": closing\");\n      }\n      running = false;\n      notifyAll();\n    }","commit_id":"7e56bfe40589a1aa9b5ef20b342e421823cd0592","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n     * Thread to process incoming acks.\n     * @see java.lang.Runnable#run()\n     */\n    @Override\n    public void run() {\n      boolean lastPacketInBlock = false;\n      final long startTime = ClientTraceLog.isInfoEnabled() ? System.nanoTime() : 0;\n      while (running && datanode.shouldRun && !lastPacketInBlock) {\n\n        long totalAckTimeNanos = 0;\n        boolean isInterrupted = false;\n        try {\n            Packet pkt = null;\n            long expected = -2;\n            PipelineAck ack = new PipelineAck();\n            long seqno = PipelineAck.UNKOWN_SEQNO;\n            long ackRecvNanoTime = 0;\n            try {\n              if (type != PacketResponderType.LAST_IN_PIPELINE\n                  && !mirrorError) {\n                // read an ack from downstream datanode\n                ack.readFields(downstreamIn);\n                ackRecvNanoTime = System.nanoTime();\n                if (LOG.isDebugEnabled()) {\n                  LOG.debug(myString + \" got \" + ack);\n                }\n                seqno = ack.getSeqno();\n              }\n              if (seqno != PipelineAck.UNKOWN_SEQNO\n                  || type == PacketResponderType.LAST_IN_PIPELINE) {\n                synchronized (this) {\n                  while (running && datanode.shouldRun && ackQueue.size() == 0) {\n                    if (LOG.isDebugEnabled()) {\n                      LOG.debug(myString + \": seqno=\" + seqno +\n                                \" waiting for local datanode to finish write.\");\n                    }\n                    wait();\n                  }\n                  if (!running || !datanode.shouldRun) {\n                    break;\n                  }\n                  pkt = ackQueue.getFirst();\n                  expected = pkt.seqno;\n                  if (type == PacketResponderType.HAS_DOWNSTREAM_IN_PIPELINE\n                      && seqno != expected) {\n                    throw new IOException(myString + \"seqno: expected=\"\n                        + expected + \", received=\" + seqno);\n                  }\n                  if (type == PacketResponderType.HAS_DOWNSTREAM_IN_PIPELINE) {\n                    // The total ack time includes the ack times of downstream nodes.\n                    // The value is 0 if this responder doesn't have a downstream\n                    // DN in the pipeline.\n                    totalAckTimeNanos = ackRecvNanoTime - pkt.ackEnqueueNanoTime;\n                    // Report the elapsed time from ack send to ack receive minus\n                    // the downstream ack time.\n                    long ackTimeNanos = totalAckTimeNanos - ack.getDownstreamAckTimeNanos();\n                    if (ackTimeNanos < 0) {\n                      if (LOG.isDebugEnabled()) {\n                        LOG.debug(\"Calculated invalid ack time: \" + ackTimeNanos + \"ns.\");\n                      }\n                    } else {\n                      datanode.metrics.addPacketAckRoundTripTimeNanos(ackTimeNanos);\n                    }\n                  }\n                  lastPacketInBlock = pkt.lastPacketInBlock;\n                }\n              }\n            } catch (InterruptedException ine) {\n              isInterrupted = true;\n            } catch (IOException ioe) {\n              if (Thread.interrupted()) {\n                isInterrupted = true;\n              } else {\n                // continue to run even if can not read from mirror\n                // notify client of the error\n                // and wait for the client to shut down the pipeline\n                mirrorError = true;\n                LOG.info(myString, ioe);\n              }\n            }\n\n            if (Thread.interrupted() || isInterrupted) {\n              /* The receiver thread cancelled this thread. \n               * We could also check any other status updates from the \n               * receiver thread (e.g. if it is ok to write to replyOut). \n               * It is prudent to not send any more status back to the client\n               * because this datanode has a problem. The upstream datanode\n               * will detect that this datanode is bad, and rightly so.\n               */\n              LOG.info(myString + \": Thread is interrupted.\");\n              running = false;\n              continue;\n            }\n            \n            // If this is the last packet in block, then close block\n            // file and finalize the block before responding success\n            if (lastPacketInBlock) {\n              BlockReceiver.this.close();\n              final long endTime = ClientTraceLog.isInfoEnabled() ? System.nanoTime() : 0;\n              block.setNumBytes(replicaInfo.getNumBytes());\n              datanode.data.finalizeBlock(block);\n              datanode.closeBlock(block, DataNode.EMPTY_DEL_HINT);\n              if (ClientTraceLog.isInfoEnabled() && isClient) {\n                long offset = 0;\n                DatanodeRegistration dnR = \n                  datanode.getDNRegistrationForBP(block.getBlockPoolId());\n                ClientTraceLog.info(String.format(DN_CLIENTTRACE_FORMAT,\n                      inAddr, myAddr, block.getNumBytes(),\n                      \"HDFS_WRITE\", clientname, offset,\n                      dnR.getStorageID(), block, endTime-startTime));\n              } else {\n                LOG.info(\"Received \" + block + \" size \"\n                    + block.getNumBytes() + \" from \" + inAddr);\n              }\n            }\n\n            // construct my ack message\n            Status[] replies = null;\n            if (mirrorError) { // ack read error\n              replies = new Status[2];\n              replies[0] = Status.SUCCESS;\n              replies[1] = Status.ERROR;\n            } else {\n              short ackLen = type == PacketResponderType.LAST_IN_PIPELINE? 0\n                  : ack.getNumOfReplies();\n              replies = new Status[1+ackLen];\n              replies[0] = Status.SUCCESS;\n              for (int i=0; i<ackLen; i++) {\n                replies[i+1] = ack.getReply(i);\n              }\n            }\n            PipelineAck replyAck = new PipelineAck(expected, replies, totalAckTimeNanos);\n            \n            if (replyAck.isSuccess() && \n                 pkt.offsetInBlock > replicaInfo.getBytesAcked())\n                replicaInfo.setBytesAcked(pkt.offsetInBlock);\n\n            // send my ack back to upstream datanode\n            replyAck.write(upstreamOut);\n            upstreamOut.flush();\n            if (LOG.isDebugEnabled()) {\n              LOG.debug(myString + \", replyAck=\" + replyAck);\n            }\n            if (pkt != null) {\n              // remove the packet from the ack queue\n              removeAckHead();\n              // update bytes acked\n            }\n        } catch (IOException e) {\n          LOG.warn(\"IOException in BlockReceiver.run(): \", e);\n          if (running) {\n            try {\n              datanode.checkDiskError(e); // may throw an exception here\n            } catch (IOException ioe) {\n              LOG.warn(\"DataNode.checkDiskError failed in run() with: \", ioe);\n            }\n            LOG.info(myString, e);\n            running = false;\n            if (!Thread.interrupted()) { // failure not caused by interruption\n              receiverThread.interrupt();\n            }\n          }\n        } catch (Throwable e) {\n          if (running) {\n            LOG.info(myString, e);\n            running = false;\n            receiverThread.interrupt();\n          }\n        }\n      }\n      LOG.info(myString + \" terminating\");\n    }","id":50098,"modified_method":"/**\n     * Thread to process incoming acks.\n     * @see java.lang.Runnable#run()\n     */\n    @Override\n    public void run() {\n      boolean lastPacketInBlock = false;\n      final long startTime = ClientTraceLog.isInfoEnabled() ? System.nanoTime() : 0;\n      while (isRunning() && !lastPacketInBlock) {\n        long totalAckTimeNanos = 0;\n        boolean isInterrupted = false;\n        try {\n          Packet pkt = null;\n          long expected = -2;\n          PipelineAck ack = new PipelineAck();\n          long seqno = PipelineAck.UNKOWN_SEQNO;\n          long ackRecvNanoTime = 0;\n          try {\n            if (type != PacketResponderType.LAST_IN_PIPELINE && !mirrorError) {\n              // read an ack from downstream datanode\n              ack.readFields(downstreamIn);\n              ackRecvNanoTime = System.nanoTime();\n              if (LOG.isDebugEnabled()) {\n                LOG.debug(myString + \" got \" + ack);\n              }\n              seqno = ack.getSeqno();\n            }\n            if (seqno != PipelineAck.UNKOWN_SEQNO\n                || type == PacketResponderType.LAST_IN_PIPELINE) {\n              pkt = waitForAckHead(seqno);\n              if (!isRunning()) {\n                break;\n              }\n              expected = pkt.seqno;\n              if (type == PacketResponderType.HAS_DOWNSTREAM_IN_PIPELINE\n                  && seqno != expected) {\n                throw new IOException(myString + \"seqno: expected=\" + expected\n                    + \", received=\" + seqno);\n              }\n              if (type == PacketResponderType.HAS_DOWNSTREAM_IN_PIPELINE) {\n                // The total ack time includes the ack times of downstream\n                // nodes.\n                // The value is 0 if this responder doesn't have a downstream\n                // DN in the pipeline.\n                totalAckTimeNanos = ackRecvNanoTime - pkt.ackEnqueueNanoTime;\n                // Report the elapsed time from ack send to ack receive minus\n                // the downstream ack time.\n                long ackTimeNanos = totalAckTimeNanos\n                    - ack.getDownstreamAckTimeNanos();\n                if (ackTimeNanos < 0) {\n                  if (LOG.isDebugEnabled()) {\n                    LOG.debug(\"Calculated invalid ack time: \" + ackTimeNanos\n                        + \"ns.\");\n                  }\n                } else {\n                  datanode.metrics.addPacketAckRoundTripTimeNanos(ackTimeNanos);\n                }\n              }\n              lastPacketInBlock = pkt.lastPacketInBlock;\n            }\n          } catch (InterruptedException ine) {\n            isInterrupted = true;\n          } catch (IOException ioe) {\n            if (Thread.interrupted()) {\n              isInterrupted = true;\n            } else {\n              // continue to run even if can not read from mirror\n              // notify client of the error\n              // and wait for the client to shut down the pipeline\n              mirrorError = true;\n              LOG.info(myString, ioe);\n            }\n          }\n\n          if (Thread.interrupted() || isInterrupted) {\n            /*\n             * The receiver thread cancelled this thread. We could also check\n             * any other status updates from the receiver thread (e.g. if it is\n             * ok to write to replyOut). It is prudent to not send any more\n             * status back to the client because this datanode has a problem.\n             * The upstream datanode will detect that this datanode is bad, and\n             * rightly so.\n             */\n            LOG.info(myString + \": Thread is interrupted.\");\n            running = false;\n            continue;\n          }\n\n          if (lastPacketInBlock) {\n            // Finalize the block and close the block file\n            finalizeBlock(startTime);\n          }\n\n          sendAckUpstream(ack, expected, totalAckTimeNanos,\n              (pkt != null ? pkt.offsetInBlock : 0));\n          if (pkt != null) {\n            // remove the packet from the ack queue\n            removeAckHead();\n          }\n        } catch (IOException e) {\n          LOG.warn(\"IOException in BlockReceiver.run(): \", e);\n          if (running) {\n            try {\n              datanode.checkDiskError(e); // may throw an exception here\n            } catch (IOException ioe) {\n              LOG.warn(\"DataNode.checkDiskError failed in run() with: \", ioe);\n            }\n            LOG.info(myString, e);\n            running = false;\n            if (!Thread.interrupted()) { // failure not caused by interruption\n              receiverThread.interrupt();\n            }\n          }\n        } catch (Throwable e) {\n          if (running) {\n            LOG.info(myString, e);\n            running = false;\n            receiverThread.interrupt();\n          }\n        }\n      }\n      LOG.info(myString + \" terminating\");\n    }","commit_id":"7e56bfe40589a1aa9b5ef20b342e421823cd0592","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n     * enqueue the seqno that is still be to acked by the downstream datanode.\n     * @param seqno\n     * @param lastPacketInBlock\n     * @param offsetInBlock\n     */\n    synchronized void enqueue(final long seqno,\n        final boolean lastPacketInBlock, final long offsetInBlock) {\n      if (running) {\n        final Packet p = new Packet(seqno, lastPacketInBlock, offsetInBlock,\n            System.nanoTime());\n        if(LOG.isDebugEnabled()) {\n          LOG.debug(myString + \": enqueue \" + p);\n        }\n        ackQueue.addLast(p);\n        notifyAll();\n      }\n    }","id":50099,"modified_method":"/**\n     * enqueue the seqno that is still be to acked by the downstream datanode.\n     * @param seqno\n     * @param lastPacketInBlock\n     * @param offsetInBlock\n     */\n    void enqueue(final long seqno, final boolean lastPacketInBlock,\n        final long offsetInBlock) {\n      final Packet p = new Packet(seqno, lastPacketInBlock, offsetInBlock,\n          System.nanoTime());\n      if(LOG.isDebugEnabled()) {\n        LOG.debug(myString + \": enqueue \" + p);\n      }\n      synchronized(this) {\n        if (running) {\n          ackQueue.addLast(p);\n          notifyAll();\n        }\n      }\n    }","commit_id":"7e56bfe40589a1aa9b5ef20b342e421823cd0592","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n   * Convert a checksum byte array to a long\n   */\n  static private long checksum2long(byte[] checksum) {\n    long crc = 0L;\n    for(int i=0; i<checksum.length; i++) {\n      crc |= (0xffL&(long)checksum[i])<<((checksum.length-i-1)*8);\n    }\n    return crc;\n  }","id":50100,"modified_method":"/**\n   * Convert a checksum byte array to a long\n   */\n  static private long checksum2long(byte[] checksum) {\n    long crc = 0L;\n    for(int i=0; i<checksum.length; i++) {\n      crc |= (0xffL&checksum[i])<<((checksum.length-i-1)*8);\n    }\n    return crc;\n  }","commit_id":"7e56bfe40589a1aa9b5ef20b342e421823cd0592","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n     * For datagrams the entire message is available as a single ByteBuffer so lets just pass those around by default\n     * and try converting whatever they payload is into ByteBuffers unless some custom converter is specified\n     */\n    protected void configureDataGramCodecFactory(IoServiceConfig config, Map parameters) {\n\n        ProtocolCodecFactory codecFactory = getCodecFactory(parameters);\n        if (codecFactory == null) {\n            codecFactory = new ProtocolCodecFactory() {\n                public ProtocolEncoder getEncoder() throws Exception {\n                    return new ProtocolEncoder() {\n                        public void encode(IoSession session, Object message, ProtocolEncoderOutput out) throws Exception {\n                            ByteBuffer buf = toByteBuffer(message);\n                            buf.flip();\n                            out.write(buf);\n                        }\n\n                        public void dispose(IoSession session) throws Exception {\n                        }\n                    };\n                }\n\n                public ProtocolDecoder getDecoder() throws Exception {\n                    return new ProtocolDecoder() {\n                        public void decode(IoSession session, ByteBuffer in, ProtocolDecoderOutput out) throws Exception {\n                            // must acquire the bytebuffer since we just pass it below instead of creating a new one (CAMEL-257)\n                            in.acquire();\n\n                            // lets just pass the ByteBuffer in\n                            out.write(in);\n                        }\n\n                        public void finishDecode(IoSession session, ProtocolDecoderOutput out) throws Exception {\n                        }\n\n                        public void dispose(IoSession session) throws Exception {\n                        }\n                    };\n                }\n            };\n\n            // set the encoder used for this datagram codec factory\n            Charset encoding = getEncodingParameter(parameters);\n            encoder = encoding.newEncoder();\n\n            LOG.debug(\"Using CodecFactory: \" + codecFactory + \" using encoding: \" + encoding);\n        }\n\n        addCodecFactory(config, codecFactory);\n    }","id":50101,"modified_method":"/**\n     * For datagrams the entire message is available as a single ByteBuffer so lets just pass those around by default\n     * and try converting whatever they payload is into ByteBuffers unless some custom converter is specified\n     */\n    protected void configureDataGramCodecFactory(String type, IoServiceConfig config, Map parameters) {\n        ProtocolCodecFactory codecFactory = getCodecFactory(type, parameters);\n        if (codecFactory == null) {\n            codecFactory = new ProtocolCodecFactory() {\n                public ProtocolEncoder getEncoder() throws Exception {\n                    return new ProtocolEncoder() {\n                        public void encode(IoSession session, Object message, ProtocolEncoderOutput out) throws Exception {\n                            ByteBuffer buf = toByteBuffer(message);\n                            buf.flip();\n                            out.write(buf);\n                        }\n\n                        public void dispose(IoSession session) throws Exception {\n                        }\n                    };\n                }\n\n                public ProtocolDecoder getDecoder() throws Exception {\n                    return new ProtocolDecoder() {\n                        public void decode(IoSession session, ByteBuffer in, ProtocolDecoderOutput out) throws Exception {\n                            // must acquire the bytebuffer since we just pass it below instead of creating a new one (CAMEL-257)\n                            in.acquire();\n\n                            // lets just pass the ByteBuffer in\n                            out.write(in);\n                        }\n\n                        public void finishDecode(IoSession session, ProtocolDecoderOutput out) throws Exception {\n                        }\n\n                        public void dispose(IoSession session) throws Exception {\n                        }\n                    };\n                }\n            };\n\n            // set the encoder used for this datagram codec factory\n            Charset encoding = getEncodingParameter(type, parameters);\n            encoder = encoding.newEncoder();\n\n            if (LOG.isDebugEnabled()) {\n                LOG.debug(type + \": Using CodecFactory: \" + codecFactory + \" using encoding: \" + encoding);\n            }\n        }\n\n        addCodecFactory(config, codecFactory);\n    }","commit_id":"eec3534c950c80af56e3fa18445e87ea632985d2","url":"https://github.com/apache/camel"},{"original_method":"protected MinaEndpoint createSocketEndpoint(String uri, URI connectUri, Map parameters) {\n        IoAcceptor acceptor = new SocketAcceptor();\n        SocketAddress address = new InetSocketAddress(connectUri.getHost(), connectUri.getPort());\n        IoConnector connector = new SocketConnector();\n\n        // connector config\n        SocketConnectorConfig connectorConfig = new SocketConnectorConfig();\n        configureSocketCodecFactory(connectorConfig, parameters);\n        connectorConfig.getFilterChain().addLast(\"logger\", new LoggingFilter());\n\n        // acceptor connectorConfig\n        SocketAcceptorConfig acceptorConfig = new SocketAcceptorConfig();\n        configureSocketCodecFactory(acceptorConfig, parameters);\n        acceptorConfig.setReuseAddress(true);\n        acceptorConfig.setDisconnectOnUnbind(true);\n        acceptorConfig.getFilterChain().addLast(\"logger\", new LoggingFilter());\n\n        boolean lazySessionCreation = ObjectConverter.toBool(parameters.get(\"lazySessionCreation\"));\n        long timeout = getTimeoutParameter(parameters);\n        boolean transferExchange = ObjectConverter.toBool(parameters.get(\"transferExchange\"));\n\n        MinaEndpoint endpoint = new MinaEndpoint(uri, this, address, acceptor, acceptorConfig, connector, connectorConfig, lazySessionCreation, timeout, transferExchange);\n\n        boolean sync = ObjectConverter.toBool(parameters.get(\"sync\"));\n        if (sync) {\n            endpoint.setExchangePattern(ExchangePattern.InOut);\n        } else {\n            endpoint.setExchangePattern(ExchangePattern.InOnly);\n        }\n\n        return endpoint;\n    }","id":50102,"modified_method":"protected MinaEndpoint createSocketEndpoint(String uri, URI connectUri, Map parameters) {\n        IoAcceptor acceptor = new SocketAcceptor();\n        SocketAddress address = new InetSocketAddress(connectUri.getHost(), connectUri.getPort());\n        IoConnector connector = new SocketConnector();\n\n        boolean lazySessionCreation = ObjectConverter.toBool(parameters.get(\"lazySessionCreation\"));\n        long timeout = getTimeoutParameter(parameters);\n        boolean transferExchange = ObjectConverter.toBool(parameters.get(\"transferExchange\"));\n        boolean sync = ObjectConverter.toBool(parameters.get(\"sync\"));\n        boolean minaLogger = ObjectConverter.toBool(parameters.get(\"minaLogger\"));\n\n        // connector config\n        SocketConnectorConfig connectorConfig = new SocketConnectorConfig();\n        configureSocketCodecFactory(\"MinaProducer\", connectorConfig, parameters);\n        if (minaLogger) {\n            connectorConfig.getFilterChain().addLast(\"logger\", new LoggingFilter());\n        }\n        // TODO: CAMEL-396 override connector timeout to either default or timeout provided by end user: connectorConfig.setConnectTimeout(); \n\n        // acceptor connectorConfig\n        SocketAcceptorConfig acceptorConfig = new SocketAcceptorConfig();\n        configureSocketCodecFactory(\"MinaConsumer\", acceptorConfig, parameters);\n        acceptorConfig.setReuseAddress(true);\n        acceptorConfig.setDisconnectOnUnbind(true);\n        if (minaLogger) {\n            acceptorConfig.getFilterChain().addLast(\"logger\", new LoggingFilter());\n        }\n\n        MinaEndpoint endpoint = new MinaEndpoint(uri, this, address, acceptor, acceptorConfig, connector, connectorConfig, lazySessionCreation, timeout, transferExchange);\n\n        // set sync or async mode after endpoint is created\n        if (sync) {\n            endpoint.setExchangePattern(ExchangePattern.InOut);\n        } else {\n            endpoint.setExchangePattern(ExchangePattern.InOnly);\n        }\n\n        return endpoint;\n    }","commit_id":"eec3534c950c80af56e3fa18445e87ea632985d2","url":"https://github.com/apache/camel"},{"original_method":"private Charset getEncodingParameter(Map parameters) {\n        String encoding = (String) parameters.get(\"encoding\");\n        if (encoding == null) {\n            encoding = Charset.defaultCharset().name();\n            LOG.debug(\"No encoding parameter using default charset: \" + encoding);\n        }\n        if (!Charset.isSupported(encoding)) {\n            throw new IllegalArgumentException(\"The encoding: \" + encoding + \" is not supported\");\n        }\n\n        return Charset.forName(encoding);\n    }","id":50103,"modified_method":"private Charset getEncodingParameter(String type, Map parameters) {\n        String encoding = (String) parameters.get(\"encoding\");\n        if (encoding == null) {\n            encoding = Charset.defaultCharset().name();\n            if (LOG.isDebugEnabled()) {\n                LOG.debug(type + \": No encoding parameter using default charset: \" + encoding);\n            }\n        }\n        if (!Charset.isSupported(encoding)) {\n            throw new IllegalArgumentException(\"The encoding: \" + encoding + \" is not supported\");\n        }\n\n        return Charset.forName(encoding);\n    }","commit_id":"eec3534c950c80af56e3fa18445e87ea632985d2","url":"https://github.com/apache/camel"},{"original_method":"protected void configureSocketCodecFactory(IoServiceConfig config, Map parameters) {\n        ProtocolCodecFactory codecFactory = getCodecFactory(parameters);\n\n        if (codecFactory == null) {\n            boolean textline = ObjectConverter.toBool(parameters.get(\"textline\"));\n            if (textline) {\n                Charset encoding = getEncodingParameter(parameters);\n                codecFactory = new TextLineCodecFactory(encoding);\n                LOG.debug(\"Using TextLineCodecFactory: \" + codecFactory + \" using encoding: \" + encoding);\n            }\n            else {\n                codecFactory = new ObjectSerializationCodecFactory();\n                LOG.debug(\"Using ObjectSerializationCodecFactory: \" + codecFactory);\n            }\n        }\n\n        addCodecFactory(config, codecFactory);\n    }","id":50104,"modified_method":"protected void configureSocketCodecFactory(String type, IoServiceConfig config, Map parameters) {\n        ProtocolCodecFactory codecFactory = getCodecFactory(type, parameters);\n\n        if (codecFactory == null) {\n            boolean textline = ObjectConverter.toBool(parameters.get(\"textline\"));\n            if (textline) {\n                Charset encoding = getEncodingParameter(type, parameters);\n                codecFactory = new TextLineCodecFactory(encoding);\n                if (LOG.isDebugEnabled()) {\n                    LOG.debug(type + \": Using TextLineCodecFactory: \" + codecFactory + \" using encoding: \" + encoding);\n                }\n            }\n            else {\n                codecFactory = new ObjectSerializationCodecFactory();\n                if (LOG.isDebugEnabled()) {\n                    LOG.debug(type + \": Using ObjectSerializationCodecFactory: \" + codecFactory);\n                }\n            }\n        }\n\n        addCodecFactory(config, codecFactory);\n    }","commit_id":"eec3534c950c80af56e3fa18445e87ea632985d2","url":"https://github.com/apache/camel"},{"original_method":"protected ByteBuffer toByteBuffer(Object message) throws CharacterCodingException {\n        ByteBuffer answer = convertTo(ByteBuffer.class, message);\n        if (answer == null) {\n            String value = convertTo(String.class, message);\n            answer = ByteBuffer.allocate(value.length()).setAutoExpand(true);\n\n            if (value != null) {\n                answer.putString(value, encoder);\n            }\n        }\n        return answer;\n    }","id":50105,"modified_method":"protected ByteBuffer toByteBuffer(Object message) throws CharacterCodingException {\n        ByteBuffer answer = convertTo(ByteBuffer.class, message);\n        if (answer == null) {\n            String value = convertTo(String.class, message);\n            answer = ByteBuffer.allocate(value.length()).setAutoExpand(true);\n            answer.putString(value, encoder);\n        }\n        return answer;\n    }","commit_id":"eec3534c950c80af56e3fa18445e87ea632985d2","url":"https://github.com/apache/camel"},{"original_method":"protected ProtocolCodecFactory getCodecFactory(Map parameters) {\n        ProtocolCodecFactory codecFactory = null;\n        String codec = (String) parameters.get(\"codec\");\n        if (codec != null) {\n            codecFactory = getCamelContext().getRegistry().lookup(codec, ProtocolCodecFactory.class);\n            LOG.debug(\"Using custom CodecFactory: \" + codecFactory);\n        }\n        return codecFactory;\n    }","id":50106,"modified_method":"protected ProtocolCodecFactory getCodecFactory(String type, Map parameters) {\n        ProtocolCodecFactory codecFactory = null;\n        String codec = (String) parameters.get(\"codec\");\n        if (codec != null) {\n            codecFactory = getCamelContext().getRegistry().lookup(codec, ProtocolCodecFactory.class);\n            if (LOG.isDebugEnabled()) {\n                LOG.debug(type + \": Using custom CodecFactory: \" + codecFactory);\n            }\n        }\n        return codecFactory;\n    }","commit_id":"eec3534c950c80af56e3fa18445e87ea632985d2","url":"https://github.com/apache/camel"},{"original_method":"@Override\n    protected Endpoint<MinaExchange> createEndpoint(String uri, String remaining, Map parameters) throws Exception {\n        URI u = new URI(remaining);\n\n        String protocol = u.getScheme();\n        if (protocol.equals(\"tcp\")) {\n            return createSocketEndpoint(uri, u, parameters);\n        }\n        else if (protocol.equals(\"udp\") || protocol.equals(\"mcast\") || protocol.equals(\"multicast\")) {\n            return createDatagramEndpoint(uri, u, parameters);\n        }\n        else if (protocol.equals(\"vm\")) {\n            return createVmEndpoint(uri, u);\n        }\n        else {\n            throw new IllegalArgumentException(\"Unrecognised MINA protocol: \" + protocol + \" for uri: \" + uri);\n        }\n    }","id":50107,"modified_method":"@Override\n    protected Endpoint<MinaExchange> createEndpoint(String uri, String remaining, Map parameters) throws Exception {\n        if (LOG.isDebugEnabled()) {\n            LOG.debug(\"Creating MinaEndpoint from uri: \" + uri);\n        }\n\n        URI u = new URI(remaining);\n\n        String protocol = u.getScheme();\n        // if mistyped uri then protocol can be null\n        if (protocol != null) {\n            if (protocol.equals(\"tcp\")) {\n                return createSocketEndpoint(uri, u, parameters);\n            }\n            else if (protocol.equals(\"udp\") || protocol.equals(\"mcast\") || protocol.equals(\"multicast\")) {\n                return createDatagramEndpoint(uri, u, parameters);\n            }\n            else if (protocol.equals(\"vm\")) {\n                return createVmEndpoint(uri, u);\n            }\n        }\n        // protocol not resolved so error\n        throw new IllegalArgumentException(\"Unrecognised MINA protocol: \" + protocol + \" for uri: \" + uri);\n    }","commit_id":"eec3534c950c80af56e3fa18445e87ea632985d2","url":"https://github.com/apache/camel"},{"original_method":"protected MinaEndpoint createDatagramEndpoint(String uri, URI connectUri, Map parameters) {\n        IoAcceptor acceptor = new DatagramAcceptor();\n        SocketAddress address = new InetSocketAddress(connectUri.getHost(), connectUri.getPort());\n        IoConnector connector = new DatagramConnector();\n\n        DatagramConnectorConfig connectorConfig = new DatagramConnectorConfig();\n        configureDataGramCodecFactory(connectorConfig, parameters);\n        connectorConfig.getFilterChain().addLast(\"logger\", new LoggingFilter());\n\n        DatagramAcceptorConfig acceptorConfig = new DatagramAcceptorConfig();\n        configureDataGramCodecFactory(acceptorConfig, parameters);\n        acceptorConfig.setDisconnectOnUnbind(true);\n        // reuse address is default true for datagram\n        acceptorConfig.getFilterChain().addLast(\"logger\", new LoggingFilter());\n\n        boolean lazySessionCreation = ObjectConverter.toBool(parameters.get(\"lazySessionCreation\"));\n        long timeout = getTimeoutParameter(parameters);\n        boolean transferExchange = false; // transfer exchange is not supported for datagram protocol\n\n        MinaEndpoint endpoint = new MinaEndpoint(uri, this, address, acceptor, acceptorConfig, connector, connectorConfig, lazySessionCreation, timeout, transferExchange);\n\n        boolean sync = ObjectConverter.toBool(parameters.get(\"sync\"));\n        if (sync) {\n            endpoint.setExchangePattern(ExchangePattern.InOut);\n        } else {\n            endpoint.setExchangePattern(ExchangePattern.InOnly);\n        }\n\n        return endpoint;\n    }","id":50108,"modified_method":"protected MinaEndpoint createDatagramEndpoint(String uri, URI connectUri, Map parameters) {\n        IoAcceptor acceptor = new DatagramAcceptor();\n        SocketAddress address = new InetSocketAddress(connectUri.getHost(), connectUri.getPort());\n        IoConnector connector = new DatagramConnector();\n\n        boolean lazySessionCreation = ObjectConverter.toBool(parameters.get(\"lazySessionCreation\"));\n        long timeout = getTimeoutParameter(parameters);\n        boolean transferExchange = false; // transfer exchange is not supported for datagram protocol\n        boolean sync = ObjectConverter.toBool(parameters.get(\"sync\"));\n        boolean minaLogger = ObjectConverter.toBool(parameters.get(\"minaLogger\"));\n\n        DatagramConnectorConfig connectorConfig = new DatagramConnectorConfig();\n        configureDataGramCodecFactory(\"MinaProducer\", connectorConfig, parameters);\n        if (minaLogger) {\n            connectorConfig.getFilterChain().addLast(\"logger\", new LoggingFilter());\n        }\n        // TODO: CAMEL-396 override connector timeout to either default or timeout provided by end user: connectorConfig.setConnectTimeout();\n\n        DatagramAcceptorConfig acceptorConfig = new DatagramAcceptorConfig();\n        configureDataGramCodecFactory(\"MinaConsumer\", acceptorConfig, parameters);\n        acceptorConfig.setDisconnectOnUnbind(true);\n        // reuse address is default true for datagram\n        if (minaLogger) {\n            acceptorConfig.getFilterChain().addLast(\"logger\", new LoggingFilter());\n        }\n\n        MinaEndpoint endpoint = new MinaEndpoint(uri, this, address, acceptor, acceptorConfig, connector, connectorConfig, lazySessionCreation, timeout, transferExchange);\n\n        // set sync or async mode after endpoint is created\n        if (sync) {\n            endpoint.setExchangePattern(ExchangePattern.InOut);\n        } else {\n            endpoint.setExchangePattern(ExchangePattern.InOnly);\n        }\n\n        return endpoint;\n    }","commit_id":"eec3534c950c80af56e3fa18445e87ea632985d2","url":"https://github.com/apache/camel"},{"original_method":"public MinaConsumer(final MinaEndpoint endpoint, Processor processor) {\n        super(endpoint, processor);\n        this.endpoint = endpoint;\n        address = endpoint.getAddress();\n        acceptor = endpoint.getAcceptor();\n    }","id":50109,"modified_method":"public MinaConsumer(final MinaEndpoint endpoint, Processor processor) {\n        super(endpoint, processor);\n        this.endpoint = endpoint;\n        this.address = endpoint.getAddress();\n        this.acceptor = endpoint.getAcceptor();\n    }","commit_id":"eec3534c950c80af56e3fa18445e87ea632985d2","url":"https://github.com/apache/camel"},{"original_method":"@Override\n    protected void doStart() throws Exception {\n\n        if (LOG.isDebugEnabled()) {\n            LOG.debug(\"Binding to server address: \" + address + \" using acceptor: \" + acceptor);\n        }\n\n        IoHandler handler = new IoHandlerAdapter() {\n\n            @Override\n            public void exceptionCaught(IoSession session, Throwable cause) throws Exception {\n                // close invalid session\n                if (session != null) {\n                    LOG.debug(\"Closing session as an exception was thrown from MINA\");\n                    session.close();\n                }\n\n                // must wrap and rethrow since cause can be of Throwable and we must only throw Exception\n                throw new CamelException(cause);\n            }\n\n            @Override\n            public void messageReceived(IoSession session, Object object) throws Exception {\n                if (LOG.isDebugEnabled()) {\n                    LOG.debug(\"Received body: \" + object);\n                }\n\n                MinaExchange exchange = endpoint.createExchange(session, object);\n                getProcessor().process(exchange);\n\n                if (ExchangeHelper.isOutCapable(exchange)) {\n                    Object body = MinaPayloadHelper.getOut(endpoint, exchange);\n                    boolean failed = exchange.isFailed();\n\n                    if (failed) {\n                        // can not write a response since the exchange is failed and we don't know in what state the\n                        // in/out messages are in so the session is closed\n                        LOG.warn(\"Can not write body since the exchange is failed, closing session: \" + exchange);\n                        session.close();\n                    } else if (body == null) {\n                        // must close session if no data to write otherwise client will never receive a response\n                        // and wait forever (if not timing out)\n                        LOG.warn(\"Can not write body since its null, closing session: \" + exchange);\n                        session.close();\n                    } else {\n                        // we got a response to write\n                        if (LOG.isDebugEnabled()) {\n                            LOG.debug(\"Writing body: \" + body);\n                        }\n                        session.write(body);\n                    }\n                } else {\n                    if (LOG.isDebugEnabled()) {\n                        LOG.debug(\"Can not write body since this exchange is not out capable: \" + exchange);\n                    }\n                }\n            }\n        };\n\n        acceptor.bind(address, handler, endpoint.getAcceptorConfig());\n    }","id":50110,"modified_method":"@Override\n    protected void doStart() throws Exception {\n        super.doStart();\n        if (LOG.isDebugEnabled()) {\n            LOG.debug(\"Binding to server address: \" + address + \" using acceptor: \" + acceptor);\n        }\n\n        IoHandler handler = new ReceiveHandler();\n        acceptor.bind(address, handler, endpoint.getAcceptorConfig());\n    }","commit_id":"eec3534c950c80af56e3fa18445e87ea632985d2","url":"https://github.com/apache/camel"},{"original_method":"private void openConnection() {\n        SocketAddress address = endpoint.getAddress();\n        IoConnector connector = endpoint.getConnector();\n        if (LOG.isDebugEnabled()) {\n            LOG.debug(\"Creating connector to address: \" + address + \" using connector: \" + connector + \" timeout: \" + timeout + \" millis.\");\n        }\n        IoHandler ioHandler = new ResponseHandler(endpoint);\n        ConnectFuture future = connector.connect(address, ioHandler, endpoint.getConnectorConfig());\n        future.join();\n        session = future.getSession();\n    }","id":50111,"modified_method":"private void openConnection() {\n        SocketAddress address = endpoint.getAddress();\n        connector = endpoint.getConnector();\n        if (LOG.isDebugEnabled()) {\n            LOG.debug(\"Creating connector to address: \" + address + \" using connector: \" + connector + \" timeout: \" + timeout + \" millis.\");\n        }\n        IoHandler ioHandler = new ResponseHandler(endpoint);\n        // connect and wait until the connection is established\n        ConnectFuture future = connector.connect(address, ioHandler, endpoint.getConnectorConfig());\n        future.join();\n        session = future.getSession();\n    }","commit_id":"eec3534c950c80af56e3fa18445e87ea632985d2","url":"https://github.com/apache/camel"},{"original_method":"@Override\n    protected void doStop() throws Exception {\n        if (session != null) {\n            session.close().join(2000);\n        }\n    }","id":50112,"modified_method":"@Override\n    protected void doStop() throws Exception {\n        if (LOG.isDebugEnabled()) {\n            LOG.debug(\"Stopping connector: \" + connector + \" at address: \" + endpoint.getAddress());\n        }\n\n        if (connector instanceof SocketConnector) {\n            // Change the worker timeout to 0 second to make the I/O thread quit soon when there's no connection to manage.\n            // Default worker timeout is 60 sec and therefore the client using MinaProducer can not terminate the JVM\n            // asap but must wait for the timeout to happend, so to speed this up we set the timeout to 0.\n            if (LOG.isDebugEnabled()) {\n                LOG.debug(\"Setting SocketConnector WorkerTimeout=0 to force MINA stopping its resources faster\");\n            }\n            ((SocketConnector) connector).setWorkerTimeout(0);\n        }\n\n        if (session != null) {\n            session.close();\n        }\n        \n        super.doStop();\n    }","commit_id":"eec3534c950c80af56e3fa18445e87ea632985d2","url":"https://github.com/apache/camel"},{"original_method":"public void process(Exchange exchange) throws Exception {\n        if (session == null && !lazySessionCreation) {\n            throw new IllegalStateException(\"Not started yet!\");\n        }\n        if (session == null || !session.isConnected()) {\n            openConnection();\n        }\n\n        Object body = MinaPayloadHelper.getIn(endpoint, exchange);\n        if (body == null) {\n            LOG.warn(\"No payload for exchange: \" + exchange);\n        } else {\n            if (ExchangeHelper.isOutCapable(exchange)) {\n                if (LOG.isDebugEnabled()) {\n                    LOG.debug(\"Writing body: \" + body);\n                }\n\n                // write the body\n                latch = new CountDownLatch(1);\n                WriteFuture future = session.write(body);\n                future.join();\n                if (!future.isWritten()) {\n                    throw new ExchangeTimedOutException(exchange, timeout);\n                }\n\n                // wait for response, consider timeout\n                latch.await(timeout, TimeUnit.MILLISECONDS);\n                if (latch.getCount() == 1) {\n                    throw new ExchangeTimedOutException(exchange, timeout);\n                }\n\n                // did we get a response\n                ResponseHandler handler = (ResponseHandler) session.getHandler();\n                if (handler.getCause() != null) {\n                    throw new CamelException(\"Response Handler had an exception\", handler.getCause());\n                } else {\n                    if (LOG.isDebugEnabled()) {\n                        LOG.debug(\"Handler message: \" + handler.getMessage());\n                    }\n                    MinaPayloadHelper.setOut(exchange, handler.getMessage());\n                }\n            } else {\n                session.write(body);\n            }\n        }\n    }","id":50113,"modified_method":"public void process(Exchange exchange) throws Exception {\n        if (session == null && !lazySessionCreation) {\n            throw new IllegalStateException(\"Not started yet!\");\n        }\n        if (session == null || !session.isConnected()) {\n            openConnection();\n        }\n\n        Object body = MinaPayloadHelper.getIn(endpoint, exchange);\n        if (body == null) {\n            LOG.warn(\"No payload to send for exchange: \" + exchange);\n            return; // exit early since nothing to write\n        }\n\n        // if sync is true then we should also wait for a response (synchronous mode)\n        sync = ExchangeHelper.isOutCapable(exchange);\n        if (sync) {\n            // only initialize latch if we should get a response\n            latch = new CountDownLatch(1);\n        }\n        // write the body\n        if (LOG.isDebugEnabled()) {\n            LOG.debug(\"Writing body: \" + body);\n        }\n        MinaHelper.writeBody(session, body, exchange);\n\n        if (sync) {\n            // wait for response, consider timeout\n            LOG.debug(\"Waiting for response\");\n            latch.await(timeout, TimeUnit.MILLISECONDS);\n            if (latch.getCount() == 1) {\n                throw new ExchangeTimedOutException(exchange, timeout);\n            }\n\n            // did we get a response\n            ResponseHandler handler = (ResponseHandler) session.getHandler();\n            if (handler.getCause() != null) {\n                throw new CamelException(\"Response Handler had an exception\", handler.getCause());\n            } else {\n                MinaPayloadHelper.setOut(exchange, handler.getMessage());\n            }\n        }\n    }","commit_id":"eec3534c950c80af56e3fa18445e87ea632985d2","url":"https://github.com/apache/camel"},{"original_method":"@Override\n        public void sessionClosed(IoSession session) throws Exception {\n            if (LOG.isDebugEnabled()) {\n                LOG.debug(\"Session closed\");\n            }\n\n            if (message == null) {\n                // session was closed but no message received. This is because the remote server had an internal error\n                // and could not return a proper response. We should count down to stop waiting for a response\n                countDown();\n            }\n        }","id":50114,"modified_method":"@Override\n        public void sessionClosed(IoSession session) throws Exception {\n            if (sync && message == null) {\n                // sync=true (InOut mode) so we expected a message as reply but did not get one before the session is closed\n                if (LOG.isDebugEnabled()) {\n                    LOG.debug(\"Session closed but no message received from address: \" + this.endpoint.getAddress());\n                }\n                // session was closed but no message received. This could be because the remote server had an internal error\n                // and could not return a response. We should count down to stop waiting for a response\n                countDown();\n            }\n        }","commit_id":"eec3534c950c80af56e3fa18445e87ea632985d2","url":"https://github.com/apache/camel"},{"original_method":"@Override\n        public void exceptionCaught(IoSession ioSession, Throwable cause) {\n            LOG.error(\"Exception on receiving message from address: \" + this.endpoint.getAddress()\n                    + \" using connector: \" + this.endpoint.getConnector(), cause);\n            this.message = null;\n            this.cause = cause;\n            if (ioSession != null) {\n                ioSession.close();\n            }\n            countDown();\n        }","id":50115,"modified_method":"@Override\n        public void exceptionCaught(IoSession ioSession, Throwable cause) {\n            LOG.error(\"Exception on receiving message from address: \" + this.endpoint.getAddress()\n                    + \" using connector: \" + this.endpoint.getConnector(), cause);\n            this.message = null;\n            this.cause = cause;\n            if (ioSession != null) {\n                ioSession.close();\n            }\n        }","commit_id":"eec3534c950c80af56e3fa18445e87ea632985d2","url":"https://github.com/apache/camel"},{"original_method":"@Override\n    protected void doStart() throws Exception {\n        if (!lazySessionCreation) {\n            openConnection();\n        }\n    }","id":50116,"modified_method":"@Override\n    protected void doStart() throws Exception {\n        super.doStart();\n        if (!lazySessionCreation) {\n            openConnection();\n        }\n    }","commit_id":"eec3534c950c80af56e3fa18445e87ea632985d2","url":"https://github.com/apache/camel"},{"original_method":"protected RouteBuilder createRouteBuilder() {\n        return new RouteBuilder() {\n            public void configure() {\n                from(\"direct:x\").to(uri).process(new Processor() {\n                    public void process(Exchange e) {\n                        System.out.println(\"Received exchange: \" + e.getIn());\n                        receivedExchange = e;\n                        latch.countDown();\n                    }\n                });\n            }\n        };\n    }","id":50117,"modified_method":"protected RouteBuilder createRouteBuilder() {\n        return new RouteBuilder() {\n            public void configure() {\n                from(\"direct:x\").to(uri).process(new Processor() {\n                    public void process(Exchange e) {\n                        // System.out.println(\"Received exchange: \" + e.getIn());\n                        receivedExchange = e;\n                        latch.countDown();\n                    }\n                });\n            }\n        };\n    }","commit_id":"eec3534c950c80af56e3fa18445e87ea632985d2","url":"https://github.com/apache/camel"},{"original_method":"public void testMinaRouteWithInOutLazy() throws Exception {\n    \tcontainer = new DefaultCamelContext();\n    \tlatch = new CountDownLatch(1);\n    \turi = \"mina:tcp://localhost:6321?textline=true&lazySessionCreation=true\";\n    \tProducer<Exchange> producer;\n        container.addRoutes(createRouteBuilder());\n        container.start();\n    \tReverserServer server;          //The server is activated after Camel to check if the lazyness is working\n        server = new ReverserServer();\n        server.start();\n        \n        // now lets fire in a message\n        Endpoint<Exchange> endpoint = container.getEndpoint(\"direct:x\");\n        Exchange exchange = endpoint.createExchange(ExchangePattern.InOut);\n        Message message = exchange.getIn();\n        String hello = \"Hello!\";\n        message.setBody(hello);\n        message.setHeader(\"cheese\", 123);\n\n        producer = endpoint.createProducer();\n        producer.start();\n        producer.process(exchange);\n\n        // now lets sleep for a while\n        boolean received = latch.await(5, TimeUnit.SECONDS);\n        assertTrue(\"Did not receive the message!\", received);\n        assertNotNull(receivedExchange.getIn());\n        assertEquals(\"!olleH\", receivedExchange.getIn().getBody());\n\n        if (producer != null) {\n            producer.stop();\n        }\n        container.stop();\n        server.stop();\n    }","id":50118,"modified_method":"public void testMinaRouteWithInOutLazy() throws Exception {\n    \tcontainer = new DefaultCamelContext();\n    \tlatch = new CountDownLatch(1);\n    \turi = \"mina:tcp://localhost:6321?textline=true&lazySessionCreation=true\";\n\n        container.addRoutes(createRouteBuilder());\n        container.start();\n\n        // The server is activated after Camel to check if the lazyness is working\n        ReverserServer server = new ReverserServer();\n        server.start();\n        \n        // now lets fire in a message\n        Endpoint endpoint = container.getEndpoint(\"direct:x\");\n        Exchange exchange = endpoint.createExchange(ExchangePattern.InOut);\n        Message message = exchange.getIn();\n        message.setBody(\"Hello!\");\n        message.setHeader(\"cheese\", 123);\n\n        Producer producer = endpoint.createProducer();\n        producer.start();\n        producer.process(exchange);\n\n        // now lets sleep for a while\n        boolean received = latch.await(5, TimeUnit.SECONDS);\n        assertTrue(\"Did not receive the message!\", received);\n        assertNotNull(receivedExchange.getIn());\n        assertEquals(\"!olleH\", receivedExchange.getIn().getBody());\n\n        producer.stop();\n        container.stop();\n        server.stop();\n    }","commit_id":"eec3534c950c80af56e3fa18445e87ea632985d2","url":"https://github.com/apache/camel"},{"original_method":"public void testMinaRouteWithInOut() throws Exception {\n    \tcontainer = new DefaultCamelContext();\n    \tlatch = new CountDownLatch(1);\n    \turi = \"mina:tcp://localhost:6321?textline=true\";\n    \tProducer<Exchange> producer;\n    \tReverserServer server;\n        server = new ReverserServer();\n        server.start();\n        container.addRoutes(createRouteBuilder());\n        container.start();\n    \t\n        // now lets fire in a message\n        Endpoint<Exchange> endpoint = container.getEndpoint(\"direct:x\");\n        Exchange exchange = endpoint.createExchange(ExchangePattern.InOut);\n        Message message = exchange.getIn();\n        String hello = \"Hello!\";\n        message.setBody(hello);\n        message.setHeader(\"cheese\", 123);\n\n        producer = endpoint.createProducer();\n        producer.start();\n        producer.process(exchange);\n\n        // now lets sleep for a while\n        boolean received = latch.await(5, TimeUnit.SECONDS);\n        assertTrue(\"Did not receive the message!\", received);\n        assertNotNull(receivedExchange.getIn());\n        assertEquals(\"!olleH\", receivedExchange.getIn().getBody());\n\n        if (producer != null) {\n            producer.stop();\n        }\n        container.stop();\n        server.stop();\n    }","id":50119,"modified_method":"public void testMinaRouteWithInOut() throws Exception {\n    \tcontainer = new DefaultCamelContext();\n    \tlatch = new CountDownLatch(1);\n    \turi = \"mina:tcp://localhost:6321?textline=true\";\n\n        ReverserServer server = new ReverserServer();\n        server.start();\n\n        container.addRoutes(createRouteBuilder());\n        container.start();\n    \t\n        // now lets fire in a message\n        Endpoint endpoint = container.getEndpoint(\"direct:x\");\n        Exchange exchange = endpoint.createExchange(ExchangePattern.InOut);\n        Message message = exchange.getIn();\n        message.setBody(\"Hello!\");\n        message.setHeader(\"cheese\", 123);\n\n        Producer producer = endpoint.createProducer();\n        producer.start();\n        producer.process(exchange);\n\n        // now lets sleep for a while\n        boolean received = latch.await(5, TimeUnit.SECONDS);\n        assertTrue(\"Did not receive the message!\", received);\n        assertNotNull(receivedExchange.getIn());\n        assertEquals(\"!olleH\", receivedExchange.getIn().getBody());\n\n        producer.stop();\n        container.stop();\n        server.stop();\n    }","commit_id":"eec3534c950c80af56e3fa18445e87ea632985d2","url":"https://github.com/apache/camel"},{"original_method":"public void xtestExchangeFailedOutShouldBeNull() throws Exception {\n        String out = sendAndReceive(\"force-exception\");\n        assertTrue(\"out should not be the same as in when the exchange has failed\", !\"force-exception\".equals(out));\n        assertNull(\"no data should be retrieved\", out);\n    }","id":50120,"modified_method":"public void testExchangeFailedOutShouldBeNull() throws Exception {\n        String out = sendAndReceive(\"force-exception\");\n        assertTrue(\"out should not be the same as in when the exchange has failed\", !\"force-exception\".equals(out));\n        assertNull(\"no data should be retrieved\", out);\n    }","commit_id":"eec3534c950c80af56e3fa18445e87ea632985d2","url":"https://github.com/apache/camel"},{"original_method":"protected RouteBuilder createRouteBuilder() {\n        return new RouteBuilder() {\n            public void configure() {\n                from(URI).process(new Processor() {\n                    public void process(Exchange e) throws InterruptedException {\n                        // to force some delay to test that the id stays the same even though time is 100 millis later\n                        Thread.sleep(100);\n\n                        Assert.assertNotNull(e.getIn().getBody());\n                        Assert.assertNotNull(e.getIn().getHeaders());\n                        Assert.assertNotNull(e.getProperties());\n                        Assert.assertEquals(\"Hello!\", e.getIn().getBody());\n                        Assert.assertEquals(\"feta\", e.getIn().getHeader(\"cheese\"));\n                        Assert.assertEquals(\"old\", e.getProperty(\"ham\"));\n                        // do not marshal the exchangeId here\n                        //Assert.assertEquals(id, e.getExchangeId());\n                        Assert.assertEquals(ExchangePattern.InOut, e.getPattern());\n\n                        e.getOut().setBody(\"Goodbye!\");\n                        e.getOut().setHeader(\"cheese\", \"cheddar\");\n                        e.setProperty(\"salami\", \"fresh\");\n                    }\n                });\n            }\n        };\n    }","id":50121,"modified_method":"protected RouteBuilder createRouteBuilder() {\n        return new RouteBuilder() {\n            public void configure() {\n                from(URI).process(new Processor() {\n                    public void process(Exchange e) throws InterruptedException {\n                        Assert.assertNotNull(e.getIn().getBody());\n                        Assert.assertNotNull(e.getIn().getHeaders());\n                        Assert.assertNotNull(e.getProperties());\n                        Assert.assertEquals(\"Hello!\", e.getIn().getBody());\n                        Assert.assertEquals(\"feta\", e.getIn().getHeader(\"cheese\"));\n                        Assert.assertEquals(\"old\", e.getProperty(\"ham\"));\n                        Assert.assertEquals(ExchangePattern.InOut, e.getPattern());\n\n                        e.getOut().setBody(\"Goodbye!\");\n                        e.getOut().setHeader(\"cheese\", \"cheddar\");\n                        e.setProperty(\"salami\", \"fresh\");\n                    }\n                });\n            }\n        };\n    }","commit_id":"eec3534c950c80af56e3fa18445e87ea632985d2","url":"https://github.com/apache/camel"},{"original_method":"public void testMinaTransferExchangeOption() throws Exception {\n        Endpoint endpoint = context.getEndpoint(URI);\n        Exchange exchange = endpoint.createExchange();\n        id = exchange.getExchangeId();\n\n        Message message = exchange.getIn();\n        message.setBody(\"Hello!\");\n        message.setHeader(\"cheese\", \"feta\");\n        exchange.setProperty(\"ham\", \"old\");\n\n        Producer producer = endpoint.createProducer();\n        producer.start();\n        producer.process(exchange);\n\n        Message out = exchange.getOut();\n        assertNotNull(out);\n        System.out.println(\"out\" + out);\n        assertEquals(\"Goodbye!\", out.getBody());\n        assertEquals(\"cheddar\", out.getHeader(\"cheese\"));\n        assertEquals(\"fresh\", exchange.getProperty(\"salami\"));\n        assertEquals(id, exchange.getExchangeId());\n\n        // in should stay the same\n        Message in = exchange.getIn();\n        assertNotNull(in);\n        assertEquals(\"Hello!\", in.getBody());\n        assertEquals(\"feta\", in.getHeader(\"cheese\"));\n        // however the shared properties have changed\n        assertEquals(\"fresh\", exchange.getProperty(\"salami\"));\n    }","id":50122,"modified_method":"public void testMinaTransferExchangeOption() throws Exception {\n        Endpoint endpoint = context.getEndpoint(URI);\n        Exchange exchange = endpoint.createExchange();\n\n        Message message = exchange.getIn();\n        message.setBody(\"Hello!\");\n        message.setHeader(\"cheese\", \"feta\");\n        exchange.setProperty(\"ham\", \"old\");\n\n        Producer producer = endpoint.createProducer();\n        producer.start();\n        producer.process(exchange);\n\n        Message out = exchange.getOut();\n        assertNotNull(out);\n        assertEquals(\"Goodbye!\", out.getBody());\n        assertEquals(\"cheddar\", out.getHeader(\"cheese\"));\n        assertEquals(\"fresh\", exchange.getProperty(\"salami\"));\n\n        // in should stay the same\n        Message in = exchange.getIn();\n        assertNotNull(in);\n        assertEquals(\"Hello!\", in.getBody());\n        assertEquals(\"feta\", in.getHeader(\"cheese\"));\n        // however the shared properties have changed\n        assertEquals(\"fresh\", exchange.getProperty(\"salami\"));\n    }","commit_id":"eec3534c950c80af56e3fa18445e87ea632985d2","url":"https://github.com/apache/camel"},{"original_method":"public void start() throws Exception {\n        acceptor = new SocketAcceptor();\n        // Prepare the configuration\n        SocketAcceptorConfig cfg = new SocketAcceptorConfig();\n        cfg.setReuseAddress(true);\n        cfg.getFilterChain().addLast(\"logger\", new LoggingFilter());\n        cfg.getFilterChain().addLast(\n                \"codec\",\n                new ProtocolCodecFilter(new TextLineCodecFactory(Charset\n                        .forName(\"UTF-8\"))));\n\n        // Bind\n        acceptor.bind(new InetSocketAddress(port),\n                new ReverseProtocolHandler(), cfg);\n\n        System.out.println(\"Listening on port \" + port);\n    }","id":50123,"modified_method":"public void start() throws Exception {\n        acceptor = new SocketAcceptor();\n\n        // Prepare the configuration\n        SocketAcceptorConfig cfg = new SocketAcceptorConfig();\n        cfg.setReuseAddress(true);\n        Charset charset = Charset.forName(\"UTF-8\");\n        cfg.getFilterChain().addLast(\"codec\", new ProtocolCodecFilter(new TextLineCodecFactory(charset)));\n\n        // Bind\n        acceptor.bind(new InetSocketAddress(port), new ReverseProtocolHandler(), cfg);\n\n        // System.out.println(\"Listening on port \" + port);\n    }","commit_id":"eec3534c950c80af56e3fa18445e87ea632985d2","url":"https://github.com/apache/camel"},{"original_method":"public boolean push(T value) {\n\t\t\tlist.addLast(value);\n\t\t\treturn set.add(value);\n\t\t}","id":50124,"modified_method":"public boolean push(T value) {\n\t\t\tboolean result = set.add(value);\n\t\t\tif (result)\n\t\t\t\tlist.addLast(value);\n\t\t\treturn result;\n\t\t}","commit_id":"552bce81013429206240e7c89100df40035708f5","url":"https://github.com/eclipse/xtext"},{"original_method":"/**\n   * Checks constraints and applies all updates to the databases.\n   */\n  @Override\n  public void apply() {\n    // apply updates backwards, starting with the highest pre value -> no id's\n    // and less table alterations needed\n    for(int i = nodes.length - 1; i >= 0; i--) {\n      final UpdatePrimitive[] pl = op.get(nodes[i]);\n      int add = 0;\n      // apply all updates for current database node\n      for(final UpdatePrimitive pp : pl) {\n        if(pp == null) continue;\n        // An 'insert before' update moves the currently updated db node\n        // further down, hence increases its pre value by the number of\n        // inserted nodes.\n        if(pp.type() == PrimitiveType.INSERTBEFORE) {\n          add = ((InsertBefore) pp).m.meta.size;\n        }\n        pp.apply(add);\n        // operations cannot be applied to a node which has been replaced\n        if(pp.type() == PrimitiveType.REPLACENODE) break;\n      }\n    }\n  }","id":50125,"modified_method":"/**\n   * Checks constraints and applies all updates to the databases.\n   */\n  @Override\n  public void apply() {\n    // apply updates backwards, starting with the highest pre value -> no id's\n    // and less table alterations needed\n    for(int i = nodes.length - 1; i >= 0; i--) {\n      final UpdatePrimitive[] pl = op.get(nodes[i]);\n      int add = 0;\n      // apply all updates for current database node\n      for(final UpdatePrimitive pp : pl) {\n        if(pp == null) continue;\n        // An 'insert before' update moves the currently updated db node\n        // further down, hence increases its pre value by the number of\n        // inserted nodes.\n        if(pp.type() == PrimitiveType.INSERTBEFORE) {\n          add = ((InsertBefore) pp).m.meta.size;\n        }\n        pp.apply(add);\n        // operations cannot be applied to a node which has been replaced\n        if(pp.type() == PrimitiveType.REPLACENODE) break;\n      }\n    }\n    d.flush();\n  }","commit_id":"8ee80dc95bd36f6042fbe063e9b7a8c289771701","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Constructor.\n   */\n  public DBPrimitives() {\n    super();\n  }","id":50126,"modified_method":"/**\n   * Constructor.\n   * @param data data reference\n   */\n  public DBPrimitives(final Data data) {\n    super();\n    d = data;\n  }","commit_id":"8ee80dc95bd36f6042fbe063e9b7a8c289771701","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\n  public byte[][] remAtt() {\n    return a ? new byte[][] { node.nname() } : null;\n  }","id":50127,"modified_method":"@Override\n  public String[] remAtt() {\n    return a ? new String[] { Token.string(node.nname()) } : null;\n  }","commit_id":"8ee80dc95bd36f6042fbe063e9b7a8c289771701","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\n  public byte[][] addAtt() {\n    final byte[][] a = new byte[m.meta.size][];\n    for(int i = 0; i < m.meta.size; i++) a[i] = m.attName(i);\n    return a;\n  }","id":50128,"modified_method":"@Override\n  public String[] addAtt() {\n    final String[] a = new String[m.meta.size];\n    for(int i = 0; i < m.meta.size; i++) a[i] = Token.string(m.attName(i));\n    return a;\n  }","commit_id":"8ee80dc95bd36f6042fbe063e9b7a8c289771701","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Checks constraints and applies all update primitives to the databases if\n   * no constraints are hurt.\n   * XQueryUP specification 3.2.2\n   * @throws QueryException query exception\n   */\n  public void apply() throws QueryException {\n    // prepare database update primitives\n    // [LK] check violations for dbnodes\n    for(final Primitives dbp : primitives.values()) {\n      for(final int node : dbp.getNodes()) {\n        for(final UpdatePrimitive p : dbp.op.get(node)) {\n          if(p == null) continue;\n          p.prepare();\n        }\n      }\n    }\n    \n    // apply updates if validation finds no errors\n    for(final Data d : primitives.keySet().toArray(\n        new Data[primitives.size()])) {\n      primitives.get(d).apply();\n      d.flush();\n    }\n  }","id":50129,"modified_method":"/**\n   * Checks constraints and applies all update primitives to the databases if\n   * no constraints are hurt.\n   * XQueryUP specification 3.2.2\n   * @throws QueryException query exception\n   */\n  public void apply() throws QueryException {\n    for(final Primitives dbp : primitives.values()) {\n      dbp.check();\n    }\n    \n    for(final Data d : primitives.keySet().toArray(\n        new Data[primitives.size()])) {\n      primitives.get(d).apply();\n    }\n  }","commit_id":"8ee80dc95bd36f6042fbe063e9b7a8c289771701","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Adds an update primitive to the corresponding primitive list. Update\n   * primitives which target nodes are fragments are treated differently,\n   * because they don't effect any existing databases. They may not hurt\n   * any constraints however.\n   *\n   * @param p primitive to add\n   * @param ctx query context\n   * @throws QueryException query exception\n   */\n  public void add(final UpdatePrimitive p, final QueryContext ctx)\n      throws QueryException {\n\n    final boolean frag = p.node instanceof FNode;\n    if(t && (frag || !refs.contains(((DBNode) p.node).data)))\n      Err.or(UPWRONGTRG, p.node);\n\n    final Data d = frag ? dataDummy : ((DBNode) p.node).data;\n    \n    Primitives prim = primitives.get(d);\n    if(prim == null) {\n      // check permissions\n      if(!frag && ctx.context.perm(User.WRITE, d.meta) != -1)\n        throw new QueryException(Main.info(PERMNO, CmdPerm.WRITE));\n      \n      prim = frag ? new FragmentPrimitives() : new DBPrimitives();\n      primitives.put(d, prim);\n    }\n    prim.add(p);\n  }","id":50130,"modified_method":"/**\n   * Adds an update primitive to the corresponding primitive list. Update\n   * primitives which target nodes are fragments are treated differently,\n   * because they don't effect any existing databases. They may not hurt\n   * any constraints however.\n   *\n   * @param p primitive to add\n   * @param ctx query context\n   * @throws QueryException query exception\n   */\n  public void add(final UpdatePrimitive p, final QueryContext ctx)\n      throws QueryException {\n\n    final boolean frag = p.node instanceof FNode;\n    if(t && (frag || !refs.contains(((DBNode) p.node).data)))\n      Err.or(UPWRONGTRG, p.node);\n\n    final Data d = frag ? dataDummy : ((DBNode) p.node).data;\n    \n    Primitives prim = primitives.get(d);\n    if(prim == null) {\n      // check permissions\n      if(!frag && ctx.context.perm(User.WRITE, d.meta) != -1)\n        throw new QueryException(Main.info(PERMNO, CmdPerm.WRITE));\n      \n      prim = frag ? new FragmentPrimitives() : new DBPrimitives(d);\n      primitives.put(d, prim);\n    }\n    prim.add(p);\n  }","commit_id":"8ee80dc95bd36f6042fbe063e9b7a8c289771701","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Checks updates for violations.\n   */\n  public void check() { }","id":50131,"modified_method":"/**\n   * Checks updates for violations.\n   * @throws QueryException query exception \n   */\n  public void check() throws QueryException { \n    for(final int node : getNodes()) {\n      for(final UpdatePrimitive p : op.get(node)) {\n        if(p == null) continue;\n        p.prepare();\n      }\n    }\n  }","commit_id":"8ee80dc95bd36f6042fbe063e9b7a8c289771701","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\n  public byte[][] remAtt() {\n    return a ? new byte[][] { node.nname() } : null;\n  }","id":50132,"modified_method":"@Override\n  public String[] remAtt() {\n    return a ? new String[] { Token.string(node.nname()) } : null;\n  }","commit_id":"8ee80dc95bd36f6042fbe063e9b7a8c289771701","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\n  public byte[][] addAtt() {\n    return a ? new byte[][] { name.str() } : null;\n  }","id":50133,"modified_method":"@Override\n  public String[] addAtt() {\n    return a ? new String[] { Token.string(name.str()) } : null;\n  }","commit_id":"8ee80dc95bd36f6042fbe063e9b7a8c289771701","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\n  public byte[][] remAtt() {\n    return a ? new byte[][] { node.nname() } : null;\n  }","id":50134,"modified_method":"@Override\n  public String[] remAtt() {\n    return a ? new String[] { Token.string(node.nname()) } : null;\n  }","commit_id":"8ee80dc95bd36f6042fbe063e9b7a8c289771701","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\n  public byte[][] addAtt() {\n    if(!a) return null;\n    final byte[][] at = new byte[m.meta.size][];\n    for(int i = 0; i < m.meta.size; i++) at[i] = m.attName(i);\n    return at;\n  }","id":50135,"modified_method":"@Override\n  public String[] addAtt() {\n    if(!a) return null;\n    final String[] at = new String[m.meta.size];\n    for(int i = 0; i < m.meta.size; i++) at[i] = Token.string(m.attName(i));\n    return at;\n  }","commit_id":"8ee80dc95bd36f6042fbe063e9b7a8c289771701","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * States which attributes are removed from the attribute pool.\n   * @return names of removed attributes if target node is an attribute\n   */\n  public byte[][] remAtt() { return null; }","id":50136,"modified_method":"/**\n   * States which attributes are removed from the attribute pool.\n   * @return names of removed attributes if target node is an attribute\n   */\n  public String[] remAtt() { return null; }","commit_id":"8ee80dc95bd36f6042fbe063e9b7a8c289771701","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * States which attributes are added to the attribute pool.\n   * @return names of added attributes\n   */\n  public byte[][] addAtt() { return null; }","id":50137,"modified_method":"/**\n   * States which attributes are added to the attribute pool.\n   * @return names of added attributes\n   */\n  public String[] addAtt() { return null; }","commit_id":"8ee80dc95bd36f6042fbe063e9b7a8c289771701","url":"https://github.com/BaseXdb/basex"},{"original_method":"public static Scope virtual_getScope_3734116213129936182(SNode thisNode, SNode kind, SNode child) {\n    if (kind == SConceptOperations.findConceptDeclaration(\"jetbrains.mps.build.workflow.structure.BwfSubTask\")) {\n      SNode task = SLinkOperations.getTarget(thisNode, \"task\", false);\n      if (task != null && SNodeOperations.getParent(task) == SNodeOperations.getParent(thisNode)) {\n        return BehaviorReflection.invokeVirtual(Scope.class, task, \"virtual_getScope_3734116213129936182\", new Object[]{kind, null});\n      }\n      return SimpleRoleScope.forNamedElements(thisNode, SLinkOperations.findLinkDeclaration(\"jetbrains.mps.build.workflow.structure.BwfTaskPart\", \"subTasks\"));\n    }\n    return null;\n  }","id":50138,"modified_method":"public static Scope virtual_getScope_3734116213129936182(SNode thisNode, SNode kind, SNode child) {\n    if (kind == SConceptOperations.findConceptDeclaration(\"jetbrains.mps.build.workflow.structure.BwfSubTask\")) {\n      SNode task = SLinkOperations.getTarget(thisNode, \"task\", false);\n      SimpleRoleScope currentSubtaskScope = SimpleRoleScope.forNamedElements(thisNode, SLinkOperations.findLinkDeclaration(\"jetbrains.mps.build.workflow.structure.BwfTaskPart\", \"subTasks\"));\n      CompositeScope scope = new CompositeScope(currentSubtaskScope);\n      if (task != null) {\n        scope.addScope(BehaviorReflection.invokeVirtual(Scope.class, task, \"virtual_getScope_3734116213129936182\", new Object[]{kind, null}));\n      }\n      if (task == null || SNodeOperations.getParent(task) != SNodeOperations.getParent(thisNode)) {\n        for (SNode n : SNodeOperations.getAllSiblings(thisNode, false)) {\n          if (SNodeOperations.isInstanceOf(n, \"jetbrains.mps.build.workflow.structure.BwfTaskPart\") && SLinkOperations.getTarget(SNodeOperations.cast(n, \"jetbrains.mps.build.workflow.structure.BwfTaskPart\"), \"task\", false) == SLinkOperations.getTarget(thisNode, \"task\", false)) {\n            scope.addScope(SimpleRoleScope.forNamedElements(n, SLinkOperations.findLinkDeclaration(\"jetbrains.mps.build.workflow.structure.BwfTaskPart\", \"subTasks\")));\n          }\n        }\n      }\n      return scope;\n    }\n    return null;\n  }","commit_id":"5cff52e3498300220a6d79ad3963bf01477a0d9a","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  protected Map<SReferenceLinkId, ReferenceConstraintsDescriptor> getNotDefaultSReferenceLinks() {\n    Map<SReferenceLinkId, ReferenceConstraintsDescriptor> references = new HashMap<SReferenceLinkId, ReferenceConstraintsDescriptor>();\n    references.put(MetaIdFactory.refId(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x37fdb3de482e2b27L, 0x37fdb3de482e2b28L), new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x37fdb3de482e2b27L, 0x37fdb3de482e2b28L), this) {\n      @Override\n      public boolean hasOwnScopeProvider() {\n        return true;\n      }\n      @Nullable\n      @Override\n      public ReferenceScopeProvider getScopeProvider() {\n        return new BaseScopeProvider() {\n          @Override\n          public SNodeReference getSearchScopeValidatorNode() {\n            return breakingNode_q09jue_a0a0a0a0a1a0b0a1a1;\n          }\n          @Override\n          public Scope createScope(final IOperationContext operationContext, final ReferenceConstraintsContext _context) {\n            {\n              SNode group = (SNodeOperations.isInstanceOf(_context.getContextNode(), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x5b7be37b4deb1201L, \"jetbrains.mps.build.mps.structure.BuildMps_IdeaPluginGroup\")) ? SNodeOperations.cast(_context.getContextNode(), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x5b7be37b4deb1201L, \"jetbrains.mps.build.mps.structure.BuildMps_IdeaPluginGroup\")) : SNodeOperations.as(SNodeOperations.getParent(_context.getContextNode()), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x5b7be37b4deb1201L, \"jetbrains.mps.build.mps.structure.BuildMps_IdeaPluginGroup\")));\n              if ((group == null)) {\n                return new EmptyScope();\n              }\n              return SimpleRoleScope.forNamedElements(SLinkOperations.getTarget(group, MetaAdapterFactory.getReferenceLink(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x5b7be37b4deb1201L, 0x5b7be37b4deb1202L, \"group\")), SLinkOperations.findLinkDeclaration(MetaAdapterFactory.getContainmentLink(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x14d3fb6fb843ebddL, 0x14d3fb6fb843ebdeL, \"modules\")));\n            }\n          }\n        };\n      }\n    });\n    return references;\n  }","id":50139,"modified_method":"@Override\n  protected Map<SReferenceLinkId, ReferenceConstraintsDescriptor> getNotDefaultSReferenceLinks() {\n    Map<SReferenceLinkId, ReferenceConstraintsDescriptor> references = new HashMap<SReferenceLinkId, ReferenceConstraintsDescriptor>();\n    references.put(MetaIdFactory.refId(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x37fdb3de482e2b27L, 0x37fdb3de482e2b28L), new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x37fdb3de482e2b27L, 0x37fdb3de482e2b28L), this) {\n      @Override\n      public boolean hasOwnScopeProvider() {\n        return true;\n      }\n      @Nullable\n      @Override\n      public ReferenceScopeProvider getScopeProvider() {\n        return new BaseScopeProvider() {\n          @Override\n          public SNodeReference getSearchScopeValidatorNode() {\n            return breakingNode_q09jue_a0a0a0a0a1a0b0a1a1;\n          }\n          @Override\n          public Scope createScope(final IOperationContext operationContext, final ReferenceConstraintsContext _context) {\n            {\n              SNode group = (SNodeOperations.isInstanceOf(_context.getContextNode(), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x5b7be37b4deb1201L, \"jetbrains.mps.build.mps.structure.BuildMps_IdeaPluginGroup\")) ? SNodeOperations.cast(_context.getContextNode(), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x5b7be37b4deb1201L, \"jetbrains.mps.build.mps.structure.BuildMps_IdeaPluginGroup\")) : SNodeOperations.as(SNodeOperations.getParent(_context.getContextNode()), MetaAdapterFactory.getConcept(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x5b7be37b4deb1201L, \"jetbrains.mps.build.mps.structure.BuildMps_IdeaPluginGroup\")));\n              if ((group == null)) {\n                return new EmptyScope();\n              }\n              return SimpleRoleScope.forNamedElements(SLinkOperations.getTarget(group, MetaAdapterFactory.getReferenceLink(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x5b7be37b4deb1201L, 0x5b7be37b4deb1202L, \"group\")), MetaAdapterFactory.getContainmentLink(0xcf935df46994e9cL, 0xa132fa109541cba3L, 0x14d3fb6fb843ebddL, 0x14d3fb6fb843ebdeL, \"modules\"));\n            }\n          }\n        };\n      }\n    });\n    return references;\n  }","commit_id":"ba053d35eef60219def3d8ec0f274da1a4e9fd33","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static Scope call_getBuildMacroScope_3767587139141108514(SNode thisNode, final SNode child, final Set<SNode> visited) {\n    if (SetSequence.fromSet(visited).contains(thisNode)) {\n      return new EmptyScope();\n    }\n    SetSequence.fromSet(visited).addElement(thisNode);\n    Scope rootScope = ScopeUtil.simpleRoleScope(thisNode, SLinkOperations.findLinkDeclaration(MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x4df58c6f18f84a13L, 0x4df58c6f18f84a22L, \"macros\")));\n    SNode containingProject = SNodeOperations.getNodeAncestor(child, MetaAdapterFactory.getConcept(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x4df58c6f18f84a13L, \"jetbrains.mps.build.structure.BuildProject\"), false, false);\n    if (neq_save77_a0e0l(containingProject, thisNode)) {\n      // we are imported => give away only public macro \n      rootScope = ScopeUtil.where(rootScope, new _FunctionTypes._return_P1_E0<Boolean, SNode>() {\n        public Boolean invoke(SNode node) {\n          return BehaviorReflection.invokeVirtual(Boolean.TYPE, SNodeOperations.cast(node, MetaAdapterFactory.getConcept(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x4df58c6f18f84a1fL, \"jetbrains.mps.build.structure.BuildMacro\")), \"virtual_isPublic_6547494638219688113\", new Object[]{});\n        }\n      });\n    }\n    if ((containingProject != null)) {\n      final Wrappers._T<SNode> definedMacro = new Wrappers._T<SNode>();\n      if (ListSequence.fromList(SLinkOperations.getChildren(containingProject, MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x4df58c6f18f84a13L, 0x4df58c6f18f84a22L, \"macros\"))).contains(child)) {\n        definedMacro.value = SNodeOperations.cast(child, MetaAdapterFactory.getConcept(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x4df58c6f18f84a1fL, \"jetbrains.mps.build.structure.BuildMacro\"));\n      } else {\n        definedMacro.value = ListSequence.fromList(SLinkOperations.getChildren(containingProject, MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x4df58c6f18f84a13L, 0x4df58c6f18f84a22L, \"macros\"))).findFirst(new IWhereFilter<SNode>() {\n          public boolean accept(SNode it) {\n            return ListSequence.fromList(SNodeOperations.getNodeDescendants(it, null, false, new SAbstractConcept[]{})).contains(child);\n          }\n        });\n      }\n      if ((definedMacro.value != null)) {\n        // we can only see what was strictly before us \n        rootScope = ScopeUtil.where(rootScope, new _FunctionTypes._return_P1_E0<Boolean, SNode>() {\n          public Boolean invoke(SNode visibleNode) {\n            return !(ListSequence.fromList(SNodeOperations.getNextSiblings(definedMacro.value, false)).contains(visibleNode)) && !((eq_save77_a0a0a0a0a0b0a1a2a5a11(definedMacro.value, visibleNode)));\n          }\n        });\n      }\n    }\n\n    List<Scope> scopes = ListSequence.fromList(new ArrayList<Scope>());\n    ListSequence.fromList(scopes).addElement(rootScope);\n    ListSequence.fromList(scopes).addSequence(ListSequence.fromList(SLinkOperations.getChildren(thisNode, MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x4df58c6f18f84a13L, 0x4df58c6f18f84a25L, \"dependencies\"))).where(new IWhereFilter<SNode>() {\n      public boolean accept(SNode it) {\n        return SNodeOperations.isInstanceOf(it, MetaAdapterFactory.getConcept(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x454b730dd908c220L, \"jetbrains.mps.build.structure.BuildProjectDependency\"));\n      }\n    }).select(new ISelector<SNode, Scope>() {\n      public Scope select(SNode it) {\n        return BuildProject_Behavior.call_getBuildMacroScope_3767587139141108514(SLinkOperations.getTarget(SNodeOperations.cast(it, MetaAdapterFactory.getConcept(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x454b730dd908c220L, \"jetbrains.mps.build.structure.BuildProjectDependency\")), MetaAdapterFactory.getReferenceLink(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x454b730dd908c220L, 0x4df58c6f18f84a24L, \"script\")), child, visited);\n      }\n    }));\n    ListSequence.fromList(scopes).addSequence(Sequence.fromIterable(ScopeUtil.imported(ListSequence.fromList(SLinkOperations.getChildren(thisNode, MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x4df58c6f18f84a13L, 0x4df58c6f18f84a25L, \"dependencies\"))).where(new IWhereFilter<SNode>() {\n      public boolean accept(SNode it) {\n        return !(SNodeOperations.isInstanceOf(it, MetaAdapterFactory.getConcept(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x454b730dd908c220L, \"jetbrains.mps.build.structure.BuildProjectDependency\")));\n      }\n    }), MetaAdapterFactory.getConcept(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x4df58c6f18f84a1fL, \"jetbrains.mps.build.structure.BuildMacro\").getDeclarationNode(), child)));\n\n    return new CompositeScope(ListSequence.fromList(scopes).toGenericArray(Scope.class)) {\n      @Override\n      public Iterable<SNode> getAvailableElements(@Nullable String prefix) {\n        return Sequence.fromIterable(super.getAvailableElements(prefix)).distinct();\n      }\n    };\n  }","id":50140,"modified_method":"public static Scope call_getBuildMacroScope_3767587139141108514(SNode thisNode, final SNode child, final Set<SNode> visited) {\n    if (SetSequence.fromSet(visited).contains(thisNode)) {\n      return new EmptyScope();\n    }\n    SetSequence.fromSet(visited).addElement(thisNode);\n    Scope rootScope = ScopeUtil.simpleRoleScope(thisNode, MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x4df58c6f18f84a13L, 0x4df58c6f18f84a22L, \"macros\"));\n    SNode containingProject = SNodeOperations.getNodeAncestor(child, MetaAdapterFactory.getConcept(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x4df58c6f18f84a13L, \"jetbrains.mps.build.structure.BuildProject\"), false, false);\n    if (neq_save77_a0e0l(containingProject, thisNode)) {\n      // we are imported => give away only public macro \n      rootScope = ScopeUtil.where(rootScope, new _FunctionTypes._return_P1_E0<Boolean, SNode>() {\n        public Boolean invoke(SNode node) {\n          return BehaviorReflection.invokeVirtual(Boolean.TYPE, SNodeOperations.cast(node, MetaAdapterFactory.getConcept(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x4df58c6f18f84a1fL, \"jetbrains.mps.build.structure.BuildMacro\")), \"virtual_isPublic_6547494638219688113\", new Object[]{});\n        }\n      });\n    }\n    if ((containingProject != null)) {\n      final Wrappers._T<SNode> definedMacro = new Wrappers._T<SNode>();\n      if (ListSequence.fromList(SLinkOperations.getChildren(containingProject, MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x4df58c6f18f84a13L, 0x4df58c6f18f84a22L, \"macros\"))).contains(child)) {\n        definedMacro.value = SNodeOperations.cast(child, MetaAdapterFactory.getConcept(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x4df58c6f18f84a1fL, \"jetbrains.mps.build.structure.BuildMacro\"));\n      } else {\n        definedMacro.value = ListSequence.fromList(SLinkOperations.getChildren(containingProject, MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x4df58c6f18f84a13L, 0x4df58c6f18f84a22L, \"macros\"))).findFirst(new IWhereFilter<SNode>() {\n          public boolean accept(SNode it) {\n            return ListSequence.fromList(SNodeOperations.getNodeDescendants(it, null, false, new SAbstractConcept[]{})).contains(child);\n          }\n        });\n      }\n      if ((definedMacro.value != null)) {\n        // we can only see what was strictly before us \n        rootScope = ScopeUtil.where(rootScope, new _FunctionTypes._return_P1_E0<Boolean, SNode>() {\n          public Boolean invoke(SNode visibleNode) {\n            return !(ListSequence.fromList(SNodeOperations.getNextSiblings(definedMacro.value, false)).contains(visibleNode)) && !((eq_save77_a0a0a0a0a0b0a1a2a5a11(definedMacro.value, visibleNode)));\n          }\n        });\n      }\n    }\n\n    List<Scope> scopes = ListSequence.fromList(new ArrayList<Scope>());\n    ListSequence.fromList(scopes).addElement(rootScope);\n    ListSequence.fromList(scopes).addSequence(ListSequence.fromList(SLinkOperations.getChildren(thisNode, MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x4df58c6f18f84a13L, 0x4df58c6f18f84a25L, \"dependencies\"))).where(new IWhereFilter<SNode>() {\n      public boolean accept(SNode it) {\n        return SNodeOperations.isInstanceOf(it, MetaAdapterFactory.getConcept(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x454b730dd908c220L, \"jetbrains.mps.build.structure.BuildProjectDependency\"));\n      }\n    }).select(new ISelector<SNode, Scope>() {\n      public Scope select(SNode it) {\n        return BuildProject_Behavior.call_getBuildMacroScope_3767587139141108514(SLinkOperations.getTarget(SNodeOperations.cast(it, MetaAdapterFactory.getConcept(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x454b730dd908c220L, \"jetbrains.mps.build.structure.BuildProjectDependency\")), MetaAdapterFactory.getReferenceLink(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x454b730dd908c220L, 0x4df58c6f18f84a24L, \"script\")), child, visited);\n      }\n    }));\n    ListSequence.fromList(scopes).addSequence(Sequence.fromIterable(ScopeUtil.imported(ListSequence.fromList(SLinkOperations.getChildren(thisNode, MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x4df58c6f18f84a13L, 0x4df58c6f18f84a25L, \"dependencies\"))).where(new IWhereFilter<SNode>() {\n      public boolean accept(SNode it) {\n        return !(SNodeOperations.isInstanceOf(it, MetaAdapterFactory.getConcept(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x454b730dd908c220L, \"jetbrains.mps.build.structure.BuildProjectDependency\")));\n      }\n    }), MetaAdapterFactory.getConcept(0x798100da4f0a421aL, 0xb99171f8c50ce5d2L, 0x4df58c6f18f84a1fL, \"jetbrains.mps.build.structure.BuildMacro\").getDeclarationNode(), child)));\n\n    return new CompositeScope(ListSequence.fromList(scopes).toGenericArray(Scope.class)) {\n      @Override\n      public Iterable<SNode> getAvailableElements(@Nullable String prefix) {\n        return Sequence.fromIterable(super.getAvailableElements(prefix)).distinct();\n      }\n    };\n  }","commit_id":"ba053d35eef60219def3d8ec0f274da1a4e9fd33","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static Scope virtual_getScope_3734116213129936182(SNode thisNode, SNode kind, SNode child) {\n    if (kind == MetaAdapterFactory.getConcept(0x698a8d22a10447a0L, 0xba8d10e3ec237f13L, 0x2670d5989d5a6275L, \"jetbrains.mps.build.workflow.structure.BwfSubTask\").getDeclarationNode()) {\n      SNode task = SLinkOperations.getTarget(thisNode, MetaAdapterFactory.getReferenceLink(0x698a8d22a10447a0L, 0xba8d10e3ec237f13L, 0x36fb0dc9fd32c1b8L, 0x36fb0dc9fd32c1b9L, \"task\"));\n      SimpleRoleScope currentSubtaskScope = SimpleRoleScope.forNamedElements(thisNode, SLinkOperations.findLinkDeclaration(MetaAdapterFactory.getContainmentLink(0x698a8d22a10447a0L, 0xba8d10e3ec237f13L, 0x36fb0dc9fd32c1b8L, 0x36fb0dc9fd32c1baL, \"subTasks\")));\n      CompositeScope scope = new CompositeScope(currentSubtaskScope);\n      if (task != null) {\n        scope.addScope(BehaviorReflection.invokeVirtual(Scope.class, task, \"virtual_getScope_3734116213129936182\", new Object[]{kind, null}));\n      }\n      if (task == null || SNodeOperations.getParent(task) != SNodeOperations.getParent(thisNode)) {\n        for (SNode n : SNodeOperations.getAllSiblings(thisNode, false)) {\n          if (SNodeOperations.isInstanceOf(n, MetaAdapterFactory.getConcept(0x698a8d22a10447a0L, 0xba8d10e3ec237f13L, 0x36fb0dc9fd32c1b8L, \"jetbrains.mps.build.workflow.structure.BwfTaskPart\")) && SLinkOperations.getTarget(SNodeOperations.cast(n, MetaAdapterFactory.getConcept(0x698a8d22a10447a0L, 0xba8d10e3ec237f13L, 0x36fb0dc9fd32c1b8L, \"jetbrains.mps.build.workflow.structure.BwfTaskPart\")), MetaAdapterFactory.getReferenceLink(0x698a8d22a10447a0L, 0xba8d10e3ec237f13L, 0x36fb0dc9fd32c1b8L, 0x36fb0dc9fd32c1b9L, \"task\")) == SLinkOperations.getTarget(thisNode, MetaAdapterFactory.getReferenceLink(0x698a8d22a10447a0L, 0xba8d10e3ec237f13L, 0x36fb0dc9fd32c1b8L, 0x36fb0dc9fd32c1b9L, \"task\"))) {\n            scope.addScope(SimpleRoleScope.forNamedElements(n, SLinkOperations.findLinkDeclaration(MetaAdapterFactory.getContainmentLink(0x698a8d22a10447a0L, 0xba8d10e3ec237f13L, 0x36fb0dc9fd32c1b8L, 0x36fb0dc9fd32c1baL, \"subTasks\"))));\n          }\n        }\n      }\n      return scope;\n    }\n    return null;\n  }","id":50141,"modified_method":"public static Scope virtual_getScope_3734116213129936182(SNode thisNode, SNode kind, SNode child) {\n    if (kind == MetaAdapterFactory.getConcept(0x698a8d22a10447a0L, 0xba8d10e3ec237f13L, 0x2670d5989d5a6275L, \"jetbrains.mps.build.workflow.structure.BwfSubTask\").getDeclarationNode()) {\n      SNode task = SLinkOperations.getTarget(thisNode, MetaAdapterFactory.getReferenceLink(0x698a8d22a10447a0L, 0xba8d10e3ec237f13L, 0x36fb0dc9fd32c1b8L, 0x36fb0dc9fd32c1b9L, \"task\"));\n      SimpleRoleScope currentSubtaskScope = SimpleRoleScope.forNamedElements(thisNode, MetaAdapterFactory.getContainmentLink(0x698a8d22a10447a0L, 0xba8d10e3ec237f13L, 0x36fb0dc9fd32c1b8L, 0x36fb0dc9fd32c1baL, \"subTasks\"));\n      CompositeScope scope = new CompositeScope(currentSubtaskScope);\n      if (task != null) {\n        scope.addScope(BehaviorReflection.invokeVirtual(Scope.class, task, \"virtual_getScope_3734116213129936182\", new Object[]{kind, null}));\n      }\n      if (task == null || SNodeOperations.getParent(task) != SNodeOperations.getParent(thisNode)) {\n        for (SNode n : SNodeOperations.getAllSiblings(thisNode, false)) {\n          if (SNodeOperations.isInstanceOf(n, MetaAdapterFactory.getConcept(0x698a8d22a10447a0L, 0xba8d10e3ec237f13L, 0x36fb0dc9fd32c1b8L, \"jetbrains.mps.build.workflow.structure.BwfTaskPart\")) && SLinkOperations.getTarget(SNodeOperations.cast(n, MetaAdapterFactory.getConcept(0x698a8d22a10447a0L, 0xba8d10e3ec237f13L, 0x36fb0dc9fd32c1b8L, \"jetbrains.mps.build.workflow.structure.BwfTaskPart\")), MetaAdapterFactory.getReferenceLink(0x698a8d22a10447a0L, 0xba8d10e3ec237f13L, 0x36fb0dc9fd32c1b8L, 0x36fb0dc9fd32c1b9L, \"task\")) == SLinkOperations.getTarget(thisNode, MetaAdapterFactory.getReferenceLink(0x698a8d22a10447a0L, 0xba8d10e3ec237f13L, 0x36fb0dc9fd32c1b8L, 0x36fb0dc9fd32c1b9L, \"task\"))) {\n            scope.addScope(SimpleRoleScope.forNamedElements(n, MetaAdapterFactory.getContainmentLink(0x698a8d22a10447a0L, 0xba8d10e3ec237f13L, 0x36fb0dc9fd32c1b8L, 0x36fb0dc9fd32c1baL, \"subTasks\")));\n          }\n        }\n      }\n      return scope;\n    }\n    return null;\n  }","commit_id":"ba053d35eef60219def3d8ec0f274da1a4e9fd33","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static Scope virtual_getScope_3734116213129936182(SNode thisNode, SNode kind, SNode child) {\n    if (kind == MetaAdapterFactory.getConcept(0x698a8d22a10447a0L, 0xba8d10e3ec237f13L, 0x2670d5989d5a6275L, \"jetbrains.mps.build.workflow.structure.BwfSubTask\").getDeclarationNode()) {\n      Scope result = SimpleRoleScope.forNamedElements(thisNode, SLinkOperations.findLinkDeclaration(MetaAdapterFactory.getContainmentLink(0x698a8d22a10447a0L, 0xba8d10e3ec237f13L, 0x2670d5989d5a6273L, 0x2670d5989d5a6277L, \"subTasks\")));\n      for (SNode n : SNodeOperations.getAllSiblings(thisNode, false)) {\n        if (SNodeOperations.isInstanceOf(n, MetaAdapterFactory.getConcept(0x698a8d22a10447a0L, 0xba8d10e3ec237f13L, 0x36fb0dc9fd32c1b8L, \"jetbrains.mps.build.workflow.structure.BwfTaskPart\")) && SLinkOperations.getTarget(SNodeOperations.cast(n, MetaAdapterFactory.getConcept(0x698a8d22a10447a0L, 0xba8d10e3ec237f13L, 0x36fb0dc9fd32c1b8L, \"jetbrains.mps.build.workflow.structure.BwfTaskPart\")), MetaAdapterFactory.getReferenceLink(0x698a8d22a10447a0L, 0xba8d10e3ec237f13L, 0x36fb0dc9fd32c1b8L, 0x36fb0dc9fd32c1b9L, \"task\")) == thisNode) {\n          result = CompositeScope.createComposite(result, SimpleRoleScope.forNamedElements(n, SLinkOperations.findLinkDeclaration(MetaAdapterFactory.getContainmentLink(0x698a8d22a10447a0L, 0xba8d10e3ec237f13L, 0x36fb0dc9fd32c1b8L, 0x36fb0dc9fd32c1baL, \"subTasks\"))));\n        }\n      }\n      return result;\n    }\n    return null;\n  }","id":50142,"modified_method":"public static Scope virtual_getScope_3734116213129936182(SNode thisNode, SNode kind, SNode child) {\n    if (kind == MetaAdapterFactory.getConcept(0x698a8d22a10447a0L, 0xba8d10e3ec237f13L, 0x2670d5989d5a6275L, \"jetbrains.mps.build.workflow.structure.BwfSubTask\").getDeclarationNode()) {\n      Scope result = SimpleRoleScope.forNamedElements(thisNode, MetaAdapterFactory.getContainmentLink(0x698a8d22a10447a0L, 0xba8d10e3ec237f13L, 0x36fb0dc9fd32c1b8L, 0x36fb0dc9fd32c1baL, \"subTasks\"));\n      for (SNode n : SNodeOperations.getAllSiblings(thisNode, false)) {\n        if (SNodeOperations.isInstanceOf(n, MetaAdapterFactory.getConcept(0x698a8d22a10447a0L, 0xba8d10e3ec237f13L, 0x36fb0dc9fd32c1b8L, \"jetbrains.mps.build.workflow.structure.BwfTaskPart\")) && SLinkOperations.getTarget(SNodeOperations.cast(n, MetaAdapterFactory.getConcept(0x698a8d22a10447a0L, 0xba8d10e3ec237f13L, 0x36fb0dc9fd32c1b8L, \"jetbrains.mps.build.workflow.structure.BwfTaskPart\")), MetaAdapterFactory.getReferenceLink(0x698a8d22a10447a0L, 0xba8d10e3ec237f13L, 0x36fb0dc9fd32c1b8L, 0x36fb0dc9fd32c1b9L, \"task\")) == thisNode) {\n          result = CompositeScope.createComposite(result, SimpleRoleScope.forNamedElements(n, MetaAdapterFactory.getContainmentLink(0x698a8d22a10447a0L, 0xba8d10e3ec237f13L, 0x36fb0dc9fd32c1b8L, 0x36fb0dc9fd32c1baL, \"subTasks\")));\n        }\n      }\n      return result;\n    }\n    return null;\n  }","commit_id":"ba053d35eef60219def3d8ec0f274da1a4e9fd33","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static Scope virtual_getScope_3734116213129936182(SNode thisNode, SNode kind, SNode child) {\n    if (SConceptOperations.isSubConceptOf(SNodeOperations.asSConcept(kind), MetaAdapterFactory.getConcept(0x26b3d6d5b99a4ed6L, 0x83bed2ea6f3627a1L, 0x12106fa3191L, \"jetbrains.mps.calculator.structure.InputField\")) && ScopeUtils.comeFrom(\"outputField\", thisNode, child)) {\n      return SimpleRoleScope.forNamedElements(thisNode, SLinkOperations.findLinkDeclaration(MetaAdapterFactory.getContainmentLink(0x26b3d6d5b99a4ed6L, 0x83bed2ea6f3627a1L, 0x12106f96410L, 0x12106fb26e8L, \"inputField\")));\n    }\n    return ScopeUtils.lazyParentScope(thisNode, kind);\n  }","id":50143,"modified_method":"public static Scope virtual_getScope_3734116213129936182(SNode thisNode, SNode kind, SNode child) {\n    if (SConceptOperations.isSubConceptOf(SNodeOperations.asSConcept(kind), MetaAdapterFactory.getConcept(0x26b3d6d5b99a4ed6L, 0x83bed2ea6f3627a1L, 0x12106fa3191L, \"jetbrains.mps.calculator.structure.InputField\")) && ScopeUtils.comeFrom(\"outputField\", thisNode, child)) {\n      return SimpleRoleScope.forNamedElements(thisNode, MetaAdapterFactory.getContainmentLink(0x26b3d6d5b99a4ed6L, 0x83bed2ea6f3627a1L, 0x12106f96410L, 0x12106fb26e8L, \"inputField\"));\n    }\n    return ScopeUtils.lazyParentScope(thisNode, kind);\n  }","commit_id":"ba053d35eef60219def3d8ec0f274da1a4e9fd33","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static Scope virtual_getScope_3734116213129936182(SNode thisNode, SNode kind, final SNode child) {\n    if (SConceptOperations.isSubConceptOf(SNodeOperations.asSConcept(kind), MetaAdapterFactory.getConcept(0xd40d465dded40d0L, 0x8d4c2c6d177f60d7L, 0x14be6cdec1861419L, \"org.jetbrains.mps.samples.Constants.structure.Constant\"))) {\n      SimpleRoleScope forNamedElements = SimpleRoleScope.forNamedElements(thisNode, SLinkOperations.findLinkDeclaration(MetaAdapterFactory.getContainmentLink(0xd40d465dded40d0L, 0x8d4c2c6d177f60d7L, 0x14be6cdec1861417L, 0x14be6cdec1861428L, \"constants\")));\n      FilteringScope filteringScope = new FilteringScope(forNamedElements) {\n        @Override\n        public boolean isExcluded(SNode node) {\n          return SNodeOperations.getIndexInParent(node) >= SNodeOperations.getIndexInParent(child);\n        }\n      };\n      return filteringScope;\n    }\n    return null;\n  }","id":50144,"modified_method":"public static Scope virtual_getScope_3734116213129936182(SNode thisNode, SNode kind, final SNode child) {\n    if (SConceptOperations.isSubConceptOf(SNodeOperations.asSConcept(kind), MetaAdapterFactory.getConcept(0xd40d465dded40d0L, 0x8d4c2c6d177f60d7L, 0x14be6cdec1861419L, \"org.jetbrains.mps.samples.Constants.structure.Constant\"))) {\n      SimpleRoleScope forNamedElements = SimpleRoleScope.forNamedElements(thisNode, MetaAdapterFactory.getContainmentLink(0xd40d465dded40d0L, 0x8d4c2c6d177f60d7L, 0x14be6cdec1861417L, 0x14be6cdec1861428L, \"constants\"));\n      FilteringScope filteringScope = new FilteringScope(forNamedElements) {\n        @Override\n        public boolean isExcluded(SNode node) {\n          return SNodeOperations.getIndexInParent(node) >= SNodeOperations.getIndexInParent(child);\n        }\n      };\n      return filteringScope;\n    }\n    return null;\n  }","commit_id":"ba053d35eef60219def3d8ec0f274da1a4e9fd33","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  protected Map<SReferenceLinkId, ReferenceConstraintsDescriptor> getNotDefaultSReferenceLinks() {\n    Map<SReferenceLinkId, ReferenceConstraintsDescriptor> references = new HashMap<SReferenceLinkId, ReferenceConstraintsDescriptor>();\n    references.put(MetaIdFactory.refId(0xd40d465dded40d0L, 0x8d4c2c6d177f60d7L, 0x37600150f5294665L, 0x37600150f5294666L), new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(0xd40d465dded40d0L, 0x8d4c2c6d177f60d7L, 0x37600150f5294665L, 0x37600150f5294666L), this) {\n      @Override\n      public boolean hasOwnScopeProvider() {\n        return true;\n      }\n      @Nullable\n      @Override\n      public ReferenceScopeProvider getScopeProvider() {\n        return new BaseScopeProvider() {\n          @Override\n          public SNodeReference getSearchScopeValidatorNode() {\n            return breakingNode_3o2gse_a0a0a0a0a1a0b0a1a1;\n          }\n          @Override\n          public Scope createScope(final IOperationContext operationContext, final ReferenceConstraintsContext _context) {\n            if (_context.getContextNode() == null || !(SNodeOperations.isInstanceOf(_context.getContextNode(), MetaAdapterFactory.getConcept(0xd40d465dded40d0L, 0x8d4c2c6d177f60d7L, 0x254b015f7d06d11fL, \"org.jetbrains.mps.samples.Constants.structure.DistantConstantReference\"))) || SLinkOperations.getTarget(SNodeOperations.cast(_context.getContextNode(), MetaAdapterFactory.getConcept(0xd40d465dded40d0L, 0x8d4c2c6d177f60d7L, 0x254b015f7d06d11fL, \"org.jetbrains.mps.samples.Constants.structure.DistantConstantReference\")), MetaAdapterFactory.getReferenceLink(0xd40d465dded40d0L, 0x8d4c2c6d177f60d7L, 0x254b015f7d06d11fL, 0x254b015f7d06d217L, \"targetSetOfConstants\")) == null) {\n              return null;\n            }\n            return SimpleRoleScope.forNamedElements(SLinkOperations.getTarget(SNodeOperations.cast(_context.getContextNode(), MetaAdapterFactory.getConcept(0xd40d465dded40d0L, 0x8d4c2c6d177f60d7L, 0x254b015f7d06d11fL, \"org.jetbrains.mps.samples.Constants.structure.DistantConstantReference\")), MetaAdapterFactory.getReferenceLink(0xd40d465dded40d0L, 0x8d4c2c6d177f60d7L, 0x254b015f7d06d11fL, 0x254b015f7d06d217L, \"targetSetOfConstants\")), SLinkOperations.findLinkDeclaration(MetaAdapterFactory.getContainmentLink(0xd40d465dded40d0L, 0x8d4c2c6d177f60d7L, 0x14be6cdec1861417L, 0x14be6cdec1861428L, \"constants\")));\n          }\n        };\n      }\n    });\n    return references;\n  }","id":50145,"modified_method":"@Override\n  protected Map<SReferenceLinkId, ReferenceConstraintsDescriptor> getNotDefaultSReferenceLinks() {\n    Map<SReferenceLinkId, ReferenceConstraintsDescriptor> references = new HashMap<SReferenceLinkId, ReferenceConstraintsDescriptor>();\n    references.put(MetaIdFactory.refId(0xd40d465dded40d0L, 0x8d4c2c6d177f60d7L, 0x37600150f5294665L, 0x37600150f5294666L), new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(0xd40d465dded40d0L, 0x8d4c2c6d177f60d7L, 0x37600150f5294665L, 0x37600150f5294666L), this) {\n      @Override\n      public boolean hasOwnScopeProvider() {\n        return true;\n      }\n      @Nullable\n      @Override\n      public ReferenceScopeProvider getScopeProvider() {\n        return new BaseScopeProvider() {\n          @Override\n          public SNodeReference getSearchScopeValidatorNode() {\n            return breakingNode_3o2gse_a0a0a0a0a1a0b0a1a1;\n          }\n          @Override\n          public Scope createScope(final IOperationContext operationContext, final ReferenceConstraintsContext _context) {\n            if (_context.getContextNode() == null || !(SNodeOperations.isInstanceOf(_context.getContextNode(), MetaAdapterFactory.getConcept(0xd40d465dded40d0L, 0x8d4c2c6d177f60d7L, 0x254b015f7d06d11fL, \"org.jetbrains.mps.samples.Constants.structure.DistantConstantReference\"))) || SLinkOperations.getTarget(SNodeOperations.cast(_context.getContextNode(), MetaAdapterFactory.getConcept(0xd40d465dded40d0L, 0x8d4c2c6d177f60d7L, 0x254b015f7d06d11fL, \"org.jetbrains.mps.samples.Constants.structure.DistantConstantReference\")), MetaAdapterFactory.getReferenceLink(0xd40d465dded40d0L, 0x8d4c2c6d177f60d7L, 0x254b015f7d06d11fL, 0x254b015f7d06d217L, \"targetSetOfConstants\")) == null) {\n              return null;\n            }\n            return SimpleRoleScope.forNamedElements(SLinkOperations.getTarget(SNodeOperations.cast(_context.getContextNode(), MetaAdapterFactory.getConcept(0xd40d465dded40d0L, 0x8d4c2c6d177f60d7L, 0x254b015f7d06d11fL, \"org.jetbrains.mps.samples.Constants.structure.DistantConstantReference\")), MetaAdapterFactory.getReferenceLink(0xd40d465dded40d0L, 0x8d4c2c6d177f60d7L, 0x254b015f7d06d11fL, 0x254b015f7d06d217L, \"targetSetOfConstants\")), MetaAdapterFactory.getContainmentLink(0xd40d465dded40d0L, 0x8d4c2c6d177f60d7L, 0x14be6cdec1861417L, 0x14be6cdec1861428L, \"constants\"));\n          }\n        };\n      }\n    });\n    return references;\n  }","commit_id":"ba053d35eef60219def3d8ec0f274da1a4e9fd33","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static Scope virtual_getScope_3734116213129936182(SNode thisNode, SNode kind, SNode child) {\n    if (kind == MetaAdapterFactory.getConcept(0xab0ae915e3b54f35L, 0xb55ac655d649a03cL, 0x2e0420fbd0995dfeL, \"jetbrains.mps.transformation.test.inputLang.structure.RefTestMethod\").getDeclarationNode()) {\n      return CompositeScope.createComposite(SimpleRoleScope.forNamedElements(thisNode, SLinkOperations.findLinkDeclaration(MetaAdapterFactory.getContainmentLink(0xab0ae915e3b54f35L, 0xb55ac655d649a03cL, 0x2e0420fbd0995dfbL, 0x2e0420fbd0995e26L, \"methods\"))), (SLinkOperations.getTarget(thisNode, MetaAdapterFactory.getReferenceLink(0xab0ae915e3b54f35L, 0xb55ac655d649a03cL, 0x2e0420fbd0995dfbL, 0x2e0420fbd0995dfdL, \"extends\")) != null ? BehaviorReflection.invokeVirtual(Scope.class, SLinkOperations.getTarget(thisNode, MetaAdapterFactory.getReferenceLink(0xab0ae915e3b54f35L, 0xb55ac655d649a03cL, 0x2e0420fbd0995dfbL, 0x2e0420fbd0995dfdL, \"extends\")), \"virtual_getScope_3734116213129936182\", new Object[]{kind, thisNode}) : null));\n    }\n    return null;\n  }","id":50146,"modified_method":"public static Scope virtual_getScope_3734116213129936182(SNode thisNode, SNode kind, SNode child) {\n    if (kind == MetaAdapterFactory.getConcept(0xab0ae915e3b54f35L, 0xb55ac655d649a03cL, 0x2e0420fbd0995dfeL, \"jetbrains.mps.transformation.test.inputLang.structure.RefTestMethod\").getDeclarationNode()) {\n      return CompositeScope.createComposite(SimpleRoleScope.forNamedElements(thisNode, MetaAdapterFactory.getContainmentLink(0xab0ae915e3b54f35L, 0xb55ac655d649a03cL, 0x2e0420fbd0995dfbL, 0x2e0420fbd0995e26L, \"methods\")), (SLinkOperations.getTarget(thisNode, MetaAdapterFactory.getReferenceLink(0xab0ae915e3b54f35L, 0xb55ac655d649a03cL, 0x2e0420fbd0995dfbL, 0x2e0420fbd0995dfdL, \"extends\")) != null ? BehaviorReflection.invokeVirtual(Scope.class, SLinkOperations.getTarget(thisNode, MetaAdapterFactory.getReferenceLink(0xab0ae915e3b54f35L, 0xb55ac655d649a03cL, 0x2e0420fbd0995dfbL, 0x2e0420fbd0995dfdL, \"extends\")), \"virtual_getScope_3734116213129936182\", new Object[]{kind, thisNode}) : null));\n    }\n    return null;\n  }","commit_id":"ba053d35eef60219def3d8ec0f274da1a4e9fd33","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static Scope virtual_getScope_3734116213129936182(SNode thisNode, SNode kind, SNode child) {\n    if (kind == MetaAdapterFactory.getConcept(0xab0ae915e3b54f35L, 0xb55ac655d649a03cL, 0x2e0420fbd0995e00L, \"jetbrains.mps.transformation.test.inputLang.structure.RefTestParam\").getDeclarationNode()) {\n      return SimpleRoleScope.forNamedElements(thisNode, SLinkOperations.findLinkDeclaration(MetaAdapterFactory.getContainmentLink(0xab0ae915e3b54f35L, 0xb55ac655d649a03cL, 0x2e0420fbd0995dfeL, 0x2e0420fbd0995e40L, \"params\")));\n    }\n    return null;\n  }","id":50147,"modified_method":"public static Scope virtual_getScope_3734116213129936182(SNode thisNode, SNode kind, SNode child) {\n    if (kind == MetaAdapterFactory.getConcept(0xab0ae915e3b54f35L, 0xb55ac655d649a03cL, 0x2e0420fbd0995e00L, \"jetbrains.mps.transformation.test.inputLang.structure.RefTestParam\").getDeclarationNode()) {\n      return SimpleRoleScope.forNamedElements(thisNode, MetaAdapterFactory.getContainmentLink(0xab0ae915e3b54f35L, 0xb55ac655d649a03cL, 0x2e0420fbd0995dfeL, 0x2e0420fbd0995e40L, \"params\"));\n    }\n    return null;\n  }","commit_id":"ba053d35eef60219def3d8ec0f274da1a4e9fd33","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  protected Map<SReferenceLinkId, ReferenceConstraintsDescriptor> getNotDefaultSReferenceLinks() {\n    Map<SReferenceLinkId, ReferenceConstraintsDescriptor> references = new HashMap<SReferenceLinkId, ReferenceConstraintsDescriptor>();\n    references.put(MetaIdFactory.refId(0x49a08c51fe543ccL, 0xbd998b46d641d7f5L, 0x2de971c785ed6f92L, 0x2de971c785ede3ccL), new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(0x49a08c51fe543ccL, 0xbd998b46d641d7f5L, 0x2de971c785ed6f92L, 0x2de971c785ede3ccL), this) {\n      @Override\n      public boolean hasOwnScopeProvider() {\n        return true;\n      }\n      @Nullable\n      @Override\n      public ReferenceScopeProvider getScopeProvider() {\n        return new BaseScopeProvider() {\n          @Override\n          public SNodeReference getSearchScopeValidatorNode() {\n            return breakingNode_b5nlto_a0a0a0a0a1a0b0a1a1;\n          }\n          @Override\n          public Scope createScope(final IOperationContext operationContext, final ReferenceConstraintsContext _context) {\n            {\n              final CompositeScope scope = new CompositeScope(SimpleRoleScope.forNamedElements(SNodeOperations.getNodeAncestor(_context.getEnclosingNode(), MetaAdapterFactory.getConcept(0x49a08c51fe543ccL, 0xbd998b46d641d7f5L, 0x2d523c5e4cc45746L, \"jetbrains.mps.samples.Kaja.structure.Script\"), true, false), SLinkOperations.findLinkDeclaration(MetaAdapterFactory.getContainmentLink(0x49a08c51fe543ccL, 0xbd998b46d641d7f5L, 0x2d523c5e4cc45746L, 0x2de971c785ed6f78L, \"definitions\"))), SimpleRoleScope.forNamedElements(SNodeOperations.getNodeAncestor(_context.getEnclosingNode(), MetaAdapterFactory.getConcept(0x49a08c51fe543ccL, 0xbd998b46d641d7f5L, 0x3cfcda239f19d316L, \"jetbrains.mps.samples.Kaja.structure.Library\"), true, false), SLinkOperations.findLinkDeclaration(MetaAdapterFactory.getContainmentLink(0x49a08c51fe543ccL, 0xbd998b46d641d7f5L, 0x3cfcda239f19d316L, 0x3cfcda239f19d317L, \"definitions\"))), new ListScope(ListSequence.fromList(SLinkOperations.getChildren(SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(_context.getEnclosingNode(), MetaAdapterFactory.getConcept(0x49a08c51fe543ccL, 0xbd998b46d641d7f5L, 0x2d523c5e4cc45746L, \"jetbrains.mps.samples.Kaja.structure.Script\"), true, false), MetaAdapterFactory.getContainmentLink(0x49a08c51fe543ccL, 0xbd998b46d641d7f5L, 0x2d523c5e4cc45746L, 0x2d523c5e4cc4574cL, \"body\")), MetaAdapterFactory.getContainmentLink(0x49a08c51fe543ccL, 0xbd998b46d641d7f5L, 0x2de971c785f06a3fL, 0x2de971c785f06a40L, \"commands\"))).where(new IWhereFilter<SNode>() {\n                public boolean accept(SNode it) {\n                  return SNodeOperations.isInstanceOf(it, MetaAdapterFactory.getConcept(0x49a08c51fe543ccL, 0xbd998b46d641d7f5L, 0x2de971c785ed6f79L, \"jetbrains.mps.samples.Kaja.structure.RoutineDefinition\"));\n                }\n              })) {\n                public String getName(SNode child) {\n                  return SPropertyOperations.getString(SNodeOperations.cast(child, MetaAdapterFactory.getInterfaceConcept(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, \"jetbrains.mps.lang.core.structure.INamedConcept\")), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\"));\n                }\n              });\n\n              ListSequence.fromList(SNodeOperations.getNodeDescendants(SNodeOperations.getNodeAncestor(_context.getEnclosingNode(), MetaAdapterFactory.getConcept(0x49a08c51fe543ccL, 0xbd998b46d641d7f5L, 0x2d523c5e4cc45746L, \"jetbrains.mps.samples.Kaja.structure.Script\"), true, false), MetaAdapterFactory.getConcept(0x49a08c51fe543ccL, 0xbd998b46d641d7f5L, 0x3cfcda239f1a1049L, \"jetbrains.mps.samples.Kaja.structure.Require\"), false, new SAbstractConcept[]{})).visitAll(new IVisitor<SNode>() {\n                public void visit(SNode it) {\n                  scope.addScope(SimpleRoleScope.forNamedElements(SLinkOperations.getTarget(it, MetaAdapterFactory.getReferenceLink(0x49a08c51fe543ccL, 0xbd998b46d641d7f5L, 0x3cfcda239f1a1049L, 0x3cfcda239f1a104aL, \"library\")), SLinkOperations.findLinkDeclaration(MetaAdapterFactory.getContainmentLink(0x49a08c51fe543ccL, 0xbd998b46d641d7f5L, 0x3cfcda239f19d316L, 0x3cfcda239f19d317L, \"definitions\"))));\n                }\n              });\n              return scope;\n            }\n          }\n        };\n      }\n    });\n    return references;\n  }","id":50148,"modified_method":"@Override\n  protected Map<SReferenceLinkId, ReferenceConstraintsDescriptor> getNotDefaultSReferenceLinks() {\n    Map<SReferenceLinkId, ReferenceConstraintsDescriptor> references = new HashMap<SReferenceLinkId, ReferenceConstraintsDescriptor>();\n    references.put(MetaIdFactory.refId(0x49a08c51fe543ccL, 0xbd998b46d641d7f5L, 0x2de971c785ed6f92L, 0x2de971c785ede3ccL), new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(0x49a08c51fe543ccL, 0xbd998b46d641d7f5L, 0x2de971c785ed6f92L, 0x2de971c785ede3ccL), this) {\n      @Override\n      public boolean hasOwnScopeProvider() {\n        return true;\n      }\n      @Nullable\n      @Override\n      public ReferenceScopeProvider getScopeProvider() {\n        return new BaseScopeProvider() {\n          @Override\n          public SNodeReference getSearchScopeValidatorNode() {\n            return breakingNode_b5nlto_a0a0a0a0a1a0b0a1a1;\n          }\n          @Override\n          public Scope createScope(final IOperationContext operationContext, final ReferenceConstraintsContext _context) {\n            {\n              final CompositeScope scope = new CompositeScope(SimpleRoleScope.forNamedElements(SNodeOperations.getNodeAncestor(_context.getEnclosingNode(), MetaAdapterFactory.getConcept(0x49a08c51fe543ccL, 0xbd998b46d641d7f5L, 0x2d523c5e4cc45746L, \"jetbrains.mps.samples.Kaja.structure.Script\"), true, false), MetaAdapterFactory.getContainmentLink(0x49a08c51fe543ccL, 0xbd998b46d641d7f5L, 0x2d523c5e4cc45746L, 0x2de971c785ed6f78L, \"definitions\")), SimpleRoleScope.forNamedElements(SNodeOperations.getNodeAncestor(_context.getEnclosingNode(), MetaAdapterFactory.getConcept(0x49a08c51fe543ccL, 0xbd998b46d641d7f5L, 0x3cfcda239f19d316L, \"jetbrains.mps.samples.Kaja.structure.Library\"), true, false), MetaAdapterFactory.getContainmentLink(0x49a08c51fe543ccL, 0xbd998b46d641d7f5L, 0x3cfcda239f19d316L, 0x3cfcda239f19d317L, \"definitions\")), new ListScope(ListSequence.fromList(SLinkOperations.getChildren(SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(_context.getEnclosingNode(), MetaAdapterFactory.getConcept(0x49a08c51fe543ccL, 0xbd998b46d641d7f5L, 0x2d523c5e4cc45746L, \"jetbrains.mps.samples.Kaja.structure.Script\"), true, false), MetaAdapterFactory.getContainmentLink(0x49a08c51fe543ccL, 0xbd998b46d641d7f5L, 0x2d523c5e4cc45746L, 0x2d523c5e4cc4574cL, \"body\")), MetaAdapterFactory.getContainmentLink(0x49a08c51fe543ccL, 0xbd998b46d641d7f5L, 0x2de971c785f06a3fL, 0x2de971c785f06a40L, \"commands\"))).where(new IWhereFilter<SNode>() {\n                public boolean accept(SNode it) {\n                  return SNodeOperations.isInstanceOf(it, MetaAdapterFactory.getConcept(0x49a08c51fe543ccL, 0xbd998b46d641d7f5L, 0x2de971c785ed6f79L, \"jetbrains.mps.samples.Kaja.structure.RoutineDefinition\"));\n                }\n              })) {\n                public String getName(SNode child) {\n                  return SPropertyOperations.getString(SNodeOperations.cast(child, MetaAdapterFactory.getInterfaceConcept(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, \"jetbrains.mps.lang.core.structure.INamedConcept\")), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\"));\n                }\n              });\n\n              ListSequence.fromList(SNodeOperations.getNodeDescendants(SNodeOperations.getNodeAncestor(_context.getEnclosingNode(), MetaAdapterFactory.getConcept(0x49a08c51fe543ccL, 0xbd998b46d641d7f5L, 0x2d523c5e4cc45746L, \"jetbrains.mps.samples.Kaja.structure.Script\"), true, false), MetaAdapterFactory.getConcept(0x49a08c51fe543ccL, 0xbd998b46d641d7f5L, 0x3cfcda239f1a1049L, \"jetbrains.mps.samples.Kaja.structure.Require\"), false, new SAbstractConcept[]{})).visitAll(new IVisitor<SNode>() {\n                public void visit(SNode it) {\n                  scope.addScope(SimpleRoleScope.forNamedElements(SLinkOperations.getTarget(it, MetaAdapterFactory.getReferenceLink(0x49a08c51fe543ccL, 0xbd998b46d641d7f5L, 0x3cfcda239f1a1049L, 0x3cfcda239f1a104aL, \"library\")), MetaAdapterFactory.getContainmentLink(0x49a08c51fe543ccL, 0xbd998b46d641d7f5L, 0x3cfcda239f19d316L, 0x3cfcda239f19d317L, \"definitions\")));\n                }\n              });\n              return scope;\n            }\n          }\n        };\n      }\n    });\n    return references;\n  }","commit_id":"ba053d35eef60219def3d8ec0f274da1a4e9fd33","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static Scope simpleRoleScope(SNode node, SNode link) {\n    return new SimpleRoleScope(node, link) {\n      @Override\n      public String getName(SNode child) {\n        if (!(SNodeOperations.isInstanceOf(child, MetaAdapterFactory.getInterfaceConcept(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, \"jetbrains.mps.lang.core.structure.INamedConcept\")))) {\n          return child.getPresentation();\n        }\n        return SPropertyOperations.getString(SNodeOperations.cast(child, MetaAdapterFactory.getInterfaceConcept(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, \"jetbrains.mps.lang.core.structure.INamedConcept\")), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\"));\n      }\n    };\n  }","id":50149,"modified_method":"/**\n   * \n   * @deprecated use SContainmentLink version, remove after 3.3\n   */\n  @Deprecated\n  public static Scope simpleRoleScope(SNode node, SNode link) {\n    return new SimpleRoleScope(node, link) {\n      @Override\n      public String getName(SNode child) {\n        if (!(SNodeOperations.isInstanceOf(child, MetaAdapterFactory.getInterfaceConcept(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, \"jetbrains.mps.lang.core.structure.INamedConcept\")))) {\n          return child.getPresentation();\n        }\n        return SPropertyOperations.getString(SNodeOperations.cast(child, MetaAdapterFactory.getInterfaceConcept(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, \"jetbrains.mps.lang.core.structure.INamedConcept\")), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\"));\n      }\n    };\n  }","commit_id":"ba053d35eef60219def3d8ec0f274da1a4e9fd33","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SimpleRoleScope(SNode node, SNode link) {\n    this.myNode = node;\n    this.myLink = link;\n    this.conceptFqName = null;\n  }","id":50150,"modified_method":"/**\n   * \n   * @deprecated use SContainmentLink variant, to remove after 3.3\n   */\n  @Deprecated\n  public SimpleRoleScope(SNode node, SNode link) {\n    this.myNode = node;\n    this.myLink = MetaAdapterByDeclaration.getContainmentLink(link);\n    this.conceptFqName = null;\n  }","commit_id":"ba053d35eef60219def3d8ec0f274da1a4e9fd33","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SimpleRoleScope(SNode node, SNode link, String conceptFqName) {\n    this.myNode = node;\n    this.myLink = link;\n    this.conceptFqName = conceptFqName;\n  }","id":50151,"modified_method":"/**\n   * \n   * @deprecated use SContainmentLink variant, to remove after 3.3\n   */\n  @Deprecated\n  public SimpleRoleScope(SNode node, SNode link, String conceptFqName) {\n    this.myNode = node;\n    this.myLink = MetaAdapterByDeclaration.getContainmentLink(link);\n    this.conceptFqName = conceptFqName;\n  }","commit_id":"ba053d35eef60219def3d8ec0f274da1a4e9fd33","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  public SNode resolve(SNode contextNode, String refText) {\n    SNode result = null;\n    for (SNode n : SNodeOperations.getChildren(myNode, myLink)) {\n      if (this.conceptFqName != null && !(SModelUtil.isAssignableConcept(n.getConcept().getQualifiedName(), conceptFqName))) {\n        continue;\n      }\n      String name = getName(n);\n      if (name.equals(refText)) {\n        if (result == null) {\n          result = n;\n        } else {\n          return null;\n        }\n      }\n    }\n    return result;\n  }","id":50152,"modified_method":"@Override\n  public SNode resolve(SNode contextNode, String refText) {\n    SNode result = null;\n    for (SNode n : SNodeOperations.getChildren(myNode, myLink)) {\n      if (this.conceptFqName != null && !(SModelUtil.isAssignableConcept(n.getConcept().getQualifiedName(), conceptFqName))) {\n        continue;\n      }\n      if (getName(n).equals(refText)) {\n        if (result != null) {\n          return null;\n        }\n        result = n;\n      }\n    }\n    return result;\n  }","commit_id":"ba053d35eef60219def3d8ec0f274da1a4e9fd33","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static SimpleRoleScope forNamedElements(SNode node, SNode linkDeclaration) {\n    return new SimpleRoleScope(node, linkDeclaration) {\n      @Override\n      public String getName(SNode child) {\n        return SPropertyOperations.getString(SNodeOperations.cast(child, MetaAdapterFactory.getInterfaceConcept(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, \"jetbrains.mps.lang.core.structure.INamedConcept\")), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\"));\n      }\n    };\n  }","id":50153,"modified_method":"/**\n   * \n   * @deprecated use SContainmentLink variant, to remove after 3.3\n   */\n  @Deprecated\n  public static SimpleRoleScope forNamedElements(SNode node, SNode linkDeclaration) {\n    return new SimpleRoleScope(node, linkDeclaration) {\n      @Override\n      public String getName(SNode child) {\n        return SPropertyOperations.getString(SNodeOperations.cast(child, MetaAdapterFactory.getInterfaceConcept(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, \"jetbrains.mps.lang.core.structure.INamedConcept\")), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\"));\n      }\n    };\n  }","commit_id":"ba053d35eef60219def3d8ec0f274da1a4e9fd33","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static Scope call_getArgumentsScope_4720003541459735421(SNode thisNode, SNode kind) {\n    {\n      SNode concept_a0b;\n      concept_a0b = kind;\n      if (SConceptOperations.isSubConceptOf(SNodeOperations.asSConcept(concept_a0b), MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37a7f6eL, \"jetbrains.mps.baseLanguage.structure.VariableDeclaration\"))) {\n        return new EmptyScope();\n      }\n      if (SConceptOperations.isSubConceptOf(SNodeOperations.asSConcept(concept_a0b), MetaAdapterFactory.getConcept(0xdcb5a83a19a844ffL, 0xa4cbfc7d324ecc63L, 0x1f6c736337b5e2cbL, \"jetbrains.mps.core.xml.sax.structure.XMLSAXAttributeRule\"))) {\n        return SimpleRoleScope.forNamedElements(SNodeOperations.getNodeAncestor(thisNode, MetaAdapterFactory.getConcept(0xdcb5a83a19a844ffL, 0xa4cbfc7d324ecc63L, 0x1f6c736337b5e2f2L, \"jetbrains.mps.core.xml.sax.structure.XMLSAXNodeRule\"), false, false), SLinkOperations.findLinkDeclaration(MetaAdapterFactory.getContainmentLink(0xdcb5a83a19a844ffL, 0xa4cbfc7d324ecc63L, 0x1f6c736337b5e2f2L, 0x1f6c736337b5e2f4L, \"attrs\")));\n      }\n    }\n    return null;\n  }","id":50154,"modified_method":"public static Scope call_getArgumentsScope_4720003541459735421(SNode thisNode, SNode kind) {\n    {\n      SNode concept_a0b;\n      concept_a0b = kind;\n      if (SConceptOperations.isSubConceptOf(SNodeOperations.asSConcept(concept_a0b), MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37a7f6eL, \"jetbrains.mps.baseLanguage.structure.VariableDeclaration\"))) {\n        return new EmptyScope();\n      }\n      if (SConceptOperations.isSubConceptOf(SNodeOperations.asSConcept(concept_a0b), MetaAdapterFactory.getConcept(0xdcb5a83a19a844ffL, 0xa4cbfc7d324ecc63L, 0x1f6c736337b5e2cbL, \"jetbrains.mps.core.xml.sax.structure.XMLSAXAttributeRule\"))) {\n        return SimpleRoleScope.forNamedElements(SNodeOperations.getNodeAncestor(thisNode, MetaAdapterFactory.getConcept(0xdcb5a83a19a844ffL, 0xa4cbfc7d324ecc63L, 0x1f6c736337b5e2f2L, \"jetbrains.mps.core.xml.sax.structure.XMLSAXNodeRule\"), false, false), MetaAdapterFactory.getContainmentLink(0xdcb5a83a19a844ffL, 0xa4cbfc7d324ecc63L, 0x1f6c736337b5e2f2L, 0x1f6c736337b5e2f4L, \"attrs\"));\n      }\n    }\n    return null;\n  }","commit_id":"ba053d35eef60219def3d8ec0f274da1a4e9fd33","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static Scope virtual_getScope_3734116213129936182(SNode thisNode, SNode kind, SNode child) {\n    if (child != null && child.getRoleInParent().equals(\"actualArgument\")) {\n      Scope argumentsScope = XMLSAXChildRule_Behavior.call_getArgumentsScope_4720003541459735421(thisNode, kind);\n      if (argumentsScope != null) {\n        return argumentsScope;\n      }\n    }\n    if (child == SLinkOperations.getTarget(thisNode, MetaAdapterFactory.getContainmentLink(0xdcb5a83a19a844ffL, 0xa4cbfc7d324ecc63L, 0x1f6c736337b5e2d8L, 0x4180d2369beda765L, \"condition\"))) {\n      {\n        SNode concept_a0b0c;\n        concept_a0b0c = kind;\n        if (SConceptOperations.isSubConceptOf(SNodeOperations.asSConcept(concept_a0b0c), MetaAdapterFactory.getConcept(0xdcb5a83a19a844ffL, 0xa4cbfc7d324ecc63L, 0x1f6c736337b5e2cbL, \"jetbrains.mps.core.xml.sax.structure.XMLSAXAttributeRule\"))) {\n          return SimpleRoleScope.forNamedElements(SLinkOperations.getTarget(thisNode, MetaAdapterFactory.getReferenceLink(0xdcb5a83a19a844ffL, 0xa4cbfc7d324ecc63L, 0x1f6c736337b5e2d8L, 0x1f6c736337b5e2dcL, \"rule\")), SLinkOperations.findLinkDeclaration(MetaAdapterFactory.getContainmentLink(0xdcb5a83a19a844ffL, 0xa4cbfc7d324ecc63L, 0x1f6c736337b5e2f2L, 0x1f6c736337b5e2f4L, \"attrs\")));\n        }\n      }\n    }\n    return BehaviorReflection.invokeSuper(Scope.class, thisNode, \"jetbrains.mps.lang.core.structure.ScopeProvider\", \"virtual_getScope_3734116213129936182\", new Object[]{kind, child});\n  }","id":50155,"modified_method":"public static Scope virtual_getScope_3734116213129936182(SNode thisNode, SNode kind, SNode child) {\n    if (child != null && child.getRoleInParent().equals(\"actualArgument\")) {\n      Scope argumentsScope = XMLSAXChildRule_Behavior.call_getArgumentsScope_4720003541459735421(thisNode, kind);\n      if (argumentsScope != null) {\n        return argumentsScope;\n      }\n    }\n    if (child == SLinkOperations.getTarget(thisNode, MetaAdapterFactory.getContainmentLink(0xdcb5a83a19a844ffL, 0xa4cbfc7d324ecc63L, 0x1f6c736337b5e2d8L, 0x4180d2369beda765L, \"condition\"))) {\n      {\n        SNode concept_a0b0c;\n        concept_a0b0c = kind;\n        if (SConceptOperations.isSubConceptOf(SNodeOperations.asSConcept(concept_a0b0c), MetaAdapterFactory.getConcept(0xdcb5a83a19a844ffL, 0xa4cbfc7d324ecc63L, 0x1f6c736337b5e2cbL, \"jetbrains.mps.core.xml.sax.structure.XMLSAXAttributeRule\"))) {\n          return SimpleRoleScope.forNamedElements(SLinkOperations.getTarget(thisNode, MetaAdapterFactory.getReferenceLink(0xdcb5a83a19a844ffL, 0xa4cbfc7d324ecc63L, 0x1f6c736337b5e2d8L, 0x1f6c736337b5e2dcL, \"rule\")), MetaAdapterFactory.getContainmentLink(0xdcb5a83a19a844ffL, 0xa4cbfc7d324ecc63L, 0x1f6c736337b5e2f2L, 0x1f6c736337b5e2f4L, \"attrs\"));\n        }\n      }\n    }\n    return BehaviorReflection.invokeSuper(Scope.class, thisNode, \"jetbrains.mps.lang.core.structure.ScopeProvider\", \"virtual_getScope_3734116213129936182\", new Object[]{kind, child});\n  }","commit_id":"ba053d35eef60219def3d8ec0f274da1a4e9fd33","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static Scope virtual_getScope_3734116213129936182(SNode thisNode, SNode kind, SNode child) {\n    if (kind == MetaAdapterFactory.getConcept(0xdcb5a83a19a844ffL, 0xa4cbfc7d324ecc63L, 0x1f6c736337b5e2cbL, \"jetbrains.mps.core.xml.sax.structure.XMLSAXAttributeRule\").getDeclarationNode()) {\n      SNode node = SNodeOperations.as(SNodeOperations.getParent(thisNode), MetaAdapterFactory.getConcept(0xdcb5a83a19a844ffL, 0xa4cbfc7d324ecc63L, 0x1f6c736337b5e2f2L, \"jetbrains.mps.core.xml.sax.structure.XMLSAXNodeRule\"));\n      if (node == null) {\n        return new EmptyScope();\n      }\n      return SimpleRoleScope.forNamedElements(node, SLinkOperations.findLinkDeclaration(MetaAdapterFactory.getContainmentLink(0xdcb5a83a19a844ffL, 0xa4cbfc7d324ecc63L, 0x1f6c736337b5e2f2L, 0x1f6c736337b5e2f4L, \"attrs\")));\n    }\n    return BehaviorReflection.invokeSuper(Scope.class, thisNode, \"jetbrains.mps.baseLanguage.structure.ConceptFunction\", \"virtual_getScope_3734116213129936182\", new Object[]{kind, child});\n  }","id":50156,"modified_method":"public static Scope virtual_getScope_3734116213129936182(SNode thisNode, SNode kind, SNode child) {\n    if (kind == MetaAdapterFactory.getConcept(0xdcb5a83a19a844ffL, 0xa4cbfc7d324ecc63L, 0x1f6c736337b5e2cbL, \"jetbrains.mps.core.xml.sax.structure.XMLSAXAttributeRule\").getDeclarationNode()) {\n      SNode node = SNodeOperations.as(SNodeOperations.getParent(thisNode), MetaAdapterFactory.getConcept(0xdcb5a83a19a844ffL, 0xa4cbfc7d324ecc63L, 0x1f6c736337b5e2f2L, \"jetbrains.mps.core.xml.sax.structure.XMLSAXNodeRule\"));\n      if (node == null) {\n        return new EmptyScope();\n      }\n      return SimpleRoleScope.forNamedElements(node, MetaAdapterFactory.getContainmentLink(0xdcb5a83a19a844ffL, 0xa4cbfc7d324ecc63L, 0x1f6c736337b5e2f2L, 0x1f6c736337b5e2f4L, \"attrs\"));\n    }\n    return BehaviorReflection.invokeSuper(Scope.class, thisNode, \"jetbrains.mps.baseLanguage.structure.ConceptFunction\", \"virtual_getScope_3734116213129936182\", new Object[]{kind, child});\n  }","commit_id":"ba053d35eef60219def3d8ec0f274da1a4e9fd33","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static Scope virtual_getScope_3734116213129936182(SNode thisNode, SNode kind, SNode child) {\n    if (kind == MetaAdapterFactory.getConcept(0xdcb5a83a19a844ffL, 0xa4cbfc7d324ecc63L, 0xd9be961730be3edL, \"jetbrains.mps.core.xml.sax.structure.XMLSAXNodeRuleParam\").getDeclarationNode()) {\n      return SimpleRoleScope.forNamedElements(thisNode, SLinkOperations.findLinkDeclaration(MetaAdapterFactory.getContainmentLink(0xdcb5a83a19a844ffL, 0xa4cbfc7d324ecc63L, 0x1f6c736337b5e2f2L, 0xd9be961730be2e2L, \"params\")));\n    }\n    return null;\n  }","id":50157,"modified_method":"public static Scope virtual_getScope_3734116213129936182(SNode thisNode, SNode kind, SNode child) {\n    if (kind == MetaAdapterFactory.getConcept(0xdcb5a83a19a844ffL, 0xa4cbfc7d324ecc63L, 0xd9be961730be3edL, \"jetbrains.mps.core.xml.sax.structure.XMLSAXNodeRuleParam\").getDeclarationNode()) {\n      return SimpleRoleScope.forNamedElements(thisNode, MetaAdapterFactory.getContainmentLink(0xdcb5a83a19a844ffL, 0xa4cbfc7d324ecc63L, 0x1f6c736337b5e2f2L, 0xd9be961730be2e2L, \"params\"));\n    }\n    return null;\n  }","commit_id":"ba053d35eef60219def3d8ec0f274da1a4e9fd33","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static Scope virtual_getScope_3734116213129936182(SNode thisNode, SNode kind, SNode child) {\n    if (kind == SConceptOperations.findConceptDeclaration(\"jetbrains.mps.build.workflow.structure.BwfSubTask\")) {\n      return SimpleRoleScope.forNamedElements(thisNode, SLinkOperations.findLinkDeclaration(\"jetbrains.mps.build.workflow.structure.BwfTaskPart\", \"subTasks\"));\n    }\n    return null;\n  }","id":50158,"modified_method":"public static Scope virtual_getScope_3734116213129936182(SNode thisNode, SNode kind, SNode child) {\n    if (kind == SConceptOperations.findConceptDeclaration(\"jetbrains.mps.build.workflow.structure.BwfSubTask\")) {\n      SNode task = SLinkOperations.getTarget(thisNode, \"task\", false);\n      if (task != null && SNodeOperations.getParent(task) == SNodeOperations.getParent(thisNode)) {\n        return ScopeProvider_Behavior.call_getScope_3734116213129936182(task, kind, null);\n      }\n      return SimpleRoleScope.forNamedElements(thisNode, SLinkOperations.findLinkDeclaration(\"jetbrains.mps.build.workflow.structure.BwfTaskPart\", \"subTasks\"));\n    }\n    return null;\n  }","commit_id":"db7d245fe5da1d4d340d141a1de4ac9493eb90df","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static Scope virtual_getScope_3734116213129936182(SNode thisNode, SNode kind, SNode child) {\n    if (kind == SConceptOperations.findConceptDeclaration(\"jetbrains.mps.build.workflow.structure.BwfSubTask\")) {\n      return SimpleRoleScope.forNamedElements(thisNode, SLinkOperations.findLinkDeclaration(\"jetbrains.mps.build.workflow.structure.BwfTask\", \"subTasks\"));\n    }\n    return null;\n  }","id":50159,"modified_method":"public static Scope virtual_getScope_3734116213129936182(SNode thisNode, SNode kind, SNode child) {\n    if (kind == SConceptOperations.findConceptDeclaration(\"jetbrains.mps.build.workflow.structure.BwfSubTask\")) {\n      Scope result = SimpleRoleScope.forNamedElements(thisNode, SLinkOperations.findLinkDeclaration(\"jetbrains.mps.build.workflow.structure.BwfTask\", \"subTasks\"));\n      for (SNode n : SNodeOperations.getAllSiblings(thisNode, false)) {\n        if (SNodeOperations.isInstanceOf(n, \"jetbrains.mps.build.workflow.structure.BwfTaskPart\") && SLinkOperations.getTarget(SNodeOperations.cast(n, \"jetbrains.mps.build.workflow.structure.BwfTaskPart\"), \"task\", false) == thisNode) {\n          result = CompositeScope.createComposite(result, SimpleRoleScope.forNamedElements(n, SLinkOperations.findLinkDeclaration(\"jetbrains.mps.build.workflow.structure.BwfTaskPart\", \"subTasks\")));\n        }\n      }\n      return result;\n    }\n    return null;\n  }","commit_id":"db7d245fe5da1d4d340d141a1de4ac9493eb90df","url":"https://github.com/JetBrains/MPS"},{"original_method":"public ConceptDescriptor getDescriptor(String conceptFqName) {\n    switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0a, conceptFqName)) {\n      case 0:\n        return new CompiledConceptDescriptor(\"jetbrains.mps.build.workflow.structure.BwfAntStatement\", \"jetbrains.mps.build.workflow.structure.BwfStatement\", false, new String[]{\"jetbrains.mps.build.workflow.structure.BwfStatement\"}, new String[]{}, new String[]{});\n      case 1:\n        return new CompiledConceptDescriptor(\"jetbrains.mps.build.workflow.structure.BwfJavaModule\", \"jetbrains.mps.build.workflow.structure.BwfProjectPart\", false, new String[]{\"jetbrains.mps.build.workflow.structure.BwfProjectPart\", \"jetbrains.mps.lang.core.structure.INamedConcept\"}, new String[]{\"outputFolder\"}, new String[]{});\n      case 2:\n        return new CompiledConceptDescriptor(\"jetbrains.mps.build.workflow.structure.BwfJavaModuleReference\", \"jetbrains.mps.lang.core.structure.BaseConcept\", false, new String[]{\"jetbrains.mps.lang.core.structure.BaseConcept\"}, new String[]{}, new String[]{\"target\"});\n      case 3:\n        return new CompiledConceptDescriptor(\"jetbrains.mps.build.workflow.structure.BwfPath\", \"jetbrains.mps.lang.core.structure.BaseConcept\", false, new String[]{\"jetbrains.mps.lang.core.structure.BaseConcept\"}, new String[]{\"path\"}, new String[]{});\n      case 4:\n        return new CompiledConceptDescriptor(\"jetbrains.mps.build.workflow.structure.BwfProject\", \"jetbrains.mps.lang.core.structure.BaseConcept\", false, new String[]{\"jetbrains.mps.lang.core.structure.BaseConcept\", \"jetbrains.mps.lang.core.structure.INamedConcept\"}, new String[]{\"temporaryFolder\"}, new String[]{});\n      case 5:\n        return new CompiledConceptDescriptor(\"jetbrains.mps.build.workflow.structure.BwfProjectPart\", \"jetbrains.mps.lang.core.structure.BaseConcept\", false, new String[]{\"jetbrains.mps.lang.core.structure.BaseConcept\"}, new String[]{}, new String[]{});\n      case 6:\n        return new CompiledConceptDescriptor(\"jetbrains.mps.build.workflow.structure.BwfStatement\", \"jetbrains.mps.lang.core.structure.BaseConcept\", false, new String[]{\"jetbrains.mps.lang.core.structure.BaseConcept\"}, new String[]{}, new String[]{});\n      case 7:\n        return new CompiledConceptDescriptor(\"jetbrains.mps.build.workflow.structure.BwfSubTask\", \"jetbrains.mps.lang.core.structure.BaseConcept\", false, new String[]{\"jetbrains.mps.lang.core.structure.BaseConcept\", \"jetbrains.mps.lang.core.structure.INamedConcept\"}, new String[]{}, new String[]{});\n      case 8:\n        return new CompiledConceptDescriptor(\"jetbrains.mps.build.workflow.structure.BwfSubTaskDependency\", \"jetbrains.mps.lang.core.structure.BaseConcept\", false, new String[]{\"jetbrains.mps.lang.core.structure.BaseConcept\"}, new String[]{}, new String[]{\"target\"});\n      case 9:\n        return new CompiledConceptDescriptor(\"jetbrains.mps.build.workflow.structure.BwfTask\", \"jetbrains.mps.build.workflow.structure.BwfProjectPart\", false, new String[]{\"jetbrains.mps.build.workflow.structure.BwfProjectPart\", \"jetbrains.mps.lang.core.structure.INamedConcept\", \"jetbrains.mps.lang.core.structure.ScopeProvider\"}, new String[]{}, new String[]{});\n      case 10:\n        return new CompiledConceptDescriptor(\"jetbrains.mps.build.workflow.structure.BwfTaskDependency\", \"jetbrains.mps.lang.core.structure.BaseConcept\", false, new String[]{\"jetbrains.mps.lang.core.structure.BaseConcept\"}, new String[]{}, new String[]{\"target\"});\n      case 11:\n        return new CompiledConceptDescriptor(\"jetbrains.mps.build.workflow.structure.BwfTaskPart\", \"jetbrains.mps.build.workflow.structure.BwfProjectPart\", false, new String[]{\"jetbrains.mps.build.workflow.structure.BwfProjectPart\", \"jetbrains.mps.lang.core.structure.ScopeProvider\"}, new String[]{}, new String[]{\"task\"});\n      default:\n        return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);\n    }\n  }","id":50160,"modified_method":"public ConceptDescriptor getDescriptor(String conceptFqName) {\n    switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0a, conceptFqName)) {\n      case 0:\n        return new CompiledConceptDescriptor(\"jetbrains.mps.build.workflow.structure.BwfAntStatement\", \"jetbrains.mps.build.workflow.structure.BwfStatement\", false, new String[]{\"jetbrains.mps.build.workflow.structure.BwfStatement\"}, new String[]{}, new String[]{});\n      case 1:\n        return new CompiledConceptDescriptor(\"jetbrains.mps.build.workflow.structure.BwfJavaModule\", \"jetbrains.mps.build.workflow.structure.BwfProjectPart\", false, new String[]{\"jetbrains.mps.build.workflow.structure.BwfProjectPart\", \"jetbrains.mps.lang.core.structure.INamedConcept\"}, new String[]{\"outputFolder\"}, new String[]{});\n      case 2:\n        return new CompiledConceptDescriptor(\"jetbrains.mps.build.workflow.structure.BwfJavaModuleReference\", \"jetbrains.mps.lang.core.structure.BaseConcept\", false, new String[]{\"jetbrains.mps.lang.core.structure.BaseConcept\"}, new String[]{}, new String[]{\"target\"});\n      case 3:\n        return new CompiledConceptDescriptor(\"jetbrains.mps.build.workflow.structure.BwfPath\", \"jetbrains.mps.lang.core.structure.BaseConcept\", false, new String[]{\"jetbrains.mps.lang.core.structure.BaseConcept\"}, new String[]{\"path\"}, new String[]{});\n      case 4:\n        return new CompiledConceptDescriptor(\"jetbrains.mps.build.workflow.structure.BwfProject\", \"jetbrains.mps.lang.core.structure.BaseConcept\", false, new String[]{\"jetbrains.mps.lang.core.structure.BaseConcept\", \"jetbrains.mps.lang.core.structure.INamedConcept\"}, new String[]{\"temporaryFolder\"}, new String[]{});\n      case 5:\n        return new CompiledConceptDescriptor(\"jetbrains.mps.build.workflow.structure.BwfProjectPart\", \"jetbrains.mps.lang.core.structure.BaseConcept\", false, new String[]{\"jetbrains.mps.lang.core.structure.BaseConcept\"}, new String[]{}, new String[]{});\n      case 6:\n        return new CompiledConceptDescriptor(\"jetbrains.mps.build.workflow.structure.BwfStatement\", \"jetbrains.mps.lang.core.structure.BaseConcept\", false, new String[]{\"jetbrains.mps.lang.core.structure.BaseConcept\"}, new String[]{}, new String[]{});\n      case 7:\n        return new CompiledConceptDescriptor(\"jetbrains.mps.build.workflow.structure.BwfSubTask\", \"jetbrains.mps.lang.core.structure.BaseConcept\", false, new String[]{\"jetbrains.mps.lang.core.structure.BaseConcept\", \"jetbrains.mps.lang.core.structure.INamedConcept\", \"jetbrains.mps.lang.core.structure.ScopeProvider\"}, new String[]{}, new String[]{});\n      case 8:\n        return new CompiledConceptDescriptor(\"jetbrains.mps.build.workflow.structure.BwfSubTaskDependency\", \"jetbrains.mps.lang.core.structure.BaseConcept\", false, new String[]{\"jetbrains.mps.lang.core.structure.BaseConcept\"}, new String[]{}, new String[]{\"target\"});\n      case 9:\n        return new CompiledConceptDescriptor(\"jetbrains.mps.build.workflow.structure.BwfTask\", \"jetbrains.mps.build.workflow.structure.BwfProjectPart\", false, new String[]{\"jetbrains.mps.build.workflow.structure.BwfProjectPart\", \"jetbrains.mps.lang.core.structure.INamedConcept\", \"jetbrains.mps.lang.core.structure.ScopeProvider\"}, new String[]{}, new String[]{});\n      case 10:\n        return new CompiledConceptDescriptor(\"jetbrains.mps.build.workflow.structure.BwfTaskDependency\", \"jetbrains.mps.lang.core.structure.BaseConcept\", false, new String[]{\"jetbrains.mps.lang.core.structure.BaseConcept\"}, new String[]{}, new String[]{\"target\"});\n      case 11:\n        return new CompiledConceptDescriptor(\"jetbrains.mps.build.workflow.structure.BwfTaskPart\", \"jetbrains.mps.build.workflow.structure.BwfProjectPart\", false, new String[]{\"jetbrains.mps.build.workflow.structure.BwfProjectPart\", \"jetbrains.mps.lang.core.structure.ScopeProvider\"}, new String[]{}, new String[]{\"task\"});\n      default:\n        return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);\n    }\n  }","commit_id":"db7d245fe5da1d4d340d141a1de4ac9493eb90df","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static Message decodeMessageFromPacket(byte[] buf, int offset, int length, PeerContext peer, int overhead) {\n\t\tDataInputStream dis\n\t    = new DataInputStream(new ByteArrayInputStream(buf,\n\t        offset, length));\n\t\treturn decodeMessage(dis, peer, length + overhead);\n\t}","id":50161,"modified_method":"public static Message decodeMessageFromPacket(byte[] buf, int offset, int length, PeerContext peer, int overhead) {\n\t\tDataInputStream dis\n\t    = new DataInputStream(new ByteArrayInputStream(buf,\n\t        offset, length));\n\t\treturn decodeMessage(dis, peer, length + overhead, true, false);\n\t}","commit_id":"0a7dc55d7d652ff6a384ef58c094eee88e8d0775","url":"https://github.com/freenet/fred"},{"original_method":"public static Message decodeMessage(DataInputStream dis, PeerContext peer, int recvByteCount) {\n\t\tMessageType mspec;\n        try {\n            mspec = MessageType.getSpec(new Integer(dis.readInt()));\n        } catch (IOException e1) {\n        \tif(Logger.shouldLog(Logger.DEBUG, Message.class))\n        \t\tLogger.minor(Message.class,\"Failed to read message type: \"+e1, e1);\n            return null;\n        }\n        if (mspec == null) {\n\t\t    return null;\n\t\t}\n\t\tif(mspec.isInternalOnly())\n\t\t    return null; // silently discard internal-only messages\n\t\tMessage m = new Message(mspec, peer, recvByteCount);\n\t\ttry {\n\t\t    for (Iterator i = mspec.getOrderedFields().iterator(); i.hasNext();) {\n\t\t        String name = (String) i.next();\n\t\t        Class type = (Class) mspec.getFields().get(name);\n\t\t        if (type.equals(LinkedList.class)) { // Special handling for LinkedList to deal with element type\n\t\t            m.set(name, Serializer.readListFromDataInputStream((Class) mspec.getLinkedListTypes().get(name), dis));\n\t\t        } else {\n\t\t            m.set(name, Serializer.readFromDataInputStream(type, dis));\n\t\t        }\n\t\t    }\n\t\t} catch (EOFException e) {\n\t\t    Logger.normal(Message.class,peer.getPeer()+\" sent a message packet that ends prematurely while deserialising \"+mspec.getName(), e);\n\t\t    return null;\n\t\t} catch (IOException e) {\n\t\t    Logger.error(Message.class, \"WTF?: \"+e+\" reading from buffer stream\", e);\n\t\t    return null;\n\t\t}\n\t\treturn m;\n\t}","id":50162,"modified_method":"public static Message decodeMessage(DataInputStream dis, PeerContext peer, int recvByteCount, boolean mayHaveSubMessages, boolean inSubMessage) {\n\t\tMessageType mspec;\n        try {\n            mspec = MessageType.getSpec(new Integer(dis.readInt()));\n        } catch (IOException e1) {\n        \tif(Logger.shouldLog(Logger.DEBUG, Message.class))\n        \t\tLogger.minor(Message.class,\"Failed to read message type: \"+e1, e1);\n            return null;\n        }\n        if (mspec == null) {\n\t\t    return null;\n\t\t}\n\t\tif(mspec.isInternalOnly())\n\t\t    return null; // silently discard internal-only messages\n\t\tMessage m = new Message(mspec, peer, recvByteCount);\n\t\ttry {\n\t\t    for (Iterator i = mspec.getOrderedFields().iterator(); i.hasNext();) {\n\t\t        String name = (String) i.next();\n\t\t        Class type = (Class) mspec.getFields().get(name);\n\t\t        if (type.equals(LinkedList.class)) { // Special handling for LinkedList to deal with element type\n\t\t            m.set(name, Serializer.readListFromDataInputStream((Class) mspec.getLinkedListTypes().get(name), dis));\n\t\t        } else {\n\t\t            m.set(name, Serializer.readFromDataInputStream(type, dis));\n\t\t        }\n\t\t    }\n\t\t    if(mayHaveSubMessages) {\n\t\t    \twhile(true) {\n\t    \t\t\tMessage subMessage = decodeMessage(dis, peer, 0, false, true);\n\t    \t\t\tif(subMessage == null) return m;\n\t    \t\t\tm.addSubMessage(subMessage);\n\t\t    \t}\n\t\t    }\n\t\t} catch (EOFException e) {\n\t\t\tString msg = peer.getPeer()+\" sent a message packet that ends prematurely while deserialising \"+mspec.getName();\n\t\t\tif(inSubMessage)\n\t\t\t\tLogger.minor(Message.class, msg+\" in sub-message\", e);\n\t\t\telse\n\t\t\t\tLogger.error(Message.class, msg, e);\n\t\t    return null;\n\t\t} catch (IOException e) {\n\t\t    Logger.error(Message.class, \"Unexpected IOException: \"+e+\" reading from buffer stream\", e);\n\t\t    return null;\n\t\t}\n\t\treturn m;\n\t}","commit_id":"0a7dc55d7d652ff6a384ef58c094eee88e8d0775","url":"https://github.com/freenet/fred"},{"original_method":"public void run() {\n\t\t    freenet.support.Logger.OSThread.logPID(this);\n        \tif(logMINOR) Logger.minor(this, \"Receiving data for \"+InsertHandler.this);\n            try {\n                br.receive();\n                if(logMINOR) Logger.minor(this, \"Received data for \"+InsertHandler.this);\n            \tsynchronized(InsertHandler.this) {\n            \t\treceiveCompleted = true;\n            \t\tInsertHandler.this.notifyAll();\n            \t}\n            } catch (RetrievalException e) {\n            \tsynchronized(InsertHandler.this) {\n            \t\treceiveCompleted = true;\n            \t\treceiveFailed = true;\n            \t\tInsertHandler.this.notifyAll();\n            \t}\n                // Cancel the sender\n            \tif(sender != null)\n            \t\tsender.receiveFailed(); // tell it to stop if it hasn't already failed... unless it's sending from store\n                runThread.interrupt();\n                Message msg = DMT.createFNPDataInsertRejected(uid, DMT.DATA_INSERT_REJECTED_RECEIVE_FAILED);\n                try {\n                    source.sendSync(msg, InsertHandler.this);\n                } catch (NotConnectedException ex) {\n                    Logger.error(this, \"Can't send \"+msg+\" to \"+source+\": \"+ex);\n                }\n                if(logMINOR) Logger.minor(this, \"Failed to retrieve: \"+e, e);\n                return;\n            } catch (Throwable t) {\n                Logger.error(this, \"Caught \"+t, t);\n            }\n        }","id":50163,"modified_method":"public void run() {\n\t\t    freenet.support.Logger.OSThread.logPID(this);\n        \tif(logMINOR) Logger.minor(this, \"Receiving data for \"+InsertHandler.this);\n            try {\n                br.receive();\n                if(logMINOR) Logger.minor(this, \"Received data for \"+InsertHandler.this);\n            \tsynchronized(InsertHandler.this) {\n            \t\treceiveCompleted = true;\n            \t\tInsertHandler.this.notifyAll();\n            \t}\n            } catch (RetrievalException e) {\n            \tsynchronized(InsertHandler.this) {\n            \t\treceiveCompleted = true;\n            \t\treceiveFailed = true;\n            \t\tInsertHandler.this.notifyAll();\n            \t}\n                // Cancel the sender\n            \tif(sender != null)\n            \t\tsender.receiveFailed(); // tell it to stop if it hasn't already failed... unless it's sending from store\n                runThread.interrupt();\n                Message msg = DMT.createFNPDataInsertRejected(uid, DMT.DATA_INSERT_REJECTED_RECEIVE_FAILED);\n                try {\n                    source.sendSync(msg, InsertHandler.this);\n                } catch (NotConnectedException ex) {\n\t\t\t\t\t//If they are not connected, that's probably why the receive failed!\n                    if (logMINOR) Logger.minor(this, \"Can't send \"+msg+\" to \"+source+\": \"+ex);\n                }\n                if(logMINOR) Logger.minor(this, \"Failed to retrieve: \"+e, e);\n                return;\n            } catch (Throwable t) {\n                Logger.error(this, \"Caught \"+t, t);\n            }\n        }","commit_id":"15430b9685d2218d57c3c039d779613ebf0e902a","url":"https://github.com/freenet/fred"},{"original_method":"public void onSuccess(Bucket data, int blockNo, ClientKeyBlock block, ObjectContainer container, ClientContext context, SplitFileFetcherSubSegment sub) {\n\t\tif(persistent)\n\t\t\tcontainer.activate(this, 1);\n\t\tif(data == null) throw new NullPointerException();\n\t\tboolean decodeNow = false;\n\t\tlogMINOR = Logger.shouldLog(Logger.MINOR, this);\n\t\tif(logMINOR) Logger.minor(this, \"Fetched block \"+blockNo+\" in \"+this);\n\t\tif(parent instanceof ClientGetter)\n\t\t\t((ClientGetter)parent).addKeyToBinaryBlob(block, container, context);\n\t\t// No need to unregister key, because it will be cleared in tripPendingKey().\n\t\tboolean dontNotify;\n\t\tsynchronized(this) {\n\t\t\tif(finished) {\n\t\t\t\t// Happens sometimes, don't complain about it...\n\t\t\t\t// What this means is simply that there were a bunch of requests\n\t\t\t\t// running, one of them completed, the whole segment went into\n\t\t\t\t// decode, and now the extra requests are surplus to requirements.\n\t\t\t\t// It's a slight overhead, but the alternative is worse.\n\t\t\t\tif(logMINOR)\n\t\t\t\t\tLogger.minor(this, \"onSuccess() when already finished for \"+this);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(startedDecode) {\n\t\t\t\t// Much the same.\n\t\t\t\tif(logMINOR)\n\t\t\t\t\tLogger.minor(this, \"onSuccess() when started decode for \"+this);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(blockNo < dataKeys.length) {\n\t\t\t\tif(dataKeys[blockNo] == null) {\n\t\t\t\t\tif(!startedDecode) Logger.error(this, \"Block already finished: \"+blockNo);\n\t\t\t\t\tdata.free();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tdataRetries[blockNo] = 0; // Prevent healing of successfully fetched block.\n\t\t\t\tdataKeys[blockNo] = null;\n\t\t\t\tif(persistent)\n\t\t\t\t\tcontainer.activate(dataBuckets[blockNo], 1);\n\t\t\t\tdataBuckets[blockNo].setData(data);\n\t\t\t\tif(persistent)\n\t\t\t\t\tcontainer.set(dataBuckets[blockNo]);\n\t\t\t} else if(blockNo < checkKeys.length + dataKeys.length) {\n\t\t\t\tblockNo -= dataKeys.length;\n\t\t\t\tif(checkKeys[blockNo] == null) {\n\t\t\t\t\tif(!startedDecode) Logger.error(this, \"Check block already finished: \"+blockNo);\n\t\t\t\t\tdata.free();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tcheckRetries[blockNo] = 0; // Prevent healing of successfully fetched block.\n\t\t\t\tcheckKeys[blockNo] = null;\n\t\t\t\tif(persistent)\n\t\t\t\t\tcontainer.activate(checkBuckets[blockNo], 1);\n\t\t\t\tcheckBuckets[blockNo].setData(data);\n\t\t\t\tif(persistent)\n\t\t\t\t\tcontainer.set(checkBuckets[blockNo]);\n\t\t\t} else\n\t\t\t\tLogger.error(this, \"Unrecognized block number: \"+blockNo, new Exception(\"error\"));\n\t\t\tif(startedDecode) {\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tfetchedBlocks++;\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Fetched \"+fetchedBlocks+\" blocks in onSuccess(\"+blockNo+\")\");\n\t\t\t\tdecodeNow = (!startedDecode) && (fetchedBlocks >= minFetched);\n\t\t\t\tif(decodeNow) {\n\t\t\t\t\tstartedDecode = true;\n\t\t\t\t\tfinishing = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tdontNotify = !scheduled;\n\t\t}\n\t\tif(persistent) {\n\t\t\tcontainer.set(this);\n\t\t\tcontainer.activate(parent, 1);\n\t\t}\n\t\tparent.completedBlock(dontNotify, container, context);\n\t\tif(decodeNow) {\n\t\t\tif(persistent)\n\t\t\t\tcontainer.activate(parentFetcher, 1);\n\t\t\tparentFetcher.removeMyPendingKeys(this, container, context);\n\t\t\tif(persistent)\n\t\t\t\tcontainer.deactivate(parentFetcher, 1);\n\t\t\tremoveSubSegments(container, context);\n\t\t\tdecode(container, context);\n\t\t}\n\t\tif(persistent) {\n\t\t\tcontainer.deactivate(parent, 1);\n\t\t}\n\t}","id":50164,"modified_method":"public void onSuccess(Bucket data, int blockNo, ClientKeyBlock block, ObjectContainer container, ClientContext context, SplitFileFetcherSubSegment sub) {\n\t\tif(persistent)\n\t\t\tcontainer.activate(this, 1);\n\t\tif(data == null) throw new NullPointerException();\n\t\tboolean decodeNow = false;\n\t\tlogMINOR = Logger.shouldLog(Logger.MINOR, this);\n\t\tif(logMINOR) Logger.minor(this, \"Fetched block \"+blockNo+\" in \"+this);\n\t\tif(parent instanceof ClientGetter)\n\t\t\t((ClientGetter)parent).addKeyToBinaryBlob(block, container, context);\n\t\t// No need to unregister key, because it will be cleared in tripPendingKey().\n\t\tboolean dontNotify;\n\t\tsynchronized(this) {\n\t\t\tif(finished) {\n\t\t\t\t// Happens sometimes, don't complain about it...\n\t\t\t\t// What this means is simply that there were a bunch of requests\n\t\t\t\t// running, one of them completed, the whole segment went into\n\t\t\t\t// decode, and now the extra requests are surplus to requirements.\n\t\t\t\t// It's a slight overhead, but the alternative is worse.\n\t\t\t\tif(logMINOR)\n\t\t\t\t\tLogger.minor(this, \"onSuccess() when already finished for \"+this);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(startedDecode) {\n\t\t\t\t// Much the same.\n\t\t\t\tif(logMINOR)\n\t\t\t\t\tLogger.minor(this, \"onSuccess() when started decode for \"+this);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(blockNo < dataKeys.length) {\n\t\t\t\tif(dataKeys[blockNo] == null) {\n\t\t\t\t\tif(!startedDecode) {\n\t\t\t\t\t\t// This can happen.\n\t\t\t\t\t\t// We queue a persistent download, we queue a transient.\n\t\t\t\t\t\t// The transient goes through DatastoreChecker first,\n\t\t\t\t\t\t// and feeds the block to us. We don't finish, because\n\t\t\t\t\t\t// we need more blocks. Then the persistent goes through\n\t\t\t\t\t\t// the DatastoreChecker, and calls us again with the same\n\t\t\t\t\t\t// block.\n\t\t\t\t\t\tif(logMINOR)\n\t\t\t\t\t\t\tLogger.minor(this, \"Block already finished: \"+blockNo);\n\t\t\t\t\t}\n\t\t\t\t\tdata.free();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tdataRetries[blockNo] = 0; // Prevent healing of successfully fetched block.\n\t\t\t\tdataKeys[blockNo] = null;\n\t\t\t\tif(persistent)\n\t\t\t\t\tcontainer.activate(dataBuckets[blockNo], 1);\n\t\t\t\tdataBuckets[blockNo].setData(data);\n\t\t\t\tif(persistent)\n\t\t\t\t\tcontainer.set(dataBuckets[blockNo]);\n\t\t\t} else if(blockNo < checkKeys.length + dataKeys.length) {\n\t\t\t\tblockNo -= dataKeys.length;\n\t\t\t\tif(checkKeys[blockNo] == null) {\n\t\t\t\t\tif(!startedDecode) {\n\t\t\t\t\t\tif(logMINOR)\n\t\t\t\t\t\t\tLogger.minor(this, \"Check block already finished: \"+blockNo);\n\t\t\t\t\t}\n\t\t\t\t\tdata.free();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tcheckRetries[blockNo] = 0; // Prevent healing of successfully fetched block.\n\t\t\t\tcheckKeys[blockNo] = null;\n\t\t\t\tif(persistent)\n\t\t\t\t\tcontainer.activate(checkBuckets[blockNo], 1);\n\t\t\t\tcheckBuckets[blockNo].setData(data);\n\t\t\t\tif(persistent)\n\t\t\t\t\tcontainer.set(checkBuckets[blockNo]);\n\t\t\t} else\n\t\t\t\tLogger.error(this, \"Unrecognized block number: \"+blockNo, new Exception(\"error\"));\n\t\t\tif(startedDecode) {\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tfetchedBlocks++;\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Fetched \"+fetchedBlocks+\" blocks in onSuccess(\"+blockNo+\")\");\n\t\t\t\tdecodeNow = (!startedDecode) && (fetchedBlocks >= minFetched);\n\t\t\t\tif(decodeNow) {\n\t\t\t\t\tstartedDecode = true;\n\t\t\t\t\tfinishing = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tdontNotify = !scheduled;\n\t\t}\n\t\tif(persistent) {\n\t\t\tcontainer.set(this);\n\t\t\tcontainer.activate(parent, 1);\n\t\t}\n\t\tparent.completedBlock(dontNotify, container, context);\n\t\tif(decodeNow) {\n\t\t\tif(persistent)\n\t\t\t\tcontainer.activate(parentFetcher, 1);\n\t\t\tparentFetcher.removeMyPendingKeys(this, container, context);\n\t\t\tif(persistent)\n\t\t\t\tcontainer.deactivate(parentFetcher, 1);\n\t\t\tremoveSubSegments(container, context);\n\t\t\tdecode(container, context);\n\t\t}\n\t\tif(persistent) {\n\t\t\tcontainer.deactivate(parent, 1);\n\t\t}\n\t}","commit_id":"d84207bdc71b59fdc86336b37af48fd3913a7525","url":"https://github.com/freenet/fred"},{"original_method":"public void schedule() {\n\t\t\tif(checker == null)\n\t\t\t\tLogger.error(this, \"Checker == null in schedule()\", new Exception(\"error\"));\n\t\t\telse\n\t\t\t\tchecker.schedule();\n\t\t}","id":50165,"modified_method":"public void schedule() {\n\t\t\tif(checker == null) {\n\t\t\t\tif(logMINOR)\n\t\t\t\t\tLogger.minor(this, \"Checker == null in schedule() for \"+this, new Exception(\"debug\"));\n\t\t\t} else\n\t\t\t\tchecker.schedule();\n\t\t}","commit_id":"c14c70a93baf52d55d66f2a8040d71493905fae4","url":"https://github.com/freenet/fred"},{"original_method":"public void onSuccess(ClientPutState state, ObjectContainer container, ClientContext context) {\n\t\t\tif(logMINOR) Logger.minor(this, \"Completed \"+this);\n\t\t\tif(persistent) {\n\t\t\t\tcontainer.activate(SimpleManifestPutter.this, 1);\n\t\t\t\tcontainer.activate(runningPutHandlers, 2);\n\t\t\t}\n\t\t\tSimpleManifestPutter.this.onFetchable(this, container);\n\t\t\tClientPutState oldState;\n\t\t\tboolean insertedAllFiles = true;\n\t\t\tsynchronized(this) {\n\t\t\t\toldState = currentState;\n\t\t\t\tcurrentState = null;\n\t\t\t}\n\t\t\tsynchronized(SimpleManifestPutter.this) {\n\t\t\t\tif(persistent) container.store(this);\n\t\t\t\trunningPutHandlers.remove(this);\n\t\t\t\tif(persistent)\n\t\t\t\t\tcontainer.ext().store(runningPutHandlers, 2);\n\t\t\t\t\n\t\t\t\tif(persistent)\n\t\t\t\t\tcontainer.activate(putHandlersWaitingForMetadata, 2);\n\t\t\t\tif(putHandlersWaitingForMetadata.contains(this)) {\n\t\t\t\t\tputHandlersWaitingForMetadata.remove(this);\n\t\t\t\t\tcontainer.ext().store(putHandlersWaitingForMetadata, 2);\n\t\t\t\t\tLogger.error(this, \"PutHandler was in waitingForMetadata in onSuccess() on \"+this+\" for \"+SimpleManifestPutter.this);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(persistent)\n\t\t\t\t\tcontainer.deactivate(putHandlersWaitingForMetadata, 1);\n\t\t\t\tif(persistent)\n\t\t\t\t\tcontainer.activate(waitingForBlockSets, 2);\n\t\t\t\tif(waitingForBlockSets.contains(this)) {\n\t\t\t\t\twaitingForBlockSets.remove(this);\n\t\t\t\t\tcontainer.store(waitingForBlockSets);\n\t\t\t\t\tLogger.error(this, \"PutHandler was in waitingForBlockSets in onSuccess() on \"+this+\" for \"+SimpleManifestPutter.this);\n\t\t\t\t}\n\t\t\t\tif(persistent)\n\t\t\t\t\tcontainer.deactivate(waitingForBlockSets, 1);\n\t\t\t\t\n\t\t\t\tif(persistent)\n\t\t\t\t\tcontainer.deactivate(putHandlersWaitingForFetchable, 1);\n\t\t\t\tif(persistent)\n\t\t\t\t\tcontainer.activate(putHandlersWaitingForFetchable, 2);\n\t\t\t\tif(putHandlersWaitingForFetchable.contains(this)) {\n\t\t\t\t\tputHandlersWaitingForFetchable.remove(this);\n\t\t\t\t\tcontainer.store(putHandlersWaitingForFetchable);\n\t\t\t\t\tLogger.error(this, \"PutHandler was in waitingForFetchable in onSuccess() on \"+this+\" for \"+SimpleManifestPutter.this);\n\t\t\t\t}\n\t\t\t\tif(persistent)\n\t\t\t\t\tcontainer.deactivate(putHandlersWaitingForFetchable, 1);\n\t\t\t\t\n\t\t\t\tif(!runningPutHandlers.isEmpty()) {\n\t\t\t\t\tif(logMINOR) {\n\t\t\t\t\t\tLogger.minor(this, \"Running put handlers: \"+runningPutHandlers.size());\n\t\t\t\t\t\tfor(Object o : runningPutHandlers) {\n\t\t\t\t\t\t\tboolean activated = true;\n\t\t\t\t\t\t\tif(persistent) {\n\t\t\t\t\t\t\t\tactivated = container.ext().isActive(o);\n\t\t\t\t\t\t\t\tif(!activated) container.activate(o, 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tLogger.minor(this, \"Still running: \"+o);\n\t\t\t\t\t\t\tif(!activated)\n\t\t\t\t\t\t\t\tcontainer.deactivate(o, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tinsertedAllFiles = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(oldState != null && oldState != state && persistent) {\n\t\t\t\tcontainer.activate(oldState, 1);\n\t\t\t\toldState.removeFrom(container, context);\n\t\t\t} else if(state != null && persistent) {\n\t\t\t\tstate.removeFrom(container, context);\n\t\t\t}\n\t\t\tif(insertedAllFiles)\n\t\t\t\tinsertedAllFiles(container, context);\n\t\t\tif(persistent) {\n\t\t\t\tcontainer.deactivate(runningPutHandlers, 1);\n\t\t\t\tcontainer.deactivate(SimpleManifestPutter.this, 1);\n\t\t\t}\n\t\t}","id":50166,"modified_method":"public void onSuccess(ClientPutState state, ObjectContainer container, ClientContext context) {\n\t\t\tif(logMINOR) Logger.minor(this, \"Completed \"+this);\n\t\t\tif(persistent) {\n\t\t\t\tcontainer.activate(SimpleManifestPutter.this, 1);\n\t\t\t\tcontainer.activate(runningPutHandlers, 2);\n\t\t\t}\n\t\t\tSimpleManifestPutter.this.onFetchable(this, container);\n\t\t\tClientPutState oldState;\n\t\t\tboolean insertedAllFiles = true;\n\t\t\tsynchronized(this) {\n\t\t\t\toldState = currentState;\n\t\t\t\tcurrentState = null;\n\t\t\t}\n\t\t\tsynchronized(SimpleManifestPutter.this) {\n\t\t\t\tif(persistent) container.store(this);\n\t\t\t\trunningPutHandlers.remove(this);\n\t\t\t\tif(persistent)\n\t\t\t\t\tcontainer.ext().store(runningPutHandlers, 2);\n\t\t\t\t\n\t\t\t\tif(persistent)\n\t\t\t\t\tcontainer.activate(putHandlersWaitingForMetadata, 2);\n\t\t\t\tif(putHandlersWaitingForMetadata.contains(this)) {\n\t\t\t\t\tputHandlersWaitingForMetadata.remove(this);\n\t\t\t\t\tcontainer.ext().store(putHandlersWaitingForMetadata, 2);\n\t\t\t\t\tLogger.error(this, \"PutHandler was in waitingForMetadata in onSuccess() on \"+this+\" for \"+SimpleManifestPutter.this);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(persistent)\n\t\t\t\t\tcontainer.deactivate(putHandlersWaitingForMetadata, 1);\n\t\t\t\tif(persistent)\n\t\t\t\t\tcontainer.activate(waitingForBlockSets, 2);\n\t\t\t\tif(waitingForBlockSets.contains(this)) {\n\t\t\t\t\twaitingForBlockSets.remove(this);\n\t\t\t\t\tcontainer.store(waitingForBlockSets);\n\t\t\t\t\tLogger.error(this, \"PutHandler was in waitingForBlockSets in onSuccess() on \"+this+\" for \"+SimpleManifestPutter.this);\n\t\t\t\t}\n\t\t\t\tif(persistent)\n\t\t\t\t\tcontainer.deactivate(waitingForBlockSets, 1);\n\t\t\t\t\n\t\t\t\tif(persistent)\n\t\t\t\t\tcontainer.deactivate(putHandlersWaitingForFetchable, 1);\n\t\t\t\tif(persistent)\n\t\t\t\t\tcontainer.activate(putHandlersWaitingForFetchable, 2);\n\t\t\t\tif(putHandlersWaitingForFetchable.contains(this)) {\n\t\t\t\t\tputHandlersWaitingForFetchable.remove(this);\n\t\t\t\t\tcontainer.store(putHandlersWaitingForFetchable);\n\t\t\t\t\t// Not getting an onFetchable is not unusual, just ignore it.\n\t\t\t\t\tif(logMINOR) Logger.minor(this, \"PutHandler was in waitingForFetchable in onSuccess() on \"+this+\" for \"+SimpleManifestPutter.this);\n\t\t\t\t}\n\t\t\t\tif(persistent)\n\t\t\t\t\tcontainer.deactivate(putHandlersWaitingForFetchable, 1);\n\t\t\t\t\n\t\t\t\tif(!runningPutHandlers.isEmpty()) {\n\t\t\t\t\tif(logMINOR) {\n\t\t\t\t\t\tLogger.minor(this, \"Running put handlers: \"+runningPutHandlers.size());\n\t\t\t\t\t\tfor(Object o : runningPutHandlers) {\n\t\t\t\t\t\t\tboolean activated = true;\n\t\t\t\t\t\t\tif(persistent) {\n\t\t\t\t\t\t\t\tactivated = container.ext().isActive(o);\n\t\t\t\t\t\t\t\tif(!activated) container.activate(o, 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tLogger.minor(this, \"Still running: \"+o);\n\t\t\t\t\t\t\tif(!activated)\n\t\t\t\t\t\t\t\tcontainer.deactivate(o, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tinsertedAllFiles = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(oldState != null && oldState != state && persistent) {\n\t\t\t\tcontainer.activate(oldState, 1);\n\t\t\t\toldState.removeFrom(container, context);\n\t\t\t} else if(state != null && persistent) {\n\t\t\t\tstate.removeFrom(container, context);\n\t\t\t}\n\t\t\tif(insertedAllFiles)\n\t\t\t\tinsertedAllFiles(container, context);\n\t\t\tif(persistent) {\n\t\t\t\tcontainer.deactivate(runningPutHandlers, 1);\n\t\t\t\tcontainer.deactivate(SimpleManifestPutter.this, 1);\n\t\t\t}\n\t\t}","commit_id":"aff4011b2ca91f88f5ac1a6c537d9e5e689781c9","url":"https://github.com/freenet/fred"},{"original_method":"private void receivedNotice(boolean success) {\n\t\t\tsynchronized(this) {\n\t\t\t\tif (receivedCompletionNotice) {\n\t\t\t\t\tLogger.error(this, \"receivedNotice(\"+success+\"), already had receivedNotice(\"+completionSucceeded+\")\");\n\t\t\t\t} else {\n\t\t\t\tcompletionSucceeded = success;\n\t\t\t\treceivedCompletionNotice = true;\n\t\t\t\tnotifyAll();\n\t\t\t\t}\n\t\t\t}\n\t\t\tsynchronized(backgroundTransfers) {\n\t\t\t\tbackgroundTransfers.notifyAll();\n\t\t\t}\n\t\t\tif(!success) {\n\t\t\t\tsetTransferTimedOut();\n\t\t\t}\t\t\t\n\t\t}","id":50167,"modified_method":"/** @return True unless we had already received a notice. */\n\t\tprivate boolean receivedNotice(boolean success) {\n\t\t\tsynchronized(this) {\n\t\t\t\tif (receivedCompletionNotice) {\n\t\t\t\t\tif(logMINOR) Logger.minor(this, \"receivedNotice(\"+success+\"), already had receivedNotice(\"+completionSucceeded+\")\");\n\t\t\t\t\treturn false;\n\t\t\t\t} else {\n\t\t\t\tcompletionSucceeded = success;\n\t\t\t\treceivedCompletionNotice = true;\n\t\t\t\tnotifyAll();\n\t\t\t\t}\n\t\t\t}\n\t\t\tsynchronized(backgroundTransfers) {\n\t\t\t\tbackgroundTransfers.notifyAll();\n\t\t\t}\n\t\t\tif(!success) {\n\t\t\t\tsetTransferTimedOut();\n\t\t\t}\n\t\t\treturn true;\n\t\t}","commit_id":"8dde18013b6b6ee7bd1e00e22dbea0372a0192d5","url":"https://github.com/freenet/fred"},{"original_method":"public void onTimeout() {\n\t\t\t/* FIXME: Cascading timeout...\n\t\t\t   if this times out, we don't have any time to report to the node of origin the timeout notification (anyTimedOut?).\n\t\t\t */\n\t\t\t// NORMAL priority because it is normally caused by a transfer taking too long downstream, and that doesn't usually indicate a bug.\n\t\t\tLogger.normal(this, \"Timed out waiting for a final ack from: \"+pn+\" on \"+this);\n\t\t\tpn.localRejectedOverload(\"InsertTimeoutNoFinalAck\");\n\t\t\treceivedNotice(false);\n\t\t}","id":50168,"modified_method":"public void onTimeout() {\n\t\t\t/* FIXME: Cascading timeout...\n\t\t\t   if this times out, we don't have any time to report to the node of origin the timeout notification (anyTimedOut?).\n\t\t\t */\n\t\t\t// NORMAL priority because it is normally caused by a transfer taking too long downstream, and that doesn't usually indicate a bug.\n\t\t\tLogger.normal(this, \"Timed out waiting for a final ack from: \"+pn+\" on \"+this);\n\t\t\tif(receivedNotice(false)) {\n\t\t\t\tpn.localRejectedOverload(\"InsertTimeoutNoFinalAck\");\n\t\t\t\t// First timeout. Wait for second timeout.\n\t\t\t\ttry {\n\t\t\t\t\tnode.usm.addAsyncFilter(getNotificationMessageFilter(), this);\n\t\t\t\t} catch (DisconnectedException e) {\n\t\t\t\t\t// Normal\n\t\t\t\t\tif(logMINOR)\n\t\t\t\t\t\tLogger.minor(this, \"Disconnected while adding filter after first timeout\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tLogger.error(this, \"Second timeout waiting for final ack from \"+pn+\" on \"+this);\n\t\t\t\tpn.fatalTimeout();\n\t\t\t}\n\t\t}","commit_id":"8dde18013b6b6ee7bd1e00e22dbea0372a0192d5","url":"https://github.com/freenet/fred"},{"original_method":"/** Caller should take the lock on FProxyToadlet.fetchers, then call this \n\t * function, if it returns true then finish the cancel outside the lock.\n\t */\n\tpublic synchronized boolean canCancel() {\n\t\tif(!waiters.isEmpty()) return false;\n\t\tif(!results.isEmpty()) return false;\n\t\tif(lastTouched + LIFETIME >= System.currentTimeMillis()) {\n\t\t\tLogger.error(this, \"Not able to cancel for \"+this+\" : \"+uri+\" : \"+maxSize);\n\t\t\treturn false;\n\t\t}\n\t\tLogger.error(this, \"Can cancel for \"+this+\" : \"+uri+\" : \"+maxSize);\n\t\treturn true;\n\t}","id":50169,"modified_method":"/** Caller should take the lock on FProxyToadlet.fetchers, then call this \n\t * function, if it returns true then finish the cancel outside the lock.\n\t */\n\tpublic synchronized boolean canCancel() {\n\t\tif(!waiters.isEmpty()) return false;\n\t\tif(!results.isEmpty()) return false;\n\t\tif(lastTouched + LIFETIME >= System.currentTimeMillis()) {\n\t\t\tif(logMINOR) Logger.minor(this, \"Not able to cancel for \"+this+\" : \"+uri+\" : \"+maxSize);\n\t\t\treturn false;\n\t\t}\n\t\tif(logMINOR) Logger.minor(this, \"Can cancel for \"+this+\" : \"+uri+\" : \"+maxSize);\n\t\treturn true;\n\t}","commit_id":"be92cc699ba18dd0c45ba04f5d03741eb5a2be84","url":"https://github.com/freenet/fred"},{"original_method":"public void finishCancel() {\n\t\tLogger.error(this, \"Finishing cancel for \"+this+\" : \"+uri+\" : \"+maxSize);\n\t\tif(data != null) {\n\t\t\ttry {\n\t\t\t\tdata.free();\n\t\t\t} catch (Throwable t) {\n\t\t\t\t// Ensure we get to the next bit\n\t\t\t\tLogger.error(this, \"Failed to free: \"+t, t);\n\t\t\t}\n\t\t}\n\t\ttry {\n\t\t\tgetter.cancel();\n\t\t} catch (Throwable t) {\n\t\t\t// Ensure we get to the next bit\n\t\t\tLogger.error(this, \"Failed to cancel: \"+t, t);\n\t\t}\n\t}","id":50170,"modified_method":"public void finishCancel() {\n\t\tif(logMINOR) Logger.minor(this, \"Finishing cancel for \"+this+\" : \"+uri+\" : \"+maxSize);\n\t\tif(data != null) {\n\t\t\ttry {\n\t\t\t\tdata.free();\n\t\t\t} catch (Throwable t) {\n\t\t\t\t// Ensure we get to the next bit\n\t\t\t\tLogger.error(this, \"Failed to free: \"+t, t);\n\t\t\t}\n\t\t}\n\t\ttry {\n\t\t\tgetter.cancel();\n\t\t} catch (Throwable t) {\n\t\t\t// Ensure we get to the next bit\n\t\t\tLogger.error(this, \"Failed to cancel: \"+t, t);\n\t\t}\n\t}","commit_id":"be92cc699ba18dd0c45ba04f5d03741eb5a2be84","url":"https://github.com/freenet/fred"},{"original_method":"public void run() {\n\t\tLogger.error(this, \"Removing old FProxyFetchInProgress's\");\n\t\tArrayList<FProxyFetchInProgress> toRemove = null;\n\t\tboolean needRequeue = false;\n\t\tsynchronized(fetchers) {\n\t\t\tif(requeue) {\n\t\t\t\trequeue = false;\n\t\t\t\tneedRequeue = true;\n\t\t\t} else {\n\t\t\t\tqueuedJob = false;\n\t\t\t}\n\t\t\t// Horrible hack, FIXME\n\t\t\tEnumeration e = fetchers.keys();\n\t\t\twhile(e.hasMoreElements()) {\n\t\t\t\tFreenetURI uri = (FreenetURI) e.nextElement();\n\t\t\t\t// Really horrible hack, FIXME\n\t\t\t\tVector<FProxyFetchInProgress> list = (Vector<FProxyFetchInProgress>) fetchers.iterateAll(uri);\n\t\t\t\tfor(FProxyFetchInProgress f : list)\n\t\t\t\t\t// FIXME remove on the fly, although cancel must wait\n\t\t\t\t\tif(f.canCancel()) {\n\t\t\t\t\t\tif(toRemove == null) toRemove = new ArrayList<FProxyFetchInProgress>();\n\t\t\t\t\t\ttoRemove.add(f);\n\t\t\t\t\t}\n\t\t\t}\n\t\t\tfor(FProxyFetchInProgress r : toRemove) {\n\t\t\t\tfetchers.removeElement(r.uri, r);\n\t\t\t}\n\t\t}\n\t\tfor(FProxyFetchInProgress r : toRemove)\n\t\t\tr.finishCancel();\n\t\tif(needRequeue)\n\t\t\tcontext.ticker.queueTimedJob(this, FProxyFetchInProgress.LIFETIME);\n\t}","id":50171,"modified_method":"public void run() {\n\t\tif(logMINOR) Logger.minor(this, \"Removing old FProxyFetchInProgress's\");\n\t\tArrayList<FProxyFetchInProgress> toRemove = null;\n\t\tboolean needRequeue = false;\n\t\tsynchronized(fetchers) {\n\t\t\tif(requeue) {\n\t\t\t\trequeue = false;\n\t\t\t\tneedRequeue = true;\n\t\t\t} else {\n\t\t\t\tqueuedJob = false;\n\t\t\t}\n\t\t\t// Horrible hack, FIXME\n\t\t\tEnumeration e = fetchers.keys();\n\t\t\twhile(e.hasMoreElements()) {\n\t\t\t\tFreenetURI uri = (FreenetURI) e.nextElement();\n\t\t\t\t// Really horrible hack, FIXME\n\t\t\t\tVector<FProxyFetchInProgress> list = (Vector<FProxyFetchInProgress>) fetchers.iterateAll(uri);\n\t\t\t\tfor(FProxyFetchInProgress f : list)\n\t\t\t\t\t// FIXME remove on the fly, although cancel must wait\n\t\t\t\t\tif(f.canCancel()) {\n\t\t\t\t\t\tif(toRemove == null) toRemove = new ArrayList<FProxyFetchInProgress>();\n\t\t\t\t\t\ttoRemove.add(f);\n\t\t\t\t\t}\n\t\t\t}\n\t\t\tfor(FProxyFetchInProgress r : toRemove) {\n\t\t\t\tfetchers.removeElement(r.uri, r);\n\t\t\t}\n\t\t}\n\t\tfor(FProxyFetchInProgress r : toRemove)\n\t\t\tr.finishCancel();\n\t\tif(needRequeue)\n\t\t\tcontext.ticker.queueTimedJob(this, FProxyFetchInProgress.LIFETIME);\n\t}","commit_id":"be92cc699ba18dd0c45ba04f5d03741eb5a2be84","url":"https://github.com/freenet/fred"},{"original_method":"public void queueCancel(FProxyFetchInProgress progress) {\n\t\tLogger.error(this, \"Queueing removal of old FProxyFetchInProgress's\");\n\t\tsynchronized(this) {\n\t\t\tif(queuedJob) {\n\t\t\t\trequeue = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tqueuedJob = true;\n\t\t}\n\t\tcontext.ticker.queueTimedJob(this, FProxyFetchInProgress.LIFETIME);\n\t}","id":50172,"modified_method":"public void queueCancel(FProxyFetchInProgress progress) {\n\t\tif(logMINOR) Logger.minor(this, \"Queueing removal of old FProxyFetchInProgress's\");\n\t\tsynchronized(this) {\n\t\t\tif(queuedJob) {\n\t\t\t\trequeue = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tqueuedJob = true;\n\t\t}\n\t\tcontext.ticker.queueTimedJob(this, FProxyFetchInProgress.LIFETIME);\n\t}","commit_id":"be92cc699ba18dd0c45ba04f5d03741eb5a2be84","url":"https://github.com/freenet/fred"},{"original_method":"private int allocateSequenceNumber() {\n\t\tSessionKey tracker = (pn == null ? null : pn.getCurrentKeyTracker());\n\t\tsynchronized(sequenceNumberLock) {\n\t\t\tif(tracker != null) {\n\t\t\t\tif(tracker.firstSeqNumUsed == -1) {\n\t\t\t\t\ttracker.firstSeqNumUsed = tracker.nextSeqNum;\n\t\t\t\t\tLogger.error(this, \"First seqnum used for \" + tracker + \" is \" + tracker.firstSeqNumUsed);\n\t\t\t\t} else {\n\t\t\t\t\tif(tracker.nextSeqNum == tracker.firstSeqNumUsed) {\n\t\t\t\t\t\tLogger.error(this, \"Blocked because we haven't rekeyed yet\");\n\t\t\t\t\t\tpn.startRekeying();\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(tracker.firstSeqNumUsed > tracker.nextSeqNum) {\n\t\t\t\t\t\tif(tracker.firstSeqNumUsed - tracker.nextSeqNum < REKEY_THRESHOLD) pn.startRekeying();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif((NUM_SEQNUMS - tracker.nextSeqNum) + tracker.firstSeqNumUsed < REKEY_THRESHOLD) pn.startRekeying();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tint seqNum = tracker.nextSeqNum++;\n\t\t\tif((tracker.nextSeqNum == NUM_SEQNUMS) || (tracker.nextSeqNum < 0)) {\n\t\t\t\ttracker.nextSeqNum = 0;\n\t\t\t}\n\t\t\treturn seqNum;\n\t\t}\n\t}","id":50173,"modified_method":"private int allocateSequenceNumber() {\n\t\tSessionKey tracker = (pn == null ? null : pn.getCurrentKeyTracker());\n\t\tsynchronized(sequenceNumberLock) {\n\t\t\tif(tracker != null) {\n\t\t\t\tif(tracker.firstSeqNumUsed == -1) {\n\t\t\t\t\ttracker.firstSeqNumUsed = tracker.nextSeqNum;\n\t\t\t\t\tif(logMINOR) Logger.minor(this, \"First seqnum used for \" + tracker + \" is \" + tracker.firstSeqNumUsed);\n\t\t\t\t} else {\n\t\t\t\t\tif(tracker.nextSeqNum == tracker.firstSeqNumUsed) {\n\t\t\t\t\t\tLogger.error(this, \"Blocked because we haven't rekeyed yet\");\n\t\t\t\t\t\tpn.startRekeying();\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(tracker.firstSeqNumUsed > tracker.nextSeqNum) {\n\t\t\t\t\t\tif(tracker.firstSeqNumUsed - tracker.nextSeqNum < REKEY_THRESHOLD) pn.startRekeying();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif((NUM_SEQNUMS - tracker.nextSeqNum) + tracker.firstSeqNumUsed < REKEY_THRESHOLD) pn.startRekeying();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tint seqNum = tracker.nextSeqNum++;\n\t\t\tif((tracker.nextSeqNum == NUM_SEQNUMS) || (tracker.nextSeqNum < 0)) {\n\t\t\t\ttracker.nextSeqNum = 0;\n\t\t\t}\n\t\t\treturn seqNum;\n\t\t}\n\t}","commit_id":"bc51aee6add48afc69fb5dcb9a27600f06bef4e8","url":"https://github.com/freenet/fred"},{"original_method":"/** @param plugName The filename for loading/config purposes for an official plugin. \n\t * E.g. \"Library\" (no .jar) */\n\tpublic void startPluginUpdater(String plugName) {\n\t\tOfficialPluginDescription plugin = PluginManager.officialPlugins.get(plugName);\n\t\tif(plugin != null)\n\t\t\tstartPluginUpdater(plugin);\n\t\telse\n\t\t\tLogger.error(this, \"No such plugin \"+plugName+\" in startPluginUpdater()\");\n\t}","id":50174,"modified_method":"/** @param plugName The filename for loading/config purposes for an official plugin. \n\t * E.g. \"Library\" (no .jar) */\n\tpublic void startPluginUpdater(String plugName) {\n\t\tOfficialPluginDescription plugin = PluginManager.officialPlugins.get(plugName);\n\t\tif(plugin != null)\n\t\t\tstartPluginUpdater(plugin);\n\t\telse\n\t\t\t// Most likely not an official plugin\n\t\t\tif(logMINOR) Logger.minor(this, \"No such plugin \"+plugName+\" in startPluginUpdater()\");\n\t}","commit_id":"9be6e47251e540834b8e1a96bbce82ee366f5419","url":"https://github.com/freenet/fred"},{"original_method":"/** Attempt FEC decoding. Check blocks before decoding in case there is disk corruption. Check\n     * the new decoded blocks afterwards to ensure reproducible behaviour. */\n    private void innerDecode(MemoryLimitedChunk chunk) throws IOException {\n        if(logMINOR) Logger.minor(this, \"Trying to decode \"+this+\" for \"+parent);\n        boolean killed = false;\n        synchronized(this) {\n            if(succeeded) return;\n            if(cancelled) {\n                killed = true;\n            }\n        }\n        if(killed) {\n            return;\n        }\n        \n        // readAllBlocks does most of the housekeeping for us, see below...\n        byte[][] dataBlocks = readBlocks(false);\n        byte[][] checkBlocks = readBlocks(true);\n        if(dataBlocks == null || checkBlocks == null) return; // Failed with disk error.\n        \n        // Original status.\n        boolean[] dataBlocksFound = wasNonNullFill(dataBlocks);\n        boolean[] checkBlocksFound = wasNonNullFill(checkBlocks);\n\n        int realTotalDataBlocks = count(dataBlocksFound);\n        int realTotalCrossCheckBlocks = count(checkBlocksFound);\n        int realTotalFound = realTotalDataBlocks + realTotalCrossCheckBlocks;\n        \n        if(realTotalFound < dataBlockCount) {\n            // Not finished yet.\n            return;\n        }\n        \n        boolean decoded = false;\n        boolean encoded = false;\n        \n        if(realTotalDataBlocks < dataBlockCount) {\n            // Decode.\n            codec.decode(dataBlocks, checkBlocks, dataBlocksFound, checkBlocksFound, \n                    CHKBlock.DATA_LENGTH);\n            for(int i=0;i<dataBlockCount;i++) {\n                if(!dataBlocksFound[i]) {\n                    checkDecodedBlock(i, dataBlocks[i]);\n                    dataBlocksFound[i] = true;\n                }\n            }\n        }\n        \n        if(realTotalCrossCheckBlocks < crossCheckBlockCount) {\n            // Decode.\n            codec.encode(dataBlocks, checkBlocks, checkBlocksFound, CHKBlock.DATA_LENGTH);\n            for(int i=0;i<crossCheckBlockCount;i++) {\n                if(!checkBlocksFound[i]) {\n                    checkDecodedBlock(i+dataBlockCount, checkBlocks[i]);\n                }\n            }\n        }\n        \n        synchronized(this) {\n            succeeded = true;\n        }\n        \n        Logger.error(this, \"Completed a cross-segment: decoded=\"+decoded+\" encoded=\"+encoded);\n    }","id":50175,"modified_method":"/** Attempt FEC decoding. Check blocks before decoding in case there is disk corruption. Check\n     * the new decoded blocks afterwards to ensure reproducible behaviour. */\n    private void innerDecode(MemoryLimitedChunk chunk) throws IOException {\n        if(logMINOR) Logger.minor(this, \"Trying to decode \"+this+\" for \"+parent);\n        boolean killed = false;\n        synchronized(this) {\n            if(succeeded) return;\n            if(cancelled) {\n                killed = true;\n            }\n        }\n        if(killed) {\n            return;\n        }\n        \n        // readAllBlocks does most of the housekeeping for us, see below...\n        byte[][] dataBlocks = readBlocks(false);\n        byte[][] checkBlocks = readBlocks(true);\n        if(dataBlocks == null || checkBlocks == null) return; // Failed with disk error.\n        \n        // Original status.\n        boolean[] dataBlocksFound = wasNonNullFill(dataBlocks);\n        boolean[] checkBlocksFound = wasNonNullFill(checkBlocks);\n\n        int realTotalDataBlocks = count(dataBlocksFound);\n        int realTotalCrossCheckBlocks = count(checkBlocksFound);\n        int realTotalFound = realTotalDataBlocks + realTotalCrossCheckBlocks;\n        \n        if(realTotalFound < dataBlockCount) {\n            // Not finished yet.\n            return;\n        }\n        \n        boolean decoded = false;\n        boolean encoded = false;\n        \n        if(realTotalDataBlocks < dataBlockCount) {\n            // Decode.\n            codec.decode(dataBlocks, checkBlocks, dataBlocksFound, checkBlocksFound, \n                    CHKBlock.DATA_LENGTH);\n            for(int i=0;i<dataBlockCount;i++) {\n                if(!dataBlocksFound[i]) {\n                    checkDecodedBlock(i, dataBlocks[i]);\n                    dataBlocksFound[i] = true;\n                }\n            }\n        }\n        \n        if(realTotalCrossCheckBlocks < crossCheckBlockCount) {\n            // Decode.\n            codec.encode(dataBlocks, checkBlocks, checkBlocksFound, CHKBlock.DATA_LENGTH);\n            for(int i=0;i<crossCheckBlockCount;i++) {\n                if(!checkBlocksFound[i]) {\n                    checkDecodedBlock(i+dataBlockCount, checkBlocks[i]);\n                }\n            }\n        }\n        \n        synchronized(this) {\n            succeeded = true;\n        }\n        \n        if(logMINOR) Logger.minor(this, \"Completed a cross-segment: decoded=\"+decoded+\" encoded=\"+encoded);\n    }","commit_id":"87aec9b8aa96dbf7d9145b175a414c3e5c055f3c","url":"https://github.com/freenet/fred"},{"original_method":"/** Check for blocks and try to decode. */\n    public void restart() {\n        synchronized(this) {\n            if(succeeded) return;\n        }\n        synchronized(this) {\n            System.out.println(\"Cross-segment \"+crossSegmentNumber+\" : \"+totalFound+\"/\"+dataBlockCount);\n            if(totalBlocks < dataBlockCount) return;\n            tryDecodeOrEncode();\n        }\n    }","id":50176,"modified_method":"/** Check for blocks and try to decode. */\n    public void restart() {\n        synchronized(this) {\n            if(succeeded) return;\n        }\n        synchronized(this) {\n            if(totalBlocks < dataBlockCount) return;\n            tryDecodeOrEncode();\n        }\n    }","commit_id":"87aec9b8aa96dbf7d9145b175a414c3e5c055f3c","url":"https://github.com/freenet/fred"},{"original_method":"/** Called when a segment fetches a block that it believes to be relevant to us */\n    public void onFetchedRelevantBlock(SplitFileFetcherSegmentStorage segment, int blockNo) {\n        synchronized(this) {\n            boolean found = false;\n            for(int i=0;i<segments.length;i++) {\n                if(segments[i] == segment && blockNumbers[i] == blockNo) {\n                    found = true;\n                    if(blocksFound[i]) {\n                        // Already handled, don't loop.\n                        return;\n                    }\n                    blocksFound[i] = true;\n                    totalFound++;\n                }\n            }\n            if(tryDecode || succeeded || cancelled) return;\n            if(!found) {\n                Logger.error(this, \"Block \"+blockNo+\" on \"+segment+\" not wanted by \"+this);\n                return;\n            }\n            if(totalFound < dataBlockCount) {\n                Logger.normal(this, \"Not decoding \"+this+\" : found \"+totalFound+\" blocks of \"+dataBlockCount+\" (total \"+segments.length+\")\");\n                return;\n            }\n            tryDecodeOrEncode();\n        }\n    }","id":50177,"modified_method":"/** Called when a segment fetches a block that it believes to be relevant to us */\n    public void onFetchedRelevantBlock(SplitFileFetcherSegmentStorage segment, int blockNo) {\n        synchronized(this) {\n            boolean found = false;\n            for(int i=0;i<segments.length;i++) {\n                if(segments[i] == segment && blockNumbers[i] == blockNo) {\n                    found = true;\n                    if(blocksFound[i]) {\n                        // Already handled, don't loop.\n                        return;\n                    }\n                    blocksFound[i] = true;\n                    totalFound++;\n                }\n            }\n            if(tryDecode || succeeded || cancelled) return;\n            if(!found) {\n                Logger.warning(this, \"Block \"+blockNo+\" on \"+segment+\" not wanted by \"+this);\n                return;\n            }\n            if(totalFound < dataBlockCount) {\n                if(logMINOR) Logger.minor(this, \"Not decoding \"+this+\" : found \"+totalFound+\" blocks of \"+dataBlockCount+\" (total \"+segments.length+\")\");\n                return;\n            }\n            tryDecodeOrEncode();\n        }\n    }","commit_id":"87aec9b8aa96dbf7d9145b175a414c3e5c055f3c","url":"https://github.com/freenet/fred"},{"original_method":"private void reportBlockToSegmentOffThread(final int blockNo, final ClientCHK key, \n            final ClientCHKBlock block, final byte[] data) {\n        parent.jobRunner.queueNormalOrDrop(new PersistentJob() {\n\n            @Override\n            public boolean run(ClientContext context) {\n                try {\n                    // FIXME CPU USAGE Add another API to the segment to avoid re-decoding.\n                    SplitFileSegmentKeys keys = segments[blockNo].getSegmentKeys();\n                    if(keys == null) return false;\n                    boolean success = segments[blockNo].innerOnGotKey(key.getNodeCHK(), block, keys, \n                            blockNumbers[blockNo], data);\n                    if(success)\n                        Logger.error(this, \"Successfully decoded cross-segment block\");\n                    else\n                        Logger.error(this, \"Decoded cross-segment block but not wanted by segment\");\n                } catch (IOException e) {\n                    parent.failOnDiskError(e);\n                    return true;\n                }\n                return false;\n            }\n        });\n    }","id":50178,"modified_method":"private void reportBlockToSegmentOffThread(final int blockNo, final ClientCHK key, \n            final ClientCHKBlock block, final byte[] data) {\n        parent.jobRunner.queueNormalOrDrop(new PersistentJob() {\n\n            @Override\n            public boolean run(ClientContext context) {\n                try {\n                    // FIXME CPU USAGE Add another API to the segment to avoid re-decoding.\n                    SplitFileSegmentKeys keys = segments[blockNo].getSegmentKeys();\n                    if(keys == null) return false;\n                    boolean success = segments[blockNo].innerOnGotKey(key.getNodeCHK(), block, keys, \n                            blockNumbers[blockNo], data);\n                    if(success) {\n                        if(logMINOR)\n                            Logger.minor(this, \"Successfully decoded cross-segment block\");\n                    } else {\n                        // Not really a big deal, but potentially interesting...\n                        Logger.warning(this, \"Decoded cross-segment block but not wanted by segment\");\n                    }\n                } catch (IOException e) {\n                    parent.failOnDiskError(e);\n                    return true;\n                }\n                return false;\n            }\n        });\n    }","commit_id":"87aec9b8aa96dbf7d9145b175a414c3e5c055f3c","url":"https://github.com/freenet/fred"},{"original_method":"private SendableRequestItem getRandomBlockNum(KeysFetchingLocally keys, ClientContext context, ObjectContainer container) {\n\t\tif(persistent) {\n\t\t\tcontainer.activate(this, 1);\n\t\t\tcontainer.activate(blockNums, 1);\n\t\t\tcontainer.activate(segment, 1);\n\t\t}\n\t\tlogMINOR = Logger.shouldLog(LogLevel.MINOR, this);\n\t\tsynchronized(segment) {\n\t\t\tif(blockNums.isEmpty()) {\n\t\t\t\tif(logMINOR)\n\t\t\t\t\tLogger.minor(this, \"No blocks to remove\");\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tint x = 0;\n\t\t\tfor(int i=0;i<10;i++) {\n\t\t\t\tInteger ret;\n\t\t\t\tif(blockNums.size() == 0) return null;\n\t\t\t\tx = context.random.nextInt(blockNums.size());\n\t\t\t\tret = blockNums.get(x);\n\t\t\t\tint num = ret;\n\t\t\t\tKey key = segment.getBlockNodeKey(num, container);\n\t\t\t\tif(key == null) {\n\t\t\t\t\tif(segment.isFinishing(container) || segment.isFinished(container)) return null;\n\t\t\t\t\tif(segment.haveBlock(num, container))\n\t\t\t\t\t\tLogger.error(this, \"Already have block \"+ret+\" but was in blockNums on \"+this);\n\t\t\t\t\telse\n\t\t\t\t\t\tLogger.error(this, \"Key is null for block \"+ret+\" for \"+this);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(keys.hasKey(key)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(logMINOR)\n\t\t\t\t\tLogger.minor(this, \"Removing block \"+x+\" of \"+(blockNums.size()+1)+ \" : \"+ret+ \" on \"+this);\n\t\t\t\treturn new MySendableRequestItem(num);\n\t\t\t}\n\t\t\t// Exhaustive search starting at a random slot.\n\t\t\tfor(int i=0;i<blockNums.size();i++) {\n\t\t\t\tx++;\n\t\t\t\tif(x == blockNums.size()) x = 0;\n\t\t\t\tInteger ret;\n\t\t\t\tret = blockNums.get(x);\n\t\t\t\tint num = ret;\n\t\t\t\tKey key = segment.getBlockNodeKey(num, container);\n\t\t\t\tif(key == null) {\n\t\t\t\t\tif(segment.isFinishing(container) || segment.isFinished(container)) return null;\n\t\t\t\t\tif(segment.haveBlock(num, container))\n\t\t\t\t\t\tLogger.error(this, \"Already have block \"+ret+\" but was in blockNums on \"+this);\n\t\t\t\t\telse\n\t\t\t\t\t\tLogger.error(this, \"Key is null for block \"+ret+\" for \"+this);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(keys.hasKey(key)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(logMINOR)\n\t\t\t\t\tLogger.minor(this, \"Removing block \"+x+\" of \"+(blockNums.size()+1)+ \" : \"+ret+ \" on \"+this);\n\t\t\t\treturn new MySendableRequestItem(num);\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t}","id":50179,"modified_method":"private SendableRequestItem getRandomBlockNum(KeysFetchingLocally keys, ClientContext context, ObjectContainer container) {\n\t\tif(persistent) {\n\t\t\tcontainer.activate(this, 1);\n\t\t\tcontainer.activate(blockNums, 1);\n\t\t\tcontainer.activate(segment, 1);\n\t\t}\n\t\tlogMINOR = Logger.shouldLog(LogLevel.MINOR, this);\n\t\tsynchronized(segment) {\n\t\t\tif(blockNums.isEmpty()) {\n\t\t\t\tif(logMINOR)\n\t\t\t\t\tLogger.minor(this, \"No blocks to remove\");\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tint x = 0;\n\t\t\tfor(int i=0;i<10;i++) {\n\t\t\t\tInteger ret;\n\t\t\t\tif(blockNums.size() == 0) return null;\n\t\t\t\tx = context.random.nextInt(blockNums.size());\n\t\t\t\tret = blockNums.get(x);\n\t\t\t\tint num = ret;\n\t\t\t\tKey key = segment.getBlockNodeKey(num, container);\n\t\t\t\tif(key == null) {\n\t\t\t\t\tif(segment.isFinishing(container) || segment.isFinished(container)) return null;\n\t\t\t\t\tif(segment.haveBlock(num, container)) {\n\t\t\t\t\t\t// Maybe it found it a different way e.g. via cross-segment decode.\n\t\t\t\t\t\tblockNums.remove(x);\n\t\t\t\t\t\tif(persistent) container.store(blockNums);\n\t\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Already have block \"+ret+\" but was in blockNums on \"+this);\n\t\t\t\t\t} else\n\t\t\t\t\t\tLogger.error(this, \"Key is null for block \"+ret+\" for \"+this);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(keys.hasKey(key)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(logMINOR)\n\t\t\t\t\tLogger.minor(this, \"Removing block \"+x+\" of \"+(blockNums.size()+1)+ \" : \"+ret+ \" on \"+this);\n\t\t\t\treturn new MySendableRequestItem(num);\n\t\t\t}\n\t\t\t// Exhaustive search starting at a random slot.\n\t\t\tfor(int i=0;i<blockNums.size();i++) {\n\t\t\t\tx++;\n\t\t\t\tif(x == blockNums.size()) x = 0;\n\t\t\t\tInteger ret;\n\t\t\t\tret = blockNums.get(x);\n\t\t\t\tint num = ret;\n\t\t\t\tKey key = segment.getBlockNodeKey(num, container);\n\t\t\t\tif(key == null) {\n\t\t\t\t\tif(segment.isFinishing(container) || segment.isFinished(container)) return null;\n\t\t\t\t\tif(segment.haveBlock(num, container)) {\n\t\t\t\t\t\t// Maybe it found it a different way e.g. via cross-segment decode.\n\t\t\t\t\t\tblockNums.remove(x);\n\t\t\t\t\t\tif(persistent) container.store(blockNums);\n\t\t\t\t\t\tx--;\n\t\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Already have block \"+ret+\" but was in blockNums on \"+this);\n\t\t\t\t\t} else\n\t\t\t\t\t\tLogger.error(this, \"Key is null for block \"+ret+\" for \"+this);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(keys.hasKey(key)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(logMINOR)\n\t\t\t\t\tLogger.minor(this, \"Removing block \"+x+\" of \"+(blockNums.size()+1)+ \" : \"+ret+ \" on \"+this);\n\t\t\t\treturn new MySendableRequestItem(num);\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t}","commit_id":"df19308d3893f5ec8e7602a473f9bfcb9d249934","url":"https://github.com/freenet/fred"},{"original_method":"public void finishedWaitingForOpennet(PeerNode next) {\n\t\tboolean noRecordUnlock;\n\t\tsynchronized(this) {\n\t\t\tif(waitingForOpennet == null) {\n\t\t\t\tLogger.error(this, \"Not waiting for opennet!\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tPeerNode got = waitingForOpennet.get();\n\t\t\tif(got != next) {\n\t\t\t\tLogger.error(this, \"Finished waiting for opennet on \"+next+\" but was waiting for \"+got);\n\t\t\t}\n\t\t\twaitingForOpennet = null;\n\t\t\tif(!mustUnlock()) return;\n\t\t\tnoRecordUnlock = this.noRecordUnlock;\n\t\t}\n\t\tinnerUnlock(noRecordUnlock);\n\t}","id":50180,"modified_method":"public void finishedWaitingForOpennet(PeerNode next) {\n\t\tboolean noRecordUnlock;\n\t\tsynchronized(this) {\n\t\t\tif(waitingForOpennet == null) {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Not waiting for opennet!\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tPeerNode got = waitingForOpennet.get();\n\t\t\tif(got != next) {\n\t\t\t\tLogger.error(this, \"Finished waiting for opennet on \"+next+\" but was waiting for \"+got);\n\t\t\t}\n\t\t\twaitingForOpennet = null;\n\t\t\tif(!mustUnlock()) return;\n\t\t\tnoRecordUnlock = this.noRecordUnlock;\n\t\t}\n\t\tinnerUnlock(noRecordUnlock);\n\t}","commit_id":"fc02f1e1f7627dc98bd177fd328f0a3dbab1b303","url":"https://github.com/freenet/fred"},{"original_method":"public boolean addNewOpennetNode(SimpleFieldSet fs) throws FSParseException, PeerParseException, ReferenceSignatureVerificationException {\n\t\tOpennetPeerNode pn = new OpennetPeerNode(fs, node, crypto, this, node.peers, false, crypto.packetMangler);\n\t\tif(Arrays.equals(pn.getIdentity(), crypto.myIdentity)) {\n\t\t\tLogger.error(this, \"Not adding self as opennet peer\");\n\t\t\treturn false; // Equal to myself\n\t\t}\n\t\tPeerNode match;\n\t\tif(((match = node.peers.containsPeer(pn)) != null) && \n\t\t\t\t(match.isConnected() || (!match.neverConnected()) || \n\t\t\t\t\t\tmatch.timeSinceAddedOrRestarted() < DONT_READD_TIME)) {\n\t\t\tLogger.error(this, \"Not adding \"+pn.userToString()+\" to opennet list as already there\");\n\t\t\treturn false;\n\t\t}\n\t\treturn wantPeer(pn, true); \n\t\t// Start at bottom. Node must prove itself.\n\t}","id":50181,"modified_method":"public boolean addNewOpennetNode(SimpleFieldSet fs) throws FSParseException, PeerParseException, ReferenceSignatureVerificationException {\n\t\tOpennetPeerNode pn = new OpennetPeerNode(fs, node, crypto, this, node.peers, false, crypto.packetMangler);\n\t\tif(Arrays.equals(pn.getIdentity(), crypto.myIdentity)) {\n\t\t\tif(logMINOR) Logger.minor(this, \"Not adding self as opennet peer\");\n\t\t\treturn false; // Equal to myself\n\t\t}\n\t\tPeerNode match;\n\t\tif(((match = node.peers.containsPeer(pn)) != null) && \n\t\t\t\t(match.isConnected() || (!match.neverConnected()) || \n\t\t\t\t\t\tmatch.timeSinceAddedOrRestarted() < DONT_READD_TIME)) {\n\t\t\tif(logMINOR) Logger.minor(this, \"Not adding \"+pn.userToString()+\" to opennet list as already there\");\n\t\t\treturn false;\n\t\t}\n\t\treturn wantPeer(pn, true); \n\t\t// Start at bottom. Node must prove itself.\n\t}","commit_id":"1fb665d52130b21420818a06a67d41235be7257e","url":"https://github.com/freenet/fred"},{"original_method":"/**\n\t * Trim the peers list and possibly add a new node. Note that if we are not adding a new node,\n\t * we will only return true every MIN_TIME_BETWEEN_OFFERS, to prevent problems caused by many\n\t * pending offers being accepted simultaneously.\n\t * @param nodeToAddNow Node to add.\n\t * @param addAtLRU If there is a node to add, add it at the bottom rather than the top. Normally\n\t * we set this on new path folded nodes so that they will be replaced if during the trial period,\n\t * plus the time it takes to get a new path folding offer, they don't have a successful request.\n\t * @return True if the node was added / should be added.\n\t */\n\tpublic boolean wantPeer(PeerNode nodeToAddNow, boolean addAtLRU) {\n\t\tsynchronized(this) {\n\t\t\tif(peersLRU.size() < MAX_PEERS) {\n\t\t\t\tif(nodeToAddNow != null) {\n\t\t\t\t\tLogger.error(this, \"Added opennet peer \"+nodeToAddNow+\" as opennet peers list not full\");\n\t\t\t\t\tpeersLRU.push(nodeToAddNow);\n\t\t\t\t}\n\t\t\t\ttimeLastOffered = System.currentTimeMillis();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tVector dropList = new Vector();\n\t\tboolean ret = true;\n\t\tsynchronized(this) {\n\t\t\tboolean hasDisconnected = false;\n\t\t\twhile(peersLRU.size() > MAX_PEERS - (nodeToAddNow == null ? 0 : 1)) {\n\t\t\t\tPeerNode toDrop;\n\t\t\t\ttoDrop = peerToDrop();\n\t\t\t\tif(toDrop == null) {\n\t\t\t\t\tret = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(!toDrop.isConnected())\n\t\t\t\t\thasDisconnected = true;\n\t\t\t\tpeersLRU.remove(toDrop);\n\t\t\t\tdropList.add(toDrop);\n\t\t\t}\n\t\t\tif(ret) {\n\t\t\t\tlong now = System.currentTimeMillis();\n\t\t\t\tif(nodeToAddNow != null) {\n\t\t\t\t\tif(!node.peers.addPeer(nodeToAddNow)) {\n\t\t\t\t\t\t// Can't add it, already present (some sort of race condition)\n\t\t\t\t\t\tPeerNode readd = (PeerNode) dropList.remove(dropList.size()-1);\n\t\t\t\t\t\tpeersLRU.pushLeast(readd);\n\t\t\t\t\t\tret = false;\n\t\t\t\t\t\tLogger.error(this, \"Could not add opennet peer \"+nodeToAddNow+\" because already in list\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif(addAtLRU)\n\t\t\t\t\t\t\tpeersLRU.pushLeast(nodeToAddNow);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tpeersLRU.push(nodeToAddNow);\n\t\t\t\t\t\tLogger.error(this, \"Added opennet peer \"+nodeToAddNow+\" after clearing \"+dropList.size()+\" items\");\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\ttimeLastDropped = now;\n\t\t\t\t} else {\n\t\t\t\t\tif(now - timeLastOffered <= MIN_TIME_BETWEEN_OFFERS && !hasDisconnected) {\n\t\t\t\t\t\t// Cancel\n\t\t\t\t\t\tret = false;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttimeLastDropped = now;\n\t\t\t\t\t\ttimeLastOffered = now;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int i=0;i<dropList.size();i++) {\n\t\t\tOpennetPeerNode pn = (OpennetPeerNode) dropList.get(i);\n\t\t\tLogger.error(this, \"Dropping LRU opennet peer: \"+pn);\n\t\t\tnode.peers.disconnect(pn);\n\t\t}\n\t\treturn ret;\n\t}","id":50182,"modified_method":"/**\n\t * Trim the peers list and possibly add a new node. Note that if we are not adding a new node,\n\t * we will only return true every MIN_TIME_BETWEEN_OFFERS, to prevent problems caused by many\n\t * pending offers being accepted simultaneously.\n\t * @param nodeToAddNow Node to add.\n\t * @param addAtLRU If there is a node to add, add it at the bottom rather than the top. Normally\n\t * we set this on new path folded nodes so that they will be replaced if during the trial period,\n\t * plus the time it takes to get a new path folding offer, they don't have a successful request.\n\t * @return True if the node was added / should be added.\n\t */\n\tpublic boolean wantPeer(PeerNode nodeToAddNow, boolean addAtLRU) {\n\t\tsynchronized(this) {\n\t\t\tif(peersLRU.size() < MAX_PEERS) {\n\t\t\t\tif(nodeToAddNow != null) {\n\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Added opennet peer \"+nodeToAddNow+\" as opennet peers list not full\");\n\t\t\t\t\tpeersLRU.push(nodeToAddNow);\n\t\t\t\t}\n\t\t\t\ttimeLastOffered = System.currentTimeMillis();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tVector dropList = new Vector();\n\t\tboolean ret = true;\n\t\tsynchronized(this) {\n\t\t\tboolean hasDisconnected = false;\n\t\t\twhile(peersLRU.size() > MAX_PEERS - (nodeToAddNow == null ? 0 : 1)) {\n\t\t\t\tPeerNode toDrop;\n\t\t\t\ttoDrop = peerToDrop();\n\t\t\t\tif(toDrop == null) {\n\t\t\t\t\tret = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(!toDrop.isConnected())\n\t\t\t\t\thasDisconnected = true;\n\t\t\t\tpeersLRU.remove(toDrop);\n\t\t\t\tdropList.add(toDrop);\n\t\t\t}\n\t\t\tif(ret) {\n\t\t\t\tlong now = System.currentTimeMillis();\n\t\t\t\tif(nodeToAddNow != null) {\n\t\t\t\t\tif(!node.peers.addPeer(nodeToAddNow)) {\n\t\t\t\t\t\t// Can't add it, already present (some sort of race condition)\n\t\t\t\t\t\tPeerNode readd = (PeerNode) dropList.remove(dropList.size()-1);\n\t\t\t\t\t\tpeersLRU.pushLeast(readd);\n\t\t\t\t\t\tret = false;\n\t\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Could not add opennet peer \"+nodeToAddNow+\" because already in list\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif(addAtLRU)\n\t\t\t\t\t\t\tpeersLRU.pushLeast(nodeToAddNow);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tpeersLRU.push(nodeToAddNow);\n\t\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Added opennet peer \"+nodeToAddNow+\" after clearing \"+dropList.size()+\" items\");\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\ttimeLastDropped = now;\n\t\t\t\t} else {\n\t\t\t\t\tif(now - timeLastOffered <= MIN_TIME_BETWEEN_OFFERS && !hasDisconnected) {\n\t\t\t\t\t\t// Cancel\n\t\t\t\t\t\tret = false;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttimeLastDropped = now;\n\t\t\t\t\t\ttimeLastOffered = now;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int i=0;i<dropList.size();i++) {\n\t\t\tOpennetPeerNode pn = (OpennetPeerNode) dropList.get(i);\n\t\t\tif(logMINOR) Logger.minor(this, \"Dropping LRU opennet peer: \"+pn);\n\t\t\tnode.peers.disconnect(pn);\n\t\t}\n\t\treturn ret;\n\t}","commit_id":"1fb665d52130b21420818a06a67d41235be7257e","url":"https://github.com/freenet/fred"},{"original_method":"public OpennetManager(Node node, NodeCryptoConfig opennetConfig) throws NodeInitException {\n\t\tthis.node = node;\n\t\tcrypto =\n\t\t\tnew NodeCrypto(node, true, opennetConfig);\n\n\t\tFile nodeFile = new File(node.nodeDir, \"opennet-\"+crypto.portNumber);\n\t\tFile backupNodeFile = new File(\"opennet-\"+crypto.portNumber+\".bak\");\n\t\t\n\t\t// Keep opennet crypto details in a separate file\n\t\ttry {\n\t\t\treadFile(nodeFile);\n\t\t} catch (IOException e) {\n\t\t\ttry {\n\t\t\t\treadFile(backupNodeFile);\n\t\t\t} catch (IOException e1) {\n\t\t\t\tcrypto.initCrypto();\n\t\t\t}\n\t\t}\n\t\tpeersLRU = new LRUQueue();\n\t\tnode.peers.tryReadPeers(new File(node.nodeDir, \"openpeers-\"+crypto.portNumber).toString(), crypto, this, true);\n\t\tOpennetPeerNode[] nodes = node.peers.getOpennetPeers();\n\t\tArrays.sort(nodes, new Comparator() {\n\t\t\tpublic int compare(Object arg0, Object arg1) {\n\t\t\t\tOpennetPeerNode pn1 = (OpennetPeerNode) arg0;\n\t\t\t\tOpennetPeerNode pn2 = (OpennetPeerNode) arg1;\n\t\t\t\t\n\t\t\t\tlong lastSuccess1 = pn1.timeLastSuccess();\n\t\t\t\tlong lastSuccess2 = pn2.timeLastSuccess();\n\t\t\t\t\n\t\t\t\tif(lastSuccess1 > lastSuccess2) return 1;\n\t\t\t\tif(lastSuccess2 > lastSuccess1) return -1;\n\t\t\t\t\n\t\t\t\tboolean neverConnected1 = pn1.neverConnected();\n\t\t\t\tboolean neverConnected2 = pn2.neverConnected();\n\t\t\t\tif(neverConnected1 && (!neverConnected2))\n\t\t\t\t\treturn -1;\n\t\t\t\tif((!neverConnected1) && neverConnected2)\n\t\t\t\t\treturn 1;\n\t\t\t\treturn pn1.hashCode - pn2.hashCode;\n\t\t\t}\n\t\t});\n\t\tfor(int i=0;i<nodes.length;i++)\n\t\t\tpeersLRU.push(nodes[i]);\n\t\tdropExcessPeers();\n\t\twriteFile(nodeFile, backupNodeFile);\n\t}","id":50183,"modified_method":"public OpennetManager(Node node, NodeCryptoConfig opennetConfig) throws NodeInitException {\n\t\tlogMINOR = Logger.shouldLog(Logger.MINOR, this);\n\t\tthis.node = node;\n\t\tcrypto =\n\t\t\tnew NodeCrypto(node, true, opennetConfig);\n\n\t\tFile nodeFile = new File(node.nodeDir, \"opennet-\"+crypto.portNumber);\n\t\tFile backupNodeFile = new File(\"opennet-\"+crypto.portNumber+\".bak\");\n\t\t\n\t\t// Keep opennet crypto details in a separate file\n\t\ttry {\n\t\t\treadFile(nodeFile);\n\t\t} catch (IOException e) {\n\t\t\ttry {\n\t\t\t\treadFile(backupNodeFile);\n\t\t\t} catch (IOException e1) {\n\t\t\t\tcrypto.initCrypto();\n\t\t\t}\n\t\t}\n\t\tpeersLRU = new LRUQueue();\n\t\tnode.peers.tryReadPeers(new File(node.nodeDir, \"openpeers-\"+crypto.portNumber).toString(), crypto, this, true);\n\t\tOpennetPeerNode[] nodes = node.peers.getOpennetPeers();\n\t\tArrays.sort(nodes, new Comparator() {\n\t\t\tpublic int compare(Object arg0, Object arg1) {\n\t\t\t\tOpennetPeerNode pn1 = (OpennetPeerNode) arg0;\n\t\t\t\tOpennetPeerNode pn2 = (OpennetPeerNode) arg1;\n\t\t\t\t\n\t\t\t\tlong lastSuccess1 = pn1.timeLastSuccess();\n\t\t\t\tlong lastSuccess2 = pn2.timeLastSuccess();\n\t\t\t\t\n\t\t\t\tif(lastSuccess1 > lastSuccess2) return 1;\n\t\t\t\tif(lastSuccess2 > lastSuccess1) return -1;\n\t\t\t\t\n\t\t\t\tboolean neverConnected1 = pn1.neverConnected();\n\t\t\t\tboolean neverConnected2 = pn2.neverConnected();\n\t\t\t\tif(neverConnected1 && (!neverConnected2))\n\t\t\t\t\treturn -1;\n\t\t\t\tif((!neverConnected1) && neverConnected2)\n\t\t\t\t\treturn 1;\n\t\t\t\treturn pn1.hashCode - pn2.hashCode;\n\t\t\t}\n\t\t});\n\t\tfor(int i=0;i<nodes.length;i++)\n\t\t\tpeersLRU.push(nodes[i]);\n\t\tdropExcessPeers();\n\t\twriteFile(nodeFile, backupNodeFile);\n\t}","commit_id":"1fb665d52130b21420818a06a67d41235be7257e","url":"https://github.com/freenet/fred"},{"original_method":"public void onSuccess(OpennetPeerNode pn) {\n\t\tsynchronized(this) {\n\t\t\tif(peersLRU.contains(pn)) {\n\t\t\t\tpeersLRU.push(pn);\n\t\t\t\tLogger.normal(this, \"Opennet peer \"+pn+\" promoted to top of LRU because of successful request\");\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tLogger.error(this, \"Success on opennet peer which isn't in the LRU!: \"+pn, new Exception(\"debug\"));\n\t\t\t\t// Re-add it: nasty race condition when we have few peers\n\t\t\t}\n\t\t}\n\t\tif(!wantPeer(pn, false)) // Start at top as it just succeeded\n\t\t\tnode.peers.disconnect(pn);\n\t}","id":50184,"modified_method":"public void onSuccess(OpennetPeerNode pn) {\n\t\tsynchronized(this) {\n\t\t\tif(peersLRU.contains(pn)) {\n\t\t\t\tpeersLRU.push(pn);\n\t\t\t\tLogger.normal(this, \"Opennet peer \"+pn+\" promoted to top of LRU because of successful request\");\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Success on opennet peer which isn't in the LRU!: \"+pn, new Exception(\"debug\"));\n\t\t\t\t// Re-add it: nasty race condition when we have few peers\n\t\t\t}\n\t\t}\n\t\tif(!wantPeer(pn, false)) // Start at top as it just succeeded\n\t\t\tnode.peers.disconnect(pn);\n\t}","commit_id":"1fb665d52130b21420818a06a67d41235be7257e","url":"https://github.com/freenet/fred"},{"original_method":"private void writeFile(File orig, File backup) {\n\t\tSimpleFieldSet fs = crypto.exportPrivateFieldSet();\n\t\t\n\t\tif(orig.exists()) backup.delete();\n\t\t\n\t\tFileOutputStream fos = null;\n\t\ttry {\n\t\t\tfos = new FileOutputStream(backup);\n\t\t\tOutputStreamWriter osr = new OutputStreamWriter(fos, \"UTF-8\");\n\t\t\tBufferedWriter bw = new BufferedWriter(osr);\n\t\t\tfs.writeTo(bw);\n\t\t\tbw.close();\n\t\t\tif(!backup.renameTo(orig)) {\n\t\t\t\torig.delete();\n\t\t\t\tif(!backup.renameTo(orig)) {\n\t\t\t\t\tLogger.error(this, \"Could not rename new node file \"+backup+\" to \"+orig);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (IOException e) {\n\t\t\tif(fos != null) {\n\t\t\t\ttry {\n\t\t\t\t\tfos.close();\n\t\t\t\t} catch (IOException e1) {\n\t\t\t\t\tLogger.error(this, \"Cannot close \"+backup+\": \"+e1, e1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","id":50185,"modified_method":"private void writeFile(File orig, File backup) {\n\t\tlogMINOR = Logger.shouldLog(Logger.MINOR, this);\n\t\tSimpleFieldSet fs = crypto.exportPrivateFieldSet();\n\t\t\n\t\tif(orig.exists()) backup.delete();\n\t\t\n\t\tFileOutputStream fos = null;\n\t\ttry {\n\t\t\tfos = new FileOutputStream(backup);\n\t\t\tOutputStreamWriter osr = new OutputStreamWriter(fos, \"UTF-8\");\n\t\t\tBufferedWriter bw = new BufferedWriter(osr);\n\t\t\tfs.writeTo(bw);\n\t\t\tbw.close();\n\t\t\tif(!backup.renameTo(orig)) {\n\t\t\t\torig.delete();\n\t\t\t\tif(!backup.renameTo(orig)) {\n\t\t\t\t\tLogger.error(this, \"Could not rename new node file \"+backup+\" to \"+orig);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (IOException e) {\n\t\t\tif(fos != null) {\n\t\t\t\ttry {\n\t\t\t\t\tfos.close();\n\t\t\t\t} catch (IOException e1) {\n\t\t\t\t\tLogger.error(this, \"Cannot close \"+backup+\": \"+e1, e1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","commit_id":"1fb665d52130b21420818a06a67d41235be7257e","url":"https://github.com/freenet/fred"},{"original_method":"public void maybeRemove(RemoveRandom r, ObjectContainer container) {\n\t\tint count = 0;\n\t\tsynchronized(this) {\n\t\t\twhile(true) {\n\t\t\t\tint found = -1;\n\t\t\t\tfor(int i=0;i<grabArrays.length;i++) {\n\t\t\t\t\tif(grabArrays[i] == r) {\n\t\t\t\t\t\tfound = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(found != -1) {\n\t\t\t\t\tcount++;\n\t\t\t\t\tif(count > 1) Logger.error(this, \"Found \"+r+\" many times in \"+this, new Exception(\"error\"));\n\t\t\t\t\tremoveElement(found);\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(count == 0) Logger.error(this, \"Not in parent: \"+r+\" for \"+this, new Exception(\"error\"));\n\t\telse if(persistent) {\n\t\t\tcontainer.store(this);\n\t\t\tr.removeFrom(container);\n\t\t}\n\t}","id":50186,"modified_method":"public void maybeRemove(RemoveRandom r, ObjectContainer container) {\n\t\tint count = 0;\n\t\tsynchronized(this) {\n\t\t\twhile(true) {\n\t\t\t\tint found = -1;\n\t\t\t\tfor(int i=0;i<grabArrays.length;i++) {\n\t\t\t\t\tif(grabArrays[i] == r) {\n\t\t\t\t\t\tfound = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(found != -1) {\n\t\t\t\t\tcount++;\n\t\t\t\t\tif(count > 1) Logger.error(this, \"Found \"+r+\" many times in \"+this, new Exception(\"error\"));\n\t\t\t\t\tremoveElement(found);\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(count == 0) {\n\t\t\t// This is not unusual, it was e.g. removed because of being empty.\n\t\t\t// And it has already been removeFrom()'ed.\n\t\t\tif(logMINOR) Logger.minor(this, \"Not in parent: \"+r+\" for \"+this, new Exception(\"error\"));\n\t\t} else if(persistent) {\n\t\t\tcontainer.store(this);\n\t\t\tr.removeFrom(container);\n\t\t}\n\t}","commit_id":"8c6241495ecbbcaa9f532edc4a81cfdedd9d59e8","url":"https://github.com/freenet/fred"},{"original_method":"/**\n\t * Process an incoming packet, once it has been decrypted.\n\t * @param decrypted The packet's contents.\n\t * @param seqNumber The detected sequence number of the packet.\n\t * @param tracker The KeyTracker responsible for the key used to encrypt the packet.\n\t */\n\tprivate void processDecryptedData(byte[] decrypted, int seqNumber, KeyTracker tracker, int overhead) {\n\t\t/**\n\t\t * Decoded format:\n\t\t * 1 byte - version number (0)\n\t\t * 1 byte - number of acknowledgements\n\t\t * Acknowledgements:\n\t\t * 1 byte - ack (+ve integer, subtract from seq-1) to get seq# to ack\n\t\t * \n\t\t * 1 byte - number of explicit retransmit requests\n\t\t * Explicit retransmit requests:\n\t\t * 1 byte - retransmit request (+ve integer, subtract from seq-1) to get seq# to resend\n\t\t * \n\t\t * 1 byte - number of packets forgotten\n\t\t * Forgotten packets:\n\t\t * 1 byte - forgotten packet seq# (+ve integer, subtract from seq-1) to get seq# lost\n\t\t * \n\t\t * 1 byte - number of messages\n\t\t * 2 bytes - message length\n\t\t * first message\n\t\t * 2 bytes - second message length\n\t\t * second message\n\t\t * ...\n\t\t * last message\n\t\t * anything beyond this point is padding, to be ignored\n\t\t */ \n\n\t\t// Use ptr to simplify code\n\t\tint ptr = RANDOM_BYTES_LENGTH;\n\n\t\tint version = decrypted[ptr++];\n\t\tif(ptr > decrypted.length) {\n\t\t\tLogger.error(this, \"Packet not long enough at byte \"+ptr+\" on \"+tracker);\n\t\t\treturn;\n\t\t}\n\t\tif(version != 0) {\n\t\t\tLogger.error(this,\"Packet from \"+tracker+\" decrypted but invalid version: \"+version);\n\t\t\treturn;\n\t\t}\n\n\t\t/** Highest sequence number sent - not the same as this packet's seq number */\n\t\tint realSeqNumber = seqNumber;\n\n\t\tif(seqNumber == -1) {\n\t\t\tif(ptr+4 > decrypted.length) {\n\t\t\t\tLogger.error(this, \"Packet not long enough at byte \"+ptr+\" on \"+tracker);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\trealSeqNumber =\n\t\t\t\t((((((decrypted[ptr+0] & 0xff) << 8) + (decrypted[ptr+1] & 0xff)) << 8) + \n\t\t\t\t\t\t(decrypted[ptr+2] & 0xff)) << 8) + (decrypted[ptr+3] & 0xff);\n\t\t\tptr+=4;\n\t\t} else {\n\t\t\tif(ptr > decrypted.length) {\n\t\t\t\tLogger.error(this, \"Packet not long enough at byte \"+ptr+\" on \"+tracker);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\trealSeqNumber = seqNumber + (decrypted[ptr++] & 0xff);\n\t\t}\n\t\tif(logMINOR)\n\t\t\tLogger.minor(this, \"Real sequence number: \"+realSeqNumber);\n\n\t\t//Logger.minor(this, \"Reference seq number: \"+HexUtil.bytesToHex(decrypted, ptr, 4));\n\n\t\tif(ptr+4 > decrypted.length) {\n\t\t\tLogger.error(this, \"Packet not long enough at byte \"+ptr+\" on \"+tracker);\n\t\t\treturn;\n\t\t}\n\t\tint referenceSeqNumber = \n\t\t\t((((((decrypted[ptr+0] & 0xff) << 8) + (decrypted[ptr+1] & 0xff)) << 8) + \n\t\t\t\t\t(decrypted[ptr+2] & 0xff)) << 8) + (decrypted[ptr+3] & 0xff);\n\t\tptr+=4;\n\n\t\tif(logMINOR) Logger.minor(this, \"Reference sequence number: \"+referenceSeqNumber);\n\n\t\tint ackCount = decrypted[ptr++] & 0xff;\n\t\tif(logMINOR) Logger.minor(this, \"Acks: \"+ackCount);\n\n\t\tint[] acks = new int[ackCount];\n\t\tfor(int i=0;i<ackCount;i++) {\n\t\t\tint offset = decrypted[ptr++] & 0xff;\n\t\t\tif(ptr > decrypted.length) {\n\t\t\t\tLogger.error(this, \"Packet not long enough at byte \"+ptr+\" on \"+tracker);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tacks[i] = referenceSeqNumber - offset;\n\t\t}\n\n\t\ttracker.acknowledgedPackets(acks);\n\n\t\tint retransmitCount = decrypted[ptr++] & 0xff;\n\t\tif(logMINOR) Logger.minor(this, \"Retransmit requests: \"+retransmitCount);\n\n\t\tfor(int i=0;i<retransmitCount;i++) {\n\t\t\tint offset = decrypted[ptr++] & 0xff;\n\t\t\tif(ptr > decrypted.length) {\n\t\t\t\tLogger.error(this, \"Packet not long enough at byte \"+ptr+\" on \"+tracker);\n\t\t\t}\n\t\t\tint realSeqNo = referenceSeqNumber - offset;\n\t\t\tif(logMINOR) Logger.minor(this, \"RetransmitRequest: \"+realSeqNo);\n\t\t\ttracker.resendPacket(realSeqNo);\n\t\t}\n\n\t\tint ackRequestsCount = decrypted[ptr++] & 0xff;\n\t\tif(logMINOR) Logger.minor(this, \"Ack requests: \"+ackRequestsCount);\n\n\t\t// These two are relative to our outgoing packet number\n\t\t// Because they relate to packets we have sent.\n\t\tfor(int i=0;i<ackRequestsCount;i++) {\n\t\t\tint offset = decrypted[ptr++] & 0xff;\n\t\t\tif(ptr > decrypted.length) {\n\t\t\t\tLogger.error(this, \"Packet not long enough at byte \"+ptr+\" on \"+tracker);\n\t\t\t}\n\t\t\tint realSeqNo = realSeqNumber - offset;\n\t\t\tif(logMINOR) Logger.minor(this, \"AckRequest: \"+realSeqNo);\n\t\t\ttracker.receivedAckRequest(realSeqNo);\n\t\t}\n\n\t\tint forgottenCount = decrypted[ptr++] & 0xff;\n\t\tif(logMINOR) Logger.minor(this, \"Forgotten packets: \"+forgottenCount);\n\n\t\tfor(int i=0;i<forgottenCount;i++) {\n\t\t\tint offset = decrypted[ptr++] & 0xff;\n\t\t\tif(ptr > decrypted.length) {\n\t\t\t\tLogger.error(this, \"Packet not long enough at byte \"+ptr+\" on \"+tracker);\n\t\t\t}\n\t\t\tint realSeqNo = realSeqNumber - offset;\n\t\t\ttracker.destForgotPacket(realSeqNo);\n\t\t}\n\n\t\ttracker.pn.receivedPacket(false); // Must keep the connection open, even if it's an ack packet only and on an incompatible connection - we may want to do a UOM transfer e.g.\n\n\t\tif(seqNumber == -1) {\n\t\t\tif(logMINOR) Logger.minor(this, \"Returning because seqno = \"+seqNumber);\n\t\t\treturn;\n\t\t}\n\t\t// No sequence number == no messages\n\n\t\tif((seqNumber != -1) && tracker.alreadyReceived(seqNumber)) {\n\t\t\ttracker.queueAck(seqNumber); // Must keep the connection open!\n\t\t\tLogger.error(this, \"Received packet twice (\"+seqNumber+\") from \"+tracker.pn.getPeer()+\": \"+seqNumber+\" (\"+TimeUtil.formatTime((long) tracker.pn.pingAverage.currentValue(), 2, true)+\" ping avg)\");\n\t\t\treturn;\n\t\t}\n\n\t\ttracker.receivedPacket(seqNumber);\n\n\t\tint messages = decrypted[ptr++] & 0xff;\n\n\t\toverhead += ptr;\n\n\t\tfor(int i=0;i<messages;i++) {\n\t\t\tif(ptr+1 >= decrypted.length) {\n\t\t\t\tLogger.error(this, \"Packet not long enough at byte \"+ptr+\" on \"+tracker);\n\t\t\t}\n\t\t\tint length = ((decrypted[ptr++] & 0xff) << 8) +\n\t\t\t(decrypted[ptr++] & 0xff);\n\t\t\tif(length > decrypted.length - ptr) {\n\t\t\t\tLogger.error(this, \"Message longer than remaining space: \"+length);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(logMINOR) Logger.minor(this, \"Message \"+i+\" length \"+length+\", hash code: \"+Fields.hashCode(decrypted, ptr, length));\n\t\t\tMessage m = usm.decodeSingleMessage(decrypted, ptr, length, tracker.pn, 1 + (overhead / messages));\n\t\t\tptr+=length;\n\t\t\tif(m != null) {\n\t\t\t\t//Logger.minor(this, \"Dispatching packet: \"+m);\n\t\t\t\tusm.checkFilters(m, sock);\n\t\t\t}\n\t\t}\n                \n\t\ttracker.pn.maybeRekey();\n\t\tif(logMINOR) Logger.minor(this, \"Done\");\n\t}","id":50187,"modified_method":"/**\n\t * Process an incoming packet, once it has been decrypted.\n\t * @param decrypted The packet's contents.\n\t * @param seqNumber The detected sequence number of the packet.\n\t * @param tracker The KeyTracker responsible for the key used to encrypt the packet.\n\t */\n\tprivate void processDecryptedData(byte[] decrypted, int seqNumber, KeyTracker tracker, int overhead) {\n\t\t/**\n\t\t * Decoded format:\n\t\t * 1 byte - version number (0)\n\t\t * 1 byte - number of acknowledgements\n\t\t * Acknowledgements:\n\t\t * 1 byte - ack (+ve integer, subtract from seq-1) to get seq# to ack\n\t\t * \n\t\t * 1 byte - number of explicit retransmit requests\n\t\t * Explicit retransmit requests:\n\t\t * 1 byte - retransmit request (+ve integer, subtract from seq-1) to get seq# to resend\n\t\t * \n\t\t * 1 byte - number of packets forgotten\n\t\t * Forgotten packets:\n\t\t * 1 byte - forgotten packet seq# (+ve integer, subtract from seq-1) to get seq# lost\n\t\t * \n\t\t * 1 byte - number of messages\n\t\t * 2 bytes - message length\n\t\t * first message\n\t\t * 2 bytes - second message length\n\t\t * second message\n\t\t * ...\n\t\t * last message\n\t\t * anything beyond this point is padding, to be ignored\n\t\t */ \n\n\t\t// Use ptr to simplify code\n\t\tint ptr = RANDOM_BYTES_LENGTH;\n\n\t\tint version = decrypted[ptr++];\n\t\tif(ptr > decrypted.length) {\n\t\t\tLogger.error(this, \"Packet not long enough at byte \"+ptr+\" on \"+tracker);\n\t\t\treturn;\n\t\t}\n\t\tif(version != 0) {\n\t\t\tLogger.error(this,\"Packet from \"+tracker+\" decrypted but invalid version: \"+version);\n\t\t\treturn;\n\t\t}\n\n\t\t/** Highest sequence number sent - not the same as this packet's seq number */\n\t\tint realSeqNumber = seqNumber;\n\n\t\tif(seqNumber == -1) {\n\t\t\tif(ptr+4 > decrypted.length) {\n\t\t\t\tLogger.error(this, \"Packet not long enough at byte \"+ptr+\" on \"+tracker);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\trealSeqNumber =\n\t\t\t\t((((((decrypted[ptr+0] & 0xff) << 8) + (decrypted[ptr+1] & 0xff)) << 8) + \n\t\t\t\t\t\t(decrypted[ptr+2] & 0xff)) << 8) + (decrypted[ptr+3] & 0xff);\n\t\t\tptr+=4;\n\t\t} else {\n\t\t\tif(ptr > decrypted.length) {\n\t\t\t\tLogger.error(this, \"Packet not long enough at byte \"+ptr+\" on \"+tracker);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\trealSeqNumber = seqNumber + (decrypted[ptr++] & 0xff);\n\t\t}\n\t\tif(logMINOR)\n\t\t\tLogger.minor(this, \"Real sequence number: \"+realSeqNumber);\n\n\t\t//Logger.minor(this, \"Reference seq number: \"+HexUtil.bytesToHex(decrypted, ptr, 4));\n\n\t\tif(ptr+4 > decrypted.length) {\n\t\t\tLogger.error(this, \"Packet not long enough at byte \"+ptr+\" on \"+tracker);\n\t\t\treturn;\n\t\t}\n\t\tint referenceSeqNumber = \n\t\t\t((((((decrypted[ptr+0] & 0xff) << 8) + (decrypted[ptr+1] & 0xff)) << 8) + \n\t\t\t\t\t(decrypted[ptr+2] & 0xff)) << 8) + (decrypted[ptr+3] & 0xff);\n\t\tptr+=4;\n\n\t\tif(logMINOR) Logger.minor(this, \"Reference sequence number: \"+referenceSeqNumber);\n\n\t\tint ackCount = decrypted[ptr++] & 0xff;\n\t\tif(logMINOR) Logger.minor(this, \"Acks: \"+ackCount);\n\n\t\tint[] acks = new int[ackCount];\n\t\tfor(int i=0;i<ackCount;i++) {\n\t\t\tint offset = decrypted[ptr++] & 0xff;\n\t\t\tif(ptr > decrypted.length) {\n\t\t\t\tLogger.error(this, \"Packet not long enough at byte \"+ptr+\" on \"+tracker);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tacks[i] = referenceSeqNumber - offset;\n\t\t}\n\n\t\ttracker.acknowledgedPackets(acks);\n\n\t\tint retransmitCount = decrypted[ptr++] & 0xff;\n\t\tif(logMINOR) Logger.minor(this, \"Retransmit requests: \"+retransmitCount);\n\n\t\tfor(int i=0;i<retransmitCount;i++) {\n\t\t\tint offset = decrypted[ptr++] & 0xff;\n\t\t\tif(ptr > decrypted.length) {\n\t\t\t\tLogger.error(this, \"Packet not long enough at byte \"+ptr+\" on \"+tracker);\n\t\t\t}\n\t\t\tint realSeqNo = referenceSeqNumber - offset;\n\t\t\tif(logMINOR) Logger.minor(this, \"RetransmitRequest: \"+realSeqNo);\n\t\t\ttracker.resendPacket(realSeqNo);\n\t\t}\n\n\t\tint ackRequestsCount = decrypted[ptr++] & 0xff;\n\t\tif(logMINOR) Logger.minor(this, \"Ack requests: \"+ackRequestsCount);\n\n\t\t// These two are relative to our outgoing packet number\n\t\t// Because they relate to packets we have sent.\n\t\tfor(int i=0;i<ackRequestsCount;i++) {\n\t\t\tint offset = decrypted[ptr++] & 0xff;\n\t\t\tif(ptr > decrypted.length) {\n\t\t\t\tLogger.error(this, \"Packet not long enough at byte \"+ptr+\" on \"+tracker);\n\t\t\t}\n\t\t\tint realSeqNo = realSeqNumber - offset;\n\t\t\tif(logMINOR) Logger.minor(this, \"AckRequest: \"+realSeqNo);\n\t\t\ttracker.receivedAckRequest(realSeqNo);\n\t\t}\n\n\t\tint forgottenCount = decrypted[ptr++] & 0xff;\n\t\tif(logMINOR) Logger.minor(this, \"Forgotten packets: \"+forgottenCount);\n\n\t\tfor(int i=0;i<forgottenCount;i++) {\n\t\t\tint offset = decrypted[ptr++] & 0xff;\n\t\t\tif(ptr > decrypted.length) {\n\t\t\t\tLogger.error(this, \"Packet not long enough at byte \"+ptr+\" on \"+tracker);\n\t\t\t}\n\t\t\tint realSeqNo = realSeqNumber - offset;\n\t\t\ttracker.destForgotPacket(realSeqNo);\n\t\t}\n\n\t\ttracker.pn.receivedPacket(false); // Must keep the connection open, even if it's an ack packet only and on an incompatible connection - we may want to do a UOM transfer e.g.\n\n\t\tif(seqNumber == -1) {\n\t\t\tif(logMINOR) Logger.minor(this, \"Returning because seqno = \"+seqNumber);\n\t\t\treturn;\n\t\t}\n\t\t// No sequence number == no messages\n\n\t\tif((seqNumber != -1) && tracker.alreadyReceived(seqNumber)) {\n\t\t\ttracker.queueAck(seqNumber); // Must keep the connection open!\n\t\t\tif(logMINOR) Logger.minor(this, \"Received packet twice (\"+seqNumber+\") from \"+tracker.pn.getPeer()+\": \"+seqNumber+\" (\"+TimeUtil.formatTime((long) tracker.pn.pingAverage.currentValue(), 2, true)+\" ping avg)\");\n\t\t\treturn;\n\t\t}\n\n\t\ttracker.receivedPacket(seqNumber);\n\n\t\tint messages = decrypted[ptr++] & 0xff;\n\n\t\toverhead += ptr;\n\n\t\tfor(int i=0;i<messages;i++) {\n\t\t\tif(ptr+1 >= decrypted.length) {\n\t\t\t\tLogger.error(this, \"Packet not long enough at byte \"+ptr+\" on \"+tracker);\n\t\t\t}\n\t\t\tint length = ((decrypted[ptr++] & 0xff) << 8) +\n\t\t\t(decrypted[ptr++] & 0xff);\n\t\t\tif(length > decrypted.length - ptr) {\n\t\t\t\tLogger.error(this, \"Message longer than remaining space: \"+length);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(logMINOR) Logger.minor(this, \"Message \"+i+\" length \"+length+\", hash code: \"+Fields.hashCode(decrypted, ptr, length));\n\t\t\tMessage m = usm.decodeSingleMessage(decrypted, ptr, length, tracker.pn, 1 + (overhead / messages));\n\t\t\tptr+=length;\n\t\t\tif(m != null) {\n\t\t\t\t//Logger.minor(this, \"Dispatching packet: \"+m);\n\t\t\t\tusm.checkFilters(m, sock);\n\t\t\t}\n\t\t}\n                \n\t\ttracker.pn.maybeRekey();\n\t\tif(logMINOR) Logger.minor(this, \"Done\");\n\t}","commit_id":"4ec049817b3ba4a25cc11c3972206755e087c802","url":"https://github.com/freenet/fred"},{"original_method":"public void segmentFinished(SplitFileFetcherSegment segment, ObjectContainer container, ClientContext context) {\n\t\tif(persistent)\n\t\t\tcontainer.activate(this, 1);\n\t\tif(logMINOR) Logger.minor(this, \"Finished segment: \"+segment);\n\t\tboolean finish = false;\n\t\tsynchronized(this) {\n\t\t\tboolean allDone = true;\n\t\t\tfor(int i=0;i<segments.length;i++) {\n\t\t\t\tif(persistent)\n\t\t\t\t\tcontainer.activate(segments[i], 1);\n\t\t\t\tif(!segments[i].succeeded()) {\n\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Segment \"+segments[i]+\" is not finished\");\n\t\t\t\t\tallDone = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(allDone) {\n\t\t\t\tif(allSegmentsFinished) {\n\t\t\t\t\tLogger.error(this, \"Was already finished! (segmentFinished(\"+segment+ ')', new Exception(\"debug\"));\n\t\t\t\t} else {\n\t\t\t\t\tallSegmentsFinished = true;\n\t\t\t\t\tfinish = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor(int i=0;i<segments.length;i++) {\n\t\t\t\t\tif(segments[i] == segment) continue;\n\t\t\t\t\tif(persistent)\n\t\t\t\t\t\tcontainer.deactivate(segments[i], 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\tnotifyAll();\n\t\t}\n\t\tif(persistent) container.store(this);\n\t\tif(finish) finish(container, context);\n\t}","id":50188,"modified_method":"public void segmentFinished(SplitFileFetcherSegment segment, ObjectContainer container, ClientContext context) {\n\t\tif(persistent)\n\t\t\tcontainer.activate(this, 1);\n\t\tif(logMINOR) Logger.minor(this, \"Finished segment: \"+segment);\n\t\tboolean finish = false;\n\t\tsynchronized(this) {\n\t\t\tboolean allDone = true;\n\t\t\tfor(int i=0;i<segments.length;i++) {\n\t\t\t\tif(persistent)\n\t\t\t\t\tcontainer.activate(segments[i], 1);\n\t\t\t\tif(!segments[i].succeeded()) {\n\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Segment \"+segments[i]+\" is not finished\");\n\t\t\t\t\tallDone = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(allDone) {\n\t\t\t\tif(allSegmentsFinished) {\n\t\t\t\t\tif(logMINOR)\n\t\t\t\t\t\t// Race condition. No problem.\n\t\t\t\t\t\tLogger.minor(this, \"Was already finished! (segmentFinished(\"+segment+ ')', new Exception(\"debug\"));\n\t\t\t\t} else {\n\t\t\t\t\tallSegmentsFinished = true;\n\t\t\t\t\tfinish = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor(int i=0;i<segments.length;i++) {\n\t\t\t\t\tif(segments[i] == segment) continue;\n\t\t\t\t\tif(persistent)\n\t\t\t\t\t\tcontainer.deactivate(segments[i], 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\tnotifyAll();\n\t\t}\n\t\tif(persistent) container.store(this);\n\t\tif(finish) finish(container, context);\n\t}","commit_id":"314660875af542f045d676e68e9181aa0aeb79d1","url":"https://github.com/freenet/fred"},{"original_method":"private boolean _handleSecretPing(Message m, PeerNode source, long uid, short htl, short dawnHtl, int counter) throws NotConnectedException {\n\t\t\n\t\tif (disableSecretPings || node.recentlyCompleted(uid)) {\n\t\t\tLogger.normal(this, \"recently complete/loop: \"+uid);\n\t\t\tsource.sendAsync(DMT.createFNPRejectedLoop(uid), null, 0, null);\n\t\t} else {\n\t\t\tStoredSecret match;\n\t\t\t//Yes, I know... it looks really weird sync.ing on a separate map...\n\t\t\tsynchronized (secretsByPeer) {\n\t\t\t\tmatch=(StoredSecret)secretsByUID.get(new Long(uid));\n\t\t\t}\n\t\t\tif (match!=null) {\n\t\t\t\t//This is the node that the ping intends to reach, we will *not* forward it; but we might not respond positively either.\n\t\t\t\t//don't set the completed flag, we might reject it from one peer (too short a path) and accept it from another.\n\t\t\t\tif (htl > dawnHtl) {\n\t\t\t\t\tsource.sendAsync(DMT.createFNPRejectedLoop(uid), null, 0, null);\n\t\t\t\t} else {\n\t\t\t\t\tLogger.error(this, \"Responding to \"+source+\" with \"+match+\" from \"+match.peer);\n\t\t\t\t\tsource.sendAsync(match.getSecretPong(counter+1), null, 0, null);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t//Set the completed flag immediately for determining reject loops rather than locking the uid.\n\t\t\t\tnode.completed(uid);\n\t\t\t\t\n\t\t\t\t//Not a local match... forward\n\t\t\t\tdouble target=m.getDouble(DMT.TARGET_LOCATION);\n\t\t\t\tHashSet routedTo=new HashSet();\n\t\t\t\tHashSet notIgnored=new HashSet();\n\t\t\t\twhile (true) {\n\t\t\t\t\tPeerNode next;\n\t\t\t\t\t\n\t\t\t\t\tif (htl > dawnHtl && routedTo.isEmpty()) {\n\t\t\t\t\t\tnext=node.peers.getRandomPeer(source);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnext=node.peers.closerPeer(source, routedTo, notIgnored, target, true, node.isAdvancedModeEnabled(), -1, null, null);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (next==null) {\n\t\t\t\t\t\t//would be rnf... but this is a more exhaustive and lightweight search I suppose.\n\t\t\t\t\t\tsource.sendAsync(DMT.createFNPRejectedLoop(uid), null, 0, null);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\thtl=next.decrementHTL(htl);\n\t\t\t\t\t\n\t\t\t\t\tif (htl<=0) {\n\t\t\t\t\t\t//would be dnf if we were looking for data.\n\t\t\t\t\t\tsource.sendAsync(DMT.createFNPRejectedLoop(uid), null, 0, null);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (!source.isConnected()) {\n\t\t\t\t\t\tthrow new NotConnectedException(\"source gone away while forwarding\");\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tcounter++;\n\t\t\t\t\troutedTo.add(next);\n\t\t\t\t\ttry {\n\t\t\t\t\t\tnext.sendAsync(DMT.createFNPSecretPing(uid, target, htl, dawnHtl, counter), null, 0, null);\n\t\t\t\t\t} catch (NotConnectedException e) {\n\t\t\t\t\t\tLogger.normal(this, next+\" disconnected before secret-ping-forward\");\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t//wait for a reject or pong\n\t\t\t\t\tMessageFilter mfPong = MessageFilter.create().setSource(next).setField(DMT.UID, uid).setTimeout(SECRETPONG_TIMEOUT).setType(DMT.FNPSecretPong);\n\t\t\t\t\tMessageFilter mfRejectLoop = MessageFilter.create().setSource(next).setField(DMT.UID, uid).setTimeout(SECRETPONG_TIMEOUT).setType(DMT.FNPRejectedLoop);\n\t\t\t\t\tMessage msg;\n\t\t\t\t\t\n\t\t\t\t\ttry {\n\t\t\t\t\t\tmsg = node.usm.waitFor(mfPong.or(mfRejectLoop), null);\n\t\t\t\t\t} catch (DisconnectedException e) {\n\t\t\t\t\t\tLogger.normal(this, next+\" disconnected while waiting for a secret-pong\");\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (msg==null) {\n\t\t\t\t\t\tLogger.error(this, \"fatal timeout in waiting for secretpong from \"+next);\n\t\t\t\t\t\t//backoff?\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (msg.getSpec() == DMT.FNPSecretPong) {\n\t\t\t\t\t\tint suppliedCounter=msg.getInt(DMT.COUNTER);\n\t\t\t\t\t\tif (suppliedCounter>counter)\n\t\t\t\t\t\t\tcounter=suppliedCounter;\n\t\t\t\t\t\tlong secret=msg.getLong(DMT.SECRET);\n\t\t\t\t\t\tLogger.error(this, node+\" forwarding apparently-successful secretpong response: \"+counter+\"/\"+secret+\" from \"+next+\" to \"+source);\n\t\t\t\t\t\tsource.sendAsync(DMT.createFNPSecretPong(uid, counter, secret), null, 0, null);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (msg.getSpec() == DMT.FNPRejectedLoop) {\n\t\t\t\t\t\tif (logMINOR) Logger.minor(this, \"secret ping (reject/loop): \"+source+\" -> \"+next);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tLogger.error(this, \"unexpected message type: \"+msg);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//unlockUID()\n\t\t}\n\t\treturn true;\n\t}","id":50189,"modified_method":"private boolean _handleSecretPing(Message m, PeerNode source, long uid, short htl, short dawnHtl, int counter) throws NotConnectedException {\n\t\t\n\t\tif (disableSecretPings || node.recentlyCompleted(uid)) {\n\t\t\tif (logMINOR) Logger.minor(this, \"recently complete/loop: \"+uid);\n\t\t\tsource.sendAsync(DMT.createFNPRejectedLoop(uid), null, 0, null);\n\t\t} else {\n\t\t\tStoredSecret match;\n\t\t\t//Yes, I know... it looks really weird sync.ing on a separate map...\n\t\t\tsynchronized (secretsByPeer) {\n\t\t\t\tmatch=(StoredSecret)secretsByUID.get(new Long(uid));\n\t\t\t}\n\t\t\tif (match!=null) {\n\t\t\t\t//This is the node that the ping intends to reach, we will *not* forward it; but we might not respond positively either.\n\t\t\t\t//don't set the completed flag, we might reject it from one peer (too short a path) and accept it from another.\n\t\t\t\tif (htl > dawnHtl) {\n\t\t\t\t\tsource.sendAsync(DMT.createFNPRejectedLoop(uid), null, 0, null);\n\t\t\t\t} else {\n\t\t\t\t\tif (logMINOR) Logger.minor(this, \"Responding to \"+source+\" with \"+match+\" from \"+match.peer);\n\t\t\t\t\tsource.sendAsync(match.getSecretPong(counter+1), null, 0, null);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t//Set the completed flag immediately for determining reject loops rather than locking the uid.\n\t\t\t\tnode.completed(uid);\n\t\t\t\t\n\t\t\t\t//Not a local match... forward\n\t\t\t\tdouble target=m.getDouble(DMT.TARGET_LOCATION);\n\t\t\t\tHashSet routedTo=new HashSet();\n\t\t\t\tHashSet notIgnored=new HashSet();\n\t\t\t\twhile (true) {\n\t\t\t\t\tPeerNode next;\n\t\t\t\t\t\n\t\t\t\t\tif (htl > dawnHtl && routedTo.isEmpty()) {\n\t\t\t\t\t\tnext=node.peers.getRandomPeer(source);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnext=node.peers.closerPeer(source, routedTo, notIgnored, target, true, node.isAdvancedModeEnabled(), -1, null, null);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (next==null) {\n\t\t\t\t\t\t//would be rnf... but this is a more exhaustive and lightweight search I suppose.\n\t\t\t\t\t\tsource.sendAsync(DMT.createFNPRejectedLoop(uid), null, 0, null);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\thtl=next.decrementHTL(htl);\n\t\t\t\t\t\n\t\t\t\t\tif (htl<=0) {\n\t\t\t\t\t\t//would be dnf if we were looking for data.\n\t\t\t\t\t\tsource.sendAsync(DMT.createFNPRejectedLoop(uid), null, 0, null);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (!source.isConnected()) {\n\t\t\t\t\t\tthrow new NotConnectedException(\"source gone away while forwarding\");\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tcounter++;\n\t\t\t\t\troutedTo.add(next);\n\t\t\t\t\ttry {\n\t\t\t\t\t\tnext.sendAsync(DMT.createFNPSecretPing(uid, target, htl, dawnHtl, counter), null, 0, null);\n\t\t\t\t\t} catch (NotConnectedException e) {\n\t\t\t\t\t\tLogger.normal(this, next+\" disconnected before secret-ping-forward\");\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t//wait for a reject or pong\n\t\t\t\t\tMessageFilter mfPong = MessageFilter.create().setSource(next).setField(DMT.UID, uid).setTimeout(SECRETPONG_TIMEOUT).setType(DMT.FNPSecretPong);\n\t\t\t\t\tMessageFilter mfRejectLoop = MessageFilter.create().setSource(next).setField(DMT.UID, uid).setTimeout(SECRETPONG_TIMEOUT).setType(DMT.FNPRejectedLoop);\n\t\t\t\t\tMessage msg;\n\t\t\t\t\t\n\t\t\t\t\ttry {\n\t\t\t\t\t\tmsg = node.usm.waitFor(mfPong.or(mfRejectLoop), null);\n\t\t\t\t\t} catch (DisconnectedException e) {\n\t\t\t\t\t\tLogger.normal(this, next+\" disconnected while waiting for a secret-pong\");\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (msg==null) {\n\t\t\t\t\t\tLogger.error(this, \"fatal timeout in waiting for secretpong from \"+next);\n\t\t\t\t\t\t//backoff?\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (msg.getSpec() == DMT.FNPSecretPong) {\n\t\t\t\t\t\tint suppliedCounter=msg.getInt(DMT.COUNTER);\n\t\t\t\t\t\tif (suppliedCounter>counter)\n\t\t\t\t\t\t\tcounter=suppliedCounter;\n\t\t\t\t\t\tlong secret=msg.getLong(DMT.SECRET);\n\t\t\t\t\t\tif (logMINOR) Logger.minor(this, node+\" forwarding apparently-successful secretpong response: \"+counter+\"/\"+secret+\" from \"+next+\" to \"+source);\n\t\t\t\t\t\tsource.sendAsync(DMT.createFNPSecretPong(uid, counter, secret), null, 0, null);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (msg.getSpec() == DMT.FNPRejectedLoop) {\n\t\t\t\t\t\tif (logMINOR) Logger.minor(this, \"secret ping (reject/loop): \"+source+\" -> \"+next);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tLogger.error(this, \"unexpected message type: \"+msg);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//unlockUID()\n\t\t}\n\t\treturn true;\n\t}","commit_id":"560959d82268f7a768251f83609a55ecf0d72ee9","url":"https://github.com/freenet/fred"},{"original_method":"/**\n\t * Stores the secret&uid contained in the message associated with the peer it comes from.\n\t * \"FNPStoreSecret\" messages are *never* forwarded, they are only between peers as an alert\n\t * that they may be asked for the secret from a third party.\n\t */\n\tpublic boolean handleStoreSecret(Message m) {\n\t\tPeerNode pn=(PeerNode)m.getSource();\n\t\tlong uid = m.getLong(DMT.UID);\n\t\tlong secret = m.getLong(DMT.SECRET);\n\t\tStoredSecret s=new StoredSecret(pn, uid, secret);\n\t\tLogger.error(this, \"Storing secret: \"+s);\n\t\taddOrReplaceSecret(s);\n\t\ttry {\n\t\t\tpn.sendAsync(DMT.createFNPAccepted(uid), null, 0, null);\n\t\t} catch (NotConnectedException e) {\n\t\t\tLogger.error(this, \"peer disconnected before storeSecret ack?\", e);\n\t\t}\n\t\treturn true;\n\t}","id":50190,"modified_method":"/**\n\t * Stores the secret&uid contained in the message associated with the peer it comes from.\n\t * \"FNPStoreSecret\" messages are *never* forwarded, they are only between peers as an alert\n\t * that they may be asked for the secret from a third party.\n\t */\n\tpublic boolean handleStoreSecret(Message m) {\n\t\tPeerNode pn=(PeerNode)m.getSource();\n\t\tlong uid = m.getLong(DMT.UID);\n\t\tlong secret = m.getLong(DMT.SECRET);\n\t\tStoredSecret s=new StoredSecret(pn, uid, secret);\n\t\tif (logMINOR) Logger.minor(this, \"Storing secret: \"+s);\n\t\taddOrReplaceSecret(s);\n\t\ttry {\n\t\t\tpn.sendAsync(DMT.createFNPAccepted(uid), null, 0, null);\n\t\t} catch (NotConnectedException e) {\n\t\t\tLogger.error(this, \"peer disconnected before storeSecret ack?\", e);\n\t\t}\n\t\treturn true;\n\t}","commit_id":"560959d82268f7a768251f83609a55ecf0d72ee9","url":"https://github.com/freenet/fred"},{"original_method":"public void onDisconnect(PeerNode pn) {\n\t\tsynchronized (secretsByPeer) {\n\t\t\tStoredSecret s=(StoredSecret)secretsByPeer.get(pn);\n\t\t\tif (s!=null) {\n\t\t\t\t//???: Might it still be valid to respond to secret pings when the neighbor requesting it has disconnected? (super-secret ping?)\n\t\t\t\tLogger.error(this, \"Removing on disconnect: \"+s);\n\t\t\t\tremoveSecret(s);\n\t\t\t}\n\t\t}\n\t}","id":50191,"modified_method":"public void onDisconnect(PeerNode pn) {\n\t\tsynchronized (secretsByPeer) {\n\t\t\tStoredSecret s=(StoredSecret)secretsByPeer.get(pn);\n\t\t\tif (s!=null) {\n\t\t\t\t//???: Might it still be valid to respond to secret pings when the neighbor requesting it has disconnected? (super-secret ping?)\n\t\t\t\tLogger.normal(this, \"Removing on disconnect: \"+s);\n\t\t\t\tremoveSecret(s);\n\t\t\t}\n\t\t}\n\t}","commit_id":"560959d82268f7a768251f83609a55ecf0d72ee9","url":"https://github.com/freenet/fred"},{"original_method":"public static void main(String[] args) throws FSParseException, PeerParseException, InvalidThresholdException, NodeInitException, ReferenceSignatureVerificationException {\n        //Logger.setupStdoutLogging(Logger.NORMAL, \"freenet.node.CPUAdjustingSwapRequestInterval:minor\" /*\"freenet.node.LocationManager:debug,freenet.node.FNPPacketManager:normal,freenet.io.comm.MessageCore:debug\"*/);\n        System.out.println(\"SecretPing (CRAM) test using real nodes:\");\n        System.out.println();\n        String wd = \"realNodeSecretPingTest\";\n        new File(wd).mkdir();\n        //NOTE: globalTestInit returns in ignored random source\n        NodeStarter.globalTestInit(wd);\n\t\tLogger.setupStdoutLogging(Logger.ERROR, \"freenet.node.Location:normal,freenet.node.simulator.RealNodeSecretPingTest:normal,freenet.node.NetworkIDManager:debug\");\n\t\tLogger.globalSetThreshold(Logger.ERROR);\n\n        DummyRandomSource random = new DummyRandomSource();\n        //DiffieHellman.init(random);\n        Node[] nodes = new Node[NUMBER_OF_NODES];\n        Logger.normal(RealNodeRoutingTest.class, \"Creating nodes...\");\n        Executor executor = new PooledExecutor();\n        for(int i=0;i<NUMBER_OF_NODES;i++) {\n            nodes[i] = \n            \tNodeStarter.createTestNode(5001+i, wd, false, true, true, MAX_HTL, 0 /* no dropped packets */, random, executor, 500*NUMBER_OF_NODES, storeSize, true);\n            Logger.normal(RealNodeRoutingTest.class, \"Created node \"+i);\n        }\n        Logger.normal(RealNodeRoutingTest.class, \"Created \"+NUMBER_OF_NODES+\" nodes\");\n        // Now link them up\n        makeKleinbergNetwork(nodes);\n        Logger.normal(RealNodeRoutingTest.class, \"Added small-world links\");\n        \n        for(int i=0;i<NUMBER_OF_NODES;i++)\n            nodes[i].start(false);\n        \n\t\t//In case they are hard-coded off, allow secret pings (this is the test for them!)\n\t\tfreenet.node.NetworkIDManager.disableSecretPings=false;\n\t\t\n        // Now sit back and watch the fireworks!\n        int cycleNumber = 0;\n        int lastSwaps = 0;\n        int lastNoSwaps = 0;\n        int failures = 0;\n        int successes = 0;\n        RunningAverage avg2 = new BootstrappingDecayingRunningAverage(0.0, 0.0, 1.0, 100, null);\n        int pings = 0;\n        while(true) {\n            cycleNumber++;\n\t\t\t\n\t\t\ttry {\n                Thread.sleep(2000);\n            } catch (InterruptedException e) {\n                // Ignore\n            }\n\t\t\t\n\t\t\tNode source = nodes[random.nextInt(NUMBER_OF_NODES)];\n\t\t\tPeerNode verify = source.peers.getRandomPeer();\n\t\t\tPeerNode pathway = source.peers.getRandomPeer(verify);\n\t\t\t\n\t\t\tLogger.error(source, \"verify (\"+verify+\") through: \"+pathway+\"; so far \"+avg2.currentValue());\n\t\t\t\n\t\t\tlong uid=random.nextLong();\n\t\t\tlong secret=random.nextLong();\n\t\t\t\n\t\t\tif (verify==null) {\n\t\t\t\tLogger.error(source, \"verify peernode is null\");\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\tif (pathway==null) {\n\t\t\t\tLogger.error(source, \"pathway peernode is null\");\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\ttry {\n\t\t\t\t//Send the FNPStoreSecret message to the 'verify' node\n\t\t\t\tverify.sendSync(DMT.createFNPStoreSecret(uid, secret), null);\n\t\t\t\t\n\t\t\t\tif (!getAck(source, verify, uid)) {\n\t\t\t\t\tLogger.error(source, \"did not get storesecret ack for \"+uid);\n\t\t\t\t\tavg2.report(0.0);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t//Send the request for the secret through the 'pathway' node.\n\t\t\t\tpathway.sendSync(DMT.createFNPSecretPing(uid, verify.getLocation(), PING_HTL, DAWN_HTL, 0), null);\n\t\t\t\t\n\t\t\t\tlong result=getSecretPingResponse(source, pathway, uid);\n\t\t\t\tif (result!=secret) {\n\t\t\t\t\tLogger.error(source, \"not matched: \"+secret+\" != \"+result);\n\t\t\t\t\tavg2.report(0.0);\n\t\t\t\t} else {\n\t\t\t\t\tLogger.error(source, \"match: \"+secret);\n\t\t\t\t\tavg2.report(1.0);\n\t\t\t\t}\n\t\t\t} catch (NotConnectedException e) {\n\t\t\t\tLogger.error(source, \"what?\",e);\n\t\t\t\tavg2.report(0.0);\n\t\t\t} catch (DisconnectedException e) {\n\t\t\t\tLogger.error(source, \"huh?\",e);\n\t\t\t\tavg2.report(0.0);\n\t\t\t}\n        }\n    }","id":50192,"modified_method":"public static void main(String[] args) throws FSParseException, PeerParseException, InvalidThresholdException, NodeInitException, ReferenceSignatureVerificationException {\n        //Logger.setupStdoutLogging(Logger.NORMAL, \"freenet.node.CPUAdjustingSwapRequestInterval:minor\" /*\"freenet.node.LocationManager:debug,freenet.node.FNPPacketManager:normal,freenet.io.comm.MessageCore:debug\"*/);\n        System.out.println(\"SecretPing (CRAM) test using real nodes:\");\n        System.out.println();\n        String wd = \"realNodeSecretPingTest\";\n        new File(wd).mkdir();\n        //NOTE: globalTestInit returns in ignored random source\n        NodeStarter.globalTestInit(wd);\n\t\tLogger.setupStdoutLogging(Logger.ERROR, \"freenet.node.Location:normal,freenet.node.simulator.RealNodeSecretPingTest:normal,freenet.node.NetworkIDManager:normal\");\n\t\tLogger.globalSetThreshold(Logger.ERROR);\n\n        DummyRandomSource random = new DummyRandomSource();\n        //DiffieHellman.init(random);\n        Node[] nodes = new Node[NUMBER_OF_NODES];\n        Logger.normal(RealNodeRoutingTest.class, \"Creating nodes...\");\n        Executor executor = new PooledExecutor();\n        for(int i=0;i<NUMBER_OF_NODES;i++) {\n            nodes[i] = \n            \tNodeStarter.createTestNode(5001+i, wd, false, true, true, MAX_HTL, 0 /* no dropped packets */, random, executor, 500*NUMBER_OF_NODES, storeSize, true);\n            Logger.normal(RealNodeRoutingTest.class, \"Created node \"+i);\n        }\n        Logger.normal(RealNodeRoutingTest.class, \"Created \"+NUMBER_OF_NODES+\" nodes\");\n        // Now link them up\n        makeKleinbergNetwork(nodes);\n        Logger.normal(RealNodeRoutingTest.class, \"Added small-world links\");\n        \n        for(int i=0;i<NUMBER_OF_NODES;i++)\n            nodes[i].start(false);\n        \n\t\t//In case they are hard-coded off, allow secret pings (this is the test for them!)\n\t\tfreenet.node.NetworkIDManager.disableSecretPings=false;\n\t\t\n        // Now sit back and watch the fireworks!\n        int cycleNumber = 0;\n        int lastSwaps = 0;\n        int lastNoSwaps = 0;\n        int failures = 0;\n        int successes = 0;\n        RunningAverage avg2 = new BootstrappingDecayingRunningAverage(0.0, 0.0, 1.0, 100, null);\n        int pings = 0;\n        while(true) {\n            cycleNumber++;\n\t\t\t\n\t\t\ttry {\n                Thread.sleep(2000);\n            } catch (InterruptedException e) {\n                // Ignore\n            }\n\t\t\t\n\t\t\tNode source = nodes[random.nextInt(NUMBER_OF_NODES)];\n\t\t\tPeerNode verify = source.peers.getRandomPeer();\n\t\t\tPeerNode pathway = source.peers.getRandomPeer(verify);\n\t\t\t\n\t\t\tLogger.error(source, \"verify (\"+getPortNumber(verify)+\") through: \"+getPortNumber(pathway)+\"; so far \"+avg2.currentValue());\n\t\t\t\n\t\t\tlong uid=random.nextLong();\n\t\t\tlong secret=random.nextLong();\n\t\t\t\n\t\t\tif (verify==null) {\n\t\t\t\tLogger.error(source, \"verify peernode is null\");\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\tif (pathway==null) {\n\t\t\t\tLogger.error(source, \"pathway peernode is null\");\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\ttry {\n\t\t\t\t//Send the FNPStoreSecret message to the 'verify' node\n\t\t\t\tverify.sendSync(DMT.createFNPStoreSecret(uid, secret), null);\n\t\t\t\t\n\t\t\t\tif (!getAck(source, verify, uid)) {\n\t\t\t\t\tLogger.error(source, \"did not get storesecret ack for \"+uid);\n\t\t\t\t\tavg2.report(0.0);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t//Send the request for the secret through the 'pathway' node.\n\t\t\t\tpathway.sendSync(DMT.createFNPSecretPing(uid, verify.getLocation(), PING_HTL, DAWN_HTL, 0), null);\n\t\t\t\t\n\t\t\t\tlong result=getSecretPingResponse(source, pathway, uid);\n\t\t\t\tif (result!=secret) {\n\t\t\t\t\tLogger.error(source, \"not matched: \"+secret+\" != \"+result);\n\t\t\t\t\tavg2.report(0.0);\n\t\t\t\t} else {\n\t\t\t\t\tLogger.error(source, \"match: \"+secret);\n\t\t\t\t\tavg2.report(1.0);\n\t\t\t\t}\n\t\t\t} catch (NotConnectedException e) {\n\t\t\t\tLogger.error(source, \"what?\",e);\n\t\t\t\tavg2.report(0.0);\n\t\t\t} catch (DisconnectedException e) {\n\t\t\t\tLogger.error(source, \"huh?\",e);\n\t\t\t\tavg2.report(0.0);\n\t\t\t}\n        }\n    }","commit_id":"560959d82268f7a768251f83609a55ecf0d72ee9","url":"https://github.com/freenet/fred"},{"original_method":"private static long getSecretPingResponse(Node source, PeerNode pathway, long uid) throws DisconnectedException {\n\t\t//wait for a reject or pong\n\t\tMessageFilter mfPong = MessageFilter.create().setSource(pathway).setField(DMT.UID, uid).setTimeout(SECRETPONG_TIMEOUT).setType(DMT.FNPSecretPong);\n\t\tMessageFilter mfRejectLoop = MessageFilter.create().setSource(pathway).setField(DMT.UID, uid).setTimeout(SECRETPONG_TIMEOUT).setType(DMT.FNPRejectedLoop);\n\t\tMessage msg = source.getUSM().waitFor(mfPong.or(mfRejectLoop), null);\n\t\t\n\t\tif (msg==null) {\n\t\t\tLogger.error(source, \"fatal timeout in waiting for secretpong from \"+pathway);\n\t\t\treturn -2;\n\t\t}\n\t\t\n\t\tif (msg.getSpec() == DMT.FNPSecretPong) {\n\t\t\tint suppliedCounter=msg.getInt(DMT.COUNTER);\n\t\t\tlong secret=msg.getLong(DMT.SECRET);\n\t\t\tLogger.normal(source, \"got secret, counter=\"+suppliedCounter);\n\t\t\treturn secret;\n\t\t}\n\t\t\n\t\tif (msg.getSpec() == DMT.FNPRejectedLoop) {\n\t\t\tLogger.error(source, \"top level secret ping should not reject!: \"+source+\" -> \"+pathway);\n\t\t\treturn -1;\n\t\t}\n\t\t\n\t\treturn -3;\n\t}","id":50193,"modified_method":"private static long getSecretPingResponse(Node source, PeerNode pathway, long uid) throws DisconnectedException {\n\t\t//wait for a reject or pong\n\t\tMessageFilter mfPong = MessageFilter.create().setSource(pathway).setField(DMT.UID, uid).setTimeout(SECRETPONG_TIMEOUT).setType(DMT.FNPSecretPong);\n\t\tMessageFilter mfRejectLoop = MessageFilter.create().setSource(pathway).setField(DMT.UID, uid).setTimeout(SECRETPONG_TIMEOUT).setType(DMT.FNPRejectedLoop);\n\t\tMessage msg = source.getUSM().waitFor(mfPong.or(mfRejectLoop), null);\n\t\t\n\t\tif (msg==null) {\n\t\t\tLogger.error(source, \"fatal timeout in waiting for secretpong from \"+getPortNumber(pathway));\n\t\t\treturn -2;\n\t\t}\n\t\t\n\t\tif (msg.getSpec() == DMT.FNPSecretPong) {\n\t\t\tint suppliedCounter=msg.getInt(DMT.COUNTER);\n\t\t\tlong secret=msg.getLong(DMT.SECRET);\n\t\t\tLogger.normal(source, \"got secret, counter=\"+suppliedCounter);\n\t\t\treturn secret;\n\t\t}\n\t\t\n\t\tif (msg.getSpec() == DMT.FNPRejectedLoop) {\n\t\t\tLogger.error(source, \"top level secret ping should not reject!: \"+getPortNumber(source)+\" -> \"+getPortNumber(pathway));\n\t\t\treturn -1;\n\t\t}\n\t\t\n\t\treturn -3;\n\t}","commit_id":"560959d82268f7a768251f83609a55ecf0d72ee9","url":"https://github.com/freenet/fred"},{"original_method":"/**\n\t * Removes the cached copy of the given plugin from the plugins/ directory.\n\t *\n\t * @param pluginSpecification\n\t *            The plugin specification\n\t */\n\tpublic void removeCachedCopy(String pluginSpecification) {\n\t\tif(pluginSpecification == null) {\n\t\t\t// Will be null if the file for a given plugin can't be found, eg. if it has already been\n\t\t\t// removed. Ignore it since the file isn't there anyway\n\t\t\tLogger.warning(this, \"Can't remove null from cache. Ignoring\");\n\t\t\treturn;\n\t\t}\n\n\t\tint lastSlash = pluginSpecification.lastIndexOf('/');\n\t\tString pluginFilename;\n\t\tif(lastSlash == -1)\n\t\t\t/* Windows, maybe? */\n\t\t\tlastSlash = pluginSpecification.lastIndexOf('\\\\');\n\t\tFile pluginDirectory = node.getPluginDir();\n\t\tif(lastSlash == -1)\n\t\t\t/* it's an official plugin! */\n\t\t\tpluginFilename = pluginSpecification + \".jar\";\n\t\telse\n\t\t\tpluginFilename = pluginSpecification.substring(lastSlash + 1);\n\t\tif(logDEBUG)\n\t\t\tLogger.minor(this, \"Delete plugin - plugname: \" + pluginSpecification + \" filename: \" + pluginFilename, new Exception(\"debug\"));\n\t\tFile[] cachedFiles = getPreviousInstances(pluginDirectory, pluginFilename);\n\t\tfor (File cachedFile : cachedFiles) {\n\t\t\tif (!cachedFile.delete())\n\t\t\t\tLogger.error(this, \"Can't delete file \" + cachedFile);\n\t\t}\n\t}","id":50194,"modified_method":"/**\n\t * Removes the cached copy of the given plugin from the plugins/ directory.\n\t *\n\t * @param pluginSpecification\n\t *            The plugin specification\n\t */\n\tpublic void removeCachedCopy(String pluginSpecification) {\n\t\tif(pluginSpecification == null) {\n\t\t\t// Will be null if the file for a given plugin can't be found, eg. if it has already been\n\t\t\t// removed. Ignore it since the file isn't there anyway\n\t\t\tLogger.warning(this, \"Can't remove null from cache. Ignoring\");\n\t\t\treturn;\n\t\t}\n\n\t\tint lastSlash = pluginSpecification.lastIndexOf('/');\n\t\tString pluginFilename;\n\t\tif(lastSlash == -1)\n\t\t\t/* Windows, maybe? */\n\t\t\tlastSlash = pluginSpecification.lastIndexOf('\\\\');\n\t\tFile pluginDirectory = node.getPluginDir();\n\t\tif(lastSlash == -1)\n\t\t\t/* it's an official plugin! */\n\t\t\tpluginFilename = pluginSpecification + \".jar\";\n\t\telse\n\t\t\tpluginFilename = pluginSpecification.substring(lastSlash + 1);\n\t\tif(logDEBUG)\n\t\t\tLogger.minor(this, \"Delete plugin - plugname: \" + pluginSpecification + \" filename: \" + pluginFilename, new Exception(\"debug\"));\n\t\tFile[] cachedFiles = getPreviousInstances(pluginDirectory, pluginFilename);\n\t\tfor (File cachedFile : cachedFiles) {\n\t\t\tif (!cachedFile.delete())\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Can't delete file \" + cachedFile);\n\t\t}\n\t}","commit_id":"c285f745f47955b40ac5a28cea00a31b46db95af","url":"https://github.com/freenet/fred"},{"original_method":"@Override\n    public void onResume(ClientContext context) throws FetchException {\n        Logger.error(this, \"Restarting SplitFileFetcher from storage...\");\n        boolean resumed = parent instanceof ClientGetter && ((ClientGetter)parent).resumedFetcher();\n        this.context = context;\n        try {\n            KeySalter salter = getSalter();\n            raf.onResume(context);\n            this.storage = new SplitFileFetcherStorage(raf, realTimeFlag, this, blockFetchContext, \n                    context.random, context.jobRunner, context.ticker, \n                    context.memoryLimitedJobRunner, new CRCChecksumChecker(), \n                    context.jobRunner.newSalt(), salter, resumed);\n        } catch (ResumeFailedException e) {\n            raf.free();\n            Logger.error(this, \"Failed to resume storage file: \"+e+\" for \"+raf, e);\n            throw new FetchException(FetchException.BUCKET_ERROR, e);\n        } catch (IOException e) {\n            raf.free();\n            Logger.error(this, \"Failed to resume due to I/O error: \"+e+\" raf = \"+raf, e);\n            throw new FetchException(FetchException.BUCKET_ERROR, e);\n        } catch (StorageFormatException e) {\n            raf.free();\n            Logger.error(this, \"Failed to resume due to storage error: \"+e+\" raf = \"+raf, e);\n            throw new FetchException(FetchException.INTERNAL_ERROR, \"Resume failed: \"+e, e);\n        } catch (FetchException e) {\n            raf.free();\n            throw e;\n        }\n        getter = new SplitFileFetcherGet(this, storage);\n        try {\n            if(storage.start(resumed))\n                getter.schedule(context, storage.hasCheckedStore());\n        } catch (KeyListenerConstructionException e) {\n            Logger.error(this, \"Key listener construction failed during resume: \"+e, e);\n            fail(new FetchException(FetchException.INTERNAL_ERROR, \"Resume failed: \"+e, e));\n            return;\n        }\n    }","id":50195,"modified_method":"@Override\n    public void onResume(ClientContext context) throws FetchException {\n        if(logMINOR) Logger.minor(this, \"Restarting SplitFileFetcher from storage...\");\n        boolean resumed = parent instanceof ClientGetter && ((ClientGetter)parent).resumedFetcher();\n        this.context = context;\n        try {\n            KeySalter salter = getSalter();\n            raf.onResume(context);\n            this.storage = new SplitFileFetcherStorage(raf, realTimeFlag, this, blockFetchContext, \n                    context.random, context.jobRunner, context.ticker, \n                    context.memoryLimitedJobRunner, new CRCChecksumChecker(), \n                    context.jobRunner.newSalt(), salter, resumed);\n        } catch (ResumeFailedException e) {\n            raf.free();\n            Logger.error(this, \"Failed to resume storage file: \"+e+\" for \"+raf, e);\n            throw new FetchException(FetchException.BUCKET_ERROR, e);\n        } catch (IOException e) {\n            raf.free();\n            Logger.error(this, \"Failed to resume due to I/O error: \"+e+\" raf = \"+raf, e);\n            throw new FetchException(FetchException.BUCKET_ERROR, e);\n        } catch (StorageFormatException e) {\n            raf.free();\n            Logger.error(this, \"Failed to resume due to storage error: \"+e+\" raf = \"+raf, e);\n            throw new FetchException(FetchException.INTERNAL_ERROR, \"Resume failed: \"+e, e);\n        } catch (FetchException e) {\n            raf.free();\n            throw e;\n        }\n        getter = new SplitFileFetcherGet(this, storage);\n        try {\n            if(storage.start(resumed))\n                getter.schedule(context, storage.hasCheckedStore());\n        } catch (KeyListenerConstructionException e) {\n            Logger.error(this, \"Key listener construction failed during resume: \"+e, e);\n            fail(new FetchException(FetchException.INTERNAL_ERROR, \"Resume failed: \"+e, e));\n            return;\n        }\n    }","commit_id":"4ad5faabee1186da23e880e0c89039a0fb8cb8c5","url":"https://github.com/freenet/fred"},{"original_method":"private void cancelItemsPending() {\n\t\tMessageItem[] items;\n\t\tsynchronized(itemsPending) {\n\t\t\titems = itemsPending.toArray(new MessageItem[itemsPending.size()]);\n\t\t\titemsPending.clear();\n\t\t}\n\t\tfor(MessageItem item : items) {\n\t\t\tif(!_destination.unqueueMessage(item))\n\t\t\t\tLogger.error(this, \"Message not queued ?!?!?!? on \"+this+\" : \"+item);\n\t\t}\n\t}","id":50196,"modified_method":"private void cancelItemsPending() {\n\t\tMessageItem[] items;\n\t\tsynchronized(itemsPending) {\n\t\t\titems = itemsPending.toArray(new MessageItem[itemsPending.size()]);\n\t\t\titemsPending.clear();\n\t\t}\n\t\tfor(MessageItem item : items) {\n\t\t\tif(!_destination.unqueueMessage(item)) {\n\t\t\t\t// Race condition, can happen\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Message not queued ?!?!?!? on \"+this+\" : \"+item);\n\t\t\t}\n\t\t}\n\t}","commit_id":"4ad365ccf80f3a33ea9970d397257ab0d2e6215c","url":"https://github.com/freenet/fred"},{"original_method":"public void run(ObjectContainer container, ClientContext context) {\n\t\t\tlong deadline = System.currentTimeMillis() + 10*1000;\n\t\t\tif(registerMeSet == null) {\n\t\t\t\tLogger.error(this, \"registerMeSet is null for \"+ClientRequestSchedulerCore.this+\" ( \"+this+\" )\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tfor(int i=0;i < 10; i++) {\n\t\t\t\ttry {\n\t\t\t\t\tif(!registerMeSet.hasNext()) break;\n\t\t\t\t} catch (NullPointerException t) {\n\t\t\t\t\tLogger.error(this, \"DB4O thew NPE in hasNext(): \"+t, t);\n\t\t\t\t\t// FIXME find some way to get a reproducible test case... I suspect it won't be easy :<\n\t\t\t\t\tcontext.jobRunner.queue(preRegisterMeRunner, NativeThread.NORM_PRIORITY, true);\n\t\t\t\t\treturn;\n\t\t\t\t} catch (ClassCastException t) {\n\t\t\t\t\t// WTF?!?!?!?!?!\n\t\t\t\t\tLogger.error(this, \"DB4O thew ClassCastException in hasNext(): \"+t, t);\n\t\t\t\t\t// FIXME find some way to get a reproducible test case... I suspect it won't be easy :<\n\t\t\t\t\tcontext.jobRunner.queue(preRegisterMeRunner, NativeThread.NORM_PRIORITY, true);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tlong startNext = System.currentTimeMillis();\n\t\t\t\tRegisterMe reg = (RegisterMe) registerMeSet.next();\n\t\t\t\tcontainer.activate(reg, 1);\n\t\t\t\t// FIXME remove the leftover/old core handling at some point, an NPE is acceptable long-term.\n\t\t\t\tif(reg.core != ClientRequestSchedulerCore.this) {\n\t\t\t\t\tif(reg.core == null) {\n\t\t\t\t\t\tLogger.error(this, \"Leftover RegisterMe: core already deleted. THIS IS AN ERROR unless you have seen \\\"Old core not active\\\" messages before this point.\");\n\t\t\t\t\t\tcontainer.delete(reg);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif(!container.ext().isActive(reg.core)) {\n\t\t\t\t\t\tLogger.error(this, \"Old core not active in RegisterMe - duplicated cores????\");\n\t\t\t\t\t\tcontainer.delete(reg.core);\n\t\t\t\t\t\tcontainer.delete(reg);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tLogger.error(this, \"Ignoring RegisterMe as doesn't belong to me: my insert=\"+isInsertScheduler+\" my ssk=\"+isSSKScheduler+\" his insert=\"+reg.core.isInsertScheduler+\" his ssk=\"+reg.core.isSSKScheduler);\n\t\t\t\t\tcontainer.deactivate(reg, 1);\n\t\t\t\t\tcontinue; // Don't delete.\n\t\t\t\t}\n\t\t\t\tcontainer.activate(reg.key, 1);\n\t\t\t\tif(reg.key.addedTime > initTime) {\n\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Ignoring RegisterMe as created since startup\");\n\t\t\t\t\tcontainer.deactivate(reg.key, 1);\n\t\t\t\t\tcontainer.deactivate(reg, 1);\n\t\t\t\t\tcontinue; // Don't delete\n\t\t\t\t}\n\t\t\t\tlong endNext = System.currentTimeMillis();\n\t\t\t\tif(logMINOR)\n\t\t\t\t\tLogger.minor(this, \"RegisterMe: next() took \"+(endNext-startNext));\n\t\t\t\tif(reg.getters != null) {\n\t\t\t\t\tboolean allKilled = true;\n\t\t\t\t\tfor(int j=0;j<reg.getters.length;j++) {\n\t\t\t\t\t\tcontainer.activate(reg.getters[j], 2);\n\t\t\t\t\t\tif(!reg.getters[j].isCancelled(container))\n\t\t\t\t\t\t\tallKilled = false;\n\t\t\t\t\t}\n\t\t\t\t\tif(allKilled) {\n\t\t\t\t\t\tif(logMINOR)\n\t\t\t\t\t\t\tLogger.minor(this, \"Not registering as all SendableGet's already cancelled\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(logMINOR)\n\t\t\t\t\tLogger.minor(this, \"Running RegisterMe \"+reg+\" for \"+reg.listener+\" and \"+reg.getters+\" : \"+reg.key.addedTime+\" : \"+reg.key.priority);\n\t\t\t\t// Don't need to activate, fields should exist? FIXME\n\t\t\t\tif(reg.listener != null || reg.getters != null) {\n\t\t\t\ttry {\n\t\t\t\t\tsched.register(reg.listener, reg.getters, false, true, true, reg.blocks, reg);\n\t\t\t\t} catch (Throwable t) {\n\t\t\t\t\tLogger.error(this, \"Caught \"+t+\" running RegisterMeRunner\", t);\n\t\t\t\t\t// Cancel the request, and commit so it isn't tried again.\n\t\t\t\t\tif(reg.getters != null) {\n\t\t\t\t\t\tfor(int k=0;k<reg.getters.length;k++)\n\t\t\t\t\t\t\treg.getters[k].internalError(null, t, sched, container, context, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(reg.nonGetRequest != null) {\n\t\t\t\t\tcontainer.activate(reg.nonGetRequest, 1);\n\t\t\t\t\tsched.registerInsert(reg.nonGetRequest, true, false);\n\t\t\t\t}\n\t\t\t\tif(System.currentTimeMillis() > deadline) break;\n\t\t\t}\n\t\t\tif(registerMeSet.hasNext())\n\t\t\t\tcontext.jobRunner.queue(registerMeRunner, NativeThread.NORM_PRIORITY-1, true);\n\t\t\telse {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"RegisterMeRunner finished\");\n\t\t\t\tregisterMeSet = null;\n\t\t\t}\n\t\t}","id":50197,"modified_method":"public void run(ObjectContainer container, ClientContext context) {\n\t\t\tlong deadline = System.currentTimeMillis() + 10*1000;\n\t\t\tif(registerMeSet == null) {\n\t\t\t\tLogger.error(this, \"registerMeSet is null for \"+ClientRequestSchedulerCore.this+\" ( \"+this+\" )\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tfor(int i=0;i < 10; i++) {\n\t\t\t\ttry {\n\t\t\t\t\tif(!registerMeSet.hasNext()) break;\n\t\t\t\t} catch (NullPointerException t) {\n\t\t\t\t\tLogger.error(this, \"DB4O thew NPE in hasNext(): \"+t, t);\n\t\t\t\t\t// FIXME find some way to get a reproducible test case... I suspect it won't be easy :<\n\t\t\t\t\tcontext.jobRunner.queue(preRegisterMeRunner, NativeThread.NORM_PRIORITY, true);\n\t\t\t\t\treturn;\n\t\t\t\t} catch (ClassCastException t) {\n\t\t\t\t\t// WTF?!?!?!?!?!\n\t\t\t\t\tLogger.error(this, \"DB4O thew ClassCastException in hasNext(): \"+t, t);\n\t\t\t\t\t// FIXME find some way to get a reproducible test case... I suspect it won't be easy :<\n\t\t\t\t\tcontext.jobRunner.queue(preRegisterMeRunner, NativeThread.NORM_PRIORITY, true);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tlong startNext = System.currentTimeMillis();\n\t\t\t\tRegisterMe reg = (RegisterMe) registerMeSet.next();\n\t\t\t\tcontainer.activate(reg, 1);\n\t\t\t\t// FIXME remove the leftover/old core handling at some point, an NPE is acceptable long-term.\n\t\t\t\tif(reg.core != ClientRequestSchedulerCore.this) {\n\t\t\t\t\tif(reg.core == null) {\n\t\t\t\t\t\tLogger.error(this, \"Leftover RegisterMe: core already deleted. THIS IS AN ERROR unless you have seen \\\"Old core not active\\\" messages before this point.\");\n\t\t\t\t\t\tcontainer.delete(reg);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif(!container.ext().isActive(reg.core)) {\n\t\t\t\t\t\tLogger.error(this, \"Old core not active in RegisterMe - duplicated cores????\");\n\t\t\t\t\t\tcontainer.delete(reg.core);\n\t\t\t\t\t\tcontainer.delete(reg);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif(logMINOR)\n\t\t\t\t\t\tLogger.minor(this, \"Ignoring RegisterMe as doesn't belong to me: my insert=\"+isInsertScheduler+\" my ssk=\"+isSSKScheduler+\" his insert=\"+reg.core.isInsertScheduler+\" his ssk=\"+reg.core.isSSKScheduler);\n\t\t\t\t\tcontainer.deactivate(reg, 1);\n\t\t\t\t\tcontinue; // Don't delete.\n\t\t\t\t}\n\t\t\t\tcontainer.activate(reg.key, 1);\n\t\t\t\tif(reg.key.addedTime > initTime) {\n\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Ignoring RegisterMe as created since startup\");\n\t\t\t\t\tcontainer.deactivate(reg.key, 1);\n\t\t\t\t\tcontainer.deactivate(reg, 1);\n\t\t\t\t\tcontinue; // Don't delete\n\t\t\t\t}\n\t\t\t\tlong endNext = System.currentTimeMillis();\n\t\t\t\tif(logMINOR)\n\t\t\t\t\tLogger.minor(this, \"RegisterMe: next() took \"+(endNext-startNext));\n\t\t\t\tif(reg.getters != null) {\n\t\t\t\t\tboolean allKilled = true;\n\t\t\t\t\tfor(int j=0;j<reg.getters.length;j++) {\n\t\t\t\t\t\tcontainer.activate(reg.getters[j], 2);\n\t\t\t\t\t\tif(!reg.getters[j].isCancelled(container))\n\t\t\t\t\t\t\tallKilled = false;\n\t\t\t\t\t}\n\t\t\t\t\tif(allKilled) {\n\t\t\t\t\t\tif(logMINOR)\n\t\t\t\t\t\t\tLogger.minor(this, \"Not registering as all SendableGet's already cancelled\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(logMINOR)\n\t\t\t\t\tLogger.minor(this, \"Running RegisterMe \"+reg+\" for \"+reg.listener+\" and \"+reg.getters+\" : \"+reg.key.addedTime+\" : \"+reg.key.priority);\n\t\t\t\t// Don't need to activate, fields should exist? FIXME\n\t\t\t\tif(reg.listener != null || reg.getters != null) {\n\t\t\t\ttry {\n\t\t\t\t\tsched.register(reg.listener, reg.getters, false, true, true, reg.blocks, reg);\n\t\t\t\t} catch (Throwable t) {\n\t\t\t\t\tLogger.error(this, \"Caught \"+t+\" running RegisterMeRunner\", t);\n\t\t\t\t\t// Cancel the request, and commit so it isn't tried again.\n\t\t\t\t\tif(reg.getters != null) {\n\t\t\t\t\t\tfor(int k=0;k<reg.getters.length;k++)\n\t\t\t\t\t\t\treg.getters[k].internalError(null, t, sched, container, context, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(reg.nonGetRequest != null) {\n\t\t\t\t\tcontainer.activate(reg.nonGetRequest, 1);\n\t\t\t\t\tsched.registerInsert(reg.nonGetRequest, true, false);\n\t\t\t\t}\n\t\t\t\tif(System.currentTimeMillis() > deadline) break;\n\t\t\t}\n\t\t\tif(registerMeSet.hasNext())\n\t\t\t\tcontext.jobRunner.queue(registerMeRunner, NativeThread.NORM_PRIORITY-1, true);\n\t\t\telse {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"RegisterMeRunner finished\");\n\t\t\t\tregisterMeSet = null;\n\t\t\t}\n\t\t}","commit_id":"ed58180308f0df8de769f3a404e64cb469de3f50","url":"https://github.com/freenet/fred"},{"original_method":"SplitFileFetcherNew(Metadata metadata, GetCompletionCallback rcb, ClientRequester parent,\n            FetchContext fetchContext, boolean realTimeFlag, List<COMPRESSOR_TYPE> decompressors, \n            ClientMetadata clientMetadata, long token, boolean topDontCompress, \n            short topCompatibilityMode, boolean persistent, FreenetURI thisKey, boolean isFinalFetch,\n            ClientContext context) \n            throws FetchException, MetadataParseException {\n        this.persistent = persistent;\n        this.cb = rcb;\n        this.parent = parent;\n        this.realTimeFlag = realTimeFlag;\n        this.token = token;\n        this.context = context;\n        if(parent instanceof ClientGetter) {\n            wantBinaryBlob = ((ClientGetter)parent).collectingBinaryBlob();\n        } else {\n            wantBinaryBlob = false;\n        }\n        blockFetchContext = new FetchContext(fetchContext, FetchContext.SPLITFILE_DEFAULT_BLOCK_MASK, true, null);\n        if(parent.isCancelled())\n            throw new FetchException(FetchException.CANCELLED);\n        \n        KeySalter salter = context.getChkFetchScheduler(realTimeFlag).getGlobalKeySalter(persistent);\n\n        try {\n            storage = new SplitFileFetcherStorage(metadata, this, decompressors, clientMetadata, \n                    topDontCompress, topCompatibilityMode, fetchContext, realTimeFlag, salter,\n                    thisKey, parent.getURI(), isFinalFetch, parent.getClientDetail(), \n                    context.random, context.tempBucketFactory, \n                    persistent ? context.persistentRAFFactory : context.tempRAFFactory, \n                    context.jobRunner, context.ticker, context.memoryLimitedJobRunner, new CRCChecksumChecker(), persistent);\n        } catch (InsufficientDiskSpaceException e) {\n            throw new FetchException(FetchException.NOT_ENOUGH_DISK_SPACE);\n        } catch (IOException e) {\n            Logger.error(this, \"Failed to start splitfile fetcher because of disk I/O error?: \"+e, e);\n            throw new FetchException(FetchException.BUCKET_ERROR, e);\n        }\n        long eventualLength = Math.max(storage.finalLength, metadata.uncompressedDataLength());\n        boolean wasActive = true;\n        cb.onExpectedSize(eventualLength, context);\n        if(metadata.uncompressedDataLength() > 0)\n            cb.onFinalizedMetadata();\n        if(eventualLength > 0 && fetchContext.maxOutputLength > 0 && eventualLength > fetchContext.maxOutputLength)\n            throw new FetchException(FetchException.TOO_BIG, eventualLength, true, clientMetadata.getMIMEType());\n        getter = new SplitFileFetcherGet(this, storage);\n        raf = storage.getRAF();\n        Logger.error(this, \"Created \"+(persistent?\"persistent\" : \"transient\")+\" download for \"+thisKey+\" on \"+raf+\" for \"+this);\n    }","id":50198,"modified_method":"SplitFileFetcherNew(Metadata metadata, GetCompletionCallback rcb, ClientRequester parent,\n            FetchContext fetchContext, boolean realTimeFlag, List<COMPRESSOR_TYPE> decompressors, \n            ClientMetadata clientMetadata, long token, boolean topDontCompress, \n            short topCompatibilityMode, boolean persistent, FreenetURI thisKey, boolean isFinalFetch,\n            ClientContext context) \n            throws FetchException, MetadataParseException {\n        this.persistent = persistent;\n        this.cb = rcb;\n        this.parent = parent;\n        this.realTimeFlag = realTimeFlag;\n        this.token = token;\n        this.context = context;\n        if(parent instanceof ClientGetter) {\n            wantBinaryBlob = ((ClientGetter)parent).collectingBinaryBlob();\n        } else {\n            wantBinaryBlob = false;\n        }\n        blockFetchContext = new FetchContext(fetchContext, FetchContext.SPLITFILE_DEFAULT_BLOCK_MASK, true, null);\n        if(parent.isCancelled())\n            throw new FetchException(FetchException.CANCELLED);\n        \n        KeySalter salter = context.getChkFetchScheduler(realTimeFlag).getGlobalKeySalter(persistent);\n\n        try {\n            storage = new SplitFileFetcherStorage(metadata, this, decompressors, clientMetadata, \n                    topDontCompress, topCompatibilityMode, fetchContext, realTimeFlag, salter,\n                    thisKey, parent.getURI(), isFinalFetch, parent.getClientDetail(), \n                    context.random, context.tempBucketFactory, \n                    persistent ? context.persistentRAFFactory : context.tempRAFFactory, \n                    context.jobRunner, context.ticker, context.memoryLimitedJobRunner, new CRCChecksumChecker(), persistent);\n        } catch (InsufficientDiskSpaceException e) {\n            throw new FetchException(FetchException.NOT_ENOUGH_DISK_SPACE);\n        } catch (IOException e) {\n            Logger.error(this, \"Failed to start splitfile fetcher because of disk I/O error?: \"+e, e);\n            throw new FetchException(FetchException.BUCKET_ERROR, e);\n        }\n        long eventualLength = Math.max(storage.finalLength, metadata.uncompressedDataLength());\n        cb.onExpectedSize(eventualLength, context);\n        if(metadata.uncompressedDataLength() > 0)\n            cb.onFinalizedMetadata();\n        if(eventualLength > 0 && fetchContext.maxOutputLength > 0 && eventualLength > fetchContext.maxOutputLength)\n            throw new FetchException(FetchException.TOO_BIG, eventualLength, true, clientMetadata.getMIMEType());\n        getter = new SplitFileFetcherGet(this, storage);\n        raf = storage.getRAF();\n        if(logMINOR)\n            Logger.minor(this, \"Created \"+(persistent?\"persistent\" : \"transient\")+\" download for \"+\n                    thisKey+\" on \"+raf+\" for \"+this);\n    }","commit_id":"de0f20454ce6c676f3aa14a3add328ad5beba8b3","url":"https://github.com/freenet/fred"},{"original_method":"@Override\n\tpublic boolean hasValidKeys(KeysFetchingLocally keys, ObjectContainer container, ClientContext context) {\n\t\tif(persistent) {\n\t\t\tcontainer.activate(this, 1);\n\t\t\tcontainer.activate(blockNums, 1);\n\t\t\tcontainer.activate(segment, 1);\n\t\t}\n\t\tboolean hasSet = false;\n\t\tboolean retval = false;\n\t\tsynchronized(segment) {\n\t\t\tfor(int i=0;i<10;i++) {\n\t\t\t\tInteger ret;\n\t\t\t\tint x;\n\t\t\t\tif(blockNums.isEmpty()) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tx = context.random.nextInt(blockNums.size());\n\t\t\t\tret = blockNums.get(x);\n\t\t\t\tint block = ret;\n\t\t\t\tKey key = segment.getBlockNodeKey(block, container);\n\t\t\t\tif(key == null) {\n\t\t\t\t\tif(segment.isFinishing(container) || segment.isFinished(container)) return false;\n\t\t\t\t\tif(segment.haveBlock(block, container))\n\t\t\t\t\t\tLogger.error(this, \"Already have block \"+ret+\" but was in blockNums on \"+this+\" in hasValidKeys\");\n\t\t\t\t\telse\n\t\t\t\t\t\tLogger.error(this, \"Key is null for block \"+ret+\" for \"+this+\" in hasValidKeys\");\n\t\t\t\t\tblockNums.remove(x);\n\t\t\t\t\tif(persistent) {\n\t\t\t\t\t\tcontainer.delete(ret);\n\t\t\t\t\t\tif(!hasSet) {\n\t\t\t\t\t\t\thasSet = true;\n\t\t\t\t\t\t\tcontainer.store(blockNums);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(keys.hasKey(key)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tretval = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(persistent) {\n\t\t\tcontainer.deactivate(blockNums, 5);\n\t\t\tcontainer.deactivate(segment, 1);\n\t\t}\n\t\treturn retval;\n\t}","id":50199,"modified_method":"@Override\n\tpublic boolean hasValidKeys(KeysFetchingLocally keys, ObjectContainer container, ClientContext context) {\n\t\tif(persistent) {\n\t\t\tcontainer.activate(this, 1);\n\t\t\tcontainer.activate(blockNums, 1);\n\t\t\tcontainer.activate(segment, 1);\n\t\t}\n\t\tboolean hasSet = false;\n\t\tboolean retval = false;\n\t\tsynchronized(segment) {\n\t\t\tfor(int i=0;i<10;i++) {\n\t\t\t\tInteger ret;\n\t\t\t\tint x;\n\t\t\t\tif(blockNums.isEmpty()) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tx = context.random.nextInt(blockNums.size());\n\t\t\t\tret = blockNums.get(x);\n\t\t\t\tint block = ret;\n\t\t\t\tKey key = segment.getBlockNodeKey(block, container);\n\t\t\t\tif(key == null) {\n\t\t\t\t\tif(segment.isFinishing(container) || segment.isFinished(container)) return false;\n\t\t\t\t\tif(segment.haveBlock(block, container)) {\n\t\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Already have block \"+ret+\" but was in blockNums on \"+this+\" in hasValidKeys\");\n\t\t\t\t\t} else\n\t\t\t\t\t\tLogger.error(this, \"Key is null for block \"+ret+\" for \"+this+\" in hasValidKeys\");\n\t\t\t\t\tblockNums.remove(x);\n\t\t\t\t\tif(persistent) {\n\t\t\t\t\t\tcontainer.delete(ret);\n\t\t\t\t\t\tif(!hasSet) {\n\t\t\t\t\t\t\thasSet = true;\n\t\t\t\t\t\t\tcontainer.store(blockNums);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(keys.hasKey(key)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tretval = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(persistent) {\n\t\t\tcontainer.deactivate(blockNums, 5);\n\t\t\tcontainer.deactivate(segment, 1);\n\t\t}\n\t\treturn retval;\n\t}","commit_id":"387c746f526d3d046c227005397825afdfd8a357","url":"https://github.com/freenet/fred"},{"original_method":"public boolean send(Executor executor) {\n\t\tPartiallyReceivedBlock.PacketReceivedListener myListener=null;\n\t\t\n\t\ttry {\n\t\t\tsynchronized(_prb) {\n\t\t\t\t_unsent = _prb.addListener(myListener = new PartiallyReceivedBlock.PacketReceivedListener() {;\n\n\t\t\t\t\tpublic void packetReceived(int packetNo) {\n\t\t\t\t\t\tsynchronized(_senderThread) {\n\t\t\t\t\t\t\t_unsent.addLast(new Integer(packetNo));\n\t\t\t\t\t\t\ttimeAllSent = -1;\n\t\t\t\t\t\t\t_sentPackets.setBit(packetNo, false);\n\t\t\t\t\t\t\t_senderThread.notifyAll();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tpublic void receiveAborted(int reason, String description) {\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\texecutor.execute(_senderThread, \"BlockTransmitter sender for \"+_uid);\n\t\t\t\n\t\t\twhile (true) {\n\t\t\t\tMessage msg;\n\t\t\t\tboolean logMINOR = Logger.shouldLog(Logger.MINOR, this);\n\t\t\t\ttry {\n\t\t\t\t\tMessageFilter mfMissingPacketNotification = MessageFilter.create().setType(DMT.missingPacketNotification).setField(DMT.UID, _uid).setTimeout(SEND_TIMEOUT).setSource(_destination);\n\t\t\t\t\tMessageFilter mfAllReceived = MessageFilter.create().setType(DMT.allReceived).setField(DMT.UID, _uid).setTimeout(SEND_TIMEOUT).setSource(_destination);\n\t\t\t\t\tMessageFilter mfSendAborted = MessageFilter.create().setType(DMT.sendAborted).setField(DMT.UID, _uid).setTimeout(SEND_TIMEOUT).setSource(_destination);\n\t\t\t\t\tmsg = _usm.waitFor(mfMissingPacketNotification.or(mfAllReceived.or(mfSendAborted)), _ctr);\n\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Got \"+msg);\n\t\t\t\t} catch (DisconnectedException e) {\n\t\t\t\t\tLogger.normal(this, \"Terminating send \"+_uid+\" to \"+_destination+\" from \"+_destination.getSocketHandler()+\" because node disconnected while waiting\");\n\t\t\t\t\t//They disconnected, can't send an abort to them then can we?\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Got \"+msg);\n\t\t\t\tif (msg == null) {\n\t\t\t\t\tlong now = System.currentTimeMillis();\n\t\t\t\t\t//SEND_TIMEOUT (one minute) after all packets have been transmitted, terminate the send.\n\t\t\t\t\tif((timeAllSent > 0) && ((now - timeAllSent) > SEND_TIMEOUT) &&\n\t\t\t\t\t\t\t(getNumSent() == _prb.getNumPackets())) {\n\t\t\t\t\t\tString timeString=TimeUtil.formatTime((now - timeAllSent), 2, true);\n\t\t\t\t\t\tLogger.error(this, \"Terminating send \"+_uid+\" to \"+_destination+\" from \"+_destination.getSocketHandler()+\" as we haven't heard from receiver in \"+timeString+ '.');\n\t\t\t\t\t\tsendAborted(RetrievalException.RECEIVER_DIED, \"Haven't heard from you (receiver) in \"+timeString);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Ignoring timeout: timeAllSent=\"+timeAllSent+\" (\"+(System.currentTimeMillis() - timeAllSent)+\"), getNumSent=\"+getNumSent()+ '/' +_prb.getNumPackets());\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t} else if (msg.getSpec().equals(DMT.missingPacketNotification)) {\n\t\t\t\t\tLinkedList missing = (LinkedList) msg.getObject(DMT.MISSING);\n\t\t\t\t\tfor (Iterator i = missing.iterator(); i.hasNext();) {\n\t\t\t\t\t\tInteger packetNo = (Integer) i.next();\n\t\t\t\t\t\tif (_prb.isReceived(packetNo.intValue())) {\n\t\t\t\t\t\t\tsynchronized(_senderThread) {\n\t\t\t\t\t\t\t\tif (_unsent.contains(packetNo)) {\n\t\t\t\t\t\t\t\t\tLogger.minor(this, \"already to transmit packet #\"+packetNo);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t_unsent.addFirst(packetNo);\n\t\t\t\t\t\t\t\ttimeAllSent=-1;\n\t\t\t\t\t\t\t\t_sentPackets.setBit(packetNo.intValue(), false);\n\t\t\t\t\t\t\t\t_senderThread.notifyAll();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tLogger.error(this, \"receiver requested block #\"+packetNo+\" which is not received\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (msg.getSpec().equals(DMT.allReceived)) {\n\t\t\t\t\treturn true;\n\t\t\t\t} else if (msg.getSpec().equals(DMT.sendAborted)) {\n\t\t\t\t\t// Overloaded: receiver no longer wants the data\n\t\t\t\t\t// Do NOT abort PRB, it's none of its business.\n\t\t\t\t\t// And especially, we don't want a downstream node to \n\t\t\t\t\t// be able to abort our sends to all the others!\n\t\t\t\t\t//They aborted, don't need to send an aborted back :)\n\t\t\t\t\treturn false;\n\t\t\t\t} else {\n\t\t\t\t\tLogger.error(this, \"Transmitter received unknown message type: \"+msg.getSpec().getName());\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (NotConnectedException e) {\n\t\t\t//most likely from sending an abort()\n\t\t\tLogger.normal(this, \"NotConnectedException in BlockTransfer.send():\"+e);\n\t\t\treturn false;\n\t\t} catch (AbortedException e) {\n\t\t\tLogger.normal(this, \"AbortedException in BlockTransfer.send():\"+e);\n\t\t\ttry {\n\t\t\t\tString desc=_prb.getAbortDescription();\n\t\t\t\tif (desc.indexOf(\"Upstream\")<0)\n\t\t\t\t\tdesc=\"Upstream transfer failed: \"+desc;\n\t\t\t\tsendAborted(_prb.getAbortReason(), desc);\n\t\t\t} catch (NotConnectedException gone) {\n\t\t\t\t//ignore\n\t\t\t}\n\t\t\treturn false;\n\t\t} finally {\n\t\t\t//Terminate the sender thread, if we are not listening for control packets, don't be sending any data\n\t\t\tsynchronized(_senderThread) {\n\t\t\t\t_sendComplete = true;\n\t\t\t\t_senderThread.notifyAll();\n\t\t\t}\n\t\t\tif (myListener!=null)\n\t\t\t\t_prb.removeListener(myListener);\n\t\t}\n\t}","id":50200,"modified_method":"public boolean send(Executor executor) {\n\t\tPartiallyReceivedBlock.PacketReceivedListener myListener=null;\n\t\t\n\t\ttry {\n\t\t\tsynchronized(_prb) {\n\t\t\t\t_unsent = _prb.addListener(myListener = new PartiallyReceivedBlock.PacketReceivedListener() {;\n\n\t\t\t\t\tpublic void packetReceived(int packetNo) {\n\t\t\t\t\t\tsynchronized(_senderThread) {\n\t\t\t\t\t\t\t_unsent.addLast(new Integer(packetNo));\n\t\t\t\t\t\t\ttimeAllSent = -1;\n\t\t\t\t\t\t\t_sentPackets.setBit(packetNo, false);\n\t\t\t\t\t\t\t_senderThread.notifyAll();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tpublic void receiveAborted(int reason, String description) {\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\texecutor.execute(_senderThread, \"BlockTransmitter sender for \"+_uid);\n\t\t\t\n\t\t\twhile (true) {\n\t\t\t\tMessage msg;\n\t\t\t\tboolean logMINOR = Logger.shouldLog(Logger.MINOR, this);\n\t\t\t\ttry {\n\t\t\t\t\tMessageFilter mfMissingPacketNotification = MessageFilter.create().setType(DMT.missingPacketNotification).setField(DMT.UID, _uid).setTimeout(SEND_TIMEOUT).setSource(_destination);\n\t\t\t\t\tMessageFilter mfAllReceived = MessageFilter.create().setType(DMT.allReceived).setField(DMT.UID, _uid).setTimeout(SEND_TIMEOUT).setSource(_destination);\n\t\t\t\t\tMessageFilter mfSendAborted = MessageFilter.create().setType(DMT.sendAborted).setField(DMT.UID, _uid).setTimeout(SEND_TIMEOUT).setSource(_destination);\n\t\t\t\t\tmsg = _usm.waitFor(mfMissingPacketNotification.or(mfAllReceived.or(mfSendAborted)), _ctr);\n\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Got \"+msg);\n\t\t\t\t} catch (DisconnectedException e) {\n\t\t\t\t\tLogger.normal(this, \"Terminating send \"+_uid+\" to \"+_destination+\" from \"+_destination.getSocketHandler()+\" because node disconnected while waiting\");\n\t\t\t\t\t//They disconnected, can't send an abort to them then can we?\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Got \"+msg);\n\t\t\t\tif (msg == null) {\n\t\t\t\t\tlong now = System.currentTimeMillis();\n\t\t\t\t\t//SEND_TIMEOUT (one minute) after all packets have been transmitted, terminate the send.\n\t\t\t\t\tif((timeAllSent > 0) && ((now - timeAllSent) > SEND_TIMEOUT) &&\n\t\t\t\t\t\t\t(getNumSent() == _prb.getNumPackets())) {\n\t\t\t\t\t\tString timeString=TimeUtil.formatTime((now - timeAllSent), 2, true);\n\t\t\t\t\t\tLogger.error(this, \"Terminating send \"+_uid+\" to \"+_destination+\" from \"+_destination.getSocketHandler()+\" as we haven't heard from receiver in \"+timeString+ '.');\n\t\t\t\t\t\tsendAborted(RetrievalException.RECEIVER_DIED, \"Haven't heard from you (receiver) in \"+timeString);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Ignoring timeout: timeAllSent=\"+timeAllSent+\" (\"+(System.currentTimeMillis() - timeAllSent)+\"), getNumSent=\"+getNumSent()+ '/' +_prb.getNumPackets());\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t} else if (msg.getSpec().equals(DMT.missingPacketNotification)) {\n\t\t\t\t\tLinkedList missing = (LinkedList) msg.getObject(DMT.MISSING);\n\t\t\t\t\tfor (Iterator i = missing.iterator(); i.hasNext();) {\n\t\t\t\t\t\tInteger packetNo = (Integer) i.next();\n\t\t\t\t\t\tif (_prb.isReceived(packetNo.intValue())) {\n\t\t\t\t\t\t\tsynchronized(_senderThread) {\n\t\t\t\t\t\t\t\tif (_unsent.contains(packetNo)) {\n\t\t\t\t\t\t\t\t\tLogger.minor(this, \"already to transmit packet #\"+packetNo);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t_unsent.addFirst(packetNo);\n\t\t\t\t\t\t\t\ttimeAllSent=-1;\n\t\t\t\t\t\t\t\t_sentPackets.setBit(packetNo.intValue(), false);\n\t\t\t\t\t\t\t\t_senderThread.notifyAll();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// To be expected if the transfer is slow, since we send missingPacketNotification on a timeout.\n\t\t\t\t\t\t\tif(logMINOR)\n\t\t\t\t\t\t\t\tLogger.minor(this, \"receiver requested block #\"+packetNo+\" which is not received\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (msg.getSpec().equals(DMT.allReceived)) {\n\t\t\t\t\treturn true;\n\t\t\t\t} else if (msg.getSpec().equals(DMT.sendAborted)) {\n\t\t\t\t\t// Overloaded: receiver no longer wants the data\n\t\t\t\t\t// Do NOT abort PRB, it's none of its business.\n\t\t\t\t\t// And especially, we don't want a downstream node to \n\t\t\t\t\t// be able to abort our sends to all the others!\n\t\t\t\t\t//They aborted, don't need to send an aborted back :)\n\t\t\t\t\treturn false;\n\t\t\t\t} else {\n\t\t\t\t\tLogger.error(this, \"Transmitter received unknown message type: \"+msg.getSpec().getName());\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (NotConnectedException e) {\n\t\t\t//most likely from sending an abort()\n\t\t\tLogger.normal(this, \"NotConnectedException in BlockTransfer.send():\"+e);\n\t\t\treturn false;\n\t\t} catch (AbortedException e) {\n\t\t\tLogger.normal(this, \"AbortedException in BlockTransfer.send():\"+e);\n\t\t\ttry {\n\t\t\t\tString desc=_prb.getAbortDescription();\n\t\t\t\tif (desc.indexOf(\"Upstream\")<0)\n\t\t\t\t\tdesc=\"Upstream transfer failed: \"+desc;\n\t\t\t\tsendAborted(_prb.getAbortReason(), desc);\n\t\t\t} catch (NotConnectedException gone) {\n\t\t\t\t//ignore\n\t\t\t}\n\t\t\treturn false;\n\t\t} finally {\n\t\t\t//Terminate the sender thread, if we are not listening for control packets, don't be sending any data\n\t\t\tsynchronized(_senderThread) {\n\t\t\t\t_sendComplete = true;\n\t\t\t\t_senderThread.notifyAll();\n\t\t\t}\n\t\t\tif (myListener!=null)\n\t\t\t\t_prb.removeListener(myListener);\n\t\t}\n\t}","commit_id":"a5bb5ccdc9fd76dc631e4e5cca3a4c416db4706d","url":"https://github.com/freenet/fred"},{"original_method":"public Object parseNotation(Object notation) {\n        String message = \"Provided notation is invalid: \" + notation + \".\\n\"\n                + \"Specifically, the type of the notation is invalid: \" + notation.getClass().getName() + \".\\n\"\n                + invalidNotationMessage;\n        throw new FlatteningCompositeNotationParser.InvalidNotationType(message);\n    }","id":50201,"modified_method":"public Object parseNotation(Object notation) {\n        String message = \"Provided notation is invalid: \" + notation + \".\\n\"\n                + \"Specifically, the type of the notation is invalid: \" + notation.getClass().getName() + \".\\n\"\n                + invalidNotationMessage;\n        throw new InvalidNotationType(message);\n    }","commit_id":"d3538fcef25f06e5ee647f440fe8bc450ed1df59","url":"https://github.com/gradle/gradle"},{"original_method":"public DependencyNotationParser(Set<NotationParser<? extends Dependency>> notationParsers) {\n        parser = new NotationParserBuilder()\n                .resultingType(Dependency.class)\n                .parsers((Set) notationParsers)\n                .invalidNotationMessage(\"The dependency notation cannot be used to form the dependency.\\n\"\n                            + \"The most typical dependency notation types/formats:\\n\"\n                            + \"  - Strings, e.g. 'org.gradle:gradle-core:1.0'\\n\"\n                            + \"  - Maps, e.g. [group: 'org.gradle', name:'gradle-core', version: '1.0']\\n\"\n                            + \"  - Projects, e.g. project(':some:project:path')\\n\"\n                            + \"  - instances of FileCollection, e.g. files('some.jar', 'someOther.jar')\\n\"\n                            + \"  - instances of Dependency type\\n\"\n                            + \"  - A Collection of above (nested collections/arrays will be flattened)\\n\"\n                            + \"Comprehensive documentation on dependency notations is available in DSL reference for DependencyHandler type.\")\n                .build();\n    }","id":50202,"modified_method":"public DependencyNotationParser(Set<NotationParser<? extends Dependency>> compositeParsers) {\n        delegate = new NotationParserBuilder()\n                .resultingType(Dependency.class)\n                .parsers((Set) compositeParsers)\n                .invalidNotationMessage(\"The dependency notation cannot be used to form the dependency.\\n\"\n                            + \"The most typical dependency notation types/formats:\\n\"\n                            + \"  - Strings, e.g. 'org.gradle:gradle-core:1.0'\\n\"\n                            + \"  - Maps, e.g. [group: 'org.gradle', name:'gradle-core', version: '1.0']\\n\"\n                            + \"  - Projects, e.g. project(':some:project:path')\\n\"\n                            + \"  - instances of FileCollection, e.g. files('some.jar', 'someOther.jar')\\n\"\n                            + \"  - instances of Dependency type\\n\"\n                            + \"  - A Collection of above (nested collections/arrays will be flattened)\\n\"\n                            + \"Comprehensive documentation on dependency notations is available in DSL reference for DependencyHandler type.\")\n                .build();\n    }","commit_id":"d3538fcef25f06e5ee647f440fe8bc450ed1df59","url":"https://github.com/gradle/gradle"},{"original_method":"DependencyNotationParser(FlatteningCompositeNotationParser<Dependency> parser) {\n        this.parser = parser;\n    }","id":50203,"modified_method":"DependencyNotationParser(NotationParser<Set<Dependency>> delegate) {\n        this.delegate = delegate;\n    }","commit_id":"d3538fcef25f06e5ee647f440fe8bc450ed1df59","url":"https://github.com/gradle/gradle"},{"original_method":"public Dependency parseNotation(Object dependencyNotation) {\n        try {\n            return parser.parseSingleNotation(dependencyNotation);\n        } catch (GradleException e) {\n            throw e;\n        } catch (Exception e) {\n            throw new GradleException(String.format(\"Could not create a dependency using notation: %s\", dependencyNotation), e);\n        }\n    }","id":50204,"modified_method":"public Dependency parseNotation(Object dependencyNotation) {\n        try {\n            Set<Dependency> parsed = delegate.parseNotation(dependencyNotation);\n            //TODO SF - until some more refactorings are done in the DependencyHandler, we just get first element from the set:\n            return parsed.iterator().next();\n        } catch (GradleException e) {\n            throw e;\n        } catch (Exception e) {\n            throw new GradleException(String.format(\"Could not create a dependency using notation: %s\", dependencyNotation), e);\n        }\n    }","commit_id":"d3538fcef25f06e5ee647f440fe8bc450ed1df59","url":"https://github.com/gradle/gradle"},{"original_method":"public ModuleVersionIdentifier parseType(Map notation) {\n            ModuleVersionIdentifier out = identifier(null, null, null);\n            List<String> mandatoryKeys = asList(\"group\", \"name\", \"version\");\n            try {\n                ConfigureUtil.configureByMap(notation, out, mandatoryKeys);\n            } catch (ConfigureUtil.IncompleteInputException e) {\n                throw new FlatteningCompositeNotationParser.InvalidNotationFormat(\n                          \"Invalid format: \" + notation + \". Missing mandatory key(s): \" + e.getMissingKeys() + \"\\n\"\n                        + \"The correct notation is a map with keys: \" + mandatoryKeys + \", for example: [group: 'org.gradle', name:'gradle-core', version: '1.0']\", e);\n            }\n            return out;\n        }","id":50205,"modified_method":"public ModuleVersionIdentifier parseType(Map notation) {\n            ModuleVersionIdentifier out = identifier(null, null, null);\n            List<String> mandatoryKeys = asList(\"group\", \"name\", \"version\");\n            try {\n                ConfigureUtil.configureByMap(notation, out, mandatoryKeys);\n            } catch (ConfigureUtil.IncompleteInputException e) {\n                throw new InvalidNotationFormat(\n                          \"Invalid format: \" + notation + \". Missing mandatory key(s): \" + e.getMissingKeys() + \"\\n\"\n                        + \"The correct notation is a map with keys: \" + mandatoryKeys + \", for example: [group: 'org.gradle', name:'gradle-core', version: '1.0']\", e);\n            }\n            return out;\n        }","commit_id":"d3538fcef25f06e5ee647f440fe8bc450ed1df59","url":"https://github.com/gradle/gradle"},{"original_method":"public Set<ModuleVersionIdentifier> parseNotation(Object notation) {\n        assert notation != null : \"notation cannot be null\";\n        Collection<ModuleVersionIdentifier> parsed = delegate.parseNotation(notation);\n        return new LinkedHashSet<ModuleVersionIdentifier>(parsed);\n    }","id":50206,"modified_method":"public Set<ModuleVersionIdentifier> parseNotation(Object notation) {\n        assert notation != null : \"notation cannot be null\";\n        return delegate.parseNotation(notation);\n    }","commit_id":"d3538fcef25f06e5ee647f440fe8bc450ed1df59","url":"https://github.com/gradle/gradle"},{"original_method":"public ModuleVersionIdentifier parseType(CharSequence notation) {\n            String[] split = notation.toString().split(\":\");\n            if (split.length != 3) {\n                throw new FlatteningCompositeNotationParser.InvalidNotationFormat(\n                    \"Invalid format: '\" + notation + \"'. The Correct notation is a 3-part group:name:version notation,\"\n                    + \"e.g: org.gradle:gradle-core:1.0\");\n            }\n            final String group = split[0];\n            final String name = split[1];\n            final String version = split[2];\n            return identifier(group, name, version);\n        }","id":50207,"modified_method":"public ModuleVersionIdentifier parseType(CharSequence notation) {\n            String[] split = notation.toString().split(\":\");\n            if (split.length != 3) {\n                throw new InvalidNotationFormat(\n                    \"Invalid format: '\" + notation + \"'. The Correct notation is a 3-part group:name:version notation,\"\n                    + \"e.g: org.gradle:gradle-core:1.0\");\n            }\n            final String group = split[0];\n            final String name = split[1];\n            final String version = split[2];\n            return identifier(group, name, version);\n        }","commit_id":"d3538fcef25f06e5ee647f440fe8bc450ed1df59","url":"https://github.com/gradle/gradle"},{"original_method":"public <T> FlatteningCompositeNotationParser<T> build() {\n        assert resultingType != null : \"resultingType cannot be null\";\n        assert invalidNotationMessage != null : \"invalidNotationMessage cannot be null\";\n\n        Collection parsers = GUtil.flattenElements(\n                new JustReturningParser(resultingType),\n                this.notationParsers,\n                new AlwaysThrowingParser(invalidNotationMessage));\n        return new FlatteningCompositeNotationParser<T>(parsers);\n    }","id":50208,"modified_method":"public <T> NotationParser<Set<T>> build() {\n        assert resultingType != null : \"resultingType cannot be null\";\n        assert invalidNotationMessage != null : \"invalidNotationMessage cannot be null\";\n\n        Collection composites = GUtil.flattenElements(\n                new JustReturningParser(resultingType),\n                this.notationParsers,\n                new AlwaysThrowingParser(invalidNotationMessage));\n\n        NotationParser<T> delegate = new CompositeNotationParser<T>(composites);\n        return new FlatteningNotationParser<T>(delegate);\n    }","commit_id":"d3538fcef25f06e5ee647f440fe8bc450ed1df59","url":"https://github.com/gradle/gradle"},{"original_method":"public CliendModuleNotationParser(Instantiator instantiator) {\n        delegate = new NotationParserBuilder()\n            .parser(new DependencyStringNotationParser<DefaultClientModule>(instantiator, DefaultClientModule.class))\n            .parser(new DependencyMapNotationParser<DefaultClientModule>(instantiator, DefaultClientModule.class))\n            .invalidNotationMessage(\"Client module dependency notation cannot be used to form a client module.\")\n            .build(); //TODO SF - to multi\n    }","id":50209,"modified_method":"public CliendModuleNotationParser(Instantiator instantiator) {\n        delegate = new NotationParserBuilder()\n            .parser(new DependencyStringNotationParser<DefaultClientModule>(instantiator, DefaultClientModule.class))\n            .parser(new DependencyMapNotationParser<DefaultClientModule>(instantiator, DefaultClientModule.class))\n            .invalidNotationMessage(\"Client module dependency notation cannot be used to form a client module.\")\n            .toParser();\n    }","commit_id":"49abec1d756581750f546bc48e89865941a298b5","url":"https://github.com/gradle/gradle"},{"original_method":"public ClientModule parseNotation(Object notation) {\n        return delegate.parseNotation(notation).iterator().next();\n    }","id":50210,"modified_method":"public ClientModule parseNotation(Object notation) {\n        return delegate.parseNotation(notation);\n    }","commit_id":"49abec1d756581750f546bc48e89865941a298b5","url":"https://github.com/gradle/gradle"},{"original_method":"DependencyNotationParser(NotationParser<Set<Dependency>> delegate) {\n        this.delegate = delegate;\n    }","id":50211,"modified_method":"DependencyNotationParser(NotationParser<Dependency> delegate) {\n        this.delegate = delegate;\n    }","commit_id":"49abec1d756581750f546bc48e89865941a298b5","url":"https://github.com/gradle/gradle"},{"original_method":"public Dependency parseNotation(Object dependencyNotation) {\n        try {\n            Set<Dependency> parsed = delegate.parseNotation(dependencyNotation);\n            //TODO SF - until some more refactorings are done in the DependencyHandler, we just get first element from the set:\n            return parsed.iterator().next();\n        } catch (GradleException e) {\n            throw e;\n        } catch (Exception e) {\n            throw new GradleException(String.format(\"Could not create a dependency using notation: %s\", dependencyNotation), e);\n        }\n    }","id":50212,"modified_method":"public Dependency parseNotation(Object dependencyNotation) {\n        try {\n            return delegate.parseNotation(dependencyNotation);\n        } catch (GradleException e) {\n            throw e;\n        } catch (Exception e) {\n            throw new GradleException(String.format(\"Could not create a dependency using notation: %s\", dependencyNotation), e);\n        }\n    }","commit_id":"49abec1d756581750f546bc48e89865941a298b5","url":"https://github.com/gradle/gradle"},{"original_method":"public DependencyNotationParser(Set<NotationParser<? extends Dependency>> compositeParsers) {\n        delegate = new NotationParserBuilder()\n                .resultingType(Dependency.class)\n                .parsers((Set) compositeParsers)\n                .invalidNotationMessage(\"The dependency notation cannot be used to form the dependency.\\n\"\n                            + \"The most typical dependency notation types/formats:\\n\"\n                            + \"  - Strings, e.g. 'org.gradle:gradle-core:1.0'\\n\"\n                            + \"  - Maps, e.g. [group: 'org.gradle', name:'gradle-core', version: '1.0']\\n\"\n                            + \"  - Projects, e.g. project(':some:project:path')\\n\"\n                            + \"  - instances of FileCollection, e.g. files('some.jar', 'someOther.jar')\\n\"\n                            + \"  - instances of Dependency type\\n\"\n                            + \"  - A Collection of above (nested collections/arrays will be flattened)\\n\"\n                            + \"Comprehensive documentation on dependency notations is available in DSL reference for DependencyHandler type.\")\n                .build();\n    }","id":50213,"modified_method":"public DependencyNotationParser(Set<NotationParser<? extends Dependency>> compositeParsers) {\n        delegate = new NotationParserBuilder()\n                .resultingType(Dependency.class)\n                .parsers((Set) compositeParsers)\n                .invalidNotationMessage(\"The dependency notation cannot be used to form the dependency.\\n\"\n                            + \"The most typical dependency notation types/formats:\\n\"\n                            + \"  - Strings, e.g. 'org.gradle:gradle-core:1.0'\\n\"\n                            + \"  - Maps, e.g. [group: 'org.gradle', name:'gradle-core', version: '1.0']\\n\"\n                            + \"  - Projects, e.g. project(':some:project:path')\\n\"\n                            + \"  - instances of FileCollection, e.g. files('some.jar', 'someOther.jar')\\n\"\n                            + \"  - instances of Dependency type\\n\"\n                            + \"  - A Collection of above (nested collections/arrays will be flattened)\\n\"\n                            + \"Comprehensive documentation on dependency notations is available in DSL reference for DependencyHandler type.\")\n                .toParser();\n    }","commit_id":"49abec1d756581750f546bc48e89865941a298b5","url":"https://github.com/gradle/gradle"},{"original_method":"public boolean canParse(Object notation) {\n        //TODO SF - CharSequence\n        return notation instanceof String || notation instanceof GString || notation instanceof Map;\n    }","id":50214,"modified_method":"public boolean canParse(Object notation) {\n        return delegate.canParse(notation);\n    }","commit_id":"69431dd8fe17d5387b1ea91384969854baaedc30","url":"https://github.com/gradle/gradle"},{"original_method":"public DefaultClientModuleFactory(Instantiator instantiator) {\n        this.instantiator = instantiator;\n        dependencyMapNotationParser = new DependencyMapNotationParser<DefaultClientModule>(instantiator, DefaultClientModule.class);\n    }","id":50215,"modified_method":"public DefaultClientModuleFactory(Instantiator instantiator) {\n        delegate = new NotationParserBuilder()\n            .parser(new ClientDependencyStringNotationParser(instantiator))\n            .parser(new DependencyMapNotationParser<DefaultClientModule>(instantiator, DefaultClientModule.class))\n            .invalidNotationMessage(\"Client module dependency notation cannot be used to form a client module.\")\n            .build(); //TODO SF - to multi\n    }","commit_id":"69431dd8fe17d5387b1ea91384969854baaedc30","url":"https://github.com/gradle/gradle"},{"original_method":"public ClientModule parseNotation(Object notation) {\n        assert notation != null;\n        if (notation instanceof String || notation instanceof GString) {\n            return createDependencyFromString(notation.toString());\n        } else if (notation instanceof Map) {\n            return dependencyMapNotationParser.parseNotation(notation);\n        }\n        throw new IllegalDependencyNotation();\n    }","id":50216,"modified_method":"public ClientModule parseNotation(Object notation) {\n        return delegate.parseNotation(notation).iterator().next();\n    }","commit_id":"69431dd8fe17d5387b1ea91384969854baaedc30","url":"https://github.com/gradle/gradle"},{"original_method":"public <T> NotationParser<Set<T>> build() {\n        assert resultingType != null : \"resultingType cannot be null\";\n        assert invalidNotationMessage != null : \"invalidNotationMessage cannot be null\";\n\n        Collection composites = GUtil.flattenElements(\n                new JustReturningParser(resultingType),\n                this.notationParsers,\n                new AlwaysThrowingParser(invalidNotationMessage));\n\n        NotationParser<T> delegate = new CompositeNotationParser<T>(composites);\n        return new FlatteningNotationParser<T>(delegate);\n    }","id":50217,"modified_method":"public <T> NotationParser<Set<T>> build() {\n        assert invalidNotationMessage != null : \"invalidNotationMessage cannot be null\";\n\n        List composites = new LinkedList();\n        if (resultingType != null) {\n            composites.add(new JustReturningParser(resultingType));\n        }\n        composites.addAll(this.notationParsers);\n        composites.add(new AlwaysThrowingParser(invalidNotationMessage));\n\n        NotationParser<T> delegate = new CompositeNotationParser<T>(composites);\n        return new FlatteningNotationParser<T>(delegate);\n    }","commit_id":"69431dd8fe17d5387b1ea91384969854baaedc30","url":"https://github.com/gradle/gradle"},{"original_method":"public boolean canParse(Object notation) {\n        return typeToken.isAssignableFrom(notation.getClass());\n    }","id":50218,"modified_method":"public boolean canParse(Object notation) {\n        //TODO what if someone passes in a null - see how it looks and improve the message\n        assert notation != null: \"the notation cannot be null!\";\n        return typeToken.isAssignableFrom(notation.getClass());\n    }","commit_id":"69431dd8fe17d5387b1ea91384969854baaedc30","url":"https://github.com/gradle/gradle"},{"original_method":"@NotNull\n  public static Disposable newDisposable() {\n    return new Disposable() {\n      public void dispose() {\n      }\n    };\n  }","id":50219,"modified_method":"@NotNull\n  public static Disposable newDisposable() {\n    return new Disposable() {\n      @Override\n      public void dispose() {\n      }\n    };\n  }","commit_id":"ff27ee767e26ca0116087c5b61fe3593138f1055","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static void register(@NotNull Disposable parent, @NotNull Disposable child, @NonNls @Nullable final String key) {\n    assert parent != child : \" Cannot register to itself\";\n\n    ourTree.register(parent, child);\n\n    if (key != null) {\n      assert get(key) == null;\n      ourKeyDisposables.put(key, child);\n      register(child, new Disposable() {\n        public void dispose() {\n          ourKeyDisposables.remove(key);\n        }\n      });\n    }\n  }","id":50220,"modified_method":"public static void register(@NotNull Disposable parent, @NotNull Disposable child, @NonNls @Nullable final String key) {\n    assert parent != child : \" Cannot register to itself\";\n\n    ourTree.register(parent, child);\n\n    if (key != null) {\n      assert get(key) == null;\n      ourKeyDisposables.put(key, child);\n      register(child, new Disposable() {\n        @Override\n        public void dispose() {\n          ourKeyDisposables.remove(key);\n        }\n      });\n    }\n  }","commit_id":"ff27ee767e26ca0116087c5b61fe3593138f1055","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public LanguageExtension(@NonNls final String epName, @Nullable final T defaultImplementation) {\n    super(epName);\n    myDefaultImplementation = defaultImplementation;\n  }","id":50221,"modified_method":"public LanguageExtension(@NonNls final String epName, @Nullable final T defaultImplementation) {\n    super(epName);\n    myDefaultImplementation = defaultImplementation;\n    IN_LANGUAGE_CACHE = Key.create(\"EXTENSIONS_IN_LANGUAGE_\"+epName);\n  }","commit_id":"ff27ee767e26ca0116087c5b61fe3593138f1055","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  public T forLanguage(@NotNull Language l) {\n    T cached = l.getUserData(IN_LANGUAGE_CACHE);\n    if (cached != null) return cached;\n\n    List<T> extensions = forKey(l);\n    T result;\n    if (extensions.isEmpty()) {\n      Language base = l.getBaseLanguage();\n      result = base == null ? myDefaultImplementation : forLanguage(base);\n    }\n    else {\n      result = extensions.get(0);\n    }\n    if (result == null) return result;\n    l.putUserDataIfAbsent(IN_LANGUAGE_CACHE, result);\n    return result;\n  }","id":50222,"modified_method":"@Nullable\n  public T forLanguage(@NotNull Language l) {\n    T cached = l.getUserData(IN_LANGUAGE_CACHE);\n    if (cached != null) return cached;\n\n    List<T> extensions = forKey(l);\n    T result;\n    if (extensions.isEmpty()) {\n      Language base = l.getBaseLanguage();\n      result = base == null ? myDefaultImplementation : forLanguage(base);\n    }\n    else {\n      result = extensions.get(0);\n    }\n    if (result == null) return null;\n    result = l.putUserDataIfAbsent(IN_LANGUAGE_CACHE, result);\n    return result;\n  }","commit_id":"ff27ee767e26ca0116087c5b61fe3593138f1055","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static GlobalSearchScope getProjectScope(final Project project) {\n    GlobalSearchScope projectScope = project.getUserData(PROJECT_SCOPE_KEY);\n    if (projectScope == null) {\n      final ProjectRootManager projectRootManager = ProjectRootManager.getInstance(project);\n      if (projectRootManager == null) {\n        projectScope = new EverythingGlobalScope(project) {\n          public boolean isSearchInLibraries() {\n            return false;\n          }\n        };\n      }\n      else {\n        projectScope = new GlobalSearchScope(project) {\n          private final ProjectFileIndex myFileIndex = projectRootManager.getFileIndex();\n\n          public boolean contains(VirtualFile file) {\n            if (file instanceof VirtualFileWindow) return true;\n\n            if (myFileIndex.isInLibraryClasses(file) && !myFileIndex.isInSourceContent(file)) return false;\n\n            return myFileIndex.isInContent(file);\n          }\n\n          public int compare(VirtualFile file1, VirtualFile file2) {\n            return 0;\n          }\n\n          public boolean isSearchInModuleContent(@NotNull Module aModule) {\n            return true;\n          }\n\n          public boolean isSearchInLibraries() {\n            return false;\n          }\n\n          public String getDisplayName() {\n            return PsiBundle.message(\"psi.search.scope.project\");\n          }\n\n          public String toString() {\n            return getDisplayName();\n          }\n\n          @Override\n          public GlobalSearchScope uniteWith(@NotNull GlobalSearchScope scope) {\n            if (scope == this || !scope.isSearchInLibraries() || !scope.isSearchOutsideRootModel()) return this;\n            return super.uniteWith(scope);\n          }\n\n          @NotNull\n          @Override\n          public GlobalSearchScope intersectWith(@NotNull GlobalSearchScope scope) {\n            if (scope == this) return this;\n            if (!scope.isSearchInLibraries()) return scope;\n            return super.intersectWith(scope);\n          }\n        };\n      }\n      projectScope = ((UserDataHolderEx)project).putUserDataIfAbsent(PROJECT_SCOPE_KEY, projectScope);\n    }\n    return projectScope;\n  }","id":50223,"modified_method":"public static GlobalSearchScope getProjectScope(final Project project) {\n    GlobalSearchScope cached = project.getUserData(PROJECT_SCOPE_KEY);\n    return cached != null ? cached : ((UserDataHolderEx)project).putUserDataIfAbsent(PROJECT_SCOPE_KEY, ProjectScopeBuilder.getInstance(project).buildProjectScope());\n  }","commit_id":"8b3a389a1cd405f94bb9f2a29bc484173431d843","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static GlobalSearchScope getAllScope(final Project project) {\n    GlobalSearchScope allScope = project.getUserData(ALL_SCOPE_KEY);\n    if (allScope == null) {\n      final ProjectRootManager projectRootManager = ProjectRootManager.getInstance(project);\n      allScope = projectRootManager == null ? new EverythingGlobalScope(project) : new ProjectAndLibrariesScope(project);\n      allScope = ((UserDataHolderEx)project).putUserDataIfAbsent(ALL_SCOPE_KEY, allScope);\n    }\n    return allScope;\n  }","id":50224,"modified_method":"public static GlobalSearchScope getAllScope(final Project project) {\n    GlobalSearchScope cached = project.getUserData(ALL_SCOPE_KEY);\n    return cached != null ? cached : ((UserDataHolderEx)project).putUserDataIfAbsent(ALL_SCOPE_KEY, ProjectScopeBuilder.getInstance(project).buildAllScope());\n  }","commit_id":"8b3a389a1cd405f94bb9f2a29bc484173431d843","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Test\n    public void doesNotHideLocalMethodsAndVariables() {\n        testFile(\"build.gradle\").writelns(\"String name = 'a'; task name\",\n//                \"taskNameVar = 'b'; task taskNameVar\",\n                \"def taskNameMethod(String name = 'c') { name } \",\n//                \"task taskNameMethod\",\n                \"task taskNameMethod('d')\", \"def method(String taskNameParam) { task taskNameParam }\", \"method('e')\",\n                \"cl = { taskNameParam -> task taskNameParam }\", \"cl.call('f')\", \"task all(dependsOn: tasks.all)\");\n        inTestDirectory().withTasks(\"all\").run().assertTasksExecuted(\":a\", \":d\", \":e\", \":f\", \":all\");\n    }","id":50225,"modified_method":"@Test\n    public void doesNotHideLocalMethodsAndVariables() {\n        testFile(\"build.gradle\").writelns(\n                \"String name = 'a'; task name\",\n//                \"taskNameVar = 'b'; task taskNameVar\",\n                \"def taskNameMethod(String name = 'c') { name } \",\n//                \"task taskNameMethod\",\n                \"task taskNameMethod('d')\",\n                \"def addTaskMethod(String methodParam) { task methodParam }\",\n                \"addTaskMethod('e')\",\n                \"def addTaskWithClosure(String methodParam) { task(methodParam) { property = 'value' } }\",\n                \"addTaskWithClosure('f')\",\n                \"def addTaskWithMap(String methodParam) { task(methodParam, description: 'description') }\",\n                \"addTaskWithMap('g')\",\n                \"cl = { String taskNameParam -> task taskNameParam }\",\n                \"cl.call('h')\",\n                \"cl = { String taskNameParam -> task(taskNameParam) { property = 'value' } }\",\n                \"cl.call('i')\",\n                \"assertEquals('value', f.property)\",\n                \"assertEquals('value', i.property)\",\n                \"task all(dependsOn: tasks.all)\");\n        inTestDirectory().withTasks(\"all\").run().assertTasksExecuted(\":a\", \":d\", \":e\", \":f\", \":g\", \":h\", \":i\", \":all\");\n    }","commit_id":"3bb3c8c0d93551281c0ea0b9fd53796366415fc8","url":"https://github.com/gradle/gradle"},{"original_method":"private void doVisitMethodCallExpression(MethodCallExpression call) {\n            if (!isInstanceMethod(call, \"task\")) {\n                return;\n            }\n\n            ArgumentListExpression args = (ArgumentListExpression) call.getArguments();\n            if (args.getExpressions().size() == 0 || args.getExpressions().size() > 3) {\n                return;\n            }\n\n            // Matches: task <arg>{1, 3}\n\n            if (args.getExpressions().size() > 1) {\n                if (args.getExpression(0) instanceof MapExpression && args.getExpression(1) instanceof VariableExpression) {\n                    // Matches: task <name-value-pairs>, <identifier>, <arg>?\n                    // Map to: task(<name-value-pairs>, '<identifier>', <arg>?)\n                    args.getExpressions().set(1, new ConstantExpression(args.getExpression(1).getText()));\n                }\n                else if (args.getExpression(0) instanceof VariableExpression) {\n                    // Matches: task <identifier>, <arg>?\n                    // Map to: task('<identifier>', <arg>?)\n                    args.getExpressions().set(0, new ConstantExpression(args.getExpression(0).getText()));\n                }\n                return;\n            }\n\n            // Matches: task <arg> or task(<arg>)\n\n            Expression arg = args.getExpression(0);\n            if (arg instanceof VariableExpression) {\n                // Matches: task <identifier> or task(<identifier>)\n                transformVariableExpression(call, (VariableExpression) arg);\n            }\n            else if (arg instanceof BinaryExpression) {\n                // Matches: task <expression> <operator> <expression>\n                transformBinaryExpression(call, (BinaryExpression) arg);\n            }\n            else if (arg instanceof MethodCallExpression) {\n                // Matches: task <method-call>\n                maybeTransformNestedMethodCall((MethodCallExpression) arg, call);\n            }\n        }","id":50226,"modified_method":"private void doVisitMethodCallExpression(MethodCallExpression call) {\n            if (!isInstanceMethod(call, \"task\")) {\n                return;\n            }\n\n            ArgumentListExpression args = (ArgumentListExpression) call.getArguments();\n            if (args.getExpressions().size() == 0 || args.getExpressions().size() > 3) {\n                return;\n            }\n\n            // Matches: task <arg>{1, 3}\n\n            if (args.getExpressions().size() > 1) {\n                if (args.getExpression(0) instanceof MapExpression && args.getExpression(1) instanceof VariableExpression) {\n                    // Matches: task <name-value-pairs>, <identifier>, <arg>?\n                    // Map to: task(<name-value-pairs>, '<identifier>', <arg>?)\n                    transformVariableExpression(call, 1);\n                }\n                else if (args.getExpression(0) instanceof VariableExpression) {\n                    // Matches: task <identifier>, <arg>?\n                    transformVariableExpression(call, 0);\n                }\n                return;\n            }\n\n            // Matches: task <arg> or task(<arg>)\n\n            Expression arg = args.getExpression(0);\n            if (arg instanceof VariableExpression) {\n                // Matches: task <identifier> or task(<identifier>)\n                transformVariableExpression(call, 0);\n            }\n            else if (arg instanceof BinaryExpression) {\n                // Matches: task <expression> <operator> <expression>\n                transformBinaryExpression(call, (BinaryExpression) arg);\n            }\n            else if (arg instanceof MethodCallExpression) {\n                // Matches: task <method-call>\n                maybeTransformNestedMethodCall((MethodCallExpression) arg, call);\n            }\n        }","commit_id":"3bb3c8c0d93551281c0ea0b9fd53796366415fc8","url":"https://github.com/gradle/gradle"},{"original_method":"private void transformVariableExpression(MethodCallExpression call, VariableExpression arg) {\n            if (!isDynamicVar(arg)) {\n                return;\n            }\n            \n            // Matches: task <identifier> or task(<identifier>)\n            // Map to: task('<identifier>')\n            String taskName = arg.getText();\n            call.setMethod(new ConstantExpression(\"task\"));\n            ArgumentListExpression args = (ArgumentListExpression) call.getArguments();\n            args.getExpressions().clear();\n            args.addExpression(new ConstantExpression(taskName));\n        }","id":50227,"modified_method":"private void transformVariableExpression(MethodCallExpression call, int index) {\n            ArgumentListExpression args = (ArgumentListExpression) call.getArguments();\n            VariableExpression arg = (VariableExpression) args.getExpression(index);\n            if (!isDynamicVar(arg)) {\n                return;\n            }\n            \n            // Matches: task args?, <identifier>, args? or task(args?, <identifier>, args?)\n            // Map to: task(args?, '<identifier>', args?)\n            String taskName = arg.getText();\n            call.setMethod(new ConstantExpression(\"task\"));\n            args.getExpressions().set(index, new ConstantExpression(taskName));\n        }","commit_id":"3bb3c8c0d93551281c0ea0b9fd53796366415fc8","url":"https://github.com/gradle/gradle"},{"original_method":"public GradleExecutionResult runTasks(String... names) {\n            parameter.setTaskNames(Arrays.asList(names));\n            Gradle gradle = Gradle.newInstance(parameter);\n            gradle.addBuildListener(new ListenerImpl());\n            BuildResult result = gradle.run();\n            result.rethrowFailure();\n            return new GradleExecutionResult(tasks);\n        }","id":50228,"modified_method":"public GradleExecutionResult runTasks(String... names) {\n            parameter.setTaskNames(Arrays.asList(names));\n            return execute();\n        }","commit_id":"c6860ccf0fd7f4e5cfe6aea787fd7fb7420dac75","url":"https://github.com/gradle/gradle"},{"original_method":"protected StartParameter startParameter() {\n        StartParameter parameter = new StartParameter();\n        parameter.setGradleHomeDir(testFile(\"gradle-home\").asFile());\n\n        TestFile defaultImportFile = testFile(\"gradle-home/gradle-imports\");\n        defaultImportFile.write(\"import org.gradle.api.*\\nimport static org.junit.Assert.*\\nimport static org.hamcrest.Matchers.*\");\n\n        parameter.setGradleUserHomeDir(testFile(\"user-home\").asFile());\n\n        parameter.setSearchUpwards(false);\n        parameter.setCacheUsage(CacheUsage.ON);\n        parameter.setCurrentDir(getTestDir());\n\n        return parameter;\n    }","id":50229,"modified_method":"protected StartParameter startParameter() {\n        StartParameter parameter = new StartParameter();\n        parameter.setGradleHomeDir(testFile(\"gradle-home\").asFile());\n\n        testFile(\"gradle-home/gradle-imports\").writelns(\n                \"import org.gradle.api.*\",\n                \"import static org.junit.Assert.*\",\n                \"import static org.hamcrest.Matchers.*\");\n\n        testFile(\"gradle-home/plugin.properties\").writelns(\n                \"groovy=org.gradle.api.plugins.GroovyPlugin\");\n\n        parameter.setGradleUserHomeDir(testFile(\"user-home\").asFile());\n\n        parameter.setSearchUpwards(false);\n        parameter.setCacheUsage(CacheUsage.ON);\n        parameter.setCurrentDir(getTestDir());\n\n        return parameter;\n    }","commit_id":"c6860ccf0fd7f4e5cfe6aea787fd7fb7420dac75","url":"https://github.com/gradle/gradle"},{"original_method":"private boolean maybeTransformNestedMethodCall(MethodCallExpression nestedMethod, MethodCallExpression target) {\n            if (!(isTaskIdentifier(nestedMethod.getMethod()) && targetIsThis(nestedMethod))) {\n                return false;\n            }\n\n            // Matches: task <identifier> <arg-list> | task <string> <arg-list>\n            // Map to: task(\"<identifier>\", <arg-list>) | task(<string>, <arg-list>)\n\n            Expression taskName = nestedMethod.getMethod();\n            Expression mapArg = null;\n            List<Expression> extraArgs = Collections.emptyList();\n\n            if (nestedMethod.getArguments() instanceof NamedArgumentListExpression) {\n                mapArg = nestedMethod.getArguments();\n            } else if (nestedMethod.getArguments() instanceof ArgumentListExpression) {\n                ArgumentListExpression nestedArgs = (ArgumentListExpression) nestedMethod.getArguments();\n                if (nestedArgs.getExpressions().size() > 0 && nestedArgs.getExpression(0) instanceof MapExpression) {\n                    mapArg = nestedArgs.getExpression(0);\n                    extraArgs = nestedArgs.getExpressions().subList(1, nestedArgs.getExpressions().size());\n                } else {\n                    extraArgs = nestedArgs.getExpressions();\n                }\n            }\n\n            target.setMethod(new ConstantExpression(\"task\"));\n            ArgumentListExpression args = (ArgumentListExpression) target.getArguments();\n            args.getExpressions().clear();\n            if (mapArg != null) {\n                args.addExpression(mapArg);\n            }\n            args.addExpression(taskName);\n            for (Expression extraArg : extraArgs) {\n                args.addExpression(extraArg);\n            }\n            return true;\n        }","id":50230,"modified_method":"private boolean maybeTransformNestedMethodCall(MethodCallExpression nestedMethod, MethodCallExpression target) {\n            if (!(isTaskIdentifier(nestedMethod.getMethod()) && targetIsThis(nestedMethod))) {\n                return false;\n            }\n\n            // Matches: task <identifier> <arg-list> | task <string> <arg-list>\n            // Map to: task(\"<identifier>\", <arg-list>) | task(<string>, <arg-list>)\n\n            Expression taskName = nestedMethod.getMethod();\n            Expression mapArg = null;\n            List<Expression> extraArgs = Collections.emptyList();\n\n            if (nestedMethod.getArguments() instanceof NamedArgumentListExpression) {\n                // Matches: task <identifier>(<options-map>)\n                mapArg = nestedMethod.getArguments();\n            } else if (nestedMethod.getArguments() instanceof ArgumentListExpression) {\n                ArgumentListExpression nestedArgs = (ArgumentListExpression) nestedMethod.getArguments();\n                if (nestedArgs.getExpressions().size() == 2\n                        && nestedArgs.getExpression(0) instanceof MapExpression\n                        && nestedArgs.getExpression(1) instanceof ClosureExpression) {\n                    // Matches: task <identifier>(<options-map>) <closure>\n                    mapArg = nestedArgs.getExpression(0);\n                    extraArgs = nestedArgs.getExpressions().subList(1, nestedArgs.getExpressions().size());\n                } else if (nestedArgs.getExpressions().size() == 1 && nestedArgs.getExpression(0) instanceof ClosureExpression) {\n                    // Matches: task <identifier> <closure>\n                    extraArgs = nestedArgs.getExpressions();\n                }\n                else if (nestedArgs.getExpressions().size() != 0) {\n                    return false;\n                }\n            }\n\n            target.setMethod(new ConstantExpression(\"task\"));\n            ArgumentListExpression args = (ArgumentListExpression) target.getArguments();\n            args.getExpressions().clear();\n            if (mapArg != null) {\n                args.addExpression(mapArg);\n            }\n            args.addExpression(taskName);\n            for (Expression extraArg : extraArgs) {\n                args.addExpression(extraArg);\n            }\n            return true;\n        }","commit_id":"7e231ad8750167cd72429c0a9d3c943c86c2d854","url":"https://github.com/gradle/gradle"},{"original_method":"private void doVisitMethodCallExpression(MethodCallExpression call) {\n            if (!isInstanceMethod(call, \"task\")) {\n                return;\n            }\n\n            ArgumentListExpression args = (ArgumentListExpression) call.getArguments();\n            if (args.getExpressions().size() == 0 || args.getExpressions().size() > 3) {\n                return;\n            }\n\n            // Matches: task <arg>{1, 3}\n\n            if (args.getExpressions().size() > 1) {\n                if (args.getExpression(0) instanceof MapExpression && args.getExpression(1) instanceof VariableExpression) {\n                    // Matches: task <name-value-pairs>, <identifier>, <arg>?\n                    // Map to: task(<name-value-pairs>, '<identifier>', <arg>?)\n                    args.getExpressions().set(1, new ConstantExpression(args.getExpression(1).getText()));\n                }\n                return;\n            }\n\n            // Matches: task <arg> or task(<arg>)\n\n            Expression arg = args.getExpression(0);\n            if (arg instanceof VariableExpression) {\n                // Matches: task <identifier> or task(<identifier>)\n                transformVariableExpression(call, (VariableExpression) arg);\n            }\n            else if (arg instanceof BinaryExpression) {\n                // Matches: task <expression> <operator> <expression>\n                transformBinaryExpression(call, (BinaryExpression) arg);\n            }\n            else if (arg instanceof MethodCallExpression) {\n                // Matches: task <method-call>\n                maybeTransformNestedMethodCall((MethodCallExpression) arg, call);\n            }\n        }","id":50231,"modified_method":"private void doVisitMethodCallExpression(MethodCallExpression call) {\n            if (!isInstanceMethod(call, \"task\")) {\n                return;\n            }\n\n            ArgumentListExpression args = (ArgumentListExpression) call.getArguments();\n            if (args.getExpressions().size() == 0 || args.getExpressions().size() > 3) {\n                return;\n            }\n\n            // Matches: task <arg>{1, 3}\n\n            if (args.getExpressions().size() > 1) {\n                if (args.getExpression(0) instanceof MapExpression && args.getExpression(1) instanceof VariableExpression) {\n                    // Matches: task <name-value-pairs>, <identifier>, <arg>?\n                    // Map to: task(<name-value-pairs>, '<identifier>', <arg>?)\n                    args.getExpressions().set(1, new ConstantExpression(args.getExpression(1).getText()));\n                }\n                else if (args.getExpression(0) instanceof VariableExpression) {\n                    // Matches: task <identifier>, <arg>?\n                    // Map to: task('<identifier>', <arg>?)\n                    args.getExpressions().set(0, new ConstantExpression(args.getExpression(0).getText()));\n                }\n                return;\n            }\n\n            // Matches: task <arg> or task(<arg>)\n\n            Expression arg = args.getExpression(0);\n            if (arg instanceof VariableExpression) {\n                // Matches: task <identifier> or task(<identifier>)\n                transformVariableExpression(call, (VariableExpression) arg);\n            }\n            else if (arg instanceof BinaryExpression) {\n                // Matches: task <expression> <operator> <expression>\n                transformBinaryExpression(call, (BinaryExpression) arg);\n            }\n            else if (arg instanceof MethodCallExpression) {\n                // Matches: task <method-call>\n                maybeTransformNestedMethodCall((MethodCallExpression) arg, call);\n            }\n        }","commit_id":"7e231ad8750167cd72429c0a9d3c943c86c2d854","url":"https://github.com/gradle/gradle"},{"original_method":"private void transformVariableExpression(MethodCallExpression call, VariableExpression arg) {\n            // Matches: task <identifier> or task(<identifier>)\n            // Map to: task('<identifier>')\n            String taskName = arg.getText();\n            call.setMethod(new ConstantExpression(\"task\"));\n            ArgumentListExpression args = (ArgumentListExpression) call.getArguments();\n            args.getExpressions().clear();\n            args.addExpression(new ConstantExpression(taskName));\n        }","id":50232,"modified_method":"private void transformVariableExpression(MethodCallExpression call, VariableExpression arg) {\n            if (!isDynamicVar(arg)) {\n                return;\n            }\n            \n            // Matches: task <identifier> or task(<identifier>)\n            // Map to: task('<identifier>')\n            String taskName = arg.getText();\n            call.setMethod(new ConstantExpression(\"task\"));\n            ArgumentListExpression args = (ArgumentListExpression) call.getArguments();\n            args.getExpressions().clear();\n            args.addExpression(new ConstantExpression(taskName));\n        }","commit_id":"7e231ad8750167cd72429c0a9d3c943c86c2d854","url":"https://github.com/gradle/gradle"},{"original_method":"@Test\n    public void canConfigureTasksWhenTheyAreDefined() {\n        testFile(\"build.gradle\").writelns(\n                \"import org.gradle.integtests.TestTask\",\n                \"task withDescription { description = 'value' }\",\n                \"task asStatement(type: TestTask) { property = 'value' }\",\n                \"task \\\"dynamic\\\"(type: TestTask) { property = 'value' }\",\n                \"v = task(asExpression, type: TestTask) { property = 'value' }\",\n                \"task(postConfigure, type: TestTask).configure { property = 'value' }\",\n                \"[asStatement, dynamic, asExpression, postConfigure].each { \",\n                \"    assertEquals('value', it.property)\",\n                \"}\",\n                \"[withDescription].each {\",\n                \"    assertEquals('value', it.description)\",\n                \"}\",\n                \"task all(dependsOn: tasks.all)\"\n        );\n        inTestDirectory().withTasks(\"all\").run();\n    }","id":50233,"modified_method":"@Test\n    public void canConfigureTasksWhenTheyAreDefined() {\n        testFile(\"build.gradle\").writelns(\n                \"import org.gradle.integtests.TestTask\",\n                \"task withDescription { description = 'value' }\",\n                \"task(asMethod) { description = 'value' }\",\n                \"task asStatement(type: TestTask) { property = 'value' }\",\n                \"task \\\"dynamic\\\"(type: TestTask) { property = 'value' }\",\n                \"v = task(asExpression, type: TestTask) { property = 'value' }\",\n                \"task(postConfigure, type: TestTask).configure { property = 'value' }\",\n                \"[asStatement, dynamic, asExpression, postConfigure].each { \",\n                \"    assertEquals('value', it.property)\",\n                \"}\",\n                \"[withDescription, asMethod].each {\",\n                \"    assertEquals('value', it.description)\",\n                \"}\",\n                \"task all(dependsOn: tasks.all)\"\n        );\n        inTestDirectory().withTasks(\"all\").run();\n    }","commit_id":"7e231ad8750167cd72429c0a9d3c943c86c2d854","url":"https://github.com/gradle/gradle"},{"original_method":"@Test @Ignore\n    public void doesNotHideLocalMethodsAndVariables() {\n        testFile(\"build.gradle\").writelns(\n                \"task a\",\n                \"task b\",\n                \"task c\",\n                \"taskVar = 'a'\",\n                \"def taskMethod() { 'b' }\",\n                \"c.dependsOn task(taskVar), task(taskMethod())\"\n        );\n        inTestDirectory().withTasks(\"c\").run().assertTasksExecuted(\":a\", \":b\", \":c\");\n    }","id":50234,"modified_method":"@Test\n    public void doesNotHideLocalMethodsAndVariables() {\n        testFile(\"build.gradle\").writelns(\n                \"String name = 'a'; task name\",\n//                \"taskNameVar = 'b'; task taskNameVar\",\n                \"def taskNameMethod(String name = 'c') { name } \",\n//                \"task taskNameMethod\",\n                \"task taskNameMethod('d')\",\n                \"def method(String taskNameParam) { task taskNameParam }\",\n                \"method('e')\",\n                \"cl = { taskNameParam -> task taskNameParam }\",\n                \"cl.call('f')\",\n                \"task all(dependsOn: tasks.all)\"\n        );\n        inTestDirectory().withTasks(\"all\").run().assertTasksExecuted(\":a\", \":d\", \":e\", \":f\", \":all\");\n    }","commit_id":"7e231ad8750167cd72429c0a9d3c943c86c2d854","url":"https://github.com/gradle/gradle"},{"original_method":"/**\n     * Returns a list of all site available for the current user.<p>\n     * \n     * @param cms the current cms context \n     * @param workplaceMode if true, the root and current site is included for the admin user\n     * and the view permission is required to see the site root\n     * @return a list of all site available for the current user\n     */\n    public static List getAvailableSites(CmsObject cms, boolean workplaceMode) {\n        Map sites = OpenCms.getSiteManager().getSiteList();\n        List siteroots = new ArrayList(sites.size() + 1);\n        Map siteServers = new HashMap(sites.size() + 1);\n        List result = new ArrayList(sites.size() + 1);\n                \n        Iterator i;\n        // add site list\n        i = sites.keySet().iterator();\n        while (i.hasNext()) {\n            CmsSite site = (CmsSite)sites.get(i.next());\n            String folder = site.getSiteRoot() + \"/\";\n            if (! siteroots.contains(folder)) {\n                siteroots.add(folder);\n                siteServers.put(folder, site.getSiteMatcher());\n            }            \n        }        \n        // add default site\n        if (workplaceMode && OpenCms.getSiteManager().getDefaultSite() != null) {\n            String folder = OpenCms.getSiteManager().getDefaultSite().getSiteRoot() + \"/\";\n            if (! siteroots.contains(folder)) {\n                siteroots.add(folder);\n            }   \n        }\n\n        String currentRoot = cms.getRequestContext().getSiteRoot();\n        cms.getRequestContext().saveSiteRoot();\n        try {\n            // for all operations here we need no context\n            cms.getRequestContext().setSiteRoot(\"/\");\n            if (workplaceMode && cms.isAdmin()) {\n                if (! siteroots.contains(\"/\")) {\n                    siteroots.add(\"/\");\n                }   \n                if (! siteroots.contains(currentRoot + \"/\")) {\n                    siteroots.add(currentRoot + \"/\");\n                }            \n            }\n            Collections.sort(siteroots);\n            i = siteroots.iterator();\n            while (i.hasNext()) {\n                String folder = (String)i.next();\n                try {\n                    CmsResource res = cms.readFileHeader(folder);\n                    if (!workplaceMode || cms.hasPermissions(res, I_CmsConstants.C_VIEW_ACCESS)) {\n                        String title = cms.readProperty(folder, I_CmsConstants.C_PROPERTY_TITLE);\n                        if (title == null) {\n                            title = folder;\n                        }\n                        result.add(new CmsSite(folder, res.getStructureId(), title, (CmsSiteMatcher)siteServers.get(folder)));\n                    }\n                                        \n                } catch (CmsException e) {\n                    // user probably has no read access to the folder, ignore and continue iterating            \n                }      \n            }\n        } catch (Throwable t) {\n            if (OpenCms.getLog(CmsSiteManager.class).isErrorEnabled()) {\n                OpenCms.getLog(CmsSiteManager.class).error(\"Error reading site properties\", t);\n            }            \n        } finally {\n            // restore the user's current context \n            cms.getRequestContext().restoreSiteRoot();\n        }\n        return result;\n    }","id":50235,"modified_method":"/**\n     * Returns a list of all site available for the current user.<p>\n     * \n     * @param cms the current cms context \n     * @param workplaceMode if true, the root and current site is included for the admin user\n     * and the view permission is required to see the site root\n     * @return a list of all site available for the current user\n     */\n    public static List getAvailableSites(CmsObject cms, boolean workplaceMode) {\n        Map sites = OpenCms.getSiteManager().getSiteList();\n        List siteroots = new ArrayList(sites.size() + 1);\n        Map siteServers = new HashMap(sites.size() + 1);\n        List result = new ArrayList(sites.size() + 1);\n                \n        Iterator i;\n        // add site list\n        i = sites.keySet().iterator();\n        while (i.hasNext()) {\n            CmsSite site = (CmsSite)sites.get(i.next());\n            String folder = site.getSiteRoot() + \"/\";\n            if (! siteroots.contains(folder)) {\n                siteroots.add(folder);\n                siteServers.put(folder, site.getSiteMatcher());\n            }            \n        }        \n        // add default site\n        if (workplaceMode && OpenCms.getSiteManager().getDefaultSite() != null) {\n            String folder = OpenCms.getSiteManager().getDefaultSite().getSiteRoot() + \"/\";\n            if (! siteroots.contains(folder)) {\n                siteroots.add(folder);\n            }   \n        }\n\n        String currentRoot = cms.getRequestContext().getSiteRoot();\n        cms.getRequestContext().saveSiteRoot();\n        try {\n            // for all operations here we need no context\n            cms.getRequestContext().setSiteRoot(\"/\");\n            if (workplaceMode && cms.isAdmin()) {\n                if (! siteroots.contains(\"/\")) {\n                    siteroots.add(\"/\");\n                }   \n                if (! siteroots.contains(currentRoot + \"/\")) {\n                    siteroots.add(currentRoot + \"/\");\n                }            \n            }\n            Collections.sort(siteroots);\n            i = siteroots.iterator();\n            while (i.hasNext()) {\n                String folder = (String)i.next();\n                try {\n                    CmsResource res = cms.readFileHeader(folder);\n                    if (!workplaceMode || cms.hasPermissions(res, I_CmsConstants.C_VIEW_ACCESS)) {\n                        String title = cms.readPropertyObject(folder, I_CmsConstants.C_PROPERTY_TITLE, false).getValue();\n                        if (title == null) {\n                            title = folder;\n                        }\n                        result.add(new CmsSite(folder, res.getStructureId(), title, (CmsSiteMatcher)siteServers.get(folder)));\n                    }\n                                        \n                } catch (CmsException e) {\n                    // user probably has no read access to the folder, ignore and continue iterating            \n                }      \n            }\n        } catch (Throwable t) {\n            if (OpenCms.getLog(CmsSiteManager.class).isErrorEnabled()) {\n                OpenCms.getLog(CmsSiteManager.class).error(\"Error reading site properties\", t);\n            }            \n        } finally {\n            // restore the user's current context \n            cms.getRequestContext().restoreSiteRoot();\n        }\n        return result;\n    }","commit_id":"ae742ae8a6a0335b30ae278ac0014a55e47f3f14","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Generates a new lucene document instance from contents of the given resource.<p>\n     * \n     * @see org.opencms.search.documents.I_CmsDocumentFactory#newInstance(org.opencms.search.CmsIndexResource, java.lang.String)\n     */\n    public Document newInstance (CmsIndexResource resource, String language) throws CmsException {\n        \n        Document document = new Document();\n        CmsResource res = (CmsResource)resource.getData();\n        String path = m_cms.getRequestContext().removeSiteRoot(resource.getRootPath());\n        String value;\n\n        if ((value = m_cms.readProperty(path, I_CmsConstants.C_PROPERTY_TITLE)) != null) {\n            document.add(Field.Text(I_CmsDocumentFactory.DOC_TITLE, value));\n        }\n        if ((value = m_cms.readProperty(path, I_CmsConstants.C_PROPERTY_KEYWORDS)) != null) {\n            document.add(Field.Text(I_CmsDocumentFactory.DOC_KEYWORDS, value));\n        }        \n        if ((value = m_cms.readProperty(path, I_CmsConstants.C_PROPERTY_DESCRIPTION)) != null) {\n            document.add(Field.Text(I_CmsDocumentFactory.DOC_DESCRIPTION, value));\n        }                \n\n        document.add(Field.Keyword(I_CmsDocumentFactory.DOC_DATE_CREATED, \n            DateField.timeToString(res.getDateCreated())));\n        document.add(Field.Keyword(I_CmsDocumentFactory.DOC_DATE_LASTMODIFIED, \n            DateField.timeToString(res.getDateLastModified())));\n    \n        document.add(Field.Keyword(I_CmsDocumentFactory.DOC_PATH, path));\n\n        return document;\n    }","id":50236,"modified_method":"/**\n     * Generates a new lucene document instance from contents of the given resource.<p>\n     * \n     * @see org.opencms.search.documents.I_CmsDocumentFactory#newInstance(org.opencms.search.CmsIndexResource, java.lang.String)\n     */\n    public Document newInstance (CmsIndexResource resource, String language) throws CmsException {\n        \n        Document document = new Document();\n        CmsResource res = (CmsResource)resource.getData();\n        String path = m_cms.getRequestContext().removeSiteRoot(resource.getRootPath());\n        String value;\n\n        if ((value = m_cms.readPropertyObject(path, I_CmsConstants.C_PROPERTY_TITLE, false).getValue()) != null) {\n            document.add(Field.Text(I_CmsDocumentFactory.DOC_TITLE, value));\n        }\n        if ((value = m_cms.readPropertyObject(path, I_CmsConstants.C_PROPERTY_KEYWORDS, false).getValue()) != null) {\n            document.add(Field.Text(I_CmsDocumentFactory.DOC_KEYWORDS, value));\n        }        \n        if ((value = m_cms.readPropertyObject(path, I_CmsConstants.C_PROPERTY_DESCRIPTION, false).getValue()) != null) {\n            document.add(Field.Text(I_CmsDocumentFactory.DOC_DESCRIPTION, value));\n        }                \n\n        document.add(Field.Keyword(I_CmsDocumentFactory.DOC_DATE_CREATED, \n            DateField.timeToString(res.getDateCreated())));\n        document.add(Field.Keyword(I_CmsDocumentFactory.DOC_DATE_LASTMODIFIED, \n            DateField.timeToString(res.getDateLastModified())));\n    \n        document.add(Field.Keyword(I_CmsDocumentFactory.DOC_PATH, path));\n\n        return document;\n    }","commit_id":"ae742ae8a6a0335b30ae278ac0014a55e47f3f14","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Reads the xml contents of a file into the page.<p>\n     * \n     * @param cms the current cms object\n     * @param file the file with xml data\n     * @return the concrete PageObject instanciated with the xml data\n     * @throws CmsXmlPageException if something goes wrong\n     */\n    public static CmsXmlPage read(CmsObject cms, CmsFile file) throws CmsXmlPageException {\n\n        CmsXmlPage newPage = null;\n        \n        byte[] content = file.getContents();\n\n        String allowRelative;\n        try {\n            allowRelative = cms.readProperty(cms.readAbsolutePath(file), C_PROPERTY_ALLOW_RELATIVE, false, \"false\");\n        } catch (CmsException e) {\n            allowRelative = \"false\";\n        }\n        \n        String encoding;\n        try { \n            encoding = cms.readProperty(cms.readAbsolutePath(file), I_CmsConstants.C_PROPERTY_CONTENT_ENCODING, true, OpenCms.getSystemInfo().getDefaultEncoding());\n        } catch (CmsException e) {\n            encoding = OpenCms.getSystemInfo().getDefaultEncoding();\n        }        \n        \n        if (content.length > 0) {\n            // content is initialized\n            \n            String xmlData;\n            try {\n                xmlData = new String(content, encoding);\n            } catch (UnsupportedEncodingException e) {\n                try {\n                    xmlData = new String(content, OpenCms.getSystemInfo().getDefaultEncoding());\n                }  catch (UnsupportedEncodingException e2) {\n                    xmlData = new String();\n                }\n            }            \n            newPage = read(cms, xmlData);\n            \n        } else {\n            // content is empty\n            newPage = new CmsXmlPage(encoding);\n        }\n        \n        newPage.m_file = file;\n        newPage.m_encoding = encoding;\n        newPage.m_allowRelativeLinks = Boolean.valueOf(allowRelative).booleanValue();\n        \n        return newPage;\n    }","id":50237,"modified_method":"/**\n     * Reads the xml contents of a file into the page.<p>\n     * \n     * @param cms the current cms object\n     * @param file the file with xml data\n     * @return the concrete PageObject instanciated with the xml data\n     * @throws CmsXmlPageException if something goes wrong\n     */\n    public static CmsXmlPage read(CmsObject cms, CmsFile file) throws CmsXmlPageException {\n\n        CmsXmlPage newPage = null;\n        \n        byte[] content = file.getContents();\n\n        String allowRelative;\n        try {\n            allowRelative = cms.readPropertyObject(cms.readAbsolutePath(file), C_PROPERTY_ALLOW_RELATIVE, false).getValue(\"false\");\n        } catch (CmsException e) {\n            allowRelative = \"false\";\n        }\n        \n        String encoding;\n        try { \n            encoding = cms.readPropertyObject(cms.readAbsolutePath(file), I_CmsConstants.C_PROPERTY_CONTENT_ENCODING, true).getValue(OpenCms.getSystemInfo().getDefaultEncoding());\n        } catch (CmsException e) {\n            encoding = OpenCms.getSystemInfo().getDefaultEncoding();\n        }        \n        \n        if (content.length > 0) {\n            // content is initialized\n            \n            String xmlData;\n            try {\n                xmlData = new String(content, encoding);\n            } catch (UnsupportedEncodingException e) {\n                try {\n                    xmlData = new String(content, OpenCms.getSystemInfo().getDefaultEncoding());\n                }  catch (UnsupportedEncodingException e2) {\n                    xmlData = new String();\n                }\n            }            \n            newPage = read(cms, xmlData);\n            \n        } else {\n            // content is empty\n            newPage = new CmsXmlPage(encoding);\n        }\n        \n        newPage.m_file = file;\n        newPage.m_encoding = encoding;\n        newPage.m_allowRelativeLinks = Boolean.valueOf(allowRelative).booleanValue();\n        \n        return newPage;\n    }","commit_id":"ae742ae8a6a0335b30ae278ac0014a55e47f3f14","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * @see org.opencms.loader.I_CmsResourceLoader#load(org.opencms.file.CmsObject, org.opencms.file.CmsResource, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)\n     */\n    public void load(\n        CmsObject cms, \n        CmsResource file, \n        HttpServletRequest req, \n        HttpServletResponse res\n    ) throws ServletException, IOException, CmsException {\n\n        // load and process the JSP         \n        boolean streaming = false;\n        boolean bypass = false;\n\n        // read \"stream\" property from requested VFS resource                                     \n        String streamProperty = cms.readProperty(\n            cms.readAbsolutePath(file),\n            I_CmsResourceLoader.C_LOADER_STREAMPROPERTY);\n        if (streamProperty != null) {\n            if (\"yes\".equalsIgnoreCase(streamProperty) || \"true\".equalsIgnoreCase(streamProperty)) {\n                streaming = true;\n            } else if (\"bypass\".equalsIgnoreCase(streamProperty) || \"bypasscache\".equalsIgnoreCase(streamProperty)) {\n                bypass = true;\n            }\n        }\n\n        // get the Flex controller\n        CmsFlexController controller = getController(cms, file, req, res, streaming, true);\n\n        if (bypass) {\n            // bypass Flex cache for this page        \n            if (DEBUG > 1) {\n                System.err.println(\"JspLoader.load() bypassing cache for file \" + cms.readAbsolutePath(file));\n            }\n            // update the JSP first if neccessary            \n            String target = updateJsp(file, controller, new HashSet());\n            // dispatch to external JSP\n            req.getRequestDispatcher(target).forward(controller.getCurrentRequest(), res);\n            if (DEBUG > 1) {\n                System.err.println(\"JspLoader.load() cache was bypassed!\");\n            }\n        } else {\n            // Flex cache not bypassed, dispatch to internal JSP  \n            dispatchJsp(controller);\n        }\n\n        // remove the controller from the request\n        CmsFlexController.removeController(req);\n    }","id":50238,"modified_method":"/**\n     * @see org.opencms.loader.I_CmsResourceLoader#load(org.opencms.file.CmsObject, org.opencms.file.CmsResource, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)\n     */\n    public void load(\n        CmsObject cms, \n        CmsResource file, \n        HttpServletRequest req, \n        HttpServletResponse res\n    ) throws ServletException, IOException, CmsException {\n\n        // load and process the JSP         \n        boolean streaming = false;\n        boolean bypass = false;\n\n        // read \"stream\" property from requested VFS resource                                     \n        String streamProperty = cms.readPropertyObject(\n            cms.readAbsolutePath(file),\n            I_CmsResourceLoader.C_LOADER_STREAMPROPERTY,\n            false).getValue();\n        if (streamProperty != null) {\n            if (\"yes\".equalsIgnoreCase(streamProperty) || \"true\".equalsIgnoreCase(streamProperty)) {\n                streaming = true;\n            } else if (\"bypass\".equalsIgnoreCase(streamProperty) || \"bypasscache\".equalsIgnoreCase(streamProperty)) {\n                bypass = true;\n            }\n        }\n\n        // get the Flex controller\n        CmsFlexController controller = getController(cms, file, req, res, streaming, true);\n\n        if (bypass) {\n            // bypass Flex cache for this page        \n            if (DEBUG > 1) {\n                System.err.println(\"JspLoader.load() bypassing cache for file \" + cms.readAbsolutePath(file));\n            }\n            // update the JSP first if neccessary            \n            String target = updateJsp(file, controller, new HashSet());\n            // dispatch to external JSP\n            req.getRequestDispatcher(target).forward(controller.getCurrentRequest(), res);\n            if (DEBUG > 1) {\n                System.err.println(\"JspLoader.load() cache was bypassed!\");\n            }\n        } else {\n            // Flex cache not bypassed, dispatch to internal JSP  \n            dispatchJsp(controller);\n        }\n\n        // remove the controller from the request\n        CmsFlexController.removeController(req);\n    }","commit_id":"6c18d6d43c0a4f53a9610c9a3fe24a301f4da071","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Parses the JSP and modifies OpenCms ciritcal directive information.<p>\n     * \n     * @param byteContent the original JSP content\n     * @param encoding the encoding to use for the JSP\n     * @param controller the controller for the JSP integration\n     * @param includes a Set containing all JSP pages that have been already updated\n     * @return the modified JSP content\n     * @throws UnsupportedEncodingException\n     */\n    private byte[] parseJsp(byte[] byteContent, String encoding, CmsFlexController controller, Set includes) {\n\n        String content;\n        // make sure encoding is set correctly\n        try {\n            content = new String(byteContent, encoding);\n        } catch (UnsupportedEncodingException e) {\n            // encoding property is not set correctly\n            OpenCms.getLog(this).error(\"Encoding not set correctly for JSP '\" + controller.getCurrentRequest().getElementUri() + \"' (using default)\", e);\n            try {\n                content = new String(byteContent, C_DEFAULT_JSP_ENCODING);\n                encoding = C_DEFAULT_JSP_ENCODING;                \n            } catch (UnsupportedEncodingException e2) {\n                // should not happen since ISO-8859-1 is always a valid encoding\n                content = new String(byteContent);\n            }\n        }\n            \n        // parse for special <%@cms file=\"...\" %> tag\n        content = parseJspCmsTag(content, controller, includes); \n        // parse for included files in tags\n        content = parseJspIncludes(content, controller, includes);     \n        // parse for <%@page pageEncoding=\"...\" %> tag\n        content = parseJspEncoding(content, encoding);       \n        // convert the result to bytes and return it\n        try {\n            return content.getBytes(encoding);\n        } catch (UnsupportedEncodingException e) {\n            // should not happen since encoding was already checked\n            return content.getBytes();\n        }                \n    }","id":50239,"modified_method":"/**\n     * Parses the JSP and modifies OpenCms ciritcal directive information.<p>\n     * \n     * @param byteContent the original JSP content\n     * @param encoding the encoding to use for the JSP\n     * @param controller the controller for the JSP integration\n     * @param includes a Set containing all JSP pages that have been already updated\n     * @param isHardInclude indicated if this page is actually a \"hard\" include with <code>&lt;%@ include file=\"...\" &gt;<\/code>\n     * @return the modified JSP content\n     * @throws UnsupportedEncodingException\n     */\n    private byte[] parseJsp(byte[] byteContent, String encoding, CmsFlexController controller, Set includes, boolean isHardInclude) {\n\n        String content;\n        // make sure encoding is set correctly\n        try {\n            content = new String(byteContent, encoding);\n        } catch (UnsupportedEncodingException e) {\n            // encoding property is not set correctly\n            OpenCms.getLog(this).error(\"Encoding not set correctly for JSP '\" + controller.getCurrentRequest().getElementUri() + \"' (using default)\", e);\n            try {\n                content = new String(byteContent, C_DEFAULT_JSP_ENCODING);\n                encoding = C_DEFAULT_JSP_ENCODING;                \n            } catch (UnsupportedEncodingException e2) {\n                // should not happen since ISO-8859-1 is always a valid encoding\n                content = new String(byteContent);\n            }\n        }\n            \n        // parse for special <%@cms file=\"...\" %> tag\n        content = parseJspCmsTag(content, controller, includes); \n        // parse for included files in tags\n        content = parseJspIncludes(content, controller, includes);     \n        // parse for <%@page pageEncoding=\"...\" %> tag\n        content = parseJspEncoding(content, encoding, isHardInclude);       \n        // convert the result to bytes and return it\n        try {\n            return content.getBytes(encoding);\n        } catch (UnsupportedEncodingException e) {\n            // should not happen since encoding was already checked\n            return content.getBytes();\n        }                \n    }","commit_id":"6c18d6d43c0a4f53a9610c9a3fe24a301f4da071","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Parses the JSP content for the  &lt;%@page pageEncoding=\"...\" %&gt; tag\n     * and ensures that the JSP page encoding is set according to the OpenCms \n     * \"content-encoding\" property value of the JSP.<p>\n     * \n     * @param content the JSP content to parse\n     * @param encoding the encoding to use for the JSP\n     * @return the parsed JSP content\n     */    \n    private String parseJspEncoding(String content, String encoding) {\n        \n        // check if a JSP directive occurs in the file\n        int i1 = content.indexOf(C_DIRECTIVE_START);\n        if (i1 < 0) {\n            // no directive occurs\n            return content;\n        }\n        \n        StringBuffer buf = new StringBuffer(content.length());\n        int p0 = 0, i2 = 0, slen = C_DIRECTIVE_START.length();\n        boolean found = false;\n        \n        while (i1 >= 0) {\n            // parse the file and set/replace page encoding\n            i2 = content.indexOf(C_DIRECTIVE_END, i1 + slen);\n            if (i2 > i1) {\n                String directive = content.substring(i1 + slen, i2);\n                if (OpenCms.getLog(this).isDebugEnabled()) {\n                    OpenCms.getLog(this).debug(\"JspLoader: Detected \" + C_DIRECTIVE_START + directive + C_DIRECTIVE_END);\n                }\n\n                int t1 = 0, t2 = 0, t3 = 0, t4 = 0, t5 = 0;\n                while (directive.charAt(t1) == ' ') {\n                    t1++;\n                }\n                String argument = null;\n                if (directive.startsWith(\"page\", t1)) {\n                    if (OpenCms.getLog(this).isDebugEnabled()) {\n                        OpenCms.getLog(this).debug(\"JspLoader: Detected 'page' directive!\");\n                    }\n                    t2 = directive.indexOf(\"pageEncoding\", t1 + 4);\n                    t5 = 12;\n                    if (t2 > 0) {\n                        found = true;\n                    }\n                }\n\n                if (t2 > 0) {\n                    String sub = directive.substring(t2 + t5);\n                    char c1 = sub.charAt(t3);\n                    while ((c1 == ' ') || (c1 == '=') || (c1 == '\"')) {\n                        c1 = sub.charAt(++t3);\n                    }\n                    t4 = t3;\n                    while (c1 != '\"') {\n                        c1 = sub.charAt(++t4);\n                    }\n                    if (t4 > t3) {\n                        argument = sub.substring(t3, t4);\n                    }\n                    if (OpenCms.getLog(this).isDebugEnabled()) {\n                        OpenCms.getLog(this).debug(\"JspLoader: Argument given in directive is '\" + argument + \"'\");\n                    }\n                }\n\n                if (argument != null) {\n                    // a pageEncoding setting was found, changes have to be made\n                    String pre = directive.substring(0, t2 + t3 + t5);\n                    String suf = directive.substring(t2 + t3 + t5 + argument.length());\n                    // change the encoding\n                    directive = pre + encoding + suf;\n                    if (OpenCms.getLog(this).isDebugEnabled()) {\n                        OpenCms.getLog(this).debug(\n                            \"JspLoader: Changed directive to \" + C_DIRECTIVE_START + directive + C_DIRECTIVE_END);\n                    }\n                }\n\n                buf.append(content.substring(p0, i1 + slen));\n                buf.append(directive);\n                p0 = i2;\n                i1 = content.indexOf(C_DIRECTIVE_START, p0);\n            }\n        }\n        if (i2 > 0) {\n            // the content of the JSP was changed \n            buf.append(content.substring(p0, content.length()));\n            if (found) {\n                content = buf.toString();\n            } else {\n                // encoding setting was not found, add it to top of the page\n                StringBuffer buf2 = new StringBuffer(buf.length() + 32);\n                buf2.append(\"<%@ page pageEncoding=\\\"\");\n                buf2.append(encoding);\n                buf2.append(\"\\\" %>\");\n                buf2.append(buf);\n                content = buf2.toString();\n            }\n        }\n        return content;\n    }","id":50240,"modified_method":"/**\n     * Parses the JSP content for the  &lt;%@page pageEncoding=\"...\" %&gt; tag\n     * and ensures that the JSP page encoding is set according to the OpenCms \n     * \"content-encoding\" property value of the JSP.<p>\n     * \n     * @param content the JSP content to parse\n     * @param encoding the encoding to use for the JSP\n     * @param isHardInclude indicated if this page is actually a \"hard\" include with <code>&lt;%@ include file=\"...\" &gt;<\/code>\n     * @return the parsed JSP content\n     */    \n    private String parseJspEncoding(String content, String encoding, boolean isHardInclude) {\n        \n        // check if a JSP directive occurs in the file\n        int i1 = content.indexOf(C_DIRECTIVE_START);\n        if (i1 < 0) {\n            // no directive occurs\n            return content;\n        }\n        \n        StringBuffer buf = new StringBuffer(content.length());\n        int p0 = 0, i2 = 0, slen = C_DIRECTIVE_START.length();\n        boolean found = false;\n        \n        while (i1 >= 0) {\n            // parse the file and set/replace page encoding\n            i2 = content.indexOf(C_DIRECTIVE_END, i1 + slen);\n            if (i2 > i1) {\n                String directive = content.substring(i1 + slen, i2);\n                if (OpenCms.getLog(this).isDebugEnabled()) {\n                    OpenCms.getLog(this).debug(\"JspLoader: Detected \" + C_DIRECTIVE_START + directive + C_DIRECTIVE_END);\n                }\n\n                int t1 = 0, t2 = 0, t3 = 0, t4 = 0, t5 = 0;\n                while (directive.charAt(t1) == ' ') {\n                    t1++;\n                }\n                String argument = null;\n                if (directive.startsWith(\"page\", t1)) {\n                    if (OpenCms.getLog(this).isDebugEnabled()) {\n                        OpenCms.getLog(this).debug(\"JspLoader: Detected 'page' directive!\");\n                    }\n                    t2 = directive.indexOf(\"pageEncoding\", t1 + 4);\n                    t5 = 12;\n                    if (t2 > 0) {\n                        found = true;\n                    }\n                }\n\n                if (t2 > 0) {\n                    String sub = directive.substring(t2 + t5);\n                    char c1 = sub.charAt(t3);\n                    while ((c1 == ' ') || (c1 == '=') || (c1 == '\"')) {\n                        c1 = sub.charAt(++t3);\n                    }\n                    t4 = t3;\n                    while (c1 != '\"') {\n                        c1 = sub.charAt(++t4);\n                    }\n                    if (t4 > t3) {\n                        argument = sub.substring(t3, t4);\n                    }\n                    if (OpenCms.getLog(this).isDebugEnabled()) {\n                        OpenCms.getLog(this).debug(\"JspLoader: Argument given in directive is '\" + argument + \"'\");\n                    }\n                }\n\n                if (argument != null) {\n                    // a pageEncoding setting was found, changes have to be made\n                    String pre = directive.substring(0, t2 + t3 + t5);\n                    String suf = directive.substring(t2 + t3 + t5 + argument.length());\n                    // change the encoding\n                    directive = pre + encoding + suf;\n                    if (OpenCms.getLog(this).isDebugEnabled()) {\n                        OpenCms.getLog(this).debug(\n                            \"JspLoader: Changed directive to \" + C_DIRECTIVE_START + directive + C_DIRECTIVE_END);\n                    }\n                }\n\n                buf.append(content.substring(p0, i1 + slen));\n                buf.append(directive);\n                p0 = i2;\n                i1 = content.indexOf(C_DIRECTIVE_START, p0);\n            }\n        }\n        if (i2 > 0) {\n            // the content of the JSP was changed \n            buf.append(content.substring(p0, content.length()));\n            if (found) {\n                content = buf.toString();\n            } else if (! isHardInclude) {\n                // encoding setting was not found\n                // if this is not a \"hard\" include then add the encoding to the top of the page\n                // checking for the hard include is important to prevent errors with \n                // multiple page encoding settings if a templete is composed from several hard included elements\n                // this is an issue in Tomcat 4.x but not 5.x\n                StringBuffer buf2 = new StringBuffer(buf.length() + 32);\n                buf2.append(\"<%@ page pageEncoding=\\\"\");\n                buf2.append(encoding);\n                buf2.append(\"\\\" %>\");\n                buf2.append(buf);\n                content = buf2.toString();\n            }\n        }\n        return content;\n    }","commit_id":"6c18d6d43c0a4f53a9610c9a3fe24a301f4da071","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Updates a JSP page in the \"real\" file system in case the VFS resource has changed.<p>\n     * \n     * Also processes the <code>&lt;%@ cms %&gt;<\/code> tags before the JSP is written to the real FS.\n     * Also recursivly updates all files that are referenced by a <code>&lt;%@ cms %&gt;<\/code> tag \n     * on this page to make sure the file actually exists in the real FS. \n     * All <code>&lt;%@ include %&gt;<\/code> tags are parsed and the name in the tag is translated\n     * from the OpenCms VFS path to the path in the real FS. \n     * The same is done for filenames in <code>&lt;%@ page errorPage=... %&gt;<\/code> tags.\n     * \n     * @param resource the reqested JSP file resource in the VFS\n     * @param controller the controller for the JSP integration\n     * @param updates a Set containing all JSP pages that have been already updated\n     * @return The file name of the updated JSP in the \"real\" FS\n     * \n     * @throws ServletException might be thrown in the process of including the JSP \n     * @throws IOException might be thrown in the process of including the JSP \n     */\n    private synchronized String updateJsp(CmsResource resource, CmsFlexController controller, Set updates)\n    throws IOException, ServletException {\n\n        CmsObject cms = controller.getCmsObject();\n        // can not use save/restore methods since this is called more then once by recursion\n        String oldSiteRoot = cms.getRequestContext().getSiteRoot();\n        try {\n            // all JSP must be exported with full \"root path\" site root information\n            cms.getRequestContext().setSiteRoot(\"\");\n\n            String jspVfsName = cms.readAbsolutePath(resource);\n            String jspTargetName = getJspName(jspVfsName);\n\n            // check for if page was already updated\n            if (updates.contains(jspTargetName)) {\n                // no need to write the already included file to the real FS more then once\n                return null;\n            }\n            updates.add(jspTargetName);\n\n            String jspPath = getJspPath(jspTargetName, controller.getCurrentRequest().isOnline());\n\n            File d = new File(jspPath).getParentFile();\n            if ((d == null) || (d.exists() && !(d.isDirectory() && d.canRead()))) {\n                if (OpenCms.getLog(this).isErrorEnabled()) {\n                    OpenCms.getLog(this).error(\"Could not access directory for \" + jspPath);\n                }\n                throw new ServletException(\"JspLoader: Could not access directory for \" + jspPath);\n            }\n\n            if (!d.exists()) {\n                // create directory structure\n                d.mkdirs();\n            }\n\n            // check if the JSP muse be updated\n            boolean mustUpdate = false;\n            File f = new File(jspPath);\n            if (!f.exists()) {\n                // file does not exist in real FS\n                mustUpdate = true;\n            } else if (f.lastModified() <= resource.getDateLastModified()) {\n                // file in real FS is older then file in VFS\n                mustUpdate = true;\n            } else if (controller.getCurrentRequest().isDoRecompile()) {\n                // recompile is forced with parameter\n                mustUpdate = true;\n            }\n\n            // calculate real FS name of the JSP\n            String jspRfsName = getJspUri(jspVfsName, controller.getCurrentRequest().isOnline());\n\n            if (mustUpdate) {\n                if (OpenCms.getLog(this).isDebugEnabled()) {\n                    OpenCms.getLog(this).debug(\"JspLoader: Writing JSP file '\" + jspRfsName + \"'\");\n                }\n                byte[] contents;\n                String encoding;\n                try {\n                    contents = CmsFile.upgrade(resource, cms).getContents();\n                    // check the \"content-encoding\" property for the JSP\n                    encoding = cms.readProperty(\n                        jspVfsName,\n                        I_CmsConstants.C_PROPERTY_CONTENT_ENCODING,\n                        false,\n                        C_DEFAULT_JSP_ENCODING);\n                    encoding = encoding.trim().toUpperCase();\n                } catch (CmsException e) {\n                    controller.setThrowable(e, jspVfsName);\n                    throw new ServletException(\"JspLoader: Could not access JSP file '\" + jspVfsName + \"'\", e);\n                }\n\n                try {\n                    // parse the JSP and modify OpenCms critical directives\n                    contents = parseJsp(contents, encoding, controller, updates);\n                    // write the parsed JSP content to the real FS\n                    FileOutputStream fs = new FileOutputStream(f);\n                    fs.write(contents);\n                    fs.close();\n                    contents = null;\n\n                    if (OpenCms.getLog(this).isInfoEnabled()) {\n                        OpenCms.getLog(this).info(\n                            \"Updated JSP file \\\"\"\n                                + jspRfsName\n                                + \"\\\" for resource \\\"\"\n                                + cms.readAbsolutePath(resource)\n                                + \"\\\"\");\n                    }\n                } catch (FileNotFoundException e) {\n                    throw new ServletException(\"JspLoader: Could not write to file '\" + f.getName() + \"'\\n\" + e, e);\n                }\n            }\n\n            // update \"last modified\" date on controller\n            controller.updateDateLastModified(f.lastModified());\n\n            return jspRfsName;\n        } finally {\n            // restore the site root of the request context\n            cms.getRequestContext().setSiteRoot(oldSiteRoot);\n        }\n    }","id":50241,"modified_method":"/**\n     * Updates a JSP page in the \"real\" file system in case the VFS resource has changed.<p>\n     * \n     * Also processes the <code>&lt;%@ cms %&gt;<\/code> tags before the JSP is written to the real FS.\n     * Also recursivly updates all files that are referenced by a <code>&lt;%@ cms %&gt;<\/code> tag \n     * on this page to make sure the file actually exists in the real FS. \n     * All <code>&lt;%@ include %&gt;<\/code> tags are parsed and the name in the tag is translated\n     * from the OpenCms VFS path to the path in the real FS. \n     * The same is done for filenames in <code>&lt;%@ page errorPage=... %&gt;<\/code> tags.\n     * \n     * @param resource the reqested JSP file resource in the VFS\n     * @param controller the controller for the JSP integration\n     * @param updates a Set containing all JSP pages that have been already updated\n     * @return the file name of the updated JSP in the \"real\" FS\n     * \n     * @throws ServletException might be thrown in the process of including the JSP \n     * @throws IOException might be thrown in the process of including the JSP \n     */\n    private synchronized String updateJsp(CmsResource resource, CmsFlexController controller, Set updates)\n    throws IOException, ServletException {\n\n        CmsObject cms = controller.getCmsObject();\n        // can not use save/restore methods since this is called more then once by recursion\n        String oldSiteRoot = cms.getRequestContext().getSiteRoot();\n        try {\n            // all JSP must be exported with full \"root path\" site root information\n            cms.getRequestContext().setSiteRoot(\"\");\n\n            String jspVfsName = cms.readAbsolutePath(resource);\n            String extension;\n            boolean isHardInclude;\n            if ((resource.getLoaderId() == CmsJspLoader.C_RESOURCE_LOADER_ID) \n                && (! jspVfsName.endsWith(C_JSP_EXTENSION))) {\n                // this is a true JSP resource that does not end with \".jsp\"\n                extension = C_JSP_EXTENSION;     \n                isHardInclude = false;\n            } else {\n                // not a JSP resource or already ends with \".jsp\"\n                extension = \"\";\n                isHardInclude = true;\n            }            \n            \n            String jspTargetName = getJspUri(m_jspWebAppRepository, jspVfsName + extension, controller.getCurrentRequest().isOnline());\n            \n            // check if page was already updated\n            if (updates.contains(jspTargetName)) {\n                // no need to write the already included file to the real FS more then once\n                return jspTargetName;\n            }\n            updates.add(jspTargetName);\n\n            String jspPath = getJspUri(m_jspRepository, jspVfsName + extension, controller.getCurrentRequest().isOnline());\n\n            File d = new File(jspPath).getParentFile();\n            if ((d == null) || (d.exists() && !(d.isDirectory() && d.canRead()))) {\n                if (OpenCms.getLog(this).isErrorEnabled()) {\n                    OpenCms.getLog(this).error(\"Could not access directory for \" + jspPath);\n                }\n                throw new ServletException(\"JspLoader: Could not access directory for \" + jspPath);\n            }\n\n            if (!d.exists()) {\n                // create directory structure\n                d.mkdirs();\n            }\n\n            // check if the JSP muse be updated\n            boolean mustUpdate = false;\n            File f = new File(jspPath);\n            if (!f.exists()) {\n                // file does not exist in real FS\n                mustUpdate = true;\n            } else if (f.lastModified() <= resource.getDateLastModified()) {\n                // file in real FS is older then file in VFS\n                mustUpdate = true;\n            } else if (controller.getCurrentRequest().isDoRecompile()) {\n                // recompile is forced with parameter\n                mustUpdate = true;\n            }\n\n            if (mustUpdate) {\n                if (OpenCms.getLog(this).isDebugEnabled()) {\n                    OpenCms.getLog(this).debug(\"JspLoader: Writing JSP file '\" + jspTargetName + \"'\");\n                }\n                byte[] contents;\n                String encoding;\n                try {\n                    contents = CmsFile.upgrade(resource, cms).getContents();\n                    // check the \"content-encoding\" property for the JSP\n                    encoding = cms.readPropertyObject(\n                        jspVfsName,\n                        I_CmsConstants.C_PROPERTY_CONTENT_ENCODING,\n                        false).getValue(C_DEFAULT_JSP_ENCODING);\n                    encoding = encoding.trim().toUpperCase();\n                } catch (CmsException e) {\n                    controller.setThrowable(e, jspVfsName);\n                    throw new ServletException(\"JspLoader: Could not access JSP file '\" + jspVfsName + \"'\", e);\n                }\n\n                try {\n                    // parse the JSP and modify OpenCms critical directives\n                    contents = parseJsp(contents, encoding, controller, updates, isHardInclude);\n                    // write the parsed JSP content to the real FS\n                    FileOutputStream fs = new FileOutputStream(f);\n                    fs.write(contents);\n                    fs.close();\n                    contents = null;\n\n                    if (OpenCms.getLog(this).isInfoEnabled()) {\n                        OpenCms.getLog(this).info(\n                            \"Updated JSP file \\\"\"\n                                + jspTargetName\n                                + \"\\\" for resource \\\"\"\n                                + cms.readAbsolutePath(resource)\n                                + \"\\\"\");\n                    }\n                } catch (FileNotFoundException e) {\n                    throw new ServletException(\"JspLoader: Could not write to file '\" + f.getName() + \"'\\n\" + e, e);\n                }\n            }\n\n            // update \"last modified\" date on controller\n            controller.updateDateLastModified(f.lastModified());\n\n            return jspTargetName;\n        } finally {\n            // restore the site root of the request context\n            cms.getRequestContext().setSiteRoot(oldSiteRoot);\n        }\n    }","commit_id":"6c18d6d43c0a4f53a9610c9a3fe24a301f4da071","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Updates a JSP page in the \"real\" file system in case the VFS resource has changed based on the resource name.<p>\n     * \n     * Gernates a resource based on the provided name and calls {@link #updateJsp(CmsResource, CmsFlexController, Set)}.<p>\n     * \n     * @param vfsName the name of the JSP file resource in the VFS\n     * @param controller the controller for the JSP integration\n     * @param includes a Set containing all JSP pages that have been already included (i.e. updated)\n     * @return the file name of the updated JSP in the \"real\" FS\n     */\n    private String updateJsp(String vfsName, CmsFlexController controller, Set includes) {\n        String jspVfsName = CmsLinkManager.getAbsoluteUri(\n            vfsName, \n            controller.getCurrentRequest().getElementUri());\n        if (OpenCms.getLog(this).isDebugEnabled()) {\n            OpenCms.getLog(this).debug(\"JspLoader: Trying to update JSP from VFS file '\" + jspVfsName + \"'\");\n        }\n        String jspRfsName = null;\n        try {\n            // make sure the jsp referenced file is generated\n            CmsResource includeResource = controller.getCmsObject().readFileHeader(jspVfsName);\n            updateJsp(includeResource, controller, includes);\n            jspRfsName = getJspUri(\n                controller.getCmsObject().readAbsolutePath(includeResource), \n                controller.getCurrentRequest().isOnline());\n            if (OpenCms.getLog(this).isDebugEnabled()) {\n                OpenCms.getLog(this).debug(\"JspLoader: Name of JSP in real FS is '\" + jspRfsName + \"'\");\n            }            \n        } catch (Exception e) {\n            jspRfsName = null;\n            if (OpenCms.getLog(this).isDebugEnabled()) {\n                OpenCms.getLog(this).debug(\"JspLoader: Error while udating included JSP file '\" + jspVfsName + \"'\\n\", e);\n            }\n        }\n        return jspRfsName;\n    }","id":50242,"modified_method":"/**\n     * Updates a JSP page in the \"real\" file system in case the VFS resource has changed based on the resource name.<p>\n     * \n     * Gernates a resource based on the provided name and calls {@link #updateJsp(CmsResource, CmsFlexController, Set)}.<p>\n     * \n     * @param vfsName the name of the JSP file resource in the VFS\n     * @param controller the controller for the JSP integration\n     * @param includes a Set containing all JSP pages that have been already included (i.e. updated)\n     * @return the file name of the updated JSP in the \"real\" FS\n     */\n    private String updateJsp(String vfsName, CmsFlexController controller, Set includes) {\n        String jspVfsName = CmsLinkManager.getAbsoluteUri(\n            vfsName, \n            controller.getCurrentRequest().getElementUri());\n        if (OpenCms.getLog(this).isDebugEnabled()) {\n            OpenCms.getLog(this).debug(\"JspLoader: Trying to update JSP from VFS file '\" + jspVfsName + \"'\");\n        }\n        String jspRfsName = null;\n        try {\n            // make sure the jsp referenced file is generated\n            CmsResource includeResource = controller.getCmsObject().readFileHeader(jspVfsName);\n            jspRfsName = updateJsp(includeResource, controller, includes);\n            if (OpenCms.getLog(this).isDebugEnabled()) {\n                OpenCms.getLog(this).debug(\"JspLoader: Name of JSP in real FS is '\" + jspRfsName + \"'\");\n            }            \n        } catch (Exception e) {\n            jspRfsName = null;\n            if (OpenCms.getLog(this).isDebugEnabled()) {\n                OpenCms.getLog(this).debug(\"JspLoader: Error while udating included JSP file '\" + jspVfsName + \"'\\n\", e);\n            }\n        }\n        return jspRfsName;\n    }","commit_id":"6c18d6d43c0a4f53a9610c9a3fe24a301f4da071","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Returns the uri for a given JSP in the \"real\" file system, \n     * i.e. the path in the file\n     * system relative to the web application directory.\n     *\n     * @param name The name of the JSP file \n     * @param online Flag to check if this is request is online or not\n     * @return The full uri to the JSP\n     */\n    private String getJspUri(String name, boolean online) {\n\n        StringBuffer result = new StringBuffer(64);\n        result.append(m_jspWebAppRepository);\n        result.append(online ? \"online\" : \"offline\");\n        result.append(getJspName(name));\n        return result.toString();\n    }","id":50243,"modified_method":"/**\n     * Returns the uri for a given JSP in the \"real\" file system, \n     * i.e. the path in the file\n     * system relative to the web application directory.\n     *\n     * @param name The name of the JSP file \n     * @param online Flag to check if this is request is online or not\n     * @return The full uri to the JSP\n     */\n    private String getJspUri(String repository, String name, boolean online) {\n\n        StringBuffer result = new StringBuffer(64);\n        result.append(repository);\n        result.append(online ? \"online\" : \"offline\");\n        result.append(name);\n        return result.toString();\n    }","commit_id":"6c18d6d43c0a4f53a9610c9a3fe24a301f4da071","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Returns a template loader facade for the given file.<p>\n     * \n     * @param cms the current cms context\n     * @param resource the requested file\n     * @return a resource loader facade for the given file\n     * @throws CmsException if something goes wrong\n     */\n    public CmsTemplateLoaderFacade getTemplateLoaderFacade(CmsObject cms, CmsResource resource) throws CmsException {        \n        String absolutePath = cms.readAbsolutePath(resource);        \n        String templateProp = cms.readProperty(absolutePath, I_CmsConstants.C_PROPERTY_TEMPLATE);       \n\n        if (templateProp == null) {\n            // no template property defined, this is a must for facade loaders\n            throw new CmsLoaderException(\"Property '\" + I_CmsConstants.C_PROPERTY_TEMPLATE + \"' undefined for file \" + absolutePath);\n        }        \n\n        CmsResource template = cms.readFile(templateProp);\n        return new CmsTemplateLoaderFacade(getLoader(template.getLoaderId()), resource, template);\n    }","id":50244,"modified_method":"/**\n     * Returns a template loader facade for the given file.<p>\n     * \n     * @param cms the current cms context\n     * @param resource the requested file\n     * @return a resource loader facade for the given file\n     * @throws CmsException if something goes wrong\n     */\n    public CmsTemplateLoaderFacade getTemplateLoaderFacade(CmsObject cms, CmsResource resource) throws CmsException {        \n        String absolutePath = cms.readAbsolutePath(resource);        \n        String templateProp = cms.readPropertyObject(absolutePath, I_CmsConstants.C_PROPERTY_TEMPLATE, false).getValue();       \n\n        if (templateProp == null) {\n            // no template property defined, this is a must for facade loaders\n            throw new CmsLoaderException(\"Property '\" + I_CmsConstants.C_PROPERTY_TEMPLATE + \"' undefined for file \" + absolutePath);\n        }        \n\n        CmsResource template = cms.readFile(templateProp);\n        return new CmsTemplateLoaderFacade(getLoader(template.getLoaderId()), resource, template);\n    }","commit_id":"6c18d6d43c0a4f53a9610c9a3fe24a301f4da071","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Starts generating the output.\n     * Calls the canonical root with the appropriate template class.\n     *\n     * @param cms CmsObject Object for accessing system resources\n     * @param file CmsFile Object with the selected resource to be shown\n     * @param req the CmsRequest\n     * @return the generated output for the file\n     * @throws CmsException if something goes wrong\n     */\n    protected byte[] generateOutput(CmsObject cms, CmsFile file, I_CmsRequest req) throws CmsException {\n        byte[] output = null;\n\n        // hashtable for collecting all parameters.\n        Hashtable newParameters = new Hashtable();\n        String uri = cms.getRequestContext().getUri();\n\n        // collect xml template information\n        String absolutePath = cms.readAbsolutePath(file);\n        if (OpenCms.getLog(this).isDebugEnabled()) {\n            OpenCms.getLog(this).debug(\"absolutePath=\" + absolutePath);\n        }\n        String templateProp = cms.readProperty(absolutePath, I_CmsConstants.C_PROPERTY_TEMPLATE);\n        if (OpenCms.getLog(this).isDebugEnabled()) {\n            OpenCms.getLog(this).debug(\"templateProp=\" + templateProp);\n        }\n        String templateClassProp = cms.readProperty(absolutePath, I_CmsConstants.C_PROPERTY_BODY_CLASS, false, I_CmsConstants.C_XML_CONTROL_DEFAULT_CLASS);\n        if (OpenCms.getLog(this).isDebugEnabled()) {\n            OpenCms.getLog(this).debug(\"templateClassProp=\" + templateClassProp);\n        }\n        \n        // ladies and gentelman: and now for something completly different \n        String xmlTemplateContent = null;\n        if (templateProp != null) {\n            // i got a black magic template,\n            StringBuffer buf = new StringBuffer(256);\n            buf.append(\"<?xml version=\\\"1.0\\\" encoding=\\\"ISO-8859-1\\\"?>\\n\");\n            buf.append(\"<PAGE>\\n<class>\");\n            buf.append(I_CmsConstants.C_XML_CONTROL_DEFAULT_CLASS);\n            buf.append(\"<\/class>\\n<masterTemplate>\");\n            // i got a black magic template,\n            buf.append(templateProp);\n            buf.append(\"<\/masterTemplate>\\n<ELEMENTDEF name=\\\"body\\\">\\n<CLASS>\");\n            buf.append(templateClassProp);\n            buf.append(\"<\/CLASS>\\n<TEMPLATE>\");\n            // i got a black magic template got me so blind I can't see,\n            buf.append(uri);\n            buf.append(\"<\/TEMPLATE>\\n<\/ELEMENTDEF>\\n<\/PAGE>\\n\");              \n            // i got a black magic template it's try'in to make a devil out of me...\n            xmlTemplateContent = buf.toString();\n            uri += I_CmsConstants.C_XML_CONTROL_FILE_SUFFIX; \n        }\n        \n        // Parameters used for element cache\n        boolean elementCacheEnabled = CmsXmlTemplateLoader.isElementCacheEnabled();\n        CmsElementCache elementCache = null;\n        CmsUriDescriptor uriDesc = null;\n        CmsUri cmsUri = null;\n\n        String templateClass = null;\n        String templateName = null;\n        CmsXmlControlFile doc = null;\n\n        if (elementCacheEnabled) {\n            // Get the global element cache object\n            elementCache = CmsXmlTemplateLoader.getElementCache();\n\n            // Prepare URI Locator\n            uriDesc = new CmsUriDescriptor(uri);\n            cmsUri = elementCache.getUriLocator().get(uriDesc);\n            // check if cached\n            if (OpenCms.getLog(this).isDebugEnabled()) {\n                OpenCms.getLog(this).debug(\"found cmsUri=\" + cmsUri);\n        }\n            if ((cmsUri != null) && !cmsUri.getElementDescriptor().getTemplateName().equalsIgnoreCase(templateProp)) {\n                if (OpenCms.getLog(this).isDebugEnabled()) {\n                    OpenCms.getLog(this).debug(\"cmsUri has different template: \" + cmsUri.getElementDescriptor().getTemplateName()\n                            + \" than current template: \" + templateProp + \", not using cmsUri from cache\");\n                }\n                cmsUri = null;\n            }            \n        }\n\n        // check if printversion is requested\n        String replace = req.getParameter(C_ELEMENT_REPLACE);\n        boolean elementreplace = false;\n        CmsElementDefinition replaceDef = null;\n        if (replace != null) {\n            int index = replace.indexOf(\":\");\n            if (index != -1) {\n                elementreplace = true;\n                cmsUri = null;\n                String elementName = replace.substring(0, index);\n                String replaceUri = replace.substring(index+1);               \n                replaceDef = new CmsElementDefinition(elementName,\n                                        I_CmsConstants.C_XML_CONTROL_DEFAULT_CLASS,\n                                        replaceUri, null, new Hashtable());\n                newParameters.put(C_ELEMENT_REPLACE + \"_VFS_\" + elementName, cms.getRequestContext().addSiteRoot(replaceUri));\n            }\n        }\n\n        if ((cmsUri == null) || !elementCacheEnabled) {\n            // Entry point to page file analysis.\n            // For performance reasons this should only be done if the element\n            // cache is not activated or if it's activated but no URI object could be found.\n\n            // Parse the page file\n            try {\n                if (xmlTemplateContent == null) {\n                    doc = new CmsXmlControlFile(cms, file);\n                } else {\n                    doc = new CmsXmlControlFile(cms, uri, xmlTemplateContent);\n                }\n            } catch (Exception e) {\n                // there was an error while parsing the document.\n                // No chance to go on here.\n                handleException(cms, e, \"There was an error while parsing XML page file \" + cms.readAbsolutePath(file));\n                return \"\".getBytes();\n            }\n\n            if (! elementCacheEnabled && (replaceDef != null)) {\n                // Required to enable element replacement if element cache is disabled\n                doc.setElementClass(replaceDef.getName(), replaceDef.getClassName());\n                doc.setElementTemplate(replaceDef.getName(), replaceDef.getTemplateName());\n            }\n\n            // Get the names of the master template and the template class from\n            // the parsed page file. Fall back to default value, if template class\n            // is not defined\n            templateClass = doc.getTemplateClass();\n            if (templateClass == null || \"\".equals(templateClass)) {\n                templateClass = this.getClass().getName();\n            }\n            if (templateClass == null || \"\".equals(templateClass)) {\n                templateClass = I_CmsConstants.C_XML_CONTROL_DEFAULT_CLASS;\n            }\n            templateName = doc.getMasterTemplate();\n            if (templateName != null && !\"\".equals(templateName)) {\n                templateName = CmsLinkManager.getAbsoluteUri(templateName, cms.readAbsolutePath(file));\n            }\n\n            // Previously, the template class was loaded here.\n            // We avoid doing this so early, since in element cache mode the template\n            // class is not needed here.\n\n            // Now look for parameters in the page file...\n            // ... first the params of the master template...\n            Enumeration masterTemplateParams = doc.getParameterNames();\n            while (masterTemplateParams.hasMoreElements()) {\n                String paramName = (String)masterTemplateParams.nextElement();\n                String paramValue = doc.getParameter(paramName);\n                newParameters.put(I_CmsConstants.C_ROOT_TEMPLATE_NAME + \".\" + paramName, paramValue);\n            }\n\n            // ... and now the params of all subtemplates\n            Enumeration elementDefinitions = doc.getElementDefinitions();\n            while (elementDefinitions.hasMoreElements()) {\n                String elementName = (String)elementDefinitions.nextElement();\n                if (doc.isElementClassDefined(elementName)) {\n                    newParameters.put(elementName + \"._CLASS_\", doc.getElementClass(elementName));\n                }\n                if (doc.isElementTemplateDefined(elementName)) {\n                    // need to check for the body template here so that non-XMLTemplate templates \n                    // like JSPs know where to find the body defined in the XMLTemplate\n                    String template = doc.getElementTemplate(elementName);\n                    if (xmlTemplateContent == null) {\n                        template = doc.validateBodyPath(cms, template, file);\n                    }\n                    if (I_CmsConstants.C_XML_BODY_ELEMENT.equalsIgnoreCase(elementName)) {\n                        // found body element\n                        if (template != null) {\n                            cms.getRequestContext().setAttribute(I_CmsConstants.C_XML_BODY_ELEMENT, template);\n                        }\n                    } \n                    newParameters.put(elementName + \"._TEMPLATE_\", template);\n                }\n                if (doc.isElementTemplSelectorDefined(elementName)) {\n                    newParameters.put(elementName + \"._TEMPLATESELECTOR_\", doc.getElementTemplSelector(elementName));\n                }\n                Enumeration parameters = doc.getElementParameterNames(elementName);\n                while (parameters.hasMoreElements()) {\n                    String paramName = (String)parameters.nextElement();\n                    String paramValue = doc.getElementParameter(elementName, paramName);\n                    if (paramValue != null) {\n                        newParameters.put(elementName + \".\" + paramName, paramValue);\n                    } else {\n                        if (OpenCms.getLog(this).isInfoEnabled()) {\n                            OpenCms.getLog(this).info(\"Empty parameter \\\"\" + paramName + \"\\\" found.\");\n                        }\n                    }\n                }\n            }\n        }\n\n        // URL parameters ary really dynamic.\n        // We cannot store them in an element cache.\n        // Therefore these parameters must be collected in ANY case!\n\n        String datafor = req.getParameter(\"datafor\");\n        if (datafor == null) {\n            datafor = \"\";\n        } else {\n            if (!\"\".equals(datafor)) {\n                datafor = datafor + \".\";\n            }\n        }\n        Enumeration urlParameterNames = req.getParameterNames();\n        while (urlParameterNames.hasMoreElements()) {\n            String pname = (String)urlParameterNames.nextElement();\n            String paramValue = req.getParameter(pname);\n            if (paramValue != null) {\n                if ((!\"datafor\".equals(pname)) && (!\"_clearcache\".equals(pname))) {\n                    newParameters.put(datafor + pname, paramValue);\n                }\n            } else {\n                if (OpenCms.getLog(this).isInfoEnabled()) {\n                    OpenCms.getLog(this).info(\"Empty URL parameter \\\"\" + pname + \"\\\" found.\");\n                }\n            }\n        }\n\n        if (elementCacheEnabled && (cmsUri == null)) {\n            // ---- element cache stuff --------\n            // No URI could be found in cache.\n            // So create a new URI object with a start element and store it using the UriLocator\n            CmsElementDescriptor elemDesc = new CmsElementDescriptor(templateClass, templateName);\n            CmsElementDefinitionCollection eldefs = doc.getElementDefinitionCollection();\n            if (elementreplace) {\n                // we cant cach this\n                eldefs.add(replaceDef);\n                cmsUri = new CmsUri(elemDesc, eldefs);\n            } else {\n                cmsUri = new CmsUri(elemDesc, eldefs);\n                elementCache.getUriLocator().put(uriDesc, cmsUri);\n            }\n        }\n\n        if (elementCacheEnabled) {\n//        patched 23.1.2004 by ph@ethikom.de: otherwise problems with cached and parsed XML content appear\n            // TODO: Make cache more efficient\n            clearLoaderCache(true, true);\n\n            // now lets get the output\n            if (elementreplace) {\n                output = cmsUri.callCanonicalRoot(elementCache, cms, newParameters);\n            } else {\n                output = elementCache.callCanonicalRoot(cms, newParameters, uri);\n            }\n        } else {\n            // ----- traditional stuff ------\n            // Element cache is deactivated. So let's go on as usual.\n            try {\n                CmsFile masterTemplate = loadMasterTemplateFile(cms, templateName, doc);\n                I_CmsTemplate tmpl = getTemplateClass(templateClass);               \n                if (!(tmpl instanceof I_CmsXmlTemplate)) {\n                    String errorMessage = \"Error in \" + cms.readAbsolutePath(file) + \": \" + templateClass + \" is not a XML template class.\";\n                    if (OpenCms.getLog(this).isErrorEnabled()) {\n                        OpenCms.getLog(this).error(errorMessage);\n                    } \n                    throw new CmsException(errorMessage, CmsException.C_XML_WRONG_TEMPLATE_CLASS);\n                }\n                // TODO: Make cache more efficient\n                clearLoaderCache(true, true);\n                output = callCanonicalRoot(cms, tmpl, masterTemplate, newParameters);\n            } catch (CmsException e) {\n                if (OpenCms.getLog(this).isWarnEnabled()) {\n                    OpenCms.getLog(this);\n                }\n                doc.removeFromFileCache();\n                throw e;\n            }\n        }\n        return output;\n    }","id":50245,"modified_method":"/**\n     * Starts generating the output.\n     * Calls the canonical root with the appropriate template class.\n     *\n     * @param cms CmsObject Object for accessing system resources\n     * @param file CmsFile Object with the selected resource to be shown\n     * @param req the CmsRequest\n     * @return the generated output for the file\n     * @throws CmsException if something goes wrong\n     */\n    protected byte[] generateOutput(CmsObject cms, CmsFile file, I_CmsRequest req) throws CmsException {\n        byte[] output = null;\n\n        // hashtable for collecting all parameters.\n        Hashtable newParameters = new Hashtable();\n        String uri = cms.getRequestContext().getUri();\n\n        // collect xml template information\n        String absolutePath = cms.readAbsolutePath(file);\n        if (OpenCms.getLog(this).isDebugEnabled()) {\n            OpenCms.getLog(this).debug(\"absolutePath=\" + absolutePath);\n        }\n        String templateProp = cms.readPropertyObject(absolutePath, I_CmsConstants.C_PROPERTY_TEMPLATE, false).getValue();\n        if (OpenCms.getLog(this).isDebugEnabled()) {\n            OpenCms.getLog(this).debug(\"templateProp=\" + templateProp);\n        }\n        String templateClassProp = cms.readPropertyObject(absolutePath, I_CmsConstants.C_PROPERTY_BODY_CLASS, false).getValue(I_CmsConstants.C_XML_CONTROL_DEFAULT_CLASS);\n        if (OpenCms.getLog(this).isDebugEnabled()) {\n            OpenCms.getLog(this).debug(\"templateClassProp=\" + templateClassProp);\n        }\n        \n        // ladies and gentelman: and now for something completly different \n        String xmlTemplateContent = null;\n        if (templateProp != null) {\n            // i got a black magic template,\n            StringBuffer buf = new StringBuffer(256);\n            buf.append(\"<?xml version=\\\"1.0\\\" encoding=\\\"ISO-8859-1\\\"?>\\n\");\n            buf.append(\"<PAGE>\\n<class>\");\n            buf.append(I_CmsConstants.C_XML_CONTROL_DEFAULT_CLASS);\n            buf.append(\"<\/class>\\n<masterTemplate>\");\n            // i got a black magic template,\n            buf.append(templateProp);\n            buf.append(\"<\/masterTemplate>\\n<ELEMENTDEF name=\\\"body\\\">\\n<CLASS>\");\n            buf.append(templateClassProp);\n            buf.append(\"<\/CLASS>\\n<TEMPLATE>\");\n            // i got a black magic template got me so blind I can't see,\n            buf.append(uri);\n            buf.append(\"<\/TEMPLATE>\\n<\/ELEMENTDEF>\\n<\/PAGE>\\n\");              \n            // i got a black magic template it's try'in to make a devil out of me...\n            xmlTemplateContent = buf.toString();\n            uri += I_CmsConstants.C_XML_CONTROL_FILE_SUFFIX; \n        }\n        \n        // Parameters used for element cache\n        boolean elementCacheEnabled = CmsXmlTemplateLoader.isElementCacheEnabled();\n        CmsElementCache elementCache = null;\n        CmsUriDescriptor uriDesc = null;\n        CmsUri cmsUri = null;\n\n        String templateClass = null;\n        String templateName = null;\n        CmsXmlControlFile doc = null;\n\n        if (elementCacheEnabled) {\n            // Get the global element cache object\n            elementCache = CmsXmlTemplateLoader.getElementCache();\n\n            // Prepare URI Locator\n            uriDesc = new CmsUriDescriptor(uri);\n            cmsUri = elementCache.getUriLocator().get(uriDesc);\n            // check if cached\n            if (OpenCms.getLog(this).isDebugEnabled()) {\n                OpenCms.getLog(this).debug(\"found cmsUri=\" + cmsUri);\n        }\n            if ((cmsUri != null) && !cmsUri.getElementDescriptor().getTemplateName().equalsIgnoreCase(templateProp)) {\n                if (OpenCms.getLog(this).isDebugEnabled()) {\n                    OpenCms.getLog(this).debug(\"cmsUri has different template: \" + cmsUri.getElementDescriptor().getTemplateName()\n                            + \" than current template: \" + templateProp + \", not using cmsUri from cache\");\n                }\n                cmsUri = null;\n            }            \n        }\n\n        // check if printversion is requested\n        String replace = req.getParameter(C_ELEMENT_REPLACE);\n        boolean elementreplace = false;\n        CmsElementDefinition replaceDef = null;\n        if (replace != null) {\n            int index = replace.indexOf(\":\");\n            if (index != -1) {\n                elementreplace = true;\n                cmsUri = null;\n                String elementName = replace.substring(0, index);\n                String replaceUri = replace.substring(index+1);               \n                replaceDef = new CmsElementDefinition(elementName,\n                                        I_CmsConstants.C_XML_CONTROL_DEFAULT_CLASS,\n                                        replaceUri, null, new Hashtable());\n                newParameters.put(C_ELEMENT_REPLACE + \"_VFS_\" + elementName, cms.getRequestContext().addSiteRoot(replaceUri));\n            }\n        }\n\n        if ((cmsUri == null) || !elementCacheEnabled) {\n            // Entry point to page file analysis.\n            // For performance reasons this should only be done if the element\n            // cache is not activated or if it's activated but no URI object could be found.\n\n            // Parse the page file\n            try {\n                if (xmlTemplateContent == null) {\n                    doc = new CmsXmlControlFile(cms, file);\n                } else {\n                    doc = new CmsXmlControlFile(cms, uri, xmlTemplateContent);\n                }\n            } catch (Exception e) {\n                // there was an error while parsing the document.\n                // No chance to go on here.\n                handleException(cms, e, \"There was an error while parsing XML page file \" + cms.readAbsolutePath(file));\n                return \"\".getBytes();\n            }\n\n            if (! elementCacheEnabled && (replaceDef != null)) {\n                // Required to enable element replacement if element cache is disabled\n                doc.setElementClass(replaceDef.getName(), replaceDef.getClassName());\n                doc.setElementTemplate(replaceDef.getName(), replaceDef.getTemplateName());\n            }\n\n            // Get the names of the master template and the template class from\n            // the parsed page file. Fall back to default value, if template class\n            // is not defined\n            templateClass = doc.getTemplateClass();\n            if (templateClass == null || \"\".equals(templateClass)) {\n                templateClass = this.getClass().getName();\n            }\n            if (templateClass == null || \"\".equals(templateClass)) {\n                templateClass = I_CmsConstants.C_XML_CONTROL_DEFAULT_CLASS;\n            }\n            templateName = doc.getMasterTemplate();\n            if (templateName != null && !\"\".equals(templateName)) {\n                templateName = CmsLinkManager.getAbsoluteUri(templateName, cms.readAbsolutePath(file));\n            }\n\n            // Previously, the template class was loaded here.\n            // We avoid doing this so early, since in element cache mode the template\n            // class is not needed here.\n\n            // Now look for parameters in the page file...\n            // ... first the params of the master template...\n            Enumeration masterTemplateParams = doc.getParameterNames();\n            while (masterTemplateParams.hasMoreElements()) {\n                String paramName = (String)masterTemplateParams.nextElement();\n                String paramValue = doc.getParameter(paramName);\n                newParameters.put(I_CmsConstants.C_ROOT_TEMPLATE_NAME + \".\" + paramName, paramValue);\n            }\n\n            // ... and now the params of all subtemplates\n            Enumeration elementDefinitions = doc.getElementDefinitions();\n            while (elementDefinitions.hasMoreElements()) {\n                String elementName = (String)elementDefinitions.nextElement();\n                if (doc.isElementClassDefined(elementName)) {\n                    newParameters.put(elementName + \"._CLASS_\", doc.getElementClass(elementName));\n                }\n                if (doc.isElementTemplateDefined(elementName)) {\n                    // need to check for the body template here so that non-XMLTemplate templates \n                    // like JSPs know where to find the body defined in the XMLTemplate\n                    String template = doc.getElementTemplate(elementName);\n                    if (xmlTemplateContent == null) {\n                        template = doc.validateBodyPath(cms, template, file);\n                    }\n                    if (I_CmsConstants.C_XML_BODY_ELEMENT.equalsIgnoreCase(elementName)) {\n                        // found body element\n                        if (template != null) {\n                            cms.getRequestContext().setAttribute(I_CmsConstants.C_XML_BODY_ELEMENT, template);\n                        }\n                    } \n                    newParameters.put(elementName + \"._TEMPLATE_\", template);\n                }\n                if (doc.isElementTemplSelectorDefined(elementName)) {\n                    newParameters.put(elementName + \"._TEMPLATESELECTOR_\", doc.getElementTemplSelector(elementName));\n                }\n                Enumeration parameters = doc.getElementParameterNames(elementName);\n                while (parameters.hasMoreElements()) {\n                    String paramName = (String)parameters.nextElement();\n                    String paramValue = doc.getElementParameter(elementName, paramName);\n                    if (paramValue != null) {\n                        newParameters.put(elementName + \".\" + paramName, paramValue);\n                    } else {\n                        if (OpenCms.getLog(this).isInfoEnabled()) {\n                            OpenCms.getLog(this).info(\"Empty parameter \\\"\" + paramName + \"\\\" found.\");\n                        }\n                    }\n                }\n            }\n        }\n\n        // URL parameters ary really dynamic.\n        // We cannot store them in an element cache.\n        // Therefore these parameters must be collected in ANY case!\n\n        String datafor = req.getParameter(\"datafor\");\n        if (datafor == null) {\n            datafor = \"\";\n        } else {\n            if (!\"\".equals(datafor)) {\n                datafor = datafor + \".\";\n            }\n        }\n        Enumeration urlParameterNames = req.getParameterNames();\n        while (urlParameterNames.hasMoreElements()) {\n            String pname = (String)urlParameterNames.nextElement();\n            String paramValue = req.getParameter(pname);\n            if (paramValue != null) {\n                if ((!\"datafor\".equals(pname)) && (!\"_clearcache\".equals(pname))) {\n                    newParameters.put(datafor + pname, paramValue);\n                }\n            } else {\n                if (OpenCms.getLog(this).isInfoEnabled()) {\n                    OpenCms.getLog(this).info(\"Empty URL parameter \\\"\" + pname + \"\\\" found.\");\n                }\n            }\n        }\n\n        if (elementCacheEnabled && (cmsUri == null)) {\n            // ---- element cache stuff --------\n            // No URI could be found in cache.\n            // So create a new URI object with a start element and store it using the UriLocator\n            CmsElementDescriptor elemDesc = new CmsElementDescriptor(templateClass, templateName);\n            CmsElementDefinitionCollection eldefs = doc.getElementDefinitionCollection();\n            if (elementreplace) {\n                // we cant cach this\n                eldefs.add(replaceDef);\n                cmsUri = new CmsUri(elemDesc, eldefs);\n            } else {\n                cmsUri = new CmsUri(elemDesc, eldefs);\n                elementCache.getUriLocator().put(uriDesc, cmsUri);\n            }\n        }\n\n        if (elementCacheEnabled) {\n//        patched 23.1.2004 by ph@ethikom.de: otherwise problems with cached and parsed XML content appear\n            // TODO: Make cache more efficient\n            clearLoaderCache(true, true);\n\n            // now lets get the output\n            if (elementreplace) {\n                output = cmsUri.callCanonicalRoot(elementCache, cms, newParameters);\n            } else {\n                output = elementCache.callCanonicalRoot(cms, newParameters, uri);\n            }\n        } else {\n            // ----- traditional stuff ------\n            // Element cache is deactivated. So let's go on as usual.\n            try {\n                CmsFile masterTemplate = loadMasterTemplateFile(cms, templateName, doc);\n                I_CmsTemplate tmpl = getTemplateClass(templateClass);               \n                if (!(tmpl instanceof I_CmsXmlTemplate)) {\n                    String errorMessage = \"Error in \" + cms.readAbsolutePath(file) + \": \" + templateClass + \" is not a XML template class.\";\n                    if (OpenCms.getLog(this).isErrorEnabled()) {\n                        OpenCms.getLog(this).error(errorMessage);\n                    } \n                    throw new CmsException(errorMessage, CmsException.C_XML_WRONG_TEMPLATE_CLASS);\n                }\n                // TODO: Make cache more efficient\n                clearLoaderCache(true, true);\n                output = callCanonicalRoot(cms, tmpl, masterTemplate, newParameters);\n            } catch (CmsException e) {\n                if (OpenCms.getLog(this).isWarnEnabled()) {\n                    OpenCms.getLog(this);\n                }\n                doc.removeFromFileCache();\n                throw e;\n            }\n        }\n        return output;\n    }","commit_id":"1237c63d029a214db0374cd86361fdebfe599de5","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * @see org.opencms.loader.I_CmsResourceLoader#service(org.opencms.file.CmsObject, org.opencms.file.CmsResource, javax.servlet.ServletRequest, javax.servlet.ServletResponse)\n     */\n    public void service(CmsObject cms, CmsResource file, ServletRequest req, ServletResponse res)\n    throws CmsException, IOException {\n        \n        long timer1;\n        if (DEBUG > 0) {\n            timer1 = System.currentTimeMillis();        \n            System.err.println(\"============ CmsXmlTemplateLoader loading: \" + cms.readAbsolutePath(file));            \n            System.err.println(\"CmsXmlTemplateLoader.service() cms uri is: \" + cms.getRequestContext().getUri());            \n        }\n        // save the original context settings\n        String rnc = cms.getRequestContext().getEncoding().trim();\n        // String oldUri = cms.getRequestContext().getUri();\n        \n        initLegacyRequest(cms, (HttpServletRequest)req, (HttpServletResponse)res);        \n        I_CmsRequest cms_req = CmsXmlTemplateLoader.getRequest(cms.getRequestContext());        \n        HttpServletRequest originalreq = cms_req.getOriginalRequest();\n        \n        try {                        \n            // get the CmsRequest\n            byte[] result = null;\n            org.opencms.file.CmsFile fx = cms.readFile(cms.readAbsolutePath(file));            \n            // care about encoding issues\n            String dnc = OpenCms.getSystemInfo().getDefaultEncoding().trim();\n            String enc = cms.readProperty(cms.readAbsolutePath(fx), I_CmsConstants.C_PROPERTY_CONTENT_ENCODING, true, dnc).trim();\n            // fake the called URI (otherwise XMLTemplate / ElementCache would not work)\n            // cms.getRequestContext().setUri(cms.readAbsolutePath(fx));            \n            cms_req.setOriginalRequest((HttpServletRequest)req);\n            cms.getRequestContext().setEncoding(enc);      \n            if (DEBUG > 1) {\n                System.err.println(\"CmsXmlTemplateLoader.service(): Encodig set to \" + cms.getRequestContext().getEncoding());\n                System.err.println(\"CmsXmlTemplateLoader.service(): Uri set to \" + cms.getRequestContext().getUri());\n            }\n            // process the included XMLTemplate\n            result = generateOutput(cms, fx, cms_req);                                    \n            // append the result to the output stream\n            if (result != null) {\n                if (DEBUG > 1) {\n                    System.err.println(\"CmsXmlTemplateLoader.service(): encoding=\" + enc + \" requestEncoding=\" + rnc + \" defaultEncoding=\" + dnc);\n                }\n                res.getOutputStream().write(result);\n            }        \n        } finally {\n            // restore the context settings\n            cms_req.setOriginalRequest(originalreq);\n            cms.getRequestContext().setEncoding(rnc);\n            // cms.getRequestContext().setUri(oldUri);\n            if (DEBUG > 1) {\n                System.err.println(\"CmsXmlTemplateLoader.service(): Encodig reset to \" + cms.getRequestContext().getEncoding());\n                System.err.println(\"CmsXmlTemplateLoader.service(): Uri reset to \" + cms.getRequestContext().getUri());\n            }\n        }\n        \n        if (DEBUG > 0) {\n            long timer2 = System.currentTimeMillis() - timer1;        \n            System.err.println(\"============ CmsXmlTemplateLoader time delivering XmlTemplate for \" + cms.readAbsolutePath(file) + \": \" + timer2 + \"ms\");            \n        }\n    }","id":50246,"modified_method":"/**\n     * @see org.opencms.loader.I_CmsResourceLoader#service(org.opencms.file.CmsObject, org.opencms.file.CmsResource, javax.servlet.ServletRequest, javax.servlet.ServletResponse)\n     */\n    public void service(CmsObject cms, CmsResource file, ServletRequest req, ServletResponse res)\n    throws CmsException, IOException {\n        \n        long timer1;\n        if (DEBUG > 0) {\n            timer1 = System.currentTimeMillis();        \n            System.err.println(\"============ CmsXmlTemplateLoader loading: \" + cms.readAbsolutePath(file));            \n            System.err.println(\"CmsXmlTemplateLoader.service() cms uri is: \" + cms.getRequestContext().getUri());            \n        }\n        // save the original context settings\n        String rnc = cms.getRequestContext().getEncoding().trim();\n        // String oldUri = cms.getRequestContext().getUri();\n        \n        initLegacyRequest(cms, (HttpServletRequest)req, (HttpServletResponse)res);        \n        I_CmsRequest cms_req = CmsXmlTemplateLoader.getRequest(cms.getRequestContext());        \n        HttpServletRequest originalreq = cms_req.getOriginalRequest();\n        \n        try {                        \n            // get the CmsRequest\n            byte[] result = null;\n            org.opencms.file.CmsFile fx = cms.readFile(cms.readAbsolutePath(file));            \n            // care about encoding issues\n            String dnc = OpenCms.getSystemInfo().getDefaultEncoding().trim();\n            String enc = cms.readPropertyObject(cms.readAbsolutePath(fx), I_CmsConstants.C_PROPERTY_CONTENT_ENCODING, true).getValue(dnc).trim();\n            // fake the called URI (otherwise XMLTemplate / ElementCache would not work)\n            // cms.getRequestContext().setUri(cms.readAbsolutePath(fx));            \n            cms_req.setOriginalRequest((HttpServletRequest)req);\n            cms.getRequestContext().setEncoding(enc);      \n            if (DEBUG > 1) {\n                System.err.println(\"CmsXmlTemplateLoader.service(): Encodig set to \" + cms.getRequestContext().getEncoding());\n                System.err.println(\"CmsXmlTemplateLoader.service(): Uri set to \" + cms.getRequestContext().getUri());\n            }\n            // process the included XMLTemplate\n            result = generateOutput(cms, fx, cms_req);                                    \n            // append the result to the output stream\n            if (result != null) {\n                if (DEBUG > 1) {\n                    System.err.println(\"CmsXmlTemplateLoader.service(): encoding=\" + enc + \" requestEncoding=\" + rnc + \" defaultEncoding=\" + dnc);\n                }\n                res.getOutputStream().write(result);\n            }        \n        } finally {\n            // restore the context settings\n            cms_req.setOriginalRequest(originalreq);\n            cms.getRequestContext().setEncoding(rnc);\n            // cms.getRequestContext().setUri(oldUri);\n            if (DEBUG > 1) {\n                System.err.println(\"CmsXmlTemplateLoader.service(): Encodig reset to \" + cms.getRequestContext().getEncoding());\n                System.err.println(\"CmsXmlTemplateLoader.service(): Uri reset to \" + cms.getRequestContext().getUri());\n            }\n        }\n        \n        if (DEBUG > 0) {\n            long timer2 = System.currentTimeMillis() - timer1;        \n            System.err.println(\"============ CmsXmlTemplateLoader time delivering XmlTemplate for \" + cms.readAbsolutePath(file) + \": \" + timer2 + \"ms\");            \n        }\n    }","commit_id":"1237c63d029a214db0374cd86361fdebfe599de5","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Returns the NavText property value of the current resource.<p>\n     * \n     * @return the NavText property value of the current resource\n     */\n    public String getCurrentNavText() {\n        try {\n            String navText = getCms().readProperty(getParamResource(), I_CmsConstants.C_PROPERTY_NAVTEXT);\n            if (navText == null) {\n                navText = \"\";\n            }\n            return navText;\n        } catch (CmsException e) {\n            return \"\";\n        }\n        \n    }","id":50247,"modified_method":"/**\n     * Returns the NavText property value of the current resource.<p>\n     * \n     * @return the NavText property value of the current resource\n     */\n    public String getCurrentNavText() {\n        try {\n            String navText = getCms().readPropertyObject(getParamResource(), I_CmsConstants.C_PROPERTY_NAVTEXT, false).getValue();\n            if (navText == null) {\n                navText = \"\";\n            }\n            return navText;\n        } catch (CmsException e) {\n            return \"\";\n        }\n        \n    }","commit_id":"317d0da0a5917c5840984ac5a178542a20ef3a89","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Returns the html for the explorer file list.<p>\n     *\n     * @return the html for the explorer file list\n     */\n    public String getFileList() { \n        // if mode is \"listonly\", only the list will be shown\n        boolean galleryView = \"galleryview\".equals(getSettings().getExplorerMode()); \n        // if mode is \"projectview\", all changed files in that project will be shown\n        boolean projectView = \"projectview\".equals(getSettings().getExplorerMode());\n        // if VFS links should be displayed, this is true\n        boolean showVfsLinks = getSettings().getExplorerShowLinks();\n\n        CmsResource currentResource = null;\n                \n        String currentFolder = getSettings().getExplorerResource();\n        boolean found = true;\n        try {\n            currentResource = getCms().readFileHeader(currentFolder);\n        } catch (CmsException e) {\n            // file was not readable\n            found = false;\n        }\n        if (found) {\n            if (showVfsLinks) {\n                // file / folder exists and is readable\n                currentFolder = \"vfslink:\" + currentFolder;\n            }\n        } else {\n            // show the root folder in case of an error and reset the state\n            currentFolder = \"/\";\n            showVfsLinks = false;\n            try {\n                currentResource = getCms().readFileHeader(currentFolder);\n            } catch (CmsException e) {\n                // should not happen\n            }            \n        }\n        \n        // get the currentFolder Id\n        CmsUUID currentFolderId;\n        if (currentResource.isFile()) {\n            currentFolderId = currentResource.getParentStructureId();                    \n        } else {                \n            currentFolderId = currentResource.getStructureId();\n        }\n        \n        // start creating content\n        StringBuffer content = new StringBuffer(2048);\n        content.append(\"function initialize() {\\n\");\n\n        content.append(\"top.mode=\\\"\");        \n        content.append(getSettings().getExplorerMode());\n        content.append(\"\\\";\\n\");\n\n        content.append(\"top.showlinks=\");        \n        content.append(showVfsLinks);\n        content.append(\";\\n\");\n        \n        // the autolock setting\n        content.append(\"top.autolock=\");        \n        content.append(OpenCms.getWorkplaceManager().autoLockResources());\n        content.append(\";\\n\");\n        \n        // the button type setting\n        content.append(\"top.buttonType=\");        \n        content.append(getSettings().getUserSettings().getExplorerButtonStyle());\n        content.append(\";\\n\");\n\n        // the help_url\n        content.append(\"top.head.helpUrl='explorer/index.html';\\n\");\n        // the project\n        content.append(\"top.setProject(\");\n        content.append(getSettings().getProject());\n        content.append(\");\\n\");\n        // the onlineProject\n        content.append(\"top.setOnlineProject(\");\n        content.append(I_CmsConstants.C_PROJECT_ONLINE_ID);\n        content.append(\");\\n\");\n        // set the writeAccess for the current Folder       \n        boolean writeAccess = \"explorerview\".equals(getSettings().getExplorerMode());\n        if (writeAccess && (! showVfsLinks)) {        \n            try {\n                CmsFolder test = getCms().readFolder(currentFolder);\n                writeAccess = getCms().isInsideCurrentProject(test);\n            } catch (CmsException e) {\n                writeAccess = false;\n            }\n        }\n        content.append(\"top.enableNewButton(\");\n        content.append(writeAccess);\n        content.append(\");\\n\");\n        // the folder\n        content.append(\"top.setDirectory(\\\"\");\n        content.append(currentFolderId.hashCode());\n        content.append(\"\\\",\\\"\");\n        if (showVfsLinks) {\n            content.append(\"vfslink:\");\n            content.append(getSettings().getExplorerResource());\n        } else {\n            content.append(CmsResource.getFolderPath(getSettings().getExplorerResource()));\n        }\n        content.append(\"\\\");\\n\");\n        content.append(\"top.rD();\\n\");\n        List reloadTreeFolders = (List)getJsp().getRequest().getAttribute(C_REQUEST_ATTRIBUTE_RELOADTREE);\n        if (reloadTreeFolders != null) {\n            // folder tree has to be reloaded after copy, delete, move, rename operation\n            String reloadFolder = \"\";\n            for (int i=0; i<reloadTreeFolders.size(); i++) {\n                reloadFolder = (String)reloadTreeFolders.get(i);\n                content.append(\"top.addNodeToLoad(\\\"\" + reloadFolder + \"\\\");\\n\");\n            }\n            content.append(\"top.reloadNodeList();\\n\");\n        }\n        content.append(\"\\n\");\n\n        // now check which filelist colums we want to show\n        int preferences = getUserPreferences();\n        \n        boolean showTitle = (preferences & I_CmsWpConstants.C_FILELIST_TITLE) > 0;\n        boolean showPermissions = (preferences & I_CmsWpConstants.C_FILELIST_PERMISSIONS) > 0;\n        boolean showSize = (preferences & I_CmsWpConstants.C_FILELIST_SIZE) > 0;\n        boolean showDateLastModified = (preferences & I_CmsWpConstants.C_FILELIST_DATE_LASTMODIFIED) > 0;\n        boolean showUserWhoLastModified = (preferences & I_CmsWpConstants.C_FILELIST_USER_LASTMODIFIED) > 0;\n        boolean showDateCreated = (preferences & I_CmsWpConstants.C_FILELIST_DATE_CREATED) > 0;\n        boolean showUserWhoCreated = (preferences & I_CmsWpConstants.C_FILELIST_USER_CREATED) > 0;\n\n        // now get the entries for the filelist\n        Vector resources = getRessources(getSettings().getExplorerResource());\n\n        // if a folder contains to much entrys we split them to pages of C_ENTRYS_PER_PAGE length\n        int startat = 0;\n        int stopat = resources.size();\n        int selectedPage = 1;\n        int numberOfPages = 0;\n        int maxEntrys = getSettings().getUserSettings().getExplorerFileEntries();\n        \n        if (!(galleryView || projectView || showVfsLinks)) {\n            selectedPage = getSettings().getExplorerPage();\n            if (stopat > maxEntrys) {\n                // we have to split\n                numberOfPages = (stopat / maxEntrys) + 1;\n                if (selectedPage > numberOfPages) {\n                    // the user has changed the folder and then selected a page for the old folder\n                    selectedPage = 1;\n                }\n                startat = (selectedPage - 1) * maxEntrys;\n                if ((startat + maxEntrys) < stopat) {\n                    stopat = startat + maxEntrys;\n                }\n            }\n        }\n        \n        // read the list of project resource to select which resource is \"inside\" or \"outside\" \n        List projectResources;\n        try {\n            projectResources = getCms().readProjectResources(getCms().getRequestContext().currentProject());\n        } catch (CmsException e) {\n            // use an empty list (all resources are \"outside\")\n            projectResources = new ArrayList();\n        }\n\n        for (int i = startat; i < stopat; i++) {\n            CmsResource res = (CmsResource)resources.elementAt(i);\n            CmsLock lock = null;\n            String path = getCms().readAbsolutePath(res);\n            \n            try {\n                lock = getCms().getLock(res);\n            } catch (CmsException e) {\n                lock = CmsLock.getNullLock();\n            \n                if (OpenCms.getLog(this).isErrorEnabled()) { \n                    OpenCms.getLog(this).error(\"Error getting lock state for resource \" + res, e);\n                }             \n            }      \n            \n            content.append(\"top.aF(\");\n            \n            // position 1: name\n            content.append(\"\\\"\");\n            content.append(res.getName());\n            content.append(\"\\\",\");\n            \n            // position 2: path\n            if (projectView || showVfsLinks) {\n                content.append(\"\\\"\");\n                // TODO: Check this (won't work with new repository)\n                content.append(path);\n                content.append(\"\\\",\");\n            } else {\n                //is taken from top.setDirectory\n                content.append(\"\\\"\\\",\");\n            }\n            \n            // position 3: title\n            if (showTitle) {\n                String title = \"\";\n                try {\n                    title = getCms().readProperty(getCms().readAbsolutePath(res), I_CmsConstants.C_PROPERTY_TITLE);\n                } catch (CmsException e) {\n                    // ignore\n                }\n                if (title == null) {\n                    title = \"\";\n                }\n                content.append(\"\\\"\");\n                if (title != null) {\n                    content.append(CmsEncoder.escapeHtml(title));\n                }\n                content.append(\"\\\",\");\n                \n            } else {\n                content.append(\"\\\"\\\",\");\n            }\n            \n            // position 4: type\n            content.append(res.getType());\n            content.append(\",\");\n            \n            // position 5: link count\n            if (res.getLinkCount() > 1) {\n                // links are present\n                if (res.isLabeled()) {\n                    // there is at least one link in a marked site\n                    content.append(\"2\");\n                } else {\n                    // common links are present\n                    content.append(\"1\");\n                }\n            } else {\n                // no links to the resource are in the VFS\n                content.append(\"0\");\n            }\n            content.append(\",\");    \n                    \n            // position 6: size\n            if (res.isFolder() || (!showSize)) {\n                content.append(\"\\\"\\\",\");\n            } else {\n                content.append(res.getLength());\n                content.append(\",\");                \n            }\n            \n            // position 7: state\n            content.append(res.getState());\n            content.append(\",\");     \n                   \n            // position 8: project\n            int projectId = lock.isNullLock() ? res.getProjectLastModified() : lock.getProjectId();\n            content.append(projectId);\n            content.append(\",\");      \n                                   \n            // position 9: date of last modification\n            if (showDateLastModified) {\n                content.append(\"\\\"\");\n                content.append(getSettings().getMessages().getDateTime(res.getDateLastModified()));\n                content.append(\"\\\",\");\n                \n            } else {\n                content.append(\"\\\"\\\",\");\n            }\n            \n            // position 10: user who last modified the resource\n            if (showUserWhoLastModified) {\n                content.append(\"\\\"\");  \n                try {            \n                    content.append(getCms().readUser(res.getUserLastModified()).getName());\n                } catch (CmsException e) {\n                   content.append(e.getMessage());\n                }\n                content.append(\"\\\",\");                \n            } else {\n                content.append(\"\\\"\\\",\");\n            }\n            \n            // position 11: date of creation\n            if (showDateCreated) {\n                content.append(\"\\\"\");\n                content.append(getSettings().getMessages().getDateTime(res.getDateCreated()));\n                content.append(\"\\\",\");\n                \n            } else {\n                content.append(\"\\\"\\\",\");\n            }     \n                \n            // position 12 : user who created the resource \n            if (showUserWhoCreated) {\n                content.append(\"\\\"\");\n                try {\n                    content.append(getCms().readUser(res.getUserCreated()).getName());\n                } catch (CmsException e) {\n                    content.append(e.getMessage());\n                }\n                content.append(\"\\\",\");\n            } else {\n                content.append(\"\\\"\\\",\");\n            }\n            \n            // position 13: permissions\n            if (showPermissions) {\n                content.append(\"\\\"\");  \n                try {            \n                    content.append(getCms().getPermissions(getCms().readAbsolutePath(res)).getPermissionString());\n                } catch (CmsException e) {\n                   content.append(e.getMessage());\n                }\n                content.append(\"\\\",\");                \n            } else {\n                content.append(\"\\\"\\\",\");\n            }     \n            \n            // position 14: locked by\n            if (lock.isNullLock()) {\n                content.append(\"\\\"\\\",\");\n            } else {\n                content.append(\"\\\"\");                \n                try {\n                    content.append(getCms().readUser(lock.getUserId()).getName());\n                } catch (CmsException e) {\n                    content.append(e.getMessage());\n                }\n                content.append(\"\\\",\");                \n            }\n            \n            // position 15: type of lock\n            content.append(lock.getType());\n            content.append(\",\");     \n                       \n            // position 16: name of project where the resource is locked in\n            int lockedInProject = I_CmsConstants.C_UNKNOWN_ID;\n            if (lock.isNullLock() && res.getState() != I_CmsConstants.C_STATE_UNCHANGED) {\n                // resource is unlocked and modified\n                lockedInProject = res.getProjectLastModified();\n            } else {                \n                if (res.getState() != I_CmsConstants.C_STATE_UNCHANGED) {\n                    // resource is locked and modified\n                    lockedInProject = lock.getProjectId();\n                } else {\n                    // resource is locked and unchanged\n                    lockedInProject = lock.getProjectId();\n                }\n            }\n            String lockedInProjectName;\n            try {\n                if (lockedInProject == I_CmsConstants.C_UNKNOWN_ID) {\n                    // the resource is unlocked and unchanged\n                    lockedInProjectName = \"\";\n                } else {\n                    lockedInProjectName = getCms().readProject(lockedInProject).getName();\n                }\n            } catch (CmsException exc) {\n                // where did my project go?\n                lockedInProjectName = \"\";\n            }                        \n            content.append(\"\\\"\");\n            content.append(lockedInProjectName);\n            content.append(\"\\\",\");\n            \n            // position 17: id of project where resource belongs to\n            content.append(lockedInProject);\n            content.append(\",\\\"\");\n            \n            // position 18: project state, I=resource is inside current project, O=resource is outside current project        \n            if (CmsProject.isInsideProject(projectResources, res)) {\n                content.append(\"I\");\n            } else {\n                content.append(\"O\");\n            }\n            content.append(\"\\\"\");\n            content.append(\");\\n\");\n        }\n        \n        content.append(\"top.dU(document,\");\n        content.append(numberOfPages);\n        content.append(\",\");\n        content.append(selectedPage);\n        content.append(\"); \\n\");\n        \n        content.append(\"}\\n\");\n        return content.toString();\n    }","id":50248,"modified_method":"/**\n     * Returns the html for the explorer file list.<p>\n     *\n     * @return the html for the explorer file list\n     */\n    public String getFileList() { \n        // if mode is \"listonly\", only the list will be shown\n        boolean galleryView = \"galleryview\".equals(getSettings().getExplorerMode()); \n        // if mode is \"projectview\", all changed files in that project will be shown\n        boolean projectView = \"projectview\".equals(getSettings().getExplorerMode());\n        // if VFS links should be displayed, this is true\n        boolean showVfsLinks = getSettings().getExplorerShowLinks();\n\n        CmsResource currentResource = null;\n                \n        String currentFolder = getSettings().getExplorerResource();\n        boolean found = true;\n        try {\n            currentResource = getCms().readFileHeader(currentFolder);\n        } catch (CmsException e) {\n            // file was not readable\n            found = false;\n        }\n        if (found) {\n            if (showVfsLinks) {\n                // file / folder exists and is readable\n                currentFolder = \"vfslink:\" + currentFolder;\n            }\n        } else {\n            // show the root folder in case of an error and reset the state\n            currentFolder = \"/\";\n            showVfsLinks = false;\n            try {\n                currentResource = getCms().readFileHeader(currentFolder);\n            } catch (CmsException e) {\n                // should not happen\n            }            \n        }\n        \n        // get the currentFolder Id\n        CmsUUID currentFolderId;\n        if (currentResource.isFile()) {\n            currentFolderId = currentResource.getParentStructureId();                    \n        } else {                \n            currentFolderId = currentResource.getStructureId();\n        }\n        \n        // start creating content\n        StringBuffer content = new StringBuffer(2048);\n        content.append(\"function initialize() {\\n\");\n\n        content.append(\"top.mode=\\\"\");        \n        content.append(getSettings().getExplorerMode());\n        content.append(\"\\\";\\n\");\n\n        content.append(\"top.showlinks=\");        \n        content.append(showVfsLinks);\n        content.append(\";\\n\");\n        \n        // the autolock setting\n        content.append(\"top.autolock=\");        \n        content.append(OpenCms.getWorkplaceManager().autoLockResources());\n        content.append(\";\\n\");\n        \n        // the button type setting\n        content.append(\"top.buttonType=\");        \n        content.append(getSettings().getUserSettings().getExplorerButtonStyle());\n        content.append(\";\\n\");\n\n        // the help_url\n        content.append(\"top.head.helpUrl='explorer/index.html';\\n\");\n        // the project\n        content.append(\"top.setProject(\");\n        content.append(getSettings().getProject());\n        content.append(\");\\n\");\n        // the onlineProject\n        content.append(\"top.setOnlineProject(\");\n        content.append(I_CmsConstants.C_PROJECT_ONLINE_ID);\n        content.append(\");\\n\");\n        // set the writeAccess for the current Folder       \n        boolean writeAccess = \"explorerview\".equals(getSettings().getExplorerMode());\n        if (writeAccess && (! showVfsLinks)) {        \n            try {\n                CmsFolder test = getCms().readFolder(currentFolder);\n                writeAccess = getCms().isInsideCurrentProject(test);\n            } catch (CmsException e) {\n                writeAccess = false;\n            }\n        }\n        content.append(\"top.enableNewButton(\");\n        content.append(writeAccess);\n        content.append(\");\\n\");\n        // the folder\n        content.append(\"top.setDirectory(\\\"\");\n        content.append(currentFolderId.hashCode());\n        content.append(\"\\\",\\\"\");\n        if (showVfsLinks) {\n            content.append(\"vfslink:\");\n            content.append(getSettings().getExplorerResource());\n        } else {\n            content.append(CmsResource.getFolderPath(getSettings().getExplorerResource()));\n        }\n        content.append(\"\\\");\\n\");\n        content.append(\"top.rD();\\n\");\n        List reloadTreeFolders = (List)getJsp().getRequest().getAttribute(C_REQUEST_ATTRIBUTE_RELOADTREE);\n        if (reloadTreeFolders != null) {\n            // folder tree has to be reloaded after copy, delete, move, rename operation\n            String reloadFolder = \"\";\n            for (int i=0; i<reloadTreeFolders.size(); i++) {\n                reloadFolder = (String)reloadTreeFolders.get(i);\n                content.append(\"top.addNodeToLoad(\\\"\" + reloadFolder + \"\\\");\\n\");\n            }\n            content.append(\"top.reloadNodeList();\\n\");\n        }\n        content.append(\"\\n\");\n\n        // now check which filelist colums we want to show\n        int preferences = getUserPreferences();\n        \n        boolean showTitle = (preferences & I_CmsWpConstants.C_FILELIST_TITLE) > 0;\n        boolean showPermissions = (preferences & I_CmsWpConstants.C_FILELIST_PERMISSIONS) > 0;\n        boolean showSize = (preferences & I_CmsWpConstants.C_FILELIST_SIZE) > 0;\n        boolean showDateLastModified = (preferences & I_CmsWpConstants.C_FILELIST_DATE_LASTMODIFIED) > 0;\n        boolean showUserWhoLastModified = (preferences & I_CmsWpConstants.C_FILELIST_USER_LASTMODIFIED) > 0;\n        boolean showDateCreated = (preferences & I_CmsWpConstants.C_FILELIST_DATE_CREATED) > 0;\n        boolean showUserWhoCreated = (preferences & I_CmsWpConstants.C_FILELIST_USER_CREATED) > 0;\n\n        // now get the entries for the filelist\n        Vector resources = getRessources(getSettings().getExplorerResource());\n\n        // if a folder contains to much entrys we split them to pages of C_ENTRYS_PER_PAGE length\n        int startat = 0;\n        int stopat = resources.size();\n        int selectedPage = 1;\n        int numberOfPages = 0;\n        int maxEntrys = getSettings().getUserSettings().getExplorerFileEntries();\n        \n        if (!(galleryView || projectView || showVfsLinks)) {\n            selectedPage = getSettings().getExplorerPage();\n            if (stopat > maxEntrys) {\n                // we have to split\n                numberOfPages = (stopat / maxEntrys) + 1;\n                if (selectedPage > numberOfPages) {\n                    // the user has changed the folder and then selected a page for the old folder\n                    selectedPage = 1;\n                }\n                startat = (selectedPage - 1) * maxEntrys;\n                if ((startat + maxEntrys) < stopat) {\n                    stopat = startat + maxEntrys;\n                }\n            }\n        }\n        \n        // read the list of project resource to select which resource is \"inside\" or \"outside\" \n        List projectResources;\n        try {\n            projectResources = getCms().readProjectResources(getCms().getRequestContext().currentProject());\n        } catch (CmsException e) {\n            // use an empty list (all resources are \"outside\")\n            projectResources = new ArrayList();\n        }\n\n        for (int i = startat; i < stopat; i++) {\n            CmsResource res = (CmsResource)resources.elementAt(i);\n            CmsLock lock = null;\n            String path = getCms().readAbsolutePath(res);\n            \n            try {\n                lock = getCms().getLock(res);\n            } catch (CmsException e) {\n                lock = CmsLock.getNullLock();\n            \n                if (OpenCms.getLog(this).isErrorEnabled()) { \n                    OpenCms.getLog(this).error(\"Error getting lock state for resource \" + res, e);\n                }             \n            }      \n            \n            content.append(\"top.aF(\");\n            \n            // position 1: name\n            content.append(\"\\\"\");\n            content.append(res.getName());\n            content.append(\"\\\",\");\n            \n            // position 2: path\n            if (projectView || showVfsLinks) {\n                content.append(\"\\\"\");\n                // TODO: Check this (won't work with new repository)\n                content.append(path);\n                content.append(\"\\\",\");\n            } else {\n                //is taken from top.setDirectory\n                content.append(\"\\\"\\\",\");\n            }\n            \n            // position 3: title\n            if (showTitle) {\n                String title = \"\";\n                try {\n                    title = getCms().readPropertyObject(getCms().readAbsolutePath(res), I_CmsConstants.C_PROPERTY_TITLE, false).getValue();\n                } catch (CmsException e) {\n                    // ignore\n                }\n                if (title == null) {\n                    title = \"\";\n                }\n                content.append(\"\\\"\");\n                if (title != null) {\n                    content.append(CmsEncoder.escapeHtml(title));\n                }\n                content.append(\"\\\",\");\n                \n            } else {\n                content.append(\"\\\"\\\",\");\n            }\n            \n            // position 4: type\n            content.append(res.getType());\n            content.append(\",\");\n            \n            // position 5: link count\n            if (res.getLinkCount() > 1) {\n                // links are present\n                if (res.isLabeled()) {\n                    // there is at least one link in a marked site\n                    content.append(\"2\");\n                } else {\n                    // common links are present\n                    content.append(\"1\");\n                }\n            } else {\n                // no links to the resource are in the VFS\n                content.append(\"0\");\n            }\n            content.append(\",\");    \n                    \n            // position 6: size\n            if (res.isFolder() || (!showSize)) {\n                content.append(\"\\\"\\\",\");\n            } else {\n                content.append(res.getLength());\n                content.append(\",\");                \n            }\n            \n            // position 7: state\n            content.append(res.getState());\n            content.append(\",\");     \n                   \n            // position 8: project\n            int projectId = lock.isNullLock() ? res.getProjectLastModified() : lock.getProjectId();\n            content.append(projectId);\n            content.append(\",\");      \n                                   \n            // position 9: date of last modification\n            if (showDateLastModified) {\n                content.append(\"\\\"\");\n                content.append(getSettings().getMessages().getDateTime(res.getDateLastModified()));\n                content.append(\"\\\",\");\n                \n            } else {\n                content.append(\"\\\"\\\",\");\n            }\n            \n            // position 10: user who last modified the resource\n            if (showUserWhoLastModified) {\n                content.append(\"\\\"\");  \n                try {            \n                    content.append(getCms().readUser(res.getUserLastModified()).getName());\n                } catch (CmsException e) {\n                   content.append(e.getMessage());\n                }\n                content.append(\"\\\",\");                \n            } else {\n                content.append(\"\\\"\\\",\");\n            }\n            \n            // position 11: date of creation\n            if (showDateCreated) {\n                content.append(\"\\\"\");\n                content.append(getSettings().getMessages().getDateTime(res.getDateCreated()));\n                content.append(\"\\\",\");\n                \n            } else {\n                content.append(\"\\\"\\\",\");\n            }     \n                \n            // position 12 : user who created the resource \n            if (showUserWhoCreated) {\n                content.append(\"\\\"\");\n                try {\n                    content.append(getCms().readUser(res.getUserCreated()).getName());\n                } catch (CmsException e) {\n                    content.append(e.getMessage());\n                }\n                content.append(\"\\\",\");\n            } else {\n                content.append(\"\\\"\\\",\");\n            }\n            \n            // position 13: permissions\n            if (showPermissions) {\n                content.append(\"\\\"\");  \n                try {            \n                    content.append(getCms().getPermissions(getCms().readAbsolutePath(res)).getPermissionString());\n                } catch (CmsException e) {\n                   content.append(e.getMessage());\n                }\n                content.append(\"\\\",\");                \n            } else {\n                content.append(\"\\\"\\\",\");\n            }     \n            \n            // position 14: locked by\n            if (lock.isNullLock()) {\n                content.append(\"\\\"\\\",\");\n            } else {\n                content.append(\"\\\"\");                \n                try {\n                    content.append(getCms().readUser(lock.getUserId()).getName());\n                } catch (CmsException e) {\n                    content.append(e.getMessage());\n                }\n                content.append(\"\\\",\");                \n            }\n            \n            // position 15: type of lock\n            content.append(lock.getType());\n            content.append(\",\");     \n                       \n            // position 16: name of project where the resource is locked in\n            int lockedInProject = I_CmsConstants.C_UNKNOWN_ID;\n            if (lock.isNullLock() && res.getState() != I_CmsConstants.C_STATE_UNCHANGED) {\n                // resource is unlocked and modified\n                lockedInProject = res.getProjectLastModified();\n            } else {                \n                if (res.getState() != I_CmsConstants.C_STATE_UNCHANGED) {\n                    // resource is locked and modified\n                    lockedInProject = lock.getProjectId();\n                } else {\n                    // resource is locked and unchanged\n                    lockedInProject = lock.getProjectId();\n                }\n            }\n            String lockedInProjectName;\n            try {\n                if (lockedInProject == I_CmsConstants.C_UNKNOWN_ID) {\n                    // the resource is unlocked and unchanged\n                    lockedInProjectName = \"\";\n                } else {\n                    lockedInProjectName = getCms().readProject(lockedInProject).getName();\n                }\n            } catch (CmsException exc) {\n                // where did my project go?\n                lockedInProjectName = \"\";\n            }                        \n            content.append(\"\\\"\");\n            content.append(lockedInProjectName);\n            content.append(\"\\\",\");\n            \n            // position 17: id of project where resource belongs to\n            content.append(lockedInProject);\n            content.append(\",\\\"\");\n            \n            // position 18: project state, I=resource is inside current project, O=resource is outside current project        \n            if (CmsProject.isInsideProject(projectResources, res)) {\n                content.append(\"I\");\n            } else {\n                content.append(\"O\");\n            }\n            content.append(\"\\\"\");\n            content.append(\");\\n\");\n        }\n        \n        content.append(\"top.dU(document,\");\n        content.append(numberOfPages);\n        content.append(\",\");\n        content.append(selectedPage);\n        content.append(\"); \\n\");\n        \n        content.append(\"}\\n\");\n        return content.toString();\n    }","commit_id":"317d0da0a5917c5840984ac5a178542a20ef3a89","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Returns a sorted Map of all available elements in the specified subfolder of the OpenCms modules.<p>\n     * \n     * @param cms the current cms object\n     * @param elementFolder the module subfolder to serach for elements\n     * @return a sorted map with the element title as key and absolute path to the element as value\n     * @throws CmsException if reading a folder or file fails\n     */\n    protected static TreeMap getElements(CmsObject cms, String elementFolder) throws CmsException {\n        TreeMap elements = new TreeMap();\n\n        // get all visible template elements in the module folders\n        List modules = cms.getSubFolders(I_CmsWpConstants.C_VFS_PATH_MODULES, false);\n        for (int i = 0; i < modules.size(); i++) {\n            List moduleTemplateFiles = (List) new ArrayList();\n            String folder = cms.readAbsolutePath((CmsFolder)modules.get(i));\n            moduleTemplateFiles = cms.getFilesInFolder(folder + elementFolder);\n            for (int j = 0; j < moduleTemplateFiles.size(); j++) {\n                // get the current template file\n                CmsFile templateFile = (CmsFile)moduleTemplateFiles.get(j);\n                String title = cms.readProperty(cms.readAbsolutePath(templateFile), I_CmsConstants.C_PROPERTY_TITLE);\n                if (title == null) {\n                    // no title property found, display the file name\n                    title = templateFile.getName();\n                }\n                String path = cms.readAbsolutePath(templateFile);\n                elements.put(title, path);\n            }\n        }\n        // return the templates sorted by title\n        return elements;\n    }","id":50249,"modified_method":"/**\n     * Returns a sorted Map of all available elements in the specified subfolder of the OpenCms modules.<p>\n     * \n     * @param cms the current cms object\n     * @param elementFolder the module subfolder to serach for elements\n     * @return a sorted map with the element title as key and absolute path to the element as value\n     * @throws CmsException if reading a folder or file fails\n     */\n    protected static TreeMap getElements(CmsObject cms, String elementFolder) throws CmsException {\n        TreeMap elements = new TreeMap();\n\n        // get all visible template elements in the module folders\n        List modules = cms.getSubFolders(I_CmsWpConstants.C_VFS_PATH_MODULES, false);\n        for (int i = 0; i < modules.size(); i++) {\n            List moduleTemplateFiles = (List) new ArrayList();\n            String folder = cms.readAbsolutePath((CmsFolder)modules.get(i));\n            moduleTemplateFiles = cms.getFilesInFolder(folder + elementFolder);\n            for (int j = 0; j < moduleTemplateFiles.size(); j++) {\n                // get the current template file\n                CmsFile templateFile = (CmsFile)moduleTemplateFiles.get(j);\n                String title = cms.readPropertyObject(cms.readAbsolutePath(templateFile), I_CmsConstants.C_PROPERTY_TITLE, false).getValue();\n                if (title == null) {\n                    // no title property found, display the file name\n                    title = templateFile.getName();\n                }\n                String path = cms.readAbsolutePath(templateFile);\n                elements.put(title, path);\n            }\n        }\n        // return the templates sorted by title\n        return elements;\n    }","commit_id":"317d0da0a5917c5840984ac5a178542a20ef3a89","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Initializes the editor content when openening the editor for the first time.<p>\n     */\n    protected void initContent() {\n        // save initialized instance of this class in request attribute for included sub-elements\n        getJsp().getRequest().setAttribute(C_SESSION_WORKPLACE_CLASS, this);\n        // get the default encoding\n        String encoding = getCms().getRequestContext().getEncoding();\n        String content = \"\";\n        \n        try {\n            // lock resource if autolock is enabled\n            checkLock(getParamResource());\n            // Read file encoding from the property of the temporary file \n            encoding = getCms().readProperty(getParamResource(), I_CmsConstants.C_PROPERTY_CONTENT_ENCODING, true, encoding);\n            CmsFile editFile = getCms().readFile(getParamResource());\n            try {\n                content = new String(editFile.getContents(), encoding);\n            } catch (UnsupportedEncodingException e) {\n                content = new String(editFile.getContents());\n            }\n        } catch (CmsException e) {\n            // reading of file contents failed, show error dialog\n            try {\n                showErrorPage(this, e, \"read\");\n            } catch (JspException exc) {\n                // ignore this exception\n            }\n        }\n        setParamContent(content);\n    }","id":50250,"modified_method":"/**\n     * Initializes the editor content when openening the editor for the first time.<p>\n     */\n    protected void initContent() {\n        // save initialized instance of this class in request attribute for included sub-elements\n        getJsp().getRequest().setAttribute(C_SESSION_WORKPLACE_CLASS, this);\n        // get the default encoding\n        String encoding = getCms().getRequestContext().getEncoding();\n        String content = \"\";\n        \n        try {\n            // lock resource if autolock is enabled\n            checkLock(getParamResource());\n            // Read file encoding from the property of the temporary file \n            encoding = getCms().readPropertyObject(getParamResource(), I_CmsConstants.C_PROPERTY_CONTENT_ENCODING, true).getValue(encoding);\n            CmsFile editFile = getCms().readFile(getParamResource());\n            try {\n                content = new String(editFile.getContents(), encoding);\n            } catch (UnsupportedEncodingException e) {\n                content = new String(editFile.getContents());\n            }\n        } catch (CmsException e) {\n            // reading of file contents failed, show error dialog\n            try {\n                showErrorPage(this, e, \"read\");\n            } catch (JspException exc) {\n                // ignore this exception\n            }\n        }\n        setParamContent(content);\n    }","commit_id":"317d0da0a5917c5840984ac5a178542a20ef3a89","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Performs the save content ation.<p>\n     * \n     * @see org.opencms.workplace.editor.CmsEditor#actionSave()\n     */\n    public void actionSave() throws JspException {\n        CmsFile editFile = null;\n        try {\n            editFile = getCms().readFile(getParamResource());\n            String decodedContent = CmsEncoder.unescape(getParamContent(), CmsEncoder.C_UTF8_ENCODING);\n            // Read file encoding from the property of the temporary file \n            String encoding = getCms().getRequestContext().getEncoding();\n            encoding = getCms().readProperty(getParamResource(), I_CmsConstants.C_PROPERTY_CONTENT_ENCODING, true, encoding);\n            try {\n                editFile.setContents(decodedContent.getBytes(encoding));\n            } catch (UnsupportedEncodingException e) {\n                editFile.setContents(decodedContent.getBytes());\n            }\n            getCms().writeFile(editFile);\n        } catch (CmsException e) {\n            // error during saving, show error dialog\n            showErrorPage(this, e, \"save\");\n        }\n    }","id":50251,"modified_method":"/**\n     * Performs the save content ation.<p>\n     * \n     * @see org.opencms.workplace.editor.CmsEditor#actionSave()\n     */\n    public void actionSave() throws JspException {\n        CmsFile editFile = null;\n        try {\n            editFile = getCms().readFile(getParamResource());\n            String decodedContent = CmsEncoder.unescape(getParamContent(), CmsEncoder.C_UTF8_ENCODING);\n            // Read file encoding from the property of the temporary file \n            String encoding = getCms().getRequestContext().getEncoding();\n            encoding = getCms().readPropertyObject(getParamResource(), I_CmsConstants.C_PROPERTY_CONTENT_ENCODING, true).getValue(encoding);\n            try {\n                editFile.setContents(decodedContent.getBytes(encoding));\n            } catch (UnsupportedEncodingException e) {\n                editFile.setContents(decodedContent.getBytes());\n            }\n            getCms().writeFile(editFile);\n        } catch (CmsException e) {\n            // error during saving, show error dialog\n            showErrorPage(this, e, \"save\");\n        }\n    }","commit_id":"317d0da0a5917c5840984ac5a178542a20ef3a89","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Creates a node entry for the root node of the current site.<p>\n     *  \n     * @return a node entry for the root node of the current site\n     */\n    private String getRootNode() {\n        CmsResource resource = null;\n        String title = null;\n        try { \n            resource = getCms().readFolder(\"/\");\n            title = getCms().readProperty(\"/\", I_CmsConstants.C_PROPERTY_TITLE);\n            if (title == null) {\n                getCms().readAbsolutePath(resource);\n                title = resource.getRootPath();\n            }\n        } catch (CmsException e) {\n            // should not happen\n        }\n        return getNode(title, resource.getType(), resource.getStructureId(), resource.getParentStructureId(), false);\n    }","id":50252,"modified_method":"/**\n     * Creates a node entry for the root node of the current site.<p>\n     *  \n     * @return a node entry for the root node of the current site\n     */\n    private String getRootNode() {\n        CmsResource resource = null;\n        String title = null;\n        try { \n            resource = getCms().readFolder(\"/\");\n            title = getCms().readPropertyObject(\"/\", I_CmsConstants.C_PROPERTY_TITLE, false).getValue();\n            if (title == null) {\n                getCms().readAbsolutePath(resource);\n                title = resource.getRootPath();\n            }\n        } catch (CmsException e) {\n            // should not happen\n        }\n        return getNode(title, resource.getType(), resource.getStructureId(), resource.getParentStructureId(), false);\n    }","commit_id":"317d0da0a5917c5840984ac5a178542a20ef3a89","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Helper method to determine the encoding of the given file in the VFS.<p>\n     * \n     * @param cms the CmsObject\n     * @param configFile the file which is checked\n     * @return the encoding for the file\n     */\n    private String getConfigurationFileEncoding(CmsObject cms, CmsFile configFile) {\n        try { \n            return cms.readProperty(cms.readAbsolutePath(configFile), I_CmsConstants.C_PROPERTY_CONTENT_ENCODING, false, OpenCms.getSystemInfo().getDefaultEncoding());\n        } catch (CmsException e) {\n            return OpenCms.getSystemInfo().getDefaultEncoding();\n        }\n    }","id":50253,"modified_method":"/**\n     * Helper method to determine the encoding of the given file in the VFS.<p>\n     * \n     * @param cms the CmsObject\n     * @param configFile the file which is checked\n     * @return the encoding for the file\n     */\n    private String getConfigurationFileEncoding(CmsObject cms, CmsFile configFile) {\n        try { \n            return cms.readPropertyObject(cms.readAbsolutePath(configFile), I_CmsConstants.C_PROPERTY_CONTENT_ENCODING, false).getValue(OpenCms.getSystemInfo().getDefaultEncoding());\n        } catch (CmsException e) {\n            return OpenCms.getSystemInfo().getDefaultEncoding();\n        }\n    }","commit_id":"317d0da0a5917c5840984ac5a178542a20ef3a89","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n    * Returns the OpenCms VFS uri of the style sheet of the current page.<p>\n    * \n    * @return the OpenCms VFS uri of the style sheet of the current page\n    */\n   public String getUriStyleSheet() {\n        String result = \"\";\n        try {\n            String currentTemplate = getUriTemplate();\n            if (! \"\".equals(currentTemplate)) {\n                // read the stylesheet from the template file\n                result = getCms().readProperty(currentTemplate, I_CmsConstants.C_PROPERTY_TEMPLATE, false, \"\");\n            }\n        } catch (CmsException e) {\n            OpenCms.getLog(this).warn(\"Template property for style sheet could not be read\");\n        }\n        return result;\n   }","id":50254,"modified_method":"/**\n    * Returns the OpenCms VFS uri of the style sheet of the current page.<p>\n    * \n    * @return the OpenCms VFS uri of the style sheet of the current page\n    */\n   public String getUriStyleSheet() {\n        String result = \"\";\n        try {\n            String currentTemplate = getUriTemplate();\n            if (! \"\".equals(currentTemplate)) {\n                // read the stylesheet from the template file\n                result = getCms().readPropertyObject(currentTemplate, I_CmsConstants.C_PROPERTY_TEMPLATE, false).getValue(\"\");\n            }\n        } catch (CmsException e) {\n            OpenCms.getLog(this).warn(\"Template property for style sheet could not be read\");\n        }\n        return result;\n   }","commit_id":"d8ec030b4b543332c4e9914b88e532b5c3300c5b","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n    * Returns the OpenCms VFS uri of the template of the current page.<p>\n    * \n    * @return the OpenCms VFS uri of the template of the current page\n    */\n   public String getUriTemplate() {\n       String result = \"\";\n       try {\n           result = getCms().readProperty(getParamTempfile(), I_CmsConstants.C_PROPERTY_TEMPLATE, true, \"\");\n       } catch (CmsException e) {\n           OpenCms.getLog(this).warn(\"Template property could not be read\", e);\n       }\n       return result;\n   }","id":50255,"modified_method":"/**\n    * Returns the OpenCms VFS uri of the template of the current page.<p>\n    * \n    * @return the OpenCms VFS uri of the template of the current page\n    */\n   public String getUriTemplate() {\n       String result = \"\";\n       try {\n           result = getCms().readPropertyObject(getParamTempfile(), I_CmsConstants.C_PROPERTY_TEMPLATE, true).getValue(\"\");\n       } catch (CmsException e) {\n           OpenCms.getLog(this).warn(\"Template property could not be read\", e);\n       }\n       return result;\n   }","commit_id":"d8ec030b4b543332c4e9914b88e532b5c3300c5b","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Builds the html for the page template select box.<p>\n     * \n     * @param attributes optional attributes for the &lt;select&gt; tag\n     * @return the html for the page template select box\n     */\n    public String buildSelectTemplates(String attributes) {\n        List options = new ArrayList();\n        List values = new ArrayList();\n        int selectedValue = -1;\n        String currentTemplate = null;\n        TreeMap templates = null;\n        try {\n            // read the current template\n            currentTemplate = getCms().readProperty(getParamResource(), I_CmsConstants.C_PROPERTY_TEMPLATE, true);\n            // get all available templates\n            templates = CmsNewResourceXmlPage.getTemplates(getCms());\n        } catch (CmsException e) {\n            // ignore this exception\n        }\n        if (currentTemplate == null) {\n            currentTemplate = \"\";\n        }        \n        if (templates == null) {\n            // no templates found -> use the given one\n            String name = currentTemplate;\n            try { \n                // read the title of this template\n                name = getCms().readProperty(name, I_CmsConstants.C_PROPERTY_TITLE);\n            } catch (CmsException exc) {\n                // ignore this exception - the title for this template was not readable\n            }\n            options.add(name);\n            values.add(currentTemplate);\n        } else {\n            // templates found, create option and value lists\n            Iterator i = templates.keySet().iterator();\n            int counter = 0;\n            while (i.hasNext()) {\n                String key = (String)i.next();\n                String path = (String)templates.get(key);\n                if (currentTemplate.equals(path)) {\n                    // mark the currently selected template\n                    selectedValue = counter;\n                }\n                options.add(key);\n                values.add(path);\n                counter++;\n            }\n        }\n\n        String hiddenField = \"<input type=\\\"hidden\\\" name=\\\"\" + PREFIX_HIDDEN + I_CmsConstants.C_PROPERTY_TEMPLATE +  \"\\\" value=\\\"\" + currentTemplate + \"\\\">\";\n        return buildSelect(attributes, options, values, selectedValue, false) + hiddenField;\n    }","id":50256,"modified_method":"/**\n     * Builds the html for the page template select box.<p>\n     * \n     * @param attributes optional attributes for the &lt;select&gt; tag\n     * @return the html for the page template select box\n     */\n    public String buildSelectTemplates(String attributes) {\n        List options = new ArrayList();\n        List values = new ArrayList();\n        int selectedValue = -1;\n        String currentTemplate = null;\n        TreeMap templates = null;\n        try {\n            // read the current template\n            currentTemplate = getCms().readPropertyObject(getParamResource(), I_CmsConstants.C_PROPERTY_TEMPLATE, true).getValue();\n            // get all available templates\n            templates = CmsNewResourceXmlPage.getTemplates(getCms());\n        } catch (CmsException e) {\n            // ignore this exception\n        }\n        if (currentTemplate == null) {\n            currentTemplate = \"\";\n        }        \n        if (templates == null) {\n            // no templates found -> use the given one\n            String name = currentTemplate;\n            try { \n                // read the title of this template\n                name = getCms().readPropertyObject(name, I_CmsConstants.C_PROPERTY_TITLE, false).getValue();\n            } catch (CmsException exc) {\n                // ignore this exception - the title for this template was not readable\n            }\n            options.add(name);\n            values.add(currentTemplate);\n        } else {\n            // templates found, create option and value lists\n            Iterator i = templates.keySet().iterator();\n            int counter = 0;\n            while (i.hasNext()) {\n                String key = (String)i.next();\n                String path = (String)templates.get(key);\n                if (currentTemplate.equals(path)) {\n                    // mark the currently selected template\n                    selectedValue = counter;\n                }\n                options.add(key);\n                values.add(path);\n                counter++;\n            }\n        }\n\n        String hiddenField = \"<input type=\\\"hidden\\\" name=\\\"\" + PREFIX_HIDDEN + I_CmsConstants.C_PROPERTY_TEMPLATE +  \"\\\" value=\\\"\" + currentTemplate + \"\\\">\";\n        return buildSelect(attributes, options, values, selectedValue, false) + hiddenField;\n    }","commit_id":"d8ec030b4b543332c4e9914b88e532b5c3300c5b","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Returns the export data for the request, if null is returned no export is required.<p>\n     * \n     * @param request the request to check for export data\n     * @param cms an initialized cms context (should be initialized with the \"Guest\" user only\n     * @return the export data for the request, if null is returned no export is required\n     */\n    public CmsStaticExportData getExportData(HttpServletRequest request, CmsObject cms) {                \n        if (! isStaticExportEnabled()) {\n            // export is diabled\n            return null;\n        }\n\n        String rfsName = null;\n        String vfsName = null;\n               \n        // build the rfs name during for the export on demand\n        rfsName = request.getParameter(C_EXPORT_MARKER);\n        if ((rfsName == null)) {\n            rfsName = (String)request.getAttribute(C_EXPORT_ATTRIBUTE_ERROR_REQUEST_URI);\n        }\n\n        // this is a request created by the static export and directly send to 404 handler\n        // so remove the leading handler identification\n        if (request.getHeader(I_CmsConstants.C_HEADER_OPENCMS_EXPORT) != null) {\n\n            int prefix = rfsName.indexOf(getRfsPrefix());\n            if (prefix > 0) {\n                rfsName = rfsName.substring(prefix);                           \n            } else {\n                return null;\n            }       \n        }\n\n        if ((rfsName == null) || !rfsName.startsWith(getRfsPrefix())) {\n            // this is not an export request, no further processing is required\n            return null;   \n        }\n\n        return getExportData(rfsName, vfsName, cms);\n    }","id":50257,"modified_method":"/**\n     * Returns the export data for the request, if null is returned no export is required.<p>\n     * \n     * @param request the request to check for export data\n     * @param cms an initialized cms context (should be initialized with the \"Guest\" user only\n     * @return the export data for the request, if null is returned no export is required\n     */\n    public CmsStaticExportData getExportData(HttpServletRequest request, CmsObject cms) {\n        \n        if (! isStaticExportEnabled()) {\n            // export is disabled\n            return null;\n        }\n     \n        // build the rfs name for the export \"on demand\"\n        String rfsName = request.getParameter(C_EXPORT_MARKER);\n        if ((rfsName == null)) {\n            rfsName = (String)request.getAttribute(C_EXPORT_ATTRIBUTE_ERROR_REQUEST_URI);\n        }\n\n\n        if (request.getHeader(I_CmsConstants.C_HEADER_OPENCMS_EXPORT) != null) {\n            // this is a request created by the static export and directly send to 404 handler\n            // so remove the leading handler identification\n            int prefix = rfsName.indexOf(getRfsPrefix());\n            if (prefix > 0) {\n                rfsName = rfsName.substring(prefix);                           \n            } else {\n                return null;\n            }       \n        }\n\n        if ((rfsName == null) || !rfsName.startsWith(getRfsPrefix())) {\n            // this is not an export request, no further processing is required\n            return null;   \n        }\n\n        return getExportData(rfsName, null, cms);\n    }","commit_id":"ba34e72bc295a7860a603ea53de327e1b91f962d","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Set the list of all resources that have the \"exportname\" property set.<p>\n     */\n    private synchronized void setExportnames() {        \n        Vector resources;\n        CmsObject cms = null;\n        try {\n            cms = OpenCms.initCmsObject(OpenCms.getDefaultUsers().getUserExport());\n            resources = cms.getResourcesWithPropertyDefinition(I_CmsConstants.C_PROPERTY_EXPORTNAME);\n        } catch (CmsException e) {\n            resources = new Vector(0);\n        }\n        \n        m_exportnameResources = new HashMap(resources.size());\n        Iterator i = resources.iterator();\n        while (i.hasNext()) {\n            CmsResource res = (CmsResource)i.next();\n            try {\n                String foldername = cms.readAbsolutePath(res);\n                String exportname = cms.readProperty(foldername, I_CmsConstants.C_PROPERTY_EXPORTNAME);\n                if (exportname != null) {\n                    if (! exportname.endsWith(\"/\")) {\n                        exportname = exportname + \"/\";\n                    }\n                    if (! exportname.startsWith(\"/\")) {\n                        exportname = \"/\" + exportname;\n                    }\n                    m_exportnameResources.put(exportname, foldername);\n                }\n            } catch (CmsException e) {\n                // ignore exception, folder will no be added\n            }\n        }\n        m_exportnameResources = Collections.unmodifiableMap(m_exportnameResources);\n    }","id":50258,"modified_method":"/**\n     * Set the list of all resources that have the \"exportname\" property set.<p>\n     */\n    private synchronized void setExportnames() {        \n        Vector resources;\n        CmsObject cms = null;\n        try {\n            cms = OpenCms.initCmsObject(OpenCms.getDefaultUsers().getUserExport());\n            resources = cms.getResourcesWithPropertyDefinition(I_CmsConstants.C_PROPERTY_EXPORTNAME);\n        } catch (CmsException e) {\n            resources = new Vector(0);\n        }\n        \n        m_exportnameResources = new HashMap(resources.size());\n        Iterator i = resources.iterator();\n        while (i.hasNext()) {\n            CmsResource res = (CmsResource)i.next();\n            try {\n                String foldername = cms.readAbsolutePath(res);\n                String exportname = cms.readPropertyObject(foldername, I_CmsConstants.C_PROPERTY_EXPORTNAME, false).getValue();\n                if (exportname != null) {\n                    if (! exportname.endsWith(\"/\")) {\n                        exportname = exportname + \"/\";\n                    }\n                    if (! exportname.startsWith(\"/\")) {\n                        exportname = \"/\" + exportname;\n                    }\n                    m_exportnameResources.put(exportname, foldername);\n                }\n            } catch (CmsException e) {\n                // ignore exception, folder will no be added\n            }\n        }\n        m_exportnameResources = Collections.unmodifiableMap(m_exportnameResources);\n    }","commit_id":"ba34e72bc295a7860a603ea53de327e1b91f962d","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Exports all template resources found in a list of published resources.<p>\n     * \n     * @param cms the current cms object\n     * @param publishedTemplateResources list of potential candidates to export\n     * @param report an I_CmsReport instance to print output message, or null to write messages to the log file    \n     */\n    private void exportTemplateResources(CmsObject cms, List publishedTemplateResources, I_CmsReport report) {\n\n        String rfsName;\n        String url;\n  \n        int size = publishedTemplateResources.size();\n        int count = 1;\n\n\n        if (OpenCms.getLog(this).isDebugEnabled()) {\n            OpenCms.getLog(this).debug(\"Starting export of template resources. \"+size+\" possible canditates in list.\");\n        }\n        \n        \n        report.println(report.key(\"report.staticexport.templateresources_begin\"), I_CmsReport.C_FORMAT_HEADLINE);\n\n        // now loop through all of them and request them from the server\n        Iterator i = publishedTemplateResources.iterator();\n        \n        try {\n           //cms.getRequestContext().saveSiteRoot();\n           //cms.getRequestContext().setSiteRoot(\"/\");\n\n            while (i.hasNext()) {\n                rfsName = (String)i.next();\n                     \n                CmsStaticExportData data = getExportData(getRfsPrefix() + rfsName, null, cms);\n\n                report.print(\"(\" + count++ + \" / \" + size + \") \", I_CmsReport.C_FORMAT_NOTE);\n                report.print(report.key(\"report.exporting\"), I_CmsReport.C_FORMAT_NOTE);\n                report.print(rfsName);\n                report.print(report.key(\"report.dots\"));\n\n                url = getExportUrl() + getRfsPrefix() + rfsName;\n                \n                // add url parameters if nescessary\n                if (data.getParameters() != null && data.getParameters().length() > 0) {\n                    url += data.getParameters();\n                }\n\n                if (OpenCms.getLog(this).isDebugEnabled()) {\n                    OpenCms.getLog(this).debug(\"Sending request for \"+rfsName+\" with url (\"+url+\")...\");\n                }\n                \n                // we have created an url, so request the resource\n                if (url != null) {\n                    try {\n                        // setup connections\n                        URL export = new URL(url);    \n                        HttpURLConnection.setFollowRedirects(false);\n                        HttpURLConnection urlcon = (HttpURLConnection)export.openConnection();\n                        // set request type to GET\n                        urlcon.setRequestMethod(\"GET\");\n                        // add special export header\n                        urlcon.setRequestProperty(I_CmsConstants.C_HEADER_OPENCMS_EXPORT, \"true\");\n                        \n                        // get the last modified date and add it to the request\n                        String exportFileName = CmsLinkManager.normalizeRfsPath(getExportPath() + rfsName.substring(1));\n                        File exportFile = new File(exportFileName);\n                        if (exportFile != null) {\n                            long dateLastModified = exportFile.lastModified();\n                            urlcon.setIfModifiedSince(dateLastModified);\n                           \n                            if (OpenCms.getLog(this).isDebugEnabled()) {\n                                OpenCms.getLog(this).debug(\"req \"+exportFile.getName()+\" [Timestamp=\"+(dateLastModified / 1000) *1000+\"]\");\n                            } \n                        }\n                     \n                        // now perform the request\n                        urlcon.connect();\n                        int status = urlcon.getResponseCode();\n                        urlcon.disconnect();\n                        \n                        if (OpenCms.getLog(this).isInfoEnabled()) {\n                         OpenCms.getLog(this).info(\"Requested \"+rfsName+\" with url (\"+url+\") [STATUS\"+status+\"]\");\n                        }\n                        \n                        // write the report\n                        if (status == HttpServletResponse.SC_OK) { \n                            report.println(report.key(\"report.ok\"), I_CmsReport.C_FORMAT_OK);\n                        } else if (status == HttpServletResponse.SC_NOT_MODIFIED) {\n                            report.println(report.key(\"report.skipped\"), I_CmsReport.C_FORMAT_NOTE);\n                        } else if (status == HttpServletResponse.SC_SEE_OTHER) {\n                            report.println(report.key(\"report.ignored\"), I_CmsReport.C_FORMAT_NOTE);\n                        } else {\n                            report.println(String.valueOf(status), I_CmsReport.C_FORMAT_OK);\n                        }\n                    } catch (IOException e) {\n                        report.println(e);\n                    }\n                }\n            }\n        } finally {\n           // cms.getRequestContext().restoreSiteRoot();\n        }\n        report.println(report.key(\"report.staticexport.templateresources_end\"), I_CmsReport.C_FORMAT_HEADLINE);\n\n    }","id":50259,"modified_method":"/**\n     * Exports all template resources found in a list of published resources.<p>\n     * \n     * @param cms the current cms object\n     * @param publishedTemplateResources list of potential candidates to export\n     * @param report an I_CmsReport instance to print output message, or null to write messages to the log file    \n     */\n    private void exportTemplateResources(CmsObject cms, List publishedTemplateResources, I_CmsReport report) {\n\n        String rfsName;\n        String url;\n  \n        int size = publishedTemplateResources.size();\n        int count = 1;\n\n        if (OpenCms.getLog(this).isDebugEnabled()) {\n            OpenCms.getLog(this).debug(\"Starting export of template resources with \" + size + \" possible canditates in list\");\n        }        \n        \n        report.println(report.key(\"report.staticexport.templateresources_begin\"), I_CmsReport.C_FORMAT_HEADLINE);\n\n        // now loop through all of them and request them from the server\n        Iterator i = publishedTemplateResources.iterator();\n        \n        int warning = 0;\n        // TODO: why this try ... finally ?\n        try {\n           //cms.getRequestContext().saveSiteRoot();\n           //cms.getRequestContext().setSiteRoot(\"/\");\n\n            while (i.hasNext()) {\n                rfsName = (String)i.next();\n                     \n                CmsStaticExportData data = getExportData(getRfsPrefix() + rfsName, null, cms);\n\n                report.print(\"(\" + count++ + \" / \" + size + \") \", I_CmsReport.C_FORMAT_NOTE);\n                report.print(report.key(\"report.exporting\"), I_CmsReport.C_FORMAT_NOTE);\n                report.print(rfsName);\n                report.print(report.key(\"report.dots\"));\n\n                url = getExportUrl() + getRfsPrefix() + rfsName;\n                \n                // add url parameters if nescessary\n                if (data.getParameters() != null && data.getParameters().length() > 0) {\n                    url += data.getParameters();\n                }\n\n                if (OpenCms.getLog(this).isDebugEnabled()) {\n                    OpenCms.getLog(this).debug(\"Sending request for RFS file \" + rfsName + \" with url (\" + url + \")\");\n                }\n                \n                // we have created an url, so request the resource\n                if (url != null) {\n                    try {\n                        // setup connections\n                        URL export = new URL(url);    \n                        HttpURLConnection.setFollowRedirects(false);\n                        HttpURLConnection urlcon = (HttpURLConnection)export.openConnection();\n                        // set request type to GET\n                        urlcon.setRequestMethod(\"GET\");\n                        // add special export header\n                        urlcon.setRequestProperty(I_CmsConstants.C_HEADER_OPENCMS_EXPORT, \"true\");\n                        \n                        // get the last modified date and add it to the request\n                        String exportFileName = CmsLinkManager.normalizeRfsPath(getExportPath() + rfsName.substring(1));\n                        File exportFile = new File(exportFileName);\n                        if (exportFile != null) {\n                            long dateLastModified = exportFile.lastModified();\n                            urlcon.setIfModifiedSince(dateLastModified);\n                           \n                            if (OpenCms.getLog(this).isDebugEnabled()) {\n                                OpenCms.getLog(this).debug(\"Request for RFS file \" + exportFile.getName() + \"' If-Modofied-Since' header set to \" +(dateLastModified / 1000) *1000);\n                            } \n                        }\n                     \n                        // now perform the request\n                        urlcon.connect();\n                        int status = urlcon.getResponseCode();\n                        urlcon.disconnect();\n                        \n                        if (OpenCms.getLog(this).isInfoEnabled()) {\n                            OpenCms.getLog(this).info(\"Request result for RFS file \" + rfsName+\" with url (\" + url + \") was STATUS=\" + status);\n                        }\n                        \n                        // write the report\n                        if (status == HttpServletResponse.SC_OK) { \n                            report.println(report.key(\"report.ok\"), I_CmsReport.C_FORMAT_OK);\n                        } else if (status == HttpServletResponse.SC_NOT_MODIFIED) {\n                            report.println(report.key(\"report.skipped\"), I_CmsReport.C_FORMAT_NOTE);\n                        } else if (status == HttpServletResponse.SC_SEE_OTHER) {\n                            report.println(report.key(\"report.ignored\"), I_CmsReport.C_FORMAT_NOTE);\n                        } else {\n                            report.println(String.valueOf(status), I_CmsReport.C_FORMAT_OK);\n                        }\n                    } catch (IOException e) {\n                        report.println(e);\n                    }\n                }\n            }\n        } finally {\n           // cms.getRequestContext().restoreSiteRoot();\n        }\n        report.println(report.key(\"report.staticexport.templateresources_end\"), I_CmsReport.C_FORMAT_HEADLINE);\n\n    }","commit_id":"ba34e72bc295a7860a603ea53de327e1b91f962d","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Creates a new static export property object.<p>\n     */\n    public CmsStaticExportManager() {\n        m_exportRelativeLinks = false;\n        m_staticExportEnabled = false;\n        m_exportPropertyDefault = true;\n                \n        LRUMap lruMap1 = new LRUMap(1024);\n        m_cacheOnlineLinks = Collections.synchronizedMap(lruMap1);\n        if (OpenCms.getMemoryMonitor().enabled()) {\n            // map must be of type \"LRUMap\" so that memory monitor can acecss all information\n            OpenCms.getMemoryMonitor().register(this.getClass().getName()+\".\"+\"m_cacheOnlineLinks\", lruMap1);\n        }              \n        \n        LRUMap lruMap2 = new LRUMap(1024);\n        m_cacheExportUris = Collections.synchronizedMap(lruMap2);\n        if (OpenCms.getMemoryMonitor().enabled()) {\n            // map must be of type \"LRUMap\" so that memory monitor can acecss all information\n            OpenCms.getMemoryMonitor().register(this.getClass().getName()+\".\"+\"m_cacheExportUris\", lruMap2);\n        }\n        \n        // register this object as event listener\n        OpenCms.addCmsEventListener(this, new int[] {\n            I_CmsEventListener.EVENT_PUBLISH_PROJECT, \n            I_CmsEventListener.EVENT_CLEAR_CACHES,\n            I_CmsEventListener.EVENT_UPDATE_EXPORTS\n        });          \n    }","id":50260,"modified_method":"/**\n     * Creates a new static export property object.<p>\n     */\n    public CmsStaticExportManager() {\n        m_exportRelativeLinks = false;\n        m_staticExportEnabled = false;\n        m_exportPropertyDefault = true;\n                \n        LRUMap lruMap1 = new LRUMap(2048);\n        m_cacheOnlineLinks = Collections.synchronizedMap(lruMap1);\n        if (OpenCms.getMemoryMonitor().enabled()) {\n            // map must be of type \"LRUMap\" so that memory monitor can acecss all information\n            OpenCms.getMemoryMonitor().register(this.getClass().getName()+\".\"+\"m_cacheOnlineLinks\", lruMap1);\n        }              \n        \n        LRUMap lruMap2 = new LRUMap(2048);\n        m_cacheExportUris = Collections.synchronizedMap(lruMap2);\n        if (OpenCms.getMemoryMonitor().enabled()) {\n            // map must be of type \"LRUMap\" so that memory monitor can acecss all information\n            OpenCms.getMemoryMonitor().register(this.getClass().getName()+\".\"+\"m_cacheExportUris\", lruMap2);\n        }\n        \n        // register this object as event listener\n        OpenCms.addCmsEventListener(this, new int[] {\n            I_CmsEventListener.EVENT_PUBLISH_PROJECT, \n            I_CmsEventListener.EVENT_CLEAR_CACHES,\n            I_CmsEventListener.EVENT_UPDATE_EXPORTS\n        });          \n    }","commit_id":"ba34e72bc295a7860a603ea53de327e1b91f962d","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Returns the static export rfs name for a give vfs resoure.<p>\n     * \n     * @param cms an initialized cms context\n     * @param vfsName the name of the vfs resource\n     * @return the static export rfs name for a give vfs resoure\n     */\n    public String getRfsName(CmsObject cms, String vfsName) {\n       \n        String originalVfsName = vfsName;\n        \n        try {\n            // check if the resource folder (or a parent folder) has the \"exportname\" property set\n            String exportname = cms.readProperty(CmsResource.getFolderPath(vfsName), I_CmsConstants.C_PROPERTY_EXPORTNAME, true);\n            if (exportname != null) {\n                // \"exportname\" property set\n                if (!exportname.endsWith(\"/\")) {\n                    exportname = exportname + \"/\";\n                }\n                if (!exportname.startsWith(\"/\")) {\n                    exportname = \"/\" + exportname;\n                }\n                String value;\n                boolean cont;\n                String resourceName = vfsName;\n                do {\n                    try {\n                        value = cms.readProperty(resourceName, I_CmsConstants.C_PROPERTY_EXPORTNAME, false);\n                        cont = ((value == null) && (!\"/\".equals(resourceName)));\n                    } catch (CmsSecurityException se) {\n                        // a security exception (probably no read permission) we return the current result                      \n                        cont = false;\n                    }\n                    if (cont) {\n                        resourceName = CmsResource.getParentFolder(resourceName);\n                    }\n                } while (cont);\n                vfsName = exportname + vfsName.substring(resourceName.length());\n            } else {\n                // if \"exportname\" is not set we must add the site root \n                vfsName = cms.getRequestContext().addSiteRoot(vfsName);\n            }\n            // check if the vfsname ends with \".jsp\", then the rfs name must end with .html, except the \n            // resource is a plain resouce\n            if (vfsName.toLowerCase().endsWith(\".jsp\")) {\n                CmsResource res = cms.readFileHeader(originalVfsName);\n                if (res.getType() != CmsResourceTypePlain.C_RESOURCE_TYPE_ID) {\n                    vfsName += \".html\";\n                }\n            }\n        } catch (CmsException e) {\n            // ignore exception, leave vfsName unmodified\n        }\n        // add export rfs prefix and return result         \n        return OpenCms.getStaticExportManager().getRfsPrefix() + vfsName;        \n    }","id":50261,"modified_method":"/**\n     * Returns the static export rfs name for a give vfs resoure.<p>\n     * \n     * @param cms an initialized cms context\n     * @param vfsName the name of the vfs resource\n     * @return the static export rfs name for a give vfs resoure\n     */\n    public String getRfsName(CmsObject cms, String vfsName) {\n       \n        String originalVfsName = vfsName;\n        \n        try {\n            // check if the resource folder (or a parent folder) has the \"exportname\" property set\n            String exportname = cms.readPropertyObject(CmsResource.getFolderPath(vfsName), I_CmsConstants.C_PROPERTY_EXPORTNAME, true).getValue();\n            if (exportname != null) {\n                // \"exportname\" property set\n                if (!exportname.endsWith(\"/\")) {\n                    exportname = exportname + \"/\";\n                }\n                if (!exportname.startsWith(\"/\")) {\n                    exportname = \"/\" + exportname;\n                }\n                String value;\n                boolean cont;\n                String resourceName = vfsName;\n                do {\n                    try {\n                        value = cms.readPropertyObject(resourceName, I_CmsConstants.C_PROPERTY_EXPORTNAME, false).getValue();\n                        cont = ((value == null) && (!\"/\".equals(resourceName)));\n                    } catch (CmsSecurityException se) {\n                        // a security exception (probably no read permission) we return the current result                      \n                        cont = false;\n                    }\n                    if (cont) {\n                        resourceName = CmsResource.getParentFolder(resourceName);\n                    }\n                } while (cont);\n                vfsName = exportname + vfsName.substring(resourceName.length());\n            } else {\n                // if \"exportname\" is not set we must add the site root \n                vfsName = cms.getRequestContext().addSiteRoot(vfsName);\n            }\n            // check if the vfsname ends with \".jsp\", then the rfs name must end with .html, except the \n            // resource is a plain resouce\n            if (vfsName.toLowerCase().endsWith(\".jsp\")) {\n                CmsResource res = cms.readFileHeader(originalVfsName);\n                if (res.getType() != CmsResourceTypePlain.C_RESOURCE_TYPE_ID) {\n                    vfsName += \".html\";\n                }\n            }\n        } catch (CmsException e) {\n            // ignore exception, leave vfsName unmodified\n        }\n        // add export rfs prefix and return result         \n        return OpenCms.getStaticExportManager().getRfsPrefix() + vfsName;        \n    }","commit_id":"ba34e72bc295a7860a603ea53de327e1b91f962d","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Exports the requested uri and at the same time writes the uri to the response output stream\n     * if required.<p>\n     * \n     * @param req the current request\n     * @param res the current response\n     * @param cms an initialized cms context (should be initialized with the \"Guest\" user only)\n     * @param data the static export data set\n     * @return status code of the export operation, status codes are the same as http status codes (200,303,304)\n     * @throws CmsException in case of errors accessing the VFS\n     * @throws ServletException in case of errors accessing the servlet \n     * @throws IOException in case of erros writing to the export output stream\n     */\n    public int export(HttpServletRequest req, HttpServletResponse res, CmsObject cms, CmsStaticExportData data) \n    throws CmsException, IOException, ServletException {\n\n        int status = -1;\n                \n        CmsFile file;\n        // TODO: Check if setting site root to \"/\" still works with HTML pages that contain links\n       \n        String vfsName = data.getVfsName();        \n        String rfsName = data.getRfsName();\n        CmsResource resource = data.getResource();\n        \n        // cut the site root from the vfsName and switch to the correct site\n        String siteRoot = CmsSiteManager.getSiteRoot(vfsName);\n        \n        if (siteRoot != null) {\n            vfsName = vfsName.substring(siteRoot.length());\n        } else {\n            siteRoot=\"/\";\n        }\n    \n        if (OpenCms.getLog(this).isDebugEnabled()) {\n            OpenCms.getLog(this).debug(\"Site root \"+siteRoot+\" / vfsName \"+ vfsName);\n        }\n                \n        cms.getRequestContext().setSiteRoot(siteRoot);\n\n        String oldUri = null;\n               \n        // this flag signals if the export method is used for \"export on demand\" or \n        // \"export on publish\". \n        // if no request and result stream are available, it was called during \"export on publish\"\n        boolean exportOnDemand = ((req != null) && (res != null));\n                        \n        if (OpenCms.getLog(this).isDebugEnabled()) {\n            OpenCms.getLog(this).debug(\"Static export starting for resource \" + data);\n        }\n        \n        // read vfs resource\n        if (resource.isFile()) {\n            file = cms.readFile(vfsName);\n        } else {\n            file = CmsFile.upgrade(OpenCmsCore.getInstance().initResource(cms, vfsName, req, res), cms);\n            vfsName = vfsName + file.getName();\n            rfsName += C_EXPORT_DEFAULT_FILE;\n        }\n       \n        // check loader id for resource\n        int loaderId = file.getLoaderId();\n        I_CmsResourceLoader loader = OpenCms.getLoaderManager().getLoader(loaderId);\n        if ((loader == null) || (! loader.isStaticExportEnabled())) {\n            throw new CmsException(\"Unable to export VFS file \" + vfsName + \", loader with id \" + loaderId + \" does not support static export\");\n        }\n\n        FileOutputStream exportStream = null;\n        File exportFile = null;\n        String exportFileName = CmsLinkManager.normalizeRfsPath(getExportPath() + rfsName.substring(1));\n        \n        // only export those resource where the export property is set\n        if (OpenCms.getLinkManager().exportRequired(cms, vfsName)) {\n            // make sure all required parent folder exist\n            createExportFolder(rfsName);\n            status = HttpServletResponse.SC_OK;\n            // generate export file instance and output stream\n            exportFile = new File(exportFileName);                 \n        } else {\n            // the resource was not used for export, so return HttpServletResponse.SC_SEE_OTHER\n            // as a signal for not exported resource\n            status = HttpServletResponse.SC_SEE_OTHER;\n        }\n\n        // ensure we have exactly the same setup as if called \"the usual way\"\n        // we only have to do this in case of the static export on demand\n        if (exportOnDemand) {        \n            String mimetype = OpenCms.getLoaderManager().getMimeType(file.getName(), cms.getRequestContext().getEncoding());\n            res.setContentType(mimetype);\n            oldUri = cms.getRequestContext().getUri();\n            cms.getRequestContext().setUri(vfsName);\n        }\n                                        \n        // do the export\n        byte[] result = loader.export(cms, file, req, res);\n                \n        // release unused resources\n        file = null;\n        \n        if (result != null) {\n            if (exportFile != null) {\n                // write new exported file content\n                try {\n                    exportStream = new FileOutputStream(exportFile);\n                    exportStream.write(result);\n                    exportStream.close();\n                    // the resource was exported, so return status ok\n                    status = HttpServletResponse.SC_OK;\n                    \n                } catch (Throwable t) {\n                    throw new CmsException(\"Creation of static export output stream failed for RFS file \" + exportFileName);\n                }\n                // update the file with the modification date from the server\n                if (req != null) {\n                    Long dateLastModified = (Long)req.getAttribute(I_CmsConstants.C_HEADER_OPENCMS_EXPORT);\n                    if ((dateLastModified != null) && (dateLastModified.longValue() != -1)) {\n                        exportFile.setLastModified((dateLastModified.longValue() / 1000) * 1000);\n                    }            \n                           \n                    if (OpenCms.getLog(this).isDebugEnabled()) {\n                        OpenCms.getLog(this).debug(\"res \"+exportFile.getName()+\" [Timestamp=\"+(dateLastModified.longValue() / 1000) * 1000+\"]\");\n                    }  \n                  \n              } else {\n                    // otherweise take the last modification date form the OpenCms resource\n                    exportFile.setLastModified((resource.getDateLastModified() / 1000) *1000);\n                }\n            }\n        } else {\n            // the resource was not written because it was not modified. \n            // set the status to not modified\n            status = HttpServletResponse.SC_NOT_MODIFIED;\n        }\n       \n        // restore context\n        // we only have to do this in case of the static export on demand\n        if (exportOnDemand) {  \n            cms.getRequestContext().setUri(oldUri);\n        }\n                \n        // log export success \n        if (OpenCms.getLog(this).isInfoEnabled()) {\n            OpenCms.getLog(this).info(\"Static exported vfs file '\" + vfsName + \"' to rfs file '\" + exportFileName + \"'\");\n        }\n        \n        return status;\n    }","id":50262,"modified_method":"/**\n     * Exports the requested uri and at the same time writes the uri to the response output stream\n     * if required.<p>\n     * \n     * @param req the current request\n     * @param res the current response\n     * @param cms an initialized cms context (should be initialized with the \"Guest\" user only)\n     * @param data the static export data set\n     * @return status code of the export operation, status codes are the same as http status codes (200,303,304)\n     * @throws CmsException in case of errors accessing the VFS\n     * @throws ServletException in case of errors accessing the servlet \n     * @throws IOException in case of erros writing to the export output stream\n     */\n    public int export(HttpServletRequest req, HttpServletResponse res, CmsObject cms, CmsStaticExportData data) \n    throws CmsException, IOException, ServletException {\n\n        int status = -1;\n                \n        CmsFile file;\n\n        String vfsName = data.getVfsName();        \n        String rfsName = data.getRfsName();\n        CmsResource resource = data.getResource();\n        \n        // cut the site root from the vfsName and switch to the correct site\n        String siteRoot = CmsSiteManager.getSiteRoot(vfsName);\n        \n        if (siteRoot != null) {\n            vfsName = vfsName.substring(siteRoot.length());\n        } else {\n            siteRoot=\"/\";\n        }\n    \n        if (OpenCms.getLog(this).isDebugEnabled()) {\n            OpenCms.getLog(this).debug(\"Static export site root \" + siteRoot + \" / vfsName \" + vfsName);\n        }\n                \n        cms.getRequestContext().setSiteRoot(siteRoot);\n\n        String oldUri = null;\n               \n        // this flag signals if the export method is used for \"on demand\" or \"after publish\". \n        // if no request and result stream are available, it was called during \"export on publish\"\n        boolean exportOnDemand = ((req != null) && (res != null));\n                        \n        if (OpenCms.getLog(this).isDebugEnabled()) {\n            OpenCms.getLog(this).debug(\"Static export starting for resource \" + data);\n        }\n        \n        // read vfs resource\n        if (resource.isFile()) {\n            file = cms.readFile(vfsName);\n        } else {\n            file = CmsFile.upgrade(OpenCmsCore.getInstance().initResource(cms, vfsName, req, res), cms);\n            vfsName = vfsName + file.getName();\n            rfsName += C_EXPORT_DEFAULT_FILE;\n        }\n       \n        // check loader id for resource\n        int loaderId = file.getLoaderId();\n        I_CmsResourceLoader loader = OpenCms.getLoaderManager().getLoader(loaderId);\n        if ((loader == null) || (! loader.isStaticExportEnabled())) {\n            throw new CmsException(\"Unable to export VFS file \" + vfsName + \", loader with id \" + loaderId + \" does not support static export\");\n        }\n\n        FileOutputStream exportStream = null;\n        File exportFile = null;\n        String exportFileName = CmsLinkManager.normalizeRfsPath(getExportPath() + rfsName.substring(1));\n        \n        // only export those resource where the export property is set\n        if (OpenCms.getLinkManager().exportRequired(cms, vfsName)) {\n            // make sure all required parent folder exist\n            createExportFolder(rfsName);\n            status = HttpServletResponse.SC_OK;\n            // generate export file instance and output stream\n            exportFile = new File(exportFileName);                 \n        } else {\n            // the resource was not used for export, so return HttpServletResponse.SC_SEE_OTHER\n            // as a signal for not exported resource\n            status = HttpServletResponse.SC_SEE_OTHER;\n        }\n\n        // ensure we have exactly the same setup as if called \"the usual way\"\n        // we only have to do this in case of the static export on demand\n        if (exportOnDemand) {        \n            String mimetype = OpenCms.getLoaderManager().getMimeType(file.getName(), cms.getRequestContext().getEncoding());\n            res.setContentType(mimetype);\n            oldUri = cms.getRequestContext().getUri();\n            cms.getRequestContext().setUri(vfsName);\n        }\n                                        \n        // do the export\n        byte[] result = loader.export(cms, file, req, res);\n                \n        // release unused resources\n        file = null;\n        \n        if (result != null) {\n            if (exportFile != null) {\n                // write new exported file content\n                try {\n                    exportStream = new FileOutputStream(exportFile);\n                    exportStream.write(result);\n                    exportStream.close();\n                    // the resource was exported, so return status ok\n                    status = HttpServletResponse.SC_OK;\n                    \n                } catch (Throwable t) {\n                    throw new CmsException(\"Creation of static export output stream failed for RFS file \" + exportFileName);\n                }\n                // update the file with the modification date from the server\n                if (req != null) {\n                    Long dateLastModified = (Long)req.getAttribute(I_CmsConstants.C_HEADER_OPENCMS_EXPORT);\n                    if ((dateLastModified != null) && (dateLastModified.longValue() != -1)) {\n                        exportFile.setLastModified((dateLastModified.longValue() / 1000) * 1000);\n                        if (OpenCms.getLog(this).isDebugEnabled()) {\n                            OpenCms.getLog(this).debug(\"Setting RFS file \" + exportFile.getName() + \" 'date last modified' to \" + (dateLastModified.longValue() / 1000) * 1000);\n                        }                      \n                    }            \n                } else {\n                    // otherweise take the last modification date form the OpenCms resource\n                    exportFile.setLastModified((resource.getDateLastModified() / 1000) *1000);\n                }\n            }\n        } else {\n            // the resource was not written because it was not modified. \n            // set the status to not modified\n            status = HttpServletResponse.SC_NOT_MODIFIED;\n        }\n       \n        // restore context\n        // we only have to do this in case of the static export on demand\n        if (exportOnDemand) {  \n            cms.getRequestContext().setUri(oldUri);\n        }\n                \n        // log export success \n        if (OpenCms.getLog(this).isInfoEnabled()) {\n            OpenCms.getLog(this).info(\"Static exported vfs file '\" + vfsName + \"' to rfs file '\" + exportFileName + \"'\");\n        }\n        \n        return status;\n    }","commit_id":"ba34e72bc295a7860a603ea53de327e1b91f962d","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Calculates an absolute uri from a relative \"uri\" and the given absolute \"baseUri\".<p> \n     * \n     * If \"uri\" is already absolute, it is returned unchanged.\n     * This method also returns \"uri\" unchanged if it is not well-formed.<p>\n     *    \n     * @param relativeUri the relative uri to calculate an absolute uri for\n     * @param baseUri the base uri, this must be an absolute uri\n     * @return an absolute uri calculated from \"uri\" and \"baseUri\"\n     */\n    public static String getAbsoluteUri(String relativeUri, String baseUri) {\n        if ((relativeUri == null) || (relativeUri.charAt(0) == '/')) {\n            return relativeUri;\n        }\n        try {\n            URL url = new URL(new URL(m_baseUrl, baseUri), relativeUri);\n            if (url.getQuery() == null) {\n                return url.getPath();\n            } else {\n                return url.getPath() + \"?\" + url.getQuery();\n            }\n        } catch (MalformedURLException e) {\n            return relativeUri;\n        }\n    }","id":50263,"modified_method":"/**\n     * Calculates an absolute uri from a relative \"uri\" and the given absolute \"baseUri\".<p> \n     * \n     * If \"uri\" is already absolute, it is returned unchanged.\n     * This method also returns \"uri\" unchanged if it is not well-formed.<p>\n     *    \n     * @param relativeUri the relative uri to calculate an absolute uri for\n     * @param baseUri the base uri, this must be an absolute uri\n     * @return an absolute uri calculated from \"uri\" and \"baseUri\"\n     */\n    public static String getAbsoluteUri(String relativeUri, String baseUri) {\n        if ((relativeUri == null) || (relativeUri.charAt(0) == '/')) {\n            // uri is null or already absolute\n            return relativeUri;\n        }\n        try {\n            URL url = new URL(new URL(m_baseUrl, baseUri), relativeUri);\n            if (url.getQuery() == null) {\n                return url.getPath();\n            } else {\n                StringBuffer result = new StringBuffer(url.getPath().length() + url.getQuery().length() + 2);\n                result.append(url.getPath());\n                result.append('?');\n                result.append(url.getQuery());\n                return result.toString();\n            }\n        } catch (MalformedURLException e) {\n            return relativeUri;\n        }\n    }","commit_id":"6f2d6fb314833238b7a1102f1029810159d3c5b7","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Checks if the export is required for a given vfs resource.<p>\n     * \n     * @param cmsParam the current cms context\n     * @param vfsName the vfs resource name to check\n     * @return true if export is required for the given vfsName\n     */\n    protected boolean exportRequired(CmsObject cmsParam, String vfsName) {\n        boolean result = false;\n        if (OpenCms.getStaticExportManager().isStaticExportEnabled()) { \n            try {\n                // static export must always be checked with the export users permissions,\n                // not the current users permissions\n                CmsObject cms = OpenCms.initCmsObject(OpenCms.getDefaultUsers().getUserExport());\n                cms.getRequestContext().setSiteRoot(cmsParam.getRequestContext().getSiteRoot());\n                // let's look up export property in VFS\n                String exportValue = cms.readProperty(vfsName, I_CmsConstants.C_PROPERTY_EXPORT, true);\n                if (exportValue == null) {\n                    // no setting found for \"export\" property\n                    if (OpenCms.getStaticExportManager().getExportPropertyDefault()) {\n                        // if the default is \"true\" we always export\n                        result = true;\n                    } else {\n                        // check if the resource is exportable by suffix\n                        result = OpenCms.getStaticExportManager().isSuffixExportable(vfsName);\n                    }                        \n                } else {\n                    // \"export\" value found, if it was \"true\" we export\n                    result = Boolean.valueOf(exportValue).booleanValue();\n                }\n            } catch (Throwable t) {\n                // no export required (probably security issues, e.g. no access for export user)\n            }\n        }\n        return result;\n    }","id":50264,"modified_method":"/**\n     * Checks if the export is required for a given vfs resource.<p>\n     * \n     * @param cmsParam the current cms context\n     * @param vfsName the vfs resource name to check\n     * @return true if export is required for the given vfsName\n     */\n    protected boolean exportRequired(CmsObject cmsParam, String vfsName) {\n        boolean result = false;\n        if (OpenCms.getStaticExportManager().isStaticExportEnabled()) { \n            try {\n                // static export must always be checked with the export users permissions,\n                // not the current users permissions\n                CmsObject cms = OpenCms.initCmsObject(OpenCms.getDefaultUsers().getUserExport());\n                cms.getRequestContext().setSiteRoot(cmsParam.getRequestContext().getSiteRoot());\n                // let's look up export property in VFS\n                String exportValue = cms.readPropertyObject(vfsName, I_CmsConstants.C_PROPERTY_EXPORT, true).getValue();\n                if (exportValue == null) {\n                    // no setting found for \"export\" property\n                    if (OpenCms.getStaticExportManager().getExportPropertyDefault()) {\n                        // if the default is \"true\" we always export\n                        result = true;\n                    } else {\n                        // check if the resource is exportable by suffix\n                        result = OpenCms.getStaticExportManager().isSuffixExportable(vfsName);\n                    }                        \n                } else {\n                    // \"export\" value found, if it was \"true\" we export\n                    result = Boolean.valueOf(exportValue).booleanValue();\n                }\n            } catch (Throwable t) {\n                // no export required (probably security issues, e.g. no access for export user)\n            }\n        }\n        return result;\n    }","commit_id":"6f2d6fb314833238b7a1102f1029810159d3c5b7","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Reads the requested resource from the OpenCms VFS,\n     * in case a directory name is requested, the default files of the \n     * directory will be looked up and the first match is returned.<p>\n     *\n     * @param cms the current CmsObject\n     * @param resourceName the requested resource\n     * @param req the current request\n     * @param res the current response\n     * @return CmsFile the requested file read from the VFS\n     * \n     * @throws CmsException in case the file does not exist or the user has insufficient access permissions \n     */\n    public CmsResource initResource(CmsObject cms, String resourceName, HttpServletRequest req, HttpServletResponse res) throws CmsException {\n\n        CmsResource resource = null;\n        CmsException tmpException = null;\n\n        try {\n            // try to read the requested resource\n            resource = cms.readFileHeader(resourceName);\n            // resource exists, lets check if we have a file or a folder\n            if (resource.isFolder()) {\n                // the resource is a folder, check if C_PROPERTY_DEFAULT_FILE is set on folder\n                try {                \n                    String defaultFileName = cms.readProperty(CmsResource.getFolderPath(cms.readAbsolutePath(resource)), I_CmsConstants.C_PROPERTY_DEFAULT_FILE);\n                    if (defaultFileName != null) {\n                        // property was set, so look up this file first\n                        String tmpResourceName = CmsResource.getFolderPath(cms.readAbsolutePath(resource)) + defaultFileName;\n                        resource = cms.readFileHeader(tmpResourceName);\n                        // no exception? so we have found the default file                         \n                        cms.getRequestContext().setUri(tmpResourceName);\n                    } \n                } catch (CmsSecurityException se) {\n                    // permissions deny access to the resource\n                    throw se;\n                } catch (CmsException e) {\n                    // ignore all other exceptions and continue the lookup process\n                }                \n                if (resource.isFolder()) {\n                    // resource is (still) a folder, check default files specified in configuration\n                    for (int i = 0; i < m_defaultFilenames.length; i++) {\n                        String tmpResourceName = CmsResource.getFolderPath(cms.readAbsolutePath(resource)) + m_defaultFilenames[i];\n                        try {      \n                            resource = cms.readFileHeader(tmpResourceName);\n                            // no exception? So we have found the default file                         \n                            cms.getRequestContext().setUri(tmpResourceName);\n                            // stop looking for default files   \n                            break;\n                        } catch (CmsSecurityException se) {\n                            // permissions deny access to the resource\n                            throw se;\n                        } catch (CmsException e) {\n                            // ignore all other exceptions and continue the lookup process\n                        }     \n                    }           \n                }\n            }\n            if (resource.isFolder()) {\n                // we only want files as a result for further processing\n                resource = null;\n            }\n        } catch (CmsException e) {\n            // file or folder with given name does not exist, store exception\n            tmpException = e;\n            resource = null;\n        }\n          \n        if (resource != null) {\n            // test if this file is only available for internal access operations\n            if ((resource.getFlags() & I_CmsConstants.C_ACCESS_INTERNAL_READ) > 0) {\n                throw new CmsException(CmsException.C_ERROR_DESCRIPTION[CmsException.C_INTERNAL_FILE] + cms.getRequestContext().getUri(), CmsException.C_INTERNAL_FILE);\n            }\n        }\n\n        // test if this file has to be checked or modified\n        Iterator i = m_resourceInitHandlers.iterator();\n        while (i.hasNext()) {\n            try {\n                resource = ((I_CmsResourceInit)i.next()).initResource(resource, cms, req, res);\n                // the loop has to be interrupted when the exception is thrown!\n            } catch (CmsResourceInitException e) {\n                break;\n            }\n        }\n\n        // file is still null and not found exception was thrown, so throw original exception\n        if (resource == null && tmpException != null) {\n            throw tmpException;\n        }\n\n        // return the resource read from the VFS\n        return resource;\n    }","id":50265,"modified_method":"/**\n     * Reads the requested resource from the OpenCms VFS,\n     * in case a directory name is requested, the default files of the \n     * directory will be looked up and the first match is returned.<p>\n     *\n     * @param cms the current CmsObject\n     * @param resourceName the requested resource\n     * @param req the current request\n     * @param res the current response\n     * @return CmsFile the requested file read from the VFS\n     * \n     * @throws CmsException in case the file does not exist or the user has insufficient access permissions \n     */\n    public CmsResource initResource(CmsObject cms, String resourceName, HttpServletRequest req, HttpServletResponse res) throws CmsException {\n\n        CmsResource resource = null;\n        CmsException tmpException = null;\n\n        try {\n            // try to read the requested resource\n            resource = cms.readFileHeader(resourceName);\n            // resource exists, lets check if we have a file or a folder\n            if (resource.isFolder()) {\n                // the resource is a folder, check if C_PROPERTY_DEFAULT_FILE is set on folder\n                try {                \n                    String defaultFileName = cms.readPropertyObject(CmsResource.getFolderPath(cms.readAbsolutePath(resource)), I_CmsConstants.C_PROPERTY_DEFAULT_FILE, false).getValue();\n                    if (defaultFileName != null) {\n                        // property was set, so look up this file first\n                        String tmpResourceName = CmsResource.getFolderPath(cms.readAbsolutePath(resource)) + defaultFileName;\n                        resource = cms.readFileHeader(tmpResourceName);\n                        // no exception? so we have found the default file                         \n                        cms.getRequestContext().setUri(tmpResourceName);\n                    } \n                } catch (CmsSecurityException se) {\n                    // permissions deny access to the resource\n                    throw se;\n                } catch (CmsException e) {\n                    // ignore all other exceptions and continue the lookup process\n                }                \n                if (resource.isFolder()) {\n                    // resource is (still) a folder, check default files specified in configuration\n                    for (int i = 0; i < m_defaultFilenames.length; i++) {\n                        String tmpResourceName = CmsResource.getFolderPath(cms.readAbsolutePath(resource)) + m_defaultFilenames[i];\n                        try {      \n                            resource = cms.readFileHeader(tmpResourceName);\n                            // no exception? So we have found the default file                         \n                            cms.getRequestContext().setUri(tmpResourceName);\n                            // stop looking for default files   \n                            break;\n                        } catch (CmsSecurityException se) {\n                            // permissions deny access to the resource\n                            throw se;\n                        } catch (CmsException e) {\n                            // ignore all other exceptions and continue the lookup process\n                        }     \n                    }           \n                }\n            }\n            if (resource.isFolder()) {\n                // we only want files as a result for further processing\n                resource = null;\n            }\n        } catch (CmsException e) {\n            // file or folder with given name does not exist, store exception\n            tmpException = e;\n            resource = null;\n        }\n          \n        if (resource != null) {\n            // test if this file is only available for internal access operations\n            if ((resource.getFlags() & I_CmsConstants.C_ACCESS_INTERNAL_READ) > 0) {\n                throw new CmsException(CmsException.C_ERROR_DESCRIPTION[CmsException.C_INTERNAL_FILE] + cms.getRequestContext().getUri(), CmsException.C_INTERNAL_FILE);\n            }\n        }\n\n        // test if this file has to be checked or modified\n        Iterator i = m_resourceInitHandlers.iterator();\n        while (i.hasNext()) {\n            try {\n                resource = ((I_CmsResourceInit)i.next()).initResource(resource, cms, req, res);\n                // the loop has to be interrupted when the exception is thrown!\n            } catch (CmsResourceInitException e) {\n                break;\n            }\n        }\n\n        // file is still null and not found exception was thrown, so throw original exception\n        if (resource == null && tmpException != null) {\n            throw tmpException;\n        }\n\n        // return the resource read from the VFS\n        return resource;\n    }","commit_id":"6f2d6fb314833238b7a1102f1029810159d3c5b7","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Returns a <code>Map<\/code> of the parameters of this request.<p>\n     * \n     * Request parameters are extra information sent with the request.\n     * For HTTP servlets, parameters are contained in the query string\n     * or posted form data.<p>\n     *\n     * @return a <code>Map<\/code> containing parameter names as keys\n     *  and parameter values as map values\n     * @see javax.servlet.ServletRequest#getParameterMap()\n     */\n    public Map getParameterMap() {\n        return (this.m_parameters);\n    }","id":50266,"modified_method":"/**\n     * Returns a <code>Map<\/code> of the parameters of this request.<p>\n     * \n     * Request parameters are extra information sent with the request.\n     * For HTTP servlets, parameters are contained in the query string\n     * or posted form data.<p>\n     *\n     * @return a <code>Map<\/code> containing parameter names as keys\n     *  and parameter values as map values\n     * @see javax.servlet.ServletRequest#getParameterMap()\n     */\n    public Map getParameterMap() {\n        \n        return m_parameters;\n    }","commit_id":"93bac78895f2c2a9e9977236b54ee44f10c71035","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Returns the defined values for the specified request parameter, if any;\n     * otherwise, return <code>null<\/code>.\n     *\n     * @param name Name of the desired request parameter\n     * @return the defined values for the specified request parameter, if any;\n     *          <code>null<\/code> otherwise\n     * @see javax.servlet.ServletRequest#getParameterValues(java.lang.String)\n     */\n    public String[] getParameterValues(String name) {\n\n        String[] values = (String[]) m_parameters.get(name);\n        if (values != null) {\n            return (values);\n        } else {\n            return (null);\n        }\n    }","id":50267,"modified_method":"/**\n     * Returns the defined values for the specified request parameter, if any;\n     * otherwise, return <code>null<\/code>.\n     *\n     * @param name Name of the desired request parameter\n     * @return the defined values for the specified request parameter, if any;\n     *          <code>null<\/code> otherwise\n     * @see javax.servlet.ServletRequest#getParameterValues(java.lang.String)\n     */\n    public String[] getParameterValues(String name) {\n\n        return (String[]) m_parameters.get(name);\n    }","commit_id":"93bac78895f2c2a9e9977236b54ee44f10c71035","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/** \n     * Wrapper for dispatching to a file from the OpenCms VFS.<p>\n     *\n     * This method will dispatch to cache, to real file system or\n     * to the OpenCms VFS, whatever is needed.<p>\n     *\n     * This method is much more complex then it sould be because of the internal standard \n     * buffering of JSP pages.\n     * Because of that I can not just intercept and buffer the stream, since I don't have \n     * access to it (it is wrapped internally in the JSP pages, which have their own buffer).\n     * That leads to a solution where the data is first written to the bufferd stream, \n     * but without includes. Then it is parsed again later \n     * (in response.processCacheEntry()), enriched with the \n     * included elements that have been ommitted in the first case.\n     * I would love to see a simpler solution, but this works for now.<p>\n     *\n     * @param req the servlet request\n     * @param res the servlet response\n     * @throws ServletException in case something goes wrong\n     * @throws IOException in case something goes wrong\n     */ \n    public void include(\n        ServletRequest req, \n        ServletResponse res\n    ) throws ServletException, IOException {\n            \n        if (DEBUG > 0) {\n            System.err.println(\"FlexDispatcher: Include called with target=\" + m_vfsTarget + \" (ext_target=\" + m_extTarget + \")\");\n        }\n        CmsFlexController controller = (CmsFlexController)req.getAttribute(CmsFlexController.ATTRIBUTE_NAME);                \n        CmsObject cms = controller.getCmsObject();\n        \n        CmsResource resource = null;                \n        if ((m_extTarget == null) && (controller != null)) {\n            // check if the file exists in the VFS, if not set external target\n            try {\n                resource = cms.readFileHeader(m_vfsTarget);\n            } catch (CmsException e) {\n                if (e.getType() == CmsException.C_NOT_FOUND) {\n                    // file not found in VFS, treat it as external file\n                    m_extTarget = m_vfsTarget;\n                }\n            }\n        }\n                \n        if ((m_extTarget != null) || (controller == null)) {\n            includeExternal(req, res);\n            return;\n        }\n        \n        CmsFlexCache cache = controller.getCmsCache();\n        \n        // this is a request through the CMS\n        CmsFlexRequest f_req = controller.getCurrentRequest();\n        CmsFlexResponse f_res = controller.getCurrentResponse();\n        \n        if (f_req.containsIncludeCall(m_vfsTarget)) {\n            // this resource was already included earlier, so we have a (probably endless) inclusion loop\n            throw new ServletException(\"FlexDispatcher: Dectected inclusion loop for target \" + m_vfsTarget);\n        } else {     \n            f_req.addInlucdeCall(m_vfsTarget);\n        }\n       \n        // do nothing if response is already finished (probably as a result of an earlier redirect)\n        if (f_res.isSuspended()) {    \n            // remove this include call if response is suspended (e.g. because of redirect)\n            f_req.removeIncludeCall(m_vfsTarget);    \n            return;\n        }\n        \n        // indicate to response that all further output or headers are result of include calls\n        f_res.setCmsIncludeMode(true);                \n        \n        // create wrapper for request & response\n        CmsFlexRequest w_req = new CmsFlexRequest((HttpServletRequest)req, controller, m_vfsTarget);\n        CmsFlexResponse w_res = new CmsFlexResponse((HttpServletResponse)res, controller); \n        \n        // push req/res to controller stack\n        controller.push(w_req, w_res);\n        \n        // now that the req/res are on the stack, we need to make sure that they are removed later\n        // that's why we have this try { ... } finaly { ... } clause here\n        try {                     \n            CmsFlexCacheEntry entry = null;\n            if (f_req.isCacheable()) {\n                // caching is on, check if requested resource is already in cache            \n                entry = cache.get(w_req.getCmsCacheKey());\n                if (entry != null) {\n                    // the target is already in the cache\n                    try {\n                        if (DEBUG > 0) {\n                            System.err.println(\"FlexDispatcher: Loading file from cache for \" + m_vfsTarget);\n                        }\n                        controller.updateDateLastModified(entry.getDateLastModified());\n                        entry.service(w_req, w_res);\n                    } catch (CmsException e) {\n                        Throwable t;\n                        if (e.getRootCause() != null) {\n                            t = e.getRootCause();\n                        } else {\n                            t = e;\n                        }\n                        t = controller.setThrowable(e, m_vfsTarget);\n                        throw new ServletException(\"FlexDispatcher: Error while loading file from cache for \" + m_vfsTarget + \"\\n\" + t, t);\n                    }                       \n                } else { \n                    // cache is on and resource is not yet cached, so we need to read the cache key for the response\n                    CmsFlexCacheKey res_key = cache.getKey(CmsFlexCacheKey.getKeyName(m_vfsTarget, w_req.isOnline(), w_req.isWorkplace()));            \n                    if (res_key != null) {\n                        // key already in cache, reuse it\n                        w_res.setCmsCacheKey(res_key);                                             \n                    } else {                                \n                        // cache key is unknown, read key from properties\n                        String cacheProperty = null;\n                        try {\n                            // read caching property from requested VFS resource                                     \n                            cacheProperty = cms.readProperty(m_vfsTarget, I_CmsResourceLoader.C_LOADER_CACHEPROPERTY);\n                            if (cacheProperty == null) {\n                                // caching property not set, use default for resource type\n                                cacheProperty = cms.getResourceType(resource.getType()).getCachePropertyDefault();\n                            }\n                            cache.putKey(w_res.setCmsCacheKey(cms.getRequestContext().addSiteRoot(m_vfsTarget), cacheProperty, f_req.isOnline(), f_req.isWorkplace()));                                            \n                        } catch (CmsException e) {\n                            if (e.getType() == CmsException.C_FLEX_CACHE) {\n                                // invalid key is ignored but logged, used key is cache=never\n                                if (OpenCms.getLog(this).isWarnEnabled()) {\n                                    OpenCms.getLog(this).warn(\"Invalid FlexCache key for external resource \\\"\" + m_vfsTarget + \"\\\": \" + cacheProperty);\n                                }\n                                // there will be a vaild key in the response (\"cache=never\") even after an exception\n                                cache.putKey(w_res.getCmsCacheKey());\n                            } else {\n                                // all other errors are not handled here\n                                controller.setThrowable(e, m_vfsTarget);\n                                throw new ServletException(\"FlexDispatcher: Error while loading cache properties for \" + m_vfsTarget + \"\\n\" + e, e);\n                            }\n                        }                \n                        if (DEBUG > 1) {\n                            System.err.println(\"FlexDispatcher: Cache properties for file \" + m_vfsTarget + \" are: \" + cacheProperty);\n                        }\n                    }\n                }\n            }\n    \n            if (entry == null) {\n                // the target is not cached (or caching off), so load it with the internal resource loader\n                I_CmsResourceLoader loader = null;\n    \n                String variation = null;\n                // check cache keys to see if the result can be cached \n                if (w_req.isCacheable()) {\n                    variation = w_res.getCmsCacheKey().matchRequestKey(w_req.getCmsCacheKey());\n                }\n                // indicate to the response if caching is not required\n                w_res.setCmsCachingRequired(variation != null);\n                            \n                try {\n                    if (resource == null) {\n                        resource = cms.readFileHeader(m_vfsTarget);\n                    }\n                    int type = resource.getLoaderId();\n                    if (DEBUG > 0) {\n                        System.err.println(\"FlexDispatcher: Loading resource type \" + type);\n                    }\n                    loader = OpenCms.getLoaderManager().getLoader(type);\n                } catch (ClassCastException e) {\n                    controller.setThrowable(e, m_vfsTarget);\n                    throw new ServletException(\"FlexDispatcher: CmsResourceLoader interface not implemented for cms resource \" + m_vfsTarget + \"\\n\" + e, e);\n                } catch (CmsException e) {\n                    // file might not exist or no read permissions\n                    controller.setThrowable(e, m_vfsTarget);\n                    throw new ServletException(\"FlexDispatcher: Error while reading header for cms resource \" + m_vfsTarget + \"\\n\" + e, e);\n                }\n                         \n                if (DEBUG > 0) {\n                    System.err.println(\"FlexDispatcher: Internal call, loading file using loader.service() for \" + m_vfsTarget);\n                }\n                try {\n                    loader.service(cms, resource, w_req, w_res);\n                } catch (CmsException e) {\n                    // an error occured durion access to OpenCms\n                    controller.setThrowable(e, m_vfsTarget);\n                    throw new ServletException(e);\n                }\n    \n                entry = w_res.processCacheEntry(); \n                if ((entry != null) && (variation != null) && w_req.isCacheable()) {   \n                    // the result can be cached\n                    if (w_res.getCmsCacheKey().m_timeout > 0) {\n                        // cache entry has a timeout, set last modified to time of last creation\n                        entry.setDateLastModifiedToPreviousTimeout(w_res.getCmsCacheKey().m_timeout);\n                        controller.updateDateLastModified(entry.getDateLastModified());\n                    } else {\n                        // no timeout, use last modified date from files in VFS\n                        entry.setDateLastModified(controller.getDateLastModified());\n                    }\n                    cache.put(w_res.getCmsCacheKey(), entry, variation);                        \n                } else {\n                    // result can not be cached, do not use \"last modified\" optimization\n                    controller.updateDateLastModified(-1);\n                }\n            }\n            \n            if (f_res.hasIncludeList()) {\n                // Special case: This indicates that the output was not yet displayed\n                java.util.Map headers = w_res.getHeaders();\n                byte[] result = w_res.getWriterBytes();\n                if (DEBUG > 3) {\n                    System.err.println(\"Non-display include call - Result of include is:\\n\" + new String(result));\n                }\n                CmsFlexResponse.processHeaders(headers, f_res);\n                f_res.addToIncludeResults(result); \n                result = null;\n            }                    \n        } finally {             \n            // indicate to response that include is finished\n            f_res.setCmsIncludeMode(false);\n            f_req.removeIncludeCall(m_vfsTarget);      \n              \n            // pop req/res from controller stack\n            controller.pop();               \n        } \n    }","id":50268,"modified_method":"/** \n     * Wrapper for dispatching to a file from the OpenCms VFS.<p>\n     *\n     * This method will dispatch to cache, to real file system or\n     * to the OpenCms VFS, whatever is needed.<p>\n     *\n     * This method is much more complex then it sould be because of the internal standard \n     * buffering of JSP pages.\n     * Because of that I can not just intercept and buffer the stream, since I don't have \n     * access to it (it is wrapped internally in the JSP pages, which have their own buffer).\n     * That leads to a solution where the data is first written to the bufferd stream, \n     * but without includes. Then it is parsed again later \n     * (in response.processCacheEntry()), enriched with the \n     * included elements that have been ommitted in the first case.\n     * I would love to see a simpler solution, but this works for now.<p>\n     *\n     * @param req the servlet request\n     * @param res the servlet response\n     * @throws ServletException in case something goes wrong\n     * @throws IOException in case something goes wrong\n     */ \n    public void include(\n        ServletRequest req, \n        ServletResponse res\n    ) throws ServletException, IOException {\n            \n        if (DEBUG > 0) {\n            System.err.println(\"FlexDispatcher: Include called with target=\" + m_vfsTarget + \" (ext_target=\" + m_extTarget + \")\");\n        }\n        CmsFlexController controller = (CmsFlexController)req.getAttribute(CmsFlexController.ATTRIBUTE_NAME);                \n        CmsObject cms = controller.getCmsObject();\n        \n        CmsResource resource = null;                \n        if ((m_extTarget == null) && (controller != null)) {\n            // check if the file exists in the VFS, if not set external target\n            try {\n                resource = cms.readFileHeader(m_vfsTarget);\n            } catch (CmsException e) {\n                if (e.getType() == CmsException.C_NOT_FOUND) {\n                    // file not found in VFS, treat it as external file\n                    m_extTarget = m_vfsTarget;\n                }\n            }\n        }\n                \n        if ((m_extTarget != null) || (controller == null)) {\n            includeExternal(req, res);\n            return;\n        }\n        \n        CmsFlexCache cache = controller.getCmsCache();\n        \n        // this is a request through the CMS\n        CmsFlexRequest f_req = controller.getCurrentRequest();\n        CmsFlexResponse f_res = controller.getCurrentResponse();\n        \n        if (f_req.containsIncludeCall(m_vfsTarget)) {\n            // this resource was already included earlier, so we have a (probably endless) inclusion loop\n            throw new ServletException(\"FlexDispatcher: Dectected inclusion loop for target \" + m_vfsTarget);\n        } else {     \n            f_req.addInlucdeCall(m_vfsTarget);\n        }\n       \n        // do nothing if response is already finished (probably as a result of an earlier redirect)\n        if (f_res.isSuspended()) {    \n            // remove this include call if response is suspended (e.g. because of redirect)\n            f_req.removeIncludeCall(m_vfsTarget);    \n            return;\n        }\n        \n        // indicate to response that all further output or headers are result of include calls\n        f_res.setCmsIncludeMode(true);                \n        \n        // create wrapper for request & response\n        CmsFlexRequest w_req = new CmsFlexRequest((HttpServletRequest)req, controller, m_vfsTarget);\n        CmsFlexResponse w_res = new CmsFlexResponse((HttpServletResponse)res, controller); \n        \n        // push req/res to controller stack\n        controller.push(w_req, w_res);\n        \n        // now that the req/res are on the stack, we need to make sure that they are removed later\n        // that's why we have this try { ... } finaly { ... } clause here\n        try {                     \n            CmsFlexCacheEntry entry = null;\n            if (f_req.isCacheable()) {\n                // caching is on, check if requested resource is already in cache            \n                entry = cache.get(w_req.getCmsCacheKey());\n                if (entry != null) {\n                    // the target is already in the cache\n                    try {\n                        if (DEBUG > 0) {\n                            System.err.println(\"FlexDispatcher: Loading file from cache for \" + m_vfsTarget);\n                        }\n                        controller.updateDateLastModified(entry.getDateLastModified());\n                        entry.service(w_req, w_res);\n                    } catch (CmsException e) {\n                        Throwable t;\n                        if (e.getRootCause() != null) {\n                            t = e.getRootCause();\n                        } else {\n                            t = e;\n                        }\n                        t = controller.setThrowable(e, m_vfsTarget);\n                        throw new ServletException(\"FlexDispatcher: Error while loading file from cache for \" + m_vfsTarget + \"\\n\" + t, t);\n                    }                       \n                } else { \n                    // cache is on and resource is not yet cached, so we need to read the cache key for the response\n                    CmsFlexCacheKey res_key = cache.getKey(CmsFlexCacheKey.getKeyName(m_vfsTarget, w_req.isOnline(), w_req.isWorkplace()));            \n                    if (res_key != null) {\n                        // key already in cache, reuse it\n                        w_res.setCmsCacheKey(res_key);                                             \n                    } else {                                \n                        // cache key is unknown, read key from properties\n                        String cacheProperty = null;\n                        try {\n                            // read caching property from requested VFS resource                                     \n                            cacheProperty = cms.readPropertyObject(m_vfsTarget, I_CmsResourceLoader.C_LOADER_CACHEPROPERTY, false).getValue();\n                            if (cacheProperty == null) {\n                                // caching property not set, use default for resource type\n                                cacheProperty = cms.getResourceType(resource.getType()).getCachePropertyDefault();\n                            }\n                            cache.putKey(w_res.setCmsCacheKey(cms.getRequestContext().addSiteRoot(m_vfsTarget), cacheProperty, f_req.isOnline(), f_req.isWorkplace()));                                            \n                        } catch (CmsException e) {\n                            if (e.getType() == CmsException.C_FLEX_CACHE) {\n                                // invalid key is ignored but logged, used key is cache=never\n                                if (OpenCms.getLog(this).isWarnEnabled()) {\n                                    OpenCms.getLog(this).warn(\"Invalid FlexCache key for external resource \\\"\" + m_vfsTarget + \"\\\": \" + cacheProperty);\n                                }\n                                // there will be a vaild key in the response (\"cache=never\") even after an exception\n                                cache.putKey(w_res.getCmsCacheKey());\n                            } else {\n                                // all other errors are not handled here\n                                controller.setThrowable(e, m_vfsTarget);\n                                throw new ServletException(\"FlexDispatcher: Error while loading cache properties for \" + m_vfsTarget + \"\\n\" + e, e);\n                            }\n                        }                \n                        if (DEBUG > 1) {\n                            System.err.println(\"FlexDispatcher: Cache properties for file \" + m_vfsTarget + \" are: \" + cacheProperty);\n                        }\n                    }\n                }\n            }\n    \n            if (entry == null) {\n                // the target is not cached (or caching off), so load it with the internal resource loader\n                I_CmsResourceLoader loader = null;\n    \n                String variation = null;\n                // check cache keys to see if the result can be cached \n                if (w_req.isCacheable()) {\n                    variation = w_res.getCmsCacheKey().matchRequestKey(w_req.getCmsCacheKey());\n                }\n                // indicate to the response if caching is not required\n                w_res.setCmsCachingRequired(variation != null);\n                            \n                try {\n                    if (resource == null) {\n                        resource = cms.readFileHeader(m_vfsTarget);\n                    }\n                    int type = resource.getLoaderId();\n                    if (DEBUG > 0) {\n                        System.err.println(\"FlexDispatcher: Loading resource type \" + type);\n                    }\n                    loader = OpenCms.getLoaderManager().getLoader(type);\n                } catch (ClassCastException e) {\n                    controller.setThrowable(e, m_vfsTarget);\n                    throw new ServletException(\"FlexDispatcher: CmsResourceLoader interface not implemented for cms resource \" + m_vfsTarget + \"\\n\" + e, e);\n                } catch (CmsException e) {\n                    // file might not exist or no read permissions\n                    controller.setThrowable(e, m_vfsTarget);\n                    throw new ServletException(\"FlexDispatcher: Error while reading header for cms resource \" + m_vfsTarget + \"\\n\" + e, e);\n                }\n                         \n                if (DEBUG > 0) {\n                    System.err.println(\"FlexDispatcher: Internal call, loading file using loader.service() for \" + m_vfsTarget);\n                }\n                try {\n                    loader.service(cms, resource, w_req, w_res);\n                } catch (CmsException e) {\n                    // an error occured durion access to OpenCms\n                    controller.setThrowable(e, m_vfsTarget);\n                    throw new ServletException(e);\n                }\n    \n                entry = w_res.processCacheEntry(); \n                if ((entry != null) && (variation != null) && w_req.isCacheable()) {   \n                    // the result can be cached\n                    if (w_res.getCmsCacheKey().m_timeout > 0) {\n                        // cache entry has a timeout, set last modified to time of last creation\n                        entry.setDateLastModifiedToPreviousTimeout(w_res.getCmsCacheKey().m_timeout);\n                        controller.updateDateLastModified(entry.getDateLastModified());\n                    } else {\n                        // no timeout, use last modified date from files in VFS\n                        entry.setDateLastModified(controller.getDateLastModified());\n                    }\n                    cache.put(w_res.getCmsCacheKey(), entry, variation);                        \n                } else {\n                    // result can not be cached, do not use \"last modified\" optimization\n                    controller.updateDateLastModified(-1);\n                }\n            }\n            \n            if (f_res.hasIncludeList()) {\n                // Special case: This indicates that the output was not yet displayed\n                java.util.Map headers = w_res.getHeaders();\n                byte[] result = w_res.getWriterBytes();\n                if (DEBUG > 3) {\n                    System.err.println(\"Non-display include call - Result of include is:\\n\" + new String(result));\n                }\n                CmsFlexResponse.processHeaders(headers, f_res);\n                f_res.addToIncludeResults(result); \n                result = null;\n            }                    \n        } finally {             \n            // indicate to response that include is finished\n            f_res.setCmsIncludeMode(false);\n            f_req.removeIncludeCall(m_vfsTarget);      \n              \n            // pop req/res from controller stack\n            controller.pop();               \n        } \n    }","commit_id":"93bac78895f2c2a9e9977236b54ee44f10c71035","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Exports all template resources found in a list of published resources.<p>\n     * \n     * @param cms the current cms object\n     * @param publishedTemplateResources list of potential candidates to export\n     * @param report an I_CmsReport instance to print output message, or null to write messages to the log file    \n     */\n    private void exportTemplateResources(CmsObject cms, List publishedTemplateResources, I_CmsReport report) {\n\n        String rfsName;\n        String url;\n  \n        int size = publishedTemplateResources.size();\n        int count = 1;\n\n        if (OpenCms.getLog(this).isDebugEnabled()) {\n            OpenCms.getLog(this).debug(\"Starting export of template resources with \" + size + \" possible canditates in list\");\n        }        \n        \n        report.println(report.key(\"report.staticexport.templateresources_begin\"), I_CmsReport.C_FORMAT_HEADLINE);\n\n        // now loop through all of them and request them from the server\n        Iterator i = publishedTemplateResources.iterator();\n        \n        int warning = 0;\n        // TODO: why this try ... finally ?\n        try {\n           //cms.getRequestContext().saveSiteRoot();\n           //cms.getRequestContext().setSiteRoot(\"/\");\n\n            while (i.hasNext()) {\n                rfsName = (String)i.next();\n                     \n                CmsStaticExportData data = getExportData(getRfsPrefix() + rfsName, null, cms);\n\n                report.print(\"(\" + count++ + \" / \" + size + \") \", I_CmsReport.C_FORMAT_NOTE);\n                report.print(report.key(\"report.exporting\"), I_CmsReport.C_FORMAT_NOTE);\n                report.print(rfsName);\n                report.print(report.key(\"report.dots\"));\n\n                url = getExportUrl() + getRfsPrefix() + rfsName;\n                \n                // add url parameters if nescessary\n                if (data.getParameters() != null && data.getParameters().length() > 0) {\n                    url += data.getParameters();\n                }\n\n                if (OpenCms.getLog(this).isDebugEnabled()) {\n                    OpenCms.getLog(this).debug(\"Sending request for RFS file \" + rfsName + \" with url (\" + url + \")\");\n                }\n                \n                // we have created an url, so request the resource\n                if (url != null) {\n                    try {\n                        // setup connections\n                        URL export = new URL(url);    \n                        HttpURLConnection.setFollowRedirects(false);\n                        HttpURLConnection urlcon = (HttpURLConnection)export.openConnection();\n                        // set request type to GET\n                        urlcon.setRequestMethod(\"GET\");\n                        // add special export header\n                        urlcon.setRequestProperty(I_CmsConstants.C_HEADER_OPENCMS_EXPORT, \"true\");\n                        \n                        // get the last modified date and add it to the request\n                        String exportFileName = CmsLinkManager.normalizeRfsPath(getExportPath() + rfsName.substring(1));\n                        File exportFile = new File(exportFileName);\n                        if (exportFile != null) {\n                            long dateLastModified = exportFile.lastModified();\n                            urlcon.setIfModifiedSince(dateLastModified);\n                           \n                            if (OpenCms.getLog(this).isDebugEnabled()) {\n                                OpenCms.getLog(this).debug(\"Request for RFS file \" + exportFile.getName() + \"' If-Modofied-Since' header set to \" +(dateLastModified / 1000) *1000);\n                            } \n                        }\n                     \n                        // now perform the request\n                        urlcon.connect();\n                        int status = urlcon.getResponseCode();\n                        urlcon.disconnect();\n                        \n                        if (OpenCms.getLog(this).isInfoEnabled()) {\n                            OpenCms.getLog(this).info(\"Request result for RFS file \" + rfsName+\" with url (\" + url + \") was STATUS=\" + status);\n                        }\n                        \n                        // write the report\n                        if (status == HttpServletResponse.SC_OK) { \n                            report.println(report.key(\"report.ok\"), I_CmsReport.C_FORMAT_OK);\n                        } else if (status == HttpServletResponse.SC_NOT_MODIFIED) {\n                            report.println(report.key(\"report.skipped\"), I_CmsReport.C_FORMAT_NOTE);\n                        } else if (status == HttpServletResponse.SC_SEE_OTHER) {\n                            report.println(report.key(\"report.ignored\"), I_CmsReport.C_FORMAT_NOTE);\n                        } else {\n                            report.println(String.valueOf(status), I_CmsReport.C_FORMAT_OK);\n                        }\n                    } catch (IOException e) {\n                        report.println(e);\n                    }\n                }\n            }\n        } finally {\n           // cms.getRequestContext().restoreSiteRoot();\n        }\n        report.println(report.key(\"report.staticexport.templateresources_end\"), I_CmsReport.C_FORMAT_HEADLINE);\n\n    }","id":50269,"modified_method":"/**\n     * Exports all template resources found in a list of published resources.<p>\n     * \n     * @param publishedTemplateResources list of potential candidates to export\n     * @param report an I_CmsReport instance to print output message, or null to write messages to the log file    \n     */\n    private void exportTemplateResources(List publishedTemplateResources, I_CmsReport report) {\n\n        int size = publishedTemplateResources.size();\n        int count = 1;\n\n        if (OpenCms.getLog(this).isDebugEnabled()) {\n            OpenCms.getLog(this).debug(\"Starting export of template resources with \" + size + \" possible canditates in list\");\n        }        \n        \n        report.println(report.key(\"report.staticexport.templateresources_begin\"), I_CmsReport.C_FORMAT_HEADLINE);\n\n        // now loop through all of them and request them from the server\n        Iterator i = publishedTemplateResources.iterator();\n\n        while (i.hasNext()) {\n            String rfsName = (String)i.next();\n\n            report.print(\"(\" + count++ + \" / \" + size + \") \", I_CmsReport.C_FORMAT_NOTE);\n            report.print(report.key(\"report.exporting\"), I_CmsReport.C_FORMAT_NOTE);\n            report.print(rfsName);\n            report.print(report.key(\"report.dots\"));\n\n            String exportUrlStr = getExportUrl() + getRfsPrefix() + rfsName;\n\n            if (OpenCms.getLog(this).isDebugEnabled()) {\n                OpenCms.getLog(this).debug(\"Sending request for RFS file \" + rfsName + \" with url (\" + exportUrlStr + \")\");\n            }\n\n            try {\n                // setup the connection and request the resource\n                URL exportUrl = new URL(exportUrlStr);\n                HttpURLConnection.setFollowRedirects(false);\n                HttpURLConnection urlcon = (HttpURLConnection)exportUrl.openConnection();\n                // set request type to GET\n                urlcon.setRequestMethod(\"GET\");\n                // add special export header\n                urlcon.setRequestProperty(I_CmsConstants.C_HEADER_OPENCMS_EXPORT, \"true\");\n\n                // get the last modified date and add it to the request\n                String exportFileName = CmsLinkManager.normalizeRfsPath(getExportPath() + rfsName.substring(1));\n                File exportFile = new File(exportFileName);\n                if (exportFile != null) {\n                    long dateLastModified = exportFile.lastModified();\n                    urlcon.setIfModifiedSince(dateLastModified);\n\n                    if (OpenCms.getLog(this).isDebugEnabled()) {\n                        OpenCms.getLog(this).debug(\"Request for RFS file \" + exportFile.getName() + \"' If-Modofied-Since' header set to \" + (dateLastModified / 1000) * 1000);\n                    }\n                }\n\n                // now perform the request\n                urlcon.connect();\n                int status = urlcon.getResponseCode();\n                urlcon.disconnect();\n\n                if (OpenCms.getLog(this).isInfoEnabled()) {\n                    OpenCms.getLog(this).info(\"Request result for RFS file \" + rfsName + \" with url (\" + exportUrlStr + \") was STATUS=\" + status);\n                }\n\n                // write the report\n                if (status == HttpServletResponse.SC_OK) {\n                    report.println(report.key(\"report.ok\"), I_CmsReport.C_FORMAT_OK);\n                } else if (status == HttpServletResponse.SC_NOT_MODIFIED) {\n                    report.println(report.key(\"report.skipped\"), I_CmsReport.C_FORMAT_NOTE);\n                } else if (status == HttpServletResponse.SC_SEE_OTHER) {\n                    report.println(report.key(\"report.ignored\"), I_CmsReport.C_FORMAT_NOTE);\n                } else {\n                    report.println(String.valueOf(status), I_CmsReport.C_FORMAT_OK);\n                }\n            } catch (IOException e) {\n                report.println(e);\n            }\n        }\n        report.println(report.key(\"report.staticexport.templateresources_end\"), I_CmsReport.C_FORMAT_HEADLINE);\n\n    }","commit_id":"93bac78895f2c2a9e9977236b54ee44f10c71035","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Does the actual static export.<p>\n     *  \n     * @param resources a list of CmsPublishedREsources to start the static export with\n     * @param report an I_CmsReport instance to print output message, or null to write messages to the log file      \n     * @throws CmsException in case of errors accessing the VFS\n     * @throws IOException in case of erros writing to the export output stream\n     * @throws ServletException in case of errors accessing the servlet \n     */\n    private void doStaticExport(List resources, I_CmsReport report)\n         throws CmsException, IOException, ServletException {\n        \n        boolean templatesFound;\n         \n        // export must be done in the context of the export user    \n        CmsObject cmsExportObject = OpenCms.initCmsObject(OpenCms.getDefaultUsers().getUserExport());\n \n        CmsProject originalProject = cmsExportObject.getRequestContext().currentProject();\n        CmsProject onlineProject = cmsExportObject.readProject(I_CmsConstants.C_PROJECT_ONLINE_ID);\n        \n        \n        try {       \n            // switch to the online project\n            cmsExportObject.getRequestContext().setCurrentProject(onlineProject);\n            setTimestamp(System.currentTimeMillis());\n            // first export all non-template resources,\n            \n           \n            templatesFound = exportNonTemplateResources(cmsExportObject, resources, report);\n            \n            // we do only have to process the tempaltes resources if some of them were published or the\n            // override switch was set in the OpenCms configuration\n        \n            if ((templatesFound) || (!getQuickPlainExport())) {\n                // get all template resources which are potential candidates for an static export\n                List publishedTemplateResources = cmsExportObject.readStaticExportResources(C_EXPORT_LINK_WITHOUT_PARAMETER, 0);\n                \n                // set the timestamp to current time, so all parameter resources found in the next\n                // step are stored with the correct timestamp\n                setTimestamp(System.currentTimeMillis());\n                 \n                exportTemplateResources(cmsExportObject, publishedTemplateResources, report);\n                \n                // now process all parameter links until no new ones are found\n                publishedTemplateResources = cmsExportObject.readStaticExportResources(C_EXPORT_LINK_WITH_PARAMETER, 0);\n                while (publishedTemplateResources.size() > 0) {\n                    setTimestamp(System.currentTimeMillis());\n                  \n                    exportTemplateResources(cmsExportObject, publishedTemplateResources, report);\n                    publishedTemplateResources = cmsExportObject.readStaticExportResources(C_EXPORT_LINK_WITH_PARAMETER, getTimestamp());\n                   \n                }\n                 \n            }\n        } finally {\n            // switch back to the orginal project\n            cmsExportObject.getRequestContext().setCurrentProject(originalProject);\n        }\n     }","id":50270,"modified_method":"/**\n     * Does the actual static export.<p>\n     *  \n     * @param resources a list of CmsPublishedREsources to start the static export with\n     * @param report an I_CmsReport instance to print output message, or null to write messages to the log file      \n     * @throws CmsException in case of errors accessing the VFS\n     * @throws IOException in case of erros writing to the export output stream\n     * @throws ServletException in case of errors accessing the servlet \n     */\n    private void doExportAfterPublish(List resources, I_CmsReport report)\n    throws CmsException, IOException, ServletException {\n\n        boolean templatesFound;\n\n        // export must be done in the context of the export user \n        CmsObject cmsExportObject = OpenCms.initCmsObject(OpenCms.getDefaultUsers().getUserExport());\n\n        // first export all non-template resources,\n        templatesFound = exportNonTemplateResources(cmsExportObject, resources, report);\n\n        // export template resourses (check \"plainoptimization\" setting)\n        if ((templatesFound) || (!getQuickPlainExport())) {\n\n            long timestamp = 0;\n            List publishedTemplateResources;\n            boolean newTemplateLinksFound;\n            int linkMode = C_EXPORT_LINK_WITHOUT_PARAMETER;\n\n            do {\n                // get all template resources which are potential candidates for a static export\n                publishedTemplateResources = cmsExportObject.readStaticExportResources(linkMode, timestamp);\n                newTemplateLinksFound = publishedTemplateResources.size() > 0;\n                if (newTemplateLinksFound) {\n                    if (linkMode == C_EXPORT_LINK_WITHOUT_PARAMETER) {\n                        // first loop, switch mode to parameter links, leave the timestamp unchanged\n                        linkMode = C_EXPORT_LINK_WITH_PARAMETER;\n                    } else {\n                        // second and subsequent loops, only look for links not already exported\n                        // this can only be the case for a link with parameters \n                        // that was present on a page also generated with parameters\n                        timestamp = System.currentTimeMillis();\n                    }\n                    exportTemplateResources(publishedTemplateResources, report);\n                }\n                // if no new template links where found we are finished\n            } while (newTemplateLinksFound);\n        }\n    }","commit_id":"93bac78895f2c2a9e9977236b54ee44f10c71035","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Starts a complete static export of all resources.<p>\n     * \n     * @param cms the current cms object\n     * @param purgeFirst flag to delete all resources in the export folder of the rfs\n     * @param report an I_CmsReport instance to print output message, or null to write messages to the log file   \n     * @throws CmsException in case of errors accessing the VFS\n     * @throws IOException in case of erros writing to the export output stream\n     * @throws ServletException in case of errors accessing the servlet \n     */\n    public synchronized void exportAll(CmsObject cms, boolean purgeFirst, I_CmsReport report) \n        throws CmsException, IOException, ServletException {\n        // delete all old exports if the purgeFirst flag is set\n        if (purgeFirst) {\n            \n            Map eventData = (Map) new HashMap();\n            eventData.put(\"report\", report);\n            CmsEvent clearCacheEvent = new CmsEvent(cms, I_CmsEventListener.EVENT_CLEAR_CACHES, eventData, false);\n            OpenCms.fireCmsEvent(clearCacheEvent);  \n           \n            scrubExportFolder();\n            cms.deleteAllStaticExportPublishedResources(C_EXPORT_LINK_WITHOUT_PARAMETER);\n            cms.deleteAllStaticExportPublishedResources(C_EXPORT_LINK_WITH_PARAMETER);\n            \n        }\n        \n        //export must be done in the context of the export user    \n        CmsObject cmsExportObject = OpenCms.initCmsObject(OpenCms.getDefaultUsers().getUserExport());        \n      \n        List publishedResources = getAllResources(cmsExportObject);\n           \n        // do the export\n        doStaticExport(publishedResources, report);     \n\n    }","id":50271,"modified_method":"/**\n     * Starts a complete static export of all resources.<p>\n     * \n     * @param cms the current cms object\n     * @param purgeFirst flag to delete all resources in the export folder of the rfs\n     * @param report an I_CmsReport instance to print output message, or null to write messages to the log file   \n     * @throws CmsException in case of errors accessing the VFS\n     * @throws IOException in case of erros writing to the export output stream\n     * @throws ServletException in case of errors accessing the servlet \n     */\n    public synchronized void exportFullStaticRender(CmsObject cms, boolean purgeFirst, I_CmsReport report)\n    throws CmsException, IOException, ServletException {\n\n        // delete all old exports if the purgeFirst flag is set\n        if (purgeFirst) {\n\n            Map eventData = (Map)new HashMap();\n            eventData.put(\"report\", report);\n            CmsEvent clearCacheEvent = new CmsEvent(cms, I_CmsEventListener.EVENT_CLEAR_CACHES, eventData, false);\n            OpenCms.fireCmsEvent(clearCacheEvent);\n\n            scrubExportFolder();\n            cms.deleteAllStaticExportPublishedResources(C_EXPORT_LINK_WITHOUT_PARAMETER);\n            cms.deleteAllStaticExportPublishedResources(C_EXPORT_LINK_WITH_PARAMETER);\n        }\n\n        //export must be done in the context of the export user    \n        CmsObject cmsExportObject = OpenCms.initCmsObject(OpenCms.getDefaultUsers().getUserExport());\n\n        List publishedResources = getAllResources(cmsExportObject);\n\n        // do the export\n        doExportAfterPublish(publishedResources, report);\n    }","commit_id":"93bac78895f2c2a9e9977236b54ee44f10c71035","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Returns the static export rfs name for a give vfs resoure which includes parameters.<p>\n     * \n     * @param cms an initialized cms context\n     * @param vfsName the name of the vfs resource\n     * @param parameters the parameters of this vfs resource\n     * @return the static export rfs name for a give vfs resoure\n     */    \n    public String getTranslatedRfsName(CmsObject cms, String vfsName, String parameters) {\n        String translatedRfsName = null;\n        String rfsBasename = getRfsName(cms, vfsName);\n\n        translatedRfsName = rfsBasename + \"_\" + OpenCms.getLinkManager().hashCode(parameters)+\".html\";\n        \n        // we have found a new rfs name for a vfs resource with parameters, so save it to the\n        // database\n        try {            \n            cms.writeStaticExportPublishedResource(translatedRfsName.substring(getRfsPrefix().length()), C_EXPORT_LINK_WITH_PARAMETER, parameters, getTimestamp());\n        } catch (CmsException e) {\n            if (OpenCms.getLog(this).isErrorEnabled()) {\n                OpenCms.getLog(this).error(\"Failed to write rfs resource \" + translatedRfsName + \"to database \", e);\n            }\n        }       \n        return translatedRfsName;\n        \n    }","id":50272,"modified_method":"/**\n     * Returns the static export rfs name for a give vfs resoure which includes parameters.<p>\n     * \n     * @param cms an initialized cms context\n     * @param vfsName the name of the vfs resource\n     * @param parameters the parameters of this vfs resource\n     * @return the static export rfs name for a give vfs resoure\n     */\n    public String getTranslatedRfsName(CmsObject cms, String vfsName, String parameters) {\n\n        // build the RFS name for the link with parameters\n        StringBuffer buf = new StringBuffer(128);\n        buf.append(getRfsName(cms, vfsName));\n        buf.append('_');\n        buf.append(OpenCms.getLinkManager().hashCode(parameters));\n        buf.append(\".html\");\n        String translatedRfsName = buf.toString();\n\n        // we have found a new rfs name for a vfs resource with parameters, so save it to the database\n        try {\n            cms.writeStaticExportPublishedResource(\n                translatedRfsName.substring(getRfsPrefix().length()),\n                C_EXPORT_LINK_WITH_PARAMETER,\n                parameters,\n                System.currentTimeMillis());\n        } catch (CmsException e) {\n            if (OpenCms.getLog(this).isErrorEnabled()) {\n                OpenCms.getLog(this).error(\"Failed to write RFS resource '\" + translatedRfsName + \"' to database \", e);\n            }\n        }\n        return translatedRfsName;\n    }","commit_id":"93bac78895f2c2a9e9977236b54ee44f10c71035","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Starts the static export on publish.<p>\n     * \n     * Exports all modified resources after a publish process into the real FS.<p>\n     *  \n     * @param cms the current cms object\n     * @param publishHistoryId the publichHistoryId of the published project\n     * @param report an I_CmsReport instance to print output message, or null to write messages to the log file   \n     * @throws CmsException in case of errors accessing the VFS\n     * @throws IOException in case of erros writing to the export output stream\n     * @throws ServletException in case of errors accessing the servlet \n     */\n    public synchronized void exportOnPublish(CmsObject cms, CmsUUID publishHistoryId, I_CmsReport report)\n        throws CmsException, IOException, ServletException { \n                \n        // first check if the test resource was published already\n        // if not, we must do a complete export of all static resources\n        String rfsName = CmsLinkManager.normalizeRfsPath(getExportPath() + getTestResource());\n        \n        if (OpenCms.getLog(this).isDebugEnabled()) {\n            OpenCms.getLog(this).debug(\"Static export, testing for test resource \"+rfsName);\n        }\n        \n        File file=new File(rfsName);\n        if (!file.exists()) {\n            if (OpenCms.getLog(this).isDebugEnabled()) {\n                OpenCms.getLog(this).debug(\"Test file does not exist -> do complete static export\");\n            }\n            // the file is not there, so expert everything\n            exportAll(cms, true, report);           \n        } else {\n            if (OpenCms.getLog(this).isDebugEnabled()) {\n                OpenCms.getLog(this).debug(\"Test file exists -> do static export on demand\");\n            }\n            // everything is ok, so continue\n            \n            // delete all resources deleted during the publish process\n            scrubExportFolders(publishHistoryId, true);   \n        \n            // this can be taken from the publish history\n            List publishedResources = cms.readPublishedResources(publishHistoryId);\n            \n            // do the export\n            doStaticExport(publishedResources, report);\n        }\n    }","id":50273,"modified_method":"/**\n     * Starts the static export on publish.<p>\n     * \n     * Exports all modified resources after a publish process into the real FS.<p>\n     *  \n     * @param cms the current cms object\n     * @param publishHistoryId the publichHistoryId of the published project\n     * @param report an I_CmsReport instance to print output message, or null to write messages to the log file   \n     * @throws CmsException in case of errors accessing the VFS\n     * @throws IOException in case of erros writing to the export output stream\n     * @throws ServletException in case of errors accessing the servlet \n     */\n    public synchronized void exportAfterPublish(CmsObject cms, CmsUUID publishHistoryId, I_CmsReport report)\n    throws CmsException, IOException, ServletException {\n\n        // first check if the test resource was published already\n        // if not, we must do a complete export of all static resources\n        String rfsName = CmsLinkManager.normalizeRfsPath(getExportPath() + getTestResource());\n\n        if (OpenCms.getLog(this).isDebugEnabled()) {\n            OpenCms.getLog(this).debug(\"Static export, checking test resource \" + rfsName);\n        }\n\n        File file = new File(rfsName);\n        if (!file.exists()) {\n            if (OpenCms.getLog(this).isDebugEnabled()) {\n                OpenCms.getLog(this).debug(\"Test resource does not exist -> do export 'full static render'\");\n            }\n            // the file is not there, so expert everything\n            exportFullStaticRender(cms, true, report);\n        } else {\n            if (OpenCms.getLog(this).isDebugEnabled()) {\n                OpenCms.getLog(this).debug(\"Test resource exists -> do static export 'after publish'\");\n            }\n\n            // delete all resources deleted during the publish process\n            scrubExportFolders(publishHistoryId, true);\n\n            // get the list of published resources from the publish history table\n            List publishedResources = cms.readPublishedResources(publishHistoryId);\n\n            // do the export\n            doExportAfterPublish(publishedResources, report);\n        }\n    }","commit_id":"93bac78895f2c2a9e9977236b54ee44f10c71035","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Controls if the static export is set to export on publish or export on demand.<p>\n     * \n     * @param value if true, the static export is set to export on publish\n     */\n    private void setStaticExportOnPublish(boolean value) {   \n        m_staticExportOnPublish = value;\n    }","id":50274,"modified_method":"/**\n     * Controls if the static export operates in \"on demand\" or \"after publish\" mode.<p>\n     * \n     * @param value if true, the static export is set to \"on demand\" mode\n     */\n    private void setStaticExportOnDemand(boolean value) {\n\n        m_staticExportOnDemand = value;\n    }","commit_id":"93bac78895f2c2a9e9977236b54ee44f10c71035","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Initializes the static export manager with the OpenCms system configuration.<p>\n     * \n     * @param configuration the OpenCms configuration\n     * @param cms an OpenCms context object (not used in static export manager)\n     * @return the initialized site manager\n     */\n    public static CmsStaticExportManager initialize(ExtendedProperties configuration, CmsObject cms) {\n        CmsStaticExportManager exportManager = new CmsStaticExportManager();\n        \n        if (OpenCms.getLog(CmsLog.CHANNEL_INIT).isDebugEnabled()) {\n            OpenCms.getLog(CmsLog.CHANNEL_INIT).debug(\"Created static export manager\" + ((cms != null)?(\" with CmsObject \" + cms):\"\"));\n        }\n        \n        // set if the static export is enabled or not\n        exportManager.setStaticExportEnabled(\"true\".equalsIgnoreCase(configuration.getString(\"staticexport.enabled\", \"false\")));\n\n         // set if the static export is set to export on publish or export on demand\n        exportManager.setStaticExportOnPublish(\"true\".equalsIgnoreCase(configuration.getString(\"staticexport.onpublish\", \"false\")));\n\n        // set the default value for the \"export\" property\n        exportManager.setExportPropertyDefault(\"true\".equalsIgnoreCase(configuration.getString(\"staticexport.export_default\", \"false\")));\n\n        // set if the quick plain export is enabled or not\n        exportManager.setQuickPlainExport(\"true\".equalsIgnoreCase(configuration.getString(\"staticexport.quick_plain_export\", \"true\")));\n               \n        // set the export URL\n        exportManager.setExportUrl(configuration.getString(\"staticexport.url\", \"http://127.0.0.1:8080/opencms/handle404\"));\n                                   \n        // set the export suffixes\n        String[] exportSuffixes = configuration.getStringArray(\"staticexport.export_suffixes\");\n        if (exportSuffixes == null) {\n            exportSuffixes = new String[0];\n        }\n        exportManager.setExportSuffixes(exportSuffixes);\n    \n        // set the static export folders in the vfs\n        String[] exportVfsFolders = configuration.getStringArray(\"staticexport.vfs_folders\");\n        if (exportVfsFolders == null) {\n            exportVfsFolders = new String[0];\n        }\n\n        // get the test resource\n        exportManager.setTestResource(configuration.getString(\"staticexport.testresource\", \"/system/shared/page.dtd\"));   \n        \n        m_exportFolderMatcher = new CmsExportFolderMatcher(exportVfsFolders, exportManager.getTestResource());\n      \n        \n        // set the path for the export\n        exportManager.setExportPath(OpenCms.getSystemInfo().getAbsoluteRfsPathRelativeToWebApplication(configuration.getString(\"staticexport.export_path\", \"export\")));\n\n        // replace the \"magic\" names                 \n        String servletName = OpenCms.getSystemInfo().getServletPath(); \n        String contextName = OpenCms.getSystemInfo().getContextPath();\n        \n        // set the \"magic\" names in the extended properties\n        configuration.setProperty(\"CONTEXT_NAME\", contextName);\n        configuration.setProperty(\"SERVLET_NAME\", servletName);\n        \n        // set the export URL\n        exportManager.setExportUrl(configuration.getString(\"staticexport.url\", \"http://127.0.0.1:8080/opencms/handle404\"));\n        \n        \n        // get the export prefix variables for rfs and vfs\n        String rfsPrefix = configuration.getString(\"staticexport.prefix_rfs\", contextName + \"/export\");\n        String vfsPrefix = configuration.getString(\"staticexport.prefix_vfs\", contextName + servletName);\n        \n        // set the export prefix variables for rfs and vfs\n        exportManager.setRfsPrefix(rfsPrefix);\n        exportManager.setVfsPrefix(vfsPrefix);    \n        \n        // set if links in the export should be relative or not\n        exportManager.setExportRelativeLinks(configuration.getBoolean(\"staticexport.relative_links\", false)); \n\n        // initialize \"exportname\" folders\n        exportManager.setExportnames();\n        \n        if (OpenCms.getLog(CmsLog.CHANNEL_INIT).isInfoEnabled()) {\n            OpenCms.getLog(CmsLog.CHANNEL_INIT).info(\". Static export        : \" + (exportManager.isStaticExportEnabled()?\"enabled\":\"disabled\"));\n            if (exportManager.isStaticExportEnabled()) {\n                OpenCms.getLog(CmsLog.CHANNEL_INIT).info(\". Export default       : \" + exportManager.getExportPropertyDefault());\n                OpenCms.getLog(CmsLog.CHANNEL_INIT).info(\". Export path          : \" + exportManager.getExportPath());\n                OpenCms.getLog(CmsLog.CHANNEL_INIT).info(\". Export rfs prefix    : \" + exportManager.getRfsPrefix());\n                OpenCms.getLog(CmsLog.CHANNEL_INIT).info(\". Export vfs prefix    : \" + exportManager.getVfsPrefix());\n                OpenCms.getLog(CmsLog.CHANNEL_INIT).info(\". Export link style    : \" + (exportManager.relativLinksInExport()?\"relative\":\"absolute\"));                \n            }\n        }               \n        \n        // initialize specific static export headers\n        String[] exportHeaders = null;\n        try {\n            exportHeaders = configuration.getStringArray(\"staticexport.headers\");\n            for (int i = 0; i < exportHeaders.length; i++) {\n                if (CmsStringSubstitution.split(exportHeaders[i], \":\").length == 2) {\n                    if (OpenCms.getLog(CmsLog.CHANNEL_INIT).isInfoEnabled()) {\n                        OpenCms.getLog(CmsLog.CHANNEL_INIT).info(\". Export headers       : \" + exportHeaders[i]);\n                    }\n                } else {\n                    if (OpenCms.getLog(CmsLog.CHANNEL_INIT).isWarnEnabled()) {\n                        OpenCms.getLog(CmsLog.CHANNEL_INIT).warn(\". Export headers       : \" + \"invalid header: \" + exportHeaders[i] + \", using default headers\");\n                    }\n                    exportHeaders = null;\n                    break;\n                }\n            }\n        } catch (Exception e) {\n            if (OpenCms.getLog(CmsLog.CHANNEL_INIT).isWarnEnabled()) {\n                OpenCms.getLog(CmsLog.CHANNEL_INIT).warn(\". Export headers       : non-critical error \" + e.toString());\n            }\n        }\n        exportManager.setExportHeaders(exportHeaders);\n        \n        return exportManager;\n    }","id":50275,"modified_method":"/**\n     * Initializes the static export manager with the OpenCms system configuration.<p>\n     * \n     * @param configuration the OpenCms configuration\n     * @param cms an OpenCms context object (not used in static export manager)\n     * @return the initialized site manager\n     */\n    public static CmsStaticExportManager initialize(ExtendedProperties configuration, CmsObject cms) {\n\n        CmsStaticExportManager exportManager = new CmsStaticExportManager();\n\n        if (OpenCms.getLog(CmsLog.CHANNEL_INIT).isDebugEnabled()) {\n            OpenCms.getLog(CmsLog.CHANNEL_INIT).debug(\"Created static export manager\" + ((cms != null) ? (\" with CmsObject \" + cms) : \"\"));\n        }\n\n        // set if the static export is enabled or not\n        exportManager.setStaticExportEnabled(\"true\".equalsIgnoreCase(configuration.getString(\n            \"staticexport.enabled\",\n            \"false\")));\n\n        // set if the static export is set to export on publish or export on demand\n        exportManager.setStaticExportOnDemand(!\"true\".equalsIgnoreCase(configuration.getString(\n            \"staticexport.onpublish\",\n            \"false\")));\n\n        // set the default value for the \"export\" property\n        exportManager.setExportPropertyDefault(\"true\".equalsIgnoreCase(configuration.getString(\n            \"staticexport.export_default\",\n            \"false\")));\n\n        // set if the quick plain export is enabled or not\n        exportManager.setQuickPlainExport(\"true\".equalsIgnoreCase(configuration.getString(\n            \"staticexport.quick_plain_export\",\n            \"true\")));\n\n        // set the export URL\n        exportManager.setExportUrl(configuration.getString(\n            \"staticexport.url\",\n            \"http://127.0.0.1:8080/opencms/handle404\"));\n\n        // set the export suffixes\n        String[] exportSuffixes = configuration.getStringArray(\"staticexport.export_suffixes\");\n        if (exportSuffixes == null) {\n            exportSuffixes = new String[0];\n        }\n        exportManager.setExportSuffixes(exportSuffixes);\n\n        // set the static export folders in the vfs\n        String[] exportVfsFolders = configuration.getStringArray(\"staticexport.vfs_folders\");\n        if (exportVfsFolders == null) {\n            exportVfsFolders = new String[0];\n        }\n\n        // get the test resource\n        exportManager.setTestResource(configuration.getString(\"staticexport.testresource\", \"/system/shared/page.dtd\"));\n\n        m_exportFolderMatcher = new CmsExportFolderMatcher(exportVfsFolders, exportManager.getTestResource());\n\n        // set the path for the export\n        exportManager.setExportPath(OpenCms.getSystemInfo().getAbsoluteRfsPathRelativeToWebApplication(\n            configuration.getString(\"staticexport.export_path\", \"export\")));\n\n        // replace the \"magic\" names                 \n        String servletName = OpenCms.getSystemInfo().getServletPath();\n        String contextName = OpenCms.getSystemInfo().getContextPath();\n\n        // set the \"magic\" names in the extended properties\n        configuration.setProperty(\"CONTEXT_NAME\", contextName);\n        configuration.setProperty(\"SERVLET_NAME\", servletName);\n\n        // set the export URL\n        exportManager.setExportUrl(configuration.getString(\n            \"staticexport.url\",\n            \"http://127.0.0.1:8080/opencms/handle404\"));\n\n        // get the export prefix variables for rfs and vfs\n        String rfsPrefix = configuration.getString(\"staticexport.prefix_rfs\", contextName + \"/export\");\n        String vfsPrefix = configuration.getString(\"staticexport.prefix_vfs\", contextName + servletName);\n\n        // set the export prefix variables for rfs and vfs\n        exportManager.setRfsPrefix(rfsPrefix);\n        exportManager.setVfsPrefix(vfsPrefix);\n\n        // set if links in the export should be relative or not\n        exportManager.setExportRelativeLinks(configuration.getBoolean(\"staticexport.relative_links\", false));\n\n        // initialize \"exportname\" folders\n        exportManager.setExportnames();\n\n        if (OpenCms.getLog(CmsLog.CHANNEL_INIT).isInfoEnabled()) {\n            OpenCms.getLog(CmsLog.CHANNEL_INIT).info(\". Static export        : \" + (exportManager.isStaticExportEnabled() ? \"enabled\" : \"disabled\"));\n            if (exportManager.isStaticExportEnabled()) {\n                OpenCms.getLog(CmsLog.CHANNEL_INIT).info(\". Export default       : \" + exportManager.getExportPropertyDefault());\n                OpenCms.getLog(CmsLog.CHANNEL_INIT).info(\". Export path          : \" + exportManager.getExportPath());\n                OpenCms.getLog(CmsLog.CHANNEL_INIT).info(\". Export rfs prefix    : \" + exportManager.getRfsPrefix());\n                OpenCms.getLog(CmsLog.CHANNEL_INIT).info(\". Export vfs prefix    : \" + exportManager.getVfsPrefix());\n                OpenCms.getLog(CmsLog.CHANNEL_INIT).info(\". Export link style    : \" + (exportManager.relativLinksInExport() ? \"relative\" : \"absolute\"));\n            }\n        }\n\n        // initialize specific static export headers\n        String[] exportHeaders = null;\n        try {\n            exportHeaders = configuration.getStringArray(\"staticexport.headers\");\n            for (int i = 0; i < exportHeaders.length; i++) {\n                if (CmsStringSubstitution.split(exportHeaders[i], \":\").length == 2) {\n                    if (OpenCms.getLog(CmsLog.CHANNEL_INIT).isInfoEnabled()) {\n                        OpenCms.getLog(CmsLog.CHANNEL_INIT).info(\". Export headers       : \" + exportHeaders[i]);\n                    }\n                } else {\n                    if (OpenCms.getLog(CmsLog.CHANNEL_INIT).isWarnEnabled()) {\n                        OpenCms.getLog(CmsLog.CHANNEL_INIT).warn(\". Export headers       : \" + \"invalid header: \" + exportHeaders[i] + \", using default headers\");\n                    }\n                    exportHeaders = null;\n                    break;\n                }\n            }\n        } catch (Exception e) {\n            if (OpenCms.getLog(CmsLog.CHANNEL_INIT).isWarnEnabled()) {\n                OpenCms.getLog(CmsLog.CHANNEL_INIT).warn(\". Export headers       : non-critical error \" + e.toString());\n            }\n        }\n        exportManager.setExportHeaders(exportHeaders);\n\n        return exportManager;\n    }","commit_id":"93bac78895f2c2a9e9977236b54ee44f10c71035","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Implements the CmsEvent interface,\n     * the static export properties uses the events to clear \n     * the list of cached keys in case a project is published.<p>\n     *\n     * @param event CmsEvent that has occurred\n     */\n    public synchronized void cmsEvent(CmsEvent event) {\n        switch (event.getType()) {\n            case I_CmsEventListener.EVENT_UPDATE_EXPORTS:\n                scrubExportFolder();\n                clearCaches(event);               \n                break;\n            case I_CmsEventListener.EVENT_PUBLISH_PROJECT:\n                // event data contains a list of the published resources\n                CmsUUID publishHistoryId = new CmsUUID((String) event.getData().get(\"publishHistoryId\"));\n                if (OpenCms.getLog(this).isDebugEnabled()) {\n                    OpenCms.getLog(this).debug(\"Static export manager catched event EVENT_PUBLISH_PROJECT for project ID \" + publishHistoryId);\n                }\n                \n                // decide what to do, static export on publish or staitc export on demand\n                \n                if (isStaticExportOnPublish()) {\n                    I_CmsReport report = (I_CmsReport) event.getData().get(\"report\");                 \n                    // static export on publish is enabled, so start the complete static export\n                    try {                \n                        exportOnPublish(event.getCmsObject(), publishHistoryId, report);                \n                    } catch (Exception e) {\n                        if (OpenCms.getLog(this).isErrorEnabled()) {\n                            OpenCms.getLog(this).error(\"Error during static export:\", e);\n                        }\n                    }\n                } else {\n                    // static export on demand enabled, so scrub the export folders only                   \n                    scrubExportFolders(publishHistoryId, false);\n                }\n\n                clearCaches(event);\n                break;\n            case I_CmsEventListener.EVENT_CLEAR_CACHES:\n                clearCaches(event);\n                break;\n            default:\n                // no operation\n        }\n    }","id":50276,"modified_method":"/**\n     * Implements the CmsEvent interface,\n     * the static export properties uses the events to clear \n     * the list of cached keys in case a project is published.<p>\n     *\n     * @param event CmsEvent that has occurred\n     */\n    public synchronized void cmsEvent(CmsEvent event) {\n\n        switch (event.getType()) {\n            case I_CmsEventListener.EVENT_UPDATE_EXPORTS:\n                scrubExportFolder();\n                clearCaches(event);\n                break;\n            case I_CmsEventListener.EVENT_PUBLISH_PROJECT:\n                // event data contains a list of the published resources\n                CmsUUID publishHistoryId = new CmsUUID((String)event.getData().get(\"publishHistoryId\"));\n                if (OpenCms.getLog(this).isDebugEnabled()) {\n                    OpenCms.getLog(this).debug(\"Static export manager catched event EVENT_PUBLISH_PROJECT for project ID \" + publishHistoryId);\n                }\n\n                // check for the static export mode, this is either static export \"on demand\" or \"after publish\"                \n                if (isStaticExportOnDemand()) {\n                    // static export \"on demand\" enabled, so scrub the export folders only                   \n                    scrubExportFolders(publishHistoryId, false);\n                } else {\n                    I_CmsReport report = (I_CmsReport)event.getData().get(\"report\");\n                    // static export \"after publish\" is enabled, so start to write the exported resources\n                    try {\n                        exportAfterPublish(event.getCmsObject(), publishHistoryId, report);\n                    } catch (Throwable t) {\n                        if (OpenCms.getLog(this).isErrorEnabled()) {\n                            OpenCms.getLog(this).error(\"Error during static export:\", t);\n                        }\n                    }\n                }\n\n                clearCaches(event);\n                break;\n            case I_CmsEventListener.EVENT_CLEAR_CACHES:\n                clearCaches(event);\n                break;\n            default:\n        // no operation\n        }\n    }","commit_id":"93bac78895f2c2a9e9977236b54ee44f10c71035","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Returns true if the static export is set to export on publish.<p>\n     * \n     * @return true if the static export is set to export on publish\n     */\n    public boolean isStaticExportOnPublish() {\n        return m_staticExportOnPublish;\n    }","id":50277,"modified_method":"/**\n     * Returns true if the static export is set to export on publish.<p>\n     * \n     * @return true if the static export is set to export on publish\n     */\n    public boolean isStaticExportOnDemand() {\n\n        return m_staticExportOnDemand;\n    }","commit_id":"93bac78895f2c2a9e9977236b54ee44f10c71035","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Exports all non template resources found in a list of published resources.<p>\n     * \n     * @param cms the current cms object\n     * @param publishedResources the list of published resources\n     * @param report an I_CmsReport instance to print output message, or null to write messages to the log file\n     * @return true if some template resources were found whil looping the list of published resources\n     * @throws CmsException in case of errors accessing the VFS\n     * @throws IOException in case of erros writing to the export output stream\n     * @throws ServletException in case of errors accessing the servlet \n     */\n    private boolean exportNonTemplateResources(CmsObject cms, List publishedResources, I_CmsReport report) \n        throws CmsException, IOException, ServletException {\n                   \n        String vfsName = null;\n        List resourcesToExport = new ArrayList();\n        boolean templatesFound = false;\n\n        int count = 1;\n\n        report.println(report.key(\"report.staticexport.nontemplateresources_begin\"), I_CmsReport.C_FORMAT_HEADLINE);                        \n        \n        // loop through all resources\n        Iterator i = publishedResources.iterator();\n\n        if (OpenCms.getLog(this).isDebugEnabled()) {\n            OpenCms.getLog(this).debug(\"Starting export of non-template resources. \"+publishedResources.size()+\" possible canditates in list.\");\n        }\n        \n        while (i.hasNext()) {   \n            CmsPublishedResource pupRes = (CmsPublishedResource)i.next();          \n            \n            vfsName = pupRes.getRootPath();\n            \n            // only process this resource, if it is within the tree of allowed folders for static \n            // export\n            if (m_exportFolderMatcher.match(vfsName)) {\n            \n                // only export VFS files. COS data and foldersis handled elsewhere \n                if (pupRes.isVfsResource() && (pupRes.isFile())) {\n                    // get the export data object. if null is returned, this resource cannot be\n                    // exported.\n                    CmsStaticExportData exportData = getExportData(vfsName, cms);\n                  \n                    //\n                    if (exportData != null) {\n                        // check loader for current resource if it must be processed before exported\n                        I_CmsResourceLoader loader = OpenCms.getLoaderManager().getLoader(exportData.getResource().getLoaderId());\n                        if (! loader.isStaticExportProcessable()) {\n                            // this resource must not be process, so export it if its not marked as deleted\n                            if (pupRes.getState() != I_CmsConstants.C_STATE_DELETED) {\n                                // mark the resource for export to the real file system                  \n                                resourcesToExport.add(exportData);\n                            } \n                        } else {\n                            // the resource is a template resource. so store the name of it in the DB\n                            // for further use.                       \n                            templatesFound = true;\n                            cms.writeStaticExportPublishedResource(exportData.getRfsName(), C_EXPORT_LINK_WITHOUT_PARAMETER, \"\", getTimestamp());                            \n                        }              \n                    }                    \n                }\n            }\n        }\n                \n        // now do the export\n        i = resourcesToExport.iterator();\n        int size = resourcesToExport.size();\n        \n        if (OpenCms.getLog(this).isDebugEnabled()) {\n            OpenCms.getLog(this).debug(\"Found \"+size+\" resources to export\");\n        }\n        \n        while (i.hasNext()) {\n            CmsStaticExportData exportData = (CmsStaticExportData)i.next();\n            \n            if (OpenCms.getLog(this).isDebugEnabled()) {\n                OpenCms.getLog(this).debug(\"Exporting \"+exportData.getVfsName()+\" -> \"+exportData.getRfsName()+\"...\");\n            }\n            \n            report.print(\"(\"+ count++ +\" / \" + size + \") \", I_CmsReport.C_FORMAT_NOTE);\n            report.print(report.key(\"report.exporting\"), I_CmsReport.C_FORMAT_NOTE);\n            report.print(exportData.getVfsName());\n            report.print(report.key(\"report.dots\"));\n            int status = export(null, null, cms, exportData);\n            if (status == HttpServletResponse.SC_OK) {\n                report.println(report.key(\"report.ok\"), I_CmsReport.C_FORMAT_OK);\n            } else {\n                report.println(report.key(\"report.ignored\"), I_CmsReport.C_FORMAT_NOTE);\n            }\n            if (OpenCms.getLog(this).isInfoEnabled()) {\n                OpenCms.getLog(this).info(\"Export \"+exportData.getVfsName()+\" -> \"+exportData.getRfsName()+\" [STATUS \"+status+\"]\");\n            }\n        }\n        \n        resourcesToExport = null;\n        \n        report.println(report.key(\"report.staticexport.nontemplateresources_end\"), I_CmsReport.C_FORMAT_HEADLINE);\n        \n        return templatesFound;\n       \n    }","id":50278,"modified_method":"/**\n     * Exports all non template resources found in a list of published resources.<p>\n     * \n     * @param cms the current cms object\n     * @param publishedResources the list of published resources\n     * @param report an I_CmsReport instance to print output message, or null to write messages to the log file\n     * @return true if some template resources were found whil looping the list of published resources\n     * @throws CmsException in case of errors accessing the VFS\n     * @throws IOException in case of erros writing to the export output stream\n     * @throws ServletException in case of errors accessing the servlet \n     */\n    private boolean exportNonTemplateResources(CmsObject cms, List publishedResources, I_CmsReport report)\n    throws CmsException, IOException, ServletException {\n\n        String vfsName = null;\n        List resourcesToExport = new ArrayList();\n        boolean templatesFound = false;\n\n        int count = 1;\n\n        report.println(report.key(\"report.staticexport.nontemplateresources_begin\"), I_CmsReport.C_FORMAT_HEADLINE);\n\n        // loop through all resources\n        Iterator i = publishedResources.iterator();\n\n        if (OpenCms.getLog(this).isDebugEnabled()) {\n            OpenCms.getLog(this).debug(\"Starting export of non-template resources with \" + publishedResources.size() + \" possible canditates in list\");\n        }\n\n        while (i.hasNext()) {\n            CmsPublishedResource pupRes = (CmsPublishedResource)i.next();\n\n            vfsName = pupRes.getRootPath();\n\n            // only process this resource, if it is within the tree of allowed folders for static export\n            if (m_exportFolderMatcher.match(vfsName)) {\n\n                // only export VFS files. COS data and foldersis handled elsewhere \n                if (pupRes.isVfsResource() && (pupRes.isFile())) {\n                    // get the export data object, if null is returned, this resource cannot be exported\n                    CmsStaticExportData exportData = getExportData(vfsName, cms);\n\n                    if (exportData != null) {\n                        // check loader for current resource if it must be processed before exported\n                        I_CmsResourceLoader loader = OpenCms.getLoaderManager().getLoader(\n                            exportData.getResource().getLoaderId());\n                        if (!loader.isStaticExportProcessable()) {\n                            // this resource must not be process, so export it if its not marked as deleted\n                            if (pupRes.getState() != I_CmsConstants.C_STATE_DELETED) {\n                                // mark the resource for export to the real file system                  \n                                resourcesToExport.add(exportData);\n                            }\n                        } else {\n                            // the resource is a template resource, so store the name of it in the DB for further use                  \n                            templatesFound = true;\n                            cms.writeStaticExportPublishedResource(\n                                exportData.getRfsName(),\n                                C_EXPORT_LINK_WITHOUT_PARAMETER,\n                                \"\",\n                                System.currentTimeMillis());\n                        }\n                    }\n                }\n            }\n        }\n\n        // now do the export\n        i = resourcesToExport.iterator();\n        int size = resourcesToExport.size();\n\n        if (OpenCms.getLog(this).isDebugEnabled()) {\n            OpenCms.getLog(this).debug(\"Found \" + size + \" resources to export\");\n        }\n\n        while (i.hasNext()) {\n            CmsStaticExportData exportData = (CmsStaticExportData)i.next();\n\n            if (OpenCms.getLog(this).isDebugEnabled()) {\n                OpenCms.getLog(this).debug(\"Exporting \"+exportData.getVfsName()+\" -> \"+exportData.getRfsName()+\"...\");\n            }\n\n            report.print(\"(\" + count++ + \" / \" + size + \") \", I_CmsReport.C_FORMAT_NOTE);\n            report.print(report.key(\"report.exporting\"), I_CmsReport.C_FORMAT_NOTE);\n            report.print(exportData.getVfsName());\n            report.print(report.key(\"report.dots\"));\n            int status = export(null, null, cms, exportData);\n            if (status == HttpServletResponse.SC_OK) {\n                report.println(report.key(\"report.ok\"), I_CmsReport.C_FORMAT_OK);\n            } else {\n                report.println(report.key(\"report.ignored\"), I_CmsReport.C_FORMAT_NOTE);\n            }\n            if (OpenCms.getLog(this).isInfoEnabled()) {\n                OpenCms.getLog(this).info(\"Export \"+exportData.getVfsName()+\" -> \"+exportData.getRfsName()+\" [STATUS \"+status+\"]\");\n            }\n        }\n\n        resourcesToExport = null;\n\n        report.println(report.key(\"report.staticexport.nontemplateresources_end\"), I_CmsReport.C_FORMAT_HEADLINE);\n\n        return templatesFound;\n\n    }","commit_id":"93bac78895f2c2a9e9977236b54ee44f10c71035","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * @see java.lang.Runnable#run()\n     */\n    public void run() {\n         getReport().println(getReport().key(\"report.staticexport_begin\"), I_CmsReport.C_FORMAT_HEADLINE);\n        try {\n            OpenCms.getStaticExportManager().exportAll(getCms(), true, getReport());\n        } catch (CmsException e) {\n            getReport().println(e);\n        } catch (IOException e) {\n            getReport().println(e);            \n        } catch (ServletException e) {\n            getReport().println(e);\n        }    \n        getReport().println(getReport().key(\"report.staticexport_end\"), I_CmsReport.C_FORMAT_HEADLINE);\n    }","id":50279,"modified_method":"/**\n     * @see java.lang.Runnable#run()\n     */\n    public void run() {\n         getReport().println(getReport().key(\"report.staticexport_begin\"), I_CmsReport.C_FORMAT_HEADLINE);\n        try {\n            OpenCms.getStaticExportManager().exportFullStaticRender(getCms(), true, getReport());\n        } catch (CmsException e) {\n            getReport().println(e);\n        } catch (IOException e) {\n            getReport().println(e);            \n        } catch (ServletException e) {\n            getReport().println(e);\n        }    \n        getReport().println(getReport().key(\"report.staticexport_end\"), I_CmsReport.C_FORMAT_HEADLINE);\n    }","commit_id":"93bac78895f2c2a9e9977236b54ee44f10c71035","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * @see org.opencms.main.I_CmsRequestHandler#handle(HttpServletRequest, HttpServletResponse, String)\n     */\n    public void handle(HttpServletRequest req, HttpServletResponse res, String name) throws IOException, ServletException {\n        int errorCode;\n        try {\n            errorCode = Integer.valueOf(name).intValue();\n        } catch (NumberFormatException nf) {\n            res.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);\n            return;\n        }\n        switch (errorCode) {\n            case 404:\n                String path = req.getPathInfo();                                     \n                CmsObject cms = null;            \n                CmsStaticExportData exportData = null;\n                try {\n                    cms = OpenCmsCore.getInstance().initCmsObject(null, null, OpenCms.getDefaultUsers().getUserExport(), null);            \n                    exportData = OpenCms.getStaticExportManager().getExportData(req, cms);\n                } catch (CmsException e) {\n                    // unlikley to happen \n                    if (OpenCms.getLog(this).isWarnEnabled()) {                    \n                        OpenCms.getLog(this).warn(\"Error initializing CmsObject in \" + name + \" handler for '\" + path + \"'\", e);\n                    }\n                }\n                if (exportData != null) {\n                   synchronized (this) {\n                        try {\n                            // export the resource and set the response status according to the result \n                            // of the export operation\n                            res.setStatus(OpenCms.getStaticExportManager().export(req, res, cms, exportData));\n                        } catch (Throwable t) {\n                            if (OpenCms.getLog(this).isWarnEnabled()) {                    \n                                OpenCms.getLog(this).warn(\"Error exporting \" + exportData, t);\n                            }\n                            openErrorHandler(req, res, errorCode);\n                        }\n                    }\n                } else {\n                    openErrorHandler(req, res, errorCode);\n                }\n                break;\n            default:\n                openErrorHandler(req, res, errorCode);\n        }                 \n    }","id":50280,"modified_method":"/**\n     * @see org.opencms.main.I_CmsRequestHandler#handle(HttpServletRequest, HttpServletResponse, String)\n     */\n    public void handle(HttpServletRequest req, HttpServletResponse res, String name) throws IOException, ServletException {\n        int errorCode;\n        try {\n            errorCode = Integer.valueOf(name).intValue();\n        } catch (NumberFormatException nf) {\n            res.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);\n            return;\n        }\n        switch (errorCode) {\n            case 404:\n                String path = req.getPathInfo();                                     \n                CmsObject cms = null;            \n                CmsStaticExportData exportData = null;\n                try {\n                    cms = OpenCmsCore.getInstance().initCmsObject(null, null, OpenCms.getDefaultUsers().getUserExport(), null);            \n                    exportData = OpenCms.getStaticExportManager().getExportData(req, cms);\n                } catch (CmsException e) {\n                    // unlikley to happen \n                    if (OpenCms.getLog(this).isWarnEnabled()) {                    \n                        OpenCms.getLog(this).warn(\"Error initializing CmsObject in \" + name + \" handler for '\" + path + \"'\", e);\n                    }\n                }\n                if (exportData != null) {\n                   synchronized (this) {\n                        try {\n                            // generate a static export request wrapper\n                            CmsStaticExportRequest exportReq = new CmsStaticExportRequest(req, exportData);\n                            // export the resource and set the response status according to the result\n                            res.setStatus(OpenCms.getStaticExportManager().export(exportReq, res, cms, exportData));\n                        } catch (Throwable t) {\n                            if (OpenCms.getLog(this).isWarnEnabled()) {                    \n                                OpenCms.getLog(this).warn(\"Error exporting \" + exportData, t);\n                            }\n                            openErrorHandler(req, res, errorCode);\n                        }\n                    }\n                } else {\n                    openErrorHandler(req, res, errorCode);\n                }\n                break;\n            default:\n                openErrorHandler(req, res, errorCode);\n        }                 \n    }","commit_id":"93bac78895f2c2a9e9977236b54ee44f10c71035","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Creates the HTML String for the edit properties form.<p>\n     * \n     * @return the HTML output String for the edit properties form\n     */\n    public String buildEditForm() {\n        StringBuffer retValue = new StringBuffer(2048);\n        \n        // check if the properties are editable\n        boolean editable =  isEditable();\n        // create \"disabled\" attribute if properties are not editable\n        String disabled = \"\";\n        if (!editable) {\n            disabled = \" disabled=\\\"disabled\\\"\";\n        }    \n        \n        // get all used properties for the resource\n        Map activeProperties = null;\n        try {\n            activeProperties = getCms().readProperties(getParamResource());\n        } catch (CmsException e) { \n            // ignore this exception\n        }\n        \n        retValue.append(\"<table border=\\\"0\\\">\\n\");\n        retValue.append(\"<tr>\\n\");\n        retValue.append(\"\\t<td class=\\\"textbold\\\">\" + key(\"input.property\") + \"<\/td>\\n\");\n        retValue.append(\"\\t<td class=\\\"textbold\\\">\" + key(\"label.value\") + \"<\/td>\\n\");   \n        retValue.append(\"\\t<td class=\\\"textbold\\\" style=\\\"white-space: nowrap;\\\">\" + key(\"input.usedproperty\") + \"<\/td>\\n\");    \n        retValue.append(\"<\/tr>\\n\");\n        retValue.append(\"<tr><td><span style=\\\"height: 6px;\\\"><\/span><\/td><\/tr>\\n\");\n        \n        // create template select box row\n        retValue.append(buildTableRowStart(key(\"input.template\")));\n        retValue.append(buildSelectTemplates(\"name=\\\"\" + I_CmsConstants.C_PROPERTY_TEMPLATE + \"\\\" class=\\\"maxwidth noborder\\\"\" + disabled));\n        retValue.append(\"<\/td>\\n\");\n        retValue.append(\"\\t<td class=\\\"textcenter\\\">\");       \n        retValue.append(\"&nbsp;\");\n        retValue.append(buildTableRowEnd());\n        \n        // create the text property input rows\n        retValue.append(buildTextInput(editable, activeProperties));\n        \n        // show navigation properties if enabled in explorer type settings\n        if (showNavigation()) {\n            retValue.append(buildNavigationProperties(editable, activeProperties));\n        }\n        \n        retValue.append(\"<\/table>\");       \n       \n        return retValue.toString();\n    }","id":50281,"modified_method":"/**\n     * Creates the HTML String for the edit properties form.<p>\n     * \n     * @return the HTML output String for the edit properties form\n     */\n    public String buildEditForm() {\n        StringBuffer retValue = new StringBuffer(2048);\n        \n        // check if the properties are editable\n        boolean editable =  isEditable();\n        // create \"disabled\" attribute if properties are not editable\n        String disabled = \"\";\n        if (!editable) {\n            disabled = \" disabled=\\\"disabled\\\"\";\n        }    \n        \n        // get all used properties for the resource\n        Map activeProperties = null;\n        try {\n            activeProperties = CmsPropertyAdvanced.getPropertyMap(getCms().readPropertyObjects(getParamResource(), false));\n        } catch (CmsException e) { \n            // ignore this exception\n        }\n        \n        retValue.append(\"<table border=\\\"0\\\">\\n\");\n        retValue.append(\"<tr>\\n\");\n        retValue.append(\"\\t<td class=\\\"textbold\\\">\" + key(\"input.property\") + \"<\/td>\\n\");\n        retValue.append(\"\\t<td class=\\\"textbold\\\">\" + key(\"label.value\") + \"<\/td>\\n\");   \n        retValue.append(\"\\t<td class=\\\"textbold\\\" style=\\\"white-space: nowrap;\\\">\" + key(\"input.usedproperty\") + \"<\/td>\\n\");    \n        retValue.append(\"<\/tr>\\n\");\n        retValue.append(\"<tr><td><span style=\\\"height: 6px;\\\"><\/span><\/td><\/tr>\\n\");\n        \n        // create template select box row\n        retValue.append(buildTableRowStart(key(\"input.template\")));\n        retValue.append(buildSelectTemplates(\"name=\\\"\" + I_CmsConstants.C_PROPERTY_TEMPLATE + \"\\\" class=\\\"maxwidth noborder\\\"\" + disabled));\n        retValue.append(\"<\/td>\\n\");\n        retValue.append(\"\\t<td class=\\\"textcenter\\\">\");       \n        retValue.append(\"&nbsp;\");\n        retValue.append(buildTableRowEnd());\n        \n        // create the text property input rows\n        retValue.append(buildTextInput(editable, activeProperties));\n        \n        // show navigation properties if enabled in explorer type settings\n        if (showNavigation()) {\n            retValue.append(buildNavigationProperties(editable, activeProperties));\n        }\n        \n        retValue.append(\"<\/table>\");       \n       \n        return retValue.toString();\n    }","commit_id":"a335ac64b60a0630ce91efd781c5f92ef19a1881","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Performs the editing of the resources properties.<p>\n     * \n     * @param request the HttpServletRequest\n     * @return true, if the properties were successfully changed, otherwise false\n     * @throws CmsException if editing is not successful\n     */\n    protected boolean performEditOperation(HttpServletRequest request) throws CmsException {\n        Map activeProperties = getCms().readProperties(getParamResource());\n        boolean useTempfileProject = \"true\".equals(getParamUsetempfileproject());\n        try {\n            if (useTempfileProject) {\n                switchToTempProject();\n            }\n            // write the common properties defined in the explorer type settings\n            Iterator i = getExplorerTypeSettings().getProperties().iterator();\n            // iterate over the properties\n            while (i.hasNext()) {\n                String curProperty = (String)i.next();\n                String paramValue = request.getParameter(PREFIX_VALUE + curProperty);\n                String oldValue = request.getParameter(PREFIX_HIDDEN + curProperty);\n                writeProperty(curProperty, paramValue, oldValue, activeProperties);\n            }\n                \n            // write special file properties\n            String paramValue = null;\n            String oldValue = null;\n            \n            // write the navigation properties if enabled\n            if (showNavigation()) {\n                // get the navigation enabled parameter\n                paramValue = request.getParameter(\"enablenav\");\n                if (\"true\".equals(paramValue)) {\n                    // navigation enabled, update params\n                    paramValue = request.getParameter(\"navpos\");\n                    if (!\"-1\".equals(paramValue)) {\n                        // update the property only when it is different from \"-1\" (meaning no change)\n                        oldValue = request.getParameter(PREFIX_HIDDEN + I_CmsConstants.C_PROPERTY_NAVPOS);\n                        writeProperty(I_CmsConstants.C_PROPERTY_NAVPOS, paramValue, oldValue, activeProperties);\n                    }\n                    paramValue = request.getParameter(PREFIX_VALUE + I_CmsConstants.C_PROPERTY_NAVTEXT);\n                    oldValue = request.getParameter(PREFIX_HIDDEN + I_CmsConstants.C_PROPERTY_NAVTEXT);\n                    writeProperty(I_CmsConstants.C_PROPERTY_NAVTEXT, paramValue, oldValue, activeProperties);\n                } else {\n                    // navigation disabled, delete property values\n                    writeProperty(I_CmsConstants.C_PROPERTY_NAVPOS, null, null, activeProperties);\n                    writeProperty(I_CmsConstants.C_PROPERTY_NAVTEXT, null, null, activeProperties);\n                }\n            }\n            \n            // get the template parameter\n            paramValue = request.getParameter(I_CmsConstants.C_PROPERTY_TEMPLATE);\n            oldValue = request.getParameter(PREFIX_HIDDEN + I_CmsConstants.C_PROPERTY_TEMPLATE);\n            writeProperty(I_CmsConstants.C_PROPERTY_TEMPLATE, paramValue, oldValue, activeProperties);\n            if (paramValue != null && !paramValue.equals(oldValue)) {\n                // template has changed, refresh editor window\n                m_templateChanged = true;\n            }\n                  \n        } finally {\n            if (useTempfileProject) {\n                switchToCurrentProject();\n            }\n        }\n        return true;\n    }","id":50282,"modified_method":"/**\n     * Performs the editing of the resources properties.<p>\n     * \n     * @param request the HttpServletRequest\n     * @return true, if the properties were successfully changed, otherwise false\n     * @throws CmsException if editing is not successful\n     */\n    protected boolean performEditOperation(HttpServletRequest request) throws CmsException {\n        Map activeProperties = CmsPropertyAdvanced.getPropertyMap(getCms().readPropertyObjects(getParamResource(), false));\n        boolean useTempfileProject = \"true\".equals(getParamUsetempfileproject());\n        try {\n            if (useTempfileProject) {\n                switchToTempProject();\n            }\n            // write the common properties defined in the explorer type settings\n            Iterator i = getExplorerTypeSettings().getProperties().iterator();\n            // iterate over the properties\n            while (i.hasNext()) {\n                String curProperty = (String)i.next();\n                String paramValue = request.getParameter(PREFIX_VALUE + curProperty);\n                String oldValue = request.getParameter(PREFIX_HIDDEN + curProperty);\n                writeProperty(curProperty, paramValue, oldValue, activeProperties);\n            }\n                \n            // write special file properties\n            String paramValue = null;\n            String oldValue = null;\n            \n            // write the navigation properties if enabled\n            if (showNavigation()) {\n                // get the navigation enabled parameter\n                paramValue = request.getParameter(\"enablenav\");\n                if (\"true\".equals(paramValue)) {\n                    // navigation enabled, update params\n                    paramValue = request.getParameter(\"navpos\");\n                    if (!\"-1\".equals(paramValue)) {\n                        // update the property only when it is different from \"-1\" (meaning no change)\n                        oldValue = request.getParameter(PREFIX_HIDDEN + I_CmsConstants.C_PROPERTY_NAVPOS);\n                        writeProperty(I_CmsConstants.C_PROPERTY_NAVPOS, paramValue, oldValue, activeProperties);\n                    }\n                    paramValue = request.getParameter(PREFIX_VALUE + I_CmsConstants.C_PROPERTY_NAVTEXT);\n                    oldValue = request.getParameter(PREFIX_HIDDEN + I_CmsConstants.C_PROPERTY_NAVTEXT);\n                    writeProperty(I_CmsConstants.C_PROPERTY_NAVTEXT, paramValue, oldValue, activeProperties);\n                } else {\n                    // navigation disabled, delete property values\n                    writeProperty(I_CmsConstants.C_PROPERTY_NAVPOS, null, null, activeProperties);\n                    writeProperty(I_CmsConstants.C_PROPERTY_NAVTEXT, null, null, activeProperties);\n                }\n            }\n            \n            // get the template parameter\n            paramValue = request.getParameter(I_CmsConstants.C_PROPERTY_TEMPLATE);\n            oldValue = request.getParameter(PREFIX_HIDDEN + I_CmsConstants.C_PROPERTY_TEMPLATE);\n            writeProperty(I_CmsConstants.C_PROPERTY_TEMPLATE, paramValue, oldValue, activeProperties);\n            if (paramValue != null && !paramValue.equals(oldValue)) {\n                // template has changed, refresh editor window\n                m_templateChanged = true;\n            }\n                  \n        } finally {\n            if (useTempfileProject) {\n                switchToCurrentProject();\n            }\n        }\n        return true;\n    }","commit_id":"a335ac64b60a0630ce91efd781c5f92ef19a1881","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * @see org.opencms.workplace.CmsWorkplace#initWorkplaceRequestValues(org.opencms.workplace.CmsWorkplaceSettings, javax.servlet.http.HttpServletRequest)\n     */\n    protected void initWorkplaceRequestValues(CmsWorkplaceSettings settings, HttpServletRequest request) {\n        // fill the parameter values in the get/set methods\n        fillParamValues(request);\n        // set the dialog type\n        setParamDialogtype(DIALOG_TYPE);\n        boolean isPopup = Boolean.valueOf(getParamIsPopup()).booleanValue();\n        // set the action for the JSP switch \n        if (DIALOG_SHOW_DEFINE.equals(getParamAction())) {\n            setAction(ACTION_SHOW_DEFINE);\n            setParamTitle(key(\"title.newpropertydef\") + \": \" + CmsResource.getName(getParamResource()));\n        } else if (DIALOG_SAVE_EDIT.equals(getParamAction())) {\n            if (isPopup) {\n                setAction(ACTION_CLOSEPOPUP_SAVE);\n            } else {\n                setAction(ACTION_SAVE_EDIT);\n            }\n        } else if (DIALOG_SAVE_DEFINE.equals(getParamAction())) {\n            setAction(ACTION_SAVE_DEFINE);\n        } else if (DIALOG_CANCEL.equals(getParamAction())) {\n            if (isPopup) {\n                setAction(ACTION_CLOSEPOPUP);\n            } else {\n                setAction(ACTION_CANCEL);\n            }\n        } else { \n            // set the default action: show edit form               \n            setAction(ACTION_DEFAULT);\n            if (!isEditable()) {\n                setParamTitle(key(\"title.property\") + \": \" + CmsResource.getName(getParamResource()));\n            } else {\n                setParamTitle(key(\"title.editpropertyinfo\") + \": \" + CmsResource.getName(getParamResource()));\n            }\n        }      \n    }","id":50283,"modified_method":"/**\n     * @see org.opencms.workplace.CmsWorkplace#initWorkplaceRequestValues(org.opencms.workplace.CmsWorkplaceSettings, javax.servlet.http.HttpServletRequest)\n     */\n    protected void initWorkplaceRequestValues(CmsWorkplaceSettings settings, HttpServletRequest request) {\n        // fill the parameter values in the get/set methods\n        fillParamValues(request);\n        \n        // get the active tab from request parameter or display first tab\n        getActiveTab();\n        \n        // set the dialog type\n        setParamDialogtype(DIALOG_TYPE);\n        boolean isPopup = Boolean.valueOf(getParamIsPopup()).booleanValue();\n        // set the action for the JSP switch \n        if (DIALOG_SHOW_DEFINE.equals(getParamAction())) {\n            setAction(ACTION_SHOW_DEFINE);\n            setParamTitle(key(\"title.newpropertydef\") + \": \" + CmsResource.getName(getParamResource()));\n        } else if (DIALOG_SAVE_EDIT.equals(getParamAction())) {\n            if (isPopup) {\n                setAction(ACTION_CLOSEPOPUP_SAVE);\n            } else {\n                setAction(ACTION_SAVE_EDIT);\n            }\n        } else if (DIALOG_SAVE_DEFINE.equals(getParamAction())) {\n            setAction(ACTION_SAVE_DEFINE);\n        } else if (DIALOG_CANCEL.equals(getParamAction())) {\n            if (isPopup) {\n                setAction(ACTION_CLOSEPOPUP);\n            } else {\n                setAction(ACTION_CANCEL);\n            }\n        } else { \n            // set the default action: show edit form  \n            setAction(ACTION_DEFAULT);\n            if (!isEditable()) {\n                setParamTitle(key(\"title.property\") + \": \" + CmsResource.getName(getParamResource()));\n            } else {\n                setParamTitle(key(\"title.editpropertyinfo\") + \": \" + CmsResource.getName(getParamResource()));\n            }\n            // check if the user switched a tab\n            m_tabSwitched = false;\n            if (DIALOG_SWITCHTAB.equals(getParamAction())) {\n                m_tabSwitched = true;\n            }\n        }      \n    }","commit_id":"a335ac64b60a0630ce91efd781c5f92ef19a1881","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Creates the HTML String for the edit properties form.<p>\n     * \n     * @return the HTML output String for the edit properties form\n     */\n    public String buildEditForm() {\n        StringBuffer retValue = new StringBuffer(1024);\n        \n        String disabled = \"\";\n        if (!isEditable()) {\n            disabled = \" disabled=\\\"disabled\\\"\";\n        }\n        \n        // get all properties for the resource\n        Vector propertyDef = new Vector();\n        try {\n            propertyDef = getPropertyDefinitions();\n        } catch (CmsException e) {\n            // ignore\n        }\n        \n        // get all used properties for the resource\n        Map activeProperties = null;\n        try {\n            activeProperties = getCms().readProperties(getParamResource());\n        } catch (CmsException e) {\n            // ignore\n        }\n        boolean present = false;\n        if (propertyDef.size() > 0) {\n            present = true; \n        }\n        \n        if (present) {\n            // there are properties defined for this resource, build the form list\n            retValue.append(\"<table border=\\\"0\\\">\\n\");\n            retValue.append(\"<tr>\\n\");\n            retValue.append(\"\\t<td class=\\\"textbold\\\">\"+key(\"input.property\")+\"<\/td>\\n\");\n            retValue.append(\"\\t<td class=\\\"textbold\\\">\"+key(\"label.value\")+\"<\/td>\\n\");\n            retValue.append(\"\\t<td class=\\\"textbold\\\" style=\\\"white-space: nowrap;\\\">\"+key(\"input.usedproperty\")+\"<\/td>\\n\");            \n            retValue.append(\"<\/tr>\\n\");\n            retValue.append(\"<tr><td><span style=\\\"height: 6px;\\\"><\/span><\/td><\/tr>\\n\");\n            \n            for (int i = 0; i < propertyDef.size(); i++) {\n                // walk through all property definitions for the resource\n                CmsPropertydefinition curProperty = (CmsPropertydefinition)propertyDef.elementAt(i);\n                String propName = CmsEncoder.escapeXml(curProperty.getName());\n                retValue.append(\"<tr>\\n\");\n                retValue.append(\"\\t<td style=\\\"white-space: nowrap;\\\">\"+propName);\n                retValue.append(\"<\/td>\\n\");\n                retValue.append(\"\\t<td class=\\\"maxwidth\\\">\");\n                if (activeProperties.containsKey(curProperty.getName())) {\n                    // the property is used, so create text field with value, checkbox and hidden field\n                    String propValue = CmsEncoder.escapeXml((String)activeProperties.get(curProperty.getName()));\n                    retValue.append(\"<input type=\\\"text\\\" class=\\\"maxwidth\\\" value=\\\"\");\n                    retValue.append(propValue+\"\\\" name=\\\"\"+PREFIX_VALUE+propName+\"\\\" id=\\\"\"+PREFIX_VALUE+propName+\"\\\" onKeyup=\\\"checkValue('\"+propName+\"');\\\"\" + disabled + \">\");\n                    retValue.append(\"<input type=\\\"hidden\\\" name=\\\"\"+PREFIX_HIDDEN+propName+\"\\\" id=\\\"\"+PREFIX_HIDDEN+propName+\"\\\" value=\\\"\"+propValue+\"\\\"><\/td>\\n\");\n                    retValue.append(\"\\t<td class=\\\"textcenter\\\">\");\n                    retValue.append(\"<input type=\\\"checkbox\\\" name=\\\"\"+PREFIX_USEPROPERTY+propName+\"\\\" id=\\\"\"+PREFIX_USEPROPERTY+propName+\"\\\" value=\\\"true\\\"\" + disabled);\n                    retValue.append(\" checked=\\\"checked\\\" onClick=\\\"toggleDelete('\"+propName+\"');\\\">\");\n                    retValue.append(\"<\/td>\\n\");\n                } else {\n                    // property is not used, create an empty text input field\n                    retValue.append(\"<input type=\\\"text\\\" class=\\\"maxwidth\\\" \");\n                    retValue.append(\"name=\\\"\"+PREFIX_VALUE+propName+\"\\\"\" + disabled + \"><\/td>\\n\");\n                    retValue.append(\"\\t<td>&nbsp;<\/td>\");\n                }\n                retValue.append(\"<\/tr>\\n\");\n            }\n            \n            retValue.append(\"<\/table>\");\n            \n        } else {\n            // there are no properties defined for this resource, show nothing\n            retValue.append(\"no properties defined!\");\n        }\n        \n        return retValue.toString();\n    }","id":50284,"modified_method":"/**\n     * Creates the HTML String for the edit properties form.<p>\n     * \n     * @return the HTML output String for the edit properties form\n     */\n    public String buildEditForm() {\n        StringBuffer retValue = new StringBuffer(1024);\n        \n        // get currently active tab\n        int activeTab = getActiveTab();\n        \n        // initialize \"disabled\" attribute for input fields\n        String disabled = \"\";\n        if (!isEditable()) {\n            disabled = \" disabled=\\\"disabled\\\"\";\n        }\n        \n        // get all properties for the resource\n        Vector propertyDef = new Vector();\n        try {\n            propertyDef = getPropertyDefinitions();\n        } catch (CmsException e) {\n            // ignore\n        }\n        \n        // check if we are in the online project\n        boolean onlineProject = false;\n        if (getCms().getRequestContext().currentProject().getId() == I_CmsConstants.C_PROJECT_ONLINE_ID) {\n            onlineProject = true;    \n        }\n        \n        // check for presence of property definitions, should always be true\n        boolean present = false;\n        if (propertyDef.size() > 0) {\n            present = true; \n        }\n        \n        if (present) {\n            // there are properties defined for this resource, build the form list\n            retValue.append(\"<table border=\\\"0\\\">\\n\");\n            retValue.append(\"<tr>\\n\");\n            retValue.append(\"\\t<td class=\\\"textbold\\\">\"+key(\"input.property\")+\"<\/td>\\n\");\n            retValue.append(\"\\t<td class=\\\"textbold\\\">\"+key(\"label.value\")+\"<\/td>\\n\");\n            retValue.append(\"\\t<td class=\\\"textbold\\\" style=\\\"white-space: nowrap;\\\">\"+key(\"input.usedproperty\")+\"<\/td>\\n\");            \n            retValue.append(\"<\/tr>\\n\");\n            retValue.append(\"<tr><td colspan=\\\"3\\\"><span style=\\\"height: 6px;\\\"><\/span><\/td><\/tr>\\n\");\n            \n            // get all used properties for the resource\n            Map activeProperties = null;\n            if (!m_tabSwitched) {\n                try {\n                    activeProperties = CmsPropertyAdvanced.getPropertyMap(getCms().readPropertyObjects(getParamResource(), false));\n                } catch (CmsException e) {\n                    activeProperties = new HashMap();\n                }\n            }\n            \n            // show all possible properties for the resource\n            for (int i = 0; i < propertyDef.size(); i++) {\n                CmsPropertydefinition currentPropertyDef = (CmsPropertydefinition)propertyDef.elementAt(i);\n                String propName = CmsEncoder.escapeXml(currentPropertyDef.getName());\n                String propValue = \"\";\n                String valueStructure = \"\";\n                String valueResource = \"\";\n                if (m_tabSwitched) {\n                    // switched the tab, get values from hidden fields\n                    if (activeTab == 1) {\n                        // structure form\n                        propValue = getJsp().getRequest().getParameter(PREFIX_STRUCTURE + propName);\n                        valueStructure = getJsp().getRequest().getParameter(PREFIX_STRUCTURE + propName);\n                        if (onlineProject) {\n                            // in online project, values from diabled fields are not posted\n                            valueResource = getJsp().getRequest().getParameter(PREFIX_RESOURCE + propName);\n                        } else {\n                            valueResource = getJsp().getRequest().getParameter(PREFIX_VALUE + propName);\n                        }\n                    } else {\n                        // resource form\n                        propValue = getJsp().getRequest().getParameter(PREFIX_RESOURCE + propName);\n                        if (onlineProject) {\n                            // in online project, values from diabled fields are not posted\n                            valueStructure = getJsp().getRequest().getParameter(PREFIX_STRUCTURE + propName);\n                        } else {\n                            valueStructure = getJsp().getRequest().getParameter(PREFIX_VALUE + propName);\n                        }\n                        valueResource = getJsp().getRequest().getParameter(PREFIX_RESOURCE + propName);\n                        if (valueStructure != null && !\"\".equals(valueStructure.trim()) && valueStructure.equals(valueResource)) {\n                            // the resource value was shown in the input field, set structure value to empty String\n                            valueStructure = \"\";\n                        }\n                    }\n                } else {\n                    // initial call of edit form, get property values from database \n                    CmsProperty currentProperty = (CmsProperty)activeProperties.get(propName);\n                    if (currentProperty == null) {\n                        currentProperty = new CmsProperty();\n                    }                    \n                    if (activeTab == 1) {\n                        // show the structure properties\n                        propValue = currentProperty.getStructureValue();\n                    } else {\n                        // show the resource properties\n                        propValue = currentProperty.getResourceValue();\n                    }\n                    valueStructure = currentProperty.getStructureValue();\n                    valueResource = currentProperty.getResourceValue();\n                    // check values for null\n                    if (propValue == null) {\n                        propValue = \"\";\n                    }\n                    if (valueStructure == null) {\n                        valueStructure = \"\";\n                    }\n                    if (valueResource == null) {\n                        valueResource = \"\";\n                    }\n                }\n                // remove unnecessary blanks from values\n                propValue = propValue.trim();\n                valueStructure = valueStructure.trim();\n                valueResource = valueResource.trim();\n                retValue.append(buildPropertyRow(propName, CmsEncoder.escapeXml(propValue), CmsEncoder.escapeXml(valueStructure), CmsEncoder.escapeXml(valueResource), disabled, activeTab));\n            }\n            retValue.append(\"<\/table>\"); \n        } else {\n            // there are no properties defined for this resource, show nothing\n            retValue.append(\"no properties defined!\");\n        }\n        \n        return retValue.toString();\n    }","commit_id":"a335ac64b60a0630ce91efd781c5f92ef19a1881","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Performs the editing of the resources properties.<p>\n     * \n     * @param request the HttpServletRequest\n     * @return true, if the properties were successfully changed, otherwise false\n     * @throws CmsException if editing is not successful\n     */\n    private boolean performEditOperation(HttpServletRequest request) throws CmsException {\n        Vector propertyDef = getPropertyDefinitions();\n        boolean useTempfileProject = \"true\".equals(getParamUsetempfileproject());\n        try {\n            if (useTempfileProject) {\n                switchToTempProject();\n            }\n            Map activeProperties = getCms().readProperties(getParamResource());\n            boolean lockChecked = false;\n            \n            // check all property definitions of the resource for new values\n            for (int i=0; i<propertyDef.size(); i++) {\n                CmsPropertydefinition curProperty = (CmsPropertydefinition)propertyDef.elementAt(i);\n                String propName = CmsEncoder.escapeXml(curProperty.getName());\n                String paramValue = request.getParameter(PREFIX_VALUE+propName);\n                            \n                // check if there is a parameter value for the current property\n                boolean emptyParam = true;\n                if (paramValue != null) {\n                    if (!\"\".equals(paramValue.trim())) {\n                        emptyParam = false;\n                    }\n                }\n                if (emptyParam) {\n                    // parameter is empty, check if the property has to be deleted\n                    if (activeProperties.containsKey(curProperty.getName())) {\n                        if (!lockChecked) {\n                            // lock resource if autolock is enabled\n                            checkLock(getParamResource());\n                            lockChecked = true;\n                        }\n                        getCms().deleteProperty(getParamResource(), curProperty.getName());\n                    }\n                } else {\n                    // parameter is not empty, check if the value has changed\n                    String oldValue = request.getParameter(PREFIX_HIDDEN+propName);\n                    if (!paramValue.equals(oldValue)) {\n                        if (!lockChecked) {\n                            // lock resource if autolock is enabled\n                            checkLock(getParamResource());\n                            lockChecked = true;\n                        }\n                        getCms().writeProperty(getParamResource(), curProperty.getName(), paramValue);\n                    }\n                }\n            }  \n        } finally {\n            if (useTempfileProject) {\n                switchToCurrentProject();\n            }\n        }\n        return true;\n    }","id":50285,"modified_method":"/**\n     * Performs the editing of the resources properties.<p>\n     * \n     * @param request the HttpServletRequest\n     * @return true, if the properties were successfully changed, otherwise false\n     * @throws CmsException if editing is not successful\n     */\n    private boolean performEditOperation(HttpServletRequest request) throws CmsException {\n        Vector propertyDef = getPropertyDefinitions();\n        boolean useTempfileProject = \"true\".equals(getParamUsetempfileproject());\n        try {\n            if (useTempfileProject) {\n                switchToTempProject();\n            }\n            Map activeProperties = getPropertyMap(getCms().readPropertyObjects(getParamResource(), false));\n            boolean lockChecked = false;\n            int activeTab = getActiveTab();\n            \n            // check all property definitions of the resource for new values\n            for (int i=0; i<propertyDef.size(); i++) {\n                CmsPropertydefinition curPropDef = (CmsPropertydefinition)propertyDef.elementAt(i);\n                String propName = CmsEncoder.escapeXml(curPropDef.getName());\n                String valueStructure = \"\";\n                String valueResource = \"\";\n                \n                if (activeTab == 1) {\n                    // get parameters from the structure tab\n                    valueStructure = request.getParameter(PREFIX_VALUE + propName);\n                    valueResource = request.getParameter(PREFIX_RESOURCE + propName);\n                    if (valueStructure != null && !\"\".equals(valueStructure.trim()) && valueStructure.equals(valueResource)) {\n                        // the resource value was shown/entered in input field, set structure value to empty String\n                        valueStructure = \"\";\n                    }\n                } else {\n                    // get parameters from the resource tab\n                    valueStructure = request.getParameter(PREFIX_STRUCTURE + propName);\n                    valueResource = request.getParameter(PREFIX_VALUE + propName);\n                }\n                \n                // check values for blanks and null\n                if (valueStructure != null) {\n                    valueStructure = valueStructure.trim();\n                } else {\n                    valueStructure = \"\";\n                }\n                if (valueResource != null) {\n                    valueResource = valueResource.trim();\n                } else {\n                    valueResource = \"\";\n                }\n                \n                // create new CmsProperty object to store\n                CmsProperty newProperty = new CmsProperty();\n                newProperty.setKey(curPropDef.getName());\n                newProperty.setStructureValue(valueStructure);\n                newProperty.setResourceValue(valueResource);\n                \n                // get the old property values\n                CmsProperty oldProperty = (CmsProperty)activeProperties.get(curPropDef.getName());\n                if (oldProperty == null) {\n                    // property was not set, create new empty property object\n                    oldProperty = new CmsProperty();\n                    oldProperty.setKey(curPropDef.getName());\n                }\n                if (oldProperty.getStructureValue() == null) {\n                    oldProperty.setStructureValue(\"\");\n                }\n                if (oldProperty.getResourceValue() == null) {\n                    oldProperty.setResourceValue(\"\");\n                }\n                \n                // check if saving the properties is necessary\n                if (!newProperty.equals(oldProperty)) {\n                    // save only if property values have changed\n                    if (!lockChecked) {\n                        // lock resource if autolock is enabled\n                        checkLock(getParamResource());\n                        lockChecked = true;\n                    }\n                    // write the new property values\n                    getCms().writePropertyObject(getParamResource(), newProperty);\n                }   \n            }    \n        } finally {\n            if (useTempfileProject) {\n                switchToCurrentProject();\n            }\n        }\n        return true;\n    }","commit_id":"a335ac64b60a0630ce91efd781c5f92ef19a1881","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Builds the HTML code for the special properties of an xmlpage resource.<p>\n     * \n     * @param editable indicates if the properties are editable\n     * @param activeProperties Map of all active properties of the resource \n     * @return the HTML code for the special properties of a file resource\n     */\n    protected StringBuffer buildNavigationProperties(boolean editable, Map activeProperties) {\n        StringBuffer result = new StringBuffer(1024);\n        \n        // create \"disabled\" attribute if properties are not editable\n        String disabled = \"\";\n        if (!editable) {\n            disabled = \" disabled=\\\"disabled\\\"\";\n        }    \n        \n        // create \"add to navigation\" checkbox\n        result.append(buildTableRowStart(key(\"input.addtonav\")));\n        result.append(\"<input type=\\\"checkbox\\\" name=\\\"enablenav\\\" id=\\\"enablenav\\\" value=\\\"true\\\" onClick=\\\"toggleNav();\\\"\");\n        if (activeProperties.containsKey(I_CmsConstants.C_PROPERTY_NAVTEXT) && activeProperties.containsKey(I_CmsConstants.C_PROPERTY_NAVPOS)) {\n            result.append(\" checked=\\\"checked\\\"\");\n        }\n        result.append(disabled + \">\");\n        result.append(\"<\/td>\\n\");\n        result.append(\"\\t<td class=\\\"textcenter\\\">\");       \n        result.append(\"&nbsp;\");\n        result.append(buildTableRowEnd());\n        \n        // create NavText input row\n        result.append(buildPropertyEntry(activeProperties, I_CmsConstants.C_PROPERTY_NAVTEXT, key(\"input.navtitle\"), editable));\n        \n        // create NavPos select box row\n        result.append(buildTableRowStart(key(\"input.insert\")));\n        synchronized (this) {\n            result.append(CmsChnav.buildNavPosSelector(getCms(), getParamResource(), disabled + \" class=\\\"maxwidth noborder\\\"\", getSettings().getMessages()));\n        }\n        // get the old NavPos value and store it in hidden field\n        String navPos = null;\n        try {\n            navPos = getCms().readProperty(getParamResource(), I_CmsConstants.C_PROPERTY_NAVPOS);\n        } catch (CmsException e) {\n            // ignore this exception\n        }\n        if (navPos == null) {\n            navPos = \"\";\n        }\n        result.append(\"<input type=\\\"hidden\\\" name=\\\"\" + PREFIX_HIDDEN + I_CmsConstants.C_PROPERTY_NAVPOS +  \"\\\" value=\\\"\" + navPos + \"\\\">\");\n        result.append(\"<\/td>\\n\");\n        result.append(\"\\t<td class=\\\"textcenter\\\">\");       \n        result.append(\"&nbsp;\");\n        result.append(buildTableRowEnd());\n \n        return result;\n    }","id":50286,"modified_method":"/**\n     * Builds the HTML code for the special properties of an xmlpage resource.<p>\n     * \n     * @param editable indicates if the properties are editable\n     * @param activeProperties Map of all active properties of the resource \n     * @return the HTML code for the special properties of a file resource\n     */\n    protected StringBuffer buildNavigationProperties(boolean editable, Map activeProperties) {\n        StringBuffer result = new StringBuffer(1024);\n        \n        // create \"disabled\" attribute if properties are not editable\n        String disabled = \"\";\n        if (!editable) {\n            disabled = \" disabled=\\\"disabled\\\"\";\n        }    \n        \n        // create \"add to navigation\" checkbox\n        result.append(buildTableRowStart(key(\"input.addtonav\")));\n        result.append(\"<input type=\\\"checkbox\\\" name=\\\"enablenav\\\" id=\\\"enablenav\\\" value=\\\"true\\\" onClick=\\\"toggleNav();\\\"\");\n        if (activeProperties.containsKey(I_CmsConstants.C_PROPERTY_NAVTEXT) && activeProperties.containsKey(I_CmsConstants.C_PROPERTY_NAVPOS)) {\n            result.append(\" checked=\\\"checked\\\"\");\n        }\n        result.append(disabled + \">\");\n        result.append(\"<\/td>\\n\");\n        result.append(\"\\t<td class=\\\"textcenter\\\">\");       \n        result.append(\"&nbsp;\");\n        result.append(buildTableRowEnd());\n        \n        // create NavText input row\n        result.append(buildPropertyEntry(activeProperties, I_CmsConstants.C_PROPERTY_NAVTEXT, key(\"input.navtitle\"), editable));\n        \n        // create NavPos select box row\n        result.append(buildTableRowStart(key(\"input.insert\")));\n        synchronized (this) {\n            result.append(CmsChnav.buildNavPosSelector(getCms(), getParamResource(), disabled + \" class=\\\"maxwidth noborder\\\"\", getSettings().getMessages()));\n        }\n        // get the old NavPos value and store it in hidden field\n        String navPos = null;\n        try {\n            navPos = getCms().readPropertyObject(getParamResource(), I_CmsConstants.C_PROPERTY_NAVPOS, false).getValue();\n        } catch (CmsException e) {\n            // ignore this exception\n        }\n        if (navPos == null) {\n            navPos = \"\";\n        }\n        result.append(\"<input type=\\\"hidden\\\" name=\\\"\" + PREFIX_HIDDEN + I_CmsConstants.C_PROPERTY_NAVPOS +  \"\\\" value=\\\"\" + navPos + \"\\\">\");\n        result.append(\"<\/td>\\n\");\n        result.append(\"\\t<td class=\\\"textcenter\\\">\");       \n        result.append(\"&nbsp;\");\n        result.append(buildTableRowEnd());\n \n        return result;\n    }","commit_id":"a335ac64b60a0630ce91efd781c5f92ef19a1881","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Builds the html for a single text input property row.<p>\n     * \n     * @param activeProperties Map of all active properties of the resource\n     * @param propertyName the name of the property\n     * @param propertyTitle the nice name of the property\n     * @param editable indicates if the properties are editable\n     * @return the html for a single text input property row\n     */\n    protected StringBuffer buildPropertyEntry(Map activeProperties, String propertyName, String propertyTitle, boolean editable) {\n        StringBuffer result = new StringBuffer(256);\n        // create \"disabled\" attribute if properties are not editable\n        String disabled = \"\";\n        if (!editable) {\n            disabled = \" disabled=\\\"disabled\\\"\";\n        }\n        result.append(buildTableRowStart(propertyTitle));\n        if (activeProperties.containsKey(propertyName)) {\n            // the property is used, so create text field with value, checkbox and hidden field\n            String propValue = CmsEncoder.escapeXml((String)activeProperties.get(propertyName));\n            propertyName = CmsEncoder.escapeXml(propertyName);\n            result.append(\"<input type=\\\"text\\\" class=\\\"maxwidth\\\" value=\\\"\");\n            result.append(propValue+\"\\\" name=\\\"\" + PREFIX_VALUE + propertyName + \"\\\" id=\\\"\" + PREFIX_VALUE + propertyName + \"\\\"\");\n            if (editable) {\n                result.append(\" onKeyup=\\\"checkValue('\" + propertyName + \"');\\\"\");\n            }\n            result.append(disabled+\">\");\n            result.append(\"<input type=\\\"hidden\\\" name=\\\"\" + PREFIX_HIDDEN + propertyName + \"\\\" id=\\\"\" + PREFIX_HIDDEN + propertyName + \"\\\" value=\\\"\" + propValue + \"\\\">\");\n            result.append(\"<\/td>\\n\");\n            result.append(\"\\t<td class=\\\"textcenter\\\">\");\n            result.append(\"<input type=\\\"checkbox\\\" name=\\\"\" + PREFIX_USEPROPERTY + propertyName + \"\\\" id=\\\"\" + PREFIX_USEPROPERTY + propertyName + \"\\\" value=\\\"true\\\"\");\n            result.append(\" checked=\\\"checked\\\"\");\n            if (editable) {\n                result.append(\" onClick=\\\"toggleDelete('\" + propertyName + \"');\\\"\");\n            }\n            result.append(disabled + \">\");\n        } else {\n            // property is not used, create an empty text input field\n            result.append(\"<input type=\\\"text\\\" class=\\\"maxwidth\\\" \");\n            result.append(\"name=\\\"\"+PREFIX_VALUE+propertyName+\"\\\"\"+disabled+\"><\/td>\\n\");\n            result.append(\"\\t<td class=\\\"textcenter\\\">&nbsp;\");\n        }\n        result.append(buildTableRowEnd());\n        return result;\n    }","id":50287,"modified_method":"/**\n     * Builds the html for a single text input property row.<p>\n     * \n     * @param activeProperties Map of all active properties of the resource\n     * @param propertyName the name of the property\n     * @param propertyTitle the nice name of the property\n     * @param editable indicates if the properties are editable\n     * @return the html for a single text input property row\n     */\n    protected StringBuffer buildPropertyEntry(Map activeProperties, String propertyName, String propertyTitle, boolean editable) {\n        StringBuffer result = new StringBuffer(256);\n        // create \"disabled\" attribute if properties are not editable\n        String disabled = \"\";\n        if (!editable) {\n            disabled = \" disabled=\\\"disabled\\\"\";\n        }\n        result.append(buildTableRowStart(propertyTitle));\n        if (activeProperties.containsKey(propertyName)) {\n            // the property is used, so create text field with value, checkbox and hidden field\n            CmsProperty currentProperty = (CmsProperty)activeProperties.get(propertyName);\n            String propValue = currentProperty.getValue();\n            if (propValue != null) {\n                propValue = propValue.trim();   \n            }\n            propValue = CmsEncoder.escapeXml(propValue);\n            propertyName = CmsEncoder.escapeXml(propertyName);\n            result.append(\"<input type=\\\"text\\\" class=\\\"maxwidth\\\" value=\\\"\");\n            result.append(propValue+\"\\\" name=\\\"\" + PREFIX_VALUE + propertyName + \"\\\" id=\\\"\" + PREFIX_VALUE + propertyName + \"\\\"\");\n            if (editable) {\n                result.append(\" onKeyup=\\\"checkValue('\" + propertyName + \"');\\\"\");\n            }\n            result.append(disabled+\">\");\n            result.append(\"<input type=\\\"hidden\\\" name=\\\"\" + PREFIX_HIDDEN + propertyName + \"\\\" id=\\\"\" + PREFIX_HIDDEN + propertyName + \"\\\" value=\\\"\" + propValue + \"\\\">\");\n            result.append(\"<\/td>\\n\");\n            result.append(\"\\t<td class=\\\"textcenter\\\">\");\n            result.append(\"<input type=\\\"checkbox\\\" name=\\\"\" + PREFIX_USEPROPERTY + propertyName + \"\\\" id=\\\"\" + PREFIX_USEPROPERTY + propertyName + \"\\\" value=\\\"true\\\"\");\n            result.append(\" checked=\\\"checked\\\"\");\n            if (editable) {\n                result.append(\" onClick=\\\"toggleDelete('\" + propertyName + \"');\\\"\");\n            }\n            result.append(disabled + \">\");\n        } else {\n            // property is not used, create an empty text input field\n            result.append(\"<input type=\\\"text\\\" class=\\\"maxwidth\\\" \");\n            result.append(\"name=\\\"\"+PREFIX_VALUE+propertyName+\"\\\"\"+disabled+\"><\/td>\\n\");\n            result.append(\"\\t<td class=\\\"textcenter\\\">&nbsp;\");\n        }\n        result.append(buildTableRowEnd());\n        return result;\n    }","commit_id":"a335ac64b60a0630ce91efd781c5f92ef19a1881","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Creates the HTML String for the edit properties form.<p>\n     * \n     * @return the HTML output String for the edit properties form\n     */\n    public String buildEditForm() {\n        StringBuffer result = new StringBuffer(2048);\n        \n        // check if the properties are editable\n        boolean editable =  isEditable();\n                \n        // get all used properties for the resource\n        Map activeProperties = null;\n        try {\n            activeProperties = getCms().readProperties(getParamResource());\n        } catch (CmsException e) { \n            // ignore this exception\n        }\n        \n        // create the column heads\n        result.append(\"<table border=\\\"0\\\">\\n\");\n        result.append(\"<tr>\\n\");\n        result.append(\"\\t<td class=\\\"textbold\\\">\" + key(\"input.property\") + \"<\/td>\\n\");\n        result.append(\"\\t<td class=\\\"textbold\\\">\" + key(\"label.value\") + \"<\/td>\\n\");   \n        result.append(\"\\t<td class=\\\"textbold\\\" style=\\\"white-space: nowrap;\\\">\" + key(\"input.usedproperty\") + \"<\/td>\\n\");    \n        result.append(\"<\/tr>\\n\");\n        result.append(\"<tr><td><span style=\\\"height: 6px;\\\"><\/span><\/td><\/tr>\\n\");\n        \n        // create the text property input rows from explorer type settings\n        result.append(buildTextInput(editable, activeProperties));\n        \n        // show navigation properties if enabled in explorer type settings\n        if (showNavigation()) {\n            result.append(buildNavigationProperties(editable, activeProperties));\n        }\n        result.append(\"<\/table>\");       \n       \n        return result.toString();\n    }","id":50288,"modified_method":"/**\n     * Creates the HTML String for the edit properties form.<p>\n     * \n     * @return the HTML output String for the edit properties form\n     */\n    public String buildEditForm() {\n        StringBuffer result = new StringBuffer(2048);\n        \n        // check if the properties are editable\n        boolean editable =  isEditable();\n                \n        // get all used properties for the resource\n        Map activeProperties = null;\n        try {\n            activeProperties = CmsPropertyAdvanced.getPropertyMap(getCms().readPropertyObjects(getParamResource(), false));\n        } catch (CmsException e) { \n            // ignore this exception\n        }\n        \n        // create the column heads\n        result.append(\"<table border=\\\"0\\\">\\n\");\n        result.append(\"<tr>\\n\");\n        result.append(\"\\t<td class=\\\"textbold\\\">\" + key(\"input.property\") + \"<\/td>\\n\");\n        result.append(\"\\t<td class=\\\"textbold\\\">\" + key(\"label.value\") + \"<\/td>\\n\");   \n        result.append(\"\\t<td class=\\\"textbold\\\" style=\\\"white-space: nowrap;\\\">\" + key(\"input.usedproperty\") + \"<\/td>\\n\");    \n        result.append(\"<\/tr>\\n\");\n        result.append(\"<tr><td><span style=\\\"height: 6px;\\\"><\/span><\/td><\/tr>\\n\");\n        \n        // create the text property input rows from explorer type settings\n        result.append(buildTextInput(editable, activeProperties));\n        \n        // show navigation properties if enabled in explorer type settings\n        if (showNavigation()) {\n            result.append(buildNavigationProperties(editable, activeProperties));\n        }\n        result.append(\"<\/table>\");       \n       \n        return result.toString();\n    }","commit_id":"a335ac64b60a0630ce91efd781c5f92ef19a1881","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Writes a property value for a resource, if the value was changed.<p>\n     * \n     * If a property definition for the resource does not exist,\n     * it is automatically created by this method.<p>\n     * \n     * @param propName the name of the property\n     * @param propValue the new value of the property\n     * @param oldValue the old value of the property\n     * @param activeProperties all active properties of the resource\n     * @throws CmsException if something goes wrong\n     */\n    protected void writeProperty(String propName, String propValue, String oldValue, Map activeProperties) throws CmsException {\n        // check if there is a parameter value for the current property\n        boolean emptyParam = true;\n        if (propValue != null) {\n            if (!\"\".equals(propValue.trim())) {\n                emptyParam = false;\n            }\n        }\n        if (emptyParam) {\n            // parameter is empty, check if the property has to be deleted\n            if (activeProperties.containsKey(propName)) {\n                // lock resource if autolock is enabled\n                checkLock(getParamResource());\n                \n                //getCms().writePropertyObject(getParamResource(), curProperty);\n                \n                getCms().deleteProperty(getParamResource(), propName);\n            }\n        } else {\n            // parameter is not empty, check if the value has changed\n            if (!propValue.equals(oldValue)) {\n                try {\n                    // lock resource if autolock is enabled\n                    checkLock(getParamResource());\n                    getCms().writeProperty(getParamResource(), propName, propValue);\n                } catch (CmsException e) {\n                    if (e.getType() == CmsException.C_NOT_FOUND) {\n                        defineProperty(propName);\n                        getCms().writeProperty(getParamResource(), propName, propValue);\n                    } else {\n                        throw e;\n                    }\n                }     \n            }\n        }\n    }","id":50289,"modified_method":"/**\n     * Writes a property value for a resource, if the value was changed.<p>\n     * \n     * If a property definition for the resource does not exist,\n     * it is automatically created by this method.<p>\n     * \n     * @param propName the name of the property\n     * @param propValue the new value of the property\n     * @param oldValue the old value of the property\n     * @param activeProperties all active properties of the resource\n     * @throws CmsException if something goes wrong\n     */\n    protected void writeProperty(String propName, String propValue, String oldValue, Map activeProperties) throws CmsException {\n        // get the current property object\n        CmsProperty currentProperty = (CmsProperty)activeProperties.get(propName);\n        if (currentProperty == null) {\n            // new property, create new property object\n            currentProperty = new CmsProperty();\n            currentProperty.setKey(propName);\n        }\n    \n        // check if there is a parameter value for the current property\n        boolean emptyParam = true;\n        if (propValue != null) {\n            if (!\"\".equals(propValue.trim())) {\n                emptyParam = false;\n            }\n        }\n        if (emptyParam) {\n            // parameter is empty, check if the property has to be deleted\n            if (activeProperties.containsKey(propName)) {\n                // lock resource if autolock is enabled\n                checkLock(getParamResource());\n                // determine the value to delete\n                if (currentProperty.getStructureValue() != null) {\n                    currentProperty.setStructureValue(\"\");    \n                } else {\n                    currentProperty.setResourceValue(\"\");    \n                }\n                // write the updated property object\n                getCms().writePropertyObject(getParamResource(), currentProperty);\n            }\n        } else {\n            // parameter is not empty, check if the value has changed\n            if (!propValue.equals(oldValue)) {\n                try {\n                    // lock resource if autolock is enabled\n                    checkLock(getParamResource());\n                    if (currentProperty.getStructureValue() == null && currentProperty.getResourceValue() == null) {\n                        // new property, determine setting from OpenCms workplace configuration\n                        if (OpenCms.getWorkplaceManager().isDefaultPropertiesOnStructure()) {\n                            currentProperty.setStructureValue(propValue);\n                        } else {\n                            currentProperty.setResourceValue(propValue);\n                        }\n                        \n                    } else if (currentProperty.getStructureValue() != null) {\n                        // structure value has to be updated\n                        currentProperty.setStructureValue(propValue);    \n                    } else {\n                        // resource value has to be updated\n                        currentProperty.setResourceValue(propValue);    \n                    }\n                    // write the updated property object\n                    getCms().writePropertyObject(getParamResource(), currentProperty);\n                } catch (CmsException e) {\n                    if (e.getType() == CmsException.C_NOT_FOUND) {\n                        defineProperty(propName);\n                        getCms().writePropertyObject(getParamResource(), currentProperty);\n                    } else {\n                        throw e;\n                    }\n                }     \n            }\n        }\n    }","commit_id":"a335ac64b60a0630ce91efd781c5f92ef19a1881","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Performs the editing of the resources properties.<p>\n     * \n     * @param request the HttpServletRequest\n     * @return true, if the properties were successfully changed, otherwise false\n     * @throws CmsException if editing is not successful\n     */\n    protected boolean performEditOperation(HttpServletRequest request) throws CmsException {\n        Map activeProperties = getCms().readProperties(getParamResource());\n        boolean useTempfileProject = \"true\".equals(getParamUsetempfileproject());\n        try {\n            if (useTempfileProject) {\n                switchToTempProject();\n            }\n            // write the common properties defined in the explorer type settings\n            Iterator i = getExplorerTypeSettings().getProperties().iterator();\n            // iterate over the properties\n            while (i.hasNext()) {\n                String curProperty = (String)i.next();\n                String paramValue = CmsEncoder.decode(request.getParameter(PREFIX_VALUE + curProperty));\n                String oldValue = request.getParameter(PREFIX_HIDDEN + curProperty);\n                writeProperty(curProperty, paramValue, oldValue, activeProperties);\n            }\n            \n            // write the navigation properties if enabled\n            if (showNavigation()) {\n                // get the navigation enabled parameter\n                String paramValue = request.getParameter(\"enablenav\");\n                String oldValue = null;\n                if (\"true\".equals(paramValue)) {\n                    // navigation enabled, update params\n                    paramValue = request.getParameter(\"navpos\");\n                    if (!\"-1\".equals(paramValue)) {\n                        // update the property only when it is different from \"-1\" (meaning no change)\n                        oldValue = request.getParameter(PREFIX_HIDDEN + I_CmsConstants.C_PROPERTY_NAVPOS);\n                        writeProperty(I_CmsConstants.C_PROPERTY_NAVPOS, paramValue, oldValue, activeProperties);\n                    }\n                    paramValue = request.getParameter(PREFIX_VALUE + I_CmsConstants.C_PROPERTY_NAVTEXT);\n                    oldValue = request.getParameter(PREFIX_HIDDEN + I_CmsConstants.C_PROPERTY_NAVTEXT);\n                    writeProperty(I_CmsConstants.C_PROPERTY_NAVTEXT, paramValue, oldValue, activeProperties);\n                } else {\n                    // navigation disabled, delete property values\n                    writeProperty(I_CmsConstants.C_PROPERTY_NAVPOS, null, null, activeProperties);\n                    writeProperty(I_CmsConstants.C_PROPERTY_NAVTEXT, null, null, activeProperties);\n                }                  \n            }\n        } finally {\n            if (useTempfileProject) {\n                switchToCurrentProject();\n            }\n        }\n        return true;\n    }","id":50290,"modified_method":"/**\n     * Performs the editing of the resources properties.<p>\n     * \n     * @param request the HttpServletRequest\n     * @return true, if the properties were successfully changed, otherwise false\n     * @throws CmsException if editing is not successful\n     */\n    protected boolean performEditOperation(HttpServletRequest request) throws CmsException {\n        Map activeProperties = CmsPropertyAdvanced.getPropertyMap(getCms().readPropertyObjects(getParamResource(), false));\n        boolean useTempfileProject = \"true\".equals(getParamUsetempfileproject());\n        try {\n            if (useTempfileProject) {\n                switchToTempProject();\n            }\n            // write the common properties defined in the explorer type settings\n            Iterator i = getExplorerTypeSettings().getProperties().iterator();\n            // iterate over the properties\n            while (i.hasNext()) {\n                String curProperty = (String)i.next();\n                String paramValue = CmsEncoder.decode(request.getParameter(PREFIX_VALUE + curProperty));\n                String oldValue = request.getParameter(PREFIX_HIDDEN + curProperty);\n                writeProperty(curProperty, paramValue, oldValue, activeProperties);\n            }\n            \n            // write the navigation properties if enabled\n            if (showNavigation()) {\n                // get the navigation enabled parameter\n                String paramValue = request.getParameter(\"enablenav\");\n                String oldValue = null;\n                if (\"true\".equals(paramValue)) {\n                    // navigation enabled, update params\n                    paramValue = request.getParameter(\"navpos\");\n                    if (!\"-1\".equals(paramValue)) {\n                        // update the property only when it is different from \"-1\" (meaning no change)\n                        oldValue = request.getParameter(PREFIX_HIDDEN + I_CmsConstants.C_PROPERTY_NAVPOS);\n                        writeProperty(I_CmsConstants.C_PROPERTY_NAVPOS, paramValue, oldValue, activeProperties);\n                    }\n                    paramValue = request.getParameter(PREFIX_VALUE + I_CmsConstants.C_PROPERTY_NAVTEXT);\n                    oldValue = request.getParameter(PREFIX_HIDDEN + I_CmsConstants.C_PROPERTY_NAVTEXT);\n                    writeProperty(I_CmsConstants.C_PROPERTY_NAVTEXT, paramValue, oldValue, activeProperties);\n                } else {\n                    // navigation disabled, delete property values\n                    writeProperty(I_CmsConstants.C_PROPERTY_NAVPOS, null, null, activeProperties);\n                    writeProperty(I_CmsConstants.C_PROPERTY_NAVTEXT, null, null, activeProperties);\n                }                  \n            }\n        } finally {\n            if (useTempfileProject) {\n                switchToCurrentProject();\n            }\n        }\n        return true;\n    }","commit_id":"a335ac64b60a0630ce91efd781c5f92ef19a1881","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * @see org.opencms.configuration.I_CmsXmlConfiguration#addXmlDigesterRules(org.apache.commons.digester.Digester)\n     */\n    public void addXmlDigesterRules(Digester digester) {                                                  \n        // add finish rule\n        digester.addCallMethod(\"*/\" + N_WORKPLACE, \"initializeFinished\");          \n        \n        // creation of the import/export manager        \n        digester.addObjectCreate(\"*/\" + N_WORKPLACE, CmsWorkplaceManager.class);                         \n        // import/export manager finished\n        digester.addSetNext(\"*/\" + N_WORKPLACE, \"setWorkplaceManager\");\n        \n        // add default locale rule\n        digester.addCallMethod(\"*/\" + N_WORKPLACE + \"/\" + N_DEFAULTLOCALE, \"setDefaultLocale\", 0);\n        \n        // add rules for dialog handlers\n        digester.addObjectCreate(\"*/\" + N_WORKPLACE + \"/\" + N_DIALOGHANDLERS + \"/\" + N_DIALOGHANDLER, A_CLASS, CmsConfigurationException.class);\n        digester.addSetNext(\"*/\" + N_WORKPLACE + \"/\" + N_DIALOGHANDLERS + \"/\" + N_DIALOGHANDLER, \"addDialogHandler\");\n\n        // add rules for editor handler\n        digester.addObjectCreate(\"*/\" + N_WORKPLACE + \"/\" + N_EDITORHANDLER, A_CLASS, CmsConfigurationException.class);\n        digester.addSetNext(\"*/\" + N_WORKPLACE + \"/\" + N_EDITORHANDLER, \"setEditorHandler\");        \n\n        // add rules for editor action handler\n        digester.addObjectCreate(\"*/\" + N_WORKPLACE + \"/\" + N_EDITORACTION, A_CLASS, CmsConfigurationException.class);\n        digester.addSetNext(\"*/\" + N_WORKPLACE + \"/\" + N_EDITORACTION, \"setEditorAction\");        \n        \n        // add rules for the workplace views  \n        digester.addCallMethod(\"*/\" + N_WORKPLACE + \"/\" + N_VIEWS + \"/\" + N_VIEW, \"addView\", 3);        \n        digester.addCallParam(\"*/\" + N_WORKPLACE + \"/\" + N_VIEWS + \"/\" + N_VIEW, 0, A_KEY);\n        digester.addCallParam(\"*/\" + N_WORKPLACE + \"/\" + N_VIEWS + \"/\" + N_VIEW, 1, A_URI);        \n        digester.addCallParam(\"*/\" + N_WORKPLACE + \"/\" + N_VIEWS + \"/\" + N_VIEW, 2, A_ORDER);\n        \n        // add rules for the workplace export points \n        digester.addCallMethod(\"*/\" + N_WORKPLACE + \"/\" + N_EXPORTPOINTS + \"/\" + N_EXPORTPOINT, \"addExportPoint\", 2);        \n        digester.addCallParam(\"*/\" + N_WORKPLACE + \"/\" + N_EXPORTPOINTS + \"/\" + N_EXPORTPOINT, 0, A_URI);\n        digester.addCallParam(\"*/\" + N_WORKPLACE + \"/\" + N_EXPORTPOINTS + \"/\" + N_EXPORTPOINT, 1, A_DESTINATION);\n        \n        // add autolock rule\n        digester.addCallMethod(\"*/\" + N_WORKPLACE + \"/\" + N_AUTOLOCK, \"setAutoLock\", 0);\n        \n        // add user management enabled rule\n        digester.addCallMethod(\"*/\" + N_WORKPLACE + \"/\" + N_ENABLEUSERMGMT, \"setUserManagementEnabled\", 0);\n        \n        // add max file upload size rule\n        digester.addCallMethod(\"*/\" + N_WORKPLACE + \"/\" + N_MAXUPLOADSIZE, \"setFileMaxUploadSize\", 0);\n        \n        // add labeled folders rule\n        digester.addCallMethod(\"*/\" + N_WORKPLACE + \"/\" + N_LABELEDFOLDERS + \"/\" + N_RESOURCE, \"addLabeledFolder\", 1);        \n        digester.addCallParam(\"*/\" + N_WORKPLACE + \"/\" + N_LABELEDFOLDERS + \"/\" + N_RESOURCE, 0, A_URI);\n        \n        // add explorer type settings\n        digester.addObjectCreate(\"*/\" + N_EXPLORERTYPE, CmsExplorerTypeSettings.class);\n        digester.addSetNext(\"*/\" + N_EXPLORERTYPE, \"addExplorerTypeSetting\");\n        \n        digester.addCallMethod(\"*/\" + N_EXPLORERTYPE, \"setTypeAttributes\", 3);\n        digester.addCallParam(\"*/\" + N_EXPLORERTYPE, 0, A_NAME);\n        digester.addCallParam(\"*/\" + N_EXPLORERTYPE, 1, A_KEY);\n        digester.addCallParam(\"*/\" + N_EXPLORERTYPE, 2, A_ICON);\n        \n        digester.addCallMethod(\"*/\" + N_EXPLORERTYPE + \"/\" + N_NEWRESOURCE, \"setNewResourceUri\", 1);\n        digester.addCallParam(\"*/\" + N_EXPLORERTYPE + \"/\" + N_NEWRESOURCE, 0, A_URI);\n        digester.addCallMethod(\"*/\" + N_EXPLORERTYPE + \"/\" + N_NEWRESOURCE, \"setNewResourceOrder\", 1);\n        digester.addCallParam(\"*/\" + N_EXPLORERTYPE + \"/\" + N_NEWRESOURCE, 0, A_ORDER);\n        \n        digester.addCallMethod(\"*/\" + N_EXPLORERTYPE + \"/\" + N_ACCESSCONTROL + \"/\" + N_ACCESSENTRY, \"addAccessEntry\", 2);\n        digester.addCallParam(\"*/\" + N_EXPLORERTYPE + \"/\" + N_ACCESSCONTROL + \"/\" + N_ACCESSENTRY, 0, A_PRINCIPAL);\n        digester.addCallParam(\"*/\" + N_EXPLORERTYPE + \"/\" + N_ACCESSCONTROL + \"/\" + N_ACCESSENTRY, 1, A_PERMISSIONS);\n        \n        digester.addCallMethod(\"*/\" + N_EXPLORERTYPE + \"/\" + N_EDITOPTIONS + \"/\" + N_DEFAULTPROPERTIES, \"setPropertyDefaults\", 2);\n        digester.addCallParam(\"*/\" + N_EXPLORERTYPE + \"/\" + N_EDITOPTIONS + \"/\" + N_DEFAULTPROPERTIES, 0, A_ENABLED);\n        digester.addCallParam(\"*/\" + N_EXPLORERTYPE + \"/\" + N_EDITOPTIONS + \"/\" + N_DEFAULTPROPERTIES, 1, A_SHOWNAVIGATION);\n        \n        digester.addCallMethod(\"*/\" + N_EXPLORERTYPE + \"/\" + N_EDITOPTIONS + \"/\" + N_DEFAULTPROPERTIES + \"/\" + N_PROPERTY, \"addProperty\", 1);\n        digester.addCallParam(\"*/\" + N_EXPLORERTYPE + \"/\" + N_EDITOPTIONS + \"/\" + N_DEFAULTPROPERTIES + \"/\" + N_PROPERTY, 0, A_NAME);\n        \n        digester.addCallMethod(\"*/\" + N_EXPLORERTYPE + \"/\" + N_EDITOPTIONS + \"/\" + N_CONTEXTMENU + \"/\" + N_ENTRY, \"addContextMenuEntry\", 6);\n        digester.addCallParam(\"*/\" + N_EXPLORERTYPE + \"/\" + N_EDITOPTIONS + \"/\" + N_CONTEXTMENU + \"/\" + N_ENTRY, 0, A_KEY);\n        digester.addCallParam(\"*/\" + N_EXPLORERTYPE + \"/\" + N_EDITOPTIONS + \"/\" + N_CONTEXTMENU + \"/\" + N_ENTRY, 1, A_URI);\n        digester.addCallParam(\"*/\" + N_EXPLORERTYPE + \"/\" + N_EDITOPTIONS + \"/\" + N_CONTEXTMENU + \"/\" + N_ENTRY, 2, A_RULES);\n        digester.addCallParam(\"*/\" + N_EXPLORERTYPE + \"/\" + N_EDITOPTIONS + \"/\" + N_CONTEXTMENU + \"/\" + N_ENTRY, 3, A_TARGET);\n        digester.addCallParam(\"*/\" + N_EXPLORERTYPE + \"/\" + N_EDITOPTIONS + \"/\" + N_CONTEXTMENU + \"/\" + N_ENTRY, 4, A_ORDER);\n        digester.addCallParam(\"*/\" + N_EXPLORERTYPE + \"/\" + N_EDITOPTIONS + \"/\" + N_CONTEXTMENU + \"/\" + N_ENTRY, 5, A_ISXML);\n        \n        digester.addCallMethod(\"*/\" + N_EXPLORERTYPE + \"/\" + N_EDITOPTIONS + \"/\" + N_CONTEXTMENU + \"/\" + N_SEPARATOR, \"addContextMenuSeparator\", 1);\n        digester.addCallParam(\"*/\" + N_EXPLORERTYPE + \"/\" + N_EDITOPTIONS + \"/\" + N_CONTEXTMENU + \"/\" + N_SEPARATOR, 0, A_ORDER);\n        \n        digester.addCallMethod(\"*/\" + N_EXPLORERTYPE + \"/\" + N_EDITOPTIONS + \"/\" + N_CONTEXTMENU, \"createContextMenu\");\n        digester.addCallMethod(\"*/\" + N_EXPLORERTYPE + \"/\" + N_EDITOPTIONS, \"setIsResourceType\");      \n    }","id":50291,"modified_method":"/**\n     * @see org.opencms.configuration.I_CmsXmlConfiguration#addXmlDigesterRules(org.apache.commons.digester.Digester)\n     */\n    public void addXmlDigesterRules(Digester digester) {                                                  \n        // add finish rule\n        digester.addCallMethod(\"*/\" + N_WORKPLACE, \"initializeFinished\");          \n        \n        // creation of the import/export manager        \n        digester.addObjectCreate(\"*/\" + N_WORKPLACE, CmsWorkplaceManager.class);                         \n        // import/export manager finished\n        digester.addSetNext(\"*/\" + N_WORKPLACE, \"setWorkplaceManager\");\n        \n        // add default locale rule\n        digester.addCallMethod(\"*/\" + N_WORKPLACE + \"/\" + N_DEFAULTLOCALE, \"setDefaultLocale\", 0);\n        \n        // add default properties on structure setting\n        digester.addCallMethod(\"*/\" + N_WORKPLACE + \"/\" + N_DEFAULTPROPERTIESONSTRUCTURE, \"setDefaultPropertiesOnStructure\", 0);\n        \n        // add rules for dialog handlers\n        digester.addObjectCreate(\"*/\" + N_WORKPLACE + \"/\" + N_DIALOGHANDLERS + \"/\" + N_DIALOGHANDLER, A_CLASS, CmsConfigurationException.class);\n        digester.addSetNext(\"*/\" + N_WORKPLACE + \"/\" + N_DIALOGHANDLERS + \"/\" + N_DIALOGHANDLER, \"addDialogHandler\");\n\n        // add rules for editor handler\n        digester.addObjectCreate(\"*/\" + N_WORKPLACE + \"/\" + N_EDITORHANDLER, A_CLASS, CmsConfigurationException.class);\n        digester.addSetNext(\"*/\" + N_WORKPLACE + \"/\" + N_EDITORHANDLER, \"setEditorHandler\");        \n\n        // add rules for editor action handler\n        digester.addObjectCreate(\"*/\" + N_WORKPLACE + \"/\" + N_EDITORACTION, A_CLASS, CmsConfigurationException.class);\n        digester.addSetNext(\"*/\" + N_WORKPLACE + \"/\" + N_EDITORACTION, \"setEditorAction\");        \n        \n        // add rules for the workplace views  \n        digester.addCallMethod(\"*/\" + N_WORKPLACE + \"/\" + N_VIEWS + \"/\" + N_VIEW, \"addView\", 3);        \n        digester.addCallParam(\"*/\" + N_WORKPLACE + \"/\" + N_VIEWS + \"/\" + N_VIEW, 0, A_KEY);\n        digester.addCallParam(\"*/\" + N_WORKPLACE + \"/\" + N_VIEWS + \"/\" + N_VIEW, 1, A_URI);        \n        digester.addCallParam(\"*/\" + N_WORKPLACE + \"/\" + N_VIEWS + \"/\" + N_VIEW, 2, A_ORDER);\n        \n        // add rules for the workplace export points \n        digester.addCallMethod(\"*/\" + N_WORKPLACE + \"/\" + N_EXPORTPOINTS + \"/\" + N_EXPORTPOINT, \"addExportPoint\", 2);        \n        digester.addCallParam(\"*/\" + N_WORKPLACE + \"/\" + N_EXPORTPOINTS + \"/\" + N_EXPORTPOINT, 0, A_URI);\n        digester.addCallParam(\"*/\" + N_WORKPLACE + \"/\" + N_EXPORTPOINTS + \"/\" + N_EXPORTPOINT, 1, A_DESTINATION);\n        \n        // add autolock rule\n        digester.addCallMethod(\"*/\" + N_WORKPLACE + \"/\" + N_AUTOLOCK, \"setAutoLock\", 0);\n        \n        // add user management enabled rule\n        digester.addCallMethod(\"*/\" + N_WORKPLACE + \"/\" + N_ENABLEUSERMGMT, \"setUserManagementEnabled\", 0);\n        \n        // add max file upload size rule\n        digester.addCallMethod(\"*/\" + N_WORKPLACE + \"/\" + N_MAXUPLOADSIZE, \"setFileMaxUploadSize\", 0);\n        \n        // add labeled folders rule\n        digester.addCallMethod(\"*/\" + N_WORKPLACE + \"/\" + N_LABELEDFOLDERS + \"/\" + N_RESOURCE, \"addLabeledFolder\", 1);        \n        digester.addCallParam(\"*/\" + N_WORKPLACE + \"/\" + N_LABELEDFOLDERS + \"/\" + N_RESOURCE, 0, A_URI);\n        \n        // add explorer type settings\n        digester.addObjectCreate(\"*/\" + N_EXPLORERTYPE, CmsExplorerTypeSettings.class);\n        digester.addSetNext(\"*/\" + N_EXPLORERTYPE, \"addExplorerTypeSetting\");\n        \n        digester.addCallMethod(\"*/\" + N_EXPLORERTYPE, \"setTypeAttributes\", 3);\n        digester.addCallParam(\"*/\" + N_EXPLORERTYPE, 0, A_NAME);\n        digester.addCallParam(\"*/\" + N_EXPLORERTYPE, 1, A_KEY);\n        digester.addCallParam(\"*/\" + N_EXPLORERTYPE, 2, A_ICON);\n        \n        digester.addCallMethod(\"*/\" + N_EXPLORERTYPE + \"/\" + N_NEWRESOURCE, \"setNewResourceUri\", 1);\n        digester.addCallParam(\"*/\" + N_EXPLORERTYPE + \"/\" + N_NEWRESOURCE, 0, A_URI);\n        digester.addCallMethod(\"*/\" + N_EXPLORERTYPE + \"/\" + N_NEWRESOURCE, \"setNewResourceOrder\", 1);\n        digester.addCallParam(\"*/\" + N_EXPLORERTYPE + \"/\" + N_NEWRESOURCE, 0, A_ORDER);\n        \n        digester.addCallMethod(\"*/\" + N_EXPLORERTYPE + \"/\" + N_ACCESSCONTROL + \"/\" + N_ACCESSENTRY, \"addAccessEntry\", 2);\n        digester.addCallParam(\"*/\" + N_EXPLORERTYPE + \"/\" + N_ACCESSCONTROL + \"/\" + N_ACCESSENTRY, 0, A_PRINCIPAL);\n        digester.addCallParam(\"*/\" + N_EXPLORERTYPE + \"/\" + N_ACCESSCONTROL + \"/\" + N_ACCESSENTRY, 1, A_PERMISSIONS);\n        \n        digester.addCallMethod(\"*/\" + N_EXPLORERTYPE + \"/\" + N_EDITOPTIONS + \"/\" + N_DEFAULTPROPERTIES, \"setPropertyDefaults\", 2);\n        digester.addCallParam(\"*/\" + N_EXPLORERTYPE + \"/\" + N_EDITOPTIONS + \"/\" + N_DEFAULTPROPERTIES, 0, A_ENABLED);\n        digester.addCallParam(\"*/\" + N_EXPLORERTYPE + \"/\" + N_EDITOPTIONS + \"/\" + N_DEFAULTPROPERTIES, 1, A_SHOWNAVIGATION);\n        \n        digester.addCallMethod(\"*/\" + N_EXPLORERTYPE + \"/\" + N_EDITOPTIONS + \"/\" + N_DEFAULTPROPERTIES + \"/\" + N_PROPERTY, \"addProperty\", 1);\n        digester.addCallParam(\"*/\" + N_EXPLORERTYPE + \"/\" + N_EDITOPTIONS + \"/\" + N_DEFAULTPROPERTIES + \"/\" + N_PROPERTY, 0, A_NAME);\n        \n        digester.addCallMethod(\"*/\" + N_EXPLORERTYPE + \"/\" + N_EDITOPTIONS + \"/\" + N_CONTEXTMENU + \"/\" + N_ENTRY, \"addContextMenuEntry\", 6);\n        digester.addCallParam(\"*/\" + N_EXPLORERTYPE + \"/\" + N_EDITOPTIONS + \"/\" + N_CONTEXTMENU + \"/\" + N_ENTRY, 0, A_KEY);\n        digester.addCallParam(\"*/\" + N_EXPLORERTYPE + \"/\" + N_EDITOPTIONS + \"/\" + N_CONTEXTMENU + \"/\" + N_ENTRY, 1, A_URI);\n        digester.addCallParam(\"*/\" + N_EXPLORERTYPE + \"/\" + N_EDITOPTIONS + \"/\" + N_CONTEXTMENU + \"/\" + N_ENTRY, 2, A_RULES);\n        digester.addCallParam(\"*/\" + N_EXPLORERTYPE + \"/\" + N_EDITOPTIONS + \"/\" + N_CONTEXTMENU + \"/\" + N_ENTRY, 3, A_TARGET);\n        digester.addCallParam(\"*/\" + N_EXPLORERTYPE + \"/\" + N_EDITOPTIONS + \"/\" + N_CONTEXTMENU + \"/\" + N_ENTRY, 4, A_ORDER);\n        digester.addCallParam(\"*/\" + N_EXPLORERTYPE + \"/\" + N_EDITOPTIONS + \"/\" + N_CONTEXTMENU + \"/\" + N_ENTRY, 5, A_ISXML);\n        \n        digester.addCallMethod(\"*/\" + N_EXPLORERTYPE + \"/\" + N_EDITOPTIONS + \"/\" + N_CONTEXTMENU + \"/\" + N_SEPARATOR, \"addContextMenuSeparator\", 1);\n        digester.addCallParam(\"*/\" + N_EXPLORERTYPE + \"/\" + N_EDITOPTIONS + \"/\" + N_CONTEXTMENU + \"/\" + N_SEPARATOR, 0, A_ORDER);\n        \n        digester.addCallMethod(\"*/\" + N_EXPLORERTYPE + \"/\" + N_EDITOPTIONS + \"/\" + N_CONTEXTMENU, \"createContextMenu\");\n        digester.addCallMethod(\"*/\" + N_EXPLORERTYPE + \"/\" + N_EDITOPTIONS, \"setIsResourceType\");      \n    }","commit_id":"a335ac64b60a0630ce91efd781c5f92ef19a1881","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Creates a new instance for the workplace manager, will be called by the workplace configuration manager.<p>\n     */\n    public CmsWorkplaceManager() {\n        if (OpenCms.getLog(CmsLog.CHANNEL_INIT).isInfoEnabled()) {\n            OpenCms.getLog(CmsLog.CHANNEL_INIT).info(\". Workplace init       : starting\");\n        }\n        m_locales = new HashSet();\n        m_labelSiteFolders = new ArrayList();\n        m_autoLockResources = true;\n        m_showUserGroupIcon = true;\n        m_dialogHandler = new HashMap();\n        m_views = new ArrayList();\n        m_exportPoints = new HashSet();\n        m_editorHandler = new CmsEditorHandler();\n        m_fileMaxUploadSize = -1;\n        m_explorerTypeSettings = new ArrayList();\n        m_explorerTypeSettingsMap = new HashMap();\n        // TODO: Set workplace encoding independent from main system (use UTF-8 as default)\n        m_defaultEncoding = OpenCms.getSystemInfo().getDefaultEncoding();\n    }","id":50292,"modified_method":"/**\n     * Creates a new instance for the workplace manager, will be called by the workplace configuration manager.<p>\n     */\n    public CmsWorkplaceManager() {\n        if (OpenCms.getLog(CmsLog.CHANNEL_INIT).isInfoEnabled()) {\n            OpenCms.getLog(CmsLog.CHANNEL_INIT).info(\". Workplace init       : starting\");\n        }\n        m_locales = new HashSet();\n        m_labelSiteFolders = new ArrayList();\n        m_autoLockResources = true;\n        m_showUserGroupIcon = true;\n        m_dialogHandler = new HashMap();\n        m_views = new ArrayList();\n        m_exportPoints = new HashSet();\n        m_editorHandler = new CmsEditorHandler();\n        m_fileMaxUploadSize = -1;\n        m_explorerTypeSettings = new ArrayList();\n        m_explorerTypeSettingsMap = new HashMap();\n        m_defaultPropertiesOnStructure = true;\n        // TODO: Set workplace encoding independent from main system (use UTF-8 as default)\n        m_defaultEncoding = OpenCms.getSystemInfo().getDefaultEncoding();\n    }","commit_id":"a335ac64b60a0630ce91efd781c5f92ef19a1881","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * @see org.opencms.i18n.I_CmsLocaleHandler#getI18nInfo(javax.servlet.http.HttpServletRequest, org.opencms.file.CmsUser, org.opencms.file.CmsProject, java.lang.String)\n     */\n    public CmsI18nInfo getI18nInfo(HttpServletRequest req, CmsUser user, CmsProject project, String resourceName) {\n        \n        CmsLocaleManager localeManager = OpenCms.getLocaleManager();\n        \n        String encoding;\n        List defaultLocales;\n        synchronized (m_adminCmsObject) {\n            // must switch project id in stored Admin context to match current project\n            m_adminCmsObject.getRequestContext().setCurrentProject(project);            \n            // now get default m_locale names\n            defaultLocales = localeManager.getDefaultLocales(m_adminCmsObject, resourceName);\n            // get the encoding\n            try {\n                encoding = m_adminCmsObject.readProperty(resourceName, I_CmsConstants.C_PROPERTY_CONTENT_ENCODING, true, OpenCms.getSystemInfo().getDefaultEncoding());\n            } catch (CmsException e) {\n                // should never happen since the resource must exist\n                OpenCms.getLog(this).error(\"Could not read encoding property for resource \" + resourceName, e);\n                encoding = OpenCms.getSystemInfo().getDefaultEncoding();\n            }\n        }\n        \n        Locale locale;\n        // return the first default locale name \n        if ((defaultLocales != null) && (defaultLocales.size() > 0)) {\n            locale = (Locale)defaultLocales.get(0);\n        } else {\n            locale = localeManager.getDefaultLocale();\n        }\n        \n        return new CmsI18nInfo(locale, encoding);        \n    }","id":50293,"modified_method":"/**\n     * @see org.opencms.i18n.I_CmsLocaleHandler#getI18nInfo(javax.servlet.http.HttpServletRequest, org.opencms.file.CmsUser, org.opencms.file.CmsProject, java.lang.String)\n     */\n    public CmsI18nInfo getI18nInfo(HttpServletRequest req, CmsUser user, CmsProject project, String resourceName) {\n        \n        CmsLocaleManager localeManager = OpenCms.getLocaleManager();\n        \n        String encoding;\n        List defaultLocales;\n        synchronized (m_adminCmsObject) {\n            // must switch project id in stored Admin context to match current project\n            m_adminCmsObject.getRequestContext().setCurrentProject(project);            \n            // now get default m_locale names\n            defaultLocales = localeManager.getDefaultLocales(m_adminCmsObject, resourceName);\n            // get the encoding\n            try {\n                encoding = m_adminCmsObject.readPropertyObject(resourceName, I_CmsConstants.C_PROPERTY_CONTENT_ENCODING, true).getValue(OpenCms.getSystemInfo().getDefaultEncoding());\n            } catch (CmsException e) {\n                if (OpenCms.getLog(this).isInfoEnabled()) {\n                    OpenCms.getLog(this).info(\"Could not read encoding property for resource \" + resourceName, e);\n                } \n                encoding = OpenCms.getSystemInfo().getDefaultEncoding();\n            }\n        }\n        \n        Locale locale;\n        // return the first default locale name \n        if ((defaultLocales != null) && (defaultLocales.size() > 0)) {\n            locale = (Locale)defaultLocales.get(0);\n        } else {\n            locale = localeManager.getDefaultLocale();\n        }\n        \n        return new CmsI18nInfo(locale, encoding);        \n    }","commit_id":"d13ecfe846a4796d6242eff87f358f6836c891fd","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n         * @param cms context provider for the current request\n         * @param res the resource to compare\n         */        \n        ResourceTitleContainer(CmsObject cms, CmsResource res) {\n            m_res = res;\n            try {\n                cms.getRequestContext().saveSiteRoot();\n                cms.setContextToCos();\n                m_title = cms.readProperty(cms.readAbsolutePath(res), org.opencms.main.I_CmsConstants.C_PROPERTY_TITLE);\n                cms.getRequestContext().restoreSiteRoot();\n            } catch (Exception e) {\n                m_title = \"\";\n            }\n        }","id":50294,"modified_method":"/**\n         * @param cms context provider for the current request\n         * @param res the resource to compare\n         */        \n        ResourceTitleContainer(CmsObject cms, CmsResource res) {\n            m_res = res;\n            try {\n                cms.getRequestContext().saveSiteRoot();\n                cms.setContextToCos();\n                m_title = cms.readPropertyObject(cms.readAbsolutePath(res), org.opencms.main.I_CmsConstants.C_PROPERTY_TITLE, false).getValue();\n                cms.getRequestContext().restoreSiteRoot();\n            } catch (Exception e) {\n                m_title = \"\";\n            }\n        }","commit_id":"d13ecfe846a4796d6242eff87f358f6836c891fd","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * @return <code>EVAL_PAGE<\/code>\n     * @see javax.servlet.jsp.tagext.Tag#doEndTag()\n     * @throws JspException by interface default\n     */\n    public int doEndTag() throws JspException {\n        \n        ServletRequest req = pageContext.getRequest();\n        ServletResponse res = pageContext.getResponse();\n        \n        // This will always be true if the page is called through OpenCms \n        if (CmsFlexController.isCmsRequest(req)) {\n            CmsFlexController controller = (CmsFlexController)req.getAttribute(CmsFlexController.ATTRIBUTE_NAME); \n            String target = null;                       \n            \n            // Try to find out what to do\n            if (m_target != null) {\n                // Option 1: target is set with \"page\" or \"file\" parameter\n                target = m_target + getSuffix();\n            } else if (m_property != null) {            \n                // Option 2: target is set with \"property\" parameter\n                if (DEBUG) {\n                    System.err.println(\"IncludeTag: property=\" + m_property);\n                }\n                try { \n                    String prop = controller.getCmsObject().readProperty(controller.getCmsObject().getRequestContext().getUri(), m_property, true);\n                    if (DEBUG) {\n                        System.err.println(\"IncludeTag: property=\" + m_property + \" is \" + prop);\n                    }\n                    if (prop != null) {\n                        target = prop + getSuffix();\n                    }\n                } catch (Exception e) { \n                    // target will be null\n                }\n            } else if (m_attribute != null) {            \n                // Option 3: target is set in \"attribute\" parameter\n                try { \n                    String attr = (String)req.getAttribute(m_attribute);\n                    if (attr != null) {\n                        target = attr + getSuffix();\n                    }\n                } catch (Exception e) { \n                    // target will be null\n                }\n            } else {\n                // Option 4: target might be set in body\n                String body = null;\n                if (getBodyContent() != null) {\n                    body = getBodyContent().getString();\n                    if ((body != null) && (! \"\".equals(body.trim()))) {\n                        // target IS set in body\n                        target = body + getSuffix();\n                    } \n                    // else target is not set at all, default will be used \n                }\n            } \n              \n            // now perform the include action\n            includeTagAction(pageContext, target, m_element, m_editable, m_parameterMap, req, res);\n            \n            // must call release here manually to make sure m_parameterMap is cleared\n            release();\n        }\n        \n        return EVAL_PAGE;\n    }","id":50295,"modified_method":"/**\n     * @return <code>EVAL_PAGE<\/code>\n     * @see javax.servlet.jsp.tagext.Tag#doEndTag()\n     * @throws JspException by interface default\n     */\n    public int doEndTag() throws JspException {\n        \n        ServletRequest req = pageContext.getRequest();\n        ServletResponse res = pageContext.getResponse();\n        \n        // This will always be true if the page is called through OpenCms \n        if (CmsFlexController.isCmsRequest(req)) {\n            CmsFlexController controller = (CmsFlexController)req.getAttribute(CmsFlexController.ATTRIBUTE_NAME); \n            String target = null;                       \n            \n            // Try to find out what to do\n            if (m_target != null) {\n                // Option 1: target is set with \"page\" or \"file\" parameter\n                target = m_target + getSuffix();\n            } else if (m_property != null) {            \n                // Option 2: target is set with \"property\" parameter\n                if (DEBUG) {\n                    System.err.println(\"IncludeTag: property=\" + m_property);\n                }\n                try { \n                    String prop = controller.getCmsObject().readPropertyObject(controller.getCmsObject().getRequestContext().getUri(), m_property, true).getValue();\n                    if (DEBUG) {\n                        System.err.println(\"IncludeTag: property=\" + m_property + \" is \" + prop);\n                    }\n                    if (prop != null) {\n                        target = prop + getSuffix();\n                    }\n                } catch (Exception e) { \n                    // target will be null\n                }\n            } else if (m_attribute != null) {            \n                // Option 3: target is set in \"attribute\" parameter\n                try { \n                    String attr = (String)req.getAttribute(m_attribute);\n                    if (attr != null) {\n                        target = attr + getSuffix();\n                    }\n                } catch (Exception e) { \n                    // target will be null\n                }\n            } else {\n                // Option 4: target might be set in body\n                String body = null;\n                if (getBodyContent() != null) {\n                    body = getBodyContent().getString();\n                    if ((body != null) && (! \"\".equals(body.trim()))) {\n                        // target IS set in body\n                        target = body + getSuffix();\n                    } \n                    // else target is not set at all, default will be used \n                }\n            } \n              \n            // now perform the include action\n            includeTagAction(pageContext, target, m_element, m_editable, m_parameterMap, req, res);\n            \n            // must call release here manually to make sure m_parameterMap is cleared\n            release();\n        }\n        \n        return EVAL_PAGE;\n    }","commit_id":"d13ecfe846a4796d6242eff87f358f6836c891fd","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Internal action method.<p>\n     * \n     * @param property the property to look up\n     * @param action the search action\n     * @param defaultValue the default value\n     * @param escape if the result html should be escaped or not\n     * @param req the current request\n     * @return String the value of the property or <code>null<\/code> if not found (and no\n     *      defaultValue provided)\n     * @throws CmsException if something goes wrong\n     */\n    public static String propertyTagAction(\n        String property, \n        String action, \n        String defaultValue, \n        boolean escape, \n        ServletRequest req\n    ) throws CmsException {\n        CmsFlexController controller = (CmsFlexController)req.getAttribute(CmsFlexController.ATTRIBUTE_NAME);\n        if (DEBUG > 0) {      \n            System.err.println(\"propertyTagAction() called!\\nproperty=\" + property \n                + \"\\naction=\" + action \n                + \"\\ndefaultValue=\" + defaultValue \n                + \"\\nescape=\" + escape);\n            System.err.println(\"propertyTagAction() request URI=\" + controller.getCmsObject().getRequestContext().getUri());\n        }\n        String value;\n        \n        // if action is not set use default\n        if (action == null) {\n            action = m_actionValues[0];\n        }\n\n        switch (m_actionValue.indexOf(action)) {      \n            case 0: // USE_URI\n            case 1: // USE_PARENT\n                // Read properties of parent (i.e. top requested) file\n                value = controller.getCmsObject().readProperty(controller.getCmsObject().getRequestContext().getUri(), property, false, defaultValue); \n                break;\n            case 2: // USE_SEARCH\n            case 3: // USE_SEARCH_URI\n            case 4: // USE_SEARCH_PARENT \n                // Try to find property on parent file and all parent folders\n                value = controller.getCmsObject().readProperty(controller.getCmsObject().getRequestContext().getUri(), property, true, defaultValue);\n                break;                \n            case 5: // USE_ELEMENT_URI\n            case 6: // USE_THIS\n                // Read properties of this file            \n                value = controller.getCmsObject().readProperty(controller.getCurrentRequest().getElementUri(), property, false, defaultValue);\n                break;\n            case 7: // USE_SEARCH_ELEMENT_URI\n            case 8: // USE_SEARCH_THIS\n                // Try to find property on this file and all parent folders\n                value = controller.getCmsObject().readProperty(controller.getCurrentRequest().getElementUri(), property, true, defaultValue);\n                break;\n            default:\n                // Read properties of the file named in the attribute            \n                value = controller.getCmsObject().readProperty(CmsLinkManager.getAbsoluteUri(action, controller.getCurrentRequest().getElementUri()), property, false, defaultValue);\n        }           \n        if (escape) {\n            value = CmsEncoder.escapeHtml(value);\n        }\n        if (DEBUG > 0) {\n            System.err.println(\"propertyTagAction(): result=\" + value);\n        }\n        return value;\n    }","id":50296,"modified_method":"/**\n     * Internal action method.<p>\n     * \n     * @param property the property to look up\n     * @param action the search action\n     * @param defaultValue the default value\n     * @param escape if the result html should be escaped or not\n     * @param req the current request\n     * @return String the value of the property or <code>null<\/code> if not found (and no\n     *      defaultValue provided)\n     * @throws CmsException if something goes wrong\n     */\n    public static String propertyTagAction(\n        String property, \n        String action, \n        String defaultValue, \n        boolean escape, \n        ServletRequest req\n    ) throws CmsException {\n        CmsFlexController controller = (CmsFlexController)req.getAttribute(CmsFlexController.ATTRIBUTE_NAME);\n        if (DEBUG > 0) {      \n            System.err.println(\"propertyTagAction() called!\\nproperty=\" + property \n                + \"\\naction=\" + action \n                + \"\\ndefaultValue=\" + defaultValue \n                + \"\\nescape=\" + escape);\n            System.err.println(\"propertyTagAction() request URI=\" + controller.getCmsObject().getRequestContext().getUri());\n        }\n        String value;\n        \n        // if action is not set use default\n        if (action == null) {\n            action = m_actionValues[0];\n        }\n\n        switch (m_actionValue.indexOf(action)) {      \n            case 0: // USE_URI\n            case 1: // USE_PARENT\n                // Read properties of parent (i.e. top requested) file\n                value = controller.getCmsObject().readPropertyObject(controller.getCmsObject().getRequestContext().getUri(), property, false).getValue(defaultValue); \n                break;\n            case 2: // USE_SEARCH\n            case 3: // USE_SEARCH_URI\n            case 4: // USE_SEARCH_PARENT \n                // Try to find property on parent file and all parent folders\n                value = controller.getCmsObject().readPropertyObject(controller.getCmsObject().getRequestContext().getUri(), property, true).getValue(defaultValue);\n                break;                \n            case 5: // USE_ELEMENT_URI\n            case 6: // USE_THIS\n                // Read properties of this file            \n                value = controller.getCmsObject().readPropertyObject(controller.getCurrentRequest().getElementUri(), property, false).getValue(defaultValue);\n                break;\n            case 7: // USE_SEARCH_ELEMENT_URI\n            case 8: // USE_SEARCH_THIS\n                // Try to find property on this file and all parent folders\n                value = controller.getCmsObject().readPropertyObject(controller.getCurrentRequest().getElementUri(), property, true).getValue(defaultValue);\n                break;\n            default:\n                // Read properties of the file named in the attribute            \n                value = controller.getCmsObject().readPropertyObject(CmsLinkManager.getAbsoluteUri(action, controller.getCurrentRequest().getElementUri()), property, false).getValue(defaultValue);\n        }           \n        if (escape) {\n            value = CmsEncoder.escapeHtml(value);\n        }\n        if (DEBUG > 0) {\n            System.err.println(\"propertyTagAction(): result=\" + value);\n        }\n        return value;\n    }","commit_id":"d13ecfe846a4796d6242eff87f358f6836c891fd","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Returns an array of available locale names for the given resource.<p>\n     * \n     * @param cms the current cms permission object\n     * @param resourceName the name of the resource\n     * @return an array of available locale names\n     */\n    public List getAvailableLocales(CmsObject cms, String resourceName) {\n    \n        String availableNames = null;\n        try {\n            availableNames = cms.readProperty(resourceName, I_CmsConstants.C_PROPERTY_AVAILABLE_LOCALES, true);\n        } catch (CmsException exc) {\n            // noop\n        }\n        \n        List result = null;\n        if (availableNames != null) {\n            result = getAvailableLocales(availableNames);            \n        } \n        if ((result == null) || (result.size() == 0)) {\n            return m_availableLocales;\n        } else {\n            return result;\n        }        \n    }","id":50297,"modified_method":"/**\n     * Returns an array of available locale names for the given resource.<p>\n     * \n     * @param cms the current cms permission object\n     * @param resourceName the name of the resource\n     * @return an array of available locale names\n     */\n    public List getAvailableLocales(CmsObject cms, String resourceName) {\n    \n        String availableNames = null;\n        try {\n            availableNames = cms.readPropertyObject(resourceName, I_CmsConstants.C_PROPERTY_AVAILABLE_LOCALES, true).getValue();\n        } catch (CmsException exc) {\n            // noop\n        }\n        \n        List result = null;\n        if (availableNames != null) {\n            result = getAvailableLocales(availableNames);            \n        } \n        if ((result == null) || (result.size() == 0)) {\n            return m_availableLocales;\n        } else {\n            return result;\n        }        \n    }","commit_id":"d13ecfe846a4796d6242eff87f358f6836c891fd","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Returns an array of default locales for the given resource.<p>\n     * \n     * @param cms the current cms permission object\n     * @param resourceName the name of the resource\n     * @return an array of default locale names\n     */    \n    public List getDefaultLocales(CmsObject cms, String resourceName) {\n        \n        String defaultNames = null;\n        try {\n            defaultNames = cms.readProperty(resourceName, I_CmsConstants.C_PROPERTY_LOCALE, true);\n        } catch (CmsException e) {\n            OpenCms.getLog(this).warn(\"Could not read locale property for resource \" + resourceName, e);\n        }        \n        \n        List result = null;\n        if (defaultNames != null) {\n            result = getAvailableLocales(defaultNames);            \n        } \n        if ((result == null) || (result.size() == 0)) {\n            return m_defaultLocales;\n        } else {\n            return result;\n        }\n    }","id":50298,"modified_method":"/**\n     * Returns an array of default locales for the given resource.<p>\n     * \n     * @param cms the current cms permission object\n     * @param resourceName the name of the resource\n     * @return an array of default locale names\n     */    \n    public List getDefaultLocales(CmsObject cms, String resourceName) {\n        \n        String defaultNames = null;\n        try {\n            defaultNames = cms.readPropertyObject(resourceName, I_CmsConstants.C_PROPERTY_LOCALE, true).getValue();\n        } catch (CmsException e) {\n            OpenCms.getLog(this).warn(\"Could not read locale property for resource \" + resourceName, e);\n        }        \n        \n        List result = null;\n        if (defaultNames != null) {\n            result = getAvailableLocales(defaultNames);            \n        } \n        if ((result == null) || (result.size() == 0)) {\n            return m_defaultLocales;\n        } else {\n            return result;\n        }\n    }","commit_id":"d13ecfe846a4796d6242eff87f358f6836c891fd","url":"https://github.com/alkacon/opencms-core"},{"original_method":"public void displayRadioEdit(StringBuffer buffer, String name, String prefix, BaseCollection object, XWikiContext context) {\n        String StringNone = getDisplayValue(context, 2);\n        String String0 = getDisplayValue(context, 0);\n        String String1 = getDisplayValue(context, 1);\n        input[] inputs;\n\n        input radio0 = new input(input.radio, prefix + name, \"\");\n        input radio1 = new input(input.radio, prefix + name, \"1\");\n        input radio2 = new input(input.radio, prefix + name, \"0\");\n        radio0.addElement(StringNone);\n        radio1.addElement(String1);\n        radio2.addElement(String0);\n\n        if (getDefaultValue()==-1) {\n            inputs = new input[] { radio0, radio1, radio2 };\n        } else {\n            inputs = new input[] {radio1, radio2 };\n        }\n\n        try {\n            IntegerProperty prop = (IntegerProperty) object.safeget(name);\n            Integer ivalue = (prop==null) ? null : (Integer) prop.getValue();\n            if (ivalue != null) {\n                int value = ivalue.intValue();\n                if (value == 1)\n                    radio1.setChecked(true);\n                else if (value == 0)\n                    radio2.setChecked(true);\n            } else {\n                int value = getDefaultValue();\n                if (value == 1)\n                    radio1.setChecked(true);\n                else if (value == 0)\n                    radio2.setChecked(true);\n                else if (value==-1)\n                    radio0.setChecked(true);\n                }\n        } catch (Exception e) {\n            // This should not happen\n            e.printStackTrace();\n        }\n\n        for(int i=0;i<inputs.length;i++) {\n          buffer.append(inputs[i].toString());\n        }\n    }","id":50299,"modified_method":"public void displayRadioEdit(StringBuffer buffer, String name, String prefix, BaseCollection object, XWikiContext context) {\n        String StringNone = getDisplayValue(context, 2);\n        String StringTrue = getDisplayValue(context, 1);\n        String StringFalse = getDisplayValue(context, 0);\n        div[] inputs;\n\n        input radioNone = new input(input.radio, prefix + name, \"\");\n        input radioTrue = new input(input.radio, prefix + name, \"1\");\n        input radioFalse = new input(input.radio, prefix + name, \"0\");\n        label labelNone = new label();\n        label labelTrue = new label();\n        label labelFalse = new label();\n        div divNone = new div();\n        div divTrue = new div();\n        div divFalse = new div();\n        labelNone.addElement(radioNone);\n        labelNone.addElement(StringNone);\n        divNone.addElement(labelNone);\n        labelTrue.addElement(radioTrue);\n        labelTrue.addElement(StringTrue);\n        divTrue.addElement(labelTrue);\n        labelFalse.addElement(radioFalse);\n        labelFalse.addElement(StringFalse);\n        divFalse.addElement(labelFalse);\n\n        radioTrue.setID(prefix + name);\n\n        if (getDefaultValue() == -1) {\n            inputs = new div[] { divNone, divTrue, divFalse };\n        } else {\n            inputs = new div[] { divTrue, divFalse };\n        }\n\n        try {\n            IntegerProperty prop = (IntegerProperty) object.safeget(name);\n            Integer ivalue = (prop == null) ? null : (Integer) prop.getValue();\n            if (ivalue != null) {\n                int value = ivalue.intValue();\n                if (value == 1)\n                    radioTrue.setChecked(true);\n                else if (value == 0)\n                    radioFalse.setChecked(true);\n            } else {\n                int value = getDefaultValue();\n                if (value == 1)\n                    radioTrue.setChecked(true);\n                else if (value == 0)\n                    radioFalse.setChecked(true);\n                else if (value == -1)\n                    radioNone.setChecked(true);\n            }\n        } catch (Exception e) {\n            // This should not happen\n            e.printStackTrace();\n        }\n\n        for (int i = 0; i < inputs.length; i++) {\n            buffer.append(inputs[i].toString());\n        }\n    }","commit_id":"3f32994e50f9f559cd5f67438cd8061f6324adae","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Override\n    protected RoleInfo prepareConstraintInfo(String pathInContext, Request request) {\n        final Switchboard sb = Switchboard.getSwitchboard();\n        final boolean adminAccountForLocalhost = sb.getConfigBool(\"adminAccountForLocalhost\", false);\n        final String adminAccountBase64MD5 = sb.getConfig(YaCyLegacyCredential.ADMIN_ACCOUNT_B64MD5, \"\");\n\n        String refererHost;\n        try {\n            refererHost = new MultiProtocolURL(request.getHeader(\"Referer\")).getHost();\n        } catch (MalformedURLException e) {\n            refererHost = null;\n        }\n        final boolean accessFromLocalhost = Domains.isLocalhost(request.getRemoteHost()) && (refererHost == null || refererHost.length() == 0 || Domains.isLocalhost(refererHost));\n        final boolean grantedForLocalhost = adminAccountForLocalhost && accessFromLocalhost;\n        final boolean protectedPage = pathInContext.indexOf(\"_p.\") > 0;\n        final boolean accountEmpty = adminAccountBase64MD5.length() == 0;\n        final boolean yacyBot = request.getHeader(\"User-Agent\").startsWith(\"yacybot\");\n\n        RoleInfo roleinfo = new RoleInfo();\n        if (protectedPage) { // TODO: handle admin authentication & none public site\n            roleinfo.setChecked(((grantedForLocalhost && !accountEmpty) || yacyBot));\n        } else {\n            roleinfo.setChecked(true); \n        }\n        return roleinfo;\n    }","id":50300,"modified_method":"/**\n     * create the constraint for the given path\n     * for urls containing *_p. (like info_p.html) admin access is required,\n     * on localhost = admin setting no constraint is set \n     * @param pathInContext\n     * @param request\n     * @return RoleInfo with \n     *     isChecked=true if any security contraint applies (compare reference implementation org.eclipse.jetty.security.ConstraintSecurityHandler)\n     *     role = \"admin\" for resource name containint _p.\n     */\n    @Override\n    protected RoleInfo prepareConstraintInfo(String pathInContext, Request request) {\n        final Switchboard sb = Switchboard.getSwitchboard();\n        final boolean adminAccountForLocalhost = sb.getConfigBool(\"adminAccountForLocalhost\", false);\n        //final String adminAccountBase64MD5 = sb.getConfig(YaCyLegacyCredential.ADMIN_ACCOUNT_B64MD5, \"\");\n\n        String refererHost;\n        try {\n            refererHost = new MultiProtocolURL(request.getHeader(\"Referer\")).getHost();\n        } catch (MalformedURLException e) {\n            refererHost = null;\n        }        \n        final boolean accessFromLocalhost = Domains.isLocalhost(request.getRemoteHost()) && (refererHost == null || refererHost.length() == 0 || Domains.isLocalhost(refererHost));\n        // ! note : accessFromLocalhost compares localhost ip pattern ( ! currently also any intranet host is a local host)\n        final boolean grantedForLocalhost = adminAccountForLocalhost && accessFromLocalhost;\n        final boolean protectedPage = pathInContext.indexOf(\"_p.\") > 0;\n        //final boolean accountEmpty = adminAccountBase64MD5.length() == 0;\n        //final boolean yacyBot = request.getHeader(\"User-Agent\").startsWith(\"yacybot\");\n     \n        if (protectedPage) { // TODO: none public site\n            if (!grantedForLocalhost) {\n                RoleInfo roleinfo = new RoleInfo();\n                roleinfo.setChecked(true); // RoleInfo.setChecked() : in Jetty this means - marked to have any security constraint\n                roleinfo.addRole(\"admin\"); //YaCyLoginService assigns \"admin\" role to admin user\n                return roleinfo;\n            } // can omit else, as if grantedForLocalhost==true no constraint applies\n              // TODO: is this correct or adminAccountBase64MD5 not empty check neccessary ?\n        }\n        return null;\n    }","commit_id":"172aefaeeb40b3ac540703b4b9511919b8c873c7","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"@Override\n    protected boolean checkWebResourcePermissions(String pathInContext, Request request,\n            Response response, Object constraintInfo, UserIdentity userIdentity) throws IOException {\n        // deny and request for authentication, if necessary\n        boolean auth = ((RoleInfo) constraintInfo).isChecked();\n        return auth || request.isUserInRole(\"admin\");\n    }","id":50301,"modified_method":"@Override\n    protected boolean checkWebResourcePermissions(String pathInContext, Request request,\n            Response response, Object constraintInfo, UserIdentity userIdentity) throws IOException {\n        // deny and request for authentication, if necessary\n        // - identical with ConstraintSecurityHandler.checkWebResourcePermissions implementation of Jetty source distribution    \n        if (constraintInfo == null) {\n            return true;\n        }\n        RoleInfo roleInfo = (RoleInfo) constraintInfo;\n\n        if (!roleInfo.isChecked()) {\n            return true;\n        }\n\n        if (roleInfo.isAnyRole() && request.getAuthType() != null) {\n            return true;\n        }\n\n        for (String role : roleInfo.getRoles()) {\n            if (userIdentity.isUserInRole(role, null)) {\n                return true;\n            }\n        }\n        return false;\n    }","commit_id":"172aefaeeb40b3ac540703b4b9511919b8c873c7","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"@Override\n    protected boolean isAuthMandatory(Request base_request, Response base_response, Object constraintInfo) {\n        return false;\n    }","id":50302,"modified_method":"@Override\n    protected boolean isAuthMandatory(Request baseRequest, Response base_response, Object constraintInfo) {\n        // identical with ConstraintSecurityHandler.isAuthMandatory implementation of Jetty source distribution\n        return constraintInfo != null && ((RoleInfo) constraintInfo).isChecked();\n    }","commit_id":"172aefaeeb40b3ac540703b4b9511919b8c873c7","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"@Override\n    protected boolean checkUserDataPermissions(String pathInContext, Request request,\n            Response response, RoleInfo constraintInfo) throws IOException {\n        // check the SecurityHandler code, denying here does not provide authentication\n        return constraintInfo.isChecked();\n    }","id":50303,"modified_method":"@Override\n    protected boolean checkUserDataPermissions(String pathInContext, Request request, Response response, RoleInfo roleInfo) throws IOException   \n     // check the SecurityHandler code, denying here does not provide authentication\n     // - identical with ConstraintSecurityHandler.checkUserDataPermissions implementation of Jetty source distribution\n    {\n        if (roleInfo == null) {\n            return true;\n        }\n\n        if (roleInfo.isForbidden()) {\n            return false;\n        }\n\n        UserDataConstraint dataConstraint = roleInfo.getUserDataConstraint();\n        if (dataConstraint == null || dataConstraint == UserDataConstraint.None) {\n            return true;\n        }\n\n        HttpConfiguration httpConfig = HttpChannel.getCurrentHttpChannel().getHttpConfiguration();\n\n        if (dataConstraint == UserDataConstraint.Confidential || dataConstraint == UserDataConstraint.Integral) {\n            if (request.isSecure()) {\n                return true;\n            }\n\n            if (httpConfig.getSecurePort() > 0) {\n                String scheme = httpConfig.getSecureScheme();\n                int port = httpConfig.getSecurePort();\n                String url = (\"https\".equalsIgnoreCase(scheme) && port == 443)\n                        ? \"https://\" + request.getServerName() + request.getRequestURI()\n                        : scheme + \"://\" + request.getServerName() + \":\" + port + request.getRequestURI();\n                if (request.getQueryString() != null) {\n                    url += \"?\" + request.getQueryString();\n                }\n                response.setContentLength(0);\n                response.sendRedirect(url);\n            } else {\n                response.sendError(HttpStatus.FORBIDDEN_403, \"!Secure\");\n            }\n\n            request.setHandled(true);\n            return false;\n        } else {\n            throw new IllegalArgumentException(\"Invalid dataConstraint value: \" + dataConstraint);\n        }\n    }","commit_id":"172aefaeeb40b3ac540703b4b9511919b8c873c7","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"/** Make sure only one of them is checked. */\n\tprivate void fixSiblings(boolean checked, boolean byclient) {\n\t\tfinal Radiogroup group = getRadiogroup();\n\t\tif (group != null) {\n\t\t\tif (checked) {\n\t\t\t\tfinal Radio sib = group.getSelectedItem();\n\t\t\t\tif (sib != null && sib != this) {\n\t\t\t\t\tif (byclient)\n\t\t\t\t\t\t((ExtraCtrl)sib.getExtraCtrl()).setCheckedByClient(false);\n\t\t\t\t\telse\n\t\t\t\t\t\tsib.setChecked(false); //and fixSelectedIndex\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tgroup.fixSelectedIndex();\n\t\t}\n\t}","id":50304,"modified_method":"/** Make sure only one of them is checked. */\n\tprivate void fixSiblings(boolean checked, boolean byclient) {\n\t\tfinal Radiogroup group = getRadiogroup();\n\t\tif (group != null) {\n\t\t\tif (checked) {\n\t\t\t\tfinal Radio sib = group.getSelectedItem();\n\t\t\t\tif (sib != null && sib != this) {\n\t\t\t\t\tif (byclient) {\n\t\t\t\t\t\tsib._checked = false;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsib.setChecked(false); //and fixSelectedIndex\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tgroup.fixSelectedIndex();\n\t\t}\n\t}","commit_id":"246bb1ea7b8f4487d9a7e98ae57871bda0566d5e","url":"https://github.com/zkoss/zk"},{"original_method":"public static Object convertStringToPrimitive(String value, Class<?> cls, Annotation[] anns) {\n        Message m = JAXRSUtils.getCurrentMessage();\n        Object obj = createFromParameterHandler(value, cls, cls, anns, m);\n        if (obj != null) {\n            return obj;\n        }\n        if (String.class == cls) {\n            return value;\n        } else if (cls.isPrimitive()) {\n            return PrimitiveUtils.read(value, cls);\n        } else if (cls.isEnum()) {\n            if (m != null && !MessageUtils.getContextualBoolean(m, ENUM_CONVERSION_CASE_SENSITIVE, false)) {\n                obj = invokeValueOf(value.toUpperCase(), cls);\n            }\n            if (obj == null) {\n                try {\n                    obj = invokeValueOf(value, cls);\n                } catch (RuntimeException ex) {\n                    if (m == null) {\n                        obj = invokeValueOf(value.toUpperCase(), cls);\n                    } else {\n                        throw ex;\n                    }\n                }\n            }\n            return obj;\n        } else {\n            try {\n                Constructor<?> c = cls.getConstructor(new Class<?>[]{String.class});\n                return c.newInstance(new Object[]{value});\n            } catch (Throwable ex) {\n                // try valueOf\n            }\n            return invokeValueOf(value, cls);\n        }\n    }","id":50305,"modified_method":"public static Object convertStringToPrimitive(String value, Class<?> cls, Annotation[] anns) {\n        Message m = JAXRSUtils.getCurrentMessage();\n        Object obj = createFromParameterHandler(value, cls, cls, anns, m);\n        if (obj != null) {\n            return obj;\n        }\n        if (String.class == cls) {\n            return value;\n        } else if (cls.isPrimitive()) {\n            return PrimitiveUtils.read(value, cls);\n        } else if (cls.isEnum()) {\n            if (m != null && MessageUtils.getContextualBoolean(m, ENUM_CONVERSION_CASE_SENSITIVE, true)) {\n                obj = invokeValueOf(value.toUpperCase(), cls);\n            }\n            if (obj == null) {\n                try {\n                    obj = invokeValueOf(value, cls);\n                } catch (RuntimeException ex) {\n                    if (m == null) {\n                        obj = invokeValueOf(value.toUpperCase(), cls);\n                    } else {\n                        throw ex;\n                    }\n                }\n            }\n            return obj;\n        } else {\n            try {\n                Constructor<?> c = cls.getConstructor(new Class<?>[]{String.class});\n                return c.newInstance(new Object[]{value});\n            } catch (Throwable ex) {\n                // try valueOf\n            }\n            return invokeValueOf(value, cls);\n        }\n    }","commit_id":"04f0ef2e32f55d51f14cfc6d7a14616b62a6cce5","url":"https://github.com/apache/cxf"},{"original_method":"public void handleMessage(SoapMessage message) throws Fault {\n        message.put(SecurityConstants.USERNAME_TOKEN_NO_CALLBACKS, Boolean.TRUE);\n        super.handleMessage(message);\n    }","id":50306,"modified_method":"public void handleMessage(SoapMessage message) throws Fault {\n        message.put(SecurityConstants.VALIDATE_TOKEN, Boolean.FALSE);\n        super.handleMessage(message);\n    }","commit_id":"34ae9441d137520cf779f79ad5a674b13777f6f0","url":"https://github.com/apache/cxf"},{"original_method":"protected WSUsernameTokenPrincipal getPrincipal(Element tokenElement, SoapMessage message)\n        throws WSSecurityException {\n        \n        boolean utWithCallbacks = \n            !MessageUtils.getContextualBoolean(message, SecurityConstants.USERNAME_TOKEN_NO_CALLBACKS, false);\n        if (utWithCallbacks) {\n            UsernameTokenProcessor p = new UsernameTokenProcessor();\n            return p.handleUsernameToken(tokenElement, getCallback(message));\n        } else {\n            WSUsernameTokenPrincipal principal = parseTokenAndCreatePrincipal(tokenElement);\n            WSS4JTokenConverter.convertToken(message, principal);\n            return principal;\n        }\n    }","id":50307,"modified_method":"protected WSUsernameTokenPrincipal getPrincipal(Element tokenElement, SoapMessage message)\n        throws WSSecurityException {\n        \n        boolean utWithCallbacks = \n            MessageUtils.getContextualBoolean(message, SecurityConstants.VALIDATE_TOKEN, true);\n        if (utWithCallbacks) {\n            UsernameTokenProcessor p = new UsernameTokenProcessor();\n            return p.handleUsernameToken(tokenElement, getCallback(message));\n        } else {\n            WSUsernameTokenPrincipal principal = parseTokenAndCreatePrincipal(tokenElement);\n            WSS4JTokenConverter.convertToken(message, principal);\n            return principal;\n        }\n    }","commit_id":"34ae9441d137520cf779f79ad5a674b13777f6f0","url":"https://github.com/apache/cxf"},{"original_method":"public void handleMessage(SoapMessage msg) throws Fault {\n        if (msg.containsKey(SECURITY_PROCESSED) || isGET(msg)) {\n            return;\n        }\n        msg.put(SECURITY_PROCESSED, Boolean.TRUE);\n        \n        boolean utWithCallbacks = \n            !MessageUtils.getContextualBoolean(msg, SecurityConstants.USERNAME_TOKEN_NO_CALLBACKS, false);\n        \n        WSSConfig config = (WSSConfig)msg.getContextualProperty(WSSConfig.class.getName()); \n        WSSecurityEngine engine;\n        if (config != null) {\n            engine = new WSSecurityEngine();\n            engine.setWssConfig(config);\n        } else {\n            engine = getSecurityEngine(utWithCallbacks);\n        }\n        \n        SOAPMessage doc = getSOAPMessage(msg);\n        \n        boolean doDebug = LOG.isLoggable(Level.FINE);\n        boolean doTimeLog = TIME_LOG.isLoggable(Level.FINE);\n\n        SoapVersion version = msg.getVersion();\n        if (doDebug) {\n            LOG.fine(\"WSS4JInInterceptor: enter handleMessage()\");\n        }\n\n        long t0 = 0;\n        long t1 = 0;\n        long t2 = 0;\n        long t3 = 0;\n\n        if (doTimeLog) {\n            t0 = System.currentTimeMillis();\n        }\n\n        RequestData reqData = new RequestData();\n        /*\n         * The overall try, just to have a finally at the end to perform some\n         * housekeeping.\n         */\n        try {\n            reqData.setMsgContext(msg);\n            computeAction(msg, reqData);\n            Vector actions = new Vector();\n            String action = getAction(msg, version);\n\n            int doAction = WSSecurityUtil.decodeAction(action, actions);\n\n            String actor = (String)getOption(WSHandlerConstants.ACTOR);\n\n            CallbackHandler cbHandler = getCallback(reqData, doAction, utWithCallbacks);\n\n            /*\n             * Get and check the Signature specific parameters first because\n             * they may be used for encryption too.\n             */\n            doReceiverAction(doAction, reqData);\n            \n            Vector wsResult = null;\n            if (doTimeLog) {\n                t1 = System.currentTimeMillis();\n            }\n\n            wsResult = engine.processSecurityHeader(\n                doc.getSOAPPart(), \n                actor, \n                cbHandler, \n                reqData.getSigCrypto(), \n                reqData.getDecCrypto()\n            );\n\n            if (doTimeLog) {\n                t2 = System.currentTimeMillis();\n            }\n\n            if (wsResult != null) { // security header found\n                if (reqData.getWssConfig().isEnableSignatureConfirmation()) {\n                    checkSignatureConfirmation(reqData, wsResult);\n                }\n\n                checkSignatures(msg, reqData, wsResult);\n                checkTimestamps(msg, reqData, wsResult);\n                checkActions(msg, reqData, wsResult, actions);\n                doResults(msg, actor, doc, wsResult, utWithCallbacks);\n            } else { // no security header found\n                // Create an empty result vector to pass into the required validation\n                // methods.\n                wsResult = new Vector<Object>();\n                \n                if (doc.getSOAPPart().getEnvelope().getBody().hasFault()) {\n                    LOG.warning(\"Request does not contain Security header, \" \n                                + \"but it's a fault.\");\n                    // We allow lax action matching here for backwards compatibility\n                    // with manually configured WSS4JInInterceptors that previously\n                    // allowed faults to pass through even if their actions aren't\n                    // a strict match against those configured.  In the WS-SP case,\n                    // we will want to still call doResults as it handles asserting\n                    // certain assertions that do not require a WS-S header such as\n                    // a sp:TransportBinding assertion.  In the case of WS-SP,\n                    // the unasserted assertions will provide confirmation that\n                    // security was not sufficient.\n                    // checkActions(msg, reqData, wsResult, actions);\n                    doResults(msg, actor, doc, wsResult);\n                } else {\n                    checkActions(msg, reqData, wsResult, actions);\n                    doResults(msg, actor, doc, wsResult);\n                }\n            }\n\n            if (doTimeLog) {\n                t3 = System.currentTimeMillis();\n                TIME_LOG.fine(\"Receive request: total= \" + (t3 - t0) \n                        + \" request preparation= \" + (t1 - t0)\n                        + \" request processing= \" + (t2 - t1) \n                        + \" header, cert verify, timestamp= \" + (t3 - t2) + \"\\n\");\n            }\n\n            if (doDebug) {\n                LOG.fine(\"WSS4JInInterceptor: exit handleMessage()\");\n            }\n\n        } catch (WSSecurityException e) {\n            LOG.log(Level.WARNING, \"\", e);\n            SoapFault fault = createSoapFault(version, e);\n            throw fault;\n        } catch (XMLStreamException e) {\n            throw new SoapFault(new Message(\"STAX_EX\", LOG), e, version.getSender());\n        } catch (SOAPException e) {\n            throw new SoapFault(new Message(\"SAAJ_EX\", LOG), e, version.getSender());\n        } finally {\n            reqData.clear();\n            reqData = null;\n        }\n    }","id":50308,"modified_method":"public void handleMessage(SoapMessage msg) throws Fault {\n        if (msg.containsKey(SECURITY_PROCESSED) || isGET(msg)) {\n            return;\n        }\n        msg.put(SECURITY_PROCESSED, Boolean.TRUE);\n        \n        boolean utWithCallbacks = \n            MessageUtils.getContextualBoolean(msg, SecurityConstants.VALIDATE_TOKEN, true);\n        \n        WSSConfig config = (WSSConfig)msg.getContextualProperty(WSSConfig.class.getName()); \n        WSSecurityEngine engine;\n        if (config != null) {\n            engine = new WSSecurityEngine();\n            engine.setWssConfig(config);\n        } else {\n            engine = getSecurityEngine(utWithCallbacks);\n        }\n        \n        SOAPMessage doc = getSOAPMessage(msg);\n        \n        boolean doDebug = LOG.isLoggable(Level.FINE);\n        boolean doTimeLog = TIME_LOG.isLoggable(Level.FINE);\n\n        SoapVersion version = msg.getVersion();\n        if (doDebug) {\n            LOG.fine(\"WSS4JInInterceptor: enter handleMessage()\");\n        }\n\n        long t0 = 0;\n        long t1 = 0;\n        long t2 = 0;\n        long t3 = 0;\n\n        if (doTimeLog) {\n            t0 = System.currentTimeMillis();\n        }\n\n        RequestData reqData = new RequestData();\n        /*\n         * The overall try, just to have a finally at the end to perform some\n         * housekeeping.\n         */\n        try {\n            reqData.setMsgContext(msg);\n            computeAction(msg, reqData);\n            Vector actions = new Vector();\n            String action = getAction(msg, version);\n\n            int doAction = WSSecurityUtil.decodeAction(action, actions);\n\n            String actor = (String)getOption(WSHandlerConstants.ACTOR);\n\n            CallbackHandler cbHandler = getCallback(reqData, doAction, utWithCallbacks);\n\n            /*\n             * Get and check the Signature specific parameters first because\n             * they may be used for encryption too.\n             */\n            doReceiverAction(doAction, reqData);\n            \n            Vector wsResult = null;\n            if (doTimeLog) {\n                t1 = System.currentTimeMillis();\n            }\n\n            wsResult = engine.processSecurityHeader(\n                doc.getSOAPPart(), \n                actor, \n                cbHandler, \n                reqData.getSigCrypto(), \n                reqData.getDecCrypto()\n            );\n\n            if (doTimeLog) {\n                t2 = System.currentTimeMillis();\n            }\n\n            if (wsResult != null) { // security header found\n                if (reqData.getWssConfig().isEnableSignatureConfirmation()) {\n                    checkSignatureConfirmation(reqData, wsResult);\n                }\n\n                checkSignatures(msg, reqData, wsResult);\n                checkTimestamps(msg, reqData, wsResult);\n                checkActions(msg, reqData, wsResult, actions);\n                doResults(msg, actor, doc, wsResult, utWithCallbacks);\n            } else { // no security header found\n                // Create an empty result vector to pass into the required validation\n                // methods.\n                wsResult = new Vector<Object>();\n                \n                if (doc.getSOAPPart().getEnvelope().getBody().hasFault()) {\n                    LOG.warning(\"Request does not contain Security header, \" \n                                + \"but it's a fault.\");\n                    // We allow lax action matching here for backwards compatibility\n                    // with manually configured WSS4JInInterceptors that previously\n                    // allowed faults to pass through even if their actions aren't\n                    // a strict match against those configured.  In the WS-SP case,\n                    // we will want to still call doResults as it handles asserting\n                    // certain assertions that do not require a WS-S header such as\n                    // a sp:TransportBinding assertion.  In the case of WS-SP,\n                    // the unasserted assertions will provide confirmation that\n                    // security was not sufficient.\n                    // checkActions(msg, reqData, wsResult, actions);\n                    doResults(msg, actor, doc, wsResult);\n                } else {\n                    checkActions(msg, reqData, wsResult, actions);\n                    doResults(msg, actor, doc, wsResult);\n                }\n            }\n\n            if (doTimeLog) {\n                t3 = System.currentTimeMillis();\n                TIME_LOG.fine(\"Receive request: total= \" + (t3 - t0) \n                        + \" request preparation= \" + (t1 - t0)\n                        + \" request processing= \" + (t2 - t1) \n                        + \" header, cert verify, timestamp= \" + (t3 - t2) + \"\\n\");\n            }\n\n            if (doDebug) {\n                LOG.fine(\"WSS4JInInterceptor: exit handleMessage()\");\n            }\n\n        } catch (WSSecurityException e) {\n            LOG.log(Level.WARNING, \"\", e);\n            SoapFault fault = createSoapFault(version, e);\n            throw fault;\n        } catch (XMLStreamException e) {\n            throw new SoapFault(new Message(\"STAX_EX\", LOG), e, version.getSender());\n        } catch (SOAPException e) {\n            throw new SoapFault(new Message(\"SAAJ_EX\", LOG), e, version.getSender());\n        } finally {\n            reqData.clear();\n            reqData = null;\n        }\n    }","commit_id":"34ae9441d137520cf779f79ad5a674b13777f6f0","url":"https://github.com/apache/cxf"},{"original_method":"public static Object convertStringToPrimitive(String value, Class<?> cls, Annotation[] anns) {\n        Message m = JAXRSUtils.getCurrentMessage();\n        Object obj = createFromParameterHandler(value, cls, cls, anns, m);\n        if (obj != null) {\n            return obj;\n        }\n        if (String.class == cls) {\n            return value;\n        } else if (cls.isPrimitive()) {\n            return PrimitiveUtils.read(value, cls);\n        } else if (cls.isEnum()) {\n            if (m != null && MessageUtils.getContextualBoolean(m, ENUM_CONVERSION_CASE_SENSITIVE, true)) {\n                obj = invokeValueOf(value.toUpperCase(), cls);\n            }\n            if (obj == null) {\n                try {\n                    obj = invokeValueOf(value, cls);\n                } catch (RuntimeException ex) {\n                    if (m == null) {\n                        obj = invokeValueOf(value.toUpperCase(), cls);\n                    } else {\n                        throw ex;\n                    }\n                }\n            }\n            return obj;\n        } else {\n            try {\n                Constructor<?> c = cls.getConstructor(new Class<?>[]{String.class});\n                return c.newInstance(new Object[]{value});\n            } catch (Throwable ex) {\n                // try valueOf\n            }\n            return invokeValueOf(value, cls);\n        }\n    }","id":50309,"modified_method":"public static Object convertStringToPrimitive(String value, Class<?> cls, Annotation[] anns) {\n        Message m = JAXRSUtils.getCurrentMessage();\n        Object obj = createFromParameterHandler(value, cls, cls, anns, m);\n        if (obj != null) {\n            return obj;\n        }\n        if (String.class == cls) {\n            return value;\n        } else if (cls.isPrimitive()) {\n            return PrimitiveUtils.read(value, cls);\n        } else if (cls.isEnum()) {\n            if (m != null && !MessageUtils.getContextualBoolean(m, ENUM_CONVERSION_CASE_SENSITIVE, false)) {\n                obj = invokeValueOf(value.toUpperCase(), cls);\n            }\n            if (obj == null) {\n                try {\n                    obj = invokeValueOf(value, cls);\n                } catch (RuntimeException ex) {\n                    if (m == null) {\n                        obj = invokeValueOf(value.toUpperCase(), cls);\n                    } else {\n                        throw ex;\n                    }\n                }\n            }\n            return obj;\n        } else {\n            try {\n                Constructor<?> c = cls.getConstructor(new Class<?>[]{String.class});\n                return c.newInstance(new Object[]{value});\n            } catch (Throwable ex) {\n                // try valueOf\n            }\n            return invokeValueOf(value, cls);\n        }\n    }","commit_id":"a5aff3e7a43274b3d47cda706aaf8108bd7a9b07","url":"https://github.com/apache/cxf"},{"original_method":"public List<ReleaseId> getJarDependencies() {\n        if( pomModel == null ) {\n            getPomModel();\n        }\n        List<ReleaseId> deps = null;\n        if( pomModel != null ) {\n            deps = pomModel.getDependencies();\n        }\n        return deps == null ? Collections.<ReleaseId> emptyList() : deps;\n    }","id":50310,"modified_method":"public Collection<ReleaseId> getJarDependencies() {\n        if( pomModel == null ) {\n            getPomModel();\n        }\n        Collection<ReleaseId> deps = null;\n        if( pomModel != null ) {\n            deps = pomModel.getDependencies();\n        }\n        return deps == null ? Collections.<ReleaseId> emptyList() : deps;\n    }","commit_id":"12724f6c5852e474f5d5329e07b4268410d643b6","url":"https://github.com/droolsjbpm/drools"},{"original_method":"private static void addFiles(Map<String, InternalKieModule> assets,\n            KieBaseModel kieBaseModel,\n            InternalKieModule kieModule) {\n        int fileCount = 0;\n        for (String fileName : kieModule.getFileNames()) {\n            if (filterFileInKBase(kieBaseModel, fileName) && !fileName.endsWith(\".properties\")) {\n                assets.put(fileName, kieModule);\n            }\n        }\n    }","id":50311,"modified_method":"private static void addFiles(Map<String, InternalKieModule> assets,\n            KieBaseModel kieBaseModel,\n            InternalKieModule kieModule) {\n        for (String fileName : kieModule.getFileNames()) {\n            if (filterFileInKBase(kieBaseModel, fileName) && !fileName.endsWith(\".properties\")) {\n                assets.put(fileName, kieModule);\n            }\n        }\n    }","commit_id":"12724f6c5852e474f5d5329e07b4268410d643b6","url":"https://github.com/droolsjbpm/drools"},{"original_method":"public static boolean buildKieModule(InternalKieModule kModule,\n                                         ResultsImpl messages ) {\n        KieModuleKieProject kProject = new KieModuleKieProject( kModule );\n        kProject.init();\n        kProject.verify( messages );\n\n        if ( messages.filterMessages( Level.ERROR ).isEmpty() ) {\n            KieServices.Factory.get().getRepository().addKieModule( kModule );\n            return true;\n        }\n        return false;\n    }","id":50312,"modified_method":"public static boolean buildKieModule(InternalKieModule kModule,\n                                         ResultsImpl messages ) {\n        return buildKieProject(kModule, messages, new KieModuleKieProject( kModule ));\n    }","commit_id":"12724f6c5852e474f5d5329e07b4268410d643b6","url":"https://github.com/droolsjbpm/drools"},{"original_method":"public KieBuilder buildAll() {\n        // kModuleModel will be null if a provided pom.xml or kmodule.xml is invalid\n        if ( !isBuilt() && kModuleModel != null ) {\n            trgMfs = new MemoryFileSystem();\n            writePomAndKModule();\n\n            compileJavaClasses();\n            addKBasesFilesToTrg();\n\n            kModule = new MemoryKieModule( releaseId,\n                                           kModuleModel,\n                                           trgMfs );\n\n            if ( kieDependencies != null && !kieDependencies.isEmpty() ) {\n                for ( KieModule kieModule : kieDependencies ) {\n                    kModule.addKieDependency( (InternalKieModule) kieModule );\n                }\n            }\n\n            if ( buildKieModule( kModule, results ) ) {\n                writeKieModuleMetaInfo( generateKieModuleMetaInfo() );\n            }\n        }\n        return this;\n    }","id":50313,"modified_method":"public KieBuilder buildAll() {\n        // kModuleModel will be null if a provided pom.xml or kmodule.xml is invalid\n        if ( !isBuilt() && kModuleModel != null ) {\n            trgMfs = new MemoryFileSystem();\n            writePomAndKModule();\n            addKBasesFilesToTrg();\n\n            kModule = new MemoryKieModule( releaseId,\n                                           kModuleModel,\n                                           trgMfs );\n\n            if ( kieDependencies != null && !kieDependencies.isEmpty() ) {\n                for ( KieModule kieModule : kieDependencies ) {\n                    kModule.addKieDependency( (InternalKieModule) kieModule );\n                }\n            }\n            if (pomModel != null) {\n                kModule.setPomModel(pomModel);\n            }\n\n            KieModuleKieProject kProject = new KieModuleKieProject( kModule );\n            compileJavaClasses(kProject.getClassLoader());\n\n            if ( buildKieProject( kModule, results, kProject ) ) {\n                writeKieModuleMetaInfo( generateKieModuleMetaInfo() );\n            }\n        }\n        return this;\n    }","commit_id":"12724f6c5852e474f5d5329e07b4268410d643b6","url":"https://github.com/droolsjbpm/drools"},{"original_method":"private void compileJavaClasses() {\n        List<String> classFiles = new ArrayList<String>();\n        for ( String fileName : srcMfs.getFileNames() ) {\n            if ( fileName.endsWith( \".class\" ) ) {\n                trgMfs.write( fileName,\n                              srcMfs.getBytes( fileName ),\n                              true );\n                classFiles.add( fileName.substring( 0,\n                                                    fileName.length() - \".class\".length() ) );\n            }\n        }\n\n        List<String> javaFiles = new ArrayList<String>();\n        for ( String fileName : srcMfs.getFileNames() ) {\n            if ( fileName.endsWith( \".java\" ) && !classFiles.contains( fileName.substring( 0,\n                                                                                           fileName.length() - \".java\".length() ) ) ) {\n                javaFiles.add( fileName.replace(File.separatorChar, '/') );\n            }\n        }\n        if ( javaFiles.isEmpty() ) {\n            return;\n        }\n\n        String[] sourceFiles = javaFiles.toArray( new String[javaFiles.size()] );\n\n        EclipseJavaCompiler compiler = createCompiler( \"src/main/java/\" );\n        CompilationResult res = compiler.compile( sourceFiles,\n                                                  srcMfs,\n                                                  trgMfs );\n\n        for ( CompilationProblem problem : res.getErrors() ) {\n            results.addMessage( problem );\n        }\n        for ( CompilationProblem problem : res.getWarnings() ) {\n            results.addMessage( problem );\n        }\n    }","id":50314,"modified_method":"private void compileJavaClasses(ClassLoader classLoader) {\n        List<String> classFiles = new ArrayList<String>();\n        for ( String fileName : srcMfs.getFileNames() ) {\n            if ( fileName.endsWith( \".class\" ) ) {\n                trgMfs.write( fileName,\n                              srcMfs.getBytes( fileName ),\n                              true );\n                classFiles.add( fileName.substring( 0,\n                                                    fileName.length() - \".class\".length() ) );\n            }\n        }\n\n        List<String> javaFiles = new ArrayList<String>();\n        for ( String fileName : srcMfs.getFileNames() ) {\n            if ( fileName.endsWith( \".java\" ) && !classFiles.contains( fileName.substring( 0,\n                                                                                           fileName.length() - \".java\".length() ) ) ) {\n                javaFiles.add( fileName.replace(File.separatorChar, '/') );\n            }\n        }\n        if ( javaFiles.isEmpty() ) {\n            return;\n        }\n\n        String[] sourceFiles = javaFiles.toArray( new String[javaFiles.size()] );\n\n        EclipseJavaCompiler compiler = createCompiler( \"src/main/java/\" );\n        CompilationResult res = compiler.compile( sourceFiles,\n                                                  srcMfs,\n                                                  trgMfs,\n                                                  classLoader );\n\n        for ( CompilationProblem problem : res.getErrors() ) {\n            results.addMessage( problem );\n        }\n        for ( CompilationProblem problem : res.getWarnings() ) {\n            results.addMessage( problem );\n        }\n    }","commit_id":"12724f6c5852e474f5d5329e07b4268410d643b6","url":"https://github.com/droolsjbpm/drools"},{"original_method":"@Override\n    public ClassLoader getClassLoader(KieModule kmodule) {\n        ClassLoader parent = Thread.currentThread().getContextClassLoader();\n        if (parent == null) {\n            parent = ClassLoader.getSystemClassLoader();\n        }\n        if (parent == null) {\n            parent = MavenClassLoaderResolver.class.getClassLoader();\n        }\n        \n        List<ReleaseId> jarDependencies = ((InternalKieModule)kmodule).getJarDependencies();\n        ArtifactResolver resolver = ArtifactResolver.getResolverFor(kmodule.getReleaseId(),true);\n        \n        URL[] urls = new URL[jarDependencies.size()];\n        int i = 0;\n        for (ReleaseId rid : jarDependencies) {\n            try {\n                Artifact artifact = resolver.resolveArtifact(rid.toString());\n                if( artifact != null ) {\n                    File jar = artifact.getFile(); \n                    urls[i++] = jar.toURI().toURL();\n                } else {\n                    logger.warn( \"Dependency artifact not found for: \"+rid );\n                }\n            } catch (MalformedURLException e) {\n                throw new RuntimeException(e);\n            }\n        }\n\n        ClassLoader classLoader = new URLClassLoader(urls, parent);\n\n        return classLoader;\n    }","id":50315,"modified_method":"@Override\n    public ClassLoader getClassLoader(KieModule kmodule) {\n        ClassLoader parent = Thread.currentThread().getContextClassLoader();\n        if (parent == null) {\n            parent = ClassLoader.getSystemClassLoader();\n        }\n        if (parent == null) {\n            parent = MavenClassLoaderResolver.class.getClassLoader();\n        }\n        \n        Collection<ReleaseId> jarDependencies = ((InternalKieModule)kmodule).getJarDependencies();\n        ArtifactResolver resolver = ArtifactResolver.getResolverFor(kmodule.getReleaseId(),true);\n        \n        URL[] urls = new URL[jarDependencies.size()];\n        int i = 0;\n        for (ReleaseId rid : jarDependencies) {\n            try {\n                Artifact artifact = resolver.resolveArtifact(rid.toString());\n                if( artifact != null ) {\n                    File jar = artifact.getFile(); \n                    urls[i++] = jar.toURI().toURL();\n                } else {\n                    logger.warn( \"Dependency artifact not found for: \"+rid );\n                }\n            } catch (MalformedURLException e) {\n                throw new RuntimeException(e);\n            }\n        }\n\n        ClassLoader classLoader = new URLClassLoader(urls, parent);\n\n        return classLoader;\n    }","commit_id":"12724f6c5852e474f5d5329e07b4268410d643b6","url":"https://github.com/droolsjbpm/drools"},{"original_method":"public List<ReleaseId> getDependencies() {\n        return dependencies;\n    }","id":50316,"modified_method":"public Collection<ReleaseId> getDependencies() {\n        return dependencies;\n    }","commit_id":"12724f6c5852e474f5d5329e07b4268410d643b6","url":"https://github.com/droolsjbpm/drools"},{"original_method":"@Test\n    public void parsePom() {\n        InputStream is = PomModelParserTest.class.getResourceAsStream( \"pom.xml\" );\n        assertNotNull( is );\n        \n        PomModel pomModel = MinimalPomParser.parse( PomModelParserTest.class.getName().replace( '.', '/' ) + \".pom.xml\", is );\n        assertEquals( \"groupId\", pomModel.getReleaseId().getGroupId() );\n        assertEquals( \"artifactId\", pomModel.getReleaseId().getArtifactId() );\n        assertEquals( \"version\", pomModel.getReleaseId().getVersion() );\n        \n        assertEquals( \"parentGroupId\", pomModel.getParentReleaseId().getGroupId() );\n        assertEquals( \"parentArtifactId\", pomModel.getParentReleaseId().getArtifactId() );\n        assertEquals( \"parentVersion\", pomModel.getParentReleaseId().getVersion() );\n\n        assertEquals( 1, pomModel.getDependencies().size() );\n        ReleaseId dep = pomModel.getDependencies().get(0);\n        assertEquals( \"dep1GroupId\", dep.getGroupId() );\n        assertEquals( \"dep1ArtifactId\", dep.getArtifactId() );\n        assertEquals( \"dep1Version\", dep.getVersion() );\n    }","id":50317,"modified_method":"@Test\n    public void parsePom() {\n        InputStream is = PomModelParserTest.class.getResourceAsStream( \"pom.xml\" );\n        assertNotNull( is );\n        \n        PomModel pomModel = MinimalPomParser.parse( PomModelParserTest.class.getName().replace( '.', '/' ) + \".pom.xml\", is );\n        assertEquals( \"groupId\", pomModel.getReleaseId().getGroupId() );\n        assertEquals( \"artifactId\", pomModel.getReleaseId().getArtifactId() );\n        assertEquals( \"version\", pomModel.getReleaseId().getVersion() );\n        \n        assertEquals( \"parentGroupId\", pomModel.getParentReleaseId().getGroupId() );\n        assertEquals( \"parentArtifactId\", pomModel.getParentReleaseId().getArtifactId() );\n        assertEquals( \"parentVersion\", pomModel.getParentReleaseId().getVersion() );\n\n        assertEquals( 1, pomModel.getDependencies().size() );\n        ReleaseId dep = pomModel.getDependencies().iterator().next();\n        assertEquals( \"dep1GroupId\", dep.getGroupId() );\n        assertEquals( \"dep1ArtifactId\", dep.getArtifactId() );\n        assertEquals( \"dep1Version\", dep.getVersion() );\n    }","commit_id":"12724f6c5852e474f5d5329e07b4268410d643b6","url":"https://github.com/droolsjbpm/drools"},{"original_method":"public List<PluginClass> getPlugins() {\n    return plugins;\n  }","id":50318,"modified_method":"public Set<PluginClass> getPlugins() {\n    return plugins;\n  }","commit_id":"f5338afed33e163dca077481a293c26d0473e297","url":"https://github.com/caskdata/cdap"},{"original_method":"public ArtifactClasses(List<PluginClass> plugins) {\n    this.plugins = plugins;\n  }","id":50319,"modified_method":"private ArtifactClasses(Set<ApplicationClass> apps, Set<PluginClass> plugins) {\n    this.apps = apps;\n    this.plugins = plugins;\n  }","commit_id":"f5338afed33e163dca077481a293c26d0473e297","url":"https://github.com/caskdata/cdap"},{"original_method":"/**\n   * Inspect the given artifact to determine the classes contained in the artifact.\n   * TODO: remove once PluginRepository is gone\n   *\n   * @param artifactId the id of the artifact to inspect\n   * @param artifactFile the artifact file\n   * @param template the template this plugin artifact extends\n   * @param parentClassLoader the parent classloader to use when inspecting plugins contained in the artifact.\n   *                          For example, a ProgramClassLoader created from the artifact the input artifact extends\n   * @return metadata about the classes contained in the artifact\n   * @throws IOException if there was an exception opening the jar file\n   */\n  public ArtifactClasses inspectArtifact(Id.Artifact artifactId, File artifactFile, String template,\n                                         ClassLoader parentClassLoader) throws IOException {\n\n    try (PluginInstantiator pluginInstantiator =\n          new PluginInstantiator(cConf, template, parentClassLoader)) {\n      List<PluginClass> plugins = inspectPlugins(artifactId, artifactFile, pluginInstantiator);\n      return new ArtifactClasses(plugins);\n    }\n  }","id":50320,"modified_method":"/**\n   * Inspect the given artifact to determine the classes contained in the artifact.\n   * TODO: remove once PluginRepository is gone\n   *\n   * @param artifactId the id of the artifact to inspect\n   * @param artifactFile the artifact file\n   * @param template the template this plugin artifact extends\n   * @param parentClassLoader the parent classloader to use when inspecting plugins contained in the artifact.\n   *                          For example, a ProgramClassLoader created from the artifact the input artifact extends\n   * @return metadata about the classes contained in the artifact\n   * @throws IOException if there was an exception opening the jar file\n   */\n  public ArtifactClasses inspectArtifact(Id.Artifact artifactId, File artifactFile, String template,\n                                         ClassLoader parentClassLoader) throws IOException {\n\n    try (PluginInstantiator pluginInstantiator =\n          new PluginInstantiator(cConf, template, parentClassLoader)) {\n      List<PluginClass> plugins = inspectPlugins(artifactId, artifactFile, pluginInstantiator);\n      return ArtifactClasses.builder().addPlugins(plugins).build();\n    }\n  }","commit_id":"f5338afed33e163dca077481a293c26d0473e297","url":"https://github.com/caskdata/cdap"},{"original_method":"public ArtifactInspector(CConfiguration cConf) {\n    this.cConf = cConf;\n  }","id":50321,"modified_method":"public ArtifactInspector(CConfiguration cConf) {\n    this(cConf, new ArtifactClassLoaderFactory(new File(cConf.get(Constants.CFG_LOCAL_DATA_DIR),\n      cConf.get(Constants.AppFabric.TEMP_DIR)).getAbsoluteFile()));\n  }","commit_id":"f5338afed33e163dca077481a293c26d0473e297","url":"https://github.com/caskdata/cdap"},{"original_method":"/**\n   * Inspect the given artifact to determine the classes contained in the artifact.\n   *\n   * @param artifactId the id of the artifact to inspect\n   * @param artifactFile the artifact file\n   * @param parentClassLoader the parent classloader to use when inspecting plugins contained in the artifact.\n   *                          For example, a ProgramClassLoader created from the artifact the input artifact extends\n   * @return metadata about the classes contained in the artifact\n   * @throws IOException if there was an exception opening the jar file\n   */\n  public ArtifactClasses inspectArtifact(Id.Artifact artifactId, File artifactFile,\n                                         ClassLoader parentClassLoader) throws IOException {\n\n    try (PluginInstantiator pluginInstantiator = new PluginInstantiator(cConf, parentClassLoader)) {\n      List<PluginClass> plugins = inspectPlugins(artifactId, artifactFile, pluginInstantiator);\n      return new ArtifactClasses(plugins);\n    }\n  }","id":50322,"modified_method":"/**\n   * Inspect the given artifact to determine the classes contained in the artifact.\n   *\n   * @param artifactId the id of the artifact to inspect\n   * @param artifactFile the artifact file\n   * @param parentClassLoader the parent classloader to use when inspecting plugins contained in the artifact.\n   *                          For example, a ProgramClassLoader created from the artifact the input artifact extends\n   * @return metadata about the classes contained in the artifact\n   * @throws IOException if there was an exception opening the jar file\n   * @throws InvalidArtifactException if the artifact is invalid. For example, if the application main class is not\n   *                                  actually an Application.\n   */\n  public ArtifactClasses inspectArtifact(Id.Artifact artifactId, File artifactFile,\n                                         ClassLoader parentClassLoader) throws IOException, InvalidArtifactException {\n\n    List<ApplicationClass> appClasses = inspectApplications(artifactFile);\n\n    try (PluginInstantiator pluginInstantiator = new PluginInstantiator(cConf, parentClassLoader)) {\n      List<PluginClass> plugins = inspectPlugins(artifactId, artifactFile, pluginInstantiator);\n      return ArtifactClasses.builder().addApps(appClasses).addPlugins(plugins).build();\n    }\n  }","commit_id":"f5338afed33e163dca077481a293c26d0473e297","url":"https://github.com/caskdata/cdap"},{"original_method":"public ArtifactMeta(List<PluginClass> plugins) {\n    this(plugins, ImmutableSet.<ArtifactRange>of());\n  }","id":50323,"modified_method":"public ArtifactMeta(ArtifactClasses classes) {\n    this(classes, ImmutableSet.<ArtifactRange>of());\n  }","commit_id":"f5338afed33e163dca077481a293c26d0473e297","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public String toString() {\n    return \"ArtifactMeta{\" +\n      \"plugins=\" + plugins +\n      \", usableBy=\" + usableBy +\n      '}';\n  }","id":50324,"modified_method":"@Override\n  public String toString() {\n    return \"ArtifactMeta{\" +\n      \"classes=\" + classes +\n      \", usableBy=\" + usableBy +\n      '}';\n  }","commit_id":"f5338afed33e163dca077481a293c26d0473e297","url":"https://github.com/caskdata/cdap"},{"original_method":"public ArtifactMeta(List<PluginClass> plugins, Set<ArtifactRange> usableBy) {\n    this.plugins = ImmutableList.copyOf(plugins);\n    this.usableBy = ImmutableSet.copyOf(usableBy);\n  }","id":50325,"modified_method":"public ArtifactMeta(ArtifactClasses classes, Set<ArtifactRange> usableBy) {\n    this.classes = classes;\n    this.usableBy = usableBy;\n  }","commit_id":"f5338afed33e163dca077481a293c26d0473e297","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public boolean equals(Object o) {\n    if (this == o) {\n      return true;\n    }\n    if (o == null || getClass() != o.getClass()) {\n      return false;\n    }\n\n    ArtifactMeta that = (ArtifactMeta) o;\n\n    return Objects.equals(plugins, that.plugins) && Objects.equals(usableBy, that.usableBy);\n  }","id":50326,"modified_method":"@Override\n  public boolean equals(Object o) {\n    if (this == o) {\n      return true;\n    }\n    if (o == null || getClass() != o.getClass()) {\n      return false;\n    }\n\n    ArtifactMeta that = (ArtifactMeta) o;\n\n    return Objects.equals(classes, that.classes) && Objects.equals(usableBy, that.usableBy);\n  }","commit_id":"f5338afed33e163dca077481a293c26d0473e297","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public int hashCode() {\n    return Objects.hash(plugins, usableBy);\n  }","id":50327,"modified_method":"@Override\n  public int hashCode() {\n    return Objects.hash(classes, usableBy);\n  }","commit_id":"f5338afed33e163dca077481a293c26d0473e297","url":"https://github.com/caskdata/cdap"},{"original_method":"/**\n   * Inspects and builds plugin information for the given artifact.\n   *\n   * @param artifactId the id of the artifact to inspect and store\n   * @param artifactFile the artifact to inspect and store\n   * @param parentArtifacts artifacts the given artifact extends.\n   *                        If null, the given artifact does not extend another artifact\n   * @throws IOException if there was an exception reading from the artifact store\n   * @throws ArtifactRangeNotFoundException if none of the parent artifacts could be found\n   */\n  public void addArtifact(Id.Artifact artifactId, File artifactFile, @Nullable Set<ArtifactRange> parentArtifacts)\n    throws IOException, ArtifactRangeNotFoundException, WriteConflictException, ArtifactAlreadyExistsException {\n\n    CloseableClassLoader parentClassLoader;\n    parentArtifacts = parentArtifacts == null ? ImmutableSet.<ArtifactRange>of() : parentArtifacts;\n    if (parentArtifacts.isEmpty()) {\n      // if this artifact doesn't extend another, use itself to create the parent classloader\n      parentClassLoader = createArtifactClassLoader(Locations.toLocation(artifactFile));\n    } else {\n      // otherwise, use any of the parent artifacts to create the parent classloader.\n      Location parentLocation = null;\n      for (ArtifactRange parentRange : parentArtifacts) {\n        List<ArtifactDetail> parents = artifactStore.getArtifacts(parentRange);\n        if (!parents.isEmpty()) {\n          parentLocation = parents.get(0).getDescriptor().getLocation();\n        }\n      }\n      if (parentLocation == null) {\n        throw new ArtifactRangeNotFoundException(parentArtifacts);\n      }\n      parentClassLoader = createArtifactClassLoader(parentLocation);\n    }\n\n    try {\n      ArtifactClasses artifactClasses = artifactInspector.inspectArtifact(artifactId, artifactFile, parentClassLoader);\n      ArtifactMeta meta = new ArtifactMeta(artifactClasses.getPlugins(), parentArtifacts);\n      artifactStore.write(artifactId, meta, new FileInputStream(artifactFile));\n    } finally {\n      parentClassLoader.close();\n    }\n  }","id":50328,"modified_method":"/**\n   * Inspects and builds plugin information for the given artifact.\n   *\n   * @param artifactId the id of the artifact to inspect and store\n   * @param artifactFile the artifact to inspect and store\n   * @param parentArtifacts artifacts the given artifact extends.\n   *                        If null, the given artifact does not extend another artifact\n   * @throws IOException if there was an exception reading from the artifact store\n   * @throws ArtifactRangeNotFoundException if none of the parent artifacts could be found\n   */\n  public void addArtifact(Id.Artifact artifactId, File artifactFile, @Nullable Set<ArtifactRange> parentArtifacts)\n    throws IOException, ArtifactRangeNotFoundException, WriteConflictException,\n    ArtifactAlreadyExistsException, InvalidArtifactException {\n\n    CloseableClassLoader parentClassLoader;\n    parentArtifacts = parentArtifacts == null ? ImmutableSet.<ArtifactRange>of() : parentArtifacts;\n    if (parentArtifacts.isEmpty()) {\n      // if this artifact doesn't extend another, use itself to create the parent classloader\n      parentClassLoader = artifactClassLoaderFactory.createClassLoader(Locations.toLocation(artifactFile));\n    } else {\n      // otherwise, use any of the parent artifacts to create the parent classloader.\n      Location parentLocation = null;\n      for (ArtifactRange parentRange : parentArtifacts) {\n        List<ArtifactDetail> parents = artifactStore.getArtifacts(parentRange);\n        if (!parents.isEmpty()) {\n          parentLocation = parents.get(0).getDescriptor().getLocation();\n        }\n      }\n      if (parentLocation == null) {\n        throw new ArtifactRangeNotFoundException(parentArtifacts);\n      }\n      parentClassLoader = artifactClassLoaderFactory.createClassLoader(parentLocation);\n    }\n\n    try {\n      ArtifactClasses artifactClasses = artifactInspector.inspectArtifact(artifactId, artifactFile, parentClassLoader);\n      ArtifactMeta meta = new ArtifactMeta(artifactClasses, parentArtifacts);\n      artifactStore.write(artifactId, meta, new FileInputStream(artifactFile));\n    } finally {\n      parentClassLoader.close();\n    }\n  }","commit_id":"f5338afed33e163dca077481a293c26d0473e297","url":"https://github.com/caskdata/cdap"},{"original_method":"@Inject\n  ArtifactRepository(CConfiguration cConf, ArtifactStore artifactStore) {\n    this.tmpDir = new File(cConf.get(Constants.CFG_LOCAL_DATA_DIR),\n                           cConf.get(Constants.AppFabric.TEMP_DIR)).getAbsoluteFile();\n    this.artifactStore = artifactStore;\n    this.artifactInspector = new ArtifactInspector(cConf);\n  }","id":50329,"modified_method":"@Inject\n  ArtifactRepository(CConfiguration cConf, ArtifactStore artifactStore) {\n    this.artifactStore = artifactStore;\n    File baseUnpackDir = new File(cConf.get(Constants.CFG_LOCAL_DATA_DIR),\n      cConf.get(Constants.AppFabric.TEMP_DIR)).getAbsoluteFile();\n    this.artifactClassLoaderFactory = new ArtifactClassLoaderFactory(baseUnpackDir);\n    this.artifactInspector = new ArtifactInspector(cConf, artifactClassLoaderFactory);\n  }","commit_id":"f5338afed33e163dca077481a293c26d0473e297","url":"https://github.com/caskdata/cdap"},{"original_method":"private static File createJar(Class<?> cls, File destFile, Manifest manifest) throws IOException {\n    Location deploymentJar = AppJarHelper.createDeploymentJar(new LocalLocationFactory(TMP_FOLDER.newFolder()),\n      cls, manifest);\n    DirUtils.mkdirs(destFile.getParentFile());\n    Files.copy(Locations.newInputSupplier(deploymentJar), destFile);\n    return destFile;\n  }","id":50330,"modified_method":"private static File createAppJar(Class<?> cls, File destFile, Manifest manifest) throws IOException {\n    Location deploymentJar = AppJarHelper.createDeploymentJar(new LocalLocationFactory(TMP_FOLDER.newFolder()),\n      cls, manifest);\n    DirUtils.mkdirs(destFile.getParentFile());\n    Files.copy(Locations.newInputSupplier(deploymentJar), destFile);\n    return destFile;\n  }","commit_id":"f5338afed33e163dca077481a293c26d0473e297","url":"https://github.com/caskdata/cdap"},{"original_method":"@Before\n  public void setupData() throws Exception {\n    artifactRepository.clear(Constants.DEFAULT_NAMESPACE_ID);\n    File appArtifactFile = createJar(PluginTestAppTemplate.class, new File(tmpDir, \"PluginTest-1.0.0.jar\"),\n      createManifest(ManifestFields.EXPORT_PACKAGE,\n        PluginTestRunnable.class.getPackage().getName()));\n    artifactRepository.addArtifact(APP_ARTIFACT_ID, appArtifactFile, null);\n    appClassLoader = createAppClassLoader(appArtifactFile);\n  }","id":50331,"modified_method":"@Before\n  public void setupData() throws Exception {\n    artifactRepository.clear(Constants.DEFAULT_NAMESPACE_ID);\n    File appArtifactFile = createAppJar(PluginTestAppTemplate.class, new File(tmpDir, \"PluginTest-1.0.0.jar\"),\n      createManifest(ManifestFields.EXPORT_PACKAGE,\n        PluginTestRunnable.class.getPackage().getName()));\n    artifactRepository.addArtifact(APP_ARTIFACT_ID, appArtifactFile, null);\n    appClassLoader = createAppClassLoader(appArtifactFile);\n  }","commit_id":"f5338afed33e163dca077481a293c26d0473e297","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n  public void testPluginSelector() throws Exception {\n    // No plugin yet\n    try {\n      artifactRepository.findPlugin(APP_ARTIFACT_ID, \"plugin\", \"TestPlugin2\", new PluginSelector());\n      Assert.fail();\n    } catch (PluginNotExistsException e) {\n      // expected\n    }\n\n    // Create a plugin jar. It contains two plugins, TestPlugin and TestPlugin2 inside.\n    Id.Artifact artifact1Id = Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"myPlugin\", \"1.0\");\n    Manifest manifest = createManifest(ManifestFields.EXPORT_PACKAGE, TestPlugin.class.getPackage().getName());\n    File jarFile = createJar(TestPlugin.class, new File(tmpDir, \"myPlugin-1.0.jar\"), manifest);\n\n    // Build up the plugin repository.\n    Set<ArtifactRange> parents = ImmutableSet.of(\n      new ArtifactRange(APP_ARTIFACT_ID.getNamespace(), APP_ARTIFACT_ID.getName(),\n      new ArtifactVersion(\"1.0.0\"), new ArtifactVersion(\"2.0.0\")));\n    artifactRepository.addArtifact(artifact1Id, jarFile, parents);\n\n    // Should get the only version.\n    Map.Entry<ArtifactDescriptor, PluginClass> plugin =\n      artifactRepository.findPlugin(APP_ARTIFACT_ID, \"plugin\", \"TestPlugin2\", new PluginSelector());\n    Assert.assertNotNull(plugin);\n    Assert.assertEquals(new ArtifactVersion(\"1.0\"), plugin.getKey().getVersion());\n    Assert.assertEquals(\"TestPlugin2\", plugin.getValue().getName());\n\n    // Create another plugin jar with later version and update the repository\n    Id.Artifact artifact2Id = Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"myPlugin\", \"2.0\");\n    jarFile = createJar(TestPlugin.class, new File(tmpDir, \"myPlugin-2.0.jar\"), manifest);\n    artifactRepository.addArtifact(artifact2Id, jarFile, parents);\n\n    // Should select the latest version\n    plugin = artifactRepository.findPlugin(APP_ARTIFACT_ID, \"plugin\", \"TestPlugin2\", new PluginSelector());\n    Assert.assertNotNull(plugin);\n    Assert.assertEquals(new ArtifactVersion(\"2.0\"), plugin.getKey().getVersion());\n    Assert.assertEquals(\"TestPlugin2\", plugin.getValue().getName());\n\n    // Load the Plugin class from the classLoader.\n    PluginInstantiator instantiator = new PluginInstantiator(cConf, appClassLoader);\n    ClassLoader pluginClassLoader = instantiator.getArtifactClassLoader(plugin.getKey());\n    Class<?> pluginClass = pluginClassLoader.loadClass(TestPlugin2.class.getName());\n\n    // Use a custom plugin selector to select with smallest version\n    plugin = artifactRepository.findPlugin(APP_ARTIFACT_ID, \"plugin\", \"TestPlugin2\", new PluginSelector() {\n      @Override\n      public Map.Entry<ArtifactDescriptor, PluginClass> select(SortedMap<ArtifactDescriptor, PluginClass> plugins) {\n        return plugins.entrySet().iterator().next();\n      }\n    });\n    Assert.assertNotNull(plugin);\n    Assert.assertEquals(new ArtifactVersion(\"1.0\"), plugin.getKey().getVersion());\n    Assert.assertEquals(\"TestPlugin2\", plugin.getValue().getName());\n\n    // Load the Plugin class again from the current plugin selected\n    // The plugin class should be different (from different ClassLoader)\n    // The empty class should be the same (from the plugin lib ClassLoader)\n    pluginClassLoader = instantiator.getArtifactClassLoader(plugin.getKey());\n    Assert.assertNotSame(pluginClass, pluginClassLoader.loadClass(TestPlugin2.class.getName()));\n\n    // From the pluginClassLoader, loading export classes from the template jar should be allowed\n    Class<?> cls = pluginClassLoader.loadClass(PluginTestRunnable.class.getName());\n    // The class should be loaded from the parent artifact's classloader\n    Assert.assertSame(appClassLoader.loadClass(PluginTestRunnable.class.getName()), cls);\n\n    // From the plugin classloader, all cdap api classes is loadable as well.\n    cls = pluginClassLoader.loadClass(Application.class.getName());\n    // The Application class should be the same as the one in the system classloader\n    Assert.assertSame(Application.class, cls);\n  }","id":50332,"modified_method":"@Test\n  public void testPluginSelector() throws Exception {\n    // No plugin yet\n    try {\n      artifactRepository.findPlugin(APP_ARTIFACT_ID, \"plugin\", \"TestPlugin2\", new PluginSelector());\n      Assert.fail();\n    } catch (PluginNotExistsException e) {\n      // expected\n    }\n\n    // Create a plugin jar. It contains two plugins, TestPlugin and TestPlugin2 inside.\n    Id.Artifact artifact1Id = Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"myPlugin\", \"1.0\");\n    Manifest manifest = createManifest(ManifestFields.EXPORT_PACKAGE, TestPlugin.class.getPackage().getName());\n    File jarFile = createPluginJar(TestPlugin.class, new File(tmpDir, \"myPlugin-1.0.jar\"), manifest);\n\n    // Build up the plugin repository.\n    Set<ArtifactRange> parents = ImmutableSet.of(\n      new ArtifactRange(APP_ARTIFACT_ID.getNamespace(), APP_ARTIFACT_ID.getName(),\n      new ArtifactVersion(\"1.0.0\"), new ArtifactVersion(\"2.0.0\")));\n    artifactRepository.addArtifact(artifact1Id, jarFile, parents);\n\n    // Should get the only version.\n    Map.Entry<ArtifactDescriptor, PluginClass> plugin =\n      artifactRepository.findPlugin(APP_ARTIFACT_ID, \"plugin\", \"TestPlugin2\", new PluginSelector());\n    Assert.assertNotNull(plugin);\n    Assert.assertEquals(new ArtifactVersion(\"1.0\"), plugin.getKey().getVersion());\n    Assert.assertEquals(\"TestPlugin2\", plugin.getValue().getName());\n\n    // Create another plugin jar with later version and update the repository\n    Id.Artifact artifact2Id = Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"myPlugin\", \"2.0\");\n    jarFile = createPluginJar(TestPlugin.class, new File(tmpDir, \"myPlugin-2.0.jar\"), manifest);\n    artifactRepository.addArtifact(artifact2Id, jarFile, parents);\n\n    // Should select the latest version\n    plugin = artifactRepository.findPlugin(APP_ARTIFACT_ID, \"plugin\", \"TestPlugin2\", new PluginSelector());\n    Assert.assertNotNull(plugin);\n    Assert.assertEquals(new ArtifactVersion(\"2.0\"), plugin.getKey().getVersion());\n    Assert.assertEquals(\"TestPlugin2\", plugin.getValue().getName());\n\n    // Load the Plugin class from the classLoader.\n    PluginInstantiator instantiator = new PluginInstantiator(cConf, appClassLoader);\n    ClassLoader pluginClassLoader = instantiator.getArtifactClassLoader(plugin.getKey());\n    Class<?> pluginClass = pluginClassLoader.loadClass(TestPlugin2.class.getName());\n\n    // Use a custom plugin selector to select with smallest version\n    plugin = artifactRepository.findPlugin(APP_ARTIFACT_ID, \"plugin\", \"TestPlugin2\", new PluginSelector() {\n      @Override\n      public Map.Entry<ArtifactDescriptor, PluginClass> select(SortedMap<ArtifactDescriptor, PluginClass> plugins) {\n        return plugins.entrySet().iterator().next();\n      }\n    });\n    Assert.assertNotNull(plugin);\n    Assert.assertEquals(new ArtifactVersion(\"1.0\"), plugin.getKey().getVersion());\n    Assert.assertEquals(\"TestPlugin2\", plugin.getValue().getName());\n\n    // Load the Plugin class again from the current plugin selected\n    // The plugin class should be different (from different ClassLoader)\n    // The empty class should be the same (from the plugin lib ClassLoader)\n    pluginClassLoader = instantiator.getArtifactClassLoader(plugin.getKey());\n    Assert.assertNotSame(pluginClass, pluginClassLoader.loadClass(TestPlugin2.class.getName()));\n\n    // From the pluginClassLoader, loading export classes from the template jar should be allowed\n    Class<?> cls = pluginClassLoader.loadClass(PluginTestRunnable.class.getName());\n    // The class should be loaded from the parent artifact's classloader\n    Assert.assertSame(appClassLoader.loadClass(PluginTestRunnable.class.getName()), cls);\n\n    // From the plugin classloader, all cdap api classes is loadable as well.\n    cls = pluginClassLoader.loadClass(Application.class.getName());\n    // The Application class should be the same as the one in the system classloader\n    Assert.assertSame(Application.class, cls);\n  }","commit_id":"f5338afed33e163dca077481a293c26d0473e297","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n  public void testPlugin() throws Exception {\n    // Create the plugin jar. There should be two plugins there (TestPlugin and TestPlugin2).\n    Manifest manifest = createManifest(ManifestFields.EXPORT_PACKAGE, TestPlugin.class.getPackage().getName());\n    File jarFile = createJar(TestPlugin.class, new File(tmpDir, \"myPlugin-1.0.jar\"), manifest);\n\n    // add the artifact\n    Set<ArtifactRange> parents = ImmutableSet.of(\n      new ArtifactRange(APP_ARTIFACT_ID.getNamespace(), APP_ARTIFACT_ID.getName(),\n      new ArtifactVersion(\"1.0.0\"), new ArtifactVersion(\"2.0.0\")));\n    Id.Artifact artifactId = Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"myPlugin\", \"1.0\");\n    artifactRepository.addArtifact(artifactId, jarFile, parents);\n\n    // check the parent can see the plugins\n    SortedMap<ArtifactDescriptor, List<PluginClass>> plugins = artifactRepository.getPlugins(APP_ARTIFACT_ID);\n    Assert.assertEquals(1, plugins.size());\n    Assert.assertEquals(2, plugins.get(plugins.firstKey()).size());\n\n    // Instantiate the plugins and execute them\n    try (PluginInstantiator instantiator = new PluginInstantiator(cConf, appClassLoader)) {\n      for (Map.Entry<ArtifactDescriptor, List<PluginClass>> entry : plugins.entrySet()) {\n        for (PluginClass pluginClass : entry.getValue()) {\n          Callable<String> plugin = instantiator.newInstance(entry.getKey(), pluginClass,\n                                                             PluginProperties.builder()\n                                                              .add(\"class.name\", TEST_EMPTY_CLASS)\n                                                              .add(\"timeout\", \"10\")\n                                                              .build()\n          );\n          Assert.assertEquals(TEST_EMPTY_CLASS, plugin.call());\n        }\n      }\n    }\n  }","id":50333,"modified_method":"@Test\n  public void testPlugin() throws Exception {\n    // Create the plugin jar. There should be two plugins there (TestPlugin and TestPlugin2).\n    Manifest manifest = createManifest(ManifestFields.EXPORT_PACKAGE, TestPlugin.class.getPackage().getName());\n    File jarFile = createPluginJar(TestPlugin.class, new File(tmpDir, \"myPlugin-1.0.jar\"), manifest);\n\n    // add the artifact\n    Set<ArtifactRange> parents = ImmutableSet.of(\n      new ArtifactRange(APP_ARTIFACT_ID.getNamespace(), APP_ARTIFACT_ID.getName(),\n      new ArtifactVersion(\"1.0.0\"), new ArtifactVersion(\"2.0.0\")));\n    Id.Artifact artifactId = Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"myPlugin\", \"1.0\");\n    artifactRepository.addArtifact(artifactId, jarFile, parents);\n\n    // check the parent can see the plugins\n    SortedMap<ArtifactDescriptor, List<PluginClass>> plugins = artifactRepository.getPlugins(APP_ARTIFACT_ID);\n    Assert.assertEquals(1, plugins.size());\n    Assert.assertEquals(2, plugins.get(plugins.firstKey()).size());\n\n    // Instantiate the plugins and execute them\n    try (PluginInstantiator instantiator = new PluginInstantiator(cConf, appClassLoader)) {\n      for (Map.Entry<ArtifactDescriptor, List<PluginClass>> entry : plugins.entrySet()) {\n        for (PluginClass pluginClass : entry.getValue()) {\n          Callable<String> plugin = instantiator.newInstance(entry.getKey(), pluginClass,\n                                                             PluginProperties.builder()\n                                                              .add(\"class.name\", TEST_EMPTY_CLASS)\n                                                              .add(\"timeout\", \"10\")\n                                                              .build()\n          );\n          Assert.assertEquals(TEST_EMPTY_CLASS, plugin.call());\n        }\n      }\n    }\n  }","commit_id":"f5338afed33e163dca077481a293c26d0473e297","url":"https://github.com/caskdata/cdap"},{"original_method":"private void writeMeta(Table table, Id.Artifact artifactId, ArtifactData data) throws IOException {\n    ArtifactCell artifactCell = new ArtifactCell(artifactId);\n    table.put(artifactCell.rowkey, artifactCell.column, Bytes.toBytes(gson.toJson(data)));\n\n    // column for plugin meta and app meta. {artifact-name}:{artifact-version}\n    // does not need to contain namespace because namespace is in the rowkey\n    ArtifactColumn artifactColumn = new ArtifactColumn(artifactId);\n\n    // write pluginClass metadata\n    for (PluginClass pluginClass : data.meta.getPlugins()) {\n      // write metadata for each artifact this plugin extends\n      for (ArtifactRange artifactRange : data.meta.getUsableBy()) {\n        // p:{namespace}:{type}:{name}\n        PluginKey pluginKey = new PluginKey(\n          artifactRange.getNamespace(), artifactRange.getName(), pluginClass.getType(), pluginClass.getName());\n\n        byte[] pluginDataBytes = Bytes.toBytes(gson.toJson(new PluginData(pluginClass, artifactRange, data.location)));\n        table.put(pluginKey.getRowKey(), artifactColumn.getColumn(), pluginDataBytes);\n      }\n    }\n\n    // TODO: write appClass metadata\n  }","id":50334,"modified_method":"private void writeMeta(Table table, Id.Artifact artifactId, ArtifactData data) throws IOException {\n    ArtifactCell artifactCell = new ArtifactCell(artifactId);\n    table.put(artifactCell.rowkey, artifactCell.column, Bytes.toBytes(gson.toJson(data)));\n\n    // column for plugin meta and app meta. {artifact-name}:{artifact-version}\n    // does not need to contain namespace because namespace is in the rowkey\n    ArtifactColumn artifactColumn = new ArtifactColumn(artifactId);\n\n    // write pluginClass metadata\n    for (PluginClass pluginClass : data.meta.getClasses().getPlugins()) {\n      // write metadata for each artifact this plugin extends\n      for (ArtifactRange artifactRange : data.meta.getUsableBy()) {\n        // p:{namespace}:{type}:{name}\n        PluginKey pluginKey = new PluginKey(\n          artifactRange.getNamespace(), artifactRange.getName(), pluginClass.getType(), pluginClass.getName());\n\n        byte[] pluginDataBytes = Bytes.toBytes(gson.toJson(new PluginData(pluginClass, artifactRange, data.location)));\n        table.put(pluginKey.getRowKey(), artifactColumn.getColumn(), pluginDataBytes);\n      }\n    }\n\n    // TODO: write appClass metadata\n  }","commit_id":"f5338afed33e163dca077481a293c26d0473e297","url":"https://github.com/caskdata/cdap"},{"original_method":"@Inject\n  ArtifactStore(final DatasetFramework datasetFramework,\n                NamespacedLocationFactory namespacedLocationFactory,\n                LocationFactory locationFactory,\n                TransactionExecutorFactory txExecutorFactory) {\n    this.locationFactory = namespacedLocationFactory;\n    this.gson = new GsonBuilder()\n      .registerTypeAdapter(Location.class, new LocationCodec(locationFactory))\n      .create();\n    this.metaTable = Transactional.of(txExecutorFactory, new Supplier<DatasetContext<Table>>() {\n      @Override\n      public DatasetContext<Table> get() {\n        try {\n          return DatasetContext.of((Table) DatasetsUtil.getOrCreateDataset(\n            datasetFramework, META_ID, Table.class.getName(),\n            DatasetProperties.builder().add(Table.PROPERTY_CONFLICT_LEVEL, ConflictDetection.COLUMN.name()).build(),\n            DatasetDefinition.NO_ARGUMENTS, null));\n        } catch (Exception e) {\n          // there's nothing much we can do here\n          throw Throwables.propagate(e);\n        }\n      }\n    });\n  }","id":50335,"modified_method":"@Inject\n  ArtifactStore(final DatasetFramework datasetFramework,\n                NamespacedLocationFactory namespacedLocationFactory,\n                LocationFactory locationFactory,\n                TransactionExecutorFactory txExecutorFactory) {\n    this.locationFactory = namespacedLocationFactory;\n    this.gson = new GsonBuilder()\n      .registerTypeAdapter(Location.class, new LocationCodec(locationFactory))\n      .registerTypeAdapter(Schema.class, new SchemaTypeAdapter())\n      .create();\n    this.metaTable = Transactional.of(txExecutorFactory, new Supplier<DatasetContext<Table>>() {\n      @Override\n      public DatasetContext<Table> get() {\n        try {\n          return DatasetContext.of((Table) DatasetsUtil.getOrCreateDataset(\n            datasetFramework, META_ID, Table.class.getName(),\n            DatasetProperties.builder().add(Table.PROPERTY_CONFLICT_LEVEL, ConflictDetection.COLUMN.name()).build(),\n            DatasetDefinition.NO_ARGUMENTS, null));\n        } catch (Exception e) {\n          // there's nothing much we can do here\n          throw Throwables.propagate(e);\n        }\n      }\n    });\n  }","commit_id":"f5338afed33e163dca077481a293c26d0473e297","url":"https://github.com/caskdata/cdap"},{"original_method":"private void cleanupOldSnapshot(Table table, Id.Artifact artifactId, byte[] oldData) throws IOException {\n    // delete old artifact data\n    ArtifactCell artifactCell = new ArtifactCell(artifactId);\n    table.delete(artifactCell.rowkey, artifactCell.column);\n\n    // delete old plugins\n    ArtifactData oldMeta = gson.fromJson(Bytes.toString(oldData), ArtifactData.class);\n    ArtifactColumn artifactColumn = new ArtifactColumn(artifactId);\n\n    for (PluginClass pluginClass : oldMeta.meta.getPlugins()) {\n      // write metadata for each artifact this plugin extends\n      for (ArtifactRange artifactRange : oldMeta.meta.getUsableBy()) {\n        // p:{namespace}:{type}:{name}\n        PluginKey pluginKey = new PluginKey(\n          artifactRange.getNamespace(), artifactRange.getName(), pluginClass.getType(), pluginClass.getName());\n        table.delete(pluginKey.getRowKey(), artifactColumn.getColumn());\n      }\n    }\n\n    // TODO: delete appClass metadata\n\n    // delete the old jar file\n    oldMeta.location.delete();\n  }","id":50336,"modified_method":"private void cleanupOldSnapshot(Table table, Id.Artifact artifactId, byte[] oldData) throws IOException {\n    // delete old artifact data\n    ArtifactCell artifactCell = new ArtifactCell(artifactId);\n    table.delete(artifactCell.rowkey, artifactCell.column);\n\n    // delete old plugins\n    ArtifactData oldMeta = gson.fromJson(Bytes.toString(oldData), ArtifactData.class);\n    ArtifactColumn artifactColumn = new ArtifactColumn(artifactId);\n\n    for (PluginClass pluginClass : oldMeta.meta.getClasses().getPlugins()) {\n      // write metadata for each artifact this plugin extends\n      for (ArtifactRange artifactRange : oldMeta.meta.getUsableBy()) {\n        // p:{namespace}:{type}:{name}\n        PluginKey pluginKey = new PluginKey(\n          artifactRange.getNamespace(), artifactRange.getName(), pluginClass.getType(), pluginClass.getName());\n        table.delete(pluginKey.getRowKey(), artifactColumn.getColumn());\n      }\n    }\n\n    // TODO: delete appClass metadata\n\n    // delete the old jar file\n    oldMeta.location.delete();\n  }","commit_id":"f5338afed33e163dca077481a293c26d0473e297","url":"https://github.com/caskdata/cdap"},{"original_method":"@Category(SlowTests.class)\n  @Test\n  public void testConcurrentSnapshotWrite() throws Exception {\n    final ArtifactRange parentArtifacts = new ArtifactRange(\n      Constants.DEFAULT_NAMESPACE_ID, \"parent\", new ArtifactVersion(\"1.0.0\"), new ArtifactVersion(\"2.0.0\"));\n    // start up a bunch of threads that will try and write the same artifact at the same time\n    // only one of them should be able to write it\n    int numThreads = 20;\n    final Id.Artifact artifactId = Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"abc\", \"1.0.0-SNAPSHOT\");\n\n    // use a barrier so they all try and write at the same time\n    final CyclicBarrier barrier = new CyclicBarrier(numThreads);\n    final CountDownLatch latch = new CountDownLatch(numThreads);\n    ExecutorService executorService = Executors.newFixedThreadPool(numThreads);\n    for (int i = 0; i < numThreads; i++) {\n      final String writer = String.valueOf(i);\n      executorService.execute(new Runnable() {\n        @Override\n        public void run() {\n          try {\n            barrier.await();\n            ArtifactMeta meta = new ArtifactMeta(\n              ImmutableList.of(new PluginClass(\n                \"plugin-type\", \"plugin\" + writer, \"\", \"classname\", \"cfg\",\n                ImmutableMap.<String, PluginPropertyField>of())),\n              ImmutableSet.of(parentArtifacts)\n            );\n            artifactStore.write(artifactId, meta, new ByteArrayInputStream(Bytes.toBytes(writer)));\n          } catch (InterruptedException | BrokenBarrierException | ArtifactAlreadyExistsException | IOException e) {\n            // something went wrong, fail the test\n            throw new RuntimeException(e);\n          } catch (WriteConflictException e) {\n            // these are ok though unexpected (means couldn't write after a bunch of retries too)\n          } finally {\n            latch.countDown();\n          }\n        }\n      });\n    }\n\n    // wait for all writers to finish\n    latch.await();\n\n    // figure out which was the last writer by reading our data. all the writers should have been able to write,\n    // and they should have all overwritten each other in a consistent manner\n    ArtifactDetail detail = artifactStore.getArtifact(artifactId);\n    // figure out the winning writer from the plugin name, which is 'plugin<writer>'\n    String pluginName = detail.getMeta().getPlugins().get(0).getName();\n    String winnerWriter = pluginName.substring(\"plugin\".length());\n\n    ArtifactMeta expectedMeta = new ArtifactMeta(\n      ImmutableList.of(new PluginClass(\n        \"plugin-type\", \"plugin\" + winnerWriter, \"\", \"classname\", \"cfg\",\n        ImmutableMap.<String, PluginPropertyField>of())),\n      ImmutableSet.of(parentArtifacts));\n    assertEqual(artifactId, expectedMeta, winnerWriter, detail);\n\n    // check only 1 plugin remains and that its the correct one\n    Id.Artifact parentArtifactId = Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"parent\", \"1.0.0\");\n    Map<ArtifactDescriptor, List<PluginClass>> pluginMap =\n      artifactStore.getPluginClasses(parentArtifactId, \"plugin-type\");\n    Map<ArtifactDescriptor, List<PluginClass>> expected = Maps.newHashMap();\n    expected.put(detail.getDescriptor(), Lists.newArrayList(\n      new PluginClass(\"plugin-type\", \"plugin\" + winnerWriter, \"\", \"classname\", \"cfg\",\n      ImmutableMap.<String, PluginPropertyField>of())));\n    Assert.assertEquals(expected, pluginMap);\n  }","id":50337,"modified_method":"@Category(SlowTests.class)\n  @Test\n  public void testConcurrentSnapshotWrite() throws Exception {\n    final ArtifactRange parentArtifacts = new ArtifactRange(\n      Constants.DEFAULT_NAMESPACE_ID, \"parent\", new ArtifactVersion(\"1.0.0\"), new ArtifactVersion(\"2.0.0\"));\n    // start up a bunch of threads that will try and write the same artifact at the same time\n    // only one of them should be able to write it\n    int numThreads = 20;\n    final Id.Artifact artifactId = Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"abc\", \"1.0.0-SNAPSHOT\");\n\n    // use a barrier so they all try and write at the same time\n    final CyclicBarrier barrier = new CyclicBarrier(numThreads);\n    final CountDownLatch latch = new CountDownLatch(numThreads);\n    ExecutorService executorService = Executors.newFixedThreadPool(numThreads);\n    for (int i = 0; i < numThreads; i++) {\n      final String writer = String.valueOf(i);\n      executorService.execute(new Runnable() {\n        @Override\n        public void run() {\n          try {\n            barrier.await();\n            ArtifactMeta meta = new ArtifactMeta(\n              ArtifactClasses.builder()\n                .addPlugin(new PluginClass(\"plugin-type\", \"plugin\" + writer, \"\", \"classname\", \"cfg\",\n                  ImmutableMap.<String, PluginPropertyField>of()))\n                .build(),\n              ImmutableSet.of(parentArtifacts)\n            );\n            artifactStore.write(artifactId, meta, new ByteArrayInputStream(Bytes.toBytes(writer)));\n          } catch (InterruptedException | BrokenBarrierException | ArtifactAlreadyExistsException | IOException e) {\n            // something went wrong, fail the test\n            throw new RuntimeException(e);\n          } catch (WriteConflictException e) {\n            // these are ok though unexpected (means couldn't write after a bunch of retries too)\n          } finally {\n            latch.countDown();\n          }\n        }\n      });\n    }\n\n    // wait for all writers to finish\n    latch.await();\n\n    // figure out which was the last writer by reading our data. all the writers should have been able to write,\n    // and they should have all overwritten each other in a consistent manner\n    ArtifactDetail detail = artifactStore.getArtifact(artifactId);\n    // figure out the winning writer from the plugin name, which is 'plugin<writer>'\n    String pluginName = detail.getMeta().getClasses().getPlugins().iterator().next().getName();\n    String winnerWriter = pluginName.substring(\"plugin\".length());\n\n    ArtifactMeta expectedMeta = new ArtifactMeta(\n      ArtifactClasses.builder()\n        .addPlugin(new PluginClass(\"plugin-type\", \"plugin\" + winnerWriter, \"\", \"classname\", \"cfg\",\n            ImmutableMap.<String, PluginPropertyField>of()))\n        .build(),\n      ImmutableSet.of(parentArtifacts)\n    );\n    assertEqual(artifactId, expectedMeta, winnerWriter, detail);\n\n    // check only 1 plugin remains and that its the correct one\n    Id.Artifact parentArtifactId = Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"parent\", \"1.0.0\");\n    Map<ArtifactDescriptor, List<PluginClass>> pluginMap =\n      artifactStore.getPluginClasses(parentArtifactId, \"plugin-type\");\n    Map<ArtifactDescriptor, List<PluginClass>> expected = Maps.newHashMap();\n    expected.put(detail.getDescriptor(), Lists.newArrayList(\n      new PluginClass(\"plugin-type\", \"plugin\" + winnerWriter, \"\", \"classname\", \"cfg\",\n      ImmutableMap.<String, PluginPropertyField>of())));\n    Assert.assertEquals(expected, pluginMap);\n  }","commit_id":"f5338afed33e163dca077481a293c26d0473e297","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n  public void testPluginParentVersions() throws Exception {\n    // write an artifact that extends parent-[1.0.0, 2.0.0)\n    Id.Artifact artifactId = Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"plugins\", \"0.1.0\");\n    Set<ArtifactRange> parentArtifacts = ImmutableSet.of(new ArtifactRange(\n      Constants.DEFAULT_NAMESPACE_ID, \"parent\", new ArtifactVersion(\"1.0.0\"), new ArtifactVersion(\"2.0.0\")));\n    List<PluginClass> plugins = ImmutableList.of(\n      new PluginClass(\"atype\", \"plugin1\", \"\", \"c.c.c.plugin1\", \"cfg\", ImmutableMap.<String, PluginPropertyField>of())\n    );\n    ArtifactMeta meta = new ArtifactMeta(plugins, parentArtifacts);\n    artifactStore.write(artifactId, meta, new ByteArrayInputStream(Bytes.toBytes(\"some contents\")));\n    ArtifactDescriptor artifactInfo = artifactStore.getArtifact(artifactId).getDescriptor();\n\n    // check ids that are out of range. They should not return anything\n    List<Id.Artifact> badIds = Lists.newArrayList(\n      // ids that are too low\n      Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"parent\", \"0.9.9\"),\n      Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"parent\", \"1.0.0-SNAPSHOT\"),\n      // ids that are too high\n      Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"parent\", \"2.0.0\")\n    );\n    for (Id.Artifact badId : badIds) {\n      Assert.assertTrue(artifactStore.getPluginClasses(badId).isEmpty());\n      Assert.assertTrue(artifactStore.getPluginClasses(badId, \"atype\").isEmpty());\n      try {\n        artifactStore.getPluginClasses(badId, \"atype\", \"plugin1\");\n        Assert.fail();\n      } catch (PluginNotExistsException e) {\n        // expected\n      }\n    }\n\n    // check ids that are in range return what we expect\n    List<Id.Artifact> goodIds = Lists.newArrayList(\n      // ids that are too low\n      Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"parent\", \"1.0.0\"),\n      // ids that are too high\n      Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"parent\", \"1.9.9\"),\n      Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"parent\", \"1.99.999\"),\n      Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"parent\", \"2.0.0-SNAPSHOT\")\n    );\n    Map<ArtifactDescriptor, List<PluginClass>> expectedPluginsMapList = ImmutableMap.of(artifactInfo, plugins);\n    Map<ArtifactDescriptor, PluginClass> expectedPluginsMap = ImmutableMap.of(artifactInfo, plugins.get(0));\n    for (Id.Artifact goodId : goodIds) {\n      Assert.assertEquals(expectedPluginsMapList, artifactStore.getPluginClasses(goodId));\n      Assert.assertEquals(expectedPluginsMapList, artifactStore.getPluginClasses(goodId, \"atype\"));\n      Assert.assertEquals(expectedPluginsMap, artifactStore.getPluginClasses(goodId, \"atype\", \"plugin1\"));\n    }\n  }","id":50338,"modified_method":"@Test\n  public void testPluginParentVersions() throws Exception {\n    // write an artifact that extends parent-[1.0.0, 2.0.0)\n    Id.Artifact artifactId = Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"plugins\", \"0.1.0\");\n    Set<ArtifactRange> parentArtifacts = ImmutableSet.of(new ArtifactRange(\n      Constants.DEFAULT_NAMESPACE_ID, \"parent\", new ArtifactVersion(\"1.0.0\"), new ArtifactVersion(\"2.0.0\")));\n    List<PluginClass> plugins = ImmutableList.of(\n      new PluginClass(\"atype\", \"plugin1\", \"\", \"c.c.c.plugin1\", \"cfg\", ImmutableMap.<String, PluginPropertyField>of())\n    );\n    ArtifactMeta meta = new ArtifactMeta(ArtifactClasses.builder().addPlugins(plugins).build(), parentArtifacts);\n    artifactStore.write(artifactId, meta, new ByteArrayInputStream(Bytes.toBytes(\"some contents\")));\n    ArtifactDescriptor artifactInfo = artifactStore.getArtifact(artifactId).getDescriptor();\n\n    // check ids that are out of range. They should not return anything\n    List<Id.Artifact> badIds = Lists.newArrayList(\n      // ids that are too low\n      Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"parent\", \"0.9.9\"),\n      Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"parent\", \"1.0.0-SNAPSHOT\"),\n      // ids that are too high\n      Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"parent\", \"2.0.0\")\n    );\n    for (Id.Artifact badId : badIds) {\n      Assert.assertTrue(artifactStore.getPluginClasses(badId).isEmpty());\n      Assert.assertTrue(artifactStore.getPluginClasses(badId, \"atype\").isEmpty());\n      try {\n        artifactStore.getPluginClasses(badId, \"atype\", \"plugin1\");\n        Assert.fail();\n      } catch (PluginNotExistsException e) {\n        // expected\n      }\n    }\n\n    // check ids that are in range return what we expect\n    List<Id.Artifact> goodIds = Lists.newArrayList(\n      // ids that are too low\n      Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"parent\", \"1.0.0\"),\n      // ids that are too high\n      Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"parent\", \"1.9.9\"),\n      Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"parent\", \"1.99.999\"),\n      Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"parent\", \"2.0.0-SNAPSHOT\")\n    );\n    Map<ArtifactDescriptor, List<PluginClass>> expectedPluginsMapList = ImmutableMap.of(artifactInfo, plugins);\n    Map<ArtifactDescriptor, PluginClass> expectedPluginsMap = ImmutableMap.of(artifactInfo, plugins.get(0));\n    for (Id.Artifact goodId : goodIds) {\n      Assert.assertEquals(expectedPluginsMapList, artifactStore.getPluginClasses(goodId));\n      Assert.assertEquals(expectedPluginsMapList, artifactStore.getPluginClasses(goodId, \"atype\"));\n      Assert.assertEquals(expectedPluginsMap, artifactStore.getPluginClasses(goodId, \"atype\", \"plugin1\"));\n    }\n  }","commit_id":"f5338afed33e163dca077481a293c26d0473e297","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n  public void testSnapshotMutability() throws Exception {\n    ArtifactRange parentArtifacts = new ArtifactRange(\n      Constants.DEFAULT_NAMESPACE_ID, \"parent\", new ArtifactVersion(\"1.0.0\"), new ArtifactVersion(\"2.0.0\"));\n    // write the snapshot once\n    PluginClass plugin1 = new PluginClass(\"atype\", \"plugin1\", \"\", \"c.c.c.plugin1\", \"cfg\",\n      ImmutableMap.<String, PluginPropertyField>of());\n    PluginClass plugin2 = new PluginClass(\"atype\", \"plugin2\", \"\", \"c.c.c.plugin2\", \"cfg\",\n      ImmutableMap.<String, PluginPropertyField>of());\n    Id.Artifact artifactId = Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"myplugins\", \"1.0.0-SNAPSHOT\");\n    ArtifactMeta artifactMeta = new ArtifactMeta(ImmutableList.of(plugin1, plugin2), ImmutableSet.of(parentArtifacts));\n    artifactStore.write(artifactId, artifactMeta, new ByteArrayInputStream(Bytes.toBytes(\"abc123\")));\n\n    // update meta and jar contents\n    artifactMeta = new ArtifactMeta(ImmutableList.of(plugin2), ImmutableSet.of(parentArtifacts));\n    artifactStore.write(artifactId, artifactMeta, new ByteArrayInputStream(Bytes.toBytes(\"xyz321\")));\n\n    // check the metadata and contents got updated\n    ArtifactDetail detail = artifactStore.getArtifact(artifactId);\n    assertEqual(artifactId, artifactMeta, \"xyz321\", detail);\n\n    // check that plugin1 was deleted and plugin2 remains\n    Id.Artifact parentArtifactId = Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"parent\", \"1.0.0\");\n    Assert.assertEquals(ImmutableMap.of(detail.getDescriptor(), plugin2),\n                        artifactStore.getPluginClasses(parentArtifactId, plugin2.getType(), plugin2.getName()));\n    try {\n      artifactStore.getPluginClasses(parentArtifactId, plugin1.getType(), plugin1.getName());\n      Assert.fail();\n    } catch (PluginNotExistsException e) {\n      // expected\n    }\n  }","id":50339,"modified_method":"@Test\n  public void testSnapshotMutability() throws Exception {\n    ArtifactRange parentArtifacts = new ArtifactRange(\n      Constants.DEFAULT_NAMESPACE_ID, \"parent\", new ArtifactVersion(\"1.0.0\"), new ArtifactVersion(\"2.0.0\"));\n    // write the snapshot once\n    PluginClass plugin1 = new PluginClass(\"atype\", \"plugin1\", \"\", \"c.c.c.plugin1\", \"cfg\",\n      ImmutableMap.<String, PluginPropertyField>of());\n    PluginClass plugin2 = new PluginClass(\"atype\", \"plugin2\", \"\", \"c.c.c.plugin2\", \"cfg\",\n      ImmutableMap.<String, PluginPropertyField>of());\n    Id.Artifact artifactId = Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"myplugins\", \"1.0.0-SNAPSHOT\");\n    ArtifactMeta artifactMeta = new ArtifactMeta(\n      ArtifactClasses.builder().addPlugins(plugin1, plugin2).build(), ImmutableSet.of(parentArtifacts));\n    artifactStore.write(artifactId, artifactMeta, new ByteArrayInputStream(Bytes.toBytes(\"abc123\")));\n\n    // update meta and jar contents\n    artifactMeta = new ArtifactMeta(\n      ArtifactClasses.builder().addPlugin(plugin2).build(), ImmutableSet.of(parentArtifacts));\n    artifactStore.write(artifactId, artifactMeta, new ByteArrayInputStream(Bytes.toBytes(\"xyz321\")));\n\n    // check the metadata and contents got updated\n    ArtifactDetail detail = artifactStore.getArtifact(artifactId);\n    assertEqual(artifactId, artifactMeta, \"xyz321\", detail);\n\n    // check that plugin1 was deleted and plugin2 remains\n    Id.Artifact parentArtifactId = Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"parent\", \"1.0.0\");\n    Assert.assertEquals(ImmutableMap.of(detail.getDescriptor(), plugin2),\n                        artifactStore.getPluginClasses(parentArtifactId, plugin2.getType(), plugin2.getName()));\n    try {\n      artifactStore.getPluginClasses(parentArtifactId, plugin1.getType(), plugin1.getName());\n      Assert.fail();\n    } catch (PluginNotExistsException e) {\n      // expected\n    }\n  }","commit_id":"f5338afed33e163dca077481a293c26d0473e297","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n  public void testSamePluginDifferentArtifacts() throws Exception {\n    ArtifactRange parentArtifacts = new ArtifactRange(\n      Constants.DEFAULT_NAMESPACE_ID, \"parent\", new ArtifactVersion(\"1.0.0\"), new ArtifactVersion(\"2.0.0\"));\n    // add one artifact with a couple plugins\n    Id.Artifact artifact1 = Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"plugins1\", \"1.0.0\");\n    List<PluginClass> plugins = ImmutableList.of(\n      new PluginClass(\"atype\", \"plugin1\", \"\", \"c.c.c.plugin1\", \"cfg\", ImmutableMap.<String, PluginPropertyField>of()),\n      new PluginClass(\"atype\", \"plugin2\", \"\", \"c.c.c.plugin2\", \"cfg\", ImmutableMap.<String, PluginPropertyField>of())\n    );\n    ArtifactMeta meta1 = new ArtifactMeta(plugins, ImmutableSet.of(parentArtifacts));\n    artifactStore.write(artifact1, meta1, new ByteArrayInputStream(Bytes.toBytes(\"something\")));\n    ArtifactDescriptor artifact1Info = artifactStore.getArtifact(artifact1).getDescriptor();\n\n    // add a different artifact with the same plugins\n    Id.Artifact artifact2 = Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"plugins2\", \"1.0.0\");\n    ArtifactMeta meta2 = new ArtifactMeta(plugins, ImmutableSet.of(parentArtifacts));\n    artifactStore.write(artifact2, meta2, new ByteArrayInputStream(Bytes.toBytes(\"something\")));\n    ArtifactDescriptor artifact2Info = artifactStore.getArtifact(artifact2).getDescriptor();\n\n    Id.Artifact parentArtifactId = Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"parent\", \"1.0.0\");\n    Map<ArtifactDescriptor, List<PluginClass>> expected = Maps.newHashMap();\n    expected.put(artifact1Info, plugins);\n    expected.put(artifact2Info, plugins);\n    Map<ArtifactDescriptor, List<PluginClass>> actual = artifactStore.getPluginClasses(parentArtifactId);\n    Assert.assertEquals(expected, actual);\n  }","id":50340,"modified_method":"@Test\n  public void testSamePluginDifferentArtifacts() throws Exception {\n    ArtifactRange parentArtifacts = new ArtifactRange(\n      Constants.DEFAULT_NAMESPACE_ID, \"parent\", new ArtifactVersion(\"1.0.0\"), new ArtifactVersion(\"2.0.0\"));\n    // add one artifact with a couple plugins\n    Id.Artifact artifact1 = Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"plugins1\", \"1.0.0\");\n    List<PluginClass> plugins = ImmutableList.of(\n      new PluginClass(\"atype\", \"plugin1\", \"\", \"c.c.c.plugin1\", \"cfg\", ImmutableMap.<String, PluginPropertyField>of()),\n      new PluginClass(\"atype\", \"plugin2\", \"\", \"c.c.c.plugin2\", \"cfg\", ImmutableMap.<String, PluginPropertyField>of())\n    );\n    ArtifactMeta meta1 = new ArtifactMeta(\n      ArtifactClasses.builder().addPlugins(plugins).build(), ImmutableSet.of(parentArtifacts));\n    artifactStore.write(artifact1, meta1, new ByteArrayInputStream(Bytes.toBytes(\"something\")));\n    ArtifactDescriptor artifact1Info = artifactStore.getArtifact(artifact1).getDescriptor();\n\n    // add a different artifact with the same plugins\n    Id.Artifact artifact2 = Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"plugins2\", \"1.0.0\");\n    ArtifactMeta meta2 = new ArtifactMeta(\n      ArtifactClasses.builder().addPlugins(plugins).build(), ImmutableSet.of(parentArtifacts));\n    artifactStore.write(artifact2, meta2, new ByteArrayInputStream(Bytes.toBytes(\"something\")));\n    ArtifactDescriptor artifact2Info = artifactStore.getArtifact(artifact2).getDescriptor();\n\n    Id.Artifact parentArtifactId = Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"parent\", \"1.0.0\");\n    Map<ArtifactDescriptor, List<PluginClass>> expected = Maps.newHashMap();\n    expected.put(artifact1Info, plugins);\n    expected.put(artifact2Info, plugins);\n    Map<ArtifactDescriptor, List<PluginClass>> actual = artifactStore.getPluginClasses(parentArtifactId);\n    Assert.assertEquals(expected, actual);\n  }","commit_id":"f5338afed33e163dca077481a293c26d0473e297","url":"https://github.com/caskdata/cdap"},{"original_method":"@Category(SlowTests.class)\n  @Test\n  public void testConcurrentWrite() throws Exception {\n    // start up a bunch of threads that will try and write the same artifact at the same time\n    // only one of them should be able to write it\n    int numThreads = 20;\n    final Id.Artifact artifactId = Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"abc\", \"1.0.0\");\n    final List<String> successfulWriters = Collections.synchronizedList(Lists.<String>newArrayList());\n\n    // use a barrier so they all try and write at the same time\n    final CyclicBarrier barrier = new CyclicBarrier(numThreads);\n    final CountDownLatch latch = new CountDownLatch(numThreads);\n    ExecutorService executorService = Executors.newFixedThreadPool(numThreads);\n    for (int i = 0; i < numThreads; i++) {\n      final String writer = String.valueOf(i);\n      executorService.execute(new Runnable() {\n        @Override\n        public void run() {\n          try {\n            barrier.await();\n            ArtifactMeta meta = new ArtifactMeta(ImmutableList.of(new PluginClass(\n              \"plugin-type\", \"plugin\" + writer, \"\", \"classname\", \"cfg\",\n              ImmutableMap.<String, PluginPropertyField>of())));\n            artifactStore.write(artifactId, meta, new ByteArrayInputStream(Bytes.toBytes(writer)));\n            successfulWriters.add(writer);\n          } catch (InterruptedException | BrokenBarrierException | IOException e) {\n            // something went wrong, fail the test\n            throw new RuntimeException(e);\n          } catch (ArtifactAlreadyExistsException | WriteConflictException e) {\n            // these are ok, all but one thread should see this\n          } finally {\n            latch.countDown();\n          }\n        }\n      });\n    }\n\n    // wait for all writers to finish\n    latch.await();\n    // only one writer should have been able to write\n    Assert.assertEquals(1, successfulWriters.size());\n    String successfulWriter = successfulWriters.get(0);\n    // check that the contents weren't mixed between writers\n    ArtifactDetail info = artifactStore.getArtifact(artifactId);\n    ArtifactMeta expectedMeta = new ArtifactMeta(ImmutableList.of(new PluginClass(\n      \"plugin-type\", \"plugin\" + successfulWriter, \"\", \"classname\", \"cfg\",\n      ImmutableMap.<String, PluginPropertyField>of())));\n    assertEqual(artifactId, expectedMeta, successfulWriter, info);\n  }","id":50341,"modified_method":"@Category(SlowTests.class)\n  @Test\n  public void testConcurrentWrite() throws Exception {\n    // start up a bunch of threads that will try and write the same artifact at the same time\n    // only one of them should be able to write it\n    int numThreads = 20;\n    final Id.Artifact artifactId = Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"abc\", \"1.0.0\");\n    final List<String> successfulWriters = Collections.synchronizedList(Lists.<String>newArrayList());\n\n    // use a barrier so they all try and write at the same time\n    final CyclicBarrier barrier = new CyclicBarrier(numThreads);\n    final CountDownLatch latch = new CountDownLatch(numThreads);\n    ExecutorService executorService = Executors.newFixedThreadPool(numThreads);\n    for (int i = 0; i < numThreads; i++) {\n      final String writer = String.valueOf(i);\n      executorService.execute(new Runnable() {\n        @Override\n        public void run() {\n          try {\n            barrier.await();\n            ArtifactMeta meta = new ArtifactMeta(\n              ArtifactClasses.builder()\n                .addPlugin(new PluginClass(\"plugin-type\", \"plugin\" + writer, \"\", \"classname\", \"cfg\",\n                  ImmutableMap.<String, PluginPropertyField>of()))\n                .build()\n            );\n            artifactStore.write(artifactId, meta, new ByteArrayInputStream(Bytes.toBytes(writer)));\n            successfulWriters.add(writer);\n          } catch (InterruptedException | BrokenBarrierException | IOException e) {\n            // something went wrong, fail the test\n            throw new RuntimeException(e);\n          } catch (ArtifactAlreadyExistsException | WriteConflictException e) {\n            // these are ok, all but one thread should see this\n          } finally {\n            latch.countDown();\n          }\n        }\n      });\n    }\n\n    // wait for all writers to finish\n    latch.await();\n    // only one writer should have been able to write\n    Assert.assertEquals(1, successfulWriters.size());\n    String successfulWriter = successfulWriters.get(0);\n    // check that the contents weren't mixed between writers\n    ArtifactDetail info = artifactStore.getArtifact(artifactId);\n    ArtifactMeta expectedMeta = new ArtifactMeta(\n      ArtifactClasses.builder()\n        .addPlugin(new PluginClass(\"plugin-type\", \"plugin\" + successfulWriter, \"\", \"classname\", \"cfg\",\n          ImmutableMap.<String, PluginPropertyField>of()))\n        .build()\n    );\n    assertEqual(artifactId, expectedMeta, successfulWriter, info);\n  }","commit_id":"f5338afed33e163dca077481a293c26d0473e297","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test(expected = ArtifactAlreadyExistsException.class)\n  public void testImmutability() throws Exception {\n    Id.Artifact artifactId = Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"myplugins\", \"1.0.0\");\n    ArtifactMeta artifactMeta = new ArtifactMeta(ImmutableList.<PluginClass>of());\n\n    String artifactContents = \"abc123\";\n    // this should work\n    try {\n      artifactStore.write(artifactId, artifactMeta, new ByteArrayInputStream(Bytes.toBytes(artifactContents)));\n    } catch (ArtifactAlreadyExistsException e) {\n      Assert.fail();\n    }\n    // this should throw an exception, since artifacts are immutable\n    artifactStore.write(artifactId, artifactMeta, new ByteArrayInputStream(Bytes.toBytes(artifactContents)));\n  }","id":50342,"modified_method":"@Test(expected = ArtifactAlreadyExistsException.class)\n  public void testImmutability() throws Exception {\n    Id.Artifact artifactId = Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"myplugins\", \"1.0.0\");\n    ArtifactMeta artifactMeta = new ArtifactMeta(ArtifactClasses.builder().build());\n\n    String artifactContents = \"abc123\";\n    // this should work\n    try {\n      artifactStore.write(artifactId, artifactMeta, new ByteArrayInputStream(Bytes.toBytes(artifactContents)));\n    } catch (ArtifactAlreadyExistsException e) {\n      Assert.fail();\n    }\n    // this should throw an exception, since artifacts are immutable\n    artifactStore.write(artifactId, artifactMeta, new ByteArrayInputStream(Bytes.toBytes(artifactContents)));\n  }","commit_id":"f5338afed33e163dca077481a293c26d0473e297","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n  public void testNamespaceIsolation() throws Exception {\n    Id.Namespace namespace1 = Id.Namespace.from(\"ns1\");\n    Id.Namespace namespace2 = Id.Namespace.from(\"ns2\");\n    Id.Artifact artifact1 = Id.Artifact.from(namespace1, \"myplugins\", \"1.0.0\");\n    Id.Artifact artifact2 = Id.Artifact.from(namespace2, \"myplugins\", \"1.0.0\");\n    String contents1 = \"first contents\";\n    String contents2 = \"second contents\";\n    List<PluginClass> plugins1 = ImmutableList.of(\n      new PluginClass(\"atype\", \"plugin1\", \"\", \"c.c.c.plugin1\", \"cfg\", ImmutableMap.<String, PluginPropertyField>of())\n    );\n    List<PluginClass> plugins2 = ImmutableList.of(\n      new PluginClass(\"atype\", \"plugin2\", \"\", \"c.c.c.plugin2\", \"cfg\", ImmutableMap.<String, PluginPropertyField>of())\n    );\n    ArtifactMeta meta1 = new ArtifactMeta(plugins1);\n    ArtifactMeta meta2 = new ArtifactMeta(plugins2);\n\n    artifactStore.write(artifact1, meta1, new ByteArrayInputStream(Bytes.toBytes(contents1)));\n    artifactStore.write(artifact2, meta2, new ByteArrayInputStream(Bytes.toBytes(contents2)));\n\n    try {\n      ArtifactDetail info1 = artifactStore.getArtifact(artifact1);\n      ArtifactDetail info2 = artifactStore.getArtifact(artifact2);\n\n      assertEqual(artifact1, meta1, contents1, info1);\n      assertEqual(artifact2, meta2, contents2, info2);\n\n      List<ArtifactDetail> namespace1Artifacts = artifactStore.getArtifacts(namespace1);\n      List<ArtifactDetail> namespace2Artifacts = artifactStore.getArtifacts(namespace2);\n      Assert.assertEquals(1, namespace1Artifacts.size());\n      assertEqual(artifact1, meta1, contents1, namespace1Artifacts.get(0));\n      Assert.assertEquals(1, namespace2Artifacts.size());\n      assertEqual(artifact2, meta2, contents2, namespace2Artifacts.get(0));\n    } finally {\n      artifactStore.clear(namespace1);\n      artifactStore.clear(namespace2);\n    }\n  }","id":50343,"modified_method":"@Test\n  public void testNamespaceIsolation() throws Exception {\n    Id.Namespace namespace1 = Id.Namespace.from(\"ns1\");\n    Id.Namespace namespace2 = Id.Namespace.from(\"ns2\");\n    Id.Artifact artifact1 = Id.Artifact.from(namespace1, \"myplugins\", \"1.0.0\");\n    Id.Artifact artifact2 = Id.Artifact.from(namespace2, \"myplugins\", \"1.0.0\");\n    String contents1 = \"first contents\";\n    String contents2 = \"second contents\";\n    PluginClass plugin1 =\n      new PluginClass(\"atype\", \"plugin1\", \"\", \"c.c.c.plugin1\", \"cfg\", ImmutableMap.<String, PluginPropertyField>of());\n    PluginClass plugin2 =\n      new PluginClass(\"atype\", \"plugin2\", \"\", \"c.c.c.plugin2\", \"cfg\", ImmutableMap.<String, PluginPropertyField>of());\n    ArtifactMeta meta1 = new ArtifactMeta(ArtifactClasses.builder().addPlugin(plugin1).build());\n    ArtifactMeta meta2 = new ArtifactMeta(ArtifactClasses.builder().addPlugin(plugin2).build());\n\n    artifactStore.write(artifact1, meta1, new ByteArrayInputStream(Bytes.toBytes(contents1)));\n    artifactStore.write(artifact2, meta2, new ByteArrayInputStream(Bytes.toBytes(contents2)));\n\n    try {\n      ArtifactDetail info1 = artifactStore.getArtifact(artifact1);\n      ArtifactDetail info2 = artifactStore.getArtifact(artifact2);\n\n      assertEqual(artifact1, meta1, contents1, info1);\n      assertEqual(artifact2, meta2, contents2, info2);\n\n      List<ArtifactDetail> namespace1Artifacts = artifactStore.getArtifacts(namespace1);\n      List<ArtifactDetail> namespace2Artifacts = artifactStore.getArtifacts(namespace2);\n      Assert.assertEquals(1, namespace1Artifacts.size());\n      assertEqual(artifact1, meta1, contents1, namespace1Artifacts.get(0));\n      Assert.assertEquals(1, namespace2Artifacts.size());\n      assertEqual(artifact2, meta2, contents2, namespace2Artifacts.get(0));\n    } finally {\n      artifactStore.clear(namespace1);\n      artifactStore.clear(namespace2);\n    }\n  }","commit_id":"f5338afed33e163dca077481a293c26d0473e297","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n  public void testGetArtifacts() throws Exception {\n    // add 1 version of another artifact1\n    Id.Artifact artifact1V1 = Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"artifact1\", \"1.0.0\");\n    String contents1V1 = \"first contents v1\";\n    List<PluginClass> plugins1V1 = ImmutableList.of(\n      new PluginClass(\"atype\", \"plugin1\", \"\", \"c.c.c.plugin1\", \"cfg\", ImmutableMap.<String, PluginPropertyField>of())\n    );\n    ArtifactMeta meta1V1 = new ArtifactMeta(plugins1V1);\n    artifactStore.write(artifact1V1, meta1V1, new ByteArrayInputStream(Bytes.toBytes(contents1V1)));\n\n    // add 2 versions of an artifact2\n    Id.Artifact artifact2V1 = Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"artifact2\", \"0.1.0\");\n    Id.Artifact artifact2V2 = Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"artifact2\", \"0.1.1\");\n    String contents2V1 = \"second contents v1\";\n    String contents2V2 = \"second contents v2\";\n    List<PluginClass> plugins2V1 = ImmutableList.of(\n      new PluginClass(\"atype\", \"plugin2\", \"\", \"c.c.c.plugin2\", \"cfg\", ImmutableMap.<String, PluginPropertyField>of())\n    );\n    List<PluginClass> plugins2V2 = ImmutableList.of(\n      new PluginClass(\"atype\", \"plugin2\", \"\", \"c.c.c.plugin2\", \"cfg\", ImmutableMap.<String, PluginPropertyField>of())\n    );\n    ArtifactMeta meta2V1 = new ArtifactMeta(plugins2V1);\n    ArtifactMeta meta2V2 = new ArtifactMeta(plugins2V2);\n    artifactStore.write(artifact2V1, meta2V1, new ByteArrayInputStream(Bytes.toBytes(contents2V1)));\n    artifactStore.write(artifact2V2, meta2V2, new ByteArrayInputStream(Bytes.toBytes(contents2V2)));\n\n    // test we get 1 version of artifact1 and 2 versions of artifact2\n    List<ArtifactDetail> artifact1Versions =\n      artifactStore.getArtifacts(artifact1V1.getNamespace(), artifact1V1.getName());\n    Assert.assertEquals(1, artifact1Versions.size());\n    assertEqual(artifact1V1, meta1V1, contents1V1, artifact1Versions.get(0));\n\n    List<ArtifactDetail> artifact2Versions =\n      artifactStore.getArtifacts(artifact2V1.getNamespace(), artifact2V1.getName());\n    Assert.assertEquals(2, artifact2Versions.size());\n    assertEqual(artifact2V1, meta2V1, contents2V1, artifact2Versions.get(0));\n    assertEqual(artifact2V2, meta2V2, contents2V2, artifact2Versions.get(1));\n\n    // test we get all 3 in the getArtifacts() call for the namespace\n    List<ArtifactDetail> artifactVersions = artifactStore.getArtifacts(Constants.DEFAULT_NAMESPACE_ID);\n    Assert.assertEquals(3, artifactVersions.size());\n    assertEqual(artifact1V1, meta1V1, contents1V1, artifactVersions.get(0));\n    assertEqual(artifact2V1, meta2V1, contents2V1, artifactVersions.get(1));\n    assertEqual(artifact2V2, meta2V2, contents2V2, artifactVersions.get(2));\n\n    // test get using a range\n    // this range should get everything\n    ArtifactRange range = new ArtifactRange(\n      Constants.DEFAULT_NAMESPACE_ID, \"artifact2\", new ArtifactVersion(\"0.1.0\"), new ArtifactVersion(\"0.1.2\"));\n    artifactVersions = artifactStore.getArtifacts(range);\n    Assert.assertEquals(2, artifactVersions.size());\n    assertEqual(artifact2V1, meta2V1, contents2V1, artifactVersions.get(0));\n    assertEqual(artifact2V2, meta2V2, contents2V2, artifactVersions.get(1));\n    // this range should get just v0.1.1\n    range = new ArtifactRange(\n      Constants.DEFAULT_NAMESPACE_ID, \"artifact2\", new ArtifactVersion(\"0.1.1\"), new ArtifactVersion(\"1.0.0\"));\n    artifactVersions = artifactStore.getArtifacts(range);\n    Assert.assertEquals(1, artifactVersions.size());\n    assertEqual(artifact2V2, meta2V2, contents2V2, artifactVersions.get(0));\n    // this range should get just v0.1.0\n    range = new ArtifactRange(\n      Constants.DEFAULT_NAMESPACE_ID, \"artifact2\", new ArtifactVersion(\"0.0.0\"), new ArtifactVersion(\"0.1.1\"));\n    artifactVersions = artifactStore.getArtifacts(range);\n    Assert.assertEquals(1, artifactVersions.size());\n    assertEqual(artifact2V1, meta2V1, contents2V1, artifactVersions.get(0));\n  }","id":50344,"modified_method":"@Test\n  public void testGetArtifacts() throws Exception {\n    // add 1 version of another artifact1\n    Id.Artifact artifact1V1 = Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"artifact1\", \"1.0.0\");\n    String contents1V1 = \"first contents v1\";\n    PluginClass plugin1V1 =\n      new PluginClass(\"atype\", \"plugin1\", \"\", \"c.c.c.plugin1\", \"cfg\", ImmutableMap.<String, PluginPropertyField>of());\n    ArtifactMeta meta1V1 = new ArtifactMeta(ArtifactClasses.builder().addPlugin(plugin1V1).build());\n    artifactStore.write(artifact1V1, meta1V1, new ByteArrayInputStream(Bytes.toBytes(contents1V1)));\n\n    // add 2 versions of an artifact2\n    Id.Artifact artifact2V1 = Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"artifact2\", \"0.1.0\");\n    Id.Artifact artifact2V2 = Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"artifact2\", \"0.1.1\");\n    String contents2V1 = \"second contents v1\";\n    String contents2V2 = \"second contents v2\";\n    PluginClass plugin2V1 =\n      new PluginClass(\"atype\", \"plugin2\", \"\", \"c.c.c.plugin2\", \"cfg\", ImmutableMap.<String, PluginPropertyField>of());\n    PluginClass plugin2V2 =\n      new PluginClass(\"atype\", \"plugin2\", \"\", \"c.c.c.plugin2\", \"cfg\", ImmutableMap.<String, PluginPropertyField>of());\n    ArtifactMeta meta2V1 = new ArtifactMeta(ArtifactClasses.builder().addPlugin(plugin2V1).build());\n    ArtifactMeta meta2V2 = new ArtifactMeta(ArtifactClasses.builder().addPlugin(plugin2V2).build());\n    artifactStore.write(artifact2V1, meta2V1, new ByteArrayInputStream(Bytes.toBytes(contents2V1)));\n    artifactStore.write(artifact2V2, meta2V2, new ByteArrayInputStream(Bytes.toBytes(contents2V2)));\n\n    // test we get 1 version of artifact1 and 2 versions of artifact2\n    List<ArtifactDetail> artifact1Versions =\n      artifactStore.getArtifacts(artifact1V1.getNamespace(), artifact1V1.getName());\n    Assert.assertEquals(1, artifact1Versions.size());\n    assertEqual(artifact1V1, meta1V1, contents1V1, artifact1Versions.get(0));\n\n    List<ArtifactDetail> artifact2Versions =\n      artifactStore.getArtifacts(artifact2V1.getNamespace(), artifact2V1.getName());\n    Assert.assertEquals(2, artifact2Versions.size());\n    assertEqual(artifact2V1, meta2V1, contents2V1, artifact2Versions.get(0));\n    assertEqual(artifact2V2, meta2V2, contents2V2, artifact2Versions.get(1));\n\n    // test we get all 3 in the getArtifacts() call for the namespace\n    List<ArtifactDetail> artifactVersions = artifactStore.getArtifacts(Constants.DEFAULT_NAMESPACE_ID);\n    Assert.assertEquals(3, artifactVersions.size());\n    assertEqual(artifact1V1, meta1V1, contents1V1, artifactVersions.get(0));\n    assertEqual(artifact2V1, meta2V1, contents2V1, artifactVersions.get(1));\n    assertEqual(artifact2V2, meta2V2, contents2V2, artifactVersions.get(2));\n\n    // test get using a range\n    // this range should get everything\n    ArtifactRange range = new ArtifactRange(\n      Constants.DEFAULT_NAMESPACE_ID, \"artifact2\", new ArtifactVersion(\"0.1.0\"), new ArtifactVersion(\"0.1.2\"));\n    artifactVersions = artifactStore.getArtifacts(range);\n    Assert.assertEquals(2, artifactVersions.size());\n    assertEqual(artifact2V1, meta2V1, contents2V1, artifactVersions.get(0));\n    assertEqual(artifact2V2, meta2V2, contents2V2, artifactVersions.get(1));\n    // this range should get just v0.1.1\n    range = new ArtifactRange(\n      Constants.DEFAULT_NAMESPACE_ID, \"artifact2\", new ArtifactVersion(\"0.1.1\"), new ArtifactVersion(\"1.0.0\"));\n    artifactVersions = artifactStore.getArtifacts(range);\n    Assert.assertEquals(1, artifactVersions.size());\n    assertEqual(artifact2V2, meta2V2, contents2V2, artifactVersions.get(0));\n    // this range should get just v0.1.0\n    range = new ArtifactRange(\n      Constants.DEFAULT_NAMESPACE_ID, \"artifact2\", new ArtifactVersion(\"0.0.0\"), new ArtifactVersion(\"0.1.1\"));\n    artifactVersions = artifactStore.getArtifacts(range);\n    Assert.assertEquals(1, artifactVersions.size());\n    assertEqual(artifact2V1, meta2V1, contents2V1, artifactVersions.get(0));\n  }","commit_id":"f5338afed33e163dca077481a293c26d0473e297","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n  public void testAddGetSingleArtifact() throws Exception {\n    Id.Artifact artifactId = Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"myplugins\", \"1.0.0\");\n    List<PluginClass> plugins = ImmutableList.of(\n      new PluginClass(\"atype\", \"plugin1\", \"\", \"c.c.c.plugin1\", \"cfg\", ImmutableMap.<String, PluginPropertyField>of()),\n      new PluginClass(\"atype\", \"plugin2\", \"\", \"c.c.c.plugin2\", \"cfg\", ImmutableMap.<String, PluginPropertyField>of())\n    );\n    ArtifactMeta artifactMeta = new ArtifactMeta(plugins);\n\n    String artifactContents = \"my artifact contents\";\n    artifactStore.write(artifactId, artifactMeta, new ByteArrayInputStream(Bytes.toBytes(artifactContents)));\n\n    ArtifactDetail artifactDetail = artifactStore.getArtifact(artifactId);\n    assertEqual(artifactId, artifactMeta, artifactContents, artifactDetail);\n  }","id":50345,"modified_method":"@Test\n  public void testAddGetSingleArtifact() throws Exception {\n    Id.Artifact artifactId = Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"myplugins\", \"1.0.0\");\n    List<PluginClass> plugins = ImmutableList.of(\n      new PluginClass(\"atype\", \"plugin1\", \"\", \"c.c.c.plugin1\", \"cfg\", ImmutableMap.<String, PluginPropertyField>of()),\n      new PluginClass(\"atype\", \"plugin2\", \"\", \"c.c.c.plugin2\", \"cfg\", ImmutableMap.<String, PluginPropertyField>of())\n    );\n    ApplicationClass appClass = new ApplicationClass(\n      InspectionApp.class.getName(), \"\",\n      new ReflectionSchemaGenerator().generate(InspectionApp.AConfig.class));\n    ArtifactMeta artifactMeta =\n      new ArtifactMeta(ArtifactClasses.builder().addPlugins(plugins).addApp(appClass).build());\n\n    String artifactContents = \"my artifact contents\";\n    artifactStore.write(artifactId, artifactMeta, new ByteArrayInputStream(Bytes.toBytes(artifactContents)));\n\n    ArtifactDetail artifactDetail = artifactStore.getArtifact(artifactId);\n    assertEqual(artifactId, artifactMeta, artifactContents, artifactDetail);\n  }","commit_id":"f5338afed33e163dca077481a293c26d0473e297","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n  public void testGetPlugins() throws Exception {\n    ArtifactRange parentArtifacts = new ArtifactRange(\n      Constants.DEFAULT_NAMESPACE_ID, \"parent\", new ArtifactVersion(\"1.0.0\"), new ArtifactVersion(\"2.0.0\"));\n    // we have 2 plugins of type A and 2 plugins of type B\n    PluginClass pluginA1 = new PluginClass(\n      \"A\", \"p1\", \"desc\", \"c.p1\", \"cfg\",\n      ImmutableMap.of(\n        \"threshold\", new PluginPropertyField(\"thresh\", \"description\", \"double\", true),\n        \"retry\", new PluginPropertyField(\"retries\", \"description\", \"int\", false)\n      )\n    );\n    PluginClass pluginA2 = new PluginClass(\n      \"A\", \"p2\", \"desc\", \"c.p2\", \"conf\",\n      ImmutableMap.of(\n        \"stream\", new PluginPropertyField(\"stream\", \"description\", \"string\", true)\n      )\n    );\n    PluginClass pluginB1 = new PluginClass(\n      \"B\", \"p1\", \"desc\", \"c.p1\", \"cfg\",\n      ImmutableMap.of(\n        \"createIfNotExist\", new PluginPropertyField(\"createIfNotExist\", \"desc\", \"boolean\", false)\n      )\n    );\n    PluginClass pluginB2 = new PluginClass(\n      \"B\", \"p2\", \"desc\", \"c.p2\", \"stuff\",\n      ImmutableMap.of(\n        \"numer\", new PluginPropertyField(\"numerator\", \"description\", \"double\", true),\n        \"denom\", new PluginPropertyField(\"denominator\", \"description\", \"double\", true)\n      )\n    );\n\n    // add artifacts\n\n    // not interested in artifact contents for this test, using some dummy value\n    byte[] contents = new byte[] { 0 };\n\n    // artifact artifactX-1.0.0 contains plugin A1\n    Id.Artifact artifactXv100 = Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"artifactX\", \"1.0.0\");\n    ArtifactMeta metaXv100 = new ArtifactMeta(ImmutableList.of(pluginA1), ImmutableSet.of(parentArtifacts));\n    artifactStore.write(artifactXv100, metaXv100, new ByteArrayInputStream(contents));\n    ArtifactDescriptor artifactXv100Info = artifactStore.getArtifact(artifactXv100).getDescriptor();\n\n    // artifact artifactX-1.1.0 contains plugin A1\n    Id.Artifact artifactXv110 = Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"artifactX\", \"1.1.0\");\n    ArtifactMeta metaXv110 = new ArtifactMeta(ImmutableList.of(pluginA1), ImmutableSet.of(parentArtifacts));\n    artifactStore.write(artifactXv110, metaXv110, new ByteArrayInputStream(contents));\n    ArtifactDescriptor artifactXv110Info = artifactStore.getArtifact(artifactXv110).getDescriptor();\n\n    // artifact artifactX-2.0.0 contains plugins A1 and A2\n    Id.Artifact artifactXv200 = Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"artifactX\", \"2.0.0\");\n    ArtifactMeta metaXv200 = new ArtifactMeta(ImmutableList.of(pluginA1, pluginA2), ImmutableSet.of(parentArtifacts));\n    artifactStore.write(artifactXv200, metaXv200, new ByteArrayInputStream(contents));\n    ArtifactDescriptor artifactXv200Info = artifactStore.getArtifact(artifactXv200).getDescriptor();\n\n    // artifact artifactY-1.0.0 contains plugin B1\n    Id.Artifact artifactYv100 = Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"artifactY\", \"1.0.0\");\n    ArtifactMeta metaYv100 = new ArtifactMeta(ImmutableList.of(pluginB1), ImmutableSet.of(parentArtifacts));\n    artifactStore.write(artifactYv100, metaYv100, new ByteArrayInputStream(contents));\n    ArtifactDescriptor artifactYv100Info = artifactStore.getArtifact(artifactYv100).getDescriptor();\n\n    // artifact artifactY-2.0.0 contains plugin B2\n    Id.Artifact artifactYv200 = Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"artifactY\", \"2.0.0\");\n    ArtifactMeta metaYv200 = new ArtifactMeta(ImmutableList.of(pluginB2), ImmutableSet.of(parentArtifacts));\n    artifactStore.write(artifactYv200, metaYv200, new ByteArrayInputStream(contents));\n    ArtifactDescriptor artifactYv200Info = artifactStore.getArtifact(artifactYv200).getDescriptor();\n\n    // artifact artifactZ-1.0.0 contains plugins A1 and B1\n    Id.Artifact artifactZv100 = Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"artifactZ\", \"1.0.0\");\n    ArtifactMeta metaZv100 = new ArtifactMeta(ImmutableList.of(pluginA1, pluginB1), ImmutableSet.of(parentArtifacts));\n    artifactStore.write(artifactZv100, metaZv100, new ByteArrayInputStream(contents));\n    ArtifactDescriptor artifactZv100Info = artifactStore.getArtifact(artifactZv100).getDescriptor();\n\n    // artifact artifactZ-2.0.0 contains plugins A1, A2, B1, and B2\n    Id.Artifact artifactZv200 = Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"artifactZ\", \"2.0.0\");\n    ArtifactMeta metaZv200 = new ArtifactMeta(\n      ImmutableList.of(pluginA1, pluginA2, pluginB1, pluginB2), ImmutableSet.of(parentArtifacts));\n    artifactStore.write(artifactZv200, metaZv200, new ByteArrayInputStream(contents));\n    ArtifactDescriptor artifactZv200Info = artifactStore.getArtifact(artifactZv200).getDescriptor();\n\n    Id.Artifact parentArtifactId = Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"parent\", \"1.0.0\");\n    // test getting all plugins in the namespace\n    Map<ArtifactDescriptor, List<PluginClass>> expected = Maps.newHashMap();\n    expected.put(artifactXv100Info, ImmutableList.of(pluginA1));\n    expected.put(artifactXv110Info, ImmutableList.of(pluginA1));\n    expected.put(artifactXv200Info, ImmutableList.of(pluginA1, pluginA2));\n    expected.put(artifactYv100Info, ImmutableList.of(pluginB1));\n    expected.put(artifactYv200Info, ImmutableList.of(pluginB2));\n    expected.put(artifactZv100Info, ImmutableList.of(pluginA1, pluginB1));\n    expected.put(artifactZv200Info, ImmutableList.of(pluginA1, pluginA2, pluginB1, pluginB2));\n    Map<ArtifactDescriptor, List<PluginClass>> actual = artifactStore.getPluginClasses(parentArtifactId);\n    Assert.assertEquals(expected, actual);\n\n    // test getting all plugins by namespace and type\n    // get all of type A\n    expected = Maps.newHashMap();\n    expected.put(artifactXv100Info, ImmutableList.of(pluginA1));\n    expected.put(artifactXv110Info, ImmutableList.of(pluginA1));\n    expected.put(artifactXv200Info, ImmutableList.of(pluginA1, pluginA2));\n    expected.put(artifactZv100Info, ImmutableList.of(pluginA1));\n    expected.put(artifactZv200Info, ImmutableList.of(pluginA1, pluginA2));\n    actual = artifactStore.getPluginClasses(parentArtifactId, \"A\");\n    Assert.assertEquals(expected, actual);\n    // get all of type B\n    expected = Maps.newHashMap();\n    expected.put(artifactYv100Info, ImmutableList.of(pluginB1));\n    expected.put(artifactYv200Info, ImmutableList.of(pluginB2));\n    expected.put(artifactZv100Info, ImmutableList.of(pluginB1));\n    expected.put(artifactZv200Info, ImmutableList.of(pluginB1, pluginB2));\n    actual = artifactStore.getPluginClasses(parentArtifactId, \"B\");\n    Assert.assertEquals(expected, actual);\n\n    // test getting plugins by namespace, type, and name\n    // get all of type A and name p1\n    Map<ArtifactDescriptor, PluginClass> expectedMap = Maps.newHashMap();\n    expectedMap.put(artifactXv100Info, pluginA1);\n    expectedMap.put(artifactXv110Info, pluginA1);\n    expectedMap.put(artifactXv200Info, pluginA1);\n    expectedMap.put(artifactZv100Info, pluginA1);\n    expectedMap.put(artifactZv200Info, pluginA1);\n    Map<ArtifactDescriptor, PluginClass> actualMap = artifactStore.getPluginClasses(parentArtifactId, \"A\", \"p1\");\n    Assert.assertEquals(expectedMap, actualMap);\n    // get all of type A and name p2\n    expectedMap = Maps.newHashMap();\n    expectedMap.put(artifactXv200Info, pluginA2);\n    expectedMap.put(artifactZv200Info, pluginA2);\n    actualMap = artifactStore.getPluginClasses(parentArtifactId, \"A\", \"p2\");\n    Assert.assertEquals(expectedMap, actualMap);\n    // get all of type B and name p1\n    expectedMap = Maps.newHashMap();\n    expectedMap.put(artifactYv100Info, pluginB1);\n    expectedMap.put(artifactZv100Info, pluginB1);\n    expectedMap.put(artifactZv200Info, pluginB1);\n    actualMap = artifactStore.getPluginClasses(parentArtifactId, \"B\", \"p1\");\n    Assert.assertEquals(expectedMap, actualMap);\n    // get all of type B and name p2\n    expectedMap = Maps.newHashMap();\n    expectedMap.put(artifactYv200Info, pluginB2);\n    expectedMap.put(artifactZv200Info, pluginB2);\n    actualMap = artifactStore.getPluginClasses(parentArtifactId, \"B\", \"p2\");\n    Assert.assertEquals(expectedMap, actualMap);\n  }","id":50346,"modified_method":"@Test\n  public void testGetPlugins() throws Exception {\n    ArtifactRange parentArtifacts = new ArtifactRange(\n      Constants.DEFAULT_NAMESPACE_ID, \"parent\", new ArtifactVersion(\"1.0.0\"), new ArtifactVersion(\"2.0.0\"));\n    // we have 2 plugins of type A and 2 plugins of type B\n    PluginClass pluginA1 = new PluginClass(\n      \"A\", \"p1\", \"desc\", \"c.p1\", \"cfg\",\n      ImmutableMap.of(\n        \"threshold\", new PluginPropertyField(\"thresh\", \"description\", \"double\", true),\n        \"retry\", new PluginPropertyField(\"retries\", \"description\", \"int\", false)\n      )\n    );\n    PluginClass pluginA2 = new PluginClass(\n      \"A\", \"p2\", \"desc\", \"c.p2\", \"conf\",\n      ImmutableMap.of(\n        \"stream\", new PluginPropertyField(\"stream\", \"description\", \"string\", true)\n      )\n    );\n    PluginClass pluginB1 = new PluginClass(\n      \"B\", \"p1\", \"desc\", \"c.p1\", \"cfg\",\n      ImmutableMap.of(\n        \"createIfNotExist\", new PluginPropertyField(\"createIfNotExist\", \"desc\", \"boolean\", false)\n      )\n    );\n    PluginClass pluginB2 = new PluginClass(\n      \"B\", \"p2\", \"desc\", \"c.p2\", \"stuff\",\n      ImmutableMap.of(\n        \"numer\", new PluginPropertyField(\"numerator\", \"description\", \"double\", true),\n        \"denom\", new PluginPropertyField(\"denominator\", \"description\", \"double\", true)\n      )\n    );\n\n    // add artifacts\n\n    // not interested in artifact contents for this test, using some dummy value\n    byte[] contents = new byte[] { 0 };\n\n    // artifact artifactX-1.0.0 contains plugin A1\n    Id.Artifact artifactXv100 = Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"artifactX\", \"1.0.0\");\n    ArtifactMeta metaXv100 = new ArtifactMeta(\n      ArtifactClasses.builder().addPlugin(pluginA1).build(), ImmutableSet.of(parentArtifacts));\n    artifactStore.write(artifactXv100, metaXv100, new ByteArrayInputStream(contents));\n    ArtifactDescriptor artifactXv100Info = artifactStore.getArtifact(artifactXv100).getDescriptor();\n\n    // artifact artifactX-1.1.0 contains plugin A1\n    Id.Artifact artifactXv110 = Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"artifactX\", \"1.1.0\");\n    ArtifactMeta metaXv110 = new ArtifactMeta(\n      ArtifactClasses.builder().addPlugin(pluginA1).build(), ImmutableSet.of(parentArtifacts));\n    artifactStore.write(artifactXv110, metaXv110, new ByteArrayInputStream(contents));\n    ArtifactDescriptor artifactXv110Info = artifactStore.getArtifact(artifactXv110).getDescriptor();\n\n    // artifact artifactX-2.0.0 contains plugins A1 and A2\n    Id.Artifact artifactXv200 = Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"artifactX\", \"2.0.0\");\n    ArtifactMeta metaXv200 = new ArtifactMeta(\n      ArtifactClasses.builder().addPlugins(pluginA1, pluginA2).build(), ImmutableSet.of(parentArtifacts));\n    artifactStore.write(artifactXv200, metaXv200, new ByteArrayInputStream(contents));\n    ArtifactDescriptor artifactXv200Info = artifactStore.getArtifact(artifactXv200).getDescriptor();\n\n    // artifact artifactY-1.0.0 contains plugin B1\n    Id.Artifact artifactYv100 = Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"artifactY\", \"1.0.0\");\n    ArtifactMeta metaYv100 = new ArtifactMeta(\n      ArtifactClasses.builder().addPlugin(pluginB1).build(), ImmutableSet.of(parentArtifacts));\n    artifactStore.write(artifactYv100, metaYv100, new ByteArrayInputStream(contents));\n    ArtifactDescriptor artifactYv100Info = artifactStore.getArtifact(artifactYv100).getDescriptor();\n\n    // artifact artifactY-2.0.0 contains plugin B2\n    Id.Artifact artifactYv200 = Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"artifactY\", \"2.0.0\");\n    ArtifactMeta metaYv200 = new ArtifactMeta(\n      ArtifactClasses.builder().addPlugin(pluginB2).build(), ImmutableSet.of(parentArtifacts));\n    artifactStore.write(artifactYv200, metaYv200, new ByteArrayInputStream(contents));\n    ArtifactDescriptor artifactYv200Info = artifactStore.getArtifact(artifactYv200).getDescriptor();\n\n    // artifact artifactZ-1.0.0 contains plugins A1 and B1\n    Id.Artifact artifactZv100 = Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"artifactZ\", \"1.0.0\");\n    ArtifactMeta metaZv100 = new ArtifactMeta(\n      ArtifactClasses.builder().addPlugins(pluginA1, pluginB1).build(), ImmutableSet.of(parentArtifacts));\n    artifactStore.write(artifactZv100, metaZv100, new ByteArrayInputStream(contents));\n    ArtifactDescriptor artifactZv100Info = artifactStore.getArtifact(artifactZv100).getDescriptor();\n\n    // artifact artifactZ-2.0.0 contains plugins A1, A2, B1, and B2\n    Id.Artifact artifactZv200 = Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"artifactZ\", \"2.0.0\");\n    ArtifactMeta metaZv200 = new ArtifactMeta(\n      ArtifactClasses.builder().addPlugins(pluginA1, pluginA2, pluginB1, pluginB2).build(),\n      ImmutableSet.of(parentArtifacts));\n    artifactStore.write(artifactZv200, metaZv200, new ByteArrayInputStream(contents));\n    ArtifactDescriptor artifactZv200Info = artifactStore.getArtifact(artifactZv200).getDescriptor();\n\n    Id.Artifact parentArtifactId = Id.Artifact.from(Constants.DEFAULT_NAMESPACE_ID, \"parent\", \"1.0.0\");\n    // test getting all plugins in the namespace\n    Map<ArtifactDescriptor, List<PluginClass>> expected = Maps.newHashMap();\n    expected.put(artifactXv100Info, ImmutableList.of(pluginA1));\n    expected.put(artifactXv110Info, ImmutableList.of(pluginA1));\n    expected.put(artifactXv200Info, ImmutableList.of(pluginA1, pluginA2));\n    expected.put(artifactYv100Info, ImmutableList.of(pluginB1));\n    expected.put(artifactYv200Info, ImmutableList.of(pluginB2));\n    expected.put(artifactZv100Info, ImmutableList.of(pluginA1, pluginB1));\n    expected.put(artifactZv200Info, ImmutableList.of(pluginA1, pluginA2, pluginB1, pluginB2));\n    Map<ArtifactDescriptor, List<PluginClass>> actual = artifactStore.getPluginClasses(parentArtifactId);\n    Assert.assertEquals(expected, actual);\n\n    // test getting all plugins by namespace and type\n    // get all of type A\n    expected = Maps.newHashMap();\n    expected.put(artifactXv100Info, ImmutableList.of(pluginA1));\n    expected.put(artifactXv110Info, ImmutableList.of(pluginA1));\n    expected.put(artifactXv200Info, ImmutableList.of(pluginA1, pluginA2));\n    expected.put(artifactZv100Info, ImmutableList.of(pluginA1));\n    expected.put(artifactZv200Info, ImmutableList.of(pluginA1, pluginA2));\n    actual = artifactStore.getPluginClasses(parentArtifactId, \"A\");\n    Assert.assertEquals(expected, actual);\n    // get all of type B\n    expected = Maps.newHashMap();\n    expected.put(artifactYv100Info, ImmutableList.of(pluginB1));\n    expected.put(artifactYv200Info, ImmutableList.of(pluginB2));\n    expected.put(artifactZv100Info, ImmutableList.of(pluginB1));\n    expected.put(artifactZv200Info, ImmutableList.of(pluginB1, pluginB2));\n    actual = artifactStore.getPluginClasses(parentArtifactId, \"B\");\n    Assert.assertEquals(expected, actual);\n\n    // test getting plugins by namespace, type, and name\n    // get all of type A and name p1\n    Map<ArtifactDescriptor, PluginClass> expectedMap = Maps.newHashMap();\n    expectedMap.put(artifactXv100Info, pluginA1);\n    expectedMap.put(artifactXv110Info, pluginA1);\n    expectedMap.put(artifactXv200Info, pluginA1);\n    expectedMap.put(artifactZv100Info, pluginA1);\n    expectedMap.put(artifactZv200Info, pluginA1);\n    Map<ArtifactDescriptor, PluginClass> actualMap = artifactStore.getPluginClasses(parentArtifactId, \"A\", \"p1\");\n    Assert.assertEquals(expectedMap, actualMap);\n    // get all of type A and name p2\n    expectedMap = Maps.newHashMap();\n    expectedMap.put(artifactXv200Info, pluginA2);\n    expectedMap.put(artifactZv200Info, pluginA2);\n    actualMap = artifactStore.getPluginClasses(parentArtifactId, \"A\", \"p2\");\n    Assert.assertEquals(expectedMap, actualMap);\n    // get all of type B and name p1\n    expectedMap = Maps.newHashMap();\n    expectedMap.put(artifactYv100Info, pluginB1);\n    expectedMap.put(artifactZv100Info, pluginB1);\n    expectedMap.put(artifactZv200Info, pluginB1);\n    actualMap = artifactStore.getPluginClasses(parentArtifactId, \"B\", \"p1\");\n    Assert.assertEquals(expectedMap, actualMap);\n    // get all of type B and name p2\n    expectedMap = Maps.newHashMap();\n    expectedMap.put(artifactYv200Info, pluginB2);\n    expectedMap.put(artifactZv200Info, pluginB2);\n    actualMap = artifactStore.getPluginClasses(parentArtifactId, \"B\", \"p2\");\n    Assert.assertEquals(expectedMap, actualMap);\n  }","commit_id":"f5338afed33e163dca077481a293c26d0473e297","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n  public void testExternalConfig() throws IOException {\n    // For testing plugins that are configure externally through a json file.\n    // Create a jar, without any export package information\n    createJar(TestPlugin.class, new File(templatePluginDir, \"external-plugin-1.0.jar\"));\n\n    // Create a config json file that expose two plugins (to the same class).\n    // One of the plugin has no property field\n    List<JsonObject> pluginDefs = ImmutableList.of(\n      createPluginJson(\"plugin\", \"External\", \"External Plugin\", TestPlugin.class.getName(),\n                       new PluginPropertyField(\"class.name\", \"Name of the class\", \"string\", true),\n                       new PluginPropertyField(\"timeout\", \"Timeout value\", \"long\", false)\n      ),\n      createPluginJson(\"plugin2\", \"External2\", \"External Plugin2\", TestPlugin.class.getName())\n    );\n\n    File configFile = new File(templatePluginDir, \"external-plugin-1.0.json\");\n    try (Writer writer = Files.newWriter(configFile, Charsets.UTF_8)) {\n      GSON.toJson(pluginDefs, writer);\n    }\n\n    // Build up the plugin repository.\n    PluginRepository repository = new PluginRepository(cConf);\n    TreeMultimap<PluginInfo, PluginClass> plugins = repository.inspectPlugins(TEMPLATE_NAME, appTemplateJar);\n\n    // There should be one for the external-plugin\n    PluginInfo pluginInfo = null;\n    for (Map.Entry<PluginInfo, PluginClass> entry : plugins.entries()) {\n      if (entry.getKey().getName().equals(\"external-plugin\")) {\n        pluginInfo = entry.getKey();\n        break;\n      }\n    }\n\n    Assert.assertNotNull(pluginInfo);\n\n    // There should be two plugin classes\n    Assert.assertEquals(2, plugins.get(pluginInfo).size());\n\n    // The first one have two property fields, the second one has no property field\n    // The collection is always sorted by the plugin name (guaranteed by plugin repository\n    PluginClass pluginClass = plugins.get(pluginInfo).first();\n    Assert.assertEquals(\"External\", pluginClass.getName());\n    Assert.assertEquals(2, pluginClass.getProperties().size());\n\n    pluginClass = plugins.get(pluginInfo).last();\n    Assert.assertEquals(\"External2\", pluginClass.getName());\n    Assert.assertEquals(0, pluginClass.getProperties().size());\n  }","id":50347,"modified_method":"@Test\n  public void testExternalConfig() throws IOException {\n    // For testing plugins that are configure externally through a json file.\n    // Create a jar, without any export package information\n    createPluginJar(TestPlugin.class, new File(templatePluginDir, \"external-plugin-1.0.jar\"), new Manifest());\n\n    // Create a config json file that expose two plugins (to the same class).\n    // One of the plugin has no property field\n    List<JsonObject> pluginDefs = ImmutableList.of(\n      createPluginJson(\"plugin\", \"External\", \"External Plugin\", TestPlugin.class.getName(),\n                       new PluginPropertyField(\"class.name\", \"Name of the class\", \"string\", true),\n                       new PluginPropertyField(\"timeout\", \"Timeout value\", \"long\", false)\n      ),\n      createPluginJson(\"plugin2\", \"External2\", \"External Plugin2\", TestPlugin.class.getName())\n    );\n\n    File configFile = new File(templatePluginDir, \"external-plugin-1.0.json\");\n    try (Writer writer = Files.newWriter(configFile, Charsets.UTF_8)) {\n      GSON.toJson(pluginDefs, writer);\n    }\n\n    // Build up the plugin repository.\n    PluginRepository repository = new PluginRepository(cConf);\n    TreeMultimap<PluginInfo, PluginClass> plugins = repository.inspectPlugins(TEMPLATE_NAME, appTemplateJar);\n\n    // There should be one for the external-plugin\n    PluginInfo pluginInfo = null;\n    for (Map.Entry<PluginInfo, PluginClass> entry : plugins.entries()) {\n      if (entry.getKey().getName().equals(\"external-plugin\")) {\n        pluginInfo = entry.getKey();\n        break;\n      }\n    }\n\n    Assert.assertNotNull(pluginInfo);\n\n    // There should be two plugin classes\n    Assert.assertEquals(2, plugins.get(pluginInfo).size());\n\n    // The first one have two property fields, the second one has no property field\n    // The collection is always sorted by the plugin name (guaranteed by plugin repository\n    PluginClass pluginClass = plugins.get(pluginInfo).first();\n    Assert.assertEquals(\"External\", pluginClass.getName());\n    Assert.assertEquals(2, pluginClass.getProperties().size());\n\n    pluginClass = plugins.get(pluginInfo).last();\n    Assert.assertEquals(\"External2\", pluginClass.getName());\n    Assert.assertEquals(0, pluginClass.getProperties().size());\n  }","commit_id":"f5338afed33e163dca077481a293c26d0473e297","url":"https://github.com/caskdata/cdap"},{"original_method":"private static File createJar(Class<?> cls, File destFile) throws IOException {\n    return createJar(cls, destFile, new Manifest());\n  }","id":50348,"modified_method":"private static File createPluginJar(Class<?> cls, File destFile, Manifest manifest) throws IOException {\n    Location deploymentJar = PluginJarHelper.createPluginJar(new LocalLocationFactory(TMP_FOLDER.newFolder()),\n      manifest, cls);\n    DirUtils.mkdirs(destFile.getParentFile());\n    Files.copy(Locations.newInputSupplier(deploymentJar), destFile);\n    return destFile;\n  }","commit_id":"f5338afed33e163dca077481a293c26d0473e297","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n  public void testPlugin() throws Exception {\n    // Create the plugin jar. There should be two plugins there (TestPlugin and TestPlugin2).\n    Manifest manifest = createManifest(ManifestFields.EXPORT_PACKAGE, TestPlugin.class.getPackage().getName());\n    createJar(TestPlugin.class, new File(templatePluginDir, \"myPlugin-1.0.jar\"), manifest);\n\n    // Build up the plugin repository.\n    PluginRepository repository = new PluginRepository(cConf);\n    Multimap<PluginInfo, PluginClass> pluginInfos = repository.inspectPlugins(TEMPLATE_NAME, appTemplateJar);\n    Assert.assertEquals(2, pluginInfos.size());\n\n    // Instantiate the plugins and execute them\n    PluginInstantiator instantiator = new PluginInstantiator(cConf, TEMPLATE_NAME, templateClassLoader);\n    for (Map.Entry<PluginInfo, PluginClass> entry : pluginInfos.entries()) {\n      Callable<String> plugin = instantiator.newInstance(entry.getKey(), entry.getValue(),\n                                                         PluginProperties.builder()\n                                                          .add(\"class.name\", TEST_EMPTY_CLASS)\n                                                          .add(\"timeout\", \"10\")\n                                                          .build()\n      );\n\n      Assert.assertEquals(TEST_EMPTY_CLASS, plugin.call());\n    }\n  }","id":50349,"modified_method":"@Test\n  public void testPlugin() throws Exception {\n    // Create the plugin jar. There should be two plugins there (TestPlugin and TestPlugin2).\n    Manifest manifest = createManifest(ManifestFields.EXPORT_PACKAGE, TestPlugin.class.getPackage().getName());\n    createPluginJar(TestPlugin.class, new File(templatePluginDir, \"myPlugin-1.0.jar\"), manifest);\n\n    // Build up the plugin repository.\n    PluginRepository repository = new PluginRepository(cConf);\n    Multimap<PluginInfo, PluginClass> pluginInfos = repository.inspectPlugins(TEMPLATE_NAME, appTemplateJar);\n    Assert.assertEquals(2, pluginInfos.size());\n\n    // Instantiate the plugins and execute them\n    PluginInstantiator instantiator = new PluginInstantiator(cConf, TEMPLATE_NAME, templateClassLoader);\n    for (Map.Entry<PluginInfo, PluginClass> entry : pluginInfos.entries()) {\n      Callable<String> plugin = instantiator.newInstance(entry.getKey(), entry.getValue(),\n                                                         PluginProperties.builder()\n                                                          .add(\"class.name\", TEST_EMPTY_CLASS)\n                                                          .add(\"timeout\", \"10\")\n                                                          .build()\n      );\n\n      Assert.assertEquals(TEST_EMPTY_CLASS, plugin.call());\n    }\n  }","commit_id":"f5338afed33e163dca077481a293c26d0473e297","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n  public void testPluginSelector() throws IOException, ClassNotFoundException {\n    PluginRepository repository = new PluginRepository(cConf);\n\n    // No plugin yet\n    Map.Entry<PluginInfo, PluginClass> plugin = repository.findPlugin(TEMPLATE_NAME,\n                                                                      \"plugin\", \"TestPlugin2\", new PluginSelector());\n    Assert.assertNull(plugin);\n\n    // Create a plugin jar. It contains two plugins, TestPlugin and TestPlugin2 inside.\n    Manifest manifest = createManifest(ManifestFields.EXPORT_PACKAGE, TestPlugin.class.getPackage().getName());\n    createJar(TestPlugin.class, new File(templatePluginDir, \"myPlugin-1.0.jar\"), manifest);\n\n    // Build up the plugin repository.\n    repository.inspectPlugins(ImmutableList.of(appTemplateInfo));\n\n    // Should get the only version.\n    plugin = repository.findPlugin(TEMPLATE_NAME, \"plugin\", \"TestPlugin2\", new PluginSelector());\n    Assert.assertNotNull(plugin);\n    Assert.assertEquals(new PluginVersion(\"1.0\"), plugin.getKey().getVersion());\n    Assert.assertEquals(\"TestPlugin2\", plugin.getValue().getName());\n\n    // Create another plugin jar with later version and update the repository\n    createJar(TestPlugin.class, new File(templatePluginDir, \"myPlugin-2.0.jar\"), manifest);\n    repository.inspectPlugins(ImmutableList.of(appTemplateInfo));\n\n    // Should select the latest version\n    plugin = repository.findPlugin(TEMPLATE_NAME, \"plugin\", \"TestPlugin2\", new PluginSelector());\n    Assert.assertNotNull(plugin);\n    Assert.assertEquals(new PluginVersion(\"2.0\"), plugin.getKey().getVersion());\n    Assert.assertEquals(\"TestPlugin2\", plugin.getValue().getName());\n\n    // Load the Plugin class and the common \"EmptyClass\" from the classLoader.\n    PluginInstantiator instantiator = new PluginInstantiator(cConf, TEMPLATE_NAME, templateClassLoader);\n    ClassLoader pluginClassLoader = instantiator.getPluginClassLoader(plugin.getKey());\n    Class<?> pluginClass = pluginClassLoader.loadClass(TestPlugin2.class.getName());\n    Class<?> emptyClass = pluginClassLoader.loadClass(TEST_EMPTY_CLASS);\n\n    // Use a custom plugin selector to select with smallest version\n    plugin = repository.findPlugin(TEMPLATE_NAME, \"plugin\", \"TestPlugin2\", new PluginSelector() {\n      @Override\n      public Map.Entry<PluginInfo, PluginClass> select(SortedMap<PluginInfo, PluginClass> plugins) {\n        return plugins.entrySet().iterator().next();\n      }\n    });\n    Assert.assertNotNull(plugin);\n    Assert.assertEquals(new PluginVersion(\"1.0\"), plugin.getKey().getVersion());\n    Assert.assertEquals(\"TestPlugin2\", plugin.getValue().getName());\n\n    // Load the Plugin class and the \"EmptyClass\" again from the current plugin selected\n    // The plugin class should be different (from different ClassLoader)\n    // The empty class should be the same (from the plugin lib ClassLoader)\n    pluginClassLoader = instantiator.getPluginClassLoader(plugin.getKey());\n    Assert.assertNotSame(pluginClass, pluginClassLoader.loadClass(TestPlugin2.class.getName()));\n    Assert.assertSame(emptyClass, pluginClassLoader.loadClass(TEST_EMPTY_CLASS));\n\n    // From the pluginClassLoader, loading export classes from the template jar should be allowed\n    Class<?> cls = pluginClassLoader.loadClass(PluginTestRunnable.class.getName());\n    // The class should be loaded from the template classloader\n    Assert.assertSame(templateClassLoader.loadClass(PluginTestRunnable.class.getName()), cls);\n\n    // From the plugin classloader, all cdap api classes is loadable as well.\n    cls = pluginClassLoader.loadClass(Application.class.getName());\n    // The Application class should be the same as the one in the system classloader\n    Assert.assertSame(Application.class, cls);\n  }","id":50350,"modified_method":"@Test\n  public void testPluginSelector() throws IOException, ClassNotFoundException {\n    PluginRepository repository = new PluginRepository(cConf);\n\n    // No plugin yet\n    Map.Entry<PluginInfo, PluginClass> plugin = repository.findPlugin(TEMPLATE_NAME,\n                                                                      \"plugin\", \"TestPlugin2\", new PluginSelector());\n    Assert.assertNull(plugin);\n\n    // Create a plugin jar. It contains two plugins, TestPlugin and TestPlugin2 inside.\n    Manifest manifest = createManifest(ManifestFields.EXPORT_PACKAGE, TestPlugin.class.getPackage().getName());\n    createPluginJar(TestPlugin.class, new File(templatePluginDir, \"myPlugin-1.0.jar\"), manifest);\n\n    // Build up the plugin repository.\n    repository.inspectPlugins(ImmutableList.of(appTemplateInfo));\n\n    // Should get the only version.\n    plugin = repository.findPlugin(TEMPLATE_NAME, \"plugin\", \"TestPlugin2\", new PluginSelector());\n    Assert.assertNotNull(plugin);\n    Assert.assertEquals(new PluginVersion(\"1.0\"), plugin.getKey().getVersion());\n    Assert.assertEquals(\"TestPlugin2\", plugin.getValue().getName());\n\n    // Create another plugin jar with later version and update the repository\n    createPluginJar(TestPlugin.class, new File(templatePluginDir, \"myPlugin-2.0.jar\"), manifest);\n    repository.inspectPlugins(ImmutableList.of(appTemplateInfo));\n\n    // Should select the latest version\n    plugin = repository.findPlugin(TEMPLATE_NAME, \"plugin\", \"TestPlugin2\", new PluginSelector());\n    Assert.assertNotNull(plugin);\n    Assert.assertEquals(new PluginVersion(\"2.0\"), plugin.getKey().getVersion());\n    Assert.assertEquals(\"TestPlugin2\", plugin.getValue().getName());\n\n    // Load the Plugin class and the common \"EmptyClass\" from the classLoader.\n    PluginInstantiator instantiator = new PluginInstantiator(cConf, TEMPLATE_NAME, templateClassLoader);\n    ClassLoader pluginClassLoader = instantiator.getPluginClassLoader(plugin.getKey());\n    Class<?> pluginClass = pluginClassLoader.loadClass(TestPlugin2.class.getName());\n    Class<?> emptyClass = pluginClassLoader.loadClass(TEST_EMPTY_CLASS);\n\n    // Use a custom plugin selector to select with smallest version\n    plugin = repository.findPlugin(TEMPLATE_NAME, \"plugin\", \"TestPlugin2\", new PluginSelector() {\n      @Override\n      public Map.Entry<PluginInfo, PluginClass> select(SortedMap<PluginInfo, PluginClass> plugins) {\n        return plugins.entrySet().iterator().next();\n      }\n    });\n    Assert.assertNotNull(plugin);\n    Assert.assertEquals(new PluginVersion(\"1.0\"), plugin.getKey().getVersion());\n    Assert.assertEquals(\"TestPlugin2\", plugin.getValue().getName());\n\n    // Load the Plugin class and the \"EmptyClass\" again from the current plugin selected\n    // The plugin class should be different (from different ClassLoader)\n    // The empty class should be the same (from the plugin lib ClassLoader)\n    pluginClassLoader = instantiator.getPluginClassLoader(plugin.getKey());\n    Assert.assertNotSame(pluginClass, pluginClassLoader.loadClass(TestPlugin2.class.getName()));\n    Assert.assertSame(emptyClass, pluginClassLoader.loadClass(TEST_EMPTY_CLASS));\n\n    // From the pluginClassLoader, loading export classes from the template jar should be allowed\n    Class<?> cls = pluginClassLoader.loadClass(PluginTestRunnable.class.getName());\n    // The class should be loaded from the template classloader\n    Assert.assertSame(templateClassLoader.loadClass(PluginTestRunnable.class.getName()), cls);\n\n    // From the plugin classloader, all cdap api classes is loadable as well.\n    cls = pluginClassLoader.loadClass(Application.class.getName());\n    // The Application class should be the same as the one in the system classloader\n    Assert.assertSame(Application.class, cls);\n  }","commit_id":"f5338afed33e163dca077481a293c26d0473e297","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n    protected void setUp() throws Exception {\n        final Exception[] thrown = new Exception[1];\n        UIUtil.invokeAndWaitIfNeeded(new Runnable() {\n            @Override\n            public void run() {\n                try {\n                    EditorTests.super.setUp();\n                } catch (Exception e) {\n                    thrown[0] = e;\n                }\n            }\n        });\n        if (thrown[0] != null) throw thrown[0];\n\n        // this is to prevent exceptions in the project components that get \"projectClosed\" notifications\n        ApplicationManagerEx.getApplicationEx().doNotSave();\n\n        SModelRoot sModelRoot = myFacet.getSolution().getSModelRoots().get(0);\n        final IFile modelFile = FileSystem.getInstance().getFileByPath(sModelRoot.getPath()+\"/test.mps\");\n        final List<SNode> roots = new ArrayList<SNode>();\n\n        ModelAccess.instance().runReadAction(new Runnable() {\n            @Override\n            public void run() {\n                SModelDescriptor descr = SModelRepository.getInstance().findModel(modelFile);\n                if (descr == null) {\n                    thrown[0] = new IllegalStateException(\"model not found\");\n                    return;\n                }\n\n                SModel model = descr.getSModel();\n                if (model != null) {\n                    for (SNode root : model.roots()) {\n                        roots.add(root);\n                    }\n                }\n\n                for (SNode r: roots) {\n                    if (\"EditorTestCase\".equals(r.getConceptShortName())) {\n                        try {\n                            Class<?> cls = Class.forName(model.getLongName() + \".\" + r.getName() + \"_Test\");\n                            Method mth = cls.getMethod(\"test_\" + r.getName());\n                            BaseTransformationTest btt = (BaseTransformationTest) cls.newInstance();\n                            btt.setTestRunner(new SimpleTransformationTestRunner(r, mth));\n                            tests.add(btt);\n                        }\n                        catch (Exception e) {\n                            thrown[0] = e;\n                        }\n                    }\n                }\n\n\n           }\n        });\n        // restore test logger factory\n        Logger.setFactory(TestLoggerFactory.getInstance());\n        if (thrown[0] != null) throw thrown[0];\n    }","id":50351,"modified_method":"@Override\n    protected void setUp() throws Exception {\n        final Exception[] thrown = new Exception[1];\n        UIUtil.invokeAndWaitIfNeeded(new Runnable() {\n            @Override\n            public void run() {\n                try {\n                    EditorTests.super.setUp();\n                } catch (Exception e) {\n                    thrown[0] = e;\n                }\n            }\n        });\n        if (thrown[0] != null) throw thrown[0];\n\n        // this is to prevent exceptions in the project components that get \"projectClosed\" notifications\n        ApplicationManagerEx.getApplicationEx().doNotSave();\n\n        SModelRoot sModelRoot = myFacet.getSolution().getSModelRoots().iterator().next();\n        final IFile modelFile = FileSystem.getInstance().getFileByPath(sModelRoot.getPath()+\"/test.mps\");\n        final List<SNode> roots = new ArrayList<SNode>();\n\n        ModelAccess.instance().runReadAction(new Runnable() {\n            @Override\n            public void run() {\n                SModelDescriptor descr = SModelRepository.getInstance().findModel(modelFile);\n                if (descr == null) {\n                    thrown[0] = new IllegalStateException(\"model not found\");\n                    return;\n                }\n\n                SModel model = descr.getSModel();\n                if (model != null) {\n                    for (SNode root : model.roots()) {\n                        roots.add(root);\n                    }\n                }\n\n                for (SNode r: roots) {\n                    if (\"EditorTestCase\".equals(r.getConceptShortName())) {\n                        try {\n                            Class<?> cls = Class.forName(model.getLongName() + \".\" + r.getName() + \"_Test\");\n                            Method mth = cls.getMethod(\"test_\" + r.getName());\n                            BaseTransformationTest btt = (BaseTransformationTest) cls.newInstance();\n                            btt.setTestRunner(new SimpleTransformationTestRunner(r, mth));\n                            tests.add(btt);\n                        }\n                        catch (Exception e) {\n                            thrown[0] = e;\n                        }\n                    }\n                }\n\n\n           }\n        });\n        // restore test logger factory\n        Logger.setFactory(TestLoggerFactory.getInstance());\n        if (thrown[0] != null) throw thrown[0];\n    }","commit_id":"a49bd32310216900ec26b9718e6043cbefb7db9d","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void testAddRemoveModelRoot() throws InterruptedException {\n        @NonNls final File modelRootDir = new File(getModuleHome(), \"modelRoot\");\n        assertTrue(modelRootDir.mkdir());\n\n        ModuleReference solutionReference = myFacet.getSolution().getModuleReference();\n\n        String modelRootPath = modelRootDir.getPath();\n        MPSConfigurationBean configurationBean = myFacet.getConfiguration().getState();\n        configurationBean.setModelRootPaths(modelRootPath);\n        myFacet.setConfiguration(configurationBean);\n        flushEDT();\n\n        Solution repositorySolution = MPSModuleRepository.getInstance().getSolution(solutionReference);\n        assertEquals(myFacet.getSolution(), repositorySolution);\n        List<SModelRoot> modelRoots = repositorySolution.getSModelRoots();\n        assertEquals(1, modelRoots.size());\n        SModelRoot theModelRoot = modelRoots.get(0);\n        assertEquals(modelRootDir.getPath(), theModelRoot.getPath());\n\n        configurationBean = myFacet.getConfiguration().getState();\n        configurationBean.setModelRootPaths();\n        myFacet.setConfiguration(configurationBean);\n        flushEDT();\n\n        assertEmpty(repositorySolution.getSModelRoots());\n    }","id":50352,"modified_method":"public void testAddRemoveModelRoot() throws InterruptedException {\n        @NonNls final File modelRootDir = new File(getModuleHome(), \"modelRoot\");\n        assertTrue(modelRootDir.mkdir());\n\n        ModuleReference solutionReference = myFacet.getSolution().getModuleReference();\n\n        String modelRootPath = modelRootDir.getPath();\n        MPSConfigurationBean configurationBean = myFacet.getConfiguration().getState();\n        configurationBean.setModelRootPaths(modelRootPath);\n        myFacet.setConfiguration(configurationBean);\n        flushEDT();\n\n        Solution repositorySolution = MPSModuleRepository.getInstance().getSolution(solutionReference);\n        assertEquals(myFacet.getSolution(), repositorySolution);\n        Set<SModelRoot> modelRoots = repositorySolution.getSModelRoots();\n        assertEquals(1, modelRoots.size());\n        SModelRoot theModelRoot = modelRoots.iterator().next();\n        assertEquals(modelRootDir.getPath(), theModelRoot.getPath());\n\n        configurationBean = myFacet.getConfiguration().getState();\n        configurationBean.setModelRootPaths();\n        myFacet.setConfiguration(configurationBean);\n        flushEDT();\n\n        assertEmpty(repositorySolution.getSModelRoots());\n    }","commit_id":"a49bd32310216900ec26b9718e6043cbefb7db9d","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void testAddRemoveUsedLanguage() throws InterruptedException {\n        Language baseLanguage = MPSModuleRepository.getInstance().getLanguage(\"jetbrains.mps.baseLanguage\");\n        assertNotNull(baseLanguage);\n        Language editorLanguage = MPSModuleRepository.getInstance().getLanguage(\"jetbrains.mps.lang.editor\");\n        assertNotNull(editorLanguage);\n\n        String[] usedLanguageStrings = new String[]{baseLanguage.toString(), editorLanguage.toString()};\n        Language[] usedLanguages = new Language[]{baseLanguage, editorLanguage};\n\n        MPSConfigurationBean configurationBean = myFacet.getConfiguration().getState();\n        configurationBean.setUsedLanguages(usedLanguageStrings);\n        myFacet.setConfiguration(configurationBean);\n        flushEDT();\n\n        List<ModuleReference> solutionUsedLanguageRefs = myFacet.getSolution().getUsedLanguagesReferences();\n        Set<Language> solutionUsedLanguages = new HashSet<Language>();\n        for (ModuleReference solutionUsedLanguageRef : solutionUsedLanguageRefs) {\n            solutionUsedLanguages.add(MPSModuleRepository.getInstance().getLanguage(solutionUsedLanguageRef));\n        }\n        assertEquals(usedLanguages.length, solutionUsedLanguages.size());\n        for (Language usedLanguage : usedLanguages) {\n            assertTrue(solutionUsedLanguages.contains(usedLanguage));\n        }\n\n        configurationBean.setUsedLanguages(new String[0]);\n        myFacet.setConfiguration(configurationBean);\n        flushEDT();\n\n        assertEmpty(myFacet.getSolution().getUsedLanguagesReferences());\n    }","id":50353,"modified_method":"public void testAddRemoveUsedLanguage() throws InterruptedException {\n        Language baseLanguage = MPSModuleRepository.getInstance().getLanguage(\"jetbrains.mps.baseLanguage\");\n        assertNotNull(baseLanguage);\n        Language editorLanguage = MPSModuleRepository.getInstance().getLanguage(\"jetbrains.mps.lang.editor\");\n        assertNotNull(editorLanguage);\n\n        String[] usedLanguageStrings = new String[]{baseLanguage.toString(), editorLanguage.toString()};\n        Language[] usedLanguages = new Language[]{baseLanguage, editorLanguage};\n\n        MPSConfigurationBean configurationBean = myFacet.getConfiguration().getState();\n        configurationBean.setUsedLanguages(usedLanguageStrings);\n        myFacet.setConfiguration(configurationBean);\n        flushEDT();\n\n        Set<ModuleReference> solutionUsedLanguageRefs = myFacet.getSolution().getUsedLanguagesReferences();\n        Set<Language> solutionUsedLanguages = new HashSet<Language>();\n        for (ModuleReference solutionUsedLanguageRef : solutionUsedLanguageRefs) {\n            solutionUsedLanguages.add(MPSModuleRepository.getInstance().getLanguage(solutionUsedLanguageRef));\n        }\n        assertEquals(usedLanguages.length, solutionUsedLanguages.size());\n        for (Language usedLanguage : usedLanguages) {\n            assertTrue(solutionUsedLanguages.contains(usedLanguage));\n        }\n\n        configurationBean.setUsedLanguages(new String[0]);\n        myFacet.setConfiguration(configurationBean);\n        flushEDT();\n\n        assertEmpty(myFacet.getSolution().getUsedLanguagesReferences());\n    }","commit_id":"a49bd32310216900ec26b9718e6043cbefb7db9d","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void setUsedLanguages(String[] usedLanguages) {\n        List<ModuleReference> usedLanguageReferences = myDescriptor.getUsedLanguages();\n        usedLanguageReferences.clear();\n        for (String usedLanguage : usedLanguages) {\n            usedLanguageReferences.add(ModuleReference.fromString(usedLanguage));\n        }\n    }","id":50354,"modified_method":"public void setUsedLanguages(String[] usedLanguages) {\n    Set<ModuleReference> usedLanguageReferences = myDescriptor.getUsedLanguages();\n    usedLanguageReferences.clear();\n    for (String usedLanguage : usedLanguages) {\n      usedLanguageReferences.add(ModuleReference.fromString(usedLanguage));\n    }\n  }","commit_id":"a49bd32310216900ec26b9718e6043cbefb7db9d","url":"https://github.com/JetBrains/MPS"},{"original_method":"public String[] getUsedLanguages() {\n        List<ModuleReference> usedLanguageReferences = myDescriptor.getUsedLanguages();\n        String[] usedLanguages = new String[usedLanguageReferences.size()];\n        for (int i = 0; i < usedLanguages.length; i++) {\n            usedLanguages[i] = usedLanguageReferences.get(i).toString();\n        }\n        return usedLanguages;\n    }","id":50355,"modified_method":"public String[] getUsedLanguages() {\n    String[] usedLanguages = new String[myDescriptor.getUsedLanguages().size()];\n    int i = 0;\n    for (ModuleReference ref : myDescriptor.getUsedLanguages()) {\n      usedLanguages[i] = ref.toString();\n      i++;\n    }\n    return usedLanguages;\n  }","commit_id":"a49bd32310216900ec26b9718e6043cbefb7db9d","url":"https://github.com/JetBrains/MPS"},{"original_method":"public List<SubProtocolHandler> getProtocolHandlers() {\n\t\treturn new ArrayList<SubProtocolHandler>(this.protocolHandlerLookup.values());\n\t}","id":50356,"modified_method":"public List<SubProtocolHandler> getProtocolHandlers() {\n\t\treturn new ArrayList<SubProtocolHandler>(this.protocolHandlers);\n\t}","commit_id":"1fff631daa65c228a1e2caeb387d1b8cd6b6e2e8","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"protected final SubProtocolHandler findProtocolHandler(WebSocketSession session) {\n\t\tString protocol = null;\n\t\ttry {\n\t\t\tprotocol = session.getAcceptedProtocol();\n\t\t}\n\t\tcatch (Exception ex) {\n\t\t\t// Shouldn't happen\n\t\t\tlogger.error(\"Failed to obtain session.getAcceptedProtocol(). Will use the \" +\n\t\t\t\t\t\"default protocol handler (if configured).\", ex);\n\t\t}\n\t\tSubProtocolHandler handler;\n\t\tif (!StringUtils.isEmpty(protocol)) {\n\t\t\thandler = this.protocolHandlerLookup.get(protocol);\n\t\t\tAssert.state(handler != null, \"No handler for '\" + protocol + \"' among \" + this.protocolHandlerLookup);\n\t\t}\n\t\telse {\n\t\t\tif (this.defaultProtocolHandler != null) {\n\t\t\t\thandler = this.defaultProtocolHandler;\n\t\t\t}\n\t\t\telse if (this.protocolHandlers.size() == 1) {\n\t\t\t\t\thandler = this.protocolHandlers.get(0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow new IllegalStateException(\"Multiple protocol handlers configured and \" +\n\t\t\t\t\t\t\"no protocol was negotiated. Consider configuring a default SubProtocolHandler.\");\n\t\t\t}\n\t\t}\n\t\treturn handler;\n\t}","id":50357,"modified_method":"protected final SubProtocolHandler findProtocolHandler(WebSocketSession session) {\n\t\tString protocol = null;\n\t\ttry {\n\t\t\tprotocol = session.getAcceptedProtocol();\n\t\t}\n\t\tcatch (Exception ex) {\n\t\t\t// Shouldn't happen\n\t\t\tlogger.error(\"Failed to obtain session.getAcceptedProtocol(). Will use the \" +\n\t\t\t\t\t\"default protocol handler (if configured).\", ex);\n\t\t}\n\t\tSubProtocolHandler handler;\n\t\tif (!StringUtils.isEmpty(protocol)) {\n\t\t\thandler = this.protocolHandlerLookup.get(protocol);\n\t\t\tAssert.state(handler != null, \"No handler for '\" + protocol + \"' among \" + this.protocolHandlerLookup);\n\t\t}\n\t\telse {\n\t\t\tif (this.defaultProtocolHandler != null) {\n\t\t\t\thandler = this.defaultProtocolHandler;\n\t\t\t}\n\t\t\telse if (this.protocolHandlers.size() == 1) {\n\t\t\t\thandler = this.protocolHandlers.iterator().next();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow new IllegalStateException(\"Multiple protocol handlers configured and \" +\n\t\t\t\t\t\t\"no protocol was negotiated. Consider configuring a default SubProtocolHandler.\");\n\t\t\t}\n\t\t}\n\t\treturn handler;\n\t}","commit_id":"1fff631daa65c228a1e2caeb387d1b8cd6b6e2e8","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Test\n\tpublic void handlerMapping() {\n\t\tSimpleUrlHandlerMapping hm = (SimpleUrlHandlerMapping) this.endpointRegistry.getHandlerMapping();\n\t\tassertEquals(0, hm.getUrlMap().size());\n\n\t\tUrlPathHelper pathHelper = new UrlPathHelper();\n\t\tthis.endpointRegistry.setUrlPathHelper(pathHelper);\n\t\tthis.endpointRegistry.addEndpoint(\"/stompOverWebSocket\");\n\t\tthis.endpointRegistry.addEndpoint(\"/stompOverSockJS\").withSockJS();\n\n\t\thm = (SimpleUrlHandlerMapping) this.endpointRegistry.getHandlerMapping();\n\t\tassertEquals(2, hm.getUrlMap().size());\n\t\tassertNotNull(hm.getUrlMap().get(\"/stompOverWebSocket\"));\n\t\tassertNotNull(hm.getUrlMap().get(\"/stompOverSockJS/**\"));\n\t\tassertSame(pathHelper, hm.getUrlPathHelper());\n\t}","id":50358,"modified_method":"@Test\n\tpublic void handlerMapping() {\n\t\tSimpleUrlHandlerMapping hm = (SimpleUrlHandlerMapping) this.endpointRegistry.getHandlerMapping();\n\t\tassertEquals(0, hm.getUrlMap().size());\n\n\t\tUrlPathHelper pathHelper = new UrlPathHelper();\n\t\tthis.endpointRegistry.setUrlPathHelper(pathHelper);\n\t\tthis.endpointRegistry.addEndpoint(\"/stompOverWebSocket\");\n\t\tthis.endpointRegistry.addEndpoint(\"/stompOverSockJS\").withSockJS();\n\n\t\t//SPR-12403\n\t\tassertEquals(1, this.webSocketHandler.getProtocolHandlers().size());\n\n\t\thm = (SimpleUrlHandlerMapping) this.endpointRegistry.getHandlerMapping();\n\t\tassertEquals(2, hm.getUrlMap().size());\n\t\tassertNotNull(hm.getUrlMap().get(\"/stompOverWebSocket\"));\n\t\tassertNotNull(hm.getUrlMap().get(\"/stompOverSockJS/**\"));\n\t\tassertSame(pathHelper, hm.getUrlPathHelper());\n\t}","commit_id":"1fff631daa65c228a1e2caeb387d1b8cd6b6e2e8","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"private SModel createModel(SModelFqName modelFqName) {\n    SModelDescriptor modelDescriptor = myModule.createModel(modelFqName, myModule.getSModelRoots().get(0), null);\n    return modelDescriptor.getSModel();\n  }","id":50359,"modified_method":"private SModel createModel(SModelFqName modelFqName) {\n    SModelDescriptor modelDescriptor = myModule.createModel(modelFqName, myModule.getSModelRoots().iterator().next(), null);\n    return modelDescriptor.getSModel();\n  }","commit_id":"4ae52b69433e713fd8dc6169ab42bedce4b40c56","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static void saveDependencyList(Element depElement, List<Dependency> dependencies) {\n    Element result_dxyzb6_a0a4 = depElement;\n    for (Dependency md : ListSequence.fromList(dependencies)) {\n      final Element result_dxyzb6_a0a0a0a4 = new Element(\"dependency\");\n      final String result_dxyzb6_a0a0a0a0a4 = md.getModuleRef().toString();\n      result_dxyzb6_a0a0a0a4.setText(result_dxyzb6_a0a0a0a0a4);\n      final boolean result_dxyzb6_a1a0a0a0a4 = md.isReexport();\n      result_dxyzb6_a0a0a0a4.setAttribute(\"reexport\", \"\" + result_dxyzb6_a1a0a0a0a4);\n      result_dxyzb6_a0a4.addContent(result_dxyzb6_a0a0a0a4);\n    }\n  }","id":50360,"modified_method":"private static void saveDependencyList(Element depElement, Set<Dependency> dependencies) {\n    Element result_dxyzb6_a0a4 = depElement;\n    for (Dependency md : SetSequence.fromSet(dependencies)) {\n      final Element result_dxyzb6_a0a0a0a4 = new Element(\"dependency\");\n      final String result_dxyzb6_a0a0a0a0a4 = md.getModuleRef().toString();\n      result_dxyzb6_a0a0a0a4.setText(result_dxyzb6_a0a0a0a0a4);\n      final boolean result_dxyzb6_a1a0a0a0a4 = md.isReexport();\n      result_dxyzb6_a0a0a0a4.setAttribute(\"reexport\", \"\" + result_dxyzb6_a1a0a0a0a4);\n      result_dxyzb6_a0a4.addContent(result_dxyzb6_a0a0a0a4);\n    }\n  }","commit_id":"4ae52b69433e713fd8dc6169ab42bedce4b40c56","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static void saveDependencies(Element result, ModuleDescriptor descriptor) {\n    Element result_dxyzb6_a0a2 = result;\n    if (!(descriptor.getDependencies().isEmpty())) {\n      final Element result_dxyzb6_a0a0a0a2 = new Element(\"dependencies\");\n      saveDependencyList(result_dxyzb6_a0a0a0a2, descriptor.getDependencies());\n      result_dxyzb6_a0a2.addContent(result_dxyzb6_a0a0a0a2);\n    }\n\n    if (!(descriptor.getUsedLanguages().isEmpty())) {\n      final Element result_dxyzb6_a0a2a0a2 = new Element(\"usedLanguages\");\n      for (ModuleReference langRef : SetSequence.fromSet(descriptor.getUsedLanguages())) {\n        final Element result_dxyzb6_a0a0a0a2a0a2 = new Element(\"usedLanguage\");\n        final String result_dxyzb6_a0a0a0a0a2a0a2 = langRef.toString();\n        result_dxyzb6_a0a0a0a2a0a2.setText(result_dxyzb6_a0a0a0a0a2a0a2);\n        result_dxyzb6_a0a2a0a2.addContent(result_dxyzb6_a0a0a0a2a0a2);\n      }\n      result_dxyzb6_a0a2.addContent(result_dxyzb6_a0a2a0a2);\n    }\n\n    if (!(descriptor.getUsedDevkits().isEmpty())) {\n      final Element result_dxyzb6_a0a4a0a2 = new Element(\"usedDevKits\");\n      for (ModuleReference dkRef : SetSequence.fromSet(descriptor.getUsedDevkits())) {\n        final Element result_dxyzb6_a0a0a0a4a0a2 = new Element(\"usedDevKit\");\n        final String result_dxyzb6_a0a0a0a0a4a0a2 = dkRef.toString();\n        result_dxyzb6_a0a0a0a4a0a2.setText(result_dxyzb6_a0a0a0a0a4a0a2);\n        result_dxyzb6_a0a4a0a2.addContent(result_dxyzb6_a0a0a0a4a0a2);\n      }\n      result_dxyzb6_a0a2.addContent(result_dxyzb6_a0a4a0a2);\n    }\n\n    if (descriptor instanceof LanguageDescriptor) {\n      LanguageDescriptor ld = ((LanguageDescriptor) descriptor);\n      Element result_dxyzb6_a1a2a2 = result;\n      if (!(ld.getRuntimeModules().isEmpty())) {\n        final Element result_dxyzb6_a0a0a1a2a2 = new Element(\"runtime\");\n        List<ModuleReference> runtimeModules = ld.getRuntimeModules();\n        saveDependencyList(result_dxyzb6_a0a0a1a2a2, ListSequence.fromList(runtimeModules).select(new ISelector<ModuleReference, Dependency>() {\n          public Dependency select(ModuleReference it) {\n            return new Dependency(it, false);\n          }\n        }).toListSequence());\n        result_dxyzb6_a1a2a2.addContent(result_dxyzb6_a0a0a1a2a2);\n      }\n    }\n  }","id":50361,"modified_method":"public static void saveDependencies(Element result, ModuleDescriptor descriptor) {\n    Element result_dxyzb6_a0a2 = result;\n    if (!(descriptor.getDependencies().isEmpty())) {\n      final Element result_dxyzb6_a0a0a0a2 = new Element(\"dependencies\");\n      saveDependencyList(result_dxyzb6_a0a0a0a2, descriptor.getDependencies());\n      result_dxyzb6_a0a2.addContent(result_dxyzb6_a0a0a0a2);\n    }\n\n    if (!(descriptor.getUsedLanguages().isEmpty())) {\n      final Element result_dxyzb6_a0a2a0a2 = new Element(\"usedLanguages\");\n      for (ModuleReference langRef : SetSequence.fromSet(descriptor.getUsedLanguages())) {\n        final Element result_dxyzb6_a0a0a0a2a0a2 = new Element(\"usedLanguage\");\n        final String result_dxyzb6_a0a0a0a0a2a0a2 = langRef.toString();\n        result_dxyzb6_a0a0a0a2a0a2.setText(result_dxyzb6_a0a0a0a0a2a0a2);\n        result_dxyzb6_a0a2a0a2.addContent(result_dxyzb6_a0a0a0a2a0a2);\n      }\n      result_dxyzb6_a0a2.addContent(result_dxyzb6_a0a2a0a2);\n    }\n\n    if (!(descriptor.getUsedDevkits().isEmpty())) {\n      final Element result_dxyzb6_a0a4a0a2 = new Element(\"usedDevKits\");\n      for (ModuleReference dkRef : SetSequence.fromSet(descriptor.getUsedDevkits())) {\n        final Element result_dxyzb6_a0a0a0a4a0a2 = new Element(\"usedDevKit\");\n        final String result_dxyzb6_a0a0a0a0a4a0a2 = dkRef.toString();\n        result_dxyzb6_a0a0a0a4a0a2.setText(result_dxyzb6_a0a0a0a0a4a0a2);\n        result_dxyzb6_a0a4a0a2.addContent(result_dxyzb6_a0a0a0a4a0a2);\n      }\n      result_dxyzb6_a0a2.addContent(result_dxyzb6_a0a4a0a2);\n    }\n\n    if (descriptor instanceof LanguageDescriptor) {\n      LanguageDescriptor ld = ((LanguageDescriptor) descriptor);\n      Element result_dxyzb6_a1a2a2 = result;\n      if (!(ld.getRuntimeModules().isEmpty())) {\n        final Element result_dxyzb6_a0a0a1a2a2 = new Element(\"runtime\");\n        Set<ModuleReference> runtimeModules = ld.getRuntimeModules();\n        saveDependencyList(result_dxyzb6_a0a0a1a2a2, SetSequence.fromSet(runtimeModules).select(new ISelector<ModuleReference, Dependency>() {\n          public Dependency select(ModuleReference it) {\n            return new Dependency(it, false);\n          }\n        }).toListSequence());\n        result_dxyzb6_a1a2a2.addContent(result_dxyzb6_a0a0a1a2a2);\n      }\n    }\n  }","commit_id":"4ae52b69433e713fd8dc6169ab42bedce4b40c56","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static void saveModelRoots(Element modelsElement, List<ModelRoot> modelRoots, IFile file, Macros macros) {\n    Element result_dxyzb6_a0a01 = modelsElement;\n    for (ModelRoot root : ListSequence.fromList(modelRoots)) {\n      final Element result_dxyzb6_a0a0a0a01 = new Element(\"modelRoot\");\n      final String result_dxyzb6_a0a0a0a0a01 = macros.shrinkPath((root.getPath() == null ?\n        \"\" :\n        root.getPath()\n      ), file);\n      result_dxyzb6_a0a0a0a01.setAttribute(\"path\", \"\" + result_dxyzb6_a0a0a0a0a01);\n      if (root.getManager() != null) {\n        final Element result_dxyzb6_a0a1a0a0a0a01 = new Element(\"manager\");\n        final String result_dxyzb6_a0a0a1a0a0a0a01 = root.getManager().getModuleId();\n        result_dxyzb6_a0a1a0a0a0a01.setAttribute(\"moduleId\", \"\" + result_dxyzb6_a0a0a1a0a0a0a01);\n        final String result_dxyzb6_a1a0a1a0a0a0a01 = root.getManager().getClassName();\n        result_dxyzb6_a0a1a0a0a0a01.setAttribute(\"className\", \"\" + result_dxyzb6_a1a0a1a0a0a0a01);\n        result_dxyzb6_a0a0a0a01.addContent(result_dxyzb6_a0a1a0a0a0a01);\n      }\n      result_dxyzb6_a0a01.addContent(result_dxyzb6_a0a0a0a01);\n    }\n  }","id":50362,"modified_method":"public static void saveModelRoots(Element modelsElement, Set<ModelRoot> modelRoots, IFile file, Macros macros) {\n    Element result_dxyzb6_a0a01 = modelsElement;\n    for (ModelRoot root : SetSequence.fromSet(modelRoots)) {\n      final Element result_dxyzb6_a0a0a0a01 = new Element(\"modelRoot\");\n      final String result_dxyzb6_a0a0a0a0a01 = macros.shrinkPath((root.getPath() == null ?\n        \"\" :\n        root.getPath()\n      ), file);\n      result_dxyzb6_a0a0a0a01.setAttribute(\"path\", \"\" + result_dxyzb6_a0a0a0a0a01);\n      if (root.getManager() != null) {\n        final Element result_dxyzb6_a0a1a0a0a0a01 = new Element(\"manager\");\n        final String result_dxyzb6_a0a0a1a0a0a0a01 = root.getManager().getModuleId();\n        result_dxyzb6_a0a1a0a0a0a01.setAttribute(\"moduleId\", \"\" + result_dxyzb6_a0a0a1a0a0a0a01);\n        final String result_dxyzb6_a1a0a1a0a0a0a01 = root.getManager().getClassName();\n        result_dxyzb6_a0a1a0a0a0a01.setAttribute(\"className\", \"\" + result_dxyzb6_a1a0a1a0a0a0a01);\n        result_dxyzb6_a0a0a0a01.addContent(result_dxyzb6_a0a1a0a0a0a01);\n      }\n      result_dxyzb6_a0a01.addContent(result_dxyzb6_a0a0a0a01);\n    }\n  }","commit_id":"4ae52b69433e713fd8dc6169ab42bedce4b40c56","url":"https://github.com/JetBrains/MPS"},{"original_method":"private void adjustTemplateModel(Language sourceLanguage, Generator newGenerator) {\n    boolean alreadyOwnsTemplateModel = false;\n    for (SModelDescriptor modelDescriptor : newGenerator.getOwnModelDescriptors()) {\n      if (SModelStereotype.isGeneratorModel(modelDescriptor)) {\n        alreadyOwnsTemplateModel = true;\n        break;\n      }\n    }\n    if (!(alreadyOwnsTemplateModel)) {\n      EditableSModelDescriptor templateModelDescriptor = newGenerator.createModel(new SModelFqName(getTemplateModelPrefix(sourceLanguage) + \".\" + \"main\", SModelStereotype.GENERATOR), newGenerator.getSModelRoots().get(0), null);\n      SModel templateModel = templateModelDescriptor.getSModel();\n      templateModel.addLanguage(BootstrapLanguages.GENERATOR);\n      templateModel.addLanguage(ModuleReference.fromString(\"d7706f63-9be2-479c-a3da-ae92af1e64d5(jetbrains.mps.lang.generator.generationContext)\"));\n      templateModel.addDevKit(GeneralPurpose_DevKit.get().getModuleReference());\n      templateModel.addModelImport(sourceLanguage.getStructureModelDescriptor().getSModelReference(), false);\n      // <node> \n      SNode mappingConfiguration = SModelOperations.createNewNode(templateModel, \"jetbrains.mps.lang.generator.structure.MappingConfiguration\", null);\n      SPropertyOperations.set(mappingConfiguration, \"name\", \"main\");\n      SModelOperations.addRootNode(templateModel, mappingConfiguration);\n      templateModelDescriptor.save();\n    }\n  }","id":50363,"modified_method":"private void adjustTemplateModel(Language sourceLanguage, Generator newGenerator) {\n    boolean alreadyOwnsTemplateModel = false;\n    for (SModelDescriptor modelDescriptor : newGenerator.getOwnModelDescriptors()) {\n      if (SModelStereotype.isGeneratorModel(modelDescriptor)) {\n        alreadyOwnsTemplateModel = true;\n        break;\n      }\n    }\n    if (!(alreadyOwnsTemplateModel)) {\n      EditableSModelDescriptor templateModelDescriptor = newGenerator.createModel(new SModelFqName(getTemplateModelPrefix(sourceLanguage) + \".\" + \"main\", SModelStereotype.GENERATOR), newGenerator.getSModelRoots().iterator().next(), null);\n      SModel templateModel = templateModelDescriptor.getSModel();\n      templateModel.addLanguage(BootstrapLanguages.GENERATOR);\n      templateModel.addLanguage(ModuleReference.fromString(\"d7706f63-9be2-479c-a3da-ae92af1e64d5(jetbrains.mps.lang.generator.generationContext)\"));\n      templateModel.addDevKit(GeneralPurpose_DevKit.get().getModuleReference());\n      templateModel.addModelImport(sourceLanguage.getStructureModelDescriptor().getSModelReference(), false);\n      // <node> \n      SNode mappingConfiguration = SModelOperations.createNewNode(templateModel, \"jetbrains.mps.lang.generator.structure.MappingConfiguration\", null);\n      SPropertyOperations.set(mappingConfiguration, \"name\", \"main\");\n      SModelOperations.addRootNode(templateModel, mappingConfiguration);\n      templateModelDescriptor.save();\n    }\n  }","commit_id":"4ae52b69433e713fd8dc6169ab42bedce4b40c56","url":"https://github.com/JetBrains/MPS"},{"original_method":"public List<ModuleReference> getUsedLanguagesReferences() {\n    List<ModuleReference> result = new ArrayList<ModuleReference>();\n    for (SModelDescriptor md : getOwnModelDescriptors()) {\n      result.addAll(md.getSModel().importedLanguages());\n    }\n    return result;\n  }","id":50364,"modified_method":"public Set<ModuleReference> getUsedLanguagesReferences() {\n    Set<ModuleReference> result = new HashSet<ModuleReference>();\n    for (SModelDescriptor md : getOwnModelDescriptors()) {\n      result.addAll(md.getSModel().importedLanguages());\n    }\n    return result;\n  }","commit_id":"4ae52b69433e713fd8dc6169ab42bedce4b40c56","url":"https://github.com/JetBrains/MPS"},{"original_method":"public List<ModuleReference> getUsedDevkitReferences() {\n    List<ModuleReference> result = new ArrayList<ModuleReference>();\n    for (SModelDescriptor md : getOwnModelDescriptors()) {\n      result.addAll(md.getSModel().importedDevkits());\n    }\n    return result;\n  }","id":50365,"modified_method":"public Set<ModuleReference> getUsedDevkitReferences() {\n    Set<ModuleReference> result = new HashSet<ModuleReference>();\n    for (SModelDescriptor md : getOwnModelDescriptors()) {\n      result.addAll(md.getSModel().importedDevkits());\n    }\n    return result;\n  }","commit_id":"4ae52b69433e713fd8dc6169ab42bedce4b40c56","url":"https://github.com/JetBrains/MPS"},{"original_method":"public int evaluateState() {\n\t\tPlayer opponent = game.getPlayer(game.getOpponents(player.getId()).get(0));\n\t\tif (game.isGameOver()) {\n\t\t\tif (player.hasLost() || opponent.hasWon())\n\t\t\t\treturn Integer.MIN_VALUE;\n\t\t\tif (opponent.hasLost() || player.hasWon())\n\t\t\t\treturn Integer.MAX_VALUE;\n\t\t}\n\t\tint value = player.getLife();\n\t\tvalue -= opponent.getLife();\n\t\tPermanentEvaluator evaluator = new PermanentEvaluator();\n\t\tfor (Permanent permanent: game.getBattlefield().getActivePermanents(player.getId())) {\n\t\t\tvalue += evaluator.evaluate(permanent, game);\n\t\t}\n\t\tfor (Permanent permanent: game.getBattlefield().getActivePermanents(player.getId())) {\n\t\t\tvalue -= evaluator.evaluate(permanent, game);\n\t\t}\n\t\tvalue += player.getHand().size();\n\t\tvalue -= opponent.getHand().size();\n\t\treturn value;\n\t}","id":50366,"modified_method":"public int evaluateState() {\n\t\tPlayer opponent = game.getPlayer(game.getOpponents(player.getId()).iterator().next());\n\t\tif (game.isGameOver()) {\n\t\t\tif (player.hasLost() || opponent.hasWon())\n\t\t\t\treturn Integer.MIN_VALUE;\n\t\t\tif (opponent.hasLost() || player.hasWon())\n\t\t\t\treturn Integer.MAX_VALUE;\n\t\t}\n\t\tint value = player.getLife();\n\t\tvalue -= opponent.getLife();\n\t\tPermanentEvaluator evaluator = new PermanentEvaluator();\n\t\tfor (Permanent permanent: game.getBattlefield().getAllActivePermanents(player.getId())) {\n\t\t\tvalue += evaluator.evaluate(permanent, game);\n\t\t}\n\t\tfor (Permanent permanent: game.getBattlefield().getAllActivePermanents(player.getId())) {\n\t\t\tvalue -= evaluator.evaluate(permanent, game);\n\t\t}\n\t\tvalue += player.getHand().size();\n\t\tvalue -= opponent.getHand().size();\n\t\treturn value;\n\t}","commit_id":"7d27c06329c03d004463fab866c2dba53d922427","url":"https://github.com/magefree/mage"},{"original_method":"@Override\n\tpublic boolean chooseTarget(Outcome outcome, Target target, Game game) {\n\t\tlogger.fine(\"chooseTarget: \" + outcome.toString() + \":\" + target.toString());\n\t\tUUID opponentId = game.getOpponents(playerId).get(0);\n\t\tif (target instanceof TargetPlayer) {\n\t\t\tif (outcome.isGood()) {\n\t\t\t\tif (target.canTarget(playerId, game)) {\n\t\t\t\t\ttarget.addTarget(playerId, game);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (target.canTarget(playerId, game)) {\n\t\t\t\t\ttarget.addTarget(opponentId, game);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (target instanceof TargetDiscard) {\n\t\t\tfindPlayables(game);\n\t\t\tif (unplayable.size() > 0) {\n\t\t\t\tfor (int i = unplayable.size() - 1; i >= 0; i--) {\n\t\t\t\t\tif (target.canTarget(unplayable.values().toArray(new Card[0])[i].getId(), game)) {\n\t\t\t\t\t\ttarget.addTarget(unplayable.values().toArray(new Card[0])[i].getId(), game);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (hand.size() > 0) {\n\t\t\t\tif (target.canTarget(hand.keySet().toArray(new UUID[0])[0], game)) {\n\t\t\t\t\ttarget.addTarget(hand.keySet().toArray(new UUID[0])[0], game);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (target instanceof TargetSacrificePermanent) {\n\t\t\tList<Permanent> targets;\n\t\t\ttargets = threats(playerId, (TargetPermanent) target, game);\n\t\t\tCollections.reverse(targets);\n\t\t\tfor (Permanent permanent: targets) {\n\t\t\t\tif (target.canTarget(permanent.getId(), game)) {\n\t\t\t\t\ttarget.addTarget(permanent.getId(), game);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (target instanceof TargetPermanent) {\n\t\t\tList<Permanent> targets;\n\t\t\tif (outcome.isGood()) {\n\t\t\t\ttargets = threats(playerId, (TargetPermanent) target, game);\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttargets = threats(opponentId, (TargetPermanent) target, game);\n\t\t\t}\n\t\t\tfor (Permanent permanent: targets) {\n\t\t\t\tif (target.canTarget(permanent.getId(), game)) {\n\t\t\t\t\ttarget.addTarget(permanent.getId(), game);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}","id":50367,"modified_method":"@Override\n\tpublic boolean chooseTarget(Outcome outcome, Target target, Game game) {\n\t\tlogger.fine(\"chooseTarget: \" + outcome.toString() + \":\" + target.toString());\n\t\tUUID opponentId = game.getOpponents(playerId).iterator().next();\n\t\tif (target instanceof TargetPlayer) {\n\t\t\tif (outcome.isGood()) {\n\t\t\t\tif (target.canTarget(playerId, game)) {\n\t\t\t\t\ttarget.addTarget(playerId, game);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (target.canTarget(playerId, game)) {\n\t\t\t\t\ttarget.addTarget(opponentId, game);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (target instanceof TargetDiscard) {\n\t\t\tfindPlayables(game);\n\t\t\tif (unplayable.size() > 0) {\n\t\t\t\tfor (int i = unplayable.size() - 1; i >= 0; i--) {\n\t\t\t\t\tif (target.canTarget(unplayable.values().toArray(new Card[0])[i].getId(), game)) {\n\t\t\t\t\t\ttarget.addTarget(unplayable.values().toArray(new Card[0])[i].getId(), game);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (hand.size() > 0) {\n\t\t\t\tif (target.canTarget(hand.keySet().toArray(new UUID[0])[0], game)) {\n\t\t\t\t\ttarget.addTarget(hand.keySet().toArray(new UUID[0])[0], game);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (target instanceof TargetSacrificePermanent) {\n\t\t\tList<Permanent> targets;\n\t\t\ttargets = threats(playerId, (TargetPermanent) target, game);\n\t\t\tCollections.reverse(targets);\n\t\t\tfor (Permanent permanent: targets) {\n\t\t\t\tif (target.canTarget(permanent.getId(), game)) {\n\t\t\t\t\ttarget.addTarget(permanent.getId(), game);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (target instanceof TargetPermanent) {\n\t\t\tList<Permanent> targets;\n\t\t\tif (outcome.isGood()) {\n\t\t\t\ttargets = threats(playerId, (TargetPermanent) target, game);\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttargets = threats(opponentId, (TargetPermanent) target, game);\n\t\t\t}\n\t\t\tfor (Permanent permanent: targets) {\n\t\t\t\tif (target.canTarget(permanent.getId(), game)) {\n\t\t\t\t\ttarget.addTarget(permanent.getId(), game);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}","commit_id":"7d27c06329c03d004463fab866c2dba53d922427","url":"https://github.com/magefree/mage"},{"original_method":"protected List<Permanent> threats(UUID playerId, TargetPermanent target, Game game) {\n\t\tList<Permanent> threats = game.getBattlefield().getActivePermanents(target.getFilter());\n\t\tIterator<Permanent> it = threats.iterator();\n\t\twhile(it.hasNext()) {\n\t\t\tPermanent permanent = it.next();\n\t\t\tif (!permanent.getControllerId().equals(playerId)) {\n\t\t\t\tit.remove();\n\t\t\t}\n\t\t}\n\n\t\tCollections.sort(threats, new PermanentComparator(game));\n\t\treturn threats;\n\t}","id":50368,"modified_method":"protected List<Permanent> threats(UUID playerId, TargetPermanent target, Game game) {\n\t\tList<Permanent> threats = game.getBattlefield().getAllActivePermanents(target.getFilter(), playerId);\n\t\tCollections.sort(threats, new PermanentComparator(game));\n\t\treturn threats;\n\t}","commit_id":"7d27c06329c03d004463fab866c2dba53d922427","url":"https://github.com/magefree/mage"},{"original_method":"protected List<Permanent> getOpponentBlockers(UUID opponentId, Game game) {\n\t\tlogger.fine(\"getOpponentBlockers\");\n\t\tFilterCreatureForCombat blockFilter = new FilterCreatureForCombat();\n\t\tblockFilter.getControllerId().add(opponentId);\n\t\tList<Permanent> blockers = game.getBattlefield().getActivePermanents(blockFilter);\n\t\treturn blockers;\n\t}","id":50369,"modified_method":"protected List<Permanent> getOpponentBlockers(UUID opponentId, Game game) {\n\t\tlogger.fine(\"getOpponentBlockers\");\n\t\tFilterCreatureForCombat blockFilter = new FilterCreatureForCombat();\n\t\tList<Permanent> blockers = game.getBattlefield().getAllActivePermanents(blockFilter, opponentId);\n\t\treturn blockers;\n\t}","commit_id":"7d27c06329c03d004463fab866c2dba53d922427","url":"https://github.com/magefree/mage"},{"original_method":"@Override\n\tpublic void selectAttackers(Game game) {\n\t\tlogger.fine(\"selectAttackers\");\n\t\tUUID opponentId = game.getOpponents(playerId).get(0);\n\t\tAttackers attackers = getPotentialAttackers(game);\n\t\tList<Permanent> blockers = getOpponentBlockers(opponentId, game);\n\t\tList<Permanent> actualAttackers = new ArrayList<Permanent>();\n\t\tif (blockers.isEmpty()) {\n\t\t\tactualAttackers = attackers.getAttackers();\n\t\t}\n\t\telse if (attackers.size() - blockers.size() >= game.getPlayer(opponentId).getLife()) {\n\t\t\tactualAttackers = attackers.getAttackers();\n\t\t}\n\t\telse {\n\t\t\tCombatSimulator combat = simulateAttack(attackers, blockers, opponentId, game);\n\t\t\tif (combat.rating > 2) {\n\t\t\t\tfor (CombatGroupSimulator group: combat.groups) {\n\t\t\t\t\tthis.declareAttacker(group.attackers.get(0).id, group.defenderId, game);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (Permanent attacker: actualAttackers) {\n\t\t\tthis.declareAttacker(attacker.getId(), opponentId, game);\n\t\t}\n\t\treturn;\n\t}","id":50370,"modified_method":"@Override\n\tpublic void selectAttackers(Game game) {\n\t\tlogger.fine(\"selectAttackers\");\n\t\tUUID opponentId = game.getCombat().getDefenders().iterator().next();\n\t\tAttackers attackers = getPotentialAttackers(game);\n\t\tList<Permanent> blockers = getOpponentBlockers(opponentId, game);\n\t\tList<Permanent> actualAttackers = new ArrayList<Permanent>();\n\t\tif (blockers.isEmpty()) {\n\t\t\tactualAttackers = attackers.getAttackers();\n\t\t}\n\t\telse if (attackers.size() - blockers.size() >= game.getPlayer(opponentId).getLife()) {\n\t\t\tactualAttackers = attackers.getAttackers();\n\t\t}\n\t\telse {\n\t\t\tCombatSimulator combat = simulateAttack(attackers, blockers, opponentId, game);\n\t\t\tif (combat.rating > 2) {\n\t\t\t\tfor (CombatGroupSimulator group: combat.groups) {\n\t\t\t\t\tthis.declareAttacker(group.attackers.get(0).id, group.defenderId, game);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (Permanent attacker: actualAttackers) {\n\t\t\tthis.declareAttacker(attacker.getId(), opponentId, game);\n\t\t}\n\t\treturn;\n\t}","commit_id":"7d27c06329c03d004463fab866c2dba53d922427","url":"https://github.com/magefree/mage"},{"original_method":"protected List<Permanent> getAvailableManaProducers(Game game) {\n\t\tlogger.fine(\"getAvailableManaProducers\");\n\t\tList<Permanent> result = new ArrayList<Permanent>();\n\t\tfor (Permanent permanent: game.getBattlefield().getActivePermanents(playerId)) {\n\t\t\tfor (ManaAbility ability: permanent.getAbilities().getManaAbilities(Zone.BATTLEFIELD)) {\n\t\t\t\tif (ability.canActivate(playerId, game)) {\n\t\t\t\t\tresult.add(permanent);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}","id":50371,"modified_method":"protected List<Permanent> getAvailableManaProducers(Game game) {\n\t\tlogger.fine(\"getAvailableManaProducers\");\n\t\tList<Permanent> result = new ArrayList<Permanent>();\n\t\tfor (Permanent permanent: game.getBattlefield().getAllActivePermanents(playerId)) {\n\t\t\tfor (ManaAbility ability: permanent.getAbilities().getManaAbilities(Zone.BATTLEFIELD)) {\n\t\t\t\tif (ability.canActivate(playerId, game)) {\n\t\t\t\t\tresult.add(permanent);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}","commit_id":"7d27c06329c03d004463fab866c2dba53d922427","url":"https://github.com/magefree/mage"},{"original_method":"protected List<Permanent> getAvailableBlockers(Game game) {\n\t\tlogger.fine(\"getAvailableBlockers\");\n\t\tFilterCreatureForCombat blockFilter = new FilterCreatureForCombat();\n\t\tblockFilter.getControllerId().add(playerId);\n\t\tList<Permanent> blockers = game.getBattlefield().getActivePermanents(blockFilter);\n\t\treturn blockers;\n\t}","id":50372,"modified_method":"protected List<Permanent> getAvailableBlockers(Game game) {\n\t\tlogger.fine(\"getAvailableBlockers\");\n\t\tFilterCreatureForCombat blockFilter = new FilterCreatureForCombat();\n\t\tList<Permanent> blockers = game.getBattlefield().getAllActivePermanents(blockFilter, playerId);\n\t\treturn blockers;\n\t}","commit_id":"7d27c06329c03d004463fab866c2dba53d922427","url":"https://github.com/magefree/mage"},{"original_method":"protected Attackers getPotentialAttackers(Game game) {\n\t\tlogger.fine(\"getAvailableAttackers\");\n\t\tAttackers attackers = new Attackers();\n\t\tList<Permanent> creatures = super.getAvailableAttackers(game);\n\t\tfor (Permanent creature: creatures) {\n\t\t\tint potential = combatPotential(creature, game);\n\t\t\tif (potential > 0) {\n\t\t\t\tList<Permanent> l = attackers.get(potential);\n\t\t\t\tif (l == null)\n\t\t\t\t\tattackers.put(potential, l = new ArrayList<Permanent>());\n\t\t\t\tl.add(creature);\n\t\t\t}\n\t\t}\t\n\t\treturn attackers;\n\t}","id":50373,"modified_method":"protected Attackers getPotentialAttackers(Game game) {\n\t\tlogger.fine(\"getAvailableAttackers\");\n\t\tAttackers attackers = new Attackers();\n\t\tList<Permanent> creatures = super.getAvailableAttackers(game);\n\t\tfor (Permanent creature: creatures) {\n\t\t\tint potential = combatPotential(creature, game);\n\t\t\tif (potential > 0 && creature.getPower().getValue() > 0) {\n\t\t\t\tList<Permanent> l = attackers.get(potential);\n\t\t\t\tif (l == null)\n\t\t\t\t\tattackers.put(potential, l = new ArrayList<Permanent>());\n\t\t\t\tl.add(creature);\n\t\t\t}\n\t\t}\t\n\t\treturn attackers;\n\t}","commit_id":"7d27c06329c03d004463fab866c2dba53d922427","url":"https://github.com/magefree/mage"},{"original_method":"@Override\n\tpublic void priority(Game game) {\n\t\tlogger.fine(\"priority\");\n\t\tUUID opponentId = game.getOpponents(playerId).get(0);\n\t\tif (game.getActivePlayerId().equals(playerId)) {\n\t\t\tif (game.isMainPhase() && game.getStack().isEmpty()) {\n\t\t\t\tplayLand(game);\n\t\t\t}\n\t\t\tswitch (game.getTurn().getStep()) {\n\t\t\t\tcase UPKEEP:\n\t\t\t\t\tfindPlayables(game);\n\t\t\t\t\tbreak;\n\t\t\t\tcase DRAW:\n\t\t\t\t\tlogState(game);\n\t\t\t\tcase PRECOMBAT_MAIN:\n\t\t\t\t\tfindPlayables(game);\n\t\t\t\t\tif (playableAbilities.size() > 0) {\n\t\t\t\t\t\tfor (ActivatedAbility ability: playableAbilities) {\n\t\t\t\t\t\t\tif (ability.canActivate(playerId, game)) {\n\t\t\t\t\t\t\t\tif (ability.getEffects().hasOutcome(Outcome.PutLandInPlay)) {\n\t\t\t\t\t\t\t\t\tif (this.activateAbility(ability, game))\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (ability.getEffects().hasOutcome(Outcome.PutCreatureInPlay)) {\n\t\t\t\t\t\t\t\t\tif (getOpponentBlockers(opponentId, game).size() <= 1)\n\t\t\t\t\t\t\t\t\t\tif (this.activateAbility(ability, game))\n\t\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase DECLARE_BLOCKERS:\n\t\t\t\t\tplayRemoval(game.getCombat().getBlockers(), game);\n\t\t\t\t\tplayDamage(game.getCombat().getBlockers(), game);\n\t\t\t\tcase END_COMBAT:\n\t\t\t\t\tplayDamage(game.getCombat().getBlockers(), game);\n\t\t\t\tcase POSTCOMBAT_MAIN:\n\t\t\t\t\tfindPlayables(game);\n\t\t\t\t\tif (game.getStack().isEmpty()) {\n\t\t\t\t\t\tif (playableNonInstant.size() > 0) {\n\t\t\t\t\t\t\tfor (Card card: playableNonInstant) {\n\t\t\t\t\t\t\t\tif (card.getSpellAbility().canActivate(playerId, game)) {\n\t\t\t\t\t\t\t\t\tif (this.activateAbility(card.getSpellAbility(), game))\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (playableAbilities.size() > 0) {\n\t\t\t\t\t\t\tfor (ActivatedAbility ability: playableAbilities) {\n\t\t\t\t\t\t\t\tif (ability.canActivate(playerId, game)) {\n\t\t\t\t\t\t\t\t\tif (!(ability.getEffects().get(0) instanceof BecomesCreatureSourceEOTEffect)) {\n\t\t\t\t\t\t\t\t\t\tif (this.activateAbility(ability, game))\n\t\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t//respond to opponent events\n\t\t\tswitch (game.getTurn().getStep()) {\n\t\t\t\tcase UPKEEP:\n\t\t\t\t\tfindPlayables(game);\n\t\t\t\tcase DECLARE_ATTACKERS:\n\t\t\t\t\tplayRemoval(game.getCombat().getAttackers(), game);\n\t\t\t\t\tplayDamage(game.getCombat().getAttackers(), game);\n\t\t\t\tcase END_COMBAT:\n\t\t\t\t\tplayDamage(game.getCombat().getAttackers(), game);\n\t\t\t}\n\t\t}\n\t\tthis.passed = true;\n\t}","id":50374,"modified_method":"@Override\n\tpublic void priority(Game game) {\n\t\tlogger.fine(\"priority\");\n\t\tUUID opponentId = game.getOpponents(playerId).iterator().next();\n\t\tif (game.getActivePlayerId().equals(playerId)) {\n\t\t\tif (game.isMainPhase() && game.getStack().isEmpty()) {\n\t\t\t\tplayLand(game);\n\t\t\t}\n\t\t\tswitch (game.getTurn().getStep()) {\n\t\t\t\tcase UPKEEP:\n\t\t\t\t\tfindPlayables(game);\n\t\t\t\t\tbreak;\n\t\t\t\tcase DRAW:\n\t\t\t\t\tlogState(game);\n\t\t\t\tcase PRECOMBAT_MAIN:\n\t\t\t\t\tfindPlayables(game);\n\t\t\t\t\tif (playableAbilities.size() > 0) {\n\t\t\t\t\t\tfor (ActivatedAbility ability: playableAbilities) {\n\t\t\t\t\t\t\tif (ability.canActivate(playerId, game)) {\n\t\t\t\t\t\t\t\tif (ability.getEffects().hasOutcome(Outcome.PutLandInPlay)) {\n\t\t\t\t\t\t\t\t\tif (this.activateAbility(ability, game))\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (ability.getEffects().hasOutcome(Outcome.PutCreatureInPlay)) {\n\t\t\t\t\t\t\t\t\tif (getOpponentBlockers(opponentId, game).size() <= 1)\n\t\t\t\t\t\t\t\t\t\tif (this.activateAbility(ability, game))\n\t\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase DECLARE_BLOCKERS:\n\t\t\t\t\tplayRemoval(game.getCombat().getBlockers(), game);\n\t\t\t\t\tplayDamage(game.getCombat().getBlockers(), game);\n\t\t\t\tcase END_COMBAT:\n\t\t\t\t\tplayDamage(game.getCombat().getBlockers(), game);\n\t\t\t\tcase POSTCOMBAT_MAIN:\n\t\t\t\t\tfindPlayables(game);\n\t\t\t\t\tif (game.getStack().isEmpty()) {\n\t\t\t\t\t\tif (playableNonInstant.size() > 0) {\n\t\t\t\t\t\t\tfor (Card card: playableNonInstant) {\n\t\t\t\t\t\t\t\tif (card.getSpellAbility().canActivate(playerId, game)) {\n\t\t\t\t\t\t\t\t\tif (this.activateAbility(card.getSpellAbility(), game))\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (playableAbilities.size() > 0) {\n\t\t\t\t\t\t\tfor (ActivatedAbility ability: playableAbilities) {\n\t\t\t\t\t\t\t\tif (ability.canActivate(playerId, game)) {\n\t\t\t\t\t\t\t\t\tif (!(ability.getEffects().get(0) instanceof BecomesCreatureSourceEOTEffect)) {\n\t\t\t\t\t\t\t\t\t\tif (this.activateAbility(ability, game))\n\t\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t//respond to opponent events\n\t\t\tswitch (game.getTurn().getStep()) {\n\t\t\t\tcase UPKEEP:\n\t\t\t\t\tfindPlayables(game);\n\t\t\t\tcase DECLARE_ATTACKERS:\n\t\t\t\t\tplayRemoval(game.getCombat().getAttackers(), game);\n\t\t\t\t\tplayDamage(game.getCombat().getAttackers(), game);\n\t\t\t\tcase END_COMBAT:\n\t\t\t\t\tplayDamage(game.getCombat().getAttackers(), game);\n\t\t\t}\n\t\t}\n\t\tthis.passed = true;\n\t}","commit_id":"7d27c06329c03d004463fab866c2dba53d922427","url":"https://github.com/magefree/mage"},{"original_method":"public ComputerPlayer(String name, Deck deck) {\n\t\tsuper(name, deck);\n\t\thuman = false;\n\t}","id":50375,"modified_method":"public ComputerPlayer(String name, Deck deck, RangeOfInfluence range) {\n\t\tsuper(name, deck, range);\n\t\thuman = false;\n\t}","commit_id":"7d27c06329c03d004463fab866c2dba53d922427","url":"https://github.com/magefree/mage"},{"original_method":"private void findPlayables(Game game) {\n\t\tplayableInstant.clear();\n\t\tplayableNonInstant.clear();\n\t\tunplayable.clear();\n\t\tplayableAbilities.clear();\n\t\tList<Card> nonLands = hand.getCards(new FilterNonlandCard());\n\t\tManaOptions available = getManaAvailable(game);\n\t\tavailable.addMana(manaPool.getMana());\n\n\t\tfor (Card card: nonLands) {\n\t\t\tManaOptions options = card.getManaCost().getOptions();\n\t\t\tif (card.getManaCost().getVariableCosts().size() > 0) {\n\t\t\t\t//don't use variable mana costs unless there is at least 3 extra mana for X\n\t\t\t\tfor (Mana option: options) {\n\t\t\t\t\toption.add(Mana.ColorlessMana(3));\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (Mana mana: options) {\n\t\t\t\tfor (Mana avail: available) {\n\t\t\t\t\tif (mana.enough(avail)) {\n\t\t\t\t\t\tif (card.getCardType().contains(CardType.INSTANT))\n\t\t\t\t\t\t\tplayableInstant.add(card);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tplayableNonInstant.add(card);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (!playableInstant.contains(card) && !playableNonInstant.contains(card))\n\t\t\t\t\t\t\tunplayable.put(mana.needed(avail), card);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (Permanent permanent: game.getBattlefield().getActivePermanents(playerId)) {\n\t\t\tfor (ActivatedAbility ability: permanent.getAbilities().getActivatedAbilities(Zone.BATTLEFIELD)) {\n\t\t\t\tif (!(ability instanceof ManaAbility) && ability.canActivate(playerId, game)) {\n\t\t\t\t\tManaOptions abilityOptions = ability.getManaCosts().getOptions();\n\t\t\t\t\tif (ability.getManaCosts().getVariableCosts().size() > 0) {\n\t\t\t\t\t\t//don't use variable mana costs unless there is at least 3 extra mana for X\n\t\t\t\t\t\tfor (Mana option: abilityOptions) {\n\t\t\t\t\t\t\toption.add(Mana.ColorlessMana(3));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (abilityOptions.size() == 0) {\n\t\t\t\t\t\tplayableAbilities.add(ability);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfor (Mana mana: abilityOptions) {\n\t\t\t\t\t\t\tfor (Mana avail: available) {\n\t\t\t\t\t\t\t\tif (mana.enough(avail)) {\n\t\t\t\t\t\t\t\t\tplayableAbilities.add(ability);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tlogger.fine(\"findPlayables: \" + playableInstant.toString() + \"---\" + playableNonInstant.toString() + \"---\" + playableAbilities.toString() );\n\t}","id":50376,"modified_method":"private void findPlayables(Game game) {\n\t\tplayableInstant.clear();\n\t\tplayableNonInstant.clear();\n\t\tunplayable.clear();\n\t\tplayableAbilities.clear();\n\t\tList<Card> nonLands = hand.getCards(new FilterNonlandCard());\n\t\tManaOptions available = getManaAvailable(game);\n\t\tavailable.addMana(manaPool.getMana());\n\n\t\tfor (Card card: nonLands) {\n\t\t\tManaOptions options = card.getManaCost().getOptions();\n\t\t\tif (card.getManaCost().getVariableCosts().size() > 0) {\n\t\t\t\t//don't use variable mana costs unless there is at least 3 extra mana for X\n\t\t\t\tfor (Mana option: options) {\n\t\t\t\t\toption.add(Mana.ColorlessMana(3));\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (Mana mana: options) {\n\t\t\t\tfor (Mana avail: available) {\n\t\t\t\t\tif (mana.enough(avail)) {\n\t\t\t\t\t\tif (card.getCardType().contains(CardType.INSTANT))\n\t\t\t\t\t\t\tplayableInstant.add(card);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tplayableNonInstant.add(card);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (!playableInstant.contains(card) && !playableNonInstant.contains(card))\n\t\t\t\t\t\t\tunplayable.put(mana.needed(avail), card);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (Permanent permanent: game.getBattlefield().getAllActivePermanents(playerId)) {\n\t\t\tfor (ActivatedAbility ability: permanent.getAbilities().getActivatedAbilities(Zone.BATTLEFIELD)) {\n\t\t\t\tif (!(ability instanceof ManaAbility) && ability.canActivate(playerId, game)) {\n\t\t\t\t\tManaOptions abilityOptions = ability.getManaCosts().getOptions();\n\t\t\t\t\tif (ability.getManaCosts().getVariableCosts().size() > 0) {\n\t\t\t\t\t\t//don't use variable mana costs unless there is at least 3 extra mana for X\n\t\t\t\t\t\tfor (Mana option: abilityOptions) {\n\t\t\t\t\t\t\toption.add(Mana.ColorlessMana(3));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (abilityOptions.size() == 0) {\n\t\t\t\t\t\tplayableAbilities.add(ability);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfor (Mana mana: abilityOptions) {\n\t\t\t\t\t\t\tfor (Mana avail: available) {\n\t\t\t\t\t\t\t\tif (mana.enough(avail)) {\n\t\t\t\t\t\t\t\t\tplayableAbilities.add(ability);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tlogger.fine(\"findPlayables: \" + playableInstant.toString() + \"---\" + playableNonInstant.toString() + \"---\" + playableAbilities.toString() );\n\t}","commit_id":"7d27c06329c03d004463fab866c2dba53d922427","url":"https://github.com/magefree/mage"},{"original_method":"protected static String getNewArgumentName(ValueArgument argument, Function1<String, Boolean> validator) {\n        ValueArgumentName argumentName = argument.getArgumentName();\n        JetExpression expression = argument.getArgumentExpression();\n\n        if (argumentName != null) {\n            return KotlinNameSuggester.INSTANCE$.suggestNameByName(argumentName.getAsName().asString(), validator);\n        }\n        else if (expression != null) {\n            return KotlinNameSuggester.INSTANCE$.suggestNamesByExpressionAndType(expression, validator, \"param\").get(0);\n        }\n\n        return KotlinNameSuggester.INSTANCE$.suggestNameByName(\"param\", validator);\n    }","id":50377,"modified_method":"protected static String getNewArgumentName(ValueArgument argument, Function1<String, Boolean> validator) {\n        ValueArgumentName argumentName = argument.getArgumentName();\n        JetExpression expression = argument.getArgumentExpression();\n\n        if (argumentName != null) {\n            return KotlinNameSuggester.INSTANCE$.suggestNameByName(argumentName.getAsName().asString(), validator);\n        }\n        else if (expression != null) {\n            BindingContext bindingContext = ResolvePackage.analyze(expression, BodyResolveMode.PARTIAL);\n            return KotlinNameSuggester.INSTANCE$.suggestNamesByExpressionAndType(expression, bindingContext, validator, \"param\").iterator().next();\n        }\n        else {\n            return KotlinNameSuggester.INSTANCE$.suggestNameByName(\"param\", validator);\n        }\n    }","commit_id":"f60470b3eb7a0229f45bf8966ef4e0a723d41273","url":"https://github.com/JetBrains/kotlin"},{"original_method":"public static void doRefactoring(\n            @NotNull final Project project,\n            @Nullable final Editor editor,\n            @Nullable JetExpression _expression,\n            @Nullable List<JetExpression> occurrencesToReplace,\n            @Nullable final Function1<JetProperty, Unit> onNonInteractiveFinish\n    ) {\n        if (_expression == null) {\n            showErrorHint(project, editor, JetRefactoringBundle.message(\"cannot.refactor.no.expression\"));\n            return;\n        }\n        if (_expression.getParent() instanceof JetParenthesizedExpression) {\n            _expression = (JetExpression)_expression.getParent();\n        }\n        final JetExpression expression = _expression;\n        boolean noTypeInference = false;\n        if (expression.getParent() instanceof JetQualifiedExpression) {\n            JetQualifiedExpression qualifiedExpression = (JetQualifiedExpression)expression.getParent();\n            if (qualifiedExpression.getReceiverExpression() != expression) {\n                showErrorHint(project, editor, JetRefactoringBundle.message(\"cannot.refactor.no.expression\"));\n                return;\n            }\n        }\n        else if (expression instanceof JetStatementExpression) {\n            showErrorHint(project, editor, JetRefactoringBundle.message(\"cannot.refactor.no.expression\"));\n            return;\n        }\n        else if (expression.getParent() instanceof JetOperationExpression) {\n            JetOperationExpression operationExpression = (JetOperationExpression)expression.getParent();\n            if (operationExpression.getOperationReference() == expression) {\n                showErrorHint(project, editor, JetRefactoringBundle.message(\"cannot.refactor.no.expression\"));\n                return;\n            }\n        }\n\n        AnalysisResult analysisResult = ResolvePackage.analyzeAndGetResult(expression);\n        final BindingContext bindingContext = analysisResult.getBindingContext();\n        final JetType expressionType = bindingContext.getType(expression); //can be null or error type\n        JetScope scope = bindingContext.get(BindingContext.RESOLUTION_SCOPE, expression);\n        if (scope != null) {\n            DataFlowInfo dataFlowInfo = BindingContextUtilPackage.getDataFlowInfo(bindingContext, expression);\n\n            ObservableBindingTrace bindingTrace = new ObservableBindingTrace(new BindingTraceContext());\n            JetType typeNoExpectedType = AnalyzerPackage.computeTypeInfoInContext(\n                    expression, scope, bindingTrace, dataFlowInfo, TypeUtils.NO_EXPECTED_TYPE, analysisResult.getModuleDescriptor()\n            ).getType();\n            if (expressionType != null && typeNoExpectedType != null && !JetTypeChecker.DEFAULT.equalTypes(expressionType,\n                                                                                                           typeNoExpectedType)) {\n                noTypeInference = true;\n            }\n        }\n\n        if (expressionType == null && bindingContext.get(BindingContext.QUALIFIER, expression) != null) {\n            showErrorHint(project, editor, JetRefactoringBundle.message(\"cannot.refactor.package.expression\"));\n            return;\n        }\n        if (expressionType != null &&\n            JetTypeChecker.DEFAULT.equalTypes(analysisResult.getModuleDescriptor().getBuiltIns().getUnitType(), expressionType)) {\n            showErrorHint(project, editor, JetRefactoringBundle.message(\"cannot.refactor.expression.has.unit.type\"));\n            return;\n        }\n        if (expressionType == null && noTypeInference) {\n            showErrorHint(project, editor, JetRefactoringBundle.message(\"cannot.refactor.expression.should.have.inferred.type\"));\n            return;\n        }\n        final PsiElement container = getContainer(expression);\n        PsiElement occurrenceContainer = getOccurrenceContainer(expression);\n        if (container == null) {\n            showErrorHint(project, editor, JetRefactoringBundle.message(\"cannot.refactor.no.container\"));\n            return;\n        }\n        final boolean isInplaceAvailableOnDataContext =\n            editor != null &&\n            editor.getSettings().isVariableInplaceRenameEnabled() &&\n            !ApplicationManager.getApplication().isUnitTestMode();\n\n        final List<JetExpression> allOccurrences;\n        if (occurrencesToReplace == null) {\n            allOccurrences = findOccurrences(occurrenceContainer, expression);\n        }\n        else {\n            allOccurrences = occurrencesToReplace;\n        }\n\n        final boolean finalNoTypeInference = noTypeInference;\n        Pass<OccurrencesChooser.ReplaceChoice> callback = new Pass<OccurrencesChooser.ReplaceChoice>() {\n            @Override\n            public void pass(OccurrencesChooser.ReplaceChoice replaceChoice) {\n                boolean replaceOccurrence = shouldReplaceOccurrence(expression, bindingContext, container);\n                List<JetExpression> allReplaces;\n                if (OccurrencesChooser.ReplaceChoice.ALL == replaceChoice) {\n                    if (allOccurrences.size() > 1) replaceOccurrence = true;\n                    allReplaces = allOccurrences;\n                }\n                else {\n                    allReplaces = Collections.singletonList(expression);\n                }\n\n                PsiElement commonParent = PsiTreeUtil.findCommonParent(allReplaces);\n                PsiElement commonContainer = getContainer(commonParent);\n                NameValidatorImpl validator = new NameValidatorImpl(\n                        commonContainer,\n                        calculateAnchor(commonParent, commonContainer, allReplaces),\n                        NameValidatorImpl.Target.PROPERTIES\n                );\n                final List<String> suggestedNames = KotlinNameSuggester.INSTANCE$.suggestNamesByExpressionAndType(expression, validator, \"value\");\n                final Ref<JetProperty> propertyRef = new Ref<JetProperty>();\n                final ArrayList<JetExpression> references = new ArrayList<JetExpression>();\n                final Ref<JetExpression> reference = new Ref<JetExpression>();\n                final Runnable introduceRunnable = introduceVariable(\n                        expression, suggestedNames.get(0), allReplaces, commonContainer,\n                        commonParent, replaceOccurrence, propertyRef, references,\n                        reference, finalNoTypeInference, expressionType, bindingContext);\n                CommandProcessor.getInstance().executeCommand(project, new Runnable() {\n                    @Override\n                    public void run() {\n                        ApplicationManager.getApplication().runWriteAction(introduceRunnable);\n                        JetProperty property = propertyRef.get();\n                        if (property != null) {\n                            if (editor != null) {\n                                editor.getCaretModel().moveToOffset(property.getTextOffset());\n                                editor.getSelectionModel().removeSelection();\n                                if (isInplaceAvailableOnDataContext) {\n                                    PsiDocumentManager.getInstance(project).commitDocument(editor.getDocument());\n                                    PsiDocumentManager.getInstance(project).\n                                            doPostponedOperationsAndUnblockDocument(editor.getDocument());\n                                    KotlinVariableInplaceIntroducer variableIntroducer =\n                                            new KotlinVariableInplaceIntroducer(property,\n                                                                                reference.get(),\n                                                                                references.toArray(new JetExpression[references.size()]),\n                                                                                suggestedNames,\n                                                                                /*todo*/ false,\n                                                                                /*todo*/ false,\n                                                                                expressionType,\n                                                                                finalNoTypeInference,\n                                                                                project,\n                                                                                editor);\n                                    variableIntroducer.startInplaceIntroduceTemplate();\n                                }\n                            }\n                            else if (onNonInteractiveFinish != null) {\n                                onNonInteractiveFinish.invoke(property);\n                            }\n                        }\n                    }\n                }, INTRODUCE_VARIABLE, null);\n            }\n        };\n        if (isInplaceAvailableOnDataContext && occurrencesToReplace == null) {\n            OccurrencesChooser.<JetExpression>simpleChooser(editor).\n                showChooser(expression, allOccurrences, callback);\n        }\n        else {\n            callback.pass(OccurrencesChooser.ReplaceChoice.ALL);\n        }\n    }","id":50378,"modified_method":"public static void doRefactoring(\n            @NotNull final Project project,\n            @Nullable final Editor editor,\n            @Nullable JetExpression _expression,\n            @Nullable List<JetExpression> occurrencesToReplace,\n            @Nullable final Function1<JetProperty, Unit> onNonInteractiveFinish\n    ) {\n        if (_expression == null) {\n            showErrorHint(project, editor, JetRefactoringBundle.message(\"cannot.refactor.no.expression\"));\n            return;\n        }\n        if (_expression.getParent() instanceof JetParenthesizedExpression) {\n            _expression = (JetExpression)_expression.getParent();\n        }\n        final JetExpression expression = _expression;\n        boolean noTypeInference = false;\n        if (expression.getParent() instanceof JetQualifiedExpression) {\n            JetQualifiedExpression qualifiedExpression = (JetQualifiedExpression)expression.getParent();\n            if (qualifiedExpression.getReceiverExpression() != expression) {\n                showErrorHint(project, editor, JetRefactoringBundle.message(\"cannot.refactor.no.expression\"));\n                return;\n            }\n        }\n        else if (expression instanceof JetStatementExpression) {\n            showErrorHint(project, editor, JetRefactoringBundle.message(\"cannot.refactor.no.expression\"));\n            return;\n        }\n        else if (expression.getParent() instanceof JetOperationExpression) {\n            JetOperationExpression operationExpression = (JetOperationExpression)expression.getParent();\n            if (operationExpression.getOperationReference() == expression) {\n                showErrorHint(project, editor, JetRefactoringBundle.message(\"cannot.refactor.no.expression\"));\n                return;\n            }\n        }\n\n        AnalysisResult analysisResult = ResolvePackage.analyzeAndGetResult(expression);\n        final BindingContext bindingContext = analysisResult.getBindingContext();\n        final JetType expressionType = bindingContext.getType(expression); //can be null or error type\n        JetScope scope = bindingContext.get(BindingContext.RESOLUTION_SCOPE, expression);\n        if (scope != null) {\n            DataFlowInfo dataFlowInfo = BindingContextUtilPackage.getDataFlowInfo(bindingContext, expression);\n\n            ObservableBindingTrace bindingTrace = new ObservableBindingTrace(new BindingTraceContext());\n            JetType typeNoExpectedType = AnalyzerPackage.computeTypeInfoInContext(\n                    expression, scope, bindingTrace, dataFlowInfo, TypeUtils.NO_EXPECTED_TYPE, analysisResult.getModuleDescriptor()\n            ).getType();\n            if (expressionType != null && typeNoExpectedType != null && !JetTypeChecker.DEFAULT.equalTypes(expressionType,\n                                                                                                           typeNoExpectedType)) {\n                noTypeInference = true;\n            }\n        }\n\n        if (expressionType == null && bindingContext.get(BindingContext.QUALIFIER, expression) != null) {\n            showErrorHint(project, editor, JetRefactoringBundle.message(\"cannot.refactor.package.expression\"));\n            return;\n        }\n        if (expressionType != null &&\n            JetTypeChecker.DEFAULT.equalTypes(analysisResult.getModuleDescriptor().getBuiltIns().getUnitType(), expressionType)) {\n            showErrorHint(project, editor, JetRefactoringBundle.message(\"cannot.refactor.expression.has.unit.type\"));\n            return;\n        }\n        if (expressionType == null && noTypeInference) {\n            showErrorHint(project, editor, JetRefactoringBundle.message(\"cannot.refactor.expression.should.have.inferred.type\"));\n            return;\n        }\n        final PsiElement container = getContainer(expression);\n        PsiElement occurrenceContainer = getOccurrenceContainer(expression);\n        if (container == null) {\n            showErrorHint(project, editor, JetRefactoringBundle.message(\"cannot.refactor.no.container\"));\n            return;\n        }\n        final boolean isInplaceAvailableOnDataContext =\n            editor != null &&\n            editor.getSettings().isVariableInplaceRenameEnabled() &&\n            !ApplicationManager.getApplication().isUnitTestMode();\n\n        final List<JetExpression> allOccurrences;\n        if (occurrencesToReplace == null) {\n            allOccurrences = findOccurrences(occurrenceContainer, expression);\n        }\n        else {\n            allOccurrences = occurrencesToReplace;\n        }\n\n        final boolean finalNoTypeInference = noTypeInference;\n        Pass<OccurrencesChooser.ReplaceChoice> callback = new Pass<OccurrencesChooser.ReplaceChoice>() {\n            @Override\n            public void pass(OccurrencesChooser.ReplaceChoice replaceChoice) {\n                boolean replaceOccurrence = shouldReplaceOccurrence(expression, bindingContext, container);\n                List<JetExpression> allReplaces;\n                if (OccurrencesChooser.ReplaceChoice.ALL == replaceChoice) {\n                    if (allOccurrences.size() > 1) replaceOccurrence = true;\n                    allReplaces = allOccurrences;\n                }\n                else {\n                    allReplaces = Collections.singletonList(expression);\n                }\n\n                PsiElement commonParent = PsiTreeUtil.findCommonParent(allReplaces);\n                PsiElement commonContainer = getContainer(commonParent);\n                NameValidatorImpl validator = new NameValidatorImpl(\n                        commonContainer,\n                        calculateAnchor(commonParent, commonContainer, allReplaces),\n                        NameValidatorImpl.Target.PROPERTIES\n                );\n                final Collection<String> suggestedNames = KotlinNameSuggester.INSTANCE$.suggestNamesByExpressionAndType(\n                        expression, ResolvePackage.analyze(expression, BodyResolveMode.PARTIAL), validator, \"value\");\n                final Ref<JetProperty> propertyRef = new Ref<JetProperty>();\n                final ArrayList<JetExpression> references = new ArrayList<JetExpression>();\n                final Ref<JetExpression> reference = new Ref<JetExpression>();\n                final Runnable introduceRunnable = introduceVariable(\n                        expression, suggestedNames.iterator().next(), allReplaces, commonContainer,\n                        commonParent, replaceOccurrence, propertyRef, references,\n                        reference, finalNoTypeInference, expressionType, bindingContext);\n                CommandProcessor.getInstance().executeCommand(project, new Runnable() {\n                    @Override\n                    public void run() {\n                        ApplicationManager.getApplication().runWriteAction(introduceRunnable);\n                        JetProperty property = propertyRef.get();\n                        if (property != null) {\n                            if (editor != null) {\n                                editor.getCaretModel().moveToOffset(property.getTextOffset());\n                                editor.getSelectionModel().removeSelection();\n                                if (isInplaceAvailableOnDataContext) {\n                                    PsiDocumentManager.getInstance(project).commitDocument(editor.getDocument());\n                                    PsiDocumentManager.getInstance(project).\n                                            doPostponedOperationsAndUnblockDocument(editor.getDocument());\n                                    KotlinVariableInplaceIntroducer variableIntroducer =\n                                            new KotlinVariableInplaceIntroducer(property,\n                                                                                reference.get(),\n                                                                                references.toArray(new JetExpression[references.size()]),\n                                                                                suggestedNames,\n                                                                                /*todo*/ false,\n                                                                                /*todo*/ false,\n                                                                                expressionType,\n                                                                                finalNoTypeInference,\n                                                                                project,\n                                                                                editor);\n                                    variableIntroducer.startInplaceIntroduceTemplate();\n                                }\n                            }\n                            else if (onNonInteractiveFinish != null) {\n                                onNonInteractiveFinish.invoke(property);\n                            }\n                        }\n                    }\n                }, INTRODUCE_VARIABLE, null);\n            }\n        };\n        if (isInplaceAvailableOnDataContext && occurrencesToReplace == null) {\n            OccurrencesChooser.<JetExpression>simpleChooser(editor).\n                showChooser(expression, allOccurrences, callback);\n        }\n        else {\n            callback.pass(OccurrencesChooser.ReplaceChoice.ALL);\n        }\n    }","commit_id":"f60470b3eb7a0229f45bf8966ef4e0a723d41273","url":"https://github.com/JetBrains/kotlin"},{"original_method":"private void refreshValue(int row, int col)\n   {\n      if(getModel().isCellResolved(row, col))\n      {\n         textFields[row][col].setText(\"\"+getModel().getPossibleCellValues(row, col).get(0));\n      }\n      else\n      {\n         textFields[row][col].setText(\"\");\n      }      \n   }","id":50379,"modified_method":"private void refreshValue(int row, int col)\n   {\n      if(getModel().isCellResolved(row, col))\n      {\n         textFields[row][col].setText(\"\"+getModel().getPossibleCellValues(row, col).iterator().next());\n      }\n      else\n      {\n         textFields[row][col].setText(\"\");\n      }      \n   }","commit_id":"a515d4197ea9c4628058bdaad2c033b18db439e4","url":"https://github.com/droolsjbpm/drools"},{"original_method":"@Test\n    public void testAddDependencyDescriptorForClientModule() {\n        final ModuleDependency dependencyDependency = context.mock(ModuleDependency.class, \"dependencyDependency\");\n        final DefaultClientModule clientModule = new DefaultClientModule(\"org.gradle\", \"gradle-core\", \"1.0\", TEST_DEP_CONF);\n        final ModuleRevisionId testModuleRevisionId = IvyUtil.createModuleRevisionId(clientModule);\n\n        setUpDependency(clientModule);\n        clientModule.addDependency(dependencyDependency);\n        final ModuleDescriptor moduleDescriptorForClientModule = context.mock(ModuleDescriptor.class);\n        context.checking(new Expectations() {{\n            allowing(moduleDescriptorFactoryForClientModule).createModuleDescriptor(\n                    testModuleRevisionId,\n                    WrapUtil.toSet(dependencyDependency)\n            );\n            will(returnValue(moduleDescriptorForClientModule));\n        }});\n\n        clientModuleDependencyDescriptorFactory.addDependencyDescriptor(TEST_CONF, moduleDescriptor, clientModule);\n        DefaultDependencyDescriptor dependencyDescriptor = (DefaultDependencyDescriptor) moduleDescriptor.getDependencies()[0];\n        assertDependencyDescriptorHasCommonFixtureValues(dependencyDescriptor);\n        assertEquals(testModuleRevisionId,\n                dependencyDescriptor.getDependencyRevisionId());\n        assertFalse(dependencyDescriptor.isChanging());\n    }","id":50380,"modified_method":"@Test\n    public void testAddDependencyDescriptorForClientModule() {\n        final ModuleDependency dependencyDependency = context.mock(ModuleDependency.class, \"dependencyDependency\");\n        final DefaultClientModule clientModule = new DefaultClientModule(\"org.gradle\", \"gradle-core\", \"1.0\", TEST_DEP_CONF);\n        final ModuleRevisionId testModuleRevisionId = IvyUtil.createModuleRevisionId(clientModule);\n\n        setUpDependency(clientModule);\n        clientModule.addDependency(dependencyDependency);\n        final ModuleDescriptor moduleDescriptorForClientModule = context.mock(ModuleDescriptor.class);\n        context.checking(new Expectations() {{\n            allowing(moduleDescriptorFactoryForClientModule).createModuleDescriptor(\n                    testModuleRevisionId,\n                    WrapUtil.toSet(dependencyDependency)\n            );\n            will(returnValue(moduleDescriptorForClientModule));\n        }});\n\n        DefaultDependencyDescriptor dependencyDescriptor = clientModuleDependencyDescriptorFactory.createDependencyDescriptor(TEST_CONF, clientModule, moduleDescriptor);\n        assertDependencyDescriptorHasCommonFixtureValues(dependencyDescriptor);\n        assertEquals(testModuleRevisionId, dependencyDescriptor.getDependencyRevisionId());\n        assertFalse(dependencyDescriptor.isChanging());\n    }","commit_id":"a402899977f7b8b6e9ed14118f02e64ec149035b","url":"https://github.com/gradle/gradle"},{"original_method":"@Test\n    public void testAddWithNullGroupAndNullVersionShouldHaveEmptyStringModuleRevisionValues() {\n        final ClientModule clientModule = new DefaultClientModule(null, \"gradle-core\", null, TEST_DEP_CONF);\n        final ModuleRevisionId testModuleRevisionId = IvyUtil.createModuleRevisionId(clientModule);\n        final ModuleDescriptor moduleDescriptorForClientModule = context.mock(ModuleDescriptor.class);\n        context.checking(new Expectations() {{\n            allowing(moduleDescriptorFactoryForClientModule).createModuleDescriptor(\n                    testModuleRevisionId,\n                    WrapUtil.<ModuleDependency>toSet()\n            );\n            will(returnValue(moduleDescriptorForClientModule));\n        }});\n\n        clientModuleDependencyDescriptorFactory.addDependencyDescriptor(TEST_CONF, moduleDescriptor, clientModule);\n        DefaultDependencyDescriptor dependencyDescriptor = (DefaultDependencyDescriptor) moduleDescriptor.getDependencies()[0];\n        assertThat(dependencyDescriptor.getDependencyRevisionId(), equalTo(testModuleRevisionId));\n    }","id":50381,"modified_method":"@Test\n    public void testAddWithNullGroupAndNullVersionShouldHaveEmptyStringModuleRevisionValues() {\n        final ClientModule clientModule = new DefaultClientModule(null, \"gradle-core\", null, TEST_DEP_CONF);\n        final ModuleRevisionId testModuleRevisionId = IvyUtil.createModuleRevisionId(clientModule);\n        final ModuleDescriptor moduleDescriptorForClientModule = context.mock(ModuleDescriptor.class);\n        context.checking(new Expectations() {{\n            allowing(moduleDescriptorFactoryForClientModule).createModuleDescriptor(\n                    testModuleRevisionId,\n                    WrapUtil.<ModuleDependency>toSet()\n            );\n            will(returnValue(moduleDescriptorForClientModule));\n        }});\n\n        DefaultDependencyDescriptor dependencyDescriptor = clientModuleDependencyDescriptorFactory.createDependencyDescriptor(TEST_CONF, clientModule, moduleDescriptor);\n        assertThat(dependencyDescriptor.getDependencyRevisionId(), equalTo(testModuleRevisionId));\n    }","commit_id":"a402899977f7b8b6e9ed14118f02e64ec149035b","url":"https://github.com/gradle/gradle"},{"original_method":"private void addDependencies(DefaultModuleDescriptor moduleDescriptor, Collection<? extends Configuration> configurations) {\r\n        for (Configuration configuration : configurations) {\r\n            for (ModuleDependency dependency : configuration.getDependencies().withType(ModuleDependency.class)) {\r\n                dependencyDescriptorFactory.addDependencyDescriptor(configuration, moduleDescriptor, dependency);\r\n            }\r\n        }\r\n    }","id":50382,"modified_method":"private void addDependencies(DefaultModuleDescriptor moduleDescriptor, Collection<? extends Configuration> configurations) {\r\n        for (Configuration configuration : configurations) {\r\n            for (ModuleDependency dependency : configuration.getDependencies().withType(ModuleDependency.class)) {\r\n                dependencyDescriptorFactory.addDependencyDescriptor(configuration.getName(), moduleDescriptor, dependency);\r\n            }\r\n        }\r\n    }","commit_id":"a402899977f7b8b6e9ed14118f02e64ec149035b","url":"https://github.com/gradle/gradle"},{"original_method":"private void associateDependencyWithDescriptor(final ModuleDependency dependency, final DefaultModuleDescriptor parent,\r\n                                                   final Configuration configuration) {\r\n        context.checking(new Expectations() {{\r\n            allowing(dependencyDescriptorFactoryStub).addDependencyDescriptor(with(sameInstance(configuration)),\r\n                    with(equal(parent)), with(sameInstance(dependency)));\r\n        }});\r\n    }","id":50383,"modified_method":"private void associateDependencyWithDescriptor(final ModuleDependency dependency, final DefaultModuleDescriptor parent,\r\n                                                   final Configuration configuration) {\r\n        context.checking(new Expectations() {{\r\n            allowing(dependencyDescriptorFactoryStub).addDependencyDescriptor(with(equal(configuration.getName())),\r\n                    with(equal(parent)), with(sameInstance(dependency)));\r\n        }});\r\n    }","commit_id":"a402899977f7b8b6e9ed14118f02e64ec149035b","url":"https://github.com/gradle/gradle"},{"original_method":"protected ExternalModuleDependencyDescriptorFactory createExternalModuleDependencyDescriptorFactory() {\n        return new ExternalModuleDependencyDescriptorFactory(get(ExcludeRuleConverter.class));\n    }","id":50384,"modified_method":"protected ExternalModuleIvyDependencyDescriptorFactory createExternalModuleDependencyDescriptorFactory() {\n        return new ExternalModuleIvyDependencyDescriptorFactory(get(ExcludeRuleConverter.class));\n    }","commit_id":"a402899977f7b8b6e9ed14118f02e64ec149035b","url":"https://github.com/gradle/gradle"},{"original_method":"protected ResolveModuleDescriptorConverter createResolveModuleDescriptorConverter() {\n        DependencyDescriptorFactory dependencyDescriptorFactoryDelegate = get(DependencyDescriptorFactoryDelegate.class);\n        return new ResolveModuleDescriptorConverter(\n                get(ModuleDescriptorFactory.class),\n                get(ConfigurationsToModuleDescriptorConverter.class),\n                new DefaultDependenciesToModuleDescriptorConverter(\n                        dependencyDescriptorFactoryDelegate,\n                        get(ExcludeRuleConverter.class)));\n\n    }","id":50385,"modified_method":"protected ResolveModuleDescriptorConverter createResolveModuleDescriptorConverter() {\n        return new ResolveModuleDescriptorConverter(\n                get(ModuleDescriptorFactory.class),\n                get(DependencyDescriptorFactory.class),\n                get(ConfigurationsToModuleDescriptorConverter.class),\n                new DefaultDependenciesToModuleDescriptorConverter(\n                        get(DependencyDescriptorFactory.class),\n                        get(ExcludeRuleConverter.class)));\n\n    }","commit_id":"a402899977f7b8b6e9ed14118f02e64ec149035b","url":"https://github.com/gradle/gradle"},{"original_method":"protected DependencyDescriptorFactoryDelegate createDependencyDescriptorFactory() {\n        DefaultModuleDescriptorFactoryForClientModule clientModuleDescriptorFactory = new DefaultModuleDescriptorFactoryForClientModule();\n        DependencyDescriptorFactoryDelegate dependencyDescriptorFactoryDelegate = new DependencyDescriptorFactoryDelegate(\n                new ClientModuleDependencyDescriptorFactory(\n                        get(ExcludeRuleConverter.class),\n                        clientModuleDescriptorFactory\n                ),\n                new ProjectDependencyDescriptorFactory(\n                        get(ExcludeRuleConverter.class)),\n                get(ExternalModuleDependencyDescriptorFactory.class));\n        clientModuleDescriptorFactory.setDependencyDescriptorFactory(dependencyDescriptorFactoryDelegate);\n        return dependencyDescriptorFactoryDelegate;\n    }","id":50386,"modified_method":"protected DependencyDescriptorFactory createDependencyDescriptorFactory() {\n        DefaultModuleDescriptorFactoryForClientModule clientModuleDescriptorFactory = new DefaultModuleDescriptorFactoryForClientModule();\n        DependencyDescriptorFactory dependencyDescriptorFactory = new DefaultDependencyDescriptorFactory(\n                new ClientModuleIvyDependencyDescriptorFactory(\n                        get(ExcludeRuleConverter.class),\n                        clientModuleDescriptorFactory\n                ),\n                new ProjectIvyDependencyDescriptorFactory(\n                        get(ExcludeRuleConverter.class)),\n                get(ExternalModuleIvyDependencyDescriptorFactory.class));\n        clientModuleDescriptorFactory.setDependencyDescriptorFactory(dependencyDescriptorFactory);\n        return dependencyDescriptorFactory;\n    }","commit_id":"a402899977f7b8b6e9ed14118f02e64ec149035b","url":"https://github.com/gradle/gradle"},{"original_method":"public DefaultDependencyDescriptor addDependencyDescriptor(String configuration, DefaultModuleDescriptor moduleDescriptor,\n                                            ModuleDependency dependency) {\n            this.configuration = configuration;\n            this.parent = moduleDescriptor;\n            this.dependency = dependency;\n            return null;\n        }","id":50387,"modified_method":"public void addDependencyDescriptor(String configuration, DefaultModuleDescriptor moduleDescriptor,\n                                            ModuleDependency dependency) {\n            this.configuration = configuration;\n            this.parent = moduleDescriptor;\n            this.dependency = dependency;\n        }","commit_id":"a402899977f7b8b6e9ed14118f02e64ec149035b","url":"https://github.com/gradle/gradle"},{"original_method":"@Test\r\n    public void testAddWithNullGroupAndNullVersionShouldHaveEmptyStringModuleRevisionValues() {\r\n        ModuleDependency dependency = new DefaultExternalModuleDependency(null, \"gradle-core\", null, TEST_DEP_CONF);\r\n        externalModuleDependencyDescriptorFactory.addDependencyDescriptor(TEST_CONF, moduleDescriptor, dependency);\r\n        DefaultDependencyDescriptor dependencyDescriptor = (DefaultDependencyDescriptor) moduleDescriptor.getDependencies()[0];\r\n        assertThat(dependencyDescriptor.getDependencyRevisionId(), equalTo(IvyUtil.createModuleRevisionId(dependency)));\r\n    }","id":50388,"modified_method":"@Test\r\n    public void testAddWithNullGroupAndNullVersionShouldHaveEmptyStringModuleRevisionValues() {\r\n        ModuleDependency dependency = new DefaultExternalModuleDependency(null, \"gradle-core\", null, TEST_DEP_CONF);\r\n        DefaultDependencyDescriptor dependencyDescriptor = externalModuleDependencyDescriptorFactory.createDependencyDescriptor(TEST_CONF, dependency, moduleDescriptor);\r\n        assertThat(dependencyDescriptor.getDependencyRevisionId(), equalTo(IvyUtil.createModuleRevisionId(dependency)));\r\n    }","commit_id":"a402899977f7b8b6e9ed14118f02e64ec149035b","url":"https://github.com/gradle/gradle"},{"original_method":"@Test\r\n    public void testCreateFromModuleDependency() {\r\n        DefaultExternalModuleDependency moduleDependency = new DefaultExternalModuleDependency(\"org.gradle\",\r\n                \"gradle-core\", \"1.0\", TEST_DEP_CONF);\r\n        setUpDependency(moduleDependency);\r\n\r\n        externalModuleDependencyDescriptorFactory.addDependencyDescriptor(TEST_CONF, moduleDescriptor,\r\n                moduleDependency);\r\n        DefaultDependencyDescriptor dependencyDescriptor = (DefaultDependencyDescriptor) moduleDescriptor\r\n                .getDependencies()[0];\r\n\r\n        assertEquals(moduleDependency.isChanging(), dependencyDescriptor.isChanging());\r\n        assertEquals(dependencyDescriptor.isForce(), moduleDependency.isForce());\r\n        assertEquals(IvyUtil.createModuleRevisionId(moduleDependency), dependencyDescriptor.getDependencyRevisionId());\r\n        assertDependencyDescriptorHasCommonFixtureValues(dependencyDescriptor);\r\n    }","id":50389,"modified_method":"@Test\r\n    public void testCreateFromModuleDependency() {\r\n        DefaultExternalModuleDependency moduleDependency = new DefaultExternalModuleDependency(\"org.gradle\",\r\n                \"gradle-core\", \"1.0\", TEST_DEP_CONF);\r\n        setUpDependency(moduleDependency);\r\n\r\n        DefaultDependencyDescriptor dependencyDescriptor = externalModuleDependencyDescriptorFactory.createDependencyDescriptor(TEST_CONF, moduleDependency, moduleDescriptor);\r\n\r\n        assertEquals(moduleDependency.isChanging(), dependencyDescriptor.isChanging());\r\n        assertEquals(dependencyDescriptor.isForce(), moduleDependency.isForce());\r\n        assertEquals(IvyUtil.createModuleRevisionId(moduleDependency), dependencyDescriptor.getDependencyRevisionId());\r\n        assertDependencyDescriptorHasCommonFixtureValues(dependencyDescriptor);\r\n    }","commit_id":"a402899977f7b8b6e9ed14118f02e64ec149035b","url":"https://github.com/gradle/gradle"},{"original_method":"@TaskAction\n    public void doGenerate() {\n\n        IvyModuleDescriptorInternal descriptorInternal = toIvyModuleDescriptorInternal(getDescriptor());\n\n        XmlTransformer xmlTransformer = new XmlTransformer();\n        xmlTransformer.addAction(descriptorInternal.getXmlAction());\n\n        Set<Configuration> publishConfigurations = createPopulatedConfiguration(descriptorInternal.getArtifacts(), descriptorInternal.getRuntimeDependencies());\n\n        ModuleDescriptorConverter moduleDescriptorConverter = publicationServices.getDescriptorFileModuleConverter();\n        ModuleDescriptor moduleDescriptor = moduleDescriptorConverter.convert(publishConfigurations, descriptorInternal.getModule());\n        IvyModuleDescriptorWriter ivyModuleDescriptorWriter = publicationServices.getIvyModuleDescriptorWriter();\n        ivyModuleDescriptorWriter.write(moduleDescriptor, getDestination(), xmlTransformer);\n    }","id":50390,"modified_method":"@TaskAction\n    public void doGenerate() {\n\n        IvyModuleDescriptorInternal descriptorInternal = toIvyModuleDescriptorInternal(getDescriptor());\n\n        XmlTransformer xmlTransformer = new XmlTransformer();\n        xmlTransformer.addAction(descriptorInternal.getXmlAction());\n\n        IvyDescriptorBuilder ivyDescriptorBuilder = new IvyDescriptorBuilder(publicationServices.getDescriptorFileModuleConverter(), descriptorInternal.getModule());\n        ivyDescriptorBuilder.addConfiguration(\"runtime\");\n        ivyDescriptorBuilder.addConfiguration(\"default\", \"runtime\");\n\n        for (Dependency runtimeDependency : descriptorInternal.getRuntimeDependencies()) {\n            ivyDescriptorBuilder.addDependency(\"runtime\", runtimeDependency);\n        }\n        for (PublishArtifact artifact : descriptorInternal.getArtifacts()) {\n            ivyDescriptorBuilder.addArtifact(\"runtime\", artifact);\n        }\n\n        IvyModuleDescriptorWriter ivyModuleDescriptorWriter = publicationServices.getIvyModuleDescriptorWriter();\n        ivyModuleDescriptorWriter.write(ivyDescriptorBuilder.build(), getDestination(), xmlTransformer);\n    }","commit_id":"a402899977f7b8b6e9ed14118f02e64ec149035b","url":"https://github.com/gradle/gradle"},{"original_method":"public Publication create(String name) {\n            return instantiator.newInstance(\n                    DefaultIvyPublication.class,\n                    name, instantiator, dependencyMetaDataProvider.getModule()\n            );\n\n        }","id":50391,"modified_method":"public Publication create(String name) {\n            Module module = dependencyMetaDataProvider.getModule();\n            return instantiator.newInstance(\n                    DefaultIvyPublication.class,\n                    name, instantiator, module\n            );\n\n        }","commit_id":"a402899977f7b8b6e9ed14118f02e64ec149035b","url":"https://github.com/gradle/gradle"},{"original_method":"@Test\r\n    public void testCreateFromProjectDependency() {\r\n        ProjectDependency projectDependency = createProjectDependency(TEST_DEP_CONF);\r\n        setUpDependency(projectDependency);\r\n        projectDependencyDescriptorFactory.addDependencyDescriptor(TEST_CONF, moduleDescriptor, projectDependency);\r\n        ProjectDependencyDescriptor dependencyDescriptor = (ProjectDependencyDescriptor) moduleDescriptor.getDependencies()[0];\r\n\r\n        assertDependencyDescriptorHasCommonFixtureValues(dependencyDescriptor);\r\n        assertFalse(dependencyDescriptor.isChanging());\r\n        assertFalse(dependencyDescriptor.isForce());\r\n        assertEquals(ModuleRevisionId.newInstance(\"someGroup\", \"test\", \"someVersion\"), dependencyDescriptor.getDependencyRevisionId());\r\n        assertSame(projectDependency.getDependencyProject(), dependencyDescriptor.getTargetProject());\r\n    }","id":50392,"modified_method":"@Test\r\n    public void testCreateFromProjectDependency() {\r\n        ProjectDependency projectDependency = createProjectDependency(TEST_DEP_CONF);\r\n        setUpDependency(projectDependency);\r\n        ProjectDependencyDescriptor dependencyDescriptor = (ProjectDependencyDescriptor) projectDependencyDescriptorFactory.createDependencyDescriptor(TEST_CONF, projectDependency, moduleDescriptor);\r\n\r\n        assertDependencyDescriptorHasCommonFixtureValues(dependencyDescriptor);\r\n        assertFalse(dependencyDescriptor.isChanging());\r\n        assertFalse(dependencyDescriptor.isForce());\r\n        assertEquals(ModuleRevisionId.newInstance(\"someGroup\", \"test\", \"someVersion\"), dependencyDescriptor.getDependencyRevisionId());\r\n        assertSame(projectDependency.getDependencyProject(), dependencyDescriptor.getTargetProject());\r\n    }","commit_id":"a402899977f7b8b6e9ed14118f02e64ec149035b","url":"https://github.com/gradle/gradle"},{"original_method":"public ResolveModuleDescriptorConverter(ModuleDescriptorFactory moduleDescriptorFactory,\r\n                                            ConfigurationsToModuleDescriptorConverter configurationsToModuleDescriptorConverter,\r\n                                            DependenciesToModuleDescriptorConverter dependenciesToModuleDescriptorConverter) {\r\n        this.moduleDescriptorFactory = moduleDescriptorFactory;\r\n        this.configurationsToModuleDescriptorConverter = configurationsToModuleDescriptorConverter;\r\n        this.dependenciesToModuleDescriptorConverter = dependenciesToModuleDescriptorConverter;\r\n    }","id":50393,"modified_method":"public ResolveModuleDescriptorConverter(ModuleDescriptorFactory moduleDescriptorFactory,\r\n                                            DependencyDescriptorFactory dependencyDescriptorFactory,\r\n                                            ConfigurationsToModuleDescriptorConverter configurationsToModuleDescriptorConverter,\r\n                                            DependenciesToModuleDescriptorConverter dependenciesToModuleDescriptorConverter) {\r\n        this.moduleDescriptorFactory = moduleDescriptorFactory;\r\n        this.dependencyDescriptorFactory = dependencyDescriptorFactory;\r\n        this.configurationsToModuleDescriptorConverter = configurationsToModuleDescriptorConverter;\r\n        this.dependenciesToModuleDescriptorConverter = dependenciesToModuleDescriptorConverter;\r\n    }","commit_id":"a402899977f7b8b6e9ed14118f02e64ec149035b","url":"https://github.com/gradle/gradle"},{"original_method":"public static ComponentDto newModuleDto(ComponentDto subProjectOrProject) {\n    String uuid = Uuids.create();\n    return new ComponentDto()\n      .setUuid(Uuids.create())\n      .setProjectUuid(subProjectOrProject.projectUuid())\n      .setModuleUuid(subProjectOrProject.uuid())\n      .setModuleUuidPath(subProjectOrProject.moduleUuidPath() == null ? subProjectOrProject.uuid() + \".\" : subProjectOrProject.moduleUuidPath() + subProjectOrProject.uuid() + \".\")\n      .setKey(\"KEY_\" + uuid)\n      .setName(\"NAME_\" + uuid)\n      .setLongName(\"LONG_NAME_\" + uuid)\n      .setParentProjectId(subProjectOrProject.getId())\n      .setScope(Scopes.PROJECT)\n      .setQualifier(Qualifiers.MODULE)\n      .setPath(\"module\")\n      .setLanguage(null)\n      .setEnabled(true);\n  }","id":50394,"modified_method":"public static ComponentDto newModuleDto(ComponentDto subProjectOrProject) {\n    String uuid = Uuids.create();\n    return new ComponentDto()\n      .setUuid(Uuids.create())\n      .setProjectUuid(subProjectOrProject.projectUuid())\n      .setModuleUuid(subProjectOrProject.uuid())\n      .setModuleUuidPath(subProjectOrProject.moduleUuidPath() == null ? subProjectOrProject.uuid() : subProjectOrProject.moduleUuidPath() + \".\" + subProjectOrProject.uuid())\n      .setKey(\"KEY_\" + uuid)\n      .setName(\"NAME_\" + uuid)\n      .setLongName(\"LONG_NAME_\" + uuid)\n      .setParentProjectId(subProjectOrProject.getId())\n      .setScope(Scopes.PROJECT)\n      .setQualifier(Qualifiers.MODULE)\n      .setPath(\"module\")\n      .setLanguage(null)\n      .setEnabled(true);\n  }","commit_id":"57c683d7042fb519aeacb77362e8da268dbfc5ee","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private void migrateComponentsWithoutUuid(DbSession readSession, DbSession writeSession) {\n    for (Component component : readSession.getMapper(Migration50Mapper.class).selectComponentsWithoutUuid()) {\n      String uuid = Uuids.create();\n      component.setUuid(uuid);\n      component.setProjectUuid(uuid);\n\n      writeSession.getMapper(Migration50Mapper.class).updateComponentUuids(component);\n      counter.getAndIncrement();\n    }\n  }","id":50395,"modified_method":"private void migrateComponentsWithoutUuid(DbSession readSession, DbSession writeSession) {\n    for (Component component : readSession.getMapper(Migration50Mapper.class).selectComponentsWithoutUuid()) {\n      String uuid = Uuids.create();\n      component.setUuid(uuid);\n      component.setProjectUuid(uuid);\n      component.setModuleUuidPath(\"\");\n\n      writeSession.getMapper(Migration50Mapper.class).updateComponentUuids(component);\n      counter.getAndIncrement();\n    }\n  }","commit_id":"57c683d7042fb519aeacb77362e8da268dbfc5ee","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private void migrateEnabledComponents(DbSession readSession, DbSession writeSession, Component project, Map<Long, String> uuidByComponentId) {\n    Map<Long, Component> componentsBySnapshotId = newHashMap();\n\n    List<Component> components = readSession.getMapper(Migration50Mapper.class).selectComponentChildrenForProjects(project.getId());\n    components.add(project);\n    List<Component> componentsToMigrate = newArrayList();\n    for (Component component : components) {\n      componentsBySnapshotId.put(component.getSnapshotId(), component);\n\n      // Not migrate components already having an UUID\n      if (component.getUuid() == null) {\n        component.setUuid(getOrCreateUuid(component, uuidByComponentId));\n        component.setProjectUuid(getOrCreateUuid(project, uuidByComponentId));\n        componentsToMigrate.add(component);\n      }\n    }\n\n    for (Component component : componentsToMigrate) {\n      updateComponent(component, project, componentsBySnapshotId, uuidByComponentId);\n      writeSession.getMapper(Migration50Mapper.class).updateComponentUuids(component);\n      counter.getAndIncrement();\n    }\n  }","id":50396,"modified_method":"private void migrateEnabledComponents(DbSession readSession, DbSession writeSession, Component project, Map<Long, String> uuidByComponentId) {\n    Map<Long, Component> componentsBySnapshotId = newHashMap();\n\n    List<Component> components = readSession.getMapper(Migration50Mapper.class).selectComponentChildrenForProjects(project.getId());\n    components.add(project);\n    List<Component> componentsToMigrate = newArrayList();\n    for (Component component : components) {\n      componentsBySnapshotId.put(component.getSnapshotId(), component);\n\n      // Not migrate components already having an UUID\n      if (component.getUuid() == null) {\n        component.setUuid(getOrCreateUuid(component, uuidByComponentId));\n        component.setProjectUuid(getOrCreateUuid(project, uuidByComponentId));\n        component.setModuleUuidPath(\"\");\n        componentsToMigrate.add(component);\n      }\n    }\n\n    for (Component component : componentsToMigrate) {\n      updateComponent(component, project, componentsBySnapshotId, uuidByComponentId);\n      writeSession.getMapper(Migration50Mapper.class).updateComponentUuids(component);\n      counter.getAndIncrement();\n    }\n  }","commit_id":"57c683d7042fb519aeacb77362e8da268dbfc5ee","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private void migrateDisabledComponents(DbSession readSession, DbSession writeSession, Component project, Map<Long, String> uuidByComponentId) {\n    String projectUuid = getOrCreateUuid(project, uuidByComponentId);\n    for (Component component : readSession.getMapper(Migration50Mapper.class).selectDisabledDirectComponentChildrenForProjects(project.getId())) {\n      component.setUuid(getOrCreateUuid(component, uuidByComponentId));\n      component.setProjectUuid(projectUuid);\n\n      writeSession.getMapper(Migration50Mapper.class).updateComponentUuids(component);\n      counter.getAndIncrement();\n    }\n    for (Component component : readSession.getMapper(Migration50Mapper.class).selectDisabledNoneDirectComponentChildrenForProjects(project.getId())) {\n      component.setUuid(getOrCreateUuid(component, uuidByComponentId));\n      component.setProjectUuid(projectUuid);\n\n      writeSession.getMapper(Migration50Mapper.class).updateComponentUuids(component);\n      counter.getAndIncrement();\n    }\n  }","id":50397,"modified_method":"private void migrateDisabledComponents(DbSession readSession, DbSession writeSession, Component project, Map<Long, String> uuidByComponentId) {\n    String projectUuid = getOrCreateUuid(project, uuidByComponentId);\n    for (Component component : readSession.getMapper(Migration50Mapper.class).selectDisabledDirectComponentChildrenForProjects(project.getId())) {\n      component.setUuid(getOrCreateUuid(component, uuidByComponentId));\n      component.setProjectUuid(projectUuid);\n      component.setModuleUuidPath(\"\");\n\n      writeSession.getMapper(Migration50Mapper.class).updateComponentUuids(component);\n      counter.getAndIncrement();\n    }\n    for (Component component : readSession.getMapper(Migration50Mapper.class).selectDisabledNoneDirectComponentChildrenForProjects(project.getId())) {\n      component.setUuid(getOrCreateUuid(component, uuidByComponentId));\n      component.setProjectUuid(projectUuid);\n      component.setModuleUuidPath(\"\");\n\n      writeSession.getMapper(Migration50Mapper.class).updateComponentUuids(component);\n      counter.getAndIncrement();\n    }\n  }","commit_id":"57c683d7042fb519aeacb77362e8da268dbfc5ee","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void not_migrate_already_migrated_components() throws Exception {\n    db.prepareDbUnit(getClass(), \"not_migrate_already_migrated_components.xml\");\n\n    migration.execute();\n    session.commit();\n\n    Component root = mapper.selectComponentByKey(\"org.struts:struts\");\n    assertThat(root.getUuid()).isEqualTo(\"ABCD\");\n    assertThat(root.getProjectUuid()).isEqualTo(\"ABCD\");\n    assertThat(root.getModuleUuid()).isNull();\n    assertThat(root.getModuleUuidPath()).isNull();\n\n    Component module = mapper.selectComponentByKey(\"org.struts:struts-core\");\n    assertThat(module.getUuid()).isEqualTo(\"BCDE\");\n    assertThat(module.getProjectUuid()).isEqualTo(\"ABCD\");\n    assertThat(module.getModuleUuid()).isEqualTo(\"ABCD\");\n    assertThat(module.getModuleUuidPath()).isEqualTo(\"ABCD\");\n\n    Component subModule = mapper.selectComponentByKey(\"org.struts:struts-db\");\n    assertThat(subModule.getUuid()).isNotNull();\n    assertThat(subModule.getProjectUuid()).isEqualTo(\"ABCD\");\n    assertThat(subModule.getModuleUuid()).isEqualTo(\"BCDE\");\n    assertThat(subModule.getModuleUuidPath()).isEqualTo(\"ABCD.BCDE\");\n\n    Component directory = mapper.selectComponentByKey(\"org.struts:struts-core:src/org/struts\");\n    assertThat(directory.getUuid()).isNotNull();\n    assertThat(directory.getProjectUuid()).isEqualTo(\"ABCD\");\n    assertThat(directory.getModuleUuid()).isEqualTo(subModule.getUuid());\n    assertThat(directory.getModuleUuidPath()).isEqualTo(\"ABCD.BCDE.\" + subModule.getUuid());\n\n    Component file = mapper.selectComponentByKey(\"org.struts:struts-core:src/org/struts/RequestContext.java\");\n    assertThat(file.getUuid()).isNotNull();\n    assertThat(file.getProjectUuid()).isEqualTo(\"ABCD\");\n    assertThat(file.getModuleUuid()).isEqualTo(subModule.getUuid());\n    assertThat(file.getModuleUuidPath()).isEqualTo(\"ABCD.BCDE.\" + subModule.getUuid());\n\n    Component removedFile = mapper.selectComponentByKey(\"org.struts:struts-core:src/org/struts/RequestContext2.java\");\n    assertThat(removedFile.getUuid()).isEqualTo(\"DCBA\");\n    assertThat(removedFile.getProjectUuid()).isEqualTo(\"ABCD\");\n    assertThat(removedFile.getModuleUuid()).isEqualTo(\"BCDE\");\n    assertThat(removedFile.getModuleUuidPath()).isEqualTo(\"ABCD.BCDE\");\n  }","id":50398,"modified_method":"@Test\n  public void not_migrate_already_migrated_components() throws Exception {\n    db.prepareDbUnit(getClass(), \"not_migrate_already_migrated_components.xml\");\n\n    migration.execute();\n    session.commit();\n\n    Component root = mapper.selectComponentByKey(\"org.struts:struts\");\n    assertThat(root.getUuid()).isEqualTo(\"ABCD\");\n    assertThat(root.getProjectUuid()).isEqualTo(\"ABCD\");\n    assertThat(root.getModuleUuid()).isNull();\n    assertThat(root.getModuleUuidPath()).isEmpty();\n\n    Component module = mapper.selectComponentByKey(\"org.struts:struts-core\");\n    assertThat(module.getUuid()).isEqualTo(\"BCDE\");\n    assertThat(module.getProjectUuid()).isEqualTo(\"ABCD\");\n    assertThat(module.getModuleUuid()).isEqualTo(\"ABCD\");\n    assertThat(module.getModuleUuidPath()).isEqualTo(\"ABCD\");\n\n    Component subModule = mapper.selectComponentByKey(\"org.struts:struts-db\");\n    assertThat(subModule.getUuid()).isNotNull();\n    assertThat(subModule.getProjectUuid()).isEqualTo(\"ABCD\");\n    assertThat(subModule.getModuleUuid()).isEqualTo(\"BCDE\");\n    assertThat(subModule.getModuleUuidPath()).isEqualTo(\"ABCD.BCDE\");\n\n    Component directory = mapper.selectComponentByKey(\"org.struts:struts-core:src/org/struts\");\n    assertThat(directory.getUuid()).isNotNull();\n    assertThat(directory.getProjectUuid()).isEqualTo(\"ABCD\");\n    assertThat(directory.getModuleUuid()).isEqualTo(subModule.getUuid());\n    assertThat(directory.getModuleUuidPath()).isEqualTo(\"ABCD.BCDE.\" + subModule.getUuid());\n\n    Component file = mapper.selectComponentByKey(\"org.struts:struts-core:src/org/struts/RequestContext.java\");\n    assertThat(file.getUuid()).isNotNull();\n    assertThat(file.getProjectUuid()).isEqualTo(\"ABCD\");\n    assertThat(file.getModuleUuid()).isEqualTo(subModule.getUuid());\n    assertThat(file.getModuleUuidPath()).isEqualTo(\"ABCD.BCDE.\" + subModule.getUuid());\n\n    Component removedFile = mapper.selectComponentByKey(\"org.struts:struts-core:src/org/struts/RequestContext2.java\");\n    assertThat(removedFile.getUuid()).isEqualTo(\"DCBA\");\n    assertThat(removedFile.getProjectUuid()).isEqualTo(\"ABCD\");\n    assertThat(removedFile.getModuleUuid()).isEqualTo(\"BCDE\");\n    assertThat(removedFile.getModuleUuidPath()).isEqualTo(\"ABCD.BCDE\");\n  }","commit_id":"57c683d7042fb519aeacb77362e8da268dbfc5ee","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void migrate_library() throws Exception {\n    db.prepareDbUnit(getClass(), \"migrate_library.xml\");\n\n    migration.execute();\n    session.commit();\n\n    Component root = mapper.selectComponentByKey(\"org.hamcrest:hamcrest-library\");\n    assertThat(root.getUuid()).isNotNull();\n    assertThat(root.getProjectUuid()).isEqualTo(root.getUuid());\n    assertThat(root.getModuleUuid()).isNull();\n    assertThat(root.getModuleUuidPath()).isNull();\n  }","id":50399,"modified_method":"@Test\n  public void migrate_library() throws Exception {\n    db.prepareDbUnit(getClass(), \"migrate_library.xml\");\n\n    migration.execute();\n    session.commit();\n\n    Component root = mapper.selectComponentByKey(\"org.hamcrest:hamcrest-library\");\n    assertThat(root.getUuid()).isNotNull();\n    assertThat(root.getProjectUuid()).isEqualTo(root.getUuid());\n    assertThat(root.getModuleUuid()).isNull();\n    assertThat(root.getModuleUuidPath()).isEmpty();\n  }","commit_id":"57c683d7042fb519aeacb77362e8da268dbfc5ee","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void migrate_view() throws Exception {\n    db.prepareDbUnit(getClass(), \"migrate_view.xml\");\n\n    migration.execute();\n    session.commit();\n\n    Component view = mapper.selectComponentByKey(\"view\");\n    assertThat(view.getUuid()).isNotNull();\n    assertThat(view.getProjectUuid()).isEqualTo(view.getUuid());\n    assertThat(view.getModuleUuid()).isNull();\n    assertThat(view.getModuleUuidPath()).isNull();\n\n    Component subView = mapper.selectComponentByKey(\"subView\");\n    assertThat(subView.getUuid()).isNotNull();\n    assertThat(subView.getProjectUuid()).isEqualTo(view.getUuid());\n    assertThat(subView.getModuleUuid()).isEqualTo(view.getUuid());\n    assertThat(subView.getModuleUuidPath()).isEqualTo(view.getUuid());\n\n    Component techProject = mapper.selectComponentByKey(\"vieworg.struts:struts\");\n    assertThat(techProject.getUuid()).isNotNull();\n    assertThat(techProject.getProjectUuid()).isEqualTo(view.getUuid());\n    assertThat(techProject.getModuleUuid()).isEqualTo(subView.getUuid());\n    assertThat(techProject.getModuleUuidPath()).isEqualTo(view.getUuid() + \".\" + subView.getUuid());\n  }","id":50400,"modified_method":"@Test\n  public void migrate_view() throws Exception {\n    db.prepareDbUnit(getClass(), \"migrate_view.xml\");\n\n    migration.execute();\n    session.commit();\n\n    Component view = mapper.selectComponentByKey(\"view\");\n    assertThat(view.getUuid()).isNotNull();\n    assertThat(view.getProjectUuid()).isEqualTo(view.getUuid());\n    assertThat(view.getModuleUuid()).isNull();\n    assertThat(view.getModuleUuidPath()).isEmpty();\n\n    Component subView = mapper.selectComponentByKey(\"subView\");\n    assertThat(subView.getUuid()).isNotNull();\n    assertThat(subView.getProjectUuid()).isEqualTo(view.getUuid());\n    assertThat(subView.getModuleUuid()).isEqualTo(view.getUuid());\n    assertThat(subView.getModuleUuidPath()).isEqualTo(view.getUuid());\n\n    Component techProject = mapper.selectComponentByKey(\"vieworg.struts:struts\");\n    assertThat(techProject.getUuid()).isNotNull();\n    assertThat(techProject.getProjectUuid()).isEqualTo(view.getUuid());\n    assertThat(techProject.getModuleUuid()).isEqualTo(subView.getUuid());\n    assertThat(techProject.getModuleUuidPath()).isEqualTo(view.getUuid() + \".\" + subView.getUuid());\n  }","commit_id":"57c683d7042fb519aeacb77362e8da268dbfc5ee","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void migrate_disable_components() throws Exception {\n    db.prepareDbUnit(getClass(), \"migrate_disable_components.xml\");\n\n    migration.execute();\n    session.commit();\n\n    Component root = mapper.selectComponentByKey(\"org.struts:struts\");\n    assertThat(root.getUuid()).isNotNull();\n\n    Component module = mapper.selectComponentByKey(\"org.struts:struts-core\");\n    assertThat(module.getUuid()).isNotNull();\n    assertThat(module.getProjectUuid()).isEqualTo(root.getUuid());\n    // Module and module path will always be null for removed components\n    assertThat(module.getModuleUuid()).isNull();\n    assertThat(module.getModuleUuidPath()).isNull();\n\n    Component subModule = mapper.selectComponentByKey(\"org.struts:struts-db\");\n    assertThat(subModule.getUuid()).isNotNull();\n    assertThat(subModule.getProjectUuid()).isEqualTo(root.getUuid());\n    // Module and module path will always be null for removed components\n    assertThat(subModule.getModuleUuid()).isNull();\n    assertThat(subModule.getModuleUuidPath()).isNull();\n\n    Component directory = mapper.selectComponentByKey(\"org.struts:struts-core:src/org/struts\");\n    assertThat(directory.getUuid()).isNotNull();\n    assertThat(directory.getProjectUuid()).isEqualTo(root.getUuid());\n    // Module and module path will always be null for removed components\n    assertThat(directory.getModuleUuid()).isNull();\n    assertThat(directory.getModuleUuidPath()).isNull();\n\n    Component file = mapper.selectComponentByKey(\"org.struts:struts-core:src/org/struts/RequestContext.java\");\n    assertThat(file.getUuid()).isNotNull();\n    assertThat(file.getProjectUuid()).isEqualTo(root.getUuid());\n    // Module and module path will always be null for removed components\n    assertThat(file.getModuleUuid()).isNull();\n    assertThat(file.getModuleUuidPath()).isNull();\n  }","id":50401,"modified_method":"@Test\n  public void migrate_disable_components() throws Exception {\n    db.prepareDbUnit(getClass(), \"migrate_disable_components.xml\");\n\n    migration.execute();\n    session.commit();\n\n    Component root = mapper.selectComponentByKey(\"org.struts:struts\");\n    assertThat(root.getUuid()).isNotNull();\n\n    Component module = mapper.selectComponentByKey(\"org.struts:struts-core\");\n    assertThat(module.getUuid()).isNotNull();\n    assertThat(module.getProjectUuid()).isEqualTo(root.getUuid());\n    // Module and module path will always be null for removed components\n    assertThat(module.getModuleUuid()).isNull();\n    assertThat(module.getModuleUuidPath()).isEmpty();\n\n    Component subModule = mapper.selectComponentByKey(\"org.struts:struts-db\");\n    assertThat(subModule.getUuid()).isNotNull();\n    assertThat(subModule.getProjectUuid()).isEqualTo(root.getUuid());\n    // Module and module path will always be null for removed components\n    assertThat(subModule.getModuleUuid()).isNull();\n    assertThat(subModule.getModuleUuidPath()).isEmpty();\n\n    Component directory = mapper.selectComponentByKey(\"org.struts:struts-core:src/org/struts\");\n    assertThat(directory.getUuid()).isNotNull();\n    assertThat(directory.getProjectUuid()).isEqualTo(root.getUuid());\n    // Module and module path will always be null for removed components\n    assertThat(directory.getModuleUuid()).isNull();\n    assertThat(directory.getModuleUuidPath()).isEmpty();\n\n    Component file = mapper.selectComponentByKey(\"org.struts:struts-core:src/org/struts/RequestContext.java\");\n    assertThat(file.getUuid()).isNotNull();\n    assertThat(file.getProjectUuid()).isEqualTo(root.getUuid());\n    // Module and module path will always be null for removed components\n    assertThat(file.getModuleUuid()).isNull();\n    assertThat(file.getModuleUuidPath()).isEmpty();\n  }","commit_id":"57c683d7042fb519aeacb77362e8da268dbfc5ee","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void migrate_components_without_uuid() throws Exception {\n    db.prepareDbUnit(getClass(), \"migrate_components_without_uuid.xml\");\n\n    migration.execute();\n    session.commit();\n\n    // Root project migrated\n    Component root = mapper.selectComponentByKey(\"org.struts:struts\");\n    assertThat(root.getUuid()).isNotNull();\n    assertThat(root.getProjectUuid()).isEqualTo(root.getUuid());\n    assertThat(root.getModuleUuid()).isNull();\n    assertThat(root.getModuleUuidPath()).isNull();\n\n    // Module with a snapshot having no islast=true\n    Component module = mapper.selectComponentByKey(\"org.struts:struts-core\");\n    assertThat(module.getUuid()).isNotNull();\n    assertThat(module.getProjectUuid()).isEqualTo(module.getUuid());\n    assertThat(module.getModuleUuid()).isNull();\n    assertThat(module.getModuleUuidPath()).isNull();\n\n    // File linked on a no more existing project\n     Component file = mapper.selectComponentByKey(\"org.struts:struts-core:src/org/struts/RequestContext.java\");\n    assertThat(file.getUuid()).isNotNull();\n    assertThat(file.getProjectUuid()).isEqualTo(file.getUuid());\n    assertThat(file.getModuleUuid()).isNull();\n    assertThat(file.getModuleUuidPath()).isNull();\n  }","id":50402,"modified_method":"@Test\n  public void migrate_components_without_uuid() throws Exception {\n    db.prepareDbUnit(getClass(), \"migrate_components_without_uuid.xml\");\n\n    migration.execute();\n    session.commit();\n\n    // Root project migrated\n    Component root = mapper.selectComponentByKey(\"org.struts:struts\");\n    assertThat(root.getUuid()).isNotNull();\n    assertThat(root.getProjectUuid()).isEqualTo(root.getUuid());\n    assertThat(root.getModuleUuid()).isNull();\n    assertThat(root.getModuleUuidPath()).isEmpty();\n\n    // Module with a snapshot having no islast=true\n    Component module = mapper.selectComponentByKey(\"org.struts:struts-core\");\n    assertThat(module.getUuid()).isNotNull();\n    assertThat(module.getProjectUuid()).isEqualTo(module.getUuid());\n    assertThat(module.getModuleUuid()).isNull();\n    assertThat(module.getModuleUuidPath()).isEmpty();\n\n    // File linked on a no more existing project\n    Component file = mapper.selectComponentByKey(\"org.struts:struts-core:src/org/struts/RequestContext.java\");\n    assertThat(file.getUuid()).isNotNull();\n    assertThat(file.getProjectUuid()).isEqualTo(file.getUuid());\n    assertThat(file.getModuleUuid()).isNull();\n    assertThat(file.getModuleUuidPath()).isEmpty();\n  }","commit_id":"57c683d7042fb519aeacb77362e8da268dbfc5ee","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void migrate_components() throws Exception {\n    db.prepareDbUnit(getClass(), \"migrate_components.xml\");\n\n    migration.execute();\n    session.commit();\n\n    Component root = mapper.selectComponentByKey(\"org.struts:struts\");\n    assertThat(root.getUuid()).isNotNull();\n    assertThat(root.getProjectUuid()).isEqualTo(root.getUuid());\n    assertThat(root.getModuleUuid()).isNull();\n    assertThat(root.getModuleUuidPath()).isNull();\n\n    Component module = mapper.selectComponentByKey(\"org.struts:struts-core\");\n    assertThat(module.getUuid()).isNotNull();\n    assertThat(module.getProjectUuid()).isEqualTo(root.getUuid());\n    assertThat(module.getModuleUuid()).isEqualTo(root.getUuid());\n    assertThat(module.getModuleUuidPath()).isEqualTo(root.getUuid());\n\n    Component subModule = mapper.selectComponentByKey(\"org.struts:struts-db\");\n    assertThat(subModule.getUuid()).isNotNull();\n    assertThat(subModule.getProjectUuid()).isEqualTo(root.getUuid());\n    assertThat(subModule.getModuleUuid()).isEqualTo(module.getUuid());\n    assertThat(subModule.getModuleUuidPath()).isEqualTo(root.getUuid() + \".\" + module.getUuid());\n\n    Component directory = mapper.selectComponentByKey(\"org.struts:struts-core:src/org/struts\");\n    assertThat(directory.getUuid()).isNotNull();\n    assertThat(directory.getProjectUuid()).isEqualTo(root.getUuid());\n    assertThat(directory.getModuleUuid()).isEqualTo(subModule.getUuid());\n    assertThat(directory.getModuleUuidPath()).isEqualTo(root.getUuid() + \".\" + module.getUuid() + \".\" + subModule.getUuid());\n\n    Component file = mapper.selectComponentByKey(\"org.struts:struts-core:src/org/struts/RequestContext.java\");\n    assertThat(file.getUuid()).isNotNull();\n    assertThat(file.getProjectUuid()).isEqualTo(root.getUuid());\n    assertThat(file.getModuleUuid()).isEqualTo(subModule.getUuid());\n    assertThat(file.getModuleUuidPath()).isEqualTo(root.getUuid() + \".\" + module.getUuid() + \".\" + subModule.getUuid());\n\n    // Verify that each generated uuid is unique\n    assertThat(ImmutableSet.of(root.getUuid(), module.getUuid(), subModule.getUuid(), directory.getUuid(), file.getUuid())).hasSize(5);\n  }","id":50403,"modified_method":"@Test\n  public void migrate_components() throws Exception {\n    db.prepareDbUnit(getClass(), \"migrate_components.xml\");\n\n    migration.execute();\n    session.commit();\n\n    Component root = mapper.selectComponentByKey(\"org.struts:struts\");\n    assertThat(root.getUuid()).isNotNull();\n    assertThat(root.getProjectUuid()).isEqualTo(root.getUuid());\n    assertThat(root.getModuleUuid()).isNull();\n    assertThat(root.getModuleUuidPath()).isEmpty();\n\n    Component module = mapper.selectComponentByKey(\"org.struts:struts-core\");\n    assertThat(module.getUuid()).isNotNull();\n    assertThat(module.getProjectUuid()).isEqualTo(root.getUuid());\n    assertThat(module.getModuleUuid()).isEqualTo(root.getUuid());\n    assertThat(module.getModuleUuidPath()).isEqualTo(root.getUuid());\n\n    Component subModule = mapper.selectComponentByKey(\"org.struts:struts-db\");\n    assertThat(subModule.getUuid()).isNotNull();\n    assertThat(subModule.getProjectUuid()).isEqualTo(root.getUuid());\n    assertThat(subModule.getModuleUuid()).isEqualTo(module.getUuid());\n    assertThat(subModule.getModuleUuidPath()).isEqualTo(root.getUuid() + \".\" + module.getUuid());\n\n    Component directory = mapper.selectComponentByKey(\"org.struts:struts-core:src/org/struts\");\n    assertThat(directory.getUuid()).isNotNull();\n    assertThat(directory.getProjectUuid()).isEqualTo(root.getUuid());\n    assertThat(directory.getModuleUuid()).isEqualTo(subModule.getUuid());\n    assertThat(directory.getModuleUuidPath()).isEqualTo(root.getUuid() + \".\" + module.getUuid() + \".\" + subModule.getUuid());\n\n    Component file = mapper.selectComponentByKey(\"org.struts:struts-core:src/org/struts/RequestContext.java\");\n    assertThat(file.getUuid()).isNotNull();\n    assertThat(file.getProjectUuid()).isEqualTo(root.getUuid());\n    assertThat(file.getModuleUuid()).isEqualTo(subModule.getUuid());\n    assertThat(file.getModuleUuidPath()).isEqualTo(root.getUuid() + \".\" + module.getUuid() + \".\" + subModule.getUuid());\n\n    // Verify that each generated uuid is unique\n    assertThat(ImmutableSet.of(root.getUuid(), module.getUuid(), subModule.getUuid(), directory.getUuid(), file.getUuid())).hasSize(5);\n  }","commit_id":"57c683d7042fb519aeacb77362e8da268dbfc5ee","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void migrate_provisioned_project() throws Exception {\n    db.prepareDbUnit(getClass(), \"migrate_provisioned_project.xml\");\n\n    migration.execute();\n    session.commit();\n\n    Component root = mapper.selectComponentByKey(\"org.struts:struts\");\n    assertThat(root.getUuid()).isNotNull();\n    assertThat(root.getProjectUuid()).isEqualTo(root.getUuid());\n    assertThat(root.getModuleUuid()).isNull();\n    assertThat(root.getModuleUuidPath()).isNull();\n  }","id":50404,"modified_method":"@Test\n  public void migrate_provisioned_project() throws Exception {\n    db.prepareDbUnit(getClass(), \"migrate_provisioned_project.xml\");\n\n    migration.execute();\n    session.commit();\n\n    Component root = mapper.selectComponentByKey(\"org.struts:struts\");\n    assertThat(root.getUuid()).isNotNull();\n    assertThat(root.getProjectUuid()).isEqualTo(root.getUuid());\n    assertThat(root.getModuleUuid()).isNull();\n    assertThat(root.getModuleUuidPath()).isEmpty();\n  }","commit_id":"57c683d7042fb519aeacb77362e8da268dbfc5ee","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void migrate_developer() throws Exception {\n    db.prepareDbUnit(getClass(), \"migrate_developer.xml\");\n\n    migration.execute();\n    session.commit();\n\n    Component dev = mapper.selectComponentByKey(\"DEV:developer@company.net\");\n    assertThat(dev.getUuid()).isNotNull();\n    assertThat(dev.getProjectUuid()).isEqualTo(dev.getUuid());\n    assertThat(dev.getModuleUuid()).isNull();\n    assertThat(dev.getModuleUuidPath()).isNull();\n\n    Component techDev = mapper.selectComponentByKey(\"DEV:developer@company.net:org.struts:struts\");\n    assertThat(techDev.getUuid()).isNotNull();\n    assertThat(techDev.getProjectUuid()).isEqualTo(dev.getUuid());\n    assertThat(techDev.getModuleUuid()).isEqualTo(dev.getUuid());\n    assertThat(techDev.getModuleUuidPath()).isEqualTo(dev.getUuid());\n  }","id":50405,"modified_method":"@Test\n  public void migrate_developer() throws Exception {\n    db.prepareDbUnit(getClass(), \"migrate_developer.xml\");\n\n    migration.execute();\n    session.commit();\n\n    Component dev = mapper.selectComponentByKey(\"DEV:developer@company.net\");\n    assertThat(dev.getUuid()).isNotNull();\n    assertThat(dev.getProjectUuid()).isEqualTo(dev.getUuid());\n    assertThat(dev.getModuleUuid()).isNull();\n    assertThat(dev.getModuleUuidPath()).isEmpty();\n\n    Component techDev = mapper.selectComponentByKey(\"DEV:developer@company.net:org.struts:struts\");\n    assertThat(techDev.getUuid()).isNotNull();\n    assertThat(techDev.getProjectUuid()).isEqualTo(dev.getUuid());\n    assertThat(techDev.getModuleUuid()).isEqualTo(dev.getUuid());\n    assertThat(techDev.getModuleUuidPath()).isEqualTo(dev.getUuid());\n  }","commit_id":"57c683d7042fb519aeacb77362e8da268dbfc5ee","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"/**\n   * Used by the Views Plugin\n   */\n  public ResourceDao insertOrUpdate(ResourceDto... resources) {\n    SqlSession session = mybatis.openSession(false);\n    ResourceMapper mapper = session.getMapper(ResourceMapper.class);\n    Date now = new Date(system2.now());\n    try {\n      for (ResourceDto resource : resources) {\n        if (resource.getId() == null) {\n          // Fix for Views\n          if (resource.getUuid() == null && Scopes.PROJECT.equals(resource.getScope())) {\n            String uuid = Uuids.create();\n            resource.setUuid(uuid);\n            resource.setProjectUuid(uuid);\n          }\n          resource.setCreatedAt(now);\n          resource.setAuthorizationUpdatedAt(now.getTime());\n          mapper.insert(resource);\n        } else {\n          mapper.update(resource);\n        }\n      }\n      session.commit();\n    } finally {\n      MyBatis.closeQuietly(session);\n    }\n    return this;\n  }","id":50406,"modified_method":"/**\n   * Used by the Views Plugin\n   */\n  public ResourceDao insertOrUpdate(ResourceDto... resources) {\n    SqlSession session = mybatis.openSession(false);\n    ResourceMapper mapper = session.getMapper(ResourceMapper.class);\n    Date now = new Date(system2.now());\n    try {\n      for (ResourceDto resource : resources) {\n        if (resource.getId() == null) {\n          // Fix for Views\n          if (resource.getUuid() == null && Scopes.PROJECT.equals(resource.getScope())) {\n            String uuid = Uuids.create();\n            resource.setUuid(uuid);\n            resource.setProjectUuid(uuid);\n            resource.setModuleUuidPath(\"\");\n          }\n          resource.setCreatedAt(now);\n          resource.setAuthorizationUpdatedAt(now.getTime());\n          mapper.insert(resource);\n        } else {\n          mapper.update(resource);\n        }\n      }\n      session.commit();\n    } finally {\n      MyBatis.closeQuietly(session);\n    }\n    return this;\n  }","commit_id":"57c683d7042fb519aeacb77362e8da268dbfc5ee","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void should_insert() {\n    setupData(\"insert\");\n\n    ResourceDto file1 = new ResourceDto()\n      .setUuid(\"ABCD\").setProjectUuid(\"EFGH\")\n      .setKey(\"org.struts:struts:/src/main/java/org/struts/Action.java\")\n      .setDeprecatedKey(\"org.struts:struts:org.struts.Action\").setScope(Scopes.FILE).setQualifier(Qualifiers.FILE)\n      .setLanguage(\"java\").setName(\"Action\").setLongName(\"org.struts.Action\").setPath(\"/foo/bar\");\n    ResourceDto file2 = new ResourceDto()\n      .setUuid(\"BCDE\").setProjectUuid(\"FGHI\")\n      .setKey(\"org.struts:struts:/src/main/java/org/struts/Filter.java\")\n      .setDeprecatedKey(\"org.struts:struts:org.struts.Filter\").setScope(Scopes.FILE).setQualifier(Qualifiers.FILE)\n      .setLanguage(\"java\").setName(\"Filter\").setLongName(\"org.struts.Filter\");\n\n    dao.insertOrUpdate(file1, file2);\n\n    assertThat(file1.getId()).isNotNull();\n    assertThat(file2.getId()).isNotNull();\n    checkTables(\"insert\", new String[] {\"authorization_updated_at\"}, \"projects\");\n\n    // SONAR-3636 : created_at must be fed when inserting a new entry in the 'projects' table\n    ResourceDto fileLoadedFromDB = dao.getResource(file1.getId());\n    assertThat(fileLoadedFromDB.getCreatedAt()).isNotNull();\n    assertThat(fileLoadedFromDB.getAuthorizationUpdatedAt()).isNotNull();\n  }","id":50407,"modified_method":"@Test\n  public void should_insert() {\n    setupData(\"insert\");\n\n    ResourceDto file1 = new ResourceDto()\n      .setUuid(\"ABCD\").setProjectUuid(\"EFGH\").setModuleUuid(\"EFGH\").setModuleUuidPath(\"EFGH\")\n      .setKey(\"org.struts:struts:/src/main/java/org/struts/Action.java\")\n      .setDeprecatedKey(\"org.struts:struts:org.struts.Action\").setScope(Scopes.FILE).setQualifier(Qualifiers.FILE)\n      .setLanguage(\"java\").setName(\"Action\").setLongName(\"org.struts.Action\").setPath(\"/foo/bar\");\n    ResourceDto file2 = new ResourceDto()\n      .setUuid(\"BCDE\").setProjectUuid(\"FGHI\").setModuleUuid(\"FGHI\").setModuleUuidPath(\"FGHI\")\n      .setKey(\"org.struts:struts:/src/main/java/org/struts/Filter.java\")\n      .setDeprecatedKey(\"org.struts:struts:org.struts.Filter\").setScope(Scopes.FILE).setQualifier(Qualifiers.FILE)\n      .setLanguage(\"java\").setName(\"Filter\").setLongName(\"org.struts.Filter\");\n\n    dao.insertOrUpdate(file1, file2);\n\n    assertThat(file1.getId()).isNotNull();\n    assertThat(file2.getId()).isNotNull();\n    checkTables(\"insert\", new String[] {\"authorization_updated_at\"}, \"projects\");\n\n    // SONAR-3636 : created_at must be fed when inserting a new entry in the 'projects' table\n    ResourceDto fileLoadedFromDB = dao.getResource(file1.getId());\n    assertThat(fileLoadedFromDB.getCreatedAt()).isNotNull();\n    assertThat(fileLoadedFromDB.getAuthorizationUpdatedAt()).isNotNull();\n  }","commit_id":"57c683d7042fb519aeacb77362e8da268dbfc5ee","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void insert_add_uuids_on_project_if_missing() {\n    setupData(\"insert\");\n\n    ResourceDto project = new ResourceDto()\n      .setKey(\"org.struts:struts:struts\")\n      .setScope(Scopes.PROJECT)\n      .setQualifier(Qualifiers.PROJECT);\n\n    ResourceDto file = new ResourceDto()\n      .setKey(\"org.struts:struts:/src/main/java/org/struts/Action.java\")\n      .setScope(Scopes.FILE)\n      .setQualifier(Qualifiers.FILE);\n\n    dao.insertOrUpdate(project, file);\n\n    assertThat(project.getUuid()).isNotNull();\n    assertThat(project.getProjectUuid()).isEqualTo(project.getUuid());\n\n    assertThat(file.getUuid()).isNull();\n    assertThat(file.getProjectUuid()).isNull();\n  }","id":50408,"modified_method":"@Test\n  public void insert_add_uuids_on_project_if_missing() {\n    setupData(\"insert\");\n\n    ResourceDto project = new ResourceDto()\n      .setKey(\"org.struts:struts:struts\")\n      .setScope(Scopes.PROJECT)\n      .setQualifier(Qualifiers.PROJECT);\n\n    ResourceDto file = new ResourceDto()\n      .setKey(\"org.struts:struts:/src/main/java/org/struts/Action.java\")\n      .setScope(Scopes.FILE)\n      .setQualifier(Qualifiers.FILE);\n\n    dao.insertOrUpdate(project, file);\n\n    assertThat(project.getUuid()).isNotNull();\n    assertThat(project.getProjectUuid()).isEqualTo(project.getUuid());\n    assertThat(project.getModuleUuidPath()).isEmpty();\n\n    assertThat(file.getUuid()).isNull();\n    assertThat(file.getProjectUuid()).isNull();\n    assertThat(file.getModuleUuidPath()).isNull();\n  }","commit_id":"57c683d7042fb519aeacb77362e8da268dbfc5ee","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public String language() {\n    return language;\n  }","id":50409,"modified_method":"/**\n   * Is null on manual rules\n   */\n  @CheckForNull\n  public String language() {\n    return language;\n  }","commit_id":"51b8c91b138aab690921e647e30deabbaf61e75b","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public String severity() {\n    return severity;\n  }","id":50410,"modified_method":"/**\n   * Is null on manual rules\n   */\n  @CheckForNull\n  public String severity() {\n    return severity;\n  }","commit_id":"51b8c91b138aab690921e647e30deabbaf61e75b","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public void insertAuthorAndDeveloper(String login, ResourceDto resourceDto) {\n    SqlSession session = mybatis.openSession(false);\n    try {\n      // Hack in order to set \".\" on DEV\n      if (resourceDto.getModuleUuidPath() == null || resourceDto.getModuleUuidPath().isEmpty()) {\n        resourceDto.setModuleUuidPath(ComponentDto.MODULE_UUID_PATH_SEP);\n      }\n      resourceDao.insertUsingExistingSession(resourceDto, session);\n      insertAuthor(login, resourceDto.getId(), session);\n      session.commit();\n    } finally {\n      MyBatis.closeQuietly(session);\n    }\n  }","id":50411,"modified_method":"public void insertAuthorAndDeveloper(String login, ResourceDto resourceDto) {\n    SqlSession session = mybatis.openSession(false);\n    try {\n      // Hack in order to set \".\" on DEV\n      if (Strings.isNullOrEmpty(resourceDto.getModuleUuidPath())) {\n        resourceDto.setModuleUuidPath(ComponentDto.MODULE_UUID_PATH_SEP);\n      }\n      resourceDao.insertUsingExistingSession(resourceDto, session);\n      insertAuthor(login, resourceDto.getId(), session);\n      session.commit();\n    } finally {\n      MyBatis.closeQuietly(session);\n    }\n  }","commit_id":"51b8c91b138aab690921e647e30deabbaf61e75b","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void shouldInsertAuthorAndDeveloper() throws Exception {\n    setupData(\"shouldInsertAuthorAndDeveloper\");\n\n    String login = \"developer@company.net\";\n    ResourceDto resourceDto = new ResourceDto().setName(login).setQualifier(\"DEV\").setUuid(\"ABCD\").setProjectUuid(\"ABCD\");\n    dao.insertAuthorAndDeveloper(login, resourceDto);\n\n    checkTables(\"shouldInsertAuthorAndDeveloper\",\n      new String[] {\"created_at\", \"updated_at\", \"copy_resource_id\", \"description\", \"enabled\", \"kee\", \"deprecated_kee\", \"path\", \"language\", \"long_name\", \"person_id\", \"root_id\",\n        \"scope\", \"authorization_updated_at\"},\n      \"authors\", \"projects\");\n  }","id":50412,"modified_method":"@Test\n  public void shouldInsertAuthorAndDeveloper() throws Exception {\n    setupData(\"shouldInsertAuthorAndDeveloper\");\n\n    String login = \"developer@company.net\";\n    ResourceDto resourceDto = new ResourceDto().setName(login).setQualifier(\"DEV\").setUuid(\"ABCD\").setProjectUuid(\"ABCD\").setModuleUuidPath(\".\");\n    dao.insertAuthorAndDeveloper(login, resourceDto);\n\n    checkTables(\"shouldInsertAuthorAndDeveloper\",\n      new String[] {\"created_at\", \"updated_at\", \"copy_resource_id\", \"description\", \"enabled\", \"kee\", \"deprecated_kee\", \"path\", \"language\", \"long_name\", \"person_id\", \"root_id\",\n        \"scope\", \"authorization_updated_at\"},\n      \"authors\", \"projects\");\n  }","commit_id":"51b8c91b138aab690921e647e30deabbaf61e75b","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public static String getLineTextErrorStripeTooltip(Document document, int offset, boolean escape) {\n    final int lineNumber = document.getLineNumber(offset);\n    final String lineText = document.getText().substring(document.getLineStartOffset(lineNumber), document.getLineEndOffset(lineNumber));\n    return \"  \" + (escape ? StringUtil.escapeXml(lineText.trim()) : lineText.trim()) + \"  \";\n  }","id":50413,"modified_method":"public static String getLineTextErrorStripeTooltip(Document document, int offset, boolean escape) {\n    final int lineNumber = document.getLineNumber(offset);\n    int lineStartOffset = document.getLineStartOffset(lineNumber);\n    int lineEndOffset = document.getLineEndOffset(lineNumber);\n    int lineFragmentEndOffset = Math.min(lineStartOffset + 140, lineEndOffset);\n    String lineText = document.getText().substring(lineStartOffset, lineFragmentEndOffset);\n    if (lineFragmentEndOffset != lineEndOffset) {\n      lineText = lineText.trim() + \"...\";\n    }\n    return \"  \" + (escape ? StringUtil.escapeXml(lineText.trim()) : lineText.trim()) + \"  \";\n  }","commit_id":"f1b506a37ee90563289eb62c4c227c0ff1ec4e10","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private int yPositionToOffset(int y, boolean beginLine) {\n    if (myEditorScrollbarTop == -1 || myEditorTargetHeight == -1) {\n      recalcEditorDimensions();\n    }\n    final int safeY = Math.max(0, y - myEditorScrollbarTop);\n    VisualPosition visual;\n    if (myEditorSourceHeight < myEditorTargetHeight) {\n      visual = myEditor.xyToVisualPosition(new Point(0, safeY));\n    }\n    else {\n      float fraction = Math.max(0, Math.min(1, safeY / (float)myEditorTargetHeight));\n      final int lineCount = myEditorSourceHeight / myEditor.getLineHeight();\n      visual = new VisualPosition((int)(fraction * lineCount),0);\n    }\n    int line = myEditor.visualToLogicalPosition(visual).line;\n    Document document = myEditor.getDocument();\n    if (line < 0) return 0;\n    if (line >= document.getLineCount()) return document.getTextLength();\n\n    return beginLine ? document.getLineStartOffset(line) : document.getLineEndOffset(line);\n  }","id":50414,"modified_method":"private int yPositionToOffset(int y, boolean beginLine) {\n    if (myEditorScrollbarTop == -1 || myEditorTargetHeight == -1) {\n      recalcEditorDimensions();\n    }\n    final int safeY = Math.max(0, y - myEditorScrollbarTop);\n    VisualPosition visual;\n    if (myEditorSourceHeight < myEditorTargetHeight) {\n      visual = myEditor.xyToVisualPosition(new Point(0, safeY));\n    }\n    else {\n      float fraction = Math.max(0, Math.min(1, safeY / (float)myEditorTargetHeight));\n      final int lineCount = myEditorSourceHeight / myEditor.getLineHeight();\n      visual = new VisualPosition((int)(fraction * lineCount),0);\n    }\n    int line = myEditor.visualToLogicalPosition(visual).line;\n    Document document = myEditor.getDocument();\n    if (line < 0) return 0;\n    if (line >= document.getLineCount()) return document.getTextLength();\n\n    final FoldingModelEx foldingModel = myEditor.getFoldingModel();\n    if (beginLine) {\n      final int offset = document.getLineStartOffset(line);\n      final FoldRegion startCollapsed = foldingModel.getCollapsedRegionAtOffset(offset);\n      return startCollapsed != null ? Math.min(offset, startCollapsed.getStartOffset()) : offset;\n    }\n    else {\n      final int offset = document.getLineEndOffset(line);\n      final FoldRegion startCollapsed = foldingModel.getCollapsedRegionAtOffset(offset);\n      return startCollapsed != null ? Math.max(offset, startCollapsed.getEndOffset()) : offset;\n    }\n  }","commit_id":"e02e7562e8e9133482186ee282afba46f9dde0e4","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void getNearestHighlighters(MarkupModelEx markupModel, MouseEvent e, final double width, final Collection<RangeHighlighter> nearest) {\n    if (0 > e.getX() || e.getX() >= width) return;\n    int startOffset = yPositionToOffset(e.getY()-getMinHeight(), true);\n    int endOffset = yPositionToOffset(e.getY()+getMinHeight(), false);\n    markupModel.processHighlightsOverlappingWith(startOffset, endOffset, new Processor<RangeHighlighterEx>() {\n      public boolean process(RangeHighlighterEx highlighter) {\n        if (highlighter.getErrorStripeMarkColor() != null) nearest.add(highlighter);\n        return true;\n      }\n    });\n  }","id":50415,"modified_method":"private void getNearestHighlighters(MarkupModelEx markupModel, MouseEvent e, final double width, final Collection<RangeHighlighter> nearest) {\n    if (0 > e.getX() || e.getX() >= width) return;\n    final int y = e.getY();\n    int startOffset = yPositionToOffset(y -getMinHeight(), true);\n    int endOffset = yPositionToOffset(y +getMinHeight(), false);\n    markupModel.processHighlightsOverlappingWith(startOffset, endOffset, new Processor<RangeHighlighterEx>() {\n      public boolean process(RangeHighlighterEx highlighter) {\n        if (highlighter.getErrorStripeMarkColor() != null) {\n          ProperTextRange range = offsetToYPosition(highlighter.getStartOffset(), highlighter.getEndOffset());\n          if (range.getStartOffset() >= y - getMinHeight() * 2 &&\n            range.getEndOffset() <= y + getMinHeight() * 2) {\n            nearest.add(highlighter);\n          }\n        }\n        return true;\n      }\n    });\n  }","commit_id":"e02e7562e8e9133482186ee282afba46f9dde0e4","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static void indentLine(Project project, @NotNull Editor editor, int lineNumber, int indent) {\n    EditorSettings editorSettings = editor.getSettings();\n    Document document = editor.getDocument();\n    int spacesEnd = 0;\n    int lineStart = 0;\n    int tabsEnd = 0;\n    if (lineNumber < document.getLineCount()) {\n      lineStart = document.getLineStartOffset(lineNumber);\n      int lineEnd = document.getLineEndOffset(lineNumber);\n      spacesEnd = lineStart;\n      CharSequence text = document.getCharsSequence();\n      boolean inTabs = true;\n      for (; spacesEnd <= lineEnd; spacesEnd++) {\n        if (spacesEnd == lineEnd) {\n          break;\n        }\n        char c = text.charAt(spacesEnd);\n        if (c != '\\t') {\n          if (inTabs) {\n            inTabs = false;\n            tabsEnd = spacesEnd;\n          }\n          if (c != ' ') break;\n        }\n      }\n      if (inTabs) {\n        tabsEnd = lineEnd;\n      } \n    }\n    int oldLength = editor.offsetToLogicalPosition(spacesEnd).column;\n    tabsEnd = editor.offsetToLogicalPosition(tabsEnd).column;\n\n    int newLength = oldLength + indent;\n    if (newLength < 0) {\n      newLength = 0;\n    }\n    tabsEnd += indent;\n    if (tabsEnd < 0) tabsEnd = 0;\n    if (!shouldUseSmartTabs(project, editor)) tabsEnd = newLength;\n    StringBuilder buf = new StringBuilder(newLength);\n    int tabSize = editorSettings.getTabSize(project);\n    for (int i = 0; i < newLength;) {\n      if (tabSize > 0 && editorSettings.isUseTabCharacter(project) && i + tabSize <= tabsEnd) {\n        buf.append('\\t');\n        i += tabSize;\n      }\n      else {\n        buf.append(' ');\n        i++;\n      }\n    }\n\n    int newCaretOffset = editor.getCaretModel().getOffset();\n    if (newCaretOffset >= spacesEnd) {\n      newCaretOffset += buf.length() - (spacesEnd - lineStart);\n    }\n\n    if (buf.length() > 0) {\n      if (spacesEnd > lineStart) {\n        document.replaceString(lineStart, spacesEnd, buf.toString());\n      }\n      else {\n        document.insertString(lineStart, buf.toString());\n      }\n    }\n    else {\n      if (spacesEnd > lineStart) {\n        document.deleteString(lineStart, spacesEnd);\n      }\n    }\n\n    editor.getCaretModel().moveToOffset(Math.min(document.getTextLength(), newCaretOffset));\n  }","id":50416,"modified_method":"public static void indentLine(Project project, @NotNull Editor editor, int lineNumber, int indent) {\n    EditorSettings editorSettings = editor.getSettings();\n    Document document = editor.getDocument();\n    int spacesEnd = 0;\n    int lineStart = 0;\n    int lineEnd = 0;\n    int tabsEnd = 0;\n    if (lineNumber < document.getLineCount()) {\n      lineStart = document.getLineStartOffset(lineNumber);\n      lineEnd = document.getLineEndOffset(lineNumber);\n      spacesEnd = lineStart;\n      CharSequence text = document.getCharsSequence();\n      boolean inTabs = true;\n      for (; spacesEnd <= lineEnd; spacesEnd++) {\n        if (spacesEnd == lineEnd) {\n          break;\n        }\n        char c = text.charAt(spacesEnd);\n        if (c != '\\t') {\n          if (inTabs) {\n            inTabs = false;\n            tabsEnd = spacesEnd;\n          }\n          if (c != ' ') break;\n        }\n      }\n      if (inTabs) {\n        tabsEnd = lineEnd;\n      } \n    }\n    int newCaretOffset = editor.getCaretModel().getOffset();\n    if (newCaretOffset >= lineStart && newCaretOffset < lineEnd && spacesEnd == lineEnd) {\n      spacesEnd = newCaretOffset;\n      tabsEnd = Math.min(spacesEnd, tabsEnd);\n    }\n    int oldLength = editor.offsetToLogicalPosition(spacesEnd).column;\n    tabsEnd = editor.offsetToLogicalPosition(tabsEnd).column;\n\n    int newLength = oldLength + indent;\n    if (newLength < 0) {\n      newLength = 0;\n    }\n    tabsEnd += indent;\n    if (tabsEnd < 0) tabsEnd = 0;\n    if (!shouldUseSmartTabs(project, editor)) tabsEnd = newLength;\n    StringBuilder buf = new StringBuilder(newLength);\n    int tabSize = editorSettings.getTabSize(project);\n    for (int i = 0; i < newLength;) {\n      if (tabSize > 0 && editorSettings.isUseTabCharacter(project) && i + tabSize <= tabsEnd) {\n        buf.append('\\t');\n        i += tabSize;\n      }\n      else {\n        buf.append(' ');\n        i++;\n      }\n    }\n\n    if (newCaretOffset >= spacesEnd) {\n      newCaretOffset += buf.length() - (spacesEnd - lineStart);\n    }\n\n    if (buf.length() > 0) {\n      if (spacesEnd > lineStart) {\n        document.replaceString(lineStart, spacesEnd, buf.toString());\n      }\n      else {\n        document.insertString(lineStart, buf.toString());\n      }\n    }\n    else {\n      if (spacesEnd > lineStart) {\n        document.deleteString(lineStart, spacesEnd);\n      }\n    }\n\n    editor.getCaretModel().moveToOffset(Math.min(document.getTextLength(), newCaretOffset));\n  }","commit_id":"89a5fdb31833fecb7bdf74415225e26508993dcd","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public boolean checkAvailable(@NotNull Editor editor, @NotNull PsiFile file, @NotNull MoveInfo info, boolean down) {\n    if (!(file instanceof PyFile)) return false;\n    final int offset = editor.getCaretModel().getOffset();\n    final SelectionModel selectionModel = editor.getSelectionModel();\n    final Document document = editor.getDocument();\n    final int lineNumber = document.getLineNumber(offset);\n    int start = getLineStartSafeOffset(document, lineNumber);\n    int end = document.getLineEndOffset(lineNumber) - 1;\n\n    if (selectionModel.hasSelection()) {\n      start = selectionModel.getSelectionStart();\n      end = selectionModel.getSelectionEnd() - 1;\n    }\n    PsiElement elementToMove1 = PyUtil.findNonWhitespaceAtOffset(file, start);\n    PsiElement elementToMove2 = PyUtil.findNonWhitespaceAtOffset(file, end);\n    if (elementToMove1 == null || elementToMove2 == null) return false;\n\n    if (ifInsideString(document, lineNumber, elementToMove1, down)) return false;\n\n    elementToMove1 = getCommentOrStatement(document, elementToMove1);\n    elementToMove2 = getCommentOrStatement(document, elementToMove2);\n\n    if (PsiTreeUtil.isAncestor(elementToMove1, elementToMove2, false)) {\n      elementToMove2 = elementToMove1;\n    }\n    else if (PsiTreeUtil.isAncestor(elementToMove2, elementToMove1, false)) {\n      elementToMove1 = elementToMove2;\n    }\n    info.toMove = new MyLineRange(elementToMove1, elementToMove2);\n    info.toMove2 = getDestinationScope(file, editor, down ? elementToMove2 : elementToMove1, down);\n\n    info.indentTarget = false;\n    info.indentSource = false;\n\n    return true;\n  }","id":50417,"modified_method":"@Override\n  public boolean checkAvailable(@NotNull Editor editor, @NotNull PsiFile file, @NotNull MoveInfo info, boolean down) {\n    if (!(file instanceof PyFile)) return false;\n    final int offset = editor.getCaretModel().getOffset();\n    final SelectionModel selectionModel = editor.getSelectionModel();\n    final Document document = editor.getDocument();\n    final int lineNumber = document.getLineNumber(offset);\n    int start = getLineStartSafeOffset(document, lineNumber);\n    final int lineEndOffset = document.getLineEndOffset(lineNumber);\n    int end = lineEndOffset == 0 ? 0 : lineEndOffset - 1;\n\n    if (selectionModel.hasSelection()) {\n      start = selectionModel.getSelectionStart();\n      final int selectionEnd = selectionModel.getSelectionEnd();\n      end = selectionEnd == 0 ? 0 : selectionEnd - 1;\n    }\n    PsiElement elementToMove1 = PyUtil.findNonWhitespaceAtOffset(file, start);\n    PsiElement elementToMove2 = PyUtil.findNonWhitespaceAtOffset(file, end);\n    if (elementToMove1 == null || elementToMove2 == null) return false;\n\n    if (ifInsideString(document, lineNumber, elementToMove1, down)) return false;\n\n    elementToMove1 = getCommentOrStatement(document, elementToMove1);\n    elementToMove2 = getCommentOrStatement(document, elementToMove2);\n\n    if (PsiTreeUtil.isAncestor(elementToMove1, elementToMove2, false)) {\n      elementToMove2 = elementToMove1;\n    }\n    else if (PsiTreeUtil.isAncestor(elementToMove2, elementToMove1, false)) {\n      elementToMove1 = elementToMove2;\n    }\n    info.toMove = new MyLineRange(elementToMove1, elementToMove2);\n    info.toMove2 = getDestinationScope(file, editor, down ? elementToMove2 : elementToMove1, down);\n\n    info.indentTarget = false;\n    info.indentSource = false;\n\n    return true;\n  }","commit_id":"f1842c2b91bdccf5b4059cead365de4f07c13a83","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void onRecalculationEnd(int startOffset, int endOffset) {\n    if (!myBeforeChangeState.valid) {\n      return;\n    }\n    int endIndex = Math.max(0, myCache.size() - 2); // -1 because of zero-based indexing; one more -1 in assumption that\n                                                    // re-parsing always adds number of target cache entries plus one\n                                                    // (because of line feed at the end).\n    myAfterChangeState.updateByCacheIndices(myBeforeChangeState.startCacheEntryIndex, endIndex);\n    myCache.subList(myAfterChangeState.endCacheEntryIndex + 1, myCache.size()).clear();\n    myCache.addAll(myNotAffectedByUpdateTailCacheEntries);\n    for (CacheEntry entry : myNotAffectedByUpdateTailCacheEntries) {\n      entry.locked = false;\n    }\n    applyStateChange();\n\n\n    //Document document = myEditor.getDocument();\n    //CharSequence text = document.getCharsSequence();\n    //System.out.println(\"--------------------------------------------------\");\n    //System.out.println(\"|\");\n    //System.out.println(\"|\");\n    //System.out.println(text);\n    //System.out.println(\"-  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -\");\n    //System.out.println(\"text length: \" + text.length() + \", soft wraps: \" + myStorage.getSoftWraps());\n    //for (int i = 0; i < myCache.size(); i++) {\n    //  CacheEntry entry = myCache.get(i);\n    //  // TODO den unwrap\n    //  try {\n    //    System.out.printf(\"line %d. %d-%d: '%s'%n\", i, entry.startOffset, entry.endOffset,\n    //                      text.subSequence(entry.startOffset,Math.min(entry.endOffset, text.length())));\n    //  }\n    //  catch (Throwable e) {\n    //    e.printStackTrace();\n    //  }\n    //}\n    //if (!myCache.isEmpty() && myCache.get(myCache.size() - 1).endOffset < text.length() - 1) {\n    //  System.out.printf(\"Incomplete re-parsing detected! Document length is %d but last processed offset is %s%n\", text.length(),\n    //                    myCache.get(myCache.size() - 1).endOffset);\n    //}\n\n\n    //for (CacheEntry cacheEntry : myCache) {\n    //  if (cacheEntry.startOffset > 0) {\n    //    if (text.charAt(cacheEntry.startOffset - 1) != '\\n' && myStorage.getSoftWrap(cacheEntry.startOffset) == null) {\n    //      assert false;\n    //    }\n    //  }\n    //  if (cacheEntry.endOffset < document.getTextLength()) {\n    //    if (text.charAt(cacheEntry.endOffset) != '\\n' && myStorage.getSoftWrap(cacheEntry.endOffset) == null) {\n    //      assert false;\n    //    }\n    //  }\n    //}\n  }","id":50418,"modified_method":"@Override\n  public void onRecalculationEnd(int startOffset, int endOffset) {\n    if (!myBeforeChangeState.valid) {\n      return;\n    }\n    int endIndex = Math.max(0, myCache.size() - 1/*because of zero-based indexing*/);\n    if (endOffset < myEditor.getDocument().getTextLength() - 1) {\n      endIndex--; // We assume that non-last document line ends with line feed symbol.\n    }\n    myAfterChangeState.updateByCacheIndices(myBeforeChangeState.startCacheEntryIndex, endIndex);\n    myCache.subList(myAfterChangeState.endCacheEntryIndex + 1, myCache.size()).clear();\n    myCache.addAll(myNotAffectedByUpdateTailCacheEntries);\n    for (CacheEntry entry : myNotAffectedByUpdateTailCacheEntries) {\n      entry.locked = false;\n    }\n    applyStateChange();\n\n\n    //Document document = myEditor.getDocument();\n    //CharSequence text = document.getCharsSequence();\n    //System.out.println(\"--------------------------------------------------\");\n    //System.out.println(\"|\");\n    //System.out.println(\"|\");\n    //System.out.println(text);\n    //System.out.println(\"-  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -\");\n    //System.out.println(\"text length: \" + text.length() + \", soft wraps: \" + myStorage.getSoftWraps());\n    //for (int i = 0; i < myCache.size(); i++) {\n    //  CacheEntry entry = myCache.get(i);\n    //  try {\n    //    System.out.printf(\"line %d. %d-%d: '%s'%n\", i, entry.startOffset, entry.endOffset,\n    //                      text.subSequence(entry.startOffset,Math.min(entry.endOffset, text.length())));\n    //  }\n    //  catch (Throwable e) {\n    //    e.printStackTrace();\n    //  }\n    //}\n    //if (!myCache.isEmpty() && myCache.get(myCache.size() - 1).endOffset < text.length() - 1) {\n    //  System.out.printf(\"Incomplete re-parsing detected! Document length is %d but last processed offset is %s%n\", text.length(),\n    //                    myCache.get(myCache.size() - 1).endOffset);\n    //}\n\n\n    //for (CacheEntry cacheEntry : myCache) {\n    //  if (cacheEntry.startOffset > 0) {\n    //    if (text.charAt(cacheEntry.startOffset - 1) != '\\n' && myStorage.getSoftWrap(cacheEntry.startOffset) == null) {\n    //      assert false;\n    //    }\n    //  }\n    //  if (cacheEntry.endOffset < document.getTextLength()) {\n    //    if (text.charAt(cacheEntry.endOffset) != '\\n' && myStorage.getSoftWrap(cacheEntry.endOffset) == null) {\n    //      assert false;\n    //    }\n    //  }\n    //}\n  }","commit_id":"67ecab9f8b9af11ba303c9aa6b6daef38f0a3e0f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@SuppressWarnings({\"AssignmentToForLoopParameter\"})\n  private void doRecalculateSoftWraps(TextRange range) {\n    // Define start of the visual line that holds target range start.\n    int start = range.getStartOffset();\n    int end;\n    VisualPosition visual = new VisualPosition(myEditor.offsetToVisualPosition(start).line, 0);\n    LogicalPosition logical = myEditor.visualToLogicalPosition(visual);\n    start = myEditor.logicalPositionToOffset(logical);\n    Document document = myEditor.getDocument();\n    CharSequence text = document.getCharsSequence();\n    IterationState iterationState = new IterationState(myEditor, start, false);\n    TextAttributes attributes = iterationState.getMergedAttributes();\n    int fontType = attributes.getFontType();\n\n    ProcessingContext context = new ProcessingContext(logical, start, myEditor, myRepresentationHelper);\n    Point point = myEditor.visualPositionToXY(visual);\n    context.x = point.x;\n    int newX;\n    int spaceWidth = EditorUtil.getSpaceWidth(fontType, myEditor);\n\n    LogicalLineData logicalLineData = new LogicalLineData();\n    logicalLineData.update(logical.line, spaceWidth, myEditor);\n\n    ProcessingContext startLineContext = context.clone();\n    JComponent contentComponent = myEditor.getContentComponent();\n    TIntIntHashMap offset2fontType = new TIntIntHashMap();\n    TIntIntHashMap offset2widthInPixels = new TIntIntHashMap();\n    TIntIntHashMap fontType2spaceWidth = new TIntIntHashMap();\n    fontType2spaceWidth.put(fontType, spaceWidth);\n    int softWrapStartOffset = startLineContext.offset;\n\n    int reservedWidth = myPainter.getMinDrawingWidth(SoftWrapDrawingType.BEFORE_SOFT_WRAP_LINE_FEED);\n\n    // Perform soft wraps calculation.\n    outer:\n    while (!iterationState.atEnd() && start <= range.getEndOffset()) {\n      FoldRegion currentFold = iterationState.getCurrentFold();\n      if (currentFold != null) {\n        String placeholder = currentFold.getPlaceholderText();\n        FontInfo fontInfo = EditorUtil.fontForChar(placeholder.charAt(0), fontType, myEditor);\n        newX = context.x;\n        for (int i = 0; i < placeholder.length(); i++) {\n          newX += fontInfo.charWidth(placeholder.charAt(i), contentComponent);\n        }\n        if (newX + reservedWidth >= myVisibleAreaWidth) {\n          logicalLineData.update(currentFold.getStartOffset(), spaceWidth);\n          SoftWrap softWrap = registerSoftWrap(\n            softWrapStartOffset, start, start, logicalLineData.indentInColumns,\n            logicalLineData.indentInPixels, spaceWidth\n          );\n          softWrapStartOffset = softWrap.getStart();\n          if (softWrap.getStart() < start) {\n            revertListeners(softWrap.getStart(), context.visualLine);\n            for (int j = currentFold.getStartOffset() - 1; j >= softWrap.getStart(); j--) {\n              int pixelsDiff = offset2widthInPixels.get(j);\n              int columnsDiff = calculateWidthInColumns(pixelsDiff, fontType2spaceWidth.get(offset2fontType.get(j)));\n              context.offset--;\n              context.logicalColumn -= columnsDiff;\n              context.visualColumn -= columnsDiff;\n            }\n            notifyListenersOnBeforeSoftWrap(context);\n          }\n\n          context.visualColumn = 0;\n          context.softWrapColumnDiff = context.visualColumn - context.foldingColumnDiff - context.logicalColumn;\n          context.softWrapLinesCurrent++;\n          context.visualLine++;\n          notifyListenersOnAfterSoftWrapLineFeed(context);\n\n          context.x = softWrap.getIndentInPixels();\n          context.visualColumn = softWrap.getIndentInColumns();\n          context.softWrapColumnDiff += softWrap.getIndentInColumns();\n          startLineContext.from(context);\n\n          for (int j = softWrap.getStart(); j < start; j++) {\n            fontType = offset2fontType.get(j);\n            newX = calculateNewX(context, fontType, contentComponent);\n            processSymbol(context, startLineContext, logicalLineData, fontType, newX, fontType2spaceWidth, offset2widthInPixels,\n                          offset2fontType);\n          }\n          continue;\n        }\n        else {\n          int visualLineBefore = context.visualLine;\n          int logicalColumnBefore = context.logicalColumn;\n          context.advance(currentFold);\n          context.x = newX;\n          int collapsedFoldingWidthInColumns = context.logicalColumn;\n          if (context.visualLine <= visualLineBefore) {\n            // Single-line fold region.\n            collapsedFoldingWidthInColumns = context.logicalColumn - logicalColumnBefore;\n          }\n          notifyListenersOnFoldRegion(currentFold, collapsedFoldingWidthInColumns, visualLineBefore);\n          start = context.offset;\n          softWrapStartOffset = currentFold.getEndOffset();\n        }\n      }\n\n      end = iterationState.getEndOffset();\n      for (int i = start; i < end; i++) {\n        if (!offset2fontType.contains(i)) {\n          offset2fontType.put(i, fontType);\n        }\n      }\n      for (int i = start; i < end; i++) {\n        if (i > range.getEndOffset()) {\n          break outer;\n        }\n        char c = text.charAt(i);\n        if (offset2fontType.contains(i)) {\n          fontType = offset2fontType.get(i);\n        }\n        context.symbol = c;\n        if (c == '\\n') {\n          processSymbol(context, startLineContext, logicalLineData, fontType, 0, fontType2spaceWidth, offset2widthInPixels, offset2fontType);\n          softWrapStartOffset = startLineContext.offset;\n          continue;\n        }\n\n        if (offset2widthInPixels.contains(context.offset) && context.symbol != '\\t'/*we need to recalculate tabulation width after soft wrap*/) {\n          newX = context.x + offset2widthInPixels.get(context.offset);\n        }\n        else {\n          newX = calculateNewX(context, fontType, contentComponent);\n        }\n\n        if (newX + reservedWidth >= myVisibleAreaWidth) {\n          logicalLineData.update(i, spaceWidth);\n          SoftWrap softWrap = registerSoftWrap(\n            softWrapStartOffset, Math.max(softWrapStartOffset, i - 1), calculateSoftWrapEndOffset(softWrapStartOffset, end),\n            logicalLineData.indentInColumns, logicalLineData.indentInPixels, spaceWidth\n          );\n          int newI = softWrap.getStart();\n\n          // There are two possible options: soft wrap offset is located before/after the current offset (it may be\n          // located after offset in situation when it's not possible to wrap in [softWrapStartOffset; currentOffset)\n          // interval). We should process that accordingly.\n          if (newI < i) {\n            revertListeners(newI, context.visualLine);\n            for (int j = i - 1; j >= newI; j--) {\n              int pixelsDiff = offset2widthInPixels.get(j);\n              int columnsDiff = calculateWidthInColumns(pixelsDiff, fontType2spaceWidth.get(offset2fontType.get(j)));\n              context.offset--;\n              context.logicalColumn -= columnsDiff;\n              context.visualColumn -= columnsDiff;\n            }\n          }\n          else if (newI > i) {\n            processSymbol(context, startLineContext, logicalLineData, fontType, newX, fontType2spaceWidth, offset2widthInPixels,\n                          offset2fontType);\n            for (int j = i + 1; j < newI; j++) {\n              context.symbol = text.charAt(j);\n              newX = calculateNewX(context, fontType, contentComponent);\n              processSymbol(context, startLineContext, logicalLineData, fontType, newX, fontType2spaceWidth, offset2widthInPixels,\n                            offset2fontType);\n            }\n          }\n\n          notifyListenersOnBeforeSoftWrap(context);\n          softWrapStartOffset = newI;\n\n          context.visualColumn = 0;\n          context.softWrapColumnDiff = context.visualColumn - context.foldingColumnDiff - context.logicalColumn;\n          context.softWrapLinesCurrent++;\n          context.visualLine++;\n          notifyListenersOnAfterSoftWrapLineFeed(context);\n\n          context.x = softWrap.getIndentInPixels();\n          context.visualColumn = softWrap.getIndentInColumns();\n          context.softWrapColumnDiff += softWrap.getIndentInColumns();\n          i = newI - 1/* because of loop increment */;\n          startLineContext.from(context);\n        }\n        else {\n          processSymbol(context, startLineContext, logicalLineData, fontType, newX, fontType2spaceWidth, offset2widthInPixels,\n                        offset2fontType);\n        }\n      }\n\n      iterationState.advance();\n      attributes = iterationState.getMergedAttributes();\n      fontType = attributes.getFontType();\n      start = iterationState.getStartOffset();\n    }\n  }","id":50419,"modified_method":"@SuppressWarnings({\"AssignmentToForLoopParameter\"})\n  private void doRecalculateSoftWraps(TextRange range) {\n    // Define start of the visual line that holds target range start.\n    int start = range.getStartOffset();\n    int end;\n    VisualPosition visual = new VisualPosition(myEditor.offsetToVisualPosition(start).line, 0);\n    LogicalPosition logical = myEditor.visualToLogicalPosition(visual);\n    start = myEditor.logicalPositionToOffset(logical);\n    Document document = myEditor.getDocument();\n    CharSequence text = document.getCharsSequence();\n    IterationState iterationState = new IterationState(myEditor, start, false);\n    TextAttributes attributes = iterationState.getMergedAttributes();\n    int fontType = attributes.getFontType();\n\n    ProcessingContext context = new ProcessingContext(logical, start, myEditor, myRepresentationHelper);\n    Point point = myEditor.visualPositionToXY(visual);\n    context.x = point.x;\n    int newX;\n    int spaceWidth = EditorUtil.getSpaceWidth(fontType, myEditor);\n\n    LogicalLineData logicalLineData = new LogicalLineData();\n    logicalLineData.update(logical.line, spaceWidth, myEditor);\n\n    ProcessingContext startLineContext = context.clone();\n    JComponent contentComponent = myEditor.getContentComponent();\n    TIntIntHashMap offset2fontType = new TIntIntHashMap();\n    TIntIntHashMap offset2widthInPixels = new TIntIntHashMap();\n    TIntIntHashMap fontType2spaceWidth = new TIntIntHashMap();\n    fontType2spaceWidth.put(fontType, spaceWidth);\n    int softWrapStartOffset = startLineContext.offset;\n\n    int reservedWidth = myPainter.getMinDrawingWidth(SoftWrapDrawingType.BEFORE_SOFT_WRAP_LINE_FEED);\n\n    // Perform soft wraps calculation.\n    outer:\n    while (!iterationState.atEnd() && start <= range.getEndOffset()) {\n      FoldRegion currentFold = iterationState.getCurrentFold();\n      if (currentFold != null) {\n        String placeholder = currentFold.getPlaceholderText();\n        FontInfo fontInfo = EditorUtil.fontForChar(placeholder.charAt(0), fontType, myEditor);\n        newX = context.x;\n        for (int i = 0; i < placeholder.length(); i++) {\n          newX += fontInfo.charWidth(placeholder.charAt(i), contentComponent);\n        }\n        if (newX + reservedWidth >= myVisibleAreaWidth) {\n          logicalLineData.update(currentFold.getStartOffset(), spaceWidth);\n          SoftWrap softWrap = registerSoftWrap(\n            softWrapStartOffset, start, start, logicalLineData.indentInColumns,\n            logicalLineData.indentInPixels, spaceWidth\n          );\n          softWrapStartOffset = softWrap.getStart();\n          if (softWrap.getStart() < start) {\n            revertListeners(softWrap.getStart(), context.visualLine);\n            for (int j = currentFold.getStartOffset() - 1; j >= softWrap.getStart(); j--) {\n              int pixelsDiff = offset2widthInPixels.get(j);\n              int columnsDiff = calculateWidthInColumns(text.charAt(j), pixelsDiff, fontType2spaceWidth.get(offset2fontType.get(j)));\n              context.offset--;\n              context.logicalColumn -= columnsDiff;\n              context.visualColumn -= columnsDiff;\n            }\n            notifyListenersOnBeforeSoftWrap(context);\n          }\n\n          context.visualColumn = 0;\n          context.softWrapColumnDiff = context.visualColumn - context.foldingColumnDiff - context.logicalColumn;\n          context.softWrapLinesCurrent++;\n          context.visualLine++;\n          notifyListenersOnAfterSoftWrapLineFeed(context);\n\n          context.x = softWrap.getIndentInPixels();\n          context.visualColumn = softWrap.getIndentInColumns();\n          context.softWrapColumnDiff += softWrap.getIndentInColumns();\n          startLineContext.from(context);\n\n          for (int j = softWrap.getStart(); j < start; j++) {\n            fontType = offset2fontType.get(j);\n            newX = calculateNewX(context, fontType, contentComponent);\n            processSymbol(context, startLineContext, logicalLineData, fontType, newX, fontType2spaceWidth, offset2widthInPixels,\n                          offset2fontType);\n          }\n          continue;\n        }\n        else {\n          int visualLineBefore = context.visualLine;\n          int logicalColumnBefore = context.logicalColumn;\n          context.advance(currentFold);\n          context.x = newX;\n          int collapsedFoldingWidthInColumns = context.logicalColumn;\n          if (context.visualLine <= visualLineBefore) {\n            // Single-line fold region.\n            collapsedFoldingWidthInColumns = context.logicalColumn - logicalColumnBefore;\n          }\n          notifyListenersOnFoldRegion(currentFold, collapsedFoldingWidthInColumns, visualLineBefore);\n          start = context.offset;\n          softWrapStartOffset = currentFold.getEndOffset();\n        }\n      }\n\n      end = iterationState.getEndOffset();\n      for (int i = start; i < end; i++) {\n        if (!offset2fontType.contains(i)) {\n          offset2fontType.put(i, fontType);\n        }\n      }\n      for (int i = start; i < end; i++) {\n        if (i > range.getEndOffset()) {\n          break outer;\n        }\n        char c = text.charAt(i);\n        if (offset2fontType.contains(i)) {\n          fontType = offset2fontType.get(i);\n        }\n        context.symbol = c;\n        if (c == '\\n') {\n          processSymbol(context, startLineContext, logicalLineData, fontType, 0, fontType2spaceWidth, offset2widthInPixels, offset2fontType);\n          softWrapStartOffset = startLineContext.offset;\n          continue;\n        }\n\n        if (offset2widthInPixels.contains(context.offset) && context.symbol != '\\t'/*we need to recalculate tabulation width after soft wrap*/) {\n          newX = context.x + offset2widthInPixels.get(context.offset);\n        }\n        else {\n          newX = calculateNewX(context, fontType, contentComponent);\n        }\n\n        if (newX + reservedWidth >= myVisibleAreaWidth) {\n          logicalLineData.update(i, spaceWidth);\n          SoftWrap softWrap = registerSoftWrap(\n            softWrapStartOffset, Math.max(softWrapStartOffset, i - 1), calculateSoftWrapEndOffset(softWrapStartOffset, end),\n            logicalLineData.indentInColumns, logicalLineData.indentInPixels, spaceWidth\n          );\n          int newI = softWrap.getStart();\n\n          // There are two possible options: soft wrap offset is located before/after the current offset (it may be\n          // located after offset in situation when it's not possible to wrap in [softWrapStartOffset; currentOffset)\n          // interval). We should process that accordingly.\n          if (newI < i) {\n            revertListeners(newI, context.visualLine);\n            for (int j = i - 1; j >= newI; j--) {\n              int pixelsDiff = offset2widthInPixels.get(j);\n              int columnsDiff = calculateWidthInColumns(text.charAt(j), pixelsDiff, fontType2spaceWidth.get(offset2fontType.get(j)));\n              context.offset--;\n              context.logicalColumn -= columnsDiff;\n              context.visualColumn -= columnsDiff;\n            }\n          }\n          else if (newI > i) {\n            processSymbol(context, startLineContext, logicalLineData, fontType, newX, fontType2spaceWidth, offset2widthInPixels,\n                          offset2fontType);\n            for (int j = i + 1; j < newI; j++) {\n              context.symbol = text.charAt(j);\n              newX = calculateNewX(context, fontType, contentComponent);\n              processSymbol(context, startLineContext, logicalLineData, fontType, newX, fontType2spaceWidth, offset2widthInPixels,\n                            offset2fontType);\n            }\n          }\n\n          notifyListenersOnBeforeSoftWrap(context);\n          softWrapStartOffset = newI;\n\n          context.visualColumn = 0;\n          context.softWrapColumnDiff = context.visualColumn - context.foldingColumnDiff - context.logicalColumn;\n          context.softWrapLinesCurrent++;\n          context.visualLine++;\n          notifyListenersOnAfterSoftWrapLineFeed(context);\n\n          context.x = softWrap.getIndentInPixels();\n          context.visualColumn = softWrap.getIndentInColumns();\n          context.softWrapColumnDiff += softWrap.getIndentInColumns();\n          i = newI - 1/* because of loop increment */;\n          startLineContext.from(context);\n        }\n        else {\n          processSymbol(context, startLineContext, logicalLineData, fontType, newX, fontType2spaceWidth, offset2widthInPixels,\n                        offset2fontType);\n        }\n      }\n\n      iterationState.advance();\n      attributes = iterationState.getMergedAttributes();\n      fontType = attributes.getFontType();\n      start = iterationState.getStartOffset();\n    }\n  }","commit_id":"67ecab9f8b9af11ba303c9aa6b6daef38f0a3e0f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static int calculateWidthInColumns(int widthInPixels, int spaceWithInPixels) {\n    int result = widthInPixels / spaceWithInPixels;\n    if (widthInPixels % spaceWithInPixels > 0) {\n      result++;\n    }\n    return result;\n  }","id":50420,"modified_method":"private static int calculateWidthInColumns(char c, int widthInPixels, int spaceWithInPixels) {\n    if (c != '\\t') {\n      return 1;\n    }\n    int result = widthInPixels / spaceWithInPixels;\n    if (widthInPixels % spaceWithInPixels > 0) {\n      result++;\n    }\n    return result;\n  }","commit_id":"67ecab9f8b9af11ba303c9aa6b6daef38f0a3e0f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void beforeRecalculation() {\n      if (!myRecalculateEnd) {\n        return;\n      }\n      Document document = myEditor.getDocument();\n      int startLine = document.getLineNumber(endRange.getStartOffset());\n      int endLine = document.getLineNumber(endRange.getEndOffset());\n      endRange = new TextRange(document.getLineStartOffset(startLine), document.getLineEndOffset(endLine));\n    }","id":50421,"modified_method":"public void beforeRecalculation() {\n      if (!myRecalculateEnd) {\n        return;\n      }\n      Document document = myEditor.getDocument();\n      int startLine = document.getLineNumber(endRange.getStartOffset());\n      int endLine = document.getLineNumber(endRange.getEndOffset());\n      int endOffset = document.getLineEndOffset(endLine);\n      int textLength = document.getTextLength();\n      if (textLength > 0 && endOffset >= textLength) {\n        endOffset = textLength - 1;\n      }\n      endRange = new TextRange(document.getLineStartOffset(startLine), endOffset);\n    }","commit_id":"67ecab9f8b9af11ba303c9aa6b6daef38f0a3e0f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void processSymbol(ProcessingContext context, ProcessingContext startLineContext, LogicalLineData logicalLineData,\n                             int fontType, int newX, TIntIntHashMap fontType2spaceWidth, TIntIntHashMap offset2widthInPixels,\n                             TIntIntHashMap offset2fontType)\n  {\n    int spaceWidth;\n    if (fontType2spaceWidth.contains(fontType)) {\n      spaceWidth = fontType2spaceWidth.get(fontType);\n    }\n    else {\n      spaceWidth = EditorUtil.getSpaceWidth(fontType, myEditor);\n      fontType2spaceWidth.put(fontType, spaceWidth);\n    }\n\n    if (context.symbol == '\\n') {\n      context.symbolWidthInColumns = 0;\n      context.symbolWidthInPixels = 0;\n      notifyListenersOnProcessedSymbol(context);\n      context.offset++;\n      context.onNewLine();\n      offset2fontType.clear();\n      startLineContext.from(context);\n      logicalLineData.update(context.logicalLine, spaceWidth, myEditor);\n      context.x = 0;\n      return;\n    }\n\n    context.symbolWidthInPixels = newX - context.x;\n    context.symbolWidthInColumns = calculateWidthInColumns(context.symbolWidthInPixels, spaceWidth);\n    notifyListenersOnProcessedSymbol(context);\n    context.visualColumn += context.symbolWidthInColumns;\n    context.logicalColumn += context.symbolWidthInColumns;\n    context.x = newX;\n    offset2widthInPixels.put(context.offset, context.symbolWidthInPixels);\n    context.offset++;\n  }","id":50422,"modified_method":"private void processSymbol(ProcessingContext context, ProcessingContext startLineContext, LogicalLineData logicalLineData,\n                             int fontType, int newX, TIntIntHashMap fontType2spaceWidth, TIntIntHashMap offset2widthInPixels,\n                             TIntIntHashMap offset2fontType)\n  {\n    int spaceWidth;\n    if (fontType2spaceWidth.contains(fontType)) {\n      spaceWidth = fontType2spaceWidth.get(fontType);\n    }\n    else {\n      spaceWidth = EditorUtil.getSpaceWidth(fontType, myEditor);\n      fontType2spaceWidth.put(fontType, spaceWidth);\n    }\n\n    if (context.symbol == '\\n') {\n      context.symbolWidthInColumns = 0;\n      context.symbolWidthInPixels = 0;\n      notifyListenersOnProcessedSymbol(context);\n      context.offset++;\n      context.onNewLine();\n      offset2fontType.clear();\n      startLineContext.from(context);\n      logicalLineData.update(context.logicalLine, spaceWidth, myEditor);\n      context.x = 0;\n      return;\n    }\n\n    context.symbolWidthInPixels = newX - context.x;\n    context.symbolWidthInColumns = calculateWidthInColumns(context.symbol, context.symbolWidthInPixels, spaceWidth);\n    notifyListenersOnProcessedSymbol(context);\n    context.visualColumn += context.symbolWidthInColumns;\n    context.logicalColumn += context.symbolWidthInColumns;\n    context.x = newX;\n    offset2widthInPixels.put(context.offset, context.symbolWidthInPixels);\n    context.offset++;\n  }","commit_id":"67ecab9f8b9af11ba303c9aa6b6daef38f0a3e0f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public SoftWrapApplianceManager(@NotNull SoftWrapsStorage storage,\n                                  @NotNull EditorEx editor,\n                                  @NotNull SoftWrapPainter painter,\n                                  @NotNull EditorTextRepresentationHelper representationHelper)\n  {\n    myStorage = storage;\n    myEditor = editor;\n    myPainter = painter;\n    myRepresentationHelper = representationHelper;\n  }","id":50423,"modified_method":"public SoftWrapApplianceManager(@NotNull SoftWrapsStorage storage,\n                                  @NotNull EditorEx editor,\n                                  @NotNull SoftWrapPainter painter,\n                                  @NotNull EditorTextRepresentationHelper representationHelper)\n  {\n    myStorage = storage;\n    myEditor = editor;\n    myPainter = painter;\n    myRepresentationHelper = representationHelper;\n    myWidthProvider = new DefaultVisibleAreaWidthProvider(editor);\n  }","commit_id":"67ecab9f8b9af11ba303c9aa6b6daef38f0a3e0f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void update(int logicalLine, int spaceWidth, Editor editor) {\n      Document document = myEditor.getDocument();\n      int startLineOffset = document.getLineStartOffset(logicalLine);\n      endLineOffset = document.getLineEndOffset(logicalLine);\n      CharSequence text = document.getCharsSequence();\n      indentInColumns = 0;\n      indentInPixels = 0;\n\n      for (int i = startLineOffset; i < endLineOffset; i++) {\n        char c = text.charAt(i);\n        switch (c) {\n          case ' ': indentInColumns += 1; indentInPixels += spaceWidth; break;\n          case '\\t':\n            int x = EditorUtil.nextTabStop(indentInPixels, editor);\n            indentInColumns += calculateWidthInColumns(x - indentInPixels, spaceWidth);\n            indentInPixels = x;\n            break;\n          default: myNonWhiteSpaceSymbolOffset = i; return;\n        }\n      }\n    }","id":50424,"modified_method":"public void update(int logicalLine, int spaceWidth, Editor editor) {\n      Document document = myEditor.getDocument();\n      int startLineOffset = document.getLineStartOffset(logicalLine);\n      endLineOffset = document.getLineEndOffset(logicalLine);\n      CharSequence text = document.getCharsSequence();\n      indentInColumns = 0;\n      indentInPixels = 0;\n\n      for (int i = startLineOffset; i < endLineOffset; i++) {\n        char c = text.charAt(i);\n        switch (c) {\n          case ' ': indentInColumns += 1; indentInPixels += spaceWidth; break;\n          case '\\t':\n            int x = EditorUtil.nextTabStop(indentInPixels, editor);\n            indentInColumns += calculateWidthInColumns(c, x - indentInPixels, spaceWidth);\n            indentInPixels = x;\n            break;\n          default: myNonWhiteSpaceSymbolOffset = i; return;\n        }\n      }\n    }","commit_id":"67ecab9f8b9af11ba303c9aa6b6daef38f0a3e0f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n   * There is a possible case that we need to reparse the whole document (e.g. visible area width is changed or user-defined\n   * soft wrap indent is changed etc). This method encapsulates that logic, i.e. it checks if necessary conditions are satisfied\n   * and updates internal state as necessary.\n   */\n  public void dropDataIfNecessary() {\n    // Check if we need to recalculate soft wraps due to indent settings change.\n    boolean indentChanged = false;\n    IndentType currentIndentType = getIndentToUse();\n    boolean useCustomIndent = currentIndentType == IndentType.CUSTOM;\n    int currentCustomIndent = myEditor.getSettings().getCustomSoftWrapIndent();\n    if (useCustomIndent ^ myCustomIndentUsedLastTime || (useCustomIndent && myCustomIndentValueUsedLastTime != currentCustomIndent)) {\n      indentChanged = true;\n    }\n    myCustomIndentUsedLastTime = useCustomIndent;\n    myCustomIndentValueUsedLastTime = currentCustomIndent;\n\n    // Check if we need to recalculate soft wraps due to visible area width change.\n    int currentVisibleAreaWidth = myEditor.getScrollingModel().getVisibleArea().width;\n    if (!indentChanged && myVisibleAreaWidth == currentVisibleAreaWidth) {\n      return;\n    }\n\n    // Drop information about processed lines then.\n    myDirtyRegions.clear();\n    myDirtyRegions.add(new DirtyRegion(0, myEditor.getDocument().getTextLength() - 1));\n    myStorage.removeAll();\n    myVisibleAreaWidth = currentVisibleAreaWidth;\n  }","id":50425,"modified_method":"/**\n   * There is a possible case that we need to reparse the whole document (e.g. visible area width is changed or user-defined\n   * soft wrap indent is changed etc). This method encapsulates that logic, i.e. it checks if necessary conditions are satisfied\n   * and updates internal state as necessary.\n   */\n  public void dropDataIfNecessary() {\n    // Check if we need to recalculate soft wraps due to indent settings change.\n    boolean indentChanged = false;\n    IndentType currentIndentType = getIndentToUse();\n    boolean useCustomIndent = currentIndentType == IndentType.CUSTOM;\n    int currentCustomIndent = myEditor.getSettings().getCustomSoftWrapIndent();\n    if (useCustomIndent ^ myCustomIndentUsedLastTime || (useCustomIndent && myCustomIndentValueUsedLastTime != currentCustomIndent)) {\n      indentChanged = true;\n    }\n    myCustomIndentUsedLastTime = useCustomIndent;\n    myCustomIndentValueUsedLastTime = currentCustomIndent;\n\n    // Check if we need to recalculate soft wraps due to visible area width change.\n    int currentVisibleAreaWidth = myWidthProvider.getVisibleAreaWidth();\n    if (!indentChanged && myVisibleAreaWidth == currentVisibleAreaWidth) {\n      return;\n    }\n\n    // Drop information about processed lines then.\n    myDirtyRegions.clear();\n    myDirtyRegions.add(new DirtyRegion(0, myEditor.getDocument().getTextLength() - 1));\n    myStorage.removeAll();\n    myVisibleAreaWidth = currentVisibleAreaWidth;\n  }","commit_id":"67ecab9f8b9af11ba303c9aa6b6daef38f0a3e0f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void build(final IBuildContext context, IProgressMonitor monitor) throws CoreException {\n\t\tEclipseResourceFileSystemAccess2 access = fileSystemAccessProvider.get();\n\t\t// TODO improve progress monitor handling\n\t\t// we should use a new child of a submonitor for each invocation on the fileSystmeAccess\n\t\t// since we want to report proper progress here\n\t\taccess.setMonitor(monitor);\n\t\tfinal IProject builtProject = context.getBuiltProject();\n\t\taccess.setProject(builtProject);\n\t\tfinal Map<String, OutputConfiguration> outputConfigurations = getOutputConfigurations(context);\n\t\taccess.setOutputConfigurations(outputConfigurations);\n\t\tif (context.getBuildType() == BuildType.CLEAN || context.getBuildType() == BuildType.RECOVERY) {\n\t\t\tfor (OutputConfiguration config : outputConfigurations.values()) {\n\t\t\t\tcleanOutput(context, config, monitor);\n\t\t\t\t// TODO I think we should put a 'context.needRebuild();' here, but \n\t\t\t\t// org.eclipse.xtext.builder.impl.BuilderParticipantTest.testClean() fails afterwards\n\t\t\t}\n\t\t\tif (context.getBuildType() == BuildType.CLEAN)\n\t\t\t\treturn;\n\t\t}\n\t\tfor (final IResourceDescription.Delta delta : context.getDeltas()) {\n\t\t\tfinal String uri = delta.getUri().toString();\n\t\t\tfinal Set<IFile> derivedResources = newLinkedHashSet();\n\t\t\tfor (OutputConfiguration config : outputConfigurations.values()) {\n\t\t\t\tif (config.isCleanUpDerivedResources()) {\n\t\t\t\t\tList<IFile> resources = derivedResourceMarkers.findDerivedResources(builtProject.getFolder(config.getOutputDirectory()), getGeneratorIdentifier(), uri);\n\t\t\t\t\tderivedResources.addAll(resources);\n\t\t\t\t}\n\t\t\t}\n\t\t\taccess.setPostProcessor(new EclipseResourceFileSystemAccess2.IFileCallback() {\n\t\t\t\t\n\t\t\t\tpublic boolean beforeFileDeletion(IFile file) {\n\t\t\t\t\tderivedResources.remove(file);\n\t\t\t\t\tcontext.needRebuild();\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tpublic void afterFileUpdate(IFile file) {\n\t\t\t\t\thandleFileAccess(file);\n\t\t\t\t}\n\n\t\t\t\tpublic void afterFileCreation(IFile file) {\n\t\t\t\t\thandleFileAccess(file);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tprotected void handleFileAccess(IFile file) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tderivedResources.remove(file);\n\t\t\t\t\t\tderivedResourceMarkers.installMarker(file, getGeneratorIdentifier(), uri);\n\t\t\t\t\t\tcontext.needRebuild();\n\t\t\t\t\t} catch (CoreException e) {\n\t\t\t\t\t\tthrow new RuntimeException(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t});\n\t\t\tif (delta.getNew() != null) {\n\t\t\t\thandleChangedContents(delta, context, access);\n\t\t\t}\n\t\t\tfor (IFile iFile : derivedResources) {\n\t\t\t\tiFile.delete(IResource.KEEP_HISTORY, monitor);\n\t\t\t\tcontext.needRebuild();\n\t\t\t}\n\t\t}\n\t}","id":50426,"modified_method":"public void build(final IBuildContext context, IProgressMonitor monitor) throws CoreException {\n\t\tfinal int numberOfDeltas = context.getDeltas().size();\n\t\t\n\t\t// monitor handling\n\t\tif (monitor.isCanceled())\n\t\t\tthrow new OperationCanceledException();\n\t\tIProgressMonitor subMon1 = SubMonitor.convert(monitor, numberOfDeltas);\n\t\t\n\t\tEclipseResourceFileSystemAccess2 access = fileSystemAccessProvider.get();\n\t\tfinal IProject builtProject = context.getBuiltProject();\n\t\taccess.setProject(builtProject);\n\t\tfinal Map<String, OutputConfiguration> outputConfigurations = getOutputConfigurations(context);\n\t\taccess.setOutputConfigurations(outputConfigurations);\n\t\tif (context.getBuildType() == BuildType.CLEAN || context.getBuildType() == BuildType.RECOVERY) {\n\t\t\tfor (OutputConfiguration config : outputConfigurations.values()) {\n\t\t\t\tcleanOutput(context, config, monitor);\n\t\t\t}\n\t\t\tif (context.getBuildType() == BuildType.CLEAN)\n\t\t\t\treturn;\n\t\t}\n\t\tfor (int i = 0 ; i < numberOfDeltas ; i++) {\n\t\t\tfinal IResourceDescription.Delta delta = context.getDeltas().get(i);\n\t\t\t\n\t\t\t// monitor handling\n\t\t\tif (subMon1.isCanceled())\n\t\t\t\tthrow new OperationCanceledException();\n\t\t\tsubMon1.subTask(\"Compiling \"+delta.getUri().lastSegment()+\" (\"+i+\" of \"+numberOfDeltas+\")\");\n\t\t\t\n\t\t\taccess.setMonitor(subMon1);\n\t\t\tfinal String uri = delta.getUri().toString();\n\t\t\tfinal Set<IFile> derivedResources = newLinkedHashSet();\n\t\t\tfor (OutputConfiguration config : outputConfigurations.values()) {\n\t\t\t\tif (config.isCleanUpDerivedResources()) {\n\t\t\t\t\tList<IFile> resources = derivedResourceMarkers.findDerivedResources(builtProject.getFolder(config.getOutputDirectory()), getGeneratorIdentifier(), uri);\n\t\t\t\t\tderivedResources.addAll(resources);\n\t\t\t\t}\n\t\t\t}\n\t\t\taccess.setPostProcessor(new EclipseResourceFileSystemAccess2.IFileCallback() {\n\t\t\t\t\n\t\t\t\tpublic boolean beforeFileDeletion(IFile file) {\n\t\t\t\t\tderivedResources.remove(file);\n\t\t\t\t\tcontext.needRebuild();\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tpublic void afterFileUpdate(IFile file) {\n\t\t\t\t\thandleFileAccess(file);\n\t\t\t\t}\n\n\t\t\t\tpublic void afterFileCreation(IFile file) {\n\t\t\t\t\thandleFileAccess(file);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tprotected void handleFileAccess(IFile file) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tderivedResources.remove(file);\n\t\t\t\t\t\tderivedResourceMarkers.installMarker(file, getGeneratorIdentifier(), uri);\n\t\t\t\t\t\tcontext.needRebuild();\n\t\t\t\t\t} catch (CoreException e) {\n\t\t\t\t\t\tthrow new RuntimeException(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t});\n\t\t\tif (delta.getNew() != null) {\n\t\t\t\thandleChangedContents(delta, context, access);\n\t\t\t}\n\t\t\tfor (IFile iFile : derivedResources) {\n\t\t\t\tiFile.delete(IResource.KEEP_HISTORY, monitor);\n\t\t\t\tcontext.needRebuild();\n\t\t\t}\n\t\t}\n\t}","commit_id":"89ad5a51e760d0c83fced4ee46f8c7cd52657f28","url":"https://github.com/eclipse/xtext"},{"original_method":"private void diffDirs(final File orig, File revd, final List<String> diffs) {\n      Iterable<String> onames = Sequence.fromArray(orig.list());\n      Iterable<String> rnames = Sequence.fromArray(revd.list());\n      if (Sequence.fromIterable(onames).disjunction(Sequence.fromIterable(rnames)).isNotEmpty()) {\n        Sequence.fromIterable(onames).subtract(Sequence.fromIterable(rnames)).visitAll(new IVisitor<String>() {\n          public void visit(String it) {\n            ListSequence.fromList(diffs).addElement(\"Removed: \" + new File(orig, it));\n          }\n        });\n        Sequence.fromIterable(rnames).subtract(Sequence.fromIterable(onames)).visitAll(new IVisitor<String>() {\n          public void visit(String it) {\n            ListSequence.fromList(diffs).addElement(\"Created: \" + new File(orig, it));\n          }\n        });\n      }\n      for (String name : Sequence.fromIterable(onames).intersect(Sequence.fromIterable(rnames))) {\n        if (\"trace.info\".equals(name)) {\n          continue;\n        }\n\n        File onext = new File(orig, name);\n        File rnext = new File(revd, name);\n        if (onext.isDirectory() == rnext.isDirectory()) {\n          if (!(onext.isDirectory())) {\n            List<String> olines = fileToStrings(onext);\n            Patch patch = DiffUtils.diff(olines, fileToStrings(rnext));\n            for (Delta d : patch.getDeltas()) {\n              ListSequence.fromList(diffs).addSequence(ListSequence.fromList(DiffUtils.generateUnifiedDiff(onext.getPath(), rnext.getPath(), olines, patch, 5)));\n            }\n          } else {\n            diffDirs(onext, rnext, diffs);\n          }\n        } else {\n          ListSequence.fromList(diffs).addElement(\"Something weird here: \" + onext + \" or here \" + rnext);\n        }\n      }\n    }","id":50427,"modified_method":"private void diffDirs(final File orig, File revd, final List<String> diffs) {\n      Iterable<String> onames = Sequence.fromArray(orig.list());\n      Iterable<String> rnames = Sequence.fromArray(revd.list());\n      if (Sequence.fromIterable(onames).disjunction(Sequence.fromIterable(rnames)).isNotEmpty()) {\n        Sequence.fromIterable(onames).subtract(Sequence.fromIterable(rnames)).visitAll(new IVisitor<String>() {\n          public void visit(String it) {\n            ListSequence.fromList(diffs).addElement(\"Removed: \" + new File(orig, it));\n          }\n        });\n        Sequence.fromIterable(rnames).subtract(Sequence.fromIterable(onames)).visitAll(new IVisitor<String>() {\n          public void visit(String it) {\n            ListSequence.fromList(diffs).addElement(\"Created: \" + new File(orig, it));\n          }\n        });\n      }\n      for (String name : Sequence.fromIterable(onames).intersect(Sequence.fromIterable(rnames))) {\n        if (\"trace.info\".equals(name)) {\n          continue;\n        }\n\n        File onext = new File(orig, name);\n        File rnext = new File(revd, name);\n        if (onext.isDirectory() == rnext.isDirectory()) {\n          if (!(onext.isDirectory())) {\n            List<String> olines = fileToStrings(onext);\n            Patch patch = DiffUtils.diff(olines, fileToStrings(rnext));\n            if (!(patch.getDeltas().isEmpty())) {\n              ListSequence.fromList(diffs).addSequence(ListSequence.fromList(DiffUtils.generateUnifiedDiff(onext.getPath(), rnext.getPath(), olines, patch, 5)));\n            }\n          } else {\n            diffDirs(onext, rnext, diffs);\n          }\n        } else {\n          ListSequence.fromList(diffs).addElement(\"Something weird here: \" + onext + \" or here \" + rnext);\n        }\n      }\n    }","commit_id":"0e9c5855a30bc875fd28e33502e28245d4f496ce","url":"https://github.com/JetBrains/MPS"},{"original_method":"protected boolean isReparseRequired(XtextResource resource, IResourceDescription.Event event) {\n\t\tIResourceDescription.Manager resourceDescriptionManager = resource.getResourceServiceProvider().getResourceDescriptionManager();\n\t\tIResourceDescription description = resourceDescriptionManager.getResourceDescription(resource);\n\t\tfor(IResourceDescription.Delta delta: event.getDeltas()) {\n\t\t\tif (resourceDescriptionManager.isAffected(delta, description)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tif (!isDirty() && !dirtyStateManager.hasContent(resource.getURI())) {\n\t\t\tIResourceDescription originalDescription = resourceDescriptions.getResourceDescription(resource.getURI());\n\t\t\tif (originalDescription != null && descriptionUtils != null) {\n\t\t\t\tSet<URI> outgoingReferences = descriptionUtils.collectOutgoingReferences(originalDescription);\n\t\t\t\tfor(IResourceDescription.Delta delta: event.getDeltas()) {\n\t\t\t\t\tif (delta.haveEObjectDescriptionsChanged() && outgoingReferences.contains(delta.getUri()))\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}","id":50428,"modified_method":"protected boolean isReparseRequired(XtextResource resource, IResourceDescription.Event event) {\n\t\tIResourceDescription.Manager resourceDescriptionManager = resource.getResourceServiceProvider().getResourceDescriptionManager();\n\t\tIResourceDescription description = resourceDescriptionManager.getResourceDescription(resource);\n\t\tif (resourceDescriptionManager.isAffected(event.getDeltas(), description, resourceDescriptions)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!isDirty() && !dirtyStateManager.hasContent(resource.getURI())) {\n\t\t\tIResourceDescription originalDescription = resourceDescriptions.getResourceDescription(resource.getURI());\n\t\t\tif (originalDescription != null && descriptionUtils != null) {\n\t\t\t\tSet<URI> outgoingReferences = descriptionUtils.collectOutgoingReferences(originalDescription);\n\t\t\t\tfor(IResourceDescription.Delta delta: event.getDeltas()) {\n\t\t\t\t\tif (delta.haveEObjectDescriptionsChanged() && outgoingReferences.contains(delta.getUri()))\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}","commit_id":"1539a3768d5a9d4e8fcb5fecdfae10671479ccb4","url":"https://github.com/eclipse/xtext"},{"original_method":"public static void main(String[] args) throws MalformedURLException {\n        // Evaluate the arguments to get the name of the script to\n        // execute, which environment to run it in, and the arguments\n        // to pass to the script. This also evaluates arguments of the\n        // form \"-Dprop=value\" and creates system properties from each\n        // one.\n        String allArgs = args.length > 0 ? args[0].trim() : \"\";\n        ScriptAndArgs script = processArgumentsAndReturnScriptName(allArgs);\n\n        // Get hold of the GRAILS_HOME environment variable if it is\n        // available.\n        String grailsHome = System.getProperty(\"grails.home\");\n\n        // Now we can pick up the Grails version from the Ant project\n        // properties.\n        BuildSettings build = new BuildSettings(new File(grailsHome));\n\n        // Check that Grails' home actually exists.\n        final File grailsHomeInSettings = build.getGrailsHome();\n        if (grailsHomeInSettings == null || !grailsHomeInSettings.exists()) {\n            System.out.println(\"Grails' installation directory not found: \" + build.getGrailsHome());\n            System.exit(1);\n        }\n\n        // Show a nice header in the console when running commands.\n        System.out.println(\n\"Welcome to Grails \" + build.getGrailsVersion() + \" - http://grails.org/\" + '\\n' +\n\"Licensed under Apache Standard License 2.0\" + '\\n' +\n\"Grails home is \" + (grailsHome == null ? \"not set\" : \"set to: \" + grailsHome) + '\\n');\n\n        // If there aren't any arguments, then we don't have a command\n        // to execute. So we have to exit.\n        if (script.name == null) {\n            System.out.println(\"No script name specified. Use 'grails help' for more info or 'grails interactive' to enter interactive mode\");\n            System.exit(0);\n        }\n\n        System.out.println(\"Base Directory: \" + build.getBaseDir().getPath());\n\n        try {\n            GrailsScriptRunner runner = new GrailsScriptRunner(build);\n            int exitCode = runner.executeCommand(script.name, script.args, script.env);\n            System.exit(exitCode);\n        }\n        catch (ScriptNotFoundException ex) {\n            System.out.println(\"Script not found: \" + ex.getScriptName());\n        }\n        catch (Throwable t) {\n            System.out.println(\"Error executing script \" + script.name + \": \" + t.getMessage());\n            sanitizeStacktrace(t);\n            t.printStackTrace(System.out);\n            System.exit(1);\n        }\n    }","id":50429,"modified_method":"public static void main(String[] args) throws MalformedURLException {\n        // Evaluate the arguments to get the name of the script to\n        // execute, which environment to run it in, and the arguments\n        // to pass to the script. This also evaluates arguments of the\n        // form \"-Dprop=value\" and creates system properties from each\n        // one.\n        String allArgs = args.length > 0 ? args[0].trim() : \"\";\n        ScriptAndArgs script = processArgumentsAndReturnScriptName(allArgs);\n\n        // Get hold of the GRAILS_HOME environment variable if it is\n        // available.\n        String grailsHome = System.getProperty(\"grails.home\");\n\n        // Now we can pick up the Grails version from the Ant project\n        // properties.\n        BuildSettings build = new BuildSettings(new File(grailsHome));\n\n        // Check that Grails' home actually exists.\n        final File grailsHomeInSettings = build.getGrailsHome();\n        if (grailsHomeInSettings == null || !grailsHomeInSettings.exists()) {\n            System.out.println(\"Grails' installation directory not found: \" + build.getGrailsHome());\n            System.exit(1);\n        }\n\n        // Show a nice header in the console when running commands.\n        System.out.println(\n\"Welcome to Grails \" + build.getGrailsVersion() + \" - http://grails.org/\" + '\\n' +\n\"Licensed under Apache Standard License 2.0\" + '\\n' +\n\"Grails home is \" + (grailsHome == null ? \"not set\" : \"set to: \" + grailsHome) + '\\n');\n\n        // If there aren't any arguments, then we don't have a command\n        // to execute. So we have to exit.\n        if (script.name == null) {\n            System.out.println(\"No script name specified. Use 'grails help' for more info or 'grails interactive' to enter interactive mode\");\n            System.exit(0);\n        }\n\n        System.out.println(\"Base Directory: \" + build.getBaseDir().getPath());\n\n        try {\n            GrailsScriptRunner runner = new GrailsScriptRunner(build);\n            int exitCode = runner.executeCommand(script.name, script.args, script.env);\n            System.exit(exitCode);\n        }\n        catch (ScriptNotFoundException ex) {\n            System.out.println(\"Script not found: \" + ex.getScriptName());\n        }\n        catch (Throwable t) {\n            String msg = \"Error executing script \" + script.name + \": \" + t.getMessage();\n            System.out.println(msg);\n            sanitizeStacktrace(t);\n            t.printStackTrace(System.out);\n            System.out.println(msg);\n            System.exit(1);\n        }\n    }","commit_id":"4da84baf40153d43473048aee39083bfb51b6b4b","url":"https://github.com/grails/grails-core"},{"original_method":"/**\n     * Creates a new root loader with the Grails libraries and the\n     * application's plugin libraries on the classpath.\n     */\n    private static URL[] getClassLoaderUrls(BuildSettings settings, File cacheDir, Set excludes, boolean skipPlugins) throws MalformedURLException {\n        List<URL> urls = new ArrayList<URL>();\n\n        // If 'grailsHome' is set, make sure the script cache\n        // directory takes precedence over the \"grails-scripts\"\n        // JAR by adding it first.\n        if (settings.getGrailsHome() != null) {\n            urls.add(cacheDir.toURI().toURL());\n        }\n\n        // Add the \"resources\" directory so that config files and the\n        // like can be picked up off the classpath.\n        if (settings.getResourcesDir() != null && settings.getResourcesDir().exists()) {\n            urls.add(settings.getResourcesDir().toURI().toURL());\n        }\n\n        // Add compilation dependencies\n        List compileDependencies = settings.getCompileDependencies();\n        for (Object compileDependency : compileDependencies) {\n            File file = (File) compileDependency;\n            if (!excludes.contains(file.getName())) {\n                urls.add(file.toURI().toURL());\n                excludes.add(file.getName());\n            }\n\n        }\n        // Add the project's runtime dependencies because most of them\n        // will be required for the build to work.\n        List runtimeDeps = settings.getRuntimeDependencies();\n        for (Iterator iter = runtimeDeps.iterator(); iter.hasNext();) {\n            File file = (File) iter.next();\n            if(urls.contains(file)) continue;\n            if (!excludes.contains(file.getName())) {\n                urls.add(file.toURI().toURL());\n                excludes.add(file.getName());\n            }\n        }\n\n\n        // If we're using a Grails installation, add any remaining JARs\n        // from its \"lib\" directory.\n        if (settings.getGrailsHome() != null) {\n            addLibs(new File(settings.getGrailsHome(), \"lib\"), urls, excludes);\n        }\n\n        // Add the libraries of both project and global plugins.\n        if (!skipPlugins) {\n            for (File dir : listKnownPluginDirs(settings)) {\n                addPluginLibs(dir, urls);\n            }\n        }\n        return urls.toArray(new URL[urls.size()]);\n    }","id":50430,"modified_method":"/**\n     * Creates a new root loader with the Grails libraries and the\n     * application's plugin libraries on the classpath.\n     */\n    private static URL[] getClassLoaderUrls(BuildSettings settings, File cacheDir, Set excludes, boolean skipPlugins) throws MalformedURLException {\n        List<URL> urls = new ArrayList<URL>();\n\n        // If 'grailsHome' is set, make sure the script cache\n        // directory takes precedence over the \"grails-scripts\"\n        // JAR by adding it first.\n        if (settings.getGrailsHome() != null) {\n            urls.add(cacheDir.toURI().toURL());\n        }\n\n        // Add the \"resources\" directory so that config files and the\n        // like can be picked up off the classpath.\n        if (settings.getResourcesDir() != null && settings.getResourcesDir().exists()) {\n            urls.add(settings.getResourcesDir().toURI().toURL());\n        }\n\n        // Add build-only dependencies to the project\n        System.out.println(\"Resolving dependencies...\");\n        long now = System.currentTimeMillis();\n        // add dependencies required by the build system\n        addDependenciesToURLs(excludes, urls, settings.getBuildDependencies());\n        // add dependencies required at development time, but not at deployment time\n        addDependenciesToURLs(excludes, urls, settings.getProvidedDependencies());                                                                                    \n        // Add the project's runtime dependencies because most of them\n        // will be required for the build to work.\n        addDependenciesToURLs(excludes, urls, settings.getRuntimeDependencies());\n        System.out.println(\"Dependencies resolved in \"+(System.currentTimeMillis()-now)+\"ms.\");\n\n        // Add the libraries of both project and global plugins.\n        if (!skipPlugins) {\n            for (File dir : listKnownPluginDirs(settings)) {\n                addPluginLibs(dir, urls);\n            }\n        }\n        return urls.toArray(new URL[urls.size()]);\n    }","commit_id":"4da84baf40153d43473048aee39083bfb51b6b4b","url":"https://github.com/grails/grails-core"},{"original_method":"/**\n     * Sanitizes a stack trace using GrailsUtil.deepSanitize(). We use\n     * this method so that the GrailsUtil class is loaded from the\n     * context class loader. Basically, we don't want this class to\n     * have a direct dependency on GrailsUtil otherwise the class loader\n     * used to load this class (GrailsScriptRunner) would have to have\n     * far more libraries on its classpath than we want.\n     */\n    private static void sanitizeStacktrace(Throwable t) {\n        try {\n            ClassLoader loader = Thread.currentThread().getContextClassLoader();\n            Class clazz = loader.loadClass(\"grails.util.GrailsUtil\");\n            Method method = clazz.getMethod(\"deepSanitize\", new Class[] {Throwable.class});\n            method.invoke(null, new Object[] {t});\n        }\n        catch (Exception ex) {\n            ex.printStackTrace();\n        }\n    }","id":50431,"modified_method":"/**\n     * Sanitizes a stack trace using GrailsUtil.deepSanitize(). We use\n     * this method so that the GrailsUtil class is loaded from the\n     * context class loader. Basically, we don't want this class to\n     * have a direct dependency on GrailsUtil otherwise the class loader\n     * used to load this class (GrailsScriptRunner) would have to have\n     * far more libraries on its classpath than we want.\n     */\n    private static void sanitizeStacktrace(Throwable t) {\n        try {\n            ClassLoader loader = Thread.currentThread().getContextClassLoader();\n            Class clazz = loader.loadClass(\"grails.util.GrailsUtil\");\n            Method method = clazz.getMethod(\"deepSanitize\", new Class[] {Throwable.class});\n            method.invoke(null, new Object[] {t});\n        }\n        catch (Exception ex) {\n            // cannot sanitize, ignore\n        }\n    }","commit_id":"4da84baf40153d43473048aee39083bfb51b6b4b","url":"https://github.com/grails/grails-core"},{"original_method":"public Set<Dependency> getRuntimeDependencies() {\n        return mavenPublication.getRuntimeDependencies();\n    }","id":50432,"modified_method":"public Set<MavenDependencyInternal> getRuntimeDependencies() {\n        return mavenPublication.getRuntimeDependencies();\n    }","commit_id":"1991e8310218b42af4c45bc95a1d6857dc1dbf22","url":"https://github.com/gradle/gradle"},{"original_method":"public Set<Dependency> getRuntimeDependencies() {\n        return runtimeDependencies;\n    }","id":50433,"modified_method":"public Set<MavenDependencyInternal> getRuntimeDependencies() {\n        return runtimeDependencies;\n    }","commit_id":"1991e8310218b42af4c45bc95a1d6857dc1dbf22","url":"https://github.com/gradle/gradle"},{"original_method":"public void from(SoftwareComponent component) {\n        if (this.component != null) {\n            throw new InvalidUserDataException(String.format(\"Maven publication '%s' cannot include multiple components\", name));\n        }\n        this.component = (SoftwareComponentInternal) component;\n\n        for (Usage usage : this.component.getUsages()) {\n            // TODO Need a smarter way to map usage to artifact classifier\n            for (PublishArtifact publishArtifact : usage.getArtifacts()) {\n                artifact(publishArtifact);\n            }\n\n            // TODO Need a smarter way to map usage to scope\n            runtimeDependencies.addAll(usage.getDependencies());\n        }\n    }","id":50434,"modified_method":"public void from(SoftwareComponent component) {\n        if (this.component != null) {\n            throw new InvalidUserDataException(String.format(\"Maven publication '%s' cannot include multiple components\", name));\n        }\n        this.component = (SoftwareComponentInternal) component;\n\n        for (Usage usage : this.component.getUsages()) {\n            // TODO Need a smarter way to map usage to artifact classifier\n            for (PublishArtifact publishArtifact : usage.getArtifacts()) {\n                artifact(publishArtifact);\n            }\n\n            // TODO Need a smarter way to map usage to scope\n            for (ModuleDependency dependency : usage.getDependencies()) {\n                if (dependency instanceof ProjectDependency) {\n                    addProjectDependency((ProjectDependency) dependency);\n                } else {\n                    addModuleDependency(dependency);\n                }\n            }\n        }\n    }","commit_id":"1991e8310218b42af4c45bc95a1d6857dc1dbf22","url":"https://github.com/gradle/gradle"},{"original_method":"@TaskAction\n    public void doGenerate() {\n        MavenPomInternal pomInternal = (MavenPomInternal) getPom();\n\n        MavenPomFileGenerator pomGenerator = new MavenPomFileGenerator();\n        copyIdentity(pomInternal, pomGenerator);\n        copyDependencies(pomInternal.getRuntimeDependencies(), pomGenerator);\n        pomGenerator.withXml(pomInternal.getXmlAction());\n\n        pomGenerator.writeTo(getDestination());\n    }","id":50435,"modified_method":"@TaskAction\n    public void doGenerate() {\n        MavenPomInternal pomInternal = (MavenPomInternal) getPom();\n\n        MavenPomFileGenerator pomGenerator = new MavenPomFileGenerator(pomInternal.getProjectIdentity());\n        pomGenerator.setPackaging(pomInternal.getPackaging());\n\n        for (MavenDependencyInternal runtimeDependency : pomInternal.getRuntimeDependencies()) {\n            pomGenerator.addRuntimeDependency(runtimeDependency);\n        }\n\n        pomGenerator.withXml(pomInternal.getXmlAction());\n\n        pomGenerator.writeTo(getDestination());\n    }","commit_id":"1991e8310218b42af4c45bc95a1d6857dc1dbf22","url":"https://github.com/gradle/gradle"},{"original_method":"private void addDependency(ModuleDependency moduleDependency, String scope) {\n        if (moduleDependency.getArtifacts().size() == 0) {\n            getModel().addDependency(createMavenDependency(moduleDependency, moduleDependency.getName(), null, scope, null));\n        } else {\n            for (DependencyArtifact artifact : moduleDependency.getArtifacts()) {\n                getModel().addDependency(createMavenDependency(moduleDependency, artifact.getName(), artifact.getType(), scope, artifact.getClassifier()));\n            }\n        }\n    }","id":50436,"modified_method":"private void addDependency(MavenDependencyInternal mavenDependency, String scope) {\n        if (mavenDependency.getArtifacts().size() == 0) {\n            addDependency(mavenDependency, mavenDependency.getArtifactId(), scope, null, null);\n        } else {\n            for (DependencyArtifact artifact : mavenDependency.getArtifacts()) {\n                addDependency(mavenDependency, artifact.getName(), scope, artifact.getType(), artifact.getClassifier());\n            }\n        }\n    }","commit_id":"1991e8310218b42af4c45bc95a1d6857dc1dbf22","url":"https://github.com/gradle/gradle"},{"original_method":"private Dependency createMavenDependency(ModuleDependency dependency, String name, String type, String scope, String classifier) {\n        Dependency mavenDependency =  new Dependency();\n        mavenDependency.setGroupId(dependency.getGroup());\n        if (dependency instanceof ProjectDependency) {\n            mavenDependency.setArtifactId(determineProjectDependencyArtifactId((ProjectDependency) dependency));\n        } else {\n            mavenDependency.setArtifactId(name);\n        }\n        mavenDependency.setVersion(dependency.getVersion());\n        mavenDependency.setType(type);\n        mavenDependency.setScope(scope);\n        mavenDependency.setOptional(false);\n        mavenDependency.setClassifier(classifier);\n        return mavenDependency;\n    }","id":50437,"modified_method":"private void addDependency(MavenDependencyInternal dependency, String artifactId, String scope, String type, String classifier) {\n        Dependency mavenDependency = new Dependency();\n        mavenDependency.setGroupId(dependency.getGroupId());\n        mavenDependency.setArtifactId(artifactId);\n        mavenDependency.setVersion(dependency.getVersion());\n        mavenDependency.setType(type);\n        mavenDependency.setScope(scope);\n        mavenDependency.setClassifier(classifier);\n\n        getModel().addDependency(mavenDependency);\n    }","commit_id":"1991e8310218b42af4c45bc95a1d6857dc1dbf22","url":"https://github.com/gradle/gradle"},{"original_method":"@Override\n  public void configure() {\n    setName(\"CountRandom\");\n    setDescription(\"Example random count application\");\n    createDataset(TABLE_NAME, KeyValueTable.class);\n    addFlow(new CountRandomFlow());\n  }","id":50438,"modified_method":"@Override\n  public void configure() {\n    setName(\"CountRandom\");\n    setDescription(\"Example random count application\");\n    createDataset(TABLE_NAME, KeyValueTable.class, DatasetProperties.builder().setDescription(\"Counts table\").build());\n    addFlow(new CountRandomFlow());\n  }","commit_id":"25ac0020550100be6c569a310dea3e9808f83ea4","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public void configure() {\n    setName(NAME);\n    setDescription(\"Example Data Cleansing Application\");\n\n    // Ingest and retrieve the data using a Service\n    addService(new DataCleansingService());\n\n    // Process the records from \"rawRecords\" partitioned file set using MapReduce\n    addMapReduce(new DataCleansingMapReduce());\n\n    // Store the state of the incrementally processing MapReduce\n    createDataset(CONSUMING_STATE, KeyValueTable.class);\n\n    // Create the \"rawRecords\" partitioned file set for storing the input records, \n    // configure it to work with MapReduce\n    createDataset(RAW_RECORDS, PartitionedFileSet.class, PartitionedFileSetProperties.builder()\n      // Properties for partitioning\n      .setPartitioning(Partitioning.builder().addLongField(\"time\").build())\n      // Properties for file set\n      .setInputFormat(TextInputFormat.class)\n      .build());\n\n    createDataset(CLEAN_RECORDS, PartitionedFileSet.class, PartitionedFileSetProperties.builder()\n      // Properties for partitioning\n      .setPartitioning(Partitioning.builder().addLongField(\"time\").addIntField(\"zip\").build())\n      // Properties for file set\n      .setOutputFormat(TextOutputFormat.class)\n      // Properties for Explore (to create a partitioned Hive table)\n      .setEnableExploreOnCreate(true)\n      .setExploreFormat(\"text\")\n      .setExploreFormatProperty(\"delimiter\", \"\\n\")\n      .setExploreSchema(\"record STRING\")\n      .build());\n\n    createDataset(INVALID_RECORDS, PartitionedFileSet.class, PartitionedFileSetProperties.builder()\n      // Properties for partitioning\n      .setPartitioning(Partitioning.builder().addLongField(\"time\").build())\n      // Properties for file set\n      .setOutputFormat(TextOutputFormat.class)\n      // Properties for Explore (to create a partitioned Hive table)\n      .setEnableExploreOnCreate(true)\n      .setExploreFormat(\"text\")\n      .setExploreFormatProperty(\"delimiter\", \"\\n\")\n      .setExploreSchema(\"record STRING\")\n      .build());\n  }","id":50439,"modified_method":"@Override\n  public void configure() {\n    setName(NAME);\n    setDescription(\"Example data cleansing application\");\n\n    // Ingest and retrieve the data using a Service\n    addService(new DataCleansingService());\n\n    // Process the records from \"rawRecords\" partitioned file set using MapReduce\n    addMapReduce(new DataCleansingMapReduce());\n\n    // Store the state of the incrementally processing MapReduce\n    createDataset(CONSUMING_STATE, KeyValueTable.class);\n\n    // Create the \"rawRecords\" partitioned file set for storing the input records, \n    // configure it to work with MapReduce\n    createDataset(RAW_RECORDS, PartitionedFileSet.class, PartitionedFileSetProperties.builder()\n      // Properties for partitioning\n      .setPartitioning(Partitioning.builder().addLongField(\"time\").build())\n      // Properties for file set\n      .setInputFormat(TextInputFormat.class)\n      .setDescription(\"Store input records\")\n      .build());\n\n    createDataset(CLEAN_RECORDS, PartitionedFileSet.class, PartitionedFileSetProperties.builder()\n      // Properties for partitioning\n      .setPartitioning(Partitioning.builder().addLongField(\"time\").addIntField(\"zip\").build())\n      // Properties for file set\n      .setOutputFormat(TextOutputFormat.class)\n      // Properties for Explore (to create a partitioned Hive table)\n      .setEnableExploreOnCreate(true)\n      .setExploreFormat(\"text\")\n      .setExploreFormatProperty(\"delimiter\", \"\\n\")\n      .setExploreSchema(\"record STRING\")\n      .setDescription(\"Store clean records\")\n      .build());\n\n    createDataset(INVALID_RECORDS, PartitionedFileSet.class, PartitionedFileSetProperties.builder()\n      // Properties for partitioning\n      .setPartitioning(Partitioning.builder().addLongField(\"time\").build())\n      // Properties for file set\n      .setOutputFormat(TextOutputFormat.class)\n      // Properties for Explore (to create a partitioned Hive table)\n      .setEnableExploreOnCreate(true)\n      .setExploreFormat(\"text\")\n      .setExploreFormatProperty(\"delimiter\", \"\\n\")\n      .setExploreSchema(\"record STRING\")\n      .setDescription(\"Store invalid records\")\n      .build());\n  }","commit_id":"25ac0020550100be6c569a310dea3e9808f83ea4","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public void configure() {\n    setName(\"FileSetExample\");\n    setDescription(\"Application with a MapReduce that uses a FileSet dataset\");\n    createDataset(\"lines\", FileSet.class, FileSetProperties.builder()\n      .setBasePath(\"example/data/lines\")\n      .setInputFormat(TextInputFormat.class)\n      .setOutputFormat(TextOutputFormat.class)\n      .build());\n    createDataset(\"counts\", FileSet.class, FileSetProperties.builder()\n      .setInputFormat(TextInputFormat.class)\n      .setOutputFormat(TextOutputFormat.class)\n      .setOutputProperty(TextOutputFormat.SEPERATOR, \":\")\n      .build());\n    addService(new FileSetService());\n    addMapReduce(new WordCount());\n  }","id":50440,"modified_method":"@Override\n  public void configure() {\n    setName(\"FileSetExample\");\n    setDescription(\"Application with a MapReduce that uses a FileSet dataset\");\n    createDataset(\"lines\", FileSet.class, FileSetProperties.builder()\n      .setBasePath(\"example/data/lines\")\n      .setInputFormat(TextInputFormat.class)\n      .setOutputFormat(TextOutputFormat.class)\n      .setDescription(\"Store input lines\")\n      .build());\n    createDataset(\"counts\", FileSet.class, FileSetProperties.builder()\n      .setInputFormat(TextInputFormat.class)\n      .setOutputFormat(TextOutputFormat.class)\n      .setOutputProperty(TextOutputFormat.SEPERATOR, \":\")\n      .setDescription(\"Store word counts\")\n      .build());\n    addService(new FileSetService());\n    addMapReduce(new WordCount());\n  }","commit_id":"25ac0020550100be6c569a310dea3e9808f83ea4","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public void configure() {\n    setName(\"HelloWorld\");\n    setDescription(\"A Hello World program for the Cask Data Application Platform\");\n    addStream(new Stream(\"who\"));\n    createDataset(\"whom\", KeyValueTable.class);\n    addFlow(new WhoFlow());\n    addService(new Greeting());\n  }","id":50441,"modified_method":"@Override\n  public void configure() {\n    setName(\"HelloWorld\");\n    setDescription(\"A Hello World program for the Cask Data Application Platform\");\n    addStream(new Stream(\"who\"));\n    createDataset(\"whom\", KeyValueTable.class, DatasetProperties.builder().setDescription(\"Store names\").build());\n    addFlow(new WhoFlow());\n    addService(new Greeting());\n  }","commit_id":"25ac0020550100be6c569a310dea3e9808f83ea4","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n    public void configure() {\n      setDescription(\"Runs log analysis spark and mapreduce programs simultaneously\");\n      fork()\n        .addMapReduce(HitCounterProgram.class.getSimpleName())\n        .also()\n        .addSpark(ResponseCounterSpark.class.getSimpleName())\n        .join();\n    }","id":50442,"modified_method":"@Override\n    public void configure() {\n      setDescription(\"Runs Spark and MapReduce log analysis programs simultaneously\");\n      fork()\n        .addMapReduce(HitCounterProgram.class.getSimpleName())\n        .also()\n        .addSpark(ResponseCounterSpark.class.getSimpleName())\n        .join();\n    }","commit_id":"25ac0020550100be6c569a310dea3e9808f83ea4","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public void configure() {\n    setDescription(\"CDAP Log Analysis App\");\n\n    // A stream to ingest log data\n    addStream(new Stream(LOG_STREAM));\n\n    // A Spark and MapReduce for processing log data\n    addSpark(new ResponseCounterSpark());\n    addMapReduce(new HitCounterProgram());\n\n    addWorkflow(new LogAnalysisWorkflow());\n\n    // Services to query for result\n    addService(HIT_COUNTER_SERVICE, new HitCounterServiceHandler());\n    addService(RESPONSE_COUNTER_SERVICE, new ResponseCounterHandler());\n    addService(REQUEST_COUNTER_SERVICE, new RequestCounterHandler());\n\n    // Datasets to store output after processing\n    createDataset(RESPONSE_COUNT_STORE, KeyValueTable.class);\n    createDataset(HIT_COUNT_STORE, KeyValueTable.class);\n    createDataset(REQ_COUNT_STORE, TimePartitionedFileSet.class, FileSetProperties.builder()\n      .setOutputFormat(TextOutputFormat.class)\n      .setOutputProperty(TextOutputFormat.SEPERATOR, \":\").build());\n  }","id":50443,"modified_method":"@Override\n  public void configure() {\n    setDescription(\"CDAP Log Analysis App\");\n\n    // A stream to ingest log data\n    addStream(new Stream(LOG_STREAM));\n\n    // A Spark and MapReduce for processing log data\n    addSpark(new ResponseCounterSpark());\n    addMapReduce(new HitCounterProgram());\n\n    addWorkflow(new LogAnalysisWorkflow());\n\n    // Services to query for result\n    addService(HIT_COUNTER_SERVICE, new HitCounterServiceHandler());\n    addService(RESPONSE_COUNTER_SERVICE, new ResponseCounterHandler());\n    addService(REQUEST_COUNTER_SERVICE, new RequestCounterHandler());\n\n    // Datasets to store output after processing\n    createDataset(RESPONSE_COUNT_STORE, KeyValueTable.class,\n                  DatasetProperties.builder().setDescription(\"Store response counts\").build());\n    createDataset(HIT_COUNT_STORE, KeyValueTable.class,\n                  DatasetProperties.builder().setDescription(\"Store hit counts\").build());\n    createDataset(REQ_COUNT_STORE, TimePartitionedFileSet.class, FileSetProperties.builder()\n      .setOutputFormat(TextOutputFormat.class)\n      .setOutputProperty(TextOutputFormat.SEPERATOR, \":\")\n      .setDescription(\"Store request counts\").build());\n  }","commit_id":"25ac0020550100be6c569a310dea3e9808f83ea4","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public void configure() {\n    setName(APP_NAME);\n    setDescription(\"Purchase history application.\");\n\n    // Ingest data into the Application via a Stream\n    addStream(new Stream(\"purchaseStream\"));\n\n    // Store processed data in a Dataset\n    createDataset(\"frequentCustomers\", KeyValueTable.class);\n\n    // Store user profiles in a Dataset\n    createDataset(\"userProfiles\", KeyValueTable.class);\n\n    // Process events in realtime using a Flow\n    addFlow(new PurchaseFlow());\n\n    // Specify a MapReduce to run on the acquired data\n    addMapReduce(new PurchaseHistoryBuilder());\n\n    // Run a Workflow that uses the MapReduce to run on the acquired data\n    addWorkflow(new PurchaseHistoryWorkflow());\n\n    // Retrieve the processed data using a Service\n    addService(new PurchaseHistoryService());\n\n    // Store and retrieve user profile data using a Service\n    addService(UserProfileServiceHandler.SERVICE_NAME, new UserProfileServiceHandler());\n\n    // Provide a Service to Application components\n    addService(new CatalogLookupService());\n\n    // Schedule the workflow\n    scheduleWorkflow(\n      Schedules.builder(\"DailySchedule\")\n        .setMaxConcurrentRuns(1)\n        .createTimeSchedule(\"0 4 * * *\"),\n      \"PurchaseHistoryWorkflow\");\n\n    // Schedule the workflow based on the data coming in the purchaseStream stream\n    scheduleWorkflow(\n      Schedules.builder(\"DataSchedule\")\n        .setDescription(\"Schedule execution when 1 MB or more of data is ingested in the purchaseStream\")\n        .setMaxConcurrentRuns(1)\n        .createDataSchedule(Schedules.Source.STREAM, \"purchaseStream\", 1),\n      \"PurchaseHistoryWorkflow\"\n    );\n\n    createDataset(\"history\", PurchaseHistoryStore.class, PurchaseHistoryStore.properties());\n    try {\n      createDataset(\"purchases\", ObjectMappedTable.class,\n                    ObjectMappedTableProperties.builder().setType(Purchase.class).build());\n    } catch (UnsupportedTypeException e) {\n      // This exception is thrown by ObjectMappedTable if its parameter type cannot be\n      // (de)serialized (for example, if it is an interface and not a class, then there is\n      // no auto-magic way deserialize an object.) In this case that will not happen\n      // because PurchaseHistory and Purchase are actual classes.\n      throw new RuntimeException(e);\n    }\n  }","id":50444,"modified_method":"@Override\n  public void configure() {\n    setName(APP_NAME);\n    setDescription(\"Purchase history application\");\n\n    // Ingest data into the Application via a Stream\n    addStream(new Stream(\"purchaseStream\"));\n\n    // Store processed data in a Dataset\n    createDataset(\"frequentCustomers\", KeyValueTable.class,\n                  DatasetProperties.builder().setDescription(\"Store frequent customers\").build());\n\n    // Store user profiles in a Dataset\n    createDataset(\"userProfiles\", KeyValueTable.class,\n                  DatasetProperties.builder().setDescription(\"Store user profiles\").build());\n\n    // Process events in realtime using a Flow\n    addFlow(new PurchaseFlow());\n\n    // Specify a MapReduce to run on the acquired data\n    addMapReduce(new PurchaseHistoryBuilder());\n\n    // Run a Workflow that uses the MapReduce to run on the acquired data\n    addWorkflow(new PurchaseHistoryWorkflow());\n\n    // Retrieve the processed data using a Service\n    addService(new PurchaseHistoryService());\n\n    // Store and retrieve user profile data using a Service\n    addService(UserProfileServiceHandler.SERVICE_NAME, new UserProfileServiceHandler());\n\n    // Provide a Service to Application components\n    addService(new CatalogLookupService());\n\n    // Schedule the workflow\n    scheduleWorkflow(\n      Schedules.builder(\"DailySchedule\")\n        .setMaxConcurrentRuns(1)\n        .createTimeSchedule(\"0 4 * * *\"),\n      \"PurchaseHistoryWorkflow\");\n\n    // Schedule the workflow based on the data coming in the purchaseStream stream\n    scheduleWorkflow(\n      Schedules.builder(\"DataSchedule\")\n        .setDescription(\"Schedule execution when 1 MB or more of data is ingested in the purchaseStream\")\n        .setMaxConcurrentRuns(1)\n        .createDataSchedule(Schedules.Source.STREAM, \"purchaseStream\", 1),\n      \"PurchaseHistoryWorkflow\"\n    );\n\n    createDataset(\"history\", PurchaseHistoryStore.class, PurchaseHistoryStore.properties(\"History dataset\"));\n    try {\n      createDataset(\"purchases\", ObjectMappedTable.class, ObjectMappedTableProperties.builder().setType(Purchase.class)\n        .setDescription(\"Store purchases\").build());\n    } catch (UnsupportedTypeException e) {\n      // This exception is thrown by ObjectMappedTable if its parameter type cannot be\n      // (de)serialized (for example, if it is an interface and not a class, then there is\n      // no auto-magic way deserialize an object.) In this case that will not happen\n      // because PurchaseHistory and Purchase are actual classes.\n      throw new RuntimeException(e);\n    }\n  }","commit_id":"25ac0020550100be6c569a310dea3e9808f83ea4","url":"https://github.com/caskdata/cdap"},{"original_method":"/**\n   * These properties will be required to create the object store. We provide them here through a static\n   * method such that application code that uses this dataset does not need to be aware of the detailed\n   * properties that are expected.\n   *\n   * @return the properties required to create an instance of this dataset\n   */\n  public static DatasetProperties properties() {\n    try {\n      return ObjectStores.objectStoreProperties(PurchaseHistory.class, DatasetProperties.EMPTY);\n    } catch (UnsupportedTypeException e) {\n      throw new RuntimeException(\"This should never be thrown - PurchaseHistory is a supported type\", e);\n    }\n  }","id":50445,"modified_method":"/**\n   * These properties will be required to create the object store. We provide them here through a static\n   * method such that application code that uses this dataset does not need to be aware of the detailed\n   * properties that are expected.\n   *\n   * @param description Dataset description\n   *\n   * @return the properties required to create an instance of this dataset\n   */\n  public static DatasetProperties properties(String description) {\n    try {\n      return ObjectStores.objectStoreProperties(PurchaseHistory.class,\n                                                DatasetProperties.builder().setDescription(description).build());\n    } catch (UnsupportedTypeException e) {\n      throw new RuntimeException(\"This should never be thrown - PurchaseHistory is a supported type\", e);\n    }\n  }","commit_id":"25ac0020550100be6c569a310dea3e9808f83ea4","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public void configure() {\n    setName(\"SparkKMeans\");\n    setDescription(\"Spark KMeans app\");\n\n    // Ingest data into the Application via a Stream\n    addStream(new Stream(\"pointsStream\"));\n\n    // Process points data in real-time using a Flow\n    addFlow(new PointsFlow());\n\n    // Run a Spark program on the acquired data\n    addSpark(new SparkKMeansSpecification());\n\n    // Retrieve the processed data using a Service\n    addService(new CentersService());\n\n    // Store input and processed data in ObjectStore Datasets\n    try {\n      ObjectStores.createObjectStore(getConfigurer(), \"points\", Point.class);\n      ObjectStores.createObjectStore(getConfigurer(), \"centers\", String.class);\n    } catch (UnsupportedTypeException e) {\n      // This exception is thrown by ObjectStore if its parameter type cannot be\n      // (de)serialized (for example, if it is an interface and not a class, then there is\n      // no auto-magic way deserialize an object.) In this case that will not happen\n      // because String is an actual class.\n      throw new RuntimeException(e);\n    }\n  }","id":50446,"modified_method":"@Override\n  public void configure() {\n    setName(\"SparkKMeans\");\n    setDescription(\"Spark KMeans app\");\n\n    // Ingest data into the Application via a Stream\n    addStream(new Stream(\"pointsStream\"));\n\n    // Process points data in real-time using a Flow\n    addFlow(new PointsFlow());\n\n    // Run a Spark program on the acquired data\n    addSpark(new SparkKMeansSpecification());\n\n    // Retrieve the processed data using a Service\n    addService(new CentersService());\n\n    // Store input and processed data in ObjectStore Datasets\n    try {\n      ObjectStores.createObjectStore(getConfigurer(), \"points\", Point.class,\n                                     DatasetProperties.builder().setDescription(\"Store points data\").build());\n      ObjectStores.createObjectStore(getConfigurer(), \"centers\", String.class,\n                                     DatasetProperties.builder().setDescription(\"Store centers data\").build());\n    } catch (UnsupportedTypeException e) {\n      // This exception is thrown by ObjectStore if its parameter type cannot be\n      // (de)serialized (for example, if it is an interface and not a class, then there is\n      // no auto-magic way deserialize an object.) In this case that will not happen\n      // because String is an actual class.\n      throw new RuntimeException(e);\n    }\n  }","commit_id":"25ac0020550100be6c569a310dea3e9808f83ea4","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n    public void configure() {\n      setDescription(\"Spark Page Rank Program\");\n      setMainClass(SparkPageRankProgram.class);\n      setDriverResources(new Resources(1024));\n      setExecutorResources(new Resources(1024));\n    }","id":50447,"modified_method":"@Override\n    public void configure() {\n      setDescription(\"Spark page rank program\");\n      setMainClass(SparkPageRankProgram.class);\n      setDriverResources(new Resources(1024));\n      setExecutorResources(new Resources(1024));\n    }","commit_id":"25ac0020550100be6c569a310dea3e9808f83ea4","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n    public void configure() {\n      setDescription(\"Runs SparkPageRankProgram followed by RanksCounter MapReduce\");\n      addSpark(PageRankSpark.class.getSimpleName());\n      addMapReduce(RanksCounter.class.getSimpleName());\n    }","id":50448,"modified_method":"@Override\n    public void configure() {\n      setDescription(\"Runs PageRankSpark program followed by RanksCounter MapReduce program\");\n      addSpark(PageRankSpark.class.getSimpleName());\n      addMapReduce(RanksCounter.class.getSimpleName());\n    }","commit_id":"25ac0020550100be6c569a310dea3e9808f83ea4","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public void configure() {\n    setName(\"SparkPageRank\");\n    setDescription(\"Spark page rank application.\");\n\n    // Ingest data into the Application via a Stream\n    addStream(new Stream(BACKLINK_URL_STREAM));\n\n    // Run a Spark program on the acquired data\n    addSpark(new PageRankSpark());\n\n    // Runs MapReduce program on data emitted by Spark program\n    addMapReduce(new RanksCounter());\n\n    // Runs Spark followed by a MapReduce in a Workflow\n    addWorkflow(new PageRankWorkflow());\n\n    // Service to retrieve process data\n    addService(SERVICE_HANDLERS, new SparkPageRankServiceHandler());\n\n    // Store input and processed data in ObjectStore Datasets\n    try {\n      ObjectStores.createObjectStore(getConfigurer(), \"ranks\", Integer.class);\n      ObjectStores.createObjectStore(getConfigurer(), \"rankscount\", Integer.class);\n    } catch (UnsupportedTypeException e) {\n      // This exception is thrown by ObjectStore if its parameter type cannot be\n      // (de)serialized (for example, if it is an interface and not a class, then there is\n      // no auto-magic way deserialize an object.) In this case that will not happen\n      // because String and Double are actual classes.\n      throw new RuntimeException(e);\n    }\n  }","id":50449,"modified_method":"@Override\n  public void configure() {\n    setName(\"SparkPageRank\");\n    setDescription(\"Spark page rank application.\");\n\n    // Ingest data into the Application via a Stream\n    addStream(new Stream(BACKLINK_URL_STREAM));\n\n    // Run a Spark program on the acquired data\n    addSpark(new PageRankSpark());\n\n    // Runs MapReduce program on data emitted by Spark program\n    addMapReduce(new RanksCounter());\n\n    // Runs Spark followed by a MapReduce in a Workflow\n    addWorkflow(new PageRankWorkflow());\n\n    // Service to retrieve process data\n    addService(SERVICE_HANDLERS, new SparkPageRankServiceHandler());\n\n    // Store input and processed data in ObjectStore Datasets\n    try {\n      ObjectStores.createObjectStore(getConfigurer(), \"ranks\", Integer.class,\n                                     DatasetProperties.builder().setDescription(\"Ranks Dataset\").build());\n      ObjectStores.createObjectStore(getConfigurer(), \"rankscount\", Integer.class,\n                                     DatasetProperties.builder().setDescription(\"Ranks Count Dataset\").build());\n    } catch (UnsupportedTypeException e) {\n      // This exception is thrown by ObjectStore if its parameter type cannot be\n      // (de)serialized (for example, if it is an interface and not a class, then there is\n      // no auto-magic way deserialize an object.) In this case that will not happen\n      // because String and Double are actual classes.\n      throw new RuntimeException(e);\n    }\n  }","commit_id":"25ac0020550100be6c569a310dea3e9808f83ea4","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public void configure() {\n    addService(new UploadService());\n    addMapReduce(new ScoreCounter());\n\n    // Create the \"results\" partitioned file set, configure it to work with MapReduce and with Explore\n    createDataset(\"results\", PartitionedFileSet.class, PartitionedFileSetProperties.builder()\n      // Properties for partitioning\n      .setPartitioning(Partitioning.builder().addStringField(\"league\").addIntField(\"season\").build())\n      // Properties for file set\n      .setInputFormat(TextInputFormat.class)\n      .setOutputFormat(TextOutputFormat.class)\n      .setOutputProperty(TextOutputFormat.SEPERATOR, \",\")\n      // Properties for Explore (to create a partitioned Hive table)\n      .setEnableExploreOnCreate(true)\n      .setExploreFormat(\"csv\")\n      .setExploreSchema(\"date STRING, winner STRING, loser STRING, winnerpoints INT, loserpoints INT\")\n      .build());\n\n    // Create the aggregates partitioned file set, configure it to work with MapReduce and with Explore\n    createDataset(\"totals\", PartitionedFileSet.class, PartitionedFileSetProperties.builder()\n      // Properties for partitioning\n      .setPartitioning(Partitioning.builder().addStringField(\"league\").build())\n      // Properties for file set\n      .setInputFormat(TextInputFormat.class)\n      .setOutputFormat(TextOutputFormat.class)\n      .setOutputProperty(TextOutputFormat.SEPERATOR, \",\")\n      // Properties for Explore (to create a partitioned Hive table)\n      .setEnableExploreOnCreate(true)\n      .setExploreFormat(\"csv\")\n      .setExploreSchema(\"team STRING, wins INT, ties INT, losses INT, scored INT, conceded INT\")\n      .build());\n  }","id":50450,"modified_method":"@Override\n  public void configure() {\n    addService(new UploadService());\n    addMapReduce(new ScoreCounter());\n\n    // Create the \"results\" partitioned file set, configure it to work with MapReduce and with Explore\n    createDataset(\"results\", PartitionedFileSet.class, PartitionedFileSetProperties.builder()\n      // Properties for partitioning\n      .setPartitioning(Partitioning.builder().addStringField(\"league\").addIntField(\"season\").build())\n      // Properties for file set\n      .setInputFormat(TextInputFormat.class)\n      .setOutputFormat(TextOutputFormat.class)\n      .setOutputProperty(TextOutputFormat.SEPERATOR, \",\")\n      // Properties for Explore (to create a partitioned Hive table)\n      .setEnableExploreOnCreate(true)\n      .setExploreFormat(\"csv\")\n      .setExploreSchema(\"date STRING, winner STRING, loser STRING, winnerpoints INT, loserpoints INT\")\n      .setDescription(\"FileSet dataset of game results for a sport league and season\")\n      .build());\n\n    // Create the aggregates partitioned file set, configure it to work with MapReduce and with Explore\n    createDataset(\"totals\", PartitionedFileSet.class, PartitionedFileSetProperties.builder()\n      // Properties for partitioning\n      .setPartitioning(Partitioning.builder().addStringField(\"league\").build())\n      // Properties for file set\n      .setInputFormat(TextInputFormat.class)\n      .setOutputFormat(TextOutputFormat.class)\n      .setOutputProperty(TextOutputFormat.SEPERATOR, \",\")\n      // Properties for Explore (to create a partitioned Hive table)\n      .setEnableExploreOnCreate(true)\n      .setExploreFormat(\"csv\")\n      .setExploreSchema(\"team STRING, wins INT, ties INT, losses INT, scored INT, conceded INT\")\n      .setDescription(\"FileSet dataset of aggregated results for each sport league\")\n      .build());\n  }","commit_id":"25ac0020550100be6c569a310dea3e9808f83ea4","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public void configure() {\n    addStream(new Stream(\"events\"));\n    addMapReduce(new StreamConversionMapReduce());\n    addWorkflow(new StreamConversionWorkflow());\n    scheduleWorkflow(Schedules.builder(\"every5min\")\n                       .setDescription(\"runs every 5 minutes\")\n                       .createTimeSchedule(\"*/5 * * * *\"),\n                     \"StreamConversionWorkflow\");\n\n    // create the time-partitioned file set, configure it to work with MapReduce and with Explore\n    createDataset(\"converted\", TimePartitionedFileSet.class, FileSetProperties.builder()\n      // properties for file set\n      .setBasePath(\"converted\")\n      .setInputFormat(AvroKeyInputFormat.class)\n      .setOutputFormat(AvroKeyOutputFormat.class)\n      .setOutputProperty(\"schema\", SCHEMA_STRING)\n        // properties for explore (to create a partitioned hive table)\n      .setEnableExploreOnCreate(true)\n      .setSerDe(\"org.apache.hadoop.hive.serde2.avro.AvroSerDe\")\n      .setExploreInputFormat(\"org.apache.hadoop.hive.ql.io.avro.AvroContainerInputFormat\")\n      .setExploreOutputFormat(\"org.apache.hadoop.hive.ql.io.avro.AvroContainerOutputFormat\")\n      .setTableProperty(\"avro.schema.literal\", SCHEMA_STRING)\n      .build());\n  }","id":50451,"modified_method":"@Override\n  public void configure() {\n    addStream(new Stream(\"events\"));\n    addMapReduce(new StreamConversionMapReduce());\n    addWorkflow(new StreamConversionWorkflow());\n    scheduleWorkflow(Schedules.builder(\"every5min\")\n                       .setDescription(\"runs every 5 minutes\")\n                       .createTimeSchedule(\"*/5 * * * *\"),\n                     \"StreamConversionWorkflow\");\n\n    // create the time-partitioned file set, configure it to work with MapReduce and with Explore\n    createDataset(\"converted\", TimePartitionedFileSet.class, FileSetProperties.builder()\n      // properties for file set\n      .setBasePath(\"converted\")\n      .setInputFormat(AvroKeyInputFormat.class)\n      .setOutputFormat(AvroKeyOutputFormat.class)\n      .setOutputProperty(\"schema\", SCHEMA_STRING)\n        // properties for explore (to create a partitioned hive table)\n      .setEnableExploreOnCreate(true)\n      .setSerDe(\"org.apache.hadoop.hive.serde2.avro.AvroSerDe\")\n      .setExploreInputFormat(\"org.apache.hadoop.hive.ql.io.avro.AvroContainerInputFormat\")\n      .setExploreOutputFormat(\"org.apache.hadoop.hive.ql.io.avro.AvroContainerOutputFormat\")\n      .setTableProperty(\"avro.schema.literal\", SCHEMA_STRING)\n      .setDescription(\"Converted stream events dataset\")\n      .build());\n  }","commit_id":"25ac0020550100be6c569a310dea3e9808f83ea4","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public void configure() {\n    setName(\"UserProfiles\");\n    setDescription(\"Demonstrates the use of column-level conflict detection.\");\n    addStream(new Stream(\"events\"));\n    addFlow(new ActivityFlow());\n    addService(new UserProfileService());\n    createDataset(\"counters\", KeyValueTable.class);\n\n    // create the profiles table with a schema so that it can be explored via Hive\n    Schema profileSchema = Schema.recordOf(\n      \"profile\",\n      // id, name, and email are never null and are set when a user profile is created\n      Schema.Field.of(\"id\", Schema.of(Schema.Type.STRING)),\n      Schema.Field.of(\"name\", Schema.of(Schema.Type.STRING)),\n      Schema.Field.of(\"email\", Schema.of(Schema.Type.STRING)),\n      // login and active are never set when a profile is created but are set later, so they are nullable.\n      Schema.Field.of(\"login\", Schema.nullableOf(Schema.of(Schema.Type.LONG))),\n      Schema.Field.of(\"active\", Schema.nullableOf(Schema.of(Schema.Type.LONG)))\n    );\n    createDataset(\"profiles\", Table.class.getName(), DatasetProperties.builder()\n      // create the profiles table with column-level conflict detection\n      .add(Table.PROPERTY_CONFLICT_LEVEL, ConflictDetection.COLUMN.name())\n      .add(Table.PROPERTY_SCHEMA, profileSchema.toString())\n      // to indicate that the id field should come from the row key and not a row column\n      .add(Table.PROPERTY_SCHEMA_ROW_FIELD, \"id\")\n      .build());\n  }","id":50452,"modified_method":"@Override\n  public void configure() {\n    setName(\"UserProfiles\");\n    setDescription(\"Demonstrates the use of column-level conflict detection\");\n    addStream(new Stream(\"events\"));\n    addFlow(new ActivityFlow());\n    addService(new UserProfileService());\n    createDataset(\"counters\", KeyValueTable.class,\n                  DatasetProperties.builder().setDescription(\"Counters key-value table\").build());\n\n    // create the profiles table with a schema so that it can be explored via Hive\n    Schema profileSchema = Schema.recordOf(\n      \"profile\",\n      // id, name, and email are never null and are set when a user profile is created\n      Schema.Field.of(\"id\", Schema.of(Schema.Type.STRING)),\n      Schema.Field.of(\"name\", Schema.of(Schema.Type.STRING)),\n      Schema.Field.of(\"email\", Schema.of(Schema.Type.STRING)),\n      // login and active are never set when a profile is created but are set later, so they are nullable.\n      Schema.Field.of(\"login\", Schema.nullableOf(Schema.of(Schema.Type.LONG))),\n      Schema.Field.of(\"active\", Schema.nullableOf(Schema.of(Schema.Type.LONG)))\n    );\n    createDataset(\"profiles\", Table.class.getName(), DatasetProperties.builder()\n      // create the profiles table with column-level conflict detection\n      .add(Table.PROPERTY_CONFLICT_LEVEL, ConflictDetection.COLUMN.name())\n      .add(Table.PROPERTY_SCHEMA, profileSchema.toString())\n      // to indicate that the id field should come from the row key and not a row column\n      .add(Table.PROPERTY_SCHEMA_ROW_FIELD, \"id\")\n      .setDescription(\"Profiles table with column-level conflict detection\")\n      .build());\n  }","commit_id":"25ac0020550100be6c569a310dea3e9808f83ea4","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public void configure() {\n    addStream(new Stream(\"log\"));\n    addFlow(new WebAnalyticsFlow());\n    createDataset(\"UniqueVisitCount\", UniqueVisitCount.class);\n\n    setName(\"WebAnalytics\");\n    setDescription(\"Web Analytics Application\");\n  }","id":50453,"modified_method":"@Override\n  public void configure() {\n    addStream(new Stream(\"log\"));\n    addFlow(new WebAnalyticsFlow());\n    createDataset(\"UniqueVisitCount\", UniqueVisitCount.class,\n                  DatasetProperties.builder().setDescription(\"Unique Visit Counts\").build());\n\n    setName(\"WebAnalytics\");\n    setDescription(\"Web Analytics Application\");\n  }","commit_id":"25ac0020550100be6c569a310dea3e9808f83ea4","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public void configure() {\n    addStream(new Stream(PAGE_TITLES_STREAM));\n    addStream(new Stream(RAW_WIKIPEDIA_STREAM));\n    addMapReduce(new StreamToDataset(LIKES_TO_DATASET_MR_NAME));\n    addMapReduce(new StreamToDataset(WIKIPEDIA_TO_DATASET_MR_NAME));\n    addMapReduce(new WikipediaDataDownloader());\n    addMapReduce(new WikiContentValidatorAndNormalizer());\n    addMapReduce(new TopNMapReduce());\n    addSpark(new SparkWikipediaClustering(getConfig()));\n    createDataset(PAGE_TITLES_DATASET, KeyValueTable.class);\n    createDataset(RAW_WIKIPEDIA_DATASET, KeyValueTable.class);\n    createDataset(NORMALIZED_WIKIPEDIA_DATASET, KeyValueTable.class);\n    createDataset(SPARK_CLUSTERING_OUTPUT_DATASET, Table.class);\n    createDataset(MAPREDUCE_TOPN_OUTPUT, KeyValueTable.class);\n    addWorkflow(new WikipediaPipelineWorkflow(getConfig()));\n    addService(new WikipediaService());\n  }","id":50454,"modified_method":"@Override\n  public void configure() {\n    addStream(new Stream(PAGE_TITLES_STREAM));\n    addStream(new Stream(RAW_WIKIPEDIA_STREAM));\n    addMapReduce(new StreamToDataset(LIKES_TO_DATASET_MR_NAME));\n    addMapReduce(new StreamToDataset(WIKIPEDIA_TO_DATASET_MR_NAME));\n    addMapReduce(new WikipediaDataDownloader());\n    addMapReduce(new WikiContentValidatorAndNormalizer());\n    addMapReduce(new TopNMapReduce());\n    addSpark(new SparkWikipediaClustering(getConfig()));\n    createDataset(PAGE_TITLES_DATASET, KeyValueTable.class,\n                  DatasetProperties.builder().setDescription(\"Page titles dataset\").build());\n    createDataset(RAW_WIKIPEDIA_DATASET, KeyValueTable.class,\n                  DatasetProperties.builder().setDescription(\"Raw Wikipedia dataset\").build());\n    createDataset(NORMALIZED_WIKIPEDIA_DATASET, KeyValueTable.class,\n                  DatasetProperties.builder().setDescription(\"Normalized Wikipedia dataset\").build());\n    createDataset(SPARK_CLUSTERING_OUTPUT_DATASET, Table.class,\n                  DatasetProperties.builder().setDescription(\"Spark clustering output dataset\").build());\n    createDataset(MAPREDUCE_TOPN_OUTPUT, KeyValueTable.class,\n                  DatasetProperties.builder().setDescription(\"MapReduce top-'N'-words output dataset\").build());\n    addWorkflow(new WikipediaPipelineWorkflow(getConfig()));\n    addService(new WikipediaService());\n  }","commit_id":"25ac0020550100be6c569a310dea3e9808f83ea4","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public void configure() {\n    WordCountConfig config = getConfig();\n    setName(\"WordCount\");\n    setDescription(\"Example Word Count Application\");\n\n    // Ingest data into the Application via Streams\n    addStream(new Stream(config.getStream()));\n\n    // Store processed data in Datasets\n    createDataset(config.getWordStatsTable(), Table.class);\n    createDataset(config.getWordCountTable(), KeyValueTable.class);\n    createDataset(config.getUniqueCountTable(), UniqueCountTable.class);\n    createDataset(config.getWordAssocTable(), AssociationTable.class);\n\n    // Process events in real-time using Flows\n    addFlow(new WordCounter(config));\n\n    // Retrieve the processed data using a Service\n    addService(new RetrieveCounts(config));\n  }","id":50455,"modified_method":"@Override\n  public void configure() {\n    WordCountConfig config = getConfig();\n    setName(\"WordCount\");\n    setDescription(\"Example word count application\");\n\n    // Ingest data into the Application via Streams\n    addStream(new Stream(config.getStream()));\n\n    // Store processed data in Datasetss\n    createDataset(config.getWordStatsTable(), Table.class,\n                  DatasetProperties.builder().setDescription(\"Stats of total counts and lengths of words\").build());\n    createDataset(config.getWordCountTable(), KeyValueTable.class,\n                  DatasetProperties.builder().setDescription(\"Words and corresponding counts\").build());\n    createDataset(config.getUniqueCountTable(), UniqueCountTable.class,\n                  DatasetProperties.builder().setDescription(\"Total count of unique words\").build());\n    createDataset(config.getWordAssocTable(), AssociationTable.class,\n                  DatasetProperties.builder().setDescription(\"Word associations table\").build());\n\n    // Process events in real-time using Flows\n    addFlow(new WordCounter(config));\n\n    // Retrieve the processed data using a Service\n    addService(new RetrieveCounts(config));\n  }","commit_id":"25ac0020550100be6c569a310dea3e9808f83ea4","url":"https://github.com/caskdata/cdap"},{"original_method":"protected EditorWindow(final EditorsSplitters owner) {\n    myOwner = owner;\n    myPanel = new JPanel(new BorderLayout());\n    myTabbedPane = null;\n\n    final int tabPlacement = UISettings.getInstance().EDITOR_TAB_PLACEMENT;\n    if (tabPlacement != UISettings.TABS_NONE) {\n      createTabs(tabPlacement);\n    }\n\n    // Tab layout policy\n    if (UISettings.getInstance().SCROLL_TAB_LAYOUT_IN_EDITOR) {\n      setTabLayoutPolicy(JTabbedPane.SCROLL_TAB_LAYOUT);\n    } else {\n      setTabLayoutPolicy(JTabbedPane.WRAP_TAB_LAYOUT);\n    }\n\n    getWindows().add(this);\n    if (myOwner.myCurrentWindow == null) {\n      myOwner.setCurrentWindow(this, false);\n    }\n  }","id":50456,"modified_method":"protected EditorWindow(final EditorsSplitters owner) {\n    myOwner = owner;\n    myPanel = new JPanel(new BorderLayout());\n    myTabbedPane = null;\n\n    final int tabPlacement = UISettings.getInstance().EDITOR_TAB_PLACEMENT;\n    if (tabPlacement != UISettings.TABS_NONE) {\n      createTabs(tabPlacement);\n    }\n\n    // Tab layout policy\n    if (UISettings.getInstance().SCROLL_TAB_LAYOUT_IN_EDITOR) {\n      setTabLayoutPolicy(JTabbedPane.SCROLL_TAB_LAYOUT);\n    } else {\n      setTabLayoutPolicy(JTabbedPane.WRAP_TAB_LAYOUT);\n    }\n\n    getWindows().add(this);\n    if (myOwner.myCurrentWindow == null) {\n      myOwner.setCurrentWindow(this, false);\n    }\n    myFrameTitleUpdater = new FocusWatcher() {\n      protected void focusedComponentChanged(Component component) {\n        getManager().updateFileName(getSelectedFile());\n      }\n    };\n    myFrameTitleUpdater.install(myTabbedPane.getComponent());\n  }","commit_id":"73199bfe49cc0542c9260b1b60b4a59b450d1456","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void dispose() {\n    disposeTabs();\n    getWindows ().remove(this);\n  }","id":50457,"modified_method":"private void dispose() {\n    myFrameTitleUpdater.deinstall(myTabbedPane.getComponent());\n    disposeTabs();\n    getWindows ().remove(this);\n  }","commit_id":"73199bfe49cc0542c9260b1b60b4a59b450d1456","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public FramePanel(Project project, DebuggerStateManager stateManager) {\n    super(project, stateManager);\n    myThreadsCombo = new JComboBox();\n    myFramesCombo = new JComboBox();\n    myThreadsCombo.setRenderer(new DebuggerComboBoxRenderer());\n    myFramesCombo.setRenderer(new DebuggerComboBoxRenderer());\n    myThreadsListener = new ThreadsListener();\n    myFramesListener = new FramesListener();\n    myThreadsCombo.addItemListener(myThreadsListener);\n    myFramesCombo.addActionListener(myFramesListener);\n\n    Splitter splitter = new Splitter();\n    splitter.setPreferredSize(new Dimension(-1, 23));\n    splitter.setFirstComponent(new ComboPager(myFramesCombo, this));\n    splitter.setSecondComponent(myThreadsCombo);\n\n    this.add(splitter, BorderLayout.NORTH);\n\n    add(new JScrollPane(getFrameTree()), BorderLayout.CENTER);\n\n    DebuggerAction.installEditAction(getFrameTree(), DebuggerActions.EDIT_NODE_SOURCE);\n\n    final AnAction setValueAction  = ActionManager.getInstance().getAction(DebuggerActions.SET_VALUE);\n    ListenerUtil.addMouseListener(getFrameTree(), new MouseAdapter(){\n      public void mouseClicked(MouseEvent e) {\n        if(e.getButton() == MouseEvent.BUTTON1 &&  e.getClickCount() == 2) {\n          Presentation presentation = (Presentation)setValueAction.getTemplatePresentation().clone();\n          final DataContext context = DataManager.getInstance().getDataContext(getFrameTree());\n          final AnActionEvent actionEvent = new AnActionEvent(null, context, \"FRAME_TREE\", presentation, ActionManager.getInstance(), 0);\n          setValueAction.update(actionEvent);\n          setValueAction.actionPerformed(actionEvent);\n        }\n      }\n    });\n    setValueAction.registerCustomShortcutSet(new CustomShortcutSet(KeyStroke.getKeyStroke(KeyEvent.VK_F2, 0)), getFrameTree());\n  }","id":50458,"modified_method":"public FramePanel(Project project, DebuggerStateManager stateManager) {\n    super(project, stateManager);\n    myThreadsCombo = new JComboBox();\n    myFramesCombo = new JComboBox();\n    myThreadsCombo.setRenderer(new DebuggerComboBoxRenderer());\n    myFramesCombo.setRenderer(new DebuggerComboBoxRenderer());\n    myThreadsListener = new ThreadsListener();\n    myFramesListener = new FramesListener();\n    myThreadsCombo.addItemListener(myThreadsListener);\n    myFramesCombo.addActionListener(myFramesListener);\n\n    Splitter splitter = new Splitter();\n    splitter.setPreferredSize(new Dimension(-1, 23));\n    splitter.setFirstComponent(new ComboPager(myFramesCombo, this));\n    splitter.setSecondComponent(myThreadsCombo);\n\n    this.add(splitter, BorderLayout.NORTH);\n\n    add(new JScrollPane(getFrameTree()), BorderLayout.CENTER);\n\n    DebuggerAction.installEditAction(getFrameTree(), DebuggerActions.EDIT_NODE_SOURCE);\n\n    final AnAction setValueAction  = ActionManager.getInstance().getAction(DebuggerActions.SET_VALUE);\n    setValueAction.registerCustomShortcutSet(new CustomShortcutSet(KeyStroke.getKeyStroke(KeyEvent.VK_F2, 0)), getFrameTree());\n  }","commit_id":"73199bfe49cc0542c9260b1b60b4a59b450d1456","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected ActionPopupMenu createPopupMenu() {\n    ActionGroup group = (ActionGroup)ActionManager.getInstance().getAction(DebuggerActions.FRAME_PANEL_POPUP);\n    ActionPopupMenu popupMenu = ActionManager.getInstance().createActionPopupMenu(DebuggerActions.FRAME_PANEL_POPUP, group);\n    return popupMenu;\n  }","id":50459,"modified_method":"protected ActionPopupMenu createPopupMenu() {\n    ActionGroup group = (ActionGroup)ActionManager.getInstance().getAction(DebuggerActions.FRAME_PANEL_POPUP);\n    return ActionManager.getInstance().createActionPopupMenu(DebuggerActions.FRAME_PANEL_POPUP, group);\n  }","commit_id":"73199bfe49cc0542c9260b1b60b4a59b450d1456","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public DebuggerStatementEditor(Project project, PsiElement context, String recentsId) {\n    super(project, context, recentsId);\n    myRecentIdx = DebuggerRecents.getInstance(getProject()).getRecents(getRecentsId()).size();\n    myEditor = new EditorTextField(\"\", project, StdFileTypes.JAVA) {\n      protected EditorEx createEditor() {\n        EditorEx editor = super.createEditor();\n        editor.setOneLineMode(false);\n        return editor;\n      }\n    };\n    setLayout(new BorderLayout());\n    add(myEditor, BorderLayout.CENTER);\n\n    DefaultActionGroup actionGroup = new DefaultActionGroup(null, false);\n    actionGroup.add(new ItemAction(IdeActions.ACTION_PREVIOUS_OCCURENCE, this){\n      public void actionPerformed(AnActionEvent e) {\n        LOG.assertTrue(myRecentIdx > 0);\n        myRecentIdx --;\n        updateTextFromRecents();\n      }\n\n      public void update(AnActionEvent e) {\n        e.getPresentation().setEnabled(myRecentIdx > 0);\n      }\n    });\n    actionGroup.add(new ItemAction(IdeActions.ACTION_NEXT_OCCURENCE, this){\n      public void actionPerformed(AnActionEvent e) {\n        if(LOG.isDebugEnabled()) {\n          LinkedList<TextWithImports> recents = DebuggerRecents.getInstance(getProject()).getRecents(getRecentsId());\n          LOG.assertTrue(myRecentIdx < recents.size());\n        }\n        myRecentIdx ++;\n        updateTextFromRecents();\n      }\n\n      public void update(AnActionEvent e) {\n        LinkedList<TextWithImports> recents = DebuggerRecents.getInstance(getProject()).getRecents(getRecentsId());\n        e.getPresentation().setEnabled(myRecentIdx < recents.size());\n      }\n    });\n\n    add(ActionManager.getInstance().createActionToolbar(ActionPlaces.COMBO_PAGER, actionGroup, false).getComponent(),\n        BorderLayout.EAST);\n\n    setText(EvaluationManager.getInstance().getEmptyExpressionFragment());\n  }","id":50460,"modified_method":"public DebuggerStatementEditor(Project project, PsiElement context, String recentsId) {\n    super(project, context, recentsId);\n    myRecentIdx = DebuggerRecents.getInstance(getProject()).getRecents(getRecentsId()).size();\n    myEditor = new EditorTextField(\"\", project, StdFileTypes.JAVA) {\n      protected EditorEx createEditor() {\n        EditorEx editor = super.createEditor();\n        editor.setOneLineMode(false);\n        editor.setVerticalScrollbarVisible(true);\n        return editor;\n      }\n    };\n    setLayout(new BorderLayout());\n    add(myEditor, BorderLayout.CENTER);\n\n    DefaultActionGroup actionGroup = new DefaultActionGroup(null, false);\n    actionGroup.add(new ItemAction(IdeActions.ACTION_PREVIOUS_OCCURENCE, this){\n      public void actionPerformed(AnActionEvent e) {\n        LOG.assertTrue(myRecentIdx > 0);\n        myRecentIdx --;\n        updateTextFromRecents();\n      }\n\n      public void update(AnActionEvent e) {\n        e.getPresentation().setEnabled(myRecentIdx > 0);\n      }\n    });\n    actionGroup.add(new ItemAction(IdeActions.ACTION_NEXT_OCCURENCE, this){\n      public void actionPerformed(AnActionEvent e) {\n        if(LOG.isDebugEnabled()) {\n          LinkedList<TextWithImports> recents = DebuggerRecents.getInstance(getProject()).getRecents(getRecentsId());\n          LOG.assertTrue(myRecentIdx < recents.size());\n        }\n        myRecentIdx ++;\n        updateTextFromRecents();\n      }\n\n      public void update(AnActionEvent e) {\n        LinkedList<TextWithImports> recents = DebuggerRecents.getInstance(getProject()).getRecents(getRecentsId());\n        e.getPresentation().setEnabled(myRecentIdx < recents.size());\n      }\n    });\n\n    add(ActionManager.getInstance().createActionToolbar(ActionPlaces.COMBO_PAGER, actionGroup, false).getComponent(),\n        BorderLayout.EAST);\n\n    setText(EvaluationManager.getInstance().getEmptyExpressionFragment());\n  }","commit_id":"835beed810dccf2008eeeb78ee07c6ecdf9f2189","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected void changeEvent(DebuggerContextImpl newContext, int event) {\n      if(event == DebuggerSession.EVENT_REFRESH) return;\n      if(newContext.getDebuggerSession() != null && newContext.getDebuggerSession().getState() == DebuggerSession.STATE_WAIT_EVALUATION) return;\n      \n      super.changeEvent(newContext, event);\n    }","id":50461,"modified_method":"protected void changeEvent(DebuggerContextImpl newContext, int event) {\n      if(event == DebuggerSession.EVENT_REFRESH) {\n        return;\n      }\n      final DebuggerSession debuggerSession = newContext.getDebuggerSession();\n      if(debuggerSession != null && debuggerSession.getState() == DebuggerSession.STATE_WAIT_EVALUATION) {\n        return;\n      }\n      \n      super.changeEvent(newContext, event);\n    }","commit_id":"835beed810dccf2008eeeb78ee07c6ecdf9f2189","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected ActionPopupMenu createPopupMenu() {\n      ActionGroup group = (ActionGroup)ActionManager.getInstance().getAction(DebuggerActions.EVALUATION_DIALOG_POPUP);\n      ActionPopupMenu popupMenu = ActionManager.getInstance().createActionPopupMenu(DebuggerActions.EVALUATION_DIALOG_POPUP, group);\n      return popupMenu;\n    }","id":50462,"modified_method":"protected ActionPopupMenu createPopupMenu() {\n      ActionGroup group = (ActionGroup)ActionManager.getInstance().getAction(DebuggerActions.EVALUATION_DIALOG_POPUP);\n      return ActionManager.getInstance().createActionPopupMenu(DebuggerActions.EVALUATION_DIALOG_POPUP, group);\n    }","commit_id":"835beed810dccf2008eeeb78ee07c6ecdf9f2189","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public StatementEvaluationDialog(final Project project, TextWithImports text) {\n    super(project, text);\n    setTitle(\"Code Fragment Evaluation\");\n    myWatchViewPlace.setLayout(new BorderLayout());\n    myWatchViewPlace.add(getEvaluationPanel());\n    myStatementEditorPlace.setLayout(new BorderLayout());\n    myStatementEditorPlace.add(getStatementEditor());\n\n    GuiUtils.replaceJSplitPaneWithIDEASplitter(myPanel);\n\n    setDebuggerContext(getDebuggerContext());\n\n    KeyStroke codeFragment = KeyStroke.getKeyStroke(KeyEvent.VK_E,     KeyEvent.ALT_MASK);\n    KeyStroke resultStroke = KeyStroke.getKeyStroke(KeyEvent.VK_R,     KeyEvent.ALT_MASK);\n    KeyStroke altEnter     = KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, KeyEvent.CTRL_MASK);\n\n    new AnAction() {\n      public void actionPerformed(AnActionEvent e) {\n        getStatementEditor().requestFocus();\n      }\n    }.registerCustomShortcutSet(new CustomShortcutSet(codeFragment), getRootPane());\n\n    new AnAction() {\n      public void actionPerformed(AnActionEvent e) {\n        getEvaluationPanel().getWatchTree().requestFocus();\n      }\n    }.registerCustomShortcutSet(new CustomShortcutSet(resultStroke), getRootPane());\n\n    new AnAction() {\n      public void actionPerformed(AnActionEvent e) {\n        doOKAction();\n      }\n    }.registerCustomShortcutSet(new CustomShortcutSet(altEnter), getRootPane());\n\n    getEditor().addDocumentListener(new DocumentAdapter() {\n      public void documentChanged(final DocumentEvent e) {\n        DebuggerInvocationUtil.invokeLater(getProject(), new Runnable() {\n          public void run() {\n            updateSwitchButton(e.getDocument());\n          }\n        });\n      }\n    });\n\n    this.init();\n  }","id":50463,"modified_method":"public StatementEvaluationDialog(final Project project, TextWithImports text) {\n    super(project, text);\n    setTitle(\"Code Fragment Evaluation\");\n    myPanel = new JPanel(new BorderLayout());\n\n    final Splitter splitter = new Splitter(true);\n    splitter.setHonorComponentsMinimumSize(true);\n    final DebuggerStatementEditor statementEditor = getStatementEditor();\n    splitter.setFirstComponent(statementEditor);\n    final EvaluationDialog.MyEvaluationPanel evaluationPanel = getEvaluationPanel();\n    splitter.setSecondComponent(evaluationPanel);\n    final Dimension statementSize = DimensionService.getInstance().getSize(STATEMENT_EDITOR_DIMENSION_KEY);\n    final Dimension evaluationSize = DimensionService.getInstance().getSize(EVALUATION_PANEL_DIMENSION_KEY);\n    if (statementSize != null && evaluationSize != null) {\n      final float proportion = (float)statementSize.height / (float) evaluationSize.height;\n      splitter.setProportion(proportion);\n    }\n    myPanel.add(splitter, BorderLayout.CENTER);\n\n    setDebuggerContext(getDebuggerContext());\n\n    KeyStroke codeFragment = KeyStroke.getKeyStroke(KeyEvent.VK_E,     KeyEvent.ALT_MASK);\n    KeyStroke resultStroke = KeyStroke.getKeyStroke(KeyEvent.VK_R,     KeyEvent.ALT_MASK);\n    KeyStroke altEnter     = KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, KeyEvent.CTRL_MASK);\n\n    new AnAction() {\n      public void actionPerformed(AnActionEvent e) {\n        getStatementEditor().requestFocus();\n      }\n    }.registerCustomShortcutSet(new CustomShortcutSet(codeFragment), getRootPane());\n\n    new AnAction() {\n      public void actionPerformed(AnActionEvent e) {\n        getEvaluationPanel().getWatchTree().requestFocus();\n      }\n    }.registerCustomShortcutSet(new CustomShortcutSet(resultStroke), getRootPane());\n\n    new AnAction() {\n      public void actionPerformed(AnActionEvent e) {\n        doOKAction();\n      }\n    }.registerCustomShortcutSet(new CustomShortcutSet(altEnter), getRootPane());\n\n    getEditor().addDocumentListener(new DocumentAdapter() {\n      public void documentChanged(final DocumentEvent e) {\n        DebuggerInvocationUtil.invokeLater(getProject(), new Runnable() {\n          public void run() {\n            updateSwitchButton(e.getDocument());\n          }\n        });\n      }\n    });\n\n    this.init();\n  }","commit_id":"835beed810dccf2008eeeb78ee07c6ecdf9f2189","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public JPopupMenu getPopupMenu() {\n    ActionContext context = new ActionContext(getOperationContext());\n    context.put(IFile.class, myFile);\n    BaseGroup actionGroup = ActionUtils.getGroup(FileProjectPane.ACTION_GROUP_ID);\n    actionGroup.update(ActionUtils.createEvent(new Presentation(), context));\n    return ActionManager.getInstance().createActionPopupMenu(ActionPlaces.UNKNOWN, actionGroup).getComponent();\n  }","id":50464,"modified_method":"@Override\n  public JPopupMenu getPopupMenu() {\n    ActionContext context = new ActionContext(getOperationContext());\n    context.put(IFile.class, myFile);\n\n    ActionGroup group = (ActionGroup) CustomizableActionsSchemas.getInstance().getCorrectedAction(\"FileSystemViewPopupMenu\");\n    final ActionPopupMenu popupMenu = ActionManager.getInstance().createActionPopupMenu(ActionPlaces.PROJECT_VIEW_POPUP,  group);\n    return popupMenu.getComponent();\n    /*BaseGroup actionGroup = ActionUtils.getGroup(FileProjectPane.ACTION_GROUP_ID);\n    actionGroup.update(ActionUtils.createEvent(new Presentation(), context));\n    return ActionManager.getInstance().createActionPopupMenu(ActionPlaces.UNKNOWN, actionGroup).getComponent();*/\n  }","commit_id":"0967bba550a08d50b99d512b95f94e41fa72b8e8","url":"https://github.com/JetBrains/MPS"},{"original_method":"protected FileProjectViewPane(Project project, final ProjectView projectView) {\n    super(project);\n\n    myProject = project;\n    myProjectView = projectView;\n\n    myMPSTree = new MPSTree() {\n      protected MPSTreeNode rebuild() {\n        if (myProject != null) {\n          final IFile root = VFileSystem.toIFile(myProject.getBaseDir());\n          return new FolderTreeNode(new ProjectOperationContext(getProject()),\n            myProject.getComponent(VcsFileStatusProvider.class),\n            root);\n        } else {\n          return new TextTreeNode(\"No Project\");\n        }\n      }\n    };\n\n    myTree = myMPSTree;\n  }","id":50465,"modified_method":"protected FileProjectViewPane(Project project, final ProjectView projectView) {\n    super(project);\n\n    myProject = project;\n    myProjectView = projectView;\n\n    myMPSTree = new MPSTree() {\n      protected MPSTreeNode rebuild() {\n        if (myProject != null) {\n          final IFile root = VFileSystem.toIFile(myProject.getBaseDir());\n          return new FolderTreeNode(new ProjectOperationContext(getProject()),\n            myProject.getComponent(VcsFileStatusProvider.class),\n            root);\n        } else {\n          return new TextTreeNode(\"No Project\");\n        }\n      }\n    };\n    myTree = myMPSTree;\n\n    FileStatusManager.getInstance(myProject).addFileStatusListener(new FileStatusListener() {\n      public void fileStatusesChanged() {\n        rebuildTree();\n      }\n\n      public void fileStatusChanged(@NotNull VirtualFile virtualFile) {\n        rebuildTree();\n      }\n    });\n  }","commit_id":"0967bba550a08d50b99d512b95f94e41fa72b8e8","url":"https://github.com/JetBrains/MPS"},{"original_method":"protected void addHighlights(SolrQuery solrQuery, QueryConfig queryConfig) {\n\t\tif (!queryConfig.isHighlightEnabled()) {\n\t\t\treturn;\n\t\t}\n\n\t\tsolrQuery.setHighlight(true);\n\t\tsolrQuery.setHighlightFragsize(queryConfig.getHighlightFragmentSize());\n\t\tsolrQuery.setHighlightRequireFieldMatch(true);\n\t\tsolrQuery.setHighlightSnippets(queryConfig.getHighlightSnippetSize());\n\n\t\taddHighlightedField(solrQuery, queryConfig, Field.CONTENT);\n\t\taddHighlightedField(solrQuery, queryConfig, Field.DESCRIPTION);\n\t\taddHighlightedField(solrQuery, queryConfig, Field.TITLE);\n\t}","id":50466,"modified_method":"protected void addHighlights(SolrQuery solrQuery, QueryConfig queryConfig) {\n\t\tif (!queryConfig.isHighlightEnabled()) {\n\t\t\treturn;\n\t\t}\n\n\t\tsolrQuery.setHighlight(true);\n\t\tsolrQuery.setHighlightFragsize(queryConfig.getHighlightFragmentSize());\n\t\tsolrQuery.setHighlightSnippets(queryConfig.getHighlightSnippetSize());\n\n\t\tfor (String highlightFieldName : queryConfig.getHighlightFieldNames()) {\n\t\t\taddHighlightedField(\n\t\t\t\tsolrQuery, queryConfig, highlightFieldName);\n\t\t}\n\n\t\tsolrQuery.setHighlightRequireFieldMatch(\n\t\t\tqueryConfig.isHighlightRequireFieldMatch());\n\t}","commit_id":"75096a1bdb9ab5c3babe0d3dafc805c383da1c6c","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected SolrQuery translateQuery(\n\t\t\tlong companyId, Query query, Sort[] sorts, int start, int end)\n\t\tthrows Exception {\n\n\t\tQueryConfig queryConfig = query.getQueryConfig();\n\n\t\tSolrQuery solrQuery = new SolrQuery();\n\n\t\tsolrQuery.setHighlight(queryConfig.isHighlightEnabled());\n\t\tsolrQuery.setHighlightFragsize(queryConfig.getHighlightFragmentSize());\n\t\tsolrQuery.setHighlightSnippets(queryConfig.getHighlightSnippetSize());\n\t\tsolrQuery.setIncludeScore(queryConfig.isScoreEnabled());\n\n\t\tString localizedName = DocumentImpl.getLocalizedName(\n\t\t\tqueryConfig.getLocale(), Field.CONTENT);\n\n\t\tsolrQuery.setParam(\"hl.fl\", Field.CONTENT, localizedName);\n\n\t\tQueryTranslatorUtil.translateForSolr(query);\n\n\t\tString queryString = query.toString();\n\n\t\tStringBundler sb = new StringBundler(6);\n\n\t\tsb.append(queryString);\n\t\tsb.append(StringPool.SPACE);\n\t\tsb.append(StringPool.PLUS);\n\t\tsb.append(Field.COMPANY_ID);\n\t\tsb.append(StringPool.COLON);\n\t\tsb.append(companyId);\n\n\t\tsolrQuery.setQuery(sb.toString());\n\n\t\tif ((start == QueryUtil.ALL_POS) && (end == QueryUtil.ALL_POS)) {\n\t\t\tsolrQuery.setRows(0);\n\t\t}\n\t\telse {\n\t\t\tsolrQuery.setRows(end - start);\n\t\t\tsolrQuery.setStart(start);\n\t\t}\n\n\t\tif ((sorts != null) && (sorts.length > 0)) {\n\t\t\tfor (Sort sort : sorts) {\n\t\t\t\tif (sort == null) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tString sortFieldName = sort.getFieldName();\n\n\t\t\t\tif (ArrayUtil.contains(\n\t\t\t\t\t\tPortletPropsValues.SOLR_SORTABLE_TEXT_FIELDS,\n\t\t\t\t\t\tsortFieldName)) {\n\n\t\t\t\t\tsortFieldName = GetterUtil.getString(\n\t\t\t\t\t\tPortletProps.get(\n\t\t\t\t\t\t\tPortletPropsKeys.SOLR_COPY_FIELDS,\n\t\t\t\t\t\t\tnew Filter(sortFieldName)));\n\t\t\t\t}\n\n\t\t\t\tORDER order = ORDER.asc;\n\n\t\t\t\tif (sortFieldName == null) {\n\t\t\t\t\tsortFieldName = \"score\";\n\n\t\t\t\t\torder = ORDER.desc;\n\t\t\t\t}\n\t\t\t\telse if (sort.isReverse()) {\n\t\t\t\t\torder = ORDER.desc;\n\t\t\t\t}\n\n\t\t\t\tsolrQuery.addSortField(sortFieldName, order);\n\t\t\t}\n\t\t}\n\n\t\treturn solrQuery;\n\t}","id":50467,"modified_method":"protected SolrQuery translateQuery(\n\t\t\tlong companyId, Query query, Sort[] sorts, int start, int end)\n\t\tthrows Exception {\n\n\t\tQueryConfig queryConfig = query.getQueryConfig();\n\n\t\tSolrQuery solrQuery = new SolrQuery();\n\n\t\tif (queryConfig.isHighlightEnabled()) {\n\t\t\tsolrQuery.setHighlight(true);\n\t\t\tsolrQuery.setHighlightFragsize(\n\t\t\t\tqueryConfig.getHighlightFragmentSize());\n\t\t\tsolrQuery.setHighlightSnippets(\n\t\t\t\tqueryConfig.getHighlightSnippetSize());\n\n\t\t\tString localizedName = DocumentImpl.getLocalizedName(\n\t\t\t\tqueryConfig.getLocale(), Field.CONTENT);\n\n\t\t\tsolrQuery.setParam(\"hl.fl\", Field.CONTENT, localizedName);\n\t\t}\n\n\t\tsolrQuery.setIncludeScore(queryConfig.isScoreEnabled());\n\n\t\tQueryTranslatorUtil.translateForSolr(query);\n\n\t\tString queryString = query.toString();\n\n\t\tStringBundler sb = new StringBundler(6);\n\n\t\tsb.append(queryString);\n\t\tsb.append(StringPool.SPACE);\n\t\tsb.append(StringPool.PLUS);\n\t\tsb.append(Field.COMPANY_ID);\n\t\tsb.append(StringPool.COLON);\n\t\tsb.append(companyId);\n\n\t\tsolrQuery.setQuery(sb.toString());\n\n\t\tif ((start == QueryUtil.ALL_POS) && (end == QueryUtil.ALL_POS)) {\n\t\t\tsolrQuery.setRows(0);\n\t\t}\n\t\telse {\n\t\t\tsolrQuery.setRows(end - start);\n\t\t\tsolrQuery.setStart(start);\n\t\t}\n\n\t\tif ((sorts != null) && (sorts.length > 0)) {\n\t\t\tfor (Sort sort : sorts) {\n\t\t\t\tif (sort == null) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tString sortFieldName = sort.getFieldName();\n\n\t\t\t\tif (ArrayUtil.contains(\n\t\t\t\t\t\tPortletPropsValues.SOLR_SORTABLE_TEXT_FIELDS,\n\t\t\t\t\t\tsortFieldName)) {\n\n\t\t\t\t\tsortFieldName = GetterUtil.getString(\n\t\t\t\t\t\tPortletProps.get(\n\t\t\t\t\t\t\tPortletPropsKeys.SOLR_COPY_FIELDS,\n\t\t\t\t\t\t\tnew Filter(sortFieldName)));\n\t\t\t\t}\n\n\t\t\t\tORDER order = ORDER.asc;\n\n\t\t\t\tif (sortFieldName == null) {\n\t\t\t\t\tsortFieldName = \"score\";\n\n\t\t\t\t\torder = ORDER.desc;\n\t\t\t\t}\n\t\t\t\telse if (sort.isReverse()) {\n\t\t\t\t\torder = ORDER.desc;\n\t\t\t\t}\n\n\t\t\t\tsolrQuery.addSortField(sortFieldName, order);\n\t\t\t}\n\t\t}\n\n\t\treturn solrQuery;\n\t}","commit_id":"ff1c49b39f3a12d22aaa0a4e09c5bc0b8d04cc27","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected SolrInputDocument getSolrInputDocument(Document document) {\n\t\tSolrInputDocument solrInputDocument = new SolrInputDocument();\n\n\t\tCollection<Field> fields = document.getFields().values();\n\n\t\tfor (Field field : fields) {\n\t\t\tString name = field.getName();\n\t\t\tfloat boost = field.getBoost();\n\n\t\t\tif (!field.isLocalized()) {\n\t\t\t\tfor (String value : field.getValues()) {\n\t\t\t\t\tif (Validator.isNull(value)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tsolrInputDocument.addField(name, value.trim(), boost);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tMap<Locale, String> localizedValues =\n\t\t\t\t\tfield.getLocalizedValues();\n\n\t\t\t\tfor (Map.Entry<Locale, String> entry :\n\t\t\t\t\t\tlocalizedValues.entrySet()) {\n\n\t\t\t\t\tLocale locale = entry.getKey();\n\t\t\t\t\tString value = entry.getValue();\n\n\t\t\t\t\tif (Validator.isNull(value)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tname = name.concat(StringPool.UNDERLINE).concat(\n\t\t\t\t\t\tlocale.getDisplayName());\n\n\t\t\t\t\tsolrInputDocument.addField(name, value.trim(), boost);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn solrInputDocument;\n\t}","id":50468,"modified_method":"protected SolrInputDocument getSolrInputDocument(Document document) {\n\t\tSolrInputDocument solrInputDocument = new SolrInputDocument();\n\n\t\tCollection<Field> fields = document.getFields().values();\n\n\t\tfor (Field field : fields) {\n\t\t\tString name = field.getName();\n\t\t\tfloat boost = field.getBoost();\n\n\t\t\tif (!field.isLocalized()) {\n\t\t\t\tfor (String value : field.getValues()) {\n\t\t\t\t\tif (Validator.isNull(value)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tsolrInputDocument.addField(name, value.trim(), boost);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tMap<Locale, String> localizedValues =\n\t\t\t\t\tfield.getLocalizedValues();\n\n\t\t\t\tfor (Map.Entry<Locale, String> entry :\n\t\t\t\t\t\tlocalizedValues.entrySet()) {\n\n\t\t\t\t\tString value = entry.getValue();\n\n\t\t\t\t\tif (Validator.isNull(value)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tLocale locale = entry.getKey();\n\n\t\t\t\t\tString languageId = LocaleUtil.toLanguageId(locale);\n\n\t\t\t\t\tString defaultLanguageId = LocaleUtil.toLanguageId(\n\t\t\t\t\t\tLocaleUtil.getDefault());\n\n\t\t\t\t\tif (languageId.equals(defaultLanguageId)) {\n\t\t\t\t\t\tsolrInputDocument.addField(name, value.trim(), boost);\n\t\t\t\t\t}\n\n\t\t\t\t\tString localizedName = DocumentImpl.getLocalizedName(\n\t\t\t\t\t\tlocale, name);\n\n\t\t\t\t\tsolrInputDocument.addField(\n\t\t\t\t\t\tlocalizedName, value.trim(), boost);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn solrInputDocument;\n\t}","commit_id":"ff1c49b39f3a12d22aaa0a4e09c5bc0b8d04cc27","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public void addUserPermission(Long templateId, Long userId) {\n    PermissionTemplateUserDto permissionTemplateUser = new PermissionTemplateUserDto()\n      .setTemplateId(templateId)\n      .setUserId(userId)\n      .setCreatedAt(now())\n      .setUpdatedAt(now());\n    SqlSession session = myBatis.openSession();\n    try {\n      PermissionTemplateMapper mapper = session.getMapper(PermissionTemplateMapper.class);\n      mapper.insertUserPermission(permissionTemplateUser);\n      session.commit();\n    } finally {\n      MyBatis.closeQuietly(session);\n    }\n  }","id":50469,"modified_method":"public void addUserPermission(Long templateId, Long userId, String permission) {\n    PermissionTemplateUserDto permissionTemplateUser = new PermissionTemplateUserDto()\n      .setTemplateId(templateId)\n      .setUserId(userId)\n      .setPermission(permission)\n      .setCreatedAt(now())\n      .setUpdatedAt(now());\n    SqlSession session = myBatis.openSession();\n    try {\n      PermissionTemplateMapper mapper = session.getMapper(PermissionTemplateMapper.class);\n      mapper.insertUserPermission(permissionTemplateUser);\n      session.commit();\n    } finally {\n      MyBatis.closeQuietly(session);\n    }\n  }","commit_id":"67506dbb60457e0634e4aca3d8ca74f2afd8d50e","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public void removeUserPermission(Long templateId, Long userId) {\n    PermissionTemplateUserDto permissionTemplateUser = new PermissionTemplateUserDto()\n      .setTemplateId(templateId)\n      .setUserId(userId);\n    SqlSession session = myBatis.openSession();\n    try {\n      PermissionTemplateMapper mapper = session.getMapper(PermissionTemplateMapper.class);\n      mapper.deleteUserPermission(permissionTemplateUser);\n      session.commit();\n    } finally {\n      MyBatis.closeQuietly(session);\n    }\n  }","id":50470,"modified_method":"public void removeUserPermission(Long templateId, Long userId, String permission) {\n    PermissionTemplateUserDto permissionTemplateUser = new PermissionTemplateUserDto()\n      .setTemplateId(templateId)\n      .setPermission(permission)\n      .setUserId(userId);\n    SqlSession session = myBatis.openSession();\n    try {\n      PermissionTemplateMapper mapper = session.getMapper(PermissionTemplateMapper.class);\n      mapper.deleteUserPermission(permissionTemplateUser);\n      session.commit();\n    } finally {\n      MyBatis.closeQuietly(session);\n    }\n  }","commit_id":"67506dbb60457e0634e4aca3d8ca74f2afd8d50e","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public void addGroupPermission(Long templateId, @Nullable Long groupId) {\n    PermissionTemplateGroupDto permissionTemplateGroup = new PermissionTemplateGroupDto()\n      .setTemplateId(templateId)\n      .setGroupId(groupId)\n      .setCreatedAt(now())\n      .setUpdatedAt(now());\n    SqlSession session = myBatis.openSession();\n    try {\n      PermissionTemplateMapper mapper = session.getMapper(PermissionTemplateMapper.class);\n      mapper.insertGroupPermission(permissionTemplateGroup);\n      session.commit();\n    } finally {\n      MyBatis.closeQuietly(session);\n    }\n  }","id":50471,"modified_method":"public void addGroupPermission(Long templateId, @Nullable Long groupId, String permission) {\n    PermissionTemplateGroupDto permissionTemplateGroup = new PermissionTemplateGroupDto()\n      .setTemplateId(templateId)\n      .setPermission(permission)\n      .setGroupId(groupId)\n      .setCreatedAt(now())\n      .setUpdatedAt(now());\n    SqlSession session = myBatis.openSession();\n    try {\n      PermissionTemplateMapper mapper = session.getMapper(PermissionTemplateMapper.class);\n      mapper.insertGroupPermission(permissionTemplateGroup);\n      session.commit();\n    } finally {\n      MyBatis.closeQuietly(session);\n    }\n  }","commit_id":"67506dbb60457e0634e4aca3d8ca74f2afd8d50e","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public void removeGroupPermission(Long templateId, @Nullable Long groupId) {\n    PermissionTemplateGroupDto permissionTemplateGroup = new PermissionTemplateGroupDto()\n      .setTemplateId(templateId)\n      .setGroupId(groupId);\n    SqlSession session = myBatis.openSession();\n    try {\n      PermissionTemplateMapper mapper = session.getMapper(PermissionTemplateMapper.class);\n      mapper.deleteGroupPermission(permissionTemplateGroup);\n      session.commit();\n    } finally {\n      MyBatis.closeQuietly(session);\n    }\n  }","id":50472,"modified_method":"public void removeGroupPermission(Long templateId, @Nullable Long groupId, String permission) {\n    PermissionTemplateGroupDto permissionTemplateGroup = new PermissionTemplateGroupDto()\n      .setTemplateId(templateId)\n      .setPermission(permission)\n      .setGroupId(groupId);\n    SqlSession session = myBatis.openSession();\n    try {\n      PermissionTemplateMapper mapper = session.getMapper(PermissionTemplateMapper.class);\n      mapper.deleteGroupPermission(permissionTemplateGroup);\n      session.commit();\n    } finally {\n      MyBatis.closeQuietly(session);\n    }\n  }","commit_id":"67506dbb60457e0634e4aca3d8ca74f2afd8d50e","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public PermissionTemplateDto selectPermissionTemplate(String templateName) {\n    PermissionTemplateDto permissionTemplate = null;\n    SqlSession session = myBatis.openSession();\n    try {\n      PermissionTemplateMapper mapper = session.getMapper(PermissionTemplateMapper.class);\n      permissionTemplate = mapper.selectByName(templateName);\n      session.commit();\n    } finally {\n      MyBatis.closeQuietly(session);\n    }\n    return permissionTemplate;\n  }","id":50473,"modified_method":"public PermissionTemplateDto selectPermissionTemplate(String templateName) {\n    PermissionTemplateDto permissionTemplate = null;\n    SqlSession session = myBatis.openSession();\n    try {\n      PermissionTemplateMapper mapper = session.getMapper(PermissionTemplateMapper.class);\n      permissionTemplate = mapper.selectTemplateUsersPermissions(templateName);\n      PermissionTemplateDto templateWithGroupsPermissions = mapper.selectTemplateGroupsPermissions(templateName);\n      permissionTemplate.setGroupsByPermission(templateWithGroupsPermissions.getGroupsPermissions());\n      session.commit();\n    } finally {\n      MyBatis.closeQuietly(session);\n    }\n    return permissionTemplate;\n  }","commit_id":"67506dbb60457e0634e4aca3d8ca74f2afd8d50e","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void should_add_group_permission_with_null_name() throws Exception {\n    setupData(\"addNullGroupPermissionToTemplate\");\n    permissionDao.addGroupPermission(1L, null);\n\n    checkTable(\"addNullGroupPermissionToTemplate\", \"permission_templates\", \"id\", \"name\", \"description\");\n    checkTable(\"addNullGroupPermissionToTemplate\", \"perm_templates_users\", \"id\", \"template_id\", \"user_id\");\n    checkTable(\"addNullGroupPermissionToTemplate\", \"perm_templates_groups\", \"id\", \"template_id\", \"group_id\");\n  }","id":50474,"modified_method":"@Test\n  public void should_add_group_permission_with_null_name() throws Exception {\n    setupData(\"addNullGroupPermissionToTemplate\");\n    permissionDao.addGroupPermission(1L, null, \"new_permission\");\n\n    checkTable(\"addNullGroupPermissionToTemplate\", \"permission_templates\", \"id\", \"name\", \"description\");\n    checkTable(\"addNullGroupPermissionToTemplate\", \"perm_templates_users\", \"id\", \"template_id\", \"user_id\", \"permission\");\n    checkTable(\"addNullGroupPermissionToTemplate\", \"perm_templates_groups\", \"id\", \"template_id\", \"group_id\", \"permission\");\n  }","commit_id":"67506dbb60457e0634e4aca3d8ca74f2afd8d50e","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void should_select_permission_template() throws Exception {\n    setupData(\"selectPermissionTemplate\");\n    PermissionTemplateDto permissionTemplate = permissionDao.selectPermissionTemplate(\"my template\");\n\n    assertThat(permissionTemplate).isNotNull();\n    assertThat(permissionTemplate.getName()).isEqualTo(\"my template\");\n    assertThat(permissionTemplate.getDescription()).isEqualTo(\"my description\");\n  }","id":50475,"modified_method":"@Test\n  public void should_select_permission_template() throws Exception {\n    setupData(\"selectPermissionTemplate\");\n    PermissionTemplateDto permissionTemplate = permissionDao.selectPermissionTemplate(\"my template\");\n\n    assertThat(permissionTemplate).isNotNull();\n    assertThat(permissionTemplate.getName()).isEqualTo(\"my template\");\n    assertThat(permissionTemplate.getDescription()).isEqualTo(\"my description\");\n    assertThat(permissionTemplate.getUsersPermissions()).hasSize(3);\n    assertThat(permissionTemplate.getUsersPermissions()).onProperty(\"userName\").containsOnly(\"user1\", \"user2\", \"user2\");\n    assertThat(permissionTemplate.getUsersPermissions()).onProperty(\"permission\").containsOnly(\"user_permission1\", \"user_permission1\", \"user_permission2\");\n    assertThat(permissionTemplate.getGroupsPermissions()).hasSize(3);\n    assertThat(permissionTemplate.getGroupsPermissions()).onProperty(\"groupName\").containsOnly(\"group1\", \"group2\", null);\n    assertThat(permissionTemplate.getGroupsPermissions()).onProperty(\"permission\").containsOnly(\"group_permission1\", \"group_permission1\", \"group_permission2\");\n  }","commit_id":"67506dbb60457e0634e4aca3d8ca74f2afd8d50e","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void should_remove_group_permission_from_template() throws Exception {\n    setupData(\"removeGroupPermissionFromTemplate\");\n    permissionDao.removeGroupPermission(1L, 2L);\n\n    checkTable(\"removeGroupPermissionFromTemplate\", \"permission_templates\", \"id\", \"name\", \"description\");\n    checkTable(\"removeGroupPermissionFromTemplate\", \"perm_templates_users\", \"id\", \"template_id\", \"user_id\");\n    checkTable(\"removeGroupPermissionFromTemplate\", \"perm_templates_groups\", \"id\", \"template_id\", \"group_id\");\n  }","id":50476,"modified_method":"@Test\n  public void should_remove_group_permission_from_template() throws Exception {\n    setupData(\"removeGroupPermissionFromTemplate\");\n    permissionDao.removeGroupPermission(1L, 2L, \"existing_permission\");\n\n    checkTable(\"removeGroupPermissionFromTemplate\", \"permission_templates\", \"id\", \"name\", \"description\");\n    checkTable(\"removeGroupPermissionFromTemplate\", \"perm_templates_users\", \"id\", \"template_id\", \"user_id\", \"permission\");\n    checkTable(\"removeGroupPermissionFromTemplate\", \"perm_templates_groups\", \"id\", \"template_id\", \"group_id\", \"permission\");\n  }","commit_id":"67506dbb60457e0634e4aca3d8ca74f2afd8d50e","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void should_add_user_permission_to_template() throws Exception {\n    setupData(\"addUserPermissionToTemplate\");\n    permissionDao.addUserPermission(1L, 1L);\n\n    checkTable(\"addUserPermissionToTemplate\", \"permission_templates\", \"id\", \"name\", \"description\");\n    checkTable(\"addUserPermissionToTemplate\", \"perm_templates_users\", \"id\", \"template_id\", \"user_id\");\n    checkTable(\"addUserPermissionToTemplate\", \"perm_templates_groups\", \"id\", \"template_id\", \"group_id\");\n  }","id":50477,"modified_method":"@Test\n  public void should_add_user_permission_to_template() throws Exception {\n    setupData(\"addUserPermissionToTemplate\");\n    permissionDao.addUserPermission(1L, 1L, \"new_permission\");\n\n    checkTable(\"addUserPermissionToTemplate\", \"permission_templates\", \"id\", \"name\", \"description\");\n    checkTable(\"addUserPermissionToTemplate\", \"perm_templates_users\", \"id\", \"template_id\", \"user_id\", \"permission\");\n    checkTable(\"addUserPermissionToTemplate\", \"perm_templates_groups\", \"id\", \"template_id\", \"group_id\", \"permission\");\n  }","commit_id":"67506dbb60457e0634e4aca3d8ca74f2afd8d50e","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void should_add_group_permission_to_template() throws Exception {\n    setupData(\"addGroupPermissionToTemplate\");\n    permissionDao.addGroupPermission(1L, 1L);\n\n    checkTable(\"addGroupPermissionToTemplate\", \"permission_templates\", \"id\", \"name\", \"description\");\n    checkTable(\"addGroupPermissionToTemplate\", \"perm_templates_users\", \"id\", \"template_id\", \"user_id\");\n    checkTable(\"addGroupPermissionToTemplate\", \"perm_templates_groups\", \"id\", \"template_id\", \"group_id\");\n  }","id":50478,"modified_method":"@Test\n  public void should_add_group_permission_to_template() throws Exception {\n    setupData(\"addGroupPermissionToTemplate\");\n    permissionDao.addGroupPermission(1L, 1L, \"new_permission\");\n\n    checkTable(\"addGroupPermissionToTemplate\", \"permission_templates\", \"id\", \"name\", \"description\");\n    checkTable(\"addGroupPermissionToTemplate\", \"perm_templates_users\", \"id\", \"template_id\", \"user_id\", \"permission\");\n    checkTable(\"addGroupPermissionToTemplate\", \"perm_templates_groups\", \"id\", \"template_id\", \"group_id\", \"permission\");\n  }","commit_id":"67506dbb60457e0634e4aca3d8ca74f2afd8d50e","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void should_remove_user_permission_from_template() throws Exception {\n    setupData(\"removeUserPermissionFromTemplate\");\n    permissionDao.removeUserPermission(1L, 2L);\n\n    checkTable(\"removeUserPermissionFromTemplate\", \"permission_templates\", \"id\", \"name\", \"description\");\n    checkTable(\"removeUserPermissionFromTemplate\", \"perm_templates_users\", \"id\", \"template_id\", \"user_id\");\n    checkTable(\"removeUserPermissionFromTemplate\", \"perm_templates_groups\", \"id\", \"template_id\", \"group_id\");\n  }","id":50479,"modified_method":"@Test\n  public void should_remove_user_permission_from_template() throws Exception {\n    setupData(\"removeUserPermissionFromTemplate\");\n    permissionDao.removeUserPermission(1L, 2L, \"existing_permission\");\n\n    checkTable(\"removeUserPermissionFromTemplate\", \"permission_templates\", \"id\", \"name\", \"description\");\n    checkTable(\"removeUserPermissionFromTemplate\", \"perm_templates_users\", \"id\", \"template_id\", \"user_id\", \"permission\");\n    checkTable(\"removeUserPermissionFromTemplate\", \"perm_templates_groups\", \"id\", \"template_id\", \"group_id\", \"permission\");\n  }","commit_id":"67506dbb60457e0634e4aca3d8ca74f2afd8d50e","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void should_remove_group_permission_with_null_name() throws Exception {\n    setupData(\"removeNullGroupPermissionFromTemplate\");\n    permissionDao.removeGroupPermission(1L, null);\n\n    checkTable(\"removeNullGroupPermissionFromTemplate\", \"permission_templates\", \"id\", \"name\", \"description\");\n    checkTable(\"removeNullGroupPermissionFromTemplate\", \"perm_templates_users\", \"id\", \"template_id\", \"user_id\");\n    checkTable(\"removeNullGroupPermissionFromTemplate\", \"perm_templates_groups\", \"id\", \"template_id\", \"group_id\");\n  }","id":50480,"modified_method":"@Test\n  public void should_remove_group_permission_with_null_name() throws Exception {\n    setupData(\"removeNullGroupPermissionFromTemplate\");\n    permissionDao.removeGroupPermission(1L, null, \"existing_permission\");\n\n    checkTable(\"removeNullGroupPermissionFromTemplate\", \"permission_templates\", \"id\", \"name\", \"description\");\n    checkTable(\"removeNullGroupPermissionFromTemplate\", \"perm_templates_users\", \"id\", \"template_id\", \"user_id\", \"permission\");\n    checkTable(\"removeNullGroupPermissionFromTemplate\", \"perm_templates_groups\", \"id\", \"template_id\", \"group_id\", \"permission\");\n  }","commit_id":"67506dbb60457e0634e4aca3d8ca74f2afd8d50e","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n\tpublic void testGetAssigneesTotalSiteRole() throws Exception {\n\t\tGroup group = GroupTestUtil.addGroup();\n\t\tRole role = RoleTestUtil.addRole(RoleConstants.TYPE_SITE);\n\t\tUser user = UserTestUtil.addUser();\n\t\tUserGroup userGroup = UserGroupTestUtil.addUserGroup();\n\n\t\t_groups.add(group);\n\t\t_roles.add(role);\n\t\t_users.add(user);\n\t\t_userGroups.add(userGroup);\n\n\t\tGroupLocalServiceUtil.addUserGroup(user.getUserId(), group);\n\t\tGroupLocalServiceUtil.addUserGroupGroup(\n\t\t\tuserGroup.getUserGroupId(), group);\n\n\t\tlong[] roleIds = new long[] {role.getRoleId()};\n\n\t\tUserGroupGroupRoleLocalServiceUtil.addUserGroupGroupRoles(\n\t\t\tuserGroup.getGroupId(), group.getGroupId(), roleIds);\n\t\tUserGroupRoleLocalServiceUtil.addUserGroupRoles(\n\t\t\tuser.getUserId(), group.getGroupId(), roleIds);\n\n\t\tAssert.assertEquals(\n\t\t\t2, RoleLocalServiceUtil.getAssigneesTotal(role.getRoleId()));\n\t}","id":50481,"modified_method":"@Test\n\tpublic void testGetAssigneesTotalSiteRole() throws Exception {\n\t\t_group = GroupTestUtil.addGroup();\n\t\t_role = RoleTestUtil.addRole(RoleConstants.TYPE_SITE);\n\t\t_user = UserTestUtil.addUser();\n\t\t_userGroup = UserGroupTestUtil.addUserGroup();\n\n\t\tGroupLocalServiceUtil.addUserGroup(_user.getUserId(), _group);\n\t\tGroupLocalServiceUtil.addUserGroupGroup(\n\t\t\t_userGroup.getUserGroupId(), _group);\n\n\t\tlong[] roleIds = new long[] {_role.getRoleId()};\n\n\t\tUserGroupGroupRoleLocalServiceUtil.addUserGroupGroupRoles(\n\t\t\t_userGroup.getGroupId(), _group.getGroupId(), roleIds);\n\t\tUserGroupRoleLocalServiceUtil.addUserGroupRoles(\n\t\t\t_user.getUserId(), _group.getGroupId(), roleIds);\n\n\t\tAssert.assertEquals(\n\t\t\t2, RoleLocalServiceUtil.getAssigneesTotal(_role.getRoleId()));\n\t}","commit_id":"1381a8ec06711875cdeb3e7b3a161785afbfa4aa","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected Object[] getOrganizationAndTeam() throws Exception {\n\t\tUser user = TestPropsValues.getUser();\n\n\t\tOrganization organization =\n\t\t\tOrganizationLocalServiceUtil.addOrganization(\n\t\t\t\tuser.getUserId(),\n\t\t\t\tOrganizationConstants.DEFAULT_PARENT_ORGANIZATION_ID,\n\t\t\t\tRandomTestUtil.randomString(), false);\n\n\t\t_organizations.add(organization);\n\n\t\tTeam team = TeamLocalServiceUtil.addTeam(\n\t\t\tuser.getUserId(), organization.getGroupId(),\n\t\t\tRandomTestUtil.randomString(), null, new ServiceContext());\n\n\t\treturn new Object[] {organization, team};\n\t}","id":50482,"modified_method":"protected Object[] getOrganizationAndTeam() throws Exception {\n\t\tUser user = TestPropsValues.getUser();\n\n\t\t_organization = OrganizationLocalServiceUtil.addOrganization(\n\t\t\tuser.getUserId(),\n\t\t\tOrganizationConstants.DEFAULT_PARENT_ORGANIZATION_ID,\n\t\t\tRandomTestUtil.randomString(), false);\n\n\t\tTeam team = TeamLocalServiceUtil.addTeam(\n\t\t\tuser.getUserId(), _organization.getGroupId(),\n\t\t\tRandomTestUtil.randomString(), null, new ServiceContext());\n\n\t\treturn new Object[] {_organization, team};\n\t}","commit_id":"1381a8ec06711875cdeb3e7b3a161785afbfa4aa","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Test\n\tpublic void testGetAssigneesTotalOrganizationRole() throws Exception {\n\t\tOrganization organization = OrganizationTestUtil.addOrganization();\n\t\tRole role = RoleTestUtil.addRole(RoleConstants.TYPE_ORGANIZATION);\n\t\tUser user = UserTestUtil.addUser();\n\n\t\t_organizations.add(organization);\n\t\t_roles.add(role);\n\t\t_users.add(user);\n\n\t\tOrganizationLocalServiceUtil.addUserOrganization(\n\t\t\tuser.getUserId(), organization);\n\t\tUserGroupRoleLocalServiceUtil.addUserGroupRoles(\n\t\t\tuser.getUserId(), organization.getGroupId(),\n\t\t\tnew long[] {role.getRoleId()});\n\n\t\tAssert.assertEquals(\n\t\t\t1, RoleLocalServiceUtil.getAssigneesTotal(role.getRoleId()));\n\t}","id":50483,"modified_method":"@Test\n\tpublic void testGetAssigneesTotalOrganizationRole() throws Exception {\n\t\t_organization = OrganizationTestUtil.addOrganization();\n\t\t_role = RoleTestUtil.addRole(RoleConstants.TYPE_ORGANIZATION);\n\t\t_user = UserTestUtil.addUser();\n\n\t\tOrganizationLocalServiceUtil.addUserOrganization(\n\t\t\t_user.getUserId(), _organization);\n\t\tUserGroupRoleLocalServiceUtil.addUserGroupRoles(\n\t\t\t_user.getUserId(), _organization.getGroupId(),\n\t\t\tnew long[] {_role.getRoleId()});\n\n\t\tAssert.assertEquals(\n\t\t\t1, RoleLocalServiceUtil.getAssigneesTotal(_role.getRoleId()));\n\t}","commit_id":"1381a8ec06711875cdeb3e7b3a161785afbfa4aa","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Test\n\tpublic void testGetAssigneesTotalRegularRole() throws Exception {\n\t\tGroup group = GroupTestUtil.addGroup();\n\t\tOrganization organization = OrganizationTestUtil.addOrganization();\n\t\tRole role = RoleTestUtil.addRole(RoleConstants.TYPE_REGULAR);\n\t\tUser user = UserTestUtil.addUser();\n\t\tUserGroup userGroup = UserGroupTestUtil.addUserGroup();\n\n\t\t_groups.add(group);\n\t\t_organizations.add(organization);\n\t\t_roles.add(role);\n\t\t_userGroups.add(userGroup);\n\t\t_users.add(user);\n\n\t\tRoleLocalServiceUtil.addUserRole(user.getUserId(), role);\n\t\tRoleLocalServiceUtil.addGroupRole(group.getGroupId(), role);\n\t\tRoleLocalServiceUtil.addGroupRole(organization.getGroupId(), role);\n\t\tRoleLocalServiceUtil.addGroupRole(userGroup.getGroupId(), role);\n\n\t\tAssert.assertEquals(\n\t\t\t4, RoleLocalServiceUtil.getAssigneesTotal(role.getRoleId()));\n\t}","id":50484,"modified_method":"@Test\n\tpublic void testGetAssigneesTotalRegularRole() throws Exception {\n\t\t_group = GroupTestUtil.addGroup();\n\t\t_organization = OrganizationTestUtil.addOrganization();\n\t\t_role = RoleTestUtil.addRole(RoleConstants.TYPE_REGULAR);\n\t\t_user = UserTestUtil.addUser();\n\t\t_userGroup = UserGroupTestUtil.addUserGroup();\n\n\t\tRoleLocalServiceUtil.addUserRole(_user.getUserId(), _role);\n\t\tRoleLocalServiceUtil.addGroupRole(_group.getGroupId(), _role);\n\t\tRoleLocalServiceUtil.addGroupRole(_organization.getGroupId(), _role);\n\t\tRoleLocalServiceUtil.addGroupRole(_userGroup.getGroupId(), _role);\n\n\t\tAssert.assertEquals(\n\t\t\t4, RoleLocalServiceUtil.getAssigneesTotal(_role.getRoleId()));\n\t}","commit_id":"1381a8ec06711875cdeb3e7b3a161785afbfa4aa","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic void set(String name, String value) {\n\t\tList<String> values = new LinkedList<String>();\n\t\tvalues.add(value);\n\t\tput(name, values);\n\t}","id":50485,"modified_method":"@Override\n\tpublic void set(String name, String value) {\n\t\tList<String> values = new LinkedList<>();\n\t\tvalues.add(value);\n\t\tput(name, values);\n\t}","commit_id":"869f6bef4086fe66d642a7e4f841c5716e6e45a3","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n\tpublic HttpHeaders getHeaders() {\n\t\tif (this.headers == null) {\n\t\t\tthis.headers = new HttpHeaders();\n\t\t\tfor (String name : this.channel.headers().names()) {\n\t\t\t\tfor (String value : this.channel.headers().getAll(name)) {\n\t\t\t\t\tthis.headers.add(name, value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this.headers;\n\t}","id":50486,"modified_method":"@Override\n\tpublic HttpHeaders getHeaders() {\n\t\tif (this.headers == null) {\n\t\t\tthis.headers = new HttpHeaders();\n\t\t\tfor (String name : this.channel.headers().names()) {\n\t\t\t\tthis.headers.put(name, this.channel.headers().getAll(name));\n\t\t\t}\n\t\t}\n\t\treturn this.headers;\n\t}","commit_id":"869f6bef4086fe66d642a7e4f841c5716e6e45a3","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"public ReactorServerHttpRequest(HttpChannel<Buffer, ?> request) {\n\t\tAssert.notNull(\"'request', request must not be null.\");\n\t\tthis.channel = request;\n\t}","id":50487,"modified_method":"public ReactorServerHttpRequest(HttpChannel<Buffer, ?> request) {\n\t\tAssert.notNull(\"'request' must not be null.\");\n\t\tthis.channel = request;\n\t}","commit_id":"869f6bef4086fe66d642a7e4f841c5716e6e45a3","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n\tpublic URI getURI() {\n\t\ttry {\n\t\t\treturn new URI(this.channel.uri());\n\t\t} catch (URISyntaxException ex) {\n\t\t\tthrow new IllegalStateException(\"Could not get URI: \" + ex.getMessage(), ex);\n\t\t}\n\n\t}","id":50488,"modified_method":"@Override\n\tpublic URI getURI() {\n\t\tif (this.uri == null) {\n\t\t\ttry {\n\t\t\t\tthis.uri = new URI(this.channel.uri());\n\t\t\t}\n\t\t\tcatch (URISyntaxException ex) {\n\t\t\t\tthrow new IllegalStateException(\"Could not get URI: \" + ex.getMessage(), ex);\n\t\t\t}\n\t\t}\n\t\treturn this.uri;\n\t}","commit_id":"869f6bef4086fe66d642a7e4f841c5716e6e45a3","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n\t\tpublic void headerRemoved(String key) {\n\t\t\tchannel.responseHeaders().remove(key);\n\t\t}","id":50489,"modified_method":"@Override\n\t\tpublic void headerRemoved(String key) {\n\t\t\tgetReactorChannel().responseHeaders().remove(key);\n\t\t}","commit_id":"869f6bef4086fe66d642a7e4f841c5716e6e45a3","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n\t\tpublic void headerAdded(String name, String value) {\n\t\t\tchannel.responseHeaders().add(name, value);\n\t\t}","id":50490,"modified_method":"@Override\n\t\tpublic void headerAdded(String name, String value) {\n\t\t\tgetReactorChannel().responseHeaders().add(name, value);\n\t\t}","commit_id":"869f6bef4086fe66d642a7e4f841c5716e6e45a3","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n\tpublic void setStatusCode(HttpStatus status) {\n\t\tthis.channel.responseStatus(Status.valueOf(status.value()));\n\t}","id":50491,"modified_method":"@Override\n\tpublic void setStatusCode(HttpStatus status) {\n\t\tgetReactorChannel().responseStatus(Status.valueOf(status.value()));\n\t}","commit_id":"869f6bef4086fe66d642a7e4f841c5716e6e45a3","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"public ReactorServerHttpResponse(HttpChannel<?, Buffer> response) {\n\t\tAssert.notNull(\"'response', response must not be null.\");\n\t\tthis.channel = response;\n\t\tthis.headers = initHttpHeaders();\n\t}","id":50492,"modified_method":"public ReactorServerHttpResponse(HttpChannel<?, Buffer> response) {\n\t\tAssert.notNull(\"'response' must not be null.\");\n\t\tthis.channel = response;\n\t\tthis.headers = new ExtendedHttpHeaders(new ReactorHeaderChangeListener());\n\t}","commit_id":"869f6bef4086fe66d642a7e4f841c5716e6e45a3","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n\tpublic Publisher<Void> setBody(Publisher<ByteBuffer> publisher) {\n\t\treturn Publishers.lift(publisher, new WriteWithOperator<>(writePublisher ->\n\t\t\t\tthis.channel.writeWith(Publishers.map(writePublisher, Buffer::new))));\n\t}","id":50493,"modified_method":"@Override\n\tpublic Publisher<Void> setBody(Publisher<ByteBuffer> publisher) {\n\t\treturn Publishers.lift(publisher, new WriteWithOperator<>(this::setBodyInternal));\n\t}","commit_id":"869f6bef4086fe66d642a7e4f841c5716e6e45a3","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n\t\tpublic void headerPut(String key, List<String> values) {\n\t\t\tchannel.responseHeaders().remove(key);\n\t\t\tchannel.responseHeaders().add(key, values);\n\t\t}","id":50494,"modified_method":"@Override\n\t\tpublic void headerPut(String key, List<String> values) {\n\t\t\tgetReactorChannel().responseHeaders().remove(key);\n\t\t\tgetReactorChannel().responseHeaders().add(key, values);\n\t\t}","commit_id":"869f6bef4086fe66d642a7e4f841c5716e6e45a3","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n\tpublic HttpHeaders getHeaders() {\n\t\tif (this.headers == null) {\n\t\t\tthis.headers = new HttpHeaders();\n\t\t\tfor (String name : this.request.getHeaderNames()) {\n\t\t\t\tfor (String value : this.request.getAllHeaderValues(name)) {\n\t\t\t\t\tthis.headers.add(name, value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this.headers;\n\t}","id":50495,"modified_method":"@Override\n\tpublic HttpHeaders getHeaders() {\n\t\tif (this.headers == null) {\n\t\t\tthis.headers = new HttpHeaders();\n\t\t\tfor (String name : this.getRxNettyRequest().getHeaderNames()) {\n\t\t\t\tthis.headers.put(name, this.getRxNettyRequest().getAllHeaderValues(name));\n\t\t\t}\n\t\t}\n\t\treturn this.headers;\n\t}","commit_id":"869f6bef4086fe66d642a7e4f841c5716e6e45a3","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n\tpublic HttpMethod getMethod() {\n\t\treturn HttpMethod.valueOf(this.request.getHttpMethod().name());\n\t}","id":50496,"modified_method":"@Override\n\tpublic HttpMethod getMethod() {\n\t\treturn HttpMethod.valueOf(this.getRxNettyRequest().getHttpMethod().name());\n\t}","commit_id":"869f6bef4086fe66d642a7e4f841c5716e6e45a3","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n\tpublic URI getURI() {\n\t\ttry {\n\t\t\treturn new URI(this.request.getUri());\n\t\t}\n\t\tcatch (URISyntaxException ex) {\n\t\t\tthrow new IllegalStateException(\"Could not get URI: \" + ex.getMessage(), ex);\n\t\t}\n\n\t}","id":50497,"modified_method":"@Override\n\tpublic URI getURI() {\n\t\tif (this.uri == null) {\n\t\t\ttry {\n\t\t\t\tthis.uri = new URI(this.getRxNettyRequest().getUri());\n\t\t\t}\n\t\t\tcatch (URISyntaxException ex) {\n\t\t\t\tthrow new IllegalStateException(\"Could not get URI: \" + ex.getMessage(), ex);\n\t\t\t}\n\t\t}\n\t\treturn this.uri;\n\t}","commit_id":"869f6bef4086fe66d642a7e4f841c5716e6e45a3","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n\tpublic Publisher<ByteBuffer> getBody() {\n\t\tObservable<ByteBuffer> bytesContent = this.request.getContent()\n\t\t\t\t.concatWith(Observable.empty())\n\t\t\t\t.map(ByteBuf::nioBuffer);\n\t\treturn RxJava1Converter.from(bytesContent);\n\t}","id":50498,"modified_method":"@Override\n\tpublic Publisher<ByteBuffer> getBody() {\n\t\tObservable<ByteBuffer> content = this.getRxNettyRequest().getContent().map(ByteBuf::nioBuffer);\n\t\tcontent = content.concatWith(Observable.empty()); // See GH issue #58\n\t\treturn RxJava1Converter.from(content);\n\t}","commit_id":"869f6bef4086fe66d642a7e4f841c5716e6e45a3","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n\tpublic Publisher<Void> setBody(Publisher<ByteBuffer> publisher) {\n\t\treturn Publishers.lift(publisher, new WriteWithOperator<>(writePublisher -> {\n\t\t\tObservable<byte[]> observable = RxJava1Converter.from(writePublisher)\n\t\t\t\t\t.map(buffer -> {\n\t\t\t\t\t\tbyte[] bytes = new byte[buffer.remaining()];\n\t\t\t\t\t\tbuffer.get(bytes);\n\t\t\t\t\t\treturn bytes;\n\t\t\t\t\t});\n\t\t\treturn RxJava1Converter.from(this.response.writeBytes(observable));\n\t\t}));\n\t}","id":50499,"modified_method":"@Override\n\tpublic Publisher<Void> setBody(Publisher<ByteBuffer> publisher) {\n\t\treturn Publishers.lift(publisher, new WriteWithOperator<>(this::setBodyInternal));\n\t}","commit_id":"869f6bef4086fe66d642a7e4f841c5716e6e45a3","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n\t\tpublic void headerAdded(String name, String value) {\n\t\t\tresponse.addHeader(name, value);\n\t\t}","id":50500,"modified_method":"@Override\n\t\tpublic void headerAdded(String name, String value) {\n\t\t\tgetRxNettyResponse().addHeader(name, value);\n\t\t}","commit_id":"869f6bef4086fe66d642a7e4f841c5716e6e45a3","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"public RxNettyServerHttpResponse(HttpServerResponse<?> response) {\n\t\tAssert.notNull(\"'response', response must not be null.\");\n\t\tthis.response = response;\n\t\tthis.headers = initHttpHeaders();\n\t}","id":50501,"modified_method":"public RxNettyServerHttpResponse(HttpServerResponse<?> response) {\n\t\tAssert.notNull(\"'response', response must not be null.\");\n\t\tthis.response = response;\n\t\tthis.headers = new ExtendedHttpHeaders(new RxNettyHeaderChangeListener());\n\t}","commit_id":"869f6bef4086fe66d642a7e4f841c5716e6e45a3","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n\t\tpublic void headerRemoved(String key) {\n\t\t\tresponse.removeHeader(key);\n\t\t}","id":50502,"modified_method":"@Override\n\t\tpublic void headerRemoved(String key) {\n\t\t\tgetRxNettyResponse().removeHeader(key);\n\t\t}","commit_id":"869f6bef4086fe66d642a7e4f841c5716e6e45a3","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n\tpublic void setStatusCode(HttpStatus status) {\n\t\tthis.response.setStatus(HttpResponseStatus.valueOf(status.value()));\n\t}","id":50503,"modified_method":"@Override\n\tpublic void setStatusCode(HttpStatus status) {\n\t\tgetRxNettyResponse().setStatus(HttpResponseStatus.valueOf(status.value()));\n\t}","commit_id":"869f6bef4086fe66d642a7e4f841c5716e6e45a3","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n\t\tpublic void headerPut(String key, List<String> values) {\n\t\t\tresponse.removeHeader(key);\n\t\t\tfor (String value : values) {\n\t\t\t\tresponse.addHeader(key, value);\n\t\t\t}\n\t\t}","id":50504,"modified_method":"@Override\n\t\tpublic void headerPut(String key, List<String> values) {\n\t\t\tgetRxNettyResponse().removeHeader(key);\n\t\t\tfor (String value : values) {\n\t\t\t\tgetRxNettyResponse().addHeader(key, value);\n\t\t\t}\n\t\t}","commit_id":"869f6bef4086fe66d642a7e4f841c5716e6e45a3","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n\tpublic HttpMethod getMethod() {\n\t\treturn HttpMethod.valueOf(this.servletRequest.getMethod());\n\t}","id":50505,"modified_method":"@Override\n\tpublic HttpMethod getMethod() {\n\t\treturn HttpMethod.valueOf(getServletRequest().getMethod());\n\t}","commit_id":"869f6bef4086fe66d642a7e4f841c5716e6e45a3","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n\tpublic HttpHeaders getHeaders() {\n\t\tif (this.headers == null) {\n\t\t\tthis.headers = new HttpHeaders();\n\t\t\tfor (Enumeration<?> names = this.servletRequest.getHeaderNames(); names.hasMoreElements(); ) {\n\t\t\t\tString headerName = (String) names.nextElement();\n\t\t\t\tfor (Enumeration<?> headerValues = this.servletRequest.getHeaders(headerName);\n\t\t\t\t\t headerValues.hasMoreElements(); ) {\n\t\t\t\t\tString headerValue = (String) headerValues.nextElement();\n\t\t\t\t\tthis.headers.add(headerName, headerValue);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// HttpServletRequest exposes some headers as properties: we should include those if not already present\n\t\t\tMediaType contentType = this.headers.getContentType();\n\t\t\tif (contentType == null) {\n\t\t\t\tString requestContentType = this.servletRequest.getContentType();\n\t\t\t\tif (StringUtils.hasLength(requestContentType)) {\n\t\t\t\t\tcontentType = MediaType.parseMediaType(requestContentType);\n\t\t\t\t\tthis.headers.setContentType(contentType);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (contentType != null && contentType.getCharSet() == null) {\n\t\t\t\tString requestEncoding = this.servletRequest.getCharacterEncoding();\n\t\t\t\tif (StringUtils.hasLength(requestEncoding)) {\n\t\t\t\t\tCharset charSet = Charset.forName(requestEncoding);\n\t\t\t\t\tMap<String, String> params = new LinkedCaseInsensitiveMap<>();\n\t\t\t\t\tparams.putAll(contentType.getParameters());\n\t\t\t\t\tparams.put(\"charset\", charSet.toString());\n\t\t\t\t\tMediaType newContentType = new MediaType(contentType.getType(), contentType.getSubtype(), params);\n\t\t\t\t\tthis.headers.setContentType(newContentType);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.headers.getContentLength() == -1) {\n\t\t\t\tint requestContentLength = this.servletRequest.getContentLength();\n\t\t\t\tif (requestContentLength != -1) {\n\t\t\t\t\tthis.headers.setContentLength(requestContentLength);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this.headers;\n\t}","id":50506,"modified_method":"@Override\n\tpublic HttpHeaders getHeaders() {\n\t\tif (this.headers == null) {\n\t\t\tthis.headers = new HttpHeaders();\n\t\t\tfor (Enumeration<?> names = getServletRequest().getHeaderNames(); names.hasMoreElements(); ) {\n\t\t\t\tString headerName = (String) names.nextElement();\n\t\t\t\tfor (Enumeration<?> headerValues = getServletRequest().getHeaders(headerName);\n\t\t\t\t\t headerValues.hasMoreElements(); ) {\n\t\t\t\t\tString headerValue = (String) headerValues.nextElement();\n\t\t\t\t\tthis.headers.add(headerName, headerValue);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// HttpServletRequest exposes some headers as properties: we should include those if not already present\n\t\t\tMediaType contentType = this.headers.getContentType();\n\t\t\tif (contentType == null) {\n\t\t\t\tString requestContentType = getServletRequest().getContentType();\n\t\t\t\tif (StringUtils.hasLength(requestContentType)) {\n\t\t\t\t\tcontentType = MediaType.parseMediaType(requestContentType);\n\t\t\t\t\tthis.headers.setContentType(contentType);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (contentType != null && contentType.getCharSet() == null) {\n\t\t\t\tString requestEncoding = getServletRequest().getCharacterEncoding();\n\t\t\t\tif (StringUtils.hasLength(requestEncoding)) {\n\t\t\t\t\tCharset charSet = Charset.forName(requestEncoding);\n\t\t\t\t\tMap<String, String> params = new LinkedCaseInsensitiveMap<>();\n\t\t\t\t\tparams.putAll(contentType.getParameters());\n\t\t\t\t\tparams.put(\"charset\", charSet.toString());\n\t\t\t\t\tMediaType newContentType = new MediaType(contentType.getType(), contentType.getSubtype(), params);\n\t\t\t\t\tthis.headers.setContentType(newContentType);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.headers.getContentLength() == -1) {\n\t\t\t\tint requestContentLength = getServletRequest().getContentLength();\n\t\t\t\tif (requestContentLength != -1) {\n\t\t\t\t\tthis.headers.setContentLength(requestContentLength);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this.headers;\n\t}","commit_id":"869f6bef4086fe66d642a7e4f841c5716e6e45a3","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n\tpublic URI getURI() {\n\t\ttry {\n\t\t\treturn new URI(this.servletRequest.getScheme(), null, this.servletRequest.getServerName(),\n\t\t\t\t\tthis.servletRequest.getServerPort(), this.servletRequest.getRequestURI(),\n\t\t\t\t\tthis.servletRequest.getQueryString(), null);\n\t\t}\n\t\tcatch (URISyntaxException ex) {\n\t\t\tthrow new IllegalStateException(\"Could not get HttpServletRequest URI: \" + ex.getMessage(), ex);\n\t\t}\n\t}","id":50507,"modified_method":"@Override\n\tpublic URI getURI() {\n\t\tif (this.uri == null) {\n\t\t\ttry {\n\t\t\t\tthis.uri = new URI(getServletRequest().getScheme(), null,\n\t\t\t\t\t\tgetServletRequest().getServerName(),\n\t\t\t\t\t\tgetServletRequest().getServerPort(),\n\t\t\t\t\t\tgetServletRequest().getRequestURI(),\n\t\t\t\t\t\tgetServletRequest().getQueryString(), null);\n\t\t\t}\n\t\t\tcatch (URISyntaxException ex) {\n\t\t\t\tthrow new IllegalStateException(\"Could not get HttpServletRequest URI: \" + ex.getMessage(), ex);\n\t\t\t}\n\t\t}\n\t\treturn this.uri;\n\t}","commit_id":"869f6bef4086fe66d642a7e4f841c5716e6e45a3","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"public ServletServerHttpRequest(HttpServletRequest servletRequest, ServletAsyncContextSynchronizer synchronizer) {\n\t\tAssert.notNull(servletRequest, \"HttpServletRequest must not be null\");\n\t\tthis.servletRequest = servletRequest;\n\t\tthis.requestBodyPublisher = new RequestBodyPublisher(synchronizer, BUFFER_SIZE);\n\t}","id":50508,"modified_method":"public ServletServerHttpRequest(HttpServletRequest request, ServletAsyncContextSynchronizer synchronizer) {\n\t\tAssert.notNull(request, \"'request' must not be null.\");\n\t\tthis.request = request;\n\t\tthis.requestBodyPublisher = new RequestBodyPublisher(synchronizer, BUFFER_SIZE);\n\t}","commit_id":"869f6bef4086fe66d642a7e4f841c5716e6e45a3","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n\t\tpublic void headerPut(String key, List<String> values) {\n\t\t\t// We can only add but not remove\n\t\t\tfor (String value : values) {\n\t\t\t\tresponse.addHeader(key, value);\n\t\t\t}\n\t\t}","id":50509,"modified_method":"@Override\n\t\tpublic void headerPut(String key, List<String> values) {\n\t\t\t// We can only add but not remove\n\t\t\tfor (String value : values) {\n\t\t\t\tgetServletResponse().addHeader(key, value);\n\t\t\t}\n\t\t}","commit_id":"869f6bef4086fe66d642a7e4f841c5716e6e45a3","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"public ServletServerHttpResponse(HttpServletResponse response, ServletAsyncContextSynchronizer synchronizer) {\n\t\tAssert.notNull(response, \"'response' must not be null\");\n\t\tthis.response = response;\n\t\tthis.headers = initHttpHeaders();\n\t\tthis.subscriber = new ResponseBodySubscriber(synchronizer);\n\t}","id":50510,"modified_method":"public ServletServerHttpResponse(HttpServletResponse response, ServletAsyncContextSynchronizer synchronizer) {\n\t\tAssert.notNull(response, \"'response' must not be null\");\n\t\tthis.response = response;\n\t\tthis.headers = new ExtendedHttpHeaders(new ServletHeaderChangeListener());\n\t\tthis.subscriber = new ResponseBodySubscriber(synchronizer);\n\t}","commit_id":"869f6bef4086fe66d642a7e4f841c5716e6e45a3","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n\tpublic Publisher<Void> setBody(final Publisher<ByteBuffer> publisher) {\n\t\treturn Publishers.lift(publisher, new WriteWithOperator<>(writePublisher ->\n\t\t\t\t(s -> writePublisher.subscribe(subscriber))));\n\t}","id":50511,"modified_method":"@Override\n\tpublic Publisher<Void> setBody(final Publisher<ByteBuffer> publisher) {\n\t\treturn Publishers.lift(publisher, new WriteWithOperator<>(this::setBodyInternal));\n\t}","commit_id":"869f6bef4086fe66d642a7e4f841c5716e6e45a3","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n\tpublic void setStatusCode(HttpStatus status) {\n\t\tthis.response.setStatus(status.value());\n\t}","id":50512,"modified_method":"@Override\n\tpublic void setStatusCode(HttpStatus status) {\n\t\tgetServletResponse().setStatus(status.value());\n\t}","commit_id":"869f6bef4086fe66d642a7e4f841c5716e6e45a3","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n\t\tpublic void headerAdded(String name, String value) {\n\t\t\tresponse.addHeader(name, value);\n\t\t}","id":50513,"modified_method":"@Override\n\t\tpublic void headerAdded(String name, String value) {\n\t\t\tgetServletResponse().addHeader(name, value);\n\t\t}","commit_id":"869f6bef4086fe66d642a7e4f841c5716e6e45a3","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n\tpublic URI getURI() {\n\t\ttry {\n\t\t\treturn new URI(this.exchange.getRequestScheme(), null, this.exchange.getHostName(),\n\t\t\t\t\tthis.exchange.getHostPort(), this.exchange.getRequestURI(),\n\t\t\t\t\tthis.exchange.getQueryString(), null);\n\t\t}\n\t\tcatch (URISyntaxException ex) {\n\t\t\tthrow new IllegalStateException(\"Could not get URI: \" + ex.getMessage(), ex);\n\t\t}\n\t}","id":50514,"modified_method":"@Override\n\tpublic URI getURI() {\n\t\tif (this.uri == null) {\n\t\t\ttry {\n\t\t\t\treturn new URI(this.getUndertowExchange().getRequestScheme(), null,\n\t\t\t\t\t\tthis.getUndertowExchange().getHostName(),\n\t\t\t\t\t\tthis.getUndertowExchange().getHostPort(),\n\t\t\t\t\t\tthis.getUndertowExchange().getRequestURI(),\n\t\t\t\t\t\tthis.getUndertowExchange().getQueryString(), null);\n\t\t\t}\n\t\t\tcatch (URISyntaxException ex) {\n\t\t\t\tthrow new IllegalStateException(\"Could not get URI: \" + ex.getMessage(), ex);\n\t\t\t}\n\t\t}\n\t\treturn this.uri;\n\t}","commit_id":"869f6bef4086fe66d642a7e4f841c5716e6e45a3","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n\tpublic HttpHeaders getHeaders() {\n\t\tif (this.headers == null) {\n\t\t\tthis.headers = new HttpHeaders();\n\t\t\tfor (HeaderValues headerValues : this.exchange.getRequestHeaders()) {\n\t\t\t\tfor (String value : headerValues) {\n\t\t\t\t\tthis.headers.add(headerValues.getHeaderName().toString(), value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this.headers;\n\t}","id":50515,"modified_method":"@Override\n\tpublic HttpHeaders getHeaders() {\n\t\tif (this.headers == null) {\n\t\t\tthis.headers = new HttpHeaders();\n\t\t\tfor (HeaderValues values : this.getUndertowExchange().getRequestHeaders()) {\n\t\t\t\tthis.headers.put(values.getHeaderName().toString(), values);\n\t\t\t}\n\t\t}\n\t\treturn this.headers;\n\t}","commit_id":"869f6bef4086fe66d642a7e4f841c5716e6e45a3","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n\tpublic HttpMethod getMethod() {\n\t\treturn HttpMethod.valueOf(this.exchange.getRequestMethod().toString());\n\t}","id":50516,"modified_method":"@Override\n\tpublic HttpMethod getMethod() {\n\t\treturn HttpMethod.valueOf(this.getUndertowExchange().getRequestMethod().toString());\n\t}","commit_id":"869f6bef4086fe66d642a7e4f841c5716e6e45a3","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n\t\tpublic void headerAdded(String name, String value) {\n\t\t\texchange.getResponseHeaders().add(HttpString.tryFromString(name), value);\n\t\t}","id":50517,"modified_method":"@Override\n\t\tpublic void headerAdded(String name, String value) {\n\t\t\tHttpString headerName = HttpString.tryFromString(name);\n\t\t\tgetUndertowExchange().getResponseHeaders().add(headerName, value);\n\t\t}","commit_id":"869f6bef4086fe66d642a7e4f841c5716e6e45a3","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n\tpublic void setStatusCode(HttpStatus status) {\n\t\tAssert.notNull(status);\n\t\tthis.exchange.setStatusCode(status.value());\n\t}","id":50518,"modified_method":"@Override\n\tpublic void setStatusCode(HttpStatus status) {\n\t\tAssert.notNull(status);\n\t\tgetUndertowExchange().setStatusCode(status.value());\n\t}","commit_id":"869f6bef4086fe66d642a7e4f841c5716e6e45a3","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"public UndertowServerHttpResponse(HttpServerExchange exchange) {\n\t\tAssert.notNull(exchange, \"'exchange' is required.\");\n\t\tthis.exchange = exchange;\n\t\tthis.headers = initHttpHeaders();\n\t}","id":50519,"modified_method":"public UndertowServerHttpResponse(HttpServerExchange exchange) {\n\t\tAssert.notNull(exchange, \"'exchange' is required.\");\n\t\tthis.exchange = exchange;\n\t\tthis.headers = new ExtendedHttpHeaders(new UndertowHeaderChangeListener());\n\t}","commit_id":"869f6bef4086fe66d642a7e4f841c5716e6e45a3","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n\tpublic Publisher<Void> setBody(Publisher<ByteBuffer> publisher) {\n\t\treturn Publishers.lift(publisher, new WriteWithOperator<>(writePublisher ->\n\t\t\t\t(subscriber -> writePublisher.subscribe(bodySubscriber))));\n\t}","id":50520,"modified_method":"@Override\n\tpublic Publisher<Void> setBody(Publisher<ByteBuffer> publisher) {\n\t\treturn Publishers.lift(publisher, new WriteWithOperator<>(this::setBodyInternal));\n\t}","commit_id":"869f6bef4086fe66d642a7e4f841c5716e6e45a3","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n\t\tpublic void headerPut(String key, List<String> values) {\n\t\t\texchange.getResponseHeaders().putAll(HttpString.tryFromString(key), values);\n\t\t}","id":50521,"modified_method":"@Override\n\t\tpublic void headerPut(String key, List<String> values) {\n\t\t\tHttpString headerName = HttpString.tryFromString(key);\n\t\t\tgetUndertowExchange().getResponseHeaders().putAll(headerName, values);\n\t\t}","commit_id":"869f6bef4086fe66d642a7e4f841c5716e6e45a3","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n\t\tpublic void headerRemoved(String key) {\n\t\t\texchange.getResponseHeaders().remove(key);\n\t\t}","id":50522,"modified_method":"@Override\n\t\tpublic void headerRemoved(String key) {\n\t\t\tgetUndertowExchange().getResponseHeaders().remove(key);\n\t\t}","commit_id":"869f6bef4086fe66d642a7e4f841c5716e6e45a3","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"private Model(boolean withAllStyles) {\n      myAllFonts = FontInfo.getAll(withAllStyles);\n      myMonoFonts = new ArrayList<FontInfo>();\n      for (FontInfo info : myAllFonts) {\n        if (info.isMonospaced()) {\n          myMonoFonts.add(info);\n        }\n      }\n    }","id":50523,"modified_method":"private Model(boolean withAllStyles) {\n      Application application = ApplicationManager.getApplication();\n      if (application == null || application.isUnitTestMode()) {\n        setFonts(FontInfo.getAll(withAllStyles));\n      }\n      else {\n        application.executeOnPooledThread(new Runnable() {\n          @Override\n          public void run() {\n            List<FontInfo> allFonts = FontInfo.getAll(withAllStyles);\n            application.invokeLater(new Runnable() {\n              @Override\n              public void run() {\n                setFonts(allFonts);\n                updateSelectedItem();\n              }\n            }, application.getAnyModalityState());\n          }\n        });\n      }\n    }","commit_id":"4e3ba12bfb0fa04cd8efd7d732892218637eaa33","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void setMonospacedOnly(boolean monospaced) {\n    if (myModel.myMonospacedOnly != monospaced) {\n      myModel.myMonospacedOnly = monospaced;\n      Object item = myModel.getSelectedItem();\n      myModel.setSelectedItem(null);\n      myModel.setSelectedItem(item);\n    }\n  }","id":50524,"modified_method":"public void setMonospacedOnly(boolean monospaced) {\n    if (myModel.myMonospacedOnly != monospaced) {\n      myModel.myMonospacedOnly = monospaced;\n      myModel.updateSelectedItem();\n    }\n  }","commit_id":"4e3ba12bfb0fa04cd8efd7d732892218637eaa33","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n   * Lists all datasets.\n   *\n   * @return list of {@link DatasetSpecification}.\n   * @throws IOException if a network error occurred\n   * @throws UnauthorizedException if the request is not authorized successfully in the gateway server\n   */\n  public List<DatasetSpecificationSummary> list() throws IOException, UnauthorizedException {\n    URL url = config.resolveNamespacedURLV3(\"data/datasets\");\n    HttpResponse response = restClient.execute(HttpMethod.GET, url, config.getAccessToken());\n    return ObjectResponse.fromJsonBody(response,\n                                       new TypeToken<List<DatasetSpecificationSummary>>() { }).getResponseObject();\n  }","id":50525,"modified_method":"/**\n   * Lists all datasets.\n   *\n   * @return list of {@link DatasetSpecificationSummary}.\n   * @throws IOException if a network error occurred\n   * @throws UnauthorizedException if the request is not authorized successfully in the gateway server\n   */\n  public List<DatasetSpecificationSummary> list() throws IOException, UnauthorizedException {\n    URL url = config.resolveNamespacedURLV3(\"data/datasets\");\n    HttpResponse response = restClient.execute(HttpMethod.GET, url, config.getAccessToken());\n    return ObjectResponse.fromJsonBody(response,\n                                       new TypeToken<List<DatasetSpecificationSummary>>() { }).getResponseObject();\n  }","commit_id":"33f8b5da13b459129b91deb8188653a168d41b45","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n  public void testAll() throws Exception {\n    int numBaseModules = moduleClient.list().size();\n    int numBaseTypes = typeClient.list().size();\n\n    LOG.info(\"Adding Dataset module\");\n    File moduleJarFile = createAppJarFile(StandaloneDatasetModule.class);\n    moduleClient.add(StandaloneDatasetModule.NAME, StandaloneDatasetModule.class.getName(), moduleJarFile);\n    moduleClient.waitForExists(StandaloneDatasetModule.NAME, 30, TimeUnit.SECONDS);\n    Assert.assertEquals(numBaseModules + 1, moduleClient.list().size());\n    Assert.assertEquals(numBaseTypes + 2, typeClient.list().size());\n\n    LOG.info(\"Checking that the new Dataset module exists\");\n    DatasetModuleMeta datasetModuleMeta = moduleClient.get(StandaloneDatasetModule.NAME);\n    Assert.assertNotNull(datasetModuleMeta);\n    Assert.assertEquals(StandaloneDatasetModule.NAME, datasetModuleMeta.getName());\n\n    LOG.info(\"Checking that the new Dataset module does not exist in a different namespace\");\n    clientConfig.setNamespace(OTHER_NAMESPACE);\n    try {\n      moduleClient.get(StandaloneDatasetModule.NAME);\n      Assert.fail(\"datasetModule found in namespace other than one in which it was expected\");\n    } catch (DatasetModuleNotFoundException expected) {\n    }\n    clientConfig.setNamespace(TEST_NAMESPACE);\n\n    LOG.info(\"Checking that the new Dataset type exists\");\n    typeClient.waitForExists(StandaloneDataset.TYPE_NAME, 5, TimeUnit.SECONDS);\n    DatasetTypeMeta datasetTypeMeta = typeClient.get(StandaloneDataset.TYPE_NAME);\n    Assert.assertNotNull(datasetTypeMeta);\n    Assert.assertEquals(StandaloneDataset.TYPE_NAME, datasetTypeMeta.getName());\n\n    datasetTypeMeta = typeClient.get(StandaloneDataset.class.getName());\n    Assert.assertNotNull(datasetTypeMeta);\n    Assert.assertEquals(StandaloneDataset.class.getName(), datasetTypeMeta.getName());\n\n    LOG.info(\"Checking that the new Dataset module does not exist in a different namespace\");\n    clientConfig.setNamespace(OTHER_NAMESPACE);\n    try {\n      typeClient.get(StandaloneDataset.class.getName());\n      Assert.fail(\"datasetType found in namespace other than one in which it was expected\");\n    } catch (DatasetTypeNotFoundException expected) {\n    }\n    clientConfig.setNamespace(TEST_NAMESPACE);\n\n    LOG.info(\"Creating, truncating, and deleting dataset of new Dataset type\");\n    // Before creating dataset, there are some system datasets already exist\n    int numBaseDataset = datasetClient.list().size();\n\n    datasetClient.create(\"testDataset\", StandaloneDataset.TYPE_NAME);\n    Assert.assertEquals(numBaseDataset + 1, datasetClient.list().size());\n    datasetClient.truncate(\"testDataset\");\n    datasetClient.delete(\"testDataset\");\n    datasetClient.waitForDeleted(\"testDataset\", 10, TimeUnit.SECONDS);\n    Assert.assertEquals(numBaseDataset, datasetClient.list().size());\n\n    LOG.info(\"Creating and deleting multiple Datasets\");\n    for (int i = 1; i <= 3; i++) {\n      datasetClient.create(\"testDataset\" + i, StandaloneDataset.TYPE_NAME);\n    }\n    Assert.assertEquals(numBaseDataset + 3, datasetClient.list().size());\n    for (int i = 1; i <= 3; i++) {\n      datasetClient.delete(\"testDataset\" + i);\n    }\n    Assert.assertEquals(numBaseDataset, datasetClient.list().size());\n\n    LOG.info(\"Deleting Dataset module\");\n    moduleClient.delete(StandaloneDatasetModule.NAME);\n    Assert.assertEquals(numBaseModules, moduleClient.list().size());\n    Assert.assertEquals(numBaseTypes, typeClient.list().size());\n\n    LOG.info(\"Adding Dataset module and then deleting all Dataset modules\");\n    moduleClient.add(\"testModule1\", StandaloneDatasetModule.class.getName(), moduleJarFile);\n    Assert.assertEquals(numBaseModules + 1, moduleClient.list().size());\n    Assert.assertEquals(numBaseTypes + 2, typeClient.list().size());\n\n    moduleClient.deleteAll();\n    Assert.assertEquals(numBaseModules, moduleClient.list().size());\n    Assert.assertEquals(numBaseTypes, typeClient.list().size());\n  }","id":50526,"modified_method":"@Test\n  public void testAll() throws Exception {\n    int numBaseModules = moduleClient.list().size();\n    int numBaseTypes = typeClient.list().size();\n\n    LOG.info(\"Adding Dataset module\");\n    File moduleJarFile = createAppJarFile(StandaloneDatasetModule.class);\n    moduleClient.add(StandaloneDatasetModule.NAME, StandaloneDatasetModule.class.getName(), moduleJarFile);\n    moduleClient.waitForExists(StandaloneDatasetModule.NAME, 30, TimeUnit.SECONDS);\n    Assert.assertEquals(numBaseModules + 1, moduleClient.list().size());\n    Assert.assertEquals(numBaseTypes + 2, typeClient.list().size());\n\n    LOG.info(\"Checking that the new Dataset module exists\");\n    DatasetModuleMeta datasetModuleMeta = moduleClient.get(StandaloneDatasetModule.NAME);\n    Assert.assertNotNull(datasetModuleMeta);\n    Assert.assertEquals(StandaloneDatasetModule.NAME, datasetModuleMeta.getName());\n\n    LOG.info(\"Checking that the new Dataset module does not exist in a different namespace\");\n    clientConfig.setNamespace(OTHER_NAMESPACE);\n    try {\n      moduleClient.get(StandaloneDatasetModule.NAME);\n      Assert.fail(\"datasetModule found in namespace other than one in which it was expected\");\n    } catch (DatasetModuleNotFoundException expected) {\n    }\n    clientConfig.setNamespace(TEST_NAMESPACE);\n\n    LOG.info(\"Checking that the new Dataset type exists\");\n    typeClient.waitForExists(StandaloneDataset.TYPE_NAME, 5, TimeUnit.SECONDS);\n    DatasetTypeMeta datasetTypeMeta = typeClient.get(StandaloneDataset.TYPE_NAME);\n    Assert.assertNotNull(datasetTypeMeta);\n    Assert.assertEquals(StandaloneDataset.TYPE_NAME, datasetTypeMeta.getName());\n\n    datasetTypeMeta = typeClient.get(StandaloneDataset.class.getName());\n    Assert.assertNotNull(datasetTypeMeta);\n    Assert.assertEquals(StandaloneDataset.class.getName(), datasetTypeMeta.getName());\n\n    LOG.info(\"Checking that the new Dataset module does not exist in a different namespace\");\n    clientConfig.setNamespace(OTHER_NAMESPACE);\n    try {\n      typeClient.get(StandaloneDataset.class.getName());\n      Assert.fail(\"datasetType found in namespace other than one in which it was expected\");\n    } catch (DatasetTypeNotFoundException expected) {\n    }\n    clientConfig.setNamespace(TEST_NAMESPACE);\n\n    LOG.info(\"Creating, truncating, and deleting dataset of new Dataset type\");\n    // Before creating dataset, there are some system datasets already exist\n    int numBaseDataset = datasetClient.list().size();\n\n    datasetClient.create(\"testDataset\", StandaloneDataset.TYPE_NAME);\n    Assert.assertEquals(numBaseDataset + 1, datasetClient.list().size());\n    datasetClient.truncate(\"testDataset\");\n\n    DatasetMeta metaBefore = datasetClient.get(\"testDataset\");\n    Assert.assertEquals(0, metaBefore.getSpec().getProperties().size());\n\n    datasetClient.update(\"testDataset\", ImmutableMap.of(\"sdf\", \"foo\", \"abc\", \"123\"));\n    DatasetMeta metaAfter = datasetClient.get(\"testDataset\");\n    Assert.assertEquals(2, metaAfter.getSpec().getProperties().size());\n    Assert.assertTrue(metaAfter.getSpec().getProperties().containsKey(\"sdf\"));\n    Assert.assertTrue(metaAfter.getSpec().getProperties().containsKey(\"abc\"));\n    Assert.assertEquals(\"foo\", metaAfter.getSpec().getProperties().get(\"sdf\"));\n    Assert.assertEquals(\"123\", metaAfter.getSpec().getProperties().get(\"abc\"));\n\n    datasetClient.updateExisting(\"testDataset\", ImmutableMap.of(\"sdf\", \"fzz\"));\n    metaAfter = datasetClient.get(\"testDataset\");\n    Assert.assertEquals(2, metaAfter.getSpec().getProperties().size());\n    Assert.assertTrue(metaAfter.getSpec().getProperties().containsKey(\"sdf\"));\n    Assert.assertTrue(metaAfter.getSpec().getProperties().containsKey(\"abc\"));\n    Assert.assertEquals(\"fzz\", metaAfter.getSpec().getProperties().get(\"sdf\"));\n    Assert.assertEquals(\"123\", metaAfter.getSpec().getProperties().get(\"abc\"));\n\n    datasetClient.delete(\"testDataset\");\n    datasetClient.waitForDeleted(\"testDataset\", 10, TimeUnit.SECONDS);\n    Assert.assertEquals(numBaseDataset, datasetClient.list().size());\n\n    LOG.info(\"Creating and deleting multiple Datasets\");\n    for (int i = 1; i <= 3; i++) {\n      datasetClient.create(\"testDataset\" + i, StandaloneDataset.TYPE_NAME);\n    }\n    Assert.assertEquals(numBaseDataset + 3, datasetClient.list().size());\n    for (int i = 1; i <= 3; i++) {\n      datasetClient.delete(\"testDataset\" + i);\n    }\n    Assert.assertEquals(numBaseDataset, datasetClient.list().size());\n\n    LOG.info(\"Deleting Dataset module\");\n    moduleClient.delete(StandaloneDatasetModule.NAME);\n    Assert.assertEquals(numBaseModules, moduleClient.list().size());\n    Assert.assertEquals(numBaseTypes, typeClient.list().size());\n\n    LOG.info(\"Adding Dataset module and then deleting all Dataset modules\");\n    moduleClient.add(\"testModule1\", StandaloneDatasetModule.class.getName(), moduleJarFile);\n    Assert.assertEquals(numBaseModules + 1, moduleClient.list().size());\n    Assert.assertEquals(numBaseTypes + 2, typeClient.list().size());\n\n    moduleClient.deleteAll();\n    Assert.assertEquals(numBaseModules, moduleClient.list().size());\n    Assert.assertEquals(numBaseTypes, typeClient.list().size());\n  }","commit_id":"33f8b5da13b459129b91deb8188653a168d41b45","url":"https://github.com/caskdata/cdap"},{"original_method":"@Inject\n  public DatasetCommands(Injector injector) {\n    super(\n      ImmutableList.<Command>builder()\n        .add(injector.getInstance(ListDatasetInstancesCommand.class))\n        .add(injector.getInstance(ListDatasetModulesCommand.class))\n        .add(injector.getInstance(ListDatasetTypesCommand.class))\n        .add(injector.getInstance(CreateDatasetInstanceCommand.class))\n        .add(injector.getInstance(DeleteDatasetInstanceCommand.class))\n        .add(injector.getInstance(TruncateDatasetInstanceCommand.class))\n        .add(injector.getInstance(DescribeDatasetModuleCommand.class))\n        .add(injector.getInstance(DeployDatasetModuleCommand.class))\n        .add(injector.getInstance(DeleteDatasetModuleCommand.class))\n        .add(injector.getInstance(DescribeDatasetTypeCommand.class))\n      .build());\n  }","id":50527,"modified_method":"@Inject\n  public DatasetCommands(Injector injector) {\n    super(\n      ImmutableList.<Command>builder()\n        .add(injector.getInstance(ListDatasetInstancesCommand.class))\n        .add(injector.getInstance(ListDatasetModulesCommand.class))\n        .add(injector.getInstance(ListDatasetTypesCommand.class))\n        .add(injector.getInstance(DescribeDatasetInstanceCommand.class))\n        .add(injector.getInstance(SetDatasetInstancePropertiesCommand.class))\n        .add(injector.getInstance(CreateDatasetInstanceCommand.class))\n        .add(injector.getInstance(DeleteDatasetInstanceCommand.class))\n        .add(injector.getInstance(TruncateDatasetInstanceCommand.class))\n        .add(injector.getInstance(DescribeDatasetModuleCommand.class))\n        .add(injector.getInstance(DeployDatasetModuleCommand.class))\n        .add(injector.getInstance(DeleteDatasetModuleCommand.class))\n        .add(injector.getInstance(DescribeDatasetTypeCommand.class))\n        .build());\n  }","commit_id":"33f8b5da13b459129b91deb8188653a168d41b45","url":"https://github.com/caskdata/cdap"},{"original_method":"private DatasetInstanceConfiguration  getInstanceConfiguration(HttpRequest request) {\n    Reader reader = new InputStreamReader(new ChannelBufferInputStream(request.getContent()));\n    DatasetInstanceConfiguration creationProperties = GSON.fromJson(reader, DatasetInstanceConfiguration.class);\n    if (creationProperties.getProperties().containsKey(Table.PROPERTY_TTL)) {\n      long ttl = TimeUnit.SECONDS.toMillis(Long.parseLong\n        (creationProperties.getProperties().get(Table.PROPERTY_TTL)));\n      creationProperties.getProperties().put(Table.PROPERTY_TTL, String.valueOf(ttl));\n    }\n    return  creationProperties;\n  }","id":50528,"modified_method":"private DatasetInstanceConfiguration  getInstanceConfiguration(HttpRequest request) {\n    Reader reader = new InputStreamReader(new ChannelBufferInputStream(request.getContent()), Charsets.UTF_8);\n    DatasetInstanceConfiguration creationProperties = GSON.fromJson(reader, DatasetInstanceConfiguration.class);\n    fixProperties(creationProperties.getProperties());\n    return creationProperties;\n  }","commit_id":"33f8b5da13b459129b91deb8188653a168d41b45","url":"https://github.com/caskdata/cdap"},{"original_method":"public void updateInstance(String datasetInstanceName, DatasetProperties props)\n    throws DatasetManagementException {\n    DatasetMeta meta = getInstance(datasetInstanceName);\n    DatasetInstanceConfiguration creationProperties =\n      new DatasetInstanceConfiguration(meta.getSpec().getType(), props.getProperties());\n\n    HttpResponse response = doPut(\"datasets/\" + datasetInstanceName + \"/properties\", GSON.toJson(creationProperties));\n\n    if (HttpResponseStatus.CONFLICT.getCode() == response.getResponseCode()) {\n      throw new InstanceConflictException(String.format(\"Failed to add instance %s due to conflict, details: %s\",\n                                                        datasetInstanceName, getDetails(response)));\n    }\n    if (HttpResponseStatus.OK.getCode() != response.getResponseCode()) {\n      throw new DatasetManagementException(String.format(\"Failed to add instance %s, details: %s\",\n                                                         datasetInstanceName, getDetails(response)));\n    }\n  }","id":50529,"modified_method":"public void updateInstance(String datasetInstanceName, DatasetProperties props)\n    throws DatasetManagementException {\n\n    HttpResponse response = doPut(\"datasets/\" + datasetInstanceName + \"/properties\",\n                                  GSON.toJson(props.getProperties()));\n\n    if (HttpResponseStatus.CONFLICT.getCode() == response.getResponseCode()) {\n      throw new InstanceConflictException(String.format(\"Failed to add instance %s due to conflict, details: %s\",\n                                                        datasetInstanceName, getDetails(response)));\n    }\n    if (HttpResponseStatus.OK.getCode() != response.getResponseCode()) {\n      throw new DatasetManagementException(String.format(\"Failed to add instance %s, details: %s\",\n                                                         datasetInstanceName, getDetails(response)));\n    }\n  }","commit_id":"33f8b5da13b459129b91deb8188653a168d41b45","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n    public String toString() {\n        StringBuilder builder = new StringBuilder();\n        builder.append(id).append(Arrays.toString(keys)).append(getFlagsAsString());\n        return builder.toString();\n    }","id":50530,"modified_method":"@Override\n    public String toString() {\n        StringBuilder builder = new StringBuilder();\n        builder.append(id).append(' ').append(Arrays.toString(keys)).append(' ').append(getFlagsAsString());\n        return builder.toString();\n    }","commit_id":"0b7a0ea054e008beb77d0c6693b4b7d24115a6fb","url":"https://github.com/openstreetmap/josm"},{"original_method":"private static AddPrimitivesCommand createNewPrimitives(PrimitiveTransferData pasteBuffer, EastNorth offset, OsmDataLayer layer) {\n        // Make a copy of pasteBuffer and map from old id to copied data id\n        List<PrimitiveData> bufferCopy = new ArrayList<>();\n        List<PrimitiveData> toSelect = new ArrayList<>();\n        EnumMap<OsmPrimitiveType, Map<Long, Long>> newIds = generateNewPrimitives(pasteBuffer, bufferCopy, toSelect);\n\n        // Update references in copied buffer\n        for (PrimitiveData data : bufferCopy) {\n            if (data instanceof NodeData) {\n                NodeData nodeData = (NodeData) data;\n                nodeData.setEastNorth(nodeData.getEastNorth().add(offset));\n            } else if (data instanceof WayData) {\n                updateNodes(newIds.get(OsmPrimitiveType.NODE), data);\n            } else if (data instanceof RelationData) {\n                updateMembers(newIds, data);\n            }\n        }\n        return new AddPrimitivesCommand(bufferCopy, toSelect, layer);\n    }","id":50531,"modified_method":"private static AddPrimitivesCommand createNewPrimitives(PrimitiveTransferData pasteBuffer, EastNorth offset, OsmDataLayer layer) {\n        // Make a copy of pasteBuffer and map from old id to copied data id\n        List<PrimitiveData> bufferCopy = new ArrayList<>();\n        List<PrimitiveData> toSelect = new ArrayList<>();\n        EnumMap<OsmPrimitiveType, Map<Long, Long>> newIds = generateNewPrimitives(pasteBuffer, bufferCopy, toSelect);\n\n        // Update references in copied buffer\n        for (PrimitiveData data : bufferCopy) {\n            try {\n                if (data instanceof NodeData) {\n                    NodeData nodeData = (NodeData) data;\n                    nodeData.setEastNorth(nodeData.getEastNorth().add(offset));\n                } else if (data instanceof WayData) {\n                    updateNodes(newIds.get(OsmPrimitiveType.NODE), data);\n                } else if (data instanceof RelationData) {\n                    updateMembers(newIds, data);\n                }\n            } catch (RuntimeException e) {\n                throw BugReport.intercept(e).put(\"data\", data);\n            }\n        }\n        return new AddPrimitivesCommand(bufferCopy, toSelect, layer);\n    }","commit_id":"0b7a0ea054e008beb77d0c6693b4b7d24115a6fb","url":"https://github.com/openstreetmap/josm"},{"original_method":"private static EnumMap<OsmPrimitiveType, Map<Long, Long>> generateNewPrimitives(PrimitiveTransferData pasteBuffer,\n            List<PrimitiveData> bufferCopy, List<PrimitiveData> toSelect) {\n        EnumMap<OsmPrimitiveType, Map<Long, Long>> newIds = new EnumMap<>(OsmPrimitiveType.class);\n        newIds.put(OsmPrimitiveType.NODE, new HashMap<Long, Long>());\n        newIds.put(OsmPrimitiveType.WAY, new HashMap<Long, Long>());\n        newIds.put(OsmPrimitiveType.RELATION, new HashMap<Long, Long>());\n\n        for (PrimitiveData data : pasteBuffer.getAll()) {\n            if (data.isIncomplete()) {\n                continue;\n            }\n            PrimitiveData copy = data.makeCopy();\n            // don't know why this is reset, but we need it to not crash on copying incomplete nodes.\n            boolean wasIncomplete = copy.isIncomplete();\n            copy.clearOsmMetadata();\n            copy.setIncomplete(wasIncomplete);\n            newIds.get(data.getType()).put(data.getUniqueId(), copy.getUniqueId());\n\n            bufferCopy.add(copy);\n            if (pasteBuffer.getDirectlyAdded().contains(data)) {\n                toSelect.add(copy);\n            }\n        }\n        return newIds;\n    }","id":50532,"modified_method":"private static EnumMap<OsmPrimitiveType, Map<Long, Long>> generateNewPrimitives(PrimitiveTransferData pasteBuffer,\n            List<PrimitiveData> bufferCopy, List<PrimitiveData> toSelect) {\n        EnumMap<OsmPrimitiveType, Map<Long, Long>> newIds = new EnumMap<>(OsmPrimitiveType.class);\n        newIds.put(OsmPrimitiveType.NODE, new HashMap<Long, Long>());\n        newIds.put(OsmPrimitiveType.WAY, new HashMap<Long, Long>());\n        newIds.put(OsmPrimitiveType.RELATION, new HashMap<Long, Long>());\n\n        for (PrimitiveData data : pasteBuffer.getAll()) {\n            if (data.isIncomplete() || !data.isVisible()) {\n                continue;\n            }\n            PrimitiveData copy = data.makeCopy();\n            // don't know why this is reset, but we need it to not crash on copying incomplete nodes.\n            boolean wasIncomplete = copy.isIncomplete();\n            copy.clearOsmMetadata();\n            copy.setIncomplete(wasIncomplete);\n            newIds.get(data.getType()).put(data.getUniqueId(), copy.getUniqueId());\n\n            bufferCopy.add(copy);\n            if (pasteBuffer.getDirectlyAdded().contains(data)) {\n                toSelect.add(copy);\n            }\n        }\n        return newIds;\n    }","commit_id":"0b7a0ea054e008beb77d0c6693b4b7d24115a6fb","url":"https://github.com/openstreetmap/josm"},{"original_method":"/**\n     * Tests wheter this set contains any primitives that have invalid data.\n     * @return <code>true<\/code> if invalid data is contained in this set.\n     */\n    public boolean hasIncompleteData() {\n        for (PrimitiveData pd : getAll()) {\n            if (pd.isIncomplete()) {\n                return true;\n            }\n        }\n        return false;\n    }","id":50533,"modified_method":"/**\n     * Tests wheter this set contains any primitives that have invalid data.\n     * @return <code>true<\/code> if invalid data is contained in this set.\n     */\n    public boolean hasIncompleteData() {\n        return getAll().stream().anyMatch(p -> p.isIncomplete() || !p.isVisible());\n    }","commit_id":"0b7a0ea054e008beb77d0c6693b4b7d24115a6fb","url":"https://github.com/openstreetmap/josm"},{"original_method":"/**\n     * Stops all daemona, if any is running.\n     */\n    public void stop() {\n        Connection<Object> connection = connector.maybeConnect(false);\n        if (connection == null) {\n            LOGGER.lifecycle(\"No Gradle daemons are running.\");\n            return;\n        }\n\n        //iterate and stop all daemons\n        while (connection != null) {\n            run(new Stop(clientMetaData), connection);\n            LOGGER.lifecycle(\"Gradle daemon stopped.\");\n            connection = connector.maybeConnect(false);\n        }\n    }","id":50534,"modified_method":"/**\n     * Stops all daemona, if any is running.\n     */\n    public void stop() {\n        Connection<Object> connection = connector.maybeConnect();\n        if (connection == null) {\n            LOGGER.lifecycle(\"No Gradle daemons are running.\");\n            return;\n        }\n\n        //iterate and stop all daemons\n        while (connection != null) {\n            run(new Stop(clientMetaData), connection);\n            LOGGER.lifecycle(\"Gradle daemon stopped.\");\n            connection = connector.maybeConnect();\n        }\n    }","commit_id":"6151b34e7daa82a35f9ba0e68ace074b675e2b6f","url":"https://github.com/gradle/gradle"},{"original_method":"/**\n     * Connects to the daemon, starting it if required.\n     *\n     * @return The connection. Never returns null.\n     */\n    public Connection<Object> connect() {\n        Connection<Object> connection = maybeConnect(true);\n        if (connection != null) {\n            return connection;\n        }\n\n        LOGGER.info(\"Starting Gradle daemon\");\n        startDaemon();\n        Date expiry = new Date(System.currentTimeMillis() + 30000L);\n        do {\n            connection = maybeConnect(true);\n            if (connection != null) {\n                return connection;\n            }\n            try {\n                Thread.sleep(200L);\n            } catch (InterruptedException e) {\n                throw UncheckedException.asUncheckedException(e);\n            }\n        } while (System.currentTimeMillis() < expiry.getTime());\n\n        throw new GradleException(\"Timeout waiting to connect to Gradle daemon.\");\n    }","id":50535,"modified_method":"/**\n     * Connects to the daemon, starting it if required.\n     *\n     * @return The connection. Never returns null.\n     */\n    public Connection<Object> connect() {\n        Connection<Object> connection = findConnection(daemonRegistry.getIdle());\n        if (connection != null) {\n            return connection;\n        }\n\n        LOGGER.info(\"Starting Gradle daemon\");\n        startDaemon();\n        Date expiry = new Date(System.currentTimeMillis() + 30000L);\n        do {\n            connection = findConnection(daemonRegistry.getIdle());\n            if (connection != null) {\n                return connection;\n            }\n            try {\n                Thread.sleep(200L);\n            } catch (InterruptedException e) {\n                throw UncheckedException.asUncheckedException(e);\n            }\n        } while (System.currentTimeMillis() < expiry.getTime());\n\n        throw new GradleException(\"Timeout waiting to connect to Gradle daemon.\");\n    }","commit_id":"6151b34e7daa82a35f9ba0e68ace074b675e2b6f","url":"https://github.com/gradle/gradle"},{"original_method":"/**\n     * Attempts to connect to the daemon, if it is running.\n     *\n     * @param idleOnly - get connections only to idle daemons. TODO SF - this is ugly. Refactor.\n     * @return The connection, or null if not running.\n     */\n    public Connection<Object> maybeConnect(boolean idleOnly) {\n        List<DaemonStatus> statuses = idleOnly? daemonRegistry.getIdle() : daemonRegistry.getAll();\n        for (DaemonStatus status : statuses) {\n            try {\n                return new TcpOutgoingConnector<Object>(new DefaultMessageSerializer<Object>(getClass().getClassLoader())).connect(status.getAddress());\n            } catch (ConnectException e) {\n                // Ignore\n            }\n        }\n        return null;\n    }","id":50536,"modified_method":"/**\n     * Attempts to connect to the daemon, if it is running.\n     *\n     * @return The connection, or null if not running.\n     */\n    public Connection<Object> maybeConnect() {\n        return findConnection(daemonRegistry.getAll());\n    }","commit_id":"6151b34e7daa82a35f9ba0e68ace074b675e2b6f","url":"https://github.com/gradle/gradle"},{"original_method":"private void configureArchives(final Project project, final JavaPluginConvention pluginConvention) {\n        project.getTasks().getByName(JavaBasePlugin.CHECK_TASK_NAME).dependsOn(TEST_TASK_NAME);\n        Jar jar = project.getTasks().add(JAR_TASK_NAME, Jar.class);\n        jar.getManifest().from(pluginConvention.getManifest());\n        jar.setDescription(\"Generates a jar archive with all the compiled classes.\");\n        jar.setDescription(BasePlugin.BUILD_GROUP);\n        jar.from(pluginConvention.getSourceSets().getByName(SourceSet.MAIN_SOURCE_SET_NAME).getClasses());\n        jar.getMetaInf().from(new Callable() {\n            public Object call() throws Exception {\n                return pluginConvention.getMetaInf();\n            }\n        });\n\n        project.getConfigurations().getByName(Dependency.ARCHIVES_CONFIGURATION).addArtifact(new ArchivePublishArtifact(\n                jar));\n    }","id":50537,"modified_method":"private void configureArchives(final Project project, final JavaPluginConvention pluginConvention) {\n        project.getTasks().getByName(JavaBasePlugin.CHECK_TASK_NAME).dependsOn(TEST_TASK_NAME);\n        Jar jar = project.getTasks().add(JAR_TASK_NAME, Jar.class);\n        jar.getManifest().from(pluginConvention.getManifest());\n        jar.setDescription(\"Generates a jar archive with all the compiled classes.\");\n        jar.setTaskGroup(BasePlugin.BUILD_GROUP);\n        jar.from(pluginConvention.getSourceSets().getByName(SourceSet.MAIN_SOURCE_SET_NAME).getClasses());\n        jar.getMetaInf().from(new Callable() {\n            public Object call() throws Exception {\n                return pluginConvention.getMetaInf();\n            }\n        });\n\n        project.getConfigurations().getByName(Dependency.ARCHIVES_CONFIGURATION).addArtifact(new ArchivePublishArtifact(\n                jar));\n    }","commit_id":"b2076be3ed91af22b679bef49963640ab999139d","url":"https://github.com/gradle/gradle"},{"original_method":"public void apply(Project project) {\n        project.getPlugins().apply(ReportingBasePlugin.class);\n        project.getConvention().getPlugins().put(\"projectReports\", new ProjectReportsPluginConvention(project));\n\n        TaskReportTask taskReportTask = project.getTasks().add(TASK_REPORT, TaskReportTask.class);\n        taskReportTask.setDescription(\"Generates a report about your tasks.\");\n        taskReportTask.conventionMapping(\"outputFile\", new ConventionValue() {\n            public Object getValue(Convention convention, IConventionAware conventionAwareObject) {\n                return new File(convention.getPlugin(ProjectReportsPluginConvention.class).getProjectReportDir(), \"tasks.txt\");\n            }\n        });\n        taskReportTask.conventionMapping(\"projects\", new ConventionValue() {\n            public Object getValue(Convention convention, IConventionAware conventionAwareObject) {\n                return convention.getPlugin(ProjectReportsPluginConvention.class).getProjects();\n            }\n        });\n\n        PropertyReportTask propertyReportTask = project.getTasks().add(PROPERTY_REPORT, PropertyReportTask.class);\n        propertyReportTask.setDescription(\"Generates a report about your properties.\");\n        propertyReportTask.conventionMapping(\"outputFile\", new ConventionValue() {\n            public Object getValue(Convention convention, IConventionAware conventionAwareObject) {\n                return new File(convention.getPlugin(ProjectReportsPluginConvention.class).getProjectReportDir(), \"properties.txt\");\n            }\n        });\n        propertyReportTask.conventionMapping(\"projects\", new ConventionValue() {\n            public Object getValue(Convention convention, IConventionAware conventionAwareObject) {\n                return convention.getPlugin(ProjectReportsPluginConvention.class).getProjects();\n            }\n        });\n\n        DependencyReportTask dependencyReportTask = project.getTasks().add(DEPENDENCY_REPORT,\n                DependencyReportTask.class);\n        dependencyReportTask.setDescription(\"Generates a report about your library dependencies.\");\n        dependencyReportTask.conventionMapping(\"outputFile\", new ConventionValue() {\n            public Object getValue(Convention convention, IConventionAware conventionAwareObject) {\n                return new File(convention.getPlugin(ProjectReportsPluginConvention.class).getProjectReportDir(), \"dependencies.txt\");\n            }\n        });\n        dependencyReportTask.conventionMapping(\"projects\", new ConventionValue() {\n            public Object getValue(Convention convention, IConventionAware conventionAwareObject) {\n                return convention.getPlugin(ProjectReportsPluginConvention.class).getProjects();\n            }\n        });\n\n\n        Task projectReportTask = project.getTasks().add(PROJECT_REPORT);\n        projectReportTask.dependsOn(TASK_REPORT, PROPERTY_REPORT, DEPENDENCY_REPORT);\n        projectReportTask.setDescription(\"Generated a report about your project.\");\n        projectReportTask.setTaskGroup(\"reporting\");\n    }","id":50538,"modified_method":"public void apply(Project project) {\n        project.getPlugins().apply(ReportingBasePlugin.class);\n        project.getConvention().getPlugins().put(\"projectReports\", new ProjectReportsPluginConvention(project));\n\n        TaskReportTask taskReportTask = project.getTasks().add(TASK_REPORT, TaskReportTask.class);\n        taskReportTask.setDescription(\"Generates a report about your tasks.\");\n        taskReportTask.conventionMapping(\"outputFile\", new ConventionValue() {\n            public Object getValue(Convention convention, IConventionAware conventionAwareObject) {\n                return new File(convention.getPlugin(ProjectReportsPluginConvention.class).getProjectReportDir(), \"tasks.txt\");\n            }\n        });\n        taskReportTask.conventionMapping(\"projects\", new ConventionValue() {\n            public Object getValue(Convention convention, IConventionAware conventionAwareObject) {\n                return convention.getPlugin(ProjectReportsPluginConvention.class).getProjects();\n            }\n        });\n\n        PropertyReportTask propertyReportTask = project.getTasks().add(PROPERTY_REPORT, PropertyReportTask.class);\n        propertyReportTask.setDescription(\"Generates a report about your properties.\");\n        propertyReportTask.conventionMapping(\"outputFile\", new ConventionValue() {\n            public Object getValue(Convention convention, IConventionAware conventionAwareObject) {\n                return new File(convention.getPlugin(ProjectReportsPluginConvention.class).getProjectReportDir(), \"properties.txt\");\n            }\n        });\n        propertyReportTask.conventionMapping(\"projects\", new ConventionValue() {\n            public Object getValue(Convention convention, IConventionAware conventionAwareObject) {\n                return convention.getPlugin(ProjectReportsPluginConvention.class).getProjects();\n            }\n        });\n\n        DependencyReportTask dependencyReportTask = project.getTasks().add(DEPENDENCY_REPORT,\n                DependencyReportTask.class);\n        dependencyReportTask.setDescription(\"Generates a report about your library dependencies.\");\n        dependencyReportTask.conventionMapping(\"outputFile\", new ConventionValue() {\n            public Object getValue(Convention convention, IConventionAware conventionAwareObject) {\n                return new File(convention.getPlugin(ProjectReportsPluginConvention.class).getProjectReportDir(), \"dependencies.txt\");\n            }\n        });\n        dependencyReportTask.conventionMapping(\"projects\", new ConventionValue() {\n            public Object getValue(Convention convention, IConventionAware conventionAwareObject) {\n                return convention.getPlugin(ProjectReportsPluginConvention.class).getProjects();\n            }\n        });\n\n\n        Task projectReportTask = project.getTasks().add(PROJECT_REPORT);\n        projectReportTask.dependsOn(TASK_REPORT, PROPERTY_REPORT, DEPENDENCY_REPORT);\n        projectReportTask.setDescription(\"Generates a report about your project.\");\n        projectReportTask.setTaskGroup(\"reporting\");\n    }","commit_id":"b2076be3ed91af22b679bef49963640ab999139d","url":"https://github.com/gradle/gradle"},{"original_method":"private String getDescription(Task task) {\n        return GUtil.isTrue(task.getDescription()) ? \" - \" + task.getDescription() : \"\";\n    }","id":50539,"modified_method":"private String getDescription(TaskDetails task) {\n        return GUtil.isTrue(task.getDescription()) ? \" - \" + task.getDescription() : \"\";\n    }","commit_id":"b2076be3ed91af22b679bef49963640ab999139d","url":"https://github.com/gradle/gradle"},{"original_method":"/**\n     * Writes a task for the current project.\n     *\n     * @param task The task\n     */\n    public void addTask(Task task) {\n        SortedSet<String> sortedDependencies = new TreeSet<String>();\n        for (Task dependency : task.getTaskDependencies().getDependencies(task)) {\n            sortedDependencies.add(dependency.getPath());\n        }\n        getFormatter().format(\"%s%s%n\", task.getPath(), getDescription(task));\n        if (sortedDependencies.size() > 0) {\n            getFormatter().format(\"   -> %s%n\", GUtil.join(sortedDependencies, \", \"));\n        }\n        currentProjectHasTasks = true;\n    }","id":50540,"modified_method":"/**\n     * Writes a task for the current project.\n     *\n     * @param task The task\n     */\n    public void addTask(TaskDetails task) {\n        writeTask(task, \"\");\n        currentProjectHasTasks = true;\n    }","commit_id":"b2076be3ed91af22b679bef49963640ab999139d","url":"https://github.com/gradle/gradle"},{"original_method":"public void generate(Project project) throws IOException {\n        renderer.addDefaultTasks(project.getDefaultTasks());\n\n        Multimap<String, Task> groups = TreeMultimap.create();\n        for (Task task : project.getTasks().getAll()) {\n            if (GUtil.isTrue(task.getTaskGroup())) {\n                groups.put(task.getTaskGroup(), task);\n            }\n        }\n\n        for (String taskGroup : groups.keySet()) {\n            renderer.startTaskGroup(taskGroup);\n            for (Task task : groups.get(taskGroup)) {\n                renderer.addTask(task);\n            }\n        }\n\n        renderer.completeTasks();\n        for (Rule rule : project.getTasks().getRules()) {\n            renderer.addRule(rule);\n        }\n    }","id":50541,"modified_method":"public void generate(Project project) throws IOException {\n        renderer.addDefaultTasks(project.getDefaultTasks());\n\n        TaskReportModel model = new TaskReportModel();\n        model.calculate(project.getTasks().getAll());\n\n        for (String taskGroup : model.getGroups()) {\n            renderer.startTaskGroup(taskGroup);\n            for (TaskDetails task : model.getTasksForGroup(taskGroup)) {\n                renderer.addTask(task);\n                for (TaskDetails child : task.getChildren()) {\n                    renderer.addChildTask(child);\n                }\n            }\n        }\n\n        renderer.completeTasks();\n        for (Rule rule : project.getTasks().getRules()) {\n            renderer.addRule(rule);\n        }\n    }","commit_id":"b2076be3ed91af22b679bef49963640ab999139d","url":"https://github.com/gradle/gradle"},{"original_method":"private Task task(final String name, final String taskGroup) {\n        final Task task = context.mock(Task.class);\n        context.checking(new Expectations() {{\n            allowing(task).getName();\n            will(returnValue(name));\n            allowing(task).getTaskGroup();\n            will(returnValue(taskGroup));\n            allowing(task).compareTo(with(Matchers.notNullValue(Task.class)));\n            will(new Action() {\n                @Override\n                public Object invoke(Invocation invocation) throws Throwable {\n                    Task other = (Task) invocation.getParameter(0);\n                    return name.compareTo(other.getName());\n                }\n\n                @Override\n                public void describeTo(Description description) {\n                    description.appendText(\"compare to\");\n                }\n            });\n        }});\n\n        return task;\n    }","id":50542,"modified_method":"private Task task(String name) {\n        return task(name, null);\n    }","commit_id":"b2076be3ed91af22b679bef49963640ab999139d","url":"https://github.com/gradle/gradle"},{"original_method":"@Test\n    public void groupsTasksByTaskGroupAndPassesTasksToTheRenderer() throws IOException {\n        context.checking(new Expectations() {{\n            Task task1 = task(\"a\", \"group a\");\n            Task task2 = task(\"b\", \"group b\");\n            Task task3 = task(\"c\", \"group b\");\n\n            List<String> testDefaultTasks = toList(\"defaultTask1\", \"defaultTask2\");\n            allowing(project).getDefaultTasks();\n            will(returnValue(testDefaultTasks));\n\n            one(taskContainer).getAll();\n            will(returnValue(toLinkedSet(task2, task3, task1)));\n\n            allowing(taskContainer).getRules();\n            will(returnValue(toList()));\n\n            Sequence sequence = context.sequence(\"seq\");\n\n            one(renderer).addDefaultTasks(testDefaultTasks);\n            inSequence(sequence);\n\n            one(renderer).startTaskGroup(\"group a\");\n            inSequence(sequence);\n\n            one(renderer).addTask(task1);\n            inSequence(sequence);\n\n            one(renderer).startTaskGroup(\"group b\");\n            inSequence(sequence);\n\n            one(renderer).addTask(task2);\n            inSequence(sequence);\n\n            one(renderer).addTask(task3);\n            inSequence(sequence);\n\n            one(renderer).completeTasks();\n            inSequence(sequence);\n        }});\n\n        task.generate(project);\n    }","id":50543,"modified_method":"@Test\n    public void groupsTasksByTaskGroupAndPassesTasksToTheRenderer() throws IOException {\n        context.checking(new Expectations() {{\n            Task task1 = task(\"a\", \"group a\");\n            Task task2 = task(\"b\", \"group b\");\n            Task task3 = task(\"c\");\n            Task task4 = task(\"d\", \"group b\", task3);\n\n            List<String> testDefaultTasks = toList(\"defaultTask1\", \"defaultTask2\");\n            allowing(project).getDefaultTasks();\n            will(returnValue(testDefaultTasks));\n\n            one(taskContainer).getAll();\n            will(returnValue(toLinkedSet(task2, task3, task4, task1)));\n\n            allowing(taskContainer).getRules();\n            will(returnValue(toList()));\n\n            Sequence sequence = context.sequence(\"seq\");\n\n            one(renderer).addDefaultTasks(testDefaultTasks);\n            inSequence(sequence);\n\n            one(renderer).startTaskGroup(\"group a\");\n            inSequence(sequence);\n\n            one(renderer).addTask(with(isTask(task1)));\n            inSequence(sequence);\n\n            one(renderer).startTaskGroup(\"group b\");\n            inSequence(sequence);\n\n            one(renderer).addTask(with(isTask(task2)));\n            inSequence(sequence);\n\n            one(renderer).addTask(with(isTask(task4)));\n            inSequence(sequence);\n\n            one(renderer).addChildTask(with(isTask(task3)));\n            inSequence(sequence);\n\n            one(renderer).completeTasks();\n            inSequence(sequence);\n        }});\n\n        task.generate(project);\n    }","commit_id":"b2076be3ed91af22b679bef49963640ab999139d","url":"https://github.com/gradle/gradle"},{"original_method":"/**\n\t * Find all the aliases defined for this target.\n\t * \n\t * @param target\n\t *        The target resource reference string.\n\t * @return A list (Alias) of all the aliases defined for this target.\n\t */\n\tpublic List<Alias> getAliases(String target)\n\t{\n\t\tList<Alias> allForTarget = null;\n\t\tboolean found = false;\n\t\tif (m_targetCache != null)\n\t\t{\n\t\t\tallForTarget = (List<Alias>)m_targetCache.get(target);\n\t\t}\n\t\tif (allForTarget == null)\n\t\t{\n\t\t\tallForTarget = m_storage.getAll(target);\n\t\t\tif (m_targetCache != null)\n\t\t\t{\n\t\t\t\tCollection dependRefs = null;\n\t\t\t\tif (allForTarget != null)\n\t\t\t\t{\n\t\t\t\t\tdependRefs = new ArrayList(allForTarget.size());\n\t\t\t\t\t// Need to cache against a set of references.\n\t\t\t\t\tfor(Alias alias: (List<Alias>)allForTarget)\n\t\t\t\t\t{\n\t\t\t\t\t\tdependRefs.add(alias.getReference());\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tm_targetCache.put(target, allForTarget, target, dependRefs);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn allForTarget;\n\n\t}","id":50544,"modified_method":"/**\n\t * Find all the aliases defined for this target.\n\t * \n\t * @param target\n\t *        The target resource reference string.\n\t * @return A list (Alias) of all the aliases defined for this target.\n\t */\n\tpublic List<Alias> getAliases(String target)\n\t{\n\t\tList<Alias> allForTarget = m_storage.getAll(target);\n\n\t\treturn allForTarget;\n\n\t}","commit_id":"b7c39e95f7489b1c037a1611cafd1328acbfefdb","url":"https://github.com/sakaiproject/sakai"},{"original_method":"/**\n\t * Final initialization, once all dependencies are set.\n\t */\n\tpublic void init()\n\t{\n\t\ttry\n\t\t{\n\t\t\tm_relativeAccessPoint = REFERENCE_ROOT;\n\n\t\t\t// construct storage and read\n\t\t\tm_storage = newStorage();\n\t\t\tm_storage.open();\n\n\t\t\t// <= 0 indicates no caching desired\n\t\t\tif ((m_cacheSeconds > 0) && (m_cacheCleanerSeconds > 0))\n\t\t\t{\n\t\t\t\t// build a synchronized map for the call cache, automatically checking for expiration every 15 mins, expire on user events, too.\n\t\t\t\tm_callCache = memoryService().newCache(\n\t\t\t\t\t\t\"org.sakaiproject.alias.api.AliasService.callCache\",\n\t\t\t\t\t\taliasReference(\"\"));\n\t\t\t\tm_targetCache = memoryService().newGenericMultiRefCache(\n\t\t\t\t\t\t\"org.sakaiproject.alias.api.AliasService.targetCache\");\n\t\t\t\n\t\t\t\t// Need to catch new aliases being added so we don't still serve up the old data.\n\t\t\t\teventTrackingService().addObserver(this);\n\t\t\t}\n\n\t\t\t// register as an entity producer\n\t\t\tentityManager().registerEntityProducer(this, REFERENCE_ROOT);\n\n\t\t\t// register functions\n\t\t\tfunctionManager().registerFunction(SECURE_ADD_ALIAS);\n\t\t\tfunctionManager().registerFunction(SECURE_UPDATE_ALIAS);\n\t\t\tfunctionManager().registerFunction(SECURE_REMOVE_ALIAS);\n\n\t\t\tprohibited_aliases = Arrays.asList(serverConfigurationService().getString(\"mail.prohibitedaliases\",\n \t\t\t\t\t\"postmaster\").trim().toLowerCase().split(\"\\\\s*,\\\\s*\"));\n\n\t\t}\n\t\tcatch (Exception t)\n\t\t{\n\t\t\tM_log.warn(\"init(): \", t);\n\t\t}\n\n\t}","id":50545,"modified_method":"/**\n\t * Final initialization, once all dependencies are set.\n\t */\n\tpublic void init()\n\t{\n\t\ttry\n\t\t{\n\t\t\tm_relativeAccessPoint = REFERENCE_ROOT;\n\n\t\t\t// construct storage and read\n\t\t\tm_storage = newStorage();\n\t\t\tm_storage.open();\n\n\t\t\t// <= 0 indicates no caching desired\n\t\t\tif ((m_cacheSeconds > 0) && (m_cacheCleanerSeconds > 0))\n\t\t\t{\n\t\t\t\t// build a synchronized map for the call cache, automatically checking for expiration every 15 mins, expire on user events, too.\n\t\t\t\tm_callCache = memoryService().newCache(\n\t\t\t\t\t\t\"org.sakaiproject.alias.api.AliasService.callCache\",\n\t\t\t\t\t\taliasReference(\"\"));\n\t\t\t}\n\n\t\t\t// register as an entity producer\n\t\t\tentityManager().registerEntityProducer(this, REFERENCE_ROOT);\n\n\t\t\t// register functions\n\t\t\tfunctionManager().registerFunction(SECURE_ADD_ALIAS);\n\t\t\tfunctionManager().registerFunction(SECURE_UPDATE_ALIAS);\n\t\t\tfunctionManager().registerFunction(SECURE_REMOVE_ALIAS);\n\n\t\t\tprohibited_aliases = Arrays.asList(serverConfigurationService().getString(\"mail.prohibitedaliases\",\n \t\t\t\t\t\"postmaster\").trim().toLowerCase().split(\"\\\\s*,\\\\s*\"));\n\n\t\t}\n\t\tcatch (Exception t)\n\t\t{\n\t\t\tM_log.warn(\"init(): \", t);\n\t\t}\n\n\t}","commit_id":"b7c39e95f7489b1c037a1611cafd1328acbfefdb","url":"https://github.com/sakaiproject/sakai"},{"original_method":"public void calculate(double[] theta) {\n    model.vectorToParams(theta);\n\n    double localValue = 0.0;\n    double[] localDerivative = new double[theta.length];\n\n    // stands for Transform Derivatives (see the SentimentModel)\n    TwoDimensionalMap<String, String, SimpleMatrix> binaryTD;\n    binaryTD = TwoDimensionalMap.treeMap();\n    // stands for Classification Derivatives\n    TwoDimensionalMap<String, String, SimpleMatrix> binaryCD;\n    binaryCD = TwoDimensionalMap.treeMap();\n\n    // word vector derivatives\n    Map<String, SimpleMatrix> wordVectorD = Generics.newTreeMap();\n\n    for (TwoDimensionalMap.Entry<String, String, SimpleMatrix> entry : model.binaryTransform) {\n      int numRows = entry.getValue().numRows();\n      int numCols = entry.getValue().numCols();\n\n      binaryTD.put(entry.getFirstKey(), entry.getSecondKey(), new SimpleMatrix(numRows, numCols));\n      // The derivative matrix has one row for each class.  The number\n      // of columns in the derivative matrix is the same as the number\n      // of rows in the original transform matrix\n      binaryCD.put(entry.getFirstKey(), entry.getSecondKey(), new SimpleMatrix(model.numClasses, numRows));\n    }\n    for (Map.Entry<String, SimpleMatrix> entry : model.wordVectors.entrySet()) {\n      int numRows = entry.getValue().numRows();\n      int numCols = entry.getValue().numCols();\n      wordVectorD.put(entry.getKey(), new SimpleMatrix(numRows, numCols));\n    }\n    \n    // TODO: This part can easily be parallelized\n    List<Tree> forwardPropTrees = Generics.newArrayList();\n    for (Tree tree : trainingBatch) {\n      Tree trainingTree = tree.deepCopy();\n      // this will attach the error vectors and the node vectors\n      // to each node in the tree\n      forwardPropagateTree(trainingTree);\n      forwardPropTrees.add(trainingTree);\n    }\n\n    // TODO: left off where we are about to backprop in DVParserCostAndGradient\n  }","id":50546,"modified_method":"public void calculate(double[] theta) {\n    model.vectorToParams(theta);\n\n    double localValue = 0.0;\n    double[] localDerivative = new double[theta.length];\n\n    // We use TreeMap for each of these so that they stay in a\n    // canonical sorted order\n    // binaryTD stands for Transform Derivatives (see the SentimentModel)\n    TwoDimensionalMap<String, String, SimpleMatrix> binaryTD = TwoDimensionalMap.treeMap();\n    // binaryCD stands for Classification Derivatives\n    TwoDimensionalMap<String, String, SimpleMatrix> binaryCD = TwoDimensionalMap.treeMap();\n\n    // unaryCD stands for Classification Derivatives\n    Map<String, SimpleMatrix> unaryCD = Generics.newTreeMap();\n\n    // word vector derivatives\n    Map<String, SimpleMatrix> wordVectorD = Generics.newTreeMap();\n\n    for (TwoDimensionalMap.Entry<String, String, SimpleMatrix> entry : model.binaryTransform) {\n      int numRows = entry.getValue().numRows();\n      int numCols = entry.getValue().numCols();\n\n      binaryTD.put(entry.getFirstKey(), entry.getSecondKey(), new SimpleMatrix(numRows, numCols));\n      // The derivative matrix has one row for each class.  The number\n      // of columns in the derivative matrix is the same as the number\n      // of rows in the original transform matrix\n      binaryCD.put(entry.getFirstKey(), entry.getSecondKey(), new SimpleMatrix(model.numClasses, numRows));\n    }\n    for (Map.Entry<String, SimpleMatrix> entry : model.unaryClassification.entrySet()) {\n      int numRows = entry.getValue().numRows();\n      int numCols = entry.getValue().numCols();\n      unaryCD.put(entry.getKey(), new SimpleMatrix(numRows, numCols));\n    }\n    for (Map.Entry<String, SimpleMatrix> entry : model.wordVectors.entrySet()) {\n      int numRows = entry.getValue().numRows();\n      int numCols = entry.getValue().numCols();\n      wordVectorD.put(entry.getKey(), new SimpleMatrix(numRows, numCols));\n    }\n    \n    // TODO: This part can easily be parallelized\n    List<Tree> forwardPropTrees = Generics.newArrayList();\n    for (Tree tree : trainingBatch) {\n      Tree trainingTree = tree.deepCopy();\n      // this will attach the error vectors and the node vectors\n      // to each node in the tree\n      forwardPropagateTree(trainingTree);\n      forwardPropTrees.add(trainingTree);\n    }\n\n    // TODO: we may find a big speedup by separating the derivatives and then summing\n    double error = 0.0;\n    for (Tree tree : forwardPropTrees) {\n      backpropDerivativesAndError(tree, binaryTD, binaryCD, unaryCD, wordVectorD);\n      error += sumError(tree);\n    }\n\n    value = error;\n    derivative = RNNUtils.paramsToVector(theta.length, binaryTD.valueIterator(), binaryCD.valueIterator(), unaryCD.values().iterator(), wordVectorD.values().iterator());\n  }","commit_id":"145d560d4874bbef905df415e02f0925fc325a63","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public void calculate(double[] theta) {\n    model.vectorToParams(theta);\n\n    double localValue = 0.0;\n    double[] localDerivative = new double[theta.length];\n\n    // stands for Transform Derivatives (see the SentimentModel)\n    TwoDimensionalMap<String, String, SimpleMatrix> binaryTD;\n    binaryTD = TwoDimensionalMap.treeMap();\n    // stands for Classification Derivatives\n    TwoDimensionalMap<String, String, SimpleMatrix> binaryCD;\n    binaryCD = TwoDimensionalMap.treeMap();\n\n    // word vector derivatives\n    Map<String, SimpleMatrix> wordVectorD = Generics.newTreeMap();\n\n    for (TwoDimensionalMap.Entry<String, String, SimpleMatrix> entry : model.binaryTransform) {\n      int numRows = entry.getValue().numRows();\n      int numCols = entry.getValue().numCols();\n\n      binaryTD.put(entry.getFirstKey(), entry.getSecondKey(), new SimpleMatrix(numRows, numCols));\n      // The derivative matrix has one row for each class.  The number\n      // of columns in the derivative matrix is the same as the number\n      // of rows in the original transform matrix\n      binaryCD.put(entry.getFirstKey(), entry.getSecondKey(), new SimpleMatrix(model.numClasses, numRows));\n    }\n    for (Map.Entry<String, SimpleMatrix> entry : model.wordVectors.entrySet()) {\n      int numRows = entry.getValue().numRows();\n      int numCols = entry.getValue().numCols();\n      wordVectorD.put(entry.getKey(), new SimpleMatrix(numRows, numCols));\n    }\n    \n    // TODO: This part can easily be parallelized\n    List<Tree> forwardPropTrees = Generics.newArrayList();\n    for (Tree tree : trainingBatch) {\n      Tree trainingTree = tree.deepCopy();\n      // this will attach the error vectors and the node vectors\n      // to each node in the tree\n      forwardPropagateTree(trainingTree);\n      forwardPropTrees.add(trainingTree);\n    }\n\n    // TODO: left off where we are about to backprop in DVParserCostAndGradient\n  }","id":50547,"modified_method":"public void calculate(double[] theta) {\n    model.vectorToParams(theta);\n\n    double localValue = 0.0;\n    double[] localDerivative = new double[theta.length];\n\n    // We use TreeMap for each of these so that they stay in a\n    // canonical sorted order\n    // binaryTD stands for Transform Derivatives (see the SentimentModel)\n    TwoDimensionalMap<String, String, SimpleMatrix> binaryTD = TwoDimensionalMap.treeMap();\n    // binaryCD stands for Classification Derivatives\n    TwoDimensionalMap<String, String, SimpleMatrix> binaryCD = TwoDimensionalMap.treeMap();\n\n    // unaryCD stands for Classification Derivatives\n    Map<String, SimpleMatrix> unaryCD = Generics.newTreeMap();\n\n    // word vector derivatives\n    Map<String, SimpleMatrix> wordVectorD = Generics.newTreeMap();\n\n    for (TwoDimensionalMap.Entry<String, String, SimpleMatrix> entry : model.binaryTransform) {\n      int numRows = entry.getValue().numRows();\n      int numCols = entry.getValue().numCols();\n\n      binaryTD.put(entry.getFirstKey(), entry.getSecondKey(), new SimpleMatrix(numRows, numCols));\n      // The derivative matrix has one row for each class.  The number\n      // of columns in the derivative matrix is the same as the number\n      // of rows in the original transform matrix\n      binaryCD.put(entry.getFirstKey(), entry.getSecondKey(), new SimpleMatrix(model.numClasses, numRows));\n    }\n    for (Map.Entry<String, SimpleMatrix> entry : model.unaryClassification.entrySet()) {\n      int numRows = entry.getValue().numRows();\n      int numCols = entry.getValue().numCols();\n      unaryCD.put(entry.getKey(), new SimpleMatrix(numRows, numCols));\n    }\n    for (Map.Entry<String, SimpleMatrix> entry : model.wordVectors.entrySet()) {\n      int numRows = entry.getValue().numRows();\n      int numCols = entry.getValue().numCols();\n      wordVectorD.put(entry.getKey(), new SimpleMatrix(numRows, numCols));\n    }\n    \n    // TODO: This part can easily be parallelized\n    List<Tree> forwardPropTrees = Generics.newArrayList();\n    for (Tree tree : trainingBatch) {\n      Tree trainingTree = tree.deepCopy();\n      // this will attach the error vectors and the node vectors\n      // to each node in the tree\n      forwardPropagateTree(trainingTree);\n      forwardPropTrees.add(trainingTree);\n    }\n\n    // TODO: we may find a big speedup by separating the derivatives and then summing\n    double error = 0.0;\n    for (Tree tree : forwardPropTrees) {\n      backpropDerivativesAndError(tree, binaryTD, binaryCD, unaryCD, wordVectorD);\n      error += sumError(tree);\n    }\n\n    value = error;\n    derivative = RNNUtils.paramsToVector(theta.length, binaryTD.valueIterator(), binaryCD.valueIterator(), unaryCD.values().iterator(), wordVectorD.values().iterator());\n  }","commit_id":"c2dd743826beda0cd299c92e4edb1c5f73f76a7a","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void enable() throws EucalyptusCloudException {\n\t\tblockManager.configure();\n\t\t//blockManager.initialize();\n\t\ttry {\n\t\t\tstartupChecks();\n\t\t} catch(EucalyptusCloudException ex) {\n\t\t\tLOG.error(\"Startup checks failed \", ex);\n\t\t}\n\t\tblockManager.enable();\n\t\tcheckerService.add(new VolumeStateChecker(blockManager));\n\t\t//add any block manager checkers\n\t\tfor(CheckerTask checker : blockManager.getCheckers()) {\n\t\t\tcheckerService.add(checker);\n\t\t}\n\t\tcheckerService.add(new VolumeDeleterTask());\n\t\tStorageProperties.enableSnapshots = StorageProperties.enableStorage = true;\n\t}","id":50548,"modified_method":"public static void enable() throws EucalyptusCloudException {\n\t\tblockManager.configure();\n\t\t//blockManager.initialize();\n\t\ttry {\n\t\t\tstartupChecks();\n\t\t} catch(EucalyptusCloudException ex) {\n\t\t\tLOG.error(\"Startup checks failed \", ex);\n\t\t}\n\t\tblockManager.enable();\n\t\tcheckerService.add(new VolumeStateChecker(blockManager));\n\t\t//add any block manager checkers\n\t\tfor(CheckerTask checker : blockManager.getCheckers()) {\n\t\t\tcheckerService.add(checker);\n\t\t}\n\t\tcheckerService.add(new VolumeDeleterTask());\n\t\tcheckerService.add(new SnapshotDeleterTask());\n\t\tStorageProperties.enableSnapshots = StorageProperties.enableStorage = true;\n\t}","commit_id":"deafdda715882ae66f3d16acba6474188dc631b9","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public DeleteStorageSnapshotResponseType DeleteStorageSnapshot( DeleteStorageSnapshotType request ) throws EucalyptusCloudException {\n\t\tDeleteStorageSnapshotResponseType reply = ( DeleteStorageSnapshotResponseType ) request.getReply();\n\n\t\tStorageProperties.updateWalrusUrl();\n\t\tif(!StorageProperties.enableSnapshots) {\n\t\t\tLOG.error(\"Snapshots have been disabled. Please check connection to Walrus.\");\n\t\t\treturn reply;\n\t\t}\n\n\t\tString snapshotId = request.getSnapshotId();\n\n\t\tEntityWrapper<SnapshotInfo> db = StorageProperties.getEntityWrapper();\n\t\tSnapshotInfo snapshotInfo = new SnapshotInfo(snapshotId);\n\t\tList<SnapshotInfo> snapshotInfos = db.query(snapshotInfo);\n\n\t\treply.set_return(true);\n\t\tif(snapshotInfos.size() > 0) {\n\t\t\tSnapshotInfo  foundSnapshotInfo = snapshotInfos.get(0);\n\t\t\tString status = foundSnapshotInfo.getStatus();\n\t\t\tdb.commit();\n\t\t\tif(status.equals(StorageProperties.Status.available.toString()) || status.equals(StorageProperties.Status.failed.toString())) {\n\t\t\t\tSnapshotDeleter snapshotDeleter = new SnapshotDeleter(snapshotId);\n\t\t\t\tsnapshotService.add(snapshotDeleter);\n\t\t\t} else {\n\t\t\t\t//snapshot is still in progress.\n\t\t\t\treply.set_return(false);\n\t\t\t\tthrow new SnapshotInUseException(snapshotId);\n\t\t\t}\n\t\t} else {\n\t\t\t//the SC knows nothing about this snapshot.\n\t\t\tdb.rollback();\n\t\t}\n\t\treturn reply;\n\t}","id":50549,"modified_method":"public DeleteStorageSnapshotResponseType DeleteStorageSnapshot( DeleteStorageSnapshotType request ) throws EucalyptusCloudException {\n\t\tDeleteStorageSnapshotResponseType reply = ( DeleteStorageSnapshotResponseType ) request.getReply();\n\n\t\tStorageProperties.updateWalrusUrl();\n\t\tif(!StorageProperties.enableSnapshots) {\n\t\t\tLOG.error(\"Snapshots have been disabled. Please check connection to Walrus.\");\n\t\t\treturn reply;\n\t\t}\n\n\t\tString snapshotId = request.getSnapshotId();\n\n\t\tEntityWrapper<SnapshotInfo> db = StorageProperties.getEntityWrapper();\n\t\tSnapshotInfo snapshotInfo = new SnapshotInfo(snapshotId);\n\t\tList<SnapshotInfo> snapshotInfos = db.query(snapshotInfo);\n\n\t\treply.set_return(false);\n\t\tif(snapshotInfos.size() > 0) {\n\t\t\tSnapshotInfo  foundSnapshotInfo = snapshotInfos.get(0);\n\t\t\tString status = foundSnapshotInfo.getStatus();\n\t\t\tif(status.equals(StorageProperties.Status.available.toString()) || status.equals(StorageProperties.Status.failed.toString())) {\n\t\t\t\tfoundSnapshotInfo.setStatus(StorageProperties.Status.deleting.toString());\n\t\t\t\tdb.commit();\n\t\t\t\treply.set_return(true);\n\t\t\t} else {\n\t\t\t\t//snapshot is still in progress.\n\t\t\t\tdb.rollback();\n\t\t\t\tthrow new SnapshotInUseException(snapshotId);\n\t\t\t}\n\t\t} else {\n\t\t\t//the SC knows nothing about this snapshot.\n\t\t\tdb.rollback();\n\t\t}\n\t\treturn reply;\n\t}","commit_id":"deafdda715882ae66f3d16acba6474188dc631b9","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public GetDecryptedImageResponseType getDecryptedImage(GetDecryptedImageType request) throws EucalyptusCloudException {\n\t\tGetDecryptedImageResponseType reply = (GetDecryptedImageResponseType) request.getReply();\n\t\tString bucketName = request.getBucket();\n\t\tString objectKey = request.getKey();\n\t\tContext ctx = Contexts.lookup();\n\t\tAccount account = ctx.getAccount();\n\n\t\tEntityWrapper<BucketInfo> db = EntityWrapper.get(BucketInfo.class);\n\t\tBucketInfo bucketInfo = new BucketInfo(bucketName);\n\t\tList<BucketInfo> bucketList = db.queryEscape(bucketInfo);\n\t\tif (bucketList.size() > 0) {\n\t\t\tEntityWrapper<ObjectInfo> dbObject = db.recast(ObjectInfo.class);\n\t\t\tObjectInfo searchObjectInfo = new ObjectInfo(bucketName, objectKey);\n\t\t\tList<ObjectInfo> objectInfos = dbObject.queryEscape(searchObjectInfo);\n\t\t\tif(objectInfos.size() > 0)  {\n\t\t\t\tObjectInfo objectInfo = objectInfos.get(0);\n\n\t\t\t\tif(ctx.hasAdministrativePrivileges() || (\n\t\t\t\t\t\tobjectInfo.canRead(account.getAccountNumber()) &&\n\t\t\t\t\t\tLookups.checkPrivilege(PolicySpec.S3_GETOBJECT,\n\t\t\t\t\t\t\t\tPolicySpec.VENDOR_S3,\n\t\t\t\t\t\t\t\tPolicySpec.S3_RESOURCE_OBJECT,\n\t\t\t\t\t\t\t\tPolicySpec.objectFullName(bucketName, objectKey),\n\t\t\t\t\t\t\t\tobjectInfo.getOwnerId()))) {\n\t\t\t\t\tdb.commit();\n\t\t\t\t\tEucaSemaphore semaphore = EucaSemaphoreDirectory.getSemaphore(bucketName + \"/\" + objectKey);\n\t\t\t\t\ttry {\n\t\t\t\t\t\tsemaphore.acquire();\n\t\t\t\t\t} catch(InterruptedException ex) {\n\t\t\t\t\t\tthrow new WalrusException(\"semaphore could not be acquired\");\n\t\t\t\t\t}\n\t\t\t\t\tEntityWrapper<ImageCacheInfo> db2 = EntityWrapper.get(ImageCacheInfo.class);\n\t\t\t\t\tImageCacheInfo searchImageCacheInfo = new ImageCacheInfo(bucketName, objectKey);\n\t\t\t\t\tList<ImageCacheInfo> foundImageCacheInfos = db2.queryEscape(searchImageCacheInfo);\n\t\t\t\t\tif(foundImageCacheInfos.size() > 0) {\n\t\t\t\t\t\tImageCacheInfo imageCacheInfo = foundImageCacheInfos.get(0);\n\t\t\t\t\t\tif(imageCacheInfo.getInCache() && \n\t\t\t\t\t\t\t\t(!storageManager.objectExists(bucketName, imageCacheInfo.getImageName()))) {\n\t\t\t\t\t\t\tdb2.delete(imageCacheInfo);\n\t\t\t\t\t\t\tdb2.commit();\n\t\t\t\t\t\t\tdb2 = EntityWrapper.get(ImageCacheInfo.class);\n\t\t\t\t\t\t\tfoundImageCacheInfos = db2.queryEscape(searchImageCacheInfo);\n\t\t\t\t\t\t}\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\tif((foundImageCacheInfos.size() == 0) || \n\t\t\t\t\t\t\t(!imageCachers.containsKey(bucketName + objectKey))) {\n\t\t\t\t\t\tdb2.commit();\n\t\t\t\t\t\t//issue a cache request\n\t\t\t\t\t\tLOG.info(\"Image \" + bucketName + \"/\" + objectKey + \" not found in cache. Issuing cache request (might take a while...)\");\n\t\t\t\t\t\tcacheImage(bucketName, objectKey, account, ctx.hasAdministrativePrivileges());\n\t\t\t\t\t\t//query db again\n\t\t\t\t\t\tdb2 = EntityWrapper.get(ImageCacheInfo.class);\n\t\t\t\t\t\tfoundImageCacheInfos = db2.queryEscape(searchImageCacheInfo);\n\t\t\t\t\t}\n\t\t\t\t\tImageCacheInfo foundImageCacheInfo = null;\n\t\t\t\t\tif(foundImageCacheInfos.size() > 0)\n\t\t\t\t\t\tfoundImageCacheInfo = foundImageCacheInfos.get(0);\n\t\t\t\t\tdb2.commit();\n\t\t\t\t\tif((foundImageCacheInfo == null) || \n\t\t\t\t\t\t\t(!foundImageCacheInfo.getInCache())) {\n\t\t\t\t\t\tboolean cached = false;\n\t\t\t\t\t\tWalrusMonitor monitor = imageMessenger.getMonitor(bucketName + \"/\" + objectKey);\n\t\t\t\t\t\tsynchronized (monitor) {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tlong bytesCached = 0;\n\t\t\t\t\t\t\t\tint number_of_tries = 0;\n\t\t\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\t\t\tLOG.info(\"Waiting \" + WalrusProperties.CACHE_PROGRESS_TIMEOUT + \"ms for image to cache (\" + number_of_tries + \" out of \" + WalrusProperties.IMAGE_CACHE_RETRY_LIMIT + \")\");\n\t\t\t\t\t\t\t\t\tmonitor.wait(WalrusProperties.CACHE_PROGRESS_TIMEOUT);\n\t\t\t\t\t\t\t\t\tif(isCached(bucketName, objectKey)) {\n\t\t\t\t\t\t\t\t\t\tcached = true;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tlong newBytesCached = checkCachingProgress(bucketName, objectKey, bytesCached);\n\t\t\t\t\t\t\t\t\tboolean is_caching = (newBytesCached - bytesCached) > 0 ? true : false;\n\n\t\t\t\t\t\t\t\t\tif (!is_caching && (number_of_tries++ >= WalrusProperties.IMAGE_CACHE_RETRY_LIMIT))\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tbytesCached = newBytesCached;\n\t\t\t\t\t\t\t\t\tif(is_caching) {\n\t\t\t\t\t\t\t\t\t\tLOG.info(\"Bytes cached so far for image \" + bucketName + \"/\" + objectKey + \" :\" +  String.valueOf(bytesCached));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} while(true);\n\t\t\t\t\t\t\t} catch(Exception ex) {\n\t\t\t\t\t\t\t\tLOG.error(ex, ex);\n\t\t\t\t\t\t\t\tsemaphore.release();\n\t\t\t\t\t\t\t\timageMessenger.removeMonitor(bucketName + \"/\" + objectKey);\n\t\t\t\t\t\t\t\tthrow new WalrusException(\"monitor failure\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(!cached) {\n\t\t\t\t\t\t\tLOG.error(\"Tired of waiting to cache image: \" + bucketName + \"/\" + objectKey + \" giving up\");\n\t\t\t\t\t\t\timageMessenger.removeMonitor(bucketName + \"/\" + objectKey);\n\t\t\t\t\t\t\tsemaphore.release();\n\t\t\t\t\t\t\tthrow new WalrusException(\"caching failure\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//caching may have modified the db. repeat the query\n\t\t\t\t\t\tdb2 = EntityWrapper.get(ImageCacheInfo.class);\n\t\t\t\t\t\tfoundImageCacheInfos = db2.queryEscape(searchImageCacheInfo);\n\t\t\t\t\t\tif(foundImageCacheInfos.size() > 0) {\n\t\t\t\t\t\t\tfoundImageCacheInfo = foundImageCacheInfos.get(0);\n\t\t\t\t\t\t\tfoundImageCacheInfo.setUseCount(foundImageCacheInfo.getUseCount() + 1);\n\t\t\t\t\t\t\tassert(foundImageCacheInfo.getInCache());\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdb2.rollback();\n\t\t\t\t\t\t\tsemaphore.release();\n\t\t\t\t\t\t\tthrow new NoSuchEntityException(objectKey);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdb2.commit();\n\t\t\t\t\t}\n\n\t\t\t\t\tLong unencryptedSize = foundImageCacheInfo.getSize();\n\t\t\t\t\tString imageKey = foundImageCacheInfo.getImageName();\n\t\t\t\t\treply.setSize(unencryptedSize);\n\t\t\t\t\treply.setLastModified(DateUtils.format(objectInfo.getLastModified().getTime(), DateUtils.ISO8601_DATETIME_PATTERN) + \".000Z\");\n\t\t\t\t\treply.setEtag(\"\");\n\t\t\t\t\tDefaultHttpResponse httpResponse = new DefaultHttpResponse( HttpVersion.HTTP_1_1, HttpResponseStatus.OK ); \n\t\t\t\t\tstorageManager.sendObject(request, httpResponse, bucketName, imageKey, unencryptedSize, null, \n\t\t\t\t\t\t\tDateUtils.format(objectInfo.getLastModified().getTime(), DateUtils.ISO8601_DATETIME_PATTERN + \".000Z\"), \n\t\t\t\t\t\t\tobjectInfo.getContentType(), objectInfo.getContentDisposition(), request.getIsCompressed(), null, null);                            \n\t\t\t\t\tsemaphore.release();\n\t\t\t\t\timageMessenger.removeMonitor(bucketName + \"/\" + objectKey);\n\t\t\t\t\treturn reply;\n\t\t\t\t} else {\n\t\t\t\t\tdb.rollback();\n\t\t\t\t\tthrow new AccessDeniedException(\"Key\", objectKey);\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\tdb.rollback();\n\t\t\t\tthrow new NoSuchEntityException(objectKey);\n\t\t\t}\n\t\t} else {\n\t\t\tdb.rollback();\n\t\t\tthrow new NoSuchBucketException(bucketName);\n\t\t}\n\t}","id":50550,"modified_method":"public GetDecryptedImageResponseType getDecryptedImage(GetDecryptedImageType request) throws EucalyptusCloudException {\n\t\tGetDecryptedImageResponseType reply = (GetDecryptedImageResponseType) request.getReply();\n\t\tString bucketName = request.getBucket();\n\t\tString objectKey = request.getKey();\n\t\tContext ctx = Contexts.lookup();\n\t\tAccount account = ctx.getAccount();\n\n\t\tEntityWrapper<BucketInfo> db = EntityWrapper.get(BucketInfo.class);\n\t\tBucketInfo bucketInfo = new BucketInfo(bucketName);\n\t\tList<BucketInfo> bucketList = db.queryEscape(bucketInfo);\n\t\tif (bucketList.size() > 0) {\n\t\t\tEntityWrapper<ObjectInfo> dbObject = db.recast(ObjectInfo.class);\n\t\t\tObjectInfo searchObjectInfo = new ObjectInfo(bucketName, objectKey);\n\t\t\tList<ObjectInfo> objectInfos = dbObject.queryEscape(searchObjectInfo);\n\t\t\tif(objectInfos.size() > 0)  {\n\t\t\t\tObjectInfo objectInfo = objectInfos.get(0);\n\n\t\t\t\tif(ctx.hasAdministrativePrivileges() || (\n\t\t\t\t\t\tobjectInfo.canRead(account.getAccountNumber()) &&\n\t\t\t\t\t\tLookups.checkPrivilege(PolicySpec.S3_GETOBJECT,\n\t\t\t\t\t\t\t\tPolicySpec.VENDOR_S3,\n\t\t\t\t\t\t\t\tPolicySpec.S3_RESOURCE_OBJECT,\n\t\t\t\t\t\t\t\tPolicySpec.objectFullName(bucketName, objectKey),\n\t\t\t\t\t\t\t\tobjectInfo.getOwnerId()))) {\n\t\t\t\t\tdb.commit();\n\t\t\t\t\tEucaSemaphore semaphore = EucaSemaphoreDirectory.getSemaphore(bucketName + \"/\" + objectKey);\n\t\t\t\t\ttry {\n\t\t\t\t\t\tsemaphore.acquire();\n\t\t\t\t\t} catch(InterruptedException ex) {\n\t\t\t\t\t\tthrow new WalrusException(\"semaphore could not be acquired\");\n\t\t\t\t\t}\n\t\t\t\t\tEntityWrapper<ImageCacheInfo> db2 = EntityWrapper.get(ImageCacheInfo.class);\n\t\t\t\t\tImageCacheInfo searchImageCacheInfo = new ImageCacheInfo(bucketName, objectKey);\n\t\t\t\t\tList<ImageCacheInfo> foundImageCacheInfos = db2.queryEscape(searchImageCacheInfo);\n\t\t\t\t\tif(foundImageCacheInfos.size() > 0) {\n\t\t\t\t\t\tImageCacheInfo imageCacheInfo = foundImageCacheInfos.get(0);\n\t\t\t\t\t\tif(imageCacheInfo.getInCache() && \n\t\t\t\t\t\t\t\t(!storageManager.objectExists(bucketName, imageCacheInfo.getImageName()))) {\n\t\t\t\t\t\t\tdb2.delete(imageCacheInfo);\n\t\t\t\t\t\t\tdb2.commit();\n\t\t\t\t\t\t\tdb2 = EntityWrapper.get(ImageCacheInfo.class);\n\t\t\t\t\t\t\tfoundImageCacheInfos = db2.queryEscape(searchImageCacheInfo);\n\t\t\t\t\t\t}\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\tif((foundImageCacheInfos.size() == 0) || \n\t\t\t\t\t\t\t(!imageCachers.containsKey(bucketName + objectKey))) {\n\t\t\t\t\t\tdb2.commit();\n\t\t\t\t\t\t//issue a cache request\n\t\t\t\t\t\tLOG.info(\"Image \" + bucketName + \"/\" + objectKey + \" not found in cache. Issuing cache request (might take a while...)\");\n\t\t\t\t\t\tcacheImage(bucketName, objectKey, account, ctx.hasAdministrativePrivileges());\n\t\t\t\t\t\t//query db again\n\t\t\t\t\t\tdb2 = EntityWrapper.get(ImageCacheInfo.class);\n\t\t\t\t\t\tfoundImageCacheInfos = db2.queryEscape(searchImageCacheInfo);\n\t\t\t\t\t}\n\t\t\t\t\tImageCacheInfo foundImageCacheInfo = null;\n\t\t\t\t\tif(foundImageCacheInfos.size() > 0)\n\t\t\t\t\t\tfoundImageCacheInfo = foundImageCacheInfos.get(0);\n\t\t\t\t\tdb2.commit();\n\t\t\t\t\tif((foundImageCacheInfo == null) || \n\t\t\t\t\t\t\t(!foundImageCacheInfo.getInCache())) {\n\t\t\t\t\t\tboolean cached = false;\n\t\t\t\t\t\tWalrusMonitor monitor = imageMessenger.getMonitor(bucketName + \"/\" + objectKey);\n\t\t\t\t\t\tsynchronized (monitor) {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tlong bytesCached = 0;\n\t\t\t\t\t\t\t\tint number_of_tries = 0;\n\t\t\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\t\t\tLOG.info(\"Waiting \" + WalrusProperties.CACHE_PROGRESS_TIMEOUT + \"ms for image to cache (\" + number_of_tries + \" out of \" + WalrusProperties.IMAGE_CACHE_RETRY_LIMIT + \")\");\n\t\t\t\t\t\t\t\t\tmonitor.wait(WalrusProperties.CACHE_PROGRESS_TIMEOUT);\n\t\t\t\t\t\t\t\t\tif(isCached(bucketName, objectKey)) {\n\t\t\t\t\t\t\t\t\t\tcached = true;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tlong newBytesCached = checkCachingProgress(bucketName, objectKey, bytesCached);\n\t\t\t\t\t\t\t\t\tboolean is_caching = (newBytesCached - bytesCached) > 0 ? true : false;\n\n\t\t\t\t\t\t\t\t\tif (!is_caching && (number_of_tries++ >= WalrusProperties.IMAGE_CACHE_RETRY_LIMIT))\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tbytesCached = newBytesCached;\n\t\t\t\t\t\t\t\t\tif(is_caching) {\n\t\t\t\t\t\t\t\t\t\tLOG.info(\"Bytes cached so far for image \" + bucketName + \"/\" + objectKey + \" :\" +  String.valueOf(bytesCached));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} while(true);\n\t\t\t\t\t\t\t} catch(Exception ex) {\n\t\t\t\t\t\t\t\tLOG.error(ex, ex);\n\t\t\t\t\t\t\t\tsemaphore.release();\n\t\t\t\t\t\t\t\timageMessenger.removeMonitor(bucketName + \"/\" + objectKey);\n\t\t\t\t\t\t\t\tthrow new WalrusException(\"monitor failure\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(!cached) {\n\t\t\t\t\t\t\tLOG.error(\"Tired of waiting to cache image: \" + bucketName + \"/\" + objectKey + \" giving up\");\n\t\t\t\t\t\t\timageMessenger.removeMonitor(bucketName + \"/\" + objectKey);\n\t\t\t\t\t\t\tsemaphore.release();\n\t\t\t\t\t\t\tif(!imageCachers.containsKey(bucketName + objectKey)) {\n\t\t\t\t\t\t\t\t//caching not in progress. delete image cache row.\n\t\t\t\t\t\t\t\tdb2 = EntityWrapper.get(ImageCacheInfo.class);\n                                                                foundImageCacheInfos = db2.queryEscape(searchImageCacheInfo);\n      \t\t                                                if(foundImageCacheInfos.size() > 0) {\n\t\t\t\t\t\t\t\t\tdb2.delete(foundImageCacheInfos.get(0));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdb2.commit();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthrow new WalrusException(\"caching failure\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//caching may have modified the db. repeat the query\n\t\t\t\t\t\tdb2 = EntityWrapper.get(ImageCacheInfo.class);\n\t\t\t\t\t\tfoundImageCacheInfos = db2.queryEscape(searchImageCacheInfo);\n\t\t\t\t\t\tif(foundImageCacheInfos.size() > 0) {\n\t\t\t\t\t\t\tfoundImageCacheInfo = foundImageCacheInfos.get(0);\n\t\t\t\t\t\t\tfoundImageCacheInfo.setUseCount(foundImageCacheInfo.getUseCount() + 1);\n\t\t\t\t\t\t\tassert(foundImageCacheInfo.getInCache());\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdb2.rollback();\n\t\t\t\t\t\t\tsemaphore.release();\n\t\t\t\t\t\t\tthrow new NoSuchEntityException(objectKey);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdb2.commit();\n\t\t\t\t\t}\n\n\t\t\t\t\tLong unencryptedSize = foundImageCacheInfo.getSize();\n\t\t\t\t\tString imageKey = foundImageCacheInfo.getImageName();\n\t\t\t\t\treply.setSize(unencryptedSize);\n\t\t\t\t\treply.setLastModified(DateUtils.format(objectInfo.getLastModified().getTime(), DateUtils.ISO8601_DATETIME_PATTERN) + \".000Z\");\n\t\t\t\t\treply.setEtag(\"\");\n\t\t\t\t\tDefaultHttpResponse httpResponse = new DefaultHttpResponse( HttpVersion.HTTP_1_1, HttpResponseStatus.OK ); \n\t\t\t\t\tstorageManager.sendObject(request, httpResponse, bucketName, imageKey, unencryptedSize, null, \n\t\t\t\t\t\t\tDateUtils.format(objectInfo.getLastModified().getTime(), DateUtils.ISO8601_DATETIME_PATTERN + \".000Z\"), \n\t\t\t\t\t\t\tobjectInfo.getContentType(), objectInfo.getContentDisposition(), request.getIsCompressed(), null, null);                            \n\t\t\t\t\tsemaphore.release();\n\t\t\t\t\timageMessenger.removeMonitor(bucketName + \"/\" + objectKey);\n\t\t\t\t\treturn reply;\n\t\t\t\t} else {\n\t\t\t\t\tdb.rollback();\n\t\t\t\t\tthrow new AccessDeniedException(\"Key\", objectKey);\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\tdb.rollback();\n\t\t\t\tthrow new NoSuchEntityException(objectKey);\n\t\t\t}\n\t\t} else {\n\t\t\tdb.rollback();\n\t\t\tthrow new NoSuchBucketException(bucketName);\n\t\t}\n\t}","commit_id":"4e63aca17dfe3523fa36a4ce65b70fa6539a27e4","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public CacheImageResponseType cacheImage(CacheImageType request) throws EucalyptusCloudException {\n\t\tCacheImageResponseType reply = (CacheImageResponseType) request.getReply();\n\t\treply.setSuccess(false);\n\t\tString bucketName = request.getBucket();\n\t\tString manifestKey = request.getKey();\n\t\tContext ctx = Contexts.lookup();\n\t\tAccount account = ctx.getAccount();\n\n\t\tEntityWrapper<BucketInfo> db = EntityWrapper.get(BucketInfo.class);\n\t\tBucketInfo bucketInfo = new BucketInfo(bucketName);\n\t\tList<BucketInfo> bucketList = db.queryEscape(bucketInfo);\n\n\t\tif (bucketList.size() > 0) {\n\t\t\tEntityWrapper<ObjectInfo> dbObject = db.recast(ObjectInfo.class);\n\t\t\tObjectInfo searchObjectInfo = new ObjectInfo(bucketName, manifestKey);\n\t\t\tList<ObjectInfo> objectInfos = dbObject.queryEscape(searchObjectInfo);\n\t\t\tif(objectInfos.size() > 0)  {\n\t\t\t\tObjectInfo objectInfo = objectInfos.get(0);\n\n\t\t\t\tif(ctx.hasAdministrativePrivileges() || (\n\t\t\t\t\t\tobjectInfo.canRead(account.getAccountNumber()) &&\n\t\t\t\t\t\tLookups.checkPrivilege(PolicySpec.S3_GETOBJECT,\n\t\t\t\t\t\t\t\tPolicySpec.VENDOR_S3,\n\t\t\t\t\t\t\t\tPolicySpec.S3_RESOURCE_OBJECT,\n\t\t\t\t\t\t\t\tPolicySpec.objectFullName( bucketName, manifestKey ),\n\t\t\t\t\t\t\t\tobjectInfo.getOwnerId()))) {\n\t\t\t\t\tEntityWrapper<ImageCacheInfo> db2 = EntityWrapper.get(ImageCacheInfo.class);\n\t\t\t\t\tImageCacheInfo searchImageCacheInfo = new ImageCacheInfo(bucketName, manifestKey);\n\t\t\t\t\tList<ImageCacheInfo> foundImageCacheInfos = db2.queryEscape(searchImageCacheInfo);\n\t\t\t\t\tdb2.commit();\n\t\t\t\t\tif((foundImageCacheInfos.size() == 0) || (!imageCachers.containsKey(bucketName + manifestKey))) {\n\t\t\t\t\t\tcacheImage(bucketName, manifestKey, account, Contexts.lookup( ).hasAdministrativePrivileges( ));\n\t\t\t\t\t\treply.setSuccess(true);\n\t\t\t\t\t}\n\t\t\t\t\tdb.commit( );\n\t\t\t\t\treturn reply;\n\t\t\t\t} else {\n\t\t\t\t\tdb.rollback();\n\t\t\t\t\tthrow new AccessDeniedException(\"Key\", manifestKey);\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\tdb.rollback( );\n\t\t\t\tthrow new NoSuchEntityException(manifestKey);\n\n\t\t\t}\n\t\t} else {\n\t\t\tdb.rollback( );\n\t\t\tthrow new NoSuchBucketException(bucketName);\n\t\t}\n\t}","id":50551,"modified_method":"public CacheImageResponseType cacheImage(CacheImageType request) throws EucalyptusCloudException {\n\t\tCacheImageResponseType reply = (CacheImageResponseType) request.getReply();\n\t\treply.setSuccess(false);\n\t\tString bucketName = request.getBucket();\n\t\tString manifestKey = request.getKey();\n\t\tContext ctx = Contexts.lookup();\n\t\tAccount account = ctx.getAccount();\n\n\t\tEntityWrapper<BucketInfo> db = EntityWrapper.get(BucketInfo.class);\n\t\tBucketInfo bucketInfo = new BucketInfo(bucketName);\n\t\tList<BucketInfo> bucketList = db.queryEscape(bucketInfo);\n\n\t\tif (bucketList.size() > 0) {\n\t\t\tEntityWrapper<ObjectInfo> dbObject = db.recast(ObjectInfo.class);\n\t\t\tObjectInfo searchObjectInfo = new ObjectInfo(bucketName, manifestKey);\n\t\t\tList<ObjectInfo> objectInfos = dbObject.queryEscape(searchObjectInfo);\n\t\t\tif(objectInfos.size() > 0)  {\n\t\t\t\tObjectInfo objectInfo = objectInfos.get(0);\n\n\t\t\t\tif(ctx.hasAdministrativePrivileges() || (\n\t\t\t\t\t\tobjectInfo.canRead(account.getAccountNumber()) &&\n\t\t\t\t\t\tLookups.checkPrivilege(PolicySpec.S3_GETOBJECT,\n\t\t\t\t\t\t\t\tPolicySpec.VENDOR_S3,\n\t\t\t\t\t\t\t\tPolicySpec.S3_RESOURCE_OBJECT,\n\t\t\t\t\t\t\t\tPolicySpec.objectFullName( bucketName, manifestKey ),\n\t\t\t\t\t\t\t\tobjectInfo.getOwnerId()))) {\n\t\t\t\t\tEntityWrapper<ImageCacheInfo> db2 = EntityWrapper.get(ImageCacheInfo.class);\n\t\t\t\t\tImageCacheInfo searchImageCacheInfo = new ImageCacheInfo(bucketName, manifestKey);\n\t\t\t\t\tList<ImageCacheInfo> foundImageCacheInfos = db2.queryEscape(searchImageCacheInfo);\n\t\t\t\t\tif(!imageCachers.containsKey(bucketName + manifestKey)) {\n\t\t\t\t\t\tif(foundImageCacheInfos.size() > 0) {\n\t\t\t\t\t\t\tImageCacheInfo cacheInfo = foundImageCacheInfos.get(0);\n\t\t\t\t\t\t\tif(!cacheInfo.getInCache()) {\n\t\t\t\t\t\t\t//try again\n\t\t\t\t\t\t\t\tdb2.delete(cacheInfo);\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdb2.commit();\n\t\t\t\t\t\tcacheImage(bucketName, manifestKey, account, Contexts.lookup( ).hasAdministrativePrivileges( ));\n\t\t\t\t\t\treply.setSuccess(true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdb2.rollback();\n\t\t\t\t\t}\n\t\t\t\t\tdb.commit( );\n\t\t\t\t\treturn reply;\n\t\t\t\t} else {\n\t\t\t\t\tdb.rollback();\n\t\t\t\t\tthrow new AccessDeniedException(\"Key\", manifestKey);\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\tdb.rollback( );\n\t\t\t\tthrow new NoSuchEntityException(manifestKey);\n\n\t\t\t}\n\t\t} else {\n\t\t\tdb.rollback( );\n\t\t\tthrow new NoSuchBucketException(bucketName);\n\t\t}\n\t}","commit_id":"4e63aca17dfe3523fa36a4ce65b70fa6539a27e4","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public GetObjectExtendedResponseType getObjectExtended(GetObjectExtendedType request) throws EucalyptusCloudException {\n\t\tGetObjectExtendedResponseType reply = (GetObjectExtendedResponseType) request.getReply();\n\t\tLong byteRangeStart = request.getByteRangeStart();\n\t\tif(byteRangeStart == null) {\n\t\t\tbyteRangeStart = 0L;\n\t\t}\n\t\tLong byteRangeEnd = request.getByteRangeEnd();\n\t\tif(byteRangeEnd == null) {\n\t\t\tbyteRangeEnd = -1L;\n\t\t}\n\t\tDate ifModifiedSince = request.getIfModifiedSince();\n\t\tDate ifUnmodifiedSince = request.getIfUnmodifiedSince();\n\t\tString ifMatch = request.getIfMatch();\n\t\tString ifNoneMatch = request.getIfNoneMatch();\n\t\tboolean returnCompleteObjectOnFailure = request.getReturnCompleteObjectOnConditionFailure();\n\n\t\tString bucketName = request.getBucket();\n\t\tString objectKey = request.getKey();\n\t\tString userId = request.getUserId();\n\t\tStatus status = new Status();\n\n\t\tEntityWrapper<BucketInfo> db = WalrusControl.getEntityWrapper();\n\t\tBucketInfo bucketInfo = new BucketInfo(bucketName);\n\t\tList<BucketInfo> bucketList = db.query(bucketInfo);\n\n\n\t\tif (bucketList.size() > 0) {\n\t\t\tEntityWrapper<ObjectInfo> dbObject = db.recast(ObjectInfo.class);\n\t\t\tObjectInfo searchObjectInfo = new ObjectInfo(bucketName, objectKey);\n\t\t\tList<ObjectInfo> objectInfos = dbObject.query(searchObjectInfo);\n\t\t\tif(objectInfos.size() > 0) {\n\t\t\t\tObjectInfo objectInfo = objectInfos.get(0);\n\n\t\t\t\tif(objectInfo.canRead(userId)) {\n\t\t\t\t\tString etag = objectInfo.getEtag();\n\t\t\t\t\tString objectName = objectInfo.getObjectName();\n\t\t\t\t\tif(byteRangeEnd == -1)\n\t\t\t\t\t\tbyteRangeEnd = objectInfo.getSize();\n\t\t\t\t\tif((byteRangeStart > objectInfo.getSize()) || \n\t\t\t\t\t\t\t(byteRangeStart > byteRangeEnd) ||\n\t\t\t\t\t\t\t(byteRangeEnd > objectInfo.getSize()) ||\n\t\t\t\t\t\t\t(byteRangeStart < 0 || byteRangeEnd < 0)) {\n\t\t\t\t\t\tthrow new InvalidRangeException(\"Range: \" + byteRangeStart + \"-\" + byteRangeEnd + \"object: \" + bucketName + \"/\" + objectKey);\n\t\t\t\t\t}\n\t\t\t\t\tMappingHttpResponse httpResponse = new MappingHttpResponse( HttpVersion.HTTP_1_1 ); \n\t\t\t\t\tif(ifMatch != null) {\n\t\t\t\t\t\tif(!ifMatch.equals(etag) && !returnCompleteObjectOnFailure) {\n\t\t\t\t\t\t\tdb.rollback();\n\t\t\t\t\t\t\tthrow new PreconditionFailedException(objectKey + \" etag: \" + etag);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tif(ifNoneMatch != null) {\n\t\t\t\t\t\tif(ifNoneMatch.equals(etag) && !returnCompleteObjectOnFailure) {\n\t\t\t\t\t\t\tdb.rollback();\n\t\t\t\t\t\t\tthrow new NotModifiedException(objectKey + \" ETag: \" + etag);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tDate lastModified = objectInfo.getLastModified();\n\t\t\t\t\tif(ifModifiedSince != null) {\n\t\t\t\t\t\tif((ifModifiedSince.getTime() >= lastModified.getTime()) && !returnCompleteObjectOnFailure) {\n\t\t\t\t\t\t\tdb.rollback();\n\t\t\t\t\t\t\tthrow new NotModifiedException(objectKey + \" LastModified: \" + lastModified.toString());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(ifUnmodifiedSince != null) {\n\t\t\t\t\t\tif((ifUnmodifiedSince.getTime() < lastModified.getTime()) && !returnCompleteObjectOnFailure) {\n\t\t\t\t\t\t\tdb.rollback();\n\t\t\t\t\t\t\tthrow new PreconditionFailedException(objectKey + \" lastModified: \" + lastModified.toString());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(request.getGetMetaData()) {\n\t\t\t\t\t\tList<MetaDataInfo> metaDataInfos = objectInfo.getMetaData();\n\t\t\t\t\t\tfor(MetaDataInfo metaDataInfo : metaDataInfos) {\n\t\t\t\t\t\t\thttpResponse.addHeader(WalrusProperties.AMZ_META_HEADER_PREFIX + metaDataInfo.getName(), metaDataInfo.getValue());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(request.getGetData()) {\n\t\t\t\t\t\tif(WalrusProperties.trackUsageStatistics) {\n\t\t\t\t\t\t\twalrusStatistics.updateBytesOut(objectInfo.getSize());\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstorageManager.sendObject(request.getChannel(), httpResponse, bucketName, objectName, byteRangeStart, byteRangeEnd, objectInfo.getSize(), objectInfo.getEtag(), \n\t\t\t\t\t\t\t\tDateUtils.format(objectInfo.getLastModified().getTime(), DateUtils.ISO8601_DATETIME_PATTERN + \".000Z\"), \n\t\t\t\t\t\t\t\tobjectInfo.getContentType(), objectInfo.getContentDisposition(), request.getIsCompressed());                            \n\t\t\t\t\t} else {\n\t\t\t\t\t\tstorageManager.sendHeaders(request.getChannel(), httpResponse, objectInfo.getSize(), objectInfo.getEtag(), \n\t\t\t\t\t\t\t\tDateUtils.format(objectInfo.getLastModified().getTime(), DateUtils.ISO8601_DATETIME_PATTERN + \".000Z\"), \n\t\t\t\t\t\t\t\tobjectInfo.getContentType(), objectInfo.getContentDisposition());                            \n\t\t\t\t\t}\n\t\t\t\t\treply.setEtag(objectInfo.getEtag());\n\t\t\t\t\treply.setLastModified(DateUtils.format(objectInfo.getLastModified().getTime(), DateUtils.ISO8601_DATETIME_PATTERN) + \".000Z\");\n\t\t\t\t\tif(byteRangeEnd > -1) {\n\t\t\t\t\t\tif(byteRangeEnd <= objectInfo.getSize() && ((byteRangeEnd - byteRangeStart) > 0))\n\t\t\t\t\t\t\treply.setSize(byteRangeEnd - byteRangeStart);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\treply.setSize(0L);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treply.setSize(objectInfo.getSize());\n\t\t\t\t\t}\n\t\t\t\t\tstatus.setCode(200);\n\t\t\t\t\tstatus.setDescription(\"OK\");\n\t\t\t\t\treply.setContentType(\"binary/octet-stream\");                    \n\t\t\t\t\treply.setStatus(status);\n\t\t\t\t} else {\n\t\t\t\t\tdb.rollback();\n\t\t\t\t\tthrow new AccessDeniedException(\"Key\", objectKey);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdb.rollback();\n\t\t\t\tthrow new NoSuchEntityException(objectKey);\n\t\t\t}\n\t\t} else {\n\t\t\tdb.rollback();\n\t\t\tthrow new NoSuchBucketException(bucketName);\n\t\t}\n\t\tdb.commit();\n\t\treturn reply;\n\t}","id":50552,"modified_method":"public GetObjectExtendedResponseType getObjectExtended(GetObjectExtendedType request) throws EucalyptusCloudException {\n\t\tGetObjectExtendedResponseType reply = (GetObjectExtendedResponseType) request.getReply();\n\t\tLong byteRangeStart = request.getByteRangeStart();\n\t\tif(byteRangeStart == null) {\n\t\t\tbyteRangeStart = 0L;\n\t\t}\n\t\tLong byteRangeEnd = request.getByteRangeEnd();\n\t\tif(byteRangeEnd == null) {\n\t\t\tbyteRangeEnd = -1L;\n\t\t}\n\t\tDate ifModifiedSince = request.getIfModifiedSince();\n\t\tDate ifUnmodifiedSince = request.getIfUnmodifiedSince();\n\t\tString ifMatch = request.getIfMatch();\n\t\tString ifNoneMatch = request.getIfNoneMatch();\n\t\tboolean returnCompleteObjectOnFailure = request.getReturnCompleteObjectOnConditionFailure();\n\n\t\tString bucketName = request.getBucket();\n\t\tString objectKey = request.getKey();\n\t\tString userId = request.getUserId();\n\t\tStatus status = new Status();\n\n\t\tEntityWrapper<BucketInfo> db = WalrusControl.getEntityWrapper();\n\t\tBucketInfo bucketInfo = new BucketInfo(bucketName);\n\t\tList<BucketInfo> bucketList = db.query(bucketInfo);\n\n\n\t\tif (bucketList.size() > 0) {\n\t\t\tEntityWrapper<ObjectInfo> dbObject = db.recast(ObjectInfo.class);\n\t\t\tObjectInfo searchObjectInfo = new ObjectInfo(bucketName, objectKey);\n\t\t\tList<ObjectInfo> objectInfos = dbObject.query(searchObjectInfo);\n\t\t\tif(objectInfos.size() > 0) {\n\t\t\t\tObjectInfo objectInfo = objectInfos.get(0);\n\n\t\t\t\tif(objectInfo.canRead(userId)) {\n\t\t\t\t\tString etag = objectInfo.getEtag();\n\t\t\t\t\tString objectName = objectInfo.getObjectName();\n\t\t\t\t\tif(byteRangeEnd == -1)\n\t\t\t\t\t\tbyteRangeEnd = objectInfo.getSize();\n\t\t\t\t\tif((byteRangeStart > objectInfo.getSize()) || \n\t\t\t\t\t\t\t(byteRangeStart > byteRangeEnd) ||\n\t\t\t\t\t\t\t(byteRangeEnd > objectInfo.getSize()) ||\n\t\t\t\t\t\t\t(byteRangeStart < 0 || byteRangeEnd < 0)) {\n\t\t\t\t\t\tthrow new InvalidRangeException(\"Range: \" + byteRangeStart + \"-\" + byteRangeEnd + \"object: \" + bucketName + \"/\" + objectKey);\n\t\t\t\t\t}\n\t\t\t\t\tMappingHttpResponse httpResponse = new MappingHttpResponse( HttpVersion.HTTP_1_1 ); \n\t\t\t\t\tif(ifMatch != null) {\n\t\t\t\t\t\tif(!ifMatch.equals(etag) && !returnCompleteObjectOnFailure) {\n\t\t\t\t\t\t\tdb.rollback();\n\t\t\t\t\t\t\tthrow new PreconditionFailedException(objectKey + \" etag: \" + etag);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tif(ifNoneMatch != null) {\n\t\t\t\t\t\tif(ifNoneMatch.equals(etag) && !returnCompleteObjectOnFailure) {\n\t\t\t\t\t\t\tdb.rollback();\n\t\t\t\t\t\t\tthrow new NotModifiedException(objectKey + \" ETag: \" + etag);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tDate lastModified = objectInfo.getLastModified();\n\t\t\t\t\tif(ifModifiedSince != null) {\n\t\t\t\t\t\tif((ifModifiedSince.getTime() >= lastModified.getTime()) && !returnCompleteObjectOnFailure) {\n\t\t\t\t\t\t\tdb.rollback();\n\t\t\t\t\t\t\tthrow new NotModifiedException(objectKey + \" LastModified: \" + lastModified.toString());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(ifUnmodifiedSince != null) {\n\t\t\t\t\t\tif((ifUnmodifiedSince.getTime() < lastModified.getTime()) && !returnCompleteObjectOnFailure) {\n\t\t\t\t\t\t\tdb.rollback();\n\t\t\t\t\t\t\tthrow new PreconditionFailedException(objectKey + \" lastModified: \" + lastModified.toString());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(request.getGetMetaData()) {\n\t\t\t\t\t\tList<MetaDataInfo> metaDataInfos = objectInfo.getMetaData();\n\t\t\t\t\t\tfor(MetaDataInfo metaDataInfo : metaDataInfos) {\n\t\t\t\t\t\t\thttpResponse.addHeader(WalrusProperties.AMZ_META_HEADER_PREFIX + metaDataInfo.getName(), metaDataInfo.getValue());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tLong size = objectInfo.getSize();\n\t\t\t\t\tString contentType = objectInfo.getContentType();\n\t\t\t\t\tString contentDisposition = objectInfo.getContentDisposition();\n\t\t\t\t\tdb.commit();\n\t\t\t\t\tif(request.getGetData()) {\n\t\t\t\t\t\tif(WalrusProperties.trackUsageStatistics) {\n\t\t\t\t\t\t\twalrusStatistics.updateBytesOut(size);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstorageManager.sendObject(request.getChannel(), httpResponse, bucketName, objectName, byteRangeStart, byteRangeEnd, size, etag, \n\t\t\t\t\t\t\t\tDateUtils.format(lastModified.getTime(), DateUtils.ISO8601_DATETIME_PATTERN + \".000Z\"), \n\t\t\t\t\t\t\t\tcontentType, contentDisposition, request.getIsCompressed());                            \n\t\t\t\t\t} else {\n\t\t\t\t\t\tstorageManager.sendHeaders(request.getChannel(), httpResponse, size, etag, \n\t\t\t\t\t\t\t\tDateUtils.format(lastModified.getTime(), DateUtils.ISO8601_DATETIME_PATTERN + \".000Z\"), \n\t\t\t\t\t\t\t\tcontentType, contentDisposition);                            \n\t\t\t\t\t}\n\t\t\t\t\treply.setEtag(etag);\n\t\t\t\t\treply.setLastModified(DateUtils.format(lastModified.getTime(), DateUtils.ISO8601_DATETIME_PATTERN) + \".000Z\");\n\t\t\t\t\tif(byteRangeEnd > -1) {\n\t\t\t\t\t\tif(byteRangeEnd <= size && ((byteRangeEnd - byteRangeStart) > 0))\n\t\t\t\t\t\t\treply.setSize(byteRangeEnd - byteRangeStart);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\treply.setSize(0L);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treply.setSize(size);\n\t\t\t\t\t}\n\t\t\t\t\tstatus.setCode(200);\n\t\t\t\t\tstatus.setDescription(\"OK\");\n\t\t\t\t\treply.setContentType(\"binary/octet-stream\");                    \n\t\t\t\t\treply.setStatus(status);\n\t\t\t\t} else {\n\t\t\t\t\tdb.rollback();\n\t\t\t\t\tthrow new AccessDeniedException(\"Key\", objectKey);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdb.rollback();\n\t\t\t\tthrow new NoSuchEntityException(objectKey);\n\t\t\t}\n\t\t} else {\n\t\t\tdb.rollback();\n\t\t\tthrow new NoSuchBucketException(bucketName);\n\t\t}\n\t\tdb.commit();\n\t\treturn reply;\n\t}","commit_id":"fbcf13da74f2ce988c1970785d3e49dd7ceb9cb2","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public GetObjectResponseType getObject(GetObjectType request) throws EucalyptusCloudException {\n\t\tGetObjectResponseType reply = (GetObjectResponseType) request.getReply();\n\t\tString bucketName = request.getBucket();\n\t\tString objectKey = request.getKey();\n\t\tString userId = request.getUserId();\n\t\tBoolean deleteAfterGet = request.getDeleteAfterGet();\n\t\tif(deleteAfterGet == null)\n\t\t\tdeleteAfterGet = false;\n\n\t\tBoolean getTorrent = request.getGetTorrent();\n\t\tif(getTorrent == null)\n\t\t\tgetTorrent = false;\n\n\t\tBoolean getMetaData = request.getGetMetaData();\n\t\tif(getMetaData == null)\n\t\t\tgetMetaData = false;\n\n\t\tEntityWrapper<BucketInfo> db = WalrusControl.getEntityWrapper();\n\t\tBucketInfo bucketInfo = new BucketInfo(bucketName);\n\t\tList<BucketInfo> bucketList = db.query(bucketInfo);\n\n\t\tif (bucketList.size() > 0) {\n\t\t\tEntityWrapper<ObjectInfo> dbObject = db.recast(ObjectInfo.class);\n\t\t\tObjectInfo searchObjectInfo = new ObjectInfo(bucketName, objectKey);\n\t\t\tList<ObjectInfo> objectInfos = dbObject.query(searchObjectInfo);\n\t\t\tif(objectInfos.size() > 0) {\n\t\t\t\tObjectInfo objectInfo = objectInfos.get(0);\n\t\t\t\tif(objectInfo.canRead(userId)) {\n\t\t\t\t\tString objectName = objectInfo.getObjectName();\n\t\t\t\t\tMappingHttpResponse httpResponse = new MappingHttpResponse( HttpVersion.HTTP_1_1 ); \n\t\t\t\t\tif(getMetaData) {\n\t\t\t\t\t\tList<MetaDataInfo> metaDataInfos = objectInfo.getMetaData();\n\t\t\t\t\t\tfor(MetaDataInfo metaDataInfo : metaDataInfos) {\n\t\t\t\t\t\t\thttpResponse.addHeader(WalrusProperties.AMZ_META_HEADER_PREFIX + metaDataInfo.getName(), metaDataInfo.getValue());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(getTorrent) {\n\t\t\t\t\t\tif(objectInfo.isGlobalRead()) {\n\t\t\t\t\t\t\tif(!WalrusProperties.enableTorrents) {\n\t\t\t\t\t\t\t\tLOG.warn(\"Bittorrent support has been disabled. Please check pre-requisites\");\n\t\t\t\t\t\t\t\tthrow new EucalyptusCloudException(\"Torrents disabled\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tEntityWrapper<TorrentInfo> dbTorrent = WalrusControl.getEntityWrapper();\n\t\t\t\t\t\t\tTorrentInfo torrentInfo = new TorrentInfo(bucketName, objectKey);\n\t\t\t\t\t\t\tTorrentInfo foundTorrentInfo;\n\t\t\t\t\t\t\tString absoluteObjectPath = storageManager.getObjectPath(bucketName, objectName);\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tfoundTorrentInfo = dbTorrent.getUnique(torrentInfo);\n\t\t\t\t\t\t\t} catch (EucalyptusCloudException ex) {\n\t\t\t\t\t\t\t\tString torrentFile = objectName + \".torrent\";\n\t\t\t\t\t\t\t\tString torrentFilePath = storageManager.getObjectPath(bucketName, torrentFile);\n\t\t\t\t\t\t\t\tTorrentCreator torrentCreator = new TorrentCreator(absoluteObjectPath, objectKey, objectName, torrentFilePath, WalrusProperties.TRACKER_URL);\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\ttorrentCreator.create();\n\t\t\t\t\t\t\t\t} catch(Exception e) {\n\t\t\t\t\t\t\t\t\tLOG.error(e);\n\t\t\t\t\t\t\t\t\tthrow new EucalyptusCloudException(\"could not create torrent file \" + torrentFile);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttorrentInfo.setTorrentFile(torrentFile);\n\t\t\t\t\t\t\t\tdbTorrent.add(torrentInfo);\n\t\t\t\t\t\t\t\tfoundTorrentInfo = torrentInfo;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdbTorrent.commit();\n\t\t\t\t\t\t\tString torrentFile = foundTorrentInfo.getTorrentFile();\n\t\t\t\t\t\t\tString torrentFilePath = storageManager.getObjectPath(bucketName, torrentFile);\n\t\t\t\t\t\t\tTorrentClient torrentClient = new TorrentClient(torrentFilePath, absoluteObjectPath);\n\t\t\t\t\t\t\tTorrents.addClient(bucketName + objectKey, torrentClient);\n\t\t\t\t\t\t\ttorrentClient.start();\n\t\t\t\t\t\t\t//send torrent\n\t\t\t\t\t\t\tString key = bucketName + \".\" + objectKey;\n\t\t\t\t\t\t\tString randomKey = key + \".\" + Hashes.getRandom(10);\n\t\t\t\t\t\t\trequest.setRandomKey(randomKey);\n\n\t\t\t\t\t\t\tFile torrent = new File(torrentFilePath);\n\t\t\t\t\t\t\tif(torrent.exists()) {\n\t\t\t\t\t\t\t\tlong torrentLength = torrent.length();\n\t\t\t\t\t\t\t\tstorageManager.sendObject(request.getChannel(), httpResponse, bucketName, torrentFile, torrentLength, null, \n\t\t\t\t\t\t\t\t\t\tDateUtils.format(objectInfo.getLastModified().getTime(), DateUtils.ISO8601_DATETIME_PATTERN) + \".000Z\", \n\t\t\t\t\t\t\t\t\t\t\"application/x-bittorrent\", \"attachment; filename=\" + objectKey + \".torrent;\", request.getIsCompressed());\n\t\t\t\t\t\t\t\t//TODO: this should reflect params for the torrent?\n\t\t\t\t\t\t\t\treply.setEtag(\"\");\n\t\t\t\t\t\t\t\treply.setLastModified(DateUtils.format(objectInfo.getLastModified().getTime(), DateUtils.ISO8601_DATETIME_PATTERN));\n\t\t\t\t\t\t\t\treply.setSize(torrentLength);\n\t\t\t\t\t\t\t\tStatus status = new Status();\n\t\t\t\t\t\t\t\tstatus.setCode(200);\n\t\t\t\t\t\t\t\tstatus.setDescription(\"OK\");\n\t\t\t\t\t\t\t\treply.setStatus(status);\n\t\t\t\t\t\t\t\treply.setContentType(\"binary/octet-stream\");\n\t\t\t\t\t\t\t\tdb.commit();\n\t\t\t\t\t\t\t\tif(WalrusProperties.trackUsageStatistics) {\n\t\t\t\t\t\t\t\t\twalrusStatistics.updateBytesOut(torrentLength);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn reply;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tString errorString = \"Could not get torrent file \" + torrentFilePath;\n\t\t\t\t\t\t\t\tLOG.error(errorString);\n\t\t\t\t\t\t\t\tthrow new EucalyptusCloudException(errorString);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdb.rollback();\n\t\t\t\t\t\t\tthrow new AccessDeniedException(\"Key\", objectKey);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(request.getGetData()) {\n\t\t\t\t\t\tif(request.getInlineData()) {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tbyte[] bytes = new byte[102400/*TODO: NEIL WalrusQueryDispatcher.DATA_MESSAGE_SIZE*/];\n\t\t\t\t\t\t\t\tint bytesRead = 0;\n\t\t\t\t\t\t\t\tString base64Data = \"\";\n\t\t\t\t\t\t\t\twhile((bytesRead = storageManager.readObject(bucketName, objectName, bytes, bytesRead)) > 0) {\n\t\t\t\t\t\t\t\t\tbase64Data += new String(bytes, 0, bytesRead);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treply.setBase64Data(base64Data);\n\t\t\t\t\t\t\t} catch (IOException ex) {\n\t\t\t\t\t\t\t\tdb.rollback();\n\t\t\t\t\t\t\t\tLOG.error(ex);\n\t\t\t\t\t\t\t\t//set error code\n\t\t\t\t\t\t\t\treturn reply;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t//support for large objects\n\t\t\t\t\t\t\tif(WalrusProperties.trackUsageStatistics) {\n\t\t\t\t\t\t\t\twalrusStatistics.updateBytesOut(objectInfo.getSize());\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstorageManager.sendObject(request.getChannel(), httpResponse, bucketName, objectName, objectInfo.getSize(), objectInfo.getEtag(), \n\t\t\t\t\t\t\t\t\tDateUtils.format(objectInfo.getLastModified().getTime(), DateUtils.ISO8601_DATETIME_PATTERN) + \".000Z\", \n\t\t\t\t\t\t\t\t\tobjectInfo.getContentType(), objectInfo.getContentDisposition(), request.getIsCompressed());                            \n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstorageManager.sendHeaders(request.getChannel(), httpResponse, objectInfo.getSize(), objectInfo.getEtag(), \n\t\t\t\t\t\t\t\tDateUtils.format(objectInfo.getLastModified().getTime(), DateUtils.ISO8601_DATETIME_PATTERN) + \".000Z\", \n\t\t\t\t\t\t\t\tobjectInfo.getContentType(), objectInfo.getContentDisposition());                            \n\n\t\t\t\t\t}\n\t\t\t\t\treply.setEtag(objectInfo.getEtag());\n\t\t\t\t\treply.setLastModified(DateUtils.format(objectInfo.getLastModified().getTime(), DateUtils.ISO8601_DATETIME_PATTERN) + \".000Z\");\n\t\t\t\t\treply.setSize(objectInfo.getSize());\n\t\t\t\t\treply.setContentType(objectInfo.getContentType());\n\t\t\t\t\treply.setContentDisposition(objectInfo.getContentDisposition());\n\t\t\t\t\tStatus status = new Status();\n\t\t\t\t\tstatus.setCode(200);\n\t\t\t\t\tstatus.setDescription(\"OK\");\n\t\t\t\t\treply.setStatus(status);\n\t\t\t\t\tdb.commit();\n\t\t\t\t\treturn reply;\n\t\t\t\t} else {\n\t\t\t\t\tdb.rollback();\n\t\t\t\t\tthrow new AccessDeniedException(\"Key\", objectKey);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdb.rollback();\n\t\t\t\tthrow new NoSuchEntityException(objectKey);\n\t\t\t}\n\t\t} else {\n\t\t\tdb.rollback();\n\t\t\tthrow new NoSuchBucketException(bucketName);\n\t\t}\n\t}","id":50553,"modified_method":"public GetObjectResponseType getObject(GetObjectType request) throws EucalyptusCloudException {\n\t\tGetObjectResponseType reply = (GetObjectResponseType) request.getReply();\n\t\tString bucketName = request.getBucket();\n\t\tString objectKey = request.getKey();\n\t\tString userId = request.getUserId();\n\t\tBoolean deleteAfterGet = request.getDeleteAfterGet();\n\t\tif(deleteAfterGet == null)\n\t\t\tdeleteAfterGet = false;\n\n\t\tBoolean getTorrent = request.getGetTorrent();\n\t\tif(getTorrent == null)\n\t\t\tgetTorrent = false;\n\n\t\tBoolean getMetaData = request.getGetMetaData();\n\t\tif(getMetaData == null)\n\t\t\tgetMetaData = false;\n\n\t\tEntityWrapper<BucketInfo> db = WalrusControl.getEntityWrapper();\n\t\tBucketInfo bucketInfo = new BucketInfo(bucketName);\n\t\tList<BucketInfo> bucketList = db.query(bucketInfo);\n\n\t\tif (bucketList.size() > 0) {\n\t\t\tEntityWrapper<ObjectInfo> dbObject = db.recast(ObjectInfo.class);\n\t\t\tObjectInfo searchObjectInfo = new ObjectInfo(bucketName, objectKey);\n\t\t\tList<ObjectInfo> objectInfos = dbObject.query(searchObjectInfo);\n\t\t\tif(objectInfos.size() > 0) {\n\t\t\t\tObjectInfo objectInfo = objectInfos.get(0);\n\t\t\t\tif(objectInfo.canRead(userId)) {\n\t\t\t\t\tString objectName = objectInfo.getObjectName();\n\t\t\t\t\tMappingHttpResponse httpResponse = new MappingHttpResponse( HttpVersion.HTTP_1_1 ); \n\t\t\t\t\tif(getMetaData) {\n\t\t\t\t\t\tList<MetaDataInfo> metaDataInfos = objectInfo.getMetaData();\n\t\t\t\t\t\tfor(MetaDataInfo metaDataInfo : metaDataInfos) {\n\t\t\t\t\t\t\thttpResponse.addHeader(WalrusProperties.AMZ_META_HEADER_PREFIX + metaDataInfo.getName(), metaDataInfo.getValue());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(getTorrent) {\n\t\t\t\t\t\tif(objectInfo.isGlobalRead()) {\n\t\t\t\t\t\t\tif(!WalrusProperties.enableTorrents) {\n\t\t\t\t\t\t\t\tLOG.warn(\"Bittorrent support has been disabled. Please check pre-requisites\");\n\t\t\t\t\t\t\t\tthrow new EucalyptusCloudException(\"Torrents disabled\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tEntityWrapper<TorrentInfo> dbTorrent = WalrusControl.getEntityWrapper();\n\t\t\t\t\t\t\tTorrentInfo torrentInfo = new TorrentInfo(bucketName, objectKey);\n\t\t\t\t\t\t\tTorrentInfo foundTorrentInfo;\n\t\t\t\t\t\t\tString absoluteObjectPath = storageManager.getObjectPath(bucketName, objectName);\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tfoundTorrentInfo = dbTorrent.getUnique(torrentInfo);\n\t\t\t\t\t\t\t} catch (EucalyptusCloudException ex) {\n\t\t\t\t\t\t\t\tString torrentFile = objectName + \".torrent\";\n\t\t\t\t\t\t\t\tString torrentFilePath = storageManager.getObjectPath(bucketName, torrentFile);\n\t\t\t\t\t\t\t\tTorrentCreator torrentCreator = new TorrentCreator(absoluteObjectPath, objectKey, objectName, torrentFilePath, WalrusProperties.TRACKER_URL);\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\ttorrentCreator.create();\n\t\t\t\t\t\t\t\t} catch(Exception e) {\n\t\t\t\t\t\t\t\t\tLOG.error(e);\n\t\t\t\t\t\t\t\t\tthrow new EucalyptusCloudException(\"could not create torrent file \" + torrentFile);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttorrentInfo.setTorrentFile(torrentFile);\n\t\t\t\t\t\t\t\tdbTorrent.add(torrentInfo);\n\t\t\t\t\t\t\t\tfoundTorrentInfo = torrentInfo;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdbTorrent.commit();\n\t\t\t\t\t\t\tString torrentFile = foundTorrentInfo.getTorrentFile();\n\t\t\t\t\t\t\tString torrentFilePath = storageManager.getObjectPath(bucketName, torrentFile);\n\t\t\t\t\t\t\tTorrentClient torrentClient = new TorrentClient(torrentFilePath, absoluteObjectPath);\n\t\t\t\t\t\t\tTorrents.addClient(bucketName + objectKey, torrentClient);\n\t\t\t\t\t\t\ttorrentClient.start();\n\t\t\t\t\t\t\t//send torrent\n\t\t\t\t\t\t\tString key = bucketName + \".\" + objectKey;\n\t\t\t\t\t\t\tString randomKey = key + \".\" + Hashes.getRandom(10);\n\t\t\t\t\t\t\trequest.setRandomKey(randomKey);\n\n\t\t\t\t\t\t\tFile torrent = new File(torrentFilePath);\n\t\t\t\t\t\t\tif(torrent.exists()) {\n\t\t\t\t\t\t\t\tDate lastModified = objectInfo.getLastModified();\n\t\t\t\t\t\t\t\tdb.commit();\n\t\t\t\t\t\t\t\tlong torrentLength = torrent.length();\n\t\t\t\t\t\t\t\tstorageManager.sendObject(request.getChannel(), httpResponse, bucketName, torrentFile, torrentLength, null, \n\t\t\t\t\t\t\t\t\t\tDateUtils.format(lastModified.getTime(), DateUtils.ISO8601_DATETIME_PATTERN) + \".000Z\", \n\t\t\t\t\t\t\t\t\t\t\"application/x-bittorrent\", \"attachment; filename=\" + objectKey + \".torrent;\", request.getIsCompressed());\n\t\t\t\t\t\t\t\t//TODO: this should reflect params for the torrent?\n\t\t\t\t\t\t\t\treply.setEtag(\"\");\n\t\t\t\t\t\t\t\treply.setLastModified(DateUtils.format(lastModified.getTime(), DateUtils.ISO8601_DATETIME_PATTERN));\n\t\t\t\t\t\t\t\treply.setSize(torrentLength);\n\t\t\t\t\t\t\t\tStatus status = new Status();\n\t\t\t\t\t\t\t\tstatus.setCode(200);\n\t\t\t\t\t\t\t\tstatus.setDescription(\"OK\");\n\t\t\t\t\t\t\t\treply.setStatus(status);\n\t\t\t\t\t\t\t\treply.setContentType(\"binary/octet-stream\");\n\t\t\t\t\t\t\t\tif(WalrusProperties.trackUsageStatistics) {\n\t\t\t\t\t\t\t\t\twalrusStatistics.updateBytesOut(torrentLength);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn reply;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tdb.rollback();\n\t\t\t\t\t\t\t\tString errorString = \"Could not get torrent file \" + torrentFilePath;\n\t\t\t\t\t\t\t\tLOG.error(errorString);\n\t\t\t\t\t\t\t\tthrow new EucalyptusCloudException(errorString);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdb.rollback();\n\t\t\t\t\t\t\tthrow new AccessDeniedException(\"Key\", objectKey);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tDate lastModified = objectInfo.getLastModified();\n\t\t\t\t\tLong size = objectInfo.getSize();\n\t\t\t\t\tString etag = objectInfo.getEtag();\n\t\t\t\t\tString contentType = objectInfo.getContentType();\n\t\t\t\t\tString contentDisposition = objectInfo.getContentDisposition();\n\t\t\t\t\tdb.commit();\n\t\t\t\t\tif(request.getGetData()) {\n\t\t\t\t\t\tif(request.getInlineData()) {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tbyte[] bytes = new byte[102400/*TODO: NEIL WalrusQueryDispatcher.DATA_MESSAGE_SIZE*/];\n\t\t\t\t\t\t\t\tint bytesRead = 0;\n\t\t\t\t\t\t\t\tString base64Data = \"\";\n\t\t\t\t\t\t\t\twhile((bytesRead = storageManager.readObject(bucketName, objectName, bytes, bytesRead)) > 0) {\n\t\t\t\t\t\t\t\t\tbase64Data += new String(bytes, 0, bytesRead);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treply.setBase64Data(base64Data);\n\t\t\t\t\t\t\t} catch (IOException ex) {\n\t\t\t\t\t\t\t\tdb.rollback();\n\t\t\t\t\t\t\t\tLOG.error(ex);\n\t\t\t\t\t\t\t\t//set error code\n\t\t\t\t\t\t\t\treturn reply;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t//support for large objects\n\t\t\t\t\t\t\tif(WalrusProperties.trackUsageStatistics) {\n\t\t\t\t\t\t\t\twalrusStatistics.updateBytesOut(objectInfo.getSize());\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstorageManager.sendObject(request.getChannel(), httpResponse, bucketName, objectName, size, etag, \n\t\t\t\t\t\t\t\t\tDateUtils.format(lastModified.getTime(), DateUtils.ISO8601_DATETIME_PATTERN) + \".000Z\", \n\t\t\t\t\t\t\t\t\tcontentType, contentDisposition, request.getIsCompressed());                            \n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstorageManager.sendHeaders(request.getChannel(), httpResponse, size, etag, \n\t\t\t\t\t\t\t\tDateUtils.format(lastModified.getTime(), DateUtils.ISO8601_DATETIME_PATTERN) + \".000Z\", \n\t\t\t\t\t\t\t\tcontentType, contentDisposition);                            \n\n\t\t\t\t\t}\n\t\t\t\t\treply.setEtag(etag);\n\t\t\t\t\treply.setLastModified(DateUtils.format(lastModified, DateUtils.ISO8601_DATETIME_PATTERN) + \".000Z\");\n\t\t\t\t\treply.setSize(size);\n\t\t\t\t\treply.setContentType(contentType);\n\t\t\t\t\treply.setContentDisposition(contentDisposition);\n\t\t\t\t\tStatus status = new Status();\n\t\t\t\t\tstatus.setCode(200);\n\t\t\t\t\tstatus.setDescription(\"OK\");\n\t\t\t\t\treply.setStatus(status);\n\t\t\t\t\treturn reply;\n\t\t\t\t} else {\n\t\t\t\t\tdb.rollback();\n\t\t\t\t\tthrow new AccessDeniedException(\"Key\", objectKey);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdb.rollback();\n\t\t\t\tthrow new NoSuchEntityException(objectKey);\n\t\t\t}\n\t\t} else {\n\t\t\tdb.rollback();\n\t\t\tthrow new NoSuchBucketException(bucketName);\n\t\t}\n\t}","commit_id":"fbcf13da74f2ce988c1970785d3e49dd7ceb9cb2","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public static void handleUnreported( final List<String> unreportedVms ) {\n    for ( final String vmId : unreportedVms ) {\n      EntityTransaction db1 = Entities.get( VmInstance.class );\n      try {\n        VmInstance vm = VmInstances.cachedLookup( vmId );\n        if ( VmInstances.Timeout.UNREPORTED.apply( vm ) ) {\n          VmInstances.terminated( vm );\n        } else if ( VmInstances.Timeout.SHUTTING_DOWN.apply( vm ) ) {\n          VmInstances.terminated( vm );\n        } else if ( VmInstances.Timeout.TERMINATED.apply( vm ) ) {\n          VmInstances.delete( vm );\n        }\n        db1.commit( );\n      } catch ( final Exception ex ) {\n        Logs.extreme( ).error( ex, ex );\n        db1.rollback( );\n      }\n    }\n  }","id":50554,"modified_method":"public static void handleUnreported( final List<String> unreportedVms ) {\n    for ( final String vmId : unreportedVms ) {\n      EntityTransaction db1 = Entities.get( VmInstance.class );\n      try {\n        VmInstance vm = VmInstances.cachedLookup( vmId );\n        if ( VmInstances.Timeout.UNREPORTED.apply( vm ) ) {\n          VmInstances.terminated( vm );\n        } else if ( VmInstances.Timeout.SHUTTING_DOWN.apply( vm ) ) {\n          VmInstances.terminated( vm );\n        } else if ( VmInstances.Timeout.TERMINATED.apply( vm ) ) {\n          VmInstances.delete( vm );\n        }\n        if ( Databases.isSynchronizing( ) ) {\n          db1.rollback( );\n        } else {\n          db1.commit( );\n        }\n      } catch ( final Exception ex ) {\n        Logs.extreme( ).error( ex, ex );\n        db1.rollback( );\n      }\n    }\n  }","commit_id":"7a5ed6e3a58d782f86cc611082286b4e5e10ab59","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public VmPendingCallback( Cluster cluster ) {\n      super( cluster );\n      super.setRequest( new VmDescribeType( ) {\n        {\n          regarding( );\n          EntityTransaction db = Entities.get( VmInstance.class );\n          try {\n            for ( VmInstance vm : Iterables.filter( VmInstances.list( ), VmPendingCallback.this.filter ) ) {\n              this.getInstancesSet( ).add( vm.getInstanceId( ) );\n            }\n            db.commit( );\n          } catch ( Exception ex ) {\n            Logs.exhaust( ).error( ex, ex );\n            db.rollback( );\n          }\n        }\n      } );\n      if ( this.getRequest( ).getInstancesSet( ).isEmpty( ) ) {\n        throw new CancellationException( );\n      }\n    }","id":50555,"modified_method":"public VmPendingCallback( Cluster cluster ) {\n      super( cluster );\n      super.setRequest( new VmDescribeType( ) {\n        {\n          regarding( );\n          EntityTransaction db = Entities.get( VmInstance.class );\n          try {\n            for ( VmInstance vm : Iterables.filter( VmInstances.list( ), VmPendingCallback.this.filter ) ) {\n              this.getInstancesSet( ).add( vm.getInstanceId( ) );\n            }\n            if ( Databases.isSynchronizing( ) ) {\n              db.rollback( );\n            } else {\n              db.commit( );\n            }\n          } catch ( Exception ex ) {\n            Logs.exhaust( ).error( ex, ex );\n            db.rollback( );\n          }\n        }\n      } );\n      if ( this.getRequest( ).getInstancesSet( ).isEmpty( ) ) {\n        throw new CancellationException( );\n      }\n    }","commit_id":"7a5ed6e3a58d782f86cc611082286b4e5e10ab59","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public static void handleReportedState( final VmInfo runVm ) {\n    final VmState runVmState = VmState.Mapper.get( runVm.getStateName( ) );\n    try {\n      EntityTransaction db = Entities.get( VmInstance.class );\n      try {\n        VmInstance vm = VmInstances.lookup( runVm.getInstanceId( ) );\n        if ( VmInstances.Timeout.EXPIRED.apply( vm ) ) {\n          VmInstances.shutDown( vm );\n        } else if ( VmState.SHUTTING_DOWN.equals( runVmState ) ) {\n          VmStateCallback.handleReportedTeardown( vm, runVm );\n        } else if ( VmStateSet.RUN.apply( vm ) ) {\n          vm.doUpdate( ).apply( runVm );\n        } else if ( !VmStateSet.RUN.apply( vm ) && VmStateSet.RUN.contains( runVmState )\n                    && vm.lastUpdateMillis( ) > ( VmInstances.VOLATILE_STATE_TIMEOUT_SEC * 1000l ) ) {\n          vm.doUpdate( ).apply( runVm );\n        }\n        db.commit( );\n      } catch ( Exception ex ) {\n        LOG.trace( ex, ex );\n        db.rollback( );\n        throw ex;\n      }\n    } catch ( TerminatedInstanceException ex1 ) {\n      LOG.trace( \"Ignore state update to terminated instance: \" + runVm.getInstanceId( ) );\n    } catch ( NoSuchElementException ex1 ) {\n      if ( VmStateSet.RUN.contains( runVmState ) ) {\n        VmStateCallback.handleRestore( runVm );\n      }\n    } catch ( Exception ex1 ) {\n      LOG.trace( ex1, ex1 );\n    }\n  }","id":50556,"modified_method":"public static void handleReportedState( final VmInfo runVm ) {\n    final VmState runVmState = VmState.Mapper.get( runVm.getStateName( ) );\n    try {\n      EntityTransaction db = Entities.get( VmInstance.class );\n      try {\n        VmInstance vm = VmInstances.lookup( runVm.getInstanceId( ) );\n        if ( VmInstances.Timeout.EXPIRED.apply( vm ) ) {\n          VmInstances.shutDown( vm );\n        } else if ( VmState.SHUTTING_DOWN.equals( runVmState ) ) {\n          VmStateCallback.handleReportedTeardown( vm, runVm );\n        } else if ( VmStateSet.RUN.apply( vm ) ) {\n          vm.doUpdate( ).apply( runVm );\n        } else if ( !VmStateSet.RUN.apply( vm ) && VmStateSet.RUN.contains( runVmState )\n                    && vm.lastUpdateMillis( ) > ( VmInstances.VOLATILE_STATE_TIMEOUT_SEC * 1000l ) ) {\n          vm.doUpdate( ).apply( runVm );\n        }\n        if ( Databases.isSynchronizing( ) ) {\n          db.rollback( );\n        } else {\n          db.commit( );\n        }\n      } catch ( Exception ex ) {\n        LOG.trace( ex, ex );\n        db.rollback( );\n        throw ex;\n      }\n    } catch ( TerminatedInstanceException ex1 ) {\n      LOG.trace( \"Ignore state update to terminated instance: \" + runVm.getInstanceId( ) );\n    } catch ( NoSuchElementException ex1 ) {\n      if ( VmStateSet.RUN.contains( runVmState ) ) {\n        VmStateCallback.handleRestore( runVm );\n      }\n    } catch ( Exception ex1 ) {\n      LOG.trace( ex1, ex1 );\n    }\n  }","commit_id":"7a5ed6e3a58d782f86cc611082286b4e5e10ab59","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public DeleteSnapshotResponseType delete( DeleteSnapshotType request ) throws EucalyptusCloudException {\n    DeleteSnapshotResponseType reply = ( DeleteSnapshotResponseType ) request.getReply( );\n    reply.set_return( false );\n    EntityWrapper<Snapshot> db = SnapshotManager.getEntityWrapper( );\n    String userName = request.isAdministrator( ) ? null : request.getUserId( );\n    try {\n      Snapshot snap = db.getUnique( Snapshot.named( userName, request.getSnapshotId( ) ) );\n      db.delete( snap );\n      db.getSession( ).flush( );\n      StorageUtil.dispatchAll( new DeleteStorageSnapshotType( snap.getDisplayName( ) ) );\n      db.commit( );\n      EventRecord.here( SnapshotManager.class, EventClass.SNAPSHOT, EventType.SNAPSHOT_DELETE, \"user=\" + snap.getUserName( ), \"snapshot=\" + snap.getDisplayName( ) ).info( );\n    } catch ( EucalyptusCloudException e ) {\n      LOG.debug( e, e );\n      db.rollback( );\n      throw new EucalyptusCloudException( \"Error deleting storage volume:\" + e.getMessage( ) );\n    }\n    reply.set_return( true );\n    return reply;\n  }","id":50557,"modified_method":"public DeleteSnapshotResponseType delete( DeleteSnapshotType request ) throws EucalyptusCloudException {\n    DeleteSnapshotResponseType reply = ( DeleteSnapshotResponseType ) request.getReply( );\n    reply.set_return( false );\n    EntityWrapper<Snapshot> db = SnapshotManager.getEntityWrapper( );\n    String userName = request.isAdministrator( ) ? null : request.getUserId( );\n    try {\n      Snapshot snap = db.getUnique( Snapshot.named( userName, request.getSnapshotId( ) ) );\n      if ( !State.EXTANT.equals( snap.getState() ) ) {\n        db.rollback();\n    \treply.set_return( false );\n    \treturn reply;\n      }\n      db.delete( snap );\n      db.getSession( ).flush( );\n      DeleteStorageSnapshotResponseType scReply = StorageUtil.send( snap.getCluster( ), new DeleteStorageSnapshotType( snap.getDisplayName( ) ) );\n      if ( scReply.get_return( ) ) {\n        StorageUtil.dispatchAll( new DeleteStorageSnapshotType( snap.getDisplayName( ) ) );\n        db.commit( );\n        EventRecord.here( SnapshotManager.class, EventClass.SNAPSHOT, EventType.SNAPSHOT_DELETE, \"user=\" + snap.getUserName( ), \"snapshot=\" + snap.getDisplayName( ) ).info( );\n      } else {\n    \tdb.rollback();\n        throw new EucalyptusCloudException( \"Unable to delete snapshot.\" );\n      }\n    } catch ( EucalyptusCloudException e ) {\n      LOG.debug( e, e );\n      db.rollback( );\n      throw new EucalyptusCloudException( \"Error deleting storage volume:\" + e.getMessage( ) );\n    }\n    reply.set_return( true );\n    return reply;\n  }","commit_id":"c86390e62a02d87fe889c4d96b6e85a57f46673b","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@SuppressWarnings( \"unchecked\" )\n  public static <T> T uniqueResult( final T example ) throws TransactionException {\n    try {\n      Object id = null;\n      try {\n        id = Entities.getTransaction( example ).getTxState( ).getEntityManager( ).getEntityManagerFactory( ).getPersistenceUnitUtil( ).getIdentifier( example );\n      } catch ( final Exception ex ) {}\n      if ( id != null ) {\n        final T res = ( T ) Entities.getTransactionState( example ).getEntityManager( ).find( example.getClass( ), id );\n        if ( res == null ) {\n          throw new NoSuchElementException( \"@Id: \" + id );\n        } else {\n          return res;\n        }\n      } else if ( ( example instanceof HasNaturalId ) && ( ( ( HasNaturalId ) example ).getNaturalId( ) != null ) ) {\n        final String natId = ( ( HasNaturalId ) example ).getNaturalId( );\n        final T ret = ( T ) Entities.getTransactionState( example ).getSession( )\n                                                          .createCriteria( example.getClass( ) )\n                                                          .add( Restrictions.naturalId( ).set( \"naturalId\", natId ) )\n                                                          .setCacheable( true )\n                                                          .setMaxResults( 1 )\n                                                          .setFetchSize( 1 )\n                                                          .setFirstResult( 0 )\n                                                          .uniqueResult( );\n        if ( ret == null ) {\n          throw new NoSuchElementException( \"@NaturalId: \" + natId );\n        }\n        return ret;\n      } else {\n        final T ret = ( T ) Entities.getTransactionState( example ).getSession( )\n                                                          .createCriteria( example.getClass( ) )\n                                                          .add( Example.create( example ).enableLike( MatchMode.EXACT ) )\n                                                          .setCacheable( true )\n                                                          .setMaxResults( 1 )\n                                                          .setFetchSize( 1 )\n                                                          .setFirstResult( 0 )\n                                                          .uniqueResult( );\n        if ( ret == null ) {\n          throw new NoSuchElementException( \"example: \" + LogUtil.dumpObject( example ) );\n        }\n        return ret;\n      }\n    } catch ( final RuntimeException ex ) {\n      Logs.exhaust( ).trace( ex, ex );\n      final Exception newEx = PersistenceExceptions.throwFiltered( ex );\n      throw new TransactionInternalException( newEx.getMessage( ), newEx );\n    }\n  }","id":50558,"modified_method":"@SuppressWarnings( \"unchecked\" )\n  public static <T> T uniqueResult( final T example ) throws TransactionException {\n    try {\n      Object pk = resolvePrimaryKey( example );\n      if ( pk != null ) {\n        return maybePrimaryKey( example );\n      } else if ( ( example instanceof HasNaturalId ) && ( ( ( HasNaturalId ) example ).getNaturalId( ) != null ) ) {\n        return maybeNaturalId( example );\n      } else {\n        return maybeDefinitelyExample( example );\n      }\n    } catch ( final RuntimeException ex ) {\n      Logs.exhaust( ).trace( ex, ex );\n      final Exception newEx = PersistenceExceptions.throwFiltered( ex );\n      throw new TransactionInternalException( newEx.getMessage( ), newEx );\n    }\n  }","commit_id":"7da44bb3a3e58730cc886894418fbbc6891f1907","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public ExtantNetwork extantNetwork( ) throws NotEnoughResourcesAvailable {\n    if ( !NetworkGroups.networkingConfiguration( ).hasNetworking( ) ) {\n      return ExtantNetwork.bogus( this );\n    } else if ( this.getExtantNetwork( ) == null ) {\n      ExtantNetwork exNet = null;\n      final EntityTransaction db = Entities.get( NetworkGroup.class );\n      try {\n        exNet = Entities.uniqueResult( ExtantNetwork.named( this ) );\n        return exNet;\n      } catch ( TransactionException ex2 ) {\n        for ( Integer i : NetworkGroups.shuffled( NetworkGroups.networkTagInterval( ) ) ) {\n          try {\n            exNet = Entities.uniqueResult( ExtantNetwork.named( i ) );\n          } catch ( TransactionException ex ) {}\n          if ( exNet == null ) {\n            try {\n              exNet = Entities.persist( ExtantNetwork.create( this, i ) );\n            } catch ( Exception ex ) {\n              LOG.error( ex, ex );\n            }\n          }\n        }\n        db.commit( );\n      }\n      if ( exNet != null ) {\n        return exNet;\n      } else {\n        throw new NotEnoughResourcesAvailable( \"Failed to add extant network: \" + this.extantNetwork + \" due to: no network tags are free.\" );\n      }\n    } else {\n      return this.getExtantNetwork( );\n    }\n  }","id":50559,"modified_method":"public ExtantNetwork extantNetwork( ) throws NotEnoughResourcesAvailable {\n    if ( !NetworkGroups.networkingConfiguration( ).hasNetworking( ) ) {\n      return ExtantNetwork.bogus( this );\n    } else if ( this.getExtantNetwork( ) == null ) {\n      ExtantNetwork exNet = null;\n      final EntityTransaction db = Entities.get( NetworkGroup.class );\n      try {\n        exNet = Entities.uniqueResult( ExtantNetwork.named( this ) );\n        db.rollback( );\n        return exNet;\n      } catch ( TransactionException ex2 ) {\n        for ( Integer i : NetworkGroups.shuffled( NetworkGroups.networkTagInterval( ) ) ) {\n          try {\n            exNet = Entities.uniqueResult( ExtantNetwork.named( i ) );\n          } catch ( TransactionException ex ) {}\n          if ( exNet == null ) {\n            try {\n              exNet = Entities.persist( ExtantNetwork.create( this, i ) );\n            } catch ( Exception ex ) {\n              LOG.error( ex, ex );\n            }\n          }\n        }\n      }\n      if ( exNet != null ) {\n        db.commit( );\n        return exNet;\n      } else {\n        db.rollback( );\n        throw new NotEnoughResourcesAvailable( \"Failed to add extant network: \" + this.extantNetwork + \" due to: no network tags are free.\" );\n      }\n    } else {\n      return this.getExtantNetwork( );\n    }\n  }","commit_id":"7da44bb3a3e58730cc886894418fbbc6891f1907","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public static VmInstance lookupDisabled( final String name ) throws NoSuchElementException {\n    final EntityTransaction db = Entities.get( VmInstance.class );\n    try {\n      final VmInstance vm = Entities.uniqueResult( VmInstance.namedTerminated( null, name ) );\n      db.commit( );\n      return vm;\n    } catch ( TransactionException ex ) {\n      db.rollback( );\n      if ( ex.getCause( ) instanceof NoSuchElementException ) {\n        throw ( NoSuchElementException ) ex.getCause( );\n      } else {\n        throw new NoSuchElementException( ex.getMessage( ) );\n      }\n    }\n  }","id":50560,"modified_method":"public static VmInstance lookupDisabled( final String name ) throws NoSuchElementException {\n    final EntityTransaction db = Entities.get( VmInstance.class );\n    try {\n      final VmInstance vm = Entities.uniqueResult( VmInstance.namedTerminated( null, name ) );\n      db.commit( );\n      return vm;\n    } catch ( NoSuchElementException ex ) {\n      db.rollback( );\n      throw ex;\n    } catch ( Exception ex ) {\n      db.rollback( );\n      throw new NoSuchElementException( ex.getMessage( ) );\n    }\n  }","commit_id":"7da44bb3a3e58730cc886894418fbbc6891f1907","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public static VmInstance lookup( final String name ) throws NoSuchElementException {\n    final EntityTransaction db = Entities.get( VmInstance.class );\n    try {\n      final VmInstance vm = Entities.uniqueResult( VmInstance.named( null, name ) );\n      if ( ( vm == null ) || VmState.TERMINATED.equals( vm.getState( ) ) ) {\n        throw new NoSuchElementException( \"Failed to lookup vm instance: \" + name );\n      }\n      return vm;\n    } catch ( final Exception ex ) {\n      Logs.extreme( ).error( ex, ex );\n      throw new NoSuchElementException( \"Failed to lookup vm instance: \" + name );\n    }\n  }","id":50561,"modified_method":"public static VmInstance lookup( final String name ) throws NoSuchElementException {\n    final EntityTransaction db = Entities.get( VmInstance.class );\n    try {\n      final VmInstance vm = Entities.uniqueResult( VmInstance.named( null, name ) );\n      if ( ( vm == null ) || VmState.TERMINATED.equals( vm.getState( ) ) ) {\n        throw new NoSuchElementException( \"Failed to lookup vm instance: \" + name );\n      }\n      return vm;\n    } catch ( NoSuchElementException ex ) {\n      db.rollback( );\n      throw ex;\n    } catch ( final Exception ex ) {\n      db.rollback( );\n      throw new NoSuchElementException( \"Failed to lookup vm instance: \" + name );\n    }\n  }","commit_id":"7da44bb3a3e58730cc886894418fbbc6891f1907","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public VmAllocationInfo verify( VmAllocationInfo vmAllocInfo ) throws EucalyptusCloudException {\n    SystemConfiguration conf = EucalyptusProperties.getSystemConfiguration();\n    String walrusUrl = getStorageUrl( conf );\n\n    RunInstancesType msg = vmAllocInfo.getRequest();\n    ImageInfo searchDiskInfo = new ImageInfo( msg.getImageId() );\n    EntityWrapper<ImageInfo> db = new EntityWrapper<ImageInfo>();\n    ImageInfo diskInfo = null;\n    ArrayList<String> productCodes = Lists.newArrayList();\n    try {\n      diskInfo = db.getUnique( searchDiskInfo );\n      for( ProductCode p : diskInfo.getProductCodes() ) {\n        productCodes.add( p.getValue());\n      }\n    } catch ( EucalyptusCloudException e ) {\n      throw new EucalyptusCloudException( \"Failed to find kernel image: \" + msg.getImageId() );\n    }\n    UserInfo user = db.recast( UserInfo.class ).getUnique( new UserInfo( msg.getUserId() ) );\n    if ( !diskInfo.isAllowed( user ) ) {\n      db.rollback();\n      throw new EucalyptusCloudException( \"You do not have permissions to run this image.\" );\n    }\n\n    //:: now its time to determine the ramdisk and kernel info based on: 1) user input, 2) emi specific info, 3) system defaults ::/\n    String kernelId = this.getImageInfobyId( msg.getKernelId(), diskInfo.getKernelId(), conf.getDefaultKernel() );\n    if ( kernelId == null ) {\n      db.commit();\n      throw new EucalyptusCloudException( \"Unable to determine required kernel image.\" );\n    }\n\n    String ramdiskId = this.getImageInfobyId( msg.getRamdiskId(), diskInfo.getRamdiskId(), conf.getDefaultRamdisk() );\n\n    ImageInfo kernelInfo = null;\n    try {\n      kernelInfo = db.getUnique( new ImageInfo( kernelId ) );\n    } catch ( EucalyptusCloudException e ) {\n      db.commit();\n      throw new EucalyptusCloudException( \"Failed to find kernel image: \" + kernelId );\n    }\n    if ( !diskInfo.isAllowed( user ) ) {\n      db.commit();\n      throw new EucalyptusCloudException( \"You do not have permission to launch: \" + diskInfo.getImageId() );\n    }\n    if ( !kernelInfo.isAllowed( user ) ) {\n      db.commit();\n      throw new EucalyptusCloudException( \"You do not have permission to launch: \" + kernelInfo.getImageId() );\n    }\n    ImageInfo ramdiskInfo = null;\n    if ( ramdiskId != null ) {\n      try {\n        ramdiskInfo = db.getUnique( new ImageInfo( ramdiskId ) );\n      } catch ( EucalyptusCloudException e ) {\n        throw new EucalyptusCloudException( \"Failed to find ramdisk image: \" + ramdiskId );\n      }\n      if ( !ramdiskInfo.isAllowed( user ) ) {\n        db.commit();\n        throw new EucalyptusCloudException( \"You do not have permission to launch: \" + ramdiskInfo.getImageId() );\n      }\n    }\n\n    //:: quietly add the ancestor and size information to the vm info object... this should never fail noisily :://\n    ArrayList<String> ancestorIds = this.getAncestors( msg.getUserId(), diskInfo.getImageLocation() );\n    Long imgSize = this.getSize( msg.getUserId(), diskInfo.getImageLocation() );\n    this.checkStoredImage( kernelInfo );\n    this.checkStoredImage( diskInfo );\n    this.checkStoredImage( ramdiskInfo );\n\n    //:: get together the required URLs ::/\n    VmImageInfo vmImgInfo = getVmImageInfo( walrusUrl, diskInfo, kernelInfo, ramdiskInfo, productCodes );\n    vmImgInfo.setAncestorIds( ancestorIds );\n    vmImgInfo.setSize( imgSize );\n    vmAllocInfo.setImageInfo( vmImgInfo );\n    return vmAllocInfo;\n  }","id":50562,"modified_method":"public VmAllocationInfo verify( VmAllocationInfo vmAllocInfo ) throws EucalyptusCloudException {\n    SystemConfiguration conf = EucalyptusProperties.getSystemConfiguration();\n    String walrusUrl = getStorageUrl( conf );\n\n    RunInstancesType msg = vmAllocInfo.getRequest();\n    ImageInfo searchDiskInfo = new ImageInfo( msg.getImageId() );\n    EntityWrapper<ImageInfo> db = new EntityWrapper<ImageInfo>();\n    ImageInfo diskInfo = null;\n    ArrayList<String> productCodes = Lists.newArrayList();\n    try {\n      diskInfo = db.getUnique( searchDiskInfo );\n      for( ProductCode p : diskInfo.getProductCodes() ) {\n        productCodes.add( p.getValue());\n      }\n    } catch ( EucalyptusCloudException e ) {\n      db.rollback( );\n      throw new EucalyptusCloudException( \"Failed to find kernel image: \" + msg.getImageId() );\n    }\n    UserInfo user = db.recast( UserInfo.class ).getUnique( new UserInfo( msg.getUserId() ) );\n    if ( !diskInfo.isAllowed( user ) ) {\n      db.rollback();\n      throw new EucalyptusCloudException( \"You do not have permissions to run this image.\" );\n    }\n\n    //:: now its time to determine the ramdisk and kernel info based on: 1) user input, 2) emi specific info, 3) system defaults ::/\n    String kernelId = this.getImageInfobyId( msg.getKernelId(), diskInfo.getKernelId(), conf.getDefaultKernel() );\n    if ( kernelId == null ) {\n      db.rollback( );\n      throw new EucalyptusCloudException( \"Unable to determine required kernel image.\" );\n    }\n\n    String ramdiskId = this.getImageInfobyId( msg.getRamdiskId(), diskInfo.getRamdiskId(), conf.getDefaultRamdisk() );\n\n    ImageInfo kernelInfo = null;\n    try {\n      kernelInfo = db.getUnique( new ImageInfo( kernelId ) );\n    } catch ( EucalyptusCloudException e ) {\n      db.rollback( );\n      throw new EucalyptusCloudException( \"Failed to find kernel image: \" + kernelId );\n    }\n    if ( !diskInfo.isAllowed( user ) ) {\n      db.rollback( );\n      throw new EucalyptusCloudException( \"You do not have permission to launch: \" + diskInfo.getImageId() );\n    }\n    if ( !kernelInfo.isAllowed( user ) ) {\n      db.rollback( );\n      throw new EucalyptusCloudException( \"You do not have permission to launch: \" + kernelInfo.getImageId() );\n    }\n    ImageInfo ramdiskInfo = null;\n    if ( ramdiskId != null ) {\n      try {\n        ramdiskInfo = db.getUnique( new ImageInfo( ramdiskId ) );\n      } catch ( EucalyptusCloudException e ) {\n        db.rollback( );\n        throw new EucalyptusCloudException( \"Failed to find ramdisk image: \" + ramdiskId );\n      }\n      if ( !ramdiskInfo.isAllowed( user ) ) {\n        db.rollback( );\n        throw new EucalyptusCloudException( \"You do not have permission to launch: \" + ramdiskInfo.getImageId() );\n      }\n    }\n    db.commit( );\n    //:: quietly add the ancestor and size information to the vm info object... this should never fail noisily :://\n    ArrayList<String> ancestorIds = this.getAncestors( msg.getUserId(), diskInfo.getImageLocation() );\n    Long imgSize = this.getSize( msg.getUserId(), diskInfo.getImageLocation() );\n    this.checkStoredImage( kernelInfo );\n    this.checkStoredImage( diskInfo );\n    this.checkStoredImage( ramdiskInfo );\n\n    //:: get together the required URLs ::/\n    VmImageInfo vmImgInfo = getVmImageInfo( walrusUrl, diskInfo, kernelInfo, ramdiskInfo, productCodes );\n    vmImgInfo.setAncestorIds( ancestorIds );\n    vmImgInfo.setSize( imgSize );\n    vmAllocInfo.setImageInfo( vmImgInfo );\n    return vmAllocInfo;\n  }","commit_id":"61a027a12d97585eb39a72e770d2f69ca29f0c52","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public DescribeVolumesResponseType DescribeVolumes( DescribeVolumesType request ) throws EucalyptusCloudException {\n    DescribeVolumesResponseType reply = ( DescribeVolumesResponseType ) request.getReply();\n    EntityWrapper<Volume> db = getEntityWrapper();\n    String userName = request.isAdministrator() ? null : request.getUserId();\n\n    Map<String, AttachedVolume> attachedVolumes = new HashMap<String, AttachedVolume>();\n    for ( VmInstance vm : VmInstances.getInstance().listValues() ) {\n      for ( AttachedVolume av : vm.getVolumes() ) {\n        attachedVolumes.put( av.getVolumeId(), av );\n      }\n    }\n    \n    List<Volume> volumes = db.query( Volume.ownedBy( userName ) );\n\n    for ( Volume v : volumes ) {\n      if ( request.getVolumeSet().isEmpty() || request.getVolumeSet().contains( v.getDisplayName() ) ) {\n        try {\n          edu.ucsb.eucalyptus.msgs.Volume aVolume = StorageUtil.getVolumeReply( attachedVolumes, v );\n          reply.getVolumeSet().add( aVolume );\n        } catch ( Exception e ) {\n          LOG.warn( \"Error getting volume information from the Storage Controller: \" + e );\n          LOG.debug( e, e );\n        }\n      }\n    }\n    db.commit();\n    return reply;\n  }","id":50563,"modified_method":"public DescribeVolumesResponseType DescribeVolumes( DescribeVolumesType request ) throws EucalyptusCloudException {\n    DescribeVolumesResponseType reply = ( DescribeVolumesResponseType ) request.getReply();\n    EntityWrapper<Volume> db = getEntityWrapper();\n    try {\n      String userName = request.isAdministrator() ? null : request.getUserId();\n\n      Map<String, AttachedVolume> attachedVolumes = new HashMap<String, AttachedVolume>();\n      for ( VmInstance vm : VmInstances.getInstance().listValues() ) {\n        for ( AttachedVolume av : vm.getVolumes() ) {\n          attachedVolumes.put( av.getVolumeId(), av );\n        }\n      }\n      \n      List<Volume> volumes = db.query( Volume.ownedBy( userName ) );\n\n      for ( Volume v : volumes ) {\n        if ( request.getVolumeSet().isEmpty() || request.getVolumeSet().contains( v.getDisplayName() ) ) {\n          try {\n            edu.ucsb.eucalyptus.msgs.Volume aVolume = StorageUtil.getVolumeReply( attachedVolumes, v );\n            reply.getVolumeSet().add( aVolume );\n          } catch ( Exception e ) {\n            LOG.warn( \"Error getting volume information from the Storage Controller: \" + e );\n            LOG.debug( e, e );\n          }\n        }\n      }\n    } finally {\n      db.commit();\n    }\n    return reply;\n  }","commit_id":"61a027a12d97585eb39a72e770d2f69ca29f0c52","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public List<UserInfo> getPermissions() {\n    return permissions;\n  }","id":50564,"modified_method":"public List<ImageAuthorization> getPermissions() {\n    return permissions;\n  }","commit_id":"9f66e9bc235f084f12a9ab015981e54f0206a360","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public void setPermissions( final List<UserInfo> permissions ) {\n    this.permissions = permissions;\n  }","id":50565,"modified_method":"public void setPermissions( final List<ImageAuthorization> permissions ) {\n    this.permissions = permissions;\n  }","commit_id":"9f66e9bc235f084f12a9ab015981e54f0206a360","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public DescribeImageAttributeResponseType describeImageAttribute( DescribeImageAttributeType request ) throws EucalyptusCloudException {\n    DescribeImageAttributeResponseType reply = ( DescribeImageAttributeResponseType ) request.getReply( );\n    reply.setImageId( request.getImageId( ) );\n\n    if ( request.getAttribute( ) != null ) request.applyAttribute( );\n\n    EntityWrapper<ImageInfo> db = new EntityWrapper<ImageInfo>( );\n    try {\n      ImageInfo imgInfo = db.getUnique( new ImageInfo( request.getImageId( ) ) );\n      if ( !imgInfo.isAllowed( UserInfoStore.getUserInfo( new UserInfo( request.getUserId( ) ) ) ) ) throw new EucalyptusCloudException( \"image attribute: not authorized.\" );\n      if ( request.getKernel( ) != null ) {\n        reply.setRealResponse( reply.getKernel( ) );\n        if ( imgInfo.getKernelId( ) != null ) {\n          reply.getKernel( ).add( imgInfo.getKernelId( ) );\n        }\n      } else if ( request.getRamdisk( ) != null ) {\n        reply.setRealResponse( reply.getRamdisk( ) );\n        if ( imgInfo.getRamdiskId( ) != null ) {\n          reply.getRamdisk( ).add( imgInfo.getRamdiskId( ) );\n        }\n      } else if ( request.getLaunchPermission( ) != null ) {\n        reply.setRealResponse( reply.getLaunchPermission( ) );\n// TODO: RELEASE: restore\n//        for ( UserGroupEntity userGroup : imgInfo.getUserGroups( ) )\n//          reply.getLaunchPermission( ).add( LaunchPermissionItemType.getGroup( userGroup.getName( ) ) );\n        for ( UserInfo user : imgInfo.getPermissions( ) )\n          reply.getLaunchPermission( ).add( LaunchPermissionItemType.getUser( user.getUserName( ) ) );\n      } else if ( request.getProductCodes( ) != null ) {\n        reply.setRealResponse( reply.getProductCodes( ) );\n        for ( ProductCode p : imgInfo.getProductCodes( ) ) {\n          reply.getProductCodes( ).add( p.getValue( ) );\n        }\n      } else if ( request.getBlockDeviceMapping( ) != null ) {\n        reply.setRealResponse( reply.getBlockDeviceMapping( ) );\n        reply.getBlockDeviceMapping( ).add( ImageUtil.EMI );\n        reply.getBlockDeviceMapping( ).add( ImageUtil.EPHEMERAL );\n        reply.getBlockDeviceMapping( ).add( ImageUtil.SWAP );\n        reply.getBlockDeviceMapping( ).add( ImageUtil.ROOT );\n      } else {\n        throw new EucalyptusCloudException( \"invalid image attribute request.\" );\n      }\n    } catch ( EucalyptusCloudException e ) {\n      db.commit( );\n      throw e;\n    } catch ( NoSuchUserException e ) {\n      db.commit( );\n      throw new EucalyptusCloudException( \"can not find user info.\" );\n    }\n    return reply;\n  }","id":50566,"modified_method":"public DescribeImageAttributeResponseType describeImageAttribute( DescribeImageAttributeType request ) throws EucalyptusCloudException {\n    DescribeImageAttributeResponseType reply = ( DescribeImageAttributeResponseType ) request.getReply( );\n    reply.setImageId( request.getImageId( ) );\n    \n    if ( request.getAttribute( ) != null ) request.applyAttribute( );\n    \n    EntityWrapper<ImageInfo> db = new EntityWrapper<ImageInfo>( );\n    try {\n      ImageInfo imgInfo = db.getUnique( new ImageInfo( request.getImageId( ) ) );\n      if ( !imgInfo.isAllowed( UserInfoStore.getUserInfo( new UserInfo( request.getUserId( ) ) ) ) ) throw new EucalyptusCloudException(\n                                                                                                                                         \"image attribute: not authorized.\" );\n      if ( request.getKernel( ) != null ) {\n        reply.setRealResponse( reply.getKernel( ) );\n        if ( imgInfo.getKernelId( ) != null ) {\n          reply.getKernel( ).add( imgInfo.getKernelId( ) );\n        }\n      } else if ( request.getRamdisk( ) != null ) {\n        reply.setRealResponse( reply.getRamdisk( ) );\n        if ( imgInfo.getRamdiskId( ) != null ) {\n          reply.getRamdisk( ).add( imgInfo.getRamdiskId( ) );\n        }\n      } else if ( request.getLaunchPermission( ) != null ) {\n        reply.setRealResponse( reply.getLaunchPermission( ) );\n        for ( ImageAuthorization auth : imgInfo.getUserGroups( ) )\n          reply.getLaunchPermission( ).add( LaunchPermissionItemType.getGroup( auth.getValue( ) ) );\n        for ( ImageAuthorization auth : imgInfo.getPermissions( ) )\n          reply.getLaunchPermission( ).add( LaunchPermissionItemType.getUser( auth.getValue( ) ) );\n      } else if ( request.getProductCodes( ) != null ) {\n        reply.setRealResponse( reply.getProductCodes( ) );\n        for ( ProductCode p : imgInfo.getProductCodes( ) ) {\n          reply.getProductCodes( ).add( p.getValue( ) );\n        }\n      } else if ( request.getBlockDeviceMapping( ) != null ) {\n        reply.setRealResponse( reply.getBlockDeviceMapping( ) );\n        reply.getBlockDeviceMapping( ).add( ImageUtil.EMI );\n        reply.getBlockDeviceMapping( ).add( ImageUtil.EPHEMERAL );\n        reply.getBlockDeviceMapping( ).add( ImageUtil.SWAP );\n        reply.getBlockDeviceMapping( ).add( ImageUtil.ROOT );\n      } else {\n        throw new EucalyptusCloudException( \"invalid image attribute request.\" );\n      }\n    } catch ( EucalyptusCloudException e ) {\n      db.commit( );\n      throw e;\n    } catch ( NoSuchUserException e ) {\n      db.commit( );\n      throw new EucalyptusCloudException( \"can not find user info.\" );\n    }\n    return reply;\n  }","commit_id":"9f66e9bc235f084f12a9ab015981e54f0206a360","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public RegisterImageResponseType register( RegisterImageType request ) throws EucalyptusCloudException {\n    String imageLocation = request.getImageLocation( );\n    String[] imagePathParts;\n    try {\n      imagePathParts = ImageUtil.getImagePathParts( imageLocation );\n      ImageUtil.checkBucketAcl( request, imagePathParts );\n    } catch ( EucalyptusCloudException e ) {\n      LOG.trace( e, e );\n      throw e;\n    }\n    ImageInfo imageInfo = new ImageInfo( imageLocation, request.getUserId( ), \"available\", true );\n    try {\n      WalrusUtil.verifyManifestIntegrity( imageInfo );\n    } catch ( EucalyptusCloudException e ) {\n      throw new EucalyptusCloudException( \"Image registration failed because the manifest referenced is invalid or unavailable.\" );\n    }\n    String userName = request.getUserId( );\n    // FIXME: wrap this manifest junk in a helper class.\n    Document inputSource = ImageUtil.getManifestDocument( imagePathParts, userName );\n    XPath xpath = XPathFactory.newInstance( ).newXPath( );\n    String arch = ImageUtil.extractArchitecture( inputSource, xpath );\n    imageInfo.setArchitecture( ( arch == null ) ? \"i386\" : arch );\n    String kernelId = ImageUtil.extractKernelId( inputSource, xpath );\n    String ramdiskId = ImageUtil.extractRamdiskId( inputSource, xpath );\n    List<ProductCode> prodCodes = extractProductCodes( inputSource, xpath );\n    imageInfo.getProductCodes( ).addAll( prodCodes );\n\n    if ( \"yes\".equals( kernelId ) || \"true\".equals( kernelId ) || imagePathParts[1].startsWith( \"vmlinuz\" ) ) {\n      if ( !request.isAdministrator( ) ) throw new EucalyptusCloudException( \"Only administrators can register kernel images.\" );\n      imageInfo.setImageType( ImageManager.IMAGE_KERNEL );\n      imageInfo.setImageId( ImageUtil.newImageId( ImageManager.IMAGE_KERNEL_PREFIX, imageInfo.getImageLocation( ) ) );\n      imageInfo.setPlatform( ImageManager.IMAGE_PLATFORM_DEFAULT );\n    } else if ( \"yes\".equals( ramdiskId ) || \"true\".equals( ramdiskId ) || imagePathParts[1].startsWith( \"initrd\" ) ) {\n      if ( !request.isAdministrator( ) ) throw new EucalyptusCloudException( \"Only administrators can register ramdisk images.\" );\n      imageInfo.setImageType( ImageManager.IMAGE_RAMDISK );\n      imageInfo.setImageId( ImageUtil.newImageId( ImageManager.IMAGE_RAMDISK_PREFIX, imageInfo.getImageLocation( ) ) );\n      imageInfo.setPlatform( ImageManager.IMAGE_PLATFORM_DEFAULT );\n    } else {\n      if( imagePathParts[1].startsWith( ImageManager.IMAGE_PLATFORM_WINDOWS ) && System.getProperty( \"euca.disable.windows\" ) == null ) {\n        imageInfo.setPlatform( ImageManager.IMAGE_PLATFORM_WINDOWS );\n      } else {\n        imageInfo.setPlatform( ImageManager.IMAGE_PLATFORM_DEFAULT );        \n        if ( kernelId != null ) {\n          try {\n            ImageUtil.getImageInfobyId( kernelId );\n          } catch ( EucalyptusCloudException e ) {\n            throw new EucalyptusCloudException( \"Referenced kernel id is invalid: \" + kernelId );\n          }\n        }\n        if ( ramdiskId != null ) {\n          try {\n            ImageUtil.getImageInfobyId( ramdiskId );\n          } catch ( EucalyptusCloudException e ) {\n            throw new EucalyptusCloudException( \"Referenced ramdisk id is invalid: \" + ramdiskId );\n          }\n        }\n      }\n      imageInfo.setImageType( ImageManager.IMAGE_MACHINE );\n      imageInfo.setKernelId( kernelId );\n      imageInfo.setRamdiskId( ramdiskId );\n      imageInfo.setImageId( ImageUtil.newImageId( ImageManager.IMAGE_MACHINE_PREFIX, imageInfo.getImageLocation( ) ) );\n    }\n\n    String signature = null;\n    try {\n      signature = ( String ) xpath.evaluate( \"/manifest/signature/text()\", inputSource, XPathConstants.STRING );\n    } catch ( XPathExpressionException e ) {\n      LOG.warn( e.getMessage( ) );\n    }\n    imageInfo.setSignature( signature );\n\n    // FIXME: this is sorely in need of an update and clean up.\n    EntityWrapper<ImageInfo> db = new EntityWrapper<ImageInfo>( );\n    try {\n      db.add( imageInfo );\n      UserInfo user = UserInfoStore.getUserInfo( new UserInfo( request.getUserId( ) ) );\n//      UserGroupEntity group = db.recast( UserGroupEntity.class ).getUnique( new UserGroupEntity( \"all\" ) );\n      // TODO (wenye): database schema needs to change to make this work when UserInfo is not in database.\n      if ( !LdapConfiguration.ENABLE_LDAP ) {\n        imageInfo.getPermissions( ).add( user );\n      }\n// TODO: RELEASE: restore\n//      imageInfo.getUserGroups( ).add( group );\n      db.commit( );\n      LOG.info( \"Registering image pk=\" + imageInfo.getId( ) + \" ownerId=\" + user.getUserName( ) );\n    } catch ( NoSuchUserException e ) {\n      db.rollback( );\n      throw new EucalyptusCloudException( \"can not find user info\");\n    }\n\n    LOG.info( \"Triggering cache population in Walrus for: \" + imageInfo.getId( ) );\n    WalrusUtil.checkValid( imageInfo );\n    WalrusUtil.triggerCaching( imageInfo );\n\n    RegisterImageResponseType reply = ( RegisterImageResponseType ) request.getReply( );\n    reply.setImageId( imageInfo.getImageId( ) );\n    return reply;\n  }","id":50567,"modified_method":"public RegisterImageResponseType register( RegisterImageType request ) throws EucalyptusCloudException {\n    String imageLocation = request.getImageLocation( );\n    String[] imagePathParts;\n    try {\n      imagePathParts = ImageUtil.getImagePathParts( imageLocation );\n      ImageUtil.checkBucketAcl( request, imagePathParts );\n    } catch ( EucalyptusCloudException e ) {\n      LOG.trace( e, e );\n      throw e;\n    }\n    ImageInfo imageInfo = new ImageInfo( imageLocation, request.getUserId( ), \"available\", true );\n    try {\n      WalrusUtil.verifyManifestIntegrity( imageInfo );\n    } catch ( EucalyptusCloudException e ) {\n      throw new EucalyptusCloudException( \"Image registration failed because the manifest referenced is invalid or unavailable.\" );\n    }\n    String userName = request.getUserId( );\n    // FIXME: wrap this manifest junk in a helper class.\n    Document inputSource = ImageUtil.getManifestDocument( imagePathParts, userName );\n    XPath xpath = XPathFactory.newInstance( ).newXPath( );\n    String arch = ImageUtil.extractArchitecture( inputSource, xpath );\n    imageInfo.setArchitecture( ( arch == null ) ? \"i386\" : arch );\n    String kernelId = ImageUtil.extractKernelId( inputSource, xpath );\n    String ramdiskId = ImageUtil.extractRamdiskId( inputSource, xpath );\n    List<ProductCode> prodCodes = extractProductCodes( inputSource, xpath );\n    imageInfo.getProductCodes( ).addAll( prodCodes );\n    \n    if ( \"yes\".equals( kernelId ) || \"true\".equals( kernelId ) || imagePathParts[1].startsWith( \"vmlinuz\" ) ) {\n      if ( !request.isAdministrator( ) ) throw new EucalyptusCloudException( \"Only administrators can register kernel images.\" );\n      imageInfo.setImageType( ImageManager.IMAGE_KERNEL );\n      imageInfo.setImageId( ImageUtil.newImageId( ImageManager.IMAGE_KERNEL_PREFIX, imageInfo.getImageLocation( ) ) );\n      imageInfo.setPlatform( ImageManager.IMAGE_PLATFORM_DEFAULT );\n    } else if ( \"yes\".equals( ramdiskId ) || \"true\".equals( ramdiskId ) || imagePathParts[1].startsWith( \"initrd\" ) ) {\n      if ( !request.isAdministrator( ) ) throw new EucalyptusCloudException( \"Only administrators can register ramdisk images.\" );\n      imageInfo.setImageType( ImageManager.IMAGE_RAMDISK );\n      imageInfo.setImageId( ImageUtil.newImageId( ImageManager.IMAGE_RAMDISK_PREFIX, imageInfo.getImageLocation( ) ) );\n      imageInfo.setPlatform( ImageManager.IMAGE_PLATFORM_DEFAULT );\n    } else {\n      if ( imagePathParts[1].startsWith( ImageManager.IMAGE_PLATFORM_WINDOWS ) && System.getProperty( \"euca.disable.windows\" ) == null ) {\n        imageInfo.setPlatform( ImageManager.IMAGE_PLATFORM_WINDOWS );\n      } else {\n        imageInfo.setPlatform( ImageManager.IMAGE_PLATFORM_DEFAULT );\n        if ( kernelId != null ) {\n          try {\n            ImageUtil.getImageInfobyId( kernelId );\n          } catch ( EucalyptusCloudException e ) {\n            throw new EucalyptusCloudException( \"Referenced kernel id is invalid: \" + kernelId );\n          }\n        }\n        if ( ramdiskId != null ) {\n          try {\n            ImageUtil.getImageInfobyId( ramdiskId );\n          } catch ( EucalyptusCloudException e ) {\n            throw new EucalyptusCloudException( \"Referenced ramdisk id is invalid: \" + ramdiskId );\n          }\n        }\n      }\n      imageInfo.setImageType( ImageManager.IMAGE_MACHINE );\n      imageInfo.setKernelId( kernelId );\n      imageInfo.setRamdiskId( ramdiskId );\n      imageInfo.setImageId( ImageUtil.newImageId( ImageManager.IMAGE_MACHINE_PREFIX, imageInfo.getImageLocation( ) ) );\n    }\n    \n    String signature = null;\n    try {\n      signature = ( String ) xpath.evaluate( \"/manifest/signature/text()\", inputSource, XPathConstants.STRING );\n    } catch ( XPathExpressionException e ) {\n      LOG.warn( e.getMessage( ) );\n    }\n    imageInfo.setSignature( signature );\n    \n    EntityWrapper<ImageInfo> db = new EntityWrapper<ImageInfo>( );\n    try {\n      db.add( imageInfo );\n      imageInfo.grantPermission( Users.lookupUser( request.getUserId( ) ) );\n      try {\n        imageInfo.grantPermission( Groups.lookupGroup( \"all\" ) );\n      } catch ( NoSuchGroupException e ) {\n        LOG.error( e, e );\n      }\n      db.commit( );\n      LOG.info( \"Registering image pk=\" + imageInfo.getId( ) + \" ownerId=\" + request.getUserId( ) );\n    } catch ( NoSuchUserException e ) {\n      db.rollback( );\n      throw new EucalyptusCloudException( \"can not find user info\" );\n    }\n    \n    LOG.info( \"Triggering cache population in Walrus for: \" + imageInfo.getId( ) );\n    WalrusUtil.checkValid( imageInfo );\n    WalrusUtil.triggerCaching( imageInfo );\n    \n    RegisterImageResponseType reply = ( RegisterImageResponseType ) request.getReply( );\n    reply.setImageId( imageInfo.getImageId( ) );\n    return reply;\n  }","commit_id":"9f66e9bc235f084f12a9ab015981e54f0206a360","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public ResetImageAttributeResponseType resetImageAttribute( ResetImageAttributeType request ) throws EucalyptusCloudException {\n    ResetImageAttributeResponseType reply = ( ResetImageAttributeResponseType ) request.getReply( );\n    reply.set_return( true );\n    EntityWrapper<ImageInfo> db = new EntityWrapper<ImageInfo>( );\n    try {\n      ImageInfo imgInfo = db.getUnique( new ImageInfo( request.getImageId( ) ) );\n\n      if ( !request.getUserId( ).equals( imgInfo.getImageOwnerId( ) ) && !request.isAdministrator( ) ) throw new EucalyptusCloudException( \"Not allowed to modify image: \" + imgInfo.getImageId( ) );\n      imgInfo.getPermissions( ).clear( );\n      // TODO (wenye): database schema needs to change to make this work when UserInfo is not in database.\n      if ( !LdapConfiguration.ENABLE_LDAP ) {\n        imgInfo.getPermissions( ).add( UserInfoStore.getUserInfo( new UserInfo( imgInfo.getImageOwnerId( ) ) ) );\n      }\n// TODO: RELEASE: restore\n//      imgInfo.getUserGroups( ).clear( );\n//      imgInfo.getUserGroups( ).add( db.recast( UserGroupEntity.class ).getUnique( UserGroupEntity.named( \"all\" ) ) );\n      db.commit( );\n    } catch ( EucalyptusCloudException e ) {\n      db.rollback( );\n      reply.set_return( false );\n    } catch ( NoSuchUserException e ) {\n      db.rollback( );\n      reply.set_return( false );\n    }\n    return reply;\n  }","id":50568,"modified_method":"public ResetImageAttributeResponseType resetImageAttribute( ResetImageAttributeType request ) throws EucalyptusCloudException {\n    ResetImageAttributeResponseType reply = ( ResetImageAttributeResponseType ) request.getReply( );\n    reply.set_return( true );\n    EntityWrapper<ImageInfo> db = new EntityWrapper<ImageInfo>( );\n    try {\n      ImageInfo imgInfo = db.getUnique( new ImageInfo( request.getImageId( ) ) );\n      if ( request.getUserId( ).equals( imgInfo.getImageOwnerId( ) ) || request.isAdministrator( ) ) {\n        imgInfo.getPermissions( ).clear( );\n        db.commit( );\n        imgInfo.grantPermission( Users.lookupUser( request.getUserId( ) ) );\n        try {\n          imgInfo.grantPermission( Groups.lookupGroup( \"all\" ) );\n        } catch ( NoSuchGroupException e ) {\n          LOG.error( e, e );\n        }        \n      } else {\n        db.rollback( );\n        reply.set_return( false );\n      }\n    } catch ( EucalyptusCloudException e ) {\n      db.rollback( );\n      reply.set_return( false );\n    } catch ( NoSuchUserException e ) {\n      db.rollback( );\n      reply.set_return( false );\n    }\n    return reply;\n  }","commit_id":"9f66e9bc235f084f12a9ab015981e54f0206a360","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public static void applyImageAttributes( final EntityWrapper<ImageInfo> db, final ImageInfo imgInfo, final List<LaunchPermissionItemType> changeList, final boolean adding ) throws EucalyptusCloudException {\n    for ( LaunchPermissionItemType perm : changeList ) {\n      if ( perm.isGroup( ) ) {\n//        UserGroupEntity target = new UserGroupEntity( perm.getGroup( ) );\n//        if ( adding && !imgInfo.getUserGroups( ).contains( target ) ) {\n//          EntityWrapper<UserGroupEntity> dbGroup = db.recast( UserGroupEntity.class );\n//          try {\n//            target = dbGroup.getUnique( target );\n//          } catch ( EucalyptusCloudException e ) {} finally {\n//            imgInfo.getUserGroups( ).add( target );\n//            if ( \"all\".equals( target.getName( ) ) ) imgInfo.setPublic( true );\n//          }\n//        } else if ( !adding && imgInfo.getUserGroups( ).contains( target ) ) {\n//          if ( \"all\".equals( target.getName( ) ) ) imgInfo.setPublic( false );\n//          imgInfo.getUserGroups().remove(target);\n//        } else if ( !adding ) {\n//          throw new EucalyptusCloudException( \"image attribute: cant remove nonexistant permission.\" );\n//        }\n      } else if ( perm.isUser( ) ) {\n        UserInfo target = new UserInfo( perm.getUserId( ) );\n        if ( adding && !imgInfo.getPermissions( ).contains( target ) ) {\n          try {\n            target = UserInfoStore.getUserInfo( target );\n          } catch ( NoSuchUserException e ) {\n            throw new EucalyptusCloudException( \"image attribute: invalid user id.\" );\n          } finally {\n            // TODO (wenye): database schema needs to change to make this work when UserInfo is not in database.\n            if ( !LdapConfiguration.ENABLE_LDAP ) {\n              imgInfo.getPermissions( ).add( target );\n            }\n          }\n        } else if ( !adding && imgInfo.getPermissions( ).contains( target ) ) {\n          imgInfo.getPermissions( ).remove( target );\n        } else if ( !adding ) {\n          throw new EucalyptusCloudException( \"image attribute: cant remove nonexistant permission.\" );\n        }\n      }\n    }\n  }","id":50569,"modified_method":"public static void applyImageAttributes( final EntityWrapper<ImageInfo> db, final ImageInfo imgInfo, final List<LaunchPermissionItemType> changeList, final boolean adding ) throws EucalyptusCloudException {\n    for ( LaunchPermissionItemType perm : changeList ) {\n      if ( perm.isGroup( ) ) {\n        try {\n          if( adding ) {\n            imgInfo.grantPermission( Groups.lookupGroup( perm.getGroup( ) ) );\n          } else {\n            imgInfo.revokePermission( Groups.lookupGroup( perm.getGroup( ) ) );\n          }\n        } catch ( NoSuchGroupException e ) {\n          LOG.debug( e, e );\n          throw new EucalyptusCloudException( \"Modify image attribute failed because of: \" + e.getMessage( ) );\n        }\n      } else if ( perm.isUser( ) ) {\n        try {\n          if( adding ) {\n            imgInfo.grantPermission( Users.lookupUser( perm.getUserId( ) ) );\n          } else {\n            imgInfo.revokePermission( Users.lookupUser( perm.getUserId( ) ) );\n          }\n        } catch ( NoSuchUserException e ) {\n          LOG.debug( e, e );\n          throw new EucalyptusCloudException( \"Modify image attribute failed because of: \" + e.getMessage( ) );\n        }\n      }\n    }\n  }","commit_id":"9f66e9bc235f084f12a9ab015981e54f0206a360","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public DeleteSnapshotResponseType delete( DeleteSnapshotType request ) throws EucalyptusCloudException {\n    DeleteSnapshotResponseType reply = ( DeleteSnapshotResponseType ) request.getReply( );\n    reply.set_return( false );\n    EntityWrapper<Snapshot> db = SnapshotManager.getEntityWrapper( );\n    String userName = request.isAdministrator( ) ? null : request.getUserId( );\n    try {\n      Snapshot snap = db.getUnique( Snapshot.named( userName, request.getSnapshotId( ) ) );\n      db.delete( snap );\n      db.getSession( ).flush( );\n      StorageUtil.dispatchAll( new DeleteStorageSnapshotType( snap.getDisplayName( ) ) );\n      db.commit( );\n      EventRecord.here( SnapshotManager.class, EventClass.SNAPSHOT, EventType.SNAPSHOT_DELETE, \"user=\" + snap.getUserName( ), \"snapshot=\" + snap.getDisplayName( ) ).info( );\n    } catch ( EucalyptusCloudException e ) {\n      LOG.debug( e, e );\n      db.rollback( );\n      throw new EucalyptusCloudException( \"Error deleting storage volume:\" + e.getMessage( ) );\n    }\n    reply.set_return( true );\n    return reply;\n  }","id":50570,"modified_method":"public DeleteSnapshotResponseType delete( DeleteSnapshotType request ) throws EucalyptusCloudException {\n    DeleteSnapshotResponseType reply = ( DeleteSnapshotResponseType ) request.getReply( );\n    reply.set_return( false );\n    EntityWrapper<Snapshot> db = SnapshotManager.getEntityWrapper( );\n    String userName = request.isAdministrator( ) ? null : request.getUserId( );\n    try {\n      Snapshot snap = db.getUnique( Snapshot.named( userName, request.getSnapshotId( ) ) );\n      if ( !State.EXTANT.equals( snap.getState() ) ) {\n        db.rollback();\n    \treply.set_return( false );\n    \treturn reply;\n      }\n      db.delete( snap );\n      db.getSession( ).flush( );\n      DeleteStorageSnapshotResponseType scReply = StorageUtil.send( snap.getCluster( ), new DeleteStorageSnapshotType( snap.getDisplayName( ) ) );\n      if ( scReply.get_return( ) ) {\n        StorageUtil.dispatchAll( new DeleteStorageSnapshotType( snap.getDisplayName( ) ) );\n        db.commit( );\n        EventRecord.here( SnapshotManager.class, EventClass.SNAPSHOT, EventType.SNAPSHOT_DELETE, \"user=\" + snap.getUserName( ), \"snapshot=\" + snap.getDisplayName( ) ).info( );\n      } else {\n    \tdb.rollback();\n        throw new EucalyptusCloudException( \"Unable to delete snapshot.\" );\n      }\n    } catch ( EucalyptusCloudException e ) {\n      LOG.debug( e, e );\n      db.rollback( );\n      throw new EucalyptusCloudException( \"Error deleting storage volume:\" + e.getMessage( ) );\n    }\n    reply.set_return( true );\n    return reply;\n  }","commit_id":"fa61e5e881590eb62b3952434fd62146238c0548","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public void testStackElements() throws Exception {\n        Session session = null;\n        Statement stmt = null;\n        try {\n            session = HibernateFactory.getSession();\n            stmt = session.connection().createStatement();\n\n            stmt.execute(\"insert into exceptions_test (foobar, id) \" +\n                    \"values ('in', 1)\");\n            stmt.execute(\"insert into exceptions_test (small_column, id) \" +\n                    \"values ('ano', 1)\");\n        }\n        catch (SQLException e) {\n            try {\n                throw SqlExceptionTranslator.sqlException(e);\n            }\n            catch (WrappedSQLException c) {\n                StackTraceElement[] elements = c.getStackTrace();\n                for (int i = 0; i < elements.length; i++) {\n                    String method = elements[i].getMethodName();\n                    String className = elements[i].getClassName();\n                    assertFalse(className.equals(EXCEPTION_TRANSLATOR));\n                    assertFalse(method.equals(\"convert\"));\n                }\n            }\n        }\n        finally {\n            HibernateHelper.cleanupDB(stmt);\n        }\n\n    }","id":50571,"modified_method":"public void testStackElements() throws Exception {\n        Session session = null;\n        Statement stmt = null;\n        try {\n            session = HibernateFactory.getSession();\n            stmt = session.connection().createStatement();\n\n            stmt.execute(\"insert into exceptions_test (foobar, id) \" +\n                    \"values ('in', 1)\");\n            stmt.execute(\"insert into exceptions_test (small_column, id) \" +\n                    \"values ('ano', 1)\");\n        }\n        catch (SQLException e) {\n            if (!ConfigDefaults.get().isOracle()) {\n                session.connection().rollback();\n            }\n            try {\n                throw SqlExceptionTranslator.sqlException(e);\n            }\n            catch (WrappedSQLException c) {\n                StackTraceElement[] elements = c.getStackTrace();\n                for (int i = 0; i < elements.length; i++) {\n                    String method = elements[i].getMethodName();\n                    String className = elements[i].getClassName();\n                    assertFalse(className.equals(EXCEPTION_TRANSLATOR));\n                    assertFalse(method.equals(\"convert\"));\n                }\n            }\n        }\n        finally {\n            HibernateHelper.cleanupDB(stmt);\n        }\n\n    }","commit_id":"528259d7bcd4d7a90dfa2fbbd3dd55b6d097d588","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"public void testNotReplaced() throws Exception {\n        Session session = null;\n        Statement stmt = null;\n        try {\n            session = HibernateFactory.getSession();\n            stmt = session.connection().createStatement();\n\n            stmt.execute(\"insert into exceptions_test (foobar, id) \" +\n                    \"values ('in', 1)\");\n            stmt.execute(\"insert into exceptions_test (small_column, id) \" +\n                    \"values ('ano', 1)\");\n        }\n        catch (SQLException e) {\n            try {\n                throw SqlExceptionTranslator.sqlException(e);\n            }\n            catch (WrappedSQLException c) {\n                // Expected WrappedSQLException\n            }\n        }\n        finally {\n            HibernateHelper.cleanupDB(stmt);\n        }\n    }","id":50572,"modified_method":"public void testNotReplaced() throws Exception {\n        Session session = null;\n        Statement stmt = null;\n        try {\n            session = HibernateFactory.getSession();\n            stmt = session.connection().createStatement();\n\n            stmt.execute(\"insert into exceptions_test (foobar, id) \" +\n                    \"values ('in', 1)\");\n            stmt.execute(\"insert into exceptions_test (small_column, id) \" +\n                    \"values ('ano', 1)\");\n        }\n        catch (SQLException e) {\n            if (!ConfigDefaults.get().isOracle()) {\n                session.connection().rollback();\n            }\n            try {\n                throw SqlExceptionTranslator.sqlException(e);\n            }\n            catch (WrappedSQLException c) {\n                // Expected WrappedSQLException\n            }\n        }\n        finally {\n            HibernateHelper.cleanupDB(stmt);\n        }\n    }","commit_id":"528259d7bcd4d7a90dfa2fbbd3dd55b6d097d588","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"protected static void oneTimeSetup() throws Exception {\n        Session session = null;\n        Statement stmt = null;\n        try {\n            session = HibernateFactory.getSession();\n            stmt = session.connection().createStatement();\n            stmt.executeQuery(\"select 1 from exceptions_test\");\n        }\n        catch (SQLException e) {\n            // Couldn't select 1, so the table didn't exist, create it\n            stmt.execute(\"create table exceptions_test \" +\n                    \"( \" +\n                    \"  small_column VarChar2(5),\" +\n                    \"  id     number\" +\n                    \"         constraint exceptions_test_pk primary key\" +\n                    \")\");\n\n            session.connection().commit();\n        }\n        finally {\n            HibernateHelper.cleanupDB(stmt);\n        }\n    }","id":50573,"modified_method":"protected static void oneTimeSetup() throws Exception {\n        Session session = null;\n        Statement stmt = null;\n        try {\n            session = HibernateFactory.getSession();\n            stmt = session.connection().createStatement();\n            stmt.executeQuery(\"select 1 from exceptions_test\");\n        }\n        catch (SQLException e) {\n            // Couldn't select 1, so the table didn't exist, create it\n            if (ConfigDefaults.get().isOracle()) {\n                stmt.execute(\"create table exceptions_test \" +\n                        \"( \" +\n                        \"  small_column VarChar2(5),\" +\n                        \"  id     number\" +\n                        \"         constraint exceptions_test_pk primary key\" +\n                        \")\");\n            }\n            else {\n                session.connection().rollback();\n                stmt.execute(\"create table exceptions_test \" +\n                        \"( \" +\n                        \"  small_column VarChar(5),\" +\n                        \"  id     numeric\" +\n                        \"         constraint exceptions_test_pk primary key\" +\n                        \")\");\n            }\n\n            session.connection().commit();\n        }\n        finally {\n            HibernateHelper.cleanupDB(stmt);\n        }\n    }","commit_id":"528259d7bcd4d7a90dfa2fbbd3dd55b6d097d588","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"public void testNamedConstraint() throws Exception {\n        Session session = null;\n        Statement stmt = null;\n        try {\n            session = HibernateFactory.getSession();\n            stmt = session.connection().createStatement();\n\n            stmt.execute(\"insert into exceptions_test (small_column, id) \" +\n                    \"values ('in', 1)\");\n            stmt.execute(\"insert into exceptions_test (small_column, id) \" +\n                    \"values ('ano', 1)\");\n        }\n        catch (SQLException e) {\n            try {\n                throw SqlExceptionTranslator.sqlException(e);\n            }\n            catch (ConstraintViolationException c) {\n                assertTrue(c.getConstraint().indexOf(\"EXCEPTIONS_TEST_PK\") >= 0);\n                assertEquals(c.getConstraintType(),\n                        ExceptionConstants.VALUE_TOO_LARGE);\n            }\n        }\n        finally {\n            HibernateHelper.cleanupDB(stmt);\n        }\n    }","id":50574,"modified_method":"public void testNamedConstraint() throws Exception {\n        Session session = null;\n        Statement stmt = null;\n        try {\n            session = HibernateFactory.getSession();\n            stmt = session.connection().createStatement();\n\n            stmt.execute(\"insert into exceptions_test (small_column, id) \" +\n                    \"values ('in', 1)\");\n            stmt.execute(\"insert into exceptions_test (small_column, id) \" +\n                    \"values ('ano', 1)\");\n        }\n        catch (SQLException e) {\n            if (!ConfigDefaults.get().isOracle()) {\n                session.connection().rollback();\n            }\n            try {\n                throw SqlExceptionTranslator.sqlException(e);\n            }\n            catch (ConstraintViolationException c) {\n                assertTrue(c.getConstraint().indexOf(\"EXCEPTIONS_TEST_PK\") >= 0);\n                assertEquals(c.getConstraintType(),\n                        ExceptionConstants.VALUE_TOO_LARGE);\n            }\n            // PostgreSQL\n            catch (WrappedSQLException c) {\n                assertTrue(c.getMessage().toLowerCase().contains(\"duplicate key\"));\n            }\n        }\n        finally {\n            HibernateHelper.cleanupDB(stmt);\n        }\n    }","commit_id":"528259d7bcd4d7a90dfa2fbbd3dd55b6d097d588","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"/**\n     * These tests assume that the DB is oracle\n     */\n    public void testConstraintViolation() throws Exception {\n        Session session = null;\n        Statement stmt = null;\n        try {\n            session = HibernateFactory.getSession();\n            stmt = session.connection().createStatement();\n\n            stmt.execute(\"insert into exceptions_test (small_column, id) \" +\n                    \"values ('tooBigAString', 1)\");\n        }\n        catch (SQLException e) {\n            try {\n                throw SqlExceptionTranslator.sqlException(e);\n            }\n            catch (ConstraintViolationException c) {\n                assertNull(c.getConstraint());\n                assertEquals(c.getConstraintType(),\n                        ExceptionConstants.VALUE_TOO_LARGE);\n            }\n        }\n        finally {\n            HibernateHelper.cleanupDB(stmt);\n        }\n    }","id":50575,"modified_method":"public void testConstraintViolation() throws Exception {\n        Session session = null;\n        Statement stmt = null;\n        try {\n            session = HibernateFactory.getSession();\n            stmt = session.connection().createStatement();\n\n            stmt.execute(\"insert into exceptions_test (small_column, id) \" +\n                    \"values ('tooBigAString', 1)\");\n        }\n        catch (SQLException e) {\n            if (!ConfigDefaults.get().isOracle()) {\n                session.connection().rollback();\n            }\n            try {\n                throw SqlExceptionTranslator.sqlException(e);\n            }\n            catch (ConstraintViolationException c) {\n                assertNull(c.getConstraint());\n                assertEquals(c.getConstraintType(),\n                        ExceptionConstants.VALUE_TOO_LARGE);\n            }\n            // PostgreSQL\n            catch (WrappedSQLException c) {\n                assertTrue(c.getMessage().toLowerCase().contains(\"value too long\"));\n            }\n        }\n        finally {\n            HibernateHelper.cleanupDB(stmt);\n        }\n    }","commit_id":"528259d7bcd4d7a90dfa2fbbd3dd55b6d097d588","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"private static void backdateKickstartSession(Session session,\n            KickstartSession ksession, int days) throws Exception {\n        Connection cn = session.connection();\n        StringBuffer sql = new StringBuffer();\n        sql.append(\"update rhnkickstartsession set last_action = sysdate - \");\n        sql.append(String.valueOf(days));\n        sql.append(\" where id = \").append(ksession.getId());\n        Statement stmt = null;\n        try {\n            stmt = cn.createStatement();\n            stmt.execute(sql.toString());\n        }\n        finally {\n            if (stmt != null) {\n                stmt.close();\n            }\n        }\n    }","id":50576,"modified_method":"private static void backdateKickstartSession(Session session,\n            KickstartSession ksession, int days) throws Exception {\n        Connection cn = session.connection();\n        StringBuffer sql = new StringBuffer();\n        sql.append(\"update rhnkickstartsession set last_action = current_timestamp - interval '\");\n        sql.append(String.valueOf(days));\n        sql.append(\"' day\");\n        sql.append(\" where id = \").append(ksession.getId());\n        Statement stmt = null;\n        try {\n            stmt = cn.createStatement();\n            stmt.execute(sql.toString());\n        }\n        finally {\n            if (stmt != null) {\n                stmt.close();\n            }\n        }\n    }","commit_id":"528259d7bcd4d7a90dfa2fbbd3dd55b6d097d588","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"public void testLotsOfTransactions() throws Exception {\n\n        for (int i = 0; i < 20; i++) {\n            SelectMode m = ModeFactory.getMode(\"test_queries\", \"date_dto_test\");\n            m.execute(new HashMap());\n            HibernateFactory.commitTransaction();\n            HibernateFactory.closeSession();\n        }\n\n    }","id":50577,"modified_method":"public void testLotsOfTransactions() throws Exception {\n\n        for (int i = 0; i < 20; i++) {\n            SelectMode m = ModeFactory.getMode(\"test_queries\", \"get_debug_log\");\n            m.execute(new HashMap());\n            HibernateFactory.commitTransaction();\n            HibernateFactory.closeSession();\n        }\n\n    }","commit_id":"528259d7bcd4d7a90dfa2fbbd3dd55b6d097d588","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"protected static void oneTimeSetup() throws Exception {\n        Connection c = null;\n        Statement stmt = null;\n        Session session = null;\n        try {\n            session = HibernateFactory.getSession();\n            c = session.connection();\n            stmt = c.createStatement();\n            stmt.executeQuery(\"select 1 from persist_test\");\n        }\n        catch (SQLException e) {\n            // let's clean up anything that MAY have been left\n            // over\n            forceQuery(c, \"drop sequence persist_sequence\");\n            forceQuery(c, \"drop table persist_test\");\n            // Couldn't select 1, so the table didn't exist, create it\n            stmt.execute(\"create sequence persist_sequence\");\n            stmt.execute(\"create table persist_test \" +\n                    \"( \" +\n                    \"  foobar VarChar2(32),\" +\n                    \"  test_column VarChar2(5),\" +\n                    \"  pin    number, \" +\n                    \"  hidden VarChar(32), \" +\n                    \"  id     number\" +\n                    \"         constraint persist_test_pk primary key,\" +\n                    \"  created date\" +\n                    \")\");\n\n            stmt.execute(\"insert into persist_test (foobar, id) \" +\n                    \"values ('Blarg', persist_sequence.nextval)\");\n            stmt.execute(\"insert into persist_test (foobar, id) \" +\n                    \"values ('duplicate', persist_sequence.nextval)\");\n            stmt.execute(\"insert into persist_test (foobar, id) \" +\n                    \"values ('duplicate', persist_sequence.nextval)\");\n            stmt.execute(\"insert into persist_test (foobar, hidden, id) \" +\n                    \"values ('duplicate', 'xxxxx', persist_sequence.nextval)\");\n\n            c.commit();\n        }\n        finally {\n            HibernateHelper.cleanupDB(stmt);\n        }\n    }","id":50578,"modified_method":"protected static void oneTimeSetup() throws Exception {\n        Connection c = null;\n        Statement stmt = null;\n        Session session = null;\n        try {\n            session = HibernateFactory.getSession();\n            c = session.connection();\n            stmt = c.createStatement();\n            stmt.executeQuery(\"select 1 from persist_test\");\n        }\n        catch (SQLException e) {\n            // let's clean up anything that MAY have been left\n            // over\n            forceQuery(c, \"drop table persist_test\");\n            forceQuery(c, \"drop sequence persist_sequence\");\n\n            // Couldn't select 1, so the table didn't exist, create it\n            if (ConfigDefaults.get().isOracle()) {\n                stmt.execute(\"create sequence persist_sequence\");\n                stmt.execute(\"create table persist_test \" +\n                        \"( \" +\n                        \"  foobar VarChar2(32),\" +\n                        \"  test_column VarChar2(5),\" +\n                        \"  pin    number, \" +\n                        \"  hidden VarChar(32), \" +\n                        \"  id     number\" +\n                        \"         constraint persist_test_pk primary key,\" +\n                        \"  created timestamp with local time zone\" +\n                        \")\");\n                stmt.execute(\"insert into persist_test (foobar, id) \" +\n                        \"values ('Blarg', persist_sequence.nextval\");\n                stmt.execute(\"insert into persist_test (foobar, id) \" +\n                        \"values ('duplicate', persist_sequence.nextval)\");\n                stmt.execute(\"insert into persist_test (foobar, id) \" +\n                        \"values ('duplicate', persist_sequence.nextval)\");\n                stmt.execute(\"insert into persist_test (foobar, hidden, id) \" +\n                        \"values ('duplicate', 'xxxxx', persist_sequence.nextval)\");\n\n            }\n            else {\n                c.rollback();\n                stmt.execute(\"create sequence persist_sequence\");\n                stmt.execute(\"create table persist_test \" +\n                        \"( \" +\n                        \"  foobar VarChar(32),\" +\n                        \"  test_column VarChar(5),\" +\n                        \"  pin    numeric, \" +\n                        \"  hidden VarChar(32), \" +\n                        \"  id     numeric\" +\n                        \"         constraint persist_test_pk primary key,\" +\n                        \"  created timestamp with time zone\" +\n                        \")\");\n                stmt.execute(\"insert into persist_test (foobar, id) \" +\n                        \"values ('Blarg', nextval('persist_sequence'))\");\n                stmt.execute(\"insert into persist_test (foobar, id) \" +\n                        \"values ('duplicate', nextval('persist_sequence'))\");\n                stmt.execute(\"insert into persist_test (foobar, id) \" +\n                        \"values ('duplicate', nextval('persist_sequence'))\");\n                stmt.execute(\"insert into persist_test (foobar, hidden, id) \" +\n                        \"values ('duplicate', 'xxxxx', nextval('persist_sequence'))\");\n            }\n\n            c.commit();\n        }\n        finally {\n            HibernateHelper.cleanupDB(stmt);\n        }\n    }","commit_id":"528259d7bcd4d7a90dfa2fbbd3dd55b6d097d588","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"private static Collection<DomElementProblemDescriptor> getXmlProblems(DomElement domElement) {\n    Collection<DomElementProblemDescriptor> problems = new ArrayList<DomElementProblemDescriptor>();\n    if (domElement != null && domElement.getXmlTag() != null) {\n      problems.addAll(getResolveProblems(domElement));\n\n    }\n    return problems;\n  }","id":50579,"modified_method":"private Collection<DomElementProblemDescriptor> getXmlProblems(DomElement domElement) {\n    final List<DomElementProblemDescriptor> list = myCachedXmlErrors.get(domElement);\n    if (list != null) {\n      return list;\n    }\n\n    List<DomElementProblemDescriptor> problems = new SmartList<DomElementProblemDescriptor>();\n    if (domElement != null && domElement.getXmlTag() != null) {\n      problems.addAll(getResolveProblems(domElement));\n    }\n    myCachedXmlErrors.put(domElement, problems);\n    return problems;\n  }","commit_id":"f7f57d402eddf70f2a411af380aa3172369e582c","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  public List<DomElementProblemDescriptor> getProblems(DomElement domElement) {\n    List<DomElementProblemDescriptor> problems = new ArrayList<DomElementProblemDescriptor>();\n    for (DomElementProblemDescriptor problemDescriptor : this) {\n      final DomElement domElement1 = problemDescriptor.getDomElement();\n      if (domElement1.equals(domElement)) {\n        problems.add(problemDescriptor);\n      }\n    }\n    return problems;\n  }","id":50580,"modified_method":"@NotNull\n  public final synchronized List<DomElementProblemDescriptor> getProblems(DomElement domElement) {\n    if (domElement == null || !domElement.isValid()) return Collections.emptyList();\n\n    final List<DomElementProblemDescriptor> list = myCachedErrors.get(domElement);\n    if (list != null) {\n      return new SmartList<DomElementProblemDescriptor>(list);\n    }\n\n    List<DomElementProblemDescriptor> problems = new SmartList<DomElementProblemDescriptor>();\n    for (DomElementProblemDescriptor problemDescriptor : this) {\n      if (problemDescriptor.getDomElement().equals(domElement)) {\n        problems.add(problemDescriptor);\n      }\n    }\n    myCachedErrors.put(domElement, problems);\n    return new SmartList<DomElementProblemDescriptor>(problems);\n  }","commit_id":"f7f57d402eddf70f2a411af380aa3172369e582c","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public List<DomElementProblemDescriptor> getProblems(final DomElement domElement,\n                                                       final boolean includeXmlProblems,\n                                                       final boolean withChildren) {\n\n    if (!withChildren || domElement == null || !domElement.isValid()) return getProblems(domElement);\n\n    final Set<DomElementProblemDescriptor> problems = new HashSet<DomElementProblemDescriptor>();\n\n    domElement.accept(new DomElementVisitor() {\n      public void visitDomElement(DomElement element) {\n        problems.addAll(getProblems(element, includeXmlProblems));\n        element.acceptChildren(this);\n      }\n    });\n\n    return new ArrayList<DomElementProblemDescriptor>(problems);\n  }","id":50581,"modified_method":"public List<DomElementProblemDescriptor> getProblems(final DomElement domElement,\n                                                       final boolean includeXmlProblems,\n                                                       final boolean withChildren) {\n\n    final List<DomElementProblemDescriptor> list = getProblems(domElement);\n    if (!withChildren || domElement == null || !domElement.isValid()) {\n      return list;\n    }\n\n    final List<DomElementProblemDescriptor> collection = getProblems(domElement, myCachedChildrenErrors, myDomProblemsGetter);\n    collection.addAll(getProblems(domElement, myCachedChildrenXmlErrors, myXmlProblemsGetter));\n    return collection;\n  }","commit_id":"f7f57d402eddf70f2a411af380aa3172369e582c","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void addProblem(final DomElementProblemDescriptor problemDescriptor) {\n    add(problemDescriptor);\n  }","id":50582,"modified_method":"public void addProblem(final DomElementProblemDescriptor problemDescriptor) {\n    add(problemDescriptor);\n    myCachedChildrenErrors.clear();\n    myCachedChildrenXmlErrors.clear();\n    myCachedErrors.clear();\n    myCachedXmlErrors.clear();\n  }","commit_id":"f7f57d402eddf70f2a411af380aa3172369e582c","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static String getTooltipText(String[] messages) {\n    if (messages.length == 0) return null;\n\n    String text = \"<table><tr><td>&nbsp;<\/td><td>\";\n    for (int i = 0; i < messages.length; i++) {\n      text += (i==0 ? \"\": MESSAGE_DELIMITER);\n      text += messages[i];\n    }\n    text+= \"<\/td><td>&nbsp;<\/td><\/tr><\/table>\";\n\n    return \"<html><body>\" + text + \"<\/body><\/html>\";\n  }","id":50583,"modified_method":"public static String getTooltipText(String[] messages) {\n    if (messages.length == 0) return null;\n\n    StringBuilder text = new StringBuilder(\"<html><body><table><tr><td>&nbsp;<\/td><td>\");\n    for (int i = 0; i < messages.length; i++) {\n      if (i != 0) {\n        text.append(MESSAGE_DELIMITER);\n      }\n      text.append(messages[i]);\n    }\n    text.append(\"<\/td><td>&nbsp;<\/td><\/tr><\/table><\/body><\/html>\");\n    return  text.toString();\n  }","commit_id":"f7f57d402eddf70f2a411af380aa3172369e582c","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public MigrationAssistantWizard(Project project, MigrationManager manager, MigrationErrorContainer errorContainer) {\n    super(\"Migration Assistant Wizard\", project, ListSequence.fromListAndArray(new ArrayList<AbstractWizardStepEx>(), new InitialStep(project), new MigrationsProgressWizardStep(project, manager, errorContainer), new MigrationErrorWizardStep(project, errorContainer)));\n\n    Dimension oldSize = super.getPreferredSize();\n    setSize(((int) oldSize.getWidth()), ((int) (oldSize.getHeight() + 90)));\n  }","id":50584,"modified_method":"public MigrationAssistantWizard(Project project, MigrationManager manager, MigrationProblemsContainer errorContainer) {\n    super(\"Migration Assistant Wizard\", project, ListSequence.fromListAndArray(new ArrayList<AbstractWizardStepEx>(), new InitialStep(project), new MigrationsProgressWizardStep(project, manager, errorContainer), new MigrationErrorWizardStep(project, errorContainer)));\n\n    Dimension oldSize = super.getPreferredSize();\n    setSize(((int) oldSize.getWidth()), ((int) (oldSize.getHeight() + 90)));\n  }","commit_id":"c91b0416b00b2acb8124c54f4775ec2862c88f39","url":"https://github.com/JetBrains/MPS"},{"original_method":"public MigrationErrorWizardStep(Project project, MigrationErrorContainer stateHolder) {\n    super(project, \"Could not Apply All Migrations\", ID);\n    myErrorContainer = stateHolder;\n  }","id":50585,"modified_method":"public MigrationErrorWizardStep(Project project, MigrationProblemsContainer stateHolder) {\n    super(project, \"Could not Apply All Migrations\", ID);\n    myErrorContainer = stateHolder;\n  }","commit_id":"c91b0416b00b2acb8124c54f4775ec2862c88f39","url":"https://github.com/JetBrains/MPS"},{"original_method":"public Iterable<Problem> getProblems() {\n      return Collections.<Problem>emptyList();\n    }","id":50586,"modified_method":"public PostCheckError(boolean error, boolean hasManuals) {\n      assert error || hasManuals;\n      myError = error;\n      myHasManuals = hasManuals;\n    }","commit_id":"c91b0416b00b2acb8124c54f4775ec2862c88f39","url":"https://github.com/JetBrains/MPS"},{"original_method":"public String getMessage() {\n      return \"Migration Assistant was unable to migrate some nodes in this project.<br><br>\" + \"Problem nodes will be shown in Model Checker tool after the project is loaded.<br>\" + \"Please correct them manually.\";\n    }","id":50587,"modified_method":"public String getMessage() {\n      String res = \"Migration Assistant was unable to migrate some nodes in this project.<br><br>\";\n      if (myError) {\n        res += \"Problems \" + ((myHasManuals ? \"and code for manual correction\" : \"\")) + \"will be shown in Model Checker tool when the project is loaded.\";\n      } else {\n        res += \"Some code can't be migrated automatically and should be changed manually.<br>\" + \"Places to be changed manually will be shown in Model Checker tool after the project is loaded.<br>\";\n      }\n      if (myHasManuals) {\n        res += \"You can re-run search for not migrated code at any time by choosing MainMenu->Migrations->Run Pre-Update Check\";\n      }\n      return res;\n    }","commit_id":"c91b0416b00b2acb8124c54f4775ec2862c88f39","url":"https://github.com/JetBrains/MPS"},{"original_method":"private void doRun(final ProgressIndicator progress) {\n    Map<String, Object> options = InitialStep.getOptions();\n    setFraction(progress, ProgressEstimation.initial());\n\n    boolean cleanNotification = false;\n    List<MigrationManager.MigrationStep> cleanupMigrations = ListSequence.fromList(new ArrayList<MigrationManager.MigrationStep>());\n    int cleanupStepsCount = myManager.projectStepsCount(true);\n    int stepNum = 0;\n    while (true) {\n      MigrationManager.MigrationStep step = myManager.nextProjectStep(options, true);\n      if (step == null) {\n        break;\n      }\n\n      ListSequence.fromList(cleanupMigrations).addElement(step);\n      if (!(executeSingleStep(step))) {\n        break;\n      }\n\n      if (!(cleanNotification)) {\n        cleanNotification = true;\n        addElementToMigrationList(\"Cleaning project... Please wait.\");\n      }\n\n      stepNum++;\n      setFraction(progress, ProgressEstimation.cleanupMigrations(1.0 * stepNum / cleanupStepsCount));\n    }\n\n    addElementToMigrationList(\"Checking migrations consistency... Please wait.\");\n    List<ScriptApplied.ScriptAppliedReference> missingMigrations = myManager.getMissingMigrations();\n    setFraction(progress, ProgressEstimation.migrationsCheck(1.0));\n    if (ListSequence.fromList(missingMigrations).isNotEmpty()) {\n      myErrorContainer.setErrorDescriptor(new MigrationsProgressWizardStep.MigrationsMissingError(missingMigrations));\n      addElementToMigrationList(\"Some migrations are missing. Press 'Next' to continue.\");\n      return;\n    }\n\n    addElementToMigrationList(\"Checking models... Please wait.\");\n    final jetbrains.mps.project.Project mpsProject = getMPSProject();\n    mpsProject.getRepository().getModelAccess().runReadAction(new Runnable() {\n      public void run() {\n        Iterable<SModule> modules = MigrationsUtil.getMigrateableModulesFromProject(mpsProject);\n        if (MigrationCheckUtil.haveProblems(modules, new _FunctionTypes._void_P1_E0<Double>() {\n          public void invoke(Double fraction) {\n            setFraction(progress, ProgressEstimation.preCheck(fraction));\n          }\n        })) {\n          myErrorContainer.setErrorDescriptor(new MigrationsProgressWizardStep.PreCheckError());\n        }\n      }\n    });\n    if (myErrorContainer.getErrorDescriptor() != null) {\n      // start cleanup migrations next time migration is started \n      for (MigrationManager.MigrationStep cleanupMigration : ListSequence.fromList(cleanupMigrations)) {\n        cleanupMigration.forceExecutionNextTime();\n      }\n      addElementToMigrationList(\"Can't start migration: errors detected. Press 'Next' to continue.\");\n      return;\n    }\n\n    int projectStepsCount = myManager.projectStepsCount(false);\n    stepNum = 0;\n    while (executeSingleStep(myManager.nextProjectStep(options, false))) {\n      stepNum++;\n      setFraction(progress, ProgressEstimation.projectMigrations(1.0 * stepNum / projectStepsCount));\n    }\n    if (myErrorContainer.getErrorDescriptor() != null) {\n      addElementToMigrationList(\"Exception while running migration. Press 'Next' to continue.\");\n      return;\n    }\n\n    int languageStepsCount = myManager.moduleStepsCount();\n    stepNum = 0;\n    while (executeSingleStep(myManager.nextModuleStep())) {\n      stepNum++;\n      setFraction(progress, ProgressEstimation.languageMigrations(1.0 * stepNum / languageStepsCount));\n    }\n    if (myErrorContainer.getErrorDescriptor() != null) {\n      addElementToMigrationList(\"Exception while running migration. Press 'Next' to continue.\");\n      return;\n    }\n\n    addElementToMigrationList(\"Saving changed models... Please wait.\");\n\n    mpsProject.getModelAccess().runWriteInEDT(new Runnable() {\n      public void run() {\n        mpsProject.getRepository().saveAll();\n      }\n    });\n    setFraction(progress, ProgressEstimation.saving(1.0));\n\n    addElementToMigrationList(\"Checking models... Please wait.\");\n    mpsProject.getRepository().getModelAccess().runReadAction(new Runnable() {\n      public void run() {\n        Iterable<SModule> modules = MigrationsUtil.getMigrateableModulesFromProject(mpsProject);\n        final Wrappers._int moduleNum = new Wrappers._int(0);\n        if (MigrationCheckUtil.haveProblems(modules, new _FunctionTypes._void_P1_E0<Double>() {\n          public void invoke(Double fraction) {\n            moduleNum.value++;\n            setFraction(progress, ProgressEstimation.postCheck(fraction));\n          }\n        })) {\n          myErrorContainer.setErrorDescriptor(new MigrationsProgressWizardStep.PostCheckError());\n        }\n      }\n    });\n    if (myErrorContainer.getErrorDescriptor() != null) {\n      addElementToMigrationList(\"Errors are detected in project after executing migrations. Press 'Next' to continue.\");\n      return;\n    }\n\n    addElementToMigrationList(\"Done!\");\n  }","id":50588,"modified_method":"private void doRun(final ProgressIndicator progress) {\n    Map<String, Object> options = InitialStep.getOptions();\n    setFraction(progress, ProgressEstimation.initial());\n\n    boolean cleanNotification = false;\n    List<MigrationManager.MigrationStep> cleanupMigrations = ListSequence.fromList(new ArrayList<MigrationManager.MigrationStep>());\n    int cleanupStepsCount = myManager.projectStepsCount(true);\n    int stepNum = 0;\n    while (true) {\n      MigrationManager.MigrationStep step = myManager.nextProjectStep(options, true);\n      if (step == null) {\n        break;\n      }\n\n      ListSequence.fromList(cleanupMigrations).addElement(step);\n      if (!(executeSingleStep(step))) {\n        break;\n      }\n\n      if (!(cleanNotification)) {\n        cleanNotification = true;\n        addElementToMigrationList(\"Cleaning project... Please wait.\");\n      }\n\n      stepNum++;\n      setFraction(progress, ProgressEstimation.cleanupMigrations(1.0 * stepNum / cleanupStepsCount));\n    }\n\n    addElementToMigrationList(\"Checking migrations consistency... Please wait.\");\n    List<ScriptApplied.ScriptAppliedReference> missingMigrations = myManager.getMissingMigrations();\n    setFraction(progress, ProgressEstimation.migrationsCheck(1.0));\n    if (ListSequence.fromList(missingMigrations).isNotEmpty()) {\n      myErrorContainer.setErrorDescriptor(new MigrationsProgressWizardStep.MigrationsMissingError(missingMigrations));\n      addElementToMigrationList(\"Some migrations are missing. Press 'Next' to continue.\");\n      return;\n    }\n\n    addElementToMigrationList(\"Checking models... Please wait.\");\n    final jetbrains.mps.project.Project mpsProject = getMPSProject();\n    mpsProject.getRepository().getModelAccess().runReadAction(new Runnable() {\n      public void run() {\n        Iterable<SModule> modules = MigrationsUtil.getMigrateableModulesFromProject(mpsProject);\n        if (MigrationCheckUtil.haveProblems(modules, new _FunctionTypes._void_P1_E0<Double>() {\n          public void invoke(Double fraction) {\n            setFraction(progress, ProgressEstimation.preCheck(fraction));\n          }\n        })) {\n          myErrorContainer.setErrorDescriptor(new MigrationsProgressWizardStep.PreCheckError());\n        }\n      }\n    });\n    if (myErrorContainer.getErrorDescriptor() != null) {\n      // start cleanup migrations next time migration is started \n      for (MigrationManager.MigrationStep cleanupMigration : ListSequence.fromList(cleanupMigrations)) {\n        cleanupMigration.forceExecutionNextTime();\n      }\n      addElementToMigrationList(\"Can't start migration: errors detected. Press 'Next' to continue.\");\n      return;\n    }\n\n    int projectStepsCount = myManager.projectStepsCount(false);\n    stepNum = 0;\n    while (executeSingleStep(myManager.nextProjectStep(options, false))) {\n      stepNum++;\n      setFraction(progress, ProgressEstimation.projectMigrations(1.0 * stepNum / projectStepsCount));\n    }\n    if (myErrorContainer.getErrorDescriptor() != null) {\n      addElementToMigrationList(\"Exception while running migration. Press 'Next' to continue.\");\n      return;\n    }\n\n    int languageStepsCount = myManager.moduleStepsCount();\n    stepNum = 0;\n    while (executeSingleStep(myManager.nextModuleStep())) {\n      stepNum++;\n      setFraction(progress, ProgressEstimation.languageMigrations(1.0 * stepNum / languageStepsCount));\n    }\n    if (myErrorContainer.getErrorDescriptor() != null) {\n      addElementToMigrationList(\"Exception while running migration. Press 'Next' to continue.\");\n      return;\n    }\n\n    addElementToMigrationList(\"Saving changed models... Please wait.\");\n\n    mpsProject.getModelAccess().runWriteInEDT(new Runnable() {\n      public void run() {\n        mpsProject.getRepository().saveAll();\n      }\n    });\n    setFraction(progress, ProgressEstimation.saving(1.0));\n\n    mpsProject.getRepository().getModelAccess().runReadAction(new Runnable() {\n      public void run() {\n        Iterable<SModule> modules = MigrationsUtil.getMigrateableModulesFromProject(mpsProject);\n        final Wrappers._int moduleNum = new Wrappers._int(0);\n\n        addElementToMigrationList(\"Checking models... Please wait.\");\n        boolean haveBadCode = MigrationCheckUtil.haveProblems(modules, new _FunctionTypes._void_P1_E0<Double>() {\n          public void invoke(Double fraction) {\n            moduleNum.value++;\n            setFraction(progress, ProgressEstimation.postCheck(fraction));\n          }\n        });\n\n        addElementToMigrationList(\"Finding not migrated code... Please wait.\");\n        boolean haveNotMigrated = MigrationCheckUtil.haveNotMigrated(modules, getMPSProject().getComponent(MigrationComponent.class), new _FunctionTypes._void_P1_E0<Double>() {\n          public void invoke(Double fraction) {\n            moduleNum.value++;\n            setFraction(progress, ProgressEstimation.nonMigratedCheck(fraction));\n          }\n        });\n\n        if (haveBadCode || haveNotMigrated) {\n          myErrorContainer.setErrorDescriptor(new MigrationsProgressWizardStep.PostCheckError(haveBadCode, haveNotMigrated));\n        }\n      }\n    });\n    if (myErrorContainer.getErrorDescriptor() != null) {\n      addElementToMigrationList(\"Problems are detected in project after executing migrations. Press 'Next' to continue.\");\n      return;\n    }\n\n    addElementToMigrationList(\"Done!\");\n  }","commit_id":"c91b0416b00b2acb8124c54f4775ec2862c88f39","url":"https://github.com/JetBrains/MPS"},{"original_method":"public MigrationsProgressWizardStep(Project project, MigrationManager manager, MigrationErrorContainer errorContainer) {\n    super(project, \"Migration In Progress\", ID);\n    myManager = manager;\n    myErrorContainer = errorContainer;\n    this.myTask = new Task.Modal(project, \"Migration progress\", false) {\n      public void run(@NotNull ProgressIndicator progress) {\n        PersistenceRegistry.getInstance().disableFastFindUsages();\n        try {\n          doRun(progress);\n        } catch (Throwable t) {\n          addElementToMigrationList(\"Finished with exception\");\n          if (LOG.isEnabledFor(Level.ERROR)) {\n            LOG.error(\"exception occured on migration\", t);\n          }\n        } finally {\n          myIsComplete = true;\n          setFraction(progress, 1.0);\n          myProgress.setText(\"Finished\");\n          PersistenceRegistry.getInstance().enableFastFindUsages();\n        }\n      }\n    };\n  }","id":50589,"modified_method":"public MigrationsProgressWizardStep(Project project, MigrationManager manager, MigrationProblemsContainer errorContainer) {\n    super(project, \"Migration In Progress\", ID);\n    myManager = manager;\n    myErrorContainer = errorContainer;\n    this.myTask = new Task.Modal(project, \"Migration progress\", false) {\n      public void run(@NotNull ProgressIndicator progress) {\n        PersistenceRegistry.getInstance().disableFastFindUsages();\n        try {\n          doRun(progress);\n        } catch (Throwable t) {\n          addElementToMigrationList(\"Finished with exception\");\n          if (LOG.isEnabledFor(Level.ERROR)) {\n            LOG.error(\"exception occured on migration\", t);\n          }\n        } finally {\n          myIsComplete = true;\n          setFraction(progress, 1.0);\n          myProgress.setText(\"Finished\");\n          PersistenceRegistry.getInstance().enableFastFindUsages();\n        }\n      }\n    };\n  }","commit_id":"c91b0416b00b2acb8124c54f4775ec2862c88f39","url":"https://github.com/JetBrains/MPS"},{"original_method":"public Iterable<Problem> getProblems() {\n      Iterable<SModule> modules = MigrationsUtil.getMigrateableModulesFromProject(getMPSProject());\n      return MigrationCheckUtil.getProblems(modules, null, 100);\n    }","id":50590,"modified_method":"public Iterable<Problem> getProblems() {\n      Iterable<SModule> modules = MigrationsUtil.getMigrateableModulesFromProject(getMPSProject());\n      return CollectionSequence.fromCollection(MigrationCheckUtil.getNotMigrated(modules, getMPSProject().getComponent(MigrationComponent.class), null, 100)).union(CollectionSequence.fromCollection(MigrationCheckUtil.getProblems(modules, null, 100)));\n    }","commit_id":"c91b0416b00b2acb8124c54f4775ec2862c88f39","url":"https://github.com/JetBrains/MPS"},{"original_method":"@NotNull\n  public DomElementsProblemsHolder getProblemHolder(DomElement element) {\n    if (element == null || !element.isValid()) return EMPTY_PROBLEMS_HOLDER;\n    final DomFileElement<DomElement> fileElement = element.getRoot();\n    synchronized (PsiLock.LOCK) {\n      final DomElementsProblemsHolder readyHolder = myReadyHolders.get(fileElement);\n      if (isHighlightingFinished(fileElement)) {\n        return readyHolder;\n      }\n      if (myCalculatingHolders.containsKey(fileElement)) {\n        return readyHolder == null ? EMPTY_PROBLEMS_HOLDER : readyHolder;\n      }\n      myCalculatingHolders.put(fileElement, Boolean.TRUE);\n    }\n    try {\n      final DomElementsProblemsHolderImpl holder = new DomElementsProblemsHolderImpl(fileElement);\n      holder.calculateAllProblems();\n      synchronized (PsiLock.LOCK) {\n        final Project project = fileElement.getManager().getProject();\n        final CachedValuesManager cachedValuesManager = PsiManager.getInstance(project).getCachedValuesManager();\n        myReadyHolders.put(fileElement, holder);\n        final CachedValue<Boolean> cachedValue = cachedValuesManager.createCachedValue(new CachedValueProvider<Boolean>() {\n          public Result<Boolean> compute() {\n            return new Result<Boolean>(Boolean.FALSE, fileElement, ProjectRootManager.getInstance(project));\n          }\n        }, false);\n        myCachedValues.put(fileElement, cachedValue);\n        cachedValue.getValue();\n      }\n      return holder;\n    } finally {\n      synchronized (PsiLock.LOCK) {\n        myCalculatingHolders.remove(fileElement);\n      }\n    }\n  }","id":50591,"modified_method":"@NotNull\n  public DomElementsProblemsHolder getProblemHolder(DomElement element) {\n    if (element == null || !element.isValid()) return EMPTY_PROBLEMS_HOLDER;\n    final DomFileElement<DomElement> fileElement = element.getRoot();\n    synchronized (PsiLock.LOCK) {\n      final DomElementsProblemsHolder readyHolder = myReadyHolders.get(fileElement);\n      if (isHighlightingFinished(fileElement)) {\n        return readyHolder;\n      }\n      if (myCalculatingHolders.containsKey(fileElement)) {\n        return readyHolder == null ? EMPTY_PROBLEMS_HOLDER : readyHolder;\n      }\n      myCalculatingHolders.put(fileElement, Boolean.TRUE);\n    }\n    try {\n      final DomElementsProblemsHolderImpl holder = new DomElementsProblemsHolderImpl(fileElement);\n      holder.calculateAllProblems();\n      synchronized (PsiLock.LOCK) {\n        final Project project = fileElement.getManager().getProject();\n        final CachedValuesManager cachedValuesManager = PsiManager.getInstance(project).getCachedValuesManager();\n        myReadyHolders.put(fileElement, holder);\n        final CachedValue<Boolean> cachedValue = cachedValuesManager.createCachedValue(new CachedValueProvider<Boolean>() {\n          public Result<Boolean> compute() {\n            return new Result<Boolean>(Boolean.FALSE, fileElement, ProjectRootManager.getInstance(project));\n          }\n        }, false);\n        myCachedValues.put(fileElement, cachedValue);\n        cachedValue.getValue();\n      }\n      myDispatcher.getMulticaster().highlightingFinished(fileElement);\n      return holder;\n    } finally {\n      synchronized (PsiLock.LOCK) {\n        myCalculatingHolders.remove(fileElement);\n      }\n    }\n  }","commit_id":"ba1c2d36a08fddbb7b13534c1b44ba5fc2f650d6","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public final void calculateAllProblems() {\n    final Ref<Boolean> ref = new Ref<Boolean>(Boolean.FALSE);\n    myElement.accept(new DomElementVisitor() {\n      public void visitDomElement(DomElement element) {\n        final Boolean old = ref.get();\n        ref.set(Boolean.FALSE);\n        element.acceptChildren(this);\n        ref.set(ref.get() ? old : calculateProblems(element));\n      }\n    });\n  }","id":50592,"modified_method":"public final void calculateAllProblems() {\n    final Ref<Boolean> ref = new Ref<Boolean>(Boolean.FALSE);\n    myElement.accept(new DomElementVisitor() {\n      public void visitDomElement(DomElement element) {\n        final Boolean old = ref.get();\n        ref.set(Boolean.FALSE);\n        element.acceptChildren(this);\n        ref.set(ref.get().booleanValue() ? old : calculateProblems(element));\n      }\n    });\n  }","commit_id":"ba1c2d36a08fddbb7b13534c1b44ba5fc2f650d6","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public List<DomElementProblemDescriptor> getProblems(final DomElement domElement,\n                                                       final boolean includeXmlProblems,\n                                                       final boolean withChildren) {\n\n    final List<DomElementProblemDescriptor> list = getProblems(domElement, includeXmlProblems);\n    if (!withChildren || domElement == null || !domElement.isValid()) {\n      return list;\n    }\n\n    final List<DomElementProblemDescriptor> collection = getProblems(domElement, myCachedChildrenErrors, myDomProblemsGetter);\n    if (includeXmlProblems) {\n      collection.addAll(getProblems(domElement, myCachedChildrenXmlErrors, myXmlProblemsGetter));\n    }\n    return collection;\n  }","id":50593,"modified_method":"public List<DomElementProblemDescriptor> getProblems(final DomElement domElement,\n                                                       final boolean includeXmlProblems,\n                                                       final boolean withChildren) {\n\n    if (!withChildren || domElement == null || !domElement.isValid()) {\n      return getProblems(domElement, includeXmlProblems);\n    }\n\n    final List<DomElementProblemDescriptor> collection = getProblems(domElement, myCachedChildrenErrors, myDomProblemsGetter);\n    if (includeXmlProblems) {\n      collection.addAll(getProblems(domElement, myCachedChildrenXmlErrors, myXmlProblemsGetter));\n    }\n    return collection;\n  }","commit_id":"ba1c2d36a08fddbb7b13534c1b44ba5fc2f650d6","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected DomModelTreeView(DomElement rootElement, DomManager manager, SimpleTreeStructure treeStructure) {\n    myDomManager = manager;\n    myRootElement = rootElement;\n    myTree = new SimpleTree(new DefaultTreeModel(new DefaultMutableTreeNode()));\n    myTree.setRootVisible(isRootVisible());\n    myTree.setShowsRootHandles(true);\n    myTree.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);\n\n    ToolTipManager.sharedInstance().registerComponent(myTree);\n    TreeUtil.installActions(myTree);\n\n    myBuilder = new LazySimpleTreeBuilder(myTree, (DefaultTreeModel)myTree.getModel(), treeStructure, WeightBasedComparator.INSTANCE);\n    Disposer.register(this, myBuilder);\n\n    myBuilder.setNodeDescriptorComparator(null);\n\n    myBuilder.initRoot();\n\n    add(myTree, BorderLayout.CENTER);\n\n    myTree.addTreeExpansionListener(new TreeExpansionListener() {\n      public void treeExpanded(TreeExpansionEvent event) {\n        final SimpleNode simpleNode = myTree.getNodeFor(event.getPath());\n\n        if (simpleNode instanceof AbstractDomElementNode) {\n          ((AbstractDomElementNode)simpleNode).setExpanded(true);\n        }\n      }\n\n      public void treeCollapsed(TreeExpansionEvent event) {\n        final SimpleNode simpleNode = myTree.getNodeFor(event.getPath());\n\n        if (simpleNode instanceof AbstractDomElementNode) {\n          ((AbstractDomElementNode)simpleNode).setExpanded(false);\n          simpleNode.update();\n        }\n      }\n    });\n\n    myDomManager.addDomEventListener(new DomChangeAdapter() {\n      protected void elementChanged(DomElement element) {\n        if (element.isValid()) {\n          queueUpdate(element.getRoot().getFile().getVirtualFile());\n        }\n      }\n    }, this);\n    WolfTheProblemSolver.getInstance(myDomManager.getProject()).addProblemListener(new WolfTheProblemSolver.ProblemListener() {\n      public void problemsAppeared(VirtualFile file) {\n        queueUpdate(file);\n      }\n\n      public void problemsChanged(VirtualFile file) {\n        queueUpdate(file);\n      }\n\n      public void problemsDisappeared(VirtualFile file) {\n        queueUpdate(file);\n      }\n\n    }, this);\n\n    myTree.setPopupGroup(getPopupActions(), DOM_MODEL_TREE_VIEW_POPUP);\n  }","id":50594,"modified_method":"protected DomModelTreeView(DomElement rootElement, DomManager manager, SimpleTreeStructure treeStructure) {\n    myDomManager = manager;\n    myRootElement = rootElement;\n    myTree = new SimpleTree(new DefaultTreeModel(new DefaultMutableTreeNode()));\n    myTree.setRootVisible(isRootVisible());\n    myTree.setShowsRootHandles(true);\n    myTree.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);\n\n    ToolTipManager.sharedInstance().registerComponent(myTree);\n    TreeUtil.installActions(myTree);\n\n    myBuilder = new LazySimpleTreeBuilder(myTree, (DefaultTreeModel)myTree.getModel(), treeStructure, WeightBasedComparator.INSTANCE);\n    Disposer.register(this, myBuilder);\n\n    myBuilder.setNodeDescriptorComparator(null);\n\n    myBuilder.initRoot();\n\n    add(myTree, BorderLayout.CENTER);\n\n    myTree.addTreeExpansionListener(new TreeExpansionListener() {\n      public void treeExpanded(TreeExpansionEvent event) {\n        final SimpleNode simpleNode = myTree.getNodeFor(event.getPath());\n\n        if (simpleNode instanceof AbstractDomElementNode) {\n          ((AbstractDomElementNode)simpleNode).setExpanded(true);\n        }\n      }\n\n      public void treeCollapsed(TreeExpansionEvent event) {\n        final SimpleNode simpleNode = myTree.getNodeFor(event.getPath());\n\n        if (simpleNode instanceof AbstractDomElementNode) {\n          ((AbstractDomElementNode)simpleNode).setExpanded(false);\n          simpleNode.update();\n        }\n      }\n    });\n\n    myDomManager.addDomEventListener(new DomChangeAdapter() {\n      protected void elementChanged(DomElement element) {\n        if (element.isValid()) {\n          queueUpdate(element.getRoot().getFile().getVirtualFile());\n        }\n      }\n    }, this);\n\n\n    final Project project = myDomManager.getProject();\n    DomElementAnnotationsManager.getInstance(project).addHighlightingListener(new DomElementAnnotationsManager.DomHighlightingListener() {\n      public void highlightingFinished(DomFileElement element) {\n        if (element.isValid()) {\n          queueUpdate(element.getRoot().getFile().getVirtualFile());\n        }\n      }\n    }, this);\n\n    myTree.setPopupGroup(getPopupActions(), DOM_MODEL_TREE_VIEW_POPUP);\n  }","commit_id":"ba1c2d36a08fddbb7b13534c1b44ba5fc2f650d6","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected void initPortletWindow(String uid) throws PortalException {\n        ChannelState channelState = (ChannelState)channelStateMap.get(uid);\n        ChannelRuntimeData rd = channelState.getRuntimeData();\n        ChannelStaticData sd = channelState.getStaticData();\n        ChannelData cd = channelState.getChannelData();\n        PortalControlStructures pcs = channelState.getPortalControlStructures();\n        \n        try {\n            synchronized(this) {\n                if (!portletContainerInitialized) {\n                    initPortletContainer(uid);\n                }        \n            }\n            \n            PortletContainerServices.prepare(uniqueContainerName);\n\n            // Get the portlet definition Id which must be specified as a publish\n            // parameter.  The syntax of the ID is [portlet-context-name].[portlet-name]\n            String portletDefinitionId = sd.getParameter(portletDefinitionIdParamName);\n            if (portletDefinitionId == null) {\n                throw new PortalException(\"Missing publish parameter '\" + portletDefinitionIdParamName + \"'\");\n            }\n            \n            PortletDefinition portletDefinition = InformationProviderAccess.getStaticProvider().getPortletDefinition(ObjectIDImpl.createFromString(portletDefinitionId));\n            if (portletDefinition == null) {\n                throw new PortalException(\"Unable to find portlet definition for ID '\" + portletDefinitionId + \"'\");\n            }\n            \n            ChannelDefinition channelDefinition = ChannelRegistryStoreFactory.getChannelRegistryStoreImpl().getChannelDefinition(Integer.parseInt(sd.getChannelPublishId()));\n            ((PortletDefinitionImpl)portletDefinition).setChannelDefinition(channelDefinition);      \n                    \n            PortletEntityImpl portletEntity = new PortletEntityImpl();\n            portletEntity.setId(sd.getChannelPublishId());\n            portletEntity.setPortletDefinition(portletDefinition);\n\n            // Take all parameters whose names start with \"PORTLET.\" and pass them\n            // as portlet entity preferences (after stripping \"PORTLET.\")\n            PreferenceSetImpl preferences = new PreferenceSetImpl();\n            Enumeration allKeys = sd.keys();\n            while (allKeys.hasMoreElements()) {\n                String p = (String)allKeys.nextElement();\n                if (p.startsWith(portletPreferenceNamePrefix)) {\n                    String prefName = p.substring(portletPreferenceNamePrefix.length());\n                    String prefVal = (String)sd.getParameter(p);\n                    // Currently we are limited to one value per name\n                    // The Preference object supports multiple values per name.\n                    // We could consider a convention in which multi-valued preferences\n                    // are denoted by a comma-delimited String.  This is a little messy,\n                    // but we want to minimize changes to the framework in order to support\n                    // the portlet-to-channel adapter.\n                    Collection values = new ArrayList(1);\n                    values.add(prefVal);\n                    preferences.add(prefName, values, true);\n                }\n            }\n            \n            portletEntity.setPreferences(preferences);\n             \n            // Now create the PortletWindow and hold a reference to it\n            PortletWindowImpl portletWindow = new PortletWindowImpl();\n            portletWindow.setId(sd.getChannelSubscribeId());\n            portletWindow.setPortletEntity(portletEntity);\n\t\t\tportletWindow.setChannelRuntimeData(rd);\n            cd.setPortletWindow(portletWindow);\n                \n            // As the container to load the portlet\n            HttpServletRequest requestWrapper = pcs.getHttpServletRequest();\n            portletContainer.portletLoad(portletWindow, requestWrapper, pcs.getHttpServletResponse());\n            \n            cd.setPortletWindowInitialized(true);\n            \n        } catch (Exception e) {\n            String message = \"Initialization of the portlet container failed.\";\n            LogService.log(LogService.ERROR, message, e);\n            throw new PortalException(message, e);\n        } finally {\n            PortletContainerServices.release();\n        }\n    }","id":50595,"modified_method":"protected void initPortletWindow(String uid) throws PortalException {\n        ChannelState channelState = (ChannelState)channelStateMap.get(uid);\n        ChannelRuntimeData rd = channelState.getRuntimeData();\n        ChannelStaticData sd = channelState.getStaticData();\n        ChannelData cd = channelState.getChannelData();\n        PortalControlStructures pcs = channelState.getPortalControlStructures();\n        \n        try {\n            synchronized(this) {\n                if (!portletContainerInitialized) {\n                    initPortletContainer(uid);\n                }        \n            }\n            \n            PortletContainerServices.prepare(uniqueContainerName);\n\n            // Get the portlet definition Id which must be specified as a publish\n            // parameter.  The syntax of the ID is [portlet-context-name].[portlet-name]\n            String portletDefinitionId = sd.getParameter(portletDefinitionIdParamName);\n            if (portletDefinitionId == null) {\n                throw new PortalException(\"Missing publish parameter '\" + portletDefinitionIdParamName + \"'\");\n            }\n            \n            PortletDefinition portletDefinition = InformationProviderAccess.getStaticProvider().getPortletDefinition(ObjectIDImpl.createFromString(portletDefinitionId));\n            if (portletDefinition == null) {\n                throw new PortalException(\"Unable to find portlet definition for ID '\" + portletDefinitionId + \"'\");\n            }\n            \n            ChannelDefinition channelDefinition = ChannelRegistryStoreFactory.getChannelRegistryStoreImpl().getChannelDefinition(Integer.parseInt(sd.getChannelPublishId()));\n            ((PortletDefinitionImpl)portletDefinition).setChannelDefinition(channelDefinition);      \n                    \n            PortletEntityImpl portletEntity = new PortletEntityImpl();\n            portletEntity.setId(sd.getChannelPublishId());\n            portletEntity.setPortletDefinition(portletDefinition);\n\n            // Take all parameters whose names start with \"PORTLET.\" and pass them\n            // as portlet entity preferences (after stripping \"PORTLET.\")\n            PreferenceSetImpl preferences = new PreferenceSetImpl();\n            Enumeration allKeys = sd.keys();\n            while (allKeys.hasMoreElements()) {\n                String p = (String)allKeys.nextElement();\n                if (p.startsWith(portletPreferenceNamePrefix)) {\n                    String prefName = p.substring(portletPreferenceNamePrefix.length());\n                    String prefVal = (String)sd.getParameter(p);\n                    // Currently we are limited to one value per name\n                    // The Preference object supports multiple values per name.\n                    // We could consider a convention in which multi-valued preferences\n                    // are denoted by a comma-delimited String.  This is a little messy,\n                    // but we want to minimize changes to the framework in order to support\n                    // the portlet-to-channel adapter.\n                    Collection values = new ArrayList(1);\n                    values.add(prefVal);\n                    preferences.add(prefName, values, true);\n                }\n            }\n            \n            portletEntity.setPreferences(preferences);\n             \n            // Now create the PortletWindow and hold a reference to it\n            PortletWindowImpl portletWindow = new PortletWindowImpl();\n            portletWindow.setId(sd.getChannelSubscribeId());\n            portletWindow.setPortletEntity(portletEntity);\n\t\t\tportletWindow.setChannelRuntimeData(rd);\n            portletWindow.setHttpServletRequest(pcs.getHttpServletRequest());\n            cd.setPortletWindow(portletWindow);\n                \n            // As the container to load the portlet\n            HttpServletRequest requestWrapper = pcs.getHttpServletRequest();\n            portletContainer.portletLoad(portletWindow, requestWrapper, pcs.getHttpServletResponse());\n            \n            cd.setPortletWindowInitialized(true);\n            \n        } catch (Exception e) {\n            String message = \"Initialization of the portlet container failed.\";\n            LogService.log(LogService.ERROR, message, e);\n            throw new PortalException(message, e);\n        } finally {\n            PortletContainerServices.release();\n        }\n    }","commit_id":"d4c9b4516453659aa33f62da29b2f2ac5e7024c2","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n     * Output channel content to the portal.  This version of the \n     * render method is normally not used since this is a \"character channel\".\n     * @param out a sax document handler\n     * @param uid a unique ID used to identify the state of the channel\n     */\n    public void renderXML(ContentHandler out, String uid) throws PortalException {        \n        try {\n            String markupString = getMarkup(uid);\n                                \n            // Output content.  This assumes that markupString\n            // is well-formed.  Consider changing to a character\n            // channel when it becomes available.  Until we use the\n            // character channel, these <div> tags will be necessary.\n            SAXHelper.outputContent(out, \"<div>\" + markupString + \"<\/div>\");\n                     \n        } catch (Exception e) {\n            throw new PortalException(e);\n        }\n    }","id":50596,"modified_method":"/**\n     * Output channel content to the portal.  This version of the \n     * render method is normally not used since this is a \"character channel\".\n     * @param out a sax document handler\n     * @param uid a unique ID used to identify the state of the channel\n     */\n    public void renderXML(ContentHandler out, String uid) throws PortalException {        \n        ChannelState channelState = (ChannelState)channelStateMap.get(uid);\n        ChannelData cd = channelState.getChannelData();\n\n        if (!cd.isPortletWindowInitialized()) {\n            initPortletWindow(uid);\n        }\n        \n        try {\n            String markupString = getMarkup(uid);\n                                \n            // Output content.  This assumes that markupString\n            // is well-formed.  Consider changing to a character\n            // channel when it becomes available.  Until we use the\n            // character channel, these <div> tags will be necessary.\n            SAXHelper.outputContent(out, \"<div>\" + markupString + \"<\/div>\");\n                     \n        } catch (Exception e) {\n            throw new PortalException(e);\n        }\n    }","commit_id":"d4c9b4516453659aa33f62da29b2f2ac5e7024c2","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n     * React to portal events.\n     * Removes channel state from the channel state map when the session expires.\n     * @param ev a portal event\n     * @param uid a unique ID used to identify the state of the channel\n     */\n    public void receiveEvent(PortalEvent ev, String uid) {\n        ChannelState channelState = (ChannelState)channelStateMap.get(uid);\n        ChannelData cd = channelState.getChannelData();\n        PortalControlStructures pcs = channelState.getPortalControlStructures();\n        DynamicInformationProvider dip = InformationProviderAccess.getDynamicProvider(pcs.getHttpServletRequest());\n        PortletActionProvider pap = dip.getPortletActionProvider(cd.getPortletWindow());\n        \n        switch (ev.getEventNumber()) {\n            \n            // Detect portlet mode changes   \n                 \n            case PortalEvent.EDIT_BUTTON_EVENT:\n                pap.changePortletMode(PortletMode.EDIT);\n                break;\n            case PortalEvent.HELP_BUTTON_EVENT:\n                pap.changePortletMode(PortletMode.HELP);\n                break;\n            case PortalEvent.ABOUT_BUTTON_EVENT:\n                // We might want to consider a custom ABOUT mode here\n                //pap.changePortletMode(new PortletMode(\"ABOUT\"));\n                break;\n                \n            // Detect portlet window state changes\n            \n            case PortalEvent.DETACH_BUTTON_EVENT:\n                // Maybe we want to consider a custom window state here or used MAXIMIZED\n                //pap.changePortletWindowState(new WindowState(\"DETACHED\"));\n                break;\n            \n            // Detect end of session or portlet removed from layout\n            \n            case PortalEvent.SESSION_DONE:\n            case PortalEvent.UNSUBSCRIBE:\n                // For both SESSION_DONE and UNSUBSCRIBE, we might want to\n                // release resources here if we need to\n                // \n                break;\n                \n            default:\n                break;\n        }\n               \n        if (channelState != null) {\n            channelState.setPortalEvent(ev);\n            if (ev.getEventNumber() == PortalEvent.SESSION_DONE) {\n                channelStateMap.remove(uid); // Clean up\n            }\n        }        \n    }","id":50597,"modified_method":"/**\n     * React to portal events.\n     * Removes channel state from the channel state map when the session expires.\n     * @param ev a portal event\n     * @param uid a unique ID used to identify the state of the channel\n     */\n    public void receiveEvent(PortalEvent ev, String uid) {\n        ChannelState channelState = (ChannelState)channelStateMap.get(uid);\n        ChannelData cd = channelState.getChannelData();\n        PortalControlStructures pcs = channelState.getPortalControlStructures();\n        \n        try {\n            PortletContainerServices.prepare(uniqueContainerName);\n            \n            DynamicInformationProvider dip = InformationProviderAccess.getDynamicProvider(pcs.getHttpServletRequest());\n            PortletActionProvider pap = dip.getPortletActionProvider(cd.getPortletWindow());\n            \n            switch (ev.getEventNumber()) {\n                \n                // Detect portlet mode changes   \n                     \n                case PortalEvent.EDIT_BUTTON_EVENT:\n                    pap.changePortletMode(PortletMode.EDIT);\n                    break;\n                case PortalEvent.HELP_BUTTON_EVENT:\n                    pap.changePortletMode(PortletMode.HELP);\n                    break;\n                case PortalEvent.ABOUT_BUTTON_EVENT:\n                    // We might want to consider a custom ABOUT mode here\n                    //pap.changePortletMode(new PortletMode(\"ABOUT\"));\n                    break;\n                    \n                // Detect portlet window state changes\n                \n                case PortalEvent.DETACH_BUTTON_EVENT:\n                    // Maybe we want to consider a custom window state here or used MAXIMIZED\n                    //pap.changePortletWindowState(new WindowState(\"DETACHED\"));\n                    break;\n                \n                // Detect end of session or portlet removed from layout\n                \n                case PortalEvent.SESSION_DONE:\n                case PortalEvent.UNSUBSCRIBE:\n                    // For both SESSION_DONE and UNSUBSCRIBE, we might want to\n                    // release resources here if we need to\n                    // \n                    break;\n                    \n                default:\n                    break;\n            }\n                   \n            if (channelState != null) {\n                channelState.setPortalEvent(ev);\n                if (ev.getEventNumber() == PortalEvent.SESSION_DONE) {\n                    channelStateMap.remove(uid); // Clean up\n                }\n            }\n        } finally {\n            PortletContainerServices.release();     \n        }\n    }","commit_id":"d4c9b4516453659aa33f62da29b2f2ac5e7024c2","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n     * This is where we do the real work of getting the markup.\n     * This is called from both renderXML() and renderCharacters().\n     * @param uid a unique ID used to identify the state of the channel\n     */\n    protected synchronized String getMarkup(String uid) {\n        ChannelState channelState = (ChannelState)channelStateMap.get(uid);\n        ChannelRuntimeData rd = channelState.getRuntimeData();\n        ChannelStaticData sd = channelState.getStaticData();\n        ChannelData cd = channelState.getChannelData();\n        PortalControlStructures pcs = channelState.getPortalControlStructures();\n        \n        String markup = \"<b>Problem rendering portlet \" + sd.getParameter(\"portletDefinitionId\") + \"<\/b>\";\n        \n        try {\n            StringWriter sw = new StringWriter();\n            PrintWriter pw = new PrintWriter(sw);\n            HttpServletRequest wrappedRequest = pcs.getHttpServletRequest();\n            //HttpServletResponse wrappedResponse = ServletObjectAccess.getStoredServletResponse(pcs.getHttpServletResponse(), pw);\n            HttpServletResponse wrappedResponse = new StoredServletResponseImpl(pcs.getHttpServletResponse(), pw);\n                        \n            // Hide the request parameters if this portlet isn't targeted\n            if (!rd.isTargeted()) {\n                wrappedRequest = new EmptyRequestImpl(wrappedRequest);\n            }\n            \n            portletContainer.renderPortlet(cd.getPortletWindow(), wrappedRequest, wrappedResponse);\n            \n            markup = sw.toString();\n                        \n        } catch (Throwable t) {\n            t.printStackTrace();\n        }\n        \n        return markup;\n    }","id":50598,"modified_method":"/**\n     * This is where we do the real work of getting the markup.\n     * This is called from both renderXML() and renderCharacters().\n     * @param uid a unique ID used to identify the state of the channel\n     */\n    protected synchronized String getMarkup(String uid) {\n        ChannelState channelState = (ChannelState)channelStateMap.get(uid);\n        ChannelRuntimeData rd = channelState.getRuntimeData();\n        ChannelStaticData sd = channelState.getStaticData();\n        ChannelData cd = channelState.getChannelData();\n        PortalControlStructures pcs = channelState.getPortalControlStructures();\n        \n        String markup = \"<b>Problem rendering portlet \" + sd.getParameter(\"portletDefinitionId\") + \"<\/b>\";\n        \n        try {\n            PortletContainerServices.prepare(uniqueContainerName);\n            \n            // Check if this portlet has just processed an action during this request.\n            // If so, then we capture the changes that the portlet may have made during\n            // its processAction implementation and we pass them to the render request.\n            // Pluto's normally does this by creating a new render URL and redirecting,\n            // but we have overidden that behavior in our own version of PortletContainerImpl.\n            if (cd.hasProcessedAction()) {\n                InternalActionResponse actionResponse = (InternalActionResponse)PortletObjectAccess.getActionResponse(cd.getPortletWindow(), pcs.getHttpServletRequest(), pcs.getHttpServletResponse());\n                PortletActionProvider pap = InformationProviderAccess.getDynamicProvider(pcs.getHttpServletRequest()).getPortletActionProvider(cd.getPortletWindow());\n                // Change modes\n                if (actionResponse.getChangedPortletMode() != null) {\n                    pap.changePortletMode(actionResponse.getChangedPortletMode());\n                }\n                // Change window states\n                if (actionResponse.getChangedWindowState() != null) {\n                    pap.changePortletWindowState(actionResponse.getChangedWindowState());\n                }\n                // Change render parameters\n                Map renderParameters = actionResponse.getRenderParameters();\n                PortletStateManager pum = ((DynamicInformationProviderImpl)InformationProviderAccess.getDynamicProvider(pcs.getHttpServletRequest())).getPortletURLManager(cd.getPortletWindow());\n                pum.setParameters(renderParameters);\n            }\n\n            StringWriter sw = new StringWriter();\n            PrintWriter pw = new PrintWriter(sw);\n            HttpServletRequest wrappedRequest = pcs.getHttpServletRequest();\n            HttpServletResponse wrappedResponse = ServletObjectAccess.getStoredServletResponse(pcs.getHttpServletResponse(), pw);\n                                    \n            // Hide the request parameters if this portlet isn't targeted\n            if (!rd.isTargeted()) {\n                wrappedRequest = new EmptyRequestImpl(wrappedRequest);\n            }\n            \n            //System.out.println(\"Rendering portlet \" + cd.getPortletWindow().getId());\n            portletContainer.renderPortlet(cd.getPortletWindow(), wrappedRequest, wrappedResponse);\n            \n            markup = sw.toString();\n            \n            cd.setProcessedAction(false);\n                        \n        } catch (Throwable t) {\n            t.printStackTrace();\n        } finally {\n            PortletContainerServices.release();\n        }\n        \n        return markup;\n    }","commit_id":"d4c9b4516453659aa33f62da29b2f2ac5e7024c2","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n     * Sets the channel runtime data.\n     * @param rd the channel runtime data\n     * @param uid a unique ID used to identify the state of the channel\n     * @throws org.jasig.portal.PortalException\n     */\n    public void setRuntimeData(ChannelRuntimeData rd, String uid) throws PortalException {\n        ChannelState channelState = (ChannelState)channelStateMap.get(uid);\n        channelState.setRuntimeData(rd);\n        \n        PortalControlStructures pcs = channelState.getPortalControlStructures();\n        ChannelData cd = channelState.getChannelData();\n        // Process action if this is the targeted channel\n        if (rd.isTargeted() && rd.getParameters().size() > 0) {\n            try {\n                StringWriter sw = new StringWriter();\n                PrintWriter pw = new PrintWriter(sw);\n                HttpServletRequest wrappedRequest = pcs.getHttpServletRequest();\n                HttpServletResponse wrappedResponse = new StoredServletResponseImpl(pcs.getHttpServletResponse(), pw);\n                PortletWindowImpl portletWindow = (PortletWindowImpl)cd.getPortletWindow();\n                portletWindow.setChannelRuntimeData(rd);\n                portletContainer.processPortletAction(cd.getPortletWindow(), wrappedRequest, wrappedResponse);\n            } catch (Exception e) {\n                throw new PortalException(e);\n            }\n        }\n        \n    }","id":50599,"modified_method":"/**\n     * Sets the channel runtime data.\n     * @param rd the channel runtime data\n     * @param uid a unique ID used to identify the state of the channel\n     * @throws org.jasig.portal.PortalException\n     */\n    public void setRuntimeData(ChannelRuntimeData rd, String uid) throws PortalException {\n        ChannelState channelState = (ChannelState)channelStateMap.get(uid);\n        channelState.setRuntimeData(rd);\n        \n        PortalControlStructures pcs = channelState.getPortalControlStructures();\n        ChannelData cd = channelState.getChannelData();\n        \n        try {\n            PortletContainerServices.prepare(uniqueContainerName);\n            \n            if (cd.isPortletWindowInitialized()) {\n                // Put the current runtime data into the portlet window\n                PortletWindowImpl portletWindow = (PortletWindowImpl)cd.getPortletWindow();\n                portletWindow.setChannelRuntimeData(rd);\n                portletWindow.setHttpServletRequest(pcs.getHttpServletRequest());\n                \n                // Get the portlet url manager which will analyze the request parameters\n                DynamicInformationProvider dip = InformationProviderAccess.getDynamicProvider(pcs.getHttpServletRequest());\n                PortletStateManager pum = ((DynamicInformationProviderImpl)dip).getPortletURLManager(portletWindow);\n                \n                // If portlet is rendering as root, change mode to maximized, otherwise minimized\n                PortletActionProvider pap = dip.getPortletActionProvider(portletWindow);\n                if (rd.isRenderingAsRoot()) {\n                    pap.changePortletWindowState(WindowState.MAXIMIZED);\n                } else {\n                    pap.changePortletWindowState(WindowState.NORMAL);\n                }\n                \n                // Process action if this is the targeted channel and the URL is an action URL\n                if (rd.isTargeted() && pum.isAction()) {\n                    try {\n                        StringWriter sw = new StringWriter();\n                        PrintWriter pw = new PrintWriter(sw);\n                        HttpServletRequest wrappedRequest = pcs.getHttpServletRequest();\n                        HttpServletResponse wrappedResponse = new StoredServletResponseImpl(pcs.getHttpServletResponse(), pw);\n                        //System.out.println(\"Processing portlet action on \" + cd.getPortletWindow().getId());\n                        portletContainer.processPortletAction(cd.getPortletWindow(), wrappedRequest, wrappedResponse);\n                        cd.setProcessedAction(true);\n                    } catch (Exception e) {\n                        throw new PortalException(e);\n                    }\n                }\n            }\n        } finally {\n            PortletContainerServices.release();\n        }\n        \n    }","commit_id":"d4c9b4516453659aa33f62da29b2f2ac5e7024c2","url":"https://github.com/Jasig/uPortal"},{"original_method":"@Override\n\tpublic void addTaglibSupport(\n\t\t\tTemplate template, String servletContextName,\n\t\t\tPortletRequest portletRequest, PortletResponse portletResponse)\n\t\tthrows Exception {\n\n\t\tHttpServletRequest request = PortalUtil.getHttpServletRequest(\n\t\t\tportletRequest);\n\n\t\ttemplate.prepare(request);\n\n\t\ttemplate.put(\n\t\t\t\"fullTemplatesPath\", servletContextName.concat(\n\t\t\t\tTemplateConstants.SERVLET_SEPARATOR));\n\n\t\tServletConfig servletConfig =\n\t\t\t(ServletConfig)portletRequest.getAttribute(\n\t\t\t\tPortletServlet.PORTLET_SERVLET_CONFIG);\n\n\t\tPortletServlet portletServlet = new PortletServlet();\n\n\t\tportletServlet.init(servletConfig);\n\n\t\tServletContextHashModel servletContextHashModel =\n\t\t\tnew ServletContextHashModel(\n\t\t\t\tportletServlet, ObjectWrapper.DEFAULT_WRAPPER);\n\n\t\ttemplate.put(\"Application\", servletContextHashModel);\n\n\t\tServletContext servletContext = ServletContextPool.get(\n\t\t\tservletContextName);\n\n\t\tTemplateHashModel taglibsFactory =\n\t\t\tFreeMarkerTaglibFactoryUtil.createTaglibFactory(servletContext);\n\n\t\ttemplate.put(\"PortletJspTagLibs\", taglibsFactory);\n\n\t\tHttpServletResponse response = PortalUtil.getHttpServletResponse(\n\t\t\tportletResponse);\n\n\t\tHttpRequestHashModel httpRequestHashModel = new HttpRequestHashModel(\n\t\t\trequest, response, ObjectWrapper.DEFAULT_WRAPPER);\n\n\t\ttemplate.put(\"Request\", httpRequestHashModel);\n\t}","id":50600,"modified_method":"@Override\n\tpublic void addTaglibSupport(\n\t\t\tTemplate template, String servletContextName,\n\t\t\tPortletRequest portletRequest, PortletResponse portletResponse)\n\t\tthrows Exception {\n\n\t\tHttpServletRequest request = PortalUtil.getHttpServletRequest(\n\t\t\tportletRequest);\n\n\t\ttemplate.prepare(request);\n\n\t\ttemplate.put(\n\t\t\t\"fullTemplatesPath\", servletContextName.concat(\n\t\t\t\tTemplateConstants.SERVLET_SEPARATOR));\n\n\t\tServletConfig servletConfig =\n\t\t\t(ServletConfig)portletRequest.getAttribute(\n\t\t\t\tPortletServlet.PORTLET_SERVLET_CONFIG);\n\n\t\tPortletServlet portletServlet = new PortletServlet();\n\n\t\tportletServlet.init(servletConfig);\n\n\t\tServletContextHashModel servletContextHashModel =\n\t\t\tnew ServletContextHashModel(\n\t\t\t\tportletServlet, ObjectWrapper.DEFAULT_WRAPPER);\n\n\t\ttemplate.put(\"Application\", servletContextHashModel);\n\n\t\tServletContext servletContext = ServletContextPool.get(\n\t\t\tservletContextName);\n\n\t\tTemplateHashModel taglibsFactory =\n\t\t\tFreeMarkerTaglibFactoryUtil.createTaglibFactory(servletContext);\n\n\t\ttemplate.put(\"PortletJspTagLibs\", taglibsFactory);\n\n\t\tHttpServletRequestWrapper httpServletRequestWrapper =\n\t\t\tnew HttpServletRequestWrapper(\n\t\t\t\tPortalUtil.getHttpServletRequest(portletRequest));\n\n\t\tHttpServletResponseWrapper httpServletResponseWrapper =\n\t\t\tnew HttpServletResponseWrapper(\n\t\t\t\tPortalUtil.getHttpServletResponse(portletResponse));\n\n\t\tHttpRequestHashModel httpRequestHashModel =\n\t\t\tnew HttpRequestHashModel(\n\t\t\t\thttpServletRequestWrapper, httpServletResponseWrapper,\n\t\t\t\tObjectWrapper.DEFAULT_WRAPPER);\n\n\t\ttemplate.put(\"Request\", httpRequestHashModel);\n\t}","commit_id":"4bbaacaace61defb8d284a9c22d995ed49171e1c","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void renderState(HttpServletRequest req, HttpServletResponse res, IUserInstance userInstance) throws PortalException {\n        final IPerson person = userInstance.getPerson();\n        final LocaleManager localeManager = userInstance.getLocaleManager();\n        final IUserPreferencesManager uPreferencesManager = userInstance.getPreferencesManager();\n        final ChannelManager channelManager = userInstance.getChannelManager();\n        final Object renderingLock = userInstance.getRenderingLock();\n        \n        UPFileSpec upfs = new UPFileSpec(req);\n        String rootNodeId = upfs.getMethodNodeId();\n        if (rootNodeId == null) {\n            rootNodeId = UPFileSpec.USER_LAYOUT_ROOT_NODE;\n        }\n        \n        // see if a new root target has been specified\n        String newRootNodeId = req.getParameter(\"uP_detach_target\");\n\n        // set optimistic uPElement value\n        UPFileSpec uPElement = new UPFileSpec(UPFileSpec.RENDER_METHOD, rootNodeId, null, null);\n\n        if (newRootNodeId != null) {\n            // set a new root\n            uPElement.setMethodNodeId(newRootNodeId);\n        }\n        \n        channelManager.setUPElement(uPElement);\n\n        // proccess possible portlet action\n        final IPortletWindowId targetedPortletWindowId = this.portletRequestParameterManager.getTargetedPortletWindowId(req);\n        if (targetedPortletWindowId != null) {\n            final PortletUrl portletUrl = this.portletRequestParameterManager.getPortletRequestInfo(req, targetedPortletWindowId);\n            \n            if (RequestType.ACTION.equals(portletUrl.getRequestType())) {\n                final IPortletEntity targetedPortletEntity = this.portletWindowRegistry.getParentPortletEntity(req, targetedPortletWindowId);\n                if (targetedPortletEntity != null) {\n                    final String channelSubscribeId = targetedPortletEntity.getChannelSubscribeId();\n                    final boolean actionExecuted = channelManager.doChannelAction(req, res, channelSubscribeId, false);\n                    \n                    if (actionExecuted) {\n                        // The action completed, return immediately\n                        return;\n                    }\n    \n                    // The action didn't execute, continue and try to render normally\n                }\n            }\n        }\n        \n        // process possible worker dispatch\n        final boolean workerDispatched = this.processWorkerDispatchIfNecessary(req, res, uPreferencesManager, channelManager);\n        if (workerDispatched) {\n            //If a worker was dispatched to return immediately\n            return;\n        }\n        \n        //Set a larger buffer to allow for explicit flushing\n        res.setBufferSize(16 * 1024);\n        \n        final long startTime = System.currentTimeMillis();\n        synchronized (renderingLock) {\n            // This function does ALL the content gathering/presentation work.\n            // The following filter sequence is processed:\n            //        userLayoutXML (in UserPreferencesManager)\n            //              |\n            //        incorporate StructureAttributes\n            //              |\n            //        Structure transformation\n            //              + (buffering step)\n            //        ChannelRendering Buffer\n            //              |\n            //        ThemeAttributesIncorporation Filter\n            //              |\n            //        Theme Transformatio\n            //              |\n            //        ChannelIncorporation filter\n            //              |\n            //        Serializer (XHTML/WML/HTML/etc.)\n            //              |\n            //        JspWriter\n            //\n\n            try {\n\n                // determine uPElement (optimistic prediction) --begin\n                // We need uPElement for ChannelManager.setReqNRes() call. That call will distribute uPElement\n                // to Privileged channels. We assume that Privileged channels are smart enough not to delete\n                // themselves in the detach mode !\n\n                // In general transformations will start at the userLayoutRoot node, unless\n                // we are rendering something in a detach mode.\n                IUserLayoutNodeDescription rElement = null;\n                // see if an old detach target exists in the servlet path\n\n                // give channels the current locale manager\n                channelManager.setLocaleManager(localeManager);\n\n                IUserLayoutManager ulm = uPreferencesManager.getUserLayoutManager();\n\n                // determine uPElement (optimistic prediction) --end\n\n                // set up the channel manager\n\n                channelManager.startRenderingCycle(req, res, uPElement);\n\n                // after this point the layout is determined\n\n                UserPreferences userPreferences = uPreferencesManager.getUserPreferences();\n                StructureStylesheetDescription ssd = uPreferencesManager.getStructureStylesheetDescription();\n                ThemeStylesheetDescription tsd = uPreferencesManager.getThemeStylesheetDescription();\n\n                // verify upElement and determine rendering root --begin\n                if (newRootNodeId != null && (!newRootNodeId.equals(rootNodeId))) {\n                    // see if the new detach traget is valid\n                    try {\n                        rElement = ulm.getNode(newRootNodeId);\n                    }\n                    catch (PortalException e) {\n                        rElement = null;\n                    }\n\n                    if (rElement != null) {\n                        // valid new root id was specified. need to redirect\n                        // peterk: should we worry about forwarding\n                        // parameters here ? or those passed with detach\n                        // always get sacked ?\n                        // Andreas: Forwarding parameters with detach\n                        // are not lost anymore with the URLUtil class.\n\n                        // Skip the uP_detach_target parameter since\n                        // it has already been processed\n                        String[] skipParams = new String[] { \"uP_detach_target\" };\n\n                        try {\n                            URLUtil.redirect(req, res, newRootNodeId, true, skipParams, CHARACTER_SET);\n                        }\n                        catch (PortalException pe) {\n                            log.error(\"PortalException occurred while redirecting\",\n                                    pe);\n                        }\n                        return;\n                    }\n                }\n\n                // LogService.log(LogService.DEBUG,\"uP_detach_target=\\\"\"+rootNodeId+\"\\\".\");\n                try {\n                    rElement = ulm.getNode(rootNodeId);\n                }\n                catch (PortalException e) {\n                    rElement = null;\n                }\n                // if we haven't found root node so far, set it to the userLayoutRoot\n                if (rElement == null) {\n                    rootNodeId = UPFileSpec.USER_LAYOUT_ROOT_NODE;\n                }\n\n                // update the render target\n                uPElement.setMethodNodeId(rootNodeId);\n\n                // inform channel manager about the new uPElement value\n                channelManager.setUPElement(uPElement);\n                // verify upElement and determine rendering root --begin\n                \n                // Increase output buffer size, buffer will be flushed before and after every <channel>\n                res.setBufferSize(16 * 1024);\n\n                // Disable page caching\n                res.setHeader(\"pragma\", \"no-cache\");\n                res.setHeader(\"Cache-Control\", \"no-cache, max-age=0, must-revalidate\");\n                res.setDateHeader(\"Expires\", 0);\n                // set the response mime type\n                res.setContentType(tsd.getMimeType() + \"; charset=\" + CHARACTER_SET);\n                // obtain the writer - res.getWriter() must occur after res.setContentType()\n                Writer out = new BufferedWriter(res.getWriter(), 1024);\n                // get a serializer appropriate for the target media\n                BaseMarkupSerializer markupSerializer =\n                    MEDIA_MANAGER.getSerializerByName(tsd.getSerializerName(),\n                        new ChannelTitleIncorporationWiterFilter(out, channelManager, ulm));\n                // set up the serializer\n                markupSerializer.asContentHandler();\n                // see if we can use character caching\n                boolean ccaching = (CHARACTER_CACHE_ENABLED && (markupSerializer instanceof CachingSerializer));\n                channelManager.setCharacterCaching(ccaching);\n                // pass along the serializer name\n                channelManager.setSerializerName(tsd.getSerializerName());\n                // initialize ChannelIncorporationFilter\n                CharacterCachingChannelIncorporationFilter cif = new CharacterCachingChannelIncorporationFilter(markupSerializer, channelManager, CACHE_ENABLED && CHARACTER_CACHE_ENABLED, req, res);\n\n                String cacheKey = null;\n                boolean output_produced = false;\n                if (CACHE_ENABLED) {\n                    boolean ccache_exists = false;\n                    // obtain the cache key\n                    cacheKey = constructCacheKey(uPreferencesManager, rootNodeId);\n                    if (ccaching) {\n                        // obtain character cache\n                        List<CacheEntry> cacheEntries = systemCharacterCache.get(cacheKey);\n                        if(cacheEntries!=null && cacheEntries.size()>0) {\n                            ccache_exists = true;\n                            if (log.isDebugEnabled())\n                                log\n                                        .debug(\"retreived transformation character block cache for a key \\\"\"\n                                                + cacheKey + \"\\\"\");\n                            // start channel threads\n                            for(int i=0;i<cacheEntries.size();i++) {\n                                CacheEntry ce = cacheEntries.get(i);\n                                if (ce.getCacheType().equals(CacheType.CHANNEL_CONTENT)) {\n                                    String channelSubscribeId = ((ChannelContentCacheEntry)ce).getChannelId();\n                                    if(channelSubscribeId!=null) {\n                                        try {\n                                            channelManager.startChannelRendering(req, res, channelSubscribeId);\n                                        } catch (PortalException e) {\n                                            log.error(\"UserInstance::renderState() : unable to start rendering channel (subscribeId=\\\"\"+channelSubscribeId+\"\\\", user=\"+person.getID()+\" layoutId=\"+uPreferencesManager.getCurrentProfile().getLayoutId(),e);\n                                        }\n                                    } else {\n                                        log.error(\"channel entry \" + Integer.toString(i)\n                                            + \" in character cache is invalid (user=\" + person.getID() + \")!\");\n                                    }\n                                }\n                            }\n                            channelManager.commitToRenderingChannelSet();\n\n                            // go through the output loop\n                            CachingSerializer cSerializer = (CachingSerializer) markupSerializer;\n                            cSerializer.setDocumentStarted(true);\n\n                            for(int sb=0; sb<cacheEntries.size();sb++) {\n                                CacheEntry ce = cacheEntries.get(sb);\n                                if (log.isDebugEnabled()) {\n                                    DebugCachingSerializer dcs = new DebugCachingSerializer();\n                                    log.debug(\"----------printing \" + ce.getCacheType() + \" cache block \"+Integer.toString(sb));\n                                    ce.replayCache(dcs, channelManager, req, res);\n                                    log.debug(dcs.getCache());\n                                }\n\n                                // get cache block output\n                                ce.replayCache(cSerializer, channelManager, req, res);\n                            }\n\n                            cSerializer.flush();\n                            output_produced = true;\n                        }\n                    }\n                    // if this failed, try XSLT cache\n                    if ((!ccaching) || (!ccache_exists)) {\n                        // obtain XSLT cache\n\n                        SAX2BufferImpl cachedBuffer = systemCache.get(cacheKey);\n                        if (cachedBuffer != null) {\n                            // replay the buffer to channel incorporation filter\n                            if (log.isDebugEnabled()) {\n                                log.debug(\"retreived XSLT transformation cache for a key '\" + cacheKey + \"'\");\n                            }\n                            \n                            // attach rendering buffer downstream of the cached buffer\n                            ChannelRenderingBuffer crb = new ChannelRenderingBuffer(cachedBuffer, channelManager, ccaching, req, res);\n                            \n                            // attach channel incorporation filter downstream of the channel rendering buffer\n                            cif.setParent(crb);\n                            crb.setOutputAtDocumentEnd(true);\n                            cachedBuffer.outputBuffer(crb);\n\n                            output_produced = true;\n                        }\n                    }\n                }\n                // fallback on the regular rendering procedure\n                if (!output_produced) {\n\n                    // obtain transformer handlers for both structure and theme stylesheets\n                    TransformerHandler ssth = XSLT.getTransformerHandler(ResourceLoader.getResourceAsURL(this.getClass(), ssd.getStylesheetURI()).toString());\n                    TransformerHandler tsth = XSLT.getTransformerHandler(tsd.getStylesheetURI(), localeManager\n                            .getLocales(), this);\n\n                    // obtain transformer references from the handlers\n                    Transformer sst = ssth.getTransformer();\n                    sst.setErrorListener(cErrListener);\n                    Transformer tst = tsth.getTransformer();\n                    tst.setErrorListener(cErrListener);\n                    \n                    // pass resourcesDao into transformer\n                    tst.setParameter(ResourcesXalanElements.SKIN_RESOURCESDAO_PARAMETER_NAME, resourcesDao);\n\n                    // initialize ChannelRenderingBuffer and attach it downstream of the structure transformer\n                    ChannelRenderingBuffer crb = new ChannelRenderingBuffer(channelManager, ccaching, req, res);\n                    ssth.setResult(new SAXResult(crb));\n\n                    // determine and set the stylesheet params\n                    // prepare .uP element and detach flag to be passed to the stylesheets\n                    // Including the context path in front of uPElement is necessary for phone.com browsers to work\n                    sst.setParameter(\"baseActionURL\", uPElement.getUPFile());\n                    // construct idempotent version of the uPElement\n                    UPFileSpec uPIdempotentElement = new UPFileSpec(uPElement);\n                    sst.setParameter(\"baseIdempotentActionURL\", uPElement.getUPFile());\n\n                    Hashtable<String, String> supTable = userPreferences.getStructureStylesheetUserPreferences()\n                            .getParameterValues();\n                    for (Map.Entry<String, String> param : supTable.entrySet()) {\n                        String pName = param.getKey();\n                        String pValue = param.getValue();\n                        if (log.isDebugEnabled())\n                            log.debug(\"setting sparam \\\"\" + pName + \"\\\"=\\\"\" + pValue\n                                    + \"\\\".\");\n                        sst.setParameter(pName, pValue);\n                    }\n\n                    // all the parameters are set up, fire up structure transformation\n\n                    // filter to fill in channel/folder attributes for the \"structure\" transformation.\n                    StructureAttributesIncorporationFilter saif = new StructureAttributesIncorporationFilter(ssth,\n                            userPreferences.getStructureStylesheetUserPreferences());\n\n                    // This is a debug statement that will print out XML incoming to the\n                    // structure transformation to a log file serializer to a printstream\n                    StringWriter dbwr1 = null;\n                    OutputFormat outputFormat = null;\n                    if (logXMLBeforeStructureTransformation) {\n                        dbwr1 = new StringWriter();\n                        outputFormat = new OutputFormat();\n                        outputFormat.setIndenting(true);\n                        XMLSerializer dbser1 = new XMLSerializer(dbwr1, outputFormat);\n                        SAX2DuplicatingFilterImpl dupl1 = new SAX2DuplicatingFilterImpl(ssth, dbser1);\n                        dupl1.setParent(saif);\n                    }\n\n                    // if operating in the detach mode, need wrap everything\n                    // in a document node and a <layout_fragment> node\n                    boolean detachMode = !rootNodeId.equals(UPFileSpec.USER_LAYOUT_ROOT_NODE);\n                    if (detachMode) {\n                        saif.startDocument();\n                        saif.startElement(\"\",\n                                \"layout_fragment\",\n                                \"layout_fragment\",\n                                new org.xml.sax.helpers.AttributesImpl());\n\n                        //                            emptyt.transform(new DOMSource(rElement),new SAXResult(new ChannelSAXStreamFilter((ContentHandler)saif)));\n                        if (rElement == null) {\n                            ulm.getUserLayout(new ChannelSAXStreamFilter((ContentHandler) saif));\n                        }\n                        else {\n                            ulm.getUserLayout(rElement.getId(), new ChannelSAXStreamFilter((ContentHandler) saif));\n                        }\n\n                        saif.endElement(\"\", \"layout_fragment\", \"layout_fragment\");\n                        saif.endDocument();\n                    }\n                    else {\n                        if (rElement == null) {\n                            ulm.getUserLayout(saif);\n                        }\n                        else {\n                            ulm.getUserLayout(rElement.getId(), saif);\n                        }\n                        //                            emptyt.transform(new DOMSource(rElement),new SAXResult((ContentHandler)saif));\n                    }\n                    // all channels should be rendering now\n\n                    // Debug piece to print out the recorded pre-structure transformation XML\n                    if (logXMLBeforeStructureTransformation) {\n                        if (log.isDebugEnabled())\n                            log\n                                    .debug(\"XML incoming to the structure transformation :\\n\\n\"\n                                            + dbwr1.toString() + \"\\n\\n\");\n                    }\n\n                    // prepare for the theme transformation\n\n                    // set up of the parameters\n                    tst.setParameter(\"baseActionURL\", uPElement.getUPFile());\n                    tst.setParameter(\"baseIdempotentActionURL\", uPIdempotentElement.getUPFile());\n                    if (externalLoginUrl != null) {\n                        tst.setParameter(\"EXTERNAL_LOGIN_URL\", externalLoginUrl);\n                    }\n\n                    Hashtable<String, String> tupTable = userPreferences.getThemeStylesheetUserPreferences()\n                            .getParameterValues();\n                    for (Map.Entry<String, String> param : tupTable.entrySet()) {\n                        String pName = param.getKey();\n                        String pValue = param.getValue();\n                        if (log.isDebugEnabled())\n                            log.debug(\"setting tparam \\\"\" + pName + \"\\\"=\\\"\" + pValue\n                                    + \"\\\".\");\n                        tst.setParameter(pName, pValue);\n                    }\n\n                    VersionsManager versionsManager = VersionsManager.getInstance();\n                    Version[] versions = versionsManager.getVersions();\n\n                    for (Version version : versions) {\n                        String paramName = \"version-\" + version.getFname();\n                        tst.setParameter(paramName, version.dottedTriple());\n                    }\n\n                    // the uP_productAndVersion stylesheet parameter is deprecated\n                    // instead use the more generic \"version-UP_VERSION\" generated from the\n                    // framework's functional name when all versions are pulled immediately\n                    // above.\n                    // TODO: handle version display in a 3.3-compliant way\n//                    Version uPortalVersion = versionsManager.getVersion(IPermission.PORTAL_PUBLISH);\n//                    tst.setParameter(\"uP_productAndVersion\", \"uPortal \" + uPortalVersion.dottedTriple());\n\n                    final Locale[] locales = localeManager.getLocales();\n                    if (locales != null && locales.length > 0 && locales[0] != null) {\n                        tst.setParameter(\"USER_LANG\", locales[0].toString().replace('_', '-'));\n                    }\n\n                    // initialize a filter to fill in channel attributes for the \"theme\" (second) transformation.\n                    // attach it downstream of the channel rendering buffer\n                    ThemeAttributesIncorporationFilter taif = new ThemeAttributesIncorporationFilter(\n                            (XMLReader) crb, userPreferences.getThemeStylesheetUserPreferences());\n                    // attach theme transformation downstream of the theme attribute incorporation filter\n                    taif.setAllHandlers(tsth);\n\n                    // This is a debug statement that will print out XML incoming to the\n                    // theme transformation to a log file serializer to a printstream\n                    StringWriter dbwr2 = null;\n                    if (logXMLBeforeThemeTransformation) {\n                        dbwr2 = new StringWriter();\n                        XMLSerializer dbser2 = new XMLSerializer(dbwr2, outputFormat);\n                        SAX2DuplicatingFilterImpl dupl2 = new SAX2DuplicatingFilterImpl(tsth, dbser2);\n                        dupl2.setParent(taif);\n                    }\n\n                    if (CACHE_ENABLED && !ccaching) {\n                        // record cache\n                        // attach caching buffer downstream of the theme transformer\n                        SAX2BufferImpl newCache = new SAX2BufferImpl();\n                        tsth.setResult(new SAXResult(newCache));\n\n                        // attach channel incorporation filter downstream of the caching buffer\n                        cif.setParent(newCache);\n\n                        systemCache.put(cacheKey, newCache);\n                        newCache.setOutputAtDocumentEnd(true);\n                        if (log.isDebugEnabled())\n                            log.debug(\"recorded transformation cache with key \\\"\"\n                                    + cacheKey + \"\\\"\");\n                    }\n                    else {\n                        // attach channel incorporation filter downstream of the theme transformer\n                        tsth.setResult(new SAXResult(cif));\n                    }\n                    // fire up theme transformation\n                    crb.stopBuffering();\n                    crb.outputBuffer();\n                    crb.clearBuffer();\n\n                    // Debug piece to print out the recorded pre-theme transformation XML\n                    if (logXMLBeforeThemeTransformation && log.isDebugEnabled()) {\n                        log.debug(\"XML incoming to the theme transformation :\\n\\n\"\n                                + dbwr2.toString() + \"\\n\\n\");\n                    }\n\n                    if (CACHE_ENABLED && ccaching) {\n                        // save character block cache\n                        List<CacheEntry> cacheBlocks = cif.getCacheBlocks();\n                        if(cacheBlocks == null) {\n                            log\n                                    .error(\"CharacterCachingChannelIncorporationFilter returned invalid cache entries!\");\n                        }\n                        else {\n                            // record cache\n                            systemCharacterCache.put(cacheKey, cacheBlocks);\n                            if (log.isDebugEnabled()) {\n                                log\n                                        .debug(\"recorded transformation character block cache with key \\\"\"\n                                                + cacheKey + \"\\\"\");\n\n                                log.debug(\"Printing transformation cache blocks:\");\n                                for (int i=0; i<cacheBlocks.size(); i++) {\n                                    CacheEntry ce = cacheBlocks.get(i);\n                                    if (ce.getCacheType().equals(CacheType.CHARACTERS)) {\n                                        log.debug(\"----------piece \"+Integer.toString(i));\n                                    } else if (ce.getCacheType().equals(CacheType.CHANNEL_CONTENT)) {\n                                        log.debug(\"----------channel content entry \"+Integer.toString(i));\n                                    }\n                                    DebugCachingSerializer dcs = new DebugCachingSerializer();\n                                    ce.replayCache(dcs, channelManager, req, res);\n                                    log.debug(dcs.getCache());\n                                }\n                            }\n                        }\n                    }\n\n                }\n                // signal the end of the rendering round\n                channelManager.finishedRenderingCycle();\n            }\n            catch (PortalException pe) {\n                throw pe;\n            }\n            catch (Exception e) {\n                throw new PortalException(e);\n            }\n            finally {\n                final long pageRenderTime = System.currentTimeMillis() - startTime;\n                lastRender = renderTimes.add(pageRenderTime);\n                \n                //Get the user's profile\n                final UserProfile userProfile = uPreferencesManager.getCurrentProfile();\n                \n                //Find the activeTab index\n                final UserPreferences userPreferences = uPreferencesManager.getUserPreferences();\n                final StructureStylesheetUserPreferences structureStylesheetUserPreferences = userPreferences.getStructureStylesheetUserPreferences();\n                final String activeTab = structureStylesheetUserPreferences.getParameterValue(\"activeTab\");\n                final int activeTabIndex = org.apache.commons.lang.math.NumberUtils.toInt(activeTab, 1);\n                \n                //Get the user's layout and find the targeted folder (tab)\n                final IUserLayoutManager userLayoutManager = uPreferencesManager.getUserLayoutManager();\n                final IUserLayoutFolderDescription targetedNode = this.getActiveTab(userLayoutManager, activeTabIndex);\n                \n                //Create and publish the event.\n                final PageRenderTimePortalEvent pageRenderTimePortalEvent = new PageRenderTimePortalEvent(this, person, userProfile, targetedNode, pageRenderTime);\n                this.applicationEventPublisher.publishEvent(pageRenderTimePortalEvent);\n            }\n        }\n    }","id":50601,"modified_method":"public void renderState(HttpServletRequest req, HttpServletResponse res, IUserInstance userInstance) throws PortalException {\n        final IPerson person = userInstance.getPerson();\n        final LocaleManager localeManager = userInstance.getLocaleManager();\n        final IUserPreferencesManager uPreferencesManager = userInstance.getPreferencesManager();\n        final ChannelManager channelManager = userInstance.getChannelManager();\n        final Object renderingLock = userInstance.getRenderingLock();\n        \n        UPFileSpec upfs = new UPFileSpec(req);\n        String rootNodeId = upfs.getMethodNodeId();\n        if (rootNodeId == null) {\n            rootNodeId = UPFileSpec.USER_LAYOUT_ROOT_NODE;\n        }\n        \n        // see if a new root target has been specified\n        String newRootNodeId = req.getParameter(\"uP_detach_target\");\n\n        // set optimistic uPElement value\n        UPFileSpec uPElement = new UPFileSpec(UPFileSpec.RENDER_METHOD, rootNodeId, null, null);\n\n        if (newRootNodeId != null) {\n            // set a new root\n            uPElement.setMethodNodeId(newRootNodeId);\n        }\n        \n        channelManager.setUPElement(uPElement);\n\n        // proccess possible portlet action\n        final IPortletWindowId targetedPortletWindowId = this.portletRequestParameterManager.getTargetedPortletWindowId(req);\n        if (targetedPortletWindowId != null) {\n            final PortletUrl portletUrl = this.portletRequestParameterManager.getPortletRequestInfo(req, targetedPortletWindowId);\n            \n            if (RequestType.ACTION.equals(portletUrl.getRequestType())) {\n                final IPortletEntity targetedPortletEntity = this.portletWindowRegistry.getParentPortletEntity(req, targetedPortletWindowId);\n                if (targetedPortletEntity != null) {\n                    final String channelSubscribeId = targetedPortletEntity.getChannelSubscribeId();\n                    final boolean actionExecuted = channelManager.doChannelAction(req, res, channelSubscribeId, false);\n                    \n                    if (actionExecuted) {\n                        // The action completed, return immediately\n                        return;\n                    }\n    \n                    // The action didn't execute, continue and try to render normally\n                }\n            }\n        }\n        \n        // process possible worker dispatch\n        final boolean workerDispatched = this.processWorkerDispatchIfNecessary(req, res, uPreferencesManager, channelManager);\n        if (workerDispatched) {\n            //If a worker was dispatched to return immediately\n            return;\n        }\n        \n        //Set a larger buffer to allow for explicit flushing\n        res.setBufferSize(16 * 1024);\n        \n        final long startTime = System.currentTimeMillis();\n        synchronized (renderingLock) {\n            // This function does ALL the content gathering/presentation work.\n            // The following filter sequence is processed:\n            //        userLayoutXML (in UserPreferencesManager)\n            //              |\n            //        incorporate StructureAttributes\n            //              |\n            //        Structure transformation\n            //              + (buffering step)\n            //        ChannelRendering Buffer\n            //              |\n            //        ThemeAttributesIncorporation Filter\n            //              |\n            //        Theme Transformatio\n            //              |\n            //        ChannelIncorporation filter\n            //              |\n            //        Serializer (XHTML/WML/HTML/etc.)\n            //              |\n            //        JspWriter\n            //\n\n            try {\n\n                // determine uPElement (optimistic prediction) --begin\n                // We need uPElement for ChannelManager.setReqNRes() call. That call will distribute uPElement\n                // to Privileged channels. We assume that Privileged channels are smart enough not to delete\n                // themselves in the detach mode !\n\n                // In general transformations will start at the userLayoutRoot node, unless\n                // we are rendering something in a detach mode.\n                IUserLayoutNodeDescription rElement = null;\n                // see if an old detach target exists in the servlet path\n\n                // give channels the current locale manager\n                channelManager.setLocaleManager(localeManager);\n\n                IUserLayoutManager ulm = uPreferencesManager.getUserLayoutManager();\n\n                // determine uPElement (optimistic prediction) --end\n\n                // set up the channel manager\n\n                channelManager.startRenderingCycle(req, res, uPElement);\n\n                // after this point the layout is determined\n\n                UserPreferences userPreferences = uPreferencesManager.getUserPreferences();\n                StructureStylesheetDescription ssd = uPreferencesManager.getStructureStylesheetDescription();\n                ThemeStylesheetDescription tsd = uPreferencesManager.getThemeStylesheetDescription();\n\n                // verify upElement and determine rendering root --begin\n                if (newRootNodeId != null && (!newRootNodeId.equals(rootNodeId))) {\n                    // see if the new detach traget is valid\n                    try {\n                        rElement = ulm.getNode(newRootNodeId);\n                    }\n                    catch (PortalException e) {\n                        rElement = null;\n                    }\n\n                    if (rElement != null) {\n                        // valid new root id was specified. need to redirect\n                        // peterk: should we worry about forwarding\n                        // parameters here ? or those passed with detach\n                        // always get sacked ?\n                        // Andreas: Forwarding parameters with detach\n                        // are not lost anymore with the URLUtil class.\n\n                        // Skip the uP_detach_target parameter since\n                        // it has already been processed\n                        String[] skipParams = new String[] { \"uP_detach_target\" };\n\n                        try {\n                            URLUtil.redirect(req, res, newRootNodeId, true, skipParams, CHARACTER_SET);\n                        }\n                        catch (PortalException pe) {\n                            log.error(\"PortalException occurred while redirecting\",\n                                    pe);\n                        }\n                        return;\n                    }\n                }\n\n                // LogService.log(LogService.DEBUG,\"uP_detach_target=\\\"\"+rootNodeId+\"\\\".\");\n                try {\n                    rElement = ulm.getNode(rootNodeId);\n                }\n                catch (PortalException e) {\n                    rElement = null;\n                }\n                // if we haven't found root node so far, set it to the userLayoutRoot\n                if (rElement == null) {\n                    rootNodeId = UPFileSpec.USER_LAYOUT_ROOT_NODE;\n                }\n\n                // update the render target\n                uPElement.setMethodNodeId(rootNodeId);\n\n                // inform channel manager about the new uPElement value\n                channelManager.setUPElement(uPElement);\n                // verify upElement and determine rendering root --begin\n                \n                // Increase output buffer size, buffer will be flushed before and after every <channel>\n                res.setBufferSize(16 * 1024);\n\n                // Disable page caching\n                res.setHeader(\"pragma\", \"no-cache\");\n                res.setHeader(\"Cache-Control\", \"no-cache, max-age=0, must-revalidate\");\n                res.setDateHeader(\"Expires\", 0);\n                // set the response mime type\n                res.setContentType(tsd.getMimeType() + \"; charset=\" + CHARACTER_SET);\n                // obtain the writer - res.getWriter() must occur after res.setContentType()\n                Writer out = new BufferedWriter(res.getWriter(), 1024);\n                // get a serializer appropriate for the target media\n                BaseMarkupSerializer markupSerializer =\n                    MEDIA_MANAGER.getSerializerByName(tsd.getSerializerName(),\n                        new ChannelTitleIncorporationWiterFilter(out, channelManager, ulm));\n                // set up the serializer\n                markupSerializer.asContentHandler();\n                // see if we can use character caching\n                boolean ccaching = (CHARACTER_CACHE_ENABLED && (markupSerializer instanceof CachingSerializer));\n                channelManager.setCharacterCaching(ccaching);\n                // pass along the serializer name\n                channelManager.setSerializerName(tsd.getSerializerName());\n                // initialize ChannelIncorporationFilter\n                CharacterCachingChannelIncorporationFilter cif = new CharacterCachingChannelIncorporationFilter(markupSerializer, channelManager, CACHE_ENABLED && CHARACTER_CACHE_ENABLED, req, res);\n\n                String cacheKey = null;\n                boolean output_produced = false;\n                if (CACHE_ENABLED) {\n                    boolean ccache_exists = false;\n                    // obtain the cache key\n                    cacheKey = constructCacheKey(uPreferencesManager, rootNodeId);\n                    if (ccaching) {\n                        // obtain character cache\n                        List<CacheEntry> cacheEntries = systemCharacterCache.get(cacheKey);\n                        if(cacheEntries!=null && cacheEntries.size()>0) {\n                            ccache_exists = true;\n                            if (log.isDebugEnabled())\n                                log\n                                        .debug(\"retreived transformation character block cache for a key \\\"\"\n                                                + cacheKey + \"\\\"\");\n                            // start channel threads\n                            for(int i=0;i<cacheEntries.size();i++) {\n                                CacheEntry ce = cacheEntries.get(i);\n                                if (ce.getCacheType().equals(CacheType.CHANNEL_CONTENT)) {\n                                    String channelSubscribeId = ((ChannelContentCacheEntry)ce).getChannelId();\n                                    if(channelSubscribeId!=null) {\n                                        try {\n                                            channelManager.startChannelRendering(req, res, channelSubscribeId);\n                                        } catch (PortalException e) {\n                                            log.error(\"UserInstance::renderState() : unable to start rendering channel (subscribeId=\\\"\"+channelSubscribeId+\"\\\", user=\"+person.getID()+\" layoutId=\"+uPreferencesManager.getCurrentProfile().getLayoutId(),e);\n                                        }\n                                    } else {\n                                        log.error(\"channel entry \" + Integer.toString(i)\n                                            + \" in character cache is invalid (user=\" + person.getID() + \")!\");\n                                    }\n                                }\n                            }\n                            channelManager.commitToRenderingChannelSet();\n\n                            // go through the output loop\n                            CachingSerializer cSerializer = (CachingSerializer) markupSerializer;\n                            cSerializer.setDocumentStarted(true);\n\n                            for(int sb=0; sb<cacheEntries.size();sb++) {\n                                CacheEntry ce = cacheEntries.get(sb);\n                                if (log.isDebugEnabled()) {\n                                    DebugCachingSerializer dcs = new DebugCachingSerializer();\n                                    log.debug(\"----------printing \" + ce.getCacheType() + \" cache block \"+Integer.toString(sb));\n                                    ce.replayCache(dcs, channelManager, req, res);\n                                    log.debug(dcs.getCache());\n                                }\n\n                                // get cache block output\n                                ce.replayCache(cSerializer, channelManager, req, res);\n                            }\n\n                            cSerializer.flush();\n                            output_produced = true;\n                        }\n                    }\n                    // if this failed, try XSLT cache\n                    if ((!ccaching) || (!ccache_exists)) {\n                        // obtain XSLT cache\n\n                        SAX2BufferImpl cachedBuffer = systemCache.get(cacheKey);\n                        if (cachedBuffer != null) {\n                            // replay the buffer to channel incorporation filter\n                            if (log.isDebugEnabled()) {\n                                log.debug(\"retreived XSLT transformation cache for a key '\" + cacheKey + \"'\");\n                            }\n                            \n                            // attach rendering buffer downstream of the cached buffer\n                            ChannelRenderingBuffer crb = new ChannelRenderingBuffer(cachedBuffer, channelManager, ccaching, req, res);\n                            \n                            // attach channel incorporation filter downstream of the channel rendering buffer\n                            cif.setParent(crb);\n                            crb.setOutputAtDocumentEnd(true);\n                            cachedBuffer.outputBuffer(crb);\n\n                            output_produced = true;\n                        }\n                    }\n                }\n                // fallback on the regular rendering procedure\n                if (!output_produced) {\n\n                    // obtain transformer handlers for both structure and theme stylesheets\n                    TransformerHandler ssth = XSLT.getTransformerHandler(ResourceLoader.getResourceAsURL(this.getClass(), ssd.getStylesheetURI()).toString());\n                    TransformerHandler tsth = XSLT.getTransformerHandler(tsd.getStylesheetURI(), localeManager\n                            .getLocales(), this);\n\n                    // obtain transformer references from the handlers\n                    Transformer sst = ssth.getTransformer();\n                    sst.setErrorListener(cErrListener);\n                    Transformer tst = tsth.getTransformer();\n                    tst.setErrorListener(cErrListener);\n                    \n                    // pass resourcesDao into transformer\n                    tst.setParameter(ResourcesXalanElements.SKIN_RESOURCESDAO_PARAMETER_NAME, resourcesDao);\n\n                    // initialize ChannelRenderingBuffer and attach it downstream of the structure transformer\n                    ChannelRenderingBuffer crb = new ChannelRenderingBuffer(channelManager, ccaching, req, res);\n                    ssth.setResult(new SAXResult(crb));\n\n                    // determine and set the stylesheet params\n                    // prepare .uP element and detach flag to be passed to the stylesheets\n                    // Including the context path in front of uPElement is necessary for phone.com browsers to work\n                    sst.setParameter(\"baseActionURL\", uPElement.getUPFile());\n                    // construct idempotent version of the uPElement\n                    UPFileSpec uPIdempotentElement = new UPFileSpec(uPElement);\n                    sst.setParameter(\"baseIdempotentActionURL\", uPElement.getUPFile());\n\n                    Hashtable<String, String> supTable = userPreferences.getStructureStylesheetUserPreferences()\n                            .getParameterValues();\n                    for (Map.Entry<String, String> param : supTable.entrySet()) {\n                        String pName = param.getKey();\n                        String pValue = param.getValue();\n                        if (log.isDebugEnabled())\n                            log.debug(\"setting sparam \\\"\" + pName + \"\\\"=\\\"\" + pValue\n                                    + \"\\\".\");\n                        sst.setParameter(pName, pValue);\n                    }\n\n                    // all the parameters are set up, fire up structure transformation\n\n                    // filter to fill in channel/folder attributes for the \"structure\" transformation.\n                    StructureAttributesIncorporationFilter saif = new StructureAttributesIncorporationFilter(ssth,\n                            userPreferences.getStructureStylesheetUserPreferences());\n\n                    // This is a debug statement that will print out XML incoming to the\n                    // structure transformation to a log file serializer to a printstream\n                    StringWriter dbwr1 = null;\n                    OutputFormat outputFormat = null;\n                    if (logXMLBeforeStructureTransformation) {\n                        dbwr1 = new StringWriter();\n                        outputFormat = new OutputFormat();\n                        outputFormat.setIndenting(true);\n                        XMLSerializer dbser1 = new XMLSerializer(dbwr1, outputFormat);\n                        SAX2DuplicatingFilterImpl dupl1 = new SAX2DuplicatingFilterImpl(ssth, dbser1);\n                        dupl1.setParent(saif);\n                    }\n\n                    // if operating in the detach mode, need wrap everything\n                    // in a document node and a <layout_fragment> node\n                    boolean detachMode = !rootNodeId.equals(UPFileSpec.USER_LAYOUT_ROOT_NODE);\n                    if (detachMode) {\n                        saif.startDocument();\n                        saif.startElement(\"\",\n                                \"layout_fragment\",\n                                \"layout_fragment\",\n                                new org.xml.sax.helpers.AttributesImpl());\n\n                        //                            emptyt.transform(new DOMSource(rElement),new SAXResult(new ChannelSAXStreamFilter((ContentHandler)saif)));\n                        if (rElement == null) {\n                            ulm.getUserLayout(new ChannelSAXStreamFilter((ContentHandler) saif));\n                        }\n                        else {\n                            ulm.getUserLayout(rElement.getId(), new ChannelSAXStreamFilter((ContentHandler) saif));\n                        }\n\n                        saif.endElement(\"\", \"layout_fragment\", \"layout_fragment\");\n                        saif.endDocument();\n                    }\n                    else {\n                        if (rElement == null) {\n                            ulm.getUserLayout(saif);\n                        }\n                        else {\n                            ulm.getUserLayout(rElement.getId(), saif);\n                        }\n                        //                            emptyt.transform(new DOMSource(rElement),new SAXResult((ContentHandler)saif));\n                    }\n                    // all channels should be rendering now\n\n                    // Debug piece to print out the recorded pre-structure transformation XML\n                    if (logXMLBeforeStructureTransformation) {\n                        if (log.isDebugEnabled())\n                            log\n                                    .debug(\"XML incoming to the structure transformation :\\n\\n\"\n                                            + dbwr1.toString() + \"\\n\\n\");\n                    }\n\n                    // prepare for the theme transformation\n\n                    // set up of the parameters\n                    tst.setParameter(\"baseActionURL\", uPElement.getUPFile());\n                    tst.setParameter(\"baseIdempotentActionURL\", uPIdempotentElement.getUPFile());\n                    if (externalLoginUrl != null) {\n                        tst.setParameter(\"EXTERNAL_LOGIN_URL\", externalLoginUrl);\n                    }\n\n                    Hashtable<String, String> tupTable = userPreferences.getThemeStylesheetUserPreferences()\n                            .getParameterValues();\n                    for (Map.Entry<String, String> param : tupTable.entrySet()) {\n                        String pName = param.getKey();\n                        String pValue = param.getValue();\n                        if (log.isDebugEnabled())\n                            log.debug(\"setting tparam \\\"\" + pName + \"\\\"=\\\"\" + pValue\n                                    + \"\\\".\");\n                        tst.setParameter(pName, pValue);\n                    }\n\n                    VersionsManager versionsManager = VersionsManager.getInstance();\n                    Version[] versions = versionsManager.getVersions();\n\n                    for (Version version : versions) {\n                        String paramName = \"version-\" + version.getFname();\n                        tst.setParameter(paramName, version.dottedTriple());\n                    }\n\n                    // the uP_productAndVersion stylesheet parameter is deprecated\n                    // instead use the more generic \"version-UP_VERSION\" generated from the\n                    // framework's functional name when all versions are pulled immediately\n                    // above.\n                    // TODO: handle version display in a 3.3-compliant way\n//                    Version uPortalVersion = versionsManager.getVersion(IPermission.PORTAL_PUBLISH);\n//                    tst.setParameter(\"uP_productAndVersion\", \"uPortal \" + uPortalVersion.dottedTriple());\n\n                    final Locale[] locales = localeManager.getLocales();\n                    if (locales != null && locales.length > 0 && locales[0] != null) {\n                        tst.setParameter(\"USER_LANG\", locales[0].toString().replace('_', '-'));\n                    }\n\n                    // initialize a filter to fill in channel attributes for the \"theme\" (second) transformation.\n                    // attach it downstream of the channel rendering buffer\n                    ThemeAttributesIncorporationFilter taif = new ThemeAttributesIncorporationFilter(\n                            (XMLReader) crb, userPreferences.getThemeStylesheetUserPreferences());\n                    // attach theme transformation downstream of the theme attribute incorporation filter\n                    taif.setAllHandlers(tsth);\n\n                    // This is a debug statement that will print out XML incoming to the\n                    // theme transformation to a log file serializer to a printstream\n                    StringWriter dbwr2 = null;\n                    if (logXMLBeforeThemeTransformation) {\n                        dbwr2 = new StringWriter();\n                        XMLSerializer dbser2 = new XMLSerializer(dbwr2, outputFormat);\n                        SAX2DuplicatingFilterImpl dupl2 = new SAX2DuplicatingFilterImpl(tsth, dbser2);\n                        dupl2.setParent(taif);\n                    }\n\n                    if (CACHE_ENABLED && !ccaching) {\n                        // record cache\n                        // attach caching buffer downstream of the theme transformer\n                        SAX2BufferImpl newCache = new SAX2BufferImpl();\n                        tsth.setResult(new SAXResult(newCache));\n\n                        // attach channel incorporation filter downstream of the caching buffer\n                        cif.setParent(newCache);\n\n                        systemCache.put(cacheKey, newCache);\n                        newCache.setOutputAtDocumentEnd(true);\n                        if (log.isDebugEnabled())\n                            log.debug(\"recorded transformation cache with key \\\"\"\n                                    + cacheKey + \"\\\"\");\n                    }\n                    else {\n                        // attach channel incorporation filter downstream of the theme transformer\n                        tsth.setResult(new SAXResult(cif));\n                    }\n                    // fire up theme transformation\n                    crb.stopBuffering();\n                    crb.outputBuffer();\n                    crb.clearBuffer();\n\n                    // Debug piece to print out the recorded pre-theme transformation XML\n                    if (logXMLBeforeThemeTransformation && log.isDebugEnabled()) {\n                        log.debug(\"XML incoming to the theme transformation :\\n\\n\"\n                                + dbwr2.toString() + \"\\n\\n\");\n                    }\n\n                    if (CACHE_ENABLED && ccaching) {\n                        // save character block cache\n                        List<CacheEntry> cacheBlocks = cif.getCacheBlocks();\n                        if(cacheBlocks == null) {\n                            log\n                                    .error(\"CharacterCachingChannelIncorporationFilter returned invalid cache entries!\");\n                        }\n                        else {\n                            // record cache\n                            systemCharacterCache.put(cacheKey, cacheBlocks);\n                            if (log.isDebugEnabled()) {\n                                log\n                                        .debug(\"recorded transformation character block cache with key \\\"\"\n                                                + cacheKey + \"\\\"\");\n\n                                log.debug(\"Printing transformation cache blocks:\");\n                                for (int i=0; i<cacheBlocks.size(); i++) {\n                                    CacheEntry ce = cacheBlocks.get(i);\n                                    if (ce.getCacheType().equals(CacheType.CHARACTERS)) {\n                                        log.debug(\"----------piece \"+Integer.toString(i));\n                                    } else if (ce.getCacheType().equals(CacheType.CHANNEL_CONTENT)) {\n                                        log.debug(\"----------channel content entry \"+Integer.toString(i));\n                                    }\n                                    DebugCachingSerializer dcs = new DebugCachingSerializer();\n                                    ce.replayCache(dcs, channelManager, req, res);\n                                    log.debug(dcs.getCache());\n                                }\n                            }\n                        }\n                    }\n\n                }\n                // signal the end of the rendering round\n                channelManager.finishedRenderingCycle();\n            }\n            catch (PortalException pe) {\n                throw pe;\n            }\n            catch (Exception e) {\n                throw new PortalException(e);\n            }\n            finally {\n                final long pageRenderTime = System.currentTimeMillis() - startTime;\n                lastRender = renderTimes.add(pageRenderTime);\n                \n                //Get the user's profile\n                final UserProfile userProfile = uPreferencesManager.getCurrentProfile();\n                \n                //Find the activeTab index\n                final UserPreferences userPreferences = uPreferencesManager.getUserPreferences();\n                final StructureStylesheetUserPreferences structureStylesheetUserPreferences = userPreferences.getStructureStylesheetUserPreferences();\n                String activeTab = structureStylesheetUserPreferences.getParameterValue(\"activeTab\");\n                if (activeTab == null) {\n                    // if the active tab is not set yet for this session, \n                    // initialize it to the default tab value\n                    activeTab = structureStylesheetUserPreferences.getParameterValue(\"defaultTab\");\n                }\n                final int activeTabIndex = org.apache.commons.lang.math.NumberUtils.toInt(activeTab, 1);\n                \n                //Get the user's layout and find the targeted folder (tab)\n                final IUserLayoutManager userLayoutManager = uPreferencesManager.getUserLayoutManager();\n                final IUserLayoutFolderDescription targetedNode = this.getActiveTab(userLayoutManager, activeTabIndex);\n                \n                //Create and publish the event.\n                final PageRenderTimePortalEvent pageRenderTimePortalEvent = new PageRenderTimePortalEvent(this, person, userProfile, targetedNode, pageRenderTime);\n                this.applicationEventPublisher.publishEvent(pageRenderTimePortalEvent);\n            }\n        }\n    }","commit_id":"4b55f9c17a580ff1b7cc5f8edd00e61c5d5a4b90","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n\t * Update the user's preferred skin.\n\t * \n\t * @param per\n\t * @param upm\n\t * @param ulm\n\t * @param request\n\t * @param response\n\t * @throws IOException\n\t * @throws PortalException\n\t */\n\tprivate void chooseSkin(IPerson per, UserPreferencesManager upm,\n\t\t\tIUserLayoutManager ulm, HttpServletRequest request,\n\t\t\tHttpServletResponse response) throws IOException, PortalException {\n\n\t\tString skinName = request.getParameter(\"skinName\");\n        ThemeStylesheetUserPreferences themePrefs = upm.getUserPreferences().getThemeStylesheetUserPreferences();\n        themePrefs.putParameterValue(\"skin\",skinName);\n\t\ttry {\n\t\t\tulStore.setThemeStylesheetUserPreferences(per, upm\n\t\t\t\t\t.getUserPreferences().getProfile().getProfileId(), themePrefs);\n\t\t} catch (Exception e) {\n\t\t\tlog.error(\"Error storing user skin preferences\", e);\n\t\t}\n\n\t\tprintSuccess(response, \"Updated Skin\", null);\n}","id":50602,"modified_method":"/**\n\t * Update the user's preferred skin.\n\t * \n\t * @param per\n\t * @param upm\n\t * @param ulm\n\t * @param request\n\t * @param response\n\t * @throws IOException\n\t * @throws PortalException\n\t */\n    @RequestMapping(method = RequestMethod.POST, params=\"action=chooseSkin\")\n\tpublic ModelAndView chooseSkin(HttpServletRequest request,\n\t\t\tHttpServletResponse response) throws IOException {\n\n        IUserInstance ui = userInstanceManager.getUserInstance(request);\n        IPerson per = getPerson(ui, response);\n        UserPreferencesManager upm = (UserPreferencesManager) ui.getPreferencesManager();\n\n\t\tString skinName = request.getParameter(\"skinName\");\n        ThemeStylesheetUserPreferences themePrefs = upm.getUserPreferences().getThemeStylesheetUserPreferences();\n        themePrefs.putParameterValue(\"skin\",skinName);\n\t\ttry {\n\t\t\tulStore.setThemeStylesheetUserPreferences(per, upm\n\t\t\t\t\t.getUserPreferences().getProfile().getProfileId(), themePrefs);\n\t\t} catch (Exception e) {\n\t\t\tlog.error(\"Error storing user skin preferences\", e);\n\t\t\tresponse.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);\n\t\t\treturn null;\n\t\t}\n\n\t\treturn new ModelAndView(\"jsonView\", Collections.EMPTY_MAP);\n\t}","commit_id":"4b55f9c17a580ff1b7cc5f8edd00e61c5d5a4b90","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n\t * Save the user's structure stylesheet while preserving the current\n\t * in-storage default tab.\n\t * \n\t * @param upm\n\t * @param per\n\t * @param ssup\n\t * @throws Exception\n\t */\n\tprivate void saveSSUPPreservingTab(UserPreferencesManager upm, IPerson per, StructureStylesheetUserPreferences ssup) throws Exception {\n\t\tint profileId = upm.getUserPreferences().getProfile().getProfileId();\n\t\tString currentTab = ssup.getParameterValue( ACTIVE_TAB_PARAM );\n        // get the active tab number from the store so that we can preserve it\n        String defaultTab = getDefaultTab(upm, per);\n        // set the active tab to previously recorded value\n        ssup.putParameterValue( ACTIVE_TAB_PARAM, defaultTab );\n        \n\t\t// This is a brute force save of the new attributes.  It requires access to the layout store. -SAB\n\t\tulStore.setStructureStylesheetUserPreferences(per, profileId, ssup);\n\n\t    // set active tab in current preferences back to \"current\" tab\n\t    ssup.putParameterValue( ACTIVE_TAB_PARAM, currentTab );\n\n\t}","id":50603,"modified_method":"/**\n\t * Save the user's layout while preserving the current in-storage default\n\t * tab.\n\t * \n\t * @param ulm\n\t * @param upm\n\t * @param per\n\t * @throws Exception\n\t */\n\tprotected void saveLayout(IPerson person, IUserLayoutManager ulm, UserPreferencesManager upm, StructureStylesheetUserPreferences ssup) throws Exception {\n\n\t    // save the user's layout\n\t\tulm.saveUserLayout();\n\n\t\tif (ssup != null) {\n            int profileId = upm.getUserPreferences().getProfile()\n                    .getProfileId();\n\n            // This is a brute force save of the new attributes. It requires\n            // access to the layout store. -SAB\n            ulStore.setStructureStylesheetUserPreferences(person, profileId,\n                    ssup);\n\t\t    \n\t\t}\n\t\t\n\t}","commit_id":"4b55f9c17a580ff1b7cc5f8edd00e61c5d5a4b90","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n     * sets the fragment owner user name, and inactivates the subscription in the\n     * database and removes it from the in-memory person attributes\n     * @param per the logged in user\n     * @param subscriptionAttributes fragment owner subscription attributes\n     * @param fragmentOwner the fragment owner\n     * @param userName the fragment owner username\n     */\n    private void removeSubscription(IPerson per,\n            List<Object> subscriptionAttributes,\n            RestrictedPerson fragmentOwner, String userName) {\n        fragmentOwner.setUserName(userName);\n        updateSubciptionInfo(per, userFragmentInfoDao, fragmentOwner,false);    \n        subscriptionAttributes.remove(fragmentOwner.getUserName());\n        per.setAttribute(\"fragmentOwner\", subscriptionAttributes);\n    }","id":50604,"modified_method":"protected void removeSubscription(IPerson per, String elementId, IUserLayoutManager ulm) {\n        \n        // get the fragment owner's ID from the element string\n        String userIdString = StringUtils.substringBetween(elementId, Constants.FRAGMENT_ID_USER_PREFIX, Constants.FRAGMENT_ID_LAYOUT_PREFIX);\n        int userId = NumberUtils.toInt(userIdString,0);\n        \n        // construct a new person object reqpresenting the fragment owner\n        RestrictedPerson fragmentOwner = PersonFactory.createRestrictedPerson();\n        fragmentOwner.setID(userId);\n        fragmentOwner.setUserName(userStore.getPortalUserName(userId));\n        \n        // attempt to find a subscription for this fragment\n        IUserFragmentSubscription subscription = userFragmentInfoDao.getUserFragmentInfo(per, fragmentOwner);\n        \n        // if a subscription was found, remove it's registration\n        if (subscription != null) {\n            userFragmentInfoDao.deleteUserFragmentInfo(subscription);\n            ulm.loadUserLayout(true);\n        } \n        \n        // otherwise, delete the node\n        else {\n            ulm.deleteNode(elementId);\n        }\n    \n    }","commit_id":"4b55f9c17a580ff1b7cc5f8edd00e61c5d5a4b90","url":"https://github.com/Jasig/uPortal"},{"original_method":"@RequestMapping(method = RequestMethod.POST)\n\tpublic void updatePreferences(HttpServletRequest request, HttpServletResponse response)\n\t\t\tthrows ServletException, IOException {\n\n\t    IUserInstance ui = null;\n\t\tIPerson per = null;\n\t\tUserPreferencesManager upm = null;\n\t\tIUserLayoutManager ulm = null;\n\n\t\t// make sure the user has a current session\n\t\tif (request.getSession(false) == null) {\n\t\t\tlog.warn(\"Attempting to use AJAX preferences as GUEST user\");\n\t\t\tprintError(response, \"Your session has timed out.  Please log in again to make changes to your layout.\");\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n            \n\t\t\t// Retrieve the user's UserInstance object\n\t\t\tui = userInstanceManager.getUserInstance(request);\n\n\t\t\t// Retrieve the user's IPerson object\n\t\t\tper = ui.getPerson();\n\n\t\t\t// ensure that the user is currently logged in\n\t\t\tif (per.isGuest()) {\n\t\t\t\tlog.warn(\"Attempting to use AJAX preferences as GUEST user\");\n\t\t\t\tprintError(response, \"Your session has timed out.  Please log in again to make changes to your layout.\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Retrieve the preferences manager\n\t\t\tupm = (UserPreferencesManager) ui.getPreferencesManager();\n\n\t\t\t// Retrieve the layout manager\n\t\t\tulm = upm.getUserLayoutManager();\n\n\t\t} catch (RuntimeException e) {\n\t\t\tlog.error(e, e);\n\t\t\tprintError(response, \"An unknown error occurred.\");\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\n\t\t\t// get the requested preferences action\n\t\t\tString action = request.getParameter(\"action\");\n\n\t\t\t// perform the requested action\n\t\t\tif (action == null) {\n\n\t\t\t\tlog.warn(\"preferences servlet called with no action parameter\");\n\n\t\t\t} else if (action.equals(\"movePortletHere\")) {\n\n\t\t\t\tmoveChannel(per, upm, ulm, request, response);\n\n\t\t\t} else if (action.equals(\"changeColumns\")) {\n\n\t\t\t\tchangeColumns(per, upm, ulm, request, response);\n\n\t\t\t} else if (action.equals(\"updateColumnWidths\")) {\n\n\t\t\t\tupdateColumnWidths(per, upm, ulm, request, response);\n\n\t\t\t} else if (action.equals(\"addChannel\")) {\n\n\t\t\t\taddChannel(per, upm, ulm, userInstanceManager, request, response);\n\n\t\t\t} else if (action.equals(\"renameTab\")) {\n\n\t\t\t\trenameTab(per, upm, ulm, request, response);\n\n\t\t\t} else if (action.equals(\"addTab\")) {\n\n\t\t\t\taddTab(per, upm, ulm, request, response);\n\n\t\t\t} else if (action.equals(\"moveTabHere\")) {\n\n\t\t\t\tmoveTab(per, upm, ulm, request, response);\n\n\t\t\t} else if (action.equals(\"chooseSkin\")) {\n\t\t\t\t\n\t\t\t\tchooseSkin(per, upm, ulm, request, response);\n\n            } else if (action.equals(\"subscribeToTabs\")) {\n                subscribeToTab(request, response, per, upm, ulm,\n                        userFragmentInfoDao);\n\n\t\t\t} else if (action.equals(\"removeElement\")) {\n\t\t\t    removeElement(request, response, per, upm, ulm);\n\t\t\t}\n\n\t\t} catch (RuntimeException e) {\n\t\t\tlog.error(e, e);\n\t\t\tprintError(response, \"An unknown error occurred.\");\n\t\t\treturn;\n\t\t}\n\n\t}","id":50605,"modified_method":"/**\n\t * Rename a specified tab.\n\t * \n\t * @param request\n\t * @throws IOException \n\t */\n    @RequestMapping(method = RequestMethod.POST, params = \"action=renameTab\")\n\tpublic ModelAndView renameTab(HttpServletRequest request, HttpServletResponse response) throws IOException {\n\n        IUserInstance ui = userInstanceManager.getUserInstance(request);\n        IPerson per = getPerson(ui, response);\n        UserPreferencesManager upm = (UserPreferencesManager) ui.getPreferencesManager();\n        IUserLayoutManager ulm = upm.getUserLayoutManager();\n\n\t\t// element ID of the tab to be renamed\n\t\tString tabId = request.getParameter(\"tabId\");\n        IUserLayoutFolderDescription tab = (IUserLayoutFolderDescription) ulm\n            .getNode(tabId);\n\n\t\t// desired new name\n\t\tString tabName = request.getParameter(\"tabName\");\n\n\t\tif (!ulm.canUpdateNode(tab)) {\n\t\t    log.warn(\"Attempting to rename an immutable tab\");\n\t\t    response.sendError(HttpServletResponse.SC_BAD_REQUEST);\n\t\t    return null;\n\t\t}\n\t\t\n\t\t/*\n\t\t * Update the tab and save the layout\n\t\t */\n\t    tab.setName(StringUtils.isBlank(tabName) ? DEFAULT_TAB_NAME : tabName);\n\t\tulm.updateNode(tab);\n\t\t\n\t\ttry {\n\t\t\t// save the user's layout\n            saveLayout(per, ulm, upm, null);\n\t\t} catch (Exception e) {\n\t\t\tlog.warn(\"Error saving layout\", e);\n\t\t}\n\n\t\t// update the tab name in the in-memory structure stylesheet\n\t\tStructureStylesheetUserPreferences ssup = upm.getUserPreferences()\n\t\t\t.getStructureStylesheetUserPreferences();\n\t\tssup.setFolderAttributeValue(tabId, \"name\", tabName);\n\n        Map<String, String> model = Collections.singletonMap(\"message\", \"saved new tab name\");\n        return new ModelAndView(\"jsonView\", model);\n\n\t}","commit_id":"4b55f9c17a580ff1b7cc5f8edd00e61c5d5a4b90","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n\t * Move a tab left or right.\n\t * \n\t * @param per\n\t * @param upm\n\t * @param ulm\n\t * @param request\n\t * @param response\n\t * @throws PortalException\n\t * @throws IOException\n\t */\n\tprivate void moveTab(IPerson per, UserPreferencesManager upm,\n\t\t\tIUserLayoutManager ulm, HttpServletRequest request,\n\t\t\tHttpServletResponse response) throws PortalException, IOException {\n\n\t\t// gather the parameters we need to move a channel\n\t\tString destinationId = request.getParameter(\"elementID\");\n\t\tString sourceId = request.getParameter(\"sourceID\");\n\t\tString method = request.getParameter(\"method\");\n\t\tString tabPosition = request.getParameter(\"tabPosition\");\n\n\t\t// If we're moving this element before another one, we need\n\t\t// to know what the target is. If there's no target, just\n\t\t// assume we're moving it to the very end of the list.\n\t\tString siblingId = null;\n\t\tif (method.equals(\"insertBefore\"))\n\t\t\tsiblingId = destinationId;\n\n\t\t// move the node as requested and save the layout\n\t\tulm.moveNode(sourceId, ulm.getParentId(destinationId), siblingId);\n\n\t\tStructureStylesheetUserPreferences ssup = upm.getUserPreferences()\n\t\t\t\t.getStructureStylesheetUserPreferences();\n\n\t\ttry {\n            String currentTab = ssup.getParameterValue(ACTIVE_TAB_PARAM);\n            UserProfile currentProfile = upm.getUserPreferences().getProfile();\n            int profileID = currentProfile.getProfileId();\n            int structID = currentProfile.getStructureStylesheetId();\n            // get the active tab number from the store so that we can preserve it\n            String defaultTab = ulStore.getStructureStylesheetUserPreferences(per, profileID, structID).getParameterValue(ACTIVE_TAB_PARAM);\n            // set the active tab to previously recorded value\n            if (defaultTab.equals(currentTab)) {\n                ssup.putParameterValue(ACTIVE_TAB_PARAM, tabPosition);\n            }\n            else {\n                ssup.putParameterValue(ACTIVE_TAB_PARAM, defaultTab);\n            }\n            // This is a brute force save of the new attributes.  It requires access to the layout store. -SAB\n            ulStore.setStructureStylesheetUserPreferences(per, profileID, ssup);\n\t\t} catch (Exception e) {\n\t\t\tlog.error(e, e);\n\t\t}\n\n\t\tulm.saveUserLayout();\n\n        // reset the active tab for viewing (not default)\n\t\tssup.putParameterValue(ACTIVE_TAB_PARAM, tabPosition);\n\n\t\tprintSuccess(response, \"Saved new tab position\", null);\n\n\t}","id":50606,"modified_method":"/**\n\t * Move a tab left or right.\n\t * \n\t * @param per\n\t * @param upm\n\t * @param ulm\n\t * @param request\n\t * @param response\n\t * @throws PortalException\n\t * @throws IOException\n\t */\n    @RequestMapping(method = RequestMethod.POST, params = \"action=moveTab\")\n\tpublic ModelAndView moveTab(HttpServletRequest request,\n\t\t\tHttpServletResponse response) throws IOException {\n\n        IUserInstance ui = userInstanceManager.getUserInstance(request);\n        IPerson per = getPerson(ui, response);\n\n        UserPreferencesManager upm = (UserPreferencesManager) ui.getPreferencesManager();\n        IUserLayoutManager ulm = upm.getUserLayoutManager();\n\n\t\t// gather the parameters we need to move a channel\n\t\tString destinationId = request.getParameter(\"elementID\");\n\t\tString sourceId = request.getParameter(\"sourceID\");\n\t\tString method = request.getParameter(\"method\");\n\n\t\t// If we're moving this element before another one, we need\n\t\t// to know what the target is. If there's no target, just\n\t\t// assume we're moving it to the very end of the list.\n\t\tString siblingId = null;\n\t\tif (method.equals(\"insertBefore\"))\n\t\t\tsiblingId = destinationId;\n\n\t\t// move the node as requested and save the layout\n\t\tulm.moveNode(sourceId, ulm.getParentId(destinationId), siblingId);\n\n\t\ttry {\n            saveLayout(per, ulm, upm, null);\n\t\t} catch (Exception e) {\n\t\t\tlog.warn(\"Failed to move tab in user layout\", e);\n\t\t\tresponse.sendError(HttpServletResponse.SC_BAD_REQUEST);\n\t\t\treturn null;\n\t\t}\n\n\t\treturn new ModelAndView(\"jsonView\", Collections.EMPTY_MAP);\n\n\t}","commit_id":"4b55f9c17a580ff1b7cc5f8edd00e61c5d5a4b90","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n\t * A folder is a column if its parent is a tab element\n\t * @param folder the folder in question\n\t * @return <code>true<\/code> if the folder is a column, otherwise <code>false<\/code>\n\t */\n\tprivate final boolean isColumn(IUserLayoutManager ulm, String folderId)\n\t\t\tthrows PortalException {\n\t\treturn isTab(ulm, ulm.getParentId(folderId));\n\t}","id":50607,"modified_method":"/**\n\t * A folder is a column if its parent is a tab element\n\t * \n\t * @param folder the folder in question\n\t * @return <code>true<\/code> if the folder is a column, otherwise <code>false<\/code>\n\t */\n\tprotected boolean isColumn(IUserLayoutManager ulm, String folderId)\n\t\t\tthrows PortalException {\n\t\treturn isTab(ulm, ulm.getParentId(folderId));\n\t}","commit_id":"4b55f9c17a580ff1b7cc5f8edd00e61c5d5a4b90","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n\t * Change the number of columns on a specified tab.  In the event that the user is\n\t * decresasing the number of columns, extra columns will be stripped from the \n\t * right-hand side.  Any channels in these columns will be moved to the bottom of\n\t * the last preserved column.\n\t * \n\t * @param per\n\t * @param upm\n\t * @param ulm\n\t * @param request\n\t * @param response\n\t * @throws IOException\n\t * @throws PortalException\n\t */\n\tprivate void changeColumns(IPerson per, UserPreferencesManager upm,\n\t\t\tIUserLayoutManager ulm, HttpServletRequest request,\n\t\t\tHttpServletResponse response) throws IOException, PortalException {\n\n\t\tString[] newcolumns = request.getParameterValues(\"columns[]\");\n\t\tint columnNumber = newcolumns.length;\n\t\tString tabId = request.getParameter(\"tabId\");\n        if (tabId ==  null) tabId = (String)request.getAttribute(\"tabId\");\n\t\tEnumeration columns = ulm.getChildIds(tabId);\n\t\tList<String> columnList = new ArrayList<String>();\n\t\twhile (columns.hasMoreElements()) {\n\t\t\tcolumnList.add((String) columns.nextElement());\n\t\t}\n\t\tList<String> newColumns = new ArrayList<String>();\n\n\t\tif (columnNumber > columnList.size()) {\n\t\t\tfor (int i = columnList.size(); i < columnNumber; i++) {\n\n\t\t\t\t// create new column element\n\t\t\t\tIUserLayoutFolderDescription newColumn = new UserLayoutFolderDescription();\n\t\t\t\tnewColumn.setName(\"Column\");\n\t\t\t\tnewColumn.setId(\"tbd\");\n\t\t\t\tnewColumn\n\t\t\t\t\t\t.setFolderType(IUserLayoutFolderDescription.REGULAR_TYPE);\n\t\t\t\tnewColumn.setHidden(false);\n\t\t\t\tnewColumn.setUnremovable(false);\n\t\t\t\tnewColumn.setImmutable(false);\n\n\t\t\t\t// add the column to our layout\n\t\t\t\tIUserLayoutNodeDescription node = ulm.addNode(newColumn, tabId,\n\t\t\t\t\t\tnull);\n\t\t\t\tnewColumns.add(node.getId());\n\n\t\t\t}\n\t\t} else if (columnNumber < columnList.size()) {\n\t\t\tString lastColumn = columnList.get(columnNumber - 1);\n\t\t\tfor (int i = columnNumber; i < columnList.size(); i++) {\n\t\t\t\tString columnId = columnList.get(i);\n\n\t\t\t\t// move all channels in the current column to the last valid column\n\t\t\t\tEnumeration channels = ulm.getChildIds(columnId);\n\t\t\t\twhile (channels.hasMoreElements()) {\n\t\t\t\t\tulm.addNode(ulm.getNode((String) channels.nextElement()),\n\t\t\t\t\t\t\tlastColumn, null);\n\t\t\t\t}\n\n\t\t\t\t// delete the column from the user's layout\n\t\t\t\tulm.deleteNode(columnId);\n\n\t\t\t}\n\t\t}\n\n\t\tint count = 0;\n\t\tcolumns = ulm.getChildIds(tabId);\n\t\tStructureStylesheetUserPreferences ssup = upm.getUserPreferences()\n\t\t.getStructureStylesheetUserPreferences();\n\t\twhile (columns.hasMoreElements()) {\n\t\t\tString columnId = (String) columns.nextElement();\n\t\t\tssup.setFolderAttributeValue(columnId, \"width\", newcolumns[count] + \"%\");\n\t\t\tElement folder = ulm.getUserLayoutDOM().getElementById(columnId);\n\t\t\ttry {\n\t\t\t\t// This sets the column attribute in memory but doesn't persist it.  Comment says saves changes \"prior to persisting\"\n\t\t\t\tUserPrefsHandler.setUserPreference(folder, \"width\", per);\n\t\t        saveSSUPPreservingTab(upm, per, ssup);\n\t\t\t} catch (Exception e) {\n\t\t\t\tlog.error(\"Error saving new column widths\", e);\n\t\t\t}\n\t\t\tcount++;\n\t\t}\n\n\n\t\t\n\t\ttry {\n\t\t\t// save the user's layout\n\t\t\tsaveUserLayoutPreservingTab(ulm, upm, per);\n\t\t} catch (Exception e) {\n\t\t\tlog.warn(\"Error saving layout\", e);\n\t\t}\n\n\t\t// construct XML representing all the IDs of the resulting columns\n\t\tStringBuffer buf = new StringBuffer();\n\t\tif (newColumns.size() > 0) {\n\t\t\tbuf.append(\"<newColumns>\");\n\t\t\tfor (Iterator iter = newColumns.iterator(); iter.hasNext();) {\n\t\t\t\tbuf.append(\"<id>\" + iter.next() + \"<\/id>\");\n\t\t\t}\n\t\t\tbuf.append(\"<\/newColumns>\");\n\t\t}\n\n\t\tprintSuccess(response, \"Saved new column widths\", buf.toString());\n\n\t}","id":50608,"modified_method":"/**\n\t * Change the number of columns on a specified tab.  In the event that the user is\n\t * decresasing the number of columns, extra columns will be stripped from the \n\t * right-hand side.  Any channels in these columns will be moved to the bottom of\n\t * the last preserved column.\n\t * \n\t * @param per\n\t * @param upm\n\t * @param ulm\n\t * @param request\n\t * @param response\n\t * @throws IOException\n\t * @throws PortalException\n\t */\n    @RequestMapping(method = RequestMethod.POST, params = \"action=changeColumns\")\n\tpublic ModelAndView changeColumns(HttpServletRequest request,\n\t\t\tHttpServletResponse response) throws IOException, PortalException {\n\n        IUserInstance ui = userInstanceManager.getUserInstance(request);\n        IPerson per = getPerson(ui, response);\n\n        UserPreferencesManager upm = (UserPreferencesManager) ui.getPreferencesManager();\n        IUserLayoutManager ulm = upm.getUserLayoutManager();\n\n\t\tString[] newcolumns = request.getParameterValues(\"columns[]\");\n\t\tint columnNumber = newcolumns.length;\n\t\tString tabId = request.getParameter(\"tabId\");\n        if (tabId ==  null) tabId = (String)request.getAttribute(\"tabId\");\n        @SuppressWarnings(\"unchecked\")\n\t\tEnumeration columns = ulm.getChildIds(tabId);\n\t\tList<String> columnList = new ArrayList<String>();\n\t\twhile (columns.hasMoreElements()) {\n\t\t\tcolumnList.add((String) columns.nextElement());\n\t\t}\n\t\tList<String> newColumns = new ArrayList<String>();\n\n\t\tif (columnNumber > columnList.size()) {\n\t\t\tfor (int i = columnList.size(); i < columnNumber; i++) {\n\n\t\t\t\t// create new column element\n\t\t\t\tIUserLayoutFolderDescription newColumn = new UserLayoutFolderDescription();\n\t\t\t\tnewColumn.setName(\"Column\");\n\t\t\t\tnewColumn.setId(\"tbd\");\n\t\t\t\tnewColumn\n\t\t\t\t\t\t.setFolderType(IUserLayoutFolderDescription.REGULAR_TYPE);\n\t\t\t\tnewColumn.setHidden(false);\n\t\t\t\tnewColumn.setUnremovable(false);\n\t\t\t\tnewColumn.setImmutable(false);\n\n\t\t\t\t// add the column to our layout\n\t\t\t\tIUserLayoutNodeDescription node = ulm.addNode(newColumn, tabId,\n\t\t\t\t\t\tnull);\n\t\t\t\tnewColumns.add(node.getId());\n\n\t\t\t}\n\t\t} else if (columnNumber < columnList.size()) {\n\t\t\tString lastColumn = columnList.get(columnNumber - 1);\n\t\t\tfor (int i = columnNumber; i < columnList.size(); i++) {\n\t\t\t\tString columnId = columnList.get(i);\n\n\t\t\t\t// move all channels in the current column to the last valid column\n\t\t\t\t@SuppressWarnings(\"unchecked\")\n\t\t\t\tEnumeration channels = ulm.getChildIds(columnId);\n\t\t\t\twhile (channels.hasMoreElements()) {\n\t\t\t\t\tulm.addNode(ulm.getNode((String) channels.nextElement()),\n\t\t\t\t\t\t\tlastColumn, null);\n\t\t\t\t}\n\n\t\t\t\t// delete the column from the user's layout\n\t\t\t\tulm.deleteNode(columnId);\n\n\t\t\t}\n\t\t}\n\n\t\tint count = 0;\n\t\tcolumns = ulm.getChildIds(tabId);\n\t\tStructureStylesheetUserPreferences ssup = upm.getUserPreferences()\n\t\t.getStructureStylesheetUserPreferences();\n\t\twhile (columns.hasMoreElements()) {\n\t\t\tString columnId = (String) columns.nextElement();\n\t\t\tssup.setFolderAttributeValue(columnId, \"width\", newcolumns[count] + \"%\");\n\t\t\tElement folder = ulm.getUserLayoutDOM().getElementById(columnId);\n\t\t\ttry {\n\t\t\t\t// This sets the column attribute in memory but doesn't persist it.  Comment says saves changes \"prior to persisting\"\n\t\t\t\tUserPrefsHandler.setUserPreference(folder, \"width\", per);\n\t\t\t} catch (Exception e) {\n\t\t\t\tlog.error(\"Error saving new column widths\", e);\n\t\t\t}\n\t\t\tcount++;\n\t\t}\n\n\n\t\t\n\t\ttry {\n\t\t    saveLayout(per, ulm, upm, ssup);\n\t\t} catch (Exception e) {\n\t\t\tlog.warn(\"Error saving layout\", e);\n\t\t}\n\n\t\tMap<String, Object> model = new HashMap<String, Object>();\n\t\tmodel.put(\"newColumnIds\", newColumns);\n\n        return new ModelAndView(\"jsonView\", model);\n\n\t}","commit_id":"4b55f9c17a580ff1b7cc5f8edd00e61c5d5a4b90","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n\t * Add a new tab to the layout.  The new tab will be appended to the end of the\n\t * list and named with the BLANK_TAB_NAME variable.\n\t * \n\t * @param ulm\n\t * @param request\n\t * @param response\n\t * @throws IOException\n\t * @throws PortalException\n\t */\n\tprivate void addTab(IPerson per, UserPreferencesManager upm,\n\t\t\tIUserLayoutManager ulm, HttpServletRequest request,\n\t\t\tHttpServletResponse response) throws IOException, PortalException {\n\n\t\t// construct a brand new tab\n\t\tString id = \"tbd\";\n        String tabName = request.getParameter(\"tabName\");\n        if (StringUtils.isBlank(tabName)) tabName = BLANK_TAB_NAME;\n\t\tIUserLayoutFolderDescription newTab = new UserLayoutFolderDescription();\n\t\tnewTab.setName(tabName);\n\t\tnewTab.setId(id);\n\t\tnewTab.setFolderType(IUserLayoutFolderDescription.REGULAR_TYPE);\n\t\tnewTab.setHidden(false);\n\t\tnewTab.setUnremovable(false);\n\t\tnewTab.setImmutable(false);\n\n\t\t// add the tab to the layout\n\t\tulm.addNode(newTab, ulm.getRootFolderId(), null);\n\t\ttry {\n\t\t\t// save the user's layout\n\t\t\tsaveUserLayoutPreservingTab(ulm, upm, per);\n\t\t} catch (Exception e) {\n\t\t\tlog.warn(\"Error saving layout\", e);\n\t\t}\n\n\t\t// get the id of the newly added tab\n\t\tString nodeId = newTab.getId();\n\n\t\t// pre-populate this new tab with one column\n\t\tIUserLayoutFolderDescription newColumn = new UserLayoutFolderDescription();\n\t\tnewColumn.setName(\"Column\");\n\t\tnewColumn.setId(\"tbd\");\n\t\tnewColumn.setFolderType(IUserLayoutFolderDescription.REGULAR_TYPE);\n\t\tnewColumn.setHidden(false);\n\t\tnewColumn.setUnremovable(false);\n\t\tnewColumn.setImmutable(false);\n\t\tulm.addNode(newColumn, nodeId, null);\n\n\t\ttry {\n\t\t\t// save the user's layout\n\t\t\tsaveUserLayoutPreservingTab(ulm, upm, per);\n\t\t} catch (Exception e) {\n\t\t\tlog.warn(\"Error saving layout\", e);\n\t\t}\n\n        request.setAttribute(\"tabId\", nodeId);\n        changeColumns(per, upm, ulm, request, response);\n\n\t}","id":50609,"modified_method":"/**\n\t * Add a new tab to the layout.  The new tab will be appended to the end of the\n\t * list and named with the BLANK_TAB_NAME variable.\n\t * \n\t * @param request\n\t * @throws IOException \n\t */\n    @RequestMapping(method = RequestMethod.POST, params=\"action=addTab\")\n\tpublic ModelAndView addTab(HttpServletRequest request, HttpServletResponse response) throws IOException {\n\n        IUserInstance ui = userInstanceManager.getUserInstance(request);\n        IPerson per = getPerson(ui, response);\n        UserPreferencesManager upm = (UserPreferencesManager) ui.getPreferencesManager();\n        IUserLayoutManager ulm = upm.getUserLayoutManager();\n\n\t\t// construct a brand new tab\n\t\tString id = \"tbd\";\n        String tabName = request.getParameter(\"tabName\");\n        if (StringUtils.isBlank(tabName)) tabName = DEFAULT_TAB_NAME;\n\t\tIUserLayoutFolderDescription newTab = new UserLayoutFolderDescription();\n\t\tnewTab.setName(tabName);\n\t\tnewTab.setId(id);\n\t\tnewTab.setFolderType(IUserLayoutFolderDescription.REGULAR_TYPE);\n\t\tnewTab.setHidden(false);\n\t\tnewTab.setUnremovable(false);\n\t\tnewTab.setImmutable(false);\n\n\t\t// add the tab to the layout\n\t\tulm.addNode(newTab, ulm.getRootFolderId(), null);\n\t\ttry {\n\t\t\t// save the user's layout\n            saveLayout(per, ulm, upm, null);\n\t\t} catch (Exception e) {\n\t\t\tlog.warn(\"Error saving layout\", e);\n\t\t}\n\n\t\t// get the id of the newly added tab\n\t\tString nodeId = newTab.getId();\n\n\t\ttry {\n\t\t\t// save the user's layout\n            saveLayout(per, ulm, upm, null);\n\t\t} catch (Exception e) {\n\t\t\tlog.warn(\"Error saving layout\", e);\n\t\t}\n\n\t\tString[] newcolumns = request.getParameterValues(\"columns[]\");\n\t\tif (newcolumns.length > 0) {\n\t\t    updateColumns(nodeId, newcolumns, per, upm, ulm);\n\t\t} else {\n\t        // pre-populate this new tab with one column\n\t        IUserLayoutFolderDescription newColumn = new UserLayoutFolderDescription();\n\t        newColumn.setName(\"Column\");\n\t        newColumn.setId(\"tbd\");\n\t        newColumn.setFolderType(IUserLayoutFolderDescription.REGULAR_TYPE);\n\t        newColumn.setHidden(false);\n\t        newColumn.setUnremovable(false);\n\t        newColumn.setImmutable(false);\n\t        ulm.addNode(newColumn, nodeId, null);\n\t\t    \n\t\t}\n\n\t\treturn new ModelAndView(\"jsonView\", Collections.singletonMap(\"tabId\", nodeId));\n\t}","commit_id":"4b55f9c17a580ff1b7cc5f8edd00e61c5d5a4b90","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n     * Subscribes a user to a pre-formatted tab. The steps are:\n     * 1.  Tests to see whether the sourceID is already applicable to the person.  If true, no further action is required\n     *     since the a fragment may only be subscribed to once\n     * 2.  Adds the attribute to the person \"fragmentOwner\" attribute list \n     * 3.  Adds the new attribute to the user's fragmentInfo if it is new, or updates the active flag if it already exists for the user in the database\n     * 4.  Forces a reload of the user preferences so that the new fragment will be pushed when the page refreshes\n     * 5.  Moves the new tab to the last tab position for the user and sets it to the selected tab position\n     * @param request the http servlet request must contain parameter \"sourceID\" with the value of a fragment owner name\n     * @param response the http servlet response\n     * @param per the logged in person\n     * @param upm the user preferences manager\n     * @param ulm the user layout manager\n     * @param userFragmentInfoDao\n     */\n    @SuppressWarnings(\"unchecked\")\n    private void subscribeToTab(HttpServletRequest request,\n            HttpServletResponse response, IPerson per,\n            UserPreferencesManager upm, IUserLayoutManager ulm,\n            IUserFragmentSubscriptionDao userFragmentInfoDao) {\n        String subscriptionAttr = request.getParameter(\"sourceID\");\n        if (StringUtils.isNotBlank(subscriptionAttr)) { \n                List<Object> subscriptionAttributes = getAttributeList(per);\n                subscriptionAttributes.add(subscriptionAttr);\n                per.setAttribute(\"fragmentOwner\", subscriptionAttributes);\n\n            \n                RestrictedPerson fragmentOwner = PersonFactory\n                        .createRestrictedPerson();\n                fragmentOwner.setUserName(subscriptionAttr);\n                updateSubciptionInfo(per, userFragmentInfoDao, fragmentOwner,true);\n                UserProfile currentProfile = upm.getUserPreferences()\n                        .getProfile();\n                int profileID = currentProfile.getProfileId();\n                int structID = currentProfile.getStructureStylesheetId();\n                // get the active tab number from the store so that we can\n                // preserve it\n                StructureStylesheetUserPreferences ssup = null;\n                try {\n                    ssup = ulStore.getStructureStylesheetUserPreferences(per,\n                            profileID, structID);\n                    StructureStylesheetUserPreferences origSsup = upm\n                            .getUserPreferences()\n                            .getStructureStylesheetUserPreferences();\n\n                    String currentTab = ssup\n                            .getParameterValue(ACTIVE_TAB_PARAM);\n\n                    ssup.putParameterValue(ACTIVE_TAB_PARAM, currentTab);\n                    upm.getUserPreferences()\n                            .setStructureStylesheetUserPreferences(ssup);\n                    ulm.loadUserLayout(true);\n\n                    moveSubscribedTab(per, upm, ulm, fragmentOwner, request,\n                            response);\n                } catch (Exception e) {\n                    log.warn(\"Error subscribing to fragment owned by \"\n                            + subscriptionAttr, e);\n                }\n\n        }\n    }","id":50610,"modified_method":"/**\n     * Subscribe a user to a pre-formatted tab (pulled DLM fragment).\n     * \n     * @param request\n     * @param response\n     * @return\n     * @throws IOException\n     */\n    @RequestMapping(method = RequestMethod.POST, params = \"action=subscribeToTab\")\n    public ModelAndView subscribeToTab(HttpServletRequest request,\n            HttpServletResponse response) throws IOException {\n\n        IUserInstance ui = userInstanceManager.getUserInstance(request);\n        IPerson per = getPerson(ui, response);\n\n        UserPreferencesManager upm = (UserPreferencesManager) ui.getPreferencesManager();\n        IUserLayoutManager ulm = upm.getUserLayoutManager();\n\n        // Get the fragment owner's name from the request and construct \n        // an IPerson object representing that user\n        String fragmentOwnerName = request.getParameter(\"sourceID\");\n        if (StringUtils.isBlank(fragmentOwnerName)) {\n            log.warn(\"Attempted to subscribe to tab with null owner ID\");\n            response.sendError(HttpServletResponse.SC_BAD_REQUEST);\n            return null;\n        }\n        RestrictedPerson fragmentOwner = PersonFactory.createRestrictedPerson();\n        fragmentOwner.setUserName(fragmentOwnerName);\n\n        // Mark the currently-authenticated user as subscribed to this fragment.\n        // If an inactivated fragment registration already exists, update it\n        // as an active subscription.  Otherwise, create a new fragment\n        // subscription.\n        IUserFragmentSubscription userFragmentInfo = userFragmentInfoDao\n            .getUserFragmentInfo(per, fragmentOwner);\n        if (userFragmentInfo == null) {\n            userFragmentInfo = userFragmentInfoDao.createUserFragmentInfo(per,\n                    fragmentOwner);\n        } else {\n            userFragmentInfo.setActive(true);\n            userFragmentInfoDao.updateUserFragmentInfo(userFragmentInfo);\n        }\n        \n        try {\n            ulm.loadUserLayout(true);\n\n            moveSubscribedTab(per, upm, ulm, fragmentOwner, request,\n                    response);\n            return new ModelAndView(\"jsonView\", Collections.EMPTY_MAP);\n        } catch (Exception e) {\n            log.warn(\"Error subscribing to fragment owned by \"\n                    + fragmentOwnerName, e);\n            response.sendError(HttpServletResponse.SC_BAD_REQUEST);\n            return null;\n        }\n\n    }","commit_id":"4b55f9c17a580ff1b7cc5f8edd00e61c5d5a4b90","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n\t * A folder is a tab if its parent element is the layout element\n\t * @param folder the folder in question\n\t * @return <code>true<\/code> if the folder is a tab, otherwise <code>false<\/code>\n\t */\n\tprivate final boolean isTab(IUserLayoutManager ulm, String folderId)\n\t\t\tthrows PortalException {\n\t\t// we could be a bit more careful here and actually check the type\n\t\treturn ulm.getRootFolderId().equals(ulm.getParentId(folderId));\n\t}","id":50611,"modified_method":"/**\n\t * A folder is a tab if its parent element is the layout element\n\t * \n\t * @param folder the folder in question\n\t * @return <code>true<\/code> if the folder is a tab, otherwise <code>false<\/code>\n\t */\n\tprotected boolean isTab(IUserLayoutManager ulm, String folderId)\n\t\t\tthrows PortalException {\n\t\t// we could be a bit more careful here and actually check the type\n\t\treturn ulm.getRootFolderId().equals(ulm.getParentId(folderId));\n\t}","commit_id":"4b55f9c17a580ff1b7cc5f8edd00e61c5d5a4b90","url":"https://github.com/Jasig/uPortal"},{"original_method":"private void removeElement(HttpServletRequest request,\n            HttpServletResponse response, IPerson per,\n            UserPreferencesManager upm, IUserLayoutManager ulm)\n            throws IOException {\n        \n        // if the element ID starts with the fragment prefix and is a folder, \n        // attempt first to treat it as a pulled fragment subscription\n        String elementId = request.getParameter(\"elementID\");\n        if (elementId != null && elementId.startsWith(Constants.FRAGMENT_ID_USER_PREFIX) && \n                ulm.getNode( elementId ) instanceof org.jasig.portal.layout.node.UserLayoutFolderDescription) {\n            \n            // get the fragment owner's ID from the element string\n            String userIdString = StringUtils.substringBetween(elementId, Constants.FRAGMENT_ID_USER_PREFIX, Constants.FRAGMENT_ID_LAYOUT_PREFIX);\n            int userId = NumberUtils.toInt(userIdString,0);\n            \n            // construct a new person object reqpresenting the fragment owner\n            RestrictedPerson fragmentOwner = PersonFactory.createRestrictedPerson();\n            fragmentOwner.setID(userId);\n            fragmentOwner.setUserName(userStore.getPortalUserName(userId));\n            \n            // attempt to find a subscription for this fragment\n            IUserFragmentSubscription subscription = userFragmentInfoDao.getUserFragmentInfo(per, fragmentOwner);\n            \n            // if a subscription was found, remove it's registration\n            if (subscription != null) {\n                userFragmentInfoDao.deleteUserFragmentInfo(subscription);\n                ulm.loadUserLayout(true);\n            } \n            \n            // otherwise, delete the node\n            else {\n                ulm.deleteNode(elementId);\n            }\n            \n        } else {\n            // Delete the requested element node.  This code is the same for \n            // all node types, so we can just have a generic action.\n           ulm.deleteNode(elementId);\n        }\n        try {\n            saveUserLayoutPreservingTab(ulm, upm, per);\n        } catch (Exception e) {\n            log.warn(\"Error saving layout\", e);\n        }\n\n        printSuccess(response, \"Removed element\", null);\n    }","id":50612,"modified_method":"/**\n\t * Remove an element from the layout.\n\t * \n\t * @param request\n\t * @param response\n\t * @return\n\t * @throws IOException\n\t */\n    @RequestMapping(method = RequestMethod.POST, params = \"action=removeElement\")\n    public ModelAndView removeElement(HttpServletRequest request,\n            HttpServletResponse response)\n            throws IOException {\n\n        IUserInstance ui = userInstanceManager.getUserInstance(request);\n        IPerson per = getPerson(ui, response);\n\n        UserPreferencesManager upm = (UserPreferencesManager) ui.getPreferencesManager();\n        IUserLayoutManager ulm = upm.getUserLayoutManager();\n\n        try {\n            \n            // if the element ID starts with the fragment prefix and is a folder, \n            // attempt first to treat it as a pulled fragment subscription\n            String elementId = request.getParameter(\"elementID\");\n            if (elementId != null && elementId.startsWith(Constants.FRAGMENT_ID_USER_PREFIX) && \n                    ulm.getNode( elementId ) instanceof org.jasig.portal.layout.node.UserLayoutFolderDescription) {\n                \n                removeSubscription(per, elementId, ulm);\n                \n            } else {\n                // Delete the requested element node.  This code is the same for \n                // all node types, so we can just have a generic action.\n               ulm.deleteNode(elementId);\n            }\n\n            saveLayout(per, ulm, upm, null);\n\n            return new ModelAndView(\"jsonView\", Collections.EMPTY_MAP);\n            \n        } catch (Exception e) {\n            log.warn(\"Failed to remove element from layout\", e);\n            response.sendError(HttpServletResponse.SC_BAD_REQUEST);\n            return null;\n        }\n    }","commit_id":"4b55f9c17a580ff1b7cc5f8edd00e61c5d5a4b90","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n\t * Add a new channel.\n\t * \n\t * @param per\n\t * @param upm\n\t * @param ulm\n\t * @param request\n\t * @param response\n\t * @throws IOException\n\t * @throws PortalException\n\t */\n\tprivate void addChannel(IPerson per, UserPreferencesManager upm,\n\t\t\tIUserLayoutManager ulm, IUserInstanceManager userInstanceManager, HttpServletRequest request,\n\t\t\tHttpServletResponse response) throws IOException, PortalException {\n\n\t\t// gather the parameters we need to move a channel\n\t\tString destinationId = request.getParameter(\"elementID\");\n\t\tint sourceId = Integer.parseInt(request.getParameter(\"channelID\"));\n\t\tString method = request.getParameter(\"position\");\n\n\t\tIChannelRegistryStore channelRegistryStore = ChannelRegistryStoreFactory.getChannelRegistryStoreImpl();\n\t\tIChannelDefinition definition = channelRegistryStore.getChannelDefinition(sourceId);\n\t\t\n        IUserLayoutChannelDescription channel = new UserLayoutChannelDescription(definition);\n\t\tfor (IChannelParameter param : definition.getParameters()) {\n\t\t    if (param.getOverride()) {\n                String paramValue = request.getParameter(param.getName());\n                if (paramValue != null) {\n                    channel.setParameterValue(param.getName(), param.getValue());\n                }\n\t\t    }\n\t\t}\n\n\t\tIUserLayoutNodeDescription node = null;\n\t\tif (isTab(ulm, destinationId)) {\n\t\t\tEnumeration columns = ulm.getChildIds(destinationId);\n\t\t\tif (columns.hasMoreElements()) {\n\t\t\t\twhile (columns.hasMoreElements()) {\n\t\t\t\t\t// attempt to add this channel to the column\n\t\t\t\t\tnode = ulm.addNode(channel, (String) columns.nextElement(),\n\t\t\t\t\t\t\tnull);\n\t\t\t\t\t// if it couldn't be added to this column, go on and try the next\n\t\t\t\t\t// one.  otherwise, we're set.\n\t\t\t\t\tif (node != null)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\tIUserLayoutFolderDescription newColumn = new UserLayoutFolderDescription();\n\t\t\t\tnewColumn.setName(\"Column\");\n\t\t\t\tnewColumn.setId(\"tbd\");\n\t\t\t\tnewColumn\n\t\t\t\t\t\t.setFolderType(IUserLayoutFolderDescription.REGULAR_TYPE);\n\t\t\t\tnewColumn.setHidden(false);\n\t\t\t\tnewColumn.setUnremovable(false);\n\t\t\t\tnewColumn.setImmutable(false);\n\n\t\t\t\t// add the column to our layout\n\t\t\t\tIUserLayoutNodeDescription col = ulm.addNode(newColumn,\n\t\t\t\t\t\tdestinationId, null);\n\n\t\t\t\t// add the channel\n\t\t\t\tnode = ulm.addNode(channel, col.getId(), null);\n\t\t\t}\n\n\t\t} else if (isColumn(ulm, destinationId)) {\n\t\t\t// move the channel into the column\n\t\t\tnode = ulm.addNode(channel, destinationId, null);\n\t\t} else {\n\t\t\t// If we're moving this element before another one, we need\n\t\t\t// to know what the target is. If there's no target, just\n\t\t\t// assume we're moving it to the very end of the column.\n\t\t\tString siblingId = null;\n\t\t\tif (method.equals(\"insertBefore\"))\n\t\t\t\tsiblingId = destinationId;\n\n\t\t\t// move the node as requested and save the layout\n\t\t\tnode = ulm.addNode(channel, ulm.getParentId(destinationId),\n\t\t\t\t\tsiblingId);\n\t\t}\n\n\t\tString nodeId = node.getId();\n\n\t\t// instantiate the channel in the user's layout\n\t\tfinal HttpSession session = request.getSession(false);\n        ChannelManager cm = new ChannelManager(upm, session);\n\t\tcm.instantiateChannel(new PortalHttpServletRequestWrapper(request, response, userInstanceManager), response, channel.getId());\n\n\t\ttry {\n\t\t\t// save the user's layout\n\t\t\tsaveUserLayoutPreservingTab(ulm, upm, per);\n\t\t} catch (Exception e) {\n\t\t\tlog.warn(\"Error saving layout\", e);\n\t\t}\n\n\t\tprintSuccess(response, \"Added new channel\", \"<newNodeId>\" + nodeId\n\t\t\t\t+ \"<\/newNodeId>\");\n\n\t}","id":50613,"modified_method":"protected IPerson getPerson(IUserInstance ui, HttpServletResponse response) throws IOException {\n        IPerson per = ui.getPerson();\n        if (per.isGuest()) {\n            response.sendError(HttpServletResponse.SC_UNAUTHORIZED);\n            return null;\n        }\n        \n        return per;\n\n\t}","commit_id":"4b55f9c17a580ff1b7cc5f8edd00e61c5d5a4b90","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n     * Move a tab left or right.\n     * \n     * @param per\n     * @param upm\n     * @param ulm\n     * @param request\n     * @param response\n     * @throws PortalException\n     * @throws IOException\n     */\n    private void moveSubscribedTab(IPerson per, UserPreferencesManager upm,\n            IUserLayoutManager ulm, IPerson fragmentOwner, HttpServletRequest request,\n            HttpServletResponse response) throws PortalException, IOException, Exception {\n\n        // gather the parameters we need to move a channel\n        String destinationId = request.getParameter(\"elementID\");\n        String subscriptionAttr = request.getParameter(\"sourceID\");\n        String method = request.getParameter(\"method\");\n        String tabPosition = request.getParameter(\"tabPosition\");\n        int uid = userStore.getPortalUID(fragmentOwner, false);\n        Document userLayout = ulStore.getUserLayout(per, upm.getUserPreferences().getProfile());\n        NodeList  nodes = null;\n        try\n        {\n                StringBuilder expression = new StringBuilder(\"//folder[@type='root']/folder[starts-with(@ID,'\")\n                                           .append(Constants.FRAGMENT_ID_USER_PREFIX)\n                                           .append(uid)\n                                           .append(\"')]\");\n                XPathFactory fac = XPathFactory.newInstance();\n                XPath xpath = fac.newXPath();\n                nodes = (NodeList) xpath.evaluate(expression.toString(), userLayout,  XPathConstants.NODESET);\n                // If we're moving this element before another one, we need\n                // to know what the target is. If there's no target, just\n                // assume we're moving it to the very end of the list.\n                String siblingId = null;\n                if (method.equals(\"insertBefore\"))\n                    siblingId = destinationId;\n\n                // move the node as requested and save the layout\n                for (int i = 0; i < nodes.getLength(); i++) {\n                    String sourceId = nodes.item(i).getAttributes().getNamedItem(\"ID\").getTextContent();\n                    ulm.moveNode(sourceId, ulm.getParentId(destinationId), siblingId);\n                }\n\n                    StructureStylesheetUserPreferences ssup = upm.getUserPreferences()\n                            .getStructureStylesheetUserPreferences();\n\n                    try {\n                        String currentTab = ssup.getParameterValue(ACTIVE_TAB_PARAM);\n                        UserProfile currentProfile = upm.getUserPreferences().getProfile();\n                        int profileID = currentProfile.getProfileId();\n                        int structID = currentProfile.getStructureStylesheetId();\n                        // get the active tab number from the store so that we can preserve it\n                        String defaultTab = ulStore.getStructureStylesheetUserPreferences(per, profileID, structID).getParameterValue(ACTIVE_TAB_PARAM);\n                        // set the active tab to previously recorded value\n                        if (defaultTab.equals(currentTab)) {\n                            ssup.putParameterValue(ACTIVE_TAB_PARAM, tabPosition);\n                        }\n                        else {\n                            ssup.putParameterValue(ACTIVE_TAB_PARAM, defaultTab);\n                        }\n                        // This is a brute force save of the new attributes.  It requires access to the layout store. -SAB\n                        ulStore.setStructureStylesheetUserPreferences(per, profileID, ssup);\n                    } catch (Exception e) {\n                        log.error(e);\n                    }\n\n                    ulm.saveUserLayout();\n\n                    // reset the active tab for viewing (not default)\n                    ssup.putParameterValue(ACTIVE_TAB_PARAM, tabPosition);\n\n                    printSuccess(response, \"Saved new tab position\", null);\n\n                \n        } catch (XPathExpressionException e) {\n            log.error(\"Error searching for fragments owned by \"+ subscriptionAttr, e);\n        }\n\n\n        \n    }","id":50614,"modified_method":"/**\n     * Move a tab left or right.\n     * \n     * @param per\n     * @param upm\n     * @param ulm\n     * @param request\n     * @param response\n     * @throws PortalException\n     * @throws IOException\n     */\n    private void moveSubscribedTab(IPerson per, UserPreferencesManager upm,\n            IUserLayoutManager ulm, IPerson fragmentOwner, HttpServletRequest request,\n            HttpServletResponse response) throws PortalException, IOException, Exception {\n\n        // get the target node this new tab should be moved after\n        String destinationId = request.getParameter(\"elementID\");\n\n        // get the user layout for the currently-authenticated user\n        int uid = userStore.getPortalUID(fragmentOwner, false);\n        Document userLayout = ulStore.getUserLayout(per, upm.getUserPreferences().getProfile());\n\n        // attempt to find the new subscribed tab in the layout so we can\n        // move it\n        StringBuilder expression = new StringBuilder(\"//folder[@type='root']/folder[starts-with(@ID,'\")\n                                   .append(Constants.FRAGMENT_ID_USER_PREFIX)\n                                   .append(uid)\n                                   .append(\"')]\");\n        XPathFactory fac = XPathFactory.newInstance();\n        XPath xpath = fac.newXPath();\n        NodeList nodes = (NodeList) xpath.evaluate(expression.toString(), userLayout,  XPathConstants.NODESET);\n\n        // move the node as requested and save the layout\n        for (int i = 0; i < nodes.getLength(); i++) {\n            String sourceId = nodes.item(i).getAttributes().getNamedItem(\"ID\").getTextContent();\n            ulm.moveNode(sourceId, ulm.getParentId(destinationId), destinationId);\n        }\n\n        saveLayout(per, ulm, upm, null);\n        \n    }","commit_id":"4b55f9c17a580ff1b7cc5f8edd00e61c5d5a4b90","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n\t * Set all columns on a given tab to have the same width.\n\t * \n\t * @param per\n\t * @param upm\n\t * @param ulm\n\t * @param tabId\n\t * @throws PortalException\n\t */\n\tprivate void equalizeColumnWidths(IPerson per, UserPreferencesManager upm,\n\t\t\tIUserLayoutManager ulm, String tabId) throws PortalException {\n\n\t\t// get the total number of columns\n\t\tEnumeration columns = ulm.getChildIds(tabId);\n\t\tint count = 0;\n\t\twhile (columns.hasMoreElements()) {\n\t\t\tcolumns.nextElement();\n\t\t\tcount++;\n\t\t}\n\n\t\t// set the new width for each column to be equal\n\t\tint width = 100 / count;\n\t\tString widthString = width + \"%\";\n\n\t\tStructureStylesheetUserPreferences ssup = upm.getUserPreferences().getStructureStylesheetUserPreferences();\n        UserProfile currentProfile = upm.getUserPreferences().getProfile();\n\t\tcolumns = ulm.getChildIds(tabId);\n\t\tString currentTab = ssup.getParameterValue( ACTIVE_TAB_PARAM );\n\t\ttry {\n\t\t\twhile (columns.hasMoreElements()) {\n\t\t\t\tString columnId = (String) columns.nextElement();\n\t\t\t\tssup.setFolderAttributeValue(columnId, \"width\", widthString);\n\t\t\t\tElement folder = ulm.getUserLayoutDOM().getElementById(columnId);\n\t\t\t\t// This sets the column attribute in memory but doesn't persist it.  Comment says saves changes \"prior to persisting\"\n\t\t\t\tUserPrefsHandler.setUserPreference(folder, \"width\", per);\n                \n\t\t\t\tcount++;\n\t\t\t}\n\n\t        saveSSUPPreservingTab(upm, per, ssup);\n\n\t\t} catch (Exception e) {\n\t\t\tlog.error(\"Error saving new column widths\", e);\n\t\t}\n\n\t}","id":50615,"modified_method":"private List<String> updateColumns(String tabId, String[] newcolumns, IPerson per, UserPreferencesManager upm, IUserLayoutManager ulm) throws IOException, PortalException {\n\n        int columnNumber = newcolumns.length;\n        @SuppressWarnings(\"unchecked\")\n        Enumeration columns = ulm.getChildIds(tabId);\n        List<String> columnList = new ArrayList<String>();\n        while (columns.hasMoreElements()) {\n            columnList.add((String) columns.nextElement());\n        }\n        List<String> newColumns = new ArrayList<String>();\n\n        if (columnNumber > columnList.size()) {\n            for (int i = columnList.size(); i < columnNumber; i++) {\n\n                // create new column element\n                IUserLayoutFolderDescription newColumn = new UserLayoutFolderDescription();\n                newColumn.setName(\"Column\");\n                newColumn.setId(\"tbd\");\n                newColumn\n                        .setFolderType(IUserLayoutFolderDescription.REGULAR_TYPE);\n                newColumn.setHidden(false);\n                newColumn.setUnremovable(false);\n                newColumn.setImmutable(false);\n\n                // add the column to our layout\n                IUserLayoutNodeDescription node = ulm.addNode(newColumn, tabId,\n                        null);\n                newColumns.add(node.getId());\n\n            }\n        } else if (columnNumber < columnList.size()) {\n            String lastColumn = columnList.get(columnNumber - 1);\n            for (int i = columnNumber; i < columnList.size(); i++) {\n                String columnId = columnList.get(i);\n\n                // move all channels in the current column to the last valid column\n                @SuppressWarnings(\"unchecked\")\n                Enumeration channels = ulm.getChildIds(columnId);\n                while (channels.hasMoreElements()) {\n                    ulm.addNode(ulm.getNode((String) channels.nextElement()),\n                            lastColumn, null);\n                }\n\n                // delete the column from the user's layout\n                ulm.deleteNode(columnId);\n\n            }\n        }\n\n        int count = 0;\n        columns = ulm.getChildIds(tabId);\n        StructureStylesheetUserPreferences ssup = upm.getUserPreferences()\n            .getStructureStylesheetUserPreferences();\n        \n        while (columns.hasMoreElements()) {\n            String columnId = (String) columns.nextElement();\n            ssup.setFolderAttributeValue(columnId, \"width\", newcolumns[count] + \"%\");\n            Element folder = ulm.getUserLayoutDOM().getElementById(columnId);\n            try {\n                // This sets the column attribute in memory but doesn't persist it.  Comment says saves changes \"prior to persisting\"\n                UserPrefsHandler.setUserPreference(folder, \"width\", per);\n            } catch (Exception e) {\n                log.error(\"Error saving new column widths\", e);\n            }\n            count++;\n        }\n\n        try {\n            saveLayout(per, ulm, upm, ssup);\n        } catch (Exception e) {\n            log.warn(\"Error saving layout\", e);\n        }\n\n        return newColumns;\n\n    }","commit_id":"4b55f9c17a580ff1b7cc5f8edd00e61c5d5a4b90","url":"https://github.com/Jasig/uPortal"},{"original_method":"public void runBatch(Document doc){\r\n\t\tNodeList list = doc.getElementsByTagName(\"process\");\r\n\t\tif(list.getLength() != 1){\r\n\t\t\t throw new IllegalArgumentException(\"You should specify exactly 1 process element!\");\r\n\t\t}\r\n\t\tElement process = (Element) list.item(0);\r\n\t\tdownloadFiles = Boolean.parseBoolean(process.getAttribute(\"downloadOsmFiles\"));\r\n\t\tgenerateIndexes = Boolean.parseBoolean(process.getAttribute(\"generateIndexes\"));\r\n\t\tuploadIndexes = Boolean.parseBoolean(process.getAttribute(\"uploadIndexes\"));\r\n\t\tdeleteFilesAfterUploading = Boolean.parseBoolean(process.getAttribute(\"deleteFilesAfterUploading\"));\r\n\t\twget = process.getAttribute(\"wget\");\r\n\t\t\r\n\t\tindexPOI = Boolean.parseBoolean(process.getAttribute(\"indexPOI\"));\r\n\t\tindexMap = Boolean.parseBoolean(process.getAttribute(\"indexMap\"));\r\n\t\tindexTransport = Boolean.parseBoolean(process.getAttribute(\"indexTransport\"));\r\n\t\tindexAddress = Boolean.parseBoolean(process.getAttribute(\"indexAddress\"));\r\n\t\tString zooms = process.getAttribute(\"mapZooms\");\r\n\t\tif(zooms == null || zooms.length() == 0){\r\n\t\t\tmapZooms = MapZooms.getDefault();\r\n\t\t} else {\r\n\t\t\tmapZooms = MapZooms.parseZooms(zooms);\r\n\t\t}\r\n\t\t\r\n\t\tString f = process.getAttribute(\"renderingTypesFile\");\r\n\t\tif(f == null || f.length() == 0){\r\n\t\t\ttypes = MapRenderingTypes.getDefault();\r\n\t\t} else {\r\n\t\t\ttypes = new MapRenderingTypes(f);\r\n\t\t}\r\n\t\r\n\t\tString dir = process.getAttribute(\"directory_for_osm_files\");\r\n\t\tif(dir == null || !new File(dir).exists()) {\r\n\t\t\tthrow new IllegalArgumentException(\"Please specify directory with .osm or .osm.bz2 files as directory_for_osm_files (attribute)\"); //$NON-NLS-1$\r\n\t\t}\r\n\t\tosmDirFiles = new File(dir);\r\n\t\tdir = process.getAttribute(\"directory_for_index_files\");\r\n\t\tif(dir == null || !new File(dir).exists()) {\r\n\t\t\tthrow new IllegalArgumentException(\"Please specify directory with generated index files  as directory_for_index_files (attribute)\"); //$NON-NLS-1$\r\n\t\t}\r\n\t\tindexDirFiles = new File(dir);\r\n\t\t\r\n\t\tif(uploadIndexes){\r\n\t\t\tlist = doc.getElementsByTagName(\"authorization_info\");\r\n\t\t\tif(list.getLength() != 1){\r\n\t\t\t\t throw new IllegalArgumentException(\"You should specify exactly 1 authorization_info element to upload indexes!\");\r\n\t\t\t}\r\n\t\t\tElement authorization = (Element) list.item(0);\r\n\t\t\tcookieHSID = authorization.getAttribute(\"cookieHSID\");\r\n\t\t\tcookieSID = authorization.getAttribute(\"cookieSID\");\r\n\t\t\tpagegen = authorization.getAttribute(\"pagegen\");\r\n\t\t\ttoken = authorization.getAttribute(\"token\");\r\n\t\t\tuser = authorization.getAttribute(\"google_code_user\");\r\n\t\t\tpassword = authorization.getAttribute(\"google_code_password\");\r\n\t\t}\r\n\t\t\r\n\t\tList<RegionCountries> countriesToDownload = new ArrayList<RegionCountries>();\r\n\t\tNodeList regions = doc.getElementsByTagName(\"regions\");\r\n\t\tfor(int i=0; i< regions.getLength(); i++){\r\n\t\t\tElement el = (Element) regions.item(i);\r\n\t\t\tif(!Boolean.parseBoolean(el.getAttribute(\"skip\"))){\r\n\t\t\t\tRegionCountries countries = new RegionCountries();\r\n\t\t\t\tcountries.siteToDownload = el.getAttribute(\"siteToDownload\");\r\n\t\t\t\tif(countries.siteToDownload == null){\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tcountries.namePrefix = el.getAttribute(\"region_prefix\");\r\n\t\t\t\tif(countries.namePrefix == null){\r\n\t\t\t\t\tcountries.namePrefix = \"\";\r\n\t\t\t\t}\r\n\t\t\t\tcountries.nameSuffix = el.getAttribute(\"region_suffix\");\r\n\t\t\t\tif(countries.nameSuffix == null){\r\n\t\t\t\t\tcountries.nameSuffix = \"\";\r\n\t\t\t\t}\r\n\t\t\t\tNodeList ncountries = el.getElementsByTagName(\"region\");\r\n\t\t\t\tfor(int j=0; j< ncountries.getLength(); j++){\r\n\t\t\t\t\tElement ncountry = (Element) ncountries.item(j);\r\n\t\t\t\t\tString name = ncountry.getAttribute(\"name\");\r\n\t\t\t\t\tif(name != null && !Boolean.parseBoolean(ncountry.getAttribute(\"skip\"))){\r\n\t\t\t\t\t\tcountries.regionNames.add(name);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcountriesToDownload.add(countries);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\trunBatch(countriesToDownload);\r\n\t\t\r\n\t\t\r\n\t}","id":50616,"modified_method":"public void runBatch(Document doc){\r\n\t\tNodeList list = doc.getElementsByTagName(\"process\");\r\n\t\tif(list.getLength() != 1){\r\n\t\t\t throw new IllegalArgumentException(\"You should specify exactly 1 process element!\");\r\n\t\t}\r\n\t\tElement process = (Element) list.item(0);\r\n\t\tdownloadFiles = Boolean.parseBoolean(process.getAttribute(\"downloadOsmFiles\"));\r\n\t\tgenerateIndexes = Boolean.parseBoolean(process.getAttribute(\"generateIndexes\"));\r\n\t\tuploadIndexes = Boolean.parseBoolean(process.getAttribute(\"uploadIndexes\"));\r\n\t\tdeleteFilesAfterUploading = Boolean.parseBoolean(process.getAttribute(\"deleteFilesAfterUploading\"));\r\n\t\twget = process.getAttribute(\"wget\");\r\n\t\t\r\n\t\tindexPOI = Boolean.parseBoolean(process.getAttribute(\"indexPOI\"));\r\n\t\tindexMap = Boolean.parseBoolean(process.getAttribute(\"indexMap\"));\r\n\t\tindexTransport = Boolean.parseBoolean(process.getAttribute(\"indexTransport\"));\r\n\t\tindexAddress = Boolean.parseBoolean(process.getAttribute(\"indexAddress\"));\r\n\t\tString zooms = process.getAttribute(\"mapZooms\");\r\n\t\tif(zooms == null || zooms.length() == 0){\r\n\t\t\tmapZooms = MapZooms.getDefault();\r\n\t\t} else {\r\n\t\t\tmapZooms = MapZooms.parseZooms(zooms);\r\n\t\t}\r\n\t\t\r\n\t\tString f = process.getAttribute(\"renderingTypesFile\");\r\n\t\tif(f == null || f.length() == 0){\r\n\t\t\ttypes = MapRenderingTypes.getDefault();\r\n\t\t} else {\r\n\t\t\ttypes = new MapRenderingTypes(f);\r\n\t\t}\r\n\t\r\n\t\tString dir = process.getAttribute(\"directory_for_osm_files\");\r\n\t\tif(dir == null || !new File(dir).exists()) {\r\n\t\t\tthrow new IllegalArgumentException(\"Please specify directory with .osm or .osm.bz2 files as directory_for_osm_files (attribute)\"); //$NON-NLS-1$\r\n\t\t}\r\n\t\tosmDirFiles = new File(dir);\r\n\t\tdir = process.getAttribute(\"directory_for_index_files\");\r\n\t\tif(dir == null || !new File(dir).exists()) {\r\n\t\t\tthrow new IllegalArgumentException(\"Please specify directory with generated index files  as directory_for_index_files (attribute)\"); //$NON-NLS-1$\r\n\t\t}\r\n\t\tindexDirFiles = new File(dir);\r\n\t\t\r\n\t\tif(uploadIndexes){\r\n\t\t\tlist = doc.getElementsByTagName(\"authorization_info\");\r\n\t\t\tif(list.getLength() != 1){\r\n\t\t\t\t throw new IllegalArgumentException(\"You should specify exactly 1 authorization_info element to upload indexes!\");\r\n\t\t\t}\r\n\t\t\tElement authorization = (Element) list.item(0);\r\n\t\t\tcookieHSID = authorization.getAttribute(\"cookieHSID\");\r\n\t\t\tcookieSID = authorization.getAttribute(\"cookieSID\");\r\n\t\t\tpagegen = authorization.getAttribute(\"pagegen\");\r\n\t\t\ttoken = authorization.getAttribute(\"token\");\r\n\t\t\tuploadToOsmandDownloads = Boolean.parseBoolean(process.getAttribute(\"upload_osmand_download\"));\r\n\t\t\tif(uploadToOsmandDownloads){\r\n\t\t\t\tuser = authorization.getAttribute(\"osmand_download_user\");\r\n\t\t\t\tpassword = authorization.getAttribute(\"osmand_download_password\");\r\n\t\t\t} else {\r\n\t\t\t\tuser = authorization.getAttribute(\"google_code_user\"); \r\n\t\t\t\tpassword = authorization.getAttribute(\"google_code_password\");\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tList<RegionCountries> countriesToDownload = new ArrayList<RegionCountries>();\r\n\t\tNodeList regions = doc.getElementsByTagName(\"regions\");\r\n\t\tfor(int i=0; i< regions.getLength(); i++){\r\n\t\t\tElement el = (Element) regions.item(i);\r\n\t\t\tif(!Boolean.parseBoolean(el.getAttribute(\"skip\"))){\r\n\t\t\t\tRegionCountries countries = new RegionCountries();\r\n\t\t\t\tcountries.siteToDownload = el.getAttribute(\"siteToDownload\");\r\n\t\t\t\tif(countries.siteToDownload == null){\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tcountries.namePrefix = el.getAttribute(\"region_prefix\");\r\n\t\t\t\tif(countries.namePrefix == null){\r\n\t\t\t\t\tcountries.namePrefix = \"\";\r\n\t\t\t\t}\r\n\t\t\t\tcountries.nameSuffix = el.getAttribute(\"region_suffix\");\r\n\t\t\t\tif(countries.nameSuffix == null){\r\n\t\t\t\t\tcountries.nameSuffix = \"\";\r\n\t\t\t\t}\r\n\t\t\t\tNodeList ncountries = el.getElementsByTagName(\"region\");\r\n\t\t\t\tfor(int j=0; j< ncountries.getLength(); j++){\r\n\t\t\t\t\tElement ncountry = (Element) ncountries.item(j);\r\n\t\t\t\t\tString name = ncountry.getAttribute(\"name\");\r\n\t\t\t\t\tif(name != null && !Boolean.parseBoolean(ncountry.getAttribute(\"skip\"))){\r\n\t\t\t\t\t\tcountries.regionNames.add(name);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcountriesToDownload.add(countries);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\trunBatch(countriesToDownload);\r\n\t\t\r\n\t\t\r\n\t}","commit_id":"b291d3518fcfb7003590e51eac7ca69556152284","url":"https://github.com/osmandapp/Osmand"},{"original_method":"protected void uploadIndex(File f, Set<String> alreadyUploadedFiles){\r\n\t\tif(!uploadIndexes){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tMessageFormat format = new MessageFormat(\"{0,date,dd.MM.yyyy} : {1, number,##.#} MB\", Locale.US);\r\n\t\tString summary;\r\n\t\tdouble mbLengh = (double)f.length() / MB;\r\n\t\tboolean zip = true;\r\n\t\tString regionName;\r\n\t\tif(f.getName().endsWith(IndexConstants.POI_INDEX_EXT) || f.getName().endsWith(IndexConstants.POI_INDEX_EXT_ZIP)){\r\n\t\t\tregionName = f.getName().substring(0, f.getName().length() - IndexConstants.POI_INDEX_EXT.length() - 2);\r\n\t\t\tsummary = \"POI index for \" ;\r\n\t\t} else if(f.getName().endsWith(IndexConstants.ADDRESS_INDEX_EXT) || f.getName().endsWith(IndexConstants.ADDRESS_INDEX_EXT_ZIP)){\r\n\t\t\tregionName = f.getName().substring(0, f.getName().length() - IndexConstants.ADDRESS_INDEX_EXT.length() - 2);\r\n\t\t\tsummary = \"Address index for \" ;\r\n\t\t} else if(f.getName().endsWith(IndexConstants.TRANSPORT_INDEX_EXT) || f.getName().endsWith(IndexConstants.TRANSPORT_INDEX_EXT_ZIP)){\r\n\t\t\tregionName = f.getName().substring(0, f.getName().length() - IndexConstants.TRANSPORT_INDEX_EXT.length() - 2);\r\n\t\t\tsummary = \"Transport index for \";\r\n\t\t} else if(f.getName().endsWith(IndexConstants.BINARY_MAP_INDEX_EXT) || f.getName().endsWith(IndexConstants.BINARY_MAP_INDEX_EXT_ZIP)){\r\n\t\t\tregionName = f.getName().substring(0, f.getName().length() - IndexConstants.BINARY_MAP_INDEX_EXT.length() - 2);\r\n\t\t\tboolean addr = indexAddress;\r\n\t\t\tboolean trans = indexTransport;\r\n\t\t\tboolean map = indexMap;\r\n\t\t\tRandomAccessFile raf = null;\r\n\t\t\ttry {\r\n\t\t\t\traf = new RandomAccessFile(f, \"r\");\r\n\t\t\t\tBinaryMapIndexReader reader = new BinaryMapIndexReader(raf);\r\n\t\t\t\ttrans = reader.hasTransportData();\r\n\t\t\t\tmap = reader.containsMapData();\r\n\t\t\t\taddr = reader.containsAddressData();\r\n\t\t\t\treader.close();\r\n\t\t\t} catch (Exception e) {\r\n\t\t\t\tlog.info(\"Exception\", e);\r\n\t\t\t\tif (raf != null) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\traf.close();\r\n\t\t\t\t\t} catch (IOException e1) {\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tsummary = \" index for \";\r\n\t\t\tboolean fir = true;\r\n\t\t\tif (addr) {\r\n\t\t\t\tsummary = \"Address\" + (fir ? \"\" : \", \") + summary;\r\n\t\t\t\tfir = false;\r\n\t\t\t}\r\n\t\t\tif (trans) {\r\n\t\t\t\tsummary = \"Transport\" + (fir ? \"\" : \", \") + summary;\r\n\t\t\t\tfir = false;\r\n\t\t\t}\r\n\t\t\tif (map) {\r\n\t\t\t\tsummary = \"Map\" + (fir ? \"\" : \", \") + summary;\r\n\t\t\t\tfir = false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t} else { \r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(mbLengh < 0.015){\r\n\t\t\t// do not upload small files\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(mbLengh > 2 && (f.getName().endsWith(\".odb\") || f.getName().endsWith(\".obf\")) && zip){\r\n\t\t\tString n = f.getName();\r\n\t\t\tif(f.getName().endsWith(\".odb\")){\r\n\t\t\t\tn = f.getName().substring(0, f.getName().length() - 4);\r\n\t\t\t}\r\n\t\t\tString zipFileName = n+\".zip\";\r\n\t\t\tFile zFile = new File(f.getParentFile(), zipFileName);\r\n\t\t\tlog.info(\"Zipping file \" + f.getName());\r\n\t\t\ttry {\r\n\t\t\t\tZipOutputStream zout = new ZipOutputStream(new FileOutputStream(zFile));\r\n\t\t\t\tzout.setLevel(9);\r\n\t\t\t\tzout.putNextEntry(new ZipEntry(f.getName()));\r\n\t\t\t\tFileInputStream is = new FileInputStream(f);\r\n\t\t\t\tbyte[] BUFFER = new byte[8192];\r\n\t\t\t\tint read = 0;\r\n\t\t\t\twhile((read = is.read(BUFFER)) != -1){\r\n\t\t\t\t\tzout.write(BUFFER, 0, read);\r\n\t\t\t\t}\r\n\t\t\t\tis.close();\r\n\t\t\t\tzout.close();\r\n\t\t\t} catch (IOException e) {\r\n\t\t\t\tlog.error(\"Exception while zipping file\", e);\r\n\t\t\t}\r\n\t\t\tif(f.delete()){\r\n\t\t\t\tlog.info(\"Source odb file was deleted\");\r\n\t\t\t}\r\n\t\t\tf = zFile;\r\n\t\t\t\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tDownloaderIndexFromGoogleCode.deleteFileFromGoogleDownloads(f.getName(), token, pagegen, cookieHSID, cookieSID);\r\n\t\t\ttry {\r\n\t\t\t\tThread.sleep(4000);\r\n\t\t\t} catch (InterruptedException e) {\r\n\t\t\t\t// wait 5 seconds\r\n\t\t\t}\r\n\t\t} catch (IOException e) {\r\n\t\t\tlog.warn(\"Deleting file from downloads\" + f.getName() +  \" \" + e.getMessage());\r\n\t\t}\r\n\t\t\r\n\t\tmbLengh = (double)f.length() / MB;\r\n\t\tif(mbLengh > 100){\r\n\t\t\tSystem.err.println(\"ERROR : file \" + f.getName() + \" exceeded 100 mb!!! Could not be uploaded.\");\r\n\t\t\treturn; // restriction for google code\r\n\t\t}\r\n\t\tString descriptionFile = \"{\"+format.format(new Object[]{new Date(f.lastModified()), mbLengh})+\"}\";\r\n\t\tsummary +=  regionName + \" \" + descriptionFile;\r\n\t\t\r\n\t\t\r\n\t\tGoogleCodeUploadIndex uploader = new GoogleCodeUploadIndex();\r\n\t\tuploader.setFileName(f.getAbsolutePath());\r\n\t\tuploader.setTargetFileName(f.getName());\r\n\t\tuploader.setProjectName(\"osmand\");\r\n\t\tuploader.setUserName(user);\r\n\t\tuploader.setPassword(password);\r\n\t\tuploader.setLabels(\"Type-Archive, Testdata\");\r\n\t\tuploader.setSummary(summary.replace('_', ' '));\r\n\t\ttry {\r\n\t\t\tuploader.upload();\r\n\t\t\tif(deleteFilesAfterUploading){\r\n\t\t\t\tf.delete();\r\n\t\t\t}\r\n\t\t\talreadyUploadedFiles.add(f.getName());\r\n\t\t} catch (IOException e) {\r\n\t\t\tlog.error(\"Input/output exception uploading \" + f.getName(), e);\r\n\t\t}\r\n\t}","id":50617,"modified_method":"protected void uploadIndex(File f, Set<String> alreadyUploadedFiles){\r\n\t\tif(!uploadIndexes){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tString summary;\r\n\t\tdouble mbLengh = (double)f.length() / MB;\r\n\t\tboolean zip = true;\r\n\t\tString regionName;\r\n\t\tif(f.getName().endsWith(IndexConstants.POI_INDEX_EXT) || f.getName().endsWith(IndexConstants.POI_INDEX_EXT_ZIP)){\r\n\t\t\tregionName = f.getName().substring(0, f.getName().length() - IndexConstants.POI_INDEX_EXT.length() - 2);\r\n\t\t\tsummary = \"POI index for \" ;\r\n\t\t} else if(f.getName().endsWith(IndexConstants.ADDRESS_INDEX_EXT) || f.getName().endsWith(IndexConstants.ADDRESS_INDEX_EXT_ZIP)){\r\n\t\t\tregionName = f.getName().substring(0, f.getName().length() - IndexConstants.ADDRESS_INDEX_EXT.length() - 2);\r\n\t\t\tsummary = \"Address index for \" ;\r\n\t\t} else if(f.getName().endsWith(IndexConstants.TRANSPORT_INDEX_EXT) || f.getName().endsWith(IndexConstants.TRANSPORT_INDEX_EXT_ZIP)){\r\n\t\t\tregionName = f.getName().substring(0, f.getName().length() - IndexConstants.TRANSPORT_INDEX_EXT.length() - 2);\r\n\t\t\tsummary = \"Transport index for \";\r\n\t\t} else if(f.getName().endsWith(IndexConstants.BINARY_MAP_INDEX_EXT) || f.getName().endsWith(IndexConstants.BINARY_MAP_INDEX_EXT_ZIP)){\r\n\t\t\tregionName = f.getName().substring(0, f.getName().length() - IndexConstants.BINARY_MAP_INDEX_EXT.length() - 2);\r\n\t\t\tboolean addr = indexAddress;\r\n\t\t\tboolean trans = indexTransport;\r\n\t\t\tboolean map = indexMap;\r\n\t\t\tRandomAccessFile raf = null;\r\n\t\t\ttry {\r\n\t\t\t\traf = new RandomAccessFile(f, \"r\");\r\n\t\t\t\tBinaryMapIndexReader reader = new BinaryMapIndexReader(raf);\r\n\t\t\t\ttrans = reader.hasTransportData();\r\n\t\t\t\tmap = reader.containsMapData();\r\n\t\t\t\taddr = reader.containsAddressData();\r\n\t\t\t\treader.close();\r\n\t\t\t} catch (Exception e) {\r\n\t\t\t\tlog.info(\"Exception\", e);\r\n\t\t\t\tif (raf != null) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\traf.close();\r\n\t\t\t\t\t} catch (IOException e1) {\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tsummary = \" index for \";\r\n\t\t\tboolean fir = true;\r\n\t\t\tif (addr) {\r\n\t\t\t\tsummary = \"Address\" + (fir ? \"\" : \", \") + summary;\r\n\t\t\t\tfir = false;\r\n\t\t\t}\r\n\t\t\tif (trans) {\r\n\t\t\t\tsummary = \"Transport\" + (fir ? \"\" : \", \") + summary;\r\n\t\t\t\tfir = false;\r\n\t\t\t}\r\n\t\t\tif (map) {\r\n\t\t\t\tsummary = \"Map\" + (fir ? \"\" : \", \") + summary;\r\n\t\t\t\tfir = false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t} else { \r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(mbLengh < 0.015){\r\n\t\t\t// do not upload small files\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(mbLengh > 2 && (f.getName().endsWith(\".odb\") || f.getName().endsWith(\".obf\")) && zip){\r\n\t\t\tString n = f.getName();\r\n\t\t\tif(f.getName().endsWith(\".odb\")){\r\n\t\t\t\tn = f.getName().substring(0, f.getName().length() - 4);\r\n\t\t\t}\r\n\t\t\tString zipFileName = n+\".zip\";\r\n\t\t\tFile zFile = new File(f.getParentFile(), zipFileName);\r\n\t\t\tlog.info(\"Zipping file \" + f.getName());\r\n\t\t\ttry {\r\n\t\t\t\tZipOutputStream zout = new ZipOutputStream(new FileOutputStream(zFile));\r\n\t\t\t\tzout.setLevel(9);\r\n\t\t\t\tzout.putNextEntry(new ZipEntry(f.getName()));\r\n\t\t\t\tFileInputStream is = new FileInputStream(f);\r\n\t\t\t\tbyte[] BUFFER = new byte[8192];\r\n\t\t\t\tint read = 0;\r\n\t\t\t\twhile((read = is.read(BUFFER)) != -1){\r\n\t\t\t\t\tzout.write(BUFFER, 0, read);\r\n\t\t\t\t}\r\n\t\t\t\tis.close();\r\n\t\t\t\tzout.close();\r\n\t\t\t} catch (IOException e) {\r\n\t\t\t\tlog.error(\"Exception while zipping file\", e);\r\n\t\t\t}\r\n\t\t\tif(f.delete()){\r\n\t\t\t\tlog.info(\"Source odb file was deleted\");\r\n\t\t\t}\r\n\t\t\tf = zFile;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (!uploadToOsmandDownloads) {\r\n\t\t\ttry {\r\n\t\t\t\tDownloaderIndexFromGoogleCode.deleteFileFromGoogleDownloads(f.getName(), token, pagegen, cookieHSID, cookieSID);\r\n\t\t\t\ttry {\r\n\t\t\t\t\tThread.sleep(4000);\r\n\t\t\t\t} catch (InterruptedException e) {\r\n\t\t\t\t\t// wait 5 seconds\r\n\t\t\t\t}\r\n\t\t\t} catch (IOException e) {\r\n\t\t\t\tlog.warn(\"Deleting file from downloads\" + f.getName() + \" \" + e.getMessage());\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tmbLengh = (double)f.length() / MB;\r\n\t\tif(mbLengh > 100 && !uploadToOsmandDownloads){\r\n\t\t\tSystem.err.println(\"ERROR : file \" + f.getName() + \" exceeded 100 mb!!! Could not be uploaded.\");\r\n\t\t\treturn; // restriction for google code\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tsummary +=  regionName;\r\n\t\tsummary = summary.replace('_', ' ');\r\n\t\t\r\n\t\ttry {\r\n\t\t\tMessageFormat dateFormat = new MessageFormat(\"{0,date,dd.MM.yyyy}\", Locale.US);\r\n\t\t\tMessageFormat numberFormat = new MessageFormat(\"{0,number,##.#}\", Locale.US);\r\n\t\t\tString size = numberFormat.format(new Object[] {mbLengh});\r\n\t\t\tString date = dateFormat.format(new Object[] {new Date(f.lastModified())});\r\n\t\t\tif (uploadToOsmandDownloads) {\r\n\t\t\t\tuploadToDownloadOsmandNet(f, summary, size,date);\r\n\t\t\t} else {\r\n\t\t\t\tString descriptionFile = \"{\" + date + \" : \" + size + \"}\";\r\n\t\t\t\tsummary += \" \" + descriptionFile;\r\n\t\t\t\tGoogleCodeUploadIndex uploader = new GoogleCodeUploadIndex();\r\n\t\t\t\tuploader.setFileName(f.getAbsolutePath());\r\n\t\t\t\tuploader.setTargetFileName(f.getName());\r\n\t\t\t\tuploader.setProjectName(\"osmand\");\r\n\t\t\t\tuploader.setUserName(user);\r\n\t\t\t\tuploader.setPassword(password);\r\n\t\t\t\tuploader.setLabels(\"Type-Archive, Testdata\");\r\n\t\t\t\tuploader.setSummary(summary);\r\n\t\t\t\tuploader.upload();\r\n\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (deleteFilesAfterUploading) {\r\n\t\t\t\tf.delete();\r\n\t\t\t}\r\n\t\t\talreadyUploadedFiles.add(f.getName());\r\n\t\t} catch (IOException e) {\r\n\t\t\tlog.error(\"Input/output exception uploading \" + f.getName(), e);\r\n\t\t}\r\n\t}","commit_id":"b291d3518fcfb7003590e51eac7ca69556152284","url":"https://github.com/osmandapp/Osmand"},{"original_method":"public KBArticle updateKBArticle(\n\t\t\tlong userId, long resourcePrimKey, String title, String content,\n\t\t\tString description, String[] sections, String dirName,\n\t\t\tServiceContext serviceContext)\n\t\tthrows PortalException, SystemException {\n\n\t\t// KB article\n\n\t\tUser user = userPersistence.findByPrimaryKey(userId);\n\t\tint version = KBArticleConstants.DEFAULT_VERSION;\n\t\tint status = WorkflowConstants.STATUS_DRAFT;\n\n\t\tvalidate(title, content);\n\n\t\tKBArticle oldKBArticle = getLatestKBArticle(\n\t\t\tresourcePrimKey, WorkflowConstants.STATUS_ANY);\n\n\t\tlong oldResourcePrimKey = oldKBArticle.getResourcePrimKey();\n\t\tlong oldGroupId = oldKBArticle.getGroupId();\n\t\tDate oldCreateDate = oldKBArticle.getCreateDate();\n\t\tlong oldRootResourcePrimKey = oldKBArticle.getRootResourcePrimKey();\n\t\tlong oldParentResourcePrimKey = oldKBArticle.getParentResourcePrimKey();\n\t\tint oldVersion = oldKBArticle.getVersion();\n\t\tdouble oldPriority = oldKBArticle.getPriority();\n\t\tint oldViewCount = oldKBArticle.getViewCount();\n\t\tint oldStatus = oldKBArticle.getStatus();\n\n\t\tKBArticle kbArticle = null;\n\n\t\tif (oldStatus == WorkflowConstants.STATUS_APPROVED) {\n\t\t\tlong kbArticleId = counterLocalService.increment();\n\n\t\t\tkbArticle = kbArticlePersistence.create(kbArticleId);\n\n\t\t\tkbArticle.setCompanyId(user.getCompanyId());\n\t\t\tkbArticle.setUserId(user.getUserId());\n\t\t\tkbArticle.setUserName(user.getFullName());\n\n\t\t\tversion = oldVersion + 1;\n\t\t}\n\t\telse {\n\t\t\tkbArticle = oldKBArticle;\n\t\t\tversion = oldVersion;\n\t\t}\n\n\t\tif (oldStatus == WorkflowConstants.STATUS_PENDING) {\n\t\t\tstatus = WorkflowConstants.STATUS_PENDING;\n\t\t}\n\n\t\tkbArticle.setResourcePrimKey(oldResourcePrimKey);\n\t\tkbArticle.setGroupId(oldGroupId);\n\t\tkbArticle.setCreateDate(oldCreateDate);\n\t\tkbArticle.setModifiedDate(serviceContext.getModifiedDate(null));\n\t\tkbArticle.setRootResourcePrimKey(oldRootResourcePrimKey);\n\t\tkbArticle.setParentResourcePrimKey(oldParentResourcePrimKey);\n\t\tkbArticle.setVersion(version);\n\t\tkbArticle.setTitle(title);\n\t\tkbArticle.setContent(content);\n\t\tkbArticle.setDescription(description);\n\t\tkbArticle.setPriority(oldPriority);\n\t\tkbArticle.setSections(\n\t\t\tStringUtil.merge(AdminUtil.escapeSections(sections)));\n\t\tkbArticle.setViewCount(oldViewCount);\n\t\tkbArticle.setLatest(true);\n\t\tkbArticle.setMain(false);\n\t\tkbArticle.setStatus(status);\n\n\t\tkbArticlePersistence.update(kbArticle);\n\n\t\tif (oldVersion < version) {\n\t\t\toldKBArticle.setLatest(false);\n\n\t\t\tkbArticlePersistence.update(oldKBArticle);\n\t\t}\n\n\t\t// Resources\n\n\t\tif ((serviceContext.getGroupPermissions() != null) ||\n\t\t\t(serviceContext.getGuestPermissions() != null)) {\n\n\t\t\tupdateKBArticleResources(\n\t\t\t\tkbArticle, serviceContext.getGroupPermissions(),\n\t\t\t\tserviceContext.getGuestPermissions());\n\t\t}\n\n\t\t// Asset\n\n\t\tupdateKBArticleAsset(\n\t\t\tuserId, kbArticle, serviceContext.getAssetCategoryIds(),\n\t\t\tserviceContext.getAssetTagNames());\n\n\t\t// Attachments\n\n\t\tupdateKBArticleAttachments(\n\t\t\tuserId, kbArticle, oldVersion, dirName, serviceContext);\n\n\t\t// Workflow\n\n\t\tWorkflowHandlerRegistryUtil.startWorkflowInstance(\n\t\t\tuser.getCompanyId(), kbArticle.getGroupId(), userId,\n\t\t\tKBArticle.class.getName(), resourcePrimKey, kbArticle,\n\t\t\tserviceContext);\n\n\t\treturn kbArticle;\n\t}","id":50618,"modified_method":"public KBArticle updateKBArticle(\n\t\t\tlong userId, long resourcePrimKey, String title, String content,\n\t\t\tString description, String[] sections, String dirName,\n\t\t\tServiceContext serviceContext)\n\t\tthrows PortalException, SystemException {\n\n\t\t// KB article\n\n\t\tUser user = userPersistence.findByPrimaryKey(userId);\n\t\tint version = KBArticleConstants.DEFAULT_VERSION;\n\t\tint status = WorkflowConstants.STATUS_DRAFT;\n\n\t\tvalidate(title, content);\n\n\t\tKBArticle oldKBArticle = getLatestKBArticle(\n\t\t\tresourcePrimKey, WorkflowConstants.STATUS_ANY);\n\n\t\tint oldVersion = oldKBArticle.getVersion();\n\t\tint oldStatus = oldKBArticle.getStatus();\n\n\t\tKBArticle kbArticle = null;\n\n\t\tif (oldStatus == WorkflowConstants.STATUS_APPROVED) {\n\t\t\tlong kbArticleId = counterLocalService.increment();\n\n\t\t\tkbArticle = kbArticlePersistence.create(kbArticleId);\n\n\t\t\tkbArticle.setResourcePrimKey(oldKBArticle.getResourcePrimKey());\n\t\t\tkbArticle.setGroupId(oldKBArticle.getGroupId());\n\t\t\tkbArticle.setCompanyId(user.getCompanyId());\n\t\t\tkbArticle.setUserId(user.getUserId());\n\t\t\tkbArticle.setUserName(user.getFullName());\n\t\t\tkbArticle.setCreateDate(oldKBArticle.getCreateDate());\n\t\t\tkbArticle.setRootResourcePrimKey(\n\t\t\t\toldKBArticle.getRootResourcePrimKey());\n\t\t\tkbArticle.setParentResourcePrimKey(\n\t\t\t\toldKBArticle.getParentResourcePrimKey());\n\t\t\tkbArticle.setPriority(oldKBArticle.getPriority());\n\t\t\tkbArticle.setViewCount(oldKBArticle.getViewCount());\n\n\t\t\tversion = oldVersion + 1;\n\t\t}\n\t\telse {\n\t\t\tkbArticle = oldKBArticle;\n\t\t\tversion = oldVersion;\n\t\t}\n\n\t\tif (oldStatus == WorkflowConstants.STATUS_PENDING) {\n\t\t\tstatus = WorkflowConstants.STATUS_PENDING;\n\t\t}\n\n\t\tkbArticle.setModifiedDate(serviceContext.getModifiedDate(null));\n\t\tkbArticle.setVersion(version);\n\t\tkbArticle.setTitle(title);\n\t\tkbArticle.setContent(content);\n\t\tkbArticle.setDescription(description);\n\t\tkbArticle.setSections(\n\t\t\tStringUtil.merge(AdminUtil.escapeSections(sections)));\n\t\tkbArticle.setLatest(true);\n\t\tkbArticle.setMain(false);\n\t\tkbArticle.setStatus(status);\n\n\t\tkbArticlePersistence.update(kbArticle);\n\n\t\tif (oldVersion < version) {\n\t\t\toldKBArticle.setLatest(false);\n\n\t\t\tkbArticlePersistence.update(oldKBArticle);\n\t\t}\n\n\t\t// Resources\n\n\t\tif ((serviceContext.getGroupPermissions() != null) ||\n\t\t\t(serviceContext.getGuestPermissions() != null)) {\n\n\t\t\tupdateKBArticleResources(\n\t\t\t\tkbArticle, serviceContext.getGroupPermissions(),\n\t\t\t\tserviceContext.getGuestPermissions());\n\t\t}\n\n\t\t// Asset\n\n\t\tupdateKBArticleAsset(\n\t\t\tuserId, kbArticle, serviceContext.getAssetCategoryIds(),\n\t\t\tserviceContext.getAssetTagNames());\n\n\t\t// Attachments\n\n\t\tupdateKBArticleAttachments(\n\t\t\tuserId, kbArticle, oldVersion, dirName, serviceContext);\n\n\t\t// Workflow\n\n\t\tWorkflowHandlerRegistryUtil.startWorkflowInstance(\n\t\t\tuser.getCompanyId(), kbArticle.getGroupId(), userId,\n\t\t\tKBArticle.class.getName(), resourcePrimKey, kbArticle,\n\t\t\tserviceContext);\n\n\t\treturn kbArticle;\n\t}","commit_id":"9920338c1888f76c5ffdffa75d434e886230fa56","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"/**\n   * Reloads LDAP Context Source and depending objects if properties were changed\n   * @return corresponding LDAP authentication provider\n   */\n  private LdapAuthenticationProvider loadLdapAuthenticationProvider() {\n    if (reloadLdapServerProperties()) {\n      log.info(\"LDAP Properties changed - rebuilding Context\");\n      DefaultSpringSecurityContextSource springSecurityContextSource =\n              new DefaultSpringSecurityContextSource(ldapServerProperties.get().getLdapUrls(), ldapServerProperties.get().getBaseDN());\n\n      if (!ldapServerProperties.get().isAnonymousBind()) {\n        springSecurityContextSource.setUserDn(ldapServerProperties.get().getManagerDn());\n        springSecurityContextSource.setPassword(ldapServerProperties.get().getManagerPassword());\n      }\n\n      try {\n        springSecurityContextSource.afterPropertiesSet();\n      } catch (Exception e) {\n        log.error(\"LDAP Context Source not loaded \", e);\n        throw new UsernameNotFoundException(\"LDAP Context Source not loaded\", e);\n      }\n\n      //TODO change properties\n      String userSearchBase = ldapServerProperties.get().getUserSearchBase();\n      String userSearchFilter = ldapServerProperties.get().getUserSearchFilter();\n\n      FilterBasedLdapUserSearch userSearch = new FilterBasedLdapUserSearch(userSearchBase, userSearchFilter, springSecurityContextSource);\n\n      BindAuthenticator bindAuthenticator = new BindAuthenticator(springSecurityContextSource);\n      bindAuthenticator.setUserSearch(userSearch);\n\n      LdapAuthenticationProvider authenticationProvider = new LdapAuthenticationProvider(bindAuthenticator, authoritiesPopulator);\n\n      providerThreadLocal.set(authenticationProvider);\n    }\n\n    return providerThreadLocal.get();\n  }","id":50619,"modified_method":"/**\n   * Reloads LDAP Context Source and depending objects if properties were changed\n   * @return corresponding LDAP authentication provider\n   */\n  private LdapAuthenticationProvider loadLdapAuthenticationProvider() {\n    if (reloadLdapServerProperties()) {\n      log.info(\"LDAP Properties changed - rebuilding Context\");\n      DefaultSpringSecurityContextSource springSecurityContextSource =\n              new DefaultSpringSecurityContextSource(ldapServerProperties.get().getLdapUrls(), ldapServerProperties.get().getBaseDN());\n\n      if (!ldapServerProperties.get().isAnonymousBind()) {\n        springSecurityContextSource.setUserDn(ldapServerProperties.get().getManagerDn());\n        springSecurityContextSource.setPassword(ldapServerProperties.get().getManagerPassword());\n      }\n\n      try {\n        springSecurityContextSource.afterPropertiesSet();\n      } catch (Exception e) {\n        log.error(\"LDAP Context Source not loaded \", e);\n        throw new UsernameNotFoundException(\"LDAP Context Source not loaded\", e);\n      }\n\n      //TODO change properties\n      String userSearchBase = ldapServerProperties.get().getUserSearchBase();\n      String userSearchFilter = ldapServerProperties.get().getUserSearchFilter();\n\n      FilterBasedLdapUserSearch userSearch = new FilterBasedLdapUserSearch(userSearchBase, userSearchFilter, springSecurityContextSource);\n\n      AmbariLdapBindAuthenticator bindAuthenticator = new AmbariLdapBindAuthenticator(springSecurityContextSource, configuration);\n      bindAuthenticator.setUserSearch(userSearch);\n\n      LdapAuthenticationProvider authenticationProvider = new LdapAuthenticationProvider(bindAuthenticator, authoritiesPopulator);\n\n      providerThreadLocal.set(authenticationProvider);\n    }\n\n    return providerThreadLocal.get();\n  }","commit_id":"4a75c484cf7eaabb28128fc3447854a04f30bba9","url":"https://github.com/apache/ambari"},{"original_method":"@Override\n  @Transactional\n  public Collection<? extends GrantedAuthority> getGrantedAuthorities(DirContextOperations userData, String username) {\n    log.info(\"Get roles for user \" + username + \" from local DB\");\n\n    UserEntity user = null;\n\n    user = userDAO.findLdapUserByName(username);\n\n    if (user == null) {\n      log.info(\"User \" + username + \" not present in local DB - creating\");\n\n      UserEntity newUser = new UserEntity();\n      newUser.setLdapUser(true);\n      newUser.setUserName(username);\n\n      String roleName = (configuration.getConfigsMap().get(Configuration.USER_ROLE_NAME_KEY));\n      log.info(\"Using default role name \" + roleName);\n\n      RoleEntity role = roleDAO.findByName(roleName);\n\n      if (role == null) {\n        log.info(\"Role \" + roleName + \" not present in local DB - creating\");\n        role = new RoleEntity();\n        role.setRoleName(roleName);\n        roleDAO.create(role);\n        role = roleDAO.findByName(role.getRoleName());\n      }\n\n      userDAO.create(newUser);\n\n      user = userDAO.findLdapUserByName(newUser.getUserName());\n\n      user.getRoleEntities().add(role);\n      role.getUserEntities().add(user);\n      roleDAO.merge(role);\n      userDAO.merge(user);\n    }\n\n    return authorizationHelper.convertRolesToAuthorities(user.getRoleEntities());\n  }","id":50620,"modified_method":"@Override\n  @Transactional\n  public Collection<? extends GrantedAuthority> getGrantedAuthorities(DirContextOperations userData, String username) {\n    log.info(\"Get roles for user \" + username + \" from local DB\");\n\n    UserEntity user = null;\n\n    user = userDAO.findLdapUserByName(username);\n\n    if (user == null) {\n      log.info(\"User \" + username + \" not present in local DB - creating\");\n\n      UserEntity newUser = new UserEntity();\n      newUser.setLdapUser(true);\n      newUser.setUserName(username);\n\n      //Adding a default \"user\" role\n      addRole(newUser, configuration.getConfigsMap().\n          get(Configuration.USER_ROLE_NAME_KEY));\n    }\n\n    user = userDAO.findLdapUserByName(username);\n\n    //Adding an \"admin\" user role if user is a member of ambari administrators\n    // LDAP group\n    Boolean isAdmin =\n        (Boolean) userData.getObjectAttribute(AMBARI_ADMIN_LDAP_ATTRIBUTE_KEY);\n    if ((isAdmin != null) && isAdmin) {\n      log.info(\"Adding admin role to LDAP user \" + username);\n      addRole(user, configuration.getConfigsMap().\n          get(Configuration.ADMIN_ROLE_NAME_KEY));\n    } else {\n      removeRole(user, configuration.getConfigsMap().\n          get(Configuration.ADMIN_ROLE_NAME_KEY));\n    }\n\n    user = userDAO.findLdapUserByName(username);\n    return authorizationHelper.convertRolesToAuthorities(user.getRoleEntities());\n  }","commit_id":"4a75c484cf7eaabb28128fc3447854a04f30bba9","url":"https://github.com/apache/ambari"},{"original_method":"/**\n   * Gets parameters of LDAP server to connect to\n   * @return LdapServerProperties object representing connection parameters\n   */\n  public LdapServerProperties getLdapServerProperties() {\n    LdapServerProperties ldapServerProperties = new LdapServerProperties();\n\n    ldapServerProperties.setPrimaryUrl(properties.getProperty(\n        LDAP_PRIMARY_URL_KEY, LDAP_PRIMARY_URL_DEFAULT));\n    ldapServerProperties.setSecondaryUrl(properties.getProperty(\n        LDAP_SECONDARY_URL_KEY));\n    ldapServerProperties.setUseSsl(\"true\".equalsIgnoreCase(properties.\n        getProperty(LDAP_USE_SSL_KEY)));\n    ldapServerProperties.setAnonymousBind(\"true\".\n        equalsIgnoreCase(properties.getProperty(LDAP_BIND_ANONYMOUSLY_KEY,\n            LDAP_BIND_ANONYMOUSLY_DEFAULT)));\n    ldapServerProperties.setManagerDn(properties.getProperty(\n        LDAP_MANAGER_DN_KEY));\n    ldapServerProperties.setManagerPassword(properties.getProperty(\n        LDAP_MANAGER_PASSWORD_KEY));\n    ldapServerProperties.setBaseDN(properties.getProperty\n        (LDAP_BASE_DN_KEY, LDAP_BASE_DN_DEFAULT));\n    ldapServerProperties.setUsernameAttribute(properties.\n        getProperty(LDAP_USERNAME_ATTRIBUTE_KEY, LDAP_USERNAME_ATTRIBUTE_DEFAULT));\n\n    return ldapServerProperties;\n  }","id":50621,"modified_method":"/**\n   * Gets parameters of LDAP server to connect to\n   * @return LdapServerProperties object representing connection parameters\n   */\n  public LdapServerProperties getLdapServerProperties() {\n    LdapServerProperties ldapServerProperties = new LdapServerProperties();\n\n    ldapServerProperties.setPrimaryUrl(properties.getProperty(\n        LDAP_PRIMARY_URL_KEY, LDAP_PRIMARY_URL_DEFAULT));\n    ldapServerProperties.setSecondaryUrl(properties.getProperty(\n        LDAP_SECONDARY_URL_KEY));\n    ldapServerProperties.setUseSsl(\"true\".equalsIgnoreCase(properties.\n        getProperty(LDAP_USE_SSL_KEY)));\n    ldapServerProperties.setAnonymousBind(\"true\".\n        equalsIgnoreCase(properties.getProperty(LDAP_BIND_ANONYMOUSLY_KEY,\n            LDAP_BIND_ANONYMOUSLY_DEFAULT)));\n    ldapServerProperties.setManagerDn(properties.getProperty(\n        LDAP_MANAGER_DN_KEY));\n    ldapServerProperties.setManagerPassword(properties.getProperty(\n        LDAP_MANAGER_PASSWORD_KEY));\n    ldapServerProperties.setBaseDN(properties.getProperty\n        (LDAP_BASE_DN_KEY, LDAP_BASE_DN_DEFAULT));\n    ldapServerProperties.setUsernameAttribute(properties.\n        getProperty(LDAP_USERNAME_ATTRIBUTE_KEY, LDAP_USERNAME_ATTRIBUTE_DEFAULT));\n    ldapServerProperties.setGroupBase(properties.\n        getProperty(LDAP_GROUP_BASE_KEY, LDAP_GROUP_BASE_DEFAULT));\n    ldapServerProperties.setGroupObjectClass(properties.\n        getProperty(LDAP_GROUP_OBJECT_CLASS_KEY, LDAP_GROUP_OBJECT_CLASS_DEFAULT));\n    ldapServerProperties.setGroupMembershipAttr(properties.getProperty(\n        LDAP_GROUP_MEMEBERSHIP_ATTR_KEY, LDAP_GROUP_MEMBERSHIP_ATTR_DEFAULT));\n    ldapServerProperties.setGroupNamingAttr(properties.\n        getProperty(LDAP_GROUP_NAMING_ATTR_KEY, LDAP_GROUP_NAMING_ATTR_DEFAULT));\n    ldapServerProperties.setAdminGroupMappingRules(properties.getProperty(\n        LDAP_ADMIN_GROUP_MAPPING_RULES_KEY, LDAP_ADMIN_GROUP_MAPPING_RULES_DEFAULT));\n    ldapServerProperties.setGroupSearchFilter(properties.getProperty(\n        LDAP_GROUP_SEARCH_FILTER_KEY, LDAP_GROUP_SEARCH_FILTER_DEFAULT));\n\n    return ldapServerProperties;\n  }","commit_id":"4a75c484cf7eaabb28128fc3447854a04f30bba9","url":"https://github.com/apache/ambari"},{"original_method":"@Override\n  public int hashCode() {\n    int result = primaryUrl != null ? primaryUrl.hashCode() : 0;\n    result = 31 * result + (secondaryUrl != null ? secondaryUrl.hashCode() : 0);\n    result = 31 * result + (useSsl ? 1 : 0);\n    result = 31 * result + (anonymousBind ? 1 : 0);\n    result = 31 * result + (managerDn != null ? managerDn.hashCode() : 0);\n    result = 31 * result + (managerPassword != null ? managerPassword.hashCode() : 0);\n    result = 31 * result + (baseDN != null ? baseDN.hashCode() : 0);\n    result = 31 * result + (userSearchBase != null ? userSearchBase.hashCode() : 0);\n    result = 31 * result + (usernameAttribute != null ? usernameAttribute.hashCode() : 0);\n    return result;\n  }","id":50622,"modified_method":"@Override\n  public int hashCode() {\n    int result = primaryUrl != null ? primaryUrl.hashCode() : 0;\n    result = 31 * result + (secondaryUrl != null ? secondaryUrl.hashCode() : 0);\n    result = 31 * result + (useSsl ? 1 : 0);\n    result = 31 * result + (anonymousBind ? 1 : 0);\n    result = 31 * result + (managerDn != null ? managerDn.hashCode() : 0);\n    result = 31 * result + (managerPassword != null ? managerPassword.hashCode() : 0);\n    result = 31 * result + (baseDN != null ? baseDN.hashCode() : 0);\n    result = 31 * result + (userSearchBase != null ? userSearchBase.hashCode() : 0);\n    result = 31 * result + (usernameAttribute != null ? usernameAttribute.hashCode() : 0);\n    result = 31 * result + (groupBase != null ? groupBase.hashCode() : 0);\n    result = 31 * result + (groupObjectClass != null ? groupObjectClass.hashCode() : 0);\n    result = 31 * result + (groupMembershipAttr != null ? groupMembershipAttr.hashCode() : 0);\n    result = 31 * result + (groupNamingAttr != null ? groupNamingAttr.hashCode() : 0);\n    result = 31 * result + (adminGroupMappingRules != null ? adminGroupMappingRules.hashCode() : 0);\n    result = 31 * result + (groupSearchFilter != null ? groupSearchFilter.hashCode() : 0);\n    return result;\n  }","commit_id":"4a75c484cf7eaabb28128fc3447854a04f30bba9","url":"https://github.com/apache/ambari"},{"original_method":"@Override\n  public boolean equals(Object obj) {\n    if (this == obj) return true;\n    if (obj == null || getClass() != obj.getClass()) return false;\n\n    LdapServerProperties that = (LdapServerProperties) obj;\n\n    if (primaryUrl != null ? !primaryUrl.equals(that.primaryUrl) : that.primaryUrl != null) return false;\n    if (secondaryUrl != null ? !secondaryUrl.equals(that.secondaryUrl) : that.secondaryUrl != null) return false;\n    if (useSsl!=that.useSsl) return false;\n    if (anonymousBind!=that.anonymousBind) return false;\n    if (managerDn != null ? !managerDn.equals(that.managerDn) : that.managerDn != null) return false;\n    if (managerPassword != null ? !managerPassword.equals(that.managerPassword) : that.managerPassword != null)\n      return false;\n    if (baseDN != null ? !baseDN.equals(that.baseDN) : that.baseDN != null) return false;\n    if (userSearchBase != null ? !userSearchBase.equals(that.userSearchBase) : that.userSearchBase != null)\n      return false;\n    if (usernameAttribute != null ? !usernameAttribute.equals(that.usernameAttribute) : that.usernameAttribute != null)\n      return false;\n\n    return true;\n  }","id":50623,"modified_method":"@Override\n  public boolean equals(Object obj) {\n    if (this == obj) return true;\n    if (obj == null || getClass() != obj.getClass()) return false;\n\n    LdapServerProperties that = (LdapServerProperties) obj;\n\n    if (primaryUrl != null ? !primaryUrl.equals(that.primaryUrl) : that.primaryUrl != null) return false;\n    if (secondaryUrl != null ? !secondaryUrl.equals(that.secondaryUrl) : that.secondaryUrl != null) return false;\n    if (useSsl!=that.useSsl) return false;\n    if (anonymousBind!=that.anonymousBind) return false;\n    if (managerDn != null ? !managerDn.equals(that.managerDn) : that.managerDn != null) return false;\n    if (managerPassword != null ? !managerPassword.equals(that.managerPassword) : that.managerPassword != null)\n      return false;\n    if (baseDN != null ? !baseDN.equals(that.baseDN) : that.baseDN != null) return false;\n    if (userSearchBase != null ? !userSearchBase.equals(that.userSearchBase) : that.userSearchBase != null)\n      return false;\n    if (usernameAttribute != null ? !usernameAttribute.equals(that.usernameAttribute) : that.usernameAttribute != null)\n      return false;\n    if (groupBase != null ? !groupBase.equals(that.groupBase) :\n        that.groupBase != null) return false;\n    if (groupObjectClass != null ? !groupObjectClass.equals(that.groupObjectClass) :\n        that.groupObjectClass != null) return false;\n    if (groupMembershipAttr != null ? !groupMembershipAttr.equals(\n        that.groupMembershipAttr) : that.groupMembershipAttr != null) return false;\n    if (groupNamingAttr != null ? !groupNamingAttr.equals(that.groupNamingAttr) :\n        that.groupNamingAttr != null) return false;\n    if (adminGroupMappingRules != null ? !adminGroupMappingRules.equals(\n        that.adminGroupMappingRules) : that.adminGroupMappingRules != null) return false;\n    if (groupSearchFilter != null ? !groupSearchFilter.equals(\n        that.groupSearchFilter) : that.groupSearchFilter != null) return false;\n\n    return true;\n  }","commit_id":"4a75c484cf7eaabb28128fc3447854a04f30bba9","url":"https://github.com/apache/ambari"},{"original_method":"@Transactional\n  public synchronized void addRoleToUser(User user, String role)\n      throws AmbariException {\n\n    UserEntity userEntity = userDAO.findByPK(user.getUserId());\n    if (userEntity == null) {\n      throw new AmbariException(\"User \" + user + \" doesn't exist\");\n    }\n\n    RoleEntity roleEntity = roleDAO.findByName(role);\n    if (roleEntity == null) {\n      LOG.warn(\"Trying to add user to non-existent role\"\n          + \", user=\" + user.getUserName()\n          + \", role=\" + role);\n      throw new AmbariException(\"Role \" + role + \" doesn't exist\");\n    }\n\n    if (!userEntity.getRoleEntities().contains(roleEntity)) {\n      userEntity.getRoleEntities().add(roleEntity);\n      roleEntity.getUserEntities().add(userEntity);\n      userDAO.merge(userEntity);\n      roleDAO.merge(roleEntity);\n    } else {\n      throw new AmbariException(\"User \" + user + \" already owns role \" + role);\n    }\n\n  }","id":50624,"modified_method":"@Transactional\n  public synchronized void addRoleToUser(User user, String role)\n      throws AmbariException {\n\n    if (userDAO.findLdapUserByName(user.getUserName()) != null) {\n      LOG.warn(\"Trying to add a role to the LDAP user\"\n          + \", user=\" + user.getUserName());\n      throw new AmbariException(\"Roles are not editable for LDAP users\");\n    }\n\n    UserEntity userEntity = userDAO.findByPK(user.getUserId());\n    if (userEntity == null) {\n      throw new AmbariException(\"User \" + user + \" doesn't exist\");\n    }\n\n    RoleEntity roleEntity = roleDAO.findByName(role);\n    if (roleEntity == null) {\n      LOG.warn(\"Trying to add user to non-existent role\"\n          + \", user=\" + user.getUserName()\n          + \", role=\" + role);\n      throw new AmbariException(\"Role \" + role + \" doesn't exist\");\n    }\n\n    if (!userEntity.getRoleEntities().contains(roleEntity)) {\n      userEntity.getRoleEntities().add(roleEntity);\n      roleEntity.getUserEntities().add(userEntity);\n      userDAO.merge(userEntity);\n      roleDAO.merge(roleEntity);\n    } else {\n      throw new AmbariException(\"User \" + user + \" already owns role \" + role);\n    }\n\n  }","commit_id":"4a75c484cf7eaabb28128fc3447854a04f30bba9","url":"https://github.com/apache/ambari"},{"original_method":"@Transactional\n  public synchronized void removeRoleFromUser(User user, String role)\n      throws AmbariException {\n    UserEntity userEntity = userDAO.findByPK(user.getUserId());\n    if (userEntity == null) {\n      throw new AmbariException(\"User \" + user + \" doesn't exist\");\n    }\n\n    RoleEntity roleEntity = roleDAO.findByName(role);\n    if (roleEntity == null) {\n      throw new AmbariException(\"Role \" + role + \" doesn't exist\");\n    }\n\n    if (userEntity.getRoleEntities().contains(roleEntity)) {\n      userEntity.getRoleEntities().remove(roleEntity);\n      roleEntity.getUserEntities().remove(userEntity);\n      userDAO.merge(userEntity);\n      roleDAO.merge(roleEntity);\n    } else {\n      throw new AmbariException(\"User \" + user + \" doesn't own role \" + role);\n    }\n\n  }","id":50625,"modified_method":"@Transactional\n  public synchronized void removeRoleFromUser(User user, String role)\n      throws AmbariException {\n\n    if (userDAO.findLdapUserByName(user.getUserName()) != null) {\n      LOG.warn(\"Trying to add a role to the LDAP user\"\n          + \", user=\" + user.getUserName());\n      throw new AmbariException(\"Roles are not editable for LDAP users\");\n    }\n\n    UserEntity userEntity = userDAO.findByPK(user.getUserId());\n    if (userEntity == null) {\n      throw new AmbariException(\"User \" + user + \" doesn't exist\");\n    }\n\n    RoleEntity roleEntity = roleDAO.findByName(role);\n    if (roleEntity == null) {\n      throw new AmbariException(\"Role \" + role + \" doesn't exist\");\n    }\n\n    if (userEntity.getRoleEntities().contains(roleEntity)) {\n      userEntity.getRoleEntities().remove(roleEntity);\n      roleEntity.getUserEntities().remove(userEntity);\n      userDAO.merge(userEntity);\n      roleDAO.merge(roleEntity);\n    } else {\n      throw new AmbariException(\"User \" + user + \" doesn't own role \" + role);\n    }\n\n  }","commit_id":"4a75c484cf7eaabb28128fc3447854a04f30bba9","url":"https://github.com/apache/ambari"},{"original_method":"/**\n   * Modifies password of local user\n   * @throws AmbariException\n   */\n  public synchronized void modifyPassword(String userName, String currentUserPassword, String newPassword) throws AmbariException {\n\n    SecurityContext securityContext = SecurityContextHolder.getContext();\n    String currentUserName = securityContext.getAuthentication().getName();\n    if (currentUserName == null) {\n      throw new AmbariException(\"Authentication required. Please sign in.\");\n    }\n\n    UserEntity currentUserEntity = userDAO.findLocalUserByName(currentUserName);\n    UserEntity userEntity = userDAO.findLocalUserByName(userName);\n\n    if ((userEntity != null) && (currentUserEntity != null)) {\n      if (passwordEncoder.matches(currentUserPassword, currentUserEntity.getUserPassword())) {\n        userEntity.setUserPassword(passwordEncoder.encode(newPassword));\n        userDAO.merge(userEntity);\n      } else {\n        throw new AmbariException(\"Wrong password provided\");\n      }\n\n    } else {\n      userEntity = userDAO.findLdapUserByName(userName);\n      if (userEntity != null) {\n        throw new AmbariException(\"Password of LDAP user cannot be modified\");\n      } else {\n        throw new AmbariException(\"User \" + userName + \" not found\");\n      }\n    }\n  }","id":50626,"modified_method":"/**\n   * Modifies password of local user\n   * @throws AmbariException\n   */\n  public synchronized void modifyPassword(String userName, String currentUserPassword, String newPassword) throws AmbariException {\n\n    SecurityContext securityContext = SecurityContextHolder.getContext();\n    String currentUserName = securityContext.getAuthentication().getName();\n    if (currentUserName == null) {\n      throw new AmbariException(\"Authentication required. Please sign in.\");\n    }\n\n    UserEntity currentUserEntity = userDAO.findLocalUserByName(currentUserName);\n\n    //Authenticate LDAP admin user\n    boolean isLdapAdmin = false;\n    if (currentUserEntity == null) {\n      currentUserEntity = userDAO.findLdapUserByName(currentUserName);\n      try {\n        ldapAuthenticationProvider.authenticate(\n            new UsernamePasswordAuthenticationToken(currentUserName, currentUserPassword));\n      isLdapAdmin = true;\n      } catch (BadCredentialsException ex) {\n        throw new AmbariException(\"Incorrect password provided for LDAP user \" +\n            currentUserName);\n      }\n    }\n\n    UserEntity userEntity = userDAO.findLocalUserByName(userName);\n\n    if ((userEntity != null) && (currentUserEntity != null)) {\n      if (isLdapAdmin || passwordEncoder.matches(currentUserPassword, currentUserEntity.getUserPassword())) {\n        userEntity.setUserPassword(passwordEncoder.encode(newPassword));\n        userDAO.merge(userEntity);\n      } else {\n        throw new AmbariException(\"Wrong password provided\");\n      }\n\n    } else {\n      userEntity = userDAO.findLdapUserByName(userName);\n      if (userEntity != null) {\n        throw new AmbariException(\"Password of LDAP user cannot be modified\");\n      } else {\n        throw new AmbariException(\"User \" + userName + \" not found\");\n      }\n    }\n  }","commit_id":"4a75c484cf7eaabb28128fc3447854a04f30bba9","url":"https://github.com/apache/ambari"},{"original_method":"public int decompress(byte[] dbuf, int i, int j, byte[] output) throws CompressionOutputSizeException {\n\t\t// Didn't work with Inflater.\n\t\t// FIXME fix sometimes to use Inflater - format issue?\n\t\tByteArrayInputStream bais = new ByteArrayInputStream(dbuf, i, j);\n\t\tByteArrayOutputStream baos = new ByteArrayOutputStream(output.length);\n\t\tint bytes = 0;\n\t\ttry {\n\t\t\tdecompress(bais, baos, output.length, -1);\n\t\t} catch (IOException e) {\n\t\t\t// Impossible\n\t\t\tthrow new Error(\"Got IOException: \" + e.getMessage(), e);\n\t\t}\n\t\tbyte[] buf = baos.toByteArray();\n\t\tSystem.arraycopy(buf, 0, output, 0, bytes);\n\t\treturn bytes;\n\t}","id":50627,"modified_method":"public int decompress(byte[] dbuf, int i, int j, byte[] output) throws CompressionOutputSizeException {\n\t\t// Didn't work with Inflater.\n\t\t// FIXME fix sometimes to use Inflater - format issue?\n\t\tByteArrayInputStream bais = new ByteArrayInputStream(dbuf, i, j);\n\t\tByteArrayOutputStream baos = new ByteArrayOutputStream(output.length);\n\t\tint bytes = 0;\n\t\ttry {\n\t\t\tdecompress(bais, baos, output.length, -1);\n\t\t\tbytes = baos.size();\n\t\t} catch (IOException e) {\n\t\t\t// Impossible\n\t\t\tthrow new Error(\"Got IOException: \" + e.getMessage(), e);\n\t\t}\n\t\tbyte[] buf = baos.toByteArray();\n\t\tSystem.arraycopy(buf, 0, output, 0, bytes);\n\t\treturn bytes;\n\t}","commit_id":"e27a872923c04e4966e80afdaffc17b613c2067e","url":"https://github.com/freenet/fred"},{"original_method":"public void testByteArrayDecompress() {\n\t\t\n        // build 5k array \n\t\tbyte[] originalUncompressedData = new byte[5 * 1024];\n\t\tfor(int i = 0; i < originalUncompressedData.length; i++) {\n\t\t\toriginalUncompressedData[i] = 1;\n\t\t}\n\t\t\n\t\tbyte[] compressedData = doCompress(originalUncompressedData);\n\t\tbyte[] outUncompressedData = new byte[5 * 1024];\n\t\t\n\t\tint writtenBytes = 0;\n\t\t\n\t\ttry {\n\t\t\twrittenBytes = Compressor.COMPRESSOR_TYPE.BZIP2.decompress(compressedData, 0, compressedData.length, outUncompressedData);\n\t\t} catch (CompressionOutputSizeException e) {\n\t\t\tfail(\"unexpected exception thrown : \" + e.getMessage());\n\t\t}\n\t\t\n\t\tassertEquals(writtenBytes, originalUncompressedData.length);\n\t\tassertEquals(originalUncompressedData.length, outUncompressedData.length);\n\t\t\n        // check each byte is exactly as expected\n\t\tfor (int i = 0; i < outUncompressedData.length; i++) {\n\t\t\tassertEquals(originalUncompressedData[i], outUncompressedData[i]);\n\t\t}\n\t}","id":50628,"modified_method":"public void testByteArrayDecompress() {\n\t\t\n        // build 5k array \n\t\tbyte[] originalUncompressedData = new byte[5 * 1024];\n\t\tfor(int i = 0; i < originalUncompressedData.length; i++) {\n\t\t\toriginalUncompressedData[i] = 1;\n\t\t}\n\t\t\n\t\tbyte[] compressedData = doCompress(originalUncompressedData);\n\t\tbyte[] outUncompressedData = new byte[5 * 1024];\n\t\t\n\t\tint writtenBytes = 0;\n\t\t\n\t\ttry {\n\t\t\twrittenBytes = Compressor.COMPRESSOR_TYPE.BZIP2.decompress(compressedData, 0, compressedData.length, outUncompressedData);\n\t\t} catch (CompressionOutputSizeException e) {\n\t\t\tfail(\"unexpected exception thrown : \" + e.getMessage());\n\t\t}\n\n\t\tassertEquals(originalUncompressedData.length, writtenBytes);\n\t\tassertEquals(originalUncompressedData.length, outUncompressedData.length);\n\t\t\n        // check each byte is exactly as expected\n\t\tfor (int i = 0; i < outUncompressedData.length; i++) {\n\t\t\tassertEquals(originalUncompressedData[i], outUncompressedData[i]);\n\t\t}\n\t}","commit_id":"e27a872923c04e4966e80afdaffc17b613c2067e","url":"https://github.com/freenet/fred"},{"original_method":"private byte[] doBucketDecompress(byte[] compressedData) {\n\n\t\tBucket inBucket = new ArrayBucket(compressedData);\n\t\tBucketFactory factory = new ArrayBucketFactory();\n\t\tBucket outBucket = null;\n\n\t\ttry {\n\t\t\toutBucket = Compressor.COMPRESSOR_TYPE.BZIP2.decompress(inBucket, factory, 32768, 32768 * 2, null);\n\t\t} catch (IOException e) {\n\t\t\tfail(\"unexpected exception thrown : \" + e.getMessage());\n\t\t} catch (CompressionOutputSizeException e) {\n\t\t\tfail(\"unexpected exception thrown : \" + e.getMessage());\n\t\t}\n\n\t\tInputStream in = null;\n\n\t\ttry {\n\t\t\tin = outBucket.getInputStream();\n\t\t} catch (IOException e1) {\n\t\t\tfail(\"unexpected exception thrown : \" + e1.getMessage());\n\t\t}\n\t\tlong size = outBucket.size();\n\t\tbyte[] outBuf = new byte[(int) size];\n\n\t\ttry {\n\t\t\tin.read(outBuf);\n\t\t} catch (IOException e) {\n\t\t\tfail(\"unexpected exception thrown : \" + e.getMessage());\n\t\t}\n\n\t\treturn outBuf;\t\t\n\t}","id":50629,"modified_method":"private byte[] doBucketDecompress(byte[] compressedData) {\n\t\tByteArrayInputStream decompressorInput = new ByteArrayInputStream(compressedData);\n\t\tByteArrayOutputStream decompressorOutput = new ByteArrayOutputStream();\n\n\t\ttry {\n\t\t\tCompressor.COMPRESSOR_TYPE.BZIP2.decompress(decompressorInput, decompressorOutput, 32768, 32768 * 2);\n\t\t} catch (Exception e) {\n\t\t\tfail(\"unexpected exception thrown : \" + e.getMessage());\n\t\t}\n\n\t\tbyte[] outBuf = decompressorOutput.toByteArray();\n\t\ttry {\n\t\t\tdecompressorInput.close();\n\t\t\tdecompressorOutput.close();\n\t\t} catch(IOException e) {\n\t\t\tfail(\"unexpected exception thrown : \"+ e.getMessage());\n\t\t} finally {\n\t\t\tCloser.close(decompressorInput);\n\t\t\tCloser.close(decompressorOutput);\n\t\t}\n\n\t\treturn outBuf;\n\t}","commit_id":"e27a872923c04e4966e80afdaffc17b613c2067e","url":"https://github.com/freenet/fred"},{"original_method":"public void testDecompressException() {\n\t\t\n\t\t// build 5k array\n\t\tbyte[] uncompressedData = new byte[5 * 1024];\n\t\tfor(int i = 0; i < uncompressedData.length; i++) {\n\t\t\tuncompressedData[i] = 1;\n\t\t}\n\t\t\n\t\tbyte[] compressedData = doCompress(uncompressedData);\n\t\t\n\t\tBucket inBucket = new ArrayBucket(compressedData);\n\t\tBucketFactory factory = new ArrayBucketFactory();\n\n\t\ttry {\n\t\t\tCompressor.COMPRESSOR_TYPE.BZIP2.decompress(inBucket, factory, 4096 + 10, 4096 + 20, null);\n\t\t} catch (IOException e) {\n\t\t\tfail(\"unexpected exception thrown : \" + e.getMessage());\n\t\t} catch (CompressionOutputSizeException e) {\n\t\t\t// expect this\n\t\t}\n\t}","id":50630,"modified_method":"public void testDecompressException() {\n\t\t// build 5k array\n\t\tbyte[] uncompressedData = new byte[5 * 1024];\n\t\tfor(int i = 0; i < uncompressedData.length; i++) {\n\t\t\tuncompressedData[i] = 1;\n\t\t}\n\t\t\n\t\tbyte[] compressedData = doCompress(uncompressedData);\n\t\t\n\t\tBucket inBucket = new ArrayBucket(compressedData);\n\t\tNullBucket outBucket = new NullBucket();\n\t\tInputStream decompressorInput = null;\n\t\tOutputStream decompressorOutput = null;\n\n\t\ttry {\n\t\t\tdecompressorInput = inBucket.getInputStream();\n\t\t\tdecompressorOutput = outBucket.getOutputStream();\n\t\t\tCompressor.COMPRESSOR_TYPE.BZIP2.decompress(decompressorInput, decompressorOutput, 4096 + 10, 4096 + 20);\n\t\t\tdecompressorInput.close();\n\t\t\tdecompressorOutput.close();\n\t\t} catch (IOException e) {\n\t\t\tfail(\"unexpected exception thrown : \" + e.getMessage());\n\t\t} catch (CompressionOutputSizeException e) {\n\t\t\t// expect this\n\t\t} finally {\n\t\t\tCloser.close(decompressorInput);\n\t\t\tCloser.close(decompressorOutput);\n\t\t\tinBucket.free();\n\t\t\toutBucket.free();\n\t\t}\n\t}","commit_id":"e27a872923c04e4966e80afdaffc17b613c2067e","url":"https://github.com/freenet/fred"},{"original_method":"public int decompress(byte[] dbuf, int i, int j, byte[] output) throws CompressionOutputSizeException {\n\t\t// Didn't work with Inflater.\n\t\t// FIXME fix sometimes to use Inflater - format issue?\n\t\tByteArrayInputStream bais = new ByteArrayInputStream(dbuf, i, j);\n\t\tByteArrayOutputStream baos = new ByteArrayOutputStream(output.length);\n\t\tint bytes = 0;\n\t\ttry {\n\t\t\tbytes = (int)decompress(bais, baos, output.length, -1);\n\t\t} catch (IOException e) {\n\t\t\t// Impossible\n\t\t\tthrow new Error(\"Got IOException: \" + e.getMessage(), e);\n\t\t}\n\t\tbyte[] buf = baos.toByteArray();\n\t\tSystem.arraycopy(buf, 0, output, 0, bytes);\n\t\treturn bytes;\n\t}","id":50631,"modified_method":"public int decompress(byte[] dbuf, int i, int j, byte[] output) throws CompressionOutputSizeException {\n\t\t// Didn't work with Inflater.\n\t\t// FIXME fix sometimes to use Inflater - format issue?\n\t\tByteArrayInputStream bais = new ByteArrayInputStream(dbuf, i, j);\n\t\tByteArrayOutputStream baos = new ByteArrayOutputStream(output.length);\n\t\tint bytes = 0;\n\t\ttry {\n\t\t\tdecompress(bais, baos, output.length, -1);\n\t\t\tbytes = baos.size();\n\t\t} catch (IOException e) {\n\t\t\t// Impossible\n\t\t\tthrow new Error(\"Got IOException: \" + e.getMessage(), e);\n\t\t}\n\t\tbyte[] buf = baos.toByteArray();\n\t\tSystem.arraycopy(buf, 0, output, 0, bytes);\n\t\treturn bytes;\n\t}","commit_id":"e27a872923c04e4966e80afdaffc17b613c2067e","url":"https://github.com/freenet/fred"},{"original_method":"public void testDecompressException() {\n\t\t\n\t\t// build 5k array\n\t\tbyte[] uncompressedData = new byte[5 * 1024];\n\t\tfor(int i = 0; i < uncompressedData.length; i++) {\n\t\t\tuncompressedData[i] = 1;\n\t\t}\n\t\t\n\t\tbyte[] compressedData = doCompress(uncompressedData);\n\t\t\n\t\tBucket inBucket = new ArrayBucket(compressedData);\n\t\tBucketFactory factory = new ArrayBucketFactory();\n\n\t\ttry {\n\t\t\tCompressor.COMPRESSOR_TYPE.GZIP.decompress(inBucket, factory, 4096 + 10, 4096 + 20, null);\n\t\t} catch (IOException e) {\n\t\t\tfail(\"unexpected exception thrown : \" + e.getMessage());\n\t\t} catch (CompressionOutputSizeException e) {\n\t\t\t// expect this\n\t\t}\n\t}","id":50632,"modified_method":"public void testDecompressException() {\n\t\t// build 5k array\n\t\tbyte[] uncompressedData = new byte[5 * 1024];\n\t\tfor(int i = 0; i < uncompressedData.length; i++) {\n\t\t\tuncompressedData[i] = 1;\n\t\t}\n\t\t\n\t\tbyte[] compressedData = doCompress(uncompressedData);\n\t\t\n\t\tBucket inBucket = new ArrayBucket(compressedData);\n\t\tNullBucket outBucket = new NullBucket();\n\t\tInputStream decompressorInput = null;\n\t\tOutputStream decompressorOutput = null;\n\t\ttry {\n\t\t\tdecompressorInput = inBucket.getInputStream();\n\t\t\tdecompressorOutput = outBucket.getOutputStream();\n\t\t\tCompressor.COMPRESSOR_TYPE.GZIP.decompress(decompressorInput, decompressorOutput, 4096 + 10, 4096 + 20);\n\t\t\tdecompressorInput.close();\n\t\t\tdecompressorOutput.close();\n\t\t} catch (IOException e) {\n\t\t\tfail(\"unexpected exception thrown : \" + e.getMessage());\n\t\t} catch (CompressionOutputSizeException e) {\n\t\t\t// expect this\n\t\t} finally {\n\t\t\tCloser.close(decompressorInput);\n\t\t\tCloser.close(decompressorOutput);\n\t\t\tinBucket.free();\n\t\t\toutBucket.free();\n\t\t}\n\t}","commit_id":"e27a872923c04e4966e80afdaffc17b613c2067e","url":"https://github.com/freenet/fred"},{"original_method":"private byte[] doBucketDecompress(byte[] compressedData) {\n\n\t\tBucket inBucket = new ArrayBucket(compressedData);\n\t\tBucketFactory factory = new ArrayBucketFactory();\n\t\tBucket outBucket = null;\n\n\t\ttry {\n\t\t\toutBucket = Compressor.COMPRESSOR_TYPE.GZIP.decompress(inBucket, factory, 32768, 32768 * 2, null);\n\t\t} catch (IOException e) {\n\t\t\tfail(\"unexpected exception thrown : \" + e.getMessage());\n\t\t} catch (CompressionOutputSizeException e) {\n\t\t\tfail(\"unexpected exception thrown : \" + e.getMessage());\n\t\t}\n\n\t\tInputStream in = null;\n\n\t\ttry {\n\t\t\tin = outBucket.getInputStream();\n\t\t} catch (IOException e1) {\n\t\t\tfail(\"unexpected exception thrown : \" + e1.getMessage());\n\t\t}\n\t\tlong size = outBucket.size();\n\t\tbyte[] outBuf = new byte[(int) size];\n\n\t\ttry {\n\t\t\tin.read(outBuf);\n\t\t} catch (IOException e) {\n\t\t\tfail(\"unexpected exception thrown : \" + e.getMessage());\n\t\t}\n\n\t\treturn outBuf;\t\t\n\t}","id":50633,"modified_method":"private byte[] doBucketDecompress(byte[] compressedData) {\n\t\tByteArrayInputStream decompressorInput = new ByteArrayInputStream(compressedData);\n\t\tByteArrayOutputStream decompressorOutput = new ByteArrayOutputStream();\n\n\t\ttry {\n\t\t\tCompressor.COMPRESSOR_TYPE.GZIP.decompress(decompressorInput, decompressorOutput, 32768, 32768 * 2);\n\t\t} catch (Exception e) {\n\t\t\tfail(\"unexpected exception thrown : \" + e.getMessage());\n\t\t}\n\n\t\tbyte[] outBuf = decompressorOutput.toByteArray();\n\t\ttry {\n\t\t\tdecompressorInput.close();\n\t\t\tdecompressorOutput.close();\n\t\t} catch(IOException e) {\n\t\t\tfail(\"unexpected exception thrown : \"+ e.getMessage());\n\t\t} finally {\n\t\t\tCloser.close(decompressorInput);\n\t\t\tCloser.close(decompressorOutput);\n\t\t}\n\n\t\treturn outBuf;\n\t}","commit_id":"e27a872923c04e4966e80afdaffc17b613c2067e","url":"https://github.com/freenet/fred"},{"original_method":"private long decompress(InputStream is, OutputStream os, long maxLength, long maxCheckSizeBytes) throws IOException, CompressionOutputSizeException {\n\t\tLzmaInputStream lzmaIS = new LzmaInputStream(is);\n\t\tlong written = 0;\n\t\tbyte[] buffer = new byte[4096];\n\t\twhile(true) {\n\t\t\tint l = (int) Math.min(buffer.length, maxLength - written);\n\t\t\t// We can over-read to determine whether we have over-read.\n\t\t\t// We enforce maximum size this way.\n\t\t\t// FIXME there is probably a better way to do this!\n\t\t\tint x = lzmaIS.read(buffer, 0, buffer.length);\n\t\t\tif(l < x) {\n\t\t\t\tLogger.normal(this, \"l=\"+l+\", x=\"+x+\", written=\"+written+\", maxLength=\"+maxLength+\" throwing a CompressionOutputSizeException\");\n\t\t\t\tif(maxCheckSizeBytes > 0) {\n\t\t\t\t\twritten += x;\n\t\t\t\t\twhile(true) {\n\t\t\t\t\t\tl = (int) Math.min(buffer.length, maxLength + maxCheckSizeBytes - written);\n\t\t\t\t\t\tx = lzmaIS.read(buffer, 0, l);\n\t\t\t\t\t\tif(x <= -1) throw new CompressionOutputSizeException(written);\n\t\t\t\t\t\tif(x == 0) throw new IOException(\"Returned zero from read()\");\n\t\t\t\t\t\twritten += x;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthrow new CompressionOutputSizeException();\n\t\t\t}\n\t\t\tif(x <= -1) return written;\n\t\t\tif(x == 0) throw new IOException(\"Returned zero from read()\");\n\t\t\tos.write(buffer, 0, x);\n\t\t\twritten += x;\n\t\t}\n\t}","id":50634,"modified_method":"private void decompress(InputStream is, OutputStream os, long maxLength, long maxCheckSizeBytes) throws IOException, CompressionOutputSizeException {\n\t\tDecoder decoder = new Decoder();\n\t\tdecoder.SetDecoderProperties(props);\n\t\tdecoder.Code(is, os, maxLength);\n\t}","commit_id":"062e49227cd47efee60503e09996c4128f75b5b6","url":"https://github.com/freenet/fred"},{"original_method":"public int decompress(byte[] dbuf, int i, int j, byte[] output) throws CompressionOutputSizeException {\n\t\t// Didn't work with Inflater.\n\t\t// FIXME fix sometimes to use Inflater - format issue?\n\t\tByteArrayInputStream bais = new ByteArrayInputStream(dbuf, i, j);\n\t\tByteArrayOutputStream baos = new ByteArrayOutputStream(output.length);\n\t\tint bytes = 0;\n\t\ttry {\n\t\t\tbytes = (int)decompress(bais, baos, output.length, -1);\n\t\t} catch (IOException e) {\n\t\t\t// Impossible\n\t\t\tthrow new Error(\"Got IOException: \" + e.getMessage(), e);\n\t\t}\n\t\tbyte[] buf = baos.toByteArray();\n\t\tSystem.arraycopy(buf, 0, output, 0, bytes);\n\t\treturn bytes;\n\t}","id":50635,"modified_method":"public int decompress(byte[] dbuf, int i, int j, byte[] output) throws CompressionOutputSizeException {\n\t\t// Didn't work with Inflater.\n\t\t// FIXME fix sometimes to use Inflater - format issue?\n\t\tByteArrayInputStream bais = new ByteArrayInputStream(dbuf, i, j);\n\t\tByteArrayOutputStream baos = new ByteArrayOutputStream(output.length);\n\t\tint bytes = 0;\n\t\ttry {\n\t\t\tdecompress(bais, baos, output.length, -1);\n\t\t\tbytes = baos.size();\n\t\t} catch (IOException e) {\n\t\t\t// Impossible\n\t\t\tthrow new Error(\"Got IOException: \" + e.getMessage(), e);\n\t\t}\n\t\tbyte[] buf = baos.toByteArray();\n\t\tSystem.arraycopy(buf, 0, output, 0, bytes);\n\t\treturn bytes;\n\t}","commit_id":"062e49227cd47efee60503e09996c4128f75b5b6","url":"https://github.com/freenet/fred"},{"original_method":"public Bucket decompress(Bucket data, BucketFactory bf, long maxLength, long maxCheckSizeLength, Bucket preferred) throws IOException, CompressionOutputSizeException {\n\t\tBucket output;\n\t\tif(preferred != null)\n\t\t\toutput = preferred;\n\t\telse\n\t\t\toutput = bf.makeBucket(maxLength);\n\t\tInputStream is = data.getInputStream();\n\t\tOutputStream os = output.getOutputStream();\n\t\tdecompress(is, os, maxLength, maxCheckSizeLength);\n\t\tos.close();\n\t\tis.close();\n\t\treturn output;\n\t}","id":50636,"modified_method":"public Bucket decompress(Bucket data, BucketFactory bf, long maxLength, long maxCheckSizeLength, Bucket preferred) throws IOException, CompressionOutputSizeException {\n\t\tBucket output;\n\t\tif(preferred != null)\n\t\t\toutput = preferred;\n\t\telse\n\t\t\toutput = bf.makeBucket(maxLength);\n\t\tif(Logger.shouldLog(Logger.MINOR, this))\n\t\t\tLogger.minor(this, \"Decompressing \"+data+\" size \"+data.size()+\" to new bucket \"+output);\n\t\tInputStream is = data.getInputStream();\n\t\tOutputStream os = output.getOutputStream();\n\t\tdecompress(is, os, maxLength, maxCheckSizeLength);\n\t\tos.close();\n\t\tif(Logger.shouldLog(Logger.MINOR, this))\n\t\t\tLogger.minor(this, \"Output: \"+output+\" size \"+output.size());\n\t\treturn output;\n\t}","commit_id":"062e49227cd47efee60503e09996c4128f75b5b6","url":"https://github.com/freenet/fred"},{"original_method":"protected MBCategory addMBCategory(\n\t\t\tlong userId, String name, String description,\n\t\t\tServiceContext serviceContext)\n\t\tthrows Exception {\n\n\t\treturn MBCategoryLocalServiceUtil.addCategory(\n\t\t\tuserId, 0, name, description, \"default\", StringPool.BLANK,\n\t\t\tStringPool.BLANK, StringPool.BLANK, 0, false, StringPool.BLANK,\n\t\t\tStringPool.BLANK, 1, StringPool.BLANK, false, StringPool.BLANK, 0,\n\t\t\tfalse, StringPool.BLANK, StringPool.BLANK, false, false,\n\t\t\tserviceContext);\n\t}","id":50637,"modified_method":"protected MBCategory addMBCategory(\n\t\t\tlong userId, String name, String description,\n\t\t\tServiceContext serviceContext)\n\t\tthrows Exception {\n\n\t\tserviceContext.setAddGroupPermissions(true);\n\t\tserviceContext.setAddGuestPermissions(true);\n\n\t\treturn MBCategoryLocalServiceUtil.addCategory(\n\t\t\tuserId, 0, name, description, \"default\", StringPool.BLANK,\n\t\t\tStringPool.BLANK, StringPool.BLANK, 0, false, StringPool.BLANK,\n\t\t\tStringPool.BLANK, 1, StringPool.BLANK, false, StringPool.BLANK, 0,\n\t\t\tfalse, StringPool.BLANK, StringPool.BLANK, false, false,\n\t\t\tserviceContext);\n\t}","commit_id":"ac2b4067f2d1064870b5e54f3c3a8ee7aa73344c","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected WikiPage addWikiPage(\n\t\t\tlong userId, long nodeId, String title, String fileName,\n\t\t\tServiceContext serviceContext)\n\t\tthrows Exception {\n\n\t\tString content = getString(fileName);\n\n\t\treturn WikiPageLocalServiceUtil.addPage(\n\t\t\tuserId, nodeId, title, content, \"New\", false, serviceContext);\n\t}","id":50638,"modified_method":"protected WikiPage addWikiPage(\n\t\t\tlong userId, long nodeId, String title, String fileName,\n\t\t\tServiceContext serviceContext)\n\t\tthrows Exception {\n\n\t\tString content = getString(fileName);\n\n\t\tserviceContext.setAddGroupPermissions(true);\n\t\tserviceContext.setAddGuestPermissions(true);\n\n\t\treturn WikiPageLocalServiceUtil.addPage(\n\t\t\tuserId, nodeId, title, content, \"New\", false, serviceContext);\n\t}","commit_id":"ac2b4067f2d1064870b5e54f3c3a8ee7aa73344c","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected User addUser(\n\t\t\tlong companyId, String screenName, String firstName,\n\t\t\tString lastName, boolean male, String jobTitle, long[] roleIds)\n\t\tthrows Exception {\n\n\t\tlong creatorUserId = 0;\n\t\tboolean autoPassword = false;\n\t\tString password1 = screenName;\n\t\tString password2 = password1;\n\t\tboolean autoScreenName = false;\n\t\tString emailAddress = screenName + \"@7cogs.com\";\n\t\tlong facebookId = 0;\n\t\tString openId = StringPool.BLANK;\n\t\tLocale locale = Locale.US;\n\t\tString middleName = StringPool.BLANK;\n\t\tint prefixId = 0;\n\t\tint suffixId = 0;\n\t\tint birthdayMonth = Calendar.JANUARY;\n\t\tint birthdayDay = 1;\n\t\tint birthdayYear = 1970;\n\n\t\tGroup guestGroup = GroupLocalServiceUtil.getGroup(\n\t\t\tcompanyId, GroupConstants.GUEST);\n\n\t\tlong[] groupIds = new long[] {guestGroup.getGroupId()};\n\n\t\tOrganization sevenCogsOrganization =\n\t\t\tOrganizationLocalServiceUtil.getOrganization(\n\t\t\t\tcompanyId, \"7Cogs, Inc.\");\n\n\t\tlong[] organizationIds = new long[] {\n\t\t\tsevenCogsOrganization.getOrganizationId()\n\t\t};\n\n\t\tlong[] userGroupIds = null;\n\t\tboolean sendEmail = false;\n\n\t\tServiceContext serviceContext = new ServiceContext();\n\n\t\tserviceContext.setScopeGroupId(guestGroup.getGroupId());\n\n\t\tUser user = UserLocalServiceUtil.addUser(\n\t\t\tcreatorUserId, companyId, autoPassword, password1, password2,\n\t\t\tautoScreenName, screenName, emailAddress, facebookId, openId,\n\t\t\tlocale, firstName, middleName, lastName, prefixId, suffixId, male,\n\t\t\tbirthdayMonth, birthdayDay, birthdayYear, jobTitle, groupIds,\n\t\t\torganizationIds, roleIds, userGroupIds, sendEmail, serviceContext);\n\n\t\tbyte[] portrait = getBytes(\n\t\t\t\"/users/images/\" + screenName + \"_portrait.jpg\");\n\n\t\tUserLocalServiceUtil.updatePortrait(user.getUserId(), portrait);\n\n\t\tString[] questions = StringUtil.split(\n\t\t\tPropsUtil.get(\"users.reminder.queries.questions\"));\n\n\t\tString question = questions[0];\n\t\tString answer = \"1234\";\n\n\t\tUserLocalServiceUtil.updateReminderQuery(\n\t\t\tuser.getUserId(), question, answer);\n\n\t\tGroup group = user.getGroup();\n\n\t\t// Profile layout\n\n\t\tLayout layout = addLayout(\n\t\t\tgroup, \"Profile\", false, \"/profile\", \"2_columns_ii\");\n\n\t\tString portletId = addPortletId(\n\t\t\tlayout, PortletKeys.JOURNAL_CONTENT, \"column-2\");\n\n\t\thighlightPortlet(layout, portletId);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"community\", \"tips\"});\n\n\t\tString fileName =\n\t\t\t\"/users/journal/articles/my_community_\" + user.getScreenName() +\n\t\t\t\t\".xml\";\n\n\t\tJournalArticle journalArticle = addJournalArticle(\n\t\t\tuser.getUserId(), group.getGroupId(),\n\t\t\t\"Public Pages \" + user.getScreenName(), fileName, serviceContext);\n\n\t\tconfigureJournalContent(\n\t\t\tlayout, portletId, journalArticle.getArticleId());\n\n\t\taddPortletId(layout, \"1_WAR_socialnetworkingportlet\", \"column-1\");\n\t\taddPortletId(layout, PortletKeys.REQUESTS, \"column-1\");\n\t\taddPortletId(layout, \"2_WAR_socialnetworkingportlet\", \"column-1\");\n\t\taddPortletId(layout, PortletKeys.ACTIVITIES, \"column-2\");\n\t\taddPortletId(layout, \"3_WAR_socialnetworkingportlet\", \"column-2\");\n\n\t\t// Blog layout\n\n\t\tlayout = addLayout(group, \"Blog\", false, \"/blog\", \"2_columns_ii\");\n\n\t\taddPortletId(layout, PortletKeys.RECENT_BLOGGERS, \"column-1\");\n\t\taddPortletId(layout, PortletKeys.BLOGS, \"column-2\");\n\n\t\t// Social layout\n\n\t\tlayout = addLayout(group, \"Social\", true, \"/social\", \"2_columns_ii\");\n\n\t\taddPortletId(layout, \"1_WAR_socialnetworkingportlet\", \"column-1\");\n\t\taddPortletId(layout, PortletKeys.REQUESTS, \"column-1\");\n\n\t\tportletId = addPortletId(\n\t\t\tlayout, PortletKeys.JOURNAL_CONTENT, \"column-2\");\n\n\t\thighlightPortlet(layout, portletId);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"social\", \"tips\"});\n\n\t\tfileName =\n\t\t\t\"/users/journal/articles/private_pages_\" + user.getScreenName() +\n\t\t\t\t\".xml\";\n\n\t\tjournalArticle = addJournalArticle(\n\t\t\tuser.getUserId(), group.getGroupId(),\n\t\t\t\"Public Pages \" + user.getScreenName(), fileName, serviceContext);\n\n\t\tconfigureJournalContent(\n\t\t\tlayout, portletId, journalArticle.getArticleId());\n\n\t\taddPortletId(layout, \"4_WAR_socialnetworkingportlet\", \"column-2\");\n\n\t\tportletId = addPortletId(layout, PortletKeys.IFRAME, \"column-1\");\n\n\t\tMap<String, String> preferences = new HashMap<String, String>();\n\n\t\tpreferences.put(\"portlet-setup-show-borders\", Boolean.FALSE.toString());\n\n\t\tif (screenName.equals(\"bruno\") || screenName.equals(\"john\")) {\n\t\t\tpreferences.put(\"src\",\"http://m.digg.com\");\n\t\t\tpreferences.put(\"height-normal\",\"400\");\n\t\t}\n\t\telse if (screenName.equals(\"michelle\")) {\n\t\t\tpreferences.put(\"src\",\"http://m.digg.com\");\n\t\t\tpreferences.put(\"height-normal\",\"400\");\n\t\t}\n\t\telse if (screenName.equals(\"richard\")) {\n\t\t\tpreferences.put(\"src\",\"http://m.linkedin.com\");\n\t\t\tpreferences.put(\"height-normal\",\"350\");\n\t\t}\n\n\t\tupdatePortletSetup(layout, portletId, preferences);\n\n\t\t// Workspace layout\n\n\t\tlayout = addLayout(\n\t\t\tgroup, \"Workspace\", true, \"/workspace\", \"2_columns_i\");\n\n\t\taddPortletId(layout, PortletKeys.RECENT_DOCUMENTS, \"column-1\");\n\t\taddPortletId(layout, PortletKeys.DOCUMENT_LIBRARY, \"column-1\");\n\t\taddPortletId(layout, PortletKeys.MEDIA_GALLERY_DISPLAY, \"column-1\");\n\n\t\tportletId = addPortletId(\n\t\t\tlayout, PortletKeys.JOURNAL_CONTENT, \"column-2\");\n\n\t\thighlightPortlet(layout, portletId);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"documents\", \"tips\"});\n\n\t\tjournalArticle = addJournalArticle(\n\t\t\tuser.getUserId(), group.getGroupId(), \"My documents\",\n\t\t\t\"/users/journal/articles/workspace_docs.xml\", serviceContext);\n\n\t\tconfigureJournalContent(\n\t\t\tlayout, portletId, journalArticle.getArticleId());\n\n\t\taddPortletId(layout, PortletKeys.CALENDAR, \"column-2\");\n\n\t\t// Email layout\n\n\t\tlayout = addLayout(group, \"Email\", true, \"/email\", \"1_column\");\n\n\t\taddPortletId(layout, \"1_WAR_mailportlet\", \"column-1\");\n\n\t\treturn user;\n\t}","id":50639,"modified_method":"protected User addUser(\n\t\t\tlong companyId, String screenName, String firstName,\n\t\t\tString lastName, boolean male, String jobTitle, long[] roleIds)\n\t\tthrows Exception {\n\n\t\tlong creatorUserId = 0;\n\t\tboolean autoPassword = false;\n\t\tString password1 = screenName;\n\t\tString password2 = password1;\n\t\tboolean autoScreenName = false;\n\t\tString emailAddress = screenName + \"@7cogs.com\";\n\t\tlong facebookId = 0;\n\t\tString openId = StringPool.BLANK;\n\t\tLocale locale = Locale.US;\n\t\tString middleName = StringPool.BLANK;\n\t\tint prefixId = 0;\n\t\tint suffixId = 0;\n\t\tint birthdayMonth = Calendar.JANUARY;\n\t\tint birthdayDay = 1;\n\t\tint birthdayYear = 1970;\n\n\t\tGroup guestGroup = GroupLocalServiceUtil.getGroup(\n\t\t\tcompanyId, GroupConstants.GUEST);\n\n\t\tlong[] groupIds = new long[] {guestGroup.getGroupId()};\n\n\t\tOrganization sevenCogsOrganization =\n\t\t\tOrganizationLocalServiceUtil.getOrganization(\n\t\t\t\tcompanyId, \"7Cogs, Inc.\");\n\n\t\tlong[] organizationIds = new long[] {\n\t\t\tsevenCogsOrganization.getOrganizationId()\n\t\t};\n\n\t\tlong[] userGroupIds = null;\n\t\tboolean sendEmail = false;\n\n\t\tServiceContext serviceContext = new ServiceContext();\n\n\t\tserviceContext.setScopeGroupId(guestGroup.getGroupId());\n\n\t\tUser user = UserLocalServiceUtil.addUser(\n\t\t\tcreatorUserId, companyId, autoPassword, password1, password2,\n\t\t\tautoScreenName, screenName, emailAddress, facebookId, openId,\n\t\t\tlocale, firstName, middleName, lastName, prefixId, suffixId, male,\n\t\t\tbirthdayMonth, birthdayDay, birthdayYear, jobTitle, groupIds,\n\t\t\torganizationIds, roleIds, userGroupIds, sendEmail, serviceContext);\n\n\t\tbyte[] portrait = getBytes(\n\t\t\t\"/users/images/\" + screenName + \"_portrait.jpg\");\n\n\t\tUserLocalServiceUtil.updatePortrait(user.getUserId(), portrait);\n\n\t\tString[] questions = StringUtil.split(\n\t\t\tPropsUtil.get(\"users.reminder.queries.questions\"));\n\n\t\tString question = questions[0];\n\t\tString answer = \"1234\";\n\n\t\tUserLocalServiceUtil.updateReminderQuery(\n\t\t\tuser.getUserId(), question, answer);\n\n\t\tGroup group = user.getGroup();\n\n\t\t// Profile layout\n\n\t\tLayout layout = addLayout(\n\t\t\tgroup, \"Profile\", false, \"/profile\", \"2_columns_ii\");\n\n\t\tString portletId = addPortletId(\n\t\t\tlayout, PortletKeys.JOURNAL_CONTENT, \"column-2\");\n\n\t\thighlightPortlet(layout, portletId);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"community\", \"tips\"});\n\n\t\tString fileName =\n\t\t\t\"/users/journal/articles/my_community_\" + user.getScreenName() +\n\t\t\t\t\".xml\";\n\n\t\tJournalArticle journalArticle = addJournalArticle(\n\t\t\tuser.getUserId(), group.getGroupId(),\n\t\t\t\"Public Pages \" + user.getScreenName(), fileName, serviceContext);\n\n\t\tconfigureJournalContent(\n\t\t\tlayout, portletId, journalArticle.getArticleId());\n\n\t\taddPortletId(layout, \"1_WAR_socialnetworkingportlet\", \"column-1\");\n\t\taddPortletId(layout, PortletKeys.REQUESTS, \"column-1\");\n\t\taddPortletId(layout, \"2_WAR_socialnetworkingportlet\", \"column-1\");\n\t\taddPortletId(layout, PortletKeys.ACTIVITIES, \"column-2\");\n\t\taddPortletId(layout, \"3_WAR_socialnetworkingportlet\", \"column-2\");\n\n\t\t// Blog layout\n\n\t\tlayout = addLayout(group, \"Blog\", false, \"/blog\", \"2_columns_ii\");\n\n\t\taddPortletId(layout, PortletKeys.RECENT_BLOGGERS, \"column-1\");\n\t\taddPortletId(layout, PortletKeys.BLOGS, \"column-2\");\n\n\t\t// Social layout\n\n\t\tlayout = addLayout(group, \"Social\", true, \"/social\", \"2_columns_ii\");\n\n\t\taddPortletId(layout, \"1_WAR_socialnetworkingportlet\", \"column-1\");\n\t\taddPortletId(layout, PortletKeys.REQUESTS, \"column-1\");\n\n\t\tportletId = addPortletId(\n\t\t\tlayout, PortletKeys.JOURNAL_CONTENT, \"column-2\");\n\n\t\thighlightPortlet(layout, portletId);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"social\", \"tips\"});\n\n\t\tfileName =\n\t\t\t\"/users/journal/articles/private_pages_\" + user.getScreenName() +\n\t\t\t\t\".xml\";\n\n\t\tjournalArticle = addJournalArticle(\n\t\t\tuser.getUserId(), group.getGroupId(),\n\t\t\t\"Public Pages \" + user.getScreenName(), fileName, serviceContext);\n\n\t\tconfigureJournalContent(\n\t\t\tlayout, portletId, journalArticle.getArticleId());\n\n\t\taddPortletId(layout, \"4_WAR_socialnetworkingportlet\", \"column-2\");\n\n\t\tportletId = addPortletId(layout, PortletKeys.IFRAME, \"column-1\");\n\n\t\tMap<String, String> preferences = new HashMap<String, String>();\n\n\t\tpreferences.put(\"portlet-setup-show-borders\", Boolean.FALSE.toString());\n\n\t\tif (screenName.equals(\"bruno\") || screenName.equals(\"bradley\")) {\n\t\t\tpreferences.put(\"src\",\"http://m.digg.com\");\n\t\t\tpreferences.put(\"height-normal\",\"400\");\n\t\t}\n\t\telse if (screenName.equals(\"michelle\")) {\n\t\t\tpreferences.put(\"src\",\"http://m.digg.com\");\n\t\t\tpreferences.put(\"height-normal\",\"400\");\n\t\t}\n\t\telse if (screenName.equals(\"richard\")) {\n\t\t\tpreferences.put(\"src\",\"http://m.linkedin.com\");\n\t\t\tpreferences.put(\"height-normal\",\"350\");\n\t\t}\n\n\t\tupdatePortletSetup(layout, portletId, preferences);\n\n\t\t// Workspace layout\n\n\t\tlayout = addLayout(\n\t\t\tgroup, \"Workspace\", true, \"/workspace\", \"2_columns_i\");\n\n\t\taddPortletId(layout, PortletKeys.RECENT_DOCUMENTS, \"column-1\");\n\t\taddPortletId(layout, PortletKeys.DOCUMENT_LIBRARY, \"column-1\");\n\t\taddPortletId(layout, PortletKeys.MEDIA_GALLERY_DISPLAY, \"column-1\");\n\n\t\tportletId = addPortletId(\n\t\t\tlayout, PortletKeys.JOURNAL_CONTENT, \"column-2\");\n\n\t\thighlightPortlet(layout, portletId);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"documents\", \"tips\"});\n\n\t\tjournalArticle = addJournalArticle(\n\t\t\tuser.getUserId(), group.getGroupId(), \"My documents\",\n\t\t\t\"/users/journal/articles/workspace_docs.xml\", serviceContext);\n\n\t\tconfigureJournalContent(\n\t\t\tlayout, portletId, journalArticle.getArticleId());\n\n\t\taddPortletId(layout, PortletKeys.CALENDAR, \"column-2\");\n\n\t\t// Email layout\n\n\t\tlayout = addLayout(group, \"Email\", true, \"/email\", \"1_column\");\n\n\t\taddPortletId(layout, \"1_WAR_mailportlet\", \"column-1\");\n\n\t\treturn user;\n\t}","commit_id":"ac2b4067f2d1064870b5e54f3c3a8ee7aa73344c","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected void setupCommunities(long companyId, long defaultUserId)\n\t\tthrows Exception {\n\n\t\t// Guest community\n\n\t\tGroup group = GroupLocalServiceUtil.getGroup(\n\t\t\tcompanyId, GroupConstants.GUEST);\n\n\t\t// Journal\n\n\t\taddJournalStructure(\n\t\t\tdefaultUserId, group.getGroupId(),\n\t\t\t\"/guest/journal/structures/single_image.xml\");\n\t\taddJournalTemplate(\n\t\t\tdefaultUserId, group.getGroupId(),\n\t\t\t\"/guest/journal/templates/single_image.xml\");\n\n\t\t// Image gallery\n\n\t\tServiceContext serviceContext = new ServiceContext();\n\n\t\tserviceContext.setAddGroupPermissions(true);\n\t\tserviceContext.setAddGuestPermissions(true);\n\t\tserviceContext.setScopeGroupId(group.getGroupId());\n\n\t\tFolder folder = DLAppLocalServiceUtil.addFolder(\n\t\t\tdefaultUserId, group.getGroupId(), 0, \"Web Content\",\n\t\t\t\"Images used for content\", serviceContext);\n\n\t\tFileEntry cellBgFileEntry = addDLFileEntry(\n\t\t\tdefaultUserId, folder.getFolderId(), \"/guest/images/cell_bg.png\",\n\t\t\tserviceContext);\n\n\t\tFileEntry portalMashupFileEntry = addDLFileEntry(\n\t\t\tdefaultUserId, folder.getFolderId(),\n\t\t\t\"/guest/images/portal_mashup.png\", serviceContext);\n\n\t\tFileEntry sevenCogsAdFileEntry = addDLFileEntry(\n\t\t\tdefaultUserId, folder.getFolderId(),\n\t\t\t\"/guest/images/sevencogs_ad.png\", serviceContext);\n\n\t\tFileEntry sevenCogsMobileAdFileEntry = addDLFileEntry(\n\t\t\tdefaultUserId, folder.getFolderId(),\n\t\t\t\"/guest/images/sevencogs_mobile_ad.png\", serviceContext);\n\n\t\tFileEntry sharedWorkspacesFileEntry = addDLFileEntry(\n\t\t\tdefaultUserId, folder.getFolderId(),\n\t\t\t\"/guest/images/shared_workspaces.png\", serviceContext);\n\n\t\tFileEntry socialNetworkingFileEntry = addDLFileEntry(\n\t\t\tdefaultUserId, folder.getFolderId(),\n\t\t\t\"/guest/images/social_network.png\", serviceContext);\n\n\t\tFileEntry webPublishingFileEntry = addDLFileEntry(\n\t\t\tdefaultUserId, folder.getFolderId(),\n\t\t\t\"/guest/images/web_publishing.png\", serviceContext);\n\n\t\t// Welcome layout\n\n\t\tLayout layout = addLayout(\n\t\t\tgroup, \"Welcome\", false, \"/home\", \"2_columns_iii\");\n\n\t\t// Welcome content portlet\n\n\t\tString portletId = addPortletId(\n\t\t\tlayout, PortletKeys.JOURNAL_CONTENT, \"column-1\");\n\n\t\tremovePortletBorder(layout, portletId);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"liferay\", \"welcome\"});\n\n\t\tJournalArticle journalArticle = addJournalArticle(\n\t\t\tdefaultUserId, group.getGroupId(), \"Welcome\",\n\t\t\t\"/guest/journal/articles/welcome.xml\", serviceContext);\n\n\t\tString content = StringUtil.replace(\n\t\t\tjournalArticle.getContent(),\n\t\t\tnew String[] {\n\t\t\t\t\"[$CELL_BG_IG_IMAGE_UUID$]\",\n\t\t\t\t\"[$GROUP_ID$]\",\n\t\t\t\t\"[$PORTAL_MASHUPS_IG_IMAGE_UUID$]\",\n\t\t\t\t\"[$SHARED_WORKSPACES_IG_IMAGE_UUID$]\",\n\t\t\t\t\"[$SOCIAL_NETWORKING_IG_IMAGE_UUID$]\",\n\t\t\t\t\"[$WEB_PUBLISHING_IG_IMAGE_UUID$]\"\n\t\t\t},\n\t\t\tnew String[] {\n\t\t\t\tString.valueOf(cellBgFileEntry.getUuid()),\n\t\t\t\tString.valueOf(group.getGroupId()),\n\t\t\t\tString.valueOf(portalMashupFileEntry.getUuid()),\n\t\t\t\tString.valueOf(sharedWorkspacesFileEntry.getUuid()),\n\t\t\t\tString.valueOf(socialNetworkingFileEntry.getUuid()),\n\t\t\t\tString.valueOf(webPublishingFileEntry.getUuid())\n\t\t\t});\n\n\t\tJournalArticleLocalServiceUtil.updateContent(\n\t\t\tgroup.getGroupId(), journalArticle.getArticleId(),\n\t\t\tjournalArticle.getVersion(), content);\n\n\t\tconfigureJournalContent(\n\t\t\tlayout, portletId, journalArticle.getArticleId());\n\n\t\t// 7Cogs Ad content portlet\n\n\t\tportletId = addPortletId(\n\t\t\tlayout, PortletKeys.JOURNAL_CONTENT, \"column-2\");\n\n\t\tremovePortletBorder(layout, portletId);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"liferay\", \"7cogs\"});\n\n\t\tjournalArticle = addJournalArticle(\n\t\t\tdefaultUserId, group.getGroupId(), \"7Cogs Ad\",\n\t\t\t\"/guest/journal/articles/sample_site_ad.xml\", serviceContext);\n\n\t\tcontent = StringUtil.replace(\n\t\t\tjournalArticle.getContent(),\n\t\t\tnew String[] {\n\t\t\t\t\"[$GROUP_ID$]\",\n\t\t\t\t\"[$GROUP_URL$]\",\n\t\t\t\t\"[$IG_IMAGE_UUID$]\"\n\t\t\t},\n\t\t\tnew String[] {\n\t\t\t\tString.valueOf(group.getGroupId()),\n\t\t\t\t\"/web/7cogs/home\",\n\t\t\t\tString.valueOf(sevenCogsAdFileEntry.getUuid())\n\t\t\t});\n\n\t\tJournalArticleLocalServiceUtil.updateContent(\n\t\t\tgroup.getGroupId(), journalArticle.getArticleId(),\n\t\t\tjournalArticle.getVersion(), content);\n\n\t\tconfigureJournalContent(\n\t\t\tlayout, portletId, journalArticle.getArticleId());\n\n\t\t// 7Cogs Mobile Ad content portlet\n\n\t\tportletId = addPortletId(\n\t\t\tlayout, PortletKeys.JOURNAL_CONTENT, \"column-2\");\n\n\t\tremovePortletBorder(layout, portletId);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"liferay\", \"7cogs\"});\n\n\t\tjournalArticle = addJournalArticle(\n\t\t\tdefaultUserId, group.getGroupId(), \"7Cogs Mobile Ad\",\n\t\t\t\"/guest/journal/articles/sample_site_ad.xml\", serviceContext);\n\n\t\tcontent = StringUtil.replace(\n\t\t\tjournalArticle.getContent(),\n\t\t\tnew String[] {\n\t\t\t\t\"[$GROUP_ID$]\",\n\t\t\t\t\"[$GROUP_URL$]\",\n\t\t\t\t\"[$IG_IMAGE_UUID$]\"\n\t\t\t},\n\t\t\tnew String[] {\n\t\t\t\tString.valueOf(group.getGroupId()),\n\t\t\t\t\"/web/7cogs-mobile/home\",\n\t\t\t\tString.valueOf(sevenCogsMobileAdFileEntry.getUuid())\n\t\t\t});\n\n\t\tJournalArticleLocalServiceUtil.updateContent(\n\t\t\tgroup.getGroupId(), journalArticle.getArticleId(),\n\t\t\tjournalArticle.getVersion(), content);\n\n\t\tconfigureJournalContent(\n\t\t\tlayout, portletId, journalArticle.getArticleId());\n\n\t\t// Welcome Note content portlet\n\n\t\tportletId = addPortletId(\n\t\t\tlayout, PortletKeys.JOURNAL_CONTENT, \"column-2\");\n\n\t\tremovePortletBorder(layout, portletId);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"welcome\"});\n\n\t\tjournalArticle = addJournalArticle(\n\t\t\tdefaultUserId, group.getGroupId(), \"Welcome Note\",\n\t\t\t\"/guest/journal/articles/welcome_note.xml\", serviceContext);\n\n\t\tconfigureJournalContent(\n\t\t\tlayout, portletId, journalArticle.getArticleId());\n\n\t\t// Welcome Login content portlet\n\n\t\tportletId = addPortletId(\n\t\t\tlayout, PortletKeys.JOURNAL_CONTENT, \"column-2\");\n\n\t\tserviceContext.setAssetTagNames(\n\t\t\tnew String[] {\"login\", \"users\", \"welcome\"});\n\n\t\tjournalArticle = addJournalArticle(\n\t\t\tdefaultUserId, group.getGroupId(), \"Welcome Login\",\n\t\t\t\"/guest/journal/articles/welcome_login.xml\", serviceContext);\n\n\t\tcontent = StringUtil.replace(\n\t\t\tjournalArticle.getContent(), \"[$COMPANY_ID$]\",\n\t\t\tString.valueOf(companyId));\n\n\t\tJournalArticleLocalServiceUtil.updateContent(\n\t\t\tgroup.getGroupId(), journalArticle.getArticleId(),\n\t\t\tjournalArticle.getVersion(), content);\n\n\t\tconfigureJournalContent(\n\t\t\tlayout, portletId, journalArticle.getArticleId());\n\n\t\tconfigurePortletTitle(layout, portletId, \"Current Users\");\n\n\t\t// Login portlet\n\n\t\taddPortletId(layout, PortletKeys.LOGIN, \"column-2\");\n\t}","id":50640,"modified_method":"protected void setupCommunities(long companyId, long defaultUserId)\n\t\tthrows Exception {\n\n\t\t// Guest community\n\n\t\tGroup group = GroupLocalServiceUtil.getGroup(\n\t\t\tcompanyId, GroupConstants.GUEST);\n\n\t\t// Journal\n\n\t\taddJournalStructure(\n\t\t\tdefaultUserId, group.getGroupId(),\n\t\t\t\"/guest/journal/structures/single_image.xml\");\n\t\taddJournalTemplate(\n\t\t\tdefaultUserId, group.getGroupId(),\n\t\t\t\"/guest/journal/templates/single_image.xml\");\n\n\t\t// Image gallery\n\n\t\tServiceContext serviceContext = new ServiceContext();\n\n\t\tserviceContext.setAddGroupPermissions(true);\n\t\tserviceContext.setAddGuestPermissions(true);\n\t\tserviceContext.setScopeGroupId(group.getGroupId());\n\n\t\tFolder folder = DLAppLocalServiceUtil.addFolder(\n\t\t\tdefaultUserId, group.getGroupId(), 0, \"Web Content\",\n\t\t\t\"Images used for content\", serviceContext);\n\n\t\tFileEntry cellBgFileEntry = addDLFileEntry(\n\t\t\tdefaultUserId, folder.getFolderId(), \"/guest/images/cell_bg.png\",\n\t\t\tserviceContext);\n\n\t\tFileEntry portalMashupFileEntry = addDLFileEntry(\n\t\t\tdefaultUserId, folder.getFolderId(),\n\t\t\t\"/guest/images/portal_mashup.png\", serviceContext);\n\n\t\tFileEntry sevenCogsAdFileEntry = addDLFileEntry(\n\t\t\tdefaultUserId, folder.getFolderId(),\n\t\t\t\"/guest/images/sevencogs_ad.png\", serviceContext);\n\n\t\tFileEntry sharedWorkspacesFileEntry = addDLFileEntry(\n\t\t\tdefaultUserId, folder.getFolderId(),\n\t\t\t\"/guest/images/shared_workspaces.png\", serviceContext);\n\n\t\tFileEntry socialNetworkingFileEntry = addDLFileEntry(\n\t\t\tdefaultUserId, folder.getFolderId(),\n\t\t\t\"/guest/images/social_network.png\", serviceContext);\n\n\t\tFileEntry webPublishingFileEntry = addDLFileEntry(\n\t\t\tdefaultUserId, folder.getFolderId(),\n\t\t\t\"/guest/images/web_publishing.png\", serviceContext);\n\n\t\tFileEntry customer1FileEntry = addDLFileEntry(\n\t\t\tdefaultUserId, folder.getFolderId(),\n\t\t\t\"/guest/images/image_gallery-1.png\", serviceContext);\n\n\t\tFileEntry customer2FileEntry = addDLFileEntry(\n\t\t\tdefaultUserId, folder.getFolderId(),\n\t\t\t\"/guest/images/image_gallery-2.png\", serviceContext);\n\n\t\tFileEntry customer3FileEntry = addDLFileEntry(\n\t\t\tdefaultUserId, folder.getFolderId(),\n\t\t\t\"/guest/images/image_gallery-3.png\", serviceContext);\n\n\t\tFileEntry customer4FileEntry = addDLFileEntry(\n\t\t\tdefaultUserId, folder.getFolderId(),\n\t\t\t\"/guest/images/image_gallery-4.png\", serviceContext);\n\n\t\tFileEntry customer5FileEntry = addDLFileEntry(\n\t\t\tdefaultUserId, folder.getFolderId(),\n\t\t\t\"/guest/images/image_gallery-5.png\", serviceContext);\n\n\t\tFileEntry customer6FileEntry = addDLFileEntry(\n\t\t\tdefaultUserId, folder.getFolderId(),\n\t\t\t\"/guest/images/image_gallery-6.png\", serviceContext);\n\n\t\tFileEntry customer7FileEntry = addDLFileEntry(\n\t\t\tdefaultUserId, folder.getFolderId(),\n\t\t\t\"/guest/images/image_gallery-7.png\", serviceContext);\n\n\t\t// Site Theme Settings\n\n\t\tString noPortletBorders =\n\t\t\t\"lfr-theme:regular:portlet-setup-show-borders-default=false\";\n\n\t\tLayoutSetLocalServiceUtil.updateSettings(\n\t\t\tgroup.getGroupId(), false, noPortletBorders);\n\n\t\t// Welcome layout\n\n\t\tLayout layout = addLayout(\n\t\t\tgroup, \"Welcome\", false, \"/home\", \"2_columns_iii\");\n\n\t\t// Welcome content portlet\n\n\t\tString portletId = addPortletId(\n\t\t\tlayout, PortletKeys.JOURNAL_CONTENT, \"column-1\");\n\n\t\tremovePortletBorder(layout, portletId);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"liferay\", \"welcome\"});\n\n\t\tJournalArticle journalArticle = addJournalArticle(\n\t\t\tdefaultUserId, group.getGroupId(), \"Welcome\",\n\t\t\t\"/guest/journal/articles/welcome.xml\", serviceContext);\n\n\t\tString content = StringUtil.replace(\n\t\t\tjournalArticle.getContent(),\n\t\t\tnew String[] {\n\t\t\t\t\"[$CELL_BG_IG_IMAGE_UUID$]\",\n\t\t\t\t\"[$GROUP_ID$]\",\n\t\t\t\t\"[$PORTAL_MASHUPS_IG_IMAGE_UUID$]\",\n\t\t\t\t\"[$SHARED_WORKSPACES_IG_IMAGE_UUID$]\",\n\t\t\t\t\"[$SOCIAL_NETWORKING_IG_IMAGE_UUID$]\",\n\t\t\t\t\"[$WEB_PUBLISHING_IG_IMAGE_UUID$]\",\n\t\t\t\t\"[$CUSTOMER_1$]\",\n\t\t\t\t\"[$CUSTOMER_2$]\",\n\t\t\t\t\"[$CUSTOMER_3$]\",\n\t\t\t\t\"[$CUSTOMER_4$]\",\n\t\t\t\t\"[$CUSTOMER_5$]\",\n\t\t\t\t\"[$CUSTOMER_6$]\",\n\t\t\t\t\"[$CUSTOMER_7$]\"\n\t\t\t},\n\t\t\tnew String[] {\n\t\t\t\tString.valueOf(cellBgFileEntry.getUuid()),\n\t\t\t\tString.valueOf(group.getGroupId()),\n\t\t\t\tString.valueOf(portalMashupFileEntry.getUuid()),\n\t\t\t\tString.valueOf(sharedWorkspacesFileEntry.getUuid()),\n\t\t\t\tString.valueOf(socialNetworkingFileEntry.getUuid()),\n\t\t\t\tString.valueOf(webPublishingFileEntry.getUuid()),\n\t\t\t\tString.valueOf(customer1FileEntry.getUuid()),\n\t\t\t\tString.valueOf(customer2FileEntry.getUuid()),\n\t\t\t\tString.valueOf(customer3FileEntry.getUuid()),\n\t\t\t\tString.valueOf(customer4FileEntry.getUuid()),\n\t\t\t\tString.valueOf(customer5FileEntry.getUuid()),\n\t\t\t\tString.valueOf(customer6FileEntry.getUuid()),\n\t\t\t\tString.valueOf(customer7FileEntry.getUuid())\n\t\t\t});\n\n\t\tJournalArticleLocalServiceUtil.updateContent(\n\t\t\tgroup.getGroupId(), journalArticle.getArticleId(),\n\t\t\tjournalArticle.getVersion(), content);\n\n\t\tconfigureJournalContent(\n\t\t\tlayout, portletId, journalArticle.getArticleId());\n\n\t\t// 7Cogs Ad content portlet\n\n\t\tportletId = addPortletId(\n\t\t\tlayout, PortletKeys.JOURNAL_CONTENT, \"column-2\");\n\n\t\tremovePortletBorder(layout, portletId);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"liferay\", \"7cogs\"});\n\n\t\tjournalArticle = addJournalArticle(\n\t\t\tdefaultUserId, group.getGroupId(), \"7Cogs Ad\",\n\t\t\t\"/guest/journal/articles/sample_site_ad.xml\", serviceContext);\n\n\t\tcontent = StringUtil.replace(\n\t\t\tjournalArticle.getContent(),\n\t\t\tnew String[] {\n\t\t\t\t\"[$GROUP_ID$]\",\n\t\t\t\t\"[$GROUP_URL$]\",\n\t\t\t\t\"[$IG_IMAGE_UUID$]\"\n\t\t\t},\n\t\t\tnew String[] {\n\t\t\t\tString.valueOf(group.getGroupId()),\n\t\t\t\t\"/web/7cogs/home\",\n\t\t\t\tString.valueOf(sevenCogsAdFileEntry.getUuid())\n\t\t\t});\n\n\t\tJournalArticleLocalServiceUtil.updateContent(\n\t\t\tgroup.getGroupId(), journalArticle.getArticleId(),\n\t\t\tjournalArticle.getVersion(), content);\n\n\t\tconfigureJournalContent(\n\t\t\tlayout, portletId, journalArticle.getArticleId());\n\n\t\t// Welcome Note content portlet\n\n\t\tportletId = addPortletId(\n\t\t\tlayout, PortletKeys.JOURNAL_CONTENT, \"column-2\");\n\n\t\tremovePortletBorder(layout, portletId);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"welcome\"});\n\n\t\tjournalArticle = addJournalArticle(\n\t\t\tdefaultUserId, group.getGroupId(), \"Welcome Note\",\n\t\t\t\"/guest/journal/articles/welcome_note.xml\", serviceContext);\n\n\t\tconfigureJournalContent(\n\t\t\tlayout, portletId, journalArticle.getArticleId());\n\n\t\t// Welcome Login content portlet\n\n\t\tportletId = addPortletId(\n\t\t\tlayout, PortletKeys.JOURNAL_CONTENT, \"column-2\");\n\n\t\tserviceContext.setAssetTagNames(\n\t\t\tnew String[] {\"login\", \"users\", \"welcome\"});\n\n\t\tjournalArticle = addJournalArticle(\n\t\t\tdefaultUserId, group.getGroupId(), \"Welcome Login\",\n\t\t\t\"/guest/journal/articles/welcome_login.xml\", serviceContext);\n\n\t\tcontent = StringUtil.replace(\n\t\t\tjournalArticle.getContent(), \"[$COMPANY_ID$]\",\n\t\t\tString.valueOf(companyId));\n\n\t\tJournalArticleLocalServiceUtil.updateContent(\n\t\t\tgroup.getGroupId(), journalArticle.getArticleId(),\n\t\t\tjournalArticle.getVersion(), content);\n\n\t\tconfigureJournalContent(\n\t\t\tlayout, portletId, journalArticle.getArticleId());\n\n\t\tconfigurePortletTitle(layout, portletId, \"Current Users\");\n\n\t\t// Login portlet\n\n\t\taddPortletId(layout, PortletKeys.LOGIN, \"column-2\");\n\t}","commit_id":"ac2b4067f2d1064870b5e54f3c3a8ee7aa73344c","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected void setupUsers(long companyId) throws Exception {\n\n\t\t// Roles\n\n\t\tRole adminRole = RoleLocalServiceUtil.getRole(\n\t\t\tcompanyId, RoleConstants.ADMINISTRATOR);\n\n\t\tRole portalContentReviewer = RoleLocalServiceUtil.getRole(\n\t\t\tcompanyId, \"Portal Content Reviewer\");\n\n\t\tRole powerUserRole = RoleLocalServiceUtil.getRole(\n\t\t\tcompanyId, RoleConstants.POWER_USER);\n\n\t\tRole publisherRole = RoleLocalServiceUtil.getRole(\n\t\t\tcompanyId, \"Publisher\");\n\n\t\tRole writerRole = RoleLocalServiceUtil.getRole(\n\t\t\tcompanyId, \"Writer\");\n\n\t\t// Users\n\n\t\tlong[] roleIds = new long[] {\n\t\t\tadminRole.getRoleId(), powerUserRole.getRoleId()\n\t\t};\n\n\t\tUser brunoUser = addUser(\n\t\t\tcompanyId, \"bruno\", \"Bruno\", \"Admin\", true, \"Administrator\",\n\t\t\troleIds);\n\n\t\troleIds = new long[] {powerUserRole.getRoleId()};\n\n\t\tUser johnUser = addUser(\n\t\t\tcompanyId, \"john\", \"John\", \"Regular\", true, \"Employee\", roleIds);\n\n\t\troleIds = new long[] {\n\t\t\tpowerUserRole.getRoleId(), writerRole.getRoleId()\n\t\t};\n\n\t\tUser michelleUser = addUser(\n\t\t\tcompanyId, \"michelle\", \"Michelle\", \"Writer\", false, \"Writer\",\n\t\t\troleIds);\n\n\t\troleIds = new long[] {\n\t\t\tpowerUserRole.getRoleId(), publisherRole.getRoleId(),\n\t\t\tportalContentReviewer.getRoleId()\n\t\t};\n\n\t\tUser richardUser = addUser(\n\t\t\tcompanyId, \"richard\", \"Richard\", \"Editor\", true, \"Publisher\",\n\t\t\troleIds);\n\n\t\t// Asset\n\n\t\tAssetCategory learningAssetCategory = _assetCategories.get(\"Learning\");\n\t\tAssetCategory liferayAssetCategory = _assetCategories.get(\"Liferay\");\n\n\t\t// Blogs\n\n\t\tServiceContext serviceContext = new ServiceContext();\n\n\t\tserviceContext.setAddGroupPermissions(true);\n\t\tserviceContext.setAddGuestPermissions(true);\n\t\tserviceContext.setAssetTagNames(\n\t\t\tnew String[] {\"new\", \"features\", \"control panel\"});\n\t\tserviceContext.setAssetCategoryIds(\n\t\t\tnew long[] {\n\t\t\t\tlearningAssetCategory.getCategoryId(),\n\t\t\t\tliferayAssetCategory.getCategoryId()\n\t\t\t});\n\t\tserviceContext.setScopeGroupId(brunoUser.getGroup().getGroupId());\n\n\t\taddBlogsEntry(\n\t\t\tbrunoUser.getUserId(), \"New Control Panel!!\",\n\t\t\t\"/users/blogs/controlpanel.xml\", serviceContext);\n\n\t\tserviceContext.setAssetCategoryIds(\n\t\t\tnew long[] {\n\t\t\t\tlearningAssetCategory.getCategoryId(),\n\t\t\t\tliferayAssetCategory.getCategoryId()\n\t\t\t});\n\t\tserviceContext.setAssetTagNames(\n\t\t\tnew String[] {\n\t\t\t\t\"configuration\", \"portal.properties\", \"customization\"\n\t\t\t});\n\n\t\taddBlogsEntry(\n\t\t\tbrunoUser.getUserId(),\n\t\t\t\"Configuration of the portal: portal.properties\",\n\t\t\t\"/users/blogs/portalproperties.xml\", serviceContext);\n\n\t\tserviceContext.setAssetCategoryIds(\n\t\t\tnew long[] {\n\t\t\t\tlearningAssetCategory.getCategoryId(),\n\t\t\t\tliferayAssetCategory.getCategoryId()\n\t\t\t});\n\t\tserviceContext.setAssetTagNames(\n\t\t\tnew String[] {\"new\", \"wiki\", \"knowledge\"});\n\t\tserviceContext.setScopeGroupId(johnUser.getGroup().getGroupId());\n\n\t\taddBlogsEntry(\n\t\t\tjohnUser.getUserId(), \"Using the wiki\", \"/users/blogs/wiki.xml\",\n\t\t\tserviceContext);\n\n\t\tserviceContext.setAssetCategoryIds(\n\t\t\tnew long[] {\n\t\t\t\tlearningAssetCategory.getCategoryId(),\n\t\t\t\tliferayAssetCategory.getCategoryId()\n\t\t\t});\n\t\tserviceContext.setAssetTagNames(\n\t\t\tnew String[] {\"new\", \"chat\", \"communications\", \"features\"});\n\t\tserviceContext.setScopeGroupId(michelleUser.getGroup().getGroupId());\n\n\t\taddBlogsEntry(\n\t\t\tmichelleUser.getUserId(), \"We have an amazing Chat!\",\n\t\t\t\"/users/blogs/chat.xml\", serviceContext);\n\n\t\t// Document library\n\n\t\tFolder folder = addDLFolder(\n\t\t\tbrunoUser.getUserId(), brunoUser.getGroup().getGroupId(),\n\t\t\t\"Important Documents\", \"Documents related with the company\");\n\n\t\tserviceContext.setAssetTagNames(\n\t\t\tnew String[] {\"document\", \"budget\", \"2009\"});\n\n\t\taddDLFileEntry(\n\t\t\tbrunoUser.getUserId(), folder.getGroupId(), folder.getFolderId(),\n\t\t\t\"/users/document_library/Budget.xls\", \"Budget.xls\",\n\t\t\tContentTypes.APPLICATION_VND_MS_EXCEL, \"Budget\",\n\t\t\t\"Budgets for the current year\", serviceContext);\n\n\t\taddDLFolder(\n\t\t\tmichelleUser.getUserId(), michelleUser.getGroup().getGroupId(),\n\t\t\t\"My Documents\", \"Personal docs\");\n\n\t\tfolder = addDLFolder(\n\t\t\tmichelleUser.getUserId(), michelleUser.getGroup().getGroupId(),\n\t\t\t\"Work Documents\", \"Works docs\");\n\n\t\tserviceContext.setAssetTagNames(\n\t\t\tnew String[] {\"document\", \"notes\", \"meeting\"});\n\n\t\taddDLFileEntry(\n\t\t\tmichelleUser.getUserId(), folder.getGroupId(), folder.getFolderId(),\n\t\t\t\"/users/document_library/Notes from the last meeting.doc\",\n\t\t\t\"Notes from the last meeting.doc\", ContentTypes.APPLICATION_MSWORD,\n\t\t\t\"Notes from the last meeting\", \"Important notes\", serviceContext);\n\n\t\taddDLFolder(\n\t\t\trichardUser.getUserId(), richardUser.getGroup().getGroupId(),\n\t\t\t\"Documentation\", StringPool.BLANK);\n\n\t\tfolder = addDLFolder(\n\t\t\trichardUser.getUserId(),richardUser.getGroup().getGroupId(),\n\t\t\t\"Innovation\", \"New things\");\n\n\t\tserviceContext.setAssetTagNames(\n\t\t\tnew String[] {\"new\", \"features\", \"2009\"});\n\n\t\taddDLFileEntry(\n\t\t\trichardUser.getUserId(), folder.getGroupId(), folder.getFolderId(),\n\t\t\t\"/users/document_library/New Features.ppt\", \"New Features.ppt\",\n\t\t\tContentTypes.APPLICATION_VND_MS_POWERPOINT, \"New Features\",\n\t\t\t\"Features for the current year\", serviceContext);\n\n\t\t// Message boards\n\n\t\tOrganization sevenCogsOrganization =\n\t\t\tOrganizationLocalServiceUtil.getOrganization(\n\t\t\tcompanyId, \"7Cogs, Inc.\");\n\n\t\tserviceContext.setScopeGroupId(\n\t\t\tsevenCogsOrganization.getGroup().getGroupId());\n\n\t\tMBCategory mbCategory = addMBCategory(\n\t\t\tbrunoUser.getUserId(), \"Using the forum\",\n\t\t\t\"Some advice on using the forum\", serviceContext);\n\n\t\tserviceContext.setAssetTagNames(\n\t\t\tnew String[] {\"forums\", \"liferay\", \"7cogs\"});\n\n\t\taddMBMessage(\n\t\t\tbrunoUser.getUserId(), brunoUser.getFullName(),\n\t\t\tmbCategory.getGroupId(), mbCategory.getCategoryId(), 0, 0,\n\t\t\t\"Nice Forums\", \"/sample/message_boards/general.xml\",\n\t\t\tserviceContext);\n\n\t\tmbCategory = addMBCategory(\n\t\t\tbrunoUser.getUserId(), \"General Questions\",\n\t\t\t\"Product questions and more!\", serviceContext);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"vix-998\", \"liferay\"});\n\n\t\tMBMessage vix1Message = addMBMessage(\n\t\t\tbrunoUser.getUserId(), brunoUser.getFullName(),\n\t\t\tmbCategory.getGroupId(), mbCategory.getCategoryId(), 0, 0,\n\t\t\t\"About the Vix-998\", \"/sample/message_boards/vix1.xml\",\n\t\t\tserviceContext);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"vix-998\", \"latin\"});\n\n\t\tMBMessage vix2Message = addMBMessage(\n\t\t\trichardUser.getUserId(), richardUser.getFullName(),\n\t\t\tmbCategory.getGroupId(), mbCategory.getCategoryId(),\n\t\t\tvix1Message.getThreadId(), vix1Message.getMessageId(),\n\t\t\t\"RE: About the Vix-998\", \"/sample/message_boards/vix2.xml\",\n\t\t\tserviceContext);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"vix-998\", \"vulgo\"});\n\n\t\taddMBMessage(\n\t\t\tmichelleUser.getUserId(), michelleUser.getFullName(),\n\t\t\tmbCategory.getGroupId(), mbCategory.getCategoryId(),\n\t\t\tvix1Message.getThreadId(), vix2Message.getMessageId(),\n\t\t\t\"RE: About the Vix-998\", \"/sample/message_boards/vix3.xml\",\n\t\t\tserviceContext);\n\n\t\t// Social\n\n\t\taddSocialRequest(michelleUser, brunoUser, true);\n\t\taddSocialRequest(michelleUser, johnUser, true);\n\t\taddSocialRequest(michelleUser, richardUser, true);\n\n\t\taddSocialRequest(johnUser, brunoUser, false);\n\t\taddSocialRequest(johnUser, richardUser, false);\n\t}","id":50641,"modified_method":"protected void setupUsers(long companyId) throws Exception {\n\n\t\t// Roles\n\n\t\tRole adminRole = RoleLocalServiceUtil.getRole(\n\t\t\tcompanyId, RoleConstants.ADMINISTRATOR);\n\n\t\tRole portalContentReviewer = RoleLocalServiceUtil.getRole(\n\t\t\tcompanyId, \"Portal Content Reviewer\");\n\n\t\tRole powerUserRole = RoleLocalServiceUtil.getRole(\n\t\t\tcompanyId, RoleConstants.POWER_USER);\n\n\t\tRole publisherRole = RoleLocalServiceUtil.getRole(\n\t\t\tcompanyId, \"Publisher\");\n\n\t\tRole writerRole = RoleLocalServiceUtil.getRole(\n\t\t\tcompanyId, \"Writer\");\n\n\t\t// Users\n\n\t\tlong[] roleIds = new long[] {\n\t\t\tadminRole.getRoleId(), powerUserRole.getRoleId()\n\t\t};\n\n\t\tUser brunoUser = addUser(\n\t\t\tcompanyId, \"bruno\", \"Bruno\", \"Admin\", true, \"Administrator\",\n\t\t\troleIds);\n\n\t\troleIds = new long[] {powerUserRole.getRoleId()};\n\n\t\tUser bradleyUser = addUser(\n\t\t\tcompanyId, \"bradley\", \"Bradley\", \"Regular\", true, \"Employee\",\n\t\t\troleIds);\n\n\t\troleIds = new long[] {\n\t\t\tpowerUserRole.getRoleId(), writerRole.getRoleId()\n\t\t};\n\n\t\tUser michelleUser = addUser(\n\t\t\tcompanyId, \"michelle\", \"Michelle\", \"Writer\", false, \"Writer\",\n\t\t\troleIds);\n\n\t\troleIds = new long[] {\n\t\t\tpowerUserRole.getRoleId(), publisherRole.getRoleId(),\n\t\t\tportalContentReviewer.getRoleId()\n\t\t};\n\n\t\tUser richardUser = addUser(\n\t\t\tcompanyId, \"richard\", \"Richard\", \"Editor\", true, \"Publisher\",\n\t\t\troleIds);\n\n\t\t// Asset\n\n\t\tAssetCategory learningAssetCategory = _assetCategories.get(\"Learning\");\n\t\tAssetCategory liferayAssetCategory = _assetCategories.get(\"Liferay\");\n\n\t\t// Blogs\n\n\t\tServiceContext serviceContext = new ServiceContext();\n\n\t\tserviceContext.setAssetTagNames(\n\t\t\tnew String[] {\"new\", \"features\", \"control panel\"});\n\t\tserviceContext.setAssetCategoryIds(\n\t\t\tnew long[] {\n\t\t\t\tlearningAssetCategory.getCategoryId(),\n\t\t\t\tliferayAssetCategory.getCategoryId()\n\t\t\t});\n\t\tserviceContext.setScopeGroupId(brunoUser.getGroup().getGroupId());\n\n\t\taddBlogsEntry(\n\t\t\tbrunoUser.getUserId(), \"New Control Panel!!\",\n\t\t\t\"/users/blogs/controlpanel.xml\", serviceContext);\n\n\t\tserviceContext.setAssetCategoryIds(\n\t\t\tnew long[] {\n\t\t\t\tlearningAssetCategory.getCategoryId(),\n\t\t\t\tliferayAssetCategory.getCategoryId()\n\t\t\t});\n\t\tserviceContext.setAssetTagNames(\n\t\t\tnew String[] {\n\t\t\t\t\"configuration\", \"portal.properties\", \"customization\"\n\t\t\t});\n\n\t\taddBlogsEntry(\n\t\t\tbrunoUser.getUserId(),\n\t\t\t\"Configuration of the portal: portal.properties\",\n\t\t\t\"/users/blogs/portalproperties.xml\", serviceContext);\n\n\t\tserviceContext.setAssetCategoryIds(\n\t\t\tnew long[] {\n\t\t\t\tlearningAssetCategory.getCategoryId(),\n\t\t\t\tliferayAssetCategory.getCategoryId()\n\t\t\t});\n\t\tserviceContext.setAssetTagNames(\n\t\t\tnew String[] {\"new\", \"wiki\", \"knowledge\"});\n\t\tserviceContext.setScopeGroupId(bradleyUser.getGroup().getGroupId());\n\n\t\taddBlogsEntry(\n\t\t\tbradleyUser.getUserId(), \"Using the wiki\", \"/users/blogs/wiki.xml\",\n\t\t\tserviceContext);\n\n\t\tserviceContext.setAssetCategoryIds(\n\t\t\tnew long[] {\n\t\t\t\tlearningAssetCategory.getCategoryId(),\n\t\t\t\tliferayAssetCategory.getCategoryId()\n\t\t\t});\n\t\tserviceContext.setAssetTagNames(\n\t\t\tnew String[] {\"new\", \"chat\", \"communications\", \"features\"});\n\t\tserviceContext.setScopeGroupId(michelleUser.getGroup().getGroupId());\n\n\t\taddBlogsEntry(\n\t\t\tmichelleUser.getUserId(), \"We have an amazing Chat!\",\n\t\t\t\"/users/blogs/chat.xml\", serviceContext);\n\n\t\t// Document library\n\n\t\tFolder folder = addDLFolder(\n\t\t\tbrunoUser.getUserId(), brunoUser.getGroup().getGroupId(),\n\t\t\t\"Important Documents\", \"Documents related with the company\");\n\n\t\tserviceContext.setAssetTagNames(\n\t\t\tnew String[] {\"document\", \"budget\", \"2009\"});\n\n\t\taddDLFileEntry(\n\t\t\tbrunoUser.getUserId(), folder.getGroupId(), folder.getFolderId(),\n\t\t\t\"/users/document_library/Budget.xls\", \"Budget.xls\",\n\t\t\tContentTypes.APPLICATION_VND_MS_EXCEL, \"Budget\",\n\t\t\t\"Budgets for the current year\", serviceContext);\n\n\t\taddDLFolder(\n\t\t\tmichelleUser.getUserId(), michelleUser.getGroup().getGroupId(),\n\t\t\t\"My Documents\", \"Personal docs\");\n\n\t\tfolder = addDLFolder(\n\t\t\tmichelleUser.getUserId(), michelleUser.getGroup().getGroupId(),\n\t\t\t\"Work Documents\", \"Works docs\");\n\n\t\tserviceContext.setAssetTagNames(\n\t\t\tnew String[] {\"document\", \"notes\", \"meeting\"});\n\n\t\taddDLFileEntry(\n\t\t\tmichelleUser.getUserId(), folder.getGroupId(), folder.getFolderId(),\n\t\t\t\"/users/document_library/Notes from the last meeting.doc\",\n\t\t\t\"Notes from the last meeting.doc\", ContentTypes.APPLICATION_MSWORD,\n\t\t\t\"Notes from the last meeting\", \"Important notes\", serviceContext);\n\n\t\taddDLFolder(\n\t\t\trichardUser.getUserId(), richardUser.getGroup().getGroupId(),\n\t\t\t\"Documentation\", StringPool.BLANK);\n\n\t\tfolder = addDLFolder(\n\t\t\trichardUser.getUserId(),richardUser.getGroup().getGroupId(),\n\t\t\t\"Innovation\", \"New things\");\n\n\t\tserviceContext.setAssetTagNames(\n\t\t\tnew String[] {\"new\", \"features\", \"2009\"});\n\n\t\taddDLFileEntry(\n\t\t\trichardUser.getUserId(), folder.getGroupId(), folder.getFolderId(),\n\t\t\t\"/users/document_library/New Features.ppt\", \"New Features.ppt\",\n\t\t\tContentTypes.APPLICATION_VND_MS_POWERPOINT, \"New Features\",\n\t\t\t\"Features for the current year\", serviceContext);\n\n\t\t// Message boards\n\n\t\tOrganization sevenCogsOrganization =\n\t\t\tOrganizationLocalServiceUtil.getOrganization(\n\t\t\tcompanyId, \"7Cogs, Inc.\");\n\n\t\tserviceContext.setScopeGroupId(\n\t\t\tsevenCogsOrganization.getGroup().getGroupId());\n\n\t\tMBCategory mbCategory = addMBCategory(\n\t\t\tbrunoUser.getUserId(), \"Using the forum\",\n\t\t\t\"Some advice on using the forum\", serviceContext);\n\n\t\tserviceContext.setAssetTagNames(\n\t\t\tnew String[] {\"forums\", \"liferay\", \"7cogs\"});\n\n\t\taddMBMessage(\n\t\t\tbrunoUser.getUserId(), brunoUser.getFullName(),\n\t\t\tmbCategory.getGroupId(), mbCategory.getCategoryId(), 0, 0,\n\t\t\t\"Nice Forums\", \"/sample/message_boards/general.xml\",\n\t\t\tserviceContext);\n\n\t\tmbCategory = addMBCategory(\n\t\t\tbrunoUser.getUserId(), \"General Questions\",\n\t\t\t\"Product questions and more!\", serviceContext);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"vix-998\", \"liferay\"});\n\n\t\tMBMessage vix1Message = addMBMessage(\n\t\t\tbrunoUser.getUserId(), brunoUser.getFullName(),\n\t\t\tmbCategory.getGroupId(), mbCategory.getCategoryId(), 0, 0,\n\t\t\t\"About the Vix-998\", \"/sample/message_boards/vix1.xml\",\n\t\t\tserviceContext);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"vix-998\", \"latin\"});\n\n\t\tMBMessage vix2Message = addMBMessage(\n\t\t\trichardUser.getUserId(), richardUser.getFullName(),\n\t\t\tmbCategory.getGroupId(), mbCategory.getCategoryId(),\n\t\t\tvix1Message.getThreadId(), vix1Message.getMessageId(),\n\t\t\t\"RE: About the Vix-998\", \"/sample/message_boards/vix2.xml\",\n\t\t\tserviceContext);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"vix-998\", \"vulgo\"});\n\n\t\taddMBMessage(\n\t\t\tmichelleUser.getUserId(), michelleUser.getFullName(),\n\t\t\tmbCategory.getGroupId(), mbCategory.getCategoryId(),\n\t\t\tvix1Message.getThreadId(), vix2Message.getMessageId(),\n\t\t\t\"RE: About the Vix-998\", \"/sample/message_boards/vix3.xml\",\n\t\t\tserviceContext);\n\n\t\t// Social\n\n\t\taddSocialRequest(michelleUser, brunoUser, true);\n\t\taddSocialRequest(michelleUser, bradleyUser, true);\n\t\taddSocialRequest(michelleUser, richardUser, true);\n\n\t\taddSocialRequest(bradleyUser, brunoUser, false);\n\t\taddSocialRequest(bradleyUser, richardUser, false);\n\t}","commit_id":"ac2b4067f2d1064870b5e54f3c3a8ee7aa73344c","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected void setupRoles(long companyId, long defaultUserId)\n\t\tthrows Exception {\n\n\t\tMap<Locale, String> descriptionMap = new HashMap<Locale, String>();\n\n\t\tdescriptionMap.put(\n\t\t\tLocaleUtil.getDefault(),\n\t\t\t\"Publishers are responsible for publishing content.\");\n\n\t\tRole publisherRole = RoleLocalServiceUtil.addRole(\n\t\t\tdefaultUserId, companyId, \"Publisher\", null, descriptionMap,\n\t\t\tRoleConstants.TYPE_REGULAR);\n\n\t\tsetRolePermissions(\n\t\t\tpublisherRole, PortletKeys.JOURNAL,\n\t\t\tnew String[] {ActionKeys.ACCESS_IN_CONTROL_PANEL});\n\n\t\tsetRolePermissions(\n\t\t\tpublisherRole, \"com.liferay.portlet.journal\",\n\t\t\tnew String[] {\n\t\t\t\tActionKeys.ADD_ARTICLE, ActionKeys.ADD_FEED,\n\t\t\t\tActionKeys.ADD_STRUCTURE, ActionKeys.ADD_TEMPLATE\n\t\t\t});\n\n\t\tsetRolePermissions(\n\t\t\tpublisherRole, JournalArticle.class.getName(),\n\t\t\tnew String[] {\n\t\t\t\tActionKeys.ADD_DISCUSSION, ActionKeys.DELETE, ActionKeys.EXPIRE,\n\t\t\t\tActionKeys.PERMISSIONS, ActionKeys.UPDATE, ActionKeys.VIEW\n\t\t\t});\n\n\t\tdescriptionMap.clear();\n\n\t\tdescriptionMap.put(\n\t\t\tLocaleUtil.getDefault(),\n\t\t\t\"Writers are responsible for creating content.\");\n\n\t\tRole writerRole = RoleLocalServiceUtil.addRole(\n\t\t\tdefaultUserId, companyId, \"Writer\", null, descriptionMap,\n\t\t\tRoleConstants.TYPE_REGULAR);\n\n\t\tsetRolePermissions(\n\t\t\twriterRole, PortletKeys.JOURNAL,\n\t\t\tnew String[] {ActionKeys.ACCESS_IN_CONTROL_PANEL});\n\n\t\tsetRolePermissions(\n\t\t\twriterRole, \"com.liferay.portlet.journal\",\n\t\t\tnew String[] {\n\t\t\t\tActionKeys.ADD_ARTICLE, ActionKeys.ADD_FEED,\n\t\t\t\tActionKeys.ADD_STRUCTURE, ActionKeys.ADD_TEMPLATE\n\t\t\t});\n\n\t\tsetRolePermissions(\n\t\t\twriterRole, JournalArticle.class.getName(),\n\t\t\tnew String[] {ActionKeys.UPDATE, ActionKeys.VIEW});\n\t}","id":50642,"modified_method":"protected void setupRoles(long companyId, long defaultUserId)\n\t\tthrows Exception {\n\n\t\tMap<Locale, String> descriptionMap = new HashMap<Locale, String>();\n\n\t\tdescriptionMap.put(\n\t\t\tLocaleUtil.getDefault(),\n\t\t\t\"Publishers are responsible for publishing content.\");\n\n\t\tRole publisherRole = RoleLocalServiceUtil.fetchRole(\n\t\t\tcompanyId, \"Publisher\");\n\n\t\tif (publisherRole == null) {\n\t\t\tpublisherRole = RoleLocalServiceUtil.addRole(\n\t\t\t\tdefaultUserId, companyId, \"Publisher\", null, descriptionMap,\n\t\t\t\tRoleConstants.TYPE_REGULAR);\n\t\t}\n\n\t\tsetRolePermissions(\n\t\t\tpublisherRole, PortletKeys.JOURNAL,\n\t\t\tnew String[] {ActionKeys.ACCESS_IN_CONTROL_PANEL});\n\n\t\tsetRolePermissions(\n\t\t\tpublisherRole, \"com.liferay.portlet.journal\",\n\t\t\tnew String[] {\n\t\t\t\tActionKeys.ADD_ARTICLE, ActionKeys.ADD_FEED,\n\t\t\t\tActionKeys.ADD_STRUCTURE, ActionKeys.ADD_TEMPLATE\n\t\t\t});\n\n\t\tsetRolePermissions(\n\t\t\tpublisherRole, JournalArticle.class.getName(),\n\t\t\tnew String[] {\n\t\t\t\tActionKeys.ADD_DISCUSSION, ActionKeys.DELETE, ActionKeys.EXPIRE,\n\t\t\t\tActionKeys.PERMISSIONS, ActionKeys.UPDATE, ActionKeys.VIEW\n\t\t\t});\n\n\t\tdescriptionMap.clear();\n\n\t\tdescriptionMap.put(\n\t\t\tLocaleUtil.getDefault(),\n\t\t\t\"Writers are responsible for creating content.\");\n\n\t\tRole writerRole = RoleLocalServiceUtil.fetchRole(\n\t\t\tcompanyId, \"Writer\");\n\n\t\tif (writerRole == null) {\n\t\t\twriterRole = RoleLocalServiceUtil.addRole(\n\t\t\t\tdefaultUserId, companyId, \"Writer\", null, descriptionMap,\n\t\t\t\tRoleConstants.TYPE_REGULAR);\n\t\t}\n\n\t\tsetRolePermissions(\n\t\t\twriterRole, PortletKeys.JOURNAL,\n\t\t\tnew String[] {ActionKeys.ACCESS_IN_CONTROL_PANEL});\n\n\t\tsetRolePermissions(\n\t\t\twriterRole, \"com.liferay.portlet.journal\",\n\t\t\tnew String[] {\n\t\t\t\tActionKeys.ADD_ARTICLE, ActionKeys.ADD_FEED,\n\t\t\t\tActionKeys.ADD_STRUCTURE, ActionKeys.ADD_TEMPLATE\n\t\t\t});\n\n\t\tsetRolePermissions(\n\t\t\twriterRole, JournalArticle.class.getName(),\n\t\t\tnew String[] {ActionKeys.UPDATE, ActionKeys.VIEW});\n\t}","commit_id":"ac2b4067f2d1064870b5e54f3c3a8ee7aa73344c","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected MBMessage addMBMessage(\n\t\t\tlong userId, String userName, long groupId, long categoryId,\n\t\t\tlong threadId, long parentMessageId, String subject,\n\t\t\tString filePath, ServiceContext serviceContext)\n\t\tthrows Exception {\n\n\t\tString fileName = StringUtil.extractLast(filePath, StringPool.SLASH);\n\n\t\tString body = getString(filePath);\n\n\t\tList<ObjectValuePair<String, InputStream>> inputStreamOVPs =\n\t\t\tnew ArrayList<ObjectValuePair<String, InputStream>>();\n\n\t\tInputStream inputStream = getInputStream(filePath);\n\n\t\tObjectValuePair<String, InputStream> inputStreamOVP =\n\t\t\tnew ObjectValuePair<String, InputStream>(fileName, inputStream);\n\n\t\tinputStreamOVPs.add(inputStreamOVP);\n\n\t\treturn MBMessageLocalServiceUtil.addMessage(\n\t\t\tuserId, userName, groupId, categoryId, threadId, parentMessageId,\n\t\t\tsubject, body, StringPool.BLANK, inputStreamOVPs, false, -1.0,\n\t\t\tfalse, serviceContext);\n\t}","id":50643,"modified_method":"protected MBMessage addMBMessage(\n\t\t\tlong userId, String userName, long groupId, long categoryId,\n\t\t\tlong threadId, long parentMessageId, String subject,\n\t\t\tString filePath, ServiceContext serviceContext)\n\t\tthrows Exception {\n\n\t\tString fileName = StringUtil.extractLast(filePath, StringPool.SLASH);\n\n\t\tString body = getString(filePath);\n\n\t\tList<ObjectValuePair<String, InputStream>> inputStreamOVPs =\n\t\t\tnew ArrayList<ObjectValuePair<String, InputStream>>();\n\n\t\tInputStream inputStream = getInputStream(filePath);\n\n\t\tObjectValuePair<String, InputStream> inputStreamOVP =\n\t\t\tnew ObjectValuePair<String, InputStream>(fileName, inputStream);\n\n\t\tinputStreamOVPs.add(inputStreamOVP);\n\n\t\tserviceContext.setAddGroupPermissions(true);\n\t\tserviceContext.setAddGuestPermissions(true);\n\n\t\treturn MBMessageLocalServiceUtil.addMessage(\n\t\t\tuserId, userName, groupId, categoryId, threadId, parentMessageId,\n\t\t\tsubject, body, MBMessageConstants.DEFAULT_FORMAT, inputStreamOVPs,\n\t\t\tfalse, -1.0, false, serviceContext);\n\t}","commit_id":"ac2b4067f2d1064870b5e54f3c3a8ee7aa73344c","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected void removePortletBorder(Layout layout, String portletId)\n\t\tthrows Exception {\n\n\t\tPortletPreferences portletSetup =\n\t\t\tPortletPreferencesFactoryUtil.getLayoutPortletSetup(\n\t\t\t\tlayout, portletId);\n\n\t\tportletSetup.setValue(\n\t\t\t\"portlet-setup-show-borders\", String.valueOf(Boolean.FALSE));\n\n\t\tportletSetup.store();\n\t}","id":50644,"modified_method":"protected void removePortletBorder(Layout layout, String portletId)\n\t\tthrows Exception {\n\n\t\tPortletPreferences portletSetup =\n\t\t\tPortletPreferencesFactoryUtil.getLayoutPortletSetup(\n\t\t\t\tlayout, portletId);\n\n\t\tportletSetup.setValue(\n\t\t\t\"portletSetupShowBorders\", String.valueOf(Boolean.FALSE));\n\n\t\tportletSetup.store();\n\t}","commit_id":"ac2b4067f2d1064870b5e54f3c3a8ee7aa73344c","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected void setupOrganizations(long companyId, long defaultUserId)\n\t\tthrows Exception {\n\n\t\t// 7Cogs, Inc. organization\n\n\t\tlong userId = defaultUserId;\n\t\tlong parentOrganizationId =\n\t\t\tOrganizationConstants.DEFAULT_PARENT_ORGANIZATION_ID;\n\t\tString name = \"7Cogs, Inc.\";\n\t\tString type = OrganizationConstants.TYPE_REGULAR_ORGANIZATION;\n\t\tboolean recursable = true;\n\t\tlong regionId = 0;\n\t\tlong countryId = 0;\n\t\tint statusId = GetterUtil.getInteger(PropsUtil.get(\n\t\t\t\"sql.data.com.liferay.portal.model.ListType.organization.status\"));\n\t\tString comments = null;\n\n\t\tServiceContext serviceContext = new ServiceContext();\n\n\t\tserviceContext.setAddGroupPermissions(true);\n\t\tserviceContext.setAddGuestPermissions(true);\n\n\t\tOrganization organization =\n\t\t\tOrganizationLocalServiceUtil.addOrganization(\n\t\t\t\tuserId, parentOrganizationId, name, type, recursable, regionId,\n\t\t\t\tcountryId, statusId, comments, true, serviceContext);\n\n\t\t// Group\n\n\t\tGroup group = organization.getGroup();\n\n\t\tGroupLocalServiceUtil.updateFriendlyURL(group.getGroupId(), \"/7cogs\");\n\n\t\tserviceContext.setScopeGroupId(group.getGroupId());\n\n\t\t// Layout set\n\n\t\tLayoutSetLocalServiceUtil.updateLogo(\n\t\t\tgroup.getGroupId(), false, true,\n\t\t\tgetInputStream(\"/sample/images/logo.png\"));\n\n\t\tLayoutSetLocalServiceUtil.updateLookAndFeel(\n\t\t\tgroup.getGroupId(), false, \"sevencogs_WAR_sevencogstheme\", \"01\", \"\",\n\t\t\tfalse);\n\n\t\t// Asset\n\n\t\tAssetVocabulary topicAssetVocabulary = addAssetVocabulary(\n\t\t\tdefaultUserId, \"Topic\", serviceContext);\n\n\t\tAssetVocabulary imageAssetVocabulary = addAssetVocabulary(\n\t\t\tdefaultUserId, \"Image Type\", serviceContext);\n\n\t\tAssetCategory iconAssetCategory = addAssetCategory(\n\t\t\tdefaultUserId, 0, \"Icon\", imageAssetVocabulary.getVocabularyId(),\n\t\t\tserviceContext);\n\n\t\tAssetCategory bannerAssetCategory = addAssetCategory(\n\t\t\tdefaultUserId, 0, \"Banner\", imageAssetVocabulary.getVocabularyId(),\n\t\t\tserviceContext);\n\n\t\tAssetCategory learningAssetCategory = addAssetCategory(\n\t\t\tdefaultUserId, 0, \"Learning\",\n\t\t\ttopicAssetVocabulary.getVocabularyId(), serviceContext);\n\n\t\tAssetCategory productsAssetCategory = addAssetCategory(\n\t\t\tdefaultUserId, 0, \"Products\",\n\t\t\ttopicAssetVocabulary.getVocabularyId(), serviceContext);\n\n\t\tAssetCategory liferayAssetCategory = addAssetCategory(\n\t\t\tdefaultUserId, 0, \"Liferay\", topicAssetVocabulary.getVocabularyId(),\n\t\t\tserviceContext);\n\n\t\t_assetCategories = new HashMap<String, AssetCategory>();\n\n\t\t_assetCategories.put(\"Icon\", iconAssetCategory);\n\t\t_assetCategories.put(\"Banner\", bannerAssetCategory);\n\t\t_assetCategories.put(\"Learning\", learningAssetCategory);\n\t\t_assetCategories.put(\"Products\", productsAssetCategory);\n\t\t_assetCategories.put(\"Liferay\", liferayAssetCategory);\n\n\t\t// Journal\n\n\t\taddJournalStructure(\n\t\t\tdefaultUserId, group.getGroupId(),\n\t\t\t\"/sample/journal/structures/single_image.xml\");\n\t\taddJournalTemplate(\n\t\t\tdefaultUserId, group.getGroupId(),\n\t\t\t\"/sample/journal/templates/single_image.xml\");\n\n\t\t// Image gallery\n\n\t\tserviceContext.setScopeGroupId(group.getGroupId());\n\n\t\tFolder folder = DLAppLocalServiceUtil.addFolder(\n\t\t\tdefaultUserId, group.getGroupId(), 0, \"7Cogs Web Content\",\n\t\t\t\"Images used for content\", serviceContext);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"icons\"});\n\t\tserviceContext.setAssetCategoryIds(\n\t\t\tnew long[] {iconAssetCategory.getCategoryId()});\n\n\t\tFileEntry cogBlueIconFileEntry = addDLFileEntry(\n\t\t\tdefaultUserId, folder.getFolderId(), \"/sample/images/cog_blue.png\",\n\t\t\tserviceContext);\n\n\t\tFileEntry cogLightBlueIconFileEntry = addDLFileEntry(\n\t\t\tdefaultUserId, folder.getFolderId(),\n\t\t\t\"/sample/images/cog_light_blue.png\", serviceContext);\n\n\t\tFileEntry cogOrangeIconFileEntry = addDLFileEntry(\n\t\t\tdefaultUserId, folder.getFolderId(),\n\t\t\t\"/sample/images/cog_orange.png\", serviceContext);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"home page\", \"blogs\"});\n\t\tserviceContext.setAssetCategoryIds(\n\t\t\tnew long[] {iconAssetCategory.getCategoryId()});\n\n\t\tFileEntry blogsIconFileEntry = addDLFileEntry(\n\t\t\tdefaultUserId, folder.getFolderId(),\n\t\t\t\"/sample/images/blogs_icon.png\", serviceContext);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"home page\"});\n\t\tserviceContext.setAssetCategoryIds(\n\t\t\tnew long[] {productsAssetCategory.getCategoryId()});\n\n\t\tFileEntry cogNetworkAdFileEntry = addDLFileEntry(\n\t\t\tdefaultUserId, folder.getFolderId(),\n\t\t\t\"/sample/images/cog_network_advertisement.png\",\n\t\t\tserviceContext);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"home page\", \"forums\"});\n\t\tserviceContext.setAssetCategoryIds(\n\t\t\tnew long[] {iconAssetCategory.getCategoryId()});\n\n\t\tFileEntry forumsIconFileEntry = addDLFileEntry(\n\t\t\tdefaultUserId, folder.getFolderId(),\n\t\t\t\"/sample/images/forums_icon.png\", serviceContext);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"liferay\", \"logo\"});\n\t\tserviceContext.setAssetCategoryIds(\n\t\t\tnew long[] {liferayAssetCategory.getCategoryId()});\n\n\t\tFileEntry liferayLogoFileEntry = addDLFileEntry(\n\t\t\tdefaultUserId, folder.getFolderId(),\n\t\t\t\"/sample/images/liferay_logo.png\", serviceContext);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"home page\"});\n\t\tserviceContext.setAssetCategoryIds(\n\t\t\tnew long[] {bannerAssetCategory.getCategoryId()});\n\n\t\tFileEntry homePageBannerFileEntry = addDLFileEntry(\n\t\t\tdefaultUserId, folder.getFolderId(),\n\t\t\t\"/sample/images/home_page_banner.png\", serviceContext);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"home page\", \"products\"});\n\t\tserviceContext.setAssetCategoryIds(\n\t\t\tnew long[] {iconAssetCategory.getCategoryId()});\n\n\t\tFileEntry productsIconFileEntry = addDLFileEntry(\n\t\t\tdefaultUserId, folder.getFolderId(),\n\t\t\t\"/sample/images/products_icon.png\", serviceContext);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"products\"});\n\t\tserviceContext.setAssetCategoryIds(\n\t\t\tnew long[] {productsAssetCategory.getCategoryId()});\n\n\t\tFileEntry productLandingFileEntry = addDLFileEntry(\n\t\t\tdefaultUserId, folder.getFolderId(),\n\t\t\t\"/sample/images/product_landing.png\", serviceContext);\n\n\t\t// Home layout\n\n\t\tLayout layout = addLayout(\n\t\t\tgroup, \"Home\", false, \"/home\", \"home\");\n\n\t\t// Home Page Banner content portlet\n\n\t\tString portletId = addPortletId(\n\t\t\tlayout, PortletKeys.JOURNAL_CONTENT, \"column-1\");\n\n\t\tremovePortletBorder(layout, portletId);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"liferay\", \"7cogs\"});\n\n\t\tJournalArticle journalArticle = addJournalArticle(\n\t\t\tdefaultUserId, group.getGroupId(), \"Banner\",\n\t\t\t\"/sample/journal/articles/home_page_banner.xml\", serviceContext);\n\n\t\tString content = StringUtil.replace(\n\t\t\tjournalArticle.getContent(),\n\t\t\tnew String[] {\n\t\t\t\t\"[$GROUP_ID$]\",\n\t\t\t\t\"[$HOME_PAGE_BANNER_IG_IMAGE_UUID$]\"\n\t\t\t},\n\t\t\tnew String[] {\n\t\t\t\tString.valueOf(group.getGroupId()),\n\t\t\t\tString.valueOf(homePageBannerFileEntry.getUuid())\n\t\t\t});\n\n\t\tJournalArticleLocalServiceUtil.updateContent(\n\t\t\tgroup.getGroupId(), journalArticle.getArticleId(),\n\t\t\tjournalArticle.getVersion(), content);\n\n\t\tconfigureJournalContent(\n\t\t\tlayout, portletId, journalArticle.getArticleId());\n\n\t\t// Home Page Products Button content portlet\n\n\t\tportletId = addPortletId(\n\t\t\tlayout, PortletKeys.JOURNAL_CONTENT, \"column-2\");\n\n\t\tremovePortletBorder(layout, portletId);\n\n\t\tjournalArticle = addJournalArticle(\n\t\t\tdefaultUserId, group.getGroupId(), \"Products Button\",\n\t\t\t\"/sample/journal/articles/home_page_products_button.xml\",\n\t\t\tserviceContext);\n\n\t\tcontent = StringUtil.replace(\n\t\t\tjournalArticle.getContent(),\n\t\t\tnew String[] {\n\t\t\t\t\"[$GROUP_ID$]\",\n\t\t\t\t\"[$HOME_PAGE_PRODUCTS_IG_IMAGE_UUID$]\"\n\t\t\t},\n\t\t\tnew String[] {\n\t\t\t\tString.valueOf(group.getGroupId()),\n\t\t\t\tString.valueOf(productsIconFileEntry.getUuid())\n\t\t\t});\n\n\t\tJournalArticleLocalServiceUtil.updateContent(\n\t\t\tgroup.getGroupId(), journalArticle.getArticleId(),\n\t\t\tjournalArticle.getVersion(), content);\n\n\t\tconfigureJournalContent(\n\t\t\tlayout, portletId, journalArticle.getArticleId());\n\n\t\t// Home Page Blogs Button content portlet\n\n\t\tportletId = addPortletId(\n\t\t\tlayout, PortletKeys.JOURNAL_CONTENT, \"column-3\");\n\n\t\tremovePortletBorder(layout, portletId);\n\n\t\tjournalArticle = addJournalArticle(\n\t\t\tdefaultUserId, group.getGroupId(), \"Blogs Button\",\n\t\t\t\"/sample/journal/articles/home_page_blogs_button.xml\",\n\t\t\tserviceContext);\n\n\t\tcontent = StringUtil.replace(\n\t\t\tjournalArticle.getContent(),\n\t\t\tnew String[] {\n\t\t\t\t\"[$GROUP_ID$]\",\n\t\t\t\t\"[$HOME_PAGE_BLOGS_IG_IMAGE_UUID$]\"\n\t\t\t},\n\t\t\tnew String[] {\n\t\t\t\tString.valueOf(group.getGroupId()),\n\t\t\t\tString.valueOf(blogsIconFileEntry.getUuid())\n\t\t\t});\n\n\t\tJournalArticleLocalServiceUtil.updateContent(\n\t\t\tgroup.getGroupId(), journalArticle.getArticleId(),\n\t\t\tjournalArticle.getVersion(), content);\n\n\t\tconfigureJournalContent(\n\t\t\tlayout, portletId, journalArticle.getArticleId());\n\n\t\t// Home Page Forums Button content porltet\n\n\t\tportletId = addPortletId(\n\t\t\tlayout, PortletKeys.JOURNAL_CONTENT, \"column-4\");\n\n\t\tremovePortletBorder(layout, portletId);\n\n\t\tjournalArticle = addJournalArticle(\n\t\t\tdefaultUserId, group.getGroupId(), \"Forums Button\",\n\t\t\t\"/sample/journal/articles/home_page_forums_button.xml\",\n\t\t\tserviceContext);\n\n\t\tcontent = StringUtil.replace(\n\t\t\tjournalArticle.getContent(),\n\t\t\tnew String[] {\n\t\t\t\t\"[$GROUP_ID$]\",\n\t\t\t\t\"[$HOME_PAGE_FORUMS_IG_IMAGE_UUID$]\"\n\t\t\t},\n\t\t\tnew String[] {\n\t\t\t\tString.valueOf(group.getGroupId()),\n\t\t\t\tString.valueOf(forumsIconFileEntry.getUuid())\n\t\t\t});\n\n\t\tJournalArticleLocalServiceUtil.updateContent(\n\t\t\tgroup.getGroupId(), journalArticle.getArticleId(),\n\t\t\tjournalArticle.getVersion(), content);\n\n\t\tconfigureJournalContent(\n\t\t\tlayout, portletId, journalArticle.getArticleId());\n\n\t\t// Home Page Intro content portlet\n\n\t\tportletId = addPortletId(\n\t\t\tlayout, PortletKeys.JOURNAL_CONTENT, \"column-5\");\n\n\t\tremovePortletBorder(layout, portletId);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"front\"});\n\n\t\tjournalArticle = addJournalArticle(\n\t\t\tdefaultUserId, group.getGroupId(), \"Home Page Intro\",\n\t\t\t\"/sample/journal/articles/home_page_intro.xml\",\n\t\t\tserviceContext);\n\n\t\tcontent = StringUtil.replace(\n\t\t\tjournalArticle.getContent(),\n\t\t\tnew String[] {\n\t\t\t\t\"[$GROUP_ID$]\",\n\t\t\t\t\"[$PRODUCT_LANDING_IG_IMAGE_UUID$]\"\n\t\t\t},\n\t\t\tnew String[] {\n\t\t\t\tString.valueOf(group.getGroupId()),\n\t\t\t\tString.valueOf(productLandingFileEntry.getUuid())\n\t\t\t});\n\n\t\tJournalArticleLocalServiceUtil.updateContent(\n\t\t\tgroup.getGroupId(), journalArticle.getArticleId(),\n\t\t\tjournalArticle.getVersion(), content);\n\n\t\tconfigureJournalContent(\n\t\t\tlayout, portletId, journalArticle.getArticleId());\n\n\t\t// Cog Network Ad content portlet\n\n\t\tportletId = addPortletId(\n\t\t\tlayout, PortletKeys.JOURNAL_CONTENT, \"column-8\");\n\n\t\tremovePortletBorder(layout, portletId);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"liferay\", \"enterprise\"});\n\n\t\tjournalArticle = addJournalArticle(\n\t\t\tdefaultUserId, group.getGroupId(), \"Cog Network Ad\",\n\t\t\t\"/sample/journal/articles/home_cog_network_ad.xml\", serviceContext);\n\n\t\tcontent = StringUtil.replace(\n\t\t\tjournalArticle.getContent(),\n\t\t\tnew String[] {\n\t\t\t\t\"[$GROUP_ID$]\",\n\t\t\t\t\"[$COG_NETWORK_AD_IG_IMAGE_UUID$]\"\n\t\t\t},\n\t\t\tnew String[] {\n\t\t\t\tString.valueOf(group.getGroupId()),\n\t\t\t\tString.valueOf(cogNetworkAdFileEntry.getUuid())\n\t\t\t});\n\n\t\tJournalArticleLocalServiceUtil.updateContent(\n\t\t\tgroup.getGroupId(), journalArticle.getArticleId(),\n\t\t\tjournalArticle.getVersion(), content);\n\n\t\tconfigureJournalContent(\n\t\t\tlayout, portletId, journalArticle.getArticleId());\n\n\t\t// Products layout\n\n\t\tlayout = addLayout(\n\t\t\tgroup, \"Products\", false, \"/products\", \"1_2_columns_ii\");\n\n\t\t// Products Banner content portlet\n\n\t\tportletId = addPortletId(\n\t\t\tlayout, PortletKeys.JOURNAL_CONTENT, \"column-1\");\n\n\t\tremovePortletBorder(layout, portletId);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"Vix-998\", \"7cogs\"});\n\n\t\tjournalArticle = addJournalArticle(\n\t\t\tdefaultUserId, group.getGroupId(), \"Products Banner\",\n\t\t\t\"/sample/journal/articles/products_banner.xml\", serviceContext);\n\n\t\tconfigureJournalContent(\n\t\t\tlayout, portletId, journalArticle.getArticleId());\n\n\t\t// Products Landing Intro content portlet\n\n\t\tportletId = addPortletId(\n\t\t\tlayout, PortletKeys.JOURNAL_CONTENT, \"column-2\");\n\n\t\tremovePortletBorder(layout, portletId);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"products\"});\n\n\t\tjournalArticle = addJournalArticle(\n\t\t\tdefaultUserId, group.getGroupId(), \"Products Landing Intro\",\n\t\t\t\"/sample/journal/articles/products_landing_intro.xml\",\n\t\t\tserviceContext);\n\n\t\tcontent = StringUtil.replace(\n\t\t\tjournalArticle.getContent(),\n\t\t\tnew String[] {\n\t\t\t\t\"[$GROUP_ID$]\",\n\t\t\t\t\"[$PRODUCT_LANDING_IG_IMAGE_UUID$]\"\n\t\t\t},\n\t\t\tnew String[] {\n\t\t\t\tString.valueOf(group.getGroupId()),\n\t\t\t\tString.valueOf(productLandingFileEntry.getUuid())\n\t\t\t});\n\n\t\tJournalArticleLocalServiceUtil.updateContent(\n\t\t\tgroup.getGroupId(), journalArticle.getArticleId(),\n\t\t\tjournalArticle.getVersion(), content);\n\n\t\tconfigureJournalContent(\n\t\t\tlayout, portletId, journalArticle.getArticleId());\n\n\t\t// Products Landing Intro Info content portlet\n\n\t\tportletId = addPortletId(\n\t\t\tlayout, PortletKeys.JOURNAL_CONTENT, \"column-2\");\n\n\t\tremovePortletBorder(layout, portletId);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"products\"});\n\n\t\tjournalArticle = addJournalArticle(\n\t\t\tdefaultUserId, group.getGroupId(), \"Products Landing Intro Info\",\n\t\t\t\"/sample/journal/articles/products_landing_intro_info.xml\",\n\t\t\tserviceContext);\n\n\t\tconfigureJournalContent(\n\t\t\tlayout, portletId, journalArticle.getArticleId());\n\n\t\t// Introducing Vix content portlet\n\n\t\tportletId = addPortletId(\n\t\t\tlayout, PortletKeys.JOURNAL_CONTENT, \"column-3\");\n\n\t\tremovePortletBorder(layout, portletId);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"Vix-998\", \"7cogs\"});\n\n\t\tjournalArticle = addJournalArticle(\n\t\t\tdefaultUserId, group.getGroupId(), \"Products Catalog\",\n\t\t\t\"/sample/journal/articles/products_catalog.xml\", serviceContext);\n\n\t\tcontent = StringUtil.replace(\n\t\t\tjournalArticle.getContent(),\n\t\t\tnew String[] {\n\t\t\t\t\"[$COG_BLUE_IG_IMAGE_UUID$]\",\n\t\t\t\t\"[$COG_LIGHT_BLUE_IG_IMAGE_UUID$]\",\n\t\t\t\t\"[$COG_ORANGE_IG_IMAGE_UUID$]\",\n\t\t\t\t\"[$GROUP_ID$]\"\n\t\t\t},\n\t\t\tnew String[] {\n\t\t\t\tString.valueOf(cogBlueIconFileEntry.getUuid()),\n\t\t\t\tString.valueOf(cogLightBlueIconFileEntry.getUuid()),\n\t\t\t\tString.valueOf(cogOrangeIconFileEntry.getUuid()),\n\t\t\t\tString.valueOf(group.getGroupId())\n\t\t\t});\n\n\t\tJournalArticleLocalServiceUtil.updateContent(\n\t\t\tgroup.getGroupId(), journalArticle.getArticleId(),\n\t\t\tjournalArticle.getVersion(), content);\n\n\t\tconfigureJournalContent(\n\t\t\tlayout, portletId, journalArticle.getArticleId());\n\n\t\t// Blogs\n\n\t\tlayout = addLayout(group, \"Blogs\", false, \"/blogs\", \"1_2_columns_i\");\n\n\t\t// Blogs Banner content portlet\n\n\t\tportletId = addPortletId(\n\t\t\tlayout, PortletKeys.JOURNAL_CONTENT, \"column-1\");\n\n\t\tremovePortletBorder(layout, portletId);\n\n\t\tjournalArticle = addJournalArticle(\n\t\t\tdefaultUserId, group.getGroupId(), \"Blogs Banner\",\n\t\t\t\"/sample/journal/articles/blogs_banner.xml\", serviceContext);\n\n\t\tconfigureJournalContent(\n\t\t\tlayout, portletId, journalArticle.getArticleId());\n\n\t\t// Recent Bloggers portlet\n\n\t\taddPortletId(layout, PortletKeys.RECENT_BLOGGERS, \"column-2\");\n\n\t\t// Blogs Aggregator portlet\n\n\t\tportletId = addPortletId(\n\t\t\tlayout, PortletKeys.BLOGS_AGGREGATOR, \"column-3\");\n\n\t\tconfigurePortletTitle(layout, portletId, \"Blogs\");\n\n\t\t// Wiki layout\n\n\t\tlayout = addLayout(group, \"Wiki\", false, \"/wiki\", \"1_column\");\n\n\t\t// Wiki Banner content portlet\n\n\t\tportletId = addPortletId(\n\t\t\tlayout, PortletKeys.JOURNAL_CONTENT, \"column-1\");\n\n\t\tremovePortletBorder(layout, portletId);\n\n\t\tjournalArticle = addJournalArticle(\n\t\t\tdefaultUserId, group.getGroupId(), \"Wiki Banner\",\n\t\t\t\"/sample/journal/articles/wiki_banner.xml\", serviceContext);\n\n\t\tconfigureJournalContent(\n\t\t\tlayout, portletId, journalArticle.getArticleId());\n\n\t\t// Wiki\n\n\t\tportletId = addPortletId(layout, PortletKeys.WIKI, \"column-1\");\n\n\t\tremovePortletBorder(layout, portletId);\n\n\t\tWikiNode wikiNode = WikiNodeLocalServiceUtil.addNode(\n\t\t\tdefaultUserId, \"Main\", StringPool.BLANK, serviceContext);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"new\", \"features\"});\n\t\tserviceContext.setAssetCategoryIds(\n\t\t\tnew long[] {learningAssetCategory.getCategoryId()});\n\n\t\taddWikiPage(\n\t\t\tdefaultUserId, wikiNode.getNodeId(), \"FrontPage\",\n\t\t\t\"/sample/wiki/FrontPage.xml\", serviceContext);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"vix-998\", \"features\"});\n\t\tserviceContext.setAssetCategoryIds(\n\t\t\tnew long[] {productsAssetCategory.getCategoryId()});\n\n\t\taddWikiPage(\n\t\t\tdefaultUserId, wikiNode.getNodeId(), \"Vix-998\",\n\t\t\t\"/sample/wiki/Vix-998.xml\", serviceContext);\n\n\t\t// Forums layout\n\n\t\tlayout = addLayout(group, \"Forums\", false, \"/forums\", \"1_column\");\n\n\t\t// Forums Banner content portlet\n\n\t\tportletId = addPortletId(\n\t\t\tlayout, PortletKeys.JOURNAL_CONTENT, \"column-1\");\n\n\t\tremovePortletBorder(layout, portletId);\n\n\t\tjournalArticle = addJournalArticle(\n\t\t\tdefaultUserId, group.getGroupId(), \"Forums Banner\",\n\t\t\t\"/sample/journal/articles/forums_banner.xml\", serviceContext);\n\n\t\tconfigureJournalContent(\n\t\t\tlayout, portletId, journalArticle.getArticleId());\n\n\t\t// Message Boards\n\n\t\tportletId = addPortletId(\n\t\t\tlayout, PortletKeys.MESSAGE_BOARDS, \"column-1\");\n\n\t\tremovePortletBorder(layout, portletId);\n\n\t\t// About Us layout\n\n\t\tlayout = addLayout(\n\t\t\tgroup, \"About Us\", false, \"/about_us\", \"1_2_columns_ii\");\n\n\t\t// About Us Banner content portlet\n\n\t\tportletId = addPortletId(\n\t\t\tlayout, PortletKeys.JOURNAL_CONTENT, \"column-1\");\n\n\t\tremovePortletBorder(layout, portletId);\n\n\t\tjournalArticle = addJournalArticle(\n\t\t\tdefaultUserId, group.getGroupId(), \"About Us Banner\",\n\t\t\t\"/sample/journal/articles/about_us_banner.xml\", serviceContext);\n\n\t\tconfigureJournalContent(\n\t\t\tlayout, portletId, journalArticle.getArticleId());\n\n\t\t// About Us content portlet\n\n\t\tportletId = addPortletId(\n\t\t\tlayout, PortletKeys.JOURNAL_CONTENT, \"column-2\");\n\n\t\thighlightPortlet(layout, portletId);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"liferay\"});\n\n\t\tjournalArticle = addJournalArticle(\n\t\t\tdefaultUserId, group.getGroupId(), \"About Us\",\n\t\t\t\"/sample/journal/articles/home_7cogs_about_us.xml\", serviceContext);\n\n\t\tcontent = StringUtil.replace(\n\t\t\tjournalArticle.getContent(),\n\t\t\tnew String[] {\n\t\t\t\t\"[$GROUP_ID$]\",\n\t\t\t\t\"[$LIFERAY_LOGO_IG_IMAGE_UUID$]\"\n\t\t\t},\n\t\t\tnew String[] {\n\t\t\t\tString.valueOf(group.getGroupId()),\n\t\t\t\tString.valueOf(liferayLogoFileEntry.getUuid())\n\t\t\t});\n\n\t\tJournalArticleLocalServiceUtil.updateContent(\n\t\t\tgroup.getGroupId(), journalArticle.getArticleId(),\n\t\t\tjournalArticle.getVersion(), content);\n\n\t\tconfigureJournalContent(\n\t\t\tlayout, portletId, journalArticle.getArticleId());\n\n\t\t// Google Maps\n\n\t\tportletId = addPortletId(layout, \"1_WAR_googlemapsportlet\", \"column-2\");\n\n\t\tMap<String, String> preferences = new HashMap<String, String>();\n\n\t\tpreferences.put(\"map-address\", \"Los Angeles, USA\");\n\t\tpreferences.put(\"height\", \"300\");\n\n\t\tupdatePortletSetup(layout, portletId, preferences);\n\n\t\t// Web Form\n\n\t\taddPortletId(layout, \"1_WAR_webformportlet\", \"column-3\");\n\n\t\t// Home layout\n\n\t\tlayout = addLayout(group, \"Home\", true, \"/home\", \"2_columns_ii\");\n\n\t\tportletId = addPortletId(\n\t\t\tlayout, PortletKeys.JOURNAL_CONTENT, \"column-1\");\n\n\t\thighlightPortlet(layout, portletId);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"7cogs\", \"tips\"});\n\n\t\tjournalArticle = addJournalArticle(\n\t\t\tdefaultUserId, group.getGroupId(), \"Home\",\n\t\t\t\"/sample/journal/articles/home_7cogs_private_pages.xml\",\n\t\t\tserviceContext);\n\n\t\tconfigureJournalContent(\n\t\t\tlayout, portletId, journalArticle.getArticleId());\n\n\t\tportletId = addPortletId(layout, PortletKeys.ACTIVITIES, \"column-2\");\n\n\t\tconfigurePortletTitle(\n\t\t\tlayout, portletId, \"Last Activities in 7Cogs Organization\");\n\n\t\t// Documents layout\n\n\t\tlayout = addLayout(\n\t\t\tgroup, \"Documents\", true, \"/documents\", \"2_columns_iii\");\n\n\t\taddPortletId(layout, PortletKeys.DOCUMENT_LIBRARY, \"column-1\");\n\t\taddPortletId(layout, PortletKeys.MEDIA_GALLERY_DISPLAY, \"column-1\");\n\n\t\tportletId = addPortletId(\n\t\t\tlayout, PortletKeys.JOURNAL_CONTENT, \"column-2\");\n\n\t\thighlightPortlet(layout, portletId);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"documents\", \"sharing\"});\n\n\t\tjournalArticle = addJournalArticle(\n\t\t\tdefaultUserId, group.getGroupId(), \"Shared Documents\",\n\t\t\t\"/sample/journal/articles/documents_shared_docs.xml\",\n\t\t\tserviceContext);\n\n\t\tconfigureJournalContent(\n\t\t\tlayout, portletId, journalArticle.getArticleId());\n\n\t\t// 7Cogs, Inc. Mobile organization\n\n\t\tparentOrganizationId = organization.getOrganizationId();\n\t\tname = \"7Cogs, Inc. Mobile\";\n\n\t\torganization = OrganizationLocalServiceUtil.addOrganization(\n\t\t\tuserId, parentOrganizationId, name, type, recursable, regionId,\n\t\t\tcountryId, statusId, comments, true, serviceContext);\n\n\t\t// Group\n\n\t\tgroup = organization.getGroup();\n\n\t\tGroupLocalServiceUtil.updateFriendlyURL(\n\t\t\tgroup.getGroupId(), \"/7cogs-mobile\");\n\n\t\tserviceContext.setScopeGroupId(group.getGroupId());\n\n\t\t// Layout set\n\n\t\tLayoutSetLocalServiceUtil.updateLogo(\n\t\t\tgroup.getGroupId(), false, true,\n\t\t\tgetInputStream(\"/mobile/images/seven_cogs_mobile_logo.png\"));\n\n\t\tLayoutSetLocalServiceUtil.updateLookAndFeel(\n\t\t\tgroup.getGroupId(), false,\n\t\t\t\"sevencogsmobile_WAR_sevencogsmobiletheme\", \"01\", \"\", false);\n\n\t\t// Image gallery\n\n\t\tserviceContext.setScopeGroupId(group.getGroupId());\n\n\t\tfolder = DLAppLocalServiceUtil.addFolder(\n\t\t\tdefaultUserId, group.getGroupId(), 0, \"7Cogs Mobile Content\",\n\t\t\t\"Images used for mobile content\", serviceContext);\n\n\t\tserviceContext.setAssetTagNames(null);\n\t\tserviceContext.setAssetCategoryIds(null);\n\n\t\tFileEntry mobileProduct1FileEntry = addDLFileEntry(\n\t\t\tdefaultUserId, folder.getFolderId(),\n\t\t\t\"/mobile/images/mobile_product_1.png\", serviceContext);\n\n\t\tFileEntry mobileProduct2FileEntry = addDLFileEntry(\n\t\t\tdefaultUserId, folder.getFolderId(),\n\t\t\t\"/mobile/images/mobile_product_2.png\", serviceContext);\n\n\t\t// Home layout\n\n\t\tlayout = addLayout(group, \"Home\", false, \"/home\", \"1_column\");\n\n\t\tportletId = addPortletId(\n\t\t\tlayout, PortletKeys.JOURNAL_CONTENT, \"column-1\");\n\n\t\tremovePortletBorder(layout, portletId);\n\n\t\tjournalArticle = addJournalArticle(\n\t\t\tdefaultUserId, group.getGroupId(), \"Mobile Welcome\",\n\t\t\t\"/mobile/journal/articles/mobile_welcome.xml\", serviceContext);\n\n\t\tconfigureJournalContent(\n\t\t\tlayout, portletId, journalArticle.getArticleId());\n\n\t\t// Products layout\n\n\t\tlayout = addLayout(group, \"Products\", false, \"/products\", \"1_column\");\n\n\t\tportletId = addPortletId(\n\t\t\tlayout, PortletKeys.JOURNAL_CONTENT, \"column-1\");\n\n\t\tremovePortletBorder(layout, portletId);\n\n\t\tjournalArticle = addJournalArticle(\n\t\t\tdefaultUserId, group.getGroupId(), \"Mobile Products\",\n\t\t\t\"/mobile/journal/articles/mobile_products.xml\", serviceContext);\n\n\t\tcontent = StringUtil.replace(\n\t\t\tjournalArticle.getContent(),\n\t\t\tnew String[] {\n\t\t\t\t\"[$GROUP_ID$]\",\n\t\t\t\t\"[$IG_IMAGE_1_UUID$]\",\n\t\t\t\t\"[$IG_IMAGE_2_UUID$]\"\n\t\t\t},\n\t\t\tnew String[] {\n\t\t\t\tString.valueOf(group.getGroupId()),\n\t\t\t\tString.valueOf(mobileProduct1FileEntry.getUuid()),\n\t\t\t\tString.valueOf(mobileProduct2FileEntry.getUuid())\n\t\t\t});\n\n\t\tJournalArticleLocalServiceUtil.updateContent(\n\t\t\tgroup.getGroupId(), journalArticle.getArticleId(),\n\t\t\tjournalArticle.getVersion(), content);\n\n\t\tconfigureJournalContent(\n\t\t\tlayout, portletId, journalArticle.getArticleId());\n\t}","id":50645,"modified_method":"protected void setupOrganizations(long companyId, long defaultUserId)\n\t\tthrows Exception {\n\n\t\t// 7Cogs, Inc. organization\n\n\t\tlong userId = defaultUserId;\n\t\tlong parentOrganizationId =\n\t\t\tOrganizationConstants.DEFAULT_PARENT_ORGANIZATION_ID;\n\t\tString name = \"7Cogs, Inc.\";\n\t\tString type = OrganizationConstants.TYPE_REGULAR_ORGANIZATION;\n\t\tboolean recursable = true;\n\t\tlong regionId = 0;\n\t\tlong countryId = 0;\n\t\tint statusId = GetterUtil.getInteger(PropsUtil.get(\n\t\t\t\"sql.data.com.liferay.portal.model.ListType.organization.status\"));\n\t\tString comments = null;\n\n\t\tServiceContext serviceContext = new ServiceContext();\n\n\t\tserviceContext.setAddGroupPermissions(true);\n\t\tserviceContext.setAddGuestPermissions(true);\n\n\t\tOrganization organization =\n\t\t\tOrganizationLocalServiceUtil.addOrganization(\n\t\t\t\tuserId, parentOrganizationId, name, type, recursable, regionId,\n\t\t\t\tcountryId, statusId, comments, true, serviceContext);\n\n\t\t// Group\n\n\t\tGroup group = organization.getGroup();\n\n\t\tGroupLocalServiceUtil.updateFriendlyURL(group.getGroupId(), \"/7cogs\");\n\n\t\tserviceContext.setScopeGroupId(group.getGroupId());\n\n\t\t// Layout set\n\n\t\tLayoutSetLocalServiceUtil.updateLogo(\n\t\t\tgroup.getGroupId(), false, true,\n\t\t\tgetInputStream(\"/sample/images/logo.png\"));\n\n\t\tLayoutSetLocalServiceUtil.updateLookAndFeel(\n\t\t\tgroup.getGroupId(), false, \"sevencogs_WAR_sevencogstheme\", \"01\", \"\",\n\t\t\tfalse);\n\n\t\t// Asset\n\n\t\tAssetVocabulary topicAssetVocabulary = addAssetVocabulary(\n\t\t\tdefaultUserId, \"Topic\", serviceContext);\n\n\t\tAssetVocabulary imageAssetVocabulary = addAssetVocabulary(\n\t\t\tdefaultUserId, \"Image Type\", serviceContext);\n\n\t\tAssetCategory iconAssetCategory = addAssetCategory(\n\t\t\tdefaultUserId, 0, \"Icon\", imageAssetVocabulary.getVocabularyId(),\n\t\t\tserviceContext);\n\n\t\tAssetCategory bannerAssetCategory = addAssetCategory(\n\t\t\tdefaultUserId, 0, \"Banner\", imageAssetVocabulary.getVocabularyId(),\n\t\t\tserviceContext);\n\n\t\tAssetCategory learningAssetCategory = addAssetCategory(\n\t\t\tdefaultUserId, 0, \"Learning\",\n\t\t\ttopicAssetVocabulary.getVocabularyId(), serviceContext);\n\n\t\tAssetCategory productsAssetCategory = addAssetCategory(\n\t\t\tdefaultUserId, 0, \"Products\",\n\t\t\ttopicAssetVocabulary.getVocabularyId(), serviceContext);\n\n\t\tAssetCategory liferayAssetCategory = addAssetCategory(\n\t\t\tdefaultUserId, 0, \"Liferay\", topicAssetVocabulary.getVocabularyId(),\n\t\t\tserviceContext);\n\n\t\t_assetCategories = new HashMap<String, AssetCategory>();\n\n\t\t_assetCategories.put(\"Icon\", iconAssetCategory);\n\t\t_assetCategories.put(\"Banner\", bannerAssetCategory);\n\t\t_assetCategories.put(\"Learning\", learningAssetCategory);\n\t\t_assetCategories.put(\"Products\", productsAssetCategory);\n\t\t_assetCategories.put(\"Liferay\", liferayAssetCategory);\n\n\t\t// Journal\n\n\t\taddJournalStructure(\n\t\t\tdefaultUserId, group.getGroupId(),\n\t\t\t\"/sample/journal/structures/single_image.xml\");\n\t\taddJournalTemplate(\n\t\t\tdefaultUserId, group.getGroupId(),\n\t\t\t\"/sample/journal/templates/single_image.xml\");\n\n\t\t// Image gallery\n\n\t\tserviceContext.setScopeGroupId(group.getGroupId());\n\n\t\tFolder folder = DLAppLocalServiceUtil.addFolder(\n\t\t\tdefaultUserId, group.getGroupId(), 0, \"7Cogs Web Content\",\n\t\t\t\"Images used for content\", serviceContext);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"icons\"});\n\t\tserviceContext.setAssetCategoryIds(\n\t\t\tnew long[] {iconAssetCategory.getCategoryId()});\n\n\t\tFileEntry cogBlueIconFileEntry = addDLFileEntry(\n\t\t\tdefaultUserId, folder.getFolderId(), \"/sample/images/cog_blue.png\",\n\t\t\tserviceContext);\n\n\t\tFileEntry cogLightBlueIconFileEntry = addDLFileEntry(\n\t\t\tdefaultUserId, folder.getFolderId(),\n\t\t\t\"/sample/images/cog_light_blue.png\", serviceContext);\n\n\t\tFileEntry cogOrangeIconFileEntry = addDLFileEntry(\n\t\t\tdefaultUserId, folder.getFolderId(),\n\t\t\t\"/sample/images/cog_orange.png\", serviceContext);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"home page\", \"blogs\"});\n\t\tserviceContext.setAssetCategoryIds(\n\t\t\tnew long[] {iconAssetCategory.getCategoryId()});\n\n\t\tFileEntry blogsIconFileEntry = addDLFileEntry(\n\t\t\tdefaultUserId, folder.getFolderId(),\n\t\t\t\"/sample/images/blogs_icon.png\", serviceContext);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"home page\"});\n\t\tserviceContext.setAssetCategoryIds(\n\t\t\tnew long[] {productsAssetCategory.getCategoryId()});\n\n\t\tFileEntry cogNetworkAdFileEntry = addDLFileEntry(\n\t\t\tdefaultUserId, folder.getFolderId(),\n\t\t\t\"/sample/images/cog_network_advertisement.png\",\n\t\t\tserviceContext);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"home page\", \"forums\"});\n\t\tserviceContext.setAssetCategoryIds(\n\t\t\tnew long[] {iconAssetCategory.getCategoryId()});\n\n\t\tFileEntry forumsIconFileEntry = addDLFileEntry(\n\t\t\tdefaultUserId, folder.getFolderId(),\n\t\t\t\"/sample/images/forums_icon.png\", serviceContext);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"liferay\", \"logo\"});\n\t\tserviceContext.setAssetCategoryIds(\n\t\t\tnew long[] {liferayAssetCategory.getCategoryId()});\n\n\t\tFileEntry liferayLogoFileEntry = addDLFileEntry(\n\t\t\tdefaultUserId, folder.getFolderId(),\n\t\t\t\"/sample/images/liferay_logo.png\", serviceContext);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"home page\"});\n\t\tserviceContext.setAssetCategoryIds(\n\t\t\tnew long[] {bannerAssetCategory.getCategoryId()});\n\n\t\tFileEntry homePageBannerFileEntry = addDLFileEntry(\n\t\t\tdefaultUserId, folder.getFolderId(),\n\t\t\t\"/sample/images/home_page_banner.png\", serviceContext);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"home page\", \"products\"});\n\t\tserviceContext.setAssetCategoryIds(\n\t\t\tnew long[] {iconAssetCategory.getCategoryId()});\n\n\t\tFileEntry productsIconFileEntry = addDLFileEntry(\n\t\t\tdefaultUserId, folder.getFolderId(),\n\t\t\t\"/sample/images/products_icon.png\", serviceContext);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"products\"});\n\t\tserviceContext.setAssetCategoryIds(\n\t\t\tnew long[] {productsAssetCategory.getCategoryId()});\n\n\t\tFileEntry productLandingFileEntry = addDLFileEntry(\n\t\t\tdefaultUserId, folder.getFolderId(),\n\t\t\t\"/sample/images/product_landing.png\", serviceContext);\n\n\t\t// Home layout\n\n\t\tLayout layout = addLayout(\n\t\t\tgroup, \"Home\", false, \"/home\", \"home\");\n\n\t\t// Home Page Banner content portlet\n\n\t\tString portletId = addPortletId(\n\t\t\tlayout, PortletKeys.JOURNAL_CONTENT, \"column-1\");\n\n\t\tremovePortletBorder(layout, portletId);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"liferay\", \"7cogs\"});\n\n\t\tJournalArticle journalArticle = addJournalArticle(\n\t\t\tdefaultUserId, group.getGroupId(), \"Banner\",\n\t\t\t\"/sample/journal/articles/home_page_banner.xml\", serviceContext);\n\n\t\tString content = StringUtil.replace(\n\t\t\tjournalArticle.getContent(),\n\t\t\tnew String[] {\n\t\t\t\t\"[$GROUP_ID$]\",\n\t\t\t\t\"[$HOME_PAGE_BANNER_IG_IMAGE_UUID$]\"\n\t\t\t},\n\t\t\tnew String[] {\n\t\t\t\tString.valueOf(group.getGroupId()),\n\t\t\t\tString.valueOf(homePageBannerFileEntry.getUuid())\n\t\t\t});\n\n\t\tJournalArticleLocalServiceUtil.updateContent(\n\t\t\tgroup.getGroupId(), journalArticle.getArticleId(),\n\t\t\tjournalArticle.getVersion(), content);\n\n\t\tconfigureJournalContent(\n\t\t\tlayout, portletId, journalArticle.getArticleId());\n\n\t\t// Home Page Products Button content portlet\n\n\t\tportletId = addPortletId(\n\t\t\tlayout, PortletKeys.JOURNAL_CONTENT, \"column-2\");\n\n\t\tremovePortletBorder(layout, portletId);\n\n\t\tjournalArticle = addJournalArticle(\n\t\t\tdefaultUserId, group.getGroupId(), \"Products Button\",\n\t\t\t\"/sample/journal/articles/home_page_products_button.xml\",\n\t\t\tserviceContext);\n\n\t\tcontent = StringUtil.replace(\n\t\t\tjournalArticle.getContent(),\n\t\t\tnew String[] {\n\t\t\t\t\"[$GROUP_ID$]\",\n\t\t\t\t\"[$HOME_PAGE_PRODUCTS_IG_IMAGE_UUID$]\"\n\t\t\t},\n\t\t\tnew String[] {\n\t\t\t\tString.valueOf(group.getGroupId()),\n\t\t\t\tString.valueOf(productsIconFileEntry.getUuid())\n\t\t\t});\n\n\t\tJournalArticleLocalServiceUtil.updateContent(\n\t\t\tgroup.getGroupId(), journalArticle.getArticleId(),\n\t\t\tjournalArticle.getVersion(), content);\n\n\t\tconfigureJournalContent(\n\t\t\tlayout, portletId, journalArticle.getArticleId());\n\n\t\t// Home Page Blogs Button content portlet\n\n\t\tportletId = addPortletId(\n\t\t\tlayout, PortletKeys.JOURNAL_CONTENT, \"column-3\");\n\n\t\tremovePortletBorder(layout, portletId);\n\n\t\tjournalArticle = addJournalArticle(\n\t\t\tdefaultUserId, group.getGroupId(), \"Blogs Button\",\n\t\t\t\"/sample/journal/articles/home_page_blogs_button.xml\",\n\t\t\tserviceContext);\n\n\t\tcontent = StringUtil.replace(\n\t\t\tjournalArticle.getContent(),\n\t\t\tnew String[] {\n\t\t\t\t\"[$GROUP_ID$]\",\n\t\t\t\t\"[$HOME_PAGE_BLOGS_IG_IMAGE_UUID$]\"\n\t\t\t},\n\t\t\tnew String[] {\n\t\t\t\tString.valueOf(group.getGroupId()),\n\t\t\t\tString.valueOf(blogsIconFileEntry.getUuid())\n\t\t\t});\n\n\t\tJournalArticleLocalServiceUtil.updateContent(\n\t\t\tgroup.getGroupId(), journalArticle.getArticleId(),\n\t\t\tjournalArticle.getVersion(), content);\n\n\t\tconfigureJournalContent(\n\t\t\tlayout, portletId, journalArticle.getArticleId());\n\n\t\t// Home Page Forums Button content porltet\n\n\t\tportletId = addPortletId(\n\t\t\tlayout, PortletKeys.JOURNAL_CONTENT, \"column-4\");\n\n\t\tremovePortletBorder(layout, portletId);\n\n\t\tjournalArticle = addJournalArticle(\n\t\t\tdefaultUserId, group.getGroupId(), \"Forums Button\",\n\t\t\t\"/sample/journal/articles/home_page_forums_button.xml\",\n\t\t\tserviceContext);\n\n\t\tcontent = StringUtil.replace(\n\t\t\tjournalArticle.getContent(),\n\t\t\tnew String[] {\n\t\t\t\t\"[$GROUP_ID$]\",\n\t\t\t\t\"[$HOME_PAGE_FORUMS_IG_IMAGE_UUID$]\"\n\t\t\t},\n\t\t\tnew String[] {\n\t\t\t\tString.valueOf(group.getGroupId()),\n\t\t\t\tString.valueOf(forumsIconFileEntry.getUuid())\n\t\t\t});\n\n\t\tJournalArticleLocalServiceUtil.updateContent(\n\t\t\tgroup.getGroupId(), journalArticle.getArticleId(),\n\t\t\tjournalArticle.getVersion(), content);\n\n\t\tconfigureJournalContent(\n\t\t\tlayout, portletId, journalArticle.getArticleId());\n\n\t\t// Home Page Intro content portlet\n\n\t\tportletId = addPortletId(\n\t\t\tlayout, PortletKeys.JOURNAL_CONTENT, \"column-5\");\n\n\t\tremovePortletBorder(layout, portletId);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"front\"});\n\n\t\tjournalArticle = addJournalArticle(\n\t\t\tdefaultUserId, group.getGroupId(), \"Home Page Intro\",\n\t\t\t\"/sample/journal/articles/home_page_intro.xml\",\n\t\t\tserviceContext);\n\n\t\tcontent = StringUtil.replace(\n\t\t\tjournalArticle.getContent(),\n\t\t\tnew String[] {\n\t\t\t\t\"[$GROUP_ID$]\",\n\t\t\t\t\"[$PRODUCT_LANDING_IG_IMAGE_UUID$]\"\n\t\t\t},\n\t\t\tnew String[] {\n\t\t\t\tString.valueOf(group.getGroupId()),\n\t\t\t\tString.valueOf(productLandingFileEntry.getUuid())\n\t\t\t});\n\n\t\tJournalArticleLocalServiceUtil.updateContent(\n\t\t\tgroup.getGroupId(), journalArticle.getArticleId(),\n\t\t\tjournalArticle.getVersion(), content);\n\n\t\tconfigureJournalContent(\n\t\t\tlayout, portletId, journalArticle.getArticleId());\n\n\t\t// Cog Network Ad content portlet\n\n\t\tportletId = addPortletId(\n\t\t\tlayout, PortletKeys.JOURNAL_CONTENT, \"column-6\");\n\n\t\tremovePortletBorder(layout, portletId);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"liferay\", \"enterprise\"});\n\n\t\tjournalArticle = addJournalArticle(\n\t\t\tdefaultUserId, group.getGroupId(), \"Cog Network Ad\",\n\t\t\t\"/sample/journal/articles/home_cog_network_ad.xml\", serviceContext);\n\n\t\tcontent = StringUtil.replace(\n\t\t\tjournalArticle.getContent(),\n\t\t\tnew String[] {\n\t\t\t\t\"[$GROUP_ID$]\",\n\t\t\t\t\"[$COG_NETWORK_AD_IG_IMAGE_UUID$]\"\n\t\t\t},\n\t\t\tnew String[] {\n\t\t\t\tString.valueOf(group.getGroupId()),\n\t\t\t\tString.valueOf(cogNetworkAdFileEntry.getUuid())\n\t\t\t});\n\n\t\tJournalArticleLocalServiceUtil.updateContent(\n\t\t\tgroup.getGroupId(), journalArticle.getArticleId(),\n\t\t\tjournalArticle.getVersion(), content);\n\n\t\tconfigureJournalContent(\n\t\t\tlayout, portletId, journalArticle.getArticleId());\n\n\t\t// Products layout\n\n\t\tlayout = addLayout(\n\t\t\tgroup, \"Products\", false, \"/products\", \"1_2_columns_ii\");\n\n\t\t// Products Banner content portlet\n\n\t\tportletId = addPortletId(\n\t\t\tlayout, PortletKeys.JOURNAL_CONTENT, \"column-1\");\n\n\t\tremovePortletBorder(layout, portletId);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"Vix-998\", \"7cogs\"});\n\n\t\tjournalArticle = addJournalArticle(\n\t\t\tdefaultUserId, group.getGroupId(), \"Products Banner\",\n\t\t\t\"/sample/journal/articles/products_banner.xml\", serviceContext);\n\n\t\tconfigureJournalContent(\n\t\t\tlayout, portletId, journalArticle.getArticleId());\n\n\t\t// Products Landing Intro content portlet\n\n\t\tportletId = addPortletId(\n\t\t\tlayout, PortletKeys.JOURNAL_CONTENT, \"column-2\");\n\n\t\tremovePortletBorder(layout, portletId);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"products\"});\n\n\t\tjournalArticle = addJournalArticle(\n\t\t\tdefaultUserId, group.getGroupId(), \"Products Landing Intro\",\n\t\t\t\"/sample/journal/articles/products_landing_intro.xml\",\n\t\t\tserviceContext);\n\n\t\tcontent = StringUtil.replace(\n\t\t\tjournalArticle.getContent(),\n\t\t\tnew String[] {\n\t\t\t\t\"[$GROUP_ID$]\",\n\t\t\t\t\"[$PRODUCT_LANDING_IG_IMAGE_UUID$]\"\n\t\t\t},\n\t\t\tnew String[] {\n\t\t\t\tString.valueOf(group.getGroupId()),\n\t\t\t\tString.valueOf(productLandingFileEntry.getUuid())\n\t\t\t});\n\n\t\tJournalArticleLocalServiceUtil.updateContent(\n\t\t\tgroup.getGroupId(), journalArticle.getArticleId(),\n\t\t\tjournalArticle.getVersion(), content);\n\n\t\tconfigureJournalContent(\n\t\t\tlayout, portletId, journalArticle.getArticleId());\n\n\t\t// Products Landing Intro Info content portlet\n\n\t\tportletId = addPortletId(\n\t\t\tlayout, PortletKeys.JOURNAL_CONTENT, \"column-2\");\n\n\t\tremovePortletBorder(layout, portletId);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"products\"});\n\n\t\tjournalArticle = addJournalArticle(\n\t\t\tdefaultUserId, group.getGroupId(), \"Products Landing Intro Info\",\n\t\t\t\"/sample/journal/articles/products_landing_intro_info.xml\",\n\t\t\tserviceContext);\n\n\t\tconfigureJournalContent(\n\t\t\tlayout, portletId, journalArticle.getArticleId());\n\n\t\t// Introducing Vix content portlet\n\n\t\tportletId = addPortletId(\n\t\t\tlayout, PortletKeys.JOURNAL_CONTENT, \"column-3\");\n\n\t\tremovePortletBorder(layout, portletId);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"Vix-998\", \"7cogs\"});\n\n\t\tjournalArticle = addJournalArticle(\n\t\t\tdefaultUserId, group.getGroupId(), \"Products Catalog\",\n\t\t\t\"/sample/journal/articles/products_catalog.xml\", serviceContext);\n\n\t\tcontent = StringUtil.replace(\n\t\t\tjournalArticle.getContent(),\n\t\t\tnew String[] {\n\t\t\t\t\"[$COG_BLUE_IG_IMAGE_UUID$]\",\n\t\t\t\t\"[$COG_LIGHT_BLUE_IG_IMAGE_UUID$]\",\n\t\t\t\t\"[$COG_ORANGE_IG_IMAGE_UUID$]\",\n\t\t\t\t\"[$GROUP_ID$]\"\n\t\t\t},\n\t\t\tnew String[] {\n\t\t\t\tString.valueOf(cogBlueIconFileEntry.getUuid()),\n\t\t\t\tString.valueOf(cogLightBlueIconFileEntry.getUuid()),\n\t\t\t\tString.valueOf(cogOrangeIconFileEntry.getUuid()),\n\t\t\t\tString.valueOf(group.getGroupId())\n\t\t\t});\n\n\t\tJournalArticleLocalServiceUtil.updateContent(\n\t\t\tgroup.getGroupId(), journalArticle.getArticleId(),\n\t\t\tjournalArticle.getVersion(), content);\n\n\t\tconfigureJournalContent(\n\t\t\tlayout, portletId, journalArticle.getArticleId());\n\n\t\t// Blogs\n\n\t\tlayout = addLayout(group, \"Blogs\", false, \"/blogs\", \"1_2_columns_i\");\n\n\t\t// Blogs Banner content portlet\n\n\t\tportletId = addPortletId(\n\t\t\tlayout, PortletKeys.JOURNAL_CONTENT, \"column-1\");\n\n\t\tremovePortletBorder(layout, portletId);\n\n\t\tjournalArticle = addJournalArticle(\n\t\t\tdefaultUserId, group.getGroupId(), \"Blogs Banner\",\n\t\t\t\"/sample/journal/articles/blogs_banner.xml\", serviceContext);\n\n\t\tconfigureJournalContent(\n\t\t\tlayout, portletId, journalArticle.getArticleId());\n\n\t\t// Recent Bloggers portlet\n\n\t\taddPortletId(layout, PortletKeys.RECENT_BLOGGERS, \"column-2\");\n\n\t\t// Blogs Aggregator portlet\n\n\t\tportletId = addPortletId(\n\t\t\tlayout, PortletKeys.BLOGS_AGGREGATOR, \"column-3\");\n\n\t\tconfigurePortletTitle(layout, portletId, \"Blogs\");\n\n\t\t// Wiki layout\n\n\t\tlayout = addLayout(group, \"Wiki\", false, \"/wiki\", \"1_column\");\n\n\t\t// Wiki Banner content portlet\n\n\t\tportletId = addPortletId(\n\t\t\tlayout, PortletKeys.JOURNAL_CONTENT, \"column-1\");\n\n\t\tremovePortletBorder(layout, portletId);\n\n\t\tjournalArticle = addJournalArticle(\n\t\t\tdefaultUserId, group.getGroupId(), \"Wiki Banner\",\n\t\t\t\"/sample/journal/articles/wiki_banner.xml\", serviceContext);\n\n\t\tconfigureJournalContent(\n\t\t\tlayout, portletId, journalArticle.getArticleId());\n\n\t\t// Wiki\n\n\t\tportletId = addPortletId(layout, PortletKeys.WIKI, \"column-1\");\n\n\t\tremovePortletBorder(layout, portletId);\n\n\t\tWikiNode wikiNode = WikiNodeLocalServiceUtil.addNode(\n\t\t\tdefaultUserId, \"Main\", StringPool.BLANK, serviceContext);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"new\", \"features\"});\n\t\tserviceContext.setAssetCategoryIds(\n\t\t\tnew long[] {learningAssetCategory.getCategoryId()});\n\n\t\taddWikiPage(\n\t\t\tdefaultUserId, wikiNode.getNodeId(), \"FrontPage\",\n\t\t\t\"/sample/wiki/FrontPage.xml\", serviceContext);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"vix-998\", \"features\"});\n\t\tserviceContext.setAssetCategoryIds(\n\t\t\tnew long[] {productsAssetCategory.getCategoryId()});\n\n\t\taddWikiPage(\n\t\t\tdefaultUserId, wikiNode.getNodeId(), \"Vix-998\",\n\t\t\t\"/sample/wiki/Vix-998.xml\", serviceContext);\n\n\t\t// Forums layout\n\n\t\tlayout = addLayout(group, \"Forums\", false, \"/forums\", \"1_column\");\n\n\t\t// Forums Banner content portlet\n\n\t\tportletId = addPortletId(\n\t\t\tlayout, PortletKeys.JOURNAL_CONTENT, \"column-1\");\n\n\t\tremovePortletBorder(layout, portletId);\n\n\t\tjournalArticle = addJournalArticle(\n\t\t\tdefaultUserId, group.getGroupId(), \"Forums Banner\",\n\t\t\t\"/sample/journal/articles/forums_banner.xml\", serviceContext);\n\n\t\tconfigureJournalContent(\n\t\t\tlayout, portletId, journalArticle.getArticleId());\n\n\t\t// Message Boards\n\n\t\tportletId = addPortletId(\n\t\t\tlayout, PortletKeys.MESSAGE_BOARDS, \"column-1\");\n\n\t\tremovePortletBorder(layout, portletId);\n\n\t\t// About Us layout\n\n\t\tlayout = addLayout(\n\t\t\tgroup, \"About Us\", false, \"/about_us\", \"1_2_columns_ii\");\n\n\t\t// About Us Banner content portlet\n\n\t\tportletId = addPortletId(\n\t\t\tlayout, PortletKeys.JOURNAL_CONTENT, \"column-1\");\n\n\t\tremovePortletBorder(layout, portletId);\n\n\t\tjournalArticle = addJournalArticle(\n\t\t\tdefaultUserId, group.getGroupId(), \"About Us Banner\",\n\t\t\t\"/sample/journal/articles/about_us_banner.xml\", serviceContext);\n\n\t\tconfigureJournalContent(\n\t\t\tlayout, portletId, journalArticle.getArticleId());\n\n\t\t// About Us content portlet\n\n\t\tportletId = addPortletId(\n\t\t\tlayout, PortletKeys.JOURNAL_CONTENT, \"column-2\");\n\n\t\thighlightPortlet(layout, portletId);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"liferay\"});\n\n\t\tjournalArticle = addJournalArticle(\n\t\t\tdefaultUserId, group.getGroupId(), \"About Us\",\n\t\t\t\"/sample/journal/articles/home_7cogs_about_us.xml\", serviceContext);\n\n\t\tcontent = StringUtil.replace(\n\t\t\tjournalArticle.getContent(),\n\t\t\tnew String[] {\n\t\t\t\t\"[$GROUP_ID$]\",\n\t\t\t\t\"[$LIFERAY_LOGO_IG_IMAGE_UUID$]\"\n\t\t\t},\n\t\t\tnew String[] {\n\t\t\t\tString.valueOf(group.getGroupId()),\n\t\t\t\tString.valueOf(liferayLogoFileEntry.getUuid())\n\t\t\t});\n\n\t\tJournalArticleLocalServiceUtil.updateContent(\n\t\t\tgroup.getGroupId(), journalArticle.getArticleId(),\n\t\t\tjournalArticle.getVersion(), content);\n\n\t\tconfigureJournalContent(\n\t\t\tlayout, portletId, journalArticle.getArticleId());\n\n\t\t// Google Maps\n\n\t\tportletId = addPortletId(layout, \"1_WAR_googlemapsportlet\", \"column-2\");\n\n\t\tMap<String, String> preferences = new HashMap<String, String>();\n\n\t\tpreferences.put(\"mapAddress\", \"Los Angeles, USA\");\n\t\tpreferences.put(\"height\", \"300\");\n\n\t\tupdatePortletSetup(layout, portletId, preferences);\n\n\t\t// Web Form\n\n\t\taddPortletId(layout, \"1_WAR_webformportlet\", \"column-3\");\n\n\t\t// Home layout\n\n\t\tlayout = addLayout(group, \"Home\", true, \"/home\", \"2_columns_ii\");\n\n\t\tportletId = addPortletId(\n\t\t\tlayout, PortletKeys.JOURNAL_CONTENT, \"column-1\");\n\n\t\thighlightPortlet(layout, portletId);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"7cogs\", \"tips\"});\n\n\t\tjournalArticle = addJournalArticle(\n\t\t\tdefaultUserId, group.getGroupId(), \"Home\",\n\t\t\t\"/sample/journal/articles/home_7cogs_private_pages.xml\",\n\t\t\tserviceContext);\n\n\t\tconfigureJournalContent(\n\t\t\tlayout, portletId, journalArticle.getArticleId());\n\n\t\tportletId = addPortletId(layout, PortletKeys.ACTIVITIES, \"column-2\");\n\n\t\tconfigurePortletTitle(\n\t\t\tlayout, portletId, \"Last Activities in 7Cogs Organization\");\n\n\t\t// Documents layout\n\n\t\tlayout = addLayout(\n\t\t\tgroup, \"Documents\", true, \"/documents\", \"2_columns_iii\");\n\n\t\taddPortletId(layout, PortletKeys.DOCUMENT_LIBRARY, \"column-1\");\n\t\taddPortletId(layout, PortletKeys.MEDIA_GALLERY_DISPLAY, \"column-1\");\n\n\t\tportletId = addPortletId(\n\t\t\tlayout, PortletKeys.JOURNAL_CONTENT, \"column-2\");\n\n\t\thighlightPortlet(layout, portletId);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"documents\", \"sharing\"});\n\n\t\tjournalArticle = addJournalArticle(\n\t\t\tdefaultUserId, group.getGroupId(), \"Shared Documents\",\n\t\t\t\"/sample/journal/articles/documents_shared_docs.xml\",\n\t\t\tserviceContext);\n\n\t\tconfigureJournalContent(\n\t\t\tlayout, portletId, journalArticle.getArticleId());\n\t}","commit_id":"ac2b4067f2d1064870b5e54f3c3a8ee7aa73344c","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected void highlightPortlet(Layout layout, String portletId)\n\t\tthrows Exception {\n\n\t\tPortletPreferences portletSetup =\n\t\t\tPortletPreferencesFactoryUtil.getLayoutPortletSetup(\n\t\t\t\tlayout, portletId);\n\n\t\tportletSetup.setValue(\n\t\t\t\"portlet-setup-show-borders\", String.valueOf(Boolean.FALSE));\n\t\tportletSetup.setValue(\n\t\t\t\"portlet-setup-css\", getString(\"/preferences/highlight.json\"));\n\n\t\tportletSetup.store();\n\t}","id":50646,"modified_method":"protected void highlightPortlet(Layout layout, String portletId)\n\t\tthrows Exception {\n\n\t\tPortletPreferences portletSetup =\n\t\t\tPortletPreferencesFactoryUtil.getLayoutPortletSetup(\n\t\t\t\tlayout, portletId);\n\n\t\tportletSetup.setValue(\n\t\t\t\"portletSetupShowBorders\", String.valueOf(Boolean.FALSE));\n\t\tportletSetup.setValue(\n\t\t\t\"portletSetupCss\", getString(\"/preferences/highlight.json\"));\n\n\t\tportletSetup.store();\n\t}","commit_id":"ac2b4067f2d1064870b5e54f3c3a8ee7aa73344c","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected void clearData(long companyId) throws Exception {\n\n\t\t// Users\n\n\t\tList<User> users = UserLocalServiceUtil.search(\n\t\t\tcompanyId, null, WorkflowConstants.STATUS_ANY, null,\n\t\t\tQueryUtil.ALL_POS, QueryUtil.ALL_POS, (OrderByComparator)null);\n\n\t\tfor (User user : users) {\n\t\t\tString screenName = user.getScreenName();\n\n\t\t\tif (screenName.equals(\"joebloggs\") || screenName.equals(\"test\")) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tUserLocalServiceUtil.deleteUser(user.getUserId());\n\t\t}\n\n\t\t// Groups\n\n\t\tList<Group> groups = GroupLocalServiceUtil.search(\n\t\t\tcompanyId, null, null, null, QueryUtil.ALL_POS, QueryUtil.ALL_POS);\n\n\t\tfor (Group group : groups) {\n\t\t\tDLAppLocalServiceUtil.deleteAll(group.getGroupId());\n\n\t\t\tJournalArticleLocalServiceUtil.deleteArticles(group.getGroupId());\n\t\t\tJournalTemplateLocalServiceUtil.deleteTemplates(group.getGroupId());\n\t\t\tJournalStructureLocalServiceUtil.deleteStructures(\n\t\t\t\tgroup.getGroupId());\n\n\t\t\tif (!PortalUtil.isSystemGroup(group.getName())) {\n\t\t\t\tGroupLocalServiceUtil.deleteGroup(group.getGroupId());\n\t\t\t}\n\t\t\telse {\n\t\t\t\tServiceContext serviceContext = new ServiceContext();\n\n\t\t\t\tLayoutLocalServiceUtil.deleteLayouts(\n\t\t\t\t\tgroup.getGroupId(), false, serviceContext);\n\t\t\t\tLayoutLocalServiceUtil.deleteLayouts(\n\t\t\t\t\tgroup.getGroupId(), true, serviceContext);\n\t\t\t}\n\t\t}\n\n\t\t// Organizations\n\n\t\tdeleteOrganizations(\n\t\t\tcompanyId, OrganizationConstants.DEFAULT_PARENT_ORGANIZATION_ID);\n\t}","id":50647,"modified_method":"protected void clearData(long companyId) throws Exception {\n\n\t\t// Users\n\n\t\tList<User> users = UserLocalServiceUtil.search(\n\t\t\tcompanyId, null, WorkflowConstants.STATUS_ANY, null,\n\t\t\tQueryUtil.ALL_POS, QueryUtil.ALL_POS, (OrderByComparator)null);\n\n\t\tfor (User user : users) {\n\t\t\tString screenName = user.getScreenName();\n\n\t\t\tif (screenName.equals(\"joebloggs\") || screenName.equals(\"test\")) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tUserLocalServiceUtil.deleteUser(user.getUserId());\n\t\t}\n\n\t\t// Groups\n\n\t\tList<Group> groups = GroupLocalServiceUtil.search(\n\t\t\tcompanyId, null, null, null, QueryUtil.ALL_POS, QueryUtil.ALL_POS);\n\n\t\tfor (Group group : groups) {\n\t\t\tif (!PortalUtil.isSystemGroup(group.getName())) {\n\t\t\t\tGroupLocalServiceUtil.deleteGroup(group.getGroupId());\n\t\t\t}\n\t\t\telse {\n\t\t\t\tServiceContext serviceContext = new ServiceContext();\n\n\t\t\t\tDLAppLocalServiceUtil.deleteAll(group.getGroupId());\n\n\t\t\t\tJournalArticleLocalServiceUtil.deleteArticles(\n\t\t\t\t\tgroup.getGroupId());\n\t\t\t\tJournalTemplateLocalServiceUtil.deleteTemplates(\n\t\t\t\t\tgroup.getGroupId());\n\t\t\t\tJournalStructureLocalServiceUtil.deleteStructures(\n\t\t\t\t\tgroup.getGroupId());\n\n\t\t\t\tLayoutLocalServiceUtil.deleteLayouts(\n\t\t\t\t\tgroup.getGroupId(), false, serviceContext);\n\t\t\t\tLayoutLocalServiceUtil.deleteLayouts(\n\t\t\t\t\tgroup.getGroupId(), true, serviceContext);\n\t\t\t}\n\t\t}\n\n\t\t// Organizations\n\n\t\tdeleteOrganizations(\n\t\t\tcompanyId, OrganizationConstants.DEFAULT_PARENT_ORGANIZATION_ID);\n\t}","commit_id":"ac2b4067f2d1064870b5e54f3c3a8ee7aa73344c","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected BlogsEntry addBlogsEntry(\n\t\t\tlong userId, String title, String fileName,\n\t\t\tServiceContext serviceContext)\n\t\tthrows Exception {\n\n\t\tString content = getString(fileName);\n\n\t\treturn BlogsEntryLocalServiceUtil.addEntry(\n\t\t\tuserId, title, StringPool.BLANK, content, 1, 1, 2008, 0, 0, false,\n\t\t\tfalse, new String[0], false, null, null, null, serviceContext);\n\t}","id":50648,"modified_method":"protected BlogsEntry addBlogsEntry(\n\t\t\tlong userId, String title, String fileName,\n\t\t\tServiceContext serviceContext)\n\t\tthrows Exception {\n\n\t\tString content = getString(fileName);\n\n\t\tserviceContext.setAddGroupPermissions(true);\n\t\tserviceContext.setAddGuestPermissions(true);\n\n\t\treturn BlogsEntryLocalServiceUtil.addEntry(\n\t\t\tuserId, title, StringPool.BLANK, content, 1, 1, 2008, 0, 0, false,\n\t\t\tfalse, new String[0], false, null, null, null, serviceContext);\n\t}","commit_id":"ac2b4067f2d1064870b5e54f3c3a8ee7aa73344c","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected void configurePortletTitle(\n\t\t\tLayout layout, String portletId, String title)\n\t\tthrows Exception {\n\n\t\tPortletPreferences portletSetup =\n\t\t\tPortletPreferencesFactoryUtil.getLayoutPortletSetup(\n\t\t\t\tlayout, portletId);\n\n\t\tportletSetup.setValue(\"portlet-setup-title\", title);\n\n\t\tportletSetup.store();\n\t}","id":50649,"modified_method":"protected void configurePortletTitle(\n\t\t\tLayout layout, String portletId, String title)\n\t\tthrows Exception {\n\n\t\tPortletPreferences portletSetup =\n\t\t\tPortletPreferencesFactoryUtil.getLayoutPortletSetup(\n\t\t\t\tlayout, portletId);\n\n\t\tportletSetup.setValue(\"portletSetupTitle\", title);\n\n\t\tportletSetup.store();\n\t}","commit_id":"ac2b4067f2d1064870b5e54f3c3a8ee7aa73344c","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected void doRun(long companyId) throws Exception {\n\t\tif (isAlreadyRan(companyId)) {\n\t\t\treturn;\n\t\t}\n\n\t\tlong defaultUserId = UserLocalServiceUtil.getDefaultUserId(companyId);\n\n\t\tclearData(companyId);\n\t\tsetupCommunities(companyId, defaultUserId);\n\t\tsetupOrganizations(companyId, defaultUserId);\n\t\tsetupRoles(companyId, defaultUserId);\n\t\tsetupUsers(companyId);\n\t}","id":50650,"modified_method":"protected void doRun(long companyId) throws Exception {\n\t\tif (isAlreadyRan(companyId)) {\n\t\t\treturn;\n\t\t}\n\n\t\tlong defaultUserId = UserLocalServiceUtil.getDefaultUserId(companyId);\n\n\t\tclearData(companyId);\n\t\tsetupCommunities(companyId, defaultUserId);\n\t\tsetupOrganizations(companyId, defaultUserId);\n\t\tsetupWorkflow(companyId, defaultUserId);\n\t\tsetupRoles(companyId, defaultUserId);\n\t\tsetupUsers(companyId);\n\t}","commit_id":"c24b951fdba11a8689fff6ea4e831a33853576df","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected void setupRoles(long companyId, long defaultUserId)\n\t\tthrows Exception {\n\n\t\tRole publisherRole = RoleLocalServiceUtil.addRole(\n\t\t\tdefaultUserId, companyId, \"Publisher\", null,\n\t\t\t\"Publishers are responsible for approving content.\",\n\t\t\tRoleConstants.TYPE_REGULAR);\n\n\t\tsetRolePermissions(\n\t\t\tpublisherRole, PortletKeys.JOURNAL,\n\t\t\tnew String[] {ActionKeys.ACCESS_IN_CONTROL_PANEL});\n\n\t\tsetRolePermissions(\n\t\t\tpublisherRole, \"com.liferay.portlet.journal\",\n\t\t\tnew String[] {\n\t\t\t\tActionKeys.ADD_ARTICLE, ActionKeys.ADD_FEED,\n\t\t\t\tActionKeys.ADD_STRUCTURE, ActionKeys.ADD_TEMPLATE,\n\t\t\t\tActionKeys.EXPIRE\n\t\t\t});\n\n\t\tsetRolePermissions(\n\t\t\tpublisherRole, JournalArticle.class.getName(),\n\t\t\tnew String[] {\n\t\t\t\tActionKeys.ADD_DISCUSSION, ActionKeys.DELETE, ActionKeys.EXPIRE,\n\t\t\t\tActionKeys.PERMISSIONS, ActionKeys.UPDATE, ActionKeys.VIEW\n\t\t\t});\n\n\t\tRole writerRole = RoleLocalServiceUtil.addRole(\n\t\t\tdefaultUserId, companyId, \"Writer\", null,\n\t\t\t\"Writers are responsible for creating content.\",\n\t\t\tRoleConstants.TYPE_REGULAR);\n\n\t\tsetRolePermissions(\n\t\t\twriterRole, PortletKeys.JOURNAL,\n\t\t\tnew String[] {ActionKeys.ACCESS_IN_CONTROL_PANEL});\n\n\t\tsetRolePermissions(\n\t\t\twriterRole, \"com.liferay.portlet.journal\",\n\t\t\tnew String[] {\n\t\t\t\tActionKeys.ADD_ARTICLE, ActionKeys.ADD_FEED,\n\t\t\t\tActionKeys.ADD_STRUCTURE, ActionKeys.ADD_TEMPLATE,\n\t\t\t\tActionKeys.MANAGE_STAGING\n\t\t\t});\n\n\t\tsetRolePermissions(\n\t\t\twriterRole, JournalArticle.class.getName(),\n\t\t\tnew String[] {ActionKeys.UPDATE, ActionKeys.VIEW});\n\t}","id":50651,"modified_method":"protected void setupRoles(long companyId, long defaultUserId)\n\t\tthrows Exception {\n\n\t\ttry {\n\t\t\tRoleLocalServiceUtil.addRole(\n\t\t\t\tdefaultUserId, companyId, \"Portal Content Reviewer\", null,\n\t\t\t\t\"Portal Content Reviewer are responsible for approving \" +\n\t\t\t\t\t\"content.\",\n\t\t\t\tRoleConstants.TYPE_REGULAR);\n\t\t}\n\t\tcatch (DuplicateRoleException dre) {\n\t\t}\n\n\t\tRole publisherRole = RoleLocalServiceUtil.addRole(\n\t\t\tdefaultUserId, companyId, \"Publisher\", null,\n\t\t\t\"Publishers are responsible for publishing content.\",\n\t\t\tRoleConstants.TYPE_REGULAR);\n\n\t\tsetRolePermissions(\n\t\t\tpublisherRole, PortletKeys.JOURNAL,\n\t\t\tnew String[] {ActionKeys.ACCESS_IN_CONTROL_PANEL});\n\n\t\tsetRolePermissions(\n\t\t\tpublisherRole, \"com.liferay.portlet.journal\",\n\t\t\tnew String[] {\n\t\t\t\tActionKeys.ADD_ARTICLE, ActionKeys.ADD_FEED,\n\t\t\t\tActionKeys.ADD_STRUCTURE, ActionKeys.ADD_TEMPLATE\n\t\t\t});\n\n\t\tsetRolePermissions(\n\t\t\tpublisherRole, JournalArticle.class.getName(),\n\t\t\tnew String[] {\n\t\t\t\tActionKeys.ADD_DISCUSSION, ActionKeys.DELETE, ActionKeys.EXPIRE,\n\t\t\t\tActionKeys.PERMISSIONS, ActionKeys.UPDATE, ActionKeys.VIEW\n\t\t\t});\n\n\t\tRole writerRole = RoleLocalServiceUtil.addRole(\n\t\t\tdefaultUserId, companyId, \"Writer\", null,\n\t\t\t\"Writers are responsible for creating content.\",\n\t\t\tRoleConstants.TYPE_REGULAR);\n\n\t\tsetRolePermissions(\n\t\t\twriterRole, PortletKeys.JOURNAL,\n\t\t\tnew String[] {ActionKeys.ACCESS_IN_CONTROL_PANEL});\n\n\t\tsetRolePermissions(\n\t\t\twriterRole, \"com.liferay.portlet.journal\",\n\t\t\tnew String[] {\n\t\t\t\tActionKeys.ADD_ARTICLE, ActionKeys.ADD_FEED,\n\t\t\t\tActionKeys.ADD_STRUCTURE, ActionKeys.ADD_TEMPLATE\n\t\t\t});\n\n\t\tsetRolePermissions(\n\t\t\twriterRole, JournalArticle.class.getName(),\n\t\t\tnew String[] {ActionKeys.UPDATE, ActionKeys.VIEW});\n\t}","commit_id":"c24b951fdba11a8689fff6ea4e831a33853576df","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected void setRolePermissions(\n\t\t\tRole role, String name, String[] actionIds)\n\t\tthrows Exception {\n\n\t\tlong roleId = role.getRoleId();\n\t\tlong companyId = role.getCompanyId();\n\t\tint scope =\tResourceConstants.SCOPE_COMPANY;\n\t\tString primKey = String.valueOf(companyId);\n\n\t\tPermissionLocalServiceUtil.setRolePermissions(\n\t\t\troleId, companyId, name, scope, primKey, actionIds);\n\t}","id":50652,"modified_method":"protected void setRolePermissions(\n\t\t\tRole role, String name, String[] actionIds)\n\t\tthrows Exception {\n\n\t\tlong roleId = role.getRoleId();\n\t\tlong companyId = role.getCompanyId();\n\t\tint scope =\tResourceConstants.SCOPE_COMPANY;\n\t\tString primKey = String.valueOf(companyId);\n\n\t\tif (_PERMISSIONS_USER_CHECK_ALGORITHM == 6) {\n\t\t\tResourcePermissionLocalServiceUtil.setResourcePermissions(\n\t\t\t\tcompanyId, name, scope, primKey, roleId, actionIds);\n\t\t}\n\t\telse {\n\t\t\tPermissionLocalServiceUtil.setRolePermissions(\n\t\t\t\troleId, companyId, name, scope, primKey, actionIds);\n\t\t}\n\t}","commit_id":"c24b951fdba11a8689fff6ea4e831a33853576df","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected void setupUsers(long companyId) throws Exception {\n\n\t\t// Roles\n\n\t\tRole adminRole = RoleLocalServiceUtil.getRole(\n\t\t\tcompanyId, RoleConstants.ADMINISTRATOR);\n\n\t\tRole powerUserRole = RoleLocalServiceUtil.getRole(\n\t\t\tcompanyId, RoleConstants.POWER_USER);\n\n\t\tRole publisherRole = RoleLocalServiceUtil.getRole(\n\t\t\tcompanyId, \"Publisher\");\n\n\t\tRole writerRole = RoleLocalServiceUtil.getRole(\n\t\t\tcompanyId, \"Writer\");\n\n\t\t// Users\n\n\t\tlong[] roleIds = new long[] {\n\t\t\tadminRole.getRoleId(), powerUserRole.getRoleId()\n\t\t};\n\n\t\tUser brunoUser = addUser(\n\t\t\tcompanyId, \"bruno\", \"Bruno\", \"Admin\", true, \"Administrator\",\n\t\t\troleIds);\n\n\t\troleIds = new long[] {powerUserRole.getRoleId()};\n\n\t\tUser johnUser = addUser(\n\t\t\tcompanyId, \"john\", \"John\", \"Regular\", true, \"Employee\", roleIds);\n\n\t\troleIds = new long[] {\n\t\t\tpowerUserRole.getRoleId(), writerRole.getRoleId()\n\t\t};\n\n\t\tUser michelleUser = addUser(\n\t\t\tcompanyId, \"michelle\", \"Michelle\", \"Writer\", false, \"Writer\",\n\t\t\troleIds);\n\n\t\troleIds = new long[] {\n\t\t\tpowerUserRole.getRoleId(), publisherRole.getRoleId()\n\t\t};\n\n\t\tUser richardUser = addUser(\n\t\t\tcompanyId, \"richard\", \"Richard\", \"Editor\", true, \"Publisher\",\n\t\t\troleIds);\n\n\t\t// Asset\n\n\t\tAssetCategory learningAssetCategory = _assetCategories.get(\"Learning\");\n\t\tAssetCategory liferayAssetCategory = _assetCategories.get(\"Liferay\");\n\n\t\t// Blogs\n\n\t\tServiceContext serviceContext = new ServiceContext();\n\n\t\tserviceContext.setAddCommunityPermissions(true);\n\t\tserviceContext.setAddGuestPermissions(true);\n\t\tserviceContext.setAssetTagNames(\n\t\t\tnew String[] {\"new\", \"features\", \"control panel\"});\n\t\tserviceContext.setAssetCategoryIds(\n\t\t\tnew long[] {\n\t\t\t\tlearningAssetCategory.getCategoryId(),\n\t\t\t\tliferayAssetCategory.getCategoryId()\n\t\t\t});\n\t\tserviceContext.setScopeGroupId(brunoUser.getGroup().getGroupId());\n\n\t\taddBlogsEntry(\n\t\t\tbrunoUser.getUserId(), \"New Control Panel!!\",\n\t\t\t\"/users/blogs/controlpanel.xml\", serviceContext);\n\n\t\tserviceContext.setAssetCategoryIds(\n\t\t\tnew long[] {\n\t\t\t\tlearningAssetCategory.getCategoryId(),\n\t\t\t\tliferayAssetCategory.getCategoryId()\n\t\t\t});\n\t\tserviceContext.setAssetTagNames(\n\t\t\tnew String[] {\n\t\t\t\t\"configuration\", \"portal.properties\", \"customization\"\n\t\t\t});\n\n\t\taddBlogsEntry(\n\t\t\tbrunoUser.getUserId(),\n\t\t\t\"Configuration of the portal: portal.properties\",\n\t\t\t\"/users/blogs/portalproperties.xml\", serviceContext);\n\n\t\tserviceContext.setAssetCategoryIds(\n\t\t\tnew long[] {\n\t\t\t\tlearningAssetCategory.getCategoryId(),\n\t\t\t\tliferayAssetCategory.getCategoryId()\n\t\t\t});\n\t\tserviceContext.setAssetTagNames(\n\t\t\tnew String[] {\"new\", \"wiki\", \"knowledge\"});\n\t\tserviceContext.setScopeGroupId(johnUser.getGroup().getGroupId());\n\n\t\taddBlogsEntry(\n\t\t\tjohnUser.getUserId(), \"Using the wiki\", \"/users/blogs/wiki.xml\",\n\t\t\tserviceContext);\n\n\t\tserviceContext.setAssetCategoryIds(\n\t\t\tnew long[] {\n\t\t\t\tlearningAssetCategory.getCategoryId(),\n\t\t\t\tliferayAssetCategory.getCategoryId()\n\t\t\t});\n\t\tserviceContext.setAssetTagNames(\n\t\t\tnew String[] {\"new\", \"chat\", \"communications\", \"features\"});\n\t\tserviceContext.setScopeGroupId(michelleUser.getGroup().getGroupId());\n\n\t\taddBlogsEntry(\n\t\t\tmichelleUser.getUserId(), \"We have an amazing Chat!\",\n\t\t\t\"/users/blogs/chat.xml\", serviceContext);\n\n\t\t// Document library\n\n\t\tDLFolder dlFolder = addDLFolder(\n\t\t\tbrunoUser.getUserId(), brunoUser.getGroup().getGroupId(),\n\t\t\t\"Important Documents\", \"Documents related with the company\");\n\n\t\tserviceContext.setAssetTagNames(\n\t\t\tnew String[] {\"document\", \"budget\", \"2009\"});\n\n\t\taddDLFileEntry(\n\t\t\tbrunoUser.getUserId(), dlFolder.getGroupId(),\n\t\t\tdlFolder.getFolderId(), \"/users/document_library/Budget.xls\",\n\t\t\t\"Budget.xls\", \"Budget\", \"Budgets for the current year\",\n\t\t\tserviceContext);\n\n\t\taddDLFolder(\n\t\t\tmichelleUser.getUserId(), michelleUser.getGroup().getGroupId(),\n\t\t\t\"My Documents\", \"Personal docs\");\n\n\t\tdlFolder = addDLFolder(\n\t\t\tmichelleUser.getUserId(), michelleUser.getGroup().getGroupId(),\n\t\t\t\"Work Documents\", \"Works docs\");\n\n\t\tserviceContext.setAssetTagNames(\n\t\t\tnew String[] {\"document\", \"notes\", \"meeting\"});\n\n\t\taddDLFileEntry(\n\t\t\tmichelleUser.getUserId(), dlFolder.getGroupId(),\n\t\t\tdlFolder.getFolderId(),\n\t\t\t\"/users/document_library/Notes from the last meeting.doc\",\n\t\t\t\"Notes from the last meeting.doc\", \"Notes from the last meeting\",\n\t\t\t\"Important notes\", serviceContext);\n\n\t\taddDLFolder(\n\t\t\trichardUser.getUserId(), richardUser.getGroup().getGroupId(),\n\t\t\t\"Documentation\", StringPool.BLANK);\n\n\t\tdlFolder = addDLFolder(\n\t\t\trichardUser.getUserId(),richardUser.getGroup().getGroupId(),\n\t\t\t\"Innovation\", \"New things\");\n\n\t\tserviceContext.setAssetTagNames(\n\t\t\tnew String[] {\"new\", \"features\", \"2009\"});\n\n\t\taddDLFileEntry(\n\t\t\trichardUser.getUserId(), dlFolder.getGroupId(),\n\t\t\tdlFolder.getFolderId(), \"/users/document_library/New Features.ppt\",\n\t\t\t\"New Features.ppt\", \"New Features\",\n\t\t\t\"Features for the current year\", serviceContext);\n\n\t\t// Message boards\n\n\t\tOrganization sevenCogsOrganization =\n\t\t\tOrganizationLocalServiceUtil.getOrganization(\n\t\t\tcompanyId, \"7Cogs, Inc.\");\n\n\t\tserviceContext.setScopeGroupId(\n\t\t\tsevenCogsOrganization.getGroup().getGroupId());\n\n\t\tMBCategory mbCategory = addMBCategory(\n\t\t\tbrunoUser.getUserId(), \"Using the forum\",\n\t\t\t\"Some advice on using the forum\", serviceContext);\n\n\t\tserviceContext.setAssetTagNames(\n\t\t\tnew String[] {\"forums\", \"liferay\", \"7cogs\"});\n\n\t\taddMBMessage(\n\t\t\tbrunoUser.getUserId(), brunoUser.getFullName(),\n\t\t\tmbCategory.getGroupId(), mbCategory.getCategoryId(), 0, 0,\n\t\t\t\"Nice Forums\", \"/sample/message_boards/general.xml\",\n\t\t\tserviceContext);\n\n\t\tmbCategory = addMBCategory(\n\t\t\tbrunoUser.getUserId(), \"General Questions\",\n\t\t\t\"Product questions and more!\", serviceContext);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"vix-998\", \"liferay\"});\n\n\t\tMBMessage vix1Message = addMBMessage(\n\t\t\tbrunoUser.getUserId(), brunoUser.getFullName(),\n\t\t\tmbCategory.getGroupId(), mbCategory.getCategoryId(), 0, 0,\n\t\t\t\"About the Vix-998\", \"/sample/message_boards/vix1.xml\",\n\t\t\tserviceContext);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"vix-998\", \"latin\"});\n\n\t\tMBMessage vix2Message = addMBMessage(\n\t\t\trichardUser.getUserId(), richardUser.getFullName(),\n\t\t\tmbCategory.getGroupId(), mbCategory.getCategoryId(),\n\t\t\tvix1Message.getThreadId(), vix1Message.getMessageId(),\n\t\t\t\"RE: About the Vix-998\", \"/sample/message_boards/vix2.xml\",\n\t\t\tserviceContext);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"vix-998\", \"vulgo\"});\n\n\t\taddMBMessage(\n\t\t\tmichelleUser.getUserId(), michelleUser.getFullName(),\n\t\t\tmbCategory.getGroupId(), mbCategory.getCategoryId(),\n\t\t\tvix1Message.getThreadId(), vix2Message.getMessageId(),\n\t\t\t\"RE: About the Vix-998\", \"/sample/message_boards/vix3.xml\",\n\t\t\tserviceContext);\n\n\t\t// Social\n\n\t\taddSocialRequest(michelleUser, brunoUser, true);\n\t\taddSocialRequest(michelleUser, johnUser, true);\n\t\taddSocialRequest(michelleUser, richardUser, true);\n\n\t\taddSocialRequest(johnUser, brunoUser, false);\n\t\taddSocialRequest(johnUser, richardUser, false);\n\t}","id":50653,"modified_method":"protected void setupUsers(long companyId) throws Exception {\n\n\t\t// Roles\n\n\t\tRole adminRole = RoleLocalServiceUtil.getRole(\n\t\t\tcompanyId, RoleConstants.ADMINISTRATOR);\n\n\t\tRole portalContentReviewer = RoleLocalServiceUtil.getRole(\n\t\t\tcompanyId, \"Portal Content Reviewer\");\n\n\t\tRole powerUserRole = RoleLocalServiceUtil.getRole(\n\t\t\tcompanyId, RoleConstants.POWER_USER);\n\n\t\tRole publisherRole = RoleLocalServiceUtil.getRole(\n\t\t\tcompanyId, \"Publisher\");\n\n\t\tRole writerRole = RoleLocalServiceUtil.getRole(\n\t\t\tcompanyId, \"Writer\");\n\n\t\t// Users\n\n\t\tlong[] roleIds = new long[] {\n\t\t\tadminRole.getRoleId(), powerUserRole.getRoleId()\n\t\t};\n\n\t\tUser brunoUser = addUser(\n\t\t\tcompanyId, \"bruno\", \"Bruno\", \"Admin\", true, \"Administrator\",\n\t\t\troleIds);\n\n\t\troleIds = new long[] {powerUserRole.getRoleId()};\n\n\t\tUser johnUser = addUser(\n\t\t\tcompanyId, \"john\", \"John\", \"Regular\", true, \"Employee\", roleIds);\n\n\t\troleIds = new long[] {\n\t\t\tpowerUserRole.getRoleId(), writerRole.getRoleId()\n\t\t};\n\n\t\tUser michelleUser = addUser(\n\t\t\tcompanyId, \"michelle\", \"Michelle\", \"Writer\", false, \"Writer\",\n\t\t\troleIds);\n\n\t\troleIds = new long[] {\n\t\t\tpowerUserRole.getRoleId(), publisherRole.getRoleId(),\n\t\t\tportalContentReviewer.getRoleId()\n\t\t};\n\n\t\tUser richardUser = addUser(\n\t\t\tcompanyId, \"richard\", \"Richard\", \"Editor\", true, \"Publisher\",\n\t\t\troleIds);\n\n\t\t// Asset\n\n\t\tAssetCategory learningAssetCategory = _assetCategories.get(\"Learning\");\n\t\tAssetCategory liferayAssetCategory = _assetCategories.get(\"Liferay\");\n\n\t\t// Blogs\n\n\t\tServiceContext serviceContext = new ServiceContext();\n\n\t\tserviceContext.setAddCommunityPermissions(true);\n\t\tserviceContext.setAddGuestPermissions(true);\n\t\tserviceContext.setAssetTagNames(\n\t\t\tnew String[] {\"new\", \"features\", \"control panel\"});\n\t\tserviceContext.setAssetCategoryIds(\n\t\t\tnew long[] {\n\t\t\t\tlearningAssetCategory.getCategoryId(),\n\t\t\t\tliferayAssetCategory.getCategoryId()\n\t\t\t});\n\t\tserviceContext.setScopeGroupId(brunoUser.getGroup().getGroupId());\n\n\t\taddBlogsEntry(\n\t\t\tbrunoUser.getUserId(), \"New Control Panel!!\",\n\t\t\t\"/users/blogs/controlpanel.xml\", serviceContext);\n\n\t\tserviceContext.setAssetCategoryIds(\n\t\t\tnew long[] {\n\t\t\t\tlearningAssetCategory.getCategoryId(),\n\t\t\t\tliferayAssetCategory.getCategoryId()\n\t\t\t});\n\t\tserviceContext.setAssetTagNames(\n\t\t\tnew String[] {\n\t\t\t\t\"configuration\", \"portal.properties\", \"customization\"\n\t\t\t});\n\n\t\taddBlogsEntry(\n\t\t\tbrunoUser.getUserId(),\n\t\t\t\"Configuration of the portal: portal.properties\",\n\t\t\t\"/users/blogs/portalproperties.xml\", serviceContext);\n\n\t\tserviceContext.setAssetCategoryIds(\n\t\t\tnew long[] {\n\t\t\t\tlearningAssetCategory.getCategoryId(),\n\t\t\t\tliferayAssetCategory.getCategoryId()\n\t\t\t});\n\t\tserviceContext.setAssetTagNames(\n\t\t\tnew String[] {\"new\", \"wiki\", \"knowledge\"});\n\t\tserviceContext.setScopeGroupId(johnUser.getGroup().getGroupId());\n\n\t\taddBlogsEntry(\n\t\t\tjohnUser.getUserId(), \"Using the wiki\", \"/users/blogs/wiki.xml\",\n\t\t\tserviceContext);\n\n\t\tserviceContext.setAssetCategoryIds(\n\t\t\tnew long[] {\n\t\t\t\tlearningAssetCategory.getCategoryId(),\n\t\t\t\tliferayAssetCategory.getCategoryId()\n\t\t\t});\n\t\tserviceContext.setAssetTagNames(\n\t\t\tnew String[] {\"new\", \"chat\", \"communications\", \"features\"});\n\t\tserviceContext.setScopeGroupId(michelleUser.getGroup().getGroupId());\n\n\t\taddBlogsEntry(\n\t\t\tmichelleUser.getUserId(), \"We have an amazing Chat!\",\n\t\t\t\"/users/blogs/chat.xml\", serviceContext);\n\n\t\t// Document library\n\n\t\tDLFolder dlFolder = addDLFolder(\n\t\t\tbrunoUser.getUserId(), brunoUser.getGroup().getGroupId(),\n\t\t\t\"Important Documents\", \"Documents related with the company\");\n\n\t\tserviceContext.setAssetTagNames(\n\t\t\tnew String[] {\"document\", \"budget\", \"2009\"});\n\n\t\taddDLFileEntry(\n\t\t\tbrunoUser.getUserId(), dlFolder.getGroupId(),\n\t\t\tdlFolder.getFolderId(), \"/users/document_library/Budget.xls\",\n\t\t\t\"Budget.xls\", \"Budget\", \"Budgets for the current year\",\n\t\t\tserviceContext);\n\n\t\taddDLFolder(\n\t\t\tmichelleUser.getUserId(), michelleUser.getGroup().getGroupId(),\n\t\t\t\"My Documents\", \"Personal docs\");\n\n\t\tdlFolder = addDLFolder(\n\t\t\tmichelleUser.getUserId(), michelleUser.getGroup().getGroupId(),\n\t\t\t\"Work Documents\", \"Works docs\");\n\n\t\tserviceContext.setAssetTagNames(\n\t\t\tnew String[] {\"document\", \"notes\", \"meeting\"});\n\n\t\taddDLFileEntry(\n\t\t\tmichelleUser.getUserId(), dlFolder.getGroupId(),\n\t\t\tdlFolder.getFolderId(),\n\t\t\t\"/users/document_library/Notes from the last meeting.doc\",\n\t\t\t\"Notes from the last meeting.doc\", \"Notes from the last meeting\",\n\t\t\t\"Important notes\", serviceContext);\n\n\t\taddDLFolder(\n\t\t\trichardUser.getUserId(), richardUser.getGroup().getGroupId(),\n\t\t\t\"Documentation\", StringPool.BLANK);\n\n\t\tdlFolder = addDLFolder(\n\t\t\trichardUser.getUserId(),richardUser.getGroup().getGroupId(),\n\t\t\t\"Innovation\", \"New things\");\n\n\t\tserviceContext.setAssetTagNames(\n\t\t\tnew String[] {\"new\", \"features\", \"2009\"});\n\n\t\taddDLFileEntry(\n\t\t\trichardUser.getUserId(), dlFolder.getGroupId(),\n\t\t\tdlFolder.getFolderId(), \"/users/document_library/New Features.ppt\",\n\t\t\t\"New Features.ppt\", \"New Features\",\n\t\t\t\"Features for the current year\", serviceContext);\n\n\t\t// Message boards\n\n\t\tOrganization sevenCogsOrganization =\n\t\t\tOrganizationLocalServiceUtil.getOrganization(\n\t\t\tcompanyId, \"7Cogs, Inc.\");\n\n\t\tserviceContext.setScopeGroupId(\n\t\t\tsevenCogsOrganization.getGroup().getGroupId());\n\n\t\tMBCategory mbCategory = addMBCategory(\n\t\t\tbrunoUser.getUserId(), \"Using the forum\",\n\t\t\t\"Some advice on using the forum\", serviceContext);\n\n\t\tserviceContext.setAssetTagNames(\n\t\t\tnew String[] {\"forums\", \"liferay\", \"7cogs\"});\n\n\t\taddMBMessage(\n\t\t\tbrunoUser.getUserId(), brunoUser.getFullName(),\n\t\t\tmbCategory.getGroupId(), mbCategory.getCategoryId(), 0, 0,\n\t\t\t\"Nice Forums\", \"/sample/message_boards/general.xml\",\n\t\t\tserviceContext);\n\n\t\tmbCategory = addMBCategory(\n\t\t\tbrunoUser.getUserId(), \"General Questions\",\n\t\t\t\"Product questions and more!\", serviceContext);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"vix-998\", \"liferay\"});\n\n\t\tMBMessage vix1Message = addMBMessage(\n\t\t\tbrunoUser.getUserId(), brunoUser.getFullName(),\n\t\t\tmbCategory.getGroupId(), mbCategory.getCategoryId(), 0, 0,\n\t\t\t\"About the Vix-998\", \"/sample/message_boards/vix1.xml\",\n\t\t\tserviceContext);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"vix-998\", \"latin\"});\n\n\t\tMBMessage vix2Message = addMBMessage(\n\t\t\trichardUser.getUserId(), richardUser.getFullName(),\n\t\t\tmbCategory.getGroupId(), mbCategory.getCategoryId(),\n\t\t\tvix1Message.getThreadId(), vix1Message.getMessageId(),\n\t\t\t\"RE: About the Vix-998\", \"/sample/message_boards/vix2.xml\",\n\t\t\tserviceContext);\n\n\t\tserviceContext.setAssetTagNames(new String[] {\"vix-998\", \"vulgo\"});\n\n\t\taddMBMessage(\n\t\t\tmichelleUser.getUserId(), michelleUser.getFullName(),\n\t\t\tmbCategory.getGroupId(), mbCategory.getCategoryId(),\n\t\t\tvix1Message.getThreadId(), vix2Message.getMessageId(),\n\t\t\t\"RE: About the Vix-998\", \"/sample/message_boards/vix3.xml\",\n\t\t\tserviceContext);\n\n\t\t// Social\n\n\t\taddSocialRequest(michelleUser, brunoUser, true);\n\t\taddSocialRequest(michelleUser, johnUser, true);\n\t\taddSocialRequest(michelleUser, richardUser, true);\n\n\t\taddSocialRequest(johnUser, brunoUser, false);\n\t\taddSocialRequest(johnUser, richardUser, false);\n\t}","commit_id":"c24b951fdba11a8689fff6ea4e831a33853576df","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected static DateRange getDateRange(\n\t\t\tString range, int rangeLast, int startDateAmPm, int startDateYear,\n\t\t\tint startDateMonth, int startDateDay, int startDateHour,\n\t\t\tint startDateMinute, int endDateAmPm, int endDateYear,\n\t\t\tint endDateMonth, int endDateDay, int endDateHour,\n\t\t\tint endDateMinute, String portletId, long groupId, long plid,\n\t\t\tboolean privateLayout, Locale locale, TimeZone timeZone)\n\t\tthrows PortalException {\n\n\t\tDate startDate = null;\n\t\tDate endDate = null;\n\n\t\tif (range.equals(RANGE_DATE_RANGE)) {\n\t\t\tCalendar startCalendar = getCalendar(\n\t\t\t\tstartDateAmPm, startDateYear, startDateMonth, startDateDay,\n\t\t\t\tstartDateHour, startDateMinute, locale, timeZone, true);\n\n\t\t\tstartDate = startCalendar.getTime();\n\n\t\t\tCalendar endCalendar = getCalendar(\n\t\t\t\tendDateAmPm, endDateYear, endDateMonth, endDateDay, endDateHour,\n\t\t\t\tendDateMinute, locale, timeZone, true);\n\n\t\t\tendDate = endCalendar.getTime();\n\t\t}\n\t\telse if (range.equals(RANGE_FROM_LAST_PUBLISH_DATE)) {\n\t\t\tDate lastPublishDate = null;\n\n\t\t\tif (Validator.isNotNull(portletId) && (plid > 0)) {\n\t\t\t\tLayout layout = LayoutLocalServiceUtil.getLayout(plid);\n\n\t\t\t\tPortletPreferences preferences =\n\t\t\t\t\tPortletPreferencesFactoryUtil.getStrictPortletSetup(\n\t\t\t\t\t\tlayout, portletId);\n\n\t\t\t\tlastPublishDate = getLastPublishDate(preferences);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tLayoutSet layoutSet = LayoutSetLocalServiceUtil.getLayoutSet(\n\t\t\t\t\tgroupId, privateLayout);\n\n\t\t\t\tlastPublishDate = getLastPublishDate(layoutSet);\n\t\t\t}\n\n\t\t\tif (lastPublishDate != null) {\n\t\t\t\tendDate = new Date();\n\n\t\t\t\tstartDate = lastPublishDate;\n\t\t\t}\n\t\t}\n\t\telse if (range.equals(RANGE_LAST)) {\n\t\t\tDate now = new Date();\n\n\t\t\tstartDate = new Date(now.getTime() - (rangeLast * Time.HOUR));\n\n\t\t\tendDate = now;\n\t\t}\n\n\t\treturn new DateRange(startDate, endDate);\n\t}","id":50654,"modified_method":"protected static DateRange getDateRange(\n\t\t\tString range, int rangeLast, int startDateAmPm, int startDateYear,\n\t\t\tint startDateMonth, int startDateDay, int startDateHour,\n\t\t\tint startDateMinute, int endDateAmPm, int endDateYear,\n\t\t\tint endDateMonth, int endDateDay, int endDateHour,\n\t\t\tint endDateMinute, String portletId, long groupId, long plid,\n\t\t\tboolean privateLayout, Locale locale, TimeZone timeZone)\n\t\tthrows PortalException {\n\n\t\tDate startDate = null;\n\t\tDate endDate = null;\n\n\t\tif (range.equals(RANGE_DATE_RANGE)) {\n\t\t\tCalendar startCalendar = getCalendar(\n\t\t\t\tstartDateAmPm, startDateYear, startDateMonth, startDateDay,\n\t\t\t\tstartDateHour, startDateMinute, locale, timeZone, true);\n\n\t\t\tstartDate = startCalendar.getTime();\n\n\t\t\tCalendar endCalendar = getCalendar(\n\t\t\t\tendDateAmPm, endDateYear, endDateMonth, endDateDay, endDateHour,\n\t\t\t\tendDateMinute, locale, timeZone, true);\n\n\t\t\tendDate = endCalendar.getTime();\n\t\t}\n\t\telse if (range.equals(RANGE_FROM_LAST_PUBLISH_DATE)) {\n\t\t\tDate lastPublishDate = null;\n\n\t\t\tif (Validator.isNotNull(portletId)) {\n\t\t\t\tLayout layout = LayoutLocalServiceUtil.fetchLayout(plid);\n\n\t\t\t\tPortletPreferences preferences = null;\n\n\t\t\t\tif (layout == null) {\n\t\t\t\t\tGroup group = GroupLocalServiceUtil.getGroup(groupId);\n\n\t\t\t\t\tpreferences =\n\t\t\t\t\t\tPortletPreferencesFactoryUtil.getStrictPortletSetup(\n\t\t\t\t\t\t\tgroup.getCompanyId(), groupId, portletId);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpreferences =\n\t\t\t\t\t\tPortletPreferencesFactoryUtil.getStrictPortletSetup(\n\t\t\t\t\t\t\tlayout, portletId);\n\t\t\t\t}\n\n\t\t\t\tlastPublishDate = getLastPublishDate(preferences);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tLayoutSet layoutSet = LayoutSetLocalServiceUtil.getLayoutSet(\n\t\t\t\t\tgroupId, privateLayout);\n\n\t\t\t\tlastPublishDate = getLastPublishDate(layoutSet);\n\t\t\t}\n\n\t\t\tif (lastPublishDate != null) {\n\t\t\t\tendDate = new Date();\n\n\t\t\t\tstartDate = lastPublishDate;\n\t\t\t}\n\t\t}\n\t\telse if (range.equals(RANGE_LAST)) {\n\t\t\tDate now = new Date();\n\n\t\t\tstartDate = new Date(now.getTime() - (rangeLast * Time.HOUR));\n\n\t\t\tendDate = now;\n\t\t}\n\n\t\treturn new DateRange(startDate, endDate);\n\t}","commit_id":"4aaae4cf925d849517c503a2008255c302752fa6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic BackgroundTaskResult execute(BackgroundTask backgroundTask)\n\t\tthrows PortalException {\n\n\t\tExportImportConfiguration exportImportConfiguration =\n\t\t\tgetExportImportConfiguration(backgroundTask);\n\n\t\tMap<String, Serializable> settingsMap =\n\t\t\texportImportConfiguration.getSettingsMap();\n\n\t\tlong userId = MapUtil.getLong(settingsMap, \"userId\");\n\t\tlong targetGroupId = MapUtil.getLong(settingsMap, \"targetGroupId\");\n\t\tlong sourceGroupId = MapUtil.getLong(settingsMap, \"sourceGroupId\");\n\n\t\tclearBackgroundTaskStatus(backgroundTask);\n\n\t\tFile file = null;\n\t\tMissingReferences missingReferences = null;\n\n\t\ttry {\n\t\t\tExportImportThreadLocal.setLayoutStagingInProcess(true);\n\n\t\t\tExportImportLifecycleManagerUtil.fireExportImportLifecycleEvent(\n\t\t\t\tEVENT_PUBLICATION_LAYOUT_LOCAL_STARTED,\n\t\t\t\tPROCESS_FLAG_LAYOUT_STAGING_IN_PROCESS,\n\t\t\t\texportImportConfiguration);\n\n\t\t\tboolean privateLayout = MapUtil.getBoolean(\n\t\t\t\tsettingsMap, \"privateLayout\");\n\n\t\t\tinitThreadLocals(sourceGroupId, privateLayout);\n\n\t\t\tfile = ExportImportLocalServiceUtil.exportLayoutsAsFile(\n\t\t\t\texportImportConfiguration);\n\n\t\t\tmarkBackgroundTask(\n\t\t\t\tbackgroundTask.getBackgroundTaskId(), \"exported\");\n\n\t\t\tmissingReferences = TransactionInvokerUtil.invoke(\n\t\t\t\ttransactionAttribute,\n\t\t\t\tnew LayoutStagingImportCallable(\n\t\t\t\t\tbackgroundTask.getBackgroundTaskId(),\n\t\t\t\t\texportImportConfiguration, file, sourceGroupId,\n\t\t\t\t\ttargetGroupId, userId));\n\n\t\t\tExportImportThreadLocal.setLayoutStagingInProcess(false);\n\n\t\t\tExportImportLifecycleManagerUtil.fireExportImportLifecycleEvent(\n\t\t\t\tEVENT_PUBLICATION_LAYOUT_LOCAL_SUCCEEDED,\n\t\t\t\tPROCESS_FLAG_LAYOUT_STAGING_IN_PROCESS,\n\t\t\t\texportImportConfiguration);\n\t\t}\n\t\tcatch (Throwable t) {\n\t\t\tExportImportThreadLocal.setLayoutStagingInProcess(false);\n\n\t\t\tExportImportLifecycleManagerUtil.fireExportImportLifecycleEvent(\n\t\t\t\tEVENT_PUBLICATION_LAYOUT_LOCAL_FAILED,\n\t\t\t\tPROCESS_FLAG_LAYOUT_STAGING_IN_PROCESS,\n\t\t\t\texportImportConfiguration, t);\n\n\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t_log.debug(t, t);\n\t\t\t}\n\t\t\telse if (_log.isWarnEnabled()) {\n\t\t\t\t_log.warn(\"Unable to publish layout: \" + t.getMessage());\n\t\t\t}\n\n\t\t\tGroup sourceGroup = GroupLocalServiceUtil.getGroup(sourceGroupId);\n\n\t\t\tif (sourceGroup.hasStagingGroup()) {\n\t\t\t\tServiceContext serviceContext = new ServiceContext();\n\n\t\t\t\tserviceContext.setUserId(userId);\n\n\t\t\t\tStagingLocalServiceUtil.disableStaging(\n\t\t\t\t\tsourceGroup, serviceContext);\n\t\t\t}\n\n\t\t\tdeleteTempLarOnFailure(file);\n\n\t\t\tthrow new SystemException(t);\n\t\t}\n\n\t\tdeleteTempLarOnSuccess(file);\n\n\t\treturn processMissingReferences(\n\t\t\tbackgroundTask.getBackgroundTaskId(), missingReferences);\n\t}","id":50655,"modified_method":"@Override\n\tpublic BackgroundTaskResult execute(BackgroundTask backgroundTask)\n\t\tthrows PortalException {\n\n\t\tExportImportConfiguration exportImportConfiguration =\n\t\t\tgetExportImportConfiguration(backgroundTask);\n\n\t\tMap<String, Serializable> settingsMap =\n\t\t\texportImportConfiguration.getSettingsMap();\n\n\t\tlong userId = MapUtil.getLong(settingsMap, \"userId\");\n\t\tlong targetGroupId = MapUtil.getLong(settingsMap, \"targetGroupId\");\n\t\tlong sourceGroupId = MapUtil.getLong(settingsMap, \"sourceGroupId\");\n\n\t\tclearBackgroundTaskStatus(backgroundTask);\n\n\t\tFile file = null;\n\t\tMissingReferences missingReferences = null;\n\n\t\ttry {\n\t\t\tExportImportThreadLocal.setLayoutStagingInProcess(true);\n\n\t\t\tGroup sourceGroup = GroupLocalServiceUtil.getGroup(sourceGroupId);\n\n\t\t\tif (sourceGroup.hasStagingGroup()) {\n\t\t\t\tGroup stagingGroup = sourceGroup.getStagingGroup();\n\n\t\t\t\tif (stagingGroup.getGroupId() == targetGroupId) {\n\t\t\t\t\tExportImportThreadLocal.setInitialPublicationInProcess(\n\t\t\t\t\t\ttrue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tExportImportLifecycleManagerUtil.fireExportImportLifecycleEvent(\n\t\t\t\tEVENT_PUBLICATION_LAYOUT_LOCAL_STARTED,\n\t\t\t\tPROCESS_FLAG_LAYOUT_STAGING_IN_PROCESS,\n\t\t\t\texportImportConfiguration);\n\n\t\t\tboolean privateLayout = MapUtil.getBoolean(\n\t\t\t\tsettingsMap, \"privateLayout\");\n\n\t\t\tinitThreadLocals(sourceGroupId, privateLayout);\n\n\t\t\tfile = ExportImportLocalServiceUtil.exportLayoutsAsFile(\n\t\t\t\texportImportConfiguration);\n\n\t\t\tmarkBackgroundTask(\n\t\t\t\tbackgroundTask.getBackgroundTaskId(), \"exported\");\n\n\t\t\tmissingReferences = TransactionInvokerUtil.invoke(\n\t\t\t\ttransactionAttribute,\n\t\t\t\tnew LayoutStagingImportCallable(\n\t\t\t\t\tbackgroundTask.getBackgroundTaskId(),\n\t\t\t\t\texportImportConfiguration, file, sourceGroupId,\n\t\t\t\t\ttargetGroupId, userId));\n\n\t\t\tExportImportThreadLocal.setInitialPublicationInProcess(false);\n\t\t\tExportImportThreadLocal.setLayoutStagingInProcess(false);\n\n\t\t\tExportImportLifecycleManagerUtil.fireExportImportLifecycleEvent(\n\t\t\t\tEVENT_PUBLICATION_LAYOUT_LOCAL_SUCCEEDED,\n\t\t\t\tPROCESS_FLAG_LAYOUT_STAGING_IN_PROCESS,\n\t\t\t\texportImportConfiguration);\n\t\t}\n\t\tcatch (Throwable t) {\n\t\t\tExportImportThreadLocal.setInitialPublicationInProcess(false);\n\t\t\tExportImportThreadLocal.setLayoutStagingInProcess(false);\n\n\t\t\tExportImportLifecycleManagerUtil.fireExportImportLifecycleEvent(\n\t\t\t\tEVENT_PUBLICATION_LAYOUT_LOCAL_FAILED,\n\t\t\t\tPROCESS_FLAG_LAYOUT_STAGING_IN_PROCESS,\n\t\t\t\texportImportConfiguration, t);\n\n\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t_log.debug(t, t);\n\t\t\t}\n\t\t\telse if (_log.isWarnEnabled()) {\n\t\t\t\t_log.warn(\"Unable to publish layout: \" + t.getMessage());\n\t\t\t}\n\n\t\t\tGroup sourceGroup = GroupLocalServiceUtil.getGroup(sourceGroupId);\n\n\t\t\tif (sourceGroup.hasStagingGroup()) {\n\t\t\t\tServiceContext serviceContext = new ServiceContext();\n\n\t\t\t\tserviceContext.setUserId(userId);\n\n\t\t\t\tStagingLocalServiceUtil.disableStaging(\n\t\t\t\t\tsourceGroup, serviceContext);\n\t\t\t}\n\n\t\t\tdeleteTempLarOnFailure(file);\n\n\t\t\tthrow new SystemException(t);\n\t\t}\n\n\t\tdeleteTempLarOnSuccess(file);\n\n\t\treturn processMissingReferences(\n\t\t\tbackgroundTask.getBackgroundTaskId(), missingReferences);\n\t}","commit_id":"e5fdfa47ff8d3580273e5e85f9bbfdb5f0a3a281","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void exportPortlet(\n\t\t\tPortletDataContext portletDataContext, Layout layout,\n\t\t\tElement parentElement, boolean exportPermissions,\n\t\t\tboolean exportPortletArchivedSetups, boolean exportPortletData,\n\t\t\tboolean exportPortletSetup, boolean exportPortletUserPreferences)\n\t\tthrows Exception {\n\n\t\tlong plid = PortletKeys.PREFS_OWNER_ID_DEFAULT;\n\t\tlong layoutId = LayoutConstants.DEFAULT_PARENT_LAYOUT_ID;\n\n\t\tif (layout != null) {\n\t\t\tplid = layout.getPlid();\n\t\t\tlayoutId = layout.getLayoutId();\n\t\t}\n\n\t\tPortlet portlet = PortletLocalServiceUtil.getPortletById(\n\t\t\tportletDataContext.getCompanyId(),\n\t\t\tportletDataContext.getPortletId());\n\n\t\tif ((portlet == null) || portlet.isUndeployedPortlet()) {\n\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t_log.debug(\n\t\t\t\t\t\"Do not export portlet \" +\n\t\t\t\t\t\tportletDataContext.getPortletId() +\n\t\t\t\t\t\t\t\" because the portlet is not deployed\");\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (!portlet.isInstanceable() &&\n\t\t\t!portlet.isPreferencesUniquePerLayout() &&\n\t\t\tportletDataContext.hasNotUniquePerLayout(\n\t\t\t\tportletDataContext.getPortletId())) {\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (BackgroundTaskThreadLocal.hasBackgroundTask()) {\n\t\t\tPortletDataContext clonedPortletDataContext =\n\t\t\t\tPortletDataContextFactoryUtil.clonePortletDataContext(\n\t\t\t\t\tportletDataContext);\n\n\t\t\tManifestSummary manifestSummary =\n\t\t\t\tclonedPortletDataContext.getManifestSummary();\n\n\t\t\tmanifestSummary.resetCounters();\n\n\t\t\tPortletDataHandler portletDataHandler =\n\t\t\t\tportlet.getPortletDataHandlerInstance();\n\n\t\t\tportletDataHandler.prepareManifestSummary(clonedPortletDataContext);\n\n\t\t\tPortletDataHandlerStatusMessageSenderUtil.sendStatusMessage(\n\t\t\t\t\"portlet\", portletDataContext.getPortletId(), manifestSummary);\n\t\t}\n\n\t\tDocument document = SAXReaderUtil.createDocument();\n\n\t\tElement portletElement = document.addElement(\"portlet\");\n\n\t\tportletElement.addAttribute(\n\t\t\t\"portlet-id\", portletDataContext.getPortletId());\n\t\tportletElement.addAttribute(\n\t\t\t\"root-portlet-id\", portletDataContext.getRootPortletId());\n\t\tportletElement.addAttribute(\"old-plid\", String.valueOf(plid));\n\t\tportletElement.addAttribute(\n\t\t\t\"scope-group-id\",\n\t\t\tString.valueOf(portletDataContext.getScopeGroupId()));\n\t\tportletElement.addAttribute(\n\t\t\t\"scope-layout-type\", portletDataContext.getScopeType());\n\t\tportletElement.addAttribute(\n\t\t\t\"scope-layout-uuid\", portletDataContext.getScopeLayoutUuid());\n\t\tportletElement.addAttribute(\n\t\t\t\"private-layout\", String.valueOf(layout.isPrivateLayout()));\n\n\t\t// Data\n\n\t\tif (exportPortletData) {\n\t\t\tjavax.portlet.PortletPreferences jxPortletPreferences =\n\t\t\t\tPortletPreferencesFactoryUtil.getStrictPortletSetup(\n\t\t\t\t\tlayout, portletDataContext.getPortletId());\n\n\t\t\tif (!portlet.isPreferencesUniquePerLayout()) {\n\t\t\t\tStringBundler sb = new StringBundler(5);\n\n\t\t\t\tsb.append(portletDataContext.getPortletId());\n\t\t\t\tsb.append(StringPool.AT);\n\t\t\t\tsb.append(portletDataContext.getScopeType());\n\t\t\t\tsb.append(StringPool.AT);\n\t\t\t\tsb.append(portletDataContext.getScopeLayoutUuid());\n\n\t\t\t\tString dataKey = sb.toString();\n\n\t\t\t\tif (!portletDataContext.hasNotUniquePerLayout(dataKey)) {\n\t\t\t\t\tportletDataContext.putNotUniquePerLayout(dataKey);\n\n\t\t\t\t\texportPortletData(\n\t\t\t\t\t\tportletDataContext, portlet, layout,\n\t\t\t\t\t\tjxPortletPreferences, portletElement);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\texportPortletData(\n\t\t\t\t\tportletDataContext, portlet, layout, jxPortletPreferences,\n\t\t\t\t\tportletElement);\n\t\t\t}\n\t\t}\n\n\t\t// Portlet preferences\n\n\t\tif (exportPortletSetup) {\n\n\t\t\t// Company\n\n\t\t\texportPortletPreferences(\n\t\t\t\tportletDataContext, portletDataContext.getCompanyId(),\n\t\t\t\tPortletKeys.PREFS_OWNER_TYPE_COMPANY, false, layout, plid,\n\t\t\t\tportlet.getRootPortletId(), portletElement);\n\n\t\t\t// Group\n\n\t\t\texportPortletPreferences(\n\t\t\t\tportletDataContext, portletDataContext.getScopeGroupId(),\n\t\t\t\tPortletKeys.PREFS_OWNER_TYPE_GROUP, false, layout,\n\t\t\t\tPortletKeys.PREFS_PLID_SHARED, portlet.getRootPortletId(),\n\t\t\t\tportletElement);\n\n\t\t\t// Layout\n\n\t\t\texportPortletPreferences(\n\t\t\t\tportletDataContext, PortletKeys.PREFS_OWNER_ID_DEFAULT,\n\t\t\t\tPortletKeys.PREFS_OWNER_TYPE_LAYOUT, false, layout, plid,\n\t\t\t\tportletDataContext.getPortletId(), portletElement);\n\t\t}\n\n\t\t// Portlet user preferences\n\n\t\tif (exportPortletUserPreferences) {\n\t\t\tList<PortletPreferences> portletPreferencesList =\n\t\t\t\tPortletPreferencesLocalServiceUtil.getPortletPreferences(\n\t\t\t\t\tPortletKeys.PREFS_OWNER_TYPE_USER, plid,\n\t\t\t\t\tportletDataContext.getPortletId());\n\n\t\t\tfor (PortletPreferences portletPreferences :\n\t\t\t\t\tportletPreferencesList) {\n\n\t\t\t\tboolean defaultUser = false;\n\n\t\t\t\tif (portletPreferences.getOwnerId() ==\n\t\t\t\t\t\tPortletKeys.PREFS_OWNER_ID_DEFAULT) {\n\n\t\t\t\t\tdefaultUser = true;\n\t\t\t\t}\n\n\t\t\t\texportPortletPreferences(\n\t\t\t\t\tportletDataContext, portletPreferences.getOwnerId(),\n\t\t\t\t\tPortletKeys.PREFS_OWNER_TYPE_USER, defaultUser, layout,\n\t\t\t\t\tplid, portletDataContext.getPortletId(), portletElement);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tPortletPreferences groupPortletPreferences =\n\t\t\t\t\tPortletPreferencesLocalServiceUtil.getPortletPreferences(\n\t\t\t\t\t\tportletDataContext.getScopeGroupId(),\n\t\t\t\t\t\tPortletKeys.PREFS_OWNER_TYPE_GROUP,\n\t\t\t\t\t\tPortletKeys.PREFS_PLID_SHARED,\n\t\t\t\t\t\tportlet.getRootPortletId());\n\n\t\t\t\texportPortletPreference(\n\t\t\t\t\tportletDataContext, portletDataContext.getScopeGroupId(),\n\t\t\t\t\tPortletKeys.PREFS_OWNER_TYPE_GROUP, false,\n\t\t\t\t\tgroupPortletPreferences, portlet.getRootPortletId(),\n\t\t\t\t\tPortletKeys.PREFS_PLID_SHARED, portletElement);\n\t\t\t}\n\t\t\tcatch (NoSuchPortletPreferencesException nsppe) {\n\t\t\t}\n\t\t}\n\n\t\t// Archived setups\n\n\t\tif (exportPortletArchivedSetups) {\n\t\t\tList<PortletItem> portletItems =\n\t\t\t\tPortletItemLocalServiceUtil.getPortletItems(\n\t\t\t\t\tportletDataContext.getGroupId(),\n\t\t\t\t\tportletDataContext.getRootPortletId(),\n\t\t\t\t\tPortletPreferences.class.getName());\n\n\t\t\tfor (PortletItem portletItem : portletItems) {\n\t\t\t\texportPortletPreferences(\n\t\t\t\t\tportletDataContext, portletItem.getPortletItemId(),\n\t\t\t\t\tPortletKeys.PREFS_OWNER_TYPE_ARCHIVED, false, null, plid,\n\t\t\t\t\tportletItem.getPortletId(), portletElement);\n\t\t\t}\n\t\t}\n\n\t\t// Permissions\n\n\t\tif (exportPermissions) {\n\t\t\t_permissionExporter.exportPortletPermissions(\n\t\t\t\tportletDataContext, portletDataContext.getPortletId(), layout,\n\t\t\t\tportletElement);\n\t\t}\n\n\t\t// Zip\n\n\t\tStringBundler pathSB = new StringBundler(4);\n\n\t\tpathSB.append(ExportImportPathUtil.getPortletPath(portletDataContext));\n\t\tpathSB.append(StringPool.SLASH);\n\t\tpathSB.append(plid);\n\t\tpathSB.append(\"/portlet.xml\");\n\n\t\tString path = pathSB.toString();\n\n\t\tElement element = parentElement.addElement(\"portlet\");\n\n\t\telement.addAttribute(\"portlet-id\", portletDataContext.getPortletId());\n\t\telement.addAttribute(\"layout-id\", String.valueOf(layoutId));\n\t\telement.addAttribute(\"path\", path);\n\t\telement.addAttribute(\"portlet-data\", String.valueOf(exportPortletData));\n\n\t\tStringBundler configurationOptionsSB = new StringBundler(6);\n\n\t\tif (exportPortletSetup) {\n\t\t\tconfigurationOptionsSB.append(\"setup\");\n\t\t\tconfigurationOptionsSB.append(StringPool.COMMA);\n\t\t}\n\n\t\tif (exportPortletArchivedSetups) {\n\t\t\tconfigurationOptionsSB.append(\"archived-setups\");\n\t\t\tconfigurationOptionsSB.append(StringPool.COMMA);\n\t\t}\n\n\t\tif (exportPortletUserPreferences) {\n\t\t\tconfigurationOptionsSB.append(\"user-preferences\");\n\t\t\tconfigurationOptionsSB.append(StringPool.COMMA);\n\t\t}\n\n\t\tif (configurationOptionsSB.index() > 0) {\n\t\t\tconfigurationOptionsSB.setIndex(configurationOptionsSB.index() -1);\n\t\t}\n\n\t\telement.addAttribute(\n\t\t\t\"portlet-configuration\", configurationOptionsSB.toString());\n\n\t\ttry {\n\t\t\tportletDataContext.addZipEntry(path, document.formattedString());\n\t\t}\n\t\tcatch (IOException ioe) {\n\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t_log.warn(ioe.getMessage());\n\t\t\t}\n\t\t}\n\t}","id":50656,"modified_method":"protected void exportPortlet(\n\t\t\tPortletDataContext portletDataContext, Layout layout,\n\t\t\tElement parentElement, boolean exportPermissions,\n\t\t\tboolean exportPortletArchivedSetups, boolean exportPortletData,\n\t\t\tboolean exportPortletSetup, boolean exportPortletUserPreferences)\n\t\tthrows Exception {\n\n\t\tlong plid = PortletKeys.PREFS_OWNER_ID_DEFAULT;\n\t\tlong layoutId = LayoutConstants.DEFAULT_PARENT_LAYOUT_ID;\n\n\t\tif (layout != null) {\n\t\t\tplid = layout.getPlid();\n\t\t\tlayoutId = layout.getLayoutId();\n\t\t}\n\n\t\tPortlet portlet = PortletLocalServiceUtil.getPortletById(\n\t\t\tportletDataContext.getCompanyId(),\n\t\t\tportletDataContext.getPortletId());\n\n\t\tif ((portlet == null) || portlet.isUndeployedPortlet()) {\n\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t_log.debug(\n\t\t\t\t\t\"Do not export portlet \" +\n\t\t\t\t\t\tportletDataContext.getPortletId() +\n\t\t\t\t\t\t\t\" because the portlet is not deployed\");\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (!portlet.isInstanceable() &&\n\t\t\t!portlet.isPreferencesUniquePerLayout() &&\n\t\t\tportletDataContext.hasNotUniquePerLayout(\n\t\t\t\tportletDataContext.getPortletId())) {\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (BackgroundTaskThreadLocal.hasBackgroundTask()) {\n\t\t\tPortletDataContext clonedPortletDataContext =\n\t\t\t\tPortletDataContextFactoryUtil.clonePortletDataContext(\n\t\t\t\t\tportletDataContext);\n\n\t\t\tManifestSummary manifestSummary =\n\t\t\t\tclonedPortletDataContext.getManifestSummary();\n\n\t\t\tmanifestSummary.resetCounters();\n\n\t\t\tPortletDataHandler portletDataHandler =\n\t\t\t\tportlet.getPortletDataHandlerInstance();\n\n\t\t\tportletDataHandler.prepareManifestSummary(clonedPortletDataContext);\n\n\t\t\tPortletDataHandlerStatusMessageSenderUtil.sendStatusMessage(\n\t\t\t\t\"portlet\", portletDataContext.getPortletId(), manifestSummary);\n\t\t}\n\n\t\tDocument document = SAXReaderUtil.createDocument();\n\n\t\tElement portletElement = document.addElement(\"portlet\");\n\n\t\tportletElement.addAttribute(\n\t\t\t\"portlet-id\", portletDataContext.getPortletId());\n\t\tportletElement.addAttribute(\n\t\t\t\"root-portlet-id\", portletDataContext.getRootPortletId());\n\t\tportletElement.addAttribute(\"old-plid\", String.valueOf(plid));\n\t\tportletElement.addAttribute(\n\t\t\t\"scope-group-id\",\n\t\t\tString.valueOf(portletDataContext.getScopeGroupId()));\n\t\tportletElement.addAttribute(\n\t\t\t\"scope-layout-type\", portletDataContext.getScopeType());\n\t\tportletElement.addAttribute(\n\t\t\t\"scope-layout-uuid\", portletDataContext.getScopeLayoutUuid());\n\t\tportletElement.addAttribute(\n\t\t\t\"private-layout\", String.valueOf(layout.isPrivateLayout()));\n\n\t\t// Data\n\n\t\tif (exportPortletData) {\n\t\t\tjavax.portlet.PortletPreferences jxPortletPreferences = null;\n\n\t\t\tif (ExportImportThreadLocal.isInitialPublicationInProcess()) {\n\t\t\t\tGroup liveGroup = layout.getGroup();\n\n\t\t\t\tGroup stagingGroup = liveGroup.getStagingGroup();\n\n\t\t\t\tlayout.setGroupId(stagingGroup.getGroupId());\n\n\t\t\t\tjxPortletPreferences =\n\t\t\t\t\tPortletPreferencesFactoryUtil.getStrictPortletSetup(\n\t\t\t\t\t\tlayout, portletDataContext.getPortletId());\n\n\t\t\t\tlayout.setGroupId(liveGroup.getGroupId());\n\t\t\t}\n\t\t\telse {\n\t\t\t\tjxPortletPreferences =\n\t\t\t\t\tPortletPreferencesFactoryUtil.getStrictPortletSetup(\n\t\t\t\t\t\tlayout, portletDataContext.getPortletId());\n\t\t\t}\n\n\t\t\tif (!portlet.isPreferencesUniquePerLayout()) {\n\t\t\t\tStringBundler sb = new StringBundler(5);\n\n\t\t\t\tsb.append(portletDataContext.getPortletId());\n\t\t\t\tsb.append(StringPool.AT);\n\t\t\t\tsb.append(portletDataContext.getScopeType());\n\t\t\t\tsb.append(StringPool.AT);\n\t\t\t\tsb.append(portletDataContext.getScopeLayoutUuid());\n\n\t\t\t\tString dataKey = sb.toString();\n\n\t\t\t\tif (!portletDataContext.hasNotUniquePerLayout(dataKey)) {\n\t\t\t\t\tportletDataContext.putNotUniquePerLayout(dataKey);\n\n\t\t\t\t\texportPortletData(\n\t\t\t\t\t\tportletDataContext, portlet, layout,\n\t\t\t\t\t\tjxPortletPreferences, portletElement);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\texportPortletData(\n\t\t\t\t\tportletDataContext, portlet, layout, jxPortletPreferences,\n\t\t\t\t\tportletElement);\n\t\t\t}\n\t\t}\n\n\t\t// Portlet preferences\n\n\t\tif (exportPortletSetup) {\n\n\t\t\t// Company\n\n\t\t\texportPortletPreferences(\n\t\t\t\tportletDataContext, portletDataContext.getCompanyId(),\n\t\t\t\tPortletKeys.PREFS_OWNER_TYPE_COMPANY, false, layout, plid,\n\t\t\t\tportlet.getRootPortletId(), portletElement);\n\n\t\t\t// Group\n\n\t\t\texportPortletPreferences(\n\t\t\t\tportletDataContext, portletDataContext.getScopeGroupId(),\n\t\t\t\tPortletKeys.PREFS_OWNER_TYPE_GROUP, false, layout,\n\t\t\t\tPortletKeys.PREFS_PLID_SHARED, portlet.getRootPortletId(),\n\t\t\t\tportletElement);\n\n\t\t\t// Layout\n\n\t\t\texportPortletPreferences(\n\t\t\t\tportletDataContext, PortletKeys.PREFS_OWNER_ID_DEFAULT,\n\t\t\t\tPortletKeys.PREFS_OWNER_TYPE_LAYOUT, false, layout, plid,\n\t\t\t\tportletDataContext.getPortletId(), portletElement);\n\t\t}\n\n\t\t// Portlet user preferences\n\n\t\tif (exportPortletUserPreferences) {\n\t\t\tList<PortletPreferences> portletPreferencesList =\n\t\t\t\tPortletPreferencesLocalServiceUtil.getPortletPreferences(\n\t\t\t\t\tPortletKeys.PREFS_OWNER_TYPE_USER, plid,\n\t\t\t\t\tportletDataContext.getPortletId());\n\n\t\t\tfor (PortletPreferences portletPreferences :\n\t\t\t\t\tportletPreferencesList) {\n\n\t\t\t\tboolean defaultUser = false;\n\n\t\t\t\tif (portletPreferences.getOwnerId() ==\n\t\t\t\t\t\tPortletKeys.PREFS_OWNER_ID_DEFAULT) {\n\n\t\t\t\t\tdefaultUser = true;\n\t\t\t\t}\n\n\t\t\t\texportPortletPreferences(\n\t\t\t\t\tportletDataContext, portletPreferences.getOwnerId(),\n\t\t\t\t\tPortletKeys.PREFS_OWNER_TYPE_USER, defaultUser, layout,\n\t\t\t\t\tplid, portletDataContext.getPortletId(), portletElement);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tPortletPreferences groupPortletPreferences =\n\t\t\t\t\tPortletPreferencesLocalServiceUtil.getPortletPreferences(\n\t\t\t\t\t\tportletDataContext.getScopeGroupId(),\n\t\t\t\t\t\tPortletKeys.PREFS_OWNER_TYPE_GROUP,\n\t\t\t\t\t\tPortletKeys.PREFS_PLID_SHARED,\n\t\t\t\t\t\tportlet.getRootPortletId());\n\n\t\t\t\texportPortletPreference(\n\t\t\t\t\tportletDataContext, portletDataContext.getScopeGroupId(),\n\t\t\t\t\tPortletKeys.PREFS_OWNER_TYPE_GROUP, false,\n\t\t\t\t\tgroupPortletPreferences, portlet.getRootPortletId(),\n\t\t\t\t\tPortletKeys.PREFS_PLID_SHARED, portletElement);\n\t\t\t}\n\t\t\tcatch (NoSuchPortletPreferencesException nsppe) {\n\t\t\t}\n\t\t}\n\n\t\t// Archived setups\n\n\t\tif (exportPortletArchivedSetups) {\n\t\t\tList<PortletItem> portletItems =\n\t\t\t\tPortletItemLocalServiceUtil.getPortletItems(\n\t\t\t\t\tportletDataContext.getGroupId(),\n\t\t\t\t\tportletDataContext.getRootPortletId(),\n\t\t\t\t\tPortletPreferences.class.getName());\n\n\t\t\tfor (PortletItem portletItem : portletItems) {\n\t\t\t\texportPortletPreferences(\n\t\t\t\t\tportletDataContext, portletItem.getPortletItemId(),\n\t\t\t\t\tPortletKeys.PREFS_OWNER_TYPE_ARCHIVED, false, null, plid,\n\t\t\t\t\tportletItem.getPortletId(), portletElement);\n\t\t\t}\n\t\t}\n\n\t\t// Permissions\n\n\t\tif (exportPermissions) {\n\t\t\t_permissionExporter.exportPortletPermissions(\n\t\t\t\tportletDataContext, portletDataContext.getPortletId(), layout,\n\t\t\t\tportletElement);\n\t\t}\n\n\t\t// Zip\n\n\t\tStringBundler pathSB = new StringBundler(4);\n\n\t\tpathSB.append(ExportImportPathUtil.getPortletPath(portletDataContext));\n\t\tpathSB.append(StringPool.SLASH);\n\t\tpathSB.append(plid);\n\t\tpathSB.append(\"/portlet.xml\");\n\n\t\tString path = pathSB.toString();\n\n\t\tElement element = parentElement.addElement(\"portlet\");\n\n\t\telement.addAttribute(\"portlet-id\", portletDataContext.getPortletId());\n\t\telement.addAttribute(\"layout-id\", String.valueOf(layoutId));\n\t\telement.addAttribute(\"path\", path);\n\t\telement.addAttribute(\"portlet-data\", String.valueOf(exportPortletData));\n\n\t\tStringBundler configurationOptionsSB = new StringBundler(6);\n\n\t\tif (exportPortletSetup) {\n\t\t\tconfigurationOptionsSB.append(\"setup\");\n\t\t\tconfigurationOptionsSB.append(StringPool.COMMA);\n\t\t}\n\n\t\tif (exportPortletArchivedSetups) {\n\t\t\tconfigurationOptionsSB.append(\"archived-setups\");\n\t\t\tconfigurationOptionsSB.append(StringPool.COMMA);\n\t\t}\n\n\t\tif (exportPortletUserPreferences) {\n\t\t\tconfigurationOptionsSB.append(\"user-preferences\");\n\t\t\tconfigurationOptionsSB.append(StringPool.COMMA);\n\t\t}\n\n\t\tif (configurationOptionsSB.index() > 0) {\n\t\t\tconfigurationOptionsSB.setIndex(configurationOptionsSB.index() -1);\n\t\t}\n\n\t\telement.addAttribute(\n\t\t\t\"portlet-configuration\", configurationOptionsSB.toString());\n\n\t\ttry {\n\t\t\tportletDataContext.addZipEntry(path, document.formattedString());\n\t\t}\n\t\tcatch (IOException ioe) {\n\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t_log.warn(ioe.getMessage());\n\t\t\t}\n\t\t}\n\t}","commit_id":"e5fdfa47ff8d3580273e5e85f9bbfdb5f0a3a281","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\t\tpublic Void call() throws PortalException {\n\t\t\tGroup group = _groupLocalService.getGroup(_groupId);\n\n\t\t\tLayout layout = _layoutLocalService.fetchLayout(_plid);\n\n\t\t\tif (group.hasStagingGroup()) {\n\t\t\t\tgroup = group.getStagingGroup();\n\n\t\t\t\tif (layout != null) {\n\t\t\t\t\tlayout = _layoutLocalService.fetchLayoutByUuidAndGroupId(\n\t\t\t\t\t\tlayout.getUuid(), group.getGroupId(),\n\t\t\t\t\t\tlayout.isPrivateLayout());\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (layout == null) {\n\t\t\t\tlayout = new LayoutImpl();\n\n\t\t\t\tlayout.setCompanyId(group.getCompanyId());\n\t\t\t\tlayout.setGroupId(group.getGroupId());\n\t\t\t}\n\n\t\t\tjavax.portlet.PortletPreferences jxPortletPreferences =\n\t\t\t\tPortletPreferencesFactoryUtil.getStrictPortletSetup(\n\t\t\t\t\tlayout, _portletId);\n\n\t\t\tExportImportDateUtil.updateLastPublishDate(\n\t\t\t\t_portletId, jxPortletPreferences, _dateRange, _endDate);\n\n\t\t\treturn null;\n\t\t}","id":50657,"modified_method":"@Override\n\t\tpublic Void call() throws PortalException {\n\t\t\tGroup group = _groupLocalService.getGroup(_groupId);\n\n\t\t\tLayout layout = _layoutLocalService.fetchLayout(_plid);\n\n\t\t\tif (group.hasStagingGroup()) {\n\t\t\t\tgroup = group.getStagingGroup();\n\n\t\t\t\tif (layout != null) {\n\t\t\t\t\tlayout = _layoutLocalService.fetchLayoutByUuidAndGroupId(\n\t\t\t\t\t\tlayout.getUuid(), group.getGroupId(),\n\t\t\t\t\t\tlayout.isPrivateLayout());\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tjavax.portlet.PortletPreferences jxPortletPreferences = null;\n\n\t\t\tif (layout == null) {\n\t\t\t\tjxPortletPreferences =\n\t\t\t\t\tPortletPreferencesFactoryUtil.getStrictPortletSetup(\n\t\t\t\t\t\tgroup.getCompanyId(), group.getGroupId(), _portletId);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tjxPortletPreferences =\n\t\t\t\t\tPortletPreferencesFactoryUtil.getStrictPortletSetup(\n\t\t\t\t\t\tlayout, _portletId);\n\t\t\t}\n\n\t\t\tExportImportDateUtil.updateLastPublishDate(\n\t\t\t\t_portletId, jxPortletPreferences, _dateRange, _endDate);\n\n\t\t\treturn null;\n\t\t}","commit_id":"0a9d3c7d7621f519ca1b4b1b3ea4bfda86395770","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Test\n\tpublic void testLocalStagingUpdateLastPublishDate() throws Exception {\n\t\tenableLocalStagingWithContent(true, false, false);\n\n\t\tGroup stagingGroup = _group.getStagingGroup();\n\n\t\tLayoutSet layoutSet = LayoutSetLocalServiceUtil.getLayoutSet(\n\t\t\t_group.getGroupId(), false);\n\n\t\tAssert.assertNull(ExportImportDateUtil.getLastPublishDate(layoutSet));\n\n\t\tlayoutSet = LayoutSetLocalServiceUtil.getLayoutSet(\n\t\t\tstagingGroup.getGroupId(), false);\n\n\t\tAssert.assertNotNull(\n\t\t\tExportImportDateUtil.getLastPublishDate(layoutSet));\n\n\t\tLayout layout = new LayoutImpl();\n\n\t\tlayout.setCompanyId(_group.getCompanyId());\n\t\tlayout.setGroupId(_group.getGroupId());\n\n\t\tPortletPreferences portletPreferences =\n\t\t\tPortletPreferencesFactoryUtil.getStrictPortletSetup(\n\t\t\t\tlayout, JournalPortletKeys.JOURNAL);\n\n\t\tAssert.assertNull(\n\t\t\tExportImportDateUtil.getLastPublishDate(portletPreferences));\n\n\t\tlayout.setGroupId(stagingGroup.getGroupId());\n\n\t\tportletPreferences =\n\t\t\tPortletPreferencesFactoryUtil.getStrictPortletSetup(\n\t\t\t\tlayout, JournalPortletKeys.JOURNAL);\n\n\t\tAssert.assertNotNull(\n\t\t\tExportImportDateUtil.getLastPublishDate(portletPreferences));\n\t}","id":50658,"modified_method":"@Test\n\tpublic void testLocalStagingUpdateLastPublishDate() throws Exception {\n\t\tenableLocalStagingWithContent(true, false, false);\n\n\t\tGroup stagingGroup = _group.getStagingGroup();\n\n\t\tLayoutSet layoutSet = LayoutSetLocalServiceUtil.getLayoutSet(\n\t\t\t_group.getGroupId(), false);\n\n\t\tAssert.assertNull(ExportImportDateUtil.getLastPublishDate(layoutSet));\n\n\t\tlayoutSet = LayoutSetLocalServiceUtil.getLayoutSet(\n\t\t\tstagingGroup.getGroupId(), false);\n\n\t\tAssert.assertNotNull(\n\t\t\tExportImportDateUtil.getLastPublishDate(layoutSet));\n\n\t\tPortletPreferences portletPreferences =\n\t\t\tPortletPreferencesFactoryUtil.getStrictPortletSetup(\n\t\t\t\t_group.getCompanyId(), _group.getGroupId(),\n\t\t\t\tJournalPortletKeys.JOURNAL);\n\n\t\tAssert.assertNull(\n\t\t\tExportImportDateUtil.getLastPublishDate(portletPreferences));\n\n\t\tportletPreferences =\n\t\t\tPortletPreferencesFactoryUtil.getStrictPortletSetup(\n\t\t\t\tstagingGroup.getCompanyId(), stagingGroup.getGroupId(),\n\t\t\t\tJournalPortletKeys.JOURNAL);\n\n\t\tAssert.assertNotNull(\n\t\t\tExportImportDateUtil.getLastPublishDate(portletPreferences));\n\t}","commit_id":"0a9d3c7d7621f519ca1b4b1b3ea4bfda86395770","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic Mono<Void> handleResult(ServerWebExchange exchange, HandlerResult result) {\n\n\t\tObject body = null;\n\n\t\tOptional<Object> optional = result.getReturnValue();\n\t\tif (optional.isPresent()) {\n\t\t\tAssert.isInstanceOf(HttpEntity.class, optional.get());\n\t\t\tHttpEntity<?> httpEntity = (HttpEntity<?>) optional.get();\n\n\t\t\tif (httpEntity instanceof ResponseEntity) {\n\t\t\t\tResponseEntity<?> responseEntity = (ResponseEntity<?>) httpEntity;\n\t\t\t\texchange.getResponse().setStatusCode(responseEntity.getStatusCode());\n\t\t\t}\n\n\t\t\tHttpHeaders entityHeaders = httpEntity.getHeaders();\n\t\t\tHttpHeaders responseHeaders = exchange.getResponse().getHeaders();\n\n\t\t\tif (!entityHeaders.isEmpty()) {\n\t\t\t\tentityHeaders.entrySet().stream()\n\t\t\t\t\t\t.filter(entry -> !responseHeaders.containsKey(entry.getKey()))\n\t\t\t\t\t\t.forEach(entry -> responseHeaders.put(entry.getKey(), entry.getValue()));\n\t\t\t}\n\n\t\t\tbody = httpEntity.getBody();\n\t\t}\n\n\t\tResolvableType bodyType = result.getReturnValueType().getGeneric(0);\n\t\treturn writeBody(exchange, body, bodyType);\n\t}","id":50659,"modified_method":"@Override\n\tpublic Mono<Void> handleResult(ServerWebExchange exchange, HandlerResult result) {\n\n\t\tResolvableType returnType = result.getReturnValueType();\n\t\tMono<?> returnValueMono;\n\t\tResolvableType bodyType;\n\n\t\tOptional<Object> optional = result.getReturnValue();\n\t\tif (optional.isPresent() && getConversionService().canConvert(returnType.getRawClass(), Mono.class)) {\n\t\t\treturnValueMono = getConversionService().convert(optional.get(), Mono.class);\n\t\t\tbodyType = returnType.getGeneric(0).getGeneric(0);\n\t\t}\n\t\telse {\n\t\t\treturnValueMono = Mono.justOrEmpty(optional);\n\t\t\tbodyType = returnType.getGeneric(0);\n\t\t}\n\n\t\treturn returnValueMono.then(returnValue -> {\n\n\t\t\tAssert.isInstanceOf(HttpEntity.class, returnValue);\n\t\t\tHttpEntity<?> httpEntity = (HttpEntity<?>) returnValue;\n\n\t\t\tif (httpEntity instanceof ResponseEntity) {\n\t\t\t\tResponseEntity<?> responseEntity = (ResponseEntity<?>) httpEntity;\n\t\t\t\texchange.getResponse().setStatusCode(responseEntity.getStatusCode());\n\t\t\t}\n\n\t\t\tHttpHeaders entityHeaders = httpEntity.getHeaders();\n\t\t\tHttpHeaders responseHeaders = exchange.getResponse().getHeaders();\n\n\t\t\tif (!entityHeaders.isEmpty()) {\n\t\t\t\tentityHeaders.entrySet().stream()\n\t\t\t\t\t\t.filter(entry -> !responseHeaders.containsKey(entry.getKey()))\n\t\t\t\t\t\t.forEach(entry -> responseHeaders.put(entry.getKey(), entry.getValue()));\n\t\t\t}\n\n\t\t\treturn writeBody(exchange, httpEntity.getBody(), bodyType);\n\t\t});\n\t}","commit_id":"95751acb334c3d35d0e57071d3179c2516bf62da","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n\tpublic boolean supports(HandlerResult result) {\n\t\tResolvableType returnType = result.getReturnValueType();\n\t\treturn (HttpEntity.class.isAssignableFrom(returnType.getRawClass()) &&\n\t\t\t\t!RequestEntity.class.isAssignableFrom(returnType.getRawClass()));\n\t}","id":50660,"modified_method":"@Override\n\tpublic boolean supports(HandlerResult result) {\n\t\tResolvableType returnType = result.getReturnValueType();\n\t\tif (isSupportedType(returnType)) {\n\t\t\treturn true;\n\t\t}\n\t\telse if (getConversionService().canConvert(returnType.getRawClass(), Mono.class)) {\n\t\t\tResolvableType genericType = result.getReturnValueType().getGeneric(0);\n\t\t\treturn isSupportedType(genericType);\n\n\t\t}\n\t\treturn false;\n\t}","commit_id":"95751acb334c3d35d0e57071d3179c2516bf62da","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Test\n\tpublic void supports() throws NoSuchMethodException {\n\t\tModelMap model = new ExtendedModelMap();\n\n\t\tResolvableType type = ResolvableType.forClassWithGenerics(ResponseEntity.class, String.class);\n\t\tassertTrue(this.resultHandler.supports(new HandlerResult(HANDLER, null, type, model)));\n\n\t\ttype = ResolvableType.forClassWithGenerics(ResponseEntity.class, Void.class);\n\t\tassertTrue(this.resultHandler.supports(new HandlerResult(HANDLER, null, type, model)));\n\n\t\ttype = ResolvableType.forClass(Void.class);\n\t\tassertFalse(this.resultHandler.supports(new HandlerResult(HANDLER, null, type, model)));\n\t}","id":50661,"modified_method":"@Test @SuppressWarnings(\"ConstantConditions\")\n\tpublic void supports() throws NoSuchMethodException {\n\t\tModelMap model = new ExtendedModelMap();\n\n\t\tObject value = null;\n\t\tResolvableType type = responseEntityType(String.class);\n\t\tassertTrue(this.resultHandler.supports(new HandlerResult(HANDLER, value, type, model)));\n\n\t\ttype = forClassWithGenerics(Mono.class, responseEntityType(String.class));\n\t\tassertTrue(this.resultHandler.supports(new HandlerResult(HANDLER, value, type, model)));\n\n\t\ttype = forClassWithGenerics(Single.class, responseEntityType(String.class));\n\t\tassertTrue(this.resultHandler.supports(new HandlerResult(HANDLER, value, type, model)));\n\n\t\ttype = forClassWithGenerics(CompletableFuture.class, responseEntityType(String.class));\n\t\tassertTrue(this.resultHandler.supports(new HandlerResult(HANDLER, value, type, model)));\n\n\t\ttype = ResolvableType.forClass(String.class);\n\t\tassertFalse(this.resultHandler.supports(new HandlerResult(HANDLER, value, type, model)));\n\t}","commit_id":"95751acb334c3d35d0e57071d3179c2516bf62da","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Test\n\tpublic void headers() throws Exception {\n\t\tURI location = new URI(\"/path\");\n\t\tResolvableType type = ResolvableType.forClassWithGenerics(ResponseEntity.class, Void.class);\n\t\tHandlerResult result = new HandlerResult(HANDLER, ResponseEntity.created(location).build(), type);\n\t\tthis.resultHandler.handleResult(exchange, result).block(Duration.ofSeconds(5));\n\n\t\tassertEquals(HttpStatus.CREATED, this.response.getStatus());\n\t\tassertEquals(1, this.response.getHeaders().size());\n\t\tassertEquals(location, this.response.getHeaders().getLocation());\n\t\tassertNull(this.response.getBody());\n\t}","id":50662,"modified_method":"@Test\n\tpublic void headers() throws Exception {\n\t\tURI location = new URI(\"/path\");\n\t\tResolvableType type = responseEntityType(Void.class);\n\t\tHandlerResult result = new HandlerResult(HANDLER, ResponseEntity.created(location).build(), type);\n\t\tthis.resultHandler.handleResult(this.exchange, result).block(Duration.ofSeconds(5));\n\n\t\tassertEquals(HttpStatus.CREATED, this.response.getStatus());\n\t\tassertEquals(1, this.response.getHeaders().size());\n\t\tassertEquals(location, this.response.getHeaders().getLocation());\n\t\tassertNull(this.response.getBody());\n\t}","commit_id":"95751acb334c3d35d0e57071d3179c2516bf62da","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"private ResponseEntityResultHandler createHandler(HttpMessageConverter<?>... converters) {\n\t\tList<HttpMessageConverter<?>> converterList;\n\t\tif (ObjectUtils.isEmpty(converters)) {\n\t\t\tconverterList = new ArrayList<>();\n\t\t\tconverterList.add(new CodecHttpMessageConverter<>(new ByteBufferEncoder()));\n\t\t\tconverterList.add(new CodecHttpMessageConverter<>(new StringEncoder()));\n\t\t\tconverterList.add(new ResourceHttpMessageConverter());\n\t\t\tconverterList.add(new CodecHttpMessageConverter<>(new Jaxb2Encoder()));\n\t\t\tconverterList.add(new CodecHttpMessageConverter<>(new JacksonJsonEncoder()));\n\t\t}\n\t\telse {\n\t\t\tconverterList = Arrays.asList(converters);\n\t\t}\n\t\tGenericConversionService service = new GenericConversionService();\n\t\tservice.addConverter(new ReactiveStreamsToCompletableFutureConverter());\n\t\tservice.addConverter(new ReactiveStreamsToRxJava1Converter());\n\t\tRequestedContentTypeResolver resolver = new RequestedContentTypeResolverBuilder().build();\n\n\t\treturn new ResponseEntityResultHandler(converterList, new DefaultConversionService(), resolver);\n\t}","id":50663,"modified_method":"private ResponseEntityResultHandler createHandler(HttpMessageConverter<?>... converters) {\n\t\tList<HttpMessageConverter<?>> converterList;\n\t\tif (ObjectUtils.isEmpty(converters)) {\n\t\t\tconverterList = new ArrayList<>();\n\t\t\tconverterList.add(new CodecHttpMessageConverter<>(new ByteBufferEncoder()));\n\t\t\tconverterList.add(new CodecHttpMessageConverter<>(new StringEncoder()));\n\t\t\tconverterList.add(new ResourceHttpMessageConverter());\n\t\t\tconverterList.add(new CodecHttpMessageConverter<>(new Jaxb2Encoder()));\n\t\t\tconverterList.add(new CodecHttpMessageConverter<>(new JacksonJsonEncoder()));\n\t\t}\n\t\telse {\n\t\t\tconverterList = Arrays.asList(converters);\n\t\t}\n\t\tGenericConversionService service = new GenericConversionService();\n\t\tservice.addConverter(new ReactiveStreamsToCompletableFutureConverter());\n\t\tservice.addConverter(new ReactiveStreamsToRxJava1Converter());\n\t\tRequestedContentTypeResolver resolver = new RequestedContentTypeResolverBuilder().build();\n\n\t\treturn new ResponseEntityResultHandler(converterList, service, resolver);\n\t}","commit_id":"95751acb334c3d35d0e57071d3179c2516bf62da","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Test\n\tpublic void statusCode() throws Exception {\n\t\tResolvableType type = ResolvableType.forClassWithGenerics(ResponseEntity.class, Void.class);\n\t\tHandlerResult result = new HandlerResult(HANDLER, ResponseEntity.noContent().build(), type);\n\t\tthis.resultHandler.handleResult(exchange, result).block(Duration.ofSeconds(5));\n\n\t\tassertEquals(HttpStatus.NO_CONTENT, this.response.getStatus());\n\t\tassertEquals(0, this.response.getHeaders().size());\n\t\tassertNull(this.response.getBody());\n\t}","id":50664,"modified_method":"@Test\n\tpublic void statusCode() throws Exception {\n\t\tResolvableType type = responseEntityType(Void.class);\n\t\tHandlerResult result = new HandlerResult(HANDLER, ResponseEntity.noContent().build(), type);\n\t\tthis.resultHandler.handleResult(exchange, result).block(Duration.ofSeconds(5));\n\n\t\tassertEquals(HttpStatus.NO_CONTENT, this.response.getStatus());\n\t\tassertEquals(0, this.response.getHeaders().size());\n\t\tassertNull(this.response.getBody());\n\t}","commit_id":"95751acb334c3d35d0e57071d3179c2516bf62da","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n\tpublic Mono<Object> resolveArgument(MethodParameter parameter, ModelMap model,\n\t\t\tServerWebExchange exchange) {\n\n\t\tResolvableType type = ResolvableType.forMethodParameter(parameter);\n\t\tResolvableType elementType = type.hasGenerics() ? type.getGeneric(0) : type;\n\n\t\tMediaType mediaType = exchange.getRequest().getHeaders().getContentType();\n\t\tif (mediaType == null) {\n\t\t\tmediaType = MediaType.APPLICATION_OCTET_STREAM;\n\t\t}\n\n\t\tFlux<?> elementFlux = exchange.getRequest().getBody();\n\n\t\tHttpMessageConverter<?> converter = getMessageConverter(elementType, mediaType);\n\t\tif (converter != null) {\n\t\t\telementFlux = converter.read(elementType, exchange.getRequest());\n\t\t}\n\n\t\tif (type.getRawClass() == Flux.class) {\n\t\t\treturn Mono.just(elementFlux);\n\t\t}\n\t\telse if (type.getRawClass() == Mono.class) {\n\t\t\treturn Mono.just(Mono.from(elementFlux));\n\t\t}\n\t\telse if (this.conversionService.canConvert(Publisher.class, type.getRawClass())) {\n\t\t\tObject target = this.conversionService.convert(elementFlux, type.getRawClass());\n\t\t\treturn Mono.just(target);\n\t\t}\n\n\t\t// TODO Currently manage only \"Foo\" parameter, not \"List<Foo>\" parameters, Stéphane is going to add toIterable/toIterator to Flux to support that use case\n\t\treturn elementFlux.next().map(o -> o);\n\t}","id":50665,"modified_method":"@Override\n\tpublic Mono<Object> resolveArgument(MethodParameter parameter, ModelMap model,\n\t\t\tServerWebExchange exchange) {\n\n\t\tResolvableType type = ResolvableType.forMethodParameter(parameter);\n\t\tboolean asyncType = isAsyncType(type);\n\t\tResolvableType elementType = (asyncType ? type.getGeneric(0) : type);\n\t\tMediaType mediaType = exchange.getRequest().getHeaders().getContentType();\n\t\tif (mediaType == null) {\n\t\t\tmediaType = MediaType.APPLICATION_OCTET_STREAM;\n\t\t}\n\n\t\tfor (HttpMessageConverter<?> converter : getMessageConverters()) {\n\t\t\tif (converter.canRead(elementType, mediaType)) {\n\t\t\t\tFlux<?> elementFlux = converter.read(elementType, exchange.getRequest());\n\t\t\t\tif (Mono.class.equals(type.getRawClass())) {\n\t\t\t\t\tObject value = Mono.from(elementFlux);\n\t\t\t\t\treturn Mono.just(value);\n\t\t\t\t}\n\t\t\t\telse if (Flux.class.equals(type.getRawClass())) {\n\t\t\t\t\treturn Mono.just(elementFlux);\n\t\t\t\t}\n\t\t\t\telse if (asyncType) {\n\t\t\t\t\tObject value = getConversionService().convert(elementFlux, type.getRawClass());\n\t\t\t\t\treturn Mono.just(value);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// TODO Currently manage only \"Foo\" parameter, not \"List<Foo>\" parameters, Stéphane is going to add toIterable/toIterator to Flux to support that use case\n\t\t\t\t\treturn elementFlux.next().map(o -> o);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn Mono.error(new UnsupportedMediaTypeStatusException(mediaType, this.supportedMediaTypes));\n\t}","commit_id":"a8e5e40d970be20ff7c235b89bea15bc6184d547","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"/**\n\t * Constructor with message converters and a ConversionService.\n\t * @param converters converters for reading the request body with\n\t * @param service for converting to other reactive types from Flux and Mono\n\t */\n\tpublic RequestBodyArgumentResolver(List<HttpMessageConverter<?>> converters,\n\t\t\tConversionService service) {\n\n\t\tAssert.notEmpty(converters, \"At least one message converter is required.\");\n\t\tAssert.notNull(service, \"'conversionService' is required.\");\n\t\tthis.messageConverters = converters;\n\t\tthis.conversionService = service;\n\t}","id":50666,"modified_method":"/**\n\t * Constructor with message converters and a ConversionService.\n\t * @param converters converters for reading the request body with\n\t * @param service for converting to other reactive types from Flux and Mono\n\t */\n\tpublic RequestBodyArgumentResolver(List<HttpMessageConverter<?>> converters,\n\t\t\tConversionService service) {\n\n\t\tAssert.notEmpty(converters, \"At least one message converter is required.\");\n\t\tAssert.notNull(service, \"'conversionService' is required.\");\n\t\tthis.messageConverters = converters;\n\t\tthis.conversionService = service;\n\t\tthis.supportedMediaTypes = converters.stream()\n\t\t\t\t.flatMap(converter -> converter.getReadableMediaTypes().stream())\n\t\t\t\t.collect(Collectors.toList());\n\t}","commit_id":"a8e5e40d970be20ff7c235b89bea15bc6184d547","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@NbBundle.Messages({\n        \"ZoomSettingsPane.descrLODLabel.text=Description Detail:\",\n        \"ZoomSettingsPane.typeZoomLabel.text=Event Type:\",\n        \"ZoomSettingsPane.timeUnitLabel.text=Time Units:\",\n        \"ZoomSettingsPane.zoomLabel.text=Zoom\"})\n    public void initialize() {\n        zoomLabel.setText(Bundle.ZoomSettingsPane_zoomLabel_text());\n\n        timeUnitSlider.setMax(TimeUnits.values().length - 1);\n        timeUnitLabel.setText(Bundle.ZoomSettingsPane_timeUnitLabel_text());\n        configureSliderListeners(timeUnitSlider,\n                controller::pushTimeUnit,\n                filteredEvents.timeRangeProperty(),\n                modelTimeRange -> RangeDivisionInfo.getRangeDivisionInfo(modelTimeRange).getPeriodSize().ordinal() - 1,\n                TimeUnits.class,\n                dbl -> Math.min(TimeUnits.values().length - 1, dbl.intValue() + 1)\n        );\n\n        typeZoomSlider.setMin(0);\n        typeZoomSlider.setMin(1);\n        typeZoomSlider.setMax(EventTypeZoomLevel.values().length - 1);\n        typeZoomLabel.setText(Bundle.ZoomSettingsPane_typeZoomLabel_text());\n        configureSliderListeners(typeZoomSlider,\n                controller::pushEventTypeZoom,\n                filteredEvents.eventTypeZoomProperty(),\n                EventTypeZoomLevel::ordinal,\n                EventTypeZoomLevel.class,\n                Double::intValue);\n\n        descrLODSlider.setMax(DescriptionLoD.values().length - 1);\n        descrLODLabel.setText(Bundle.ZoomSettingsPane_descrLODLabel_text());\n        configureSliderListeners(descrLODSlider,\n                controller::pushDescrLOD,\n                filteredEvents.descriptionLODProperty(),\n                DescriptionLoD::ordinal,\n                DescriptionLoD.class,\n                Double::intValue);\n        descrLODSlider.disableProperty().bind(controller.viewModeProperty().isEqualTo(VisualizationMode.COUNTS));\n    }","id":50667,"modified_method":"@NbBundle.Messages({\n        \"ZoomSettingsPane.descrLODLabel.text=Description Detail:\",\n        \"ZoomSettingsPane.typeZoomLabel.text=Event Type:\",\n        \"ZoomSettingsPane.timeUnitLabel.text=Time Units:\",\n        \"ZoomSettingsPane.zoomLabel.text=Zoom\"})\n    public void initialize() {\n        zoomLabel.setText(Bundle.ZoomSettingsPane_zoomLabel_text());\n\n        typeZoomSlider.setMin(1); //don't show ROOT_TYPE\n        typeZoomSlider.setMax(EventTypeZoomLevel.values().length - 1);\n        configureSliderListeners(typeZoomSlider,\n                controller::pushEventTypeZoom,\n                filteredEvents.eventTypeZoomProperty(),\n                EventTypeZoomLevel.class,\n                EventTypeZoomLevel::ordinal,\n                Function.identity());\n        typeZoomLabel.setText(Bundle.ZoomSettingsPane_typeZoomLabel_text());\n\n        descrLODSlider.setMax(DescriptionLoD.values().length - 1);\n        configureSliderListeners(descrLODSlider,\n                controller::pushDescrLOD,\n                filteredEvents.descriptionLODProperty(),\n                DescriptionLoD.class,\n                DescriptionLoD::ordinal,\n                Function.identity());\n        descrLODLabel.setText(Bundle.ZoomSettingsPane_descrLODLabel_text());\n        //the description slider is only usefull in the detail view\n        descrLODSlider.disableProperty().bind(controller.viewModeProperty().isEqualTo(VisualizationMode.COUNTS));\n\n        /**\n         * In order for the selected value in the time unit slider to correspond\n         * to the amount of time used as units along the x-axis of the\n         * visualization, and since we don't want to show \"forever\" as a time\n         * unit, the range of the slider is restricted, and there is an offset\n         * of 1 between the \"real\" value, and what is shown in the slider\n         * labels.\n         */\n        timeUnitSlider.setMax(TimeUnits.values().length - 2);\n        configureSliderListeners(timeUnitSlider,\n                controller::pushTimeUnit,\n                filteredEvents.timeRangeProperty(),\n                TimeUnits.class,\n                //for the purposes of this slider we want the TimeUnit one bigger than RangeDivisionInfo indicates\n                modelTimeRange -> RangeDivisionInfo.getRangeDivisionInfo(modelTimeRange).getPeriodSize().ordinal() - 1,\n                index -> index + 1);  //compensate for the -1 above when mapping to the Enum whose displayName will be shown at index\n        timeUnitLabel.setText(Bundle.ZoomSettingsPane_timeUnitLabel_text());\n    }","commit_id":"5be4cf98ce69364f96a808c0361b23f465c688cd","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * Configure the listeners that keep the sliders in sync with model changes,\n     * and react to user input on the sliders. The listener attached to the\n     * slider is added and removed to avoid circular updates.\n     *\n     * @param <T>                 The type of the driving model property\n     * @param <EnumType>          The type of the enum that is represented along\n     *                            the slider.\n     * @param slider              The slider that we are configuring\n     * @param sliderValueConsumer The consumer that will get passed the newly\n     *                            selected slider value (mapped to EnumType\n     *                            automatically)\n     * @param modelProperty       The readonly model property that this slider\n     *                            should be synced to.\n     * @param driverValueMapper   A Function that maps from driver values of\n     *                            type T to Integers representing the ordinal\n     *                            index of the corresponding EnumType\n     * @param enumClass           A type token for EnumType, ie Class<EnumType>\n     * @param converterMapper     A Function that maps from Double (slider\n     *                            value) to Integers representing the ordinal\n     *                            index of the corresponding EnumType\n     */\n    private <T, EnumType extends Enum<EnumType> & DisplayNameProvider>\n            void configureSliderListeners(Slider slider,\n                    Consumer<EnumType> sliderValueConsumer,\n                    ReadOnlyObjectProperty<T> modelProperty,\n                    Function<T, Integer> driverValueMapper,\n                    final Class<EnumType> enumClass,\n                    final Function<Double, Integer> converterMapper) {\n\n        slider.setLabelFormatter(new EnumSliderConverter<>(enumClass, converterMapper));\n\n        final InvalidationListener sliderListener = observable -> {\n            if (slider.isValueChanging() == false) {\n                sliderValueConsumer.accept(enumClass.getEnumConstants()[Math.round(slider.valueProperty().floatValue())]);\n            }\n        };\n        slider.valueProperty().addListener(sliderListener);\n        slider.valueChangingProperty().addListener(sliderListener);\n\n        Platform.runLater(() -> slider.setValue(driverValueMapper.apply(modelProperty.get())));\n\n        modelProperty.addListener(observable -> {\n            Platform.runLater(() -> {\n                slider.valueProperty().removeListener(sliderListener);\n                slider.valueChangingProperty().removeListener(sliderListener);\n\n                slider.setValue(driverValueMapper.apply(modelProperty.get()));\n\n                slider.valueProperty().addListener(sliderListener);\n                slider.valueChangingProperty().addListener(sliderListener);\n            });\n        });\n    }","id":50668,"modified_method":"/**\n     * Configure the listeners that keep the given slider in sync with model\n     * property changes, and that handle user input on the slider. The listener\n     * attached to the slider is added and removed to avoid circular updates.\n     *\n     * Because Sliders work in terms of Doubles but represent ordered Enums that\n     * are indexed by Integers, and because the model properties may not be of\n     * the same type as the Enum(timeUnitSlider relates to an Interval in the\n     * filteredEvents model, rather than the TimeUnits shown on the Slider), a\n     * mapper is needed to convert between DriverType and Integer\n     * indices(driverValueMapper). Another mapper is used to modifiy the mapping\n     * from Integer index to Enum value displayed as the slider tick\n     * label(labelIndexMapper).\n     *\n     * @param <DriverType>        The type of the driving model property.\n     * @param <EnumType>          The type of the Enum that is represented along\n     *                            the slider.\n     *\n     *\n     * @param slider              The slider that we are configuring.\n     *\n     * @param sliderValueConsumer The consumer that will get passed the newly\n     *                            selected slider value (mapped to EnumType\n     *                            automatically).\n     *\n     * @param modelProperty       The readonly model property that this slider\n     *                            should be synced to.\n     *\n     * @param enumClass           A type token for EnumType, ie value of type\n     *                            Class<EnumType>\n     *\n     * @param driverValueMapper   A Function that maps from driver values of\n     *                            type DriverType to Integers representing the\n     *                            index of the corresponding EnumType.\n     *\n     * @param labelIndexMapper    A Function that maps from Integer (narrowed\n     *                            slider value) to Integers representing the\n     *                            index of the corresponding EnumType. Used to\n     *                            compensate for slider values that do not\n     *                            lineup exactly with the Enum value indices to\n     *                            use as tick Labels.\n     */\n    private static <DriverType, EnumType extends Enum<EnumType> & DisplayNameProvider> void configureSliderListeners(\n            Slider slider,\n            Consumer<EnumType> sliderValueConsumer,\n            ReadOnlyObjectProperty<DriverType> modelProperty,\n            Class<EnumType> enumClass,\n            Function<DriverType, Integer> driverValueMapper,\n            Function<Integer, Integer> labelIndexMapper) {\n\n        //set the tick labels to the enum displayNames\n        slider.setLabelFormatter(new EnumSliderLabelFormatter<>(enumClass, labelIndexMapper));\n\n        //make a listener to responds to slider value changes (by updating the visualization)\n        final InvalidationListener sliderListener = observable -> {\n            //only process event if the slider value is not changing (user has released slider thumb)\n            if (slider.isValueChanging() == false) {\n                //convert slider value to EnumType and pass to consumer\n                EnumType sliderValueAsEnum = enumClass.getEnumConstants()[Math.round((float) slider.getValue())];\n                sliderValueConsumer.accept(sliderValueAsEnum);\n            }\n        };\n        //attach listener\n        slider.valueProperty().addListener(sliderListener);\n        slider.valueChangingProperty().addListener(sliderListener);\n\n        //set intial value of slider\n        slider.setValue(driverValueMapper.apply(modelProperty.get()));\n\n        modelProperty.addListener(modelProp -> {\n            //handle changes in the model property\n            Platform.runLater(() -> {\n                //remove listener to avoid circular updates\n                slider.valueProperty().removeListener(sliderListener);\n                slider.valueChangingProperty().removeListener(sliderListener);\n\n                //sync value of slider to model property value\n                slider.setValue(driverValueMapper.apply(modelProperty.get()));\n\n                //reattach listener\n                slider.valueProperty().addListener(sliderListener);\n                slider.valueChangingProperty().addListener(sliderListener);\n            });\n        });\n    }","commit_id":"5be4cf98ce69364f96a808c0361b23f465c688cd","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"private void drawSegment(Canvas canvas, RotatedTileBox tb, List<WptPt> l, int startIndex, int endIndex) {\n\t\tint px = tb.getPixXFromLonNoRot(l.get(startIndex).lon);\n\t\tint py = tb.getPixYFromLatNoRot(l.get(startIndex).lat);\n\t\tpath.moveTo(px, py);\n\t\tfor (int i = startIndex + 1; i <= endIndex; i++) {\n\t\t\tWptPt p = l.get(i);\n\t\t\tint x = tb.getPixXFromLonNoRot(p.lon);\n\t\t\tint y = tb.getPixYFromLatNoRot(p.lat);\n\t\t\tpath.lineTo(x, y);\n\t\t}\n\t\tcanvas.drawPath(path, paint);\n\t}","id":50669,"modified_method":"private void drawSegment(Canvas canvas, RotatedTileBox tb, List<WptPt> l, int startIndex, int endIndex) {\n\t\tint px = (int) tb.getPixXFromLatLon(l.get(startIndex).lat, l.get(startIndex).lon);\n\t\tint py = (int) tb.getPixYFromLatLon(l.get(startIndex).lat, l.get(startIndex).lon);\n\t\tpath.moveTo(px, py);\n\t\tfor (int i = startIndex + 1; i <= endIndex; i++) {\n\t\t\tWptPt p = l.get(i);\n\t\t\tint x = (int) tb.getPixXFromLatLon(p.lat,p.lon);\n\t\t\tint y = (int) tb.getPixYFromLatLon(p.lat,p.lon);\n\t\t\tpath.lineTo(x, y);\n\t\t}\n\t\tcanvas.drawPath(path, paint);\n\t}","commit_id":"faa6cae4c86fb329175c35425e2747ba6f1da10e","url":"https://github.com/osmandapp/Osmand"},{"original_method":"@Override\n\tpublic void onPrepareBufferImage(Canvas canvas, RotatedTileBox tileBox, DrawSettings settings) {\n\n\n\t\tfor (OsMoDroidPoint op : OsMoDroidPointArrayList) {\n\t\t\tLatLon newLatlon;\n\t\t\ttry {\n\n\t\t\t\tnewLatlon = new LatLon(myOsMoDroidPlugin.mIRemoteService.getObjectLat(layerId, op.id),\n\t\t\t\t\t\tmyOsMoDroidPlugin.mIRemoteService.getObjectLon(layerId, op.id));\n\n\t\t\t\tif (!op.latlon.equals(newLatlon)) {\n\t\t\t\t\top.prevlatlon = op.latlon;\n\t\t\t\t}\n\t\t\t\top.latlon = newLatlon;\n\t\t\t\top.speed = myOsMoDroidPlugin.mIRemoteService.getObjectSpeed(layerId, op.id);\n\t\t\t} catch (RemoteException e) {\n\t\t\t\t// TODO Auto-generated catch block\n\t\t\t\te.printStackTrace();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdouble latitude = op.latlon.getLatitude();\n\t\t\tdouble longitude = op.latlon.getLongitude();\n\t\t\tdouble prevlatitude = op.latlon.getLatitude();\n\t\t\tdouble prevlongitude = op.latlon.getLongitude();\n\t\t\tif (op.prevlatlon != null) {\n\t\t\t\tprevlatitude = op.prevlatlon.getLatitude();\n\t\t\t\tprevlongitude = op.prevlatlon.getLongitude();\n\t\t\t}\n\n\t\t\tint locationX = (int) tileBox.getPixXFromLatLon(latitude, longitude);\n\t\t\tint locationY = (int) tileBox.getPixYFromLatLon(latitude, longitude);\n\t\t\tint prevlocationX = (int) tileBox.getPixXFromLatLon(prevlatitude, prevlongitude);\n\t\t\tint prevlocationY = (int) tileBox.getPixYFromLatLon(prevlatitude, prevlongitude);\n\n\t\t\t// int y = opIcon.getHeight()/2;\n\t\t\t// int x = opIcon.getWidth()/2;\n\t\t\ttextPaint.setColor(Color.parseColor(\"#013220\"));\n\t\t\tcanvas.drawText(op.name, locationX, locationY - radius, textPaint);\n\t\t\tcanvas.drawText(op.speed, locationX, locationY - 2 * radius, textPaint);\n\t\t\ttextPaint.setColor(Color.parseColor(\"#\" + op.color));\n\t\t\ttextPaint.setShadowLayer(radius, 0, 0, Color.GRAY);\n\t\t\tcanvas.drawCircle(locationX, locationY, radius, textPaint);\n\t\t\t// canvas.drawBitmap(opIcon, locationX-x, locationY-y , textPaint);\n\t\t\ttextPaint.setStrokeWidth(radius);\n\t\t\tcanvas.drawLine(locationX, locationY, prevlocationX, prevlocationY, textPaint);\n\t\t\t// canvas.rotate(-view.getRotate(), locationX, locationY);\n\t\t\t// op.prevlatlon=op.latlon;\n\t\t\t\n\t\t}\n\t\t\n\t\tfor (GPXFile gpxFile : gpxArrayList){\n\t\t\tgpxFile.proccessPoints();\n\t\t\tList<List<WptPt>> points = gpxFile.processedPointsToDisplay;\n\t\t\t\n\t\t\tpaint.setColor(getColor(settings));\n\n\t\t\tfinal QuadRect latLonBounds = tileBox.getLatLonBounds();\n\t\t\tfor (List<WptPt> l : points) {\n\t\t\t\tpath.rewind();\n\t\t\t\tint startIndex = -1;\n\n\t\t\t\tfor (int i = 0; i < l.size(); i++) {\n\t\t\t\t\tWptPt ls = l.get(i);\n\t\t\t\t\tif (startIndex == -1) {\n\t\t\t\t\t\tif (ls.lat >= latLonBounds.bottom - 0.1 && ls.lat <= latLonBounds.top + 0.1  && ls.lon >= latLonBounds.left - 0.1\n\t\t\t\t\t\t\t\t&& ls.lon <= latLonBounds.right + 0.1) {\n\t\t\t\t\t\t\tstartIndex = i > 0 ? i - 1 : i;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (!(latLonBounds.left <= ls.lon + 0.1 && ls.lon - 0.1 <= latLonBounds.right\n\t\t\t\t\t\t\t&& latLonBounds.bottom <= ls.lat + 0.1 && ls.lat - 0.1 <= latLonBounds.top)) {\n\t\t\t\t\t\tdrawSegment(canvas, tileBox, l, startIndex, i);\n\t\t\t\t\t\tstartIndex = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (startIndex != -1) {\n\t\t\t\t\tdrawSegment(canvas, tileBox, l, startIndex, l.size() - 1);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t}","id":50670,"modified_method":"@Override\n\tpublic void onPrepareBufferImage(Canvas canvas, RotatedTileBox tileBox, DrawSettings settings) {\n\n\t\t\n\t\tfor (OsMoDroidPoint op : osMoDroidPointArrayList) {\n\t\t\tif(seekOsMoDroidPoint!=null&&seekOsMoDroidPoint.equals(op)){\n\t\t\t\tmap.setMapLocation(op.latlon.getLatitude(), op.latlon.getLongitude());\n\t\t\t}\n\t\t\tLatLon newLatlon;\n\t\t\ttry {\n\n\t\t\t\tnewLatlon = new LatLon(myOsMoDroidPlugin.mIRemoteService.getObjectLat(layerId, op.id),\n\t\t\t\t\t\tmyOsMoDroidPlugin.mIRemoteService.getObjectLon(layerId, op.id));\n\n\t\t\t\tif (!op.latlon.equals(newLatlon)) {\n\t\t\t\t\top.prevlatlon = op.latlon;\n\t\t\t\t}\n\t\t\t\top.latlon = newLatlon;\n\t\t\t\top.speed = myOsMoDroidPlugin.mIRemoteService.getObjectSpeed(layerId, op.id);\n\t\t\t} catch (RemoteException e) {\n\t\t\t\t// TODO Auto-generated catch block\n\t\t\t\te.printStackTrace();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdouble latitude = op.latlon.getLatitude();\n\t\t\tdouble longitude = op.latlon.getLongitude();\n\t\t\tdouble prevlatitude = op.latlon.getLatitude();\n\t\t\tdouble prevlongitude = op.latlon.getLongitude();\n\t\t\tif (op.prevlatlon != null) {\n\t\t\t\tprevlatitude = op.prevlatlon.getLatitude();\n\t\t\t\tprevlongitude = op.prevlatlon.getLongitude();\n\t\t\t}\n\n\t\t\tint locationX = (int) tileBox.getPixXFromLatLon(latitude, longitude);\n\t\t\tint locationY = (int) tileBox.getPixYFromLatLon(latitude, longitude);\n\t\t\tint prevlocationX = (int) tileBox.getPixXFromLatLon(prevlatitude, prevlongitude);\n\t\t\tint prevlocationY = (int) tileBox.getPixYFromLatLon(prevlatitude, prevlongitude);\n\n\t\t\t// int y = opIcon.getHeight()/2;\n\t\t\t// int x = opIcon.getWidth()/2;\n\t\t\ttextPaint.setColor(Color.parseColor(\"#013220\"));\n\t\t\tcanvas.drawText(op.name, locationX, locationY - radius, textPaint);\n\t\t\tcanvas.drawText(op.speed, locationX, locationY - 2 * radius, textPaint);\n\t\t\ttextPaint.setColor(Color.parseColor(\"#\" + op.color));\n\t\t\ttextPaint.setShadowLayer(radius, 0, 0, Color.GRAY);\n\t\t\tcanvas.drawCircle(locationX, locationY, radius, textPaint);\n\t\t\t// canvas.drawBitmap(opIcon, locationX-x, locationY-y , textPaint);\n\t\t\ttextPaint.setStrokeWidth(radius);\n\t\t\tcanvas.drawLine(locationX, locationY, prevlocationX, prevlocationY, textPaint);\n\t\t\t// canvas.rotate(-view.getRotate(), locationX, locationY);\n\t\t\t// op.prevlatlon=op.latlon;\n\t\t\t\n\t\t}\n\t\t\n\t\tfor (OsMoDroidPoint point : osMoDroidFixedPointArrayList ){\n\t\t\tdouble latitude = point.latlon.getLatitude();\n\t\t\tdouble longitude = point.latlon.getLongitude();\n\t\t\tint locationX = (int) tileBox.getPixXFromLatLon(latitude, longitude);\n\t\t\tint locationY = (int) tileBox.getPixYFromLatLon(latitude, longitude);\n\t\t\ttextPaint.setColor(Color.parseColor(\"#013220\"));\n\t\t\tcanvas.drawText(point.name, locationX, locationY - radius, textPaint);\n\t\t\ttextPaint.setColor(Color.parseColor(\"#\" + point.color));\n\t\t\ttextPaint.setShadowLayer(radius, 0, 0, Color.GRAY);\n\t\t\tcanvas.drawRect(new Rect(locationX-radius, locationY-radius, locationX+radius, locationY+radius), textPaint);\n\t\t}\n\t\t\n\t\tfor (ColoredGPX cg : gpxArrayList){\n\t\t\tcg.gpxFile.proccessPoints();\n\t\t\tList<List<WptPt>> points = cg.gpxFile.processedPointsToDisplay;\n\t\t\t\n\t\t\tpaint.setColor(cg.color);\n\n\t\t\tfinal QuadRect latLonBounds = tileBox.getLatLonBounds();\n\t\t\tfor (List<WptPt> l : points) {\n\t\t\t\tpath.rewind();\n\t\t\t\tint startIndex = -1;\n\n\t\t\t\tfor (int i = 0; i < l.size(); i++) {\n\t\t\t\t\tWptPt ls = l.get(i);\n\t\t\t\t\tif (startIndex == -1) {\n\t\t\t\t\t\tif (ls.lat >= latLonBounds.bottom - 0.1 && ls.lat <= latLonBounds.top + 0.1  && ls.lon >= latLonBounds.left - 0.1\n\t\t\t\t\t\t\t\t&& ls.lon <= latLonBounds.right + 0.1) {\n\t\t\t\t\t\t\tstartIndex = i > 0 ? i - 1 : i;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (!(latLonBounds.left <= ls.lon + 0.1 && ls.lon - 0.1 <= latLonBounds.right\n\t\t\t\t\t\t\t&& latLonBounds.bottom <= ls.lat + 0.1 && ls.lat - 0.1 <= latLonBounds.top)) {\n\t\t\t\t\t\tdrawSegment(canvas, tileBox, l, startIndex, i);\n\t\t\t\t\t\tstartIndex = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (startIndex != -1) {\n\t\t\t\t\tdrawSegment(canvas, tileBox, l, startIndex, l.size() - 1);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t}","commit_id":"faa6cae4c86fb329175c35425e2747ba6f1da10e","url":"https://github.com/osmandapp/Osmand"},{"original_method":"@Override\n\tpublic void initLayer(OsmandMapTileView view) {\n\t\tthis.view = view;\n\t\tdm = new DisplayMetrics();\n\t\tWindowManager wmgr = (WindowManager) view.getContext().getSystemService(Context.WINDOW_SERVICE);\n\t\twmgr.getDefaultDisplay().getMetrics(dm);\n\t\ttextPaint = new Paint();\n\t\ttextPaint.setDither(true);\n\t\ttextPaint.setAntiAlias(true);\n\t\ttextPaint.setFilterBitmap(true);\n\n\t\ttextPaint.setTextSize(22f);\n\t\ttextPaint.setTypeface(Typeface.DEFAULT_BOLD);\n\t\ttextPaint.setTextAlign(Paint.Align.CENTER);\n\t\topIcon = BitmapFactory.decodeResource(view.getResources(), R.drawable.bicycle_location);\n\t\tOsMoDroidPointArrayList = myOsMoDroidPlugin.getOsMoDroidPointArrayList(layerId);\n\t\tgpxArrayList = myOsMoDroidPlugin.getGpxArrayList(layerId);\n\t\tinitUI();\n\t}","id":50671,"modified_method":"@Override\n\tpublic void initLayer(OsmandMapTileView view) {\n\t\tthis.view = view;\n\t\tdm = new DisplayMetrics();\n\t\tWindowManager wmgr = (WindowManager) view.getContext().getSystemService(Context.WINDOW_SERVICE);\n\t\twmgr.getDefaultDisplay().getMetrics(dm);\n\t\ttextPaint = new Paint();\n\t\ttextPaint.setDither(true);\n\t\ttextPaint.setAntiAlias(true);\n\t\ttextPaint.setFilterBitmap(true);\n\n\t\ttextPaint.setTextSize(22f);\n\t\ttextPaint.setTypeface(Typeface.DEFAULT_BOLD);\n\t\ttextPaint.setTextAlign(Paint.Align.CENTER);\n\t\topIcon = BitmapFactory.decodeResource(view.getResources(), R.drawable.bicycle_location);\n\t\tosMoDroidPointArrayList = myOsMoDroidPlugin.getOsMoDroidPointArrayList(layerId);\n\t\tosMoDroidFixedPointArrayList = myOsMoDroidPlugin.getOsMoDroidFixedPointArrayList(layerId);\n\t\tmyOsMoDroidPlugin.getGpxArrayList(layerId);\n\t\tinitUI();\n\t}","commit_id":"faa6cae4c86fb329175c35425e2747ba6f1da10e","url":"https://github.com/osmandapp/Osmand"},{"original_method":"public void getOsMoDroidPointFromPoint(RotatedTileBox tb,PointF point, List<? super OsMoDroidPoint> om) {\n\t\tif (myOsMoDroidPlugin.getOsMoDroidPointArrayList(layerId) != null) {\n\t\t\tint ex = (int) point.x;\n\t\t\tint ey = (int) point.y;\n\n\t\t\ttry {\n\t\t\t\tfor (int i = 0; i < myOsMoDroidPlugin.getOsMoDroidPointArrayList(layerId).size(); i++) {\n\t\t\t\t\tOsMoDroidPoint n = myOsMoDroidPlugin.getOsMoDroidPointArrayList(layerId).get(i);\n\t\t\t\t\tif (!om.contains(n)) {\n\t\t\t\t\t\tint x = (int) tb.getPixXFromLatLon(n.latlon.getLatitude(), n.latlon.getLongitude());\n\t\t\t\t\t\tint y = (int) tb.getPixYFromLatLon(n.latlon.getLatitude(), n.latlon.getLongitude());\n\t\t\t\t\t\tif (Math.abs(x - ex) <= opIcon.getWidth() && Math.abs(y - ey) <= opIcon.getHeight()) {\n\t\t\t\t\t\t\tom.add(n);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (IndexOutOfBoundsException e) {\n\t\t\t\t// that's really rare case, but is much efficient than introduce\n\t\t\t\t// synchronized block\n\t\t\t}\n\t\t}\n\t}","id":50672,"modified_method":"public void getOsMoDroidPointFromPoint(RotatedTileBox tb,PointF point, List<? super OsMoDroidPoint> om) {\n\t\tif (myOsMoDroidPlugin.getOsMoDroidPointArrayList(layerId) != null) {\n\t\t\tint ex = (int) point.x;\n\t\t\tint ey = (int) point.y;\n\n\t\t\ttry {\n\t\t\t\tfor (int i = 0; i < myOsMoDroidPlugin.getOsMoDroidPointArrayList(layerId).size(); i++) {\n\t\t\t\t\tOsMoDroidPoint n = myOsMoDroidPlugin.getOsMoDroidPointArrayList(layerId).get(i);\n\t\t\t\t\tif (!om.contains(n)) {\n\t\t\t\t\t\tint x = (int) tb.getPixXFromLatLon(n.latlon.getLatitude(), n.latlon.getLongitude());\n\t\t\t\t\t\tint y = (int) tb.getPixYFromLatLon(n.latlon.getLatitude(), n.latlon.getLongitude());\n\t\t\t\t\t\tif (Math.abs(x - ex) <= opIcon.getWidth() && Math.abs(y - ey) <= opIcon.getHeight()) {\n\t\t\t\t\t\t\tom.add(n);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (IndexOutOfBoundsException e) {\n\t\t\t\t// that's really rare case, but is much efficient than introduce\n\t\t\t\t// synchronized block\n\t\t\t}\n\t\t}\n\t\tif (myOsMoDroidPlugin.getOsMoDroidFixedPointArrayList(layerId) != null) {\n\t\t\tint ex = (int) point.x;\n\t\t\tint ey = (int) point.y;\n\n\t\t\ttry {\n\t\t\t\tfor (int i = 0; i < myOsMoDroidPlugin.getOsMoDroidFixedPointArrayList(layerId).size(); i++) {\n\t\t\t\t\tOsMoDroidPoint n = myOsMoDroidPlugin.getOsMoDroidFixedPointArrayList(layerId).get(i);\n\t\t\t\t\tif (!om.contains(n)) {\n\t\t\t\t\t\tint x = (int) tb.getPixXFromLatLon(n.latlon.getLatitude(), n.latlon.getLongitude());\n\t\t\t\t\t\tint y = (int) tb.getPixYFromLatLon(n.latlon.getLatitude(), n.latlon.getLongitude());\n\t\t\t\t\t\tif (Math.abs(x - ex) <= opIcon.getWidth() && Math.abs(y - ey) <= opIcon.getHeight()) {\n\t\t\t\t\t\t\tom.add(n);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (IndexOutOfBoundsException e) {\n\t\t\t\t// that's really rare case, but is much efficient than introduce\n\t\t\t\t// synchronized block\n\t\t\t}\n\t\t}\n\t}","commit_id":"faa6cae4c86fb329175c35425e2747ba6f1da10e","url":"https://github.com/osmandapp/Osmand"},{"original_method":"@Override\n\tpublic void populateObjectContextMenu(Object o, ContextMenuAdapter adapter) {\n\t\tif (o instanceof OsMoDroidPoint && ((OsMoDroidPoint) o).layerId == layerId) {\n\t\t\tfinal OsMoDroidPoint a = (OsMoDroidPoint) o;\n\t\t\tOnContextMenuClick listener = new ContextMenuAdapter.OnContextMenuClick() {\n\t\t\t\t@Override\n\t\t\t\tpublic void onContextMenuClick(int itemId, int pos, boolean isChecked, DialogInterface dialog) {\n\t\t\t\t\tmap.getMyApplication().getTargetPointsHelper().navigateToPoint(a.latlon, true, -1);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tadapter.item(map.getString(R.string.get_directions)).listen(listener).reg();\n\n\t\t}\n\t}","id":50673,"modified_method":"@Override\n\tpublic void populateObjectContextMenu(Object o, ContextMenuAdapter adapter) {\n\t\tif (o instanceof OsMoDroidPoint && ((OsMoDroidPoint) o).layerId == layerId) {\n\t\t\tfinal OsMoDroidPoint a = (OsMoDroidPoint) o;\n\t\t\tOnContextMenuClick listener = new ContextMenuAdapter.OnContextMenuClick() {\n\t\t\t\t@Override\n\t\t\t\tpublic void onContextMenuClick(int itemId, int pos, boolean isChecked, DialogInterface dialog) {\n\t\t\t\t\t\n\t\t\t\t\tmap.getMyApplication().getTargetPointsHelper().navigateToPoint(a.latlon, true, -1);\n\t\t\t\t}\n\t\t\t};\n\t\t\tOnContextMenuClick seeklistener = new ContextMenuAdapter.OnContextMenuClick() {\n\t\t\t\t\n\t\t\t\t@Override\n\t\t\t\tpublic void onContextMenuClick(int itemId, int pos, boolean isChecked, DialogInterface dialog) {\n\t\t\t\t\tif(seekOsMoDroidPoint!=null&&a.equals(seekOsMoDroidPoint))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tseekOsMoDroidPoint=null;\n\t\t\t\t\t\t\tisChecked=false;\n\t\t\t\t\t\t} else \n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tseekOsMoDroidPoint=a;\n\t\t\t\t\t\t\t\tisChecked=true;\n\t\t\t\t\t\t\t}\t\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t\tadapter.item(map.getString(R.string.get_directions)).listen(listener).reg();\n\t\t\tadapter.item(map.getString(R.string.osmodroid_seek)).listen(seeklistener).reg();\n\n\t\t}\n\t}","commit_id":"faa6cae4c86fb329175c35425e2747ba6f1da10e","url":"https://github.com/osmandapp/Osmand"},{"original_method":"@Override\n\tpublic void addMonitorActions(final ContextMenuAdapter qa, final MonitoringInfoControl li, final OsmandMapTileView view) {\n\t\tboolean o = true;\n\t\ttry {\n\t\t\to = mIRemoteService.isActive();\t\n\t\t}\n\t\tcatch(Exception e) {\n\t\t\t\t\tlog.error(e.getMessage(), e);\n\t\t\t\n\t\t\t\t}\n\t\tfinal boolean off = !o;\n\t\tqa.item(off ? R.string.osmodroid_mode_off : R.string.osmodroid_mode_on\n\t\t\t\t).icon(  off ? R.drawable.monitoring_rec_inactive : R.drawable.monitoring_rec_big).listen(new OnContextMenuClick() {\n\n\t\t\t@Override\n\t\t\tpublic void onContextMenuClick(int itemId, int pos, boolean isChecked, DialogInterface dialog) {\n\t\t\t\ttry {\n\t\t\t\tif (off) {\n\t\t\t\t\tmIRemoteService.Activate();\n\t\t\t\t} else {\n\t\t\t\t\tmIRemoteService.Deactivate();\n\t\t\t\t}\n\t\t\t\t} catch(Exception e) {\n\t\t\t\t\tlog.error(e.getMessage(), e);\n\t\t\t\t}\n\t\t\t}\n\t\t}).reg();\n\t\tqa.item(R.string.osmodroid_refresh).icons(R.drawable.ic_action_grefresh_dark, R.drawable.ic_action_grefresh_light).listen(new OnContextMenuClick() {\n\t\t\t\n\t\t\t@Override\n\t\t\tpublic void onContextMenuClick(int itemId, int pos, boolean isChecked,\n\t\t\t\t\tDialogInterface dialog) {\n\t\t\t\ttry {\n\t\t\t\t\tmIRemoteService.refreshChannels();\n\t\t\t\t} catch (RemoteException e) {\n\t\t\t\t\tlog.error(e.getMessage(), e);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t}).reg();\n\t}","id":50674,"modified_method":"@Override\n\tpublic void addMonitorActions(final ContextMenuAdapter qa, final MonitoringInfoControl li, final OsmandMapTileView view) {\n\t\tboolean o = true;\n\t\ttry {\n\t\t\to = mIRemoteService.isActive();\t\n\t\t}\n\t\tcatch(Exception e) {\n\t\t\t\t\tlog.error(e.getMessage(), e);\n\t\t\t\n\t\t\t\t}\n\t\tfinal boolean off = !o;\n\t\tqa.item(off ? R.string.osmodroid_mode_off : R.string.osmodroid_mode_on\n\t\t\t\t).icon(  off ? R.drawable.monitoring_rec_inactive : R.drawable.monitoring_rec_big).listen(new OnContextMenuClick() {\n\n\t\t\t@Override\n\t\t\tpublic void onContextMenuClick(int itemId, int pos, boolean isChecked, DialogInterface dialog) {\n\t\t\t\ttry {\n\t\t\t\tif (off) {\n\t\t\t\t\tmIRemoteService.Activate();\n\t\t\t\t} else {\n\t\t\t\t\tmIRemoteService.Deactivate();\n\t\t\t\t}\n\t\t\t\t} catch(Exception e) {\n\t\t\t\t\tlog.error(e.getMessage(), e);\n\t\t\t\t}\n\t\t\t}\n\t\t}).reg();\n\t\tqa.item(R.string.osmodroid_refresh).icons(R.drawable.ic_action_grefresh_dark, R.drawable.ic_action_grefresh_light).listen(new OnContextMenuClick() {\n\t\t\t\n\t\t\t@Override\n\t\t\tpublic void onContextMenuClick(int itemId, int pos, boolean isChecked,\n\t\t\t\t\tDialogInterface dialog) {\n\t\t\t\ttry {\n\t\t\t\t\tmIRemoteService.refreshChannels();\n\t\t\t\t} catch (RemoteException e) {\n\t\t\t\t\tlog.error(e.getMessage(), e);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t}).reg();\nqa.item(R.string.osmodroid_unseek).icons(R.drawable.abs__ic_commit_search_api_holo_dark, R.drawable.abs__ic_commit_search_api_holo_light).listen(new OnContextMenuClick() {\n\t\t\t\n\t\t\t@Override\n\t\t\tpublic void onContextMenuClick(int itemId, int pos, boolean isChecked,\n\t\t\t\t\tDialogInterface dialog) {\n\t\t\t\tfor (OsMoDroidLayer l: osmoDroidLayerList){\n\t\t\t\t\tl.seekOsMoDroidPoint=null;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t}).reg();\n\t}","commit_id":"faa6cae4c86fb329175c35425e2747ba6f1da10e","url":"https://github.com/osmandapp/Osmand"},{"original_method":"public ArrayList<GPXFile> getGpxArrayList(int id) {\n\t\tArrayList<GPXFile> result = new ArrayList<GPXFile>();\n\t\t\n\t\t\n\t\ttry {\n\t\t\tfor (int i = 0; i < mIRemoteService.getNumberOfGpx(id); i++) {\n\t\t\t\tresult.add( GPXUtilities.loadGPXFile(app, new File(mIRemoteService.getGpxFile(id, i)), false));\n\t\t\t}\n\t\t\treturn result;\n\t\t} catch (RemoteException e) {\n\t\t\tlog.error(e.getMessage(), e);\n\t\t}\n\t\treturn result;\n\t\t\n\t}","id":50675,"modified_method":"public void getGpxArrayList(final int id) {\n\t\tfinal ArrayList<ColoredGPX> result = new ArrayList<ColoredGPX>();\n\t\tif(task!=null){\n\t\t\ttask.cancel(true);\n\t\t}\n\t\t task = new AsyncTask<Void, Void, ArrayList<ColoredGPX>>() {\n\t\t\t@Override\n\t\t\tprotected ArrayList<ColoredGPX> doInBackground(Void... params) {\n\t\t\t\tArrayList<ColoredGPX> temp = new ArrayList<ColoredGPX>();\n\t\t\t\ttry {\n\t\t\t\t\tfor (int i = 0; i < mIRemoteService.getNumberOfGpx(id); i++) {\n\t\t\t\t\t\tColoredGPX cg = new ColoredGPX();\n\t\t\t\t\t\tcg.gpxFile =  GPXUtilities.loadGPXFile(app, new File(mIRemoteService.getGpxFile(id, i)), false);\n\t\t\t\t\t\tcg.color = mIRemoteService.getGpxColor(id, i); \n\t\t\t\t\t\ttemp.add(cg);\n\t\t\t\t\t}\n\t\t\t\t\treturn temp;\n\t\t\t\t} catch (RemoteException e) {\n\t\t\t\t\tlog.error(e.getMessage(), e);\n\t\t\t\t}\n\t\t\t\treturn temp;\t\t\t\t\t\n\t\t\t\t}\n\n\t\t\t@Override\n\t\t\tprotected void onPostExecute(ArrayList<ColoredGPX> backgroundresult) {\n\t\t\t\tif(backgroundresult!=null){\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfor (OsMoDroidLayer l : osmoDroidLayerList){\n\t\t\t\t\t\t\tif (l.layerId==id){\n\t\t\t\t\t\t\t\tl.inGPXFilelist(backgroundresult);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (ConcurrentModificationException e) {\n\t\t\t\t\t\tlog.error(e.getMessage(), e);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\ttask.execute();\n\t\t\n\t\t\n\t\t\n\t\t\n\t}","commit_id":"faa6cae4c86fb329175c35425e2747ba6f1da10e","url":"https://github.com/osmandapp/Osmand"},{"original_method":"private void drawSegment(Canvas canvas, RotatedTileBox tb, List<WptPt> l, int startIndex, int endIndex) {\n\t\tTIntArrayList tx = new TIntArrayList();\n\t\tTIntArrayList ty = new TIntArrayList();\n\t\tfor (int i = startIndex; i <= endIndex; i++) {\n\t\t\tWptPt p = l.get(i);\n\t\t\tint x = tb.getPixXFromLonNoRot(p.lon);\n\t\t\tint y = tb.getPixYFromLatNoRot(p.lat);\n\t\t\ttx.add(x);\n\t\t\tty.add(y);\n\t\t}\n\t\tcalculatePath(tb, tx, ty, path, null);\n\t\tif(isPaint_1) {\n\t\t\tcanvas.drawPath(path, paint_1);\n\t\t}\n\t\tif(isShadowPaint) {\n\t\t\tcanvas.drawPath(path, shadowPaint);\n\t\t}\n\t\tcanvas.drawPath(path, paint);\n\t\tif(isPaint2) {\n\t\t\tcanvas.drawPath(path, paint2);\n\t\t}\n\t\t\n\t}","id":50676,"modified_method":"private void drawSegment(Canvas canvas, RotatedTileBox tb, List<WptPt> l, int startIndex, int endIndex) {\n\t\tTIntArrayList tx = new TIntArrayList();\n\t\tTIntArrayList ty = new TIntArrayList();\n\t\tcanvas.rotate(-tb.getRotate(), tb.getCenterPixelX(), tb.getCenterPixelY());\n\n\t\tfor (int i = startIndex; i <= endIndex; i++) {\n\t\t\tWptPt p = l.get(i);\n\t\t\tint x = (int) tb.getPixXFromLatLon(p.lat, p.lon);\n\t\t\tint y = (int) tb.getPixYFromLatLon(p.lat, p.lon);\n//\t\t\tint x = tb.getPixXFromLonNoRot(p.lon);\n//\t\t\tint y = tb.getPixYFromLatNoRot(p.lat);\n\t\t\ttx.add(x);\n\t\t\tty.add(y);\n\t\t}\n\t\tcalculatePath(tb, tx, ty, path, null);\n\t\tif(isPaint_1) {\n\t\t\tcanvas.drawPath(path, paint_1);\n\t\t}\n\t\tif(isShadowPaint) {\n\t\t\tcanvas.drawPath(path, shadowPaint);\n\t\t}\n\t\tcanvas.drawPath(path, paint);\n\t\tif(isPaint2) {\n\t\t\tcanvas.drawPath(path, paint2);\n\t\t}\n\t\tcanvas.rotate(tb.getRotate(), tb.getCenterPixelX(), tb.getCenterPixelY());\n\t\t\n\t}","commit_id":"c033b456ccb5a2df5ff7eda125a8901e5971392a","url":"https://github.com/osmandapp/Osmand"},{"original_method":"private void drawSegment(RotatedTileBox tb, Canvas canvas) {\n\t\tif (points.size() > 0) {\n\t\t\tpaint.setStrokeWidth(12 * tb.getDensity());\n\t\t\tTIntArrayList tx = new TIntArrayList();\n\t\t\tTIntArrayList ty = new TIntArrayList();\n\t\t\tfor (int i = 0; i < points.size(); i++) {\n\t\t\t\tLocation o = points.get(i);\n\t\t\t\tint x = tb.getPixXFromLonNoRot(o.getLongitude());\n\t\t\t\tint y = tb.getPixYFromLatNoRot(o.getLatitude());\n\t\t\t\ttx.add(x);\n\t\t\t\tty.add(y);\n\t\t\t}\n\t\t\tint pth = calculatePath(tb, tx, ty, path, null);\n\t\t\t\n\t\t\tif(isPaint_1) {\n\t\t\t\tcanvas.drawPath(path, paint_1);\n\t\t\t}\n\t\t\tif(isShadowPaint) {\n\t\t\t\tcanvas.drawPath(path, shadowPaint);\n\t\t\t}\n\t\t\tcanvas.drawPath(path, paint);\n\t\t\tif(isPaint2) {\n\t\t\t\tcanvas.drawPath(path, paint2);\n\t\t\t}\n\t\t\tif(tb.getZoomAnimation() == 0) {\n\t\t\t\tif(pth <= 1) {\n\t\t\t\t\tdrawArrowsOverPath(canvas, path, coloredArrowUp);\n\t\t\t\t} else {\n\t\t\t\t\tArrayList<Path> lst = new ArrayList<Path>();\n\t\t\t\t\tcalculatePath(tb, tx, ty, path, lst);\n\t\t\t\t\tfor(Path l : lst) {\n\t\t\t\t\t\tdrawArrowsOverPath(canvas, l, coloredArrowUp);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","id":50677,"modified_method":"private void drawSegment(RotatedTileBox tb, Canvas canvas) {\n\t\tif (points.size() > 0) {\n\t\t\tcanvas.rotate(-tb.getRotate(), tb.getCenterPixelX(), tb.getCenterPixelY());\n\t\t\tpaint.setStrokeWidth(12 * tb.getDensity());\n\t\t\tTIntArrayList tx = new TIntArrayList();\n\t\t\tTIntArrayList ty = new TIntArrayList();\n\t\t\tfor (int i = 0; i < points.size(); i++) {\n\t\t\t\tLocation o = points.get(i);\n\t\t\t\tint x = (int) tb.getPixXFromLatLon(o.getLatitude(), o.getLongitude());\n\t\t\t\tint y = (int) tb.getPixYFromLatLon(o.getLatitude(), o.getLongitude());\n\t\t\t\ttx.add(x);\n\t\t\t\tty.add(y);\n\t\t\t}\n\t\t\tint pth = calculatePath(tb, tx, ty, path, null);\n\t\t\t\n\t\t\tif(isPaint_1) {\n\t\t\t\tcanvas.drawPath(path, paint_1);\n\t\t\t}\n\t\t\tif(isShadowPaint) {\n\t\t\t\tcanvas.drawPath(path, shadowPaint);\n\t\t\t}\n\t\t\tcanvas.drawPath(path, paint);\n\t\t\tif(isPaint2) {\n\t\t\t\tcanvas.drawPath(path, paint2);\n\t\t\t}\n\t\t\tif(tb.getZoomAnimation() == 0) {\n\t\t\t\tif(pth <= 1) {\n\t\t\t\t\tdrawArrowsOverPath(canvas, path, coloredArrowUp);\n\t\t\t\t} else {\n\t\t\t\t\tArrayList<Path> lst = new ArrayList<Path>();\n\t\t\t\t\tcalculatePath(tb, tx, ty, path, lst);\n\t\t\t\t\tfor(Path l : lst) {\n\t\t\t\t\t\tdrawArrowsOverPath(canvas, l, coloredArrowUp);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tcanvas.rotate(tb.getRotate(), tb.getCenterPixelX(), tb.getCenterPixelY());\n\t\t}\n\t}","commit_id":"c033b456ccb5a2df5ff7eda125a8901e5971392a","url":"https://github.com/osmandapp/Osmand"},{"original_method":"public void testAddFolderImageImageInvalid() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[2]/ul/li[5]/a\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.windowFocus();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Use the classic uploader.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Use the classic uploader.\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_31_file\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_31_file\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portlet\\\\imagegallery\\\\image\\\\addfolderimageimageinvalid\\\\dependencies\\\\test_image.invalid\"));\n\t\tassertEquals(\"Image names must end with one of the following extensions: .bmp, .gif, .jpeg, .jpg, .png, .tif, .tiff\",\n\t\t\tselenium.getAlert());\n\t\tThread.sleep(5000);\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"MG Folder Name\"),\n\t\t\tselenium.getText(\"//span[@class='image-title']\"));\n\t\tselenium.clickAt(\"//span[@class='image-title']\",\n\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"MG Folder Name\"),\n\t\t\tselenium.getText(\"//div/h1/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no media files in this folder.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[8]/a\"));\n\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[8]/a\",\n\t\t\tRuntimeVariables.replace(\"Add Media\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Add Media\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[8]/a\"));\n\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[8]/a\",\n\t\t\tRuntimeVariables.replace(\"Add Media\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"Image\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\"//tr[4]/td/a\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Image\"),\n\t\t\tselenium.getText(\"//tr[4]/td/a\"));\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//tr[4]/td/a\", RuntimeVariables.replace(\"Image\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_31_file']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portlet\\\\imagegallery\\\\image\\\\addfolderimageimageinvalid\\\\dependencies\\\\test_image.invalid\"));\n\t\tselenium.type(\"//input[@id='_31_title']\",\n\t\t\tRuntimeVariables.replace(\"MG Folder Image Title\"));\n\t\tselenium.type(\"//textarea[@id='_31_description']\",\n\t\t\tRuntimeVariables.replace(\"MG Folder Image Description\"));\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"MG Folder Name\"),\n\t\t\tselenium.getText(\"//span[@class='image-title']\"));\n\t\tselenium.clickAt(\"//span[@class='image-title']\",\n\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"MG Folder Name\"),\n\t\t\tselenium.getText(\"//div/h1/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"MG Folder Image Title\"),\n\t\t\tselenium.getText(\"//span[@class='image-title']\"));\n\t}","id":50678,"modified_method":"public void testAddFolderImageImageInvalid() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"MG Folder Name\"),\n\t\t\tselenium.getText(\"//span[@class='image-title']\"));\n\t\tselenium.clickAt(\"//span[@class='image-title']\",\n\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"MG Folder Name\"),\n\t\t\tselenium.getText(\"//div/h1/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no media files in this folder.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[8]/a\"));\n\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[8]/a\",\n\t\t\tRuntimeVariables.replace(\"Add Media\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Add Media\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[8]/a\"));\n\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[8]/a\",\n\t\t\tRuntimeVariables.replace(\"Add Media\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"Image\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\"//tr[4]/td/a\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Image\"),\n\t\t\tselenium.getText(\"//tr[4]/td/a\"));\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//tr[4]/td/a\", RuntimeVariables.replace(\"Image\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_31_file']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portlet\\\\imagegallery\\\\image\\\\addfolderimageimageinvalid\\\\dependencies\\\\test_image.invalid\"));\n\t\tselenium.type(\"//input[@id='_31_title']\",\n\t\t\tRuntimeVariables.replace(\"MG Folder Image Title\"));\n\t\tselenium.type(\"//textarea[@id='_31_description']\",\n\t\t\tRuntimeVariables.replace(\"MG Folder Image Description\"));\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Image names must end with one of the following extensions: .bmp, .gif, .jpeg, .jpg, .png, .tif, .tiff\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-error']\"));\n\t}","commit_id":"f9d1b1f889aa48bfa6e81af889b0b1c045b3f1c3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddFolderNameInvalid() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[2]/a\"));\n\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Add Folder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_31_name']\",\n\t\t\tRuntimeVariables.replace(\"!@#$%^&amp;*\"));\n\t\tselenium.type(\"//textarea[@id='_31_description']\",\n\t\t\tRuntimeVariables.replace(\"MG Folder Description\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Please enter a unique folder name.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t}","id":50679,"modified_method":"public void testAddFolderNameInvalid() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[2]/a\"));\n\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Add Folder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_31_name']\",\n\t\t\tRuntimeVariables.replace(\"!@#$%^&amp;*\"));\n\t\tselenium.type(\"//textarea[@id='_31_description']\",\n\t\t\tRuntimeVariables.replace(\"MG Folder Description\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid name.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t}","commit_id":"f9d1b1f889aa48bfa6e81af889b0b1c045b3f1c3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddFolder() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[2]/ul/li[2]/a\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_31_name\", RuntimeVariables.replace(\"Test1 Folder1\"));\n\t\tselenium.type(\"_31_description\",\n\t\t\tRuntimeVariables.replace(\"This is Test1 Folder1.\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Test1 Folder1\\nThis is Test1 Folder1.\"),\n\t\t\tselenium.getText(\"//td[1]/a[1]\"));\n\t}","id":50680,"modified_method":"public void testAddFolder() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[2]/a\"));\n\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Add Folder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_31_name']\",\n\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\tselenium.type(\"//textarea[@id='_31_description']\",\n\t\t\tRuntimeVariables.replace(\"MG Folder Description\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"MG Folder Name\"),\n\t\t\tselenium.getText(\"//span[@class='image-title']\"));\n\t}","commit_id":"f9d1b1f889aa48bfa6e81af889b0b1c045b3f1c3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPageIG() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\tselenium.clickAt(\"save\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":50681,"modified_method":"public void testAddPageIG() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\tselenium.clickAt(\"save\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"f9d1b1f889aa48bfa6e81af889b0b1c045b3f1c3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletIG() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"i\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@title='Image Gallery']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div[@title='Image Gallery']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":50682,"modified_method":"public void testAddPortletIG() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@title='Media Gallery']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div[@title='Media Gallery']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"f9d1b1f889aa48bfa6e81af889b0b1c045b3f1c3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertImportLAR() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"MG Folder1 Name\"),\n\t\t\tselenium.getText(\"xPath=(//span[@class='image-title'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"MG Folder2 Name\"),\n\t\t\tselenium.getText(\"xPath=(//span[@class='image-title'])[2]\"));\n\t\tselenium.clickAt(\"xPath=(//span[@class='image-title'])[1]\",\n\t\t\tRuntimeVariables.replace(\"MG Folder1 Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"MG Folder1 Subfolder Name\"),\n\t\t\tselenium.getText(\"xPath=(//span[@class='image-title'])[1]\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"MG Folder2 Name\"),\n\t\t\tselenium.getText(\"xPath=(//span[@class='image-title'])[2]\"));\n\t\tselenium.clickAt(\"xPath=(//span[@class='image-title'])[2]\",\n\t\t\tRuntimeVariables.replace(\"MG Folder2 Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"MG Folder2 Subfolder Name\"),\n\t\t\tselenium.getText(\"xPath=(//span[@class='image-title'])[1]\"));\n\t\tselenium.clickAt(\"xPath=(//span[@class='image-title'])[1]\",\n\t\t\tRuntimeVariables.replace(\"MG Folder2 Subfolder Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"MG Folder2 Subfolder Name\"),\n\t\t\tselenium.getText(\"//div/h1/span\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//img[@alt='MG Folder2 Subfolder Image Title - MG Folder2 Subfolder Image Description']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//img[@alt='MG Folder2 Subfolder Image Title - MG Folder2 Subfolder Image Description']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"MG Folder2 Subfolder Image Title\"),\n\t\t\tselenium.getText(\"//span[@class='image-title']\"));\n\t}","id":50683,"modified_method":"public void testAssertImportLAR() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//strong/a\"));\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tThread.sleep(5000);\n\t\tassertTrue(selenium.isChecked(\"//input[@id='_86_showActionsCheckbox']\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_showFolderMenuCheckbox']\"));\n\t\tassertTrue(selenium.isChecked(\"//input[@id='_86_showTabsCheckbox']\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_showFoldersSearchCheckbox']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"MG Folder1 Name\"),\n\t\t\tselenium.getText(\"xPath=(//span[@class='image-title'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"MG Folder2 Name\"),\n\t\t\tselenium.getText(\"xPath=(//span[@class='image-title'])[2]\"));\n\t\tselenium.clickAt(\"xPath=(//span[@class='image-title'])[1]\",\n\t\t\tRuntimeVariables.replace(\"MG Folder1 Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"MG Folder1 Subfolder Name\"),\n\t\t\tselenium.getText(\"xPath=(//span[@class='image-title'])[1]\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"MG Folder2 Name\"),\n\t\t\tselenium.getText(\"xPath=(//span[@class='image-title'])[2]\"));\n\t\tselenium.clickAt(\"xPath=(//span[@class='image-title'])[2]\",\n\t\t\tRuntimeVariables.replace(\"MG Folder2 Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"MG Folder2 Subfolder Name\"),\n\t\t\tselenium.getText(\"xPath=(//span[@class='image-title'])[1]\"));\n\t\tselenium.clickAt(\"xPath=(//span[@class='image-title'])[1]\",\n\t\t\tRuntimeVariables.replace(\"MG Folder2 Subfolder Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"MG Folder2 Subfolder Name\"),\n\t\t\tselenium.getText(\"//div/h1/span\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//img[@alt='MG Folder2 Subfolder Image Title - MG Folder2 Subfolder Image Description']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//img[@alt='MG Folder2 Subfolder Image Title - MG Folder2 Subfolder Image Description']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"MG Folder2 Subfolder Image Title\"),\n\t\t\tselenium.getText(\"//span[@class='image-title']\"));\n\t}","commit_id":"f9d1b1f889aa48bfa6e81af889b0b1c045b3f1c3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeleteFolder() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"MG Folder Name\"),\n\t\t\tselenium.getText(\"//span[@class='image-title']\"));\n\t\tselenium.clickAt(\"//span[@class='image-title']\",\n\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertFalse(selenium.isTextPresent(\"MG Folder Name\"));\n\t}","id":50684,"modified_method":"public void testDeleteFolder() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"MG Folder Name\"),\n\t\t\tselenium.getText(\"//span[@class='image-title']\"));\n\t\tselenium.clickAt(\"//span[@class='image-title']\",\n\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!selenium.isTextPresent(\"MG Folder Name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertFalse(selenium.isTextPresent(\"MG Folder Name\"));\n\t}","commit_id":"f9d1b1f889aa48bfa6e81af889b0b1c045b3f1c3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeleteSubfolder() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"MG Folder Name\"),\n\t\t\tselenium.getText(\"//span[@class='image-title']\"));\n\t\tselenium.clickAt(\"//span[@class='image-title']\",\n\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"MG Subfolder Name\"),\n\t\t\tselenium.getText(\"//span[@class='image-title']\"));\n\t\tselenium.clickAt(\"//span[@class='image-title']\",\n\t\t\tRuntimeVariables.replace(\"MG Subfolder Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertFalse(selenium.isTextPresent(\"MG Subfolder Name\"));\n\t}","id":50685,"modified_method":"public void testDeleteSubfolder() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"MG Folder Name\"),\n\t\t\tselenium.getText(\"//span[@class='image-title']\"));\n\t\tselenium.clickAt(\"//span[@class='image-title']\",\n\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"MG Subfolder Name\"),\n\t\t\tselenium.getText(\"//span[@class='image-title']\"));\n\t\tselenium.clickAt(\"//span[@class='image-title']\",\n\t\t\tRuntimeVariables.replace(\"MG Subfolder Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!selenium.isTextPresent(\"MG Subfolder Name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertFalse(selenium.isTextPresent(\"MG Subfolder Name\"));\n\t}","commit_id":"f9d1b1f889aa48bfa6e81af889b0b1c045b3f1c3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\n\t\ttestSuite.addTest(FolderTests.suite());\n\t\ttestSuite.addTest(ImageTests.suite());\n\t\t//testSuite.addTest(LARTests.suite());\n\t\ttestSuite.addTest(PortletTests.suite());\n\n\t\treturn testSuite;\n\t}","id":50686,"modified_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\n\t\ttestSuite.addTest(FolderTests.suite());\n\t\ttestSuite.addTest(ImageTests.suite());\n\t\ttestSuite.addTest(LARTests.suite());\n\t\ttestSuite.addTest(PortletTests.suite());\n\n\t\treturn testSuite;\n\t}","commit_id":"f9d1b1f889aa48bfa6e81af889b0b1c045b3f1c3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testImportLAR() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//strong/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Export / Import\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Export / Import\",\n\t\t\tRuntimeVariables.replace(\"Export / Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Import\", RuntimeVariables.replace(\"Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_86_importFileName']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portlet\\\\imagegallery\\\\lar\\\\importlar\\\\dependencies\\\\Image_Gallery-Selenium.portlet.lar\"));\n\t\tselenium.check(\"//input[@id='_86_DELETE_PORTLET_DATACheckbox']\");\n\t\tselenium.check(\"//input[@id='_86_PORTLET_DATACheckbox']\");\n\t\tselenium.clickAt(\"//input[@value='Import']\",\n\t\t\tRuntimeVariables.replace(\"Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","id":50687,"modified_method":"public void testImportLAR() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tselenium.click(\"//strong/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Export / Import\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Export / Import\",\n\t\t\tRuntimeVariables.replace(\"Export / Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Import\", RuntimeVariables.replace(\"Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_86_importFileName']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portlet\\\\imagegallery\\\\lar\\\\importlar\\\\dependencies\\\\Image_Gallery-Selenium.portlet.lar\"));\n\t\tselenium.check(\"//input[@id='_86_DELETE_PORTLET_DATACheckbox']\");\n\t\tselenium.check(\"//input[@id='_86_PORTLET_DATACheckbox']\");\n\t\tselenium.clickAt(\"//input[@value='Import']\",\n\t\t\tRuntimeVariables.replace(\"Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","commit_id":"f9d1b1f889aa48bfa6e81af889b0b1c045b3f1c3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG DL Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":50688,"modified_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder1 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder2 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder3 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder4 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder5 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\tcase 2:\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"f9d1b1f889aa48bfa6e81af889b0b1c045b3f1c3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG DL Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":50689,"modified_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder1 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder2 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder3 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder4 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder5 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\tcase 2:\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"f9d1b1f889aa48bfa6e81af889b0b1c045b3f1c3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG DL Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":50690,"modified_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder1 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder2 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder3 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder4 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder5 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\tcase 2:\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"f9d1b1f889aa48bfa6e81af889b0b1c045b3f1c3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG DL Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":50691,"modified_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder1 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder2 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder3 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder4 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder5 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\tcase 2:\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"f9d1b1f889aa48bfa6e81af889b0b1c045b3f1c3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG DL Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":50692,"modified_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder1 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder2 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder3 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder4 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder5 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\tcase 2:\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"f9d1b1f889aa48bfa6e81af889b0b1c045b3f1c3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG DL Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":50693,"modified_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder1 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder2 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder3 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder4 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder5 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\tcase 2:\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"f9d1b1f889aa48bfa6e81af889b0b1c045b3f1c3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG DL Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":50694,"modified_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder1 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder2 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder3 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder4 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder5 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\tcase 2:\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"f9d1b1f889aa48bfa6e81af889b0b1c045b3f1c3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG DL Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":50695,"modified_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder1 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder2 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder3 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder4 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder5 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\tcase 2:\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"f9d1b1f889aa48bfa6e81af889b0b1c045b3f1c3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG DL Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":50696,"modified_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder1 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder2 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder3 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder4 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder5 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\tcase 2:\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"f9d1b1f889aa48bfa6e81af889b0b1c045b3f1c3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG DL Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":50697,"modified_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder1 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder2 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder3 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder4 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder5 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\tcase 2:\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"f9d1b1f889aa48bfa6e81af889b0b1c045b3f1c3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG DL Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":50698,"modified_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder1 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder2 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder3 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder4 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder5 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\tcase 2:\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"f9d1b1f889aa48bfa6e81af889b0b1c045b3f1c3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG DL Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":50699,"modified_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder1 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder2 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder3 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder4 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder5 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\tcase 2:\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"f9d1b1f889aa48bfa6e81af889b0b1c045b3f1c3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG DL Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":50700,"modified_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder1 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder2 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder3 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder4 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder5 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\tcase 2:\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"f9d1b1f889aa48bfa6e81af889b0b1c045b3f1c3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG DL Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":50701,"modified_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder1 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder2 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder3 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder4 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder5 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\tcase 2:\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"f9d1b1f889aa48bfa6e81af889b0b1c045b3f1c3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG DL Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":50702,"modified_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder1 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder2 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder3 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder4 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder5 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\tcase 2:\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"f9d1b1f889aa48bfa6e81af889b0b1c045b3f1c3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG DL Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":50703,"modified_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder1 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder2 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder3 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder4 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder5 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\tcase 2:\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"f9d1b1f889aa48bfa6e81af889b0b1c045b3f1c3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG DL Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":50704,"modified_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder1 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder2 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder3 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder4 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder5 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\tcase 2:\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"f9d1b1f889aa48bfa6e81af889b0b1c045b3f1c3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG DL Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":50705,"modified_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder1 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder2 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder3 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder4 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder5 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\tcase 2:\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"f9d1b1f889aa48bfa6e81af889b0b1c045b3f1c3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG DL Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":50706,"modified_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder1 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder2 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder3 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder4 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder5 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\tcase 2:\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"f9d1b1f889aa48bfa6e81af889b0b1c045b3f1c3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG DL Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":50707,"modified_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder1 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder2 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder3 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder4 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder5 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\tcase 2:\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"f9d1b1f889aa48bfa6e81af889b0b1c045b3f1c3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG DL Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":50708,"modified_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder1 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder2 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder3 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder4 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder5 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\tcase 2:\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"f9d1b1f889aa48bfa6e81af889b0b1c045b3f1c3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG DL Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":50709,"modified_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder1 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder2 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder3 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder4 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder5 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\tcase 2:\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"f9d1b1f889aa48bfa6e81af889b0b1c045b3f1c3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG DL Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":50710,"modified_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder1 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder2 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder3 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder4 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder5 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\tcase 2:\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"f9d1b1f889aa48bfa6e81af889b0b1c045b3f1c3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG DL Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":50711,"modified_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder1 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder2 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder3 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder4 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder5 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\tcase 2:\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"f9d1b1f889aa48bfa6e81af889b0b1c045b3f1c3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG DL Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":50712,"modified_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder1 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder2 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder3 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder4 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder5 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\tcase 2:\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"f9d1b1f889aa48bfa6e81af889b0b1c045b3f1c3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG DL Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":50713,"modified_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder1 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder2 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder3 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder4 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder5 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\tcase 2:\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"f9d1b1f889aa48bfa6e81af889b0b1c045b3f1c3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG DL Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":50714,"modified_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder1 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder2 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder3 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder4 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder5 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\tcase 2:\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"f9d1b1f889aa48bfa6e81af889b0b1c045b3f1c3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG DL Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":50715,"modified_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder1 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder2 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder3 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder4 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder5 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\tcase 2:\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"f9d1b1f889aa48bfa6e81af889b0b1c045b3f1c3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG DL Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":50716,"modified_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder1 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder2 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder3 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder4 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder5 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\tcase 2:\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"f9d1b1f889aa48bfa6e81af889b0b1c045b3f1c3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG DL Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":50717,"modified_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder1 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder2 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder3 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder4 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder5 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\tcase 2:\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"f9d1b1f889aa48bfa6e81af889b0b1c045b3f1c3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG DL Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":50718,"modified_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder1 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder2 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder3 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder4 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder5 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\tcase 2:\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"f9d1b1f889aa48bfa6e81af889b0b1c045b3f1c3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG DL Folder Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":50719,"modified_method":"public void testTearDownIGFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Image Gallery Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean igFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder1 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder2 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder3 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder4 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean igFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/a/span\");\n\n\t\t\t\tif (!igFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"MG Folder5 Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[4]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (\"Are you sure you want to delete this?\".equals(\n\t\t\t\t\t\t\t\t\tselenium.getConfirmation())) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\tcase 2:\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"f9d1b1f889aa48bfa6e81af889b0b1c045b3f1c3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddAnswerThread() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//tr[4]/td[1]/a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Waiting for an Answer\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Reply\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_162_textArea\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"I like green because it is so natural. Obviously.\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Publish']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[5]/table/tbody/tr[1]/td[2]/div[1]/ul/li[1]/span/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[5]/table/tbody/tr[1]/td[2]/div[1]/ul/li[1]/span/a/span\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"link=T\\u00e9st Cat\\u00e9gory Edit\\u00e9d\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Resolved\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Resolved\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Waiting for an Answer\"));\n\t}","id":50720,"modified_method":"public void testAddAnswerThread() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//tr[4]/td[2]/a[1]/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory Edit\\u00e9d\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Waiting for an Answer\",\n\t\t\tRuntimeVariables.replace(\"Waiting for an Answer\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Reply\", RuntimeVariables.replace(\"Reply\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_162_editor']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"I like green because it is so natural. Obviously.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[5]/table/tbody/tr[1]/td[2]/div[1]/ul/li[1]/span/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[5]/table/tbody/tr[1]/td[2]/div[1]/ul/li[1]/span/a/span\",\n\t\t\tRuntimeVariables.replace(\"Mark as an Answer\"));\n\t\tselenium.clickAt(\"link=T\\u00e9st Cat\\u00e9gory Edit\\u00e9d\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory Edit\\u00e9d\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Resolved\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Resolved\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Waiting for an Answer\"));\n\t}","commit_id":"279e7c8753f7bcf59f474663ed888c35fba940da","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddCategory() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Add Category']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Category']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_162_name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"_162_name\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gor\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_162_name\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_162_description\",\n\t\t\tRuntimeVariables.replace(\"This is a t\\u00e9st cat\\u00e9gory!\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"T\\u00e9st Cat\\u00e9gory\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t}","id":50721,"modified_method":"public void testAddCategory() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Add Category']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Category']\",\n\t\t\tRuntimeVariables.replace(\"Add Category\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_162_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"//input[@id='_162_name']\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gor\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_162_name']\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_162_description']\",\n\t\t\tRuntimeVariables.replace(\"This is a t\\u00e9st cat\\u00e9gory!\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isTextPresent(\"T\\u00e9st Cat\\u00e9gory\"));\n\t}","commit_id":"279e7c8753f7bcf59f474663ed888c35fba940da","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddDeletableMessage() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Post New Thread']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_162_subject\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"_162_subject\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_162_subject\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__162_editor']/iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__162_editor']/iframe\");\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This m\\u00e9ssag\\u00e9 will b\\u00e9 d\\u00e9l\\u00e9t\\u00e9d!\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Publish']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//section/div/div/div/div[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\"),\n\t\t\tselenium.getText(\"//div[1]/h1/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This m\\u00e9ssag\\u00e9 will b\\u00e9 d\\u00e9l\\u00e9t\\u00e9d!\"),\n\t\t\tselenium.getText(\"//td[2]/div[2]\"));\n\t}","id":50722,"modified_method":"public void testAddDeletableMessage() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"S\\u00e9cond T\\u00e9st Subcat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Post New Thread']\",\n\t\t\tRuntimeVariables.replace(\"Post New Thread\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_162_subject']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"//input[@id='_162_subject']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_162_subject']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_162_editor']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This m\\u00e9ssag\\u00e9 will b\\u00e9 d\\u00e9l\\u00e9t\\u00e9d!\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\"),\n\t\t\tselenium.getText(\"//div[1]/h1/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This m\\u00e9ssag\\u00e9 will b\\u00e9 d\\u00e9l\\u00e9t\\u00e9d!\"),\n\t\t\tselenium.getText(\"//td[2]/div[2]\"));\n\t}","commit_id":"279e7c8753f7bcf59f474663ed888c35fba940da","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddMessage() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Post New Thread']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_162_subject\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"_162_subject\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_162_subject\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__162_editor']/iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__162_editor']/iframe\");\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\"This is a t\\u00e9st m\\u00e9ssag\\u00e9!\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Publish']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//section/div/div/div/div[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.clickAt(\"//td[2]/a\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\"//div[1]/h1/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a t\\u00e9st m\\u00e9ssag\\u00e9!\"),\n\t\t\tselenium.getText(\"//td[2]/div[2]\"));\n\t}","id":50723,"modified_method":"public void testAddMessage() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Post New Thread']\",\n\t\t\tRuntimeVariables.replace(\"Post New Thread\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_162_subject']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"//input[@id='_162_subject']\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_162_subject']\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_162_editor']\",\n\t\t\tRuntimeVariables.replace(\"This is a t\\u00e9st m\\u00e9ssag\\u00e9!\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\"//div[1]/h1/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a t\\u00e9st m\\u00e9ssag\\u00e9!\"),\n\t\t\tselenium.getText(\"//td[2]/div[2]\"));\n\t}","commit_id":"279e7c8753f7bcf59f474663ed888c35fba940da","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddMoveCategory() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Category']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_162_name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"_162_name\", RuntimeVariables.replace(\"Sujr\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_162_name\", RuntimeVariables.replace(\"Sujr\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Sujr\"));\n\t}","id":50724,"modified_method":"public void testAddMoveCategory() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Category']\",\n\t\t\tRuntimeVariables.replace(\"Add Category\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_162_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"//input[@id='_162_name']\",\n\t\t\tRuntimeVariables.replace(\"Sujr\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_162_name']\",\n\t\t\tRuntimeVariables.replace(\"Sujr\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Sujr\"));\n\t}","commit_id":"279e7c8753f7bcf59f474663ed888c35fba940da","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddNullEntry() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Post New Thread']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_162_subject\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"_162_subject\",\n\t\t\tRuntimeVariables.replace(\"Null Test Entr\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_162_subject\",\n\t\t\tRuntimeVariables.replace(\"Null Test Entry\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__162_editor']/iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__162_editor']/iframe\");\n\t\tselenium.type(\"//body\", RuntimeVariables.replace(\"\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Publish']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"Your request failed to complete.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Please enter a valid message.\"));\n\t}","id":50725,"modified_method":"public void testAddNullEntry() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Post New Thread']\",\n\t\t\tRuntimeVariables.replace(\"Post New Thread\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_162_subject']\",\n\t\t\tRuntimeVariables.replace(\"Null Test Entry\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_162_editor']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid message.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t}","commit_id":"279e7c8753f7bcf59f474663ed888c35fba940da","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddNullTitle() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Post New Thread']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_162_subject\", RuntimeVariables.replace(\"\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__162_editor']/iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__162_editor']/iframe\");\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\"This is a Null Test Entry!\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isTextPresent(\"This field is required.\"));\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tassertEquals(RuntimeVariables.replace(\"This field is required.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='aui-form-validator-message required']\"));\n\t}","id":50726,"modified_method":"public void testAddNullTitle() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Post New Thread']\",\n\t\t\tRuntimeVariables.replace(\"Post New Thread\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_162_editor']\",\n\t\t\tRuntimeVariables.replace(\"This is a Null Test Entry!\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_162_subject']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tassertEquals(RuntimeVariables.replace(\"This field is required.\"),\n\t\t\tselenium.getText(\"//label/div\"));\n\t}","commit_id":"279e7c8753f7bcf59f474663ed888c35fba940da","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddQuestionThread() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//tr[4]/td[1]/a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Post New Thread']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_162_questionCheckbox\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_162_questionCheckbox\", RuntimeVariables.replace(\"\"));\n\t\tselenium.typeKeys(\"_162_subject\",\n\t\t\tRuntimeVariables.replace(\"Favorite Color Test Question\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_162_subject\",\n\t\t\tRuntimeVariables.replace(\"Favorite Color Test Question\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_162_textArea\",\n\t\t\tRuntimeVariables.replace(\"What is your favorite color?\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Publish']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=T\\u00e9st Cat\\u00e9gory Edit\\u00e9d\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Waiting for an Answer\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Waiting for an Answer\"));\n\t}","id":50727,"modified_method":"public void testAddQuestionThread() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//tr[4]/td[2]/a[1]/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory Edit\\u00e9d\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Post New Thread']\",\n\t\t\tRuntimeVariables.replace(\"Post New Thread\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@name='_162_questionCheckbox']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@name='_162_questionCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Mark as a Question Checkbox\"));\n\t\tselenium.typeKeys(\"//input[@name='_162_subject']\",\n\t\t\tRuntimeVariables.replace(\"Favorite Color Test Question\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@name='_162_subject']\",\n\t\t\tRuntimeVariables.replace(\"Favorite Color Test Question\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_162_editor']\",\n\t\t\tRuntimeVariables.replace(\"What is your favorite color?\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=T\\u00e9st Cat\\u00e9gory Edit\\u00e9d\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory Edit\\u00e9d\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Waiting for an Answer\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Waiting for an Answer\"));\n\t}","commit_id":"279e7c8753f7bcf59f474663ed888c35fba940da","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddReplyMessage() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=T\\u00e9st M\\u00e9ssag\\u00e9\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Reply\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Reply\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__162_editor']/iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__162_editor']/iframe\");\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This is a t\\u00e9st r\\u00e9ply m\\u00e9ssag\\u00e9!\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Publish']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//section/div/div/div/div[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"RE: T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\"RE: T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[5]/table/tbody/tr[1]/td[2]/div[1]/div/a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a t\\u00e9st r\\u00e9ply m\\u00e9ssag\\u00e9!\"),\n\t\t\tselenium.getText(\"//div[5]/table/tbody/tr[1]/td[2]/div[2]\"));\n\t}","id":50728,"modified_method":"public void testAddReplyMessage() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=T\\u00e9st M\\u00e9ssag\\u00e9\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Reply\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Reply\", RuntimeVariables.replace(\"Reply\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_162_editor']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This is a t\\u00e9st r\\u00e9ply m\\u00e9ssag\\u00e9!\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"RE: T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\"RE: T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[5]/table/tbody/tr[1]/td[2]/div[1]/div/a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a t\\u00e9st r\\u00e9ply m\\u00e9ssag\\u00e9!\"),\n\t\t\tselenium.getText(\"//div[5]/table/tbody/tr[1]/td[2]/div[2]\"));\n\t}","commit_id":"279e7c8753f7bcf59f474663ed888c35fba940da","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddSecondReplyMessage() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=T\\u00e9st M\\u00e9ssag\\u00e9\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[5]/table/tbody/tr[1]/td[2]/div[1]/ul/li[2]/span/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[5]/table/tbody/tr[1]/td[2]/div[1]/ul/li[2]/span/a/span\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__162_editor']/iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__162_editor']/iframe\");\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\"This is a second reply message.\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Publish']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//section/div/div/div/div[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"RE: T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\"RE: T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[6]/table/tbody/tr[1]/td[2]/div[1]/div/a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\"This is a second reply message.\"),\n\t\t\tselenium.getText(\"//div[6]/table/tbody/tr[1]/td[2]/div[2]\"));\n\t}","id":50729,"modified_method":"public void testAddSecondReplyMessage() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=T\\u00e9st M\\u00e9ssag\\u00e9\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[5]/table/tbody/tr[1]/td[2]/div[1]/ul/li[2]/span/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[5]/table/tbody/tr[1]/td[2]/div[1]/ul/li[2]/span/a/span\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_162_editor']\",\n\t\t\tRuntimeVariables.replace(\"This is a second reply message.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"RE: T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\"RE: T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[6]/table/tbody/tr[1]/td[2]/div[1]/div/a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\"This is a second reply message.\"),\n\t\t\tselenium.getText(\"//div[6]/table/tbody/tr[1]/td[2]/div[2]\"));\n\t}","commit_id":"279e7c8753f7bcf59f474663ed888c35fba940da","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddSecondSubcategory() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Subcategory']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_162_name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"_162_name\",\n\t\t\tRuntimeVariables.replace(\"S\\u00e9cond T\\u00e9st Subcat\\u00e9gor\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_162_name\",\n\t\t\tRuntimeVariables.replace(\"S\\u00e9cond T\\u00e9st Subcat\\u00e9gory\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_162_description\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This is a s\\u00e9cond t\\u00e9st subcat\\u00e9gory!\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Save']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"S\\u00e9cond T\\u00e9st Subcat\\u00e9gory\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t}","id":50730,"modified_method":"public void testAddSecondSubcategory() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Subcategory']\",\n\t\t\tRuntimeVariables.replace(\"Add Subcategory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_162_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"//input[@id='_162_name']\",\n\t\t\tRuntimeVariables.replace(\"S\\u00e9cond T\\u00e9st Subcat\\u00e9gor\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_162_name']\",\n\t\t\tRuntimeVariables.replace(\"S\\u00e9cond T\\u00e9st Subcat\\u00e9gory\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_162_description']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This is a s\\u00e9cond t\\u00e9st subcat\\u00e9gory!\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"S\\u00e9cond T\\u00e9st Subcat\\u00e9gory\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","commit_id":"279e7c8753f7bcf59f474663ed888c35fba940da","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddSubcategory() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Subcategory']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_162_name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_162_name\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_162_description\",\n\t\t\tRuntimeVariables.replace(\"This is a t\\u00e9st subcat\\u00e9gory!\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"T\\u00e9st Subcat\\u00e9gory\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t}","id":50731,"modified_method":"public void testAddSubcategory() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Subcategory']\",\n\t\t\tRuntimeVariables.replace(\"Add Subcategory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_162_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_162_name']\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_162_description']\",\n\t\t\tRuntimeVariables.replace(\"This is a t\\u00e9st subcat\\u00e9gory!\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isTextPresent(\"T\\u00e9st Subcat\\u00e9gory\"));\n\t}","commit_id":"279e7c8753f7bcf59f474663ed888c35fba940da","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddThirdReplyMessage() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=T\\u00e9st M\\u00e9ssag\\u00e9\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[6]/table/tbody/tr[1]/td[2]/div[1]/ul/li[2]/span/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[6]/table/tbody/tr[1]/td[2]/div[1]/ul/li[2]/span/a/span\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__162_editor']/iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__162_editor']/iframe\");\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\"This is a third reply message.\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Publish']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//section/div/div/div/div[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"RE: T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"exact:RE: T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[7]/table/tbody/tr[1]/td[2]/div[1]/div/a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\"This is a third reply message.\"),\n\t\t\tselenium.getText(\"//div[7]/table/tbody/tr[1]/td[2]/div[2]\"));\n\t}","id":50732,"modified_method":"public void testAddThirdReplyMessage() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=T\\u00e9st M\\u00e9ssag\\u00e9\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[6]/table/tbody/tr[1]/td[2]/div[1]/ul/li[2]/span/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[6]/table/tbody/tr[1]/td[2]/div[1]/ul/li[2]/span/a/span\",\n\t\t\tRuntimeVariables.replace(\"Reply\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_162_editor']\",\n\t\t\tRuntimeVariables.replace(\"This is a third reply message.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"RE: T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"exact:RE: T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[7]/table/tbody/tr[1]/td[2]/div[1]/div/a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\"This is a third reply message.\"),\n\t\t\tselenium.getText(\"//div[7]/table/tbody/tr[1]/td[2]/div[2]\"));\n\t}","commit_id":"279e7c8753f7bcf59f474663ed888c35fba940da","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertImportLAR() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"T\\u00e9st Cat\\u00e9gory\"));\n\t\tassertTrue(selenium.isTextPresent(\"T\\u00e9st Cat\\u00e9gory Edit\\u00e9d\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"T\\u00e9st Subcat\\u00e9gory\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"S\\u00e9cond T\\u00e9st Subcat\\u00e9gory\"));\n\t\tassertTrue(selenium.isTextPresent(\"T\\u00e9st M\\u00e9ssag\\u00e9 Edited\"));\n\t\tassertTrue(selenium.isTextPresent(\"RE: T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t\tselenium.clickAt(\"link=exact:RE: T\\u00e9st M\\u00e9ssag\\u00e9\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"This is a t\\u00e9st r\\u00e9ply m\\u00e9ssag\\u00e9!\"));\n\t\tassertTrue(selenium.isTextPresent(\"This is a second reply message.\"));\n\t\tassertTrue(selenium.isTextPresent(\"This is a third reply message.\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Message Boards\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//tr[4]/td[1]/a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"Moved to Sujr\"));\n\t}","id":50733,"modified_method":"public void testAssertImportLAR() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"T\\u00e9st Cat\\u00e9gory\"));\n\t\tassertTrue(selenium.isTextPresent(\"T\\u00e9st Cat\\u00e9gory Edit\\u00e9d\"));\n\t\tselenium.clickAt(\"//tr[4]/td[2]/a[1]/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory Edit\\u00e9d\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"T\\u00e9st Subcat\\u00e9gory\"));\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"S\\u00e9cond T\\u00e9st Subcat\\u00e9gory\"));\n\t\tassertTrue(selenium.isTextPresent(\"T\\u00e9st M\\u00e9ssag\\u00e9 Edited\"));\n\t\tassertTrue(selenium.isTextPresent(\"RE: T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t\tselenium.clickAt(\"link=exact:RE: T\\u00e9st M\\u00e9ssag\\u00e9\",\n\t\t\tRuntimeVariables.replace(\"exact:RE: T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"This is a t\\u00e9st r\\u00e9ply m\\u00e9ssag\\u00e9!\"));\n\t\tassertTrue(selenium.isTextPresent(\"This is a second reply message.\"));\n\t\tassertTrue(selenium.isTextPresent(\"This is a third reply message.\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Message Boards\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"Sujr\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"Moved to Sujr\"));\n\t}","commit_id":"279e7c8753f7bcf59f474663ed888c35fba940da","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeleteMessage() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sujr\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t\tselenium.clickAt(\"link=Moved to Sujr\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Trust and paths will be straightened.\"));\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"This m\\u00e9ssag\\u00e9 will b\\u00e9 d\\u00e9l\\u00e9t\\u00e9d!\"));\n\t}","id":50734,"modified_method":"public void testDeleteMessage() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"Sujr\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/a\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.clickAt(\"link=Moved to Sujr\",\n\t\t\tRuntimeVariables.replace(\"Moved to Sujr\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='thread-body']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Trust and paths will be straightened.\"),\n\t\t\tselenium.getText(\"//div[@class='thread-body']\"));\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"This m\\u00e9ssag\\u00e9 will b\\u00e9 d\\u00e9l\\u00e9t\\u00e9d!\"));\n\t}","commit_id":"279e7c8753f7bcf59f474663ed888c35fba940da","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditCategory() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[5]/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"_162_name\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gor Edit\\u00e9d\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_162_name\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory Edit\\u00e9d\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_162_description\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This is a t\\u00e9st cat\\u00e9gory edited!\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"T\\u00e9st Cat\\u00e9gory Edit\\u00e9d\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"This is a t\\u00e9st cat\\u00e9gory edited!\"));\n\t}","id":50735,"modified_method":"public void testEditCategory() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//tr[4]/td[6]/span/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"//input[@id='_162_name']\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gor Edit\\u00e9d\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_162_name']\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory Edit\\u00e9d\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_162_description']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This is a t\\u00e9st cat\\u00e9gory edited!\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isTextPresent(\"T\\u00e9st Cat\\u00e9gory Edit\\u00e9d\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"This is a t\\u00e9st cat\\u00e9gory edited!\"));\n\t}","commit_id":"279e7c8753f7bcf59f474663ed888c35fba940da","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditMessage() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=T\\u00e9st M\\u00e9ssag\\u00e9\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Edit\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"_162_subject\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st M\\u00e9ssag\\u00e9 Edited\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_162_subject\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st M\\u00e9ssag\\u00e9 Edited\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_162_textArea\",\n\t\t\tRuntimeVariables.replace(\"This is edited test M\\u00e9ssag\\u00e9!\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Publish']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"T\\u00e9st M\\u00e9ssag\\u00e9 Edited\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"This is edited test M\\u00e9ssag\\u00e9!\"));\n\t}","id":50736,"modified_method":"public void testEditMessage() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//tr[4]/td[2]/a[1]/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory Edit\\u00e9d\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=T\\u00e9st M\\u00e9ssag\\u00e9\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Edit\", RuntimeVariables.replace(\"Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"//input[@id='_162_subject']\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st M\\u00e9ssag\\u00e9 Edited\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_162_subject']\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st M\\u00e9ssag\\u00e9 Edited\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_162_editor']\",\n\t\t\tRuntimeVariables.replace(\"This is edited test M\\u00e9ssag\\u00e9!\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isTextPresent(\"T\\u00e9st M\\u00e9ssag\\u00e9 Edited\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"This is edited test M\\u00e9ssag\\u00e9! \"));\n\t}","commit_id":"279e7c8753f7bcf59f474663ed888c35fba940da","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testImportLAR() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Import\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_86_importFileName\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portal\\\\controlpanel\\\\messageboards\\\\dependencies\\\\Message_Boards-Selenium.portlet.lar\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_86_DELETE_PORTLET_DATACheckbox\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"_86_PORTLET_DATACheckbox\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Import']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t}","id":50737,"modified_method":"public void testImportLAR() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//menu/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Export / Import\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Import\", RuntimeVariables.replace(\"Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_86_importFileName']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portal\\\\controlpanel\\\\messageboards\\\\dependencies\\\\Message_Boards-Selenium.portlet.lar\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_DELETE_PORTLET_DATACheckbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_86_DELETE_PORTLET_DATACheckbox']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Delete portlet data before importing Checkbox\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_DELETE_PORTLET_DATACheckbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_PORTLET_DATACheckbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_86_PORTLET_DATACheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Data Checkbox\"));\n\t\tassertTrue(selenium.isChecked(\"//input[@id='_86_PORTLET_DATACheckbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Import']\",\n\t\t\tRuntimeVariables.replace(\"Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","commit_id":"279e7c8753f7bcf59f474663ed888c35fba940da","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testMoveThread() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory\"),\n\t\t\t\t\tselenium.getText(\"//tr[4]/td[2]/a[1]/strong\"));\n\t\t\t\tselenium.clickAt(\"//tr[4]/td[2]/a[1]/strong\",\n\t\t\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"This m\\u00e9ssag\\u00e9 will b\\u00e9 d\\u00e9l\\u00e9t\\u00e9d!\"));\n\t\t\t\tselenium.clickAt(\"link=Move Thread\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"_162_addExplanationPostCheckbox\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"_162_subject\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.typeKeys(\"_162_subject\",\n\t\t\t\t\tRuntimeVariables.replace(\"Moved to Sujr\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"_162_subject\",\n\t\t\t\t\tRuntimeVariables.replace(\"Moved to Sujr\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//td[@id='cke_contents__162_editor']/iframe\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.selectFrame(\n\t\t\t\t\t\"//td[@id='cke_contents__162_editor']/iframe\");\n\t\t\t\tselenium.type(\"//body\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"Trust and paths will be straightened.\"));\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Select']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPopUp(\"category\",\n\t\t\t\t\tRuntimeVariables.replace(\"30000\"));\n\t\t\t\tselenium.selectWindow(\"category\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean CategoriesPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Categories\");\n\n\t\t\t\tif (!CategoriesPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Categories\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 2:\n\t\t\t\tselenium.click(\"//input[@value='Choose']\");\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tassertTrue(selenium.isElementPresent(\"link=Sujr\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Move Thread']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertTrue(selenium.isElementPresent(\"link=Sujr\"));\n\t\t\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\t\t\"link=T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\"));\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"This m\\u00e9ssag\\u00e9 will b\\u00e9 d\\u00e9l\\u00e9t\\u00e9d!\"));\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Trust and paths will be straightened.\"));\n\t\t\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\t\t\"link=T\\u00e9st Subcat\\u00e9gory\"));\n\t\t\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\t\t\"link=T\\u00e9st Cat\\u00e9gory\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":50738,"modified_method":"public void testMoveThread() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//tr[4]/td[2]/a[1]/strong\",\n\t\t\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//a/strong\",\n\t\t\t\t\tRuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//a/strong\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"S\\u00e9cond T\\u00e9st Subcat\\u00e9gory\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"This m\\u00e9ssag\\u00e9 will b\\u00e9 d\\u00e9l\\u00e9t\\u00e9d!\"));\n\t\t\t\tselenium.clickAt(\"link=Move Thread\",\n\t\t\t\t\tRuntimeVariables.replace(\"Move Thread\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@id='_162_addExplanationPostCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Add post explanation.\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//input[@id='_162_subject']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.typeKeys(\"//input[@id='_162_subject']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Moved to Sujr\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@id='_162_subject']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Moved to Sujr\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//textarea[@id='_162_editor']\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"Trust and paths will be straightened.\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Select']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\t\t\tselenium.waitForPopUp(\"category\",\n\t\t\t\t\tRuntimeVariables.replace(\"30000\"));\n\t\t\t\tselenium.selectWindow(\"category\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean CategoriesPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Categories\");\n\n\t\t\t\tif (!CategoriesPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Categories\",\n\t\t\t\t\tRuntimeVariables.replace(\"Categories\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 2:\n\t\t\t\tselenium.click(\"//input[@value='Choose']\");\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tassertTrue(selenium.isElementPresent(\"link=Sujr\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Move Thread']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Move Thread\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertTrue(selenium.isElementPresent(\"link=Sujr\"));\n\t\t\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\t\t\"link=T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\"));\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"This m\\u00e9ssag\\u00e9 will b\\u00e9 d\\u00e9l\\u00e9t\\u00e9d!\"));\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Trust and paths will be straightened.\"));\n\t\t\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\t\t\"link=T\\u00e9st Subcat\\u00e9gory\"));\n\t\t\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\t\t\"link=T\\u00e9st Cat\\u00e9gory\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"279e7c8753f7bcf59f474663ed888c35fba940da","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testRecentPosts() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Recent Posts\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"link=T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"link=RE: T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"This m\\u00e9ssag\\u00e9 will b\\u00e9 d\\u00e9l\\u00e9t\\u00e9d!\"));\n\t}","id":50739,"modified_method":"public void testRecentPosts() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Recent Posts\",\n\t\t\tRuntimeVariables.replace(\"Recent Posts\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"link=T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"link=RE: T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"This m\\u00e9ssag\\u00e9 will b\\u00e9 d\\u00e9l\\u00e9t\\u00e9d!\"));\n\t}","commit_id":"279e7c8753f7bcf59f474663ed888c35fba940da","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSearch() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_162_keywords1\", RuntimeVariables.replace(\"T\\u00e9st\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_162_keywords1\", RuntimeVariables.replace(\"T\\u00e9st\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_162_keywords1\", RuntimeVariables.replace(\"T\\u00e9st\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t}","id":50740,"modified_method":"public void testSearch() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_162_keywords1']\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_162_keywords1']\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_162_keywords1']\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t}","commit_id":"279e7c8753f7bcf59f474663ed888c35fba940da","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSplitThread() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=T\\u00e9st M\\u00e9ssag\\u00e9\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Split Thread\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Click OK to create a new thread with the following messages.\"));\n\t\tselenium.clickAt(\"//input[@value='OK']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"This is a t\\u00e9st m\\u00e9ssag\\u00e9!\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"This is a t\\u00e9st r\\u00e9ply m\\u00e9ssag\\u00e9!\"));\n\t\tassertTrue(selenium.isTextPresent(\"This is a second reply message.\"));\n\t\tassertTrue(selenium.isTextPresent(\"This is a third reply message.\"));\n\t\tselenium.clickAt(\"link=T\\u00e9st Subcat\\u00e9gory\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"link=RE: T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t}","id":50741,"modified_method":"public void testSplitThread() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=T\\u00e9st M\\u00e9ssag\\u00e9\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Split Thread\",\n\t\t\tRuntimeVariables.replace(\"Split Thread\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Click OK to create a new thread with the following messages.\"));\n\t\tselenium.clickAt(\"//input[@value='OK']\", RuntimeVariables.replace(\"OK\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"This is a t\\u00e9st m\\u00e9ssag\\u00e9!\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"This is a t\\u00e9st r\\u00e9ply m\\u00e9ssag\\u00e9!\"));\n\t\tassertTrue(selenium.isTextPresent(\"This is a second reply message.\"));\n\t\tassertTrue(selenium.isTextPresent(\"This is a third reply message.\"));\n\t\tselenium.clickAt(\"link=T\\u00e9st Subcat\\u00e9gory\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"link=RE: T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t}","commit_id":"279e7c8753f7bcf59f474663ed888c35fba940da","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownMBCategoryCP() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean category1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!category1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[5]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean category2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!category2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[5]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean category3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!category3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[5]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean category4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!category4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[5]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean category5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!category5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[5]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":50742,"modified_method":"public void testTearDownMBCategoryCP() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean category1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[6]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!category1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[6]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean category2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[6]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!category2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[6]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean category3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[6]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!category3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[6]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean category4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[6]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!category4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[6]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean category5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[6]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!category5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[6]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"279e7c8753f7bcf59f474663ed888c35fba940da","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWikiPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=All Pages\", RuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Page']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This page does not exist yet. Use the form below to create it.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tselenium.type(\"//input[@id='_36_title']\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Title\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_36_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__36_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__36_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_36_editor' and @style='display: none;']\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//td[@id='cke_contents__36_editor']/iframe\"));\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__36_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"Wiki Page Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Submit for Publication']\",\n\t\t\tRuntimeVariables.replace(\"Submit for Publication\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertFalse(selenium.isTextPresent(\"Wiki Page Title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Wiki Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Draft Pages\",\n\t\t\tRuntimeVariables.replace(\"Draft Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Pending Approval\"),\n\t\t\tselenium.getText(\"//div/div/h2\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Pending (Review)\"),\n\t\t\tselenium.getText(\"//span[@class='workflow-status']/strong\"));\n\t}","id":50743,"modified_method":"public void testAddWikiPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=All Pages\", RuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Page']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This page does not exist yet. Use the form below to create it.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tselenium.type(\"//input[@id='_36_title']\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Title\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[contains(@class,'cke_button cke_button__unlink') and contains(@class,' cke_button_disabled')]\");\n\t\tselenium.waitForVisible(\"//iframe[contains(@title,'Rich Text Editor')]\");\n\t\tselenium.typeFrame(\"//iframe[contains(@title,'Rich Text Editor')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Content\"));\n\t\tselenium.clickAt(\"//input[@value='Submit for Publication']\",\n\t\t\tRuntimeVariables.replace(\"Submit for Publication\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertFalse(selenium.isTextPresent(\"Wiki Page Title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Wiki Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Draft Pages\",\n\t\t\tRuntimeVariables.replace(\"Draft Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Pending Approval\"),\n\t\t\tselenium.getText(\"//div/div/h2\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Pending (Review)\"),\n\t\t\tselenium.getText(\"//span[@class='workflow-status']/strong\"));\n\t}","commit_id":"dd2908c1475faad74e8fb8320730c3cf54ba885b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWikiPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=All Pages\", RuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Page']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This page does not exist yet. Use the form below to create it.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tselenium.type(\"//input[@id='_36_title']\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Title\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_36_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__36_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__36_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_36_editor' and @style='display: none;']\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//td[@id='cke_contents__36_editor']/iframe\"));\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__36_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"Wiki Page Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Submit for Publication']\",\n\t\t\tRuntimeVariables.replace(\"Submit for Publication\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertFalse(selenium.isTextPresent(\"Wiki Page Title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Wiki Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Draft Pages\",\n\t\t\tRuntimeVariables.replace(\"Draft Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Pending Approval\"),\n\t\t\tselenium.getText(\"//div/div/h2\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Pending (Review)\"),\n\t\t\tselenium.getText(\"//span[@class='workflow-status']/strong\"));\n\t}","id":50744,"modified_method":"public void testAddWikiPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=All Pages\", RuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Page']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This page does not exist yet. Use the form below to create it.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tselenium.type(\"//input[@id='_36_title']\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Title\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[contains(@class,'cke_button cke_button__unlink') and contains(@class,' cke_button_disabled')]\");\n\t\tselenium.waitForVisible(\"//iframe[contains(@title,'Rich Text Editor')]\");\n\t\tselenium.typeFrame(\"//iframe[contains(@title,'Rich Text Editor')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Content\"));\n\t\tselenium.clickAt(\"//input[@value='Submit for Publication']\",\n\t\t\tRuntimeVariables.replace(\"Submit for Publication\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertFalse(selenium.isTextPresent(\"Wiki Page Title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Wiki Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Draft Pages\",\n\t\t\tRuntimeVariables.replace(\"Draft Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Pending Approval\"),\n\t\t\tselenium.getText(\"//div/div/h2\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Pending (Review)\"),\n\t\t\tselenium.getText(\"//span[@class='workflow-status']/strong\"));\n\t}","commit_id":"dd2908c1475faad74e8fb8320730c3cf54ba885b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWikiPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=All Pages\", RuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Page']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This page does not exist yet. Use the form below to create it.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tselenium.type(\"//input[@id='_36_title']\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Title\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_36_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__36_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__36_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_36_editor' and @style='display: none;']\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//td[@id='cke_contents__36_editor']/iframe\"));\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__36_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"Wiki Page Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Submit for Publication']\",\n\t\t\tRuntimeVariables.replace(\"Submit for Publication\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertFalse(selenium.isTextPresent(\"Wiki Page Title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Wiki Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Draft Pages\",\n\t\t\tRuntimeVariables.replace(\"Draft Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Pending Approval\"),\n\t\t\tselenium.getText(\"//div/div/h2\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Pending (Review)\"),\n\t\t\tselenium.getText(\"//span[@class='workflow-status']/strong\"));\n\t}","id":50745,"modified_method":"public void testAddWikiPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=All Pages\", RuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Page']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This page does not exist yet. Use the form below to create it.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tselenium.type(\"//input[@id='_36_title']\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Title\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[contains(@class,'cke_button cke_button__unlink') and contains(@class,' cke_button_disabled')]\");\n\t\tselenium.waitForVisible(\"//iframe[contains(@title,'Rich Text Editor')]\");\n\t\tselenium.typeFrame(\"//iframe[contains(@title,'Rich Text Editor')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Content\"));\n\t\tselenium.type(\"//input[@id='_36_title']\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Title\"));\n\t\tselenium.clickAt(\"//input[@value='Submit for Publication']\",\n\t\t\tRuntimeVariables.replace(\"Submit for Publication\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertFalse(selenium.isTextPresent(\"Wiki Page Title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Wiki Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Draft Pages\",\n\t\t\tRuntimeVariables.replace(\"Draft Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Pending Approval\"),\n\t\t\tselenium.getText(\"//div/div/h2\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Pending (Review)\"),\n\t\t\tselenium.getText(\"//span[@class='workflow-status']/strong\"));\n\t}","commit_id":"dd2908c1475faad74e8fb8320730c3cf54ba885b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testApproveWikiPageActions() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=My Workflow Tasks\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Review\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//td[5]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pending tasks assigned to your roles.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-menu-list unstyled']/ul/li[contains(.,'Approve')]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Approve\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-menu-list unstyled']/ul/li[contains(.,'Approve')]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-menu-list unstyled']/ul/li[contains(.,'Approve')]/a\",\n\t\t\tRuntimeVariables.replace(\"Approve\"));\n\t\tselenium.waitForVisible(\"//div[3]/span/span/button\");\n\t\tassertEquals(RuntimeVariables.replace(\"OK\"),\n\t\t\tselenium.getText(\"//div[3]/span/span/button\"));\n\t\tselenium.clickAt(\"//div[3]/span/span/button\",\n\t\t\tRuntimeVariables.replace(\"OK\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pending tasks assigned to you.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-info'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pending tasks assigned to your roles.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-info'])[2]\"));\n\t\tselenium.clickAt(\"link=Completed\", RuntimeVariables.replace(\"Completed\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Review\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//td[5]/a\"));\n\t}","id":50746,"modified_method":"public void testApproveWikiPageActions() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=My Workflow Tasks\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Review\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//td[5]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pending tasks assigned to your roles.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-menu-list unstyled']/ul/li[contains(.,'Approve')]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Approve\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-menu-list unstyled']/ul/li[contains(.,'Approve')]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-menu-list unstyled']/ul/li[contains(.,'Approve')]/a\",\n\t\t\tRuntimeVariables.replace(\"Approve\"));\n\t\tselenium.waitForVisible(\"//div[3]/span/span/button\");\n\t\tassertEquals(RuntimeVariables.replace(\"OK\"),\n\t\t\tselenium.getText(\"//div[3]/span/span/button\"));\n\t\tselenium.clickAt(\"//div[3]/span/span/button\",\n\t\t\tRuntimeVariables.replace(\"OK\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pending tasks assigned to you.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-info'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pending tasks assigned to your roles.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-info'])[3]\"));\n\t\tselenium.clickAt(\"link=Completed\", RuntimeVariables.replace(\"Completed\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Review\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//td[5]/a\"));\n\t}","commit_id":"dd2908c1475faad74e8fb8320730c3cf54ba885b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssignToMeWikiPageActions() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=My Workflow Tasks\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pending tasks assigned to you.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Review\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//td[5]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-menu-list unstyled']/ul/li[contains(.,'Assign to Me')]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Assign to Me\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-menu-list unstyled']/ul/li[contains(.,'Assign to Me')]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-menu-list unstyled']/ul/li[contains(.,'Assign to Me')]/a\",\n\t\t\tRuntimeVariables.replace(\"Assign to Me\"));\n\t\tselenium.waitForVisible(\"//div[3]/span/span/button\");\n\t\tassertEquals(RuntimeVariables.replace(\"OK\"),\n\t\t\tselenium.getText(\"//div[3]/span/span/button\"));\n\t\tselenium.clickAt(\"//div[3]/span/span/button\",\n\t\t\tRuntimeVariables.replace(\"OK\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Review\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//td[5]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pending tasks assigned to your roles.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t}","id":50747,"modified_method":"public void testAssignToMeWikiPageActions() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"//li[@id='_145_mySites']/a/span\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=My Workflow Tasks\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pending tasks assigned to you.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Review\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//td[5]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-menu-list unstyled']/ul/li[contains(.,'Assign to Me')]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Assign to Me\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-menu-list unstyled']/ul/li[contains(.,'Assign to Me')]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-menu-list unstyled']/ul/li[contains(.,'Assign to Me')]/a\",\n\t\t\tRuntimeVariables.replace(\"Assign to Me\"));\n\t\tselenium.waitForVisible(\"//div[3]/span/span/button\");\n\t\tassertEquals(RuntimeVariables.replace(\"OK\"),\n\t\t\tselenium.getText(\"//div[3]/span/span/button\"));\n\t\tselenium.clickAt(\"//div[3]/span/span/button\",\n\t\t\tRuntimeVariables.replace(\"OK\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Review\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//td[5]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pending tasks assigned to your roles.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t}","commit_id":"dd2908c1475faad74e8fb8320730c3cf54ba885b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testGuest_ViewWikiPageAssignedToMe() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Wiki Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=All Pages\", RuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"Wiki Page Title\"));\n\t\tselenium.clickAt(\"link=Draft Pages\",\n\t\t\tRuntimeVariables.replace(\"Draft Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Pending Approval\"),\n\t\t\tselenium.getText(\"//div/div/h2\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pages submitted by you pending approval.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-info'])[2]\"));\n\t\tassertFalse(selenium.isTextPresent(\"Wiki Page Title\"));\n\t}","id":50748,"modified_method":"public void testGuest_ViewWikiPageAssignedToMe() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Wiki Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=All Pages\", RuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"Wiki Page Title\"));\n\t\tselenium.clickAt(\"link=Draft Pages\",\n\t\t\tRuntimeVariables.replace(\"Draft Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Pending Approval\"),\n\t\t\tselenium.getText(\"//div/div/h2\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pages submitted by you pending approval.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-info'])[3]\"));\n\t\tassertFalse(selenium.isTextPresent(\"Wiki Page Title\"));\n\t}","commit_id":"dd2908c1475faad74e8fb8320730c3cf54ba885b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testGuest_ViewWikiPageAssignedToMyRoles()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Wiki Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=All Pages\", RuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"Wiki Page Title\"));\n\t\tselenium.clickAt(\"link=Draft Pages\",\n\t\t\tRuntimeVariables.replace(\"Draft Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Pending Approval\"),\n\t\t\tselenium.getText(\"//div/div/h2\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pages submitted by you pending approval.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-info'])[2]\"));\n\t\tassertFalse(selenium.isTextPresent(\"Wiki Page Title\"));\n\t}","id":50749,"modified_method":"public void testGuest_ViewWikiPageAssignedToMyRoles()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Wiki Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=All Pages\", RuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"Wiki Page Title\"));\n\t\tselenium.clickAt(\"link=Draft Pages\",\n\t\t\tRuntimeVariables.replace(\"Draft Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Pending Approval\"),\n\t\t\tselenium.getText(\"//div/div/h2\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pages submitted by you pending approval.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-info'])[3]\"));\n\t\tassertFalse(selenium.isTextPresent(\"Wiki Page Title\"));\n\t}","commit_id":"dd2908c1475faad74e8fb8320730c3cf54ba885b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testGuest_ViewWikiPageCompleted() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Wiki Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=All Pages\", RuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//tr[4]/td[1]/a\"));\n\t\tselenium.clickAt(\"//tr[4]/td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertFalse(selenium.isTextPresent(\"Pending (Review)\"));\n\t\tselenium.clickAt(\"link=Draft Pages\",\n\t\t\tRuntimeVariables.replace(\"Draft Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Pending Approval\"),\n\t\t\tselenium.getText(\"//div/div/h2\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pages submitted by you pending approval.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-info'])[2]\"));\n\t\tassertFalse(selenium.isTextPresent(\"Wiki Page Title\"));\n\t}","id":50750,"modified_method":"public void testGuest_ViewWikiPageCompleted() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Wiki Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=All Pages\", RuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tselenium.waitForVisible(\"//tr[4]/td[1]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//tr[4]/td[1]/a\"));\n\t\tselenium.clickAt(\"//tr[4]/td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertFalse(selenium.isTextPresent(\"Pending (Review)\"));\n\t\tselenium.clickAt(\"link=Draft Pages\",\n\t\t\tRuntimeVariables.replace(\"Draft Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Pending Approval\"),\n\t\t\tselenium.getText(\"//div/div/h2\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pages submitted by you pending approval.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-info'])[3]\"));\n\t\tassertFalse(selenium.isTextPresent(\"Wiki Page Title\"));\n\t}","commit_id":"dd2908c1475faad74e8fb8320730c3cf54ba885b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownWikiNode() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\t\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Wiki\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//ul[@class='category-portlets']/li[contains(.,'Wiki')]/a\"));\n\t\t\t\tselenium.clickAt(\"//ul[@class='category-portlets']/li[contains(.,'Wiki')]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Wiki\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean wikiNode1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"xPath=(//span[@title='Actions']/ul/li/strong/a/span)[2]\");\n\n\t\t\t\tif (!wikiNode1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"xPath=(//span[@title='Actions']/ul/li/strong/a/span)[2]\"));\n\t\t\t\tselenium.clickAt(\"xPath=(//span[@title='Actions']/ul/li/strong/a/span)[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-menu-list unstyled']/ul/li/a[contains(.,'Move to the Recycle Bin')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Move to the Recycle Bin\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-menu-list unstyled']/ul/li/a[contains(.,'Move to the Recycle Bin')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-menu-list unstyled']/ul/li/a[contains(.,'Move to the Recycle Bin')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Move to the Recycle Bin\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"The selected item was moved to the Recycle Bin. Undo\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='portlet-msg-success taglib-trash-undo']\"));\n\n\t\t\t\tboolean wikiNode2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"xPath=(//span[@title='Actions']/ul/li/strong/a/span)[2]\");\n\n\t\t\t\tif (!wikiNode2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"xPath=(//span[@title='Actions']/ul/li/strong/a/span)[2]\"));\n\t\t\t\tselenium.clickAt(\"xPath=(//span[@title='Actions']/ul/li/strong/a/span)[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-menu-list unstyled']/ul/li/a[contains(.,'Move to the Recycle Bin')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Move to the Recycle Bin\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-menu-list unstyled']/ul/li/a[contains(.,'Move to the Recycle Bin')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-menu-list unstyled']/ul/li/a[contains(.,'Move to the Recycle Bin')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Move to the Recycle Bin\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"The selected item was moved to the Recycle Bin. Undo\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='portlet-msg-success taglib-trash-undo']\"));\n\n\t\t\t\tboolean wikiNode3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"xPath=(//span[@title='Actions']/ul/li/strong/a/span)[2]\");\n\n\t\t\t\tif (!wikiNode3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"xPath=(//span[@title='Actions']/ul/li/strong/a/span)[2]\"));\n\t\t\t\tselenium.clickAt(\"xPath=(//span[@title='Actions']/ul/li/strong/a/span)[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-menu-list unstyled']/ul/li/a[contains(.,'Move to the Recycle Bin')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Move to the Recycle Bin\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-menu-list unstyled']/ul/li/a[contains(.,'Move to the Recycle Bin')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-menu-list unstyled']/ul/li/a[contains(.,'Move to the Recycle Bin')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Move to the Recycle Bin\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"The selected item was moved to the Recycle Bin. Undo\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='portlet-msg-success taglib-trash-undo']\"));\n\n\t\t\t\tboolean wikiNode4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"xPath=(//span[@title='Actions']/ul/li/strong/a/span)[2]\");\n\n\t\t\t\tif (!wikiNode4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"xPath=(//span[@title='Actions']/ul/li/strong/a/span)[2]\"));\n\t\t\t\tselenium.clickAt(\"xPath=(//span[@title='Actions']/ul/li/strong/a/span)[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-menu-list unstyled']/ul/li/a[contains(.,'Move to the Recycle Bin')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Move to the Recycle Bin\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-menu-list unstyled']/ul/li/a[contains(.,'Move to the Recycle Bin')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-menu-list unstyled']/ul/li/a[contains(.,'Move to the Recycle Bin')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Move to the Recycle Bin\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"The selected item was moved to the Recycle Bin. Undo\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='portlet-msg-success taglib-trash-undo']\"));\n\n\t\t\t\tboolean wikiNode5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"xPath=(//span[@title='Actions']/ul/li/strong/a/span)[2]\");\n\n\t\t\t\tif (!wikiNode5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"xPath=(//span[@title='Actions']/ul/li/strong/a/span)[2]\"));\n\t\t\t\tselenium.clickAt(\"xPath=(//span[@title='Actions']/ul/li/strong/a/span)[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-menu-list unstyled']/ul/li/a[contains(.,'Move to the Recycle Bin')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Move to the Recycle Bin\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-menu-list unstyled']/ul/li/a[contains(.,'Move to the Recycle Bin')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-menu-list unstyled']/ul/li/a[contains(.,'Move to the Recycle Bin')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Move to the Recycle Bin\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"The selected item was moved to the Recycle Bin. Undo\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='portlet-msg-success taglib-trash-undo']\"));\n\n\t\t\tcase 2:\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-menu-list unstyled']/ul/li/a[contains(.,'Move to the Recycle Bin')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Move to the Recycle Bin\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-menu-list unstyled']/ul/li/a[contains(.,'Move to the Recycle Bin')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-menu-list unstyled']/ul/li/a[contains(.,'Move to the Recycle Bin')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Move to the Recycle Bin\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\t\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Recycle Bin\",\n\t\t\t\t\tRuntimeVariables.replace(\"Recycle Bin\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean wikiNodePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\");\n\n\t\t\t\tif (!wikiNodePresent) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Empty the Recycle Bin\"),\n\t\t\t\t\tselenium.getText(\"//a[@id='_182_empty']\"));\n\t\t\t\tselenium.clickAt(\"//a[@id='_182_empty']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Empty the Recycle Bin\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.waitForConfirmation(\n\t\t\t\t\t\"Are you sure you want to empty the Recycle Bin?\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 7:\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"The Recycle Bin is empty.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":50751,"modified_method":"public void testTearDownWikiNode() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\t\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Wiki\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//ul[@class='category-portlets']/li[contains(.,'Wiki')]/a\"));\n\t\t\t\tselenium.clickAt(\"//ul[@class='category-portlets']/li[contains(.,'Wiki')]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Wiki\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean wikiNode1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"xPath=(//span[@title='Actions']/ul/li/strong/a/span)[2]\");\n\n\t\t\t\tif (!wikiNode1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"xPath=(//span[@title='Actions']/ul/li/strong/a/span)[2]\"));\n\t\t\t\tselenium.clickAt(\"xPath=(//span[@title='Actions']/ul/li/strong/a/span)[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-menu-list unstyled']/ul/li/a[contains(.,'Move to the Recycle Bin')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Move to the Recycle Bin\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-menu-list unstyled']/ul/li/a[contains(.,'Move to the Recycle Bin')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-menu-list unstyled']/ul/li/a[contains(.,'Move to the Recycle Bin')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Move to the Recycle Bin\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"The selected item was moved to the Recycle Bin. Undo\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='portlet-msg-success taglib-trash-undo']\"));\n\n\t\t\t\tboolean wikiNode2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"xPath=(//span[@title='Actions']/ul/li/strong/a/span)[2]\");\n\n\t\t\t\tif (!wikiNode2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"xPath=(//span[@title='Actions']/ul/li/strong/a/span)[2]\"));\n\t\t\t\tselenium.clickAt(\"xPath=(//span[@title='Actions']/ul/li/strong/a/span)[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-menu-list unstyled']/ul/li/a[contains(.,'Move to the Recycle Bin')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Move to the Recycle Bin\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-menu-list unstyled']/ul/li/a[contains(.,'Move to the Recycle Bin')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-menu-list unstyled']/ul/li/a[contains(.,'Move to the Recycle Bin')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Move to the Recycle Bin\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"The selected item was moved to the Recycle Bin. Undo\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='portlet-msg-success taglib-trash-undo']\"));\n\n\t\t\t\tboolean wikiNode3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"xPath=(//span[@title='Actions']/ul/li/strong/a/span)[2]\");\n\n\t\t\t\tif (!wikiNode3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"xPath=(//span[@title='Actions']/ul/li/strong/a/span)[2]\"));\n\t\t\t\tselenium.clickAt(\"xPath=(//span[@title='Actions']/ul/li/strong/a/span)[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-menu-list unstyled']/ul/li/a[contains(.,'Move to the Recycle Bin')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Move to the Recycle Bin\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-menu-list unstyled']/ul/li/a[contains(.,'Move to the Recycle Bin')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-menu-list unstyled']/ul/li/a[contains(.,'Move to the Recycle Bin')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Move to the Recycle Bin\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"The selected item was moved to the Recycle Bin. Undo\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='portlet-msg-success taglib-trash-undo']\"));\n\n\t\t\t\tboolean wikiNode4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"xPath=(//span[@title='Actions']/ul/li/strong/a/span)[2]\");\n\n\t\t\t\tif (!wikiNode4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"xPath=(//span[@title='Actions']/ul/li/strong/a/span)[2]\"));\n\t\t\t\tselenium.clickAt(\"xPath=(//span[@title='Actions']/ul/li/strong/a/span)[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-menu-list unstyled']/ul/li/a[contains(.,'Move to the Recycle Bin')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Move to the Recycle Bin\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-menu-list unstyled']/ul/li/a[contains(.,'Move to the Recycle Bin')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-menu-list unstyled']/ul/li/a[contains(.,'Move to the Recycle Bin')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Move to the Recycle Bin\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"The selected item was moved to the Recycle Bin. Undo\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='portlet-msg-success taglib-trash-undo']\"));\n\n\t\t\t\tboolean wikiNode5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"xPath=(//span[@title='Actions']/ul/li/strong/a/span)[2]\");\n\n\t\t\t\tif (!wikiNode5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"xPath=(//span[@title='Actions']/ul/li/strong/a/span)[2]\"));\n\t\t\t\tselenium.clickAt(\"xPath=(//span[@title='Actions']/ul/li/strong/a/span)[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-menu-list unstyled']/ul/li/a[contains(.,'Move to the Recycle Bin')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Move to the Recycle Bin\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-menu-list unstyled']/ul/li/a[contains(.,'Move to the Recycle Bin')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-menu-list unstyled']/ul/li/a[contains(.,'Move to the Recycle Bin')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Move to the Recycle Bin\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"The selected item was moved to the Recycle Bin. Undo\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='portlet-msg-success taglib-trash-undo']\"));\n\n\t\t\tcase 2:\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Main\"),\n\t\t\t\t\tselenium.getText(\"//tr/td/a[contains(.,'Main')]\"));\n\t\t\t\tselenium.clickAt(\"//tr/td/a[contains(.,'Main')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Main\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean wikiPage1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"xPath=(//span[@title='Actions']/ul/li/strong/a/span)[2]\");\n\n\t\t\t\tif (!wikiPage1Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"xPath=(//span[@title='Actions']/ul/li/strong/a/span)[2]\"));\n\t\t\t\tselenium.clickAt(\"xPath=(//span[@title='Actions']/ul/li/strong/a/span)[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Move to the Recycle Bin')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Move to the Recycle Bin\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Move to the Recycle Bin')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Move to the Recycle Bin')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Move to the Recycle Bin\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"The selected item was moved to the Recycle Bin. Undo\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='portlet-msg-success taglib-trash-undo']\"));\n\n\t\t\t\tboolean wikiPage2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"xPath=(//span[@title='Actions']/ul/li/strong/a/span)[2]\");\n\n\t\t\t\tif (!wikiPage2Present) {\n\t\t\t\t\tlabel = 8;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"xPath=(//span[@title='Actions']/ul/li/strong/a/span)[2]\"));\n\t\t\t\tselenium.clickAt(\"xPath=(//span[@title='Actions']/ul/li/strong/a/span)[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Move to the Recycle Bin')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Move to the Recycle Bin\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Move to the Recycle Bin')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Move to the Recycle Bin')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Move to the Recycle Bin\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"The selected item was moved to the Recycle Bin. Undo\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='portlet-msg-success taglib-trash-undo']\"));\n\n\t\t\t\tboolean wikiPage3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"xPath=(//span[@title='Actions']/ul/li/strong/a/span)[2]\");\n\n\t\t\t\tif (!wikiPage3Present) {\n\t\t\t\t\tlabel = 9;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"xPath=(//span[@title='Actions']/ul/li/strong/a/span)[2]\"));\n\t\t\t\tselenium.clickAt(\"xPath=(//span[@title='Actions']/ul/li/strong/a/span)[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Move to the Recycle Bin')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Move to the Recycle Bin\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Move to the Recycle Bin')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Move to the Recycle Bin')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Move to the Recycle Bin\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"The selected item was moved to the Recycle Bin. Undo\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='portlet-msg-success taglib-trash-undo']\"));\n\n\t\t\t\tboolean wikiPage4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"xPath=(//span[@title='Actions']/ul/li/strong/a/span)[2]\");\n\n\t\t\t\tif (!wikiPage4Present) {\n\t\t\t\t\tlabel = 10;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"xPath=(//span[@title='Actions']/ul/li/strong/a/span)[2]\"));\n\t\t\t\tselenium.clickAt(\"xPath=(//span[@title='Actions']/ul/li/strong/a/span)[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Move to the Recycle Bin')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Move to the Recycle Bin\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Move to the Recycle Bin')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Move to the Recycle Bin')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Move to the Recycle Bin\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"The selected item was moved to the Recycle Bin. Undo\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='portlet-msg-success taglib-trash-undo']\"));\n\n\t\t\t\tboolean wikiPage5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"xPath=(//span[@title='Actions']/ul/li/strong/a/span)[2]\");\n\n\t\t\t\tif (!wikiPage5Present) {\n\t\t\t\t\tlabel = 11;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"xPath=(//span[@title='Actions']/ul/li/strong/a/span)[2]\"));\n\t\t\t\tselenium.clickAt(\"xPath=(//span[@title='Actions']/ul/li/strong/a/span)[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Move to the Recycle Bin')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Move to the Recycle Bin\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Move to the Recycle Bin')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Move to the Recycle Bin')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Move to the Recycle Bin\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"The selected item was moved to the Recycle Bin. Undo\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='portlet-msg-success taglib-trash-undo']\"));\n\n\t\t\tcase 7:\n\t\t\tcase 8:\n\t\t\tcase 9:\n\t\t\tcase 10:\n\t\t\tcase 11:\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-menu-list unstyled']/ul/li/a[contains(.,'Move to the Recycle Bin')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Move to the Recycle Bin\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-menu-list unstyled']/ul/li/a[contains(.,'Move to the Recycle Bin')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-menu-list unstyled']/ul/li/a[contains(.,'Move to the Recycle Bin')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Move to the Recycle Bin\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"The selected item was moved to the Recycle Bin. Undo\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='portlet-msg-success taglib-trash-undo']\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"There are no pages.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\t\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Recycle Bin\",\n\t\t\t\t\tRuntimeVariables.replace(\"Recycle Bin\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean wikiNodePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\");\n\n\t\t\t\tif (!wikiNodePresent) {\n\t\t\t\t\tlabel = 12;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Empty the Recycle Bin\"),\n\t\t\t\t\tselenium.getText(\"//a[@id='_182_empty']\"));\n\t\t\t\tselenium.clickAt(\"//a[@id='_182_empty']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Empty the Recycle Bin\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.waitForConfirmation(\n\t\t\t\t\t\"Are you sure you want to empty the Recycle Bin?\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 12:\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"The Recycle Bin is empty.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"dd2908c1475faad74e8fb8320730c3cf54ba885b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownWorkflowConfiguration() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Workflow\", RuntimeVariables.replace(\"Workflow\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Default Configuration\",\n\t\t\tRuntimeVariables.replace(\"Default Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.User']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.User']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\"));\n\t\tselenium.clickAt(\"link=Workflow Configuration\",\n\t\t\tRuntimeVariables.replace(\"Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\"));\n\t}","id":50752,"modified_method":"public void testTearDownWorkflowConfiguration() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Workflow\", RuntimeVariables.replace(\"Workflow\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Default Configuration\",\n\t\t\tRuntimeVariables.replace(\"Default Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\",\n\t\t\tRuntimeVariables.replace(\"No Workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.User']\",\n\t\t\tRuntimeVariables.replace(\"No Workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"No Workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"No Workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\",\n\t\t\tRuntimeVariables.replace(\"No Workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"No Workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"No Workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\"));\n\t\tassertEquals(\"No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.User']\"));\n\t\tassertEquals(\"No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t\tassertEquals(\"No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\"));\n\t\tassertEquals(\"No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\"));\n\t\tassertEquals(\"No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\"));\n\t\tassertEquals(\"No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\"));\n\t\tselenium.clickAt(\"link=Workflow Configuration\",\n\t\t\tRuntimeVariables.replace(\"Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\",\n\t\t\tRuntimeVariables.replace(\"Default: No Workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"Default: No Workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"Default: No Workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\",\n\t\t\tRuntimeVariables.replace(\"Default: No Workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"Default: No Workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"Default: No Workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Default: No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\"));\n\t\tassertEquals(\"Default: No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t\tassertEquals(\"Default: No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\"));\n\t\tassertEquals(\"Default: No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\"));\n\t\tassertEquals(\"Default: No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\"));\n\t\tassertEquals(\"Default: No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\"));\n\t}","commit_id":"dd2908c1475faad74e8fb8320730c3cf54ba885b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownWorkflowConfiguration() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Workflow\", RuntimeVariables.replace(\"Workflow\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Default Configuration\",\n\t\t\tRuntimeVariables.replace(\"Default Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.User']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.User']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\"));\n\t\tselenium.clickAt(\"link=Workflow Configuration\",\n\t\t\tRuntimeVariables.replace(\"Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\"));\n\t}","id":50753,"modified_method":"public void testTearDownWorkflowConfiguration() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Workflow\", RuntimeVariables.replace(\"Workflow\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Default Configuration\",\n\t\t\tRuntimeVariables.replace(\"Default Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\",\n\t\t\tRuntimeVariables.replace(\"No Workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.User']\",\n\t\t\tRuntimeVariables.replace(\"No Workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"No Workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"No Workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\",\n\t\t\tRuntimeVariables.replace(\"No Workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"No Workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"No Workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\"));\n\t\tassertEquals(\"No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.User']\"));\n\t\tassertEquals(\"No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t\tassertEquals(\"No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\"));\n\t\tassertEquals(\"No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\"));\n\t\tassertEquals(\"No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\"));\n\t\tassertEquals(\"No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\"));\n\t\tselenium.clickAt(\"link=Workflow Configuration\",\n\t\t\tRuntimeVariables.replace(\"Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\",\n\t\t\tRuntimeVariables.replace(\"Default: No Workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"Default: No Workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"Default: No Workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\",\n\t\t\tRuntimeVariables.replace(\"Default: No Workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"Default: No Workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"Default: No Workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Default: No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\"));\n\t\tassertEquals(\"Default: No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t\tassertEquals(\"Default: No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\"));\n\t\tassertEquals(\"Default: No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\"));\n\t\tassertEquals(\"Default: No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\"));\n\t\tassertEquals(\"Default: No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\"));\n\t}","commit_id":"dd2908c1475faad74e8fb8320730c3cf54ba885b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownWorkflowConfiguration() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Workflow\", RuntimeVariables.replace(\"Workflow\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Default Configuration\",\n\t\t\tRuntimeVariables.replace(\"Default Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.User']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.User']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\"));\n\t\tselenium.clickAt(\"link=Workflow Configuration\",\n\t\t\tRuntimeVariables.replace(\"Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\"));\n\t}","id":50754,"modified_method":"public void testTearDownWorkflowConfiguration() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Workflow\", RuntimeVariables.replace(\"Workflow\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Default Configuration\",\n\t\t\tRuntimeVariables.replace(\"Default Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\",\n\t\t\tRuntimeVariables.replace(\"No Workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.User']\",\n\t\t\tRuntimeVariables.replace(\"No Workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"No Workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"No Workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\",\n\t\t\tRuntimeVariables.replace(\"No Workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"No Workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"No Workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\"));\n\t\tassertEquals(\"No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.User']\"));\n\t\tassertEquals(\"No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t\tassertEquals(\"No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\"));\n\t\tassertEquals(\"No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\"));\n\t\tassertEquals(\"No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\"));\n\t\tassertEquals(\"No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\"));\n\t\tselenium.clickAt(\"link=Workflow Configuration\",\n\t\t\tRuntimeVariables.replace(\"Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\",\n\t\t\tRuntimeVariables.replace(\"Default: No Workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"Default: No Workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"Default: No Workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\",\n\t\t\tRuntimeVariables.replace(\"Default: No Workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"Default: No Workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"Default: No Workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Default: No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\"));\n\t\tassertEquals(\"Default: No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t\tassertEquals(\"Default: No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\"));\n\t\tassertEquals(\"Default: No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\"));\n\t\tassertEquals(\"Default: No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\"));\n\t\tassertEquals(\"Default: No Workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\"));\n\t}","commit_id":"dd2908c1475faad74e8fb8320730c3cf54ba885b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewWikiPageAssignedToMe() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Wiki Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=All Pages\", RuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"Wiki Page Title\"));\n\t\tselenium.clickAt(\"link=Draft Pages\",\n\t\t\tRuntimeVariables.replace(\"Draft Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Pending Approval\"),\n\t\t\tselenium.getText(\"//div/div/h2\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Pending (Review)\"),\n\t\t\tselenium.getText(\"//span[@class='workflow-status']/strong\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=My Workflow Tasks\",\n\t\t\tRuntimeVariables.replace(\"My Workflow Tasks\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Pending\", RuntimeVariables.replace(\"Pending\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Review\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//td[5]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pending tasks assigned to your roles.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tselenium.clickAt(\"link=Completed\", RuntimeVariables.replace(\"Completed\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"There are no completed tasks.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t}","id":50755,"modified_method":"public void testViewWikiPageAssignedToMe() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Wiki Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=All Pages\", RuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"Wiki Page Title\"));\n\t\tselenium.clickAt(\"link=Draft Pages\",\n\t\t\tRuntimeVariables.replace(\"Draft Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Pending Approval\"),\n\t\t\tselenium.getText(\"//div/div/h2\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Pending (Review)\"),\n\t\t\tselenium.getText(\"//span[@class='workflow-status']/strong\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"//li[@id='_145_mySites']/a/span\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=My Workflow Tasks\",\n\t\t\tRuntimeVariables.replace(\"My Workflow Tasks\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Pending\", RuntimeVariables.replace(\"Pending\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Review\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//td[5]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pending tasks assigned to your roles.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tselenium.clickAt(\"link=Completed\", RuntimeVariables.replace(\"Completed\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"There are no completed tasks.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t}","commit_id":"dd2908c1475faad74e8fb8320730c3cf54ba885b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewWikiPageAssignedToMyRoles() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Wiki Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=All Pages\", RuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"Wiki Page Title\"));\n\t\tselenium.clickAt(\"link=Draft Pages\",\n\t\t\tRuntimeVariables.replace(\"Draft Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Pending Approval\"),\n\t\t\tselenium.getText(\"//div/div/h2\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Pending (Review)\"),\n\t\t\tselenium.getText(\"//span[@class='workflow-status']/strong\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=My Workflow Tasks\",\n\t\t\tRuntimeVariables.replace(\"My Workflow Tasks\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Pending\", RuntimeVariables.replace(\"Pending\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pending tasks assigned to you.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Review\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//td[5]/a\"));\n\t\tselenium.clickAt(\"link=Completed\", RuntimeVariables.replace(\"Completed\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"There are no completed tasks.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t}","id":50756,"modified_method":"public void testViewWikiPageAssignedToMyRoles() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tThread.sleep(1000);\n\t\tselenium.waitForVisible(\"link=Wiki Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"link=All Pages\");\n\t\tselenium.clickAt(\"link=All Pages\", RuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"Wiki Page Title\"));\n\t\tselenium.clickAt(\"link=Draft Pages\",\n\t\t\tRuntimeVariables.replace(\"Draft Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Pending Approval\"),\n\t\t\tselenium.getText(\"//div/div/h2\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Pending (Review)\"),\n\t\t\tselenium.getText(\"//span[@class='workflow-status']/strong\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=My Workflow Tasks\",\n\t\t\tRuntimeVariables.replace(\"My Workflow Tasks\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Pending\", RuntimeVariables.replace(\"Pending\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pending tasks assigned to you.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Review\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//td[5]/a\"));\n\t\tselenium.clickAt(\"link=Completed\", RuntimeVariables.replace(\"Completed\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"There are no completed tasks.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t}","commit_id":"dd2908c1475faad74e8fb8320730c3cf54ba885b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewWikiPageCompleted() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Wiki Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=All Pages\", RuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//tr[4]/td[1]/a\"));\n\t\tselenium.clickAt(\"//tr[4]/td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertFalse(selenium.isTextPresent(\"Pending (Review)\"));\n\t\tselenium.clickAt(\"link=Draft Pages\",\n\t\t\tRuntimeVariables.replace(\"Draft Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Pending Approval\"),\n\t\t\tselenium.getText(\"//div/div/h2\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pages submitted by you pending approval.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-info'])[2]\"));\n\t\tassertFalse(selenium.isTextPresent(\"Wiki Page Title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=My Workflow Tasks\",\n\t\t\tRuntimeVariables.replace(\"My Workflow Tasks\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Pending\", RuntimeVariables.replace(\"Pending\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pending tasks assigned to you.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-info'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pending tasks assigned to your roles.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-info'])[2]\"));\n\t\tselenium.clickAt(\"link=Completed\", RuntimeVariables.replace(\"Completed\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Review\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//td[5]/a\"));\n\t}","id":50757,"modified_method":"public void testViewWikiPageCompleted() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Wiki Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=All Pages\", RuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//tr[4]/td[1]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//tr[4]/td[1]/a\"));\n\t\tselenium.clickAt(\"//tr[4]/td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertFalse(selenium.isTextPresent(\"Pending (Review)\"));\n\t\tselenium.clickAt(\"link=Draft Pages\",\n\t\t\tRuntimeVariables.replace(\"Draft Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Pending Approval\"),\n\t\t\tselenium.getText(\"//div/div/h2\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pages submitted by you pending approval.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-info'])[3]\"));\n\t\tassertFalse(selenium.isTextPresent(\"Wiki Page Title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=My Workflow Tasks\",\n\t\t\tRuntimeVariables.replace(\"My Workflow Tasks\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Pending\", RuntimeVariables.replace(\"Pending\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pending tasks assigned to you.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-info'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pending tasks assigned to your roles.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-info'])[3]\"));\n\t\tselenium.clickAt(\"link=Completed\", RuntimeVariables.replace(\"Completed\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Review\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//td[5]/a\"));\n\t}","commit_id":"dd2908c1475faad74e8fb8320730c3cf54ba885b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddVirtualHostingCommunity() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Add\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_134_name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Virtual Hosting Communit\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Virtual Hosting Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t}","id":50758,"modified_method":"public void testAddVirtualHostingCommunity() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Add\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Custom Site\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_134_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"Virtual Hosting Communit\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"Virtual Hosting Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","commit_id":"b5e83f45b5102c458f61edcfe31707be99206719","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddVirtualHostingPrivatePage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"_134_name\",\n\t\t\t\t\tRuntimeVariables.replace(\"Virtual Hosting Community\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Private Pages\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Add Page\"),\n\t\t\t\t\tselenium.getText(\"//div/span/button[1]\"));\n\t\t\t\tselenium.clickAt(\"//div/span/button[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"_134_name_en_US\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"_134_name_en_US\",\n\t\t\t\t\tRuntimeVariables.replace(\"Private Page\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.clickAt(\"//input[@value='Add Page']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request completed successfully.\"));\n\n\t\t\t\tboolean privatePagePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li/div/div[3]/a\");\n\n\t\t\t\tif (privatePagePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"//div[2]/ul/li/div/div[1]\");\n\n\t\t\tcase 2:\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//li/ul/li/div/div[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Private Page\"),\n\t\t\t\t\tselenium.getText(\"//li/ul/li/div/div[3]/a\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":50759,"modified_method":"public void testAddVirtualHostingPrivatePage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Virtual Hosting Community\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//td[7]/span/ul/li/strong/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Manage Pages\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Private Pages\",\n\t\t\t\t\tRuntimeVariables.replace(\"Private Pages\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div/span/button[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//input[@id='_134_name_en_US']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@id='_134_name_en_US']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Private Page\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Add Page']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\t\tboolean privatePagePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li/div/div[3]/a\");\n\n\t\t\t\tif (privatePagePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"//div[3]/ul/li/div/div[1]\");\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//li/ul/li/div/div[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Private Page\"),\n\t\t\t\t\tselenium.getText(\"//li/ul/li/div/div[3]/a\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"b5e83f45b5102c458f61edcfe31707be99206719","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddVirtualHostingPublicPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"_134_name\",\n\t\t\t\t\tRuntimeVariables.replace(\"Virtual Hosting Community\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Public Pages\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Add Page\"),\n\t\t\t\t\tselenium.getText(\"//div/span/button[1]\"));\n\t\t\t\tselenium.clickAt(\"//div/span/button[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"_134_name_en_US\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"_134_name_en_US\",\n\t\t\t\t\tRuntimeVariables.replace(\"Public Page\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.clickAt(\"//input[@value='Add Page']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request completed successfully.\"));\n\n\t\t\t\tboolean publicPagePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li/div/div[3]/a\");\n\n\t\t\t\tif (publicPagePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.click(\"//div[3]/ul/li/div/div[1]\");\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//li/ul/li/div/div[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Public Page\"),\n\t\t\t\t\tselenium.getText(\"//li/ul/li/div/div[3]/a\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":50760,"modified_method":"public void testAddVirtualHostingPublicPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Virtual Hosting Community\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//td[7]/span/ul/li/strong/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Manage Pages\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Public Pages\",\n\t\t\t\t\tRuntimeVariables.replace(\"Public Pages\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div/span/button[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//input[@id='_134_name_en_US']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@id='_134_name_en_US']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Public Page\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Add Page']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\t\tboolean publicPagePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li/div/div[3]/a\");\n\n\t\t\t\tif (publicPagePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"//div[3]/ul/li/div/div[1]\");\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//li/ul/li/div/div[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Public Page\"),\n\t\t\t\t\tselenium.getText(\"//li/ul/li/div/div[3]/a\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"b5e83f45b5102c458f61edcfe31707be99206719","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertPrivatePageFriendlyURL() throws Exception {\n\t\tselenium.open(\"/group/alpha/\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"http://localhost:8080/group/alpha/\"), selenium.getLocation());\n\t\tassertEquals(RuntimeVariables.replace(\"Virtual Hosting Community\"),\n\t\t\tselenium.getText(\"//li[2]/span/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Private Page\"));\n\t\tselenium.clickAt(\"link=Private Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"http://localhost:8080/group/alpha/private-page\"),\n\t\t\tselenium.getLocation());\n\t}","id":50761,"modified_method":"public void testAssertPrivatePageFriendlyURL() throws Exception {\n\t\tselenium.open(\"/group/alpha/\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"http://localhost:8080/group/alpha/\"), selenium.getLocation());\n\t\tassertEquals(RuntimeVariables.replace(\"Virtual Hosting Community\"),\n\t\t\tselenium.getText(\"//li[2]/span/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Private Page\"));\n\t\tselenium.clickAt(\"link=Private Page\",\n\t\t\tRuntimeVariables.replace(\"Private Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"http://localhost:8080/group/alpha/private-page\"),\n\t\t\tselenium.getLocation());\n\t}","commit_id":"b5e83f45b5102c458f61edcfe31707be99206719","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertPrivatePageHostURL() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"http://www.baker.com:8080/\");\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean LoggedOut = selenium.isElementPresent(\"_58_login\");\n\n\t\t\t\tif (!LoggedOut) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.type(\"_58_login\",\n\t\t\t\t\tRuntimeVariables.replace(\"test@liferay.com\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"_58_password\", RuntimeVariables.replace(\"test\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"_58_rememberMeCheckbox\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 2:\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"http://www.baker.com:8080/\"), selenium.getLocation());\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Virtual Hosting Community\"),\n\t\t\t\t\tselenium.getText(\"//li[2]/span/a\"));\n\t\t\t\tassertTrue(selenium.isElementPresent(\"link=Private Page\"));\n\t\t\t\tselenium.clickAt(\"link=Private Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"http://www.baker.com:8080/private-page\"),\n\t\t\t\t\tselenium.getLocation());\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":50762,"modified_method":"public void testAssertPrivatePageHostURL() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"http://www.baker.com:8080/\");\n\n\t\t\t\tboolean LoggedOut = selenium.isElementPresent(\"_58_login\");\n\n\t\t\t\tif (!LoggedOut) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\t\t\tRuntimeVariables.replace(\"test@liferay.com\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\t\t\tRuntimeVariables.replace(\"test\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@id='_58_rememberMeCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Remember Me Checkbox\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 2:\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"http://www.baker.com:8080/\"), selenium.getLocation());\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Virtual Hosting Community\"),\n\t\t\t\t\tselenium.getText(\"//li[2]/span/a\"));\n\t\t\t\tassertTrue(selenium.isElementPresent(\"link=Private Page\"));\n\t\t\t\tselenium.clickAt(\"link=Private Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Private Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"http://www.baker.com:8080/private-page\"),\n\t\t\t\t\tselenium.getLocation());\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"b5e83f45b5102c458f61edcfe31707be99206719","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertPublicPageFriendlyURL() throws Exception {\n\t\tselenium.open(\"/web/alpha/\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"http://localhost:8080/web/alpha/\"), selenium.getLocation());\n\t\tassertEquals(RuntimeVariables.replace(\"Virtual Hosting Community\"),\n\t\t\tselenium.getText(\"//li[2]/span/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Public Page\"));\n\t\tselenium.clickAt(\"link=Public Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"http://localhost:8080/web/alpha/public-page\"),\n\t\t\tselenium.getLocation());\n\t}","id":50763,"modified_method":"public void testAssertPublicPageFriendlyURL() throws Exception {\n\t\tselenium.open(\"/web/alpha/\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"http://localhost:8080/web/alpha/\"), selenium.getLocation());\n\t\tassertEquals(RuntimeVariables.replace(\"Virtual Hosting Community\"),\n\t\t\tselenium.getText(\"//li[2]/span/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Public Page\"));\n\t\tselenium.clickAt(\"link=Public Page\",\n\t\t\tRuntimeVariables.replace(\"Public Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"http://localhost:8080/web/alpha/public-page\"),\n\t\t\tselenium.getLocation());\n\t}","commit_id":"b5e83f45b5102c458f61edcfe31707be99206719","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertPublicPageHostURL() throws Exception {\n\t\tselenium.open(\"http://www.able.com:8080/\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"http://www.able.com:8080/\"),\n\t\t\tselenium.getLocation());\n\t\tassertEquals(RuntimeVariables.replace(\"Virtual Hosting Community\"),\n\t\t\tselenium.getText(\"//li[2]/span/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Public Page\"));\n\t\tselenium.clickAt(\"link=Public Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Public Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"http://www.able.com:8080/public-page\"), selenium.getLocation());\n\t}","id":50764,"modified_method":"public void testAssertPublicPageHostURL() throws Exception {\n\t\tselenium.open(\"http://www.able.com:8080/\");\n\t\tassertEquals(RuntimeVariables.replace(\"http://www.able.com:8080/\"),\n\t\t\tselenium.getLocation());\n\t\tassertEquals(RuntimeVariables.replace(\"Virtual Hosting Community\"),\n\t\t\tselenium.getText(\"//li[2]/span/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Public Page\"));\n\t\tselenium.clickAt(\"link=Public Page\",\n\t\t\tRuntimeVariables.replace(\"Public Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Public Page\",\n\t\t\tRuntimeVariables.replace(\"Public Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"http://www.able.com:8080/public-page\"), selenium.getLocation());\n\t}","commit_id":"b5e83f45b5102c458f61edcfe31707be99206719","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditFriendlyURLSlashes() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Virtual Hosting Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Site Settings\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Virtual Host\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_friendlyURL\",\n\t\t\tRuntimeVariables.replace(\"/test1/test2\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have entered invalid data. Please try again.\"),\n\t\t\tselenium.getText(\"//section/div/div/div/div\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"The friendly url has too many slashes.\"),\n\t\t\tselenium.getText(\"//form/div[2]\"));\n\t}","id":50765,"modified_method":"public void testEditFriendlyURLSlashes() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"Virtual Hosting Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//td[7]/span/ul/li/strong/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Site Settings\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Virtual Host\",\n\t\t\tRuntimeVariables.replace(\"Virtual Host\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@name='_134_friendlyURL']\",\n\t\t\tRuntimeVariables.replace(\"/test1/test2\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"The friendly url has too many slashes.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t}","commit_id":"b5e83f45b5102c458f61edcfe31707be99206719","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditFriendlyURL() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Virtual Hosting Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Site Settings\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Virtual Host\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_friendlyURL\", RuntimeVariables.replace(\"/alpha\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t}","id":50766,"modified_method":"public void testEditFriendlyURL() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"Virtual Hosting Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//td[7]/span/ul/li/strong/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Site Settings\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Virtual Host\",\n\t\t\tRuntimeVariables.replace(\"Virtual Host\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@name='_134_friendlyURL']\",\n\t\t\tRuntimeVariables.replace(\"/alpha\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","commit_id":"b5e83f45b5102c458f61edcfe31707be99206719","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditPrivatePageURL() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Virtual Hosting Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Site Settings\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Virtual Host\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_privateVirtualHost\",\n\t\t\tRuntimeVariables.replace(\"www.baker.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t}","id":50767,"modified_method":"public void testEditPrivatePageURL() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"Virtual Hosting Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//td[7]/span/ul/li/strong/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Site Settings\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Virtual Host\",\n\t\t\tRuntimeVariables.replace(\"Virtual Host\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@name='_134_privateVirtualHost']\",\n\t\t\tRuntimeVariables.replace(\"www.baker.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","commit_id":"b5e83f45b5102c458f61edcfe31707be99206719","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditPublicPageURL() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Virtual Hosting Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Site Settings\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Virtual Host\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_publicVirtualHost\",\n\t\t\tRuntimeVariables.replace(\"www.able.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t}","id":50768,"modified_method":"public void testEditPublicPageURL() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"Virtual Hosting Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//td[7]/span/ul/li/strong/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Site Settings\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Virtual Host\",\n\t\t\tRuntimeVariables.replace(\"Virtual Host\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@name='_134_publicVirtualHost']\",\n\t\t\tRuntimeVariables.replace(\"www.able.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","commit_id":"b5e83f45b5102c458f61edcfe31707be99206719","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testRestoreFriendlyURL() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Virtual Hosting Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Site Settings\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Virtual Host\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_friendlyURL\",\n\t\t\tRuntimeVariables.replace(\"/virtual-hosting-community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t}","id":50769,"modified_method":"public void testRestoreFriendlyURL() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"Virtual Hosting Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//td[7]/span/ul/li/strong/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Site Settings\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Virtual Host\",\n\t\t\tRuntimeVariables.replace(\"Virtual Host\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@name='_134_friendlyURL']\",\n\t\t\tRuntimeVariables.replace(\"/virtual-hosting-community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","commit_id":"b5e83f45b5102c458f61edcfe31707be99206719","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testRestorePrivatePageURL() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Virtual Hosting Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Site Settings\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Virtual Host\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_privateVirtualHost\", RuntimeVariables.replace(\"\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t}","id":50770,"modified_method":"public void testRestorePrivatePageURL() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"Virtual Hosting Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//td[7]/span/ul/li/strong/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Site Settings\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Virtual Host\",\n\t\t\tRuntimeVariables.replace(\"Virtual Host\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@name='_134_privateVirtualHost']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","commit_id":"b5e83f45b5102c458f61edcfe31707be99206719","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testRestorePublicPageURL() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Virtual Hosting Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Site Settings\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Virtual Host\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_publicVirtualHost\", RuntimeVariables.replace(\"\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t}","id":50771,"modified_method":"public void testRestorePublicPageURL() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"Virtual Hosting Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//td[7]/span/ul/li/strong/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Site Settings\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Virtual Host\",\n\t\t\tRuntimeVariables.replace(\"Virtual Host\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@name='_134_publicVirtualHost']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","commit_id":"b5e83f45b5102c458f61edcfe31707be99206719","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownCommunity() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"_134_name\",\n\t\t\t\t\tRuntimeVariables.replace(\"Virtual Hosting Community\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean community1Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Virtual Hosting Community\");\n\n\t\t\t\tif (!community1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//strong/a\"));\n\t\t\t\tselenium.clickAt(\"//strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[10]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[10]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[10]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean community2Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Virtual Hosting Community\");\n\n\t\t\t\tif (!community2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//strong/a\"));\n\t\t\t\tselenium.clickAt(\"//strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[10]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[10]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[10]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean community3Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Virtual Hosting Community\");\n\n\t\t\t\tif (!community3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//strong/a\"));\n\t\t\t\tselenium.clickAt(\"//strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[10]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[10]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[10]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean community4Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Virtual Hosting Community\");\n\n\t\t\t\tif (!community4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//strong/a\"));\n\t\t\t\tselenium.clickAt(\"//strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[10]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[10]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[10]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean community5Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Virtual Hosting Community\");\n\n\t\t\t\tif (!community5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//strong/a\"));\n\t\t\t\tselenium.clickAt(\"//strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[10]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[10]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[10]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":50772,"modified_method":"public void testTearDownCommunity() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Virtual Hosting Community\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean community1Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Virtual Hosting Community\");\n\n\t\t\t\tif (!community1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[9]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[9]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[9]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean community2Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Virtual Hosting Community\");\n\n\t\t\t\tif (!community2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[9]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[9]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[9]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean community3Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Virtual Hosting Community\");\n\n\t\t\t\tif (!community3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[9]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[9]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[9]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean community4Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Virtual Hosting Community\");\n\n\t\t\t\tif (!community4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[9]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[9]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[9]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean community5Present = selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Virtual Hosting Community\");\n\n\t\t\t\tif (!community5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[9]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[9]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[9]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"b5e83f45b5102c458f61edcfe31707be99206719","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private void showConsoleOutput(JsArray<JsArrayEx> output)\n   {\n      for (int i = 0; i < output.length(); i++)\n      {\n         // the first element is the output, and the second is the text; if we\n         // don't have at least 2 elements, it's not a valid entry\n         if (output.get(i).length() < 2)\n            continue;\n\n         int outputType = output.get(i).getInt(0);\n         String outputText = output.get(i).getString(1);\n         \n         // we don't currently render input as output\n         if (outputType == CONSOLE_INPUT)\n            continue;\n         \n         if (outputType == CONSOLE_ERROR)\n         {\n            queuedError_ += outputText;\n         }\n         else\n         {\n            // release any queued errors\n            if (!queuedError_.isEmpty())\n               vconsole_.submit(outputText, classOfOutput(CONSOLE_ERROR));\n\n            vconsole_.submit(outputText, classOfOutput(outputType));\n         }\n      }\n      vconsole_.redraw(console_.getElement());\n      setOverflowStyle();\n   }","id":50773,"modified_method":"private void showConsoleOutput(JsArray<JsArrayEx> output)\n   {\n      for (int i = 0; i < output.length(); i++)\n      {\n         // the first element is the output, and the second is the text; if we\n         // don't have at least 2 elements, it's not a valid entry\n         if (output.get(i).length() < 2)\n            continue;\n\n         int outputType = output.get(i).getInt(0);\n         String outputText = output.get(i).getString(1);\n         \n         // we don't currently render input as output\n         if (outputType == CONSOLE_INPUT)\n            continue;\n         \n         if (outputType == CONSOLE_ERROR)\n         {\n            queuedError_ += outputText;\n         }\n         else\n         {\n            // release any queued errors\n            if (!queuedError_.isEmpty())\n            {\n               vconsole_.submit(queuedError_, classOfOutput(CONSOLE_ERROR));\n               queuedError_ = \"\";\n            }\n\n            vconsole_.submit(outputText, classOfOutput(outputType));\n         }\n      }\n      vconsole_.redraw(console_.getElement());\n      setOverflowStyle();\n   }","commit_id":"2e9be06eb5fd7e6d4401d41737b0aad9c94cd901","url":"https://github.com/rstudio/rstudio"},{"original_method":"private void showErrorOutput(UnhandledError err, final boolean ensureVisible)\n   {\n      hasErrors_ = true;\n      \n      // if there's only one error frame, it's not worth showing dedicated \n      // error UX\n      if (err.getErrorFrames() != null &&\n          err.getErrorFrames().length() < 2)\n      {\n         flushQueuedErrors(ensureVisible);\n         return;\n      }\n\n      if (queuedError_.startsWith(err.getErrorMessage()))\n      {\n         // if this error was queued for output, remove it\n         queuedError_ = queuedError_.substring(err.getErrorMessage().length());\n      }\n      else\n      {\n         // flush any irrelevant messages from the stream\n         flushQueuedErrors(ensureVisible);\n      }\n      \n      UIPrefs prefs =  RStudioGinjector.INSTANCE.getUIPrefs();\n      ConsoleError error = new ConsoleError(err, prefs.getThemeErrorClass(), \n            this, null);\n      error.setTracebackVisible(prefs.autoExpandErrorTracebacks().getValue());\n\n      root_.add(error);\n      flushQueuedErrors(ensureVisible);\n      completeUnitRender(ensureVisible);\n\n   }","id":50774,"modified_method":"private void showErrorOutput(UnhandledError err, final boolean ensureVisible)\n   {\n      hasErrors_ = true;\n      \n      // if there's only one error frame, it's not worth showing dedicated \n      // error UX\n      if (err.getErrorFrames() != null &&\n          err.getErrorFrames().length() < 2)\n      {\n         flushQueuedErrors(ensureVisible);\n         return;\n      }\n\n      int idx = queuedError_.indexOf(err.getErrorMessage());\n      if (idx >= 0)\n      {\n         // emit any messages queued prior to the error\n         if (idx > 0)\n         {\n            renderConsoleOutput(queuedError_.substring(0, idx), \n                  classOfOutput(CONSOLE_ERROR),\n                  ensureVisible);\n            initializeOutput(RmdChunkOutputUnit.TYPE_ERROR);\n         }\n         // leave messages following the error in the queue\n         queuedError_ = queuedError_.substring(\n               idx + err.getErrorMessage().length());\n      }\n      else\n      {\n         // flush any irrelevant messages from the stream\n         flushQueuedErrors(ensureVisible);\n      }\n      \n      UIPrefs prefs =  RStudioGinjector.INSTANCE.getUIPrefs();\n      ConsoleError error = new ConsoleError(err, prefs.getThemeErrorClass(), \n            this, null);\n      error.setTracebackVisible(prefs.autoExpandErrorTracebacks().getValue());\n\n      root_.add(error);\n      flushQueuedErrors(ensureVisible);\n      completeUnitRender(ensureVisible);\n   }","commit_id":"2e9be06eb5fd7e6d4401d41737b0aad9c94cd901","url":"https://github.com/rstudio/rstudio"},{"original_method":"@SuppressWarnings({ \"unchecked\" })\n    public void start() {\n        // TODO Previous incarnation of this logged this logged polledSensors.keySet(), but we don't know that anymore\n        // Is that ok, are can we do better?\n        \n        if (log.isDebugEnabled()) log.debug(\"Starting poll for {} (using {})\", new Object[] {entity, this});\n        if (started) { \n            throw new IllegalStateException(String.format(\"Attempt to start poller %s of entity %s when already running\", \n                    this, entity));\n        }\n        \n        started = true;\n        \n        for (final Callable<?> oneOffJob : oneOffJobs) {\n            Task<?> task = Tasks.builder().dynamic(false).body((Callable<Object>) oneOffJob).displayName(\"Poll\").description(\"One-time poll job \"+oneOffJob).build();\n            oneOffTasks.add(((EntityInternal)entity).getExecutionContext().submit(task));\n        }\n        \n        for (final PollJob<V> pollJob : pollJobs) {\n            final String scheduleName = pollJob.handler.getDescription();\n            if (pollJob.pollPeriod.compareTo(Duration.ZERO) > 0) {\n                Callable<Task<?>> pollingTaskFactory = new Callable<Task<?>>() {\n                    public Task<?> call() {\n                        DynamicSequentialTask<Void> task = new DynamicSequentialTask<Void>(MutableMap.of(\"displayName\", scheduleName, \"entity\", entity), \n                            new Callable<Void>() { public Void call() {\n                                if (onlyIfServiceUp && !Boolean.TRUE.equals(entity.getAttribute(Attributes.SERVICE_UP))) {\n                                        return null;\n                                }\n                                pollJob.wrappedJob.run();\n                                return null; \n                            } } );\n                        BrooklynTaskTags.setTransient(task);\n                        return task;\n                    }\n                };\n                ScheduledTask task = new ScheduledTask(MutableMap.of(\"period\", pollJob.pollPeriod, \"displayName\", \"scheduled:\"+scheduleName), pollingTaskFactory);\n                tasks.add((ScheduledTask)Entities.submit(entity, task));\n            } else {\n                if (log.isDebugEnabled()) log.debug(\"Activating poll (but leaving off, as period {}) for {} (using {})\", new Object[] {pollJob.pollPeriod, entity, this});\n            }\n        }\n    }","id":50775,"modified_method":"@SuppressWarnings({ \"unchecked\" })\n    public void start() {\n        // TODO Previous incarnation of this logged this logged polledSensors.keySet(), but we don't know that anymore\n        // Is that ok, are can we do better?\n        \n        if (log.isDebugEnabled()) log.debug(\"Starting poll for {} (using {})\", new Object[] {entity, this});\n        if (started) { \n            throw new IllegalStateException(String.format(\"Attempt to start poller %s of entity %s when already running\", \n                    this, entity));\n        }\n        \n        started = true;\n        \n        for (final Callable<?> oneOffJob : oneOffJobs) {\n            Task<?> task = Tasks.builder().dynamic(false).body((Callable<Object>) oneOffJob).displayName(\"Poll\").description(\"One-time poll job \"+oneOffJob).build();\n            oneOffTasks.add(((EntityInternal)entity).getExecutionContext().submit(task));\n        }\n        \n        for (final PollJob<V> pollJob : pollJobs) {\n            final String scheduleName = pollJob.handler.getDescription();\n            if (pollJob.pollPeriod.compareTo(Duration.ZERO) > 0) {\n                Callable<Task<?>> pollingTaskFactory = new Callable<Task<?>>() {\n                    public Task<?> call() {\n                        DynamicSequentialTask<Void> task = new DynamicSequentialTask<Void>(MutableMap.of(\"displayName\", scheduleName, \"entity\", entity), \n                            new Callable<Void>() { public Void call() {\n                                if (onlyIfServiceUp && !Boolean.TRUE.equals(entity.getAttribute(Attributes.SERVICE_UP))) {\n                                        return null;\n                                }\n                                pollJob.wrappedJob.run();\n                                return null; \n                            } } );\n                        BrooklynTaskTags.setTransient(task);\n                        return task;\n                    }\n                };\n                Map<String, ?> taskFlags = MutableMap.of(\"displayName\", \"scheduled:\" + scheduleName);\n                ScheduledTask task = new ScheduledTask(taskFlags, pollingTaskFactory)\n                        .period(pollJob.pollPeriod)\n                        .cancelOnException(false);\n                tasks.add(Entities.submit(entity, task));\n            } else {\n                if (log.isDebugEnabled()) log.debug(\"Activating poll (but leaving off, as period {}) for {} (using {})\", new Object[] {pollJob.pollPeriod, entity, this});\n            }\n        }\n    }","commit_id":"5832a15f2a30ba81f3b5b104b17795a5520b06af","url":"https://github.com/apache/incubator-brooklyn"},{"original_method":"private void createOrResumeUserTransaction(final UserTransactionID userTransactionID) throws Exception {\n        final TransactionManager transactionManager = this.ejbRemoteTransactionsRepository.getTransactionManager();\n        final Transaction alreadyCreatedTx = this.ejbRemoteTransactionsRepository.getTransaction(userTransactionID);\n        if (alreadyCreatedTx != null) {\n            // resume the already created tx\n            transactionManager.resume(alreadyCreatedTx);\n        } else {\n            // begin a new user transaction and add it to the tx repository\n            final UserTransaction userTransaction = this.ejbRemoteTransactionsRepository.getUserTransaction();\n            userTransaction.begin();\n            // get the tx that just got created and associated with the transaction manager\n            final Transaction newlyCreatedTx = transactionManager.getTransaction();\n            this.ejbRemoteTransactionsRepository.addTransaction(userTransactionID, newlyCreatedTx);\n        }\n    }","id":50776,"modified_method":"/**\n     * Creates or resumes a UserTransaction associated with the passed <code>UserTransactionID<\/code>.\n     * When this method returns successfully, the transaction manager will have the correct user transaction\n     * associated with it\n     *\n     * @param userTransactionID The user transaction id\n     * @throws Exception\n     */\n    private void createOrResumeUserTransaction(final UserTransactionID userTransactionID) throws Exception {\n        final TransactionManager transactionManager = this.ejbRemoteTransactionsRepository.getTransactionManager();\n        final Transaction alreadyCreatedTx = this.ejbRemoteTransactionsRepository.getTransaction(userTransactionID);\n        if (alreadyCreatedTx != null) {\n            // resume the already created tx\n            transactionManager.resume(alreadyCreatedTx);\n        } else {\n            // begin a new user transaction and add it to the tx repository\n            final UserTransaction userTransaction = this.ejbRemoteTransactionsRepository.getUserTransaction();\n            userTransaction.begin();\n            // get the tx that just got created and associated with the transaction manager\n            final Transaction newlyCreatedTx = transactionManager.getTransaction();\n            this.ejbRemoteTransactionsRepository.addTransaction(userTransactionID, newlyCreatedTx);\n        }\n    }","commit_id":"a7538313521ae42addd8f9b348224ae159c97875","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public Object processInvocation(InterceptorContext context) throws Exception {\n        final RemotingAttachments remotingAttachments = context.getPrivateData(RemotingAttachments.class);\n        final TransactionManager transactionManager = this.ejbRemoteTransactionsRepository.getTransactionManager();\n        Transaction originatingRemoteTx = null;\n        if (remotingAttachments != null) {\n            // get the transaction attachment\n            final byte[] transactionIDBytes = remotingAttachments.getPayloadAttachment(0x0001);\n            // A (remote) tx is associated with the invocation, so propogate it appropriately\n            if (transactionIDBytes != null) {\n                final TransactionID transactionID = TransactionID.createTransactionID(transactionIDBytes);\n                // if it's UserTransaction then create or resume the UserTransaction corresponding to the ID\n                if (transactionID instanceof UserTransactionID) {\n                    this.createOrResumeUserTransaction((UserTransactionID) transactionID);\n                }\n                // the invocation was associated with a remote tx, so keep track of the originating tx\n                originatingRemoteTx = transactionManager.getTransaction();\n            }\n        }\n        try {\n            // we are done with any tx propogation setup, let's move on\n            return context.proceed();\n        } finally {\n            // suspend the originating remote tx on this thread now that the invocation has been done\n            if (originatingRemoteTx != null) {\n                transactionManager.suspend();\n            }\n        }\n    }","id":50777,"modified_method":"/**\n     * Processes an incoming invocation and checks for the presence of a remote transaction associated with the\n     * invocation context.\n     *\n     * @param context The invocation context\n     * @return\n     * @throws Exception\n     */\n    @Override\n    public Object processInvocation(InterceptorContext context) throws Exception {\n        final RemotingAttachments remotingAttachments = context.getPrivateData(RemotingAttachments.class);\n        final TransactionManager transactionManager = this.ejbRemoteTransactionsRepository.getTransactionManager();\n        Transaction originatingRemoteTx = null;\n        if (remotingAttachments != null) {\n            // get the transaction attachment\n            final byte[] transactionIDBytes = remotingAttachments.getPayloadAttachment(0x0001);\n            // A (remote) tx is associated with the invocation, so propogate it appropriately\n            if (transactionIDBytes != null) {\n                final TransactionID transactionID = TransactionID.createTransactionID(transactionIDBytes);\n                // if it's UserTransaction then create or resume the UserTransaction corresponding to the ID\n                if (transactionID instanceof UserTransactionID) {\n                    this.createOrResumeUserTransaction((UserTransactionID) transactionID);\n                } else if (transactionID instanceof XidTransactionID) {\n                    this.createOrResumeXidTransaction((XidTransactionID) transactionID);\n                }\n                // the invocation was associated with a remote tx, so keep a flag so that we can\n                // suspend (on this thread) the originating tx when returning from the invocation\n                originatingRemoteTx = transactionManager.getTransaction();\n            }\n        }\n        try {\n            // we are done with any tx propogation setup, let's move on\n            return context.proceed();\n        } finally {\n            // suspend the originating remote tx on this thread now that the invocation has been done\n            if (originatingRemoteTx != null) {\n                transactionManager.suspend();\n            }\n        }\n    }","commit_id":"a7538313521ae42addd8f9b348224ae159c97875","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public void processMessage(final Channel channel, final MessageInputStream messageInputStream) throws IOException {\n        final DataInputStream input = new DataInputStream(messageInputStream);\n        // read the invocation id\n        final short invocationId = input.readShort();\n        // read the transaction id length\n        final int transactionIDBytesLength = PackedInteger.readPackedInteger(input);\n        // read the transaction id bytes\n        final byte[] transactionIDBytes = new byte[transactionIDBytesLength];\n        input.read(transactionIDBytes);\n        final TransactionID transactionID = TransactionID.createTransactionID(transactionIDBytes);\n        final TransactionManagementTask transactionManagementTask;\n        switch (this.txRequestType) {\n            case COMMIT:\n                transactionManagementTask = new TransactionCommitTask(this.transactionsRepository, transactionID, channel, invocationId);\n                break;\n            case ROLLBACK:\n                transactionManagementTask = new TransactionRollbackTask(this.transactionsRepository, transactionID, channel, invocationId);\n                break;\n            default:\n                throw new IllegalArgumentException(\"Unknown transaction request type \" + this.txRequestType);\n        }\n        // submit to a seperate thread for processing the request\n        this.executorService.submit(transactionManagementTask);\n    }","id":50778,"modified_method":"@Override\n    public void processMessage(final Channel channel, final MessageInputStream messageInputStream) throws IOException {\n        final DataInputStream input = new DataInputStream(messageInputStream);\n        // read the invocation id\n        final short invocationId = input.readShort();\n        // read the transaction id length\n        final int transactionIDBytesLength = PackedInteger.readPackedInteger(input);\n        // read the transaction id bytes\n        final byte[] transactionIDBytes = new byte[transactionIDBytesLength];\n        input.read(transactionIDBytes);\n        final TransactionID transactionID = TransactionID.createTransactionID(transactionIDBytes);\n        // if it's a commit request, the read the additional \"bit\" which indicates whether it's a one-phase\n        // commit request\n        boolean onePhaseCommit = false;\n        if (this.txRequestType == TransactionRequestType.COMMIT) {\n            onePhaseCommit = input.readBoolean();\n        }\n\n        // start processing\n        if (transactionID instanceof UserTransactionID) {\n            // handle UserTransaction\n            final UserTransactionManagementTask userTransactionManagementTask;\n            switch (this.txRequestType) {\n                case COMMIT:\n                    userTransactionManagementTask = new UserTransactionCommitTask(this, this.transactionsRepository, (UserTransactionID) transactionID, channel, invocationId);\n                    break;\n                case ROLLBACK:\n                    userTransactionManagementTask = new UserTransactionRollbackTask(this, this.transactionsRepository, (UserTransactionID) transactionID, channel, invocationId);\n                    break;\n                default:\n                    throw new IllegalArgumentException(\"Unknown transaction request type \" + this.txRequestType);\n            }\n            // submit to a seperate thread for processing the request\n            this.executorService.submit(userTransactionManagementTask);\n\n        } else if (transactionID instanceof XidTransactionID) {\n            // handle XidTransactionID\n            final XidTransactionID xidTransactionID = (XidTransactionID) transactionID;\n            final XidTransactionManagementTask xidTransactionManagementTask;\n            switch (this.txRequestType) {\n                case COMMIT:\n                    xidTransactionManagementTask = new XidTransactionCommitTask(this, this.transactionsRepository, xidTransactionID, channel, invocationId, onePhaseCommit);\n                    break;\n                case PREPARE:\n                    xidTransactionManagementTask = new XidTransactionPrepareTask(this, this.transactionsRepository, xidTransactionID, channel, invocationId);\n                    break;\n                case ROLLBACK:\n                    xidTransactionManagementTask = new XidTransactionRollbackTask(this, this.transactionsRepository, xidTransactionID, channel, invocationId);\n                    break;\n                case FORGET:\n                    xidTransactionManagementTask = new XidTransactionForgetTask(this, this.transactionsRepository, xidTransactionID, channel, invocationId);\n                    break;\n                case BEFORE_COMPLETION:\n                    xidTransactionManagementTask = new XidTransactionBeforeCompletionTask(this, this.transactionsRepository, xidTransactionID, channel, invocationId);\n                    break;\n                default:\n                    throw new IllegalArgumentException(\"Unknown transaction request type \" + this.txRequestType);\n            }\n            // submit to a separate thread for processing the request\n            this.executorService.submit(xidTransactionManagementTask);\n        }\n    }","commit_id":"a7538313521ae42addd8f9b348224ae159c97875","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public void handleMessage(Channel channel, MessageInputStream messageInputStream) {\n        try {\n            // read the first byte to see what type of a message it is\n            final int header = messageInputStream.read();\n            if (logger.isTraceEnabled()) {\n                logger.trace(\"Got message with header 0x\" + Integer.toHexString(header) + \" on channel \" + channel);\n            }\n            MessageHandler messageHandler = null;\n            switch (header) {\n                case HEADER_INVOCATION_REQUEST:\n                    messageHandler = new MethodInvocationMessageHandler(this.deploymentRepository, this.marshallingStrategy, this.executorService);\n                    break;\n                case HEADER_SESSION_OPEN_REQUEST:\n                    messageHandler = new SessionOpenRequestHandler(this.deploymentRepository, this.marshallingStrategy, this.executorService);\n                    break;\n                case HEADER_TX_COMMIT_REQUEST:\n                    messageHandler = new TransactionRequestHandler(this.transactionsRepository, this.executorService, TransactionRequestHandler.TransactionRequestType.COMMIT, this.marshallingStrategy);\n                    break;\n                case HEADER_TX_ROLLBACK_REQUEST:\n                    messageHandler = new TransactionRequestHandler(this.transactionsRepository, this.executorService, TransactionRequestHandler.TransactionRequestType.ROLLBACK, this.marshallingStrategy);\n                    break;\n                default:\n                    logger.warn(\"Received unsupported message header 0x\" + Integer.toHexString(header) + \" on channel \" + channel);\n                    return;\n            }\n            // process the message\n            messageHandler.processMessage(channel, messageInputStream);\n            // enroll for next message (whenever it's available)\n            channel.receiveMessage(this);\n\n        } catch (IOException e) {\n            // log it\n            logger.errorf(e, \"Exception on channel %s from message %s\", channel, messageInputStream);\n            // no more messages can be sent or received on this channel\n            IoUtils.safeClose(channel);\n        } finally {\n            IoUtils.safeClose(messageInputStream);\n        }\n    }","id":50779,"modified_method":"@Override\n    public void handleMessage(Channel channel, MessageInputStream messageInputStream) {\n        try {\n            // read the first byte to see what type of a message it is\n            final int header = messageInputStream.read();\n            if (logger.isTraceEnabled()) {\n                logger.trace(\"Got message with header 0x\" + Integer.toHexString(header) + \" on channel \" + channel);\n            }\n            MessageHandler messageHandler = null;\n            switch (header) {\n                case HEADER_INVOCATION_REQUEST:\n                    messageHandler = new MethodInvocationMessageHandler(this.deploymentRepository, this.marshallingStrategy, this.executorService);\n                    break;\n                case HEADER_SESSION_OPEN_REQUEST:\n                    messageHandler = new SessionOpenRequestHandler(this.deploymentRepository, this.marshallingStrategy, this.executorService);\n                    break;\n                case HEADER_TX_COMMIT_REQUEST:\n                    messageHandler = new TransactionRequestHandler(this.transactionsRepository, this.executorService, TransactionRequestHandler.TransactionRequestType.COMMIT, this.marshallingStrategy);\n                    break;\n                case HEADER_TX_ROLLBACK_REQUEST:\n                    messageHandler = new TransactionRequestHandler(this.transactionsRepository, this.executorService, TransactionRequestHandler.TransactionRequestType.ROLLBACK, this.marshallingStrategy);\n                    break;\n                case HEADER_TX_FORGET_REQUEST:\n                    messageHandler = new TransactionRequestHandler(this.transactionsRepository, this.executorService, TransactionRequestHandler.TransactionRequestType.FORGET, this.marshallingStrategy);\n                    break;\n                case HEADER_TX_PREPARE_REQUEST:\n                    messageHandler = new TransactionRequestHandler(this.transactionsRepository, this.executorService, TransactionRequestHandler.TransactionRequestType.PREPARE, this.marshallingStrategy);\n                    break;\n                case HEADER_TX_BEFORE_COMPLETION_REQUEST:\n                    messageHandler = new TransactionRequestHandler(this.transactionsRepository, this.executorService, TransactionRequestHandler.TransactionRequestType.BEFORE_COMPLETION, this.marshallingStrategy);\n                    break;\n                default:\n                    logger.warn(\"Received unsupported message header 0x\" + Integer.toHexString(header) + \" on channel \" + channel);\n                    return;\n            }\n            // process the message\n            messageHandler.processMessage(channel, messageInputStream);\n            // enroll for next message (whenever it's available)\n            channel.receiveMessage(this);\n\n        } catch (IOException e) {\n            // log it\n            logger.errorf(e, \"Exception on channel %s from message %s\", channel, messageInputStream);\n            // no more messages can be sent or received on this channel\n            IoUtils.safeClose(channel);\n        } finally {\n            IoUtils.safeClose(messageInputStream);\n        }\n    }","commit_id":"a7538313521ae42addd8f9b348224ae159c97875","url":"https://github.com/wildfly/wildfly"},{"original_method":"public UntrustedCertificateWarningDialog(X509Certificate certificate) {\n    super((Project) null, false);\n\n    setTitle(\"Untrusted Server's Certificate\");\n    setOKButtonText(\"Accept\");\n    setCancelButtonText(\"Reject\");\n    myWarningSign.setIcon(AllIcons.General.WarningDialog);\n\n\n    fillPrincipalInfoPanel(myIssuerInfoPanel, certificate.getIssuerX500Principal());\n    fillPrincipalInfoPanel(mySubjectInfoPanel, certificate.getSubjectX500Principal());\n\n    myValidityInfoPanel.add(\n      FormBuilder.createFormBuilder()\n        .addLabeledComponent(\"Valid from\", new JBLabel(DATE_FORMAT.format(certificate.getNotBefore())))\n        .addLabeledComponent(\"Valid until\", new JBLabel(DATE_FORMAT.format(certificate.getNotAfter())))\n        .getPanel());\n\n    init();\n  }","id":50780,"modified_method":"public UntrustedCertificateWarningDialog(X509Certificate certificate) {\n    super((Project)null, false);\n\n    myCertificate = certificate;\n\n    FormBuilder builder = FormBuilder.createFormBuilder();\n\n    // I'm not using separate panels and form builders to preserve alignment of labels\n    builder = updateBuilderWithTitle(builder, \"Issued To\");\n    builder = updateBuilderWithPrincipalData(builder, myCertificate.getSubjectX500Principal());\n    builder = updateBuilderWithTitle(builder, \"Issued By\");\n    builder = updateBuilderWithPrincipalData(builder, myCertificate.getIssuerX500Principal());\n    builder = updateBuilderWithTitle(builder, \"Validity Period\");\n    builder = builder\n      .setIndent(IdeBorderFactory.TITLED_BORDER_INDENT)\n      .addLabeledComponent(\"Valid from\", new JBLabel(DATE_FORMAT.format(myCertificate.getNotBefore())))\n      .addLabeledComponent(\"Valid until\", new JBLabel(DATE_FORMAT.format(myCertificate.getNotAfter())));\n    myCertificateInfoPanel.add(builder.getPanel(), BorderLayout.CENTER);\n\n    setTitle(\"Untrusted Server's Certificate\");\n    setOKButtonText(\"Accept\");\n    setCancelButtonText(\"Reject\");\n    myWarningSign.setIcon(AllIcons.General.WarningDialog);\n\n    init();\n    LOG.debug(\"Preferred size: \" + getPreferredSize());\n  }","commit_id":"19e26707a81f3b2657d072823075676f4a4094c9","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void appendTo(StringBuilder builder) {\n    builder.append(\"<hr>\");\n    builder.append(\"<table>\");\n    builder.append(\"<tr><td>\");\n    if (myGravatarId != null) {\n        builder.append(\"<img src=\\\"\").append(\"http://www.gravatar.com/avatar/\").append(myGravatarId).append(\"?s=40\\\"/><br>\");\n      }\n    builder.append(\"<\/td><td>\");\n    if (getAuthor() != null) {\n      builder.append(\"<b>Author:<\/b> <a href=\\\"\").append(GitHubRepository.GITHUB_HOST).append('/')\n             .append(getAuthor()).append(\"\\\">\").append(getAuthor()).append(\"<\/a><br>\");\n    }\n    if (getDate() != null) {\n      builder.append(\"<b>Date:<\/b> \").append(DateFormatUtil.formatDateTime(getDate())).append(\"<br>\");\n    }\n    builder.append(\"<\/td><\/tr><\/table>\");\n\n    builder.append(new MarkdownProcessor().markdown(getText())).append(\"<br>\");\n  }","id":50781,"modified_method":"public void appendTo(StringBuilder builder) {\n    builder.append(\"<hr>\");\n    builder.append(\"<table>\");\n    builder.append(\"<tr><td>\");\n    if (myGravatarId != null) {\n        builder.append(\"<img src=\\\"\").append(\"http://www.gravatar.com/avatar/\").append(myGravatarId).append(\"?s=40\\\"/><br>\");\n      }\n    builder.append(\"<\/td><td>\");\n    if (getAuthor() != null) {\n      builder.append(\"<b>Author:<\/b> <a href=\\\"\").append(myHost).append('/')\n             .append(getAuthor()).append(\"\\\">\").append(getAuthor()).append(\"<\/a><br>\");\n    }\n    if (getDate() != null) {\n      builder.append(\"<b>Date:<\/b> \").append(DateFormatUtil.formatDateTime(getDate())).append(\"<br>\");\n    }\n    builder.append(\"<\/td><\/tr><\/table>\");\n\n    builder.append(new MarkdownProcessor().markdown(getText())).append(\"<br>\");\n  }","commit_id":"0f1366259cf2301e406bc16b527d4230c72a10d2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public GitHubComment(@Nullable Date date, @Nullable String author, @NotNull String text, @Nullable String gravatarId) {\n    super(date, author, text);\n    myGravatarId = gravatarId;\n  }","id":50782,"modified_method":"public GitHubComment(@Nullable Date date, @Nullable String author, @NotNull String text, @Nullable String gravatarId, @NotNull String host) {\n    super(date, author, text);\n    myGravatarId = gravatarId;\n    myHost = host;\n  }","commit_id":"0f1366259cf2301e406bc16b527d4230c72a10d2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void setAuthData(@NotNull GithubAuthData auth) {\n    myAuth = auth;\n  }","id":50783,"modified_method":"private void initAuthData() {\n    if (myAuthData == null) {\n      myAuthData = GithubAuthData.createTokenAuth(getUrl(), getToken());\n    }\n  }","commit_id":"0f1366259cf2301e406bc16b527d4230c72a10d2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static Comment[] createComments(final JsonArray response) {\n    final List<Comment> comments = new ArrayList<Comment>();\n\n    for (JsonElement element : response) {\n      Comment comment = parseComment(element);\n      if (comment != null) {\n        comments.add(comment);\n      }\n      else {\n        LOG.warn(\"Couldn't parse comment from \" + element);\n      }\n    }\n    return ArrayUtil.toObjectArray(comments, Comment.class);\n  }","id":50784,"modified_method":"private static Comment[] createComments(final JsonArray response, @NotNull String host) {\n    final List<Comment> comments = new ArrayList<Comment>();\n\n    for (JsonElement element : response) {\n      Comment comment = parseComment(element, host);\n      if (comment != null) {\n        comments.add(comment);\n      }\n      else {\n        LOG.warn(\"Couldn't parse comment from \" + element);\n      }\n    }\n    return ArrayUtil.toObjectArray(comments, Comment.class);\n  }","commit_id":"0f1366259cf2301e406bc16b527d4230c72a10d2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private Comment[] fetchComments(final String id) throws Exception {\n    String path = \"/repos/\" + getRepoAuthor() + \"/\" + getRepoName() + \"/issues/\" + id + \"/comments\";\n    JsonElement response = GithubApiUtil.getRequest(myAuth, path);\n    if (response == null || !response.isJsonArray()) {\n      throw new Exception(String.format(\"Couldn't get information about issue %s%nResponse: %s\", id, response));\n    }\n    return createComments(response.getAsJsonArray());\n  }","id":50785,"modified_method":"private Comment[] fetchComments(final String id) throws Exception {\n    initAuthData();\n    String path = \"/repos/\" + getRepoAuthor() + \"/\" + getRepoName() + \"/issues/\" + id + \"/comments\";\n    JsonElement response = GithubApiUtil.getRequest(myAuthData, path);\n    if (response == null || !response.isJsonArray()) {\n      throw new Exception(String.format(\"Couldn't get information about issue %s%nResponse: %s\", id, response));\n    }\n    return createComments(response.getAsJsonArray(), getUrl());\n  }","commit_id":"0f1366259cf2301e406bc16b527d4230c72a10d2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  private Task[] getIssues(@Nullable String query) throws Exception {\n    String path;\n    boolean noQuery = StringUtil.isEmpty(query);\n    if (!noQuery) {\n      query = encodeUrl(query);\n      path = \"/legacy/issues/search/\" + getRepoAuthor() + \"/\" + getRepoName() + \"/open/\" + encodeUrl(query);\n    }\n    else {\n      path = \"/repos/\" + getRepoAuthor() + \"/\" + getRepoName() + \"/issues\";\n    }\n\n    JsonElement response = GithubApiUtil.getRequest(myAuth, path);\n\n    JsonArray issuesArray;\n    if (noQuery) {\n      if (response == null || !response.isJsonArray()) {\n        throw errorFetchingIssues(response);\n      }\n      issuesArray = response.getAsJsonArray();\n    }\n    else {\n      if (response == null || !response.isJsonObject() || !response.getAsJsonObject().has(\"issues\")) {\n        throw errorFetchingIssues(response);\n      }\n      issuesArray = response.getAsJsonObject().get(\"issues\").getAsJsonArray();\n    }\n\n    return parseTasksFromArray(issuesArray);\n  }","id":50786,"modified_method":"@NotNull\n  private Task[] getIssues(@Nullable String query) throws Exception {\n    initAuthData();\n\n    String path;\n    boolean noQuery = StringUtil.isEmpty(query);\n    if (!noQuery) {\n      query = encodeUrl(query);\n      path = \"/legacy/issues/search/\" + getRepoAuthor() + \"/\" + getRepoName() + \"/open/\" + encodeUrl(query);\n    }\n    else {\n      path = \"/repos/\" + getRepoAuthor() + \"/\" + getRepoName() + \"/issues\";\n    }\n\n    JsonElement response = GithubApiUtil.getRequest(myAuthData, path);\n\n    JsonArray issuesArray;\n    if (noQuery) {\n      if (response == null || !response.isJsonArray()) {\n        throw errorFetchingIssues(response);\n      }\n      issuesArray = response.getAsJsonArray();\n    }\n    else {\n      if (response == null || !response.isJsonObject() || !response.getAsJsonObject().has(\"issues\")) {\n        throw errorFetchingIssues(response);\n      }\n      issuesArray = response.getAsJsonObject().get(\"issues\").getAsJsonArray();\n    }\n\n    return parseTasksFromArray(issuesArray);\n  }","commit_id":"0f1366259cf2301e406bc16b527d4230c72a10d2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  private static Comment parseComment(JsonElement element) {\n    JsonObject commentObject = element.getAsJsonObject();\n    final JsonElement text = commentObject.get(\"body\");\n    if (text == null) {\n      return null;\n    }\n    JsonElement user = commentObject.get(\"user\");\n    if (user == null || !user.isJsonObject()) {\n      return null;\n    }\n\n    final JsonElement author = user.getAsJsonObject().get(\"login\");\n    final JsonElement gravatar = user.getAsJsonObject().get(\"gravatar_id\");\n    final Ref<Date> date = new Ref<Date>();\n    try {\n      JsonElement createdAt = commentObject.get(\"created_at\");\n      if (createdAt != null) {\n        date.set(TaskUtil.parseDate(createdAt.getAsString()));\n      }\n      else {\n        LOG.warn(\"Couldn't get creation date for the comment: \" + element);\n      }\n    }\n    catch (ParseException e) {\n      LOG.warn(e);\n    }\n    return new GitHubComment(date.get(), author == null ? null : author.getAsString(),\n                             text.getAsString(), gravatar == null ? null : gravatar.getAsString());\n  }","id":50787,"modified_method":"@Nullable\n  private static Comment parseComment(JsonElement element, @NotNull String host) {\n    JsonObject commentObject = element.getAsJsonObject();\n    final JsonElement text = commentObject.get(\"body\");\n    if (text == null) {\n      return null;\n    }\n    JsonElement user = commentObject.get(\"user\");\n    if (user == null || !user.isJsonObject()) {\n      return null;\n    }\n\n    final JsonElement author = user.getAsJsonObject().get(\"login\");\n    final JsonElement gravatar = user.getAsJsonObject().get(\"gravatar_id\");\n    final Ref<Date> date = new Ref<Date>();\n    try {\n      JsonElement createdAt = commentObject.get(\"created_at\");\n      if (createdAt != null) {\n        date.set(TaskUtil.parseDate(createdAt.getAsString()));\n      }\n      else {\n        LOG.warn(\"Couldn't get creation date for the comment: \" + element);\n      }\n    }\n    catch (ParseException e) {\n      LOG.warn(e);\n    }\n    return new GitHubComment(date.get(), author == null ? null : author.getAsString(), text.getAsString(),\n                             gravatar == null ? null : gravatar.getAsString(), host);\n  }","commit_id":"0f1366259cf2301e406bc16b527d4230c72a10d2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  @Override\n  public Task findTask(String id) throws Exception {\n    String path = \"/repos/\" + getRepoAuthor() + \"/\" + getRepoName() + \"/issues/\" + id;\n    JsonElement response = GithubApiUtil.getRequest(myAuth, path);\n    if (response == null || !response.isJsonObject()) {\n      throw new Exception(String.format(\"Couldn't get information about issue %s%nResponse: %s\", id, response));\n    }\n    return createIssue(response.getAsJsonObject());\n  }","id":50788,"modified_method":"@Nullable\n  @Override\n  public Task findTask(String id) throws Exception {\n    initAuthData();\n    String path = \"/repos/\" + getRepoAuthor() + \"/\" + getRepoName() + \"/issues/\" + id;\n    JsonElement response = GithubApiUtil.getRequest(myAuthData, path);\n    if (response == null || !response.isJsonObject()) {\n      throw new Exception(String.format(\"Couldn't get information about issue %s%nResponse: %s\", id, response));\n    }\n    return createIssue(response.getAsJsonObject());\n  }","commit_id":"0f1366259cf2301e406bc16b527d4230c72a10d2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public GitHubRepository(GitHubRepository other) {\n    super(other);\n    setRepoName(other.myRepoName);\n    setRepoAuthor(other.myRepoAuthor);\n  }","id":50789,"modified_method":"public GitHubRepository(GitHubRepository other) {\n    super(other);\n    setRepoName(other.myRepoName);\n    setRepoAuthor(other.myRepoAuthor);\n    setToken(other.myToken);\n  }","commit_id":"0f1366259cf2301e406bc16b527d4230c72a10d2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public boolean equals(Object o) {\n    if (!super.equals(o)) return false;\n    if (!(o instanceof GitHubRepository)) return false;\n\n    GitHubRepository that = (GitHubRepository)o;\n    if (getRepoName() != null ? !getRepoName().equals(that.getRepoName()) : that.getRepoName() != null) return false;\n    return true;\n  }","id":50790,"modified_method":"@Override\n  public boolean equals(Object o) {\n    if (!super.equals(o)) return false;\n    if (!(o instanceof GitHubRepository)) return false;\n\n    GitHubRepository that = (GitHubRepository)o;\n    if (!Comparing.equal(getRepoAuthor(), that.getRepoAuthor())) return false;\n    if (!Comparing.equal(getRepoName(), that.getRepoName())) return false;\n    if (!Comparing.equal(getToken(), that.getToken())) return false;\n\n    return true;\n  }","commit_id":"0f1366259cf2301e406bc16b527d4230c72a10d2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  @Override\n  protected JComponent createCustomPanel() {\n    myRepositoryAuthorLabel = new JBLabel(\"Repository author:\", SwingConstants.RIGHT);\n    myRepoAuthor = new JTextField();\n    installListener(myRepoAuthor);\n\n    myRepositoryLabel = new JBLabel(\"Repository:\", SwingConstants.RIGHT);\n    myRepoName = new JTextField();\n    installListener(myRepoName);\n\n    return FormBuilder.createFormBuilder().addLabeledComponent(myRepositoryAuthorLabel, myRepoAuthor)\n      .addLabeledComponent(myRepositoryLabel, myRepoName).getPanel();\n  }","id":50791,"modified_method":"@Nullable\n  @Override\n  protected JComponent createCustomPanel() {\n    myUrlLabel.setText(\"Host:\");\n\n    myRepoAuthorLabel = new JBLabel(\"Repository author:\", SwingConstants.RIGHT);\n    myRepoAuthor = new JTextField();\n    installListener(myRepoAuthor);\n\n    myRepoLabel = new JBLabel(\"Repository:\", SwingConstants.RIGHT);\n    myRepoName = new JTextField();\n    installListener(myRepoName);\n\n    myToken = new JTextField();\n    installListener(myToken);\n    myTokenButton = new JButton(\"API token\");\n    myTokenButton.addActionListener(new ActionListener() {\n      public void actionPerformed(ActionEvent e) {\n        generateToken();\n        doApply();\n      }\n    });\n\n    myPrivateRepo = new JCheckBox(\"Private repository\");\n    installListener(myPrivateRepo);\n\n    return FormBuilder.createFormBuilder().setAlignLabelOnRight(true).addLabeledComponent(myTokenButton, myToken)\n      .addLabeledComponent(myRepoAuthorLabel, myRepoAuthor).addLabeledComponent(myRepoLabel, myRepoName)\n      .addComponentToRightColumn(myPrivateRepo).getPanel();\n  }","commit_id":"0f1366259cf2301e406bc16b527d4230c72a10d2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void apply() {\n    myRepository.setRepoName(myRepoName.getText().trim());\n    myRepository.setRepoAuthor(myRepoAuthor.getText().trim());\n    myUseHttpAuthenticationCheckBox.setSelected(!StringUtil.isEmpty(myUserNameText.getText()));\n    super.apply();\n  }","id":50792,"modified_method":"@Override\n  public void apply() {\n    myRepository.setRepoName(myRepoName.getText().trim());\n    myRepository.setRepoAuthor(myRepoAuthor.getText().trim());\n    myRepository.setToken(myToken.getText().trim());\n    myUseHttpAuthenticationCheckBox.setSelected(!StringUtil.isEmpty(myUserNameText.getText()));\n    super.apply();\n  }","commit_id":"0f1366259cf2301e406bc16b527d4230c72a10d2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void setAnchor(@Nullable final JComponent anchor) {\n    super.setAnchor(anchor);\n    myRepositoryAuthorLabel.setAnchor(anchor);\n    myRepositoryLabel.setAnchor(anchor);\n  }","id":50793,"modified_method":"@Override\n  public void setAnchor(@Nullable final JComponent anchor) {\n    super.setAnchor(anchor);\n    myRepoAuthorLabel.setAnchor(anchor);\n    myRepoLabel.setAnchor(anchor);\n  }","commit_id":"0f1366259cf2301e406bc16b527d4230c72a10d2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public GitHubRepositoryEditor(final Project project,\n                                final GitHubRepository repository,\n                                Consumer<GitHubRepository> changeListener) {\n    super(project, repository, changeListener);\n\n    // project author, by default same as username\n    myRepoAuthor.setText(repository.getRepoAuthor());\n\n    // project id\n    myRepoName.setText(repository.getRepoName());\n\n    myUrlLabel.setVisible(false);\n    myURLText.setVisible(false);\n\n    setAnchor(myRepositoryAuthorLabel);\n  }","id":50794,"modified_method":"public GitHubRepositoryEditor(final Project project, final GitHubRepository repository, Consumer<GitHubRepository> changeListener) {\n    super(project, repository, changeListener);\n    myUserNameText.setVisible(false);\n    myUsernameLabel.setVisible(false);\n    myPasswordText.setVisible(false);\n    myPasswordLabel.setVisible(false);\n\n    myToken.setText(repository.getToken());\n    myRepoAuthor.setText(repository.getRepoAuthor());\n    myRepoName.setText(repository.getRepoName());\n    myPrivateRepo.setSelected(false);\n\n    setAnchor(myRepoAuthorLabel);\n  }","commit_id":"0f1366259cf2301e406bc16b527d4230c72a10d2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void processOpenedProject(final Project lastOpenedProject) {\n    final GithubUserAndRepository info = getGithubProjectInfo(lastOpenedProject);\n    if (info != null) {\n      processProject(lastOpenedProject, info.getUserName(), info.getRepositoryName());\n    }\n  }","id":50795,"modified_method":"@Override\n  public void processOpenedProject(final Project lastOpenedProject) {\n    //final GithubUserAndRepository info = getGithubProjectInfo(lastOpenedProject);\n    //if (info != null) {\n    //  processProject(lastOpenedProject, info.getUserName(), info.getRepositoryName());\n    //}\n  }","commit_id":"0f1366259cf2301e406bc16b527d4230c72a10d2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void enableGithubTrackerIntegration(final Project project, final String author, final String name) {\n    // Look for github repository type\n    final TaskManagerImpl manager = (TaskManagerImpl)TaskManager.getManager(project);\n    final TaskRepository[] allRepositories = manager.getAllRepositories();\n    for (TaskRepository repository : allRepositories) {\n      if (repository instanceof GitHubRepository) {\n        return;\n      }\n    }\n    // Create new one if not found exists\n    GithubSettings settings = GithubSettings.getInstance();\n    final GitHubRepository repository = new GitHubRepository(new GitHubRepositoryType());\n    repository.setAuthData(settings.getAuthData());\n    repository.setRepoAuthor(author);\n    repository.setRepoName(name);\n    final ArrayList<TaskRepository> repositories = new ArrayList<TaskRepository>(Arrays.asList(allRepositories));\n    repositories.add(repository);\n    manager.setRepositories(repositories);\n  }","id":50796,"modified_method":"private static void enableGithubTrackerIntegration(final Project project, final String author, final String name) {\n    // Look for github repository type\n    final TaskManagerImpl manager = (TaskManagerImpl)TaskManager.getManager(project);\n    final TaskRepository[] allRepositories = manager.getAllRepositories();\n    for (TaskRepository repository : allRepositories) {\n      if (repository instanceof GitHubRepository) {\n        return;\n      }\n    }\n    // Create new one if not found exists\n    final GitHubRepository repository = new GitHubRepository(new GitHubRepositoryType());\n    repository.setToken(\"\");\n    repository.setRepoAuthor(author);\n    repository.setRepoName(name);\n    final ArrayList<TaskRepository> repositories = new ArrayList<TaskRepository>(Arrays.asList(allRepositories));\n    repositories.add(repository);\n    manager.setRepositories(repositories);\n  }","commit_id":"0f1366259cf2301e406bc16b527d4230c72a10d2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected void installListener(JComboBox comboBox) {\n    comboBox.addItemListener(new ItemListener() {\n      @Override\n      public void itemStateChanged(final ItemEvent e) {\n        doApply();\n      }\n    });\n  }","id":50797,"modified_method":"protected void installListener(JComboBox comboBox) {\n    comboBox.addItemListener(new ItemListener() {\n      @Override\n      public void itemStateChanged(final ItemEvent e) {\n        if (e.getStateChange() == ItemEvent.SELECTED) {\n          doApply();\n        }\n      }\n    });\n  }","commit_id":"5c6037b06be6bbfb49294ebddedc531fc15b3be1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public <T> TypeAdapter<T> create(Gson gson, final TypeToken<T> type) {\n    if (type.getRawType().getAnnotation(RestModel.class) != null) {\n      return null;\n    }\n    final TypeAdapter<T> defaultAdapter = gson.getDelegateAdapter(this, type);\n    return new TypeAdapter<T>() {\n      @Override\n      public void write(JsonWriter out, T value) throws IOException {\n        defaultAdapter.write(out, value);\n      }\n\n      @Override\n      public T read(JsonReader in) throws IOException {\n        T stub = defaultAdapter.read(in);\n        for (Field field : ReflectionUtil.collectFields(type.getRawType())) {\n          if (field.getAnnotation(Mandatory.class) != null) {\n            try {\n              field.setAccessible(true);\n              if (field.get(stub) == null) {\n                throw new IllegalArgumentException(String.format(\"Field '%s' is mandatory, but omitted\", field.getName()));\n              }\n            }\n            catch (IllegalAccessException e) {\n              throw new RuntimeException(e);\n            }\n          }\n        }\n        return stub;\n      }\n    };\n  }","id":50798,"modified_method":"@Override\n  public <T> TypeAdapter<T> create(Gson gson, final TypeToken<T> type) {\n    if (type.getRawType().getAnnotation(RestModel.class) == null) {\n      return null;\n    }\n    final TypeAdapter<T> defaultAdapter = gson.getDelegateAdapter(this, type);\n    return new TypeAdapter<T>() {\n      @Override\n      public void write(JsonWriter out, T value) throws IOException {\n        defaultAdapter.write(out, value);\n      }\n\n      @Override\n      public T read(JsonReader in) throws IOException {\n        T stub = defaultAdapter.read(in);\n        for (Field field : ReflectionUtil.collectFields(type.getRawType())) {\n          if (field.getAnnotation(Mandatory.class) != null) {\n            try {\n              field.setAccessible(true);\n              if (field.get(stub) == null) {\n                throw new IllegalArgumentException(String.format(\"Field '%s' is mandatory, but missing in response\", field.getName()));\n              }\n            }\n            catch (IllegalAccessException e) {\n              throw new RuntimeException(e);\n            }\n          }\n        }\n        return stub;\n      }\n    };\n  }","commit_id":"5c6037b06be6bbfb49294ebddedc531fc15b3be1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public List<RedmineIssue> fetchIssues(String query, int offset, int limit, boolean withClosed) throws Exception {\n    URIBuilder builder = new URIBuilder(getRestApiUrl(\"issues.json\"))\n      .addParameter(\"offset\", String.valueOf(offset))\n      .addParameter(\"limit\", String.valueOf(limit))\n      .addParameter(\"status_is\", withClosed ? \"*\" : \"open\");\n    if (StringUtil.isNotEmpty(query)) {\n      builder.addParameter(\"fields[]\", \"subject\").addParameter(\"operators[subject]\", \"~\").addParameter(\"values[subject][]\", query);\n    }\n    if (myCurrentProject != null && myCurrentProject != UNSPECIFIED_PROJECT) {\n      builder.addParameter(\"project_id\", String.valueOf(myCurrentProject.getId()));\n    }\n    if (useApiKeyAuthentication()) {\n      builder.addParameter(\"key\", myAPIKey);\n    }\n    HttpClient client = getHttpClient();\n    HttpGet method = new HttpGet(builder.toString());\n    return client.execute(method, new GsonSingleObjectDeserializer<RedmineResponseWrapper.IssuesWrapper>(GSON, RedmineResponseWrapper.IssuesWrapper.class)).getIssues();\n  }","id":50799,"modified_method":"public List<RedmineIssue> fetchIssues(String query, int offset, int limit, boolean withClosed) throws Exception {\n    URIBuilder builder = new URIBuilder(getRestApiUrl(\"issues.json\"))\n      .addParameter(\"offset\", String.valueOf(offset))\n      .addParameter(\"limit\", String.valueOf(limit))\n      .addParameter(\"status_is\", withClosed ? \"*\" : \"open\");\n    if (StringUtil.isNotEmpty(query)) {\n      builder.addParameter(\"fields[]\", \"subject\").addParameter(\"operators[subject]\", \"~\").addParameter(\"values[subject][]\", query);\n    }\n    // If project was not chosen, all available issues still fetched. Such behavior may seems strange to user.\n    if (myCurrentProject != null && myCurrentProject != UNSPECIFIED_PROJECT) {\n      builder.addParameter(\"project_id\", String.valueOf(myCurrentProject.getId()));\n    }\n    if (isUseApiKeyAuthentication()) {\n      builder.addParameter(\"key\", myAPIKey);\n    }\n    HttpClient client = getHttpClient();\n    HttpGet method = new HttpGet(builder.toString());\n    return client.execute(method, new GsonSingleObjectDeserializer<RedmineResponseWrapper.IssuesWrapper>(GSON, RedmineResponseWrapper.IssuesWrapper.class)).getIssues();\n  }","commit_id":"5c6037b06be6bbfb49294ebddedc531fc15b3be1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private boolean useApiKeyAuthentication() {\n    return !StringUtil.isEmptyOrSpaces(myAPIKey) && !isUseHttpAuthentication();\n  }","id":50800,"modified_method":"private boolean isUseApiKeyAuthentication() {\n    return !StringUtil.isEmptyOrSpaces(myAPIKey) && !isUseHttpAuthentication();\n  }","commit_id":"5c6037b06be6bbfb49294ebddedc531fc15b3be1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public List<RedmineProject> fetchProjects() throws Exception {\n    URIBuilder builder = new URIBuilder(getRestApiUrl(\"projects.json\"));\n    if (useApiKeyAuthentication()) {\n      builder.addParameter(\"key\", myAPIKey);\n    }\n    HttpClient client = getHttpClient();\n    HttpGet method = new HttpGet(builder.toString());\n    return client.execute(method, new GsonSingleObjectDeserializer<ProjectsWrapper>(GSON, RedmineResponseWrapper.ProjectsWrapper.class)).getProjects();\n  }","id":50801,"modified_method":"public List<RedmineProject> fetchProjects() throws Exception {\n    URIBuilder builder = new URIBuilder(getRestApiUrl(\"projects.json\"));\n    if (isUseApiKeyAuthentication()) {\n      builder.addParameter(\"key\", myAPIKey);\n    }\n    HttpClient client = getHttpClient();\n    HttpGet method = new HttpGet(builder.toString());\n    return client.execute(method, new GsonSingleObjectDeserializer<ProjectsWrapper>(GSON, RedmineResponseWrapper.ProjectsWrapper.class)).getProjects();\n  }","commit_id":"5c6037b06be6bbfb49294ebddedc531fc15b3be1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void apply() {\n    myRepository.setProjectId(myProjectId.getText().trim());\n    myRepository.setAPIKey(myAPIKey.getText().trim());\n    super.apply();\n  }","id":50802,"modified_method":"@Override\n  public void apply() {\n    super.apply();\n    myRepository.setCurrentProject((RedmineProject)myProjectCombo.getSelectedItem());\n    myRepository.setAPIKey(myAPIKey.getText().trim());\n    myTestButton.setEnabled(myRepository.isConfigured());\n  }","commit_id":"5c6037b06be6bbfb49294ebddedc531fc15b3be1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public RedmineRepositoryEditor(final Project project, final RedmineRepository repository, Consumer<RedmineRepository> changeListener) {\n    super(project, repository, changeListener);\n    myProjectId.setText(repository.getProjectId());\n    myAPIKey.setText(repository.getAPIKey());\n  }","id":50803,"modified_method":"public RedmineRepositoryEditor(final Project project, final RedmineRepository repository, Consumer<RedmineRepository> changeListener) {\n    super(project, repository, changeListener);\n\n    myTestButton.setEnabled(myRepository.isConfigured());\n    myAPIKey.setText(repository.getAPIKey());\n\n    installListener(myProjectCombo);\n    installListener(myAPIKey);\n\n    UIUtil.invokeLaterIfNeeded(new Runnable() {\n      @Override\n      public void run() {\n        initialize();\n      }\n    });\n  }","commit_id":"5c6037b06be6bbfb49294ebddedc531fc15b3be1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void setAnchor(@Nullable final JComponent anchor) {\n    super.setAnchor(anchor);\n    myProjectIDLabel.setAnchor(anchor);\n    myAPIKeyLabel.setAnchor(anchor);\n  }","id":50804,"modified_method":"@Override\n  public void setAnchor(@Nullable final JComponent anchor) {\n    super.setAnchor(anchor);\n    myProjectLabel.setAnchor(anchor);\n    myAPIKeyLabel.setAnchor(anchor);\n  }","commit_id":"5c6037b06be6bbfb49294ebddedc531fc15b3be1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  @Override\n  protected JComponent createCustomPanel() {\n    myProjectIDLabel = new JBLabel(\"Project ID:\", SwingConstants.RIGHT);\n    myProjectId = new JTextField();\n    installListener(myProjectId);\n    myAPIKeyLabel = new JBLabel(\"API Token:\", SwingConstants.RIGHT);\n    myAPIKey = new JTextField();\n    installListener(myAPIKey);\n    return FormBuilder.createFormBuilder().addLabeledComponent(myProjectIDLabel, myProjectId).addLabeledComponent(myAPIKeyLabel, myAPIKey)\n      .getPanel();\n  }","id":50805,"modified_method":"@Nullable\n  @Override\n  protected JComponent createCustomPanel() {\n    myProjectLabel = new JBLabel(\"Project:\", SwingConstants.RIGHT);\n    myProjectCombo = new ComboBox(300);\n    myProjectCombo.setRenderer(new ListCellRendererWrapper<RedmineProject>() {\n      @Override\n      public void customize(JList list, RedmineProject redmineProject, int index, boolean selected, boolean hasFocus) {\n        setText(redmineProject == null ? \"Set URL and password/token first\" : redmineProject.getName());\n      }\n    });\n    myAPIKeyLabel = new JBLabel(\"API Token:\", SwingConstants.RIGHT);\n    myAPIKey = new JTextField();\n    return FormBuilder.createFormBuilder()\n      .addLabeledComponent(myAPIKeyLabel, myAPIKey)\n      .addLabeledComponent(myProjectLabel, myProjectCombo)\n      .getPanel();\n  }","commit_id":"5c6037b06be6bbfb49294ebddedc531fc15b3be1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public DroolingGroodion(UUID ownerId) {\r\n        super(ownerId, 65, \"Drooling Groodion\", Rarity.UNCOMMON, new CardType[]{CardType.CREATURE}, \"{3}{B}{B}{G}\");\r\n        this.expansionSetCode = \"DDM\";\r\n        this.subtype.add(\"Beast\");\r\n\r\n        this.color.setGreen(true);\r\n        this.color.setBlack(true);\r\n        this.power = new MageInt(4);\r\n        this.toughness = new MageInt(3);\r\n\r\n        // {2}{B}{G}, Sacrifice a creature: Target creature gets +2/+2 until end of turn. Another target creature gets -2/-2 until end of turn.\r\n        Ability ability = new SimpleActivatedAbility(Zone.BATTLEFIELD, new DroolingGroodionEffect(), new ManaCostsImpl(\"{2}{B}{G}\"));\r\n        ability.addCost(new SacrificeTargetCost(new TargetControlledCreaturePermanent(1, 1, new FilterControlledCreaturePermanent(), true)));\r\n        this.addAbility(ability);\r\n    }","id":50806,"modified_method":"public DroolingGroodion(UUID ownerId) {\r\n        super(ownerId, 65, \"Drooling Groodion\", Rarity.UNCOMMON, new CardType[]{CardType.CREATURE}, \"{3}{B}{B}{G}\");\r\n        this.expansionSetCode = \"DDM\";\r\n        this.subtype.add(\"Beast\");\r\n\r\n        this.power = new MageInt(4);\r\n        this.toughness = new MageInt(3);\r\n\r\n        // {2}{B}{G}, Sacrifice a creature: Target creature gets +2/+2 until end of turn. Another target creature gets -2/-2 until end of turn.\r\n        Ability ability = new SimpleActivatedAbility(Zone.BATTLEFIELD, new DroolingGroodionEffect(), new ManaCostsImpl(\"{2}{B}{G}\"));\r\n        ability.addCost(new SacrificeTargetCost(new TargetControlledCreaturePermanent(1, 1, new FilterControlledCreaturePermanent(), true)));\r\n        ability.addTarget(new TargetCreaturePermanent(new FilterCreaturePermanent(\"creature (first target)\")));\r\n        ability.addTarget(new TargetCreaturePermanent(new FilterCreaturePermanent(\"creature (second target)\")));\r\n        this.addAbility(ability);\r\n    }","commit_id":"cc638261d888939be0472670c5077a64e8b9087b","url":"https://github.com/magefree/mage"},{"original_method":"@Override\r\n    public boolean apply(Game game, Ability source) {\r\n        Permanent permanent = game.getPermanent(source.getFirstTarget());\r\n        if (permanent != null) {\r\n            permanent.addPower(2);\r\n            permanent.addToughness(2);\r\n        }\r\n        permanent = game.getPermanent(source.getTargets().get(0).getTargets().get(1));\r\n        if (permanent != null) {\r\n            permanent.addPower(-2);\r\n            permanent.addToughness(-2);\r\n        }\r\n        return true;\r\n    }","id":50807,"modified_method":"@Override\r\n    public boolean apply(Game game, Ability source) {\r\n        Permanent permanent = game.getPermanent(source.getFirstTarget());\r\n        if (permanent != null) {\r\n            permanent.addPower(2);\r\n            permanent.addToughness(2);\r\n        }\r\n        permanent = game.getPermanent(source.getTargets().get(1).getFirstTarget());\r\n        if (permanent != null) {\r\n            permanent.addPower(-2);\r\n            permanent.addToughness(-2);\r\n        }\r\n        return true;\r\n    }","commit_id":"cc638261d888939be0472670c5077a64e8b9087b","url":"https://github.com/magefree/mage"},{"original_method":"@Override\n    public boolean apply(Game game, Ability source) {\n        Player player = game.getPlayer(source.getControllerId());\n        Card card = (Card)game.getObject(source.getFirstTarget());\n        if (player != null && card != null && player.removeFromGraveyard(card, game)) {\n            card.moveToZone(Zone.HAND, source.getSourceId(), game, false);            \n            if (!card.getCardType().contains(CardType.LAND)) {\n                int damage = card.getManaCost().convertedManaCost();\n                Permanent permanent = game.getPermanent(source.getTargets().get(1).getTargets().get(0));\n                if (permanent != null) {\n                    permanent.damage(damage, source.getSourceId(), game, false, true);\n                }\n                Player targetPlayer = game.getPlayer(source.getTargets().get(1).getTargets().get(0));\n                if (targetPlayer != null) {\n                    targetPlayer.damage(damage, source.getSourceId(), game, false, true);\n                }\n            }\n            return true;\n        }\n        return false;\n    }","id":50808,"modified_method":"@Override\n    public boolean apply(Game game, Ability source) {\n        Player controller = game.getPlayer(source.getControllerId());\n        Card card = (Card)game.getObject(source.getFirstTarget());\n        if (controller != null && card != null && controller.removeFromGraveyard(card, game)) {\n            controller.moveCards(card, Zone.GRAVEYARD, Zone.HAND, source, game);\n            if (!card.getCardType().contains(CardType.LAND)) {\n                int damage = card.getManaCost().convertedManaCost();                \n                Permanent permanent = game.getPermanent(source.getTargets().get(1).getFirstTarget());\n                if (permanent != null) {\n                    permanent.damage(damage, source.getSourceId(), game, false, true);\n                }\n                Player targetPlayer = game.getPlayer(source.getTargets().get(1).getFirstTarget());\n                if (targetPlayer != null) {\n                    targetPlayer.damage(damage, source.getSourceId(), game, false, true);\n                }\n            }\n            return true;\n        }\n        return false;\n    }","commit_id":"50e8e3930c86f5a557c92e4fb283a7add57d72be","url":"https://github.com/magefree/mage"},{"original_method":"public VengefulRebirth(UUID ownerId) {\n        super(ownerId, 62, \"Vengeful Rebirth\", Rarity.UNCOMMON, new CardType[]{CardType.SORCERY}, \"{4}{R}{G}\");\n        this.expansionSetCode = \"ARB\";\n\n\n        // Return target card from your graveyard to your hand. If you return a nonland card to your hand this way, {this} deals damage equal to that card's converted mana cost to target creature or player\n        Target target = new TargetCardInYourGraveyard();\n        this.getSpellAbility().addTarget(target);\n        this.getSpellAbility().addTarget(new TargetCreatureOrPlayer());\n        this.getSpellAbility().addEffect(new VengefulRebirthEffect());\n        // Exile Vengeful Rebirth.\n        this.getSpellAbility().addEffect(ExileSpellEffect.getInstance());\n    }","id":50809,"modified_method":"public VengefulRebirth(UUID ownerId) {\n        super(ownerId, 62, \"Vengeful Rebirth\", Rarity.UNCOMMON, new CardType[]{CardType.SORCERY}, \"{4}{R}{G}\");\n        this.expansionSetCode = \"ARB\";\n\n        // Return target card from your graveyard to your hand. If you return a nonland card to your hand this way, {this} deals damage equal to that card's converted mana cost to target creature or player\n        this.getSpellAbility().addTarget(new TargetCardInYourGraveyard());\n        this.getSpellAbility().addTarget(new TargetCreatureOrPlayer());\n        this.getSpellAbility().addEffect(new VengefulRebirthEffect());\n        \n        // Exile Vengeful Rebirth.\n        this.getSpellAbility().addEffect(ExileSpellEffect.getInstance());\n    }","commit_id":"50e8e3930c86f5a557c92e4fb283a7add57d72be","url":"https://github.com/magefree/mage"},{"original_method":"public Bioshift(UUID ownerId) {\r\n        super(ownerId, 214, \"Bioshift\", Rarity.COMMON, new CardType[]{CardType.INSTANT}, \"{G/U}\");\r\n        this.expansionSetCode = \"GTC\";\r\n\r\n        // Move any number of +1/+1 counters from target creature onto another target creature with the same controller.\r\n        getSpellAbility().addEffect(new MoveCounterFromTargetToTargetEffect());\r\n        getSpellAbility().addTarget(new TargetCreaturePermanent(new FilterCreaturePermanent(\"creature (you take counters from)\")));\r\n        getSpellAbility().addTarget(new BioshiftSecondTargetPermanent());\r\n    }","id":50810,"modified_method":"public Bioshift(UUID ownerId) {\r\n        super(ownerId, 214, \"Bioshift\", Rarity.COMMON, new CardType[]{CardType.INSTANT}, \"{G/U}\");\r\n        this.expansionSetCode = \"GTC\";\r\n\r\n        // Move any number of +1/+1 counters from target creature onto another target creature with the same controller.\r\n        getSpellAbility().addEffect(new MoveCounterFromTargetToTargetEffect());\r\n        getSpellAbility().addTarget(new TargetCreaturePermanent(new FilterCreaturePermanent(\"creature (you take counters from)\")));\r\n        getSpellAbility().addTarget(new BioshiftSecondTargetCreaturePermanent());\r\n    }","commit_id":"ed5361cbd6e61408e7a3ec42ed47aad766ea2287","url":"https://github.com/magefree/mage"},{"original_method":"public ConsumeStrength(UUID ownerId) {\r\n        super(ownerId, 93, \"Consume Strength\", Rarity.COMMON, new CardType[]{CardType.INSTANT}, \"{1}{B}{G}\");\r\n        this.expansionSetCode = \"APC\";\r\n\r\n\r\n        // Target creature gets +2/+2 until end of turn. Another target creature gets -2/-2 until end of turn.\r\n        this.getSpellAbility().addEffect(new ConsumeStrengthEffect());\r\n        this.getSpellAbility().addTarget(new TargetCreaturePermanent(2));\r\n        \r\n    }","id":50811,"modified_method":"public ConsumeStrength(UUID ownerId) {\r\n        super(ownerId, 93, \"Consume Strength\", Rarity.COMMON, new CardType[]{CardType.INSTANT}, \"{1}{B}{G}\");\r\n        this.expansionSetCode = \"APC\";\r\n\r\n\r\n        // Target creature gets +2/+2 until end of turn. Another target creature gets -2/-2 until end of turn.\r\n        this.getSpellAbility().addEffect(new ConsumeStrengthEffect());\r\n        \r\n        FilterCreaturePermanent filter1 = new FilterCreaturePermanent(\"creature to get +2/+2\");\r\n        TargetCreaturePermanent target1 = new TargetCreaturePermanent(filter1);\r\n        target1.setTargetTag(1);\r\n        this.getSpellAbility().addTarget(target1);\r\n        \r\n        FilterCreaturePermanent filter2 = new FilterCreaturePermanent(\"another creature to get -2/-2\");\r\n        filter2.add(new AnotherTargetPredicate(2));\r\n        TargetCreaturePermanent target2 = new TargetCreaturePermanent(filter2);\r\n        target2.setTargetTag(2);\r\n        this.getSpellAbility().addTarget(target2);\r\n    }","commit_id":"ed5361cbd6e61408e7a3ec42ed47aad766ea2287","url":"https://github.com/magefree/mage"},{"original_method":"@Override\r\n    public boolean apply(Game game, Ability source) {\r\n        Permanent permanent = game.getPermanent(source.getFirstTarget());\r\n        if (permanent != null) {\r\n            permanent.addPower(2);\r\n            permanent.addToughness(2);\r\n        }\r\n        permanent = game.getPermanent(source.getTargets().get(0).getTargets().get(1));\r\n        if (permanent != null) {\r\n            permanent.addPower(-2);\r\n            permanent.addToughness(-2);\r\n        }\r\n        return true;\r\n    }","id":50812,"modified_method":"@Override\r\n    public boolean apply(Game game, Ability source) {\r\n        Permanent permanent = game.getPermanent(source.getFirstTarget());\r\n        if (permanent != null) {\r\n            permanent.addPower(2);\r\n            permanent.addToughness(2);\r\n        }\r\n        permanent = game.getPermanent(source.getTargets().get(1).getFirstTarget());\r\n        if (permanent != null) {\r\n            permanent.addPower(-2);\r\n            permanent.addToughness(-2);\r\n        }\r\n        return true;\r\n    }","commit_id":"ed5361cbd6e61408e7a3ec42ed47aad766ea2287","url":"https://github.com/magefree/mage"},{"original_method":"public FateTransfer(UUID ownerId) {\r\n        super(ownerId, 161, \"Fate Transfer\", Rarity.COMMON, new CardType[]{CardType.INSTANT}, \"{1}{U/B}\");\r\n        this.expansionSetCode = \"SHM\";\r\n\r\n        // Move all counters from target creature onto another target creature.\r\n        this.getSpellAbility().addEffect(new FateTransferEffect());\r\n        this.getSpellAbility().addTarget(new TargetCreaturePermanent(filter));\r\n        this.getSpellAbility().addTarget(new TargetCreaturePermanent(filter2));\r\n\r\n    }","id":50813,"modified_method":"public FateTransfer(UUID ownerId) {\r\n        super(ownerId, 161, \"Fate Transfer\", Rarity.COMMON, new CardType[]{CardType.INSTANT}, \"{1}{U/B}\");\r\n        this.expansionSetCode = \"SHM\";\r\n\r\n        // Move all counters from target creature onto another target creature.\r\n        this.getSpellAbility().addEffect(new FateTransferEffect());\r\n        \r\n        TargetCreaturePermanent fromTarget = new TargetCreaturePermanent(filter);\r\n        fromTarget.setTargetTag(1);\r\n        this.getSpellAbility().addTarget(fromTarget);\r\n        \r\n        TargetCreaturePermanent toTarget = new TargetCreaturePermanent(filter2);\r\n        filter2.add(new AnotherTargetPredicate(2));\r\n        toTarget.setTargetTag(2);\r\n        this.getSpellAbility().addTarget(toTarget);\r\n\r\n    }","commit_id":"ed5361cbd6e61408e7a3ec42ed47aad766ea2287","url":"https://github.com/magefree/mage"},{"original_method":"public FeralContest(UUID ownerId) {\r\n        super(ownerId, 100, \"Feral Contest\", Rarity.COMMON, new CardType[]{CardType.SORCERY}, \"{3}{G}\");\r\n        this.expansionSetCode = \"WWK\";\r\n\r\n        // Put a +1/+1 counter on target creature you control.\r\n        this.getSpellAbility().addEffect(new AddCountersTargetEffect(CounterType.P1P1.createInstance()));\r\n        this.getSpellAbility().addTarget(new TargetControlledCreaturePermanent());\r\n        // Another target creature blocks it this turn if able.\r\n        this.getSpellAbility().addEffect(new FeralContestEffect());\r\n        this.getSpellAbility().addTarget(new TargetCreaturePermanent());\r\n    }","id":50814,"modified_method":"public FeralContest(UUID ownerId) {\r\n        super(ownerId, 100, \"Feral Contest\", Rarity.COMMON, new CardType[]{CardType.SORCERY}, \"{3}{G}\");\r\n        this.expansionSetCode = \"WWK\";\r\n\r\n        // Put a +1/+1 counter on target creature you control.\r\n        this.getSpellAbility().addEffect(new AddCountersTargetEffect(CounterType.P1P1.createInstance()));\r\n        \r\n        TargetControlledCreaturePermanent target1 = new TargetControlledCreaturePermanent();\r\n        target1.setTargetTag(1);\r\n        this.getSpellAbility().addTarget(target1);\r\n        \r\n        // Another target creature blocks it this turn if able.\r\n        this.getSpellAbility().addEffect(new FeralContestEffect());\r\n        FilterCreaturePermanent filter = new FilterCreaturePermanent(\"another creature (must block this turn)\");\r\n        filter.add(new AnotherTargetPredicate(2));\r\n        TargetCreaturePermanent target2 = new TargetCreaturePermanent(filter);\r\n        target2.setTargetTag(2);\r\n        this.getSpellAbility().addTarget(target2);\r\n    }","commit_id":"ed5361cbd6e61408e7a3ec42ed47aad766ea2287","url":"https://github.com/magefree/mage"},{"original_method":"@Override\r\n    public boolean apply(Game game, Ability source) {\r\n        int i = 0;\r\n        for (UUID targetId : getTargetPointer().getTargets(game, source)) {\r\n            i++;\r\n            Permanent creature = game.getPermanent(targetId);\r\n            if (creature != null) {\r\n                creature.addCounters(CounterType.M1M1.createInstance(i), game);\r\n            }\r\n        }\r\n        return false;\r\n    }","id":50815,"modified_method":"@Override\r\n    public boolean apply(Game game, Ability source) {\r\n        int i = 0;\r\n        for (Target target : source.getTargets()) {\r\n            i++;\r\n            Permanent creature = game.getPermanent(target.getFirstTarget());\r\n            if (creature != null) {\r\n                creature.addCounters(CounterType.M1M1.createInstance(i), game);\r\n            }\r\n        }\r\n        return false;\r\n    }","commit_id":"ed5361cbd6e61408e7a3ec42ed47aad766ea2287","url":"https://github.com/magefree/mage"},{"original_method":"public IncrementalBlight(UUID ownerId) {\r\n        super(ownerId, 70, \"Incremental Blight\", Rarity.UNCOMMON, new CardType[]{CardType.SORCERY}, \"{3}{B}{B}\");\r\n        this.expansionSetCode = \"SHM\";\r\n\r\n\r\n        // Put a -1/-1 counter on target creature, two -1/-1 counters on another target creature, and three -1/-1 counters on a third target creature.\r\n        this.getSpellAbility().addEffect(new IncrementalBlightEffect());\r\n        Target target = new TargetCreaturePermanent(3,3);\r\n        this.getSpellAbility().addTarget(target);                       \r\n    }","id":50816,"modified_method":"public IncrementalBlight(UUID ownerId) {\r\n        super(ownerId, 70, \"Incremental Blight\", Rarity.UNCOMMON, new CardType[]{CardType.SORCERY}, \"{3}{B}{B}\");\r\n        this.expansionSetCode = \"SHM\";\r\n\r\n\r\n        // Put a -1/-1 counter on target creature, two -1/-1 counters on another target creature, and three -1/-1 counters on a third target creature.\r\n        this.getSpellAbility().addEffect(new IncrementalBlightEffect());\r\n        \r\n        FilterCreaturePermanent filter1 = new FilterCreaturePermanent(\"creature (gets a -1/-1 counter)\");\r\n        TargetCreaturePermanent target1 = new TargetCreaturePermanent(filter1);\r\n        target1.setTargetTag(1);\r\n        this.getSpellAbility().addTarget(target1);\r\n        \r\n        FilterCreaturePermanent filter2 = new FilterCreaturePermanent(\"another creature (gets two -1/-1 counters)\");\r\n        filter2.add(new AnotherTargetPredicate(2));\r\n        TargetCreaturePermanent target2 = new TargetCreaturePermanent(filter2);\r\n        target2.setTargetTag(2);\r\n        this.getSpellAbility().addTarget(target2);\r\n        \r\n        FilterCreaturePermanent filter3 = new FilterCreaturePermanent(\"another creature (gets three -1/-1 counters)\");\r\n        filter3.add(new AnotherTargetPredicate(3));\r\n        TargetCreaturePermanent target3 = new TargetCreaturePermanent(filter3);\r\n        target3.setTargetTag(3);\r\n        this.getSpellAbility().addTarget(target3);\r\n    }","commit_id":"ed5361cbd6e61408e7a3ec42ed47aad766ea2287","url":"https://github.com/magefree/mage"},{"original_method":"@Override\r\n    public boolean apply(Game game, Ability source) {\r\n        int i = 0;\r\n        for (UUID targetId : getTargetPointer().getTargets(game, source)) {\r\n            i++;\r\n            Permanent creature = game.getPermanent(targetId);\r\n            if (creature != null) {\r\n                creature.addCounters(CounterType.P1P1.createInstance(i), game);\r\n            }\r\n        }\r\n        return false;\r\n    }","id":50817,"modified_method":"@Override\r\n    public boolean apply(Game game, Ability source) {\r\n        int i = 0;\r\n        for (Target target : source.getTargets()) {\r\n            i++;\r\n            Permanent creature = game.getPermanent(target.getFirstTarget());\r\n            if (creature != null) {\r\n                creature.addCounters(CounterType.P1P1.createInstance(i), game);\r\n            }\r\n        }\r\n        return false;\r\n    }","commit_id":"ed5361cbd6e61408e7a3ec42ed47aad766ea2287","url":"https://github.com/magefree/mage"},{"original_method":"public IncrementalGrowth(UUID ownerId) {\r\n        super(ownerId, 149, \"Incremental Growth\", Rarity.UNCOMMON, new CardType[]{CardType.SORCERY}, \"{3}{G}{G}\");\r\n        this.expansionSetCode = \"MMA\";\r\n\r\n\r\n        // Put a +1/+1 counter on target creature, two +1/+1 counters on another target creature, and three +1/+1 counters on a third target creature.\r\n        this.getSpellAbility().addEffect(new IncrementalGrowthEffect());\r\n        Target target = new TargetCreaturePermanent(3,3);\r\n        this.getSpellAbility().addTarget(target);\r\n    }","id":50818,"modified_method":"public IncrementalGrowth(UUID ownerId) {\r\n        super(ownerId, 149, \"Incremental Growth\", Rarity.UNCOMMON, new CardType[]{CardType.SORCERY}, \"{3}{G}{G}\");\r\n        this.expansionSetCode = \"MMA\";\r\n\r\n\r\n        // Put a +1/+1 counter on target creature, two +1/+1 counters on another target creature, and three +1/+1 counters on a third target creature.\r\n        this.getSpellAbility().addEffect(new IncrementalGrowthEffect());\r\n        \r\n        FilterCreaturePermanent filter1 = new FilterCreaturePermanent(\"creature (gets a +1/+1 counter)\");\r\n        TargetCreaturePermanent target1 = new TargetCreaturePermanent(filter1);\r\n        target1.setTargetTag(1);\r\n        this.getSpellAbility().addTarget(target1);\r\n        \r\n        FilterCreaturePermanent filter2 = new FilterCreaturePermanent(\"another creature (gets two +1/+1 counter)\");\r\n        filter2.add(new AnotherTargetPredicate(2));\r\n        TargetCreaturePermanent target2 = new TargetCreaturePermanent(filter2);\r\n        target2.setTargetTag(2);\r\n        this.getSpellAbility().addTarget(target2);\r\n        \r\n        FilterCreaturePermanent filter3 = new FilterCreaturePermanent(\"another creature (gets three +1/+1 counters)\");\r\n        filter3.add(new AnotherTargetPredicate(3));\r\n        TargetCreaturePermanent target3 = new TargetCreaturePermanent(filter3);\r\n        target3.setTargetTag(3);\r\n        this.getSpellAbility().addTarget(target3);\r\n    }","commit_id":"ed5361cbd6e61408e7a3ec42ed47aad766ea2287","url":"https://github.com/magefree/mage"},{"original_method":"public LeechingBite(UUID ownerId) {\r\n        super(ownerId, 113, \"Leeching Bite\", Rarity.COMMON, new CardType[]{CardType.INSTANT}, \"{1}{G}\");\r\n        this.expansionSetCode = \"NPH\";\r\n\r\n        // Target creature gets +1/+1 until end of turn. Another target creature gets -1/-1 until end of turn.\r\n        Effect effect = new BoostTargetEffect(1, 1, Duration.EndOfTurn);\r\n        effect.setText(\"Target creature gets +1/+1 until end of turn\");\r\n        this.getSpellAbility().addEffect(effect);\r\n        this.getSpellAbility().addTarget(new TargetCreaturePermanent(new FilterCreaturePermanent(\"creature (getting the +1/+1 counter)\")));\r\n        effect = new BoostTargetEffect(-1, -1, Duration.EndOfTurn);\r\n        effect.setText(\"Another target creature gets -1/-1 until end of turn\");\r\n        effect.setTargetPointer(new SecondTargetPointer());\r\n        this.getSpellAbility().addEffect(effect);\r\n        this.getSpellAbility().addTarget(new TargetCreaturePermanent(new FilterCreaturePermanent(\"creature (getting the -1/-1 counter)\")));\r\n    }","id":50819,"modified_method":"public LeechingBite(UUID ownerId) {\r\n        super(ownerId, 113, \"Leeching Bite\", Rarity.COMMON, new CardType[]{CardType.INSTANT}, \"{1}{G}\");\r\n        this.expansionSetCode = \"NPH\";\r\n\r\n        \r\n        // Target creature gets +1/+1 until end of turn. Another target creature gets -1/-1 until end of turn.\r\n        this.getSpellAbility().addEffect(new LeechingBiteEffect());\r\n        \r\n        FilterCreaturePermanent filter1 = new FilterCreaturePermanent(\"creature to get +1/+1\");\r\n        TargetCreaturePermanent target1 = new TargetCreaturePermanent(filter1);\r\n        target1.setTargetTag(1);\r\n        this.getSpellAbility().addTarget(target1);\r\n        \r\n        FilterCreaturePermanent filter2 = new FilterCreaturePermanent(\"another creature to get -1/-1\");\r\n        filter2.add(new AnotherTargetPredicate(2));\r\n        TargetCreaturePermanent target2 = new TargetCreaturePermanent(filter2);\r\n        target2.setTargetTag(2);\r\n        this.getSpellAbility().addTarget(target2);\r\n    }","commit_id":"ed5361cbd6e61408e7a3ec42ed47aad766ea2287","url":"https://github.com/magefree/mage"},{"original_method":"@Override\r\n    public boolean apply(Game game, Ability source) {\r\n        Permanent permanent = game.getPermanent(source.getFirstTarget());\r\n        if (permanent != null) {\r\n            permanent.addPower(3);\r\n            permanent.addToughness(3);\r\n        }\r\n        permanent = game.getPermanent(source.getTargets().get(0).getTargets().get(1));\r\n        if (permanent != null) {\r\n            permanent.addPower(-3);\r\n            permanent.addToughness(-3);\r\n        }\r\n        return true;\r\n    }","id":50820,"modified_method":"@Override\r\n    public boolean apply(Game game, Ability source) {\r\n        Permanent permanent = game.getPermanent(source.getFirstTarget());\r\n        if (permanent != null) {\r\n            permanent.addPower(3);\r\n            permanent.addToughness(3);\r\n        }\r\n        permanent = game.getPermanent(source.getTargets().get(1).getFirstTarget());\r\n        if (permanent != null) {\r\n            permanent.addPower(-3);\r\n            permanent.addToughness(-3);\r\n        }\r\n        return true;\r\n    }","commit_id":"ed5361cbd6e61408e7a3ec42ed47aad766ea2287","url":"https://github.com/magefree/mage"},{"original_method":"public RitesOfReaping(UUID ownerId) {\r\n        super(ownerId, 191, \"Rites of Reaping\", Rarity.UNCOMMON, new CardType[]{CardType.SORCERY}, \"{4}{B}{G}\");\r\n        this.expansionSetCode = \"RTR\";\r\n\r\n\r\n        // Target creature gets +3/+3 until end of turn. Another target creature gets -3/-3 until end of turn.\r\n        this.getSpellAbility().addEffect(new RitesOfReapingEffect());\r\n        this.getSpellAbility().addTarget(new TargetCreaturePermanent(2));\r\n    }","id":50821,"modified_method":"public RitesOfReaping(UUID ownerId) {\r\n        super(ownerId, 191, \"Rites of Reaping\", Rarity.UNCOMMON, new CardType[]{CardType.SORCERY}, \"{4}{B}{G}\");\r\n        this.expansionSetCode = \"RTR\";\r\n\r\n\r\n        // Target creature gets +3/+3 until end of turn. Another target creature gets -3/-3 until end of turn.\r\n        this.getSpellAbility().addEffect(new RitesOfReapingEffect());\r\n        \r\n        FilterCreaturePermanent filter1 = new FilterCreaturePermanent(\"creature (gets +3/+3 until end of turn)\");\r\n        TargetCreaturePermanent target1 = new TargetCreaturePermanent(filter1);\r\n        target1.setTargetTag(1);\r\n        this.getSpellAbility().addTarget(target1);\r\n        \r\n        FilterCreaturePermanent filter2 = new FilterCreaturePermanent(\"another creature (gets -3/-3 until end of turn)\");\r\n        filter2.add(new AnotherTargetPredicate(2));\r\n        TargetCreaturePermanent target2 = new TargetCreaturePermanent(filter2);\r\n        target2.setTargetTag(2);\r\n        this.getSpellAbility().addTarget(target2);\r\n    }","commit_id":"ed5361cbd6e61408e7a3ec42ed47aad766ea2287","url":"https://github.com/magefree/mage"},{"original_method":"@Override\n    public boolean apply(Game game, Ability source) {\n        Permanent permanent = game.getPermanent(source.getFirstTarget());\n        if (permanent != null) {\n            permanent.addPower(4);\n        }\n        permanent = game.getPermanent(source.getTargets().get(0).getTargets().get(1));\n        if (permanent != null) {\n            permanent.addPower(-4);\n        }\n        return true;\n    }","id":50822,"modified_method":"@Override\n    public boolean apply(Game game, Ability source) {\n        Permanent permanent = game.getPermanent(source.getFirstTarget());\n        if (permanent != null) {\n            permanent.addPower(4);\n        }\n        permanent = game.getPermanent(source.getTargets().get(1).getFirstTarget());\n        if (permanent != null) {\n            permanent.addPower(-4);\n        }\n        return true;\n    }","commit_id":"ed5361cbd6e61408e7a3ec42ed47aad766ea2287","url":"https://github.com/magefree/mage"},{"original_method":"public Schismotivate(UUID ownerId) {\n        super(ownerId, 129, \"Schismotivate\", Rarity.UNCOMMON, new CardType[]{CardType.INSTANT}, \"{1}{U}{R}\");\n        this.expansionSetCode = \"GPT\";\n\n        // Target creature gets +4/+0 until end of turn. Another target creature gets -4/-0 until end of turn.\n        this.getSpellAbility().addEffect(new SchismotivateEffect());\n        this.getSpellAbility().addTarget(new TargetCreaturePermanent(2));\n    }","id":50823,"modified_method":"public Schismotivate(UUID ownerId) {\n        super(ownerId, 129, \"Schismotivate\", Rarity.UNCOMMON, new CardType[]{CardType.INSTANT}, \"{1}{U}{R}\");\n        this.expansionSetCode = \"GPT\";\n\n        // Target creature gets +4/+0 until end of turn. Another target creature gets -4/-0 until end of turn.\n        this.getSpellAbility().addEffect(new SchismotivateEffect());\n        \n        FilterCreaturePermanent filter1 = new FilterCreaturePermanent(\"creature (gets +4/+0 until end of turn)\");\n        TargetCreaturePermanent target1 = new TargetCreaturePermanent(filter1);\n        target1.setTargetTag(1);\n        this.getSpellAbility().addTarget(target1);\n        \n        FilterCreaturePermanent filter2 = new FilterCreaturePermanent(\"another creature (gets -4/-0 until end of turn)\");\n        filter2.add(new AnotherTargetPredicate(2));\n        TargetCreaturePermanent target2 = new TargetCreaturePermanent(filter2);\n        target2.setTargetTag(2);\n        this.getSpellAbility().addTarget(target2);\n    }","commit_id":"ed5361cbd6e61408e7a3ec42ed47aad766ea2287","url":"https://github.com/magefree/mage"},{"original_method":"public StealStrength(UUID ownerId) {\n        super(ownerId, 79, \"Steal Strength\", Rarity.COMMON, new CardType[]{CardType.INSTANT}, \"{1}{B}\");\n        this.expansionSetCode = \"PCY\";\n\n        // Target creature gets +1/+1 until end of turn. Another target creature gets -1/-1 until end of turn.\n        this.getSpellAbility().addEffect(new StealStrengthEffect());\n        this.getSpellAbility().addTarget(new TargetCreaturePermanent(2));\n    }","id":50824,"modified_method":"public StealStrength(UUID ownerId) {\n        super(ownerId, 79, \"Steal Strength\", Rarity.COMMON, new CardType[]{CardType.INSTANT}, \"{1}{B}\");\n        this.expansionSetCode = \"PCY\";\n\n        // Target creature gets +1/+1 until end of turn. Another target creature gets -1/-1 until end of turn.\n        this.getSpellAbility().addEffect(new StealStrengthEffect());\n        \n        FilterCreaturePermanent filter1 = new FilterCreaturePermanent(\"creature (gets +1/+1 until end of turn)\");\n        TargetCreaturePermanent target1 = new TargetCreaturePermanent(filter1);\n        target1.setTargetTag(1);\n        this.getSpellAbility().addTarget(target1);\n        \n        FilterCreaturePermanent filter2 = new FilterCreaturePermanent(\"another creature (gets -1/-1 until end of turn)\");\n        filter2.add(new AnotherTargetPredicate(2));\n        TargetCreaturePermanent target2 = new TargetCreaturePermanent(filter2);\n        target2.setTargetTag(2);\n        this.getSpellAbility().addTarget(target2);\n    }","commit_id":"ed5361cbd6e61408e7a3ec42ed47aad766ea2287","url":"https://github.com/magefree/mage"},{"original_method":"@Override\n    public boolean apply(Game game, Ability source) {\n        Permanent permanent = game.getPermanent(source.getFirstTarget());\n        if (permanent != null) {\n            permanent.addPower(1);\n            permanent.addToughness(1);\n        }\n        permanent = game.getPermanent(source.getTargets().get(0).getTargets().get(1));\n        if (permanent != null) {\n            permanent.addPower(-1);\n            permanent.addToughness(-1);\n        }\n        return true;\n    }","id":50825,"modified_method":"@Override\n    public boolean apply(Game game, Ability source) {\n        Permanent permanent = game.getPermanent(source.getFirstTarget());\n        if (permanent != null) {\n            permanent.addPower(1);\n            permanent.addToughness(1);\n        }\n        permanent = game.getPermanent(source.getTargets().get(1).getFirstTarget());\n        if (permanent != null) {\n            permanent.addPower(-1);\n            permanent.addToughness(-1);\n        }\n        return true;\n    }","commit_id":"ed5361cbd6e61408e7a3ec42ed47aad766ea2287","url":"https://github.com/magefree/mage"},{"original_method":"private void execute() {\n    if (myCommandLevel > 0) return;\n    //myDeletedStorage.sync();\n    if (myDeleteHandler != null) myDeleteHandler.execute();\n    if (myAddHandler != null) myAddHandler.execute();\n\n    myDeleteHandler = null;\n    myAddHandler = null;\n  }","id":50826,"modified_method":"private void execute() {\n    if (myCommandLevel > 0) {\n      return;\n    }\n    //myDeletedStorage.sync();\n    if (!myAnotherProjectCommand) {\n      if (myDeleteHandler != null) {\n        myDeleteHandler.execute();\n      }\n      if (myAddHandler != null) {\n        myAddHandler.execute();\n      }\n    }\n    myAnotherProjectCommand = false;\n    myDeleteHandler = null;\n    myAddHandler = null;\n  }","commit_id":"8adb67ef90b2640d606abe19fac18b98353d5c7e","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private boolean shouldProcessEvent(VirtualFileEvent event, boolean parentShouldBeUnderCvs) {\n    if (myAnotherProjectCommand) return false;\n    VirtualFile file = event.getFile();\n    if (disabled(file)) return false;\n    if (event.isFromRefresh()) return false;\n    if (isStorageEvent(event)) return false;\n    if (!isUnderCvsManagedModuleRoot(file)) return false;\n    return !(parentShouldBeUnderCvs && !parentIsUnderCvs(file));\n  }","id":50827,"modified_method":"private boolean shouldProcessEvent(VirtualFileEvent event, boolean parentShouldBeUnderCvs) {\n    if (myAnotherProjectCommand) {\n      return false;\n    }\n    final VirtualFile file = event.getFile();\n    if (disabled(file) || event.isFromRefresh() || isStorageEvent(event) || !isUnderCvsManagedModuleRoot(file)) {\n      return false;\n    }\n    return !parentShouldBeUnderCvs || parentIsUnderCvs(file);\n  }","commit_id":"8adb67ef90b2640d606abe19fac18b98353d5c7e","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void initializeDeletedStorage() {\n    File storageRoot = getStorageRoot();\n    storageRoot.mkdirs();\n    myDeletedStorage = new DeletedCVSDirectoryStorage(storageRoot);\n  }","id":50828,"modified_method":"private void initializeDeletedStorage() {\n    final File storageRoot = getStorageRoot();\n    storageRoot.mkdirs();\n    myDeletedStorage = new DeletedCVSDirectoryStorage(storageRoot);\n  }","commit_id":"8adb67ef90b2640d606abe19fac18b98353d5c7e","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private AbstractVcs getFileVcs(VirtualFile file) {\n    AbstractVcs storedData = file.getUserData(FILE_VCS);\n    if (storedData != null) {\n      return storedData;\n    }\n    else {\n      return ProjectLevelVcsManager.getInstance(myProject).getVcsFor(file);\n    }\n  }","id":50829,"modified_method":"private AbstractVcs getFileVcs(VirtualFile file) {\n    final AbstractVcs storedData = file.getUserData(FILE_VCS);\n    if (storedData != null) {\n      return storedData;\n    }\n    return ProjectLevelVcsManager.getInstance(myProject).getVcsFor(file);\n  }","commit_id":"8adb67ef90b2640d606abe19fac18b98353d5c7e","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void commandFinished(CommandEvent event) {\n    myCommandLevel--;\n    if (myCommandLevel == 0) myAnotherProjectCommand = false;\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Finished\" + event.getCommandName() + \", commandLevel: \" + myCommandLevel);\n    }\n    execute();\n  }","id":50830,"modified_method":"public void commandFinished(CommandEvent event) {\n    myCommandLevel--;\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Finished\" + event.getCommandName() + \", commandLevel: \" + myCommandLevel);\n    }\n    execute();\n  }","commit_id":"8adb67ef90b2640d606abe19fac18b98353d5c7e","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  protected void processContentChanged(VFileEvent event, ReloadSession reloadSession) {\n    if (!event.isFromRefresh()) {\n      return;\n    }\n    EditableSModelDescriptor model = SModelRepository.getInstance().findModel(FileSystem.getInstance().getFileByPath(event.getPath()));\n    LOG.debug(\"Content change event for model file \" + event.getPath() + \". Found model \" + model + \".\" + (model != null ? \" Needs reloading \" + model.needsReloading() : \"\"));\n    if ((model != null) && (model.needsReloading())) {\n      reloadSession.addChangedModel(model);\n    }\n  }","id":50831,"modified_method":"@Override\n  protected void processContentChanged(VFileEvent event, ReloadSession reloadSession) {\n    if (event.isFromRefresh() || event.getRequestor() instanceof FileDocumentManager) {\n      EditableSModelDescriptor model = SModelRepository.getInstance().findModel(FileSystem.getInstance().getFileByPath(event.getPath()));\n      LOG.debug(\"Content change event for model file \" + event.getPath() + \". Found model \" + model + \".\" + (model != null ? \" Needs reloading \" + model.needsReloading() : \"\"));\n      if ((model != null) && (model.needsReloading())) {\n        reloadSession.addChangedModel(model);\n      }\n    }\n  }","commit_id":"b6a6eaf42cf281b690a33ff9a2577ebc66eb13d2","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  protected void processContentChanged(VFileEvent event, ReloadSession reloadSession) {\n    if (!event.isFromRefresh()) {\n      return;\n    }\n    IModule module = getModuleByEvent(event);\n    if ((module != null) && (module.needReloading())) {\n      reloadSession.addChangedModule(module);\n    }\n  }","id":50832,"modified_method":"@Override\n  protected void processContentChanged(VFileEvent event, ReloadSession reloadSession) {\n    if (event.isFromRefresh() && event.getRequestor() instanceof FileDocumentManager) {\n      IModule module = getModuleByEvent(event);\n      if ((module != null) && (module.needReloading())) {\n        reloadSession.addChangedModule(module);\n      }\n    }\n  }","commit_id":"b6a6eaf42cf281b690a33ff9a2577ebc66eb13d2","url":"https://github.com/JetBrains/MPS"},{"original_method":"public InboundEndpoint getInboundEndpoint(EndpointBuilder builder) throws MuleException\n    {\n        InboundEndpoint endpoint = builder.buildInboundEndpoint();\n        return (InboundEndpoint) registerEndpoint(endpoint);\n    }","id":50833,"modified_method":"public InboundEndpoint getInboundEndpoint(EndpointBuilder builder) throws MuleException\n    {\n        return builder.buildInboundEndpoint();\n    }","commit_id":"f595e60f90d7af3e80b56f4407368c8a103f0067","url":"https://github.com/mulesoft/mule"},{"original_method":"public OutboundEndpoint getOutboundEndpoint(EndpointBuilder builder) throws MuleException\n    {\n        OutboundEndpoint endpoint = builder.buildOutboundEndpoint();\n        return (OutboundEndpoint) registerEndpoint(endpoint);\n    }","id":50834,"modified_method":"public OutboundEndpoint getOutboundEndpoint(EndpointBuilder builder) throws MuleException\n    {\n        return builder.buildOutboundEndpoint();\n    }","commit_id":"f595e60f90d7af3e80b56f4407368c8a103f0067","url":"https://github.com/mulesoft/mule"},{"original_method":"public void addSource(MessageSource source) throws MuleException\n    {\n        synchronized (sources)\n        {\n            sources.add(source);\n        }\n        source.setListener(internalListener);\n        if (source instanceof FlowConstructAware)\n        {\n            ((FlowConstructAware) source).setFlowConstruct(flowConstruct);\n        }\n        if (source instanceof Initialisable)\n        {\n            ((Initialisable) source).initialise();\n        }\n        if (started.get() && source instanceof Startable)\n        {\n            ((Startable) source).start();\n        }\n    }","id":50835,"modified_method":"public void addSource(MessageSource source) throws MuleException\n    {\n        synchronized (sources)\n        {\n            sources.add(source);\n        }\n        source.setListener(internalListener);\n        if (initialised.get())\n        {\n            if (source instanceof FlowConstructAware)\n            {\n                ((FlowConstructAware) source).setFlowConstruct(flowConstruct);\n            }\n            if (source instanceof Initialisable)\n            {\n                ((Initialisable) source).initialise();\n            }\n        }\n        if (started.get() && source instanceof Startable)\n        {\n            ((Startable) source).start();\n        }\n    }","commit_id":"f595e60f90d7af3e80b56f4407368c8a103f0067","url":"https://github.com/mulesoft/mule"},{"original_method":"public void initialise() throws InitialisationException\n    {\n        if (listener == null)\n        {\n            throw new InitialisationException(CoreMessages.objectIsNull(\"listener\"), this);\n        }\n        synchronized (sources)\n        {\n            for (MessageSource source : sources)\n            {\n                if (source instanceof FlowConstructAware)\n                {\n                    ((FlowConstructAware) source).setFlowConstruct(flowConstruct);\n                }\n                if (source instanceof Initialisable)\n                {\n                    ((Initialisable) source).initialise();\n                }\n            }\n        }\n    }","id":50836,"modified_method":"public void initialise() throws InitialisationException\n    {\n        if (listener == null)\n        {\n            throw new InitialisationException(CoreMessages.objectIsNull(\"listener\"), this);\n        }\n        synchronized (sources)\n        {\n            for (MessageSource source : sources)\n            {\n                if (source instanceof FlowConstructAware)\n                {\n                    ((FlowConstructAware) source).setFlowConstruct(flowConstruct);\n                }\n                if (source instanceof Initialisable)\n                {\n                    ((Initialisable) source).initialise();\n                }\n            }\n        }\n        initialised.set(true);\n    }","commit_id":"f595e60f90d7af3e80b56f4407368c8a103f0067","url":"https://github.com/mulesoft/mule"},{"original_method":"public OutboundEndpoint getOutboundEndpoint(EndpointBuilder builder) throws MuleException\n    {\n        return builder.buildOutboundEndpoint();\n    }","id":50837,"modified_method":"public OutboundEndpoint getOutboundEndpoint(EndpointBuilder builder) throws MuleException\n    {\n        OutboundEndpoint endpoint = builder.buildOutboundEndpoint();\n        return (OutboundEndpoint) registerEndpoint(endpoint);\n    }","commit_id":"c9fb0a97e885ee100bf6ffd044a288b2f23833c9","url":"https://github.com/mulesoft/mule"},{"original_method":"public InboundEndpoint getInboundEndpoint(EndpointBuilder builder) throws MuleException\n    {\n        return builder.buildInboundEndpoint();\n    }","id":50838,"modified_method":"public InboundEndpoint getInboundEndpoint(EndpointBuilder builder) throws MuleException\n    {\n        InboundEndpoint endpoint = builder.buildInboundEndpoint();\n        return (InboundEndpoint) registerEndpoint(endpoint);\n    }","commit_id":"c9fb0a97e885ee100bf6ffd044a288b2f23833c9","url":"https://github.com/mulesoft/mule"},{"original_method":"public ImmutableEndpoint getInboundEndpoint(EndpointBuilder builder) throws MuleException\n    {\n        // TODO 1) Store in repo, 2) Register in registry, 3) Lifecycle ?\n        return builder.buildInboundEndpoint();\n    }","id":50839,"modified_method":"public ImmutableEndpoint getInboundEndpoint(EndpointBuilder builder) throws MuleException\n    {\n        ImmutableEndpoint endpoint = builder.buildInboundEndpoint();\n        return registerEndpoint(endpoint);\n    }","commit_id":"8ae020f402d17c90fbb70f3925f468dd6824eb89","url":"https://github.com/mulesoft/mule"},{"original_method":"public ImmutableEndpoint getOutboundEndpoint(EndpointBuilder builder)\n        throws MuleException\n    {\n        // TODO 1) Store in repo, 2) Register in registry, 3) Lifecycle ?\n        return builder.buildOutboundEndpoint();\n    }","id":50840,"modified_method":"public ImmutableEndpoint getOutboundEndpoint(EndpointBuilder builder) throws MuleException\n    {\n        ImmutableEndpoint endpoint = builder.buildOutboundEndpoint();\n        return registerEndpoint(endpoint);\n    }","commit_id":"8ae020f402d17c90fbb70f3925f468dd6824eb89","url":"https://github.com/mulesoft/mule"},{"original_method":"private void writeObject(ObjectOutputStream out) throws IOException\n    {\n        out.defaultWriteObject();\n\n        // TODO DF: If/when endpoints are kept in registry we should serializale endpoint registry \n        // id/name rather than it's uri, this will mean that endpoint does not need to be recreated \n        // and there will be no need to serialize transformers or other endpoint attributes here.\n\n        out.writeObject(endpoint.getEndpointURI().toString());\n        this.marshallTransformers(endpoint.getTransformers(), out);\n    }","id":50841,"modified_method":"private void writeObject(ObjectOutputStream out) throws IOException\n    {\n        out.defaultWriteObject();\n        out.writeInt(endpoint.hashCode());\n    }","commit_id":"8ae020f402d17c90fbb70f3925f468dd6824eb89","url":"https://github.com/mulesoft/mule"},{"original_method":"private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException\n    {\n        logger = LogFactory.getLog(getClass());\n        in.defaultReadObject();\n        \n        // TODO DF: If/when endpoints are kept in registry we should deserializale endpoint registry id/name\n        // and use it to lookup existing endpoint instance, rather than recreating the endpoint here. This\n        // will also mean that there won't be a need to serialize/deserialize endoint attributes such as\n        // transformers.\n\n        String uri = (String) in.readObject();\n        List transformers = this.unmarshallTransformers(in);\n        try\n        {\n            EndpointBuilder endpointBuilder = new EndpointURIEndpointBuilder(new URIBuilder(uri), getMuleContext());\n            endpointBuilder.setTransformers(transformers);\n            endpoint = getMuleContext().getRegistry().lookupEndpointFactory().getOutboundEndpoint(endpointBuilder);\n\n        }\n        catch (MuleException e)\n        {\n            throw (IOException) new IOException(e.getMessage()).initCause(e);\n        }\n    }","id":50842,"modified_method":"private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException\n    {\n        logger = LogFactory.getLog(getClass());\n        in.defaultReadObject();\n        int hashCode = in.readInt();\n        endpoint = RegistryContext.getRegistry().lookupEndpoint(\n            DefaultEndpointFactory.ENDPOINT_REGISTRY_PREFIX + hashCode);\n    }","commit_id":"8ae020f402d17c90fbb70f3925f468dd6824eb89","url":"https://github.com/mulesoft/mule"},{"original_method":"private IResourceStream internalGetResourceStream()\n\t{\n\t\tif (requestScopedStream == null) {\n\t\t\trequestScopedStream = getResourceStream();\n\t\t\tChecks.notNull(requestScopedStream, \"%s#getResourceStream() should not return null!\", getClass().getName());\n\t\t}\n\t\treturn requestScopedStream;\n\t}","id":50843,"modified_method":"private IResourceStream internalGetResourceStream()\n\t{\n\t\tfinal IResourceStream resourceStream = getResourceStream();\n\t\tChecks.notNull(resourceStream, \"%s#getResourceStream() should not return null!\", getClass().getName());\n\t\treturn resourceStream;\n\t}","commit_id":"42af7491fd34cfe05cf1df2143a96f7169654811","url":"https://github.com/apache/wicket"},{"original_method":"/**\n     * Perform injections\n     */\n    public void inject(CamelExtension camelExtension, Object reference,\n                                String beanName) {\n        for (Method method : consumeMethods) {\n            Consume annotation = method.getAnnotation(Consume.class);\n            if (annotation != null) {\n                String contextName = CamelExtension.getCamelContextName(annotation.context(), startup);\n                DefaultCamelBeanPostProcessor postProcessor = camelExtension.getPostProcessor(\n                        contextName);\n                if (postProcessor != null) {\n                    postProcessor.getPostProcessorHelper().consumerInjection(method, reference, beanName);\n                }\n            }\n        }\n        for (Method method : produceMethods) {\n            Produce annotation = method.getAnnotation(Produce.class);\n            if (annotation != null) {\n                String contextName = CamelExtension.getCamelContextName(annotation.context(), startup);\n                DefaultCamelBeanPostProcessor postProcessor = camelExtension.getPostProcessor(\n                        contextName);\n                if (postProcessor != null && postProcessor.getPostProcessorHelper().matchContext(contextName)) {\n                    postProcessor.setterInjection(method, reference, beanName, annotation.uri(), annotation.ref(),\n                            annotation.property());\n                }\n            }\n        }\n        for (Method method : endpointMethods) {\n            EndpointInject annotation = method.getAnnotation(EndpointInject.class);\n            if (annotation != null) {\n                String contextName = CamelExtension.getCamelContextName(annotation.context(), startup);\n                DefaultCamelBeanPostProcessor postProcessor = camelExtension.getPostProcessor(\n                        contextName);\n                if (postProcessor != null && postProcessor.getPostProcessorHelper().matchContext(contextName)) {\n                    postProcessor.setterInjection(method, reference, beanName, annotation.uri(), annotation.ref(),\n                            annotation.property());\n\n                }\n            }\n        }\n        for (Field field : produceFields) {\n            Produce annotation = field.getAnnotation(Produce.class);\n            if (annotation != null) {\n                String contextName = CamelExtension.getCamelContextName(annotation.context(), startup);\n                DefaultCamelBeanPostProcessor postProcessor = camelExtension.getPostProcessor(\n                        contextName);\n                if (postProcessor != null && postProcessor.getPostProcessorHelper().matchContext(contextName)) {\n                    postProcessor.injectField(field, annotation.uri(), annotation.ref(),\n                            annotation.property(), reference, beanName);\n                }\n            }\n        }\n        for (Field field : endpointFields) {\n            EndpointInject annotation = field.getAnnotation(EndpointInject.class);\n            String contextName = CamelExtension.getCamelContextName(annotation.context(), startup);\n            DefaultCamelBeanPostProcessor postProcessor = camelExtension.getPostProcessor(\n                    contextName);\n            if (postProcessor != null && postProcessor.getPostProcessorHelper().matchContext(contextName)) {\n                postProcessor.injectField(field, annotation.uri(), annotation.ref(),\n                        annotation.property(), reference, beanName);\n            }\n        }\n    }","id":50844,"modified_method":"/**\n     * Perform injections\n     */\n    public void inject(CamelExtension camelExtension, Object reference,\n                                String beanName) {\n        for (Method method : consumeMethods) {\n            Consume annotation = method.getAnnotation(Consume.class);\n            if (annotation != null) {\n                String contextName = CamelExtension.getCamelContextName(annotation.context(), startup);\n                DefaultCamelBeanPostProcessor postProcessor = camelExtension.getPostProcessor(\n                        contextName, beanManager);\n                if (postProcessor != null) {\n                    postProcessor.getPostProcessorHelper().consumerInjection(method, reference, beanName);\n                }\n            }\n        }\n        for (Method method : produceMethods) {\n            Produce annotation = method.getAnnotation(Produce.class);\n            if (annotation != null) {\n                String contextName = CamelExtension.getCamelContextName(annotation.context(), startup);\n                DefaultCamelBeanPostProcessor postProcessor = camelExtension.getPostProcessor(\n                        contextName, beanManager);\n                if (postProcessor != null && postProcessor.getPostProcessorHelper().matchContext(contextName)) {\n                    postProcessor.setterInjection(method, reference, beanName, annotation.uri(), annotation.ref(),\n                            annotation.property());\n                }\n            }\n        }\n        for (Method method : endpointMethods) {\n            EndpointInject annotation = method.getAnnotation(EndpointInject.class);\n            if (annotation != null) {\n                String contextName = CamelExtension.getCamelContextName(annotation.context(), startup);\n                DefaultCamelBeanPostProcessor postProcessor = camelExtension.getPostProcessor(\n                        contextName, beanManager);\n                if (postProcessor != null && postProcessor.getPostProcessorHelper().matchContext(contextName)) {\n                    postProcessor.setterInjection(method, reference, beanName, annotation.uri(), annotation.ref(),\n                            annotation.property());\n\n                }\n            }\n        }\n        for (Field field : produceFields) {\n            Produce annotation = field.getAnnotation(Produce.class);\n            if (annotation != null) {\n                String contextName = CamelExtension.getCamelContextName(annotation.context(), startup);\n                DefaultCamelBeanPostProcessor postProcessor = camelExtension.getPostProcessor(\n                        contextName, beanManager);\n                if (postProcessor != null && postProcessor.getPostProcessorHelper().matchContext(contextName)) {\n                    postProcessor.injectField(field, annotation.uri(), annotation.ref(),\n                            annotation.property(), reference, beanName);\n                }\n            }\n        }\n        for (Field field : endpointFields) {\n            EndpointInject annotation = field.getAnnotation(EndpointInject.class);\n            String contextName = CamelExtension.getCamelContextName(annotation.context(), startup);\n            DefaultCamelBeanPostProcessor postProcessor = camelExtension.getPostProcessor(\n                    contextName, beanManager);\n            if (postProcessor != null && postProcessor.getPostProcessorHelper().matchContext(contextName)) {\n                postProcessor.injectField(field, annotation.uri(), annotation.ref(),\n                        annotation.property(), reference, beanName);\n            }\n        }\n    }","commit_id":"c97601f546323279931ea9a0f1ff8df72b3d1b7e","url":"https://github.com/apache/camel"},{"original_method":"/**\n     * Lets force the CDI container to create all beans annotated with @Consume so that the consumer becomes active\n     */\n    public void startConsumeBeans(@Observes AfterDeploymentValidation event, BeanManager beanManager)\n        throws Exception {\n        for (CamelContextBean bean : camelContextBeans) {\n            String name = bean.getCamelContextName();\n            CamelContext context = getCamelContext(name);\n            if (context == null) {\n                throw new IllegalStateException(\n                        \"CamelContext '\" + name + \"' has not been injected into the CamelContextMap\");\n            }\n            bean.configureCamelContext((CdiCamelContext)context);\n        }\n\n        for (Bean<?> bean : eagerBeans) {\n            // force lazy creation to start the consumer\n            CreationalContext<?> creationalContext = beanManager.createCreationalContext(bean);\n            beanManager.getReference(bean, bean.getBeanClass(), creationalContext);\n        }\n    }","id":50845,"modified_method":"/**\n     * Lets force the CDI container to create all beans annotated with @Consume so that the consumer becomes active\n     */\n    public void startConsumeBeans(@Observes AfterDeploymentValidation event, BeanManager beanManager)\n        throws Exception {\n        for (CamelContextBean bean : camelContextBeans) {\n            String name = bean.getCamelContextName();\n            CamelContext context = getCamelContext(name, beanManager);\n            if (context == null) {\n                throw new IllegalStateException(\n                        \"CamelContext '\" + name + \"' has not been injected into the CamelContextMap\");\n            }\n            bean.configureCamelContext((CdiCamelContext)context);\n        }\n\n        for (Bean<?> bean : eagerBeans) {\n            // force lazy creation to start the consumer\n            CreationalContext<?> creationalContext = beanManager.createCreationalContext(bean);\n            beanManager.getReference(bean, bean.getBeanClass(), creationalContext);\n        }\n    }","commit_id":"c97601f546323279931ea9a0f1ff8df72b3d1b7e","url":"https://github.com/apache/camel"},{"original_method":"protected DefaultCamelBeanPostProcessor getPostProcessor(String context) {\n        CamelContext camelContext = getCamelContext(context);\n        if (camelContext != null) {\n            return new DefaultCamelBeanPostProcessor(camelContext);\n        } else {\n            throw new IllegalArgumentException(\"No such CamelContext '\" + context + \"' available!\");\n        }\n    }","id":50846,"modified_method":"protected DefaultCamelBeanPostProcessor getPostProcessor(String context, BeanManager beanManager) {\n        CamelContext camelContext = getCamelContext(context, beanManager);\n        if (camelContext != null) {\n            return new DefaultCamelBeanPostProcessor(camelContext);\n        } else {\n            throw new IllegalArgumentException(\"No such CamelContext '\" + context + \"' available!\");\n        }\n    }","commit_id":"c97601f546323279931ea9a0f1ff8df72b3d1b7e","url":"https://github.com/apache/camel"},{"original_method":"protected CamelContext getCamelContext(String context) {\n        if (camelContextMap == null) {\n            camelContextMap = BeanProvider.getContextualReference(CamelContextMap.class);\n            ObjectHelper.notNull(camelContextMap, \"Could not resolve CamelContextMap\");\n        }\n        return camelContextMap.getCamelContext(context);\n    }","id":50847,"modified_method":"protected CamelContext getCamelContext(String context, BeanManager beanManager) {\n        if (camelContextMap == null) {\n            //camelContextMap = BeanProvider.getContextualReference(CamelContextMap.class);\n            Set<Bean<?>> beans = beanManager.getBeans(CamelContextMap.class);\n            Bean<?> bean = beanManager.resolve(beans);\n            CreationalContext<?> creationalContext = beanManager.createCreationalContext(bean);\n            camelContextMap = (CamelContextMap) beanManager.getReference(bean, bean.getBeanClass(), creationalContext);\n            ObjectHelper.notNull(camelContextMap, \"Could not resolve CamelContextMap\");\n        }\n        return camelContextMap.getCamelContext(context);\n    }","commit_id":"c97601f546323279931ea9a0f1ff8df72b3d1b7e","url":"https://github.com/apache/camel"},{"original_method":"/**\n     * Perform injections\n     */\n    public void inject(CamelExtension camelExtension, Object reference, String beanName) {\n        for (Method method : consumeMethods) {\n            Consume annotation = method.getAnnotation(Consume.class);\n            if (annotation != null) {\n                String contextName = CamelExtension.getCamelContextName(annotation.context(), startup);\n                DefaultCamelBeanPostProcessor postProcessor = camelExtension.getPostProcessor(\n                        contextName);\n                if (postProcessor != null) {\n                    postProcessor.getPostProcessorHelper().consumerInjection(method, reference, beanName);\n                }\n            }\n        }\n        for (Method method : produceMethods) {\n            Produce annotation = method.getAnnotation(Produce.class);\n            if (annotation != null) {\n                String contextName = CamelExtension.getCamelContextName(annotation.context(), startup);\n                DefaultCamelBeanPostProcessor postProcessor = camelExtension.getPostProcessor(\n                        contextName);\n                if (postProcessor != null && postProcessor.getPostProcessorHelper().matchContext(contextName)) {\n                    postProcessor.setterInjection(method, reference, beanName, annotation.uri(), annotation.ref(),\n                            annotation.property());\n                }\n            }\n        }\n        for (Method method : endpointMethods) {\n            EndpointInject annotation = method.getAnnotation(EndpointInject.class);\n            if (annotation != null) {\n                String contextName = CamelExtension.getCamelContextName(annotation.context(), startup);\n                DefaultCamelBeanPostProcessor postProcessor = camelExtension.getPostProcessor(\n                        contextName);\n                if (postProcessor != null && postProcessor.getPostProcessorHelper().matchContext(contextName)) {\n                    postProcessor.setterInjection(method, reference, beanName, annotation.uri(), annotation.ref(),\n                            annotation.property());\n\n                }\n            }\n        }\n        for (Field field : produceFields) {\n            Produce annotation = field.getAnnotation(Produce.class);\n            if (annotation != null) {\n                String contextName = CamelExtension.getCamelContextName(annotation.context(), startup);\n                DefaultCamelBeanPostProcessor postProcessor = camelExtension.getPostProcessor(\n                        contextName);\n                if (postProcessor != null && postProcessor.getPostProcessorHelper().matchContext(contextName)) {\n                    postProcessor.injectField(field, annotation.uri(), annotation.ref(),\n                            annotation.property(), reference, beanName);\n                }\n            }\n        }\n        for (Field field : endpointFields) {\n            EndpointInject annotation = field.getAnnotation(EndpointInject.class);\n            String contextName = CamelExtension.getCamelContextName(annotation.context(), startup);\n            DefaultCamelBeanPostProcessor postProcessor = camelExtension.getPostProcessor(\n                    contextName);\n            if (postProcessor != null && postProcessor.getPostProcessorHelper().matchContext(contextName)) {\n                postProcessor.injectField(field, annotation.uri(), annotation.ref(),\n                        annotation.property(), reference, beanName);\n            }\n        }\n    }","id":50848,"modified_method":"/**\n     * Perform injections\n     */\n    public void inject(CamelExtension camelExtension, Object reference, String beanName) {\n        for (Method method : consumeMethods) {\n            Consume annotation = method.getAnnotation(Consume.class);\n            if (annotation != null) {\n                String contextName = CamelExtension.getCamelContextName(annotation.context(), startup);\n                DefaultCamelBeanPostProcessor postProcessor = camelExtension.getPostProcessor(contextName, null);\n                if (postProcessor != null) {\n                    postProcessor.getPostProcessorHelper().consumerInjection(method, reference, beanName);\n                }\n            }\n        }\n        for (Method method : produceMethods) {\n            Produce annotation = method.getAnnotation(Produce.class);\n            if (annotation != null) {\n                String contextName = CamelExtension.getCamelContextName(annotation.context(), startup);\n                DefaultCamelBeanPostProcessor postProcessor = camelExtension.getPostProcessor(contextName, null);\n                if (postProcessor != null && postProcessor.getPostProcessorHelper().matchContext(contextName)) {\n                    postProcessor.setterInjection(method, reference, beanName, annotation.uri(), annotation.ref(),\n                            annotation.property());\n                }\n            }\n        }\n        for (Method method : endpointMethods) {\n            EndpointInject annotation = method.getAnnotation(EndpointInject.class);\n            if (annotation != null) {\n                String contextName = CamelExtension.getCamelContextName(annotation.context(), startup);\n                DefaultCamelBeanPostProcessor postProcessor = camelExtension.getPostProcessor(contextName, null);\n                if (postProcessor != null && postProcessor.getPostProcessorHelper().matchContext(contextName)) {\n                    postProcessor.setterInjection(method, reference, beanName, annotation.uri(), annotation.ref(),\n                            annotation.property());\n\n                }\n            }\n        }\n        for (Field field : produceFields) {\n            Produce annotation = field.getAnnotation(Produce.class);\n            if (annotation != null) {\n                String contextName = CamelExtension.getCamelContextName(annotation.context(), startup);\n                DefaultCamelBeanPostProcessor postProcessor = camelExtension.getPostProcessor(contextName, null);\n                if (postProcessor != null && postProcessor.getPostProcessorHelper().matchContext(contextName)) {\n                    postProcessor.injectField(field, annotation.uri(), annotation.ref(),\n                            annotation.property(), reference, beanName);\n                }\n            }\n        }\n        for (Field field : endpointFields) {\n            EndpointInject annotation = field.getAnnotation(EndpointInject.class);\n            String contextName = CamelExtension.getCamelContextName(annotation.context(), startup);\n            DefaultCamelBeanPostProcessor postProcessor = camelExtension.getPostProcessor(contextName, null);\n            if (postProcessor != null && postProcessor.getPostProcessorHelper().matchContext(contextName)) {\n                postProcessor.injectField(field, annotation.uri(), annotation.ref(),\n                        annotation.property(), reference, beanName);\n            }\n        }\n    }","commit_id":"7250732a987c6abee590a5fada2b130246e18dc6","url":"https://github.com/apache/camel"},{"original_method":"protected CamelContext getCamelContext(String context) {\n        if (camelContextMap == null) {\n            camelContextMap = BeanProvider.getContextualReference(CamelContextMap.class);\n            ObjectHelper.notNull(camelContextMap, \"Could not resolve CamelContextMap\");\n        }\n        return camelContextMap.getCamelContext(context);\n    }","id":50849,"modified_method":"protected CamelContext getCamelContext(String context, BeanManager beanManager) {\n        BeanManager manager = this.beanManager != null ? this.beanManager : beanManager;\n        if (camelContextMap == null && manager != null) {\n            Set<Bean<?>> beans = manager.getBeans(CamelContextMap.class);\n            if (!beans.isEmpty()) {\n                Bean<?> bean = manager.resolve(beans);\n                CreationalContext<?> creationalContext = manager.createCreationalContext(bean);\n                camelContextMap = (CamelContextMap) manager.getReference(bean, CamelContextMap.class, creationalContext);\n            }\n        }\n        ObjectHelper.notNull(camelContextMap, \"Could not resolve CamelContextMap\");\n        return camelContextMap.getCamelContext(context);\n    }","commit_id":"7250732a987c6abee590a5fada2b130246e18dc6","url":"https://github.com/apache/camel"},{"original_method":"/**\n     * Lets force the CDI container to create all beans annotated with @Consume so that the consumer becomes active\n     */\n    public void startConsumeBeans(@Observes AfterDeploymentValidation event, BeanManager beanManager) throws Exception {\n        for (CamelContextBean bean : camelContextBeans) {\n            String name = bean.getCamelContextName();\n            CamelContext context = getCamelContext(name);\n            if (context == null) {\n                throw new IllegalStateException(\n                        \"CamelContext '\" + name + \"' has not been injected into the CamelContextMap\");\n            }\n            bean.configureCamelContext((CdiCamelContext) context);\n        }\n\n        for (Bean<?> bean : eagerBeans) {\n            // force lazy creation to start the consumer\n            CreationalContext<?> creationalContext = beanManager.createCreationalContext(bean);\n            beanManager.getReference(bean, bean.getBeanClass(), creationalContext);\n        }\n    }","id":50850,"modified_method":"/**\n     * Lets force the CDI container to create all beans annotated with @Consume so that the consumer becomes active\n     */\n    public void startConsumeBeans(@Observes AfterDeploymentValidation event, BeanManager beanManager) throws Exception {\n        for (CamelContextBean bean : camelContextBeans) {\n            String name = bean.getCamelContextName();\n            CamelContext context = getCamelContext(name, beanManager);\n            if (context == null) {\n                throw new IllegalStateException(\n                        \"CamelContext '\" + name + \"' has not been injected into the CamelContextMap\");\n            }\n            bean.configureCamelContext((CdiCamelContext) context);\n        }\n\n        for (Bean<?> bean : eagerBeans) {\n            // force lazy creation to start the consumer\n            CreationalContext<?> creationalContext = beanManager.createCreationalContext(bean);\n            beanManager.getReference(bean, bean.getBeanClass(), creationalContext);\n        }\n    }","commit_id":"7250732a987c6abee590a5fada2b130246e18dc6","url":"https://github.com/apache/camel"},{"original_method":"protected DefaultCamelBeanPostProcessor getPostProcessor(String context) {\n        CamelContext camelContext = getCamelContext(context);\n        if (camelContext != null) {\n            return new DefaultCamelBeanPostProcessor(camelContext);\n        } else {\n            throw new IllegalArgumentException(\"No such CamelContext '\" + context + \"' available!\");\n        }\n    }","id":50851,"modified_method":"protected DefaultCamelBeanPostProcessor getPostProcessor(String context, BeanManager beanManager) {\n        CamelContext camelContext = getCamelContext(context, beanManager);\n        if (camelContext != null) {\n            return new DefaultCamelBeanPostProcessor(camelContext);\n        } else {\n            throw new IllegalArgumentException(\"No such CamelContext '\" + context + \"' available!\");\n        }\n    }","commit_id":"7250732a987c6abee590a5fada2b130246e18dc6","url":"https://github.com/apache/camel"},{"original_method":"/**\n\t * Load an <code>ApplicationContext<\/code> for this test context using the\n\t * configured <code>ContextLoader<\/code> and resource locations.\n\t * @throws Exception if an error occurs while loading the application context\n\t */\n\tprivate ApplicationContext loadApplicationContext() throws Exception {\n\t\tAssert.notNull(this.contextLoader, \"Can not load an ApplicationContext with a NULL 'contextLoader'. \"\n\t\t\t\t+ \"Consider annotating your test class with @ContextConfiguration.\");\n\t\tAssert.notNull(this.locations, \"Can not load an ApplicationContext with a NULL 'locations' array. \"\n\t\t\t\t+ \"Consider annotating your test class with @ContextConfiguration.\");\n\t\treturn this.contextLoader.loadContext(this.locations);\n\t}","id":50852,"modified_method":"/**\n\t * Load an <code>ApplicationContext<\/code> for this test context using the\n\t * configured <code>ContextLoader<\/code> and resource locations.\n\t * @throws Exception if an error occurs while loading the application context\n\t */\n\tprivate ApplicationContext loadApplicationContext() throws Exception {\n\t\tContextLoader contextLoader = mergedContextConfiguration.getContextLoader();\n\t\tAssert.notNull(contextLoader, \"Can not load an ApplicationContext with a NULL 'contextLoader'. \"\n\t\t\t\t+ \"Consider annotating your test class with @ContextConfiguration.\");\n\n\t\tApplicationContext applicationContext;\n\n\t\tif (contextLoader instanceof SmartContextLoader) {\n\t\t\tSmartContextLoader smartContextLoader = (SmartContextLoader) contextLoader;\n\t\t\tapplicationContext = smartContextLoader.loadContext(mergedContextConfiguration);\n\t\t}\n\t\telse {\n\t\t\tString[] locations = mergedContextConfiguration.getLocations();\n\t\t\tAssert.notNull(locations, \"Can not load an ApplicationContext with a NULL 'locations' array. \"\n\t\t\t\t\t+ \"Consider annotating your test class with @ContextConfiguration.\");\n\t\t\tapplicationContext = contextLoader.loadContext(locations);\n\t\t}\n\n\t\treturn applicationContext;\n\t}","commit_id":"2913964b412e9bd54254e28abb1fdce3f571edd2","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"/**\n\t * Provide a String representation of this test context's state.\n\t */\n\t@Override\n\tpublic String toString() {\n\t\treturn new ToStringCreator(this)//\n\t\t.append(\"testClass\", this.testClass)//\n\t\t.append(\"locations\", this.locations)//\n\t\t.append(\"testInstance\", this.testInstance)//\n\t\t.append(\"testMethod\", this.testMethod)//\n\t\t.append(\"testException\", this.testException)//\n\t\t.toString();\n\t}","id":50853,"modified_method":"/**\n\t * Provide a String representation of this test context's state.\n\t */\n\t@Override\n\tpublic String toString() {\n\t\treturn new ToStringCreator(this)//\n\t\t.append(\"testClass\", testClass)//\n\t\t.append(\"testInstance\", testInstance)//\n\t\t.append(\"testMethod\", testMethod)//\n\t\t.append(\"testException\", testException)//\n\t\t.append(\"mergedContextConfiguration\", mergedContextConfiguration)//\n\t\t.toString();\n\t}","commit_id":"2913964b412e9bd54254e28abb1fdce3f571edd2","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"/**\n\t * Get the {@link Class test class} for this test context.\n\t * @return the test class (never <code>null<\/code>)\n\t */\n\tpublic final Class<?> getTestClass() {\n\t\treturn this.testClass;\n\t}","id":50854,"modified_method":"/**\n\t * Get the {@link Class test class} for this test context.\n\t * @return the test class (never <code>null<\/code>)\n\t */\n\tpublic final Class<?> getTestClass() {\n\t\treturn testClass;\n\t}","commit_id":"2913964b412e9bd54254e28abb1fdce3f571edd2","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"/**\n\t * Call this method to signal that the {@link ApplicationContext application\n\t * context} associated with this test context is <em>dirty<\/em> and should\n\t * be reloaded. Do this if a test has modified the context (for example, by\n\t * replacing a bean definition).\n\t */\n\tpublic void markApplicationContextDirty() {\n\t\tthis.contextCache.setDirty(contextKeyString(this.locations));\n\t}","id":50855,"modified_method":"/**\n\t * Call this method to signal that the {@link ApplicationContext application\n\t * context} associated with this test context is <em>dirty<\/em> and should\n\t * be reloaded. Do this if a test has modified the context (for example, by\n\t * replacing a bean definition).\n\t */\n\tpublic void markApplicationContextDirty() {\n\t\tcontextCache.setDirty(contextKey);\n\t}","commit_id":"2913964b412e9bd54254e28abb1fdce3f571edd2","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"/**\n\t * Construct a new test context for the supplied {@link Class test class}\n\t * and {@link ContextCache context cache} and parse the corresponding\n\t * {@link ContextConfiguration &#064;ContextConfiguration} annotation, if\n\t * present.\n\t * <p>If the supplied class name for the default ContextLoader is\n\t * <code>null<\/code> or <em>empty<\/em> and no <code>ContextLoader<\/code>\n\t * class is explicitly supplied via the\n\t * <code>&#064;ContextConfiguration<\/code> annotation, a\n\t * {@link org.springframework.test.context.support.GenericXmlContextLoader\n\t * GenericXmlContextLoader} will be used instead.\n\t * @param testClass the test class for which the test context should be\n\t * constructed (must not be <code>null<\/code>)\n\t * @param contextCache the context cache from which the constructed test\n\t * context should retrieve application contexts (must not be\n\t * <code>null<\/code>)\n\t * @param defaultContextLoaderClassName the name of the default\n\t * <code>ContextLoader<\/code> class to use (may be <code>null<\/code>)\n\t */\n\tTestContext(Class<?> testClass, ContextCache contextCache, String defaultContextLoaderClassName) {\n\t\tAssert.notNull(testClass, \"Test class must not be null\");\n\t\tAssert.notNull(contextCache, \"ContextCache must not be null\");\n\n\t\tContextConfiguration contextConfiguration = testClass.getAnnotation(ContextConfiguration.class);\n\t\tContextLoader contextLoader = null;\n\t\tString[] locations = null;\n\n\t\tif (contextConfiguration == null) {\n\t\t\tif (logger.isInfoEnabled()) {\n\t\t\t\tlogger.info(String.format(\"@ContextConfiguration not found for class [%s]\", testClass));\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (logger.isTraceEnabled()) {\n\t\t\t\tlogger.trace(String.format(\"Retrieved @ContextConfiguration [%s] for class [%s]\", contextConfiguration,\n\t\t\t\t\ttestClass));\n\t\t\t}\n\t\t\tcontextLoader = ContextLoaderUtils.resolveContextLoader(testClass, defaultContextLoaderClassName);\n\t\t\tlocations = ContextLoaderUtils.resolveContextLocations(contextLoader, testClass);\n\t\t}\n\n\t\tthis.testClass = testClass;\n\t\tthis.contextCache = contextCache;\n\t\tthis.contextLoader = contextLoader;\n\t\tthis.locations = locations;\n\t}","id":50856,"modified_method":"/**\n\t * Construct a new test context for the supplied {@link Class test class}\n\t * and {@link ContextCache context cache} and parse the corresponding\n\t * {@link ContextConfiguration &#064;ContextConfiguration} annotation, if\n\t * present.\n\t * <p>If the supplied class name for the default ContextLoader is\n\t * <code>null<\/code> or <em>empty<\/em> and no <code>ContextLoader<\/code>\n\t * class is explicitly supplied via the\n\t * <code>&#064;ContextConfiguration<\/code> annotation, a\n\t * {@link org.springframework.test.context.support.GenericXmlContextLoader\n\t * GenericXmlContextLoader} will be used instead.\n\t * @param testClass the test class for which the test context should be\n\t * constructed (must not be <code>null<\/code>)\n\t * @param contextCache the context cache from which the constructed test\n\t * context should retrieve application contexts (must not be\n\t * <code>null<\/code>)\n\t * @param defaultContextLoaderClassName the name of the default\n\t * <code>ContextLoader<\/code> class to use (may be <code>null<\/code>)\n\t */\n\tTestContext(Class<?> testClass, ContextCache contextCache, String defaultContextLoaderClassName) {\n\t\tAssert.notNull(testClass, \"Test class must not be null\");\n\t\tAssert.notNull(contextCache, \"ContextCache must not be null\");\n\n\t\tMergedContextConfiguration mergedContextConfiguration;\n\t\tContextConfiguration contextConfiguration = testClass.getAnnotation(ContextConfiguration.class);\n\n\t\tif (contextConfiguration == null) {\n\t\t\tif (logger.isInfoEnabled()) {\n\t\t\t\tlogger.info(String.format(\"@ContextConfiguration not found for class [%s]\", testClass));\n\t\t\t}\n\t\t\tmergedContextConfiguration = new MergedContextConfiguration(testClass, null, null, null, null);\n\t\t}\n\t\telse {\n\t\t\tif (logger.isTraceEnabled()) {\n\t\t\t\tlogger.trace(String.format(\"Retrieved @ContextConfiguration [%s] for class [%s]\", contextConfiguration,\n\t\t\t\t\ttestClass));\n\t\t\t}\n\t\t\tmergedContextConfiguration = ContextLoaderUtils.buildMergedContextConfiguration(testClass,\n\t\t\t\tdefaultContextLoaderClassName);\n\t\t}\n\n\t\tthis.contextCache = contextCache;\n\t\tthis.contextKey = generateContextKey(mergedContextConfiguration);\n\t\tthis.mergedContextConfiguration = mergedContextConfiguration;\n\t\tthis.testClass = testClass;\n\t}","commit_id":"2913964b412e9bd54254e28abb1fdce3f571edd2","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"/**\n\t * Get the {@link ApplicationContext application context} for this test\n\t * context, possibly cached.\n\t * @return the application context\n\t * @throws IllegalStateException if an error occurs while retrieving the\n\t * application context\n\t */\n\tpublic ApplicationContext getApplicationContext() {\n\t\tsynchronized (this.contextCache) {\n\t\t\tString contextKeyString = contextKeyString(this.locations);\n\t\t\tApplicationContext context = this.contextCache.get(contextKeyString);\n\t\t\tif (context == null) {\n\t\t\t\ttry {\n\t\t\t\t\tcontext = loadApplicationContext();\n\t\t\t\t\tthis.contextCache.put(contextKeyString, context);\n\t\t\t\t}\n\t\t\t\tcatch (Exception ex) {\n\t\t\t\t\tthrow new IllegalStateException(\"Failed to load ApplicationContext\", ex);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn context;\n\t\t}\n\t}","id":50857,"modified_method":"/**\n\t * Get the {@link ApplicationContext application context} for this test\n\t * context, possibly cached.\n\t * @return the application context\n\t * @throws IllegalStateException if an error occurs while retrieving the\n\t * application context\n\t */\n\tpublic ApplicationContext getApplicationContext() {\n\t\tsynchronized (contextCache) {\n\t\t\tApplicationContext context = contextCache.get(contextKey);\n\t\t\tif (context == null) {\n\t\t\t\ttry {\n\t\t\t\t\tcontext = loadApplicationContext();\n\t\t\t\t\tcontextCache.put(contextKey, context);\n\t\t\t\t}\n\t\t\t\tcatch (Exception ex) {\n\t\t\t\t\tthrow new IllegalStateException(\"Failed to load ApplicationContext\", ex);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn context;\n\t\t}\n\t}","commit_id":"2913964b412e9bd54254e28abb1fdce3f571edd2","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"/**\n\t * Get the current {@link Method test method} for this test context.\n\t * <p>Note: this is a mutable property.\n\t * @return the current test method (may be <code>null<\/code>)\n\t * @see #updateState(Object, Method, Throwable)\n\t */\n\tpublic final Method getTestMethod() {\n\t\treturn this.testMethod;\n\t}","id":50858,"modified_method":"/**\n\t * Get the current {@link Method test method} for this test context.\n\t * <p>Note: this is a mutable property.\n\t * @return the current test method (may be <code>null<\/code>)\n\t * @see #updateState(Object, Method, Throwable)\n\t */\n\tpublic final Method getTestMethod() {\n\t\treturn testMethod;\n\t}","commit_id":"2913964b412e9bd54254e28abb1fdce3f571edd2","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"/**\n\t * Get the {@link Throwable exception} that was thrown during execution of\n\t * the {@link #getTestMethod() test method}.\n\t * <p>Note: this is a mutable property.\n\t * @return the exception that was thrown, or <code>null<\/code> if no\n\t * exception was thrown\n\t * @see #updateState(Object, Method, Throwable)\n\t */\n\tpublic final Throwable getTestException() {\n\t\treturn this.testException;\n\t}","id":50859,"modified_method":"/**\n\t * Get the {@link Throwable exception} that was thrown during execution of\n\t * the {@link #getTestMethod() test method}.\n\t * <p>Note: this is a mutable property.\n\t * @return the exception that was thrown, or <code>null<\/code> if no\n\t * exception was thrown\n\t * @see #updateState(Object, Method, Throwable)\n\t */\n\tpublic final Throwable getTestException() {\n\t\treturn testException;\n\t}","commit_id":"2913964b412e9bd54254e28abb1fdce3f571edd2","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"/**\n\t * Get the current {@link Object test instance} for this test context.\n\t * <p>Note: this is a mutable property.\n\t * @return the current test instance (may be <code>null<\/code>)\n\t * @see #updateState(Object,Method,Throwable)\n\t */\n\tpublic final Object getTestInstance() {\n\t\treturn this.testInstance;\n\t}","id":50860,"modified_method":"/**\n\t * Get the current {@link Object test instance} for this test context.\n\t * <p>Note: this is a mutable property.\n\t * @return the current test instance (may be <code>null<\/code>)\n\t * @see #updateState(Object,Method,Throwable)\n\t */\n\tpublic final Object getTestInstance() {\n\t\treturn testInstance;\n\t}","commit_id":"2913964b412e9bd54254e28abb1fdce3f571edd2","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"public String getPresentableText() {\n    return PsiNameHelper.getPresentableText(myReferenceElement.getReferenceName(), myReferenceElement.getTypeArguments());\n  }","id":50861,"modified_method":"public String getPresentableText() {\n    return PsiNameHelper.getPresentableText(myReferenceElement.getReferenceName(), PsiAnnotation.EMPTY_ARRAY, myReferenceElement.getTypeArguments());\n  }","commit_id":"2ed5f43708c2560b985d363cc01cd184b6ce950a","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  public static String getPresentableText(@NotNull PsiJavaCodeReferenceElement ref) {\n    String name = ref.getReferenceName();\n\n    PsiAnnotation[] children = PsiTreeUtil.getChildrenOfType(ref, PsiAnnotation.class);\n    PsiAnnotation[] annotations = notNull(children, PsiAnnotation.EMPTY_ARRAY);\n\n    PsiReferenceParameterList parameterList = ref.getParameterList();\n    PsiTypeElement[] typeElements = parameterList != null ? parameterList.getTypeParameterElements() : PsiTypeElement.EMPTY_ARRAY;\n\n    return getPresentableText(name, annotations, typeElements);\n  }","id":50862,"modified_method":"@NotNull\n  public static String getPresentableText(@NotNull PsiJavaCodeReferenceElement ref) {\n    String name = ref.getReferenceName();\n    PsiAnnotation[] annotations = PsiTreeUtil.getChildrenOfType(ref, PsiAnnotation.class);\n    return getPresentableText(name, notNull(annotations, PsiAnnotation.EMPTY_ARRAY), ref.getTypeParameters());\n  }","commit_id":"2ed5f43708c2560b985d363cc01cd184b6ce950a","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  public static String getPresentableText(@Nullable String referenceName,\n                                          @NotNull PsiAnnotation[] annotations,\n                                          @NotNull PsiTypeElement[] typeElements) {\n    if (typeElements.length == 0 && annotations.length == 0) {\n      return referenceName != null ? referenceName : \"\";\n    }\n\n    StringBuilder buffer = new StringBuilder();\n\n    if (annotations.length > 0) {\n      for (PsiAnnotation annotation : annotations) {\n        buffer.append(annotation.getText()).append(' ');\n      }\n    }\n\n    buffer.append(referenceName);\n\n    if (typeElements.length > 0) {\n      buffer.append(\"<\");\n      for (int i = 0; i < typeElements.length; i++) {\n        PsiType type = typeElements[i].getType();\n        if (!(type instanceof PsiDiamondType)) {\n          buffer.append(type.getPresentableText());\n          if (i < typeElements.length - 1) buffer.append(\", \");\n        }\n      }\n      buffer.append(\">\");\n    }\n\n    return buffer.toString();\n  }","id":50863,"modified_method":"@NotNull\n  public static String getPresentableText(@Nullable String refName, @NotNull PsiAnnotation[] annotations, @NotNull PsiType[] typeParameters) {\n    if (typeParameters.length == 0 && annotations.length == 0) {\n      return refName != null ? refName : \"\";\n    }\n\n    StringBuilder buffer = new StringBuilder();\n\n    if (annotations.length > 0) {\n      for (PsiAnnotation annotation : annotations) {\n        buffer.append(annotation.getText()).append(' ');\n      }\n    }\n\n    buffer.append(refName);\n\n    if (typeParameters.length > 0) {\n      buffer.append(\"<\");\n      for (int i = 0; i < typeParameters.length; i++) {\n        buffer.append(typeParameters[i].getPresentableText());\n        if (i < typeParameters.length - 1) buffer.append(\", \");\n      }\n      buffer.append(\">\");\n    }\n\n    return buffer.toString();\n  }","commit_id":"2ed5f43708c2560b985d363cc01cd184b6ce950a","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/** deprecated use {@link #getPresentableText(String, PsiAnnotation[], PsiTypeElement[])} (to remove in IDEA 13) */\n  public static String getPresentableText(@Nullable String referenceName, @NotNull PsiType[] typeParameters) {\n    if (typeParameters.length > 0) {\n      StringBuilder buffer = new StringBuilder();\n      buffer.append(referenceName);\n      buffer.append(\"<\");\n      for (int i = 0; i < typeParameters.length; i++) {\n        buffer.append(typeParameters[i].getPresentableText());\n        if (i < typeParameters.length - 1) buffer.append(\", \");\n      }\n      buffer.append(\">\");\n      return buffer.toString();\n    }\n\n    return referenceName != null ? referenceName : \"\";\n  }","id":50864,"modified_method":"/** deprecated use {@link #getPresentableText(String, PsiAnnotation[], PsiType[])} (to remove in IDEA 13) */\n  public static String getPresentableText(@Nullable String referenceName, @NotNull PsiType[] typeParameters) {\n    return getPresentableText(referenceName, PsiAnnotation.EMPTY_ARRAY, typeParameters);\n  }","commit_id":"2ed5f43708c2560b985d363cc01cd184b6ce950a","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n     * Perform injections\n     */\n    public void inject(CamelExtension camelExtension, Object reference,\n                                String beanName) {\n        for (Method method : consumeMethods) {\n            Consume annotation = method.getAnnotation(Consume.class);\n            if (annotation != null) {\n                String contextName = CamelExtension.getCamelContextName(annotation.context(), startup);\n                DefaultCamelBeanPostProcessor postProcessor = camelExtension.getPostProcessor(\n                        contextName, beanManager);\n                if (postProcessor != null) {\n                    postProcessor.getPostProcessorHelper().consumerInjection(method, reference, beanName);\n                }\n            }\n        }\n        for (Method method : produceMethods) {\n            Produce annotation = method.getAnnotation(Produce.class);\n            if (annotation != null) {\n                String contextName = CamelExtension.getCamelContextName(annotation.context(), startup);\n                DefaultCamelBeanPostProcessor postProcessor = camelExtension.getPostProcessor(\n                        contextName, beanManager);\n                if (postProcessor != null && postProcessor.getPostProcessorHelper().matchContext(contextName)) {\n                    postProcessor.setterInjection(method, reference, beanName, annotation.uri(), annotation.ref(),\n                            annotation.property());\n                }\n            }\n        }\n        for (Method method : endpointMethods) {\n            EndpointInject annotation = method.getAnnotation(EndpointInject.class);\n            if (annotation != null) {\n                String contextName = CamelExtension.getCamelContextName(annotation.context(), startup);\n                DefaultCamelBeanPostProcessor postProcessor = camelExtension.getPostProcessor(\n                        contextName, beanManager);\n                if (postProcessor != null && postProcessor.getPostProcessorHelper().matchContext(contextName)) {\n                    postProcessor.setterInjection(method, reference, beanName, annotation.uri(), annotation.ref(),\n                            annotation.property());\n\n                }\n            }\n        }\n        for (Field field : produceFields) {\n            Produce annotation = field.getAnnotation(Produce.class);\n            if (annotation != null) {\n                String contextName = CamelExtension.getCamelContextName(annotation.context(), startup);\n                DefaultCamelBeanPostProcessor postProcessor = camelExtension.getPostProcessor(\n                        contextName, beanManager);\n                if (postProcessor != null && postProcessor.getPostProcessorHelper().matchContext(contextName)) {\n                    postProcessor.injectField(field, annotation.uri(), annotation.ref(),\n                            annotation.property(), reference, beanName);\n                }\n            }\n        }\n        for (Field field : endpointFields) {\n            EndpointInject annotation = field.getAnnotation(EndpointInject.class);\n            String contextName = CamelExtension.getCamelContextName(annotation.context(), startup);\n            DefaultCamelBeanPostProcessor postProcessor = camelExtension.getPostProcessor(\n                    contextName, beanManager);\n            if (postProcessor != null && postProcessor.getPostProcessorHelper().matchContext(contextName)) {\n                postProcessor.injectField(field, annotation.uri(), annotation.ref(),\n                        annotation.property(), reference, beanName);\n            }\n        }\n    }","id":50865,"modified_method":"/**\n     * Perform injections\n     */\n    public void inject(CamelExtension camelExtension, Object reference,\n                                String beanName) {\n        for (Method method : consumeMethods) {\n            Consume annotation = method.getAnnotation(Consume.class);\n            if (annotation != null) {\n                String contextName = CamelExtension.getCamelContextName(annotation.context(), startup);\n                DefaultCamelBeanPostProcessor postProcessor = camelExtension.getPostProcessor(\n                        contextName);\n                if (postProcessor != null) {\n                    postProcessor.getPostProcessorHelper().consumerInjection(method, reference, beanName);\n                }\n            }\n        }\n        for (Method method : produceMethods) {\n            Produce annotation = method.getAnnotation(Produce.class);\n            if (annotation != null) {\n                String contextName = CamelExtension.getCamelContextName(annotation.context(), startup);\n                DefaultCamelBeanPostProcessor postProcessor = camelExtension.getPostProcessor(\n                        contextName);\n                if (postProcessor != null && postProcessor.getPostProcessorHelper().matchContext(contextName)) {\n                    postProcessor.setterInjection(method, reference, beanName, annotation.uri(), annotation.ref(),\n                            annotation.property());\n                }\n            }\n        }\n        for (Method method : endpointMethods) {\n            EndpointInject annotation = method.getAnnotation(EndpointInject.class);\n            if (annotation != null) {\n                String contextName = CamelExtension.getCamelContextName(annotation.context(), startup);\n                DefaultCamelBeanPostProcessor postProcessor = camelExtension.getPostProcessor(\n                        contextName);\n                if (postProcessor != null && postProcessor.getPostProcessorHelper().matchContext(contextName)) {\n                    postProcessor.setterInjection(method, reference, beanName, annotation.uri(), annotation.ref(),\n                            annotation.property());\n\n                }\n            }\n        }\n        for (Field field : produceFields) {\n            Produce annotation = field.getAnnotation(Produce.class);\n            if (annotation != null) {\n                String contextName = CamelExtension.getCamelContextName(annotation.context(), startup);\n                DefaultCamelBeanPostProcessor postProcessor = camelExtension.getPostProcessor(\n                        contextName);\n                if (postProcessor != null && postProcessor.getPostProcessorHelper().matchContext(contextName)) {\n                    postProcessor.injectField(field, annotation.uri(), annotation.ref(),\n                            annotation.property(), reference, beanName);\n                }\n            }\n        }\n        for (Field field : endpointFields) {\n            EndpointInject annotation = field.getAnnotation(EndpointInject.class);\n            String contextName = CamelExtension.getCamelContextName(annotation.context(), startup);\n            DefaultCamelBeanPostProcessor postProcessor = camelExtension.getPostProcessor(\n                    contextName);\n            if (postProcessor != null && postProcessor.getPostProcessorHelper().matchContext(contextName)) {\n                postProcessor.injectField(field, annotation.uri(), annotation.ref(),\n                        annotation.property(), reference, beanName);\n            }\n        }\n    }","commit_id":"0474e37e23ca24f6fafeeebe68f8627468d55cb4","url":"https://github.com/apache/camel"},{"original_method":"protected DefaultCamelBeanPostProcessor getPostProcessor(String context, BeanManager beanManager) {\n        CamelContext camelContext = getCamelContext(context, beanManager);\n        if (camelContext != null) {\n            return new DefaultCamelBeanPostProcessor(camelContext);\n        } else {\n            throw new IllegalArgumentException(\"No such CamelContext '\" + context + \"' available!\");\n        }\n    }","id":50866,"modified_method":"protected DefaultCamelBeanPostProcessor getPostProcessor(String context) {\n        CamelContext camelContext = getCamelContext(context);\n        if (camelContext != null) {\n            return new DefaultCamelBeanPostProcessor(camelContext);\n        } else {\n            throw new IllegalArgumentException(\"No such CamelContext '\" + context + \"' available!\");\n        }\n    }","commit_id":"0474e37e23ca24f6fafeeebe68f8627468d55cb4","url":"https://github.com/apache/camel"},{"original_method":"/**\n     * Lets force the CDI container to create all beans annotated with @Consume so that the consumer becomes active\n     */\n    public void startConsumeBeans(@Observes AfterDeploymentValidation event, BeanManager beanManager)\n        throws Exception {\n        for (CamelContextBean bean : camelContextBeans) {\n            String name = bean.getCamelContextName();\n            CamelContext context = getCamelContext(name, beanManager);\n            if (context == null) {\n                throw new IllegalStateException(\n                        \"CamelContext '\" + name + \"' has not been injected into the CamelContextMap\");\n            }\n            bean.configureCamelContext((CdiCamelContext)context);\n        }\n\n        for (Bean<?> bean : eagerBeans) {\n            // force lazy creation to start the consumer\n            CreationalContext<?> creationalContext = beanManager.createCreationalContext(bean);\n            beanManager.getReference(bean, bean.getBeanClass(), creationalContext);\n        }\n    }","id":50867,"modified_method":"/**\n     * Lets force the CDI container to create all beans annotated with @Consume so that the consumer becomes active\n     */\n    public void startConsumeBeans(@Observes AfterDeploymentValidation event, BeanManager beanManager)\n        throws Exception {\n        for (CamelContextBean bean : camelContextBeans) {\n            String name = bean.getCamelContextName();\n            CamelContext context = getCamelContext(name);\n            if (context == null) {\n                throw new IllegalStateException(\n                        \"CamelContext '\" + name + \"' has not been injected into the CamelContextMap\");\n            }\n            bean.configureCamelContext((CdiCamelContext)context);\n        }\n\n        for (Bean<?> bean : eagerBeans) {\n            // force lazy creation to start the consumer\n            CreationalContext<?> creationalContext = beanManager.createCreationalContext(bean);\n            beanManager.getReference(bean, bean.getBeanClass(), creationalContext);\n        }\n    }","commit_id":"0474e37e23ca24f6fafeeebe68f8627468d55cb4","url":"https://github.com/apache/camel"},{"original_method":"protected CamelContext getCamelContext(String context, BeanManager beanManager) {\n        if (camelContextMap == null) {\n            //camelContextMap = BeanProvider.getContextualReference(CamelContextMap.class);\n            Set<Bean<?>> beans = beanManager.getBeans(CamelContextMap.class);\n            Bean<?> bean = beanManager.resolve(beans);\n            CreationalContext<?> creationalContext = beanManager.createCreationalContext(bean);\n            camelContextMap = (CamelContextMap) beanManager.getReference(bean, bean.getBeanClass(), creationalContext);\n            ObjectHelper.notNull(camelContextMap, \"Could not resolve CamelContextMap\");\n        }\n        return camelContextMap.getCamelContext(context);\n    }","id":50868,"modified_method":"protected CamelContext getCamelContext(String context) {\n        if (camelContextMap == null) {\n            camelContextMap = BeanProvider.getContextualReference(CamelContextMap.class);\n            ObjectHelper.notNull(camelContextMap, \"Could not resolve CamelContextMap\");\n        }\n        return camelContextMap.getCamelContext(context);\n    }","commit_id":"0474e37e23ca24f6fafeeebe68f8627468d55cb4","url":"https://github.com/apache/camel"},{"original_method":"@Test\n    @Slow\n    public void testQuorumRecovery() throws Exception {\n\n        logger.info(\"--> starting 3 nodes\");\n        cluster().startNode(settingsBuilder().put(\"gateway.type\", \"local\").build());\n        cluster().startNode(settingsBuilder().put(\"gateway.type\", \"local\").build());\n        cluster().startNode(settingsBuilder().put(\"gateway.type\", \"local\").build());\n        // we are shutting down nodes - make sure we don't have 2 clusters if we test network\n        setMinimumMasterNodes(2);\n\n        createIndex(\"test\");\n        ensureGreen();\n        final NumShards test = getNumShards(\"test\");\n\n        logger.info(\"--> indexing...\");\n        client().prepareIndex(\"test\", \"type1\", \"1\").setSource(jsonBuilder().startObject().field(\"field\", \"value1\").endObject()).get();\n        //We don't check for failures in the flush response: if we do we might get the following:\n        // FlushNotAllowedEngineException[[test][1] recovery is in progress, flush [COMMIT_TRANSLOG] is not allowed]\n        flush();\n        client().prepareIndex(\"test\", \"type1\", \"2\").setSource(jsonBuilder().startObject().field(\"field\", \"value2\").endObject()).get();\n        refresh();\n\n        for (int i = 0; i < 10; i++) {\n            assertHitCount(client().prepareCount().setQuery(matchAllQuery()).get(), 2l);\n        }\n        logger.info(\"--> restart all nodes\");\n        cluster().fullRestart(new RestartCallback() {\n            @Override\n            public Settings onNodeStopped(String nodeName) throws Exception {\n                return null;\n            }\n\n            @Override\n            public void doAfterNodes(int numNodes, final Client activeClient) throws Exception {\n                if (numNodes == 1) {\n                    assertThat(awaitBusy(new Predicate<Object>() {\n                        @Override\n                        public boolean apply(Object input) {\n                            logger.info(\"--> running cluster_health (wait for the shards to startup)\");\n                            ClusterHealthResponse clusterHealth = activeClient.admin().cluster().health(clusterHealthRequest().waitForYellowStatus().waitForNodes(\"2\").waitForActiveShards(test.numPrimaries * 2)).actionGet();\n                            logger.info(\"--> done cluster_health, status \" + clusterHealth.getStatus());\n                            return (!clusterHealth.isTimedOut()) && clusterHealth.getStatus() == ClusterHealthStatus.YELLOW;\n                        }\n                    }, 30, TimeUnit.SECONDS), equalTo(true));\n                    logger.info(\"--> one node is closed -- index 1 document into the remaining nodes\");\n                    activeClient.prepareIndex(\"test\", \"type1\", \"3\").setSource(jsonBuilder().startObject().field(\"field\", \"value3\").endObject()).get();\n                    assertNoFailures(activeClient.admin().indices().prepareRefresh().get());\n                    for (int i = 0; i < 10; i++) {\n                        assertHitCount(activeClient.prepareCount().setQuery(matchAllQuery()).get(), 3l);\n                    }\n                }\n            }\n            \n        });\n        logger.info(\"--> all nodes are started back, verifying we got the latest version\");\n        logger.info(\"--> running cluster_health (wait for the shards to startup)\");\n        ensureGreen();\n\n        for (int i = 0; i < 10; i++) {\n            assertHitCount(client().prepareCount().setQuery(matchAllQuery()).get(), 3l);\n        }\n    }","id":50869,"modified_method":"@Test\n    @Slow\n    public void testQuorumRecovery() throws Exception {\n\n        logger.info(\"--> starting 3 nodes\");\n        cluster().startNodesAsync(3, settingsBuilder().put(\"gateway.type\", \"local\").build()).get();\n        // we are shutting down nodes - make sure we don't have 2 clusters if we test network\n        setMinimumMasterNodes(2);\n\n        createIndex(\"test\");\n        ensureGreen();\n        final NumShards test = getNumShards(\"test\");\n\n        logger.info(\"--> indexing...\");\n        client().prepareIndex(\"test\", \"type1\", \"1\").setSource(jsonBuilder().startObject().field(\"field\", \"value1\").endObject()).get();\n        //We don't check for failures in the flush response: if we do we might get the following:\n        // FlushNotAllowedEngineException[[test][1] recovery is in progress, flush [COMMIT_TRANSLOG] is not allowed]\n        flush();\n        client().prepareIndex(\"test\", \"type1\", \"2\").setSource(jsonBuilder().startObject().field(\"field\", \"value2\").endObject()).get();\n        refresh();\n\n        for (int i = 0; i < 10; i++) {\n            assertHitCount(client().prepareCount().setQuery(matchAllQuery()).get(), 2l);\n        }\n        logger.info(\"--> restart all nodes\");\n        cluster().fullRestart(new RestartCallback() {\n            @Override\n            public Settings onNodeStopped(String nodeName) throws Exception {\n                return null;\n            }\n\n            @Override\n            public void doAfterNodes(int numNodes, final Client activeClient) throws Exception {\n                if (numNodes == 1) {\n                    assertThat(awaitBusy(new Predicate<Object>() {\n                        @Override\n                        public boolean apply(Object input) {\n                            logger.info(\"--> running cluster_health (wait for the shards to startup)\");\n                            ClusterHealthResponse clusterHealth = activeClient.admin().cluster().health(clusterHealthRequest().waitForYellowStatus().waitForNodes(\"2\").waitForActiveShards(test.numPrimaries * 2)).actionGet();\n                            logger.info(\"--> done cluster_health, status \" + clusterHealth.getStatus());\n                            return (!clusterHealth.isTimedOut()) && clusterHealth.getStatus() == ClusterHealthStatus.YELLOW;\n                        }\n                    }, 30, TimeUnit.SECONDS), equalTo(true));\n                    logger.info(\"--> one node is closed -- index 1 document into the remaining nodes\");\n                    activeClient.prepareIndex(\"test\", \"type1\", \"3\").setSource(jsonBuilder().startObject().field(\"field\", \"value3\").endObject()).get();\n                    assertNoFailures(activeClient.admin().indices().prepareRefresh().get());\n                    for (int i = 0; i < 10; i++) {\n                        assertHitCount(activeClient.prepareCount().setQuery(matchAllQuery()).get(), 3l);\n                    }\n                }\n            }\n            \n        });\n        logger.info(\"--> all nodes are started back, verifying we got the latest version\");\n        logger.info(\"--> running cluster_health (wait for the shards to startup)\");\n        ensureGreen();\n\n        for (int i = 0; i < 10; i++) {\n            assertHitCount(client().prepareCount().setQuery(matchAllQuery()).get(), 3l);\n        }\n    }","commit_id":"be33c998352d649e08e115ffb2c0e9017afd066d","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    @Slow\n    public void testChangeInitialShardsRecovery() throws Exception {\n        logger.info(\"--> starting 3 nodes\");\n        final String[] nodes = new String[3];\n        nodes[0] = cluster().startNode(settingsBuilder().put(\"gateway.type\", \"local\").build());\n        nodes[1] = cluster().startNode(settingsBuilder().put(\"gateway.type\", \"local\").build());\n        nodes[2] = cluster().startNode(settingsBuilder().put(\"gateway.type\", \"local\").build());\n\n        createIndex(\"test\");\n        ensureGreen();\n        NumShards test = getNumShards(\"test\");\n\n        logger.info(\"--> indexing...\");\n        client().prepareIndex(\"test\", \"type1\", \"1\").setSource(jsonBuilder().startObject().field(\"field\", \"value1\").endObject()).get();\n        //We don't check for failures in the flush response: if we do we might get the following:\n        // FlushNotAllowedEngineException[[test][1] recovery is in progress, flush [COMMIT_TRANSLOG] is not allowed]\n        flush();\n        client().prepareIndex(\"test\", \"type1\", \"2\").setSource(jsonBuilder().startObject().field(\"field\", \"value2\").endObject()).get();\n        refresh();\n\n        for (int i = 0; i < 10; i++) {\n            assertHitCount(client().prepareCount().setQuery(matchAllQuery()).get(), 2l);\n        }\n        \n        final String nodeToRemove = nodes[between(0,2)];\n        logger.info(\"--> restarting 1 nodes -- kill 2\");\n        cluster().fullRestart(new RestartCallback() {\n            @Override\n            public Settings onNodeStopped(String nodeName) throws Exception {\n                return settingsBuilder().put(\"gateway.type\", \"local\").build();\n            }\n            \n            @Override\n            public boolean doRestart(String nodeName) {\n                return nodeToRemove.equals(nodeName);\n            }\n        });\n        if (randomBoolean()) {\n            Thread.sleep(between(1, 400)); // wait a bit and give is a chance to try to allocate\n        }\n        ClusterHealthResponse clusterHealth = client().admin().cluster().health(clusterHealthRequest().waitForNodes(\"1\")).actionGet();\n        assertThat(clusterHealth.isTimedOut(), equalTo(false));\n        assertThat(clusterHealth.getStatus(), equalTo(ClusterHealthStatus.RED));  // nothing allocated yet\n        assertThat(awaitBusy(new Predicate<Object>() {\n            @Override\n            public boolean apply(Object input) {\n                ClusterStateResponse clusterStateResponse = cluster().smartClient().admin().cluster().prepareState().setMasterNodeTimeout(\"500ms\").get();\n                return clusterStateResponse.getState() != null && clusterStateResponse.getState().routingTable().index(\"test\") != null;\n            }}), equalTo(true)); // wait until we get a cluster state - could be null if we quick enough.\n        final ClusterStateResponse clusterStateResponse = cluster().smartClient().admin().cluster().prepareState().setMasterNodeTimeout(\"500ms\").get();\n        assertThat(clusterStateResponse.getState(), notNullValue());\n        assertThat(clusterStateResponse.getState().routingTable().index(\"test\"), notNullValue());\n        assertThat(clusterStateResponse.getState().routingTable().index(\"test\").allPrimaryShardsActive(), is(false));\n        logger.info(\"--> change the recovery.initial_shards setting, and make sure its recovered\");\n        client().admin().indices().prepareUpdateSettings(\"test\").setSettings(settingsBuilder().put(\"recovery.initial_shards\", 1)).get();\n\n        logger.info(\"--> running cluster_health (wait for the shards to startup), primaries only since we only have 1 node\");\n        clusterHealth = client().admin().cluster().health(clusterHealthRequest().waitForYellowStatus().waitForActiveShards(test.numPrimaries)).actionGet();\n        logger.info(\"--> done cluster_health, status \" + clusterHealth.getStatus());\n        assertThat(clusterHealth.isTimedOut(), equalTo(false));\n        assertThat(clusterHealth.getStatus(), equalTo(ClusterHealthStatus.YELLOW));\n\n        for (int i = 0; i < 10; i++) {\n            assertHitCount(client().prepareCount().setQuery(matchAllQuery()).get(), 2l);\n        }\n    }","id":50870,"modified_method":"@Test\n    @Slow\n    public void testChangeInitialShardsRecovery() throws Exception {\n        logger.info(\"--> starting 3 nodes\");\n        final String[] nodes = cluster().startNodesAsync(3, settingsBuilder().put(\"gateway.type\", \"local\").build()).get().toArray(new String[0]);\n\n        createIndex(\"test\");\n        ensureGreen();\n        NumShards test = getNumShards(\"test\");\n\n        logger.info(\"--> indexing...\");\n        client().prepareIndex(\"test\", \"type1\", \"1\").setSource(jsonBuilder().startObject().field(\"field\", \"value1\").endObject()).get();\n        //We don't check for failures in the flush response: if we do we might get the following:\n        // FlushNotAllowedEngineException[[test][1] recovery is in progress, flush [COMMIT_TRANSLOG] is not allowed]\n        flush();\n        client().prepareIndex(\"test\", \"type1\", \"2\").setSource(jsonBuilder().startObject().field(\"field\", \"value2\").endObject()).get();\n        refresh();\n\n        for (int i = 0; i < 10; i++) {\n            assertHitCount(client().prepareCount().setQuery(matchAllQuery()).get(), 2l);\n        }\n        \n        final String nodeToRemove = nodes[between(0,2)];\n        logger.info(\"--> restarting 1 nodes -- kill 2\");\n        cluster().fullRestart(new RestartCallback() {\n            @Override\n            public Settings onNodeStopped(String nodeName) throws Exception {\n                return settingsBuilder().put(\"gateway.type\", \"local\").build();\n            }\n            \n            @Override\n            public boolean doRestart(String nodeName) {\n                return nodeToRemove.equals(nodeName);\n            }\n        });\n        if (randomBoolean()) {\n            Thread.sleep(between(1, 400)); // wait a bit and give is a chance to try to allocate\n        }\n        ClusterHealthResponse clusterHealth = client().admin().cluster().health(clusterHealthRequest().waitForNodes(\"1\")).actionGet();\n        assertThat(clusterHealth.isTimedOut(), equalTo(false));\n        assertThat(clusterHealth.getStatus(), equalTo(ClusterHealthStatus.RED));  // nothing allocated yet\n        assertThat(awaitBusy(new Predicate<Object>() {\n            @Override\n            public boolean apply(Object input) {\n                ClusterStateResponse clusterStateResponse = cluster().smartClient().admin().cluster().prepareState().setMasterNodeTimeout(\"500ms\").get();\n                return clusterStateResponse.getState() != null && clusterStateResponse.getState().routingTable().index(\"test\") != null;\n            }}), equalTo(true)); // wait until we get a cluster state - could be null if we quick enough.\n        final ClusterStateResponse clusterStateResponse = cluster().smartClient().admin().cluster().prepareState().setMasterNodeTimeout(\"500ms\").get();\n        assertThat(clusterStateResponse.getState(), notNullValue());\n        assertThat(clusterStateResponse.getState().routingTable().index(\"test\"), notNullValue());\n        assertThat(clusterStateResponse.getState().routingTable().index(\"test\").allPrimaryShardsActive(), is(false));\n        logger.info(\"--> change the recovery.initial_shards setting, and make sure its recovered\");\n        client().admin().indices().prepareUpdateSettings(\"test\").setSettings(settingsBuilder().put(\"recovery.initial_shards\", 1)).get();\n\n        logger.info(\"--> running cluster_health (wait for the shards to startup), primaries only since we only have 1 node\");\n        clusterHealth = client().admin().cluster().health(clusterHealthRequest().waitForYellowStatus().waitForActiveShards(test.numPrimaries)).actionGet();\n        logger.info(\"--> done cluster_health, status \" + clusterHealth.getStatus());\n        assertThat(clusterHealth.isTimedOut(), equalTo(false));\n        assertThat(clusterHealth.getStatus(), equalTo(ClusterHealthStatus.YELLOW));\n\n        for (int i = 0; i < 10; i++) {\n            assertHitCount(client().prepareCount().setQuery(matchAllQuery()).get(), 2l);\n        }\n    }","commit_id":"be33c998352d649e08e115ffb2c0e9017afd066d","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public String startNode(Settings settings, Version version) {\n        NodeAndClient buildNode = buildNode(settings, version);\n        buildNode.node().start();\n        publishNode(buildNode);\n        return buildNode.name;\n    }","id":50871,"modified_method":"/**\n     * Starts a node with the given settings and version and returns it's name.\n     */\n    public synchronized String startNode(Settings settings, Version version) {\n        NodeAndClient buildNode = buildNode(settings, version);\n        buildNode.node().start();\n        publishNode(buildNode);\n        return buildNode.name;\n    }","commit_id":"be33c998352d649e08e115ffb2c0e9017afd066d","url":"https://github.com/elastic/elasticsearch"},{"original_method":"private NodeAndClient buildNode(int nodeId, long seed, Settings settings, Version version) {\n        ensureOpen();\n        settings = getSettings(nodeId, seed, settings);\n        String name = buildNodeName(nodeId);\n        assert !nodes.containsKey(name);\n        Settings finalSettings = settingsBuilder()\n                .put(settings)\n                .put(\"name\", name)\n                .put(\"discovery.id.seed\", seed)\n                .put(\"tests.mock.version\", version)\n                .build();\n        Node node = nodeBuilder().settings(finalSettings).build();\n        return new NodeAndClient(name, node, new RandomClientFactory());\n    }","id":50872,"modified_method":"private NodeAndClient buildNode(int nodeId, long seed, Settings settings, Version version) {\n        assert Thread.holdsLock(this);\n        ensureOpen();\n        settings = getSettings(nodeId, seed, settings);\n        String name = buildNodeName(nodeId);\n        assert !nodes.containsKey(name);\n        Settings finalSettings = settingsBuilder()\n                .put(settings)\n                .put(\"name\", name)\n                .put(\"discovery.id.seed\", seed)\n                .put(\"tests.mock.version\", version)\n                .build();\n        Node node = nodeBuilder().settings(finalSettings).build();\n        return new NodeAndClient(name, node, new RandomClientFactory());\n    }","commit_id":"be33c998352d649e08e115ffb2c0e9017afd066d","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public TestCluster(long clusterSeed, int minNumNodes, int maxNumNodes, String clusterName, NodeSettingsSource nodeSettingsSource) {\n        this.clusterName = clusterName;\n\n        if (minNumNodes < 0 || maxNumNodes < 0) {\n            throw new IllegalArgumentException(\"minimum and maximum number of nodes must be >= 0\");\n        }\n\n        if (maxNumNodes < minNumNodes) {\n            throw new IllegalArgumentException(\"maximum number of nodes must be >= minimum number of nodes\");\n        }\n\n        Random random = new Random(clusterSeed);\n\n        int numSharedNodes;\n        if (minNumNodes == maxNumNodes) {\n            numSharedNodes = minNumNodes;\n        } else {\n            numSharedNodes = minNumNodes + random.nextInt(maxNumNodes - minNumNodes);\n        }\n\n        assert numSharedNodes >= 0;\n        /*\n         *  TODO\n         *  - we might want start some master only nodes?\n         *  - we could add a flag that returns a client to the master all the time?\n         *  - we could add a flag that never returns a client to the master\n         *  - along those lines use a dedicated node that is master eligible and let all other nodes be only data nodes\n         */\n        sharedNodesSeeds = new long[numSharedNodes];\n        for (int i = 0; i < sharedNodesSeeds.length; i++) {\n            sharedNodesSeeds[i] = random.nextLong();\n        }\n        logger.info(\"Setup TestCluster [{}] with seed [{}] using [{}] nodes\", clusterName, SeedUtils.formatSeed(clusterSeed), numSharedNodes);\n        this.nodeSettingsSource = nodeSettingsSource;\n        Builder builder = ImmutableSettings.settingsBuilder();\n        if (random.nextInt(5) == 0) { // sometimes set this\n            // randomize (multi/single) data path, special case for 0, don't set it at all...\n            final int numOfDataPaths = random.nextInt(5);\n            if (numOfDataPaths > 0) {\n                StringBuilder dataPath = new StringBuilder();\n                for (int i = 0; i < numOfDataPaths; i++) {\n                    dataPath.append(\"data/d\").append(i).append(',');\n                }\n                builder.put(\"path.data\", dataPath.toString());\n            }\n        }\n        defaultSettings = builder.build();\n\n    }","id":50873,"modified_method":"public TestCluster(long clusterSeed, int minNumNodes, int maxNumNodes, String clusterName, NodeSettingsSource nodeSettingsSource) {\n        this.clusterName = clusterName;\n\n        if (minNumNodes < 0 || maxNumNodes < 0) {\n            throw new IllegalArgumentException(\"minimum and maximum number of nodes must be >= 0\");\n        }\n\n        if (maxNumNodes < minNumNodes) {\n            throw new IllegalArgumentException(\"maximum number of nodes must be >= minimum number of nodes\");\n        }\n\n        Random random = new Random(clusterSeed);\n\n        int numSharedNodes;\n        if (minNumNodes == maxNumNodes) {\n            numSharedNodes = minNumNodes;\n        } else {\n            numSharedNodes = minNumNodes + random.nextInt(maxNumNodes - minNumNodes);\n        }\n\n        assert numSharedNodes >= 0;\n        /*\n         *  TODO\n         *  - we might want start some master only nodes?\n         *  - we could add a flag that returns a client to the master all the time?\n         *  - we could add a flag that never returns a client to the master\n         *  - along those lines use a dedicated node that is master eligible and let all other nodes be only data nodes\n         */\n        sharedNodesSeeds = new long[numSharedNodes];\n        for (int i = 0; i < sharedNodesSeeds.length; i++) {\n            sharedNodesSeeds[i] = random.nextLong();\n        }\n        logger.info(\"Setup TestCluster [{}] with seed [{}] using [{}] nodes\", clusterName, SeedUtils.formatSeed(clusterSeed), numSharedNodes);\n        this.nodeSettingsSource = nodeSettingsSource;\n        Builder builder = ImmutableSettings.settingsBuilder();\n        if (random.nextInt(5) == 0) { // sometimes set this\n            // randomize (multi/single) data path, special case for 0, don't set it at all...\n            final int numOfDataPaths = random.nextInt(5);\n            if (numOfDataPaths > 0) {\n                StringBuilder dataPath = new StringBuilder();\n                for (int i = 0; i < numOfDataPaths; i++) {\n                    dataPath.append(\"data/d\").append(i).append(',');\n                }\n                builder.put(\"path.data\", dataPath.toString());\n            }\n        }\n        defaultSettings = builder.build();\n        executor = EsExecutors.newCached(1, TimeUnit.MINUTES, EsExecutors.daemonThreadFactory(\"test_\" + clusterName));\n    }","commit_id":"be33c998352d649e08e115ffb2c0e9017afd066d","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n    public void close() {\n        ensureOpen();\n        if (this.open.compareAndSet(true, false)) {\n            IOUtils.closeWhileHandlingException(nodes.values());\n            nodes.clear();\n        }\n    }","id":50874,"modified_method":"@Override\n    public void close() {\n        ensureOpen();\n        if (this.open.compareAndSet(true, false)) {\n            IOUtils.closeWhileHandlingException(nodes.values());\n            nodes.clear();\n            executor.shutdownNow();\n        }\n    }","commit_id":"be33c998352d649e08e115ffb2c0e9017afd066d","url":"https://github.com/elastic/elasticsearch"},{"original_method":"/**\n     * Ensures that at least <code>n<\/code> nodes are present in the cluster.\n     * if more nodes than <code>n<\/code> are present this method will not\n     * stop any of the running nodes.\n     */\n    public synchronized void ensureAtLeastNumNodes(int n) {\n        int size = nodes.size();\n        for (int i = size; i < n; i++) {\n            logger.info(\"increasing cluster size from {} to {}\", size, n);\n            NodeAndClient buildNode = buildNode();\n            buildNode.node().start();\n            publishNode(buildNode);\n        }\n    }","id":50875,"modified_method":"/**\n     * Ensures that at least <code>n<\/code> nodes are present in the cluster.\n     * if more nodes than <code>n<\/code> are present this method will not\n     * stop any of the running nodes.\n     */\n    public void ensureAtLeastNumNodes(int n) {\n        List<ListenableFuture<String>> futures = Lists.newArrayList();\n        synchronized (this) {\n            int size = nodes.size();\n            for (int i = size; i < n; i++) {\n                logger.info(\"increasing cluster size from {} to {}\", size, n);\n                futures.add(startNodeAsync());\n            }\n        }\n        try {\n            Futures.allAsList(futures).get();\n        } catch (Exception e) {\n            throw new ElasticsearchException(\"failed to start nodes\", e);\n        }\n    }","commit_id":"be33c998352d649e08e115ffb2c0e9017afd066d","url":"https://github.com/elastic/elasticsearch"},{"original_method":"private static XContentType randomXContentType() {\n        return randomFrom(XContentType.values());\n    }","id":50876,"modified_method":"public static XContentType randomXContentType() {\n        return randomFrom(XContentType.values());\n    }","commit_id":"13630d80284d775378d9e27def9a4b537e29f10c","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    public void testTwoNodesSingleDoc() throws Exception {\n        logger.info(\"--> cleaning nodes\");\n\n        logger.info(\"--> starting 2 nodes\");\n        internalCluster().startNode();\n        internalCluster().startNode();\n\n        logger.info(\"--> indexing a simple document\");\n        client().prepareIndex(\"test\", \"type1\", \"1\").setSource(\"field1\", \"value1\").setRefresh(true).execute().actionGet();\n\n        logger.info(\"--> waiting for green status\");\n        ClusterHealthResponse health = client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setWaitForGreenStatus().setWaitForNodes(\"2\").execute().actionGet();\n        assertThat(health.isTimedOut(), equalTo(false));\n\n        logger.info(\"--> verify 1 doc in the index\");\n        for (int i = 0; i < 10; i++) {\n            assertHitCount(client().prepareSearch().setQuery(matchAllQuery()).get(), 1l);\n        }\n\n        logger.info(\"--> closing test index...\");\n        client().admin().indices().prepareClose(\"test\").execute().actionGet();\n\n        ClusterStateResponse stateResponse = client().admin().cluster().prepareState().execute().actionGet();\n        assertThat(stateResponse.getState().metaData().index(\"test\").state(), equalTo(IndexMetaData.State.CLOSE));\n        assertThat(stateResponse.getState().routingTable().index(\"test\"), nullValue());\n\n        logger.info(\"--> opening the index...\");\n        client().admin().indices().prepareOpen(\"test\").execute().actionGet();\n\n        logger.info(\"--> waiting for green status\");\n        health = client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setWaitForGreenStatus().setWaitForNodes(\"2\").execute().actionGet();\n        assertThat(health.isTimedOut(), equalTo(false));\n\n        logger.info(\"--> verify 1 doc in the index\");\n        assertHitCount(client().prepareSearch().setQuery(matchAllQuery()).get(), 1l);\n        for (int i = 0; i < 10; i++) {\n            assertHitCount(client().prepareSearch().setQuery(matchAllQuery()).get(), 1l);\n        }\n    }","id":50877,"modified_method":"@Test\n    public void testTwoNodesSingleDoc() throws Exception {\n        logger.info(\"--> cleaning nodes\");\n\n        logger.info(\"--> starting 2 nodes\");\n        internalCluster().startNodesAsync(2).get();\n\n        logger.info(\"--> indexing a simple document\");\n        client().prepareIndex(\"test\", \"type1\", \"1\").setSource(\"field1\", \"value1\").setRefresh(true).execute().actionGet();\n\n        logger.info(\"--> waiting for green status\");\n        ClusterHealthResponse health = client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setWaitForGreenStatus().setWaitForNodes(\"2\").execute().actionGet();\n        assertThat(health.isTimedOut(), equalTo(false));\n\n        logger.info(\"--> verify 1 doc in the index\");\n        for (int i = 0; i < 10; i++) {\n            assertHitCount(client().prepareSearch().setQuery(matchAllQuery()).get(), 1l);\n        }\n\n        logger.info(\"--> closing test index...\");\n        client().admin().indices().prepareClose(\"test\").execute().actionGet();\n\n        ClusterStateResponse stateResponse = client().admin().cluster().prepareState().execute().actionGet();\n        assertThat(stateResponse.getState().metaData().index(\"test\").state(), equalTo(IndexMetaData.State.CLOSE));\n        assertThat(stateResponse.getState().routingTable().index(\"test\"), nullValue());\n\n        logger.info(\"--> opening the index...\");\n        client().admin().indices().prepareOpen(\"test\").execute().actionGet();\n\n        logger.info(\"--> waiting for green status\");\n        health = client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setWaitForGreenStatus().setWaitForNodes(\"2\").execute().actionGet();\n        assertThat(health.isTimedOut(), equalTo(false));\n\n        logger.info(\"--> verify 1 doc in the index\");\n        assertHitCount(client().prepareSearch().setQuery(matchAllQuery()).get(), 1l);\n        for (int i = 0; i < 10; i++) {\n            assertHitCount(client().prepareSearch().setQuery(matchAllQuery()).get(), 1l);\n        }\n    }","commit_id":"13630d80284d775378d9e27def9a4b537e29f10c","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    public void testDanglingIndicesAutoImportYes() throws Exception {\n        Settings settings = settingsBuilder()\n                .put(GatewayMetaState.GATEWAY_AUTO_IMPORT_DANGLED, \"yes\")\n                .put(GatewayMetaState.GATEWAY_DANGLING_TIMEOUT, randomIntBetween(0, 120))\n                .build();\n        logger.info(\"--> starting two nodes\");\n\n        final String node_1 = internalCluster().startNode(settings);\n        internalCluster().startNode(settings);\n\n        logger.info(\"--> indexing a simple document\");\n        client().prepareIndex(\"test\", \"type1\", \"1\").setSource(\"field1\", \"value1\").setRefresh(true).execute().actionGet();\n\n        logger.info(\"--> waiting for green status\");\n        ensureGreen();\n\n        logger.info(\"--> verify 1 doc in the index\");\n        for (int i = 0; i < 10; i++) {\n            assertHitCount(client().prepareSearch().setQuery(matchAllQuery()).get(), 1l);\n        }\n        assertThat(client().prepareGet(\"test\", \"type1\", \"1\").execute().actionGet().isExists(), equalTo(true));\n\n        logger.info(\"--> restarting the nodes\");\n        final Gateway gateway1 = internalCluster().getInstance(Gateway.class, node_1);\n        internalCluster().fullRestart(new RestartCallback() {\n            @Override\n            public Settings onNodeStopped(String nodeName) throws Exception {\n                if (node_1.equals(nodeName)) {\n                    logger.info(\"--> deleting the data for the first node\");\n                    gateway1.reset();\n                }\n                return null;\n            }\n        });\n\n        logger.info(\"--> waiting for green status\");\n        ensureGreen();\n\n        // spin a bit waiting for the index to exists\n        long time = System.currentTimeMillis();\n        while ((System.currentTimeMillis() - time) < TimeValue.timeValueSeconds(10).millis()) {\n            if (client().admin().indices().prepareExists(\"test\").execute().actionGet().isExists()) {\n                break;\n            }\n        }\n\n        logger.info(\"--> verify that the dangling index exists\");\n        assertThat(client().admin().indices().prepareExists(\"test\").execute().actionGet().isExists(), equalTo(true));\n        logger.info(\"--> waiting for green status\");\n        ensureGreen();\n\n        logger.info(\"--> verify the doc is there\");\n        assertThat(client().prepareGet(\"test\", \"type1\", \"1\").execute().actionGet().isExists(), equalTo(true));\n    }","id":50878,"modified_method":"@Test\n    public void testDanglingIndices() throws Exception {\n        logger.info(\"--> starting two nodes\");\n\n        final String node_1 = internalCluster().startNodesAsync(2).get().get(0);\n\n        logger.info(\"--> indexing a simple document\");\n        client().prepareIndex(\"test\", \"type1\", \"1\").setSource(\"field1\", \"value1\").setRefresh(true).execute().actionGet();\n\n        logger.info(\"--> waiting for green status\");\n        ensureGreen();\n\n        logger.info(\"--> verify 1 doc in the index\");\n        for (int i = 0; i < 10; i++) {\n            assertHitCount(client().prepareSearch().setQuery(matchAllQuery()).get(), 1l);\n        }\n        assertThat(client().prepareGet(\"test\", \"type1\", \"1\").execute().actionGet().isExists(), equalTo(true));\n\n        logger.info(\"--> restarting the nodes\");\n        final Gateway gateway1 = internalCluster().getInstance(Gateway.class, node_1);\n        internalCluster().fullRestart(new RestartCallback() {\n            @Override\n            public Settings onNodeStopped(String nodeName) throws Exception {\n                if (node_1.equals(nodeName)) {\n                    logger.info(\"--> deleting the data for the first node\");\n                    gateway1.reset();\n                }\n                return null;\n            }\n        });\n\n        logger.info(\"--> waiting for green status\");\n        ensureGreen();\n\n        // spin a bit waiting for the index to exists\n        long time = System.currentTimeMillis();\n        while ((System.currentTimeMillis() - time) < TimeValue.timeValueSeconds(10).millis()) {\n            if (client().admin().indices().prepareExists(\"test\").execute().actionGet().isExists()) {\n                break;\n            }\n        }\n\n        logger.info(\"--> verify that the dangling index exists\");\n        assertThat(client().admin().indices().prepareExists(\"test\").execute().actionGet().isExists(), equalTo(true));\n        logger.info(\"--> waiting for green status\");\n        ensureGreen();\n\n        logger.info(\"--> verify the doc is there\");\n        assertThat(client().prepareGet(\"test\", \"type1\", \"1\").execute().actionGet().isExists(), equalTo(true));\n    }","commit_id":"13630d80284d775378d9e27def9a4b537e29f10c","url":"https://github.com/elastic/elasticsearch"},{"original_method":"/**\n     * Elasticsearch 2.0 deprecated custom routing hash functions. So what we do here is that for old indices, we\n     * move this old & deprecated node setting to an index setting so that we can keep things backward compatible.\n     */\n    private void pre20Upgrade() throws Exception {\n        final Class<? extends HashFunction> pre20HashFunction;\n        final String pre20HashFunctionName = settings.get(DEPRECATED_SETTING_ROUTING_HASH_FUNCTION, null);\n        final boolean hasCustomPre20HashFunction = pre20HashFunctionName != null;\n        // the hash function package has changed we replace the two hash functions if their fully qualified name is used.\n        if (hasCustomPre20HashFunction) {\n            switch (pre20HashFunctionName) {\n                case \"org.elasticsearch.cluster.routing.operation.hash.simple.SimpleHashFunction\":\n                    pre20HashFunction = SimpleHashFunction.class;\n                    break;\n                case \"org.elasticsearch.cluster.routing.operation.hash.djb.DjbHashFunction\":\n                    pre20HashFunction = DjbHashFunction.class;\n                    break;\n                default:\n                    pre20HashFunction = settings.getAsClass(DEPRECATED_SETTING_ROUTING_HASH_FUNCTION, DjbHashFunction.class, \"org.elasticsearch.cluster.routing.\", \"HashFunction\");\n            }\n        } else {\n            pre20HashFunction = DjbHashFunction.class;\n        }\n        final Boolean pre20UseType = settings.getAsBoolean(DEPRECATED_SETTING_ROUTING_USE_TYPE, null);\n        MetaData metaData = loadMetaState();\n        for (IndexMetaData indexMetaData : metaData) {\n            if (indexMetaData.settings().get(IndexMetaData.SETTING_LEGACY_ROUTING_HASH_FUNCTION) == null\n                    && indexMetaData.getCreationVersion().before(Version.V_2_0_0)) {\n                // these settings need an upgrade\n                Settings indexSettings = ImmutableSettings.builder().put(indexMetaData.settings())\n                        .put(IndexMetaData.SETTING_LEGACY_ROUTING_HASH_FUNCTION, pre20HashFunction)\n                        .put(IndexMetaData.SETTING_LEGACY_ROUTING_USE_TYPE, pre20UseType == null ? false : pre20UseType)\n                        .build();\n                IndexMetaData newMetaData = IndexMetaData.builder(indexMetaData)\n                        .version(indexMetaData.version())\n                        .settings(indexSettings)\n                        .build();\n                writeIndex(\"upgrade\", newMetaData, null);\n            } else if (indexMetaData.getCreationVersion().onOrAfter(Version.V_2_0_0)) {\n                if (indexMetaData.getSettings().get(IndexMetaData.SETTING_LEGACY_ROUTING_HASH_FUNCTION) != null\n                        || indexMetaData.getSettings().get(IndexMetaData.SETTING_LEGACY_ROUTING_USE_TYPE) != null) {\n                    throw new ElasticsearchIllegalStateException(\"Indices created on or after 2.0 should NOT contain [\" + IndexMetaData.SETTING_LEGACY_ROUTING_HASH_FUNCTION\n                            + \"] + or [\" + IndexMetaData.SETTING_LEGACY_ROUTING_USE_TYPE + \"] in their index settings\");\n                }\n            }\n        }\n        if (hasCustomPre20HashFunction|| pre20UseType != null) {\n            logger.warn(\"Settings [{}] and [{}] are deprecated. Index settings from your old indices have been updated to record the fact that they \"\n                    + \"used some custom routing logic, you can now remove these settings from your `elasticsearch.yml` file\", DEPRECATED_SETTING_ROUTING_HASH_FUNCTION, DEPRECATED_SETTING_ROUTING_USE_TYPE);\n        }\n    }","id":50879,"modified_method":"/**\n     * Elasticsearch 2.0 deprecated custom routing hash functions. So what we do here is that for old indices, we\n     * move this old & deprecated node setting to an index setting so that we can keep things backward compatible.\n     */\n    private void pre20Upgrade() throws Exception {\n        final Class<? extends HashFunction> pre20HashFunction;\n        final String pre20HashFunctionName = settings.get(DEPRECATED_SETTING_ROUTING_HASH_FUNCTION, null);\n        final boolean hasCustomPre20HashFunction = pre20HashFunctionName != null;\n        // the hash function package has changed we replace the two hash functions if their fully qualified name is used.\n        if (hasCustomPre20HashFunction) {\n            switch (pre20HashFunctionName) {\n                case \"org.elasticsearch.cluster.routing.operation.hash.simple.SimpleHashFunction\":\n                    pre20HashFunction = SimpleHashFunction.class;\n                    break;\n                case \"org.elasticsearch.cluster.routing.operation.hash.djb.DjbHashFunction\":\n                    pre20HashFunction = DjbHashFunction.class;\n                    break;\n                default:\n                    pre20HashFunction = settings.getAsClass(DEPRECATED_SETTING_ROUTING_HASH_FUNCTION, DjbHashFunction.class, \"org.elasticsearch.cluster.routing.\", \"HashFunction\");\n            }\n        } else {\n            pre20HashFunction = DjbHashFunction.class;\n        }\n        final Boolean pre20UseType = settings.getAsBoolean(DEPRECATED_SETTING_ROUTING_USE_TYPE, null);\n        MetaData metaData = loadMetaState();\n        for (IndexMetaData indexMetaData : metaData) {\n            if (indexMetaData.settings().get(IndexMetaData.SETTING_LEGACY_ROUTING_HASH_FUNCTION) == null\n                    && indexMetaData.getCreationVersion().before(Version.V_2_0_0)) {\n                // these settings need an upgrade\n                Settings indexSettings = ImmutableSettings.builder().put(indexMetaData.settings())\n                        .put(IndexMetaData.SETTING_LEGACY_ROUTING_HASH_FUNCTION, pre20HashFunction)\n                        .put(IndexMetaData.SETTING_LEGACY_ROUTING_USE_TYPE, pre20UseType == null ? false : pre20UseType)\n                        .build();\n                IndexMetaData newMetaData = IndexMetaData.builder(indexMetaData)\n                        .version(indexMetaData.version())\n                        .settings(indexSettings)\n                        .build();\n                metaStateService.writeIndex(\"upgrade\", newMetaData, null);\n            } else if (indexMetaData.getCreationVersion().onOrAfter(Version.V_2_0_0)) {\n                if (indexMetaData.getSettings().get(IndexMetaData.SETTING_LEGACY_ROUTING_HASH_FUNCTION) != null\n                        || indexMetaData.getSettings().get(IndexMetaData.SETTING_LEGACY_ROUTING_USE_TYPE) != null) {\n                    throw new ElasticsearchIllegalStateException(\"Indices created on or after 2.0 should NOT contain [\" + IndexMetaData.SETTING_LEGACY_ROUTING_HASH_FUNCTION\n                            + \"] + or [\" + IndexMetaData.SETTING_LEGACY_ROUTING_USE_TYPE + \"] in their index settings\");\n                }\n            }\n        }\n        if (hasCustomPre20HashFunction|| pre20UseType != null) {\n            logger.warn(\"Settings [{}] and [{}] are deprecated. Index settings from your old indices have been updated to record the fact that they \"\n                    + \"used some custom routing logic, you can now remove these settings from your `elasticsearch.yml` file\", DEPRECATED_SETTING_ROUTING_HASH_FUNCTION, DEPRECATED_SETTING_ROUTING_USE_TYPE);\n        }\n    }","commit_id":"13630d80284d775378d9e27def9a4b537e29f10c","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n    public void clusterChanged(ClusterChangedEvent event) {\n        final ClusterState state = event.state();\n        if (state.blocks().disableStatePersistence()) {\n            // reset the current metadata, we need to start fresh...\n            this.currentMetaData = null;\n            return;\n        }\n\n        MetaData newMetaData = state.metaData();\n        // we don't check if metaData changed, since we might be called several times and we need to check dangling...\n\n        boolean success = true;\n        // only applied to master node, writing the global and index level states\n        if (state.nodes().localNode().masterNode()) {\n            // check if the global state changed?\n            if (currentMetaData == null || !MetaData.isGlobalStateEquals(currentMetaData, newMetaData)) {\n                try {\n                    writeGlobalState(\"changed\", newMetaData);\n                } catch (Throwable e) {\n                    success = false;\n                }\n            }\n\n            // check and write changes in indices\n            for (IndexMetaData indexMetaData : newMetaData) {\n                String writeReason = null;\n                IndexMetaData currentIndexMetaData;\n                if (currentMetaData == null) {\n                    // a new event..., check from the state stored\n                    try {\n                        currentIndexMetaData = loadIndexState(indexMetaData.index());\n                    } catch (IOException ex) {\n                        throw new ElasticsearchException(\"failed to load index state\", ex);\n                    }\n                } else {\n                    currentIndexMetaData = currentMetaData.index(indexMetaData.index());\n                }\n                if (currentIndexMetaData == null) {\n                    writeReason = \"freshly created\";\n                } else if (currentIndexMetaData.version() != indexMetaData.version()) {\n                    writeReason = \"version changed from [\" + currentIndexMetaData.version() + \"] to [\" + indexMetaData.version() + \"]\";\n                }\n\n                // we update the writeReason only if we really need to write it\n                if (writeReason == null) {\n                    continue;\n                }\n\n                try {\n                    writeIndex(writeReason, indexMetaData, currentIndexMetaData);\n                } catch (Throwable e) {\n                    success = false;\n                }\n            }\n        }\n\n        // handle dangling indices, we handle those for all nodes that have a node file (data or master)\n        if (nodeEnv.hasNodeFile()) {\n            if (danglingTimeout.millis() >= 0) {\n                synchronized (danglingMutex) {\n                    for (String danglingIndex : danglingIndices.keySet()) {\n                        if (newMetaData.hasIndex(danglingIndex)) {\n                            logger.debug(\"[{}] no longer dangling (created), removing\", danglingIndex);\n                            DanglingIndex removed = danglingIndices.remove(danglingIndex);\n                            FutureUtils.cancel(removed.future);\n                        }\n                    }\n                    // delete indices that are no longer part of the metadata\n                    try {\n                        for (String indexName : nodeEnv.findAllIndices()) {\n                            // if we have the index on the metadata, don't delete it\n                            if (newMetaData.hasIndex(indexName)) {\n                                continue;\n                            }\n                            if (danglingIndices.containsKey(indexName)) {\n                                // already dangling, continue\n                                continue;\n                            }\n                            final IndexMetaData indexMetaData = loadIndexState(indexName);\n                            if (indexMetaData != null) {\n                                if(autoImportDangled.shouldImport()){\n                                    logger.info(\"[{}] dangling index, exists on local file system, but not in cluster metadata, auto import to cluster state [{}]\", indexName, autoImportDangled);\n                                    danglingIndices.put(indexName, new DanglingIndex(indexName, null));\n                                } else if (danglingTimeout.millis() == 0) {\n                                    logger.info(\"[{}] dangling index, exists on local file system, but not in cluster metadata, timeout set to 0, deleting now\", indexName);\n                                    indicesService.deleteIndexStore(\"dangling index with timeout set to 0\", indexMetaData, state);\n                                } else {\n                                    logger.info(\"[{}] dangling index, exists on local file system, but not in cluster metadata, scheduling to delete in [{}], auto import to cluster state [{}]\", indexName, danglingTimeout, autoImportDangled);\n                                    danglingIndices.put(indexName,\n                                            new DanglingIndex(indexName,\n                                                    threadPool.schedule(danglingTimeout,\n                                                            ThreadPool.Names.SAME,\n                                                            new RemoveDanglingIndex(indexMetaData))));\n                                }\n                            }\n                        }\n                    } catch (Throwable e) {\n                        logger.warn(\"failed to find dangling indices\", e);\n                    }\n                }\n            }\n            if (autoImportDangled.shouldImport() && !danglingIndices.isEmpty()) {\n                final List<IndexMetaData> dangled = Lists.newArrayList();\n                for (String indexName : danglingIndices.keySet()) {\n                    IndexMetaData indexMetaData;\n                    try {\n                        indexMetaData = loadIndexState(indexName);\n                    } catch (IOException ex) {\n                        throw new ElasticsearchException(\"failed to load index state\", ex);\n                    }\n                    if (indexMetaData == null) {\n                        logger.debug(\"failed to find state for dangling index [{}]\", indexName);\n                        continue;\n                    }\n                    // we might have someone copying over an index, renaming the directory, handle that\n                    if (!indexMetaData.index().equals(indexName)) {\n                        logger.info(\"dangled index directory name is [{}], state name is [{}], renaming to directory name\", indexName, indexMetaData.index());\n                        indexMetaData = IndexMetaData.builder(indexMetaData).index(indexName).build();\n                    }\n                    if (autoImportDangled == AutoImportDangledState.CLOSED) {\n                        indexMetaData = IndexMetaData.builder(indexMetaData).state(IndexMetaData.State.CLOSE).build();\n                    }\n                    if (indexMetaData != null) {\n                        dangled.add(indexMetaData);\n                    }\n                }\n                IndexMetaData[] dangledIndices = dangled.toArray(new IndexMetaData[dangled.size()]);\n                try {\n                    allocateDangledIndices.allocateDangled(dangledIndices, new LocalAllocateDangledIndices.Listener() {\n                        @Override\n                        public void onResponse(LocalAllocateDangledIndices.AllocateDangledResponse response) {\n                            logger.trace(\"allocated dangled\");\n                        }\n\n                        @Override\n                        public void onFailure(Throwable e) {\n                            logger.info(\"failed to send allocated dangled\", e);\n                        }\n                    });\n                } catch (Throwable e) {\n                    logger.warn(\"failed to send allocate dangled\", e);\n                }\n            }\n        }\n\n        if (success) {\n            currentMetaData = newMetaData;\n        }\n    }","id":50880,"modified_method":"@Override\n    public void clusterChanged(ClusterChangedEvent event) {\n        final ClusterState state = event.state();\n        if (state.blocks().disableStatePersistence()) {\n            // reset the current metadata, we need to start fresh...\n            this.currentMetaData = null;\n            return;\n        }\n\n        MetaData newMetaData = state.metaData();\n        // we don't check if metaData changed, since we might be called several times and we need to check dangling...\n\n        boolean success = true;\n        // only applied to master node, writing the global and index level states\n        if (state.nodes().localNode().masterNode()) {\n            // check if the global state changed?\n            if (currentMetaData == null || !MetaData.isGlobalStateEquals(currentMetaData, newMetaData)) {\n                try {\n                    metaStateService.writeGlobalState(\"changed\", newMetaData);\n                } catch (Throwable e) {\n                    success = false;\n                }\n            }\n\n            // check and write changes in indices\n            for (IndexMetaData indexMetaData : newMetaData) {\n                String writeReason = null;\n                IndexMetaData currentIndexMetaData;\n                if (currentMetaData == null) {\n                    // a new event..., check from the state stored\n                    try {\n                        currentIndexMetaData = metaStateService.loadIndexState(indexMetaData.index());\n                    } catch (IOException ex) {\n                        throw new ElasticsearchException(\"failed to load index state\", ex);\n                    }\n                } else {\n                    currentIndexMetaData = currentMetaData.index(indexMetaData.index());\n                }\n                if (currentIndexMetaData == null) {\n                    writeReason = \"freshly created\";\n                } else if (currentIndexMetaData.version() != indexMetaData.version()) {\n                    writeReason = \"version changed from [\" + currentIndexMetaData.version() + \"] to [\" + indexMetaData.version() + \"]\";\n                }\n\n                // we update the writeReason only if we really need to write it\n                if (writeReason == null) {\n                    continue;\n                }\n\n                try {\n                    metaStateService.writeIndex(writeReason, indexMetaData, currentIndexMetaData);\n                } catch (Throwable e) {\n                    success = false;\n                }\n            }\n        }\n\n        danglingIndicesState.processDanglingIndices(newMetaData);\n\n        if (success) {\n            currentMetaData = newMetaData;\n        }\n    }","commit_id":"13630d80284d775378d9e27def9a4b537e29f10c","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public MetaData loadMetaState() throws Exception {\n        return loadState();\n    }","id":50881,"modified_method":"public MetaData loadMetaState() throws Exception {\n        return metaStateService.loadFullState();\n    }","commit_id":"13630d80284d775378d9e27def9a4b537e29f10c","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Inject\n    public GatewayMetaState(Settings settings, ThreadPool threadPool, NodeEnvironment nodeEnv,\n                            TransportNodesListGatewayMetaState nodesListGatewayMetaState, LocalAllocateDangledIndices allocateDangledIndices,\n                            IndicesService indicesService, ClusterService clusterService) throws Exception {\n        super(settings);\n        this.nodeEnv = nodeEnv;\n        this.threadPool = threadPool;\n        this.format = XContentType.fromRestContentType(settings.get(\"format\", \"smile\"));\n        this.allocateDangledIndices = allocateDangledIndices;\n        nodesListGatewayMetaState.init(this);\n\n        if (this.format == XContentType.SMILE) {\n            Map<String, String> params = Maps.newHashMap();\n            params.put(\"binary\", \"true\");\n            formatParams = new ToXContent.MapParams(params);\n            Map<String, String> gatewayModeParams = Maps.newHashMap();\n            gatewayModeParams.put(\"binary\", \"true\");\n            gatewayModeParams.put(MetaData.CONTEXT_MODE_PARAM, MetaData.CONTEXT_MODE_GATEWAY);\n            gatewayModeFormatParams = new ToXContent.MapParams(gatewayModeParams);\n        } else {\n            formatParams = ToXContent.EMPTY_PARAMS;\n            Map<String, String> gatewayModeParams = Maps.newHashMap();\n            gatewayModeParams.put(MetaData.CONTEXT_MODE_PARAM, MetaData.CONTEXT_MODE_GATEWAY);\n            gatewayModeFormatParams = new ToXContent.MapParams(gatewayModeParams);\n        }\n\n        this.autoImportDangled = AutoImportDangledState.fromString(settings.get(GATEWAY_AUTO_IMPORT_DANGLED, settings.get(GATEWAY_LOCAL_AUTO_IMPORT_DANGLED, AutoImportDangledState.YES.toString())));\n        this.danglingTimeout = settings.getAsTime(GATEWAY_DANGLING_TIMEOUT, settings.getAsTime(GATEWAY_LOCAL_DANGLING_TIMEOUT, TimeValue.timeValueHours(2)));\n        this.deleteTimeout = settings.getAsTime(GATEWAY_DELETE_TIMEOUT, TimeValue.timeValueSeconds(30));\n\n        logger.debug(\"using {} [{}],  {} [{}], with {} [{}]\",\n                GATEWAY_AUTO_IMPORT_DANGLED, this.autoImportDangled,\n                GATEWAY_DELETE_TIMEOUT, this.deleteTimeout,\n                GATEWAY_DANGLING_TIMEOUT, this.danglingTimeout);\n        if (DiscoveryNode.masterNode(settings) || DiscoveryNode.dataNode(settings)) {\n            nodeEnv.ensureAtomicMoveSupported();\n        }\n        if (DiscoveryNode.masterNode(settings)) {\n            try {\n                ensureNoPre019State();\n                pre20Upgrade();\n                long start = System.currentTimeMillis();\n                loadState();\n                logger.debug(\"took {} to load state\", TimeValue.timeValueMillis(System.currentTimeMillis() - start));\n            } catch (Exception e) {\n                logger.error(\"failed to read local state, exiting...\", e);\n                throw e;\n            }\n        }\n        this.indicesService = indicesService;\n        this.clusterService = clusterService;\n    }","id":50882,"modified_method":"@Inject\n    public GatewayMetaState(Settings settings, NodeEnvironment nodeEnv, MetaStateService metaStateService,\n                            DanglingIndicesState danglingIndicesState, TransportNodesListGatewayMetaState nodesListGatewayMetaState) throws Exception {\n        super(settings);\n        this.nodeEnv = nodeEnv;\n        this.metaStateService = metaStateService;\n        this.danglingIndicesState = danglingIndicesState;\n        nodesListGatewayMetaState.init(this);\n\n\n        if (DiscoveryNode.masterNode(settings) || DiscoveryNode.dataNode(settings)) {\n            nodeEnv.ensureAtomicMoveSupported();\n        }\n        if (DiscoveryNode.masterNode(settings)) {\n            try {\n                ensureNoPre019State();\n                pre20Upgrade();\n                long start = System.currentTimeMillis();\n                metaStateService.loadFullState();\n                logger.debug(\"took {} to load state\", TimeValue.timeValueMillis(System.currentTimeMillis() - start));\n            } catch (Exception e) {\n                logger.error(\"failed to read local state, exiting...\", e);\n                throw e;\n            }\n        }\n    }","commit_id":"13630d80284d775378d9e27def9a4b537e29f10c","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n    protected void configure() {\n        bind(GatewayService.class).asEagerSingleton();\n        bind(Gateway.class).asEagerSingleton();\n        bind(GatewayShardsState.class).asEagerSingleton();\n        bind(TransportNodesListGatewayMetaState.class).asEagerSingleton();\n        bind(GatewayMetaState.class).asEagerSingleton();\n        bind(TransportNodesListGatewayStartedShards.class).asEagerSingleton();\n        bind(LocalAllocateDangledIndices.class).asEagerSingleton();\n    }","id":50883,"modified_method":"@Override\n    protected void configure() {\n        bind(MetaStateService.class).asEagerSingleton();\n        bind(DanglingIndicesState.class).asEagerSingleton();\n        bind(GatewayService.class).asEagerSingleton();\n        bind(Gateway.class).asEagerSingleton();\n        bind(GatewayShardsState.class).asEagerSingleton();\n        bind(TransportNodesListGatewayMetaState.class).asEagerSingleton();\n        bind(GatewayMetaState.class).asEagerSingleton();\n        bind(TransportNodesListGatewayStartedShards.class).asEagerSingleton();\n        bind(LocalAllocateDangledIndices.class).asEagerSingleton();\n    }","commit_id":"13630d80284d775378d9e27def9a4b537e29f10c","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public void allocateDangled(IndexMetaData[] indices, final Listener listener) {\n        ClusterState clusterState = clusterService.state();\n        DiscoveryNode masterNode = clusterState.nodes().masterNode();\n        if (masterNode == null) {\n            listener.onFailure(new MasterNotDiscoveredException(\"no master to send allocate dangled request\"));\n            return;\n        }\n        AllocateDangledRequest request = new AllocateDangledRequest(clusterService.localNode(), indices);\n        transportService.sendRequest(masterNode, ACTION_NAME, request, new TransportResponseHandler<AllocateDangledResponse>() {\n            @Override\n            public AllocateDangledResponse newInstance() {\n                return new AllocateDangledResponse();\n            }\n\n            @Override\n            public void handleResponse(AllocateDangledResponse response) {\n                listener.onResponse(response);\n            }\n\n            @Override\n            public void handleException(TransportException exp) {\n                listener.onFailure(exp);\n            }\n\n            @Override\n            public String executor() {\n                return ThreadPool.Names.SAME;\n            }\n        });\n    }","id":50884,"modified_method":"public void allocateDangled(Collection<IndexMetaData> indices, final Listener listener) {\n        ClusterState clusterState = clusterService.state();\n        DiscoveryNode masterNode = clusterState.nodes().masterNode();\n        if (masterNode == null) {\n            listener.onFailure(new MasterNotDiscoveredException(\"no master to send allocate dangled request\"));\n            return;\n        }\n        AllocateDangledRequest request = new AllocateDangledRequest(clusterService.localNode(), indices.toArray(new IndexMetaData[indices.size()]));\n        transportService.sendRequest(masterNode, ACTION_NAME, request, new TransportResponseHandler<AllocateDangledResponse>() {\n            @Override\n            public AllocateDangledResponse newInstance() {\n                return new AllocateDangledResponse();\n            }\n\n            @Override\n            public void handleResponse(AllocateDangledResponse response) {\n                listener.onResponse(response);\n            }\n\n            @Override\n            public void handleException(TransportException exp) {\n                listener.onFailure(exp);\n            }\n\n            @Override\n            public String executor() {\n                return ThreadPool.Names.SAME;\n            }\n        });\n    }","commit_id":"13630d80284d775378d9e27def9a4b537e29f10c","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public void testLatestVersionDoesNotUseLegacy() throws IOException {\n        final ToXContent.Params params = ToXContent.EMPTY_PARAMS;\n        MetaDataStateFormat<MetaData> format = GatewayMetaState.globalStateFormat(randomFrom(XContentType.values()), params, randomBoolean());\n        final Path[] dirs = new Path[2];\n        dirs[0] = newTempDirPath(LifecycleScope.TEST);\n        dirs[1] = newTempDirPath(LifecycleScope.TEST);\n        for (Path dir : dirs) {\n            Files.createDirectories(dir.resolve(MetaDataStateFormat.STATE_DIR_NAME));\n        }\n        final Path dir1 = randomFrom(dirs);\n        final int v1 = randomInt(10);\n        // write a first state file in the new format\n        format.write(randomMeta(), GatewayMetaState.GLOBAL_STATE_FILE_PREFIX, v1, dir1);\n\n        // write older state files in the old format but with a newer version\n        final int numLegacyFiles = randomIntBetween(1, 5);\n        for (int i = 0; i < numLegacyFiles; ++i) {\n            final Path dir2 = randomFrom(dirs);\n            final int v2 = v1 + 1 + randomInt(10);\n            try (XContentBuilder xcontentBuilder = XContentFactory.contentBuilder(format.format(), Files.newOutputStream(dir2.resolve(MetaDataStateFormat.STATE_DIR_NAME).resolve(GatewayMetaState.GLOBAL_STATE_FILE_PREFIX + v2)))) {\n                xcontentBuilder.startObject();\n                MetaData.Builder.toXContent(randomMeta(), xcontentBuilder, params);\n                xcontentBuilder.endObject();\n            }\n        }\n\n        try {\n            MetaDataStateFormat.loadLatestState(logger, format, GatewayMetaState.GLOBAL_STATE_FILE_PATTERN, \"foobar\", dirs);\n            fail(\"latest version can not be read\");\n        } catch (ElasticsearchIllegalStateException ex) {\n            assertThat(ex.getMessage(), startsWith(\"Could not find a state file to recover from among \"));\n        }\n    }","id":50885,"modified_method":"public void testLatestVersionDoesNotUseLegacy() throws IOException {\n        final ToXContent.Params params = ToXContent.EMPTY_PARAMS;\n        MetaDataStateFormat<MetaData> format = MetaStateService.globalStateFormat(randomFrom(XContentType.values()), params, randomBoolean());\n        final Path[] dirs = new Path[2];\n        dirs[0] = newTempDirPath(LifecycleScope.TEST);\n        dirs[1] = newTempDirPath(LifecycleScope.TEST);\n        for (Path dir : dirs) {\n            Files.createDirectories(dir.resolve(MetaDataStateFormat.STATE_DIR_NAME));\n        }\n        final Path dir1 = randomFrom(dirs);\n        final int v1 = randomInt(10);\n        // write a first state file in the new format\n        format.write(randomMeta(), MetaStateService.GLOBAL_STATE_FILE_PREFIX, v1, dir1);\n\n        // write older state files in the old format but with a newer version\n        final int numLegacyFiles = randomIntBetween(1, 5);\n        for (int i = 0; i < numLegacyFiles; ++i) {\n            final Path dir2 = randomFrom(dirs);\n            final int v2 = v1 + 1 + randomInt(10);\n            try (XContentBuilder xcontentBuilder = XContentFactory.contentBuilder(format.format(), Files.newOutputStream(dir2.resolve(MetaDataStateFormat.STATE_DIR_NAME).resolve(MetaStateService.GLOBAL_STATE_FILE_PREFIX + v2)))) {\n                xcontentBuilder.startObject();\n                MetaData.Builder.toXContent(randomMeta(), xcontentBuilder, params);\n                xcontentBuilder.endObject();\n            }\n        }\n\n        try {\n            MetaDataStateFormat.loadLatestState(logger, format, MetaStateService.GLOBAL_STATE_FILE_PATTERN, \"foobar\", dirs);\n            fail(\"latest version can not be read\");\n        } catch (ElasticsearchIllegalStateException ex) {\n            assertThat(ex.getMessage(), startsWith(\"Could not find a state file to recover from among \"));\n        }\n    }","commit_id":"13630d80284d775378d9e27def9a4b537e29f10c","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public void testPrefersNewerFormat() throws IOException {\n        final ToXContent.Params params = ToXContent.EMPTY_PARAMS;\n        MetaDataStateFormat<MetaData> format = GatewayMetaState.globalStateFormat(randomFrom(XContentType.values()), params, randomBoolean());\n        final Path[] dirs = new Path[2];\n        dirs[0] = newTempDirPath(LifecycleScope.TEST);\n        dirs[1] = newTempDirPath(LifecycleScope.TEST);\n        for (Path dir : dirs) {\n            Files.createDirectories(dir.resolve(MetaDataStateFormat.STATE_DIR_NAME));\n        }\n        final Path dir1 = randomFrom(dirs);\n        final long v = randomInt(10);\n\n        MetaData meta = randomMeta();\n        String uuid = meta.uuid();\n\n        // write a first state file in the old format\n        final Path dir2 = randomFrom(dirs);\n        MetaData meta2 = randomMeta();\n        assertFalse(meta2.uuid().equals(uuid));\n        try (XContentBuilder xcontentBuilder = XContentFactory.contentBuilder(format.format(), Files.newOutputStream(dir2.resolve(MetaDataStateFormat.STATE_DIR_NAME).resolve(GatewayMetaState.GLOBAL_STATE_FILE_PREFIX + v)))) {\n            xcontentBuilder.startObject();\n            MetaData.Builder.toXContent(randomMeta(), xcontentBuilder, params);\n            xcontentBuilder.endObject();\n        }\n\n        // write a second state file in the new format but with the same version\n        format.write(meta, GatewayMetaState.GLOBAL_STATE_FILE_PREFIX, v, dir1);\n\n        MetaData state = MetaDataStateFormat.loadLatestState(logger, format, GatewayMetaState.GLOBAL_STATE_FILE_PATTERN, \"foobar\", dirs);\n        assertThat(state.uuid(), equalTo(uuid));\n    }","id":50886,"modified_method":"public void testPrefersNewerFormat() throws IOException {\n        final ToXContent.Params params = ToXContent.EMPTY_PARAMS;\n        MetaDataStateFormat<MetaData> format = MetaStateService.globalStateFormat(randomFrom(XContentType.values()), params, randomBoolean());\n        final Path[] dirs = new Path[2];\n        dirs[0] = newTempDirPath(LifecycleScope.TEST);\n        dirs[1] = newTempDirPath(LifecycleScope.TEST);\n        for (Path dir : dirs) {\n            Files.createDirectories(dir.resolve(MetaDataStateFormat.STATE_DIR_NAME));\n        }\n        final Path dir1 = randomFrom(dirs);\n        final long v = randomInt(10);\n\n        MetaData meta = randomMeta();\n        String uuid = meta.uuid();\n\n        // write a first state file in the old format\n        final Path dir2 = randomFrom(dirs);\n        MetaData meta2 = randomMeta();\n        assertFalse(meta2.uuid().equals(uuid));\n        try (XContentBuilder xcontentBuilder = XContentFactory.contentBuilder(format.format(), Files.newOutputStream(dir2.resolve(MetaDataStateFormat.STATE_DIR_NAME).resolve(MetaStateService.GLOBAL_STATE_FILE_PREFIX + v)))) {\n            xcontentBuilder.startObject();\n            MetaData.Builder.toXContent(randomMeta(), xcontentBuilder, params);\n            xcontentBuilder.endObject();\n        }\n\n        // write a second state file in the new format but with the same version\n        format.write(meta, MetaStateService.GLOBAL_STATE_FILE_PREFIX, v, dir1);\n\n        MetaData state = MetaDataStateFormat.loadLatestState(logger, format, MetaStateService.GLOBAL_STATE_FILE_PATTERN, \"foobar\", dirs);\n        assertThat(state.uuid(), equalTo(uuid));\n    }","commit_id":"13630d80284d775378d9e27def9a4b537e29f10c","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    public void testLoadState() throws IOException {\n        final ToXContent.Params params = ToXContent.EMPTY_PARAMS;\n        final Path[] dirs = new Path[randomIntBetween(1, 5)];\n        int numStates = randomIntBetween(1, 5);\n        int numLegacy = randomIntBetween(0, numStates);\n        List<MetaData> meta = new ArrayList<>();\n        for (int i = 0; i < numStates; i++) {\n            meta.add(randomMeta());\n        }\n        Set<Path> corruptedFiles = new HashSet<>();\n        MetaDataStateFormat<MetaData> format = GatewayMetaState.globalStateFormat(randomFrom(XContentType.values()), params, randomBoolean());\n        for (int i = 0; i < dirs.length; i++) {\n            dirs[i] = newTempDirPath(LifecycleScope.TEST);\n            Files.createDirectories(dirs[i].resolve(MetaDataStateFormat.STATE_DIR_NAME));\n            for (int j = 0; j < numLegacy; j++) {\n                XContentType type = format.format();\n                if (randomBoolean() && (j < numStates - 1 || dirs.length > 0 && i != 0)) {\n                    Path file = dirs[i].resolve(MetaDataStateFormat.STATE_DIR_NAME).resolve(\"global-\"+j);\n                    Files.createFile(file); // randomly create 0-byte files -- there is extra logic to skip them\n                } else {\n                    try (XContentBuilder xcontentBuilder = XContentFactory.contentBuilder(type, Files.newOutputStream(dirs[i].resolve(MetaDataStateFormat.STATE_DIR_NAME).resolve(\"global-\" + j)))) {\n                        xcontentBuilder.startObject();\n                        MetaData.Builder.toXContent(meta.get(j), xcontentBuilder, params);\n                        xcontentBuilder.endObject();\n                    }\n                }\n            }\n            for (int j = numLegacy; j < numStates; j++) {\n                format.write(meta.get(j), GatewayMetaState.GLOBAL_STATE_FILE_PREFIX, j, dirs[i]);\n                if (randomBoolean() && (j < numStates - 1 || dirs.length > 0 && i != 0)) {  // corrupt a file that we do not necessarily need here....\n                    Path file = dirs[i].resolve(MetaDataStateFormat.STATE_DIR_NAME).resolve(\"global-\" + j + \".st\");\n                    corruptedFiles.add(file);\n                    MetaDataStateFormatTest.corruptFile(file, logger);\n                }\n            }\n\n        }\n        List<Path> dirList = Arrays.asList(dirs);\n        Collections.shuffle(dirList, getRandom());\n        MetaData loadedMetaData = MetaDataStateFormat.loadLatestState(logger, format, GatewayMetaState.GLOBAL_STATE_FILE_PATTERN, \"foobar\", dirList.toArray(new Path[0]));\n        MetaData latestMetaData = meta.get(numStates-1);\n        assertThat(loadedMetaData.uuid(), not(equalTo(\"_na_\")));\n        assertThat(loadedMetaData.uuid(), equalTo(latestMetaData.uuid()));\n        ImmutableOpenMap<String,IndexMetaData> indices = loadedMetaData.indices();\n        assertThat(indices.size(), equalTo(latestMetaData.indices().size()));\n        for (IndexMetaData original : latestMetaData) {\n            IndexMetaData deserialized = indices.get(original.getIndex());\n            assertThat(deserialized, notNullValue());\n            assertThat(deserialized.version(), equalTo(original.version()));\n            assertThat(deserialized.numberOfReplicas(), equalTo(original.numberOfReplicas()));\n            assertThat(deserialized.numberOfShards(), equalTo(original.numberOfShards()));\n        }\n\n        // now corrupt all the latest ones and make sure we fail to load the state\n        if (numStates > numLegacy) {\n            for (int i = 0; i < dirs.length; i++) {\n                Path file = dirs[i].resolve(MetaDataStateFormat.STATE_DIR_NAME).resolve(\"global-\" + (numStates-1) + \".st\");\n                if (corruptedFiles.contains(file)) {\n                    continue;\n                }\n                MetaDataStateFormatTest.corruptFile(file, logger);\n            }\n            try {\n                MetaDataStateFormat.loadLatestState(logger, format, GatewayMetaState.GLOBAL_STATE_FILE_PATTERN, \"foobar\", dirList.toArray(new Path[0]));\n                fail(\"latest version can not be read\");\n            } catch (ElasticsearchException ex) {\n                assertThat(ex.getCause(), instanceOf(CorruptStateException.class));\n            }\n        }\n\n    }","id":50887,"modified_method":"@Test\n    public void testLoadState() throws IOException {\n        final ToXContent.Params params = ToXContent.EMPTY_PARAMS;\n        final Path[] dirs = new Path[randomIntBetween(1, 5)];\n        int numStates = randomIntBetween(1, 5);\n        int numLegacy = randomIntBetween(0, numStates);\n        List<MetaData> meta = new ArrayList<>();\n        for (int i = 0; i < numStates; i++) {\n            meta.add(randomMeta());\n        }\n        Set<Path> corruptedFiles = new HashSet<>();\n        MetaDataStateFormat<MetaData> format = MetaStateService.globalStateFormat(randomFrom(XContentType.values()), params, randomBoolean());\n        for (int i = 0; i < dirs.length; i++) {\n            dirs[i] = newTempDirPath(LifecycleScope.TEST);\n            Files.createDirectories(dirs[i].resolve(MetaDataStateFormat.STATE_DIR_NAME));\n            for (int j = 0; j < numLegacy; j++) {\n                XContentType type = format.format();\n                if (randomBoolean() && (j < numStates - 1 || dirs.length > 0 && i != 0)) {\n                    Path file = dirs[i].resolve(MetaDataStateFormat.STATE_DIR_NAME).resolve(\"global-\"+j);\n                    Files.createFile(file); // randomly create 0-byte files -- there is extra logic to skip them\n                } else {\n                    try (XContentBuilder xcontentBuilder = XContentFactory.contentBuilder(type, Files.newOutputStream(dirs[i].resolve(MetaDataStateFormat.STATE_DIR_NAME).resolve(\"global-\" + j)))) {\n                        xcontentBuilder.startObject();\n                        MetaData.Builder.toXContent(meta.get(j), xcontentBuilder, params);\n                        xcontentBuilder.endObject();\n                    }\n                }\n            }\n            for (int j = numLegacy; j < numStates; j++) {\n                format.write(meta.get(j), MetaStateService.GLOBAL_STATE_FILE_PREFIX, j, dirs[i]);\n                if (randomBoolean() && (j < numStates - 1 || dirs.length > 0 && i != 0)) {  // corrupt a file that we do not necessarily need here....\n                    Path file = dirs[i].resolve(MetaDataStateFormat.STATE_DIR_NAME).resolve(\"global-\" + j + \".st\");\n                    corruptedFiles.add(file);\n                    MetaDataStateFormatTest.corruptFile(file, logger);\n                }\n            }\n\n        }\n        List<Path> dirList = Arrays.asList(dirs);\n        Collections.shuffle(dirList, getRandom());\n        MetaData loadedMetaData = MetaDataStateFormat.loadLatestState(logger, format, MetaStateService.GLOBAL_STATE_FILE_PATTERN, \"foobar\", dirList.toArray(new Path[0]));\n        MetaData latestMetaData = meta.get(numStates-1);\n        assertThat(loadedMetaData.uuid(), not(equalTo(\"_na_\")));\n        assertThat(loadedMetaData.uuid(), equalTo(latestMetaData.uuid()));\n        ImmutableOpenMap<String,IndexMetaData> indices = loadedMetaData.indices();\n        assertThat(indices.size(), equalTo(latestMetaData.indices().size()));\n        for (IndexMetaData original : latestMetaData) {\n            IndexMetaData deserialized = indices.get(original.getIndex());\n            assertThat(deserialized, notNullValue());\n            assertThat(deserialized.version(), equalTo(original.version()));\n            assertThat(deserialized.numberOfReplicas(), equalTo(original.numberOfReplicas()));\n            assertThat(deserialized.numberOfShards(), equalTo(original.numberOfShards()));\n        }\n\n        // now corrupt all the latest ones and make sure we fail to load the state\n        if (numStates > numLegacy) {\n            for (int i = 0; i < dirs.length; i++) {\n                Path file = dirs[i].resolve(MetaDataStateFormat.STATE_DIR_NAME).resolve(\"global-\" + (numStates-1) + \".st\");\n                if (corruptedFiles.contains(file)) {\n                    continue;\n                }\n                MetaDataStateFormatTest.corruptFile(file, logger);\n            }\n            try {\n                MetaDataStateFormat.loadLatestState(logger, format, MetaStateService.GLOBAL_STATE_FILE_PATTERN, \"foobar\", dirList.toArray(new Path[0]));\n                fail(\"latest version can not be read\");\n            } catch (ElasticsearchException ex) {\n                assertThat(ex.getCause(), instanceOf(CorruptStateException.class));\n            }\n        }\n\n    }","commit_id":"13630d80284d775378d9e27def9a4b537e29f10c","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Configuration\n    public Option[] config() {\n        return new Option[]{\n                new DefaultCompositeOption(fabricDistributionConfiguration()),\n                mavenBundle(\"io.fabric8\", \"fabric-utils\", MavenUtils.getArtifactVersion(\"io.fabric8\", \"fabric-utils\"))\n        };\n    }","id":50888,"modified_method":"@Configuration\n    public Option[] config() {\n        return new Option[]{\n                new DefaultCompositeOption(fabricDistributionConfiguration()),\n                CoreOptions.wrappedBundle(mavenBundle(\"io.fabric8\", \"fabric-utils\"))\n        };\n    }","commit_id":"d2f279bb9e5b50c63f306d1c038a618aae093760","url":"https://github.com/fabric8io/fabric8"},{"original_method":"/**\n     * Create an {@link Option} for using a Fabric distribution.\n     */\n    protected Option[] fabricDistributionConfiguration() {\n        return new Option[] {\n                KarafDistributionOption.karafDistributionConfiguration()\n                        .frameworkUrl(CoreOptions.maven().groupId(GROUP_ID).artifactId(ARTIFACT_ID).versionAsInProject().type(\"zip\")).karafVersion(getKarafVersion())\n                        .name(\"Fabric Karaf Distro\").unpackDirectory(new File(\"target/paxexam/unpack/\")), KarafDistributionOption.useOwnExamBundlesStartLevel(50),\n                envAsSystemProperty(ContainerBuilder.CONTAINER_TYPE_PROPERTY, \"child\"), envAsSystemProperty(ContainerBuilder.CONTAINER_NUMBER_PROPERTY, \"1\"),\n                envAsSystemProperty(SshContainerBuilder.SSH_HOSTS_PROPERTY), envAsSystemProperty(SshContainerBuilder.SSH_USERS_PROPERTY),\n                envAsSystemProperty(SshContainerBuilder.SSH_PASSWORD_PROPERTY), envAsSystemProperty(SshContainerBuilder.SSH_RESOLVER_PROPERTY),\n\n                KarafDistributionOption.editConfigurationFilePut(\"etc/org.apache.felix.fileinstall-deploy.cfg\", \"felix.fileinstall.active.level\", \"45\"),\n                KarafDistributionOption.editConfigurationFilePut(\"etc/org.apache.felix.fileinstall-deploy.cfg\", \"felix.fileinstall.noInitialDelay\", \"true\"),\n                KarafDistributionOption.editConfigurationFilePut(\"etc/org.apache.felix.fileinstall-deploy.cfg\", \"felix.fileinstall.poll\", \"250\"),\n                KarafDistributionOption.editConfigurationFilePut(\"etc/config.properties\", \"karaf.startlevel.bundle\", \"50\"),\n                KarafDistributionOption.editConfigurationFilePut(\"etc/config.properties\", \"karaf.startup.message\", \"Loading Fabric from: ${karaf.home}\"),\n                KarafDistributionOption.editConfigurationFilePut(\"etc/users.properties\", \"admin\", \"admin,admin\"),\n                CoreOptions.mavenBundle(\"io.fabric8.itests\", \"fabric-itests-common\").versionAsInProject(),\n                CoreOptions.mavenBundle(\"org.fusesource.tooling.testing\", \"pax-exam-karaf\").versionAsInProject(), new DoNotModifyLogOption(),\n                KarafDistributionOption.keepRuntimeFolder() };\n    }","id":50889,"modified_method":"/**\n     * Create an {@link Option} for using a Fabric distribution.\n     */\n    protected Option[] fabricDistributionConfiguration() {\n        return new Option[] {\n                KarafDistributionOption.karafDistributionConfiguration()\n                        .frameworkUrl(CoreOptions.maven().groupId(GROUP_ID).artifactId(ARTIFACT_ID).versionAsInProject().type(\"zip\")).karafVersion(getKarafVersion()).useDeployFolder(false)\n                        .name(\"Fabric Karaf Distro\").unpackDirectory(new File(\"target/paxexam/unpack/\")), KarafDistributionOption.useOwnExamBundlesStartLevel(50),\n                envAsSystemProperty(ContainerBuilder.CONTAINER_TYPE_PROPERTY, \"child\"), envAsSystemProperty(ContainerBuilder.CONTAINER_NUMBER_PROPERTY, \"1\"),\n                envAsSystemProperty(SshContainerBuilder.SSH_HOSTS_PROPERTY), envAsSystemProperty(SshContainerBuilder.SSH_USERS_PROPERTY),\n                envAsSystemProperty(SshContainerBuilder.SSH_PASSWORD_PROPERTY), envAsSystemProperty(SshContainerBuilder.SSH_RESOLVER_PROPERTY),\n\n                KarafDistributionOption.editConfigurationFilePut(\"etc/org.apache.felix.fileinstall-deploy.cfg\", \"felix.fileinstall.active.level\", \"45\"),\n                KarafDistributionOption.editConfigurationFilePut(\"etc/org.apache.felix.fileinstall-deploy.cfg\", \"felix.fileinstall.noInitialDelay\", \"true\"),\n                KarafDistributionOption.editConfigurationFilePut(\"etc/org.apache.felix.fileinstall-deploy.cfg\", \"felix.fileinstall.poll\", \"250\"),\n                KarafDistributionOption.editConfigurationFilePut(\"etc/config.properties\", \"karaf.startlevel.bundle\", \"50\"),\n                KarafDistributionOption.editConfigurationFilePut(\"etc/config.properties\", \"karaf.startup.message\", \"Loading Fabric from: ${karaf.home}\"),\n                KarafDistributionOption.editConfigurationFilePut(\"etc/users.properties\", \"admin\", \"admin,admin\"),\n                CoreOptions.mavenBundle(\"io.fabric8.itests\", \"fabric-itests-common\").versionAsInProject(),\n                CoreOptions.mavenBundle(\"org.fusesource.tooling.testing\", \"pax-exam-karaf\").versionAsInProject(), new DoNotModifyLogOption(),\n                KarafDistributionOption.keepRuntimeFolder(),\n\n        };\n    }","commit_id":"d2f279bb9e5b50c63f306d1c038a618aae093760","url":"https://github.com/fabric8io/fabric8"},{"original_method":"@Configuration\n    public Option[] config() {\n        return new Option[]{\n                new DefaultCompositeOption(mqDistributionConfiguration()), keepRuntimeFolder(),\n                mavenBundle(\"commons-httpclient\", \"commons-httpclient\").versionAsInProject().type(\"jar\"),\n                logLevel(LogLevelOption.LogLevel.INFO)\n        };\n    }","id":50890,"modified_method":"@Configuration\n    public Option[] config() {\n        return new Option[]{\n                new DefaultCompositeOption(mqDistributionConfiguration()), keepRuntimeFolder(),\n                CoreOptions.wrappedBundle(mavenBundle(\"commons-httpclient\", \"commons-httpclient\").versionAsInProject().type(\"jar\")),\n                logLevel(LogLevelOption.LogLevel.INFO)\n        };\n    }","commit_id":"d2f279bb9e5b50c63f306d1c038a618aae093760","url":"https://github.com/fabric8io/fabric8"},{"original_method":"protected Option[] mqDistributionConfiguration() {\n        return new Option[]{\n                karafDistributionConfiguration().frameworkUrl(\n                        maven().groupId(MQ_GROUP_ID).artifactId(MQ_ARTIFACT_ID).versionAsInProject().type(\"zip\"))\n                        .karafVersion(getKarafVersion()).name(\"JBoss MQ Distro\").unpackDirectory(new File(\"target/paxexam/unpack/\")),\n                useOwnExamBundlesStartLevel(50),\n                envAsSystemProperty(ContainerBuilder.CONTAINER_TYPE_PROPERTY, \"child\"),\n                envAsSystemProperty(ContainerBuilder.CONTAINER_NUMBER_PROPERTY, \"1\"),\n                envAsSystemProperty(SshContainerBuilder.SSH_HOSTS_PROPERTY),\n                envAsSystemProperty(SshContainerBuilder.SSH_USERS_PROPERTY),\n                envAsSystemProperty(SshContainerBuilder.SSH_PASSWORD_PROPERTY),\n                envAsSystemProperty(SshContainerBuilder.SSH_RESOLVER_PROPERTY),\n\n                editConfigurationFilePut(\"etc/config.properties\", \"karaf.startlevel.bundle\", \"50\"),\n                editConfigurationFilePut(\"etc/users.properties\", \"admin\", \"admin,admin\"),\n                editConfigurationFilePut(\"etc/system.properties\", \"activemq.jmx.user\", \"admin\"),\n                editConfigurationFilePut(\"etc/system.properties\", \"activemq.jmx.password\", \"admin\"),\n                mavenBundle(\"io.fabric8.itests\", \"fabric-itests-common\", MavenUtils.getArtifactVersion(\"io.fabric8.itests\", \"fabric-itests-common\")),\n                mavenBundle(\"org.fusesource.tooling.testing\", \"pax-exam-karaf\", MavenUtils.getArtifactVersion(\"org.fusesource.tooling.testing\", \"pax-exam-karaf\")),\n                new DoNotModifyLogOption(),\n                keepRuntimeFolder()\n        };\n    }","id":50891,"modified_method":"protected Option[] mqDistributionConfiguration() {\n        return new Option[]{\n                karafDistributionConfiguration().frameworkUrl(\n                        maven().groupId(MQ_GROUP_ID).artifactId(MQ_ARTIFACT_ID).versionAsInProject().type(\"zip\"))\n                        .karafVersion(getKarafVersion()).name(\"JBoss MQ Distro\").unpackDirectory(new File(\"target/paxexam/unpack/\")).useDeployFolder(false),\n                useOwnExamBundlesStartLevel(50),\n                envAsSystemProperty(ContainerBuilder.CONTAINER_TYPE_PROPERTY, \"child\"),\n                envAsSystemProperty(ContainerBuilder.CONTAINER_NUMBER_PROPERTY, \"1\"),\n                envAsSystemProperty(SshContainerBuilder.SSH_HOSTS_PROPERTY),\n                envAsSystemProperty(SshContainerBuilder.SSH_USERS_PROPERTY),\n                envAsSystemProperty(SshContainerBuilder.SSH_PASSWORD_PROPERTY),\n                envAsSystemProperty(SshContainerBuilder.SSH_RESOLVER_PROPERTY),\n\n                editConfigurationFilePut(\"etc/config.properties\", \"karaf.startlevel.bundle\", \"50\"),\n                editConfigurationFilePut(\"etc/users.properties\", \"admin\", \"admin,admin\"),\n                editConfigurationFilePut(\"etc/system.properties\", \"activemq.jmx.user\", \"admin\"),\n                editConfigurationFilePut(\"etc/system.properties\", \"activemq.jmx.password\", \"admin\"),\n                mavenBundle(\"io.fabric8.itests\", \"fabric-itests-common\", MavenUtils.getArtifactVersion(\"io.fabric8.itests\", \"fabric-itests-common\")),\n                mavenBundle(\"org.fusesource.tooling.testing\", \"pax-exam-karaf\", MavenUtils.getArtifactVersion(\"org.fusesource.tooling.testing\", \"pax-exam-karaf\")),\n                new DoNotModifyLogOption(),\n                keepRuntimeFolder()\n        };\n    }","commit_id":"d2f279bb9e5b50c63f306d1c038a618aae093760","url":"https://github.com/fabric8io/fabric8"},{"original_method":"@Configuration\n    public Option[] config() {\n        return new Option[]{\n                new DefaultCompositeOption(fabricDistributionConfiguration()),\n                mavenBundle(\"io.fabric8\", \"fabric-utils\")\n                //debugConfiguration(\"5005\",true)\n        };\n    }","id":50892,"modified_method":"@Configuration\n    public Option[] config() {\n        return new Option[]{\n                new DefaultCompositeOption(fabricDistributionConfiguration()),\n                CoreOptions.wrappedBundle(mavenBundle(\"io.fabric8\", \"fabric-utils\"))\n                //debugConfiguration(\"5005\",true)\n        };\n    }","commit_id":"d2f279bb9e5b50c63f306d1c038a618aae093760","url":"https://github.com/fabric8io/fabric8"},{"original_method":"@Configuration\n    public Option[] configuration() {\n        return new Option[]{\n            karafDistributionConfiguration().frameworkUrl(maven().groupId(karafGroupId()).artifactId(karafArtifactId()).version(karafVersion()).type(\"tar.gz\")).karafVersion(karafVersion()).name(karafName()).unpackDirectory(new File(\"target/paxexam/\")),\n            keepRuntimeFolder(),\n            logLevel(LogLevelOption.LogLevel.INFO),\n            editConfigurationFileExtend(\"etc/org.apache.karaf.features.cfg\", \"featuresRepositories\", \",mvn:org.apache.sling/org.apache.sling.launchpad.karaf-features/0.1.1-SNAPSHOT/xml/features\"),\n            editConfigurationFileExtend(\"etc/org.apache.karaf.features.cfg\", \"featuresBoot\", \",sling\"),\n            bundle(\"file:target/org.apache.sling.launchpad.karaf-integration-tests-0.1.1-SNAPSHOT.jar\")\n        };\n    }","id":50893,"modified_method":"@Configuration\n    public Option[] configuration() {\n        return new Option[]{\n            karafDistributionConfiguration().frameworkUrl(maven().groupId(karafGroupId()).artifactId(karafArtifactId()).version(karafVersion()).type(\"tar.gz\")).karafVersion(karafVersion()).useDeployFolder(false).name(karafName()).unpackDirectory(new File(\"target/paxexam/\")),\n            keepRuntimeFolder(),\n            logLevel(LogLevelOption.LogLevel.INFO),\n            editConfigurationFileExtend(\"etc/org.apache.karaf.features.cfg\", \"featuresRepositories\", \",mvn:org.apache.sling/org.apache.sling.launchpad.karaf-features/0.1.1-SNAPSHOT/xml/features\"),\n            editConfigurationFileExtend(\"etc/org.apache.karaf.features.cfg\", \"featuresBoot\", \",sling\"),\n            mavenBundle().groupId(\"org.ops4j.pax.tinybundles\").artifactId(\"tinybundles\").version(\"2.0.0\"),\n            karafTestSupportBundle()\n        };\n    }","commit_id":"d1d8919d06ab283335ac4e2bb958eba23dafdaf4","url":"https://github.com/apache/sling"},{"original_method":"@Configuration\n    public Option[] configuration() {\n        return new Option[]{\n            karafDistributionConfiguration().frameworkUrl(maven().groupId(karafGroupId()).artifactId(karafArtifactId()).version(karafVersion()).type(\"tar.gz\")).karafVersion(karafVersion()).name(karafName()).unpackDirectory(new File(\"target/paxexam/\")),\n            keepRuntimeFolder(),\n            logLevel(LogLevelOption.LogLevel.INFO),\n            editConfigurationFileExtend(\"etc/org.apache.karaf.features.cfg\", \"featuresRepositories\", \",mvn:org.apache.sling/org.apache.sling.launchpad.karaf-features/0.1.1-SNAPSHOT/xml/features\"),\n            editConfigurationFileExtend(\"etc/org.apache.karaf.features.cfg\", \"featuresBoot\", \",sling-launchpad-jackrabbit\"),\n            bundle(\"file:target/org.apache.sling.launchpad.karaf-integration-tests-0.1.1-SNAPSHOT.jar\")\n        };\n    }","id":50894,"modified_method":"@Configuration\n    public Option[] configuration() {\n        return new Option[]{\n            karafDistributionConfiguration().frameworkUrl(maven().groupId(karafGroupId()).artifactId(karafArtifactId()).version(karafVersion()).type(\"tar.gz\")).karafVersion(karafVersion()).useDeployFolder(false).name(karafName()).unpackDirectory(new File(\"target/paxexam/\")),\n            keepRuntimeFolder(),\n            logLevel(LogLevelOption.LogLevel.INFO),\n            editConfigurationFileExtend(\"etc/org.apache.karaf.features.cfg\", \"featuresRepositories\", \",mvn:org.apache.sling/org.apache.sling.launchpad.karaf-features/0.1.1-SNAPSHOT/xml/features\"),\n            editConfigurationFileExtend(\"etc/org.apache.karaf.features.cfg\", \"featuresBoot\", \",sling-launchpad-jackrabbit\"),\n            mavenBundle().groupId(\"org.ops4j.pax.tinybundles\").artifactId(\"tinybundles\").version(\"2.0.0\"),\n            karafTestSupportBundle()\n        };\n    }","commit_id":"d1d8919d06ab283335ac4e2bb958eba23dafdaf4","url":"https://github.com/apache/sling"},{"original_method":"@Converter\n    public static String toString(ByteBuffer buffer, Exchange exchange) {\n        return IOConverter.toString(toByteArray(buffer), exchange);\n    }","id":50895,"modified_method":"@Converter\n    public static String toString(ByteBuffer buffer, Exchange exchange) {\n        byte[] bytes = toByteArray(buffer);\n        // use type converter as it can handle encoding set on the Exchange\n        return exchange.getContext().getTypeConverter().convertTo(String.class, exchange, bytes);\n    }","commit_id":"dbd46921a81aca2f9c3dd827269c0a724fc64ccb","url":"https://github.com/apache/camel"},{"original_method":"@Converter\n    public static ObjectInput toObjectInput(ByteBuffer buffer) throws IOException {\n        return IOConverter.toObjectInput(toInputStream(buffer));\n    }","id":50896,"modified_method":"@Converter\n    public static ObjectInput toObjectInput(ByteBuffer buffer) throws IOException {\n        InputStream is = toInputStream(buffer);\n        return new ObjectInputStream(is);\n    }","commit_id":"dbd46921a81aca2f9c3dd827269c0a724fc64ccb","url":"https://github.com/apache/camel"},{"original_method":"/**\n     * Writes the given body to MINA session. Will wait until the body has been written.\n     *\n     * @param session   the MINA session\n     * @param body      the body to write (send)\n     * @param exchange  the mina exchange used for error reporting\n     * @throws CamelExchangeException is thrown if the body could not be written for some reasons\n     *                                (eg remote connection is closed etc.)\n     */\n    public static void writeBody(IoSession session, Object body, Exchange exchange) throws CamelExchangeException {\n        // the write operation is asynchronous. Use WriteFuture to wait until the session has been written\n        WriteFuture future = session.write(body);\n        future.join();\n        if (!future.isWritten()) {\n            throw new CamelExchangeException(\"Could not write body\", exchange);\n        }\n    }","id":50897,"modified_method":"/**\n     * Writes the given body to MINA session. Will wait until the body has been written.\n     *\n     * @param session  the MINA session\n     * @param body     the body to write (send)\n     * @param exchange the mina exchange used for error reporting\n     * @throws CamelExchangeException is thrown if the body could not be written for some reasons\n     *                                (eg remote connection is closed etc.)\n     */\n    public static void writeBody(IoSession session, Object body, Exchange exchange) throws CamelExchangeException {\n        // the write operation is asynchronous. Use WriteFuture to wait until the session has been written\n        WriteFuture future = session.write(body);\n        future.join();\n        if (!future.isWritten()) {\n            LOG.warn(\"Cannot write body: \" + body + \" using session: \" + session);\n            throw new CamelExchangeException(\"Cannot write body\", exchange);\n        }\n    }","commit_id":"dbd46921a81aca2f9c3dd827269c0a724fc64ccb","url":"https://github.com/apache/camel"},{"original_method":"private ByteBuffer toByteBuffer(Object message, CharsetEncoder encoder) throws CharacterCodingException {\n        ByteBuffer answer;\n        try {\n            answer = context.getTypeConverter().convertTo(ByteBuffer.class, message);\n        } catch (NoTypeConversionAvailableException e) {\n            String value = context.getTypeConverter().convertTo(String.class, message);\n            answer = ByteBuffer.allocate(value.length()).setAutoExpand(true);\n            answer.putString(value, encoder);\n        }\n        return answer;\n    }","id":50898,"modified_method":"private ByteBuffer toByteBuffer(Object message, CharsetEncoder encoder) throws CharacterCodingException {\n        // for fast convertions try this first instead of type converter registry\n        String value = null;\n        if (message instanceof String) {\n            value = (String) message;\n        } else {\n            // try to lookup if there is a string converter\n            TypeConverter tc = context.getTypeConverterRegistry().lookup(String.class, message.getClass());\n            if (tc != null) {\n                value = tc.convertTo(String.class, message);\n            }\n        }\n\n        TypeConverter tc = context.getTypeConverterRegistry().lookup(ByteBuffer.class, message.getClass());\n        if (tc == null && value == null) {\n            // use the slower converter that throws exception\n            try {\n                value = context.getTypeConverter().convertTo(String.class, message);\n            } catch (NoTypeConversionAvailableException e) {\n                // ignore\n            }\n        }\n\n        if (value != null) {\n            ByteBuffer answer = ByteBuffer.allocate(value.length()).setAutoExpand(false);\n            answer.putString(value, encoder);\n            return answer;\n        }\n\n        // failback if ther is a byte buffer type converter, in case there is a fallback converter as well\n        return context.getTypeConverter().convertTo(ByteBuffer.class, message);\n    }","commit_id":"dbd46921a81aca2f9c3dd827269c0a724fc64ccb","url":"https://github.com/apache/camel"},{"original_method":"@Converter\r\n    public static byte[] convertToByteArray(ExecResult result, Exchange exchange) throws FileNotFoundException, IOException {\r\n        return IOUtils.toByteArray(toInputStream(result));\r\n    }","id":50899,"modified_method":"@Converter\r\n    public static byte[] convertToByteArray(ExecResult result, Exchange exchange) throws FileNotFoundException, IOException {\r\n        InputStream stream = toInputStream(result);\r\n        try {\r\n            return IOUtils.toByteArray(stream);\r\n        } finally {\r\n            IOUtils.closeQuietly(stream);\r\n        }\r\n    }","commit_id":"9ea099216169ba33dacef40eb9a1f5c29c1c8b2f","url":"https://github.com/apache/camel"},{"original_method":"/**\r\n     * If the ExecResult contains out file,\r\n     * <code>InputStream<code> with the output of the <code>execResult<\/code>.\r\n     * If there is {@link ExecCommand#getOutFile()}, its content is preferred to\r\n     * {@link ExecResult#getStdout()}. Returns <code>null<\/code> if the stdout\r\n     * is null, or if the <code>execResult<\/code> is <code>null<\/code>.\r\n     * \r\n     * @param execResult ExecResult object.\r\n     * @return InputStream object if the output of the executable.\r\n     * @throws FileNotFoundException if the {@link ExecCommand#getOutFile()} is\r\n     *             not <code>null<\/code>, but can not be found\r\n     */\r\n    public static InputStream toInputStream(ExecResult execResult) throws FileNotFoundException {\r\n        if (execResult == null) {\r\n            LOG.warn(\"Received a null ExecResult instance to convert!\");\r\n            return null;\r\n        }\r\n        // prefer generic file conversion\r\n        if (execResult.getCommand().getOutFile() != null) {\r\n            return new FileInputStream(execResult.getCommand().getOutFile());\r\n        } else {\r\n            if (execResult.getStdout() == null) {\r\n                LOG.warn(\"Received null stdout of the ExecResult for conversion!\");\r\n            }\r\n            return execResult.getStdout();\r\n        }\r\n    }","id":50900,"modified_method":"/**\r\n     * Returns <code>InputStream<\/code> object with the <i>output<\/i> of the\r\n     * executable. If there is {@link ExecCommand#getOutFile()}, its content is\r\n     * preferred to {@link ExecResult#getStdout()}. If no out file is set, and\r\n     * the stdout of the exec result is <code>null<\/code> returns the stderr of\r\n     * the exec result. <br>\r\n     * If the output stream is of type <code>ByteArrayInputStream<\/code>, its\r\n     * <code>reset()<\/code> method is called.\r\n     * \r\n     * @param execResult ExecResult object to convert to InputStream.\r\n     * @return InputStream object with the <i>output<\/i> of the executable.\r\n     *         Returns <code>null<\/code> if both {@link ExecResult#getStdout()}\r\n     *         and {@link ExecResult#getStderr()} are <code>null<\/code> , or if\r\n     *         the <code>execResult<\/code> is <code>null<\/code>.\r\n     * @throws FileNotFoundException if the {@link ExecCommand#getOutFile()} can\r\n     *             not be opened. In this case the out file must have had a not\r\n     *             <code>null<\/code> value\r\n     */\r\n    public static InputStream toInputStream(ExecResult execResult) throws FileNotFoundException {\r\n        if (execResult == null) {\r\n            LOG.warn(\"Received a null ExecResult instance to convert!\");\r\n            return null;\r\n        }\r\n        // prefer the out file for output\r\n        InputStream result;\r\n        if (execResult.getCommand().getOutFile() != null) {\r\n            result = new FileInputStream(execResult.getCommand().getOutFile());\r\n        } else {\r\n            // if the stdout is null, return the stderr.\r\n            if (execResult.getStdout() == null) {\r\n                LOG.warn(\"ExecResult has no stdout, will fallback to use stderr.\");\r\n                result = execResult.getStderr();\r\n            } else {\r\n                result = execResult.getStdout();\r\n            }\r\n        }\r\n        // reset the stream if it was already read.\r\n        resetIfByteArrayInputStream(result);\r\n        return result;\r\n    }","commit_id":"9ea099216169ba33dacef40eb9a1f5c29c1c8b2f","url":"https://github.com/apache/camel"},{"original_method":"@Converter\n    public static byte[] toByteArray(File file) throws IOException {\n        return toBytes(toInputStream(file));\n    }","id":50901,"modified_method":"@Converter\n    public static byte[] toByteArray(File file) throws IOException {\n        InputStream is = toInputStream(file);\n        try {\n            return toBytes(is);\n        } finally {\n            ObjectHelper.close(is, \"file\", LOG);\n        }\n    }","commit_id":"1b1ee572ebd103f9f479e5524f9dfae6c6e5c2b8","url":"https://github.com/apache/camel"},{"original_method":"@Converter\n    public static String toString(URL url, Exchange exchange) throws IOException {\n        return toString(toInputStream(url), exchange);\n    }","id":50902,"modified_method":"@Converter\n    public static String toString(URL url, Exchange exchange) throws IOException {\n        InputStream is = toInputStream(url);\n        try {\n            return toString(is, exchange);\n        } finally {\n            ObjectHelper.close(is, \"url\", LOG);\n        }\n    }","commit_id":"59fdfecf8f2a9c52f38f5556a574873f7adb1d1e","url":"https://github.com/apache/camel"},{"original_method":"/**\r\n\t * Construct.\r\n\t * \r\n\t * @param id\r\n\t * @param form\r\n\t */\r\n\tpublic AjaxSubmitLink(String id, Form form)\r\n\t{\r\n\t\tsuper(id);\r\n\r\n\t\tadd(new AjaxFormSubmitBehavior(form, \"href\")\r\n\t\t{\r\n\r\n\t\t\tprivate static final long serialVersionUID = 1L;\r\n\r\n\t\t\tprotected void onSubmit(AjaxRequestTarget target)\r\n\t\t\t{\r\n\t\t\t\tAjaxSubmitLink.this.onSubmit(target);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t}","id":50903,"modified_method":"/**\r\n\t * Construct.\r\n\t * \r\n\t * @param id\r\n\t * @param form\r\n\t */\r\n\tpublic AjaxSubmitLink(String id, Form form)\r\n\t{\r\n\t\tsuper(id);\r\n\r\n\t\tadd(new AjaxFormSubmitBehavior(form, \"onclick\")\r\n\t\t{\r\n\r\n\t\t\tprivate static final long serialVersionUID = 1L;\r\n\r\n\t\t\tprotected void onSubmit(AjaxRequestTarget target)\r\n\t\t\t{\r\n\t\t\t\tAjaxSubmitLink.this.onSubmit(target);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t}","commit_id":"ebe70a7f62086b56ffce17aa41383380148a9a25","url":"https://github.com/apache/wicket"},{"original_method":"protected void onComponentTag(ComponentTag tag)\r\n\t{\r\n\t\tcheckComponentTag(tag, \"a\");\r\n\t\tsuper.onComponentTag(tag);\r\n\t}","id":50904,"modified_method":"protected void onComponentTag(ComponentTag tag)\r\n\t{\r\n\t\tsuper.onComponentTag(tag);\r\n\t\tcheckComponentTag(tag, \"a\");\r\n\t\ttag.put(\"href\", \"#\");\r\n\t}","commit_id":"ebe70a7f62086b56ffce17aa41383380148a9a25","url":"https://github.com/apache/wicket"},{"original_method":"/**\n\t * @see Component#onComponentTag(ComponentTag)\n\t * @param tag\n\t *            the abstraction representing html tag of this component\n\t */\n\tprotected void onComponentTag(final ComponentTag tag)\n\t{\n\n\t\t// must be attached to <input type=\"checkbox\" .../> tag\n\t\tcheckComponentTag(tag, \"input\");\n\t\tcheckComponentTagAttribute(tag, \"type\", \"checkbox\");\n\n\t\tCheckGroup group = (CheckGroup)findParent(CheckGroup.class);\n\t\tString path = getPath();\n\t\tif (group == null)\n\t\t{\n\t\t\tthrow new WicketRuntimeException(\n\t\t\t\t\t\"Check component [\"\n\t\t\t\t\t\t\t+ path\n\t\t\t\t\t\t\t+ \"] cannot find its parent CheckGroup. All Check components must be a child of or below in the hierarchy of a CheckGroup component.\");\n\t\t}\n\n\t\t// assign name and value\n\t\ttag.put(\"name\", group.getInputName());\n\t\ttag.put(\"value\", path);\n\n\t\t// check if the model collection of the group contains the model object.\n\t\t// if it does check the check box.\n\t\tCollection collection = (Collection)group.getModelObject();\n\n\t\t// check for npe in group's model object\n\t\tif (collection==null) {\n\t\t\tthrow new WicketRuntimeException(\"CheckGroup [\"+group.getPath()+\"] contains a null model object, must be an object of type java.util.Collection\");\n\t\t}\n\t\t\n\t\tString rawInput = group.getRawInput();\n\t\tif(rawInput != null)\n\t\t{\n\t\t\tif(rawInput.indexOf(path) != -1)\n\t\t\t{\n\t\t\t\ttag.put(\"checked\", \"checked\");\n\t\t\t}\n\t\t}\n\t\telse if (collection.contains(getModelObject()))\n\t\t{\n\t\t\ttag.put(\"checked\", \"checked\");\n\t\t}\n\n\t\t// Default handling for component tag\n\t\tsuper.onComponentTag(tag);\n\t\t\n\t\tif (group.wantOnSelectionChangedNotifications())\n\t\t{\n\t\t\t// url that points to this components IOnChangeListener method\n\t\t\tfinal CharSequence url = group.urlFor(IOnChangeListener.INTERFACE);\n\n\t\t\ttry\n\t\t\t{\n\t\t\t\tForm form = group.getForm();\n\t\t\t\ttag.put(\"onClick\", form.getJsForInterfaceUrl(url) );\n\t\t\t}\n\t\t\tcatch (WicketRuntimeException ex)\n\t\t\t{\n\t\t\t\t// NOTE: do not encode the url as that would give invalid JavaScript\n\t\t\t\ttag.put(\"onClick\", \"location.href='\" + url + \"&\" + group.getInputName()\n\t\t\t\t\t\t+ \"=' + this.value;\");\n\t\t\t}\n\t\t}\n\t\t\n\t}","id":50905,"modified_method":"/**\n\t * @see Component#onComponentTag(ComponentTag)\n\t * @param tag\n\t *            the abstraction representing html tag of this component\n\t */\n\tprotected void onComponentTag(final ComponentTag tag)\n\t{\n\t\t// Default handling for component tag\n\t\tsuper.onComponentTag(tag);\n\n\t\t// must be attached to <input type=\"checkbox\" .../> tag\n\t\tcheckComponentTag(tag, \"input\");\n\t\tcheckComponentTagAttribute(tag, \"type\", \"checkbox\");\n\n\t\tCheckGroup group = (CheckGroup)findParent(CheckGroup.class);\n\t\tString path = getPath();\n\t\tif (group == null)\n\t\t{\n\t\t\tthrow new WicketRuntimeException(\n\t\t\t\t\t\"Check component [\"\n\t\t\t\t\t\t\t+ path\n\t\t\t\t\t\t\t+ \"] cannot find its parent CheckGroup. All Check components must be a child of or below in the hierarchy of a CheckGroup component.\");\n\t\t}\n\n\t\t// assign name and value\n\t\ttag.put(\"name\", group.getInputName());\n\t\ttag.put(\"value\", path);\n\n\t\t// check if the model collection of the group contains the model object.\n\t\t// if it does check the check box.\n\t\tCollection collection = (Collection)group.getModelObject();\n\n\t\t// check for npe in group's model object\n\t\tif (collection==null) {\n\t\t\tthrow new WicketRuntimeException(\"CheckGroup [\"+group.getPath()+\"] contains a null model object, must be an object of type java.util.Collection\");\n\t\t}\n\t\t\n\t\tString rawInput = group.getRawInput();\n\t\tif(rawInput != null)\n\t\t{\n\t\t\tif(rawInput.indexOf(path) != -1)\n\t\t\t{\n\t\t\t\ttag.put(\"checked\", \"checked\");\n\t\t\t}\n\t\t}\n\t\telse if (collection.contains(getModelObject()))\n\t\t{\n\t\t\ttag.put(\"checked\", \"checked\");\n\t\t}\n\t\t\n\t\tif (group.wantOnSelectionChangedNotifications())\n\t\t{\n\t\t\t// url that points to this components IOnChangeListener method\n\t\t\tfinal CharSequence url = group.urlFor(IOnChangeListener.INTERFACE);\n\n\t\t\ttry\n\t\t\t{\n\t\t\t\tForm form = group.getForm();\n\t\t\t\ttag.put(\"onClick\", form.getJsForInterfaceUrl(url) );\n\t\t\t}\n\t\t\tcatch (WicketRuntimeException ex)\n\t\t\t{\n\t\t\t\t// NOTE: do not encode the url as that would give invalid JavaScript\n\t\t\t\ttag.put(\"onClick\", \"location.href='\" + url + \"&\" + group.getInputName()\n\t\t\t\t\t\t+ \"=' + this.value;\");\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (!isActionAuthorized(ENABLE) || !isEnabled()) {\n\t\t\ttag.put(ATTR_DISABLED, ATTR_DISABLED);\n\t\t}\n\n\t\t\n\t}","commit_id":"5f6745ba972697b4dca941c8af23c96b77ca59f8","url":"https://github.com/apache/wicket"},{"original_method":"/**\n\t * @see Component#onComponentTag(ComponentTag)\n\t * @param tag\n\t *            the abstraction representing html tag of this component\n\t */\n\tprotected void onComponentTag(final ComponentTag tag)\n\t{\n\n\t\t// must be attached to <input type=\"radio\" .../> tag\n\t\tcheckComponentTag(tag, \"input\");\n\t\tcheckComponentTagAttribute(tag, \"type\", \"radio\");\n\n\t\tRadioGroup group = (RadioGroup)findParent(RadioGroup.class);\n\t\tString path = getPath();\n\t\tif (group == null)\n\t\t{\n\t\t\tthrow new WicketRuntimeException(\n\t\t\t\t\t\"Radio component [\"\n\t\t\t\t\t\t\t+ path\n\t\t\t\t\t\t\t+ \"] cannot find its parent RadioGroup. All Radio components must be a child of or below in the hierarchy of a RadioGroup component.\");\n\t\t}\n\n\t\t// assign name and value\n\t\ttag.put(\"name\", group.getInputName());\n\t\ttag.put(\"value\", path);\n\n\t\t// compare the model objects of the group and self, if the same add the\n\t\t// checked attribute, first check if there was a raw input on the group.\n\t\tString rawInput = group.getRawInput();\n\t\tif(rawInput != null)\n\t\t{\n\t\t\tif(rawInput.equals(path))\n\t\t\t{\n\t\t\t\ttag.put(\"checked\", \"checked\");\n\t\t\t}\n\t\t}\n\t\telse if (Objects.equal(group.getModelObject(), getModelObject()))\n\t\t{\n\t\t\ttag.put(\"checked\", \"checked\");\n\t\t}\n\n\t\tif (group.wantOnSelectionChangedNotifications())\n\t\t{\n\t\t\t// url that points to this components IOnChangeListener method\n\t\t\tfinal CharSequence url = group.urlFor(IOnChangeListener.INTERFACE);\n\n\t\t\ttry\n\t\t\t{\n\t\t\t\tForm form = group.getForm();\n\t\t\t\ttag.put(\"onClick\", form.getJsForInterfaceUrl(url) );\n\t\t\t}\n\t\t\tcatch (WicketRuntimeException ex)\n\t\t\t{\n\t\t\t\t// NOTE: do not encode the url as that would give invalid JavaScript\n\t\t\t\ttag.put(\"onClick\", \"location.href='\" + url + \"&\" + group.getInputName()\n\t\t\t\t\t\t+ \"=' + this.value;\");\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Default handling for component tag\n\t\tsuper.onComponentTag(tag);\n\t}","id":50906,"modified_method":"/**\n\t * @see Component#onComponentTag(ComponentTag)\n\t * @param tag\n\t *            the abstraction representing html tag of this component\n\t */\n\tprotected void onComponentTag(final ComponentTag tag)\n\t{\n\t\t// Default handling for component tag\n\t\tsuper.onComponentTag(tag);\n\n\t\t// must be attached to <input type=\"radio\" .../> tag\n\t\tcheckComponentTag(tag, \"input\");\n\t\tcheckComponentTagAttribute(tag, \"type\", \"radio\");\n\n\t\tRadioGroup group = (RadioGroup)findParent(RadioGroup.class);\n\t\tString path = getPath();\n\t\tif (group == null)\n\t\t{\n\t\t\tthrow new WicketRuntimeException(\n\t\t\t\t\t\"Radio component [\"\n\t\t\t\t\t\t\t+ path\n\t\t\t\t\t\t\t+ \"] cannot find its parent RadioGroup. All Radio components must be a child of or below in the hierarchy of a RadioGroup component.\");\n\t\t}\n\n\t\t// assign name and value\n\t\ttag.put(\"name\", group.getInputName());\n\t\ttag.put(\"value\", path);\n\n\t\t// compare the model objects of the group and self, if the same add the\n\t\t// checked attribute, first check if there was a raw input on the group.\n\t\tString rawInput = group.getRawInput();\n\t\tif(rawInput != null)\n\t\t{\n\t\t\tif(rawInput.equals(path))\n\t\t\t{\n\t\t\t\ttag.put(\"checked\", \"checked\");\n\t\t\t}\n\t\t}\n\t\telse if (Objects.equal(group.getModelObject(), getModelObject()))\n\t\t{\n\t\t\ttag.put(\"checked\", \"checked\");\n\t\t}\n\n\t\tif (group.wantOnSelectionChangedNotifications())\n\t\t{\n\t\t\t// url that points to this components IOnChangeListener method\n\t\t\tfinal CharSequence url = group.urlFor(IOnChangeListener.INTERFACE);\n\n\t\t\ttry\n\t\t\t{\n\t\t\t\tForm form = group.getForm();\n\t\t\t\ttag.put(\"onClick\", form.getJsForInterfaceUrl(url) );\n\t\t\t}\n\t\t\tcatch (WicketRuntimeException ex)\n\t\t\t{\n\t\t\t\t// NOTE: do not encode the url as that would give invalid JavaScript\n\t\t\t\ttag.put(\"onClick\", \"location.href='\" + url + \"&\" + group.getInputName()\n\t\t\t\t\t\t+ \"=' + this.value;\");\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\tif (!isActionAuthorized(ENABLE) || !isEnabled()) {\n\t\t\ttag.put(ATTR_DISABLED, ATTR_DISABLED);\n\t\t}\n\t}","commit_id":"5f6745ba972697b4dca941c8af23c96b77ca59f8","url":"https://github.com/apache/wicket"},{"original_method":"public static void createNewProject(Project projectToClose, @Nullable final String defaultPath) {\n    final boolean proceed = ProgressManager.getInstance().runProcessWithProgressSynchronously(new Runnable() {\n      public void run() {\n        ProjectManager.getInstance().getDefaultProject(); //warm up components\n      }\n    }, ProjectBundle.message(\"project.new.wizard.progress.title\"), true, null);\n    if (!proceed) return;\n    AddModuleWizard dialog = new AddModuleWizard(null, ModulesProvider.EMPTY_MODULES_PROVIDER, defaultPath);\n    dialog.show();\n    if (!dialog.isOK()) {\n      return;\n    }\n\n    final ProjectManagerEx projectManager = ProjectManagerEx.getInstanceEx();\n    final String projectFilePath = dialog.getNewProjectFilePath();\n    final ProjectBuilder projectBuilder = dialog.getProjectBuilder();\n\n    try {\n      final Project newProject =\n        projectBuilder == null || !projectBuilder.isUpdate() ? projectManager.newProject(projectFilePath, true, false) : projectToClose;\n\n      final ProjectJdk jdk = dialog.getNewProjectJdk();\n      if (jdk != null) {\n        final String versionString = jdk.getVersionString();\n        if (versionString != null) { //jdk is valid\n          CommandProcessor.getInstance().executeCommand(newProject, new Runnable() {\n            public void run() {\n              ApplicationManager.getApplication().runWriteAction(new Runnable() {\n                public void run() {\n                  final ProjectRootManagerEx projectRootManager = (ProjectRootManagerEx)ProjectRootManager.getInstance(newProject);\n                  projectRootManager.setProjectJdk(jdk);\n                  final LanguageLevel languageLevel = getDefaultLanguageLevel(versionString);\n                  if (projectRootManager.getLanguageLevel().compareTo(languageLevel) > 0) {\n                    projectRootManager.setLanguageLevel(languageLevel);\n                  }\n                }\n              });\n            }\n          }, null, null);\n        }\n      }\n\n      final String compileOutput = dialog.getNewCompileOutput();\n      CommandProcessor.getInstance().executeCommand(newProject, new Runnable() {\n        public void run() {\n          ApplicationManager.getApplication().runWriteAction(new Runnable() {\n            public void run() {\n              final ProjectRootManagerEx projectRootManager = (ProjectRootManagerEx)ProjectRootManager.getInstance(newProject);\n              String canonicalPath = compileOutput;\n              try {\n                canonicalPath = FileUtil.resolveShortWindowsName(compileOutput);\n              }\n              catch (IOException e) {\n                //file doesn't exist\n              }\n              canonicalPath = FileUtil.toSystemIndependentName(canonicalPath);\n              projectRootManager.setCompilerOutputUrl(VfsUtil.pathToUrl(canonicalPath));\n            }\n          });\n        }\n      }, null, null);\n\n      newProject.save();\n\n\n      if (projectBuilder != null && !projectBuilder.validate(projectToClose, newProject)) {\n        return;\n      }\n\n      if (newProject != projectToClose) {\n        closePreviousProject(projectToClose);\n      }\n\n      if (projectBuilder != null) {\n        projectBuilder.commit(newProject);\n      }\n\n      final boolean need2OpenProjectStructure = projectBuilder == null || projectBuilder.isOpenProjectSettingsAfter();\n      StartupManager.getInstance(newProject).registerPostStartupActivity(new Runnable() {\n        public void run() {\n          // ensure the dialog is shown after all startup activities are done\n          SwingUtilities.invokeLater(new Runnable() {\n            public void run() {\n              final ToolWindow toolWindow = ToolWindowManager.getInstance(newProject).getToolWindow(ToolWindowId.PROJECT_VIEW);\n              if (toolWindow != null) {\n                toolWindow.activate(null);\n              }\n              if (need2OpenProjectStructure) {\n                ModulesConfigurator.showDialog(newProject, null, null, true);\n              }\n            }\n          });\n        }\n      });\n\n      if (newProject != projectToClose) {\n        updateLastProjectLocation(projectFilePath);\n\n        projectManager.openProject(newProject);\n      }\n    }\n    finally {\n      if (projectBuilder != null) {\n        projectBuilder.cleanup();\n      }\n    }\n  }","id":50907,"modified_method":"public static void createNewProject(Project projectToClose, @Nullable final String defaultPath) {\n    final boolean proceed = ProgressManager.getInstance().runProcessWithProgressSynchronously(new Runnable() {\n      public void run() {\n        ProjectManager.getInstance().getDefaultProject(); //warm up components\n      }\n    }, ProjectBundle.message(\"project.new.wizard.progress.title\"), true, null);\n    if (!proceed) return;\n    AddModuleWizard dialog = new AddModuleWizard(null, ModulesProvider.EMPTY_MODULES_PROVIDER, defaultPath);\n    dialog.show();\n    if (!dialog.isOK()) {\n      return;\n    }\n\n    final ProjectManagerEx projectManager = ProjectManagerEx.getInstanceEx();\n    final String projectFilePath = dialog.getNewProjectFilePath();\n    final ProjectBuilder projectBuilder = dialog.getProjectBuilder();\n\n    try {\n      final Project newProject =\n        projectBuilder == null || !projectBuilder.isUpdate() ? projectManager.newProject(projectFilePath, true, false) : projectToClose;\n\n      final ProjectJdk jdk = dialog.getNewProjectJdk();\n      if (jdk != null) {\n        final String versionString = jdk.getVersionString();\n        if (versionString != null) { //jdk is valid\n          CommandProcessor.getInstance().executeCommand(newProject, new Runnable() {\n            public void run() {\n              ApplicationManager.getApplication().runWriteAction(new Runnable() {\n                public void run() {\n                  final ProjectRootManagerEx projectRootManager = (ProjectRootManagerEx)ProjectRootManager.getInstance(newProject);\n                  projectRootManager.setProjectJdk(jdk);\n                  final LanguageLevel languageLevel = getDefaultLanguageLevel(versionString);\n                  if (projectRootManager.getLanguageLevel().compareTo(languageLevel) > 0) {\n                    projectRootManager.setLanguageLevel(languageLevel);\n                  }\n                }\n              });\n            }\n          }, null, null);\n        }\n      }\n\n      final String compileOutput = dialog.getNewCompileOutput();\n      CommandProcessor.getInstance().executeCommand(newProject, new Runnable() {\n        public void run() {\n          ApplicationManager.getApplication().runWriteAction(new Runnable() {\n            public void run() {\n              final ProjectRootManagerEx projectRootManager = (ProjectRootManagerEx)ProjectRootManager.getInstance(newProject);\n              String canonicalPath = compileOutput;\n              try {\n                canonicalPath = FileUtil.resolveShortWindowsName(compileOutput);\n              }\n              catch (IOException e) {\n                //file doesn't exist\n              }\n              canonicalPath = FileUtil.toSystemIndependentName(canonicalPath);\n              projectRootManager.setCompilerOutputUrl(VfsUtil.pathToUrl(canonicalPath));\n            }\n          });\n        }\n      }, null, null);\n\n      newProject.save();\n\n\n      if (projectBuilder != null && !projectBuilder.validate(projectToClose, newProject)) {\n        return;\n      }\n\n      if (newProject != projectToClose) {\n        closePreviousProject(projectToClose);\n      }\n\n      if (projectBuilder != null) {\n        projectBuilder.commit(newProject);\n      }\n\n      final boolean need2OpenProjectStructure = projectBuilder == null || projectBuilder.isOpenProjectSettingsAfter();\n      StartupManager.getInstance(newProject).registerPostStartupActivity(new Runnable() {\n        public void run() {\n          // ensure the dialog is shown after all startup activities are done\n          SwingUtilities.invokeLater(new Runnable() {\n            public void run() {\n              if (need2OpenProjectStructure) {\n                ModulesConfigurator.showDialog(newProject, null, null, true);\n              }\n              ApplicationManager.getApplication().invokeLater(new Runnable() {\n                public void run() {\n                  final ToolWindow toolWindow = ToolWindowManager.getInstance(newProject).getToolWindow(ToolWindowId.PROJECT_VIEW);\n                  if (toolWindow != null) {\n                    toolWindow.activate(null);\n                  }\n                }\n              }, ModalityState.NON_MODAL);\n            }\n          });\n        }\n      });\n\n      if (newProject != projectToClose) {\n        updateLastProjectLocation(projectFilePath);\n\n        projectManager.openProject(newProject);\n      }\n    }\n    finally {\n      if (projectBuilder != null) {\n        projectBuilder.cleanup();\n      }\n    }\n  }","commit_id":"976ab46c5437c901e8c85305a29fc71ce4a72050","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void doExecute(@NotNull final AnActionEvent event, final Map<String, Object> _params) {\n    try {\n      ((MigrationTrigger) ((Project) MapSequence.fromMap(_params).get(\"project\")).getComponent(IStartupMigrationExecutor.class)).tryMigratingProjectNoQueue();\n    } catch (Throwable t) {\n      if (LOG.isEnabledFor(Level.ERROR)) {\n        LOG.error(\"User's action execute method failed. Action:\" + \"ExecuteMigrationAssistant\", t);\n      }\n    }\n  }","id":50908,"modified_method":"public void doExecute(@NotNull final AnActionEvent event, final Map<String, Object> _params) {\n    try {\n      final Iterable<SModule> allModules = MigrationsUtil.getMigrateableModulesFromProject(((MPSProject) MapSequence.fromMap(_params).get(\"mpsProject\")));\n      final Wrappers._boolean migrationRequired = new Wrappers._boolean();\n      ModelAccess.instance().runReadAction(new Runnable() {\n        public void run() {\n          migrationRequired.value = MigrationComponent.isMigrationRequired(((MPSProject) MapSequence.fromMap(_params).get(\"mpsProject\")), allModules);\n        }\n      });\n      if (!(migrationRequired.value)) {\n        ApplicationManager.getApplication().invokeLater(new Runnable() {\n          public void run() {\n            Messages.showMessageDialog(((Project) MapSequence.fromMap(_params).get(\"project\")), \"None of the modules in project require migration.\\n\" + \"Migration assistant will not be started.\", \"Migration not required\", null);\n          }\n        });\n        return;\n      }\n\n      MigrationTrigger mt = ((MigrationTrigger) ((Project) MapSequence.fromMap(_params).get(\"project\")).getComponent(IStartupMigrationExecutor.class));\n      mt.postponeMigration();\n    } catch (Throwable t) {\n      if (LOG.isEnabledFor(Level.ERROR)) {\n        LOG.error(\"User's action execute method failed. Action:\" + \"ExecuteMigrationAssistant\", t);\n      }\n    }\n  }","commit_id":"9d73292cc8cce6389bb4f4c7403d5d5391f6c1be","url":"https://github.com/JetBrains/MPS"},{"original_method":"protected boolean collectActionData(AnActionEvent event, final Map<String, Object> _params) {\n    if (!(super.collectActionData(event, _params))) {\n      return false;\n    }\n    MapSequence.fromMap(_params).put(\"project\", event.getData(CommonDataKeys.PROJECT));\n    if (MapSequence.fromMap(_params).get(\"project\") == null) {\n      return false;\n    }\n    return true;\n  }","id":50909,"modified_method":"protected boolean collectActionData(AnActionEvent event, final Map<String, Object> _params) {\n    if (!(super.collectActionData(event, _params))) {\n      return false;\n    }\n    MapSequence.fromMap(_params).put(\"project\", event.getData(CommonDataKeys.PROJECT));\n    if (MapSequence.fromMap(_params).get(\"project\") == null) {\n      return false;\n    }\n    MapSequence.fromMap(_params).put(\"mpsProject\", event.getData(MPSCommonDataKeys.MPS_PROJECT));\n    if (MapSequence.fromMap(_params).get(\"mpsProject\") == null) {\n      return false;\n    }\n    return true;\n  }","commit_id":"9d73292cc8cce6389bb4f4c7403d5d5391f6c1be","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  public void projectOpened() {\n    StartupManager.getInstance(myProject).registerPostStartupActivity(new Runnable() {\n      public void run() {\n        executeWizard();\n      }\n    });\n  }","id":50910,"modified_method":"@Override\n  public void projectOpened() {\n    StartupManager.getInstance(myProject).registerPostStartupActivity(new Runnable() {\n      public void run() {\n        if (!(myMigrationManager.isMigrationRequired())) {\n          return;\n        }\n        new MigrationsProgressStep(myProject, myMigrationManager).autostart(new _FunctionTypes._void_P0_E0() {\n          public void invoke() {\n          }\n        });\n      }\n    });\n  }","commit_id":"9d73292cc8cce6389bb4f4c7403d5d5391f6c1be","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static <T> T as_feb5zp_a0a9a24(Object o, Class<T> type) {\n    return (type.isInstance(o) ? (T) o : null);\n  }","id":50911,"modified_method":"private static <T> T as_feb5zp_a0a21a0a0a0c0a0a0a0a0a0a0a0a0a0a61(Object o, Class<T> type) {\n    return (type.isInstance(o) ? (T) o : null);\n  }","commit_id":"9d73292cc8cce6389bb4f4c7403d5d5391f6c1be","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n    public void onReload() {\n      ModelAccess.instance().runWriteAction(new Runnable() {\n        public void run() {\n          tryMigratingProject();\n        }\n      });\n    }","id":50912,"modified_method":"@Override\n    public void onReload() {\n      ModelAccess.instance().runWriteAction(new Runnable() {\n        public void run() {\n          checkMigrationNeeded();\n        }\n      });\n    }","commit_id":"9d73292cc8cce6389bb4f4c7403d5d5391f6c1be","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void projectOpened() {\n    if (!(myState.migrationRequired)) {\n      addListeners();\n      ModelAccess.instance().runWriteAction(new Runnable() {\n        public void run() {\n          tryMigratingProject();\n        }\n      });\n    } else {\n      StartupManager.getInstance(myProject).registerPostStartupActivity(new Runnable() {\n        public void run() {\n          // this line should be executed in post-startup activity as we can have language in the same project \n          // with the solution to migrate, and in this case classes of this language will be cleared, but after \n          // they are compiled at startup, they are only reloaded in a pre-startup activity \n          if (!(myMigrationManager.isMigrationRequired())) {\n            return;\n          }\n\n          ApplicationManager.getApplication().runWriteAction(new Runnable() {\n            public void run() {\n              VirtualFileUtils.refreshSynchronouslyRecursively(myProject.getBaseDir());\n              VirtualFileManager.getInstance().asyncRefresh(new Runnable() {\n                public void run() {\n                  SwingUtilities.invokeLater(new Runnable() {\n                    public void run() {\n                      ReloadManager.getInstance().flush();\n                      ProjectManagerEx.getInstanceEx().unblockReloadingProjectOnExternalChanges();\n                      executeWizard();\n                    }\n                  });\n                }\n              });\n            }\n          });\n        }\n      });\n    }\n  }","id":50913,"modified_method":"public void projectOpened() {\n    if (!(myState.migrationRequired)) {\n      addListeners();\n      ModelAccess.instance().runWriteAction(new Runnable() {\n        public void run() {\n          checkMigrationNeeded();\n        }\n      });\n    } else {\n      StartupManager.getInstance(myProject).registerPostStartupActivity(new Runnable() {\n        public void run() {\n          ApplicationManager.getApplication().runWriteAction(new Runnable() {\n            public void run() {\n              VirtualFileUtils.refreshSynchronouslyRecursively(myProject.getBaseDir());\n              VirtualFileManager.getInstance().syncRefresh();\n              SwingUtilities.invokeLater(new Runnable() {\n                public void run() {\n                  ReloadManager.getInstance().flush();\n                  ProjectManagerEx.getInstanceEx().unblockReloadingProjectOnExternalChanges();\n\n                  myState.migrationRequired = false;\n\n                  final MigrationAssistantWizard wizard = new MigrationAssistantWizard(myProject, myMigrationManager);\n                  // final reload is needed to cleanup memory (unload models) and do possible switches (e.g. to a new persistence) \n                  boolean finished = wizard.showAndGet();\n                  if (!(finished)) {\n                    return;\n                  }\n\n                  if (wizard.isFinishSuccessfull()) {\n                    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n                      public void run() {\n                        ProjectManagerEx.getInstance().reloadProject(myProject);\n                      }\n                    });\n                    return;\n                  }\n\n                  MigrationErrorStep lastStep = as_feb5zp_a0a21a0a0a0c0a0a0a0a0a0a0a0a0a0a61(wizard.getCurrentStepObject(), MigrationErrorStep.class);\n                  if (lastStep == null) {\n                    return;\n                  }\n\n                  final _FunctionTypes._void_P0_E0 afterProjectInitialized = lastStep.afterProjectInitialized();\n                  if (afterProjectInitialized == null) {\n                    return;\n                  }\n\n                  StartupManager.getInstance(myProject).runWhenProjectIsInitialized(new Runnable() {\n                    public void run() {\n                      ApplicationManager.getApplication().invokeLater(new Runnable() {\n                        public void run() {\n                          afterProjectInitialized.invoke();\n                        }\n                      }, ModalityState.NON_MODAL);\n\n                    }\n                  });\n                }\n              });\n            }\n          });\n\n        }\n      });\n    }\n  }","commit_id":"9d73292cc8cce6389bb4f4c7403d5d5391f6c1be","url":"https://github.com/JetBrains/MPS"},{"original_method":"private void postponeMigration() {\n    final com.intellij.openapi.project.Project ideaProject = myProject;\n\n    // wait until project is fully loaded (if not yet) \n    StartupManager.getInstance(ideaProject).runWhenProjectIsInitialized(new Runnable() {\n      public void run() {\n        // as we use ui, postpone to EDT \n        ApplicationManager.getApplication().invokeLater(new Runnable() {\n          public void run() {\n            int result = Messages.showYesNoDialog(myProject, DIALOG_TEXT, \"Migration Required\", \"Migrate\", \"Postpone\", null);\n            if (result == Messages.NO) {\n              return;\n            }\n\n            VirtualFileUtils.refreshSynchronouslyRecursively(myProject.getBaseDir());\n            VirtualFileManager.getInstance().asyncRefresh(new Runnable() {\n              public void run() {\n                ApplicationManager.getApplication().invokeLater(new Runnable() {\n                  public void run() {\n                    ReloadManager.getInstance().flush();\n                    ProjectManagerEx.getInstanceEx().unblockReloadingProjectOnExternalChanges();\n                    // set flag to execute migration after startup \n                    myState.migrationRequired = true;\n                    // reload project and start migration assist \n                    ProjectManagerEx.getInstance().reloadProject(ideaProject);\n                  }\n                });\n              }\n            });\n          }\n        });\n      }\n    });\n\n    myMigrationQueued = true;\n  }","id":50914,"modified_method":"public void postponeMigration() {\n    final com.intellij.openapi.project.Project ideaProject = myProject;\n\n    // wait until project is fully loaded (if not yet) \n    StartupManager.getInstance(ideaProject).runWhenProjectIsInitialized(new Runnable() {\n      public void run() {\n        // as we use ui, postpone to EDT \n        ApplicationManager.getApplication().invokeLater(new Runnable() {\n          public void run() {\n            int result = Messages.showYesNoDialog(myProject, DIALOG_TEXT, \"Migration Required\", \"Migrate\", \"Postpone\", null);\n            if (result == Messages.NO) {\n              return;\n            }\n\n            VirtualFileUtils.refreshSynchronouslyRecursively(myProject.getBaseDir());\n            VirtualFileManager.getInstance().asyncRefresh(new Runnable() {\n              public void run() {\n                ApplicationManager.getApplication().invokeLater(new Runnable() {\n                  public void run() {\n                    ReloadManager.getInstance().flush();\n                    ProjectManagerEx.getInstanceEx().unblockReloadingProjectOnExternalChanges();\n                    // set flag to execute migration after startup \n                    myState.migrationRequired = true;\n                    // reload project and start migration assist \n                    ProjectManagerEx.getInstance().reloadProject(ideaProject);\n                  }\n                });\n              }\n            });\n          }\n        });\n      }\n    });\n\n    myMigrationQueued = true;\n  }","commit_id":"9d73292cc8cce6389bb4f4c7403d5d5391f6c1be","url":"https://github.com/JetBrains/MPS"},{"original_method":"public VcsInitialization(final Project project) {\n    myLock = new Object();\n    myProject = project;\n    myList = new LinkedList<Pair<VcsInitObject, Runnable>>();\n\n    StartupManager.getInstance(myProject).registerPostStartupActivity(new DumbAwareRunnable() {\n      public void run() {\n        execute();\n      }\n    });\n  }","id":50915,"modified_method":"public VcsInitialization(final Project project) {\n    myLock = new Object();\n    myProject = project;\n    myList = new LinkedList<Pair<VcsInitObject, Runnable>>();\n\n    StartupManager.getInstance(myProject).registerPostStartupActivity(new DumbAwareRunnable() {\n      public void run() {\n        ApplicationManager.getApplication().executeOnPooledThread(new Runnable() {\n          @Override\n          public void run() {\n            execute();\n          }\n        });\n      }\n    });\n  }","commit_id":"1380d6ffcd7ad22a47fd7ac9cff6bc2bbf89426b","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void initiateMigration(final MPSProjectMigrationState migrationState) {\n    StartupManager.getInstance(myProject).registerPostStartupActivity(new Runnable() {\n      public void run() {\n        MigrationAssistantWizard wizard = new MigrationAssistantWizard(myProject);\n        AsyncResult<Boolean> result = wizard.showAndGetOk();\n        result.doWhenDone(new Handler<Boolean>() {\n          @Override\n          public void run(Boolean ok) {\n            if (ok) {\n              myMigrationState.migrationFinished();\n            }\n            else {\n              myMigrationState.migrationAborted();\n              forceCloseProject();\n            }\n          }\n        });\n      }\n    });\n  }","id":50916,"modified_method":"private void initiateMigration(final MPSProjectMigrationState migrationState) {\n    StartupManager.getInstance(myProject).registerPostStartupActivity(new Runnable() {\n      public void run() {\n        LaterInvocator.invokeLater(new Runnable() {\n          @Override\n          public void run() {\n            MigrationAssistantWizard wizard = new MigrationAssistantWizard(myProject);\n            AsyncResult<Boolean> result = wizard.showAndGetOk();\n            result.doWhenDone(new Handler<Boolean>() {\n              @Override\n              public void run(Boolean ok) {\n                if (ok) {\n                  myMigrationState.migrationFinished();\n                }\n                else {\n                  myMigrationState.migrationAborted();\n                  forceCloseProject();\n                }\n              }\n            });\n          }\n        }, ModalityState.NON_MODAL);\n      }\n    });\n  }","commit_id":"ee7a8ce6758c778e5cf95724171c2e42a6d1fdc5","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void readExternal(final Element parentNode) throws InvalidDataException {\n    myStartupManager.registerPostStartupActivity(new Runnable() {\n      @SuppressWarnings({\"HardCodedStringLiteral\"}) public void run() {\n        ApplicationManager.getApplication().runReadAction(new Runnable() {\n          @SuppressWarnings({\"HardCodedStringLiteral\"})\n          public void run() {\n            final Map<String, Breakpoint> nameToBreakpointMap = new java.util.HashMap<String, Breakpoint>();\n            try {\n              final List groups = parentNode.getChildren();\n              for (final Object group1 : groups) {\n                final Element group = (Element)group1;\n                final String categoryName = group.getName();\n                final Key<Breakpoint> breakpointCategory = BreakpointCategory.lookup(categoryName);\n                setDefaultSuspendPolicy(breakpointCategory, group.getAttributeValue(DEFAULT_SUSPEND_POLICY_ATTRIBUTE_NAME));\n                Element anyExceptionBreakpointGroup;\n                if (!AnyExceptionBreakpoint.ANY_EXCEPTION_BREAKPOINT.equals(breakpointCategory)) {\n                  // for compatibility with previous format\n                  anyExceptionBreakpointGroup = group.getChild(AnyExceptionBreakpoint.ANY_EXCEPTION_BREAKPOINT.toString());\n                  final BreakpointFactory factory = BreakpointFactory.getInstance(breakpointCategory);\n                  if (factory != null) {\n                    for (final Object o : group.getChildren(\"breakpoint\")) {\n                      Element breakpointNode = (Element)o;\n                      Breakpoint breakpoint = factory.createBreakpoint(myProject, breakpointNode);\n                      breakpoint.readExternal(breakpointNode);\n                      addBreakpoint(breakpoint);\n                      nameToBreakpointMap.put(breakpoint.getDisplayName(), breakpoint);\n                    }\n                  }\n                }\n                else {\n                  anyExceptionBreakpointGroup = group;\n                }\n\n                if (anyExceptionBreakpointGroup != null) {\n                  final Element breakpointElement = group.getChild(\"breakpoint\");\n                  if (breakpointElement != null) {\n                    getAnyExceptionBreakpoint().readExternal(breakpointElement);\n                  }\n                }\n\n              }\n            }\n            catch (InvalidDataException e) {\n            }\n\n            final Element rulesGroup = parentNode.getChild(RULES_GROUP_NAME);\n            if (rulesGroup != null) {\n              final List rules = rulesGroup.getChildren(\"rule\");\n              for (final Object rule1 : rules) {\n                final Element rule = (Element)rule1;\n                final Element master = rule.getChild(MASTER_BREAKPOINT_TAGNAME);\n                if (master == null) {\n                  continue;\n                }\n                final Element slave = rule.getChild(SLAVE_BREAKPOINT_TAGNAME);\n                if (slave == null) {\n                  continue;\n                }\n                final Breakpoint masterBreakpoint = nameToBreakpointMap.get(master.getAttributeValue(\"name\"));\n                if (masterBreakpoint == null) {\n                  continue;\n                }\n                final Breakpoint slaveBreakpoint = nameToBreakpointMap.get(slave.getAttributeValue(\"name\"));\n                if (slaveBreakpoint == null) {\n                  continue;\n                }\n                addBreakpointRule(new EnableBreakpointRule(BreakpointManager.this, masterBreakpoint, slaveBreakpoint, \"true\".equalsIgnoreCase(rule.getAttributeValue(\"leaveEnabled\"))));\n              }\n            }\n\n            DebuggerInvocationUtil.invokeLater(myProject, new Runnable() {\n              public void run() {\n                updateBreakpointsUI();\n              }\n            });\n          }\n        });\n\n        myUIProperties.clear();\n        final Element props = parentNode.getChild(\"ui_properties\");\n        if (props != null) {\n          final List children = props.getChildren(\"property\");\n          for (Object child : children) {\n            Element property = (Element)child;\n            final String name = property.getAttributeValue(\"name\");\n            final String value = property.getAttributeValue(\"value\");\n            if (name != null && value != null) {\n              myUIProperties.put(name, value);\n            }\n          }\n        }\n      }\n    });\n  }","id":50917,"modified_method":"public void readExternal(final Element parentNode) throws InvalidDataException {\n    if (myProject.isOpen()) {\n      doRead(parentNode);\n    } else {\n      myStartupManager.registerPostStartupActivity(new Runnable() {\n        public void run() {\n          doRead(parentNode);\n        }\n      });\n    }\n  }","commit_id":"e0bdb2018c8d25653c6a5cb3c1aec6c9dc095f79","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected abstract void createTool ();","id":50918,"modified_method":"/** Either this method or the one with boolean parameter must be implemented. Not both.*/\n  protected void createTool () {\n    throw new UnsupportedOperationException();\n  }","commit_id":"89f638015015c465b0e005b00fdad2e5d3b7af1d","url":"https://github.com/JetBrains/MPS"},{"original_method":"private void createAndRegisterTool(final boolean early) {\n    createTool();\n    if (early) {\n      StartupManager.getInstance(getProject()).registerPostStartupActivity(new Runnable() {\n        public void run() {\n          registerLater();\n        }\n      });\n    }\n    else {\n      registerLater();\n    }\n  }","id":50919,"modified_method":"private void createAndRegisterTool(final boolean early) {\n    createTool(early);\n    if (early) {\n      StartupManager.getInstance(getProject()).registerPostStartupActivity(new Runnable() {\n        public void run() {\n          registerLater();\n        }\n      });\n    }\n    else {\n      registerLater();\n    }\n  }","commit_id":"89f638015015c465b0e005b00fdad2e5d3b7af1d","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  protected void createTool() {\n    StartupManager.getInstance(getProject()).registerPostStartupActivity(new Runnable() {\n      public void run() {\n        SwingUtilities.invokeLater(new Runnable() {\n          public void run() {\n            setTracingDataIsAvailable(myTracer.hasTracingData());\n            showNoTabsComponent();\n            setAvailable(false);\n            getContentManager().addContentManagerListener(new ContentManagerAdapter() {\n              public void contentRemoved(ContentManagerEvent event) {\n                boolean closeAfter = event.getContent().getComponent() == myNoTabsComponent;\n                if (getContentManager().getContentCount() == 0) {\n                  showNoTabsComponent();\n                  if (closeAfter) {\n                    makeUnavailableLater();\n                  }\n                }\n              }\n            });\n          }\n        });\n      }\n    });\n  }","id":50920,"modified_method":"@Override\n  protected void createTool(boolean early) {\n    if (early) {\n      StartupManager.getInstance(getProject()).registerPostStartupActivity(new Runnable() {\n        public void run() {\n          postStartup();\n        }\n      });\n    } else {\n      postStartup();\n    }\n  }","commit_id":"89f638015015c465b0e005b00fdad2e5d3b7af1d","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void addSupport(@NotNull Module module) {\n\n    ModifiableRootModel rootModel = ModuleRootManager.getInstance(module).getModifiableModel();\n    if (myAddSupportContexts != null) {\n      for (AddSupportContext supportContext : myAddSupportContexts) {\n        if (supportContext.isAddSupport()) {\n          supportContext.installSupportInAction(module, rootModel);\n        }\n      }\n    }\n  }","id":50921,"modified_method":"public void addSupport(@NotNull Module module) {\n\n    ModifiableRootModel rootModel = ModuleRootManager.getInstance(module).getModifiableModel();\n    if (myAddSupportContexts != null) {\n      for (AddSupportContext supportContext : myAddSupportContexts) {\n        if (supportContext.isAddSupport()) {\n          supportContext.installSupportInAction(module, rootModel);\n        }\n      }\n    }\n    rootModel.commit();\n  }","commit_id":"f099244b521a21068c5ed2cbb1d51f3530838f9f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  public Module createAndCommit(ModifiableModuleModel moduleModel, boolean runFromProjectWizard) throws\n                                                                                                 InvalidDataException,\n                                                                                                 ConfigurationException,\n                                                                                                 IOException,\n                                                                                                 JDOMException,\n                                                                                                 ModuleWithNameAlreadyExists,\n                                                                                                 ModuleCircularDependencyException {\n    final Module module = createModule(moduleModel);\n    moduleModel.commit();\n\n    final Runnable runnable = new Runnable() {\n      public void run() {\n         addSupport(module);\n      }\n    };\n    if (runFromProjectWizard) {\n      StartupManager.getInstance(module.getProject()).registerPostStartupActivity(runnable);\n    }\n    else {\n      runnable.run();\n    }\n    return module;\n  }","id":50922,"modified_method":"@NotNull\n  public Module createAndCommit(ModifiableModuleModel moduleModel, boolean runFromProjectWizard) throws\n                                                                                                 InvalidDataException,\n                                                                                                 ConfigurationException,\n                                                                                                 IOException,\n                                                                                                 JDOMException,\n                                                                                                 ModuleWithNameAlreadyExists,\n                                                                                                 ModuleCircularDependencyException {\n    final Module module = createModule(moduleModel);\n    moduleModel.commit();\n\n    if (runFromProjectWizard) {\n      StartupManager.getInstance(module.getProject()).registerPostStartupActivity(new Runnable() {\n      public void run() {\n        ApplicationManager.getApplication().runWriteAction(new Runnable() {\n          public void run() {\n            addSupport(module);\n          }\n        });\n      }\n    });\n    }\n    else {\n      addSupport(module);\n    }\n    return module;\n  }","commit_id":"f099244b521a21068c5ed2cbb1d51f3530838f9f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public ComponentTree getComponentTree() {\n    return myComponentTree;\n  }","id":50923,"modified_method":"public ComponentTree getComponentTree() {\n    checkInitToolWindow();\n    return myComponentTree;\n  }","commit_id":"7c8d02c773a081270b033b0eb24fd758183842f0","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void projectClosed() {\n    if (myToolWindowPanel != null) {\n      ToolWindowManager.getInstance(myProject).unregisterToolWindow(UIDesignerBundle.message(\"toolwindow.ui.designer\"));\n      myFileEditorManager.removeFileEditorManagerListener(myListener);\n      if (myComponentTreeBuilder != null) {\n        Disposer.dispose(myComponentTreeBuilder);\n      }\n      myToolWindowPanel = null;\n      myToolWindow = null;\n    }\n  }","id":50924,"modified_method":"public void projectClosed() {\n    if (myToolWindowPanel != null) {\n      ToolWindowManager.getInstance(myProject).unregisterToolWindow(UIDesignerBundle.message(\"toolwindow.ui.designer\"));\n      myFileEditorManager.removeFileEditorManagerListener(myListener);\n      if (myComponentTreeBuilder != null) {\n        Disposer.dispose(myComponentTreeBuilder);\n      }\n      myToolWindowPanel = null;\n      myToolWindow = null;\n      myToolWindowDisposed = true;\n    }\n  }","commit_id":"7c8d02c773a081270b033b0eb24fd758183842f0","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void processFileEditorChange(UIFormEditor newEditor) {\n    if (myToolWindow == null) return;\n    GuiEditor activeFormEditor = newEditor != null ? newEditor.getEditor() : null;\n    if (myComponentTreeBuilder != null) {\n      Disposer.dispose(myComponentTreeBuilder);\n      myComponentTreeBuilder = null;\n    }\n    myComponentTree.setModel(new DefaultTreeModel(new DefaultMutableTreeNode()));\n    myComponentTree.setEditor(activeFormEditor);\n    myComponentTree.setFormEditor(newEditor);\n    myPropertyInspector.setEditor(activeFormEditor);\n    if (activeFormEditor == null) {\n      myToolWindow.setAvailable(false, null);\n    }\n    else {\n      myComponentTreeBuilder = new ComponentTreeBuilder(myComponentTree, activeFormEditor);\n      myToolWindow.setAvailable(true, null);\n      myToolWindow.show(null);\n    }\n  }","id":50925,"modified_method":"private void processFileEditorChange(UIFormEditor newEditor) {\n    if (!myToolWindowReady || myToolWindowDisposed) return;\n    GuiEditor activeFormEditor = newEditor != null ? newEditor.getEditor() : null;\n    if (myToolWindow == null) {\n      if (activeFormEditor == null) return;\n      initToolWindow();\n    }\n    if (myComponentTreeBuilder != null) {\n      Disposer.dispose(myComponentTreeBuilder);\n      myComponentTreeBuilder = null;\n    }\n    myComponentTree.setModel(new DefaultTreeModel(new DefaultMutableTreeNode()));\n    myComponentTree.setEditor(activeFormEditor);\n    myComponentTree.setFormEditor(newEditor);\n    myPropertyInspector.setEditor(activeFormEditor);\n    if (activeFormEditor == null) {\n      myToolWindow.setAvailable(false, null);\n    }\n    else {\n      myComponentTreeBuilder = new ComponentTreeBuilder(myComponentTree, activeFormEditor);\n      myToolWindow.setAvailable(true, null);\n      myToolWindow.show(null);\n    }\n  }","commit_id":"7c8d02c773a081270b033b0eb24fd758183842f0","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void projectOpened() {\n    StartupManager.getInstance(myProject).registerPostStartupActivity(new Runnable() {\n      public void run() {\n        myToolWindowPanel = new MyToolWindowPanel();\n        myComponentTree = new ComponentTree(myProject);\n        final JScrollPane scrollPane = new JScrollPane(myComponentTree);\n        scrollPane.setPreferredSize(new Dimension(250, -1));\n        myComponentTree.initQuickFixManager(scrollPane.getViewport());\n        myPropertyInspector= new PropertyInspector(myProject, myComponentTree);\n        myToolWindowPanel.setFirstComponent(scrollPane);\n        myToolWindowPanel.setSecondComponent(myPropertyInspector);\n        myToolWindow = ToolWindowManager.getInstance(myProject).registerToolWindow(UIDesignerBundle.message(\"toolwindow.ui.designer\"),\n                                                                                   myToolWindowPanel,\n                                                                                   ToolWindowAnchor.LEFT);\n        myToolWindow.setIcon(IconLoader.getIcon(\"/com/intellij/uiDesigner/icons/toolWindowUIDesigner.png\"));\n        myToolWindow.setAvailable(false, null);\n      }\n    });\n  }","id":50926,"modified_method":"public void projectOpened() {\n    StartupManager.getInstance(myProject).registerPostStartupActivity(new Runnable() {\n      public void run() {\n        myToolWindowReady = true;\n      }\n    });\n  }","commit_id":"7c8d02c773a081270b033b0eb24fd758183842f0","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void projectOpened() {\n    if (!myMigrationManager.isMigrationRequired()) return;\n\n    StartupManager.getInstance(myProject).registerPostStartupActivity(new Runnable() {\n      public void run() {\n        LaterInvocator.invokeLater(new Runnable() {\n          @Override\n          public void run() {\n            VirtualFileManager.getInstance().syncRefresh();\n\n            ModelAccess.instance().runWriteAction(new Runnable() {\n              @Override\n              public void run() {\n                for (SModule module : myMpsProject.getModulesWithGenerators()) {\n                  for (SModel md : module.getModels()) {\n                    if (!(md instanceof EditableSModel)) continue;\n                    if (md.isReadOnly()) continue;\n\n                    ((EditableSModel) md).reloadFromSource();\n                  }\n                }\n              }\n            });\n\n            ProjectManagerEx.getInstance().reloadProject(myProject);\n\n            MigrationAssistantWizard wizard = new MigrationAssistantWizard(myProject);\n            wizard.showAndGetOk();\n          }\n        }, ModalityState.NON_MODAL);\n      }\n    });\n  }","id":50927,"modified_method":"@Override\n  public void projectOpened() {\n    if (!myMigrationManager.isMigrationRequired()) return;\n\n    StartupManager.getInstance(myProject).registerPostStartupActivity(new Runnable() {\n      public void run() {\n        ApplicationManager.getApplication().assertWriteAccessAllowed();\n\n        VirtualFileManager.getInstance().syncRefresh();\n        ProjectManagerEx.getInstance().reloadProject(myProject);\n\n        MigrationAssistantWizard wizard = new MigrationAssistantWizard(myProject);\n        wizard.showAndGetOk();\n      }\n    });\n  }","commit_id":"2f8a0592f275c0199e22bed3d033a8662ef9b6e9","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n    public void projectOpened() {\n        super.projectOpened();\n\n        StartupManager.getInstance(myProject).registerPostStartupActivity(new Runnable() {\n            @Override\n            public void run() {\n                ConfigureKotlinInProjectUtils.showConfigureKotlinNotificationIfNeeded(myProject);\n            }\n        });\n    }","id":50928,"modified_method":"@Override\n    public void projectOpened() {\n        super.projectOpened();\n\n        StartupManager.getInstance(myProject).registerPostStartupActivity(new Runnable() {\n            @Override\n            public void run() {\n                DumbService.getInstance(myProject).smartInvokeLater(new Runnable() {\n                    @Override\n                    public void run() {\n                        ConfigureKotlinInProjectUtils.showConfigureKotlinNotificationIfNeeded(myProject);\n                    }\n                });\n            }\n        });\n    }","commit_id":"37c47ac980603bbb9f43bc919d075527156b5084","url":"https://github.com/JetBrains/kotlin"},{"original_method":"public void projectClosed() {\n    ThreadUtils.runInUIThreadNoWait(new Runnable() {\n      public void run() {\n        unregisterLater();\n      }\n    });\n  }","id":50929,"modified_method":"public void projectClosed() {\n    unregister();\n  }","commit_id":"613638185076172eb3f3a66bf3105e108ea4ff89","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void projectOpened() {\n    StartupManager.getInstance(getProject()).registerPostStartupActivity(new Runnable() {\n      public void run() {\n        ThreadUtils.runInUIThreadNoWait(new Runnable() {\n          public void run() {\n            registerLater();\n          }\n        });\n      }\n    });\n  }","id":50930,"modified_method":"public void projectOpened() {\n    StartupManager.getInstance(getProject()).registerPostStartupActivity(new Runnable() {\n      public void run() {\n        registerLater();\n      }\n    });\n  }","commit_id":"613638185076172eb3f3a66bf3105e108ea4ff89","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static Collection<Problem> getNotMigrated(Iterable<SModule> modules, final MigrationComponent mc, @Nullable _FunctionTypes._void_P1_E0<? super Double> progressCallback, int maxErrors) {\n    return Sequence.fromIterable(modules).translate(new ITranslator2<SModule, Problem>() {\n      public Iterable<Problem> translate(final SModule module) {\n        Set<SLanguage> allLanguages = new SLanguageHierarchy(LanguageRegistry.getInstance(module.getRepository()), module.getUsedLanguages()).getExtended();\n        Iterable<MigrationScript> scripts = SetSequence.fromSet(allLanguages).translate(new ITranslator2<SLanguage, MigrationScript>() {\n          public Iterable<MigrationScript> translate(final SLanguage it) {\n            return new Iterable<MigrationScript>() {\n              public Iterator<MigrationScript> iterator() {\n                return new YieldingIterator<MigrationScript>() {\n                  private int __CP__ = 0;\n                  protected boolean moveToNext() {\n__loop__:\n                    do {\n__switch__:\n                      switch (this.__CP__) {\n                        case -1:\n                          assert false : \"Internal error\";\n                          return false;\n                        case 2:\n                          this._2_ver = 0;\n                        case 3:\n                          if (!(_2_ver < it.getLanguageVersion())) {\n                            this.__CP__ = 1;\n                            break;\n                          }\n                          this.__CP__ = 4;\n                          break;\n                        case 5:\n                          _2_ver++;\n                          this.__CP__ = 3;\n                          break;\n                        case 8:\n                          if (_7_script != null) {\n                            this.__CP__ = 9;\n                            break;\n                          }\n                          this.__CP__ = 5;\n                          break;\n                        case 10:\n                          this.__CP__ = 5;\n                          this.yield(_7_script);\n                          return true;\n                        case 0:\n                          this.__CP__ = 2;\n                          break;\n                        case 4:\n                          this._7_script = mc.fetchMigrationScript(new MigrationScriptReference(it, _2_ver), true);\n                          this.__CP__ = 8;\n                          break;\n                        case 9:\n                          this.__CP__ = 10;\n                          break;\n                        default:\n                          break __loop__;\n                      }\n                    } while (true);\n                    return false;\n                  }\n                  private int _2_ver;\n                  private MigrationScript _7_script;\n                };\n              }\n            };\n          }\n        });\n        return Sequence.fromIterable(scripts).translate(new ITranslator2<MigrationScript, Problem>() {\n          public Iterable<Problem> translate(MigrationScript script) {\n            return script.check(module);\n          }\n        });\n      }\n    }).take(maxErrors).toListSequence();\n  }","id":50931,"modified_method":"public static Collection<Problem> getNotMigrated(Iterable<SModule> modules, final MigrationComponent mc, @Nullable final _FunctionTypes._void_P1_E0<? super Double> progressCallback, int maxErrors) {\n    List<Tuples._2<MigrationScript, SModule>> scriptsApplied = Sequence.fromIterable(modules).translate(new ITranslator2<SModule, Tuples._2<MigrationScript, SModule>>() {\n      public Iterable<Tuples._2<MigrationScript, SModule>> translate(final SModule module) {\n        Set<SLanguage> allLanguages = new SLanguageHierarchy(LanguageRegistry.getInstance(module.getRepository()), module.getUsedLanguages()).getExtended();\n        Iterable<MigrationScript> scripts = SetSequence.fromSet(allLanguages).translate(new ITranslator2<SLanguage, MigrationScript>() {\n          public Iterable<MigrationScript> translate(final SLanguage it) {\n            return new Iterable<MigrationScript>() {\n              public Iterator<MigrationScript> iterator() {\n                return new YieldingIterator<MigrationScript>() {\n                  private int __CP__ = 0;\n                  protected boolean moveToNext() {\n__loop__:\n                    do {\n__switch__:\n                      switch (this.__CP__) {\n                        case -1:\n                          assert false : \"Internal error\";\n                          return false;\n                        case 2:\n                          this._2_ver = 0;\n                        case 3:\n                          if (!(_2_ver < it.getLanguageVersion())) {\n                            this.__CP__ = 1;\n                            break;\n                          }\n                          this.__CP__ = 4;\n                          break;\n                        case 5:\n                          _2_ver++;\n                          this.__CP__ = 3;\n                          break;\n                        case 8:\n                          if (_7_script != null) {\n                            this.__CP__ = 9;\n                            break;\n                          }\n                          this.__CP__ = 5;\n                          break;\n                        case 10:\n                          this.__CP__ = 5;\n                          this.yield(_7_script);\n                          return true;\n                        case 0:\n                          this.__CP__ = 2;\n                          break;\n                        case 4:\n                          this._7_script = mc.fetchMigrationScript(new MigrationScriptReference(it, _2_ver), true);\n                          this.__CP__ = 8;\n                          break;\n                        case 9:\n                          this.__CP__ = 10;\n                          break;\n                        default:\n                          break __loop__;\n                      }\n                    } while (true);\n                    return false;\n                  }\n                  private int _2_ver;\n                  private MigrationScript _7_script;\n                };\n              }\n            };\n          }\n        });\n        return Sequence.fromIterable(scripts).select(new ISelector<MigrationScript, Tuples._2<MigrationScript, SModule>>() {\n          public Tuples._2<MigrationScript, SModule> select(MigrationScript script) {\n            return MultiTuple.<MigrationScript,SModule>from(script, module);\n          }\n        });\n      }\n    }).toListSequence();\n    final int allSteps = ListSequence.fromList(scriptsApplied).count();\n    final Wrappers._int stepsPassed = new Wrappers._int(0);\n    return ListSequence.fromList(scriptsApplied).translate(new ITranslator2<Tuples._2<MigrationScript, SModule>, Problem>() {\n      public Iterable<Problem> translate(Tuples._2<MigrationScript, SModule> scriptModule) {\n        progressCallback.invoke(0.1 + 0.9 * stepsPassed.value++ / allSteps);\n        return scriptModule._0().check(scriptModule._1());\n      }\n    }).take(maxErrors).toListSequence();\n  }","commit_id":"e1ffe5db21ed9f2bf04210ff2d8fbfccecd07c0c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void projectOpened() {\n    // this is a hack for migration task purposes \n    if (RuntimeFlags.getTestMode().isInsideTestEnvironment()) {\n      return;\n    }\n\n    if (!(myState.migrationRequired)) {\n      addListeners();\n      checkMigrationNeeded();\n    } else {\n      saveAndSetTipsState();\n      StartupManager.getInstance(myProject).registerPostStartupActivity(new Runnable() {\n        public void run() {\n          ApplicationManager.getApplication().runWriteAction(new Runnable() {\n            public void run() {\n              syncRefresh();\n            }\n          });\n          ApplicationManager.getApplication().invokeLater(new Runnable() {\n            public void run() {\n              myState.migrationRequired = false;\n\n              myMpsProject.getRepository().getModelAccess().runWriteAction(new Runnable() {\n                public void run() {\n                  updateVersions(MigrationsUtil.getMigrateableModulesFromProject(myMpsProject));\n                }\n              });\n\n              final MigrationAssistantWizard wizard = new MigrationAssistantWizard(myProject, myMigrationManager, MigrationTrigger.this);\n              // final reload is needed to cleanup memory (unload models) and do possible switches (e.g. to a new persistence) \n              boolean finished = wizard.showAndGet();\n              restoreTipsState();\n              if (!(finished) && myErrors == null) {\n                return;\n              }\n\n              if (myErrors == null) {\n                ApplicationManager.getApplication().runWriteAction(new Runnable() {\n                  public void run() {\n                    ProjectManagerEx.getInstance().reloadProject(myProject);\n                  }\n                });\n              } else {\n                MigrationErrorWizardStep lastStep = as_feb5zp_a0a0a0k0a0a0a0b0a0a0a0b0a3a52(wizard.getCurrentStepObject(), MigrationErrorWizardStep.class);\n                if (lastStep == null) {\n                  return;\n                }\n\n                StartupManager.getInstance(myProject).runWhenProjectIsInitialized(new Runnable() {\n                  public void run() {\n                    ApplicationManager.getApplication().invokeLater(new Runnable() {\n                      public void run() {\n                        myMpsProject.getRepository().getModelAccess().runReadAction(new Runnable() {\n                          public void run() {\n                            MigrationOutputUtil.showProblems(myProject, myErrors.getProblems());\n                          }\n                        });\n                      }\n                    }, ModalityState.NON_MODAL);\n                  }\n                });\n              }\n            }\n          });\n        }\n      });\n    }\n  }","id":50932,"modified_method":"public void projectOpened() {\n    // this is a hack for migration task purposes \n    if (RuntimeFlags.getTestMode().isInsideTestEnvironment()) {\n      return;\n    }\n\n    if (!(myState.migrationRequired)) {\n      addListeners();\n      checkMigrationNeeded();\n    } else {\n      saveAndSetTipsState();\n      StartupManager.getInstance(myProject).registerPostStartupActivity(new Runnable() {\n        public void run() {\n          ApplicationManager.getApplication().runWriteAction(new Runnable() {\n            public void run() {\n              syncRefresh();\n            }\n          });\n          ApplicationManager.getApplication().invokeLater(new Runnable() {\n            public void run() {\n              myState.migrationRequired = false;\n\n              myMpsProject.getRepository().getModelAccess().runWriteAction(new Runnable() {\n                public void run() {\n                  updateVersions(MigrationsUtil.getMigrateableModulesFromProject(myMpsProject));\n                }\n              });\n\n              final MigrationAssistantWizard wizard = new MigrationAssistantWizard(myProject, myMigrationManager, MigrationTrigger.this);\n              // final reload is needed to cleanup memory (unload models) and do possible switches (e.g. to a new persistence) \n              boolean finished = wizard.showAndGet();\n              restoreTipsState();\n              if (!(finished) && myErrors == null) {\n                return;\n              }\n\n              if (myErrors == null) {\n                ApplicationManager.getApplication().runWriteAction(new Runnable() {\n                  public void run() {\n                    ProjectManagerEx.getInstance().reloadProject(myProject);\n                  }\n                });\n              } else {\n                MigrationErrorWizardStep lastStep = as_feb5zp_a0a0a0k0a0a0a0b0a0a0a0b0a3a52(wizard.getCurrentStepObject(), MigrationErrorWizardStep.class);\n                if (lastStep == null) {\n                  return;\n                }\n\n                StartupManager.getInstance(myProject).runWhenProjectIsInitialized(new Runnable() {\n                  public void run() {\n                    final Wrappers._T<List<Problem>> problems = new Wrappers._T<List<Problem>>();\n                    ProgressManager.getInstance().run(new Task.Modal(myProject, \"Collecting Errors\", false) {\n                      public void run(@NotNull final ProgressIndicator progressIndicator) {\n                        myMpsProject.getRepository().getModelAccess().runReadAction(new Runnable() {\n                          public void run() {\n                            problems.value = Sequence.fromIterable(myErrors.getProblems(progressIndicator)).toListSequence();\n                          }\n                        });\n                      }\n                    });\n                    ApplicationManager.getApplication().invokeLater(new Runnable() {\n                      public void run() {\n                        myMpsProject.getRepository().getModelAccess().runReadAction(new Runnable() {\n                          public void run() {\n                            MigrationOutputUtil.showProblems(myProject, problems.value);\n                          }\n                        });\n                      }\n                    }, ModalityState.NON_MODAL);\n                  }\n                });\n              }\n            }\n          });\n        }\n      });\n    }\n  }","commit_id":"e1ffe5db21ed9f2bf04210ff2d8fbfccecd07c0c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public String getMessage() {\n      if (!(myCanIgnore)) {\n        return \"Migration Assistant found some problems that prevent this project from being migrated.<br><br>\" + \"Try running migrations after correcting your project and/or adding necessary libraries.<br>\" + \"Migration Assistant will be started again on next project opening or it can be started \" + \"manually by choosing Tools->Run Migration Assistant from the main menu.<br><br>\" + \"Problems will be shown in Model Checker tool when the project is loaded.\";\n      } else {\n        return \"Migration Assistant found some broken references that prevent this project from being migrated.<br><br>\" + \"Try running migrations after correcting your project and/or adding necessary libraries.<br>\" + \"You can ignore all broken references and continue migration, but it can cause some migrations to run improperly.<br>\" + \"Migration Assistant will be started again on next project opening or it can be started \" + \"manually by choosing Tools->Run Migration Assistant from the main menu.<br><br>\" + \"Problems will be shown in Model Checker tool when the project is loaded.\";\n      }\n    }","id":50933,"modified_method":"public PreCheckError(boolean canIgnore) {\n      myCanIgnore = canIgnore;\n    }","commit_id":"e1ffe5db21ed9f2bf04210ff2d8fbfccecd07c0c","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  protected final void doCreateComponent(JComponent mainPanel) {\n    myList = new JBList(new DefaultListModel());\n    myList.setCellRenderer(new MigrationsListRenderer(myExecuted, Collections.emptySet()));\n    JPanel listPanel = new JPanel(new BorderLayout(5, 5));\n    listPanel.setBorder(BorderFactory.createCompoundBorder(BorderFactory.createEmptyBorder(0, 0, 2, 0), BorderFactory.createEtchedBorder()));\n    listPanel.add(new JBScrollPane(myList), BorderLayout.CENTER);\n    myProgress = new InlineProgressIndicator(true, myTask) {\n      @Override\n      protected boolean isFinished() {\n        return myIsComplete;\n      }\n    };\n    myProgress.setIndeterminate(false);\n    mainPanel.add(listPanel, BorderLayout.CENTER);\n    mainPanel.add(myProgress.getComponent(), BorderLayout.SOUTH);\n  }","id":50934,"modified_method":"@Override\n  protected final void doCreateComponent(JComponent mainPanel) {\n    myList = new JBList(new DefaultListModel());\n    myList.setCellRenderer(new MigrationsListRenderer(myExecuted, Collections.emptySet()));\n    JPanel listPanel = new JPanel(new BorderLayout(5, 5));\n    listPanel.setBorder(BorderFactory.createCompoundBorder(BorderFactory.createEmptyBorder(0, 0, 2, 0), BorderFactory.createEtchedBorder()));\n    listPanel.add(new JBScrollPane(myList), BorderLayout.CENTER);\n    myProgress = new InlineProgressIndicator(true, myTask) {\n      @Override\n      protected void queueProgressUpdate() {\n        if (ThreadUtils.isInEDT()) {\n          updateAndRepaint();\n        } else {\n          ApplicationManager.getApplication().invokeLater(new Runnable() {\n            public void run() {\n              updateAndRepaint();\n            }\n          }, myModalityState);\n        }\n      }\n      @Override\n      protected void queueRunningUpdate(@NotNull Runnable update) {\n        throw new UnsupportedOperationException();\n      }\n      @Override\n      protected boolean isFinished() {\n        return myIsComplete;\n      }\n    };\n    myProgress.setIndeterminate(false);\n    mainPanel.add(listPanel, BorderLayout.CENTER);\n    mainPanel.add(myProgress.getComponent(), BorderLayout.SOUTH);\n  }","commit_id":"e1ffe5db21ed9f2bf04210ff2d8fbfccecd07c0c","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  public void autostart(final _FunctionTypes._void_P0_E0 later) {\n    // this is needed to fully show the step before first migration is started \n    ApplicationManager.getApplication().invokeLater(new Runnable() {\n      public void run() {\n        myModalityState = ModalityState.stateForComponent(myList);\n        ApplicationManager.getApplication().executeOnPooledThread(new Runnable() {\n          public void run() {\n            ProgressManager.getInstance().runProcess(new Runnable() {\n              public void run() {\n                myTask.run(myProgress);\n                later.invoke();\n              }\n            }, myProgress);\n\n          }\n        });\n\n      }\n    });\n  }","id":50935,"modified_method":"@Override\n  public void autostart(final _FunctionTypes._void_P0_E0 later) {\n    // this is needed to fully show the step before first migration is started \n    ApplicationManager.getApplication().invokeLater(new Runnable() {\n      public void run() {\n        ApplicationManager.getApplication().executeOnPooledThread(new Runnable() {\n          public void run() {\n            ProgressManager.getInstance().runProcess(new Runnable() {\n              public void run() {\n                myTask.run(myProgress);\n                later.invoke();\n              }\n            }, myProgress);\n\n          }\n        });\n\n      }\n    });\n  }","commit_id":"e1ffe5db21ed9f2bf04210ff2d8fbfccecd07c0c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void setFraction(final ProgressIndicator p, final double fraction) {\n    ApplicationManager.getApplication().invokeLater(new Runnable() {\n      public void run() {\n        p.setFraction(fraction);\n      }\n    }, ModalityState.any());\n  }","id":50936,"modified_method":"public void setFraction(ProgressIndicator p, double fraction) {\n    p.setFraction(fraction);\n  }","commit_id":"e1ffe5db21ed9f2bf04210ff2d8fbfccecd07c0c","url":"https://github.com/JetBrains/MPS"},{"original_method":"private void doRun(final ProgressIndicator progress) {\n    Map<ProjectMigrationWithOptions.Option, Object> options = myInitialStep.getOptions();\n    setFraction(progress, ProgressEstimation.initial());\n\n    boolean cleanNotification = false;\n    List<MigrationManager.MigrationStep> cleanupMigrations = ListSequence.fromList(new ArrayList<MigrationManager.MigrationStep>());\n    int cleanupStepsCount = myManager.projectStepsCount(true);\n    int stepNum = 0;\n    while (true) {\n      MigrationManager.MigrationStep step = myManager.nextProjectStep(options, true);\n      if (step == null) {\n        break;\n      }\n\n      ListSequence.fromList(cleanupMigrations).addElement(step);\n      if (!(executeSingleStep(step))) {\n        break;\n      }\n\n      if (!(cleanNotification)) {\n        cleanNotification = true;\n        addElementToMigrationList(\"Cleaning project...\");\n      }\n\n      stepNum++;\n      setFraction(progress, ProgressEstimation.cleanupMigrations(1.0 * stepNum / cleanupStepsCount));\n    }\n\n    addElementToMigrationList(\"Checking migrations consistency...\");\n    List<ScriptApplied.ScriptAppliedReference> missingMigrations = myManager.getMissingMigrations();\n    setFraction(progress, ProgressEstimation.migrationsCheck(1.0));\n    if (ListSequence.fromList(missingMigrations).isNotEmpty()) {\n      myErrorContainer.setErrorDescriptor(new MigrationsProgressWizardStep.MigrationsMissingError(missingMigrations));\n      addElementToMigrationList(\"Some migrations are missing. Press 'Next' to continue.\");\n      return;\n    }\n\n    addElementToMigrationList(\"Checking models...\");\n    final jetbrains.mps.project.Project mpsProject = getMPSProject();\n    mpsProject.getRepository().getModelAccess().runReadAction(new Runnable() {\n      public void run() {\n        Iterable<SModule> modules = MigrationsUtil.getMigrateableModulesFromProject(mpsProject);\n        if (MigrationCheckUtil.haveProblems(modules, mySearchBrokenReferences, new _FunctionTypes._void_P1_E0<Double>() {\n          public void invoke(Double fraction) {\n            setFraction(progress, ProgressEstimation.preCheck(fraction));\n          }\n        })) {\n          myErrorContainer.setErrorDescriptor(new MigrationsProgressWizardStep.PreCheckError());\n        }\n      }\n    });\n    if (myErrorContainer.getErrorDescriptor() != null) {\n      // start cleanup migrations next time migration is started \n      for (MigrationManager.MigrationStep cleanupMigration : ListSequence.fromList(cleanupMigrations)) {\n        cleanupMigration.forceExecutionNextTime();\n      }\n      addElementToMigrationList(\"Can't start migration: errors detected. Press 'Next' to continue.\");\n      return;\n    }\n\n    int projectStepsCount = myManager.projectStepsCount(false);\n    stepNum = 0;\n    while (executeSingleStep(myManager.nextProjectStep(options, false))) {\n      stepNum++;\n      setFraction(progress, ProgressEstimation.projectMigrations(1.0 * stepNum / projectStepsCount));\n    }\n    if (myErrorContainer.getErrorDescriptor() != null) {\n      addElementToMigrationList(\"Exception while running migration. Press 'Next' to continue.\");\n      return;\n    }\n\n    int languageStepsCount = myManager.moduleStepsCount();\n    stepNum = 0;\n    while (executeSingleStep(myManager.nextModuleStep())) {\n      stepNum++;\n      setFraction(progress, ProgressEstimation.languageMigrations(1.0 * stepNum / languageStepsCount));\n    }\n    if (myErrorContainer.getErrorDescriptor() != null) {\n      addElementToMigrationList(\"Exception while running migration. Press 'Next' to continue.\");\n      return;\n    }\n\n    addElementToMigrationList(\"Saving changed models...\");\n\n    mpsProject.getModelAccess().runWriteInEDT(new Runnable() {\n      public void run() {\n        mpsProject.getRepository().saveAll();\n      }\n    });\n    setFraction(progress, ProgressEstimation.saving(1.0));\n\n    final Wrappers._boolean haveBadCode = new Wrappers._boolean(false);\n    addElementToMigrationList(\"Checking models...\");\n    mpsProject.getRepository().getModelAccess().runReadAction(new Runnable() {\n      public void run() {\n        Iterable<SModule> modules = MigrationsUtil.getMigrateableModulesFromProject(mpsProject);\n        final Wrappers._int moduleNum = new Wrappers._int(0);\n\n        haveBadCode.value = MigrationCheckUtil.haveProblems(modules, mySearchBrokenReferences, new _FunctionTypes._void_P1_E0<Double>() {\n          public void invoke(Double fraction) {\n            moduleNum.value++;\n            setFraction(progress, ProgressEstimation.postCheck(fraction));\n          }\n        });\n      }\n    });\n\n    addElementToMigrationList(\"Finding not migrated code...\");\n    mpsProject.getRepository().getModelAccess().runReadAction(new Runnable() {\n      public void run() {\n        Iterable<SModule> modules = MigrationsUtil.getMigrateableModulesFromProject(mpsProject);\n        final Wrappers._int moduleNum = new Wrappers._int(0);\n\n        boolean haveNotMigrated = MigrationCheckUtil.haveNotMigrated(modules, getMPSProject().getComponent(MigrationComponent.class), new _FunctionTypes._void_P1_E0<Double>() {\n          public void invoke(Double fraction) {\n            moduleNum.value++;\n            setFraction(progress, ProgressEstimation.nonMigratedCheck(fraction));\n          }\n        });\n\n        if (haveBadCode.value || haveNotMigrated) {\n          myErrorContainer.setErrorDescriptor(new MigrationsProgressWizardStep.PostCheckError(haveBadCode.value, haveNotMigrated));\n        }\n      }\n    });\n    if (myErrorContainer.getErrorDescriptor() != null) {\n      addElementToMigrationList(\"Problems are detected after executing migrations. Press 'Next' to continue.\");\n      return;\n    }\n\n    addElementToMigrationList(\"Done!\");\n  }","id":50937,"modified_method":"private void doRun(final ProgressIndicator progress) {\n    Map<ProjectMigrationWithOptions.Option, Object> options = myInitialStep.getOptions();\n    setFraction(progress, ProgressEstimation.initial());\n\n    boolean cleanNotification = false;\n    List<MigrationManager.MigrationStep> cleanupMigrations = ListSequence.fromList(new ArrayList<MigrationManager.MigrationStep>());\n    int cleanupStepsCount = myManager.projectStepsCount(true);\n    int stepNum = 0;\n    while (true) {\n      MigrationManager.MigrationStep step = myManager.nextProjectStep(options, true);\n      if (step == null) {\n        break;\n      }\n\n      ListSequence.fromList(cleanupMigrations).addElement(step);\n      if (!(executeSingleStep(step))) {\n        break;\n      }\n\n      if (!(cleanNotification)) {\n        cleanNotification = true;\n        addElementToMigrationList(\"Cleaning project...\");\n      }\n\n      stepNum++;\n      setFraction(progress, ProgressEstimation.cleanupMigrations(1.0 * stepNum / cleanupStepsCount));\n    }\n\n    addElementToMigrationList(\"Checking migrations consistency...\");\n    List<ScriptApplied.ScriptAppliedReference> missingMigrations = myManager.getMissingMigrations();\n    setFraction(progress, ProgressEstimation.migrationsCheck(1.0));\n    if (ListSequence.fromList(missingMigrations).isNotEmpty()) {\n      myErrorContainer.setErrorDescriptor(new MigrationsProgressWizardStep.MigrationsMissingError(missingMigrations));\n      addElementToMigrationList(\"Some migrations are missing. Press 'Next' to continue.\");\n      return;\n    }\n\n    addElementToMigrationList(\"Checking models...\");\n    final jetbrains.mps.project.Project mpsProject = getMPSProject();\n    mpsProject.getRepository().getModelAccess().runReadAction(new Runnable() {\n      public void run() {\n        Iterable<SModule> modules = MigrationsUtil.getMigrateableModulesFromProject(mpsProject);\n        if (MigrationCheckUtil.haveProblems(modules, mySearchBrokenReferences, new _FunctionTypes._void_P1_E0<Double>() {\n          public void invoke(Double fraction) {\n            setFraction(progress, ProgressEstimation.preCheck(fraction));\n          }\n        })) {\n          boolean canIgnore = mySearchBrokenReferences && !(MigrationCheckUtil.haveProblems(modules, false, new _FunctionTypes._void_P1_E0<Double>() {\n            public void invoke(Double fraction) {\n              setFraction(progress, ProgressEstimation.fallbackPreCheck(fraction));\n            }\n          }));\n          myErrorContainer.setErrorDescriptor(new MigrationsProgressWizardStep.PreCheckError(canIgnore));\n        }\n      }\n    });\n    if (myErrorContainer.getErrorDescriptor() != null) {\n      // start cleanup migrations next time migration is started \n      for (MigrationManager.MigrationStep cleanupMigration : ListSequence.fromList(cleanupMigrations)) {\n        cleanupMigration.forceExecutionNextTime();\n      }\n      addElementToMigrationList(\"Can't start migration: errors detected. Press 'Next' to continue.\");\n      return;\n    }\n\n    int projectStepsCount = myManager.projectStepsCount(false);\n    stepNum = 0;\n    while (executeSingleStep(myManager.nextProjectStep(options, false))) {\n      stepNum++;\n      setFraction(progress, ProgressEstimation.projectMigrations(1.0 * stepNum / projectStepsCount));\n    }\n    if (myErrorContainer.getErrorDescriptor() != null) {\n      addElementToMigrationList(\"Exception while running migration. Press 'Next' to continue.\");\n      return;\n    }\n\n    int languageStepsCount = myManager.moduleStepsCount();\n    stepNum = 0;\n    while (executeSingleStep(myManager.nextModuleStep())) {\n      stepNum++;\n      setFraction(progress, ProgressEstimation.languageMigrations(1.0 * stepNum / languageStepsCount));\n    }\n    if (myErrorContainer.getErrorDescriptor() != null) {\n      addElementToMigrationList(\"Exception while running migration. Press 'Next' to continue.\");\n      return;\n    }\n\n    addElementToMigrationList(\"Saving changed models...\");\n\n    mpsProject.getModelAccess().runWriteInEDT(new Runnable() {\n      public void run() {\n        mpsProject.getRepository().saveAll();\n      }\n    });\n    setFraction(progress, ProgressEstimation.saving(1.0));\n\n    final Wrappers._boolean haveBadCode = new Wrappers._boolean(false);\n    addElementToMigrationList(\"Checking models...\");\n    mpsProject.getRepository().getModelAccess().runReadAction(new Runnable() {\n      public void run() {\n        Iterable<SModule> modules = MigrationsUtil.getMigrateableModulesFromProject(mpsProject);\n        final Wrappers._int moduleNum = new Wrappers._int(0);\n\n        haveBadCode.value = MigrationCheckUtil.haveProblems(modules, mySearchBrokenReferences, new _FunctionTypes._void_P1_E0<Double>() {\n          public void invoke(Double fraction) {\n            moduleNum.value++;\n            setFraction(progress, ProgressEstimation.postCheck(fraction));\n          }\n        });\n      }\n    });\n\n    addElementToMigrationList(\"Finding not migrated code...\");\n    mpsProject.getRepository().getModelAccess().runReadAction(new Runnable() {\n      public void run() {\n        Iterable<SModule> modules = MigrationsUtil.getMigrateableModulesFromProject(mpsProject);\n        final Wrappers._int moduleNum = new Wrappers._int(0);\n\n        boolean haveNotMigrated = MigrationCheckUtil.haveNotMigrated(modules, getMPSProject().getComponent(MigrationComponent.class), new _FunctionTypes._void_P1_E0<Double>() {\n          public void invoke(Double fraction) {\n            moduleNum.value++;\n            setFraction(progress, ProgressEstimation.nonMigratedCheck(fraction));\n          }\n        });\n\n        if (haveBadCode.value || haveNotMigrated) {\n          myErrorContainer.setErrorDescriptor(new MigrationsProgressWizardStep.PostCheckError(haveBadCode.value, haveNotMigrated));\n        }\n      }\n    });\n    if (myErrorContainer.getErrorDescriptor() != null) {\n      addElementToMigrationList(\"Problems are detected after executing migrations. Press 'Next' to continue.\");\n      return;\n    }\n\n    addElementToMigrationList(\"Done!\");\n  }","commit_id":"e1ffe5db21ed9f2bf04210ff2d8fbfccecd07c0c","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  public void _init() {\n    super._init();\n    if (!(myInitialized)) {\n      myIsComplete = false;\n      myErrorContainer.setErrorDescriptor(null);\n      myInitialized = true;\n    }\n  }","id":50938,"modified_method":"@Override\n  public void _init() {\n    super._init();\n    if (!(myInitialized)) {\n      myModalityState = ModalityState.stateForComponent(myList);\n      myIsComplete = false;\n      myErrorContainer.setErrorDescriptor(null);\n      myInitialized = true;\n    }\n  }","commit_id":"e1ffe5db21ed9f2bf04210ff2d8fbfccecd07c0c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void projectOpened(Project project) {\n    if (!myVeryFirstProjectOpening || !GeneralSettings.getInstance().showTipsOnStartup()) {\n      return;\n    }\n\n    myVeryFirstProjectOpening = false;\n\n    StartupManager.getInstance(project).registerPostStartupActivity(new Runnable() {\n      public void run() {\n        if (myDoNotShowThisTime) return;\n        new TipDialog().show();\n      }\n    });\n  }","id":50939,"modified_method":"public void projectOpened(final Project project) {\n    if (!myVeryFirstProjectOpening || !GeneralSettings.getInstance().showTipsOnStartup()) {\n      return;\n    }\n\n    myVeryFirstProjectOpening = false;\n\n    StartupManager.getInstance(project).registerPostStartupActivity(new Runnable() {\n      public void run() {\n        if (myDoNotShowThisTime) return;\n        ToolWindowManager.getInstance(project).invokeLater(new Runnable() {\n          public void run() {\n            ToolWindowManager.getInstance(project).invokeLater(new Runnable() {\n              public void run() {\n                new TipDialog().show();\n              }\n            });\n          }\n        });\n      }\n    });\n  }","commit_id":"ef4955840746adf40b6741d4db87965783d320ce","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void projectClosed() {\n    unregister();\n  }","id":50940,"modified_method":"public void projectClosed() {\n    ThreadUtils.runInUIThreadNoWait(new Runnable() {\n      public void run() {\n        unregister();\n      }\n    });\n  }","commit_id":"ae4b62d1efa05bbb204725028af74db8965d8387","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void projectOpened() {\n    StartupManager.getInstance(getProject()).registerPostStartupActivity(new Runnable() {\n      public void run() {\n        register();\n      }\n    });\n  }","id":50941,"modified_method":"public void projectOpened() {\n    StartupManager.getInstance(getProject()).registerPostStartupActivity(new Runnable() {\n      public void run() {\n        ThreadUtils.runInUIThreadNoWait(new Runnable() {\n          public void run() {\n            register();\n          }\n        });\n      }\n    });\n  }","commit_id":"ae4b62d1efa05bbb204725028af74db8965d8387","url":"https://github.com/JetBrains/MPS"},{"original_method":"@NotNull\n  public Module createAndCommit(ModifiableModuleModel moduleModel) throws InvalidDataException, ConfigurationException, IOException,\n                                                                          JDOMException, ModuleWithNameAlreadyExists,\n                                                                          ModuleCircularDependencyException {\n    final Module module = createModule(moduleModel);\n    moduleModel.commit();\n    StartupManager.getInstance(module.getProject()).registerPostStartupActivity(new Runnable() {\n\n      public void run() {\n        addSupport(module, ModuleRootManager.getInstance(module).getModifiableModel());\n      }\n    });\n    return module;\n  }","id":50942,"modified_method":"@NotNull\n  public Module createAndCommit(ModifiableModuleModel moduleModel, boolean runFromProjectWizard) throws\n                                                                                                 InvalidDataException,\n                                                                                                 ConfigurationException,\n                                                                                                 IOException,\n                                                                                                 JDOMException,\n                                                                                                 ModuleWithNameAlreadyExists,\n                                                                                                 ModuleCircularDependencyException {\n    final Module module = createModule(moduleModel);\n    moduleModel.commit();\n\n    final Runnable runnable = new Runnable() {\n\n      public void run() {\n        addSupport(module);\n      }\n    };\n    if (runFromProjectWizard) {\n      StartupManager.getInstance(module.getProject()).registerPostStartupActivity(runnable);\n    }\n    else {\n      ApplicationManager.getApplication().invokeLater(runnable);\n    }\n    return module;\n  }","commit_id":"5afa8227642d86604f6b0a75b2eda57e6b45c4b2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void addSupport(Module module, ModifiableRootModel rootModel) {\n\n    if (myAddSupportContexts != null) {\n      for (AddSupportContext supportContext: myAddSupportContexts) {\n        if (supportContext.isAddSupport()) {\n          supportContext.installSupport(module, rootModel);\n        }\n      }\n    }\n  }","id":50943,"modified_method":"public void addSupport(Module module) {\n\n    ModifiableRootModel rootModel = ModuleRootManager.getInstance(module).getModifiableModel();\n    if (myAddSupportContexts != null) {\n      for (AddSupportContext supportContext : myAddSupportContexts) {\n        if (supportContext.isAddSupport()) {\n          supportContext.installSupport(module, rootModel);\n        }\n      }\n    }\n  }","commit_id":"5afa8227642d86604f6b0a75b2eda57e6b45c4b2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void actionPerformed(AnActionEvent e) {\n    final Project project = getProject(e);\n    if (project == null) {\n      return;\n    }\n    final AddModuleWizard wizard = new AddModuleWizard(project, new DefaultModulesProvider(project));\n\n    wizard.show();\n\n    if (wizard.isOK()) {\n      final ModuleBuilder moduleBuilder = wizard.getModuleBuilder();\n      Exception ex = ApplicationManager.getApplication().runWriteAction(new Computable<Exception>() {\n        public Exception compute() {\n          try {\n            final ModifiableModuleModel moduleModel = ModuleManager.getInstance(project).getModifiableModel();\n            moduleBuilder.createAndCommit(moduleModel);\n            return null;\n          }\n          catch (Exception e) {\n            return e;\n          }\n        }\n      });\n      if (ex != null) {\n        if (ex instanceof LoadCancelledException) {\n          LoadCancelledException cancelled = (LoadCancelledException)ex;\n          Messages.showInfoMessage(\n            ProjectBundle.message(\"module.new.creation.cancelled.message\", cancelled.getIssuer().getComponentName(), cancelled.getMessage()),\n            ProjectBundle.message(\"module.new.creation.cancelled.title\"));\n        } else {\n          Messages.showErrorDialog(ProjectBundle.message(\"module.new.error.message\", ex.getMessage()),\n                                   ProjectBundle.message(\"module.new.error.title\"));\n        }\n      }\n    }\n  }","id":50944,"modified_method":"public void actionPerformed(AnActionEvent e) {\n    final Project project = getProject(e);\n    if (project == null) {\n      return;\n    }\n    final AddModuleWizard wizard = new AddModuleWizard(project, new DefaultModulesProvider(project));\n\n    wizard.show();\n\n    if (wizard.isOK()) {\n      final ModuleBuilder moduleBuilder = wizard.getModuleBuilder();\n      Exception ex = ApplicationManager.getApplication().runWriteAction(new Computable<Exception>() {\n        public Exception compute() {\n          try {\n            final ModifiableModuleModel moduleModel = ModuleManager.getInstance(project).getModifiableModel();\n            moduleBuilder.createAndCommit(moduleModel, false);\n            return null;\n          }\n          catch (Exception e) {\n            return e;\n          }\n        }\n      });\n      if (ex != null) {\n        if (ex instanceof LoadCancelledException) {\n          LoadCancelledException cancelled = (LoadCancelledException)ex;\n          Messages.showInfoMessage(\n            ProjectBundle.message(\"module.new.creation.cancelled.message\", cancelled.getIssuer().getComponentName(), cancelled.getMessage()),\n            ProjectBundle.message(\"module.new.creation.cancelled.title\"));\n        } else {\n          Messages.showErrorDialog(ProjectBundle.message(\"module.new.error.message\", ex.getMessage()),\n                                   ProjectBundle.message(\"module.new.error.title\"));\n        }\n      }\n    }\n  }","commit_id":"5afa8227642d86604f6b0a75b2eda57e6b45c4b2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static void createNewProject(Project projectToClose) {\n    AddModuleWizard dialog = new AddModuleWizard(null, ModulesProvider.EMPTY_MODULES_PROVIDER);\n    dialog.show();\n    if (!dialog.isOK()) {\n      return;\n    }\n\n    final ProjectManagerEx projectManager = ProjectManagerEx.getInstanceEx();\n    final String projectFilePath = dialog.getNewProjectFilePath();\n\n    final Project newProject = projectManager.newProject(projectFilePath, true, false);\n\n    final ProjectJdk jdk = dialog.getNewProjectJdk();\n    if (jdk != null) {\n      CommandProcessor.getInstance().executeCommand(newProject, new Runnable() {\n        public void run() {\n          ApplicationManager.getApplication().runWriteAction(new Runnable() {\n            public void run() {\n              final ProjectRootManagerEx projectRootManager = (ProjectRootManagerEx)ProjectRootManager.getInstance(newProject);\n              projectRootManager.setProjectJdk(jdk);\n              projectRootManager.setLanguageLevel(getDefaultLanguageLevel(jdk.getVersionString()));\n            }\n          });\n        }\n      }, null, null);\n    }\n\n    final String compileOutput = dialog.getNewCompileOutput();\n    if (compileOutput != null){\n      CommandProcessor.getInstance().executeCommand(newProject, new Runnable() {\n        public void run() {\n          ApplicationManager.getApplication().runWriteAction(new Runnable() {\n            public void run() {\n              final ProjectRootManagerEx projectRootManager = (ProjectRootManagerEx)ProjectRootManager.getInstance(newProject);\n              String canonicalPath = compileOutput;\n              try {\n                canonicalPath = new File(compileOutput).getCanonicalPath();\n              }\n              catch (IOException e) {\n                //file doesn't exist\n              }\n              canonicalPath = FileUtil.toSystemIndependentName(canonicalPath);\n              projectRootManager.setCompilerOutputUrl(VfsUtil.pathToUrl(canonicalPath));\n            }\n          });\n        }\n      }, null, null);\n    }\n\n    newProject.save();\n\n    Project[] openProjects = ProjectManager.getInstance().getOpenProjects();\n    if (openProjects.length > 0) {\n      int exitCode = Messages.showDialog(\n        IdeBundle.message(\"prompt.open.project.in.new.frame\"),\n        IdeBundle.message(\"title.new.project\"),\n        new String[]{IdeBundle.message(\"button.yes\"), IdeBundle.message(\"button.no\")},\n        1,\n        Messages.getQuestionIcon()\n      );\n      if (exitCode == 1) { // \"No\" option\n        closeProject(projectToClose != null ? projectToClose : openProjects[openProjects.length - 1]);\n      }\n    }\n\n    final ModuleBuilder moduleBuilder = dialog.getModuleBuilder();\n    if (moduleBuilder != null) {\n      Exception ex = ApplicationManager.getApplication().runWriteAction(new Computable<Exception>() {\n        public Exception compute() {\n          try {\n            final ModifiableModuleModel moduleModel = ModuleManager.getInstance(newProject).getModifiableModel();\n            moduleBuilder.createAndCommit(moduleModel);\n            return null;\n          }\n          catch (Exception e) {\n            return e;\n          }\n        }\n      });\n      if (ex != null) {\n        Messages.showErrorDialog(IdeBundle.message(\"error.adding.module.to.project\", ex.getMessage()),\n                                 IdeBundle.message(\"title.add.module\"));\n      }\n    }\n\n    StartupManager.getInstance(newProject).registerPostStartupActivity(new Runnable() {\n      public void run() {\n        // ensure the dialog is shown after all startup activities are done\n        SwingUtilities.invokeLater(new Runnable() {\n          public void run() {\n            final ToolWindow toolWindow = ToolWindowManager.getInstance(newProject).getToolWindow(ToolWindowId.PROJECT_VIEW);\n            if (toolWindow != null) {\n              toolWindow.activate(null);\n            }\n            if (moduleBuilder == null) {\n              ModulesConfigurator.showDialog(newProject, null, null, true);\n            }\n          }\n        });\n      }\n    });\n\n    updateLastProjectLocation(projectFilePath);\n\n    projectManager.openProject(newProject);\n  }","id":50945,"modified_method":"public static void createNewProject(Project projectToClose) {\n    AddModuleWizard dialog = new AddModuleWizard(null, ModulesProvider.EMPTY_MODULES_PROVIDER);\n    dialog.show();\n    if (!dialog.isOK()) {\n      return;\n    }\n\n    final ProjectManagerEx projectManager = ProjectManagerEx.getInstanceEx();\n    final String projectFilePath = dialog.getNewProjectFilePath();\n\n    final Project newProject = projectManager.newProject(projectFilePath, true, false);\n\n    final ProjectJdk jdk = dialog.getNewProjectJdk();\n    if (jdk != null) {\n      CommandProcessor.getInstance().executeCommand(newProject, new Runnable() {\n        public void run() {\n          ApplicationManager.getApplication().runWriteAction(new Runnable() {\n            public void run() {\n              final ProjectRootManagerEx projectRootManager = (ProjectRootManagerEx)ProjectRootManager.getInstance(newProject);\n              projectRootManager.setProjectJdk(jdk);\n              projectRootManager.setLanguageLevel(getDefaultLanguageLevel(jdk.getVersionString()));\n            }\n          });\n        }\n      }, null, null);\n    }\n\n    final String compileOutput = dialog.getNewCompileOutput();\n    if (compileOutput != null){\n      CommandProcessor.getInstance().executeCommand(newProject, new Runnable() {\n        public void run() {\n          ApplicationManager.getApplication().runWriteAction(new Runnable() {\n            public void run() {\n              final ProjectRootManagerEx projectRootManager = (ProjectRootManagerEx)ProjectRootManager.getInstance(newProject);\n              String canonicalPath = compileOutput;\n              try {\n                canonicalPath = new File(compileOutput).getCanonicalPath();\n              }\n              catch (IOException e) {\n                //file doesn't exist\n              }\n              canonicalPath = FileUtil.toSystemIndependentName(canonicalPath);\n              projectRootManager.setCompilerOutputUrl(VfsUtil.pathToUrl(canonicalPath));\n            }\n          });\n        }\n      }, null, null);\n    }\n\n    newProject.save();\n\n    Project[] openProjects = ProjectManager.getInstance().getOpenProjects();\n    if (openProjects.length > 0) {\n      int exitCode = Messages.showDialog(\n        IdeBundle.message(\"prompt.open.project.in.new.frame\"),\n        IdeBundle.message(\"title.new.project\"),\n        new String[]{IdeBundle.message(\"button.yes\"), IdeBundle.message(\"button.no\")},\n        1,\n        Messages.getQuestionIcon()\n      );\n      if (exitCode == 1) { // \"No\" option\n        closeProject(projectToClose != null ? projectToClose : openProjects[openProjects.length - 1]);\n      }\n    }\n\n    final ModuleBuilder moduleBuilder = dialog.getModuleBuilder();\n    if (moduleBuilder != null) {\n      Exception ex = ApplicationManager.getApplication().runWriteAction(new Computable<Exception>() {\n        public Exception compute() {\n          try {\n            final ModifiableModuleModel moduleModel = ModuleManager.getInstance(newProject).getModifiableModel();\n            moduleBuilder.createAndCommit(moduleModel, true);\n            return null;\n          }\n          catch (Exception e) {\n            return e;\n          }\n        }\n      });\n      if (ex != null) {\n        Messages.showErrorDialog(IdeBundle.message(\"error.adding.module.to.project\", ex.getMessage()),\n                                 IdeBundle.message(\"title.add.module\"));\n      }\n    }\n\n    StartupManager.getInstance(newProject).registerPostStartupActivity(new Runnable() {\n      public void run() {\n        // ensure the dialog is shown after all startup activities are done\n        SwingUtilities.invokeLater(new Runnable() {\n          public void run() {\n            final ToolWindow toolWindow = ToolWindowManager.getInstance(newProject).getToolWindow(ToolWindowId.PROJECT_VIEW);\n            if (toolWindow != null) {\n              toolWindow.activate(null);\n            }\n            if (moduleBuilder == null) {\n              ModulesConfigurator.showDialog(newProject, null, null, true);\n            }\n          }\n        });\n      }\n    });\n\n    updateLastProjectLocation(projectFilePath);\n\n    projectManager.openProject(newProject);\n  }","commit_id":"5afa8227642d86604f6b0a75b2eda57e6b45c4b2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected Repository getRepository() throws RepositoryException {\n        if (repository == null) {\n            MicroKernel mk = new MicroKernelImpl();\n            ScheduledExecutorService executorService = getExecutor();\n            SecurityProvider securityProvider = new SecurityProviderImpl();\n            repository  = new RepositoryImpl(mk, executorService, securityProvider);\n        }\n        return repository;\n    }","id":50946,"modified_method":"protected Repository getRepository() throws RepositoryException {\n        if (repository == null) {\n            repository  = new Jcr().with(getExecutor()).createRepository();\n        }\n        return repository;\n    }","commit_id":"015934c9ec8aab45019149fec3136aa7a0d6c233","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"private static Repository getRepository(\n            URI uri, Map<String, String> parameters)\n            throws RepositoryException {\n        // TODO correctly interpret uri\n        return new RepositoryImpl(new MicroKernelImpl(), Executors.newScheduledThreadPool(0), new SecurityProviderImpl());\n    }","id":50947,"modified_method":"private static Repository getRepository(\n            URI uri, Map<String, String> parameters)\n            throws RepositoryException {\n        // TODO correctly interpret uri\n        return new Jcr().createRepository();\n    }","commit_id":"015934c9ec8aab45019149fec3136aa7a0d6c233","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"/**\n     * Constructor as required by the JCR TCK.\n     * \n     * @param settings repository settings\n     * @throws javax.jcr.RepositoryException If an error occurs.\n     */\n    public OakRepositoryStub(Properties settings) throws RepositoryException {\n        super(settings);\n\n        // TODO: OAK-17. workaround for missing test configuration\n        Configuration.setConfiguration(new OakConfiguration());\n\n        String dir = \"target/mk-tck-\" + System.currentTimeMillis();\n        repository = new RepositoryImpl(\n                new MicroKernelImpl(dir),\n                Executors.newScheduledThreadPool(1),\n                new SecurityProviderImpl());\n\n        Session session = repository.login(superuser);\n        try {\n            TestContentLoader loader = new TestContentLoader();\n            loader.loadTestContent(session);\n        } catch (Exception e) {\n            e.printStackTrace(System.err);\n        } finally {\n            session.logout();\n        }\n    }","id":50948,"modified_method":"/**\n     * Constructor as required by the JCR TCK.\n     * \n     * @param settings repository settings\n     * @throws javax.jcr.RepositoryException If an error occurs.\n     */\n    public OakRepositoryStub(Properties settings) throws RepositoryException {\n        super(settings);\n\n        // TODO: OAK-17. workaround for missing test configuration\n        Configuration.setConfiguration(new OakConfiguration());\n\n        String dir = \"target/mk-tck-\" + System.currentTimeMillis();\n        repository = new Jcr(new MicroKernelImpl(dir))\n            .with(Executors.newScheduledThreadPool(1))\n            .createRepository();\n\n        Session session = repository.login(superuser);\n        try {\n            TestContentLoader loader = new TestContentLoader();\n            loader.loadTestContent(session);\n        } catch (Exception e) {\n            e.printStackTrace(System.err);\n        } finally {\n            session.logout();\n        }\n    }","commit_id":"015934c9ec8aab45019149fec3136aa7a0d6c233","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"@Before\n    public void setUp() throws Exception {\n        super.setUp();\n\n        // create a separate repository in order to be able to remove registered privileges.\n        String dir = \"target/mk-tck-\" + System.currentTimeMillis();\n        repository = new RepositoryImpl(new MicroKernelImpl(dir),\n                Executors.newScheduledThreadPool(1),\n                new SecurityProviderImpl());\n        session = getAdminSession();\n        privilegeManager = getPrivilegeManager(session);\n\n    }","id":50949,"modified_method":"@Before\n    public void setUp() throws Exception {\n        super.setUp();\n\n        // create a separate repository in order to be able to remove registered privileges.\n        String dir = \"target/mk-tck-\" + System.currentTimeMillis();\n        repository = new Jcr(new MicroKernelImpl(dir))\n            .with(Executors.newScheduledThreadPool(1))\n            .createRepository();\n        session = getAdminSession();\n        privilegeManager = getPrivilegeManager(session);\n\n    }","commit_id":"015934c9ec8aab45019149fec3136aa7a0d6c233","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"public HTTP2Connection(ByteBufferPool byteBufferPool, Executor executor, EndPoint endPoint, Parser parser, ISession session, int bufferSize)\n    {\n        super(endPoint, executor);\n        this.byteBufferPool = byteBufferPool;\n        this.parser = parser;\n        this.session = session;\n        this.bufferSize = bufferSize;\n        this.executionStrategy = new ExecutionStrategy.ExecuteProduceRun(new HTTP2Producer(), executor);\n    }","id":50950,"modified_method":"public HTTP2Connection(ByteBufferPool byteBufferPool, Executor executor, EndPoint endPoint, Parser parser, ISession session, int bufferSize)\n    {\n        super(endPoint, executor);\n        this.byteBufferPool = byteBufferPool;\n        this.parser = parser;\n        this.session = session;\n        this.bufferSize = bufferSize;\n        this.executionStrategy = ExecutionStrategy.Factory.instanceFor(new HTTP2Producer(), executor);\n    }","commit_id":"beacb948b1e78ca3d32f6dfc2fddc687d41ce151","url":"https://github.com/eclipse/jetty.project"},{"original_method":"public ManagedSelector(SelectorManager selectorManager, int id)\n    {\n        _selectorManager = selectorManager;\n        _strategy = new ExecutionStrategy.ExecuteProduceRun(this, selectorManager.getExecutor());\n        _id = id;\n        setStopTimeout(5000);\n    }","id":50951,"modified_method":"public ManagedSelector(SelectorManager selectorManager, int id)\n    {\n        _selectorManager = selectorManager;\n        _strategy = ExecutionStrategy.Factory.instanceFor(this, selectorManager.getExecutor());\n        _id = id;\n        setStopTimeout(5000);\n    }","commit_id":"beacb948b1e78ca3d32f6dfc2fddc687d41ce151","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@NotNull\n  private SMTRunnerConsoleView createSMTRunnerConsoleView(@Nullable JstdServer ideServer) {\n    JstdRunConfiguration runConfiguration = (JstdRunConfiguration) myEnvironment.getRunProfile();\n    TestConsoleProperties testConsoleProperties = new SMTRunnerConsoleProperties(\n      runConfiguration,\n      JSTD_FRAMEWORK_NAME,\n      myEnvironment.getExecutor(),\n      false\n    );\n    testConsoleProperties.setUsePredefinedMessageFilter(false);\n    testConsoleProperties.setIfUndefined(TestConsoleProperties.HIDE_PASSED_TESTS, false);\n    testConsoleProperties.setIfUndefined(TestConsoleProperties.HIDE_IGNORED_TEST, true);\n    testConsoleProperties.setIfUndefined(TestConsoleProperties.SCROLL_TO_SOURCE, true);\n\n    JstdConsoleView consoleView = new JstdConsoleView(testConsoleProperties,\n                                                      myEnvironment,\n                                                      SMTestRunnerConnectionUtil.getSplitterPropertyName(JSTD_FRAMEWORK_NAME),\n                                                      ideServer);\n    Disposer.register(myEnvironment.getProject(), consoleView);\n    SMTestRunnerConnectionUtil.initConsoleView(consoleView,\n                                               JSTD_FRAMEWORK_NAME,\n                                               new JstdTestLocationProvider(),\n                                               true,\n                                               new JstdTestProxyFilterProvider(myEnvironment.getProject()));\n    return consoleView;\n  }","id":50952,"modified_method":"@NotNull\n  private SMTRunnerConsoleView createSMTRunnerConsoleView(@Nullable JstdServer ideServer) {\n    JstdRunConfiguration configuration = (JstdRunConfiguration)myEnvironment.getRunProfile();\n    TestConsoleProperties testConsoleProperties = new JstdConsoleProperties(configuration, myEnvironment.getExecutor());\n    String propertyName = SMTestRunnerConnectionUtil.getSplitterPropertyName(JSTD_FRAMEWORK_NAME);\n    JstdTestProxyFilterProvider filterProvider = new JstdTestProxyFilterProvider(myEnvironment.getProject());\n    JstdConsoleView consoleView = new JstdConsoleView(testConsoleProperties, myEnvironment, propertyName, ideServer);\n    Disposer.register(myEnvironment.getProject(), consoleView);\n    SMTestRunnerConnectionUtil.initConsoleView(consoleView, JSTD_FRAMEWORK_NAME, null, true, filterProvider);\n    return consoleView;\n  }","commit_id":"e818f0c7bca6f48a664bbd548a4d9c2d53caaebd","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"@NotNull\n  @Override\n  public List<Location> getLocation(@NotNull String protocolId, @NotNull String locationData, Project project) {\n    final Location location;\n    if (PROTOCOL_ID__CONFIG_FILE.equals(protocolId)) {\n      location = findConfigFile(locationData, project);\n    }\n    else if (PROTOCOL_ID__TEST_CASE.equals(protocolId) || PROTOCOL_ID__TEST.equals(protocolId)) {\n      location = findTest(locationData, project);\n    }\n    else if (PROTOCOL_ID__BROWSER_ERROR.equals(protocolId)) {\n      location = findJsFile(locationData, project);\n    }\n    else {\n      location = null;\n    }\n    if (location != null) {\n      return Collections.singletonList(location);\n    }\n    return Collections.emptyList();\n  }","id":50953,"modified_method":"@NotNull\n  @Override\n  public List<Location> getLocation(@NotNull String protocol, @NotNull String path, @NotNull Project project, @NotNull GlobalSearchScope scope) {\n    final Location location;\n    if (PROTOCOL_ID__CONFIG_FILE.equals(protocol)) {\n      location = findConfigFile(path, project);\n    }\n    else if (PROTOCOL_ID__TEST_CASE.equals(protocol) || PROTOCOL_ID__TEST.equals(protocol)) {\n      location = findTest(path, project);\n    }\n    else if (PROTOCOL_ID__BROWSER_ERROR.equals(protocol)) {\n      location = findJsFile(path, project);\n    }\n    else {\n      location = null;\n    }\n    if (location != null) {\n      return Collections.singletonList(location);\n    }\n    return Collections.emptyList();\n  }","commit_id":"e818f0c7bca6f48a664bbd548a4d9c2d53caaebd","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"public InputStream getFileAsStream(\n\t\t\tlong userId, long fileEntryId, String version,\n\t\t\tboolean incrementCounter, int increment)\n\t\tthrows PortalException, SystemException {\n\n\t\tDLFileEntry dlFileEntry = dlFileEntryPersistence.findByPrimaryKey(\n\t\t\tfileEntryId);\n\n\t\tincrementViewCounter(dlFileEntry, incrementCounter, increment);\n\n\t\tdlAppHelperLocalService.getFileAsStream(\n\t\t\tuserId, new LiferayFileEntry(dlFileEntry), incrementCounter);\n\n\t\tInputStream inputStream = DLStoreUtil.getFileAsStream(\n\t\t\tdlFileEntry.getCompanyId(), dlFileEntry.getDataRepositoryId(),\n\t\t\tdlFileEntry.getName(), version);\n\n\t\tDB db = DBFactoryUtil.getDB();\n\n\t\tString dbType = db.getType();\n\n\t\tif (dbType.equals(DB.TYPE_POSTGRESQL)) {\n\t\t\ttry {\n\t\t\t\tFile tempFile = FileUtil.createTempFile(inputStream);\n\n\t\t\t\tinputStream.close();\n\n\t\t\t\tinputStream = new FileInputStream(tempFile);\n\n\t\t\t\tFinalizeManager.register(\n\t\t\t\t\tinputStream,\n\t\t\t\t\tnew DeleteFileFinalizeAction(tempFile.getAbsolutePath()));\n\t\t\t}\n\t\t\tcatch (IOException ioe) {\n\t\t\t\tthrow new SystemException(ioe);\n\t\t\t}\n\t\t}\n\n\t\treturn inputStream;\n\t}","id":50954,"modified_method":"public InputStream getFileAsStream(\n\t\t\tlong userId, long fileEntryId, String version,\n\t\t\tboolean incrementCounter, int increment)\n\t\tthrows PortalException, SystemException {\n\n\t\tDLFileEntry dlFileEntry = dlFileEntryPersistence.findByPrimaryKey(\n\t\t\tfileEntryId);\n\n\t\tincrementViewCounter(dlFileEntry, incrementCounter, increment);\n\n\t\tdlAppHelperLocalService.getFileAsStream(\n\t\t\tuserId, new LiferayFileEntry(dlFileEntry), incrementCounter);\n\n\t\treturn DLStoreUtil.getFileAsStream(\n\t\t\tdlFileEntry.getCompanyId(), dlFileEntry.getDataRepositoryId(),\n\t\t\tdlFileEntry.getName(), version);\n\t}","commit_id":"08090335b65c1eddc9a9e364a9fb2287293eacdb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Store getInstance() {\n\t\tif (_store == null) {\n\t\t\tcheckProperties();\n\n\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t_log.debug(\"Instantiate \" + PropsValues.DL_STORE_IMPL);\n\t\t\t}\n\n\t\t\tClassLoader classLoader =\n\t\t\t\tPACLClassLoaderUtil.getPortalClassLoader();\n\n\t\t\ttry {\n\t\t\t\t_store = (Store)classLoader.loadClass(\n\t\t\t\t\tPropsValues.DL_STORE_IMPL).newInstance();\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(e, e);\n\t\t\t}\n\t\t}\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Return \" + _store.getClass().getName());\n\t\t}\n\n\t\treturn _store;\n\t}","id":50955,"modified_method":"public static Store getInstance() {\n\t\tif (_store == null) {\n\t\t\tcheckProperties();\n\n\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t_log.debug(\"Instantiate \" + PropsValues.DL_STORE_IMPL);\n\t\t\t}\n\n\t\t\tClassLoader classLoader =\n\t\t\t\tPACLClassLoaderUtil.getPortalClassLoader();\n\n\t\t\ttry {\n\t\t\t\t_store = (Store)classLoader.loadClass(\n\t\t\t\t\tPropsValues.DL_STORE_IMPL).newInstance();\n\n\t\t\t\tif (_store instanceof DBStore) {\n\t\t\t\t\tDB db = DBFactoryUtil.getDB();\n\n\t\t\t\t\tif (db.getType().equals(DB.TYPE_POSTGRESQL)) {\n\t\t\t\t\t\tMethodInterceptor transactionInterceptor =\n\t\t\t\t\t\t\t(MethodInterceptor)PortalBeanLocatorUtil.locate(\n\t\t\t\t\t\t\t\t\"transactionAdvice\");\n\t\t\t\t\t\tMethodInterceptor tempFileInterceptor =\n\t\t\t\t\t\t\tnew TempFileMethodInterceptor();\n\n\t\t\t\t\t\tList<MethodInterceptor> methodInterceptors =\n\t\t\t\t\t\t\tArrays.asList(\n\t\t\t\t\t\t\t\ttransactionInterceptor, tempFileInterceptor);\n\n\t\t\t\t\t\t_store = (Store)ProxyUtil.newProxyInstance(\n\t\t\t\t\t\t\tclassLoader, new Class<?>[] {Store.class},\n\t\t\t\t\t\t\tnew MethodInterceptorInvocationHandler(\n\t\t\t\t\t\t\t\t_store, methodInterceptors));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(e, e);\n\t\t\t}\n\t\t}\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Return \" + _store.getClass().getName());\n\t\t}\n\n\t\treturn _store;\n\t}","commit_id":"08090335b65c1eddc9a9e364a9fb2287293eacdb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static InputStream getContentStream(FileEntry fileEntry)\n\t\tthrows PortalException, SystemException {\n\n\t\tlong repositoryId = DLFolderConstants.getDataRepositoryId(\n\t\t\tfileEntry.getRepositoryId(), fileEntry.getFolderId());\n\n\t\tString name = ((DLFileEntry)fileEntry.getModel()).getName();\n\n\t\treturn DLStoreUtil.getFileAsStream(\n\t\t\tfileEntry.getCompanyId(), repositoryId, name,\n\t\t\tfileEntry.getVersion());\n\n\t}","id":50956,"modified_method":"public static InputStream getContentStream(FileEntry fileEntry)\n\t\tthrows PortalException, SystemException {\n\n\t\tlong repositoryId = DLFolderConstants.getDataRepositoryId(\n\t\t\tfileEntry.getRepositoryId(), fileEntry.getFolderId());\n\n\t\tString name = ((DLFileEntry)fileEntry.getModel()).getName();\n\n\t\tInputStream is = DLStoreUtil.getFileAsStream(\n\t\t\tfileEntry.getCompanyId(), repositoryId, name,\n\t\t\tfileEntry.getVersion());\n\n\t\tif (is == null) {\n\t\t\tis = new UnsyncByteArrayInputStream(new byte[0]);\n\t\t}\n\n\t\treturn is;\n\t}","commit_id":"a649e22a224d8c9b8e537b4ad9f7367039978020","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public InputStream getFileAsStream(\n\t\t\tlong userId, long fileEntryId, String version,\n\t\t\tboolean incrementCounter, int increment)\n\t\tthrows PortalException, SystemException {\n\n\t\tDLFileEntry dlFileEntry = dlFileEntryPersistence.findByPrimaryKey(\n\t\t\tfileEntryId);\n\n\t\tincrementViewCounter(dlFileEntry, incrementCounter, increment);\n\n\t\tdlAppHelperLocalService.getFileAsStream(\n\t\t\tuserId, new LiferayFileEntry(dlFileEntry), incrementCounter);\n\n\t\treturn DLStoreUtil.getFileAsStream(\n\t\t\tdlFileEntry.getCompanyId(), dlFileEntry.getDataRepositoryId(),\n\t\t\tdlFileEntry.getName(), version);\n\t}","id":50957,"modified_method":"public InputStream getFileAsStream(\n\t\t\tlong userId, long fileEntryId, String version,\n\t\t\tboolean incrementCounter, int increment)\n\t\tthrows PortalException, SystemException {\n\n\t\tDLFileEntry dlFileEntry = dlFileEntryPersistence.findByPrimaryKey(\n\t\t\tfileEntryId);\n\n\t\tincrementViewCounter(dlFileEntry, incrementCounter, increment);\n\n\t\tdlAppHelperLocalService.getFileAsStream(\n\t\t\tuserId, new LiferayFileEntry(dlFileEntry), incrementCounter);\n\n\t\tInputStream inputStream = DLStoreUtil.getFileAsStream(\n\t\t\tdlFileEntry.getCompanyId(), dlFileEntry.getDataRepositoryId(),\n\t\t\tdlFileEntry.getName(), version);\n\n\t\tDB db = DBFactoryUtil.getDB();\n\n\t\tString dbType = db.getType();\n\n\t\tif (dbType.equals(DB.TYPE_POSTGRESQL)) {\n\t\t\ttry {\n\t\t\t\tFile tempFile = FileUtil.createTempFile(inputStream);\n\n\t\t\t\tinputStream.close();\n\n\t\t\t\tinputStream = new FileInputStream(tempFile);\n\n\t\t\t\tFinalizeManager.register(\n\t\t\t\t\tinputStream,\n\t\t\t\t\tnew DeleteFileFinalizeAction(tempFile.getAbsolutePath()));\n\t\t\t}\n\t\t\tcatch (IOException ioe) {\n\t\t\t\tthrow new SystemException(ioe);\n\t\t\t}\n\t\t}\n\n\t\treturn inputStream;\n\t}","commit_id":"53957e2f2e956626a7d52aa59a23391eb47e8153","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n    public HighlightField highlight(HighlighterContext highlighterContext) {\n        SearchContextHighlight.Field field = highlighterContext.field;\n        SearchContext context = highlighterContext.context;\n        FetchSubPhase.HitContext hitContext = highlighterContext.hitContext;\n        FieldMapper<?> mapper = highlighterContext.mapper;\n\n        if (!(mapper.fieldType().storeTermVectors() && mapper.fieldType().storeTermVectorOffsets() && mapper.fieldType().storeTermVectorPositions())) {\n            throw new ElasticSearchIllegalArgumentException(\"the field [\" + field.field() + \"] should be indexed with term vector with position offsets to be used with fast vector highlighter\");\n        }\n\n        Encoder encoder = field.encoder().equals(\"html\") ? HighlightUtils.Encoders.HTML : HighlightUtils.Encoders.DEFAULT;\n\n        if (!hitContext.cache().containsKey(CACHE_KEY)) {\n            hitContext.cache().put(CACHE_KEY, new HighlighterEntry());\n        }\n        HighlighterEntry cache = (HighlighterEntry) hitContext.cache().get(CACHE_KEY);\n\n        try {\n            MapperHighlightEntry entry = cache.mappers.get(mapper);\n            FieldQuery fieldQuery = null;\n            if (entry == null) {\n                FragListBuilder fragListBuilder;\n                BaseFragmentsBuilder fragmentsBuilder;\n\n                BoundaryScanner boundaryScanner = DEFAULT_BOUNDARY_SCANNER;\n                if (field.boundaryMaxScan() != SimpleBoundaryScanner.DEFAULT_MAX_SCAN || field.boundaryChars() != SimpleBoundaryScanner.DEFAULT_BOUNDARY_CHARS) {\n                    boundaryScanner = new SimpleBoundaryScanner(field.boundaryMaxScan(), field.boundaryChars());\n                }\n\n                if (field.numberOfFragments() == 0) {\n                    fragListBuilder = new SingleFragListBuilder();\n\n                    if (mapper.fieldType().stored()) {\n                        fragmentsBuilder = new SimpleFragmentsBuilder(mapper, field.preTags(), field.postTags(), boundaryScanner);\n                    } else {\n                        fragmentsBuilder = new SourceSimpleFragmentsBuilder(mapper, context, field.preTags(), field.postTags(), boundaryScanner);\n                    }\n                } else {\n                    fragListBuilder = field.fragmentOffset() == -1 ? new SimpleFragListBuilder() : new SimpleFragListBuilder(field.fragmentOffset());\n                    if (field.scoreOrdered()) {\n                        if (mapper.fieldType().stored()) {\n                            fragmentsBuilder = new ScoreOrderFragmentsBuilder(field.preTags(), field.postTags(), boundaryScanner);\n                        } else {\n                            fragmentsBuilder = new SourceScoreOrderFragmentsBuilder(mapper, context, field.preTags(), field.postTags(), boundaryScanner);\n                        }\n                    } else {\n                        if (mapper.fieldType().stored()) {\n                            fragmentsBuilder = new SimpleFragmentsBuilder(mapper, field.preTags(), field.postTags(), boundaryScanner);\n                        } else {\n                            fragmentsBuilder = new SourceSimpleFragmentsBuilder(mapper, context, field.preTags(), field.postTags(), boundaryScanner);\n                        }\n                    }\n                }\n                fragmentsBuilder.setDiscreteMultiValueHighlighting(termVectorMultiValue);\n                entry = new MapperHighlightEntry();\n                entry.fragListBuilder = fragListBuilder;\n                entry.fragmentsBuilder = fragmentsBuilder;\n                if (cache.fvh == null) {\n                    // parameters to FVH are not requires since:\n                    // first two booleans are not relevant since they are set on the CustomFieldQuery (phrase and fieldMatch)\n                    // fragment builders are used explicitly\n                    cache.fvh = new org.apache.lucene.search.vectorhighlight.FastVectorHighlighter();\n                }\n                CustomFieldQuery.highlightFilters.set(field.highlightFilter());\n                if (field.requireFieldMatch()) {\n                    if (cache.fieldMatchFieldQuery == null) {\n                        // we use top level reader to rewrite the query against all readers, with use caching it across hits (and across readers...)\n                        cache.fieldMatchFieldQuery = new CustomFieldQuery(highlighterContext.highlightQuery, hitContext.topLevelReader(), true, field.requireFieldMatch());\n                    }\n                    fieldQuery = cache.fieldMatchFieldQuery;\n                } else {\n                    if (cache.noFieldMatchFieldQuery == null) {\n                        // we use top level reader to rewrite the query against all readers, with use caching it across hits (and across readers...)\n                        cache.noFieldMatchFieldQuery = new CustomFieldQuery(highlighterContext.highlightQuery, hitContext.topLevelReader(), true, field.requireFieldMatch());\n                    }\n                    fieldQuery = cache.noFieldMatchFieldQuery;\n                }\n                cache.mappers.put(mapper, entry);\n            }\n\n            String[] fragments;\n\n            // a HACK to make highlighter do highlighting, even though its using the single frag list builder\n            int numberOfFragments = field.numberOfFragments() == 0 ? Integer.MAX_VALUE : field.numberOfFragments();\n            int fragmentCharSize = field.numberOfFragments() == 0 ? Integer.MAX_VALUE : field.fragmentCharSize();\n            // we highlight against the low level reader and docId, because if we load source, we want to reuse it if possible\n            fragments = cache.fvh.getBestFragments(fieldQuery, hitContext.reader(), hitContext.docId(), mapper.names().indexName(), fragmentCharSize, numberOfFragments,\n                    entry.fragListBuilder, entry.fragmentsBuilder, field.preTags(), field.postTags(), encoder);\n\n            if (fragments != null && fragments.length > 0) {\n                return new HighlightField(field.field(), StringText.convertFromStringArray(fragments));\n            }\n\n            int noMatchSize = highlighterContext.field.noMatchSize();\n            if (noMatchSize > 0) {\n                // Essentially we just request that a fragment is built from 0 to noMatchSize using the normal fragmentsBuilder\n                FieldFragList fieldFragList = new SimpleFieldFragList(-1 /*ignored*/);\n                fieldFragList.add(0, noMatchSize, Collections.<WeightedPhraseInfo>emptyList());\n                fragments = entry.fragmentsBuilder.createFragments(hitContext.reader(), hitContext.docId(), mapper.names().indexName(),\n                        fieldFragList, 1, field.preTags(), field.postTags(), encoder);\n                if (fragments != null && fragments.length > 0) {\n                    return new HighlightField(field.field(), StringText.convertFromStringArray(fragments));\n                }\n            }\n\n            return null;\n\n        } catch (Exception e) {\n            throw new FetchPhaseExecutionException(context, \"Failed to highlight field [\" + highlighterContext.fieldName + \"]\", e);\n        }\n    }","id":50958,"modified_method":"@Override\n    public HighlightField highlight(HighlighterContext highlighterContext) {\n        SearchContextHighlight.Field field = highlighterContext.field;\n        SearchContext context = highlighterContext.context;\n        FetchSubPhase.HitContext hitContext = highlighterContext.hitContext;\n        FieldMapper<?> mapper = highlighterContext.mapper;\n\n        if (!(mapper.fieldType().storeTermVectors() && mapper.fieldType().storeTermVectorOffsets() && mapper.fieldType().storeTermVectorPositions())) {\n            throw new ElasticSearchIllegalArgumentException(\"the field [\" + field.field() + \"] should be indexed with term vector with position offsets to be used with fast vector highlighter\");\n        }\n\n        Encoder encoder = field.encoder().equals(\"html\") ? HighlightUtils.Encoders.HTML : HighlightUtils.Encoders.DEFAULT;\n\n        if (!hitContext.cache().containsKey(CACHE_KEY)) {\n            hitContext.cache().put(CACHE_KEY, new HighlighterEntry());\n        }\n        HighlighterEntry cache = (HighlighterEntry) hitContext.cache().get(CACHE_KEY);\n\n        try {\n            FieldQuery fieldQuery;\n            if (field.requireFieldMatch()) {\n                if (cache.fieldMatchFieldQuery == null) {\n                    // we use top level reader to rewrite the query against all readers, with use caching it across hits (and across readers...)\n                    cache.fieldMatchFieldQuery = new CustomFieldQuery(highlighterContext.highlightQuery, hitContext.topLevelReader(), true, field.requireFieldMatch());\n                }\n                fieldQuery = cache.fieldMatchFieldQuery;\n            } else {\n                if (cache.noFieldMatchFieldQuery == null) {\n                    // we use top level reader to rewrite the query against all readers, with use caching it across hits (and across readers...)\n                    cache.noFieldMatchFieldQuery = new CustomFieldQuery(highlighterContext.highlightQuery, hitContext.topLevelReader(), true, field.requireFieldMatch());\n                }\n                fieldQuery = cache.noFieldMatchFieldQuery;\n            }\n\n            MapperHighlightEntry entry = cache.mappers.get(mapper);\n            if (entry == null) {\n                FragListBuilder fragListBuilder;\n                BaseFragmentsBuilder fragmentsBuilder;\n\n                BoundaryScanner boundaryScanner = DEFAULT_BOUNDARY_SCANNER;\n                if (field.boundaryMaxScan() != SimpleBoundaryScanner.DEFAULT_MAX_SCAN || field.boundaryChars() != SimpleBoundaryScanner.DEFAULT_BOUNDARY_CHARS) {\n                    boundaryScanner = new SimpleBoundaryScanner(field.boundaryMaxScan(), field.boundaryChars());\n                }\n\n                if (field.numberOfFragments() == 0) {\n                    fragListBuilder = new SingleFragListBuilder();\n\n                    if (mapper.fieldType().stored()) {\n                        fragmentsBuilder = new SimpleFragmentsBuilder(mapper, field.preTags(), field.postTags(), boundaryScanner);\n                    } else {\n                        fragmentsBuilder = new SourceSimpleFragmentsBuilder(mapper, context, field.preTags(), field.postTags(), boundaryScanner);\n                    }\n                } else {\n                    fragListBuilder = field.fragmentOffset() == -1 ? new SimpleFragListBuilder() : new SimpleFragListBuilder(field.fragmentOffset());\n                    if (field.scoreOrdered()) {\n                        if (mapper.fieldType().stored()) {\n                            fragmentsBuilder = new ScoreOrderFragmentsBuilder(field.preTags(), field.postTags(), boundaryScanner);\n                        } else {\n                            fragmentsBuilder = new SourceScoreOrderFragmentsBuilder(mapper, context, field.preTags(), field.postTags(), boundaryScanner);\n                        }\n                    } else {\n                        if (mapper.fieldType().stored()) {\n                            fragmentsBuilder = new SimpleFragmentsBuilder(mapper, field.preTags(), field.postTags(), boundaryScanner);\n                        } else {\n                            fragmentsBuilder = new SourceSimpleFragmentsBuilder(mapper, context, field.preTags(), field.postTags(), boundaryScanner);\n                        }\n                    }\n                }\n                fragmentsBuilder.setDiscreteMultiValueHighlighting(termVectorMultiValue);\n                entry = new MapperHighlightEntry();\n                entry.fragListBuilder = fragListBuilder;\n                entry.fragmentsBuilder = fragmentsBuilder;\n                if (cache.fvh == null) {\n                    // parameters to FVH are not requires since:\n                    // first two booleans are not relevant since they are set on the CustomFieldQuery (phrase and fieldMatch)\n                    // fragment builders are used explicitly\n                    cache.fvh = new org.apache.lucene.search.vectorhighlight.FastVectorHighlighter();\n                }\n                CustomFieldQuery.highlightFilters.set(field.highlightFilter());\n                cache.mappers.put(mapper, entry);\n            }\n\n            String[] fragments;\n\n            // a HACK to make highlighter do highlighting, even though its using the single frag list builder\n            int numberOfFragments = field.numberOfFragments() == 0 ? Integer.MAX_VALUE : field.numberOfFragments();\n            int fragmentCharSize = field.numberOfFragments() == 0 ? Integer.MAX_VALUE : field.fragmentCharSize();\n            // we highlight against the low level reader and docId, because if we load source, we want to reuse it if possible\n            fragments = cache.fvh.getBestFragments(fieldQuery, hitContext.reader(), hitContext.docId(), mapper.names().indexName(), fragmentCharSize, numberOfFragments,\n                    entry.fragListBuilder, entry.fragmentsBuilder, field.preTags(), field.postTags(), encoder);\n\n            if (fragments != null && fragments.length > 0) {\n                return new HighlightField(field.field(), StringText.convertFromStringArray(fragments));\n            }\n\n            int noMatchSize = highlighterContext.field.noMatchSize();\n            if (noMatchSize > 0) {\n                // Essentially we just request that a fragment is built from 0 to noMatchSize using the normal fragmentsBuilder\n                FieldFragList fieldFragList = new SimpleFieldFragList(-1 /*ignored*/);\n                fieldFragList.add(0, noMatchSize, Collections.<WeightedPhraseInfo>emptyList());\n                fragments = entry.fragmentsBuilder.createFragments(hitContext.reader(), hitContext.docId(), mapper.names().indexName(),\n                        fieldFragList, 1, field.preTags(), field.postTags(), encoder);\n                if (fragments != null && fragments.length > 0) {\n                    return new HighlightField(field.field(), StringText.convertFromStringArray(fragments));\n                }\n            }\n\n            return null;\n\n        } catch (Exception e) {\n            throw new FetchPhaseExecutionException(context, \"Failed to highlight field [\" + highlighterContext.fieldName + \"]\", e);\n        }\n    }","commit_id":"06938e6fb0aa100d9f8980135c205f1d82bd3f5c","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public void execute(SearchContext context) {\n        FieldsVisitor fieldsVisitor;\n        List<String> extractFieldNames = null;\n\n        if (!context.hasFieldNames()) {\n            if (context.hasPartialFields()) {\n                // partial fields need the source, so fetch it\n                fieldsVisitor = new UidAndSourceFieldsVisitor();\n            } else {\n                // no fields specified, default to return source if no explicit indication\n                if (!context.hasScriptFields() && !context.hasFetchSourceContext()) {\n                    context.fetchSourceContext(new FetchSourceContext(true));\n                }\n                fieldsVisitor = context.sourceRequested() ? new UidAndSourceFieldsVisitor() : new JustUidFieldsVisitor();\n            }\n        } else if (context.fieldNames().isEmpty()) {\n            if (context.sourceRequested()) {\n                fieldsVisitor = new UidAndSourceFieldsVisitor();\n            } else {\n                fieldsVisitor = new JustUidFieldsVisitor();\n            }\n        } else {\n            boolean loadAllStored = false;\n            Set<String> fieldNames = null;\n            for (String fieldName : context.fieldNames()) {\n                if (fieldName.equals(\"*\")) {\n                    loadAllStored = true;\n                    continue;\n                }\n                if (fieldName.equals(SourceFieldMapper.NAME)) {\n                    if (context.hasFetchSourceContext()) {\n                        context.fetchSourceContext().fetchSource(true);\n                    } else {\n                        context.fetchSourceContext(new FetchSourceContext(true));\n                    }\n                    continue;\n                }\n                FieldMappers x = context.smartNameFieldMappers(fieldName);\n                if (x != null && x.mapper().fieldType().stored()) {\n                    if (fieldNames == null) {\n                        fieldNames = new HashSet<String>();\n                    }\n                    fieldNames.add(x.mapper().names().indexName());\n                } else {\n                    if (extractFieldNames == null) {\n                        extractFieldNames = newArrayList();\n                    }\n                    extractFieldNames.add(fieldName);\n                }\n            }\n            if (loadAllStored) {\n                fieldsVisitor = new AllFieldsVisitor(); // load everything, including _source\n            } else if (fieldNames != null) {\n                boolean loadSource = extractFieldNames != null || context.sourceRequested();\n                fieldsVisitor = new CustomFieldsVisitor(fieldNames, loadSource);\n            } else if (extractFieldNames != null || context.sourceRequested()) {\n                fieldsVisitor = new UidAndSourceFieldsVisitor();\n            } else {\n                fieldsVisitor = new JustUidFieldsVisitor();\n            }\n        }\n\n        InternalSearchHit[] hits = new InternalSearchHit[context.docIdsToLoadSize()];\n        for (int index = 0; index < context.docIdsToLoadSize(); index++) {\n            int docId = context.docIdsToLoad()[context.docIdsToLoadFrom() + index];\n\n            loadStoredFields(context, fieldsVisitor, docId);\n            fieldsVisitor.postProcess(context.mapperService());\n\n            Map<String, SearchHitField> searchFields = null;\n            if (!fieldsVisitor.fields().isEmpty()) {\n                searchFields = new HashMap<String, SearchHitField>(fieldsVisitor.fields().size());\n                for (Map.Entry<String, List<Object>> entry : fieldsVisitor.fields().entrySet()) {\n                    searchFields.put(entry.getKey(), new InternalSearchHitField(entry.getKey(), entry.getValue()));\n                }\n            }\n\n            DocumentMapper documentMapper = context.mapperService().documentMapper(fieldsVisitor.uid().type());\n            Text typeText;\n            if (documentMapper == null) {\n                typeText = new StringAndBytesText(fieldsVisitor.uid().type());\n            } else {\n                typeText = documentMapper.typeText();\n            }\n            InternalSearchHit searchHit = new InternalSearchHit(docId, fieldsVisitor.uid().id(), typeText, searchFields);\n\n            hits[index] = searchHit;\n\n            int readerIndex = ReaderUtil.subIndex(docId, context.searcher().getIndexReader().leaves());\n            AtomicReaderContext subReaderContext = context.searcher().getIndexReader().leaves().get(readerIndex);\n            int subDoc = docId - subReaderContext.docBase;\n\n            // go over and extract fields that are not mapped / stored\n            context.lookup().setNextReader(subReaderContext);\n            context.lookup().setNextDocId(subDoc);\n            if (fieldsVisitor.source() != null) {\n                context.lookup().source().setNextSource(fieldsVisitor.source());\n            }\n            if (extractFieldNames != null) {\n                for (String extractFieldName : extractFieldNames) {\n                    Object value = context.lookup().source().extractValue(extractFieldName);\n                    if (value != null) {\n                        if (searchHit.fieldsOrNull() == null) {\n                            searchHit.fields(new HashMap<String, SearchHitField>(2));\n                        }\n\n                        SearchHitField hitField = searchHit.fields().get(extractFieldName);\n                        if (hitField == null) {\n                            hitField = new InternalSearchHitField(extractFieldName, new ArrayList<Object>(2));\n                            searchHit.fields().put(extractFieldName, hitField);\n                        }\n                        hitField.values().add(value);\n                    }\n                }\n            }\n\n            for (FetchSubPhase fetchSubPhase : fetchSubPhases) {\n                FetchSubPhase.HitContext hitContext = new FetchSubPhase.HitContext();\n                if (fetchSubPhase.hitExecutionNeeded(context)) {\n                    hitContext.reset(searchHit, subReaderContext, subDoc, context.searcher().getIndexReader(), docId, fieldsVisitor);\n                    fetchSubPhase.hitExecute(context, hitContext);\n                }\n            }\n        }\n\n        for (FetchSubPhase fetchSubPhase : fetchSubPhases) {\n            if (fetchSubPhase.hitsExecutionNeeded(context)) {\n                fetchSubPhase.hitsExecute(context, hits);\n            }\n        }\n\n        context.fetchResult().hits(new InternalSearchHits(hits, context.queryResult().topDocs().totalHits, context.queryResult().topDocs().getMaxScore()));\n    }","id":50959,"modified_method":"public void execute(SearchContext context) {\n        FieldsVisitor fieldsVisitor;\n        List<String> extractFieldNames = null;\n\n        if (!context.hasFieldNames()) {\n            if (context.hasPartialFields()) {\n                // partial fields need the source, so fetch it\n                fieldsVisitor = new UidAndSourceFieldsVisitor();\n            } else {\n                // no fields specified, default to return source if no explicit indication\n                if (!context.hasScriptFields() && !context.hasFetchSourceContext()) {\n                    context.fetchSourceContext(new FetchSourceContext(true));\n                }\n                fieldsVisitor = context.sourceRequested() ? new UidAndSourceFieldsVisitor() : new JustUidFieldsVisitor();\n            }\n        } else if (context.fieldNames().isEmpty()) {\n            if (context.sourceRequested()) {\n                fieldsVisitor = new UidAndSourceFieldsVisitor();\n            } else {\n                fieldsVisitor = new JustUidFieldsVisitor();\n            }\n        } else {\n            boolean loadAllStored = false;\n            Set<String> fieldNames = null;\n            for (String fieldName : context.fieldNames()) {\n                if (fieldName.equals(\"*\")) {\n                    loadAllStored = true;\n                    continue;\n                }\n                if (fieldName.equals(SourceFieldMapper.NAME)) {\n                    if (context.hasFetchSourceContext()) {\n                        context.fetchSourceContext().fetchSource(true);\n                    } else {\n                        context.fetchSourceContext(new FetchSourceContext(true));\n                    }\n                    continue;\n                }\n                FieldMappers x = context.smartNameFieldMappers(fieldName);\n                if (x != null && x.mapper().fieldType().stored()) {\n                    if (fieldNames == null) {\n                        fieldNames = new HashSet<String>();\n                    }\n                    fieldNames.add(x.mapper().names().indexName());\n                } else {\n                    if (extractFieldNames == null) {\n                        extractFieldNames = newArrayList();\n                    }\n                    extractFieldNames.add(fieldName);\n                }\n            }\n            if (loadAllStored) {\n                fieldsVisitor = new AllFieldsVisitor(); // load everything, including _source\n            } else if (fieldNames != null) {\n                boolean loadSource = extractFieldNames != null || context.sourceRequested();\n                fieldsVisitor = new CustomFieldsVisitor(fieldNames, loadSource);\n            } else if (extractFieldNames != null || context.sourceRequested()) {\n                fieldsVisitor = new UidAndSourceFieldsVisitor();\n            } else {\n                fieldsVisitor = new JustUidFieldsVisitor();\n            }\n        }\n\n        InternalSearchHit[] hits = new InternalSearchHit[context.docIdsToLoadSize()];\n        FetchSubPhase.HitContext hitContext = new FetchSubPhase.HitContext();\n        for (int index = 0; index < context.docIdsToLoadSize(); index++) {\n            int docId = context.docIdsToLoad()[context.docIdsToLoadFrom() + index];\n\n            loadStoredFields(context, fieldsVisitor, docId);\n            fieldsVisitor.postProcess(context.mapperService());\n\n            Map<String, SearchHitField> searchFields = null;\n            if (!fieldsVisitor.fields().isEmpty()) {\n                searchFields = new HashMap<String, SearchHitField>(fieldsVisitor.fields().size());\n                for (Map.Entry<String, List<Object>> entry : fieldsVisitor.fields().entrySet()) {\n                    searchFields.put(entry.getKey(), new InternalSearchHitField(entry.getKey(), entry.getValue()));\n                }\n            }\n\n            DocumentMapper documentMapper = context.mapperService().documentMapper(fieldsVisitor.uid().type());\n            Text typeText;\n            if (documentMapper == null) {\n                typeText = new StringAndBytesText(fieldsVisitor.uid().type());\n            } else {\n                typeText = documentMapper.typeText();\n            }\n            InternalSearchHit searchHit = new InternalSearchHit(docId, fieldsVisitor.uid().id(), typeText, searchFields);\n\n            hits[index] = searchHit;\n\n            int readerIndex = ReaderUtil.subIndex(docId, context.searcher().getIndexReader().leaves());\n            AtomicReaderContext subReaderContext = context.searcher().getIndexReader().leaves().get(readerIndex);\n            int subDoc = docId - subReaderContext.docBase;\n\n            // go over and extract fields that are not mapped / stored\n            context.lookup().setNextReader(subReaderContext);\n            context.lookup().setNextDocId(subDoc);\n            if (fieldsVisitor.source() != null) {\n                context.lookup().source().setNextSource(fieldsVisitor.source());\n            }\n            if (extractFieldNames != null) {\n                for (String extractFieldName : extractFieldNames) {\n                    Object value = context.lookup().source().extractValue(extractFieldName);\n                    if (value != null) {\n                        if (searchHit.fieldsOrNull() == null) {\n                            searchHit.fields(new HashMap<String, SearchHitField>(2));\n                        }\n\n                        SearchHitField hitField = searchHit.fields().get(extractFieldName);\n                        if (hitField == null) {\n                            hitField = new InternalSearchHitField(extractFieldName, new ArrayList<Object>(2));\n                            searchHit.fields().put(extractFieldName, hitField);\n                        }\n                        hitField.values().add(value);\n                    }\n                }\n            }\n\n            hitContext.reset(searchHit, subReaderContext, subDoc, context.searcher().getIndexReader(), docId, fieldsVisitor);\n            for (FetchSubPhase fetchSubPhase : fetchSubPhases) {\n                if (fetchSubPhase.hitExecutionNeeded(context)) {\n                    fetchSubPhase.hitExecute(context, hitContext);\n                }\n            }\n        }\n\n        for (FetchSubPhase fetchSubPhase : fetchSubPhases) {\n            if (fetchSubPhase.hitsExecutionNeeded(context)) {\n                fetchSubPhase.hitsExecute(context, hits);\n            }\n        }\n\n        context.fetchResult().hits(new InternalSearchHits(hits, context.queryResult().topDocs().totalHits, context.queryResult().topDocs().getMaxScore()));\n    }","commit_id":"06938e6fb0aa100d9f8980135c205f1d82bd3f5c","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    public void testPostingsHighlighterMultipleFields() throws Exception {\n        client().admin().indices().prepareCreate(\"test\").addMapping(\"type1\", type1PostingsffsetsMapping()).get();\n        ensureGreen();\n\n        client().prepareIndex(\"test\", \"type1\")\n                .setSource(\"field1\", \"this is a test1\", \"field2\", \"this is a test2\", \"field3\", \"this is a test3\").setRefresh(true).get();\n\n        logger.info(\"--> highlighting and searching on field1\");\n        SearchSourceBuilder source = searchSource()\n                .query(boolQuery()\n                        .should(termQuery(\"field1\", \"test1\"))\n                        .should(termQuery(\"field2\", \"test2\"))\n                        .should(termQuery(\"field3\", \"test3\")))\n                .highlight(highlight().preTags(\"<xxx>\").postTags(\"<\/xxx>\").requireFieldMatch(false)\n                        .field(\"field1\").field(\"field2\").field(new HighlightBuilder.Field(\"field3\").preTags(\"<x3>\").postTags(\"<\/x3>\")));\n\n        SearchResponse searchResponse = client().search(searchRequest(\"test\").source(source)).actionGet();\n        assertHitCount(searchResponse, 1l);\n\n        assertThat(searchResponse.getHits().getAt(0).highlightFields().get(\"field1\").fragments()[0].string(), equalTo(\"this is a <xxx>test1<\/xxx>\"));\n        assertThat(searchResponse.getHits().getAt(0).highlightFields().get(\"field2\").fragments()[0].string(), equalTo(\"this is a <xxx>test2<\/xxx>\"));\n        assertThat(searchResponse.getHits().getAt(0).highlightFields().get(\"field3\").fragments()[0].string(), equalTo(\"this is a <x3>test3<\/x3>\"));\n    }","id":50960,"modified_method":"@Test\n    public void testPostingsHighlighterMultipleFields() throws Exception {\n        assertAcked(client().admin().indices().prepareCreate(\"test\").addMapping(\"type1\", type1PostingsffsetsMapping()).get());\n        ensureGreen();\n\n        index(\"test\", \"type1\", \"1\", \"field1\", \"The <b>quick<b> brown fox. Second sentence.\", \"field2\", \"The <b>slow<b> brown fox. Second sentence.\");\n        refresh();\n\n        SearchResponse response = client().prepareSearch(\"test\")\n                .setQuery(QueryBuilders.matchQuery(\"field1\", \"fox\"))\n                .addHighlightedField(new HighlightBuilder.Field(\"field1\").preTags(\"<1>\").postTags(\"<\/1>\").requireFieldMatch(true))\n                .addHighlightedField(new HighlightBuilder.Field(\"field2\").preTags(\"<2>\").postTags(\"<\/2>\").requireFieldMatch(false))\n                .get();\n        assertHitCount(response, 1l);\n        assertThat(response.getHits().hits()[0].highlightFields().get(\"field1\").fragments().length, equalTo(1));\n        assertThat(response.getHits().hits()[0].highlightFields().get(\"field1\").fragments()[0].string(), equalTo(\"The <b>quick<b> brown <1>fox<\/1>.\"));\n        assertThat(response.getHits().hits()[0].highlightFields().get(\"field2\").fragments().length, equalTo(1));\n        assertThat(response.getHits().hits()[0].highlightFields().get(\"field2\").fragments()[0].string(), equalTo(\"The <b>slow<b> brown <2>fox<\/2>.\"));\n    }","commit_id":"06938e6fb0aa100d9f8980135c205f1d82bd3f5c","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public SearchContextHighlight parse(XContentParser parser, IndexQueryParserService queryParserService) throws IOException {\n        XContentParser.Token token;\n        String topLevelFieldName = null;\n        final List<Tuple<String, SearchContextHighlight.FieldOptions.Builder>> fieldsOptions = newArrayList();\n\n        final SearchContextHighlight.FieldOptions.Builder globalOptionsBuilder = new SearchContextHighlight.FieldOptions.Builder()\n                .preTags(DEFAULT_PRE_TAGS).postTags(DEFAULT_POST_TAGS).scoreOrdered(false).highlightFilter(false)\n                .requireFieldMatch(false).forceSource(false).fragmentCharSize(100).numberOfFragments(5)\n                .encoder(\"default\").boundaryMaxScan(SimpleBoundaryScanner.DEFAULT_MAX_SCAN)\n                .boundaryChars(SimpleBoundaryScanner.DEFAULT_BOUNDARY_CHARS)\n                .noMatchSize(0).phraseLimit(256);\n\n        while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {\n            if (token == XContentParser.Token.FIELD_NAME) {\n                topLevelFieldName = parser.currentName();\n            } else if (token == XContentParser.Token.START_ARRAY) {\n                if (\"pre_tags\".equals(topLevelFieldName) || \"preTags\".equals(topLevelFieldName)) {\n                    List<String> preTagsList = Lists.newArrayList();\n                    while ((token = parser.nextToken()) != XContentParser.Token.END_ARRAY) {\n                        preTagsList.add(parser.text());\n                    }\n                    globalOptionsBuilder.preTags(preTagsList.toArray(new String[preTagsList.size()]));\n                } else if (\"post_tags\".equals(topLevelFieldName) || \"postTags\".equals(topLevelFieldName)) {\n                    List<String> postTagsList = Lists.newArrayList();\n                    while ((token = parser.nextToken()) != XContentParser.Token.END_ARRAY) {\n                        postTagsList.add(parser.text());\n                    }\n                    globalOptionsBuilder.postTags(postTagsList.toArray(new String[postTagsList.size()]));\n                } else if (\"fields\".equals(topLevelFieldName)) {\n                    while ((token = parser.nextToken()) != XContentParser.Token.END_ARRAY) {\n                        if (token == XContentParser.Token.START_OBJECT) {\n                            String highlightFieldName = null;\n                            while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {\n                                if (token == XContentParser.Token.FIELD_NAME) {\n                                    if (highlightFieldName != null) {\n                                        throw new IllegalArgumentException(\"If highlighter fields is an array it must contain objects containing a single field\");\n                                    }\n                                    highlightFieldName = parser.currentName();\n                                } else if (token == XContentParser.Token.START_OBJECT) {\n                                    fieldsOptions.add(Tuple.tuple(highlightFieldName, parseFields(parser, queryParserService)));\n                                }\n                            }\n                        } else {\n                            throw new IllegalArgumentException(\"If highlighter fields is an array it must contain objects containing a single field\");\n                        }\n                    }\n                }\n            } else if (token.isValue()) {\n                if (\"order\".equals(topLevelFieldName)) {\n                    globalOptionsBuilder.scoreOrdered(\"score\".equals(parser.text()));\n                } else if (\"tags_schema\".equals(topLevelFieldName) || \"tagsSchema\".equals(topLevelFieldName)) {\n                    String schema = parser.text();\n                    if (\"styled\".equals(schema)) {\n                        globalOptionsBuilder.preTags(STYLED_PRE_TAG);\n                        globalOptionsBuilder.postTags(STYLED_POST_TAGS);\n                    }\n                } else if (\"highlight_filter\".equals(topLevelFieldName) || \"highlightFilter\".equals(topLevelFieldName)) {\n                    globalOptionsBuilder.highlightFilter(parser.booleanValue());\n                } else if (\"fragment_size\".equals(topLevelFieldName) || \"fragmentSize\".equals(topLevelFieldName)) {\n                    globalOptionsBuilder.fragmentCharSize(parser.intValue());\n                } else if (\"number_of_fragments\".equals(topLevelFieldName) || \"numberOfFragments\".equals(topLevelFieldName)) {\n                    globalOptionsBuilder.numberOfFragments(parser.intValue());\n                } else if (\"encoder\".equals(topLevelFieldName)) {\n                    globalOptionsBuilder.encoder(parser.text());\n                } else if (\"require_field_match\".equals(topLevelFieldName) || \"requireFieldMatch\".equals(topLevelFieldName)) {\n                    globalOptionsBuilder.requireFieldMatch(parser.booleanValue());\n                } else if (\"boundary_max_scan\".equals(topLevelFieldName) || \"boundaryMaxScan\".equals(topLevelFieldName)) {\n                    globalOptionsBuilder.boundaryMaxScan(parser.intValue());\n                } else if (\"boundary_chars\".equals(topLevelFieldName) || \"boundaryChars\".equals(topLevelFieldName)) {\n                    char[] charsArr = parser.text().toCharArray();\n                    Character[] globalBoundaryChars = new Character[charsArr.length];\n                    for (int i = 0; i < charsArr.length; i++) {\n                        globalBoundaryChars[i] = charsArr[i];\n                    }\n                    globalOptionsBuilder.boundaryChars(globalBoundaryChars);\n                } else if (\"type\".equals(topLevelFieldName)) {\n                    globalOptionsBuilder.highlighterType(parser.text());\n                } else if (\"fragmenter\".equals(topLevelFieldName)) {\n                    globalOptionsBuilder.fragmenter(parser.text());\n                } else if (\"no_match_size\".equals(topLevelFieldName) || \"noMatchSize\".equals(topLevelFieldName)) {\n                    globalOptionsBuilder.noMatchSize(parser.intValue());\n                } else if (\"force_source\".equals(topLevelFieldName) || \"forceSource\".equals(topLevelFieldName)) {\n                    globalOptionsBuilder.forceSource(parser.booleanValue());\n                } else if (\"phrase_limit\".equals(topLevelFieldName) || \"phraseLimit\".equals(topLevelFieldName)) {\n                    globalOptionsBuilder.phraseLimit(parser.intValue());\n                }\n            } else if (token == XContentParser.Token.START_OBJECT && \"options\".equals(topLevelFieldName)) {\n                globalOptionsBuilder.options(parser.map());\n            } else if (token == XContentParser.Token.START_OBJECT) {\n                if (\"fields\".equals(topLevelFieldName)) {\n                    String highlightFieldName = null;\n                    while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {\n                        if (token == XContentParser.Token.FIELD_NAME) {\n                            highlightFieldName = parser.currentName();\n                        } else if (token == XContentParser.Token.START_OBJECT) {\n                            fieldsOptions.add(Tuple.tuple(highlightFieldName, parseFields(parser, queryParserService)));\n                        }\n                    }\n                } else if (\"highlight_query\".equals(topLevelFieldName) || \"highlightQuery\".equals(topLevelFieldName)) {\n                    globalOptionsBuilder.highlightQuery(queryParserService.parse(parser).query());\n                }\n            }\n        }\n\n        final SearchContextHighlight.FieldOptions globalOptions = globalOptionsBuilder.build();\n        if (globalOptions.preTags() != null && globalOptions.postTags() == null) {\n            throw new IllegalArgumentException(\"Highlighter global preTags are set, but global postTags are not set\");\n        }\n\n        final List<SearchContextHighlight.Field> fields = Lists.newArrayList();\n        // now, go over and fill all fieldsOptions with default values from the global state\n        for (final Tuple<String, SearchContextHighlight.FieldOptions.Builder> tuple : fieldsOptions) {\n            fields.add(new SearchContextHighlight.Field(tuple.v1(), tuple.v2().merge(globalOptions).build()));\n        }\n        return new SearchContextHighlight(fields);\n    }","id":50961,"modified_method":"public SearchContextHighlight parse(XContentParser parser, IndexQueryParserService queryParserService) throws IOException {\n        XContentParser.Token token;\n        String topLevelFieldName = null;\n        final List<Tuple<String, SearchContextHighlight.FieldOptions.Builder>> fieldsOptions = newArrayList();\n\n        final SearchContextHighlight.FieldOptions.Builder globalOptionsBuilder = new SearchContextHighlight.FieldOptions.Builder()\n                .preTags(DEFAULT_PRE_TAGS).postTags(DEFAULT_POST_TAGS).scoreOrdered(false).highlightFilter(false)\n                .requireFieldMatch(true).forceSource(false).fragmentCharSize(100).numberOfFragments(5)\n                .encoder(\"default\").boundaryMaxScan(SimpleBoundaryScanner.DEFAULT_MAX_SCAN)\n                .boundaryChars(SimpleBoundaryScanner.DEFAULT_BOUNDARY_CHARS)\n                .noMatchSize(0).phraseLimit(256);\n\n        while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {\n            if (token == XContentParser.Token.FIELD_NAME) {\n                topLevelFieldName = parser.currentName();\n            } else if (token == XContentParser.Token.START_ARRAY) {\n                if (\"pre_tags\".equals(topLevelFieldName) || \"preTags\".equals(topLevelFieldName)) {\n                    List<String> preTagsList = Lists.newArrayList();\n                    while ((token = parser.nextToken()) != XContentParser.Token.END_ARRAY) {\n                        preTagsList.add(parser.text());\n                    }\n                    globalOptionsBuilder.preTags(preTagsList.toArray(new String[preTagsList.size()]));\n                } else if (\"post_tags\".equals(topLevelFieldName) || \"postTags\".equals(topLevelFieldName)) {\n                    List<String> postTagsList = Lists.newArrayList();\n                    while ((token = parser.nextToken()) != XContentParser.Token.END_ARRAY) {\n                        postTagsList.add(parser.text());\n                    }\n                    globalOptionsBuilder.postTags(postTagsList.toArray(new String[postTagsList.size()]));\n                } else if (\"fields\".equals(topLevelFieldName)) {\n                    while ((token = parser.nextToken()) != XContentParser.Token.END_ARRAY) {\n                        if (token == XContentParser.Token.START_OBJECT) {\n                            String highlightFieldName = null;\n                            while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {\n                                if (token == XContentParser.Token.FIELD_NAME) {\n                                    if (highlightFieldName != null) {\n                                        throw new IllegalArgumentException(\"If highlighter fields is an array it must contain objects containing a single field\");\n                                    }\n                                    highlightFieldName = parser.currentName();\n                                } else if (token == XContentParser.Token.START_OBJECT) {\n                                    fieldsOptions.add(Tuple.tuple(highlightFieldName, parseFields(parser, queryParserService)));\n                                }\n                            }\n                        } else {\n                            throw new IllegalArgumentException(\"If highlighter fields is an array it must contain objects containing a single field\");\n                        }\n                    }\n                }\n            } else if (token.isValue()) {\n                if (\"order\".equals(topLevelFieldName)) {\n                    globalOptionsBuilder.scoreOrdered(\"score\".equals(parser.text()));\n                } else if (\"tags_schema\".equals(topLevelFieldName) || \"tagsSchema\".equals(topLevelFieldName)) {\n                    String schema = parser.text();\n                    if (\"styled\".equals(schema)) {\n                        globalOptionsBuilder.preTags(STYLED_PRE_TAG);\n                        globalOptionsBuilder.postTags(STYLED_POST_TAGS);\n                    }\n                } else if (\"highlight_filter\".equals(topLevelFieldName) || \"highlightFilter\".equals(topLevelFieldName)) {\n                    globalOptionsBuilder.highlightFilter(parser.booleanValue());\n                } else if (\"fragment_size\".equals(topLevelFieldName) || \"fragmentSize\".equals(topLevelFieldName)) {\n                    globalOptionsBuilder.fragmentCharSize(parser.intValue());\n                } else if (\"number_of_fragments\".equals(topLevelFieldName) || \"numberOfFragments\".equals(topLevelFieldName)) {\n                    globalOptionsBuilder.numberOfFragments(parser.intValue());\n                } else if (\"encoder\".equals(topLevelFieldName)) {\n                    globalOptionsBuilder.encoder(parser.text());\n                } else if (\"require_field_match\".equals(topLevelFieldName) || \"requireFieldMatch\".equals(topLevelFieldName)) {\n                    globalOptionsBuilder.requireFieldMatch(parser.booleanValue());\n                } else if (\"boundary_max_scan\".equals(topLevelFieldName) || \"boundaryMaxScan\".equals(topLevelFieldName)) {\n                    globalOptionsBuilder.boundaryMaxScan(parser.intValue());\n                } else if (\"boundary_chars\".equals(topLevelFieldName) || \"boundaryChars\".equals(topLevelFieldName)) {\n                    char[] charsArr = parser.text().toCharArray();\n                    Character[] globalBoundaryChars = new Character[charsArr.length];\n                    for (int i = 0; i < charsArr.length; i++) {\n                        globalBoundaryChars[i] = charsArr[i];\n                    }\n                    globalOptionsBuilder.boundaryChars(globalBoundaryChars);\n                } else if (\"type\".equals(topLevelFieldName)) {\n                    globalOptionsBuilder.highlighterType(parser.text());\n                } else if (\"fragmenter\".equals(topLevelFieldName)) {\n                    globalOptionsBuilder.fragmenter(parser.text());\n                } else if (\"no_match_size\".equals(topLevelFieldName) || \"noMatchSize\".equals(topLevelFieldName)) {\n                    globalOptionsBuilder.noMatchSize(parser.intValue());\n                } else if (\"force_source\".equals(topLevelFieldName) || \"forceSource\".equals(topLevelFieldName)) {\n                    globalOptionsBuilder.forceSource(parser.booleanValue());\n                } else if (\"phrase_limit\".equals(topLevelFieldName) || \"phraseLimit\".equals(topLevelFieldName)) {\n                    globalOptionsBuilder.phraseLimit(parser.intValue());\n                }\n            } else if (token == XContentParser.Token.START_OBJECT && \"options\".equals(topLevelFieldName)) {\n                globalOptionsBuilder.options(parser.map());\n            } else if (token == XContentParser.Token.START_OBJECT) {\n                if (\"fields\".equals(topLevelFieldName)) {\n                    String highlightFieldName = null;\n                    while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {\n                        if (token == XContentParser.Token.FIELD_NAME) {\n                            highlightFieldName = parser.currentName();\n                        } else if (token == XContentParser.Token.START_OBJECT) {\n                            fieldsOptions.add(Tuple.tuple(highlightFieldName, parseFields(parser, queryParserService)));\n                        }\n                    }\n                } else if (\"highlight_query\".equals(topLevelFieldName) || \"highlightQuery\".equals(topLevelFieldName)) {\n                    globalOptionsBuilder.highlightQuery(queryParserService.parse(parser).query());\n                }\n            }\n        }\n\n        final SearchContextHighlight.FieldOptions globalOptions = globalOptionsBuilder.build();\n        if (globalOptions.preTags() != null && globalOptions.postTags() == null) {\n            throw new IllegalArgumentException(\"Highlighter global preTags are set, but global postTags are not set\");\n        }\n\n        final List<SearchContextHighlight.Field> fields = Lists.newArrayList();\n        // now, go over and fill all fieldsOptions with default values from the global state\n        for (final Tuple<String, SearchContextHighlight.FieldOptions.Builder> tuple : fieldsOptions) {\n            fields.add(new SearchContextHighlight.Field(tuple.v1(), tuple.v2().merge(globalOptions).build()));\n        }\n        return new SearchContextHighlight(fields);\n    }","commit_id":"a843008b17efffc4ca897ebf3c0c2db96daa1b7f","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    public void testGlobalHighlightingSettingsOverriddenAtFieldLevel() {\n        createIndex(\"test\");\n        ensureGreen();\n\n        client().prepareIndex(\"test\", \"type1\")\n                .setSource(\"field1\", new String[]{\"this is a test\", \"this is the second test\"},\n                        \"field2\", new String[]{\"this is another test\", \"yet another test\"}).get();\n        refresh();\n\n        logger.info(\"--> highlighting and searching on field1 and field2 produces different tags\");\n        SearchSourceBuilder source = searchSource()\n                .query(termQuery(\"field1\", \"test\"))\n                .highlight(highlight().order(\"score\").preTags(\"<global>\").postTags(\"<\/global>\").fragmentSize(1).numOfFragments(1)\n                        .field(new HighlightBuilder.Field(\"field1\").numOfFragments(2))\n                        .field(new HighlightBuilder.Field(\"field2\").preTags(\"<field2>\").postTags(\"<\/field2>\").fragmentSize(50)));\n\n        SearchResponse searchResponse = client().prepareSearch(\"test\").setSource(source.buildAsBytes()).get();\n\n        assertHighlight(searchResponse, 0, \"field1\", 0, 2, equalTo(\" <global>test<\/global>\"));\n        assertHighlight(searchResponse, 0, \"field1\", 1, 2, equalTo(\" <global>test<\/global>\"));\n        assertHighlight(searchResponse, 0, \"field2\", 0, 1, equalTo(\"this is another <field2>test<\/field2>\"));\n    }","id":50962,"modified_method":"@Test\n    public void testGlobalHighlightingSettingsOverriddenAtFieldLevel() {\n        createIndex(\"test\");\n        ensureGreen();\n\n        client().prepareIndex(\"test\", \"type1\")\n                .setSource(\"field1\", new String[]{\"this is a test\", \"this is the second test\"},\n                        \"field2\", new String[]{\"this is another test\", \"yet another test\"}).get();\n        refresh();\n\n        logger.info(\"--> highlighting and searching on field1 and field2 produces different tags\");\n        SearchSourceBuilder source = searchSource()\n                .query(termQuery(\"field1\", \"test\"))\n                .highlight(highlight().order(\"score\").preTags(\"<global>\").postTags(\"<\/global>\").fragmentSize(1).numOfFragments(1)\n                        .field(new HighlightBuilder.Field(\"field1\").numOfFragments(2))\n                        .field(new HighlightBuilder.Field(\"field2\").preTags(\"<field2>\").postTags(\"<\/field2>\").fragmentSize(50).requireFieldMatch(false)));\n\n        SearchResponse searchResponse = client().prepareSearch(\"test\").setSource(source.buildAsBytes()).get();\n\n        assertHighlight(searchResponse, 0, \"field1\", 0, 2, equalTo(\" <global>test<\/global>\"));\n        assertHighlight(searchResponse, 0, \"field1\", 1, 2, equalTo(\" <global>test<\/global>\"));\n        assertHighlight(searchResponse, 0, \"field2\", 0, 1, equalTo(\"this is another <field2>test<\/field2>\"));\n    }","commit_id":"a843008b17efffc4ca897ebf3c0c2db96daa1b7f","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    public void testHighlightIssue1994() throws Exception {\n        assertAcked(prepareCreate(\"test\")\n                .addMapping(\"type1\", \"title\", \"type=string,store=no\", \"titleTV\", \"type=string,store=no,term_vector=with_positions_offsets\"));\n        ensureYellow();\n\n        indexRandom(false, client().prepareIndex(\"test\", \"type1\", \"1\")\n                .setSource(\"title\", new String[]{\"This is a test on the highlighting bug present in elasticsearch\", \"The bug is bugging us\"},\n                        \"titleTV\", new String[]{\"This is a test on the highlighting bug present in elasticsearch\", \"The bug is bugging us\"}));\n\n        indexRandom(true, client().prepareIndex(\"test\", \"type1\", \"2\")\n                .setSource(\"titleTV\", new String[]{\"some text to highlight\", \"highlight other text\"}));\n\n        SearchResponse search = client().prepareSearch()\n                .setQuery(matchQuery(\"title\", \"bug\"))\n                .addHighlightedField(\"title\", -1, 2)\n                .addHighlightedField(\"titleTV\", -1, 2)\n                .get();\n\n        assertHighlight(search, 0, \"title\", 0, equalTo(\"This is a test on the highlighting <em>bug<\/em> present in elasticsearch\"));\n        assertHighlight(search, 0, \"title\", 1, 2, equalTo(\"The <em>bug<\/em> is bugging us\"));\n        assertHighlight(search, 0, \"titleTV\", 0, equalTo(\"This is a test on the highlighting <em>bug<\/em> present in elasticsearch\"));\n        assertHighlight(search, 0, \"titleTV\", 1, 2, equalTo(\"The <em>bug<\/em> is bugging us\"));\n\n        search = client().prepareSearch()\n                .setQuery(matchQuery(\"titleTV\", \"highlight\"))\n                .addHighlightedField(\"titleTV\", -1, 2)\n                .get();\n\n        assertHighlight(search, 0, \"titleTV\", 0, equalTo(\"some text to <em>highlight<\/em>\"));\n        assertHighlight(search, 0, \"titleTV\", 1, 2, equalTo(\"<em>highlight<\/em> other text\"));\n    }","id":50963,"modified_method":"@Test\n    public void testHighlightIssue1994() throws Exception {\n        assertAcked(prepareCreate(\"test\")\n                .addMapping(\"type1\", \"title\", \"type=string,store=no\", \"titleTV\", \"type=string,store=no,term_vector=with_positions_offsets\"));\n        ensureYellow();\n\n        indexRandom(false, client().prepareIndex(\"test\", \"type1\", \"1\")\n                .setSource(\"title\", new String[]{\"This is a test on the highlighting bug present in elasticsearch\", \"The bug is bugging us\"},\n                        \"titleTV\", new String[]{\"This is a test on the highlighting bug present in elasticsearch\", \"The bug is bugging us\"}));\n\n        indexRandom(true, client().prepareIndex(\"test\", \"type1\", \"2\")\n                .setSource(\"titleTV\", new String[]{\"some text to highlight\", \"highlight other text\"}));\n\n        SearchResponse search = client().prepareSearch()\n                .setQuery(matchQuery(\"title\", \"bug\"))\n                .addHighlightedField(\"title\", -1, 2)\n                .addHighlightedField(\"titleTV\", -1, 2).setHighlighterRequireFieldMatch(false)\n                .get();\n\n        assertHighlight(search, 0, \"title\", 0, equalTo(\"This is a test on the highlighting <em>bug<\/em> present in elasticsearch\"));\n        assertHighlight(search, 0, \"title\", 1, 2, equalTo(\"The <em>bug<\/em> is bugging us\"));\n        assertHighlight(search, 0, \"titleTV\", 0, equalTo(\"This is a test on the highlighting <em>bug<\/em> present in elasticsearch\"));\n        assertHighlight(search, 0, \"titleTV\", 1, 2, equalTo(\"The <em>bug<\/em> is bugging us\"));\n\n        search = client().prepareSearch()\n                .setQuery(matchQuery(\"titleTV\", \"highlight\"))\n                .addHighlightedField(\"titleTV\", -1, 2)\n                .get();\n\n        assertHighlight(search, 0, \"titleTV\", 0, equalTo(\"some text to <em>highlight<\/em>\"));\n        assertHighlight(search, 0, \"titleTV\", 1, 2, equalTo(\"<em>highlight<\/em> other text\"));\n    }","commit_id":"a843008b17efffc4ca897ebf3c0c2db96daa1b7f","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    public void testFastVectorHighlighter() throws Exception {\n        assertAcked(prepareCreate(\"test\").addMapping(\"type1\", type1TermVectorMapping()));\n        ensureGreen();\n\n        client().prepareIndex(\"test\", \"type1\")\n                .setSource(\"field1\", \"this is a test\", \"field2\", \"The quick brown fox jumps over the lazy dog\").get();\n        refresh();\n\n        logger.info(\"--> highlighting and searching on field1\");\n        SearchSourceBuilder source = searchSource()\n                .query(termQuery(\"field1\", \"test\"))\n                .highlight(highlight().field(\"field1\", 100, 0).order(\"score\").preTags(\"<xxx>\").postTags(\"<\/xxx>\"));\n\n        SearchResponse searchResponse = client().prepareSearch(\"test\").setSource(source.buildAsBytes()).get();\n\n        assertHighlight(searchResponse, 0, \"field1\", 0, 1, equalTo(\"this is a <xxx>test<\/xxx>\"));\n\n        logger.info(\"--> searching on _all, highlighting on field1\");\n        source = searchSource()\n                .query(termQuery(\"_all\", \"test\"))\n                .highlight(highlight().field(\"field1\", 100, 0).order(\"score\").preTags(\"<xxx>\").postTags(\"<\/xxx>\"));\n\n        searchResponse = client().prepareSearch(\"test\").setSource(source.buildAsBytes()).get();\n\n        // LUCENE 3.1 UPGRADE: Caused adding the space at the end...\n        assertHighlight(searchResponse, 0, \"field1\", 0, 1, equalTo(\"this is a <xxx>test<\/xxx>\"));\n\n        logger.info(\"--> searching on _all, highlighting on field2\");\n        source = searchSource()\n                .query(termQuery(\"_all\", \"quick\"))\n                .highlight(highlight().field(\"field2\", 100, 0).order(\"score\").preTags(\"<xxx>\").postTags(\"<\/xxx>\"));\n\n        searchResponse = client().prepareSearch(\"test\").setSource(source.buildAsBytes()).get();\n\n        // LUCENE 3.1 UPGRADE: Caused adding the space at the end...\n        assertHighlight(searchResponse, 0, \"field2\", 0, 1, equalTo(\"The <xxx>quick<\/xxx> brown fox jumps over the lazy dog\"));\n\n        logger.info(\"--> searching on _all, highlighting on field2\");\n        source = searchSource()\n                .query(prefixQuery(\"_all\", \"qui\"))\n                .highlight(highlight().field(\"field2\", 100, 0).order(\"score\").preTags(\"<xxx>\").postTags(\"<\/xxx>\"));\n\n        searchResponse = client().prepareSearch(\"test\").setSource(source.buildAsBytes()).get();\n\n        // LUCENE 3.1 UPGRADE: Caused adding the space at the end...\n        assertHighlight(searchResponse, 0, \"field2\", 0, 1, equalTo(\"The <xxx>quick<\/xxx> brown fox jumps over the lazy dog\"));\n    }","id":50964,"modified_method":"@Test\n    public void testFastVectorHighlighter() throws Exception {\n        assertAcked(prepareCreate(\"test\").addMapping(\"type1\", type1TermVectorMapping()));\n        ensureGreen();\n\n        client().prepareIndex(\"test\", \"type1\")\n                .setSource(\"field1\", \"this is a test\", \"field2\", \"The quick brown fox jumps over the lazy dog\").get();\n        refresh();\n\n        logger.info(\"--> highlighting and searching on field1\");\n        SearchSourceBuilder source = searchSource()\n                .query(termQuery(\"field1\", \"test\"))\n                .highlight(highlight().field(\"field1\", 100, 0).order(\"score\").preTags(\"<xxx>\").postTags(\"<\/xxx>\"));\n\n        SearchResponse searchResponse = client().prepareSearch(\"test\").setSource(source.buildAsBytes()).get();\n\n        assertHighlight(searchResponse, 0, \"field1\", 0, 1, equalTo(\"this is a <xxx>test<\/xxx>\"));\n\n        logger.info(\"--> searching on _all, highlighting on field1\");\n        source = searchSource()\n                .query(termQuery(\"_all\", \"test\"))\n                .highlight(highlight().field(\"field1\", 100, 0).order(\"score\").preTags(\"<xxx>\").postTags(\"<\/xxx>\").requireFieldMatch(false));\n\n        searchResponse = client().prepareSearch(\"test\").setSource(source.buildAsBytes()).get();\n\n        // LUCENE 3.1 UPGRADE: Caused adding the space at the end...\n        assertHighlight(searchResponse, 0, \"field1\", 0, 1, equalTo(\"this is a <xxx>test<\/xxx>\"));\n\n        logger.info(\"--> searching on _all, highlighting on field2\");\n        source = searchSource()\n                .query(termQuery(\"_all\", \"quick\"))\n                .highlight(highlight().field(\"field2\", 100, 0).order(\"score\").preTags(\"<xxx>\").postTags(\"<\/xxx>\").requireFieldMatch(false));\n\n        searchResponse = client().prepareSearch(\"test\").setSource(source.buildAsBytes()).get();\n\n        // LUCENE 3.1 UPGRADE: Caused adding the space at the end...\n        assertHighlight(searchResponse, 0, \"field2\", 0, 1, equalTo(\"The <xxx>quick<\/xxx> brown fox jumps over the lazy dog\"));\n\n        logger.info(\"--> searching on _all, highlighting on field2\");\n        source = searchSource()\n                .query(prefixQuery(\"_all\", \"qui\"))\n                .highlight(highlight().field(\"field2\", 100, 0).order(\"score\").preTags(\"<xxx>\").postTags(\"<\/xxx>\").requireFieldMatch(false));\n\n        searchResponse = client().prepareSearch(\"test\").setSource(source.buildAsBytes()).get();\n\n        // LUCENE 3.1 UPGRADE: Caused adding the space at the end...\n        assertHighlight(searchResponse, 0, \"field2\", 0, 1, equalTo(\"The <xxx>quick<\/xxx> brown fox jumps over the lazy dog\"));\n    }","commit_id":"a843008b17efffc4ca897ebf3c0c2db96daa1b7f","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    public void testPlainHighlighter() throws Exception {\n        createIndex(\"test\");\n        ensureGreen();\n\n        client().prepareIndex(\"test\", \"type1\")\n                .setSource(\"field1\", \"this is a test\", \"field2\", \"The quick brown fox jumps over the lazy dog\").get();\n        refresh();\n\n        logger.info(\"--> highlighting and searching on field1\");\n        SearchSourceBuilder source = searchSource()\n                .query(termQuery(\"field1\", \"test\"))\n                .highlight(highlight().field(\"field1\").order(\"score\").preTags(\"<xxx>\").postTags(\"<\/xxx>\"));\n\n        SearchResponse searchResponse = client().prepareSearch(\"test\").setSource(source.buildAsBytes()).get();\n\n        assertHighlight(searchResponse, 0, \"field1\", 0, 1, equalTo(\"this is a <xxx>test<\/xxx>\"));\n\n        logger.info(\"--> searching on _all, highlighting on field1\");\n        source = searchSource()\n                .query(termQuery(\"_all\", \"test\"))\n                .highlight(highlight().field(\"field1\").order(\"score\").preTags(\"<xxx>\").postTags(\"<\/xxx>\"));\n\n        searchResponse = client().prepareSearch(\"test\").setSource(source.buildAsBytes()).get();\n\n        assertHighlight(searchResponse, 0, \"field1\", 0, 1, equalTo(\"this is a <xxx>test<\/xxx>\"));\n\n        logger.info(\"--> searching on _all, highlighting on field2\");\n        source = searchSource()\n                .query(termQuery(\"_all\", \"quick\"))\n                .highlight(highlight().field(\"field2\").order(\"score\").preTags(\"<xxx>\").postTags(\"<\/xxx>\"));\n\n        searchResponse = client().prepareSearch(\"test\").setSource(source.buildAsBytes()).get();\n\n        assertHighlight(searchResponse, 0, \"field2\", 0, 1, equalTo(\"The <xxx>quick<\/xxx> brown fox jumps over the lazy dog\"));\n\n        logger.info(\"--> searching on _all, highlighting on field2\");\n        source = searchSource()\n                .query(prefixQuery(\"_all\", \"qui\"))\n                .highlight(highlight().field(\"field2\").order(\"score\").preTags(\"<xxx>\").postTags(\"<\/xxx>\"));\n\n        searchResponse = client().prepareSearch(\"test\").setSource(source.buildAsBytes()).get();\n\n        assertHighlight(searchResponse, 0, \"field2\", 0, 1, equalTo(\"The <xxx>quick<\/xxx> brown fox jumps over the lazy dog\"));\n\n        logger.info(\"--> searching on _all with constant score, highlighting on field2\");\n        source = searchSource()\n                .query(constantScoreQuery(prefixQuery(\"_all\", \"qui\")))\n                .highlight(highlight().field(\"field2\").order(\"score\").preTags(\"<xxx>\").postTags(\"<\/xxx>\"));\n\n        searchResponse = client().prepareSearch(\"test\").setSource(source.buildAsBytes()).get();\n\n        assertHighlight(searchResponse, 0, \"field2\", 0, 1, equalTo(\"The <xxx>quick<\/xxx> brown fox jumps over the lazy dog\"));\n\n        logger.info(\"--> searching on _all with constant score, highlighting on field2\");\n        source = searchSource()\n                .query(boolQuery().should(constantScoreQuery(prefixQuery(\"_all\", \"qui\"))))\n                .highlight(highlight().field(\"field2\").order(\"score\").preTags(\"<xxx>\").postTags(\"<\/xxx>\"));\n\n        searchResponse = client().prepareSearch(\"test\").setSource(source.buildAsBytes()).get();\n        assertHighlight(searchResponse, 0, \"field2\", 0, 1, equalTo(\"The <xxx>quick<\/xxx> brown fox jumps over the lazy dog\"));\n    }","id":50965,"modified_method":"@Test\n    public void testPlainHighlighter() throws Exception {\n        createIndex(\"test\");\n        ensureGreen();\n\n        client().prepareIndex(\"test\", \"type1\")\n                .setSource(\"field1\", \"this is a test\", \"field2\", \"The quick brown fox jumps over the lazy dog\").get();\n        refresh();\n\n        logger.info(\"--> highlighting and searching on field1\");\n        SearchSourceBuilder source = searchSource()\n                .query(termQuery(\"field1\", \"test\"))\n                .highlight(highlight().field(\"field1\").order(\"score\").preTags(\"<xxx>\").postTags(\"<\/xxx>\"));\n\n        SearchResponse searchResponse = client().prepareSearch(\"test\").setSource(source.buildAsBytes()).get();\n\n        assertHighlight(searchResponse, 0, \"field1\", 0, 1, equalTo(\"this is a <xxx>test<\/xxx>\"));\n\n        logger.info(\"--> searching on _all, highlighting on field1\");\n        source = searchSource()\n                .query(termQuery(\"_all\", \"test\"))\n                .highlight(highlight().field(\"field1\").order(\"score\").preTags(\"<xxx>\").postTags(\"<\/xxx>\").requireFieldMatch(false));\n\n        searchResponse = client().prepareSearch(\"test\").setSource(source.buildAsBytes()).get();\n\n        assertHighlight(searchResponse, 0, \"field1\", 0, 1, equalTo(\"this is a <xxx>test<\/xxx>\"));\n\n        logger.info(\"--> searching on _all, highlighting on field2\");\n        source = searchSource()\n                .query(termQuery(\"_all\", \"quick\"))\n                .highlight(highlight().field(\"field2\").order(\"score\").preTags(\"<xxx>\").postTags(\"<\/xxx>\").requireFieldMatch(false));\n\n        searchResponse = client().prepareSearch(\"test\").setSource(source.buildAsBytes()).get();\n\n        assertHighlight(searchResponse, 0, \"field2\", 0, 1, equalTo(\"The <xxx>quick<\/xxx> brown fox jumps over the lazy dog\"));\n\n        logger.info(\"--> searching on _all, highlighting on field2\");\n        source = searchSource()\n                .query(prefixQuery(\"_all\", \"qui\"))\n                .highlight(highlight().field(\"field2\").order(\"score\").preTags(\"<xxx>\").postTags(\"<\/xxx>\").requireFieldMatch(false));\n\n        searchResponse = client().prepareSearch(\"test\").setSource(source.buildAsBytes()).get();\n\n        assertHighlight(searchResponse, 0, \"field2\", 0, 1, equalTo(\"The <xxx>quick<\/xxx> brown fox jumps over the lazy dog\"));\n\n        logger.info(\"--> searching on _all with constant score, highlighting on field2\");\n        source = searchSource()\n                .query(constantScoreQuery(prefixQuery(\"_all\", \"qui\")))\n                .highlight(highlight().field(\"field2\").order(\"score\").preTags(\"<xxx>\").postTags(\"<\/xxx>\").requireFieldMatch(false));\n\n        searchResponse = client().prepareSearch(\"test\").setSource(source.buildAsBytes()).get();\n\n        assertHighlight(searchResponse, 0, \"field2\", 0, 1, equalTo(\"The <xxx>quick<\/xxx> brown fox jumps over the lazy dog\"));\n\n        logger.info(\"--> searching on _all with constant score, highlighting on field2\");\n        source = searchSource()\n                .query(boolQuery().should(constantScoreQuery(prefixQuery(\"_all\", \"qui\"))))\n                .highlight(highlight().field(\"field2\").order(\"score\").preTags(\"<xxx>\").postTags(\"<\/xxx>\").requireFieldMatch(false));\n\n        searchResponse = client().prepareSearch(\"test\").setSource(source.buildAsBytes()).get();\n        assertHighlight(searchResponse, 0, \"field2\", 0, 1, equalTo(\"The <xxx>quick<\/xxx> brown fox jumps over the lazy dog\"));\n    }","commit_id":"a843008b17efffc4ca897ebf3c0c2db96daa1b7f","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    public void testPostingsHighlighter() throws Exception {\n        assertAcked(prepareCreate(\"test\").addMapping(\"type1\", type1PostingsffsetsMapping()));\n        ensureGreen();\n\n        client().prepareIndex(\"test\", \"type1\")\n                .setSource(\"field1\", \"this is a test\", \"field2\", \"The quick brown fox jumps over the lazy quick dog\").get();\n        refresh();\n\n        logger.info(\"--> highlighting and searching on field1\");\n        SearchSourceBuilder source = searchSource()\n                .query(termQuery(\"field1\", \"test\"))\n                .highlight(highlight().field(\"field1\").preTags(\"<xxx>\").postTags(\"<\/xxx>\"));\n        SearchResponse searchResponse = client().search(searchRequest(\"test\").source(source)).actionGet();\n\n        assertHighlight(searchResponse, 0, \"field1\", 0, 1, equalTo(\"this is a <xxx>test<\/xxx>\"));\n\n        logger.info(\"--> searching on _all, highlighting on field1\");\n        source = searchSource()\n                .query(termQuery(\"field1\", \"test\"))\n                .highlight(highlight().field(\"field1\").preTags(\"<xxx>\").postTags(\"<\/xxx>\"));\n\n        searchResponse = client().search(searchRequest(\"test\").source(source)).actionGet();\n\n        assertHighlight(searchResponse, 0, \"field1\", 0, 1, equalTo(\"this is a <xxx>test<\/xxx>\"));\n\n        logger.info(\"--> searching on _all, highlighting on field2\");\n        source = searchSource()\n                .query(termQuery(\"field2\", \"quick\"))\n                .highlight(highlight().field(\"field2\").order(\"score\").preTags(\"<xxx>\").postTags(\"<\/xxx>\"));\n\n        searchResponse = client().search(searchRequest(\"test\").source(source)).actionGet();\n\n        assertHighlight(searchResponse, 0, \"field2\", 0, 1, equalTo(\"The <xxx>quick<\/xxx> brown fox jumps over the lazy <xxx>quick<\/xxx> dog\"));\n\n        logger.info(\"--> searching on _all, highlighting on field2\");\n        source = searchSource()\n                .query(matchPhraseQuery(\"field2\", \"quick brown\"))\n                .highlight(highlight().field(\"field2\").preTags(\"<xxx>\").postTags(\"<\/xxx>\"));\n\n        searchResponse = client().search(searchRequest(\"test\").source(source)).actionGet();\n\n        //phrase query results in highlighting all different terms regardless of their positions\n        assertHighlight(searchResponse, 0, \"field2\", 0, 1, equalTo(\"The <xxx>quick<\/xxx> <xxx>brown<\/xxx> fox jumps over the lazy <xxx>quick<\/xxx> dog\"));\n\n        //lets fall back to the standard highlighter then, what people would do to highlight query matches\n        logger.info(\"--> searching on _all, highlighting on field2, falling back to the plain highlighter\");\n        source = searchSource()\n                .query(matchPhraseQuery(\"field2\", \"quick brown\"))\n                .highlight(highlight().field(\"field2\").preTags(\"<xxx>\").postTags(\"<\/xxx>\").highlighterType(\"highlighter\"));\n\n        searchResponse = client().search(searchRequest(\"test\").source(source)).actionGet();\n\n        assertHighlight(searchResponse, 0, \"field2\", 0, 1, equalTo(\"The <xxx>quick<\/xxx> <xxx>brown<\/xxx> fox jumps over the lazy quick dog\"));\n    }","id":50966,"modified_method":"@Test\n    public void testPostingsHighlighter() throws Exception {\n        assertAcked(prepareCreate(\"test\").addMapping(\"type1\", type1PostingsffsetsMapping()));\n        ensureGreen();\n\n        client().prepareIndex(\"test\", \"type1\")\n                .setSource(\"field1\", \"this is a test\", \"field2\", \"The quick brown fox jumps over the lazy quick dog\").get();\n        refresh();\n\n        logger.info(\"--> highlighting and searching on field1\");\n        SearchSourceBuilder source = searchSource()\n                .query(termQuery(\"field1\", \"test\"))\n                .highlight(highlight().field(\"field1\").preTags(\"<xxx>\").postTags(\"<\/xxx>\"));\n        SearchResponse searchResponse = client().search(searchRequest(\"test\").source(source)).actionGet();\n\n        assertHighlight(searchResponse, 0, \"field1\", 0, 1, equalTo(\"this is a <xxx>test<\/xxx>\"));\n\n        logger.info(\"--> searching on field1, highlighting on field1\");\n        source = searchSource()\n                .query(termQuery(\"field1\", \"test\"))\n                .highlight(highlight().field(\"field1\").preTags(\"<xxx>\").postTags(\"<\/xxx>\"));\n\n        searchResponse = client().search(searchRequest(\"test\").source(source)).actionGet();\n\n        assertHighlight(searchResponse, 0, \"field1\", 0, 1, equalTo(\"this is a <xxx>test<\/xxx>\"));\n\n        logger.info(\"--> searching on field2, highlighting on field2\");\n        source = searchSource()\n                .query(termQuery(\"field2\", \"quick\"))\n                .highlight(highlight().field(\"field2\").order(\"score\").preTags(\"<xxx>\").postTags(\"<\/xxx>\"));\n\n        searchResponse = client().search(searchRequest(\"test\").source(source)).actionGet();\n\n        assertHighlight(searchResponse, 0, \"field2\", 0, 1, equalTo(\"The <xxx>quick<\/xxx> brown fox jumps over the lazy <xxx>quick<\/xxx> dog\"));\n\n        logger.info(\"--> searching on field2, highlighting on field2\");\n        source = searchSource()\n                .query(matchPhraseQuery(\"field2\", \"quick brown\"))\n                .highlight(highlight().field(\"field2\").preTags(\"<xxx>\").postTags(\"<\/xxx>\"));\n\n        searchResponse = client().search(searchRequest(\"test\").source(source)).actionGet();\n\n        //phrase query results in highlighting all different terms regardless of their positions\n        assertHighlight(searchResponse, 0, \"field2\", 0, 1, equalTo(\"The <xxx>quick<\/xxx> <xxx>brown<\/xxx> fox jumps over the lazy <xxx>quick<\/xxx> dog\"));\n\n        //lets fall back to the standard highlighter then, what people would do to highlight query matches\n        logger.info(\"--> searching on field2, highlighting on field2, falling back to the plain highlighter\");\n        source = searchSource()\n                .query(matchPhraseQuery(\"_all\", \"quick brown\"))\n                .highlight(highlight().field(\"field2\").preTags(\"<xxx>\").postTags(\"<\/xxx>\").highlighterType(\"highlighter\").requireFieldMatch(false));\n\n        searchResponse = client().search(searchRequest(\"test\").source(source)).actionGet();\n\n        assertHighlight(searchResponse, 0, \"field2\", 0, 1, equalTo(\"The <xxx>quick<\/xxx> <xxx>brown<\/xxx> fox jumps over the lazy quick dog\"));\n    }","commit_id":"a843008b17efffc4ca897ebf3c0c2db96daa1b7f","url":"https://github.com/elastic/elasticsearch"},{"original_method":"protected Object getAndPut(Data key, Object value, ExpiryPolicy expiryPolicy,\n                               String caller, boolean getValue) {\n        return getAndPut(key, value, expiryPolicy, caller, getValue, false);\n    }","id":50967,"modified_method":"protected Object put(Data key, Object value, ExpiryPolicy expiryPolicy,\n                         String caller, boolean getValue) {\n        return put(key, value, expiryPolicy, caller, getValue, false);\n    }","commit_id":"2b08e68d4a209fb465b0b6eece06b1b3060d4f2a","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"@Override\n    public Object get(Data key, ExpiryPolicy expiryPolicy) {\n        expiryPolicy = getExpiryPolicy(expiryPolicy);\n\n        long now = Clock.currentTimeMillis();\n        Object value;\n        R record = records.get(key);\n        final boolean isExpired = processExpiredEntry(key, record, now);\n        if (record == null || isExpired) {\n            if (isStatisticsEnabled()) {\n                statistics.increaseCacheMisses(1);\n            }\n            value = readThroughCache(key);\n            if (value == null) {\n                return null;\n            }\n            createRecordWithExpiry(key, value, expiryPolicy, now, true);\n            return value;\n        } else {\n            value = recordToValue(record);\n            // updateAccessDuration(record, expiryPolicy, now);\n            onRecordAccess(record, expiryPolicy, now);\n            if (isStatisticsEnabled()) {\n                statistics.increaseCacheHits(1);\n            }\n            onGet(key, expiryPolicy, value, record);\n            return value;\n        }\n    }","id":50968,"modified_method":"@Override\n    public Object get(Data key, ExpiryPolicy expiryPolicy) {\n        expiryPolicy = getExpiryPolicy(expiryPolicy);\n\n        long now = Clock.currentTimeMillis();\n        Object value = null;\n        R record = records.get(key);\n        final boolean isExpired = processExpiredEntry(key, record, now);\n\n        try {\n            if (record == null || isExpired) {\n                if (isStatisticsEnabled()) {\n                    statistics.increaseCacheMisses(1);\n                }\n                value = readThroughCache(key);\n                if (value == null) {\n                    return null;\n                }\n                record = createRecordWithExpiry(key, value, expiryPolicy, now, true);\n            } else {\n                value = recordToValue(record);\n                onRecordAccess(record, expiryPolicy, now);\n                if (isStatisticsEnabled()) {\n                    statistics.increaseCacheHits(1);\n                }\n            }\n\n            onGet(key, expiryPolicy, value, record);\n\n            return value;\n        } catch (Throwable error) {\n            onGetError(key, expiryPolicy, value, record, error);\n            throw ExceptionUtil.rethrow(error);\n        }\n    }","commit_id":"2b08e68d4a209fb465b0b6eece06b1b3060d4f2a","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"protected void onDeleteRecordError(Data key, R record,\n                                       Data dataValue, Throwable error) {\n    }","id":50969,"modified_method":"protected void onDeleteRecordError(Data key, R record, Data dataValue,\n            boolean deleted, Throwable error) {\n    }","commit_id":"2b08e68d4a209fb465b0b6eece06b1b3060d4f2a","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"protected void onAfterPutIfAbsent(Data key, Object value, ExpiryPolicy expiryPolicy,\n                                      String caller, boolean disableWriteThrough,\n                                      R record, boolean isExpired, boolean isSaveSucceed) {\n    }","id":50970,"modified_method":"protected void onPutIfAbsent(Data key, Object value, ExpiryPolicy expiryPolicy, String caller,\n                                 boolean disableWriteThrough, R record, boolean isExpired,\n                                 boolean isSaveSucceed) {\n    }","commit_id":"2b08e68d4a209fb465b0b6eece06b1b3060d4f2a","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"protected R createRecord(Data keyData, Object value, long creationTime, long expirationTime) {\n        final R record = createRecord(value, creationTime, expirationTime);\n        if (record.getCreationTime() <= 0) {\n            record.setCreationTime(Clock.currentTimeMillis());\n        }\n        updateHasExpiringEntry(record);\n        if (isEventsEnabled) {\n            Data dataValue = toEventData(value);\n            publishEvent(name, CacheEventType.CREATED, keyData, null, dataValue, false);\n        }\n        return record;\n    }","id":50971,"modified_method":"protected R createRecord(Data keyData, Object value, long creationTime, long expirationTime) {\n        final R record = createRecord(value, creationTime, expirationTime);\n        if (record.getCreationTime() <= 0) {\n            record.setCreationTime(Clock.currentTimeMillis());\n        }\n        updateHasExpiringEntry(record);\n        if (isEventsEnabled) {\n            publishEvent(name, CacheEventType.CREATED,\n                         keyData, null, toEventData(value), false);\n        }\n        return record;\n    }","commit_id":"2b08e68d4a209fb465b0b6eece06b1b3060d4f2a","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"@Override\n    public Object getAndReplace(Data key, Object value, ExpiryPolicy expiryPolicy,\n                                String caller) {\n        expiryPolicy = getExpiryPolicy(expiryPolicy);\n\n        final long now = Clock.currentTimeMillis();\n        final long start = isStatisticsEnabled() ? System.nanoTime() : 0;\n\n        Object obj = null;\n        boolean result;\n        R record = records.get(key);\n        boolean isExpired = record != null && record.isExpiredAt(now);\n\n        onBeforeGetAndReplace(key, null, value, expiryPolicy, caller,\n                              true, record, isExpired);\n\n        if (record != null) {\n            obj = toValue(record);\n        }\n        if (record == null || isExpired) {\n            obj = null;\n            result = false;\n        } else {\n            result = updateRecordWithExpiry(key, value, record, expiryPolicy, now, false);\n        }\n\n        onAfterGetAndReplace(key, null, value, expiryPolicy, caller,\n                             false, record, isExpired, result);\n\n        updateHasExpiringEntry(record);\n\n        if (isStatisticsEnabled()) {\n            statistics.addGetTimeNanos(System.nanoTime() - start);\n            if (obj != null) {\n                statistics.increaseCacheHits(1);\n                statistics.increaseCachePuts(1);\n                statistics.addPutTimeNanos(System.nanoTime() - start);\n            } else {\n                statistics.increaseCacheMisses(1);\n            }\n        }\n\n        return obj;\n    }","id":50972,"modified_method":"@Override\n    public Object getAndReplace(Data key, Object value, ExpiryPolicy expiryPolicy, String caller) {\n        expiryPolicy = getExpiryPolicy(expiryPolicy);\n\n        final long now = Clock.currentTimeMillis();\n        final long start = isStatisticsEnabled() ? System.nanoTime() : 0;\n\n        Object obj = null;\n        boolean replaced = false;\n        R record = records.get(key);\n        boolean isExpired = record != null && record.isExpiredAt(now);\n\n        try {\n            if (record != null) {\n                obj = toValue(record);\n            }\n            if (record == null || isExpired) {\n                obj = null;\n                replaced = false;\n            } else {\n                replaced = updateRecordWithExpiry(key, value, record, expiryPolicy, now, false);\n            }\n\n            onReplace(key, null, value, expiryPolicy, caller,\n                      false, record, isExpired, replaced);\n\n            updateHasExpiringEntry(record);\n\n            if (isStatisticsEnabled()) {\n                statistics.addGetTimeNanos(System.nanoTime() - start);\n                if (obj != null) {\n                    statistics.increaseCacheHits(1);\n                    statistics.increaseCachePuts(1);\n                    statistics.addPutTimeNanos(System.nanoTime() - start);\n                } else {\n                    statistics.increaseCacheMisses(1);\n                }\n            }\n\n            return obj;\n        } catch (Throwable error) {\n            onReplaceError(key, null, value, expiryPolicy, caller,\n                           false, record, isExpired, replaced, error);\n            throw ExceptionUtil.rethrow(error);\n        }\n    }","commit_id":"2b08e68d4a209fb465b0b6eece06b1b3060d4f2a","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"protected boolean deleteRecord(Data key) {\n        final R record = records.remove(key);\n        Data dataValue = null;\n        try {\n            switch (cacheConfig.getInMemoryFormat()) {\n                case BINARY:\n                    dataValue = toData(record);\n                    break;\n                case OBJECT:\n                    dataValue = toData(record);\n                    break;\n                case NATIVE:\n                    dataValue = toData(record);\n                    break;\n                default:\n                    throw new IllegalArgumentException(\"Invalid storage format: \"\n                            + cacheConfig.getInMemoryFormat());\n            }\n\n            Data eventDataKey = toEventData(key);\n            Data eventDataValue = toEventData(dataValue);\n\n            onDeleteRecord(key, record, dataValue, record != null);\n\n            if (records.size() == 0) {\n                hasExpiringEntry = false;\n            }\n\n            if (isEventsEnabled) {\n                publishEvent(name, CacheEventType.REMOVED, eventDataKey,\n                             null, eventDataValue, false);\n            }\n\n            return record != null;\n        } catch (Throwable error) {\n            onDeleteRecordError(key, record, dataValue, error);\n            throw ExceptionUtil.rethrow(error);\n        }\n    }","id":50973,"modified_method":"protected boolean deleteRecord(Data key) {\n        final R record = records.remove(key);\n        Data dataValue = null;\n        try {\n            switch (cacheConfig.getInMemoryFormat()) {\n                case BINARY:\n                case OBJECT:\n                case NATIVE:\n                    dataValue = toData(record);\n                    break;\n                default:\n                    throw new IllegalArgumentException(\"Invalid storage format: \"\n                            + cacheConfig.getInMemoryFormat());\n            }\n\n            Data eventDataKey = toEventData(key);\n            Data eventDataValue = toEventData(dataValue);\n\n            onDeleteRecord(key, record, dataValue, record != null);\n\n            if (records.size() == 0) {\n                hasExpiringEntry = false;\n            }\n\n            if (isEventsEnabled) {\n                publishEvent(name, CacheEventType.REMOVED, eventDataKey,\n                             null, eventDataValue, false);\n            }\n\n            return record != null;\n        } catch (Throwable error) {\n            onDeleteRecordError(key, record, dataValue, record != null, error);\n            throw ExceptionUtil.rethrow(error);\n        }\n    }","commit_id":"2b08e68d4a209fb465b0b6eece06b1b3060d4f2a","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"@Override\n    public void put(Data key, Object value, ExpiryPolicy expiryPolicy, String caller) {\n        getAndPut(key, value, expiryPolicy, caller, false, false);\n    }","id":50974,"modified_method":"@Override\n    public void put(Data key, Object value, ExpiryPolicy expiryPolicy, String caller) {\n        put(key, value, expiryPolicy, caller, false, false);\n    }","commit_id":"2b08e68d4a209fb465b0b6eece06b1b3060d4f2a","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"protected Object getAndPut(Data key, Object value, ExpiryPolicy expiryPolicy,\n                               String caller, boolean getValue,\n                               boolean disableWriteThrough) {\n        expiryPolicy = getExpiryPolicy(expiryPolicy);\n\n        final long now = Clock.currentTimeMillis();\n        final long start = isStatisticsEnabled() ? System.nanoTime() : 0;\n\n        boolean isOnNewPut = false;\n        boolean isSaveSucceed = false;\n        Object oldValue = null;\n        R record = records.get(key);\n        boolean isExpired = processExpiredEntry(key, record, now);\n\n        try {\n            // check that new entry is not already expired, in which case it should\n            // not be added to the cache or listeners called or writers called.\n            if (record == null || isExpired) {\n                isOnNewPut = true;\n                onBeforeGetAndPut(key, value, expiryPolicy, caller, getValue, disableWriteThrough,\n                                  record, oldValue, isExpired, isOnNewPut);\n                record = createRecordWithExpiry(key, value, expiryPolicy, now, disableWriteThrough);\n                isSaveSucceed = record != null;\n            } else {\n                if (getValue) {\n                    oldValue = toValue(record);\n                }\n                onBeforeGetAndPut(key, value, expiryPolicy, caller, getValue, disableWriteThrough,\n                                  record, oldValue, isExpired, isOnNewPut);\n                isSaveSucceed = updateRecordWithExpiry(key, value, record, expiryPolicy,\n                                                       now, disableWriteThrough);\n            }\n\n            onAfterGetAndPut(key, value, expiryPolicy, caller, getValue, disableWriteThrough,\n                             record, oldValue, isExpired, isOnNewPut, isSaveSucceed);\n\n            updateGetAndPutStat(isSaveSucceed, getValue, oldValue == null, start);\n\n            updateHasExpiringEntry(record);\n\n            return oldValue;\n        } catch (Throwable error) {\n            onGetAndPutError(key, value, expiryPolicy, caller, getValue, disableWriteThrough,\n                             record, oldValue, isOnNewPut, error);\n            throw ExceptionUtil.rethrow(error);\n        }\n    }","id":50975,"modified_method":"protected Object put(Data key, Object value, ExpiryPolicy expiryPolicy,\n                         String caller, boolean getValue, boolean disableWriteThrough) {\n        expiryPolicy = getExpiryPolicy(expiryPolicy);\n\n        final long now = Clock.currentTimeMillis();\n        final long start = isStatisticsEnabled() ? System.nanoTime() : 0;\n\n        boolean isOnNewPut = false;\n        boolean isSaveSucceed;\n        Object oldValue = null;\n        R record = records.get(key);\n        boolean isExpired = processExpiredEntry(key, record, now);\n\n        try {\n            // check that new entry is not already expired, in which case it should\n            // not be added to the cache or listeners called or writers called.\n            if (record == null || isExpired) {\n                isOnNewPut = true;\n                record = createRecordWithExpiry(key, value, expiryPolicy, now, disableWriteThrough);\n                isSaveSucceed = record != null;\n            } else {\n                if (getValue) {\n                    oldValue = toValue(record);\n                }\n                isSaveSucceed = updateRecordWithExpiry(key, value, record, expiryPolicy,\n                                                       now, disableWriteThrough);\n            }\n\n            onPut(key, value, expiryPolicy, caller, getValue, disableWriteThrough,\n                    record, oldValue, isExpired, isOnNewPut, isSaveSucceed);\n\n            updateGetAndPutStat(isSaveSucceed, getValue, oldValue == null, start);\n\n            updateHasExpiringEntry(record);\n\n            return oldValue;\n        } catch (Throwable error) {\n            onPutError(key, value, expiryPolicy, caller, getValue, disableWriteThrough,\n                    record, oldValue, isOnNewPut, error);\n            throw ExceptionUtil.rethrow(error);\n        }\n    }","commit_id":"2b08e68d4a209fb465b0b6eece06b1b3060d4f2a","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"protected boolean putIfAbsent(Data key, Object value, ExpiryPolicy expiryPolicy,\n                                  String caller, boolean disableWriteThrough) {\n        expiryPolicy = getExpiryPolicy(expiryPolicy);\n\n        final long now = Clock.currentTimeMillis();\n        final long start = isStatisticsEnabled() ? System.nanoTime() : 0;\n\n        boolean result;\n        R record = records.get(key);\n        boolean isExpired = processExpiredEntry(key, record, now);\n\n        try {\n            if (record == null || isExpired) {\n                onBeforePutIfAbsent(key, value, expiryPolicy, caller,\n                                    disableWriteThrough, record, isExpired);\n                result = createRecordWithExpiry(key, value, expiryPolicy,\n                                                now, disableWriteThrough) != null;\n            } else {\n                result = false;\n            }\n\n            onAfterPutIfAbsent(key, value, expiryPolicy, caller,\n                               disableWriteThrough, record, isExpired, result);\n\n            updateHasExpiringEntry(record);\n\n            if (result && isStatisticsEnabled()) {\n                statistics.increaseCachePuts(1);\n                statistics.addPutTimeNanos(System.nanoTime() - start);\n            }\n\n            return result;\n        } catch (Throwable error) {\n            onPutIfAbsentError(key, value, expiryPolicy, caller,\n                               disableWriteThrough, record, error);\n            throw ExceptionUtil.rethrow(error);\n        }\n    }","id":50976,"modified_method":"protected boolean putIfAbsent(Data key, Object value, ExpiryPolicy expiryPolicy,\n                                  String caller, boolean disableWriteThrough) {\n        expiryPolicy = getExpiryPolicy(expiryPolicy);\n\n        final long now = Clock.currentTimeMillis();\n        final long start = isStatisticsEnabled() ? System.nanoTime() : 0;\n\n        boolean result;\n        R record = records.get(key);\n        boolean isExpired = processExpiredEntry(key, record, now);\n\n        try {\n            if (record == null || isExpired) {\n                result = createRecordWithExpiry(key, value, expiryPolicy,\n                                                now, disableWriteThrough) != null;\n            } else {\n                result = false;\n            }\n\n            onPutIfAbsent(key, value, expiryPolicy, caller,\n                          disableWriteThrough, record, isExpired, result);\n\n            updateHasExpiringEntry(record);\n\n            if (result && isStatisticsEnabled()) {\n                statistics.increaseCachePuts(1);\n                statistics.addPutTimeNanos(System.nanoTime() - start);\n            }\n\n            return result;\n        } catch (Throwable error) {\n            onPutIfAbsentError(key, value, expiryPolicy, caller,\n                               disableWriteThrough, record, error);\n            throw ExceptionUtil.rethrow(error);\n        }\n    }","commit_id":"2b08e68d4a209fb465b0b6eece06b1b3060d4f2a","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"public R processExpiredEntry(Data key, R record, long expiryTime, long now) {\n        final boolean isExpired = isExpiredAt(expiryTime, now);\n        if (!isExpired) {\n            return record;\n        }\n        if (isStatisticsEnabled()) {\n            statistics.increaseCacheExpiries(1);\n        }\n        records.remove(key);\n        if (isEventsEnabled) {\n            final Data dataValue;\n            switch (cacheConfig.getInMemoryFormat()) {\n                case BINARY:\n                    dataValue = toEventData(record);\n                    break;\n                case OBJECT:\n                    dataValue = toEventData(record);\n                    break;\n                case NATIVE:\n                    dataValue = toEventData(record);\n                    break;\n                default:\n                    throw new IllegalArgumentException(\"Invalid storage format: \"\n                            + cacheConfig.getInMemoryFormat());\n            }\n            publishEvent(name, CacheEventType.EXPIRED, key, null, dataValue, false);\n        }\n        return null;\n    }","id":50977,"modified_method":"public R processExpiredEntry(Data key, R record, long expiryTime, long now) {\n        final boolean isExpired = isExpiredAt(expiryTime, now);\n        if (!isExpired) {\n            return record;\n        }\n        if (isStatisticsEnabled()) {\n            statistics.increaseCacheExpiries(1);\n        }\n        records.remove(key);\n        if (isEventsEnabled) {\n            final Data dataValue;\n            switch (cacheConfig.getInMemoryFormat()) {\n                case BINARY:\n                case OBJECT:\n                case NATIVE:\n                    dataValue = toEventData(record);\n                    break;\n                default:\n                    throw new IllegalArgumentException(\"Invalid storage format: \"\n                            + cacheConfig.getInMemoryFormat());\n            }\n            publishEvent(name, CacheEventType.EXPIRED, key, null, dataValue, false);\n        }\n        return null;\n    }","commit_id":"2b08e68d4a209fb465b0b6eece06b1b3060d4f2a","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"@Override\n    public boolean replace(Data key, Object value, ExpiryPolicy expiryPolicy,\n                           String caller) {\n        expiryPolicy = getExpiryPolicy(expiryPolicy);\n\n        final long now = Clock.currentTimeMillis();\n        final long start = isStatisticsEnabled() ? System.nanoTime() : 0;\n\n        boolean result;\n        R record = records.get(key);\n        boolean isExpired = record != null && record.isExpiredAt(now);\n\n        onBeforeGetAndReplace(key, null, value, expiryPolicy, caller,\n                              false, record, isExpired);\n\n        if (record == null || isExpired) {\n            result = false;\n        } else {\n            result = updateRecordWithExpiry(key, value, record, expiryPolicy, now, false);\n        }\n\n        onAfterGetAndReplace(key, null, value, expiryPolicy, caller,\n                             false, record, isExpired, result);\n\n        updateHasExpiringEntry(record);\n\n        if (isStatisticsEnabled()) {\n            statistics.addGetTimeNanos(System.nanoTime() - start);\n            if (result) {\n                statistics.increaseCachePuts(1);\n                statistics.increaseCacheHits(1);\n                statistics.addPutTimeNanos(System.nanoTime() - start);\n            } else {\n                statistics.increaseCacheMisses(1);\n            }\n        }\n\n        return result;\n    }","id":50978,"modified_method":"@Override\n    public boolean replace(Data key, Object value, ExpiryPolicy expiryPolicy, String caller) {\n        expiryPolicy = getExpiryPolicy(expiryPolicy);\n\n        final long now = Clock.currentTimeMillis();\n        final long start = isStatisticsEnabled() ? System.nanoTime() : 0;\n\n        boolean replaced = false;\n        R record = records.get(key);\n        boolean isExpired = record != null && record.isExpiredAt(now);\n\n        try {\n            if (record == null || isExpired) {\n                replaced = false;\n            } else {\n                replaced = updateRecordWithExpiry(key, value, record, expiryPolicy, now, false);\n            }\n\n            onReplace(key, null, value, expiryPolicy, caller,\n                      false, record, isExpired, replaced);\n\n            updateHasExpiringEntry(record);\n\n            if (isStatisticsEnabled()) {\n                statistics.addGetTimeNanos(System.nanoTime() - start);\n                if (replaced) {\n                    statistics.increaseCachePuts(1);\n                    statistics.increaseCacheHits(1);\n                    statistics.addPutTimeNanos(System.nanoTime() - start);\n                } else {\n                    statistics.increaseCacheMisses(1);\n                }\n            }\n\n            return replaced;\n        } catch (Throwable error) {\n            onReplaceError(key, null, value, expiryPolicy, caller,\n                    false, record, isExpired, replaced, error);\n            throw ExceptionUtil.rethrow(error);\n        }\n    }","commit_id":"2b08e68d4a209fb465b0b6eece06b1b3060d4f2a","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"protected void onAfterGetAndPut(Data key, Object value,\n                                    ExpiryPolicy expiryPolicy, String caller,\n                                    boolean getValue, boolean disableWriteThrough,\n                                    R record, Object oldValue, boolean isExpired,\n                                    boolean isNewPut, boolean isSaveSucceed) {\n    }","id":50979,"modified_method":"protected void onPut(Data key, Object value, ExpiryPolicy expiryPolicy, String caller,\n                         boolean getValue, boolean disableWriteThrough, R record, Object oldValue,\n                         boolean isExpired, boolean isNewPut, boolean isSaveSucceed) {\n    }","commit_id":"2b08e68d4a209fb465b0b6eece06b1b3060d4f2a","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"protected void onAfterUpdateRecord(Data key, R record,\n                                       Object value, Data oldDataValue) {\n    }","id":50980,"modified_method":"protected void onUpdateRecord(Data key, R record, Object value, Data oldDataValue) {\n    }","commit_id":"2b08e68d4a209fb465b0b6eece06b1b3060d4f2a","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"protected void onBeforeGetAndReplace(Data key, Object oldValue,\n                                         Object newValue, ExpiryPolicy expiryPolicy,\n                                         String caller, boolean getValue,\n                                         R record, boolean isExpired) {\n    }","id":50981,"modified_method":"protected void onReplaceError(Data key, Object oldValue, Object newValue, ExpiryPolicy expiryPolicy,\n                                  String caller, boolean getValue, R record,\n                                  boolean isExpired, boolean replaced, Throwable error) {\n    }","commit_id":"2b08e68d4a209fb465b0b6eece06b1b3060d4f2a","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"@Override\n    public Object getAndPut(Data key, Object value, ExpiryPolicy expiryPolicy,\n                            String caller) {\n        return getAndPut(key, value, expiryPolicy, caller, true, false);\n    }","id":50982,"modified_method":"@Override\n    public Object getAndPut(Data key, Object value, ExpiryPolicy expiryPolicy, String caller) {\n        return put(key, value, expiryPolicy, caller, true, false);\n    }","commit_id":"2b08e68d4a209fb465b0b6eece06b1b3060d4f2a","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"@Override\n    public boolean remove(Data key, Object value, String caller) {\n        final long now = Clock.currentTimeMillis();\n        final long start = isStatisticsEnabled() ? System.nanoTime() : 0;\n\n        R record = records.get(key);\n        boolean isExpired = record != null && record.isExpiredAt(now);\n        int hitCount = 0;\n\n        boolean result = true;\n        if (record == null || isExpired) {\n            if (isStatisticsEnabled()) {\n                statistics.increaseCacheMisses(1);\n            }\n            result = false;\n        } else {\n            hitCount++;\n            if (compare(toValue(record), toValue(value))) {\n                deleteCacheEntry(key);\n                deleteRecord(key);\n            } else {\n                long expiryTime = onRecordAccess(record, defaultExpiryPolicy, now);\n                                    // updateAccessDuration(record, defaultExpiryPolicy, now);\n                processExpiredEntry(key, record, expiryTime, now);\n                result = false;\n            }\n        }\n\n        onRemove(key, value, caller, false, record, result);\n\n        if (records.size() == 0) {\n            hasExpiringEntry = false;\n        }\n\n        if (result && isStatisticsEnabled()) {\n            statistics.increaseCacheRemovals(1);\n            statistics.addRemoveTimeNanos(System.nanoTime() - start);\n            if (hitCount == 1) {\n                statistics.increaseCacheHits(hitCount);\n            } else {\n                statistics.increaseCacheMisses(1);\n            }\n        }\n\n        return result;\n    }","id":50983,"modified_method":"@Override\n    public boolean remove(Data key, Object value, String caller) {\n        final long now = Clock.currentTimeMillis();\n        final long start = isStatisticsEnabled() ? System.nanoTime() : 0;\n\n        R record = records.get(key);\n        boolean isExpired = record != null && record.isExpiredAt(now);\n        int hitCount = 0;\n        boolean removed = false;\n\n        try {\n            if (record == null || isExpired) {\n                if (isStatisticsEnabled()) {\n                    statistics.increaseCacheMisses(1);\n                }\n                removed = false;\n            } else {\n                hitCount++;\n                if (compare(toValue(record), toValue(value))) {\n                    deleteCacheEntry(key);\n                    removed = deleteRecord(key);\n                } else {\n                    long expiryTime = onRecordAccess(record, defaultExpiryPolicy, now);\n                    processExpiredEntry(key, record, expiryTime, now);\n                    removed = false;\n                }\n            }\n\n            onRemove(key, value, caller, false, record, removed);\n\n            if (records.size() == 0) {\n                hasExpiringEntry = false;\n            }\n\n            if (removed && isStatisticsEnabled()) {\n                statistics.increaseCacheRemovals(1);\n                statistics.addRemoveTimeNanos(System.nanoTime() - start);\n                if (hitCount == 1) {\n                    statistics.increaseCacheHits(hitCount);\n                } else {\n                    statistics.increaseCacheMisses(1);\n                }\n            }\n\n            return removed;\n        } catch (Throwable error) {\n            onRemoveError(key, null, caller, false, record, removed, error);\n            throw ExceptionUtil.rethrow(error);\n        }\n    }","commit_id":"2b08e68d4a209fb465b0b6eece06b1b3060d4f2a","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"public boolean processExpiredEntry(Data key, R record, long now) {\n        final boolean isExpired = record != null && record.isExpiredAt(now);\n        if (!isExpired) {\n            return false;\n        }\n        records.remove(key);\n        if (isEventsEnabled) {\n            final Data dataValue;\n            switch (cacheConfig.getInMemoryFormat()) {\n                case BINARY:\n                    dataValue = toEventData(record);\n                    break;\n                case OBJECT:\n                    dataValue = toEventData(record);\n                    break;\n                case NATIVE:\n                    dataValue = toEventData(record);\n                    break;\n                default:\n                    throw new IllegalArgumentException(\"Invalid storage format: \"\n                            + cacheConfig.getInMemoryFormat());\n            }\n            publishEvent(name, CacheEventType.EXPIRED, key, null, dataValue, false);\n        }\n        return true;\n    }","id":50984,"modified_method":"public boolean processExpiredEntry(Data key, R record, long now) {\n        final boolean isExpired = record != null && record.isExpiredAt(now);\n        if (!isExpired) {\n            return false;\n        }\n        records.remove(key);\n        if (isEventsEnabled) {\n            final Data dataValue;\n            switch (cacheConfig.getInMemoryFormat()) {\n                case BINARY:\n                case OBJECT:\n                case NATIVE:\n                    dataValue = toEventData(record);\n                    break;\n                default:\n                    throw new IllegalArgumentException(\"Invalid storage format: \"\n                            + cacheConfig.getInMemoryFormat());\n            }\n            publishEvent(name, CacheEventType.EXPIRED, key, null, dataValue, false);\n        }\n        return true;\n    }","commit_id":"2b08e68d4a209fb465b0b6eece06b1b3060d4f2a","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"@Override\n    public boolean remove(Data key, String caller) {\n        final long now = Clock.currentTimeMillis();\n        final long start = isStatisticsEnabled() ? System.nanoTime() : 0;\n\n        deleteCacheEntry(key);\n\n        R record = records.get(key);\n        boolean isExpired = record != null && record.isExpiredAt(now);\n\n        boolean result = true;\n        if (record == null || isExpired) {\n            result = false;\n        } else {\n            deleteRecord(key);\n        }\n\n        onRemove(key, null, caller, false, record, result);\n\n        if (records.size() == 0) {\n            hasExpiringEntry = false;\n        }\n\n        if (result && isStatisticsEnabled()) {\n            statistics.increaseCacheRemovals(1);\n            statistics.addRemoveTimeNanos(System.nanoTime() - start);\n        }\n\n        return result;\n    }","id":50985,"modified_method":"@Override\n    public boolean remove(Data key, String caller) {\n        final long now = Clock.currentTimeMillis();\n        final long start = isStatisticsEnabled() ? System.nanoTime() : 0;\n\n        deleteCacheEntry(key);\n\n        R record = records.get(key);\n        boolean isExpired = record != null && record.isExpiredAt(now);\n        boolean removed = false;\n\n        try {\n            if (record == null || isExpired) {\n                removed = false;\n            } else {\n                removed = deleteRecord(key);\n            }\n\n            onRemove(key, null, caller, false, record, removed);\n\n            if (records.size() == 0) {\n                hasExpiringEntry = false;\n            }\n\n            if (removed && isStatisticsEnabled()) {\n                statistics.increaseCacheRemovals(1);\n                statistics.addRemoveTimeNanos(System.nanoTime() - start);\n            }\n\n            return removed;\n        } catch (Throwable error) {\n            onRemoveError(key, null, caller, false, record, removed, error);\n            throw ExceptionUtil.rethrow(error);\n        }\n    }","commit_id":"2b08e68d4a209fb465b0b6eece06b1b3060d4f2a","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"protected void onAfterGetAndReplace(Data key, Object oldValue,\n                                        Object newValue, ExpiryPolicy expiryPolicy,\n                                        String caller, boolean getValue,\n                                        R record, boolean isExpired, boolean replaced) {\n    }","id":50986,"modified_method":"protected void onReplace(Data key, Object oldValue, Object newValue, ExpiryPolicy expiryPolicy,\n                             String caller, boolean getValue, R record,\n                             boolean isExpired, boolean replaced) {\n    }","commit_id":"2b08e68d4a209fb465b0b6eece06b1b3060d4f2a","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"protected void onBeforeGetAndPut(Data key, Object value, ExpiryPolicy expiryPolicy,\n                                     String caller, boolean getValue,\n                                     boolean disableWriteThrough, R record,\n                                     Object oldValue, boolean isExpired,\n                                     boolean willBeNewPut) {\n    }","id":50987,"modified_method":"protected void onGetError(Data key, ExpiryPolicy expiryPolicy, Object value,\n                              R record, Throwable error) {\n    }","commit_id":"2b08e68d4a209fb465b0b6eece06b1b3060d4f2a","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"protected R updateRecord(Data key, R record, Object value) {\n        Data dataOldValue = null;\n        Data dataValue = null;\n        Object v = value;\n        try {\n            switch (cacheConfig.getInMemoryFormat()) {\n                case BINARY:\n                    v = toData(value);\n                    dataValue = (Data) v;\n                    dataOldValue = toData(record);\n                    break;\n                case OBJECT:\n                    if (value instanceof Data) {\n                        v = dataToValue((Data) value);\n                        dataValue = (Data) value;\n                    } else {\n                        dataValue = valueToData(value);\n                    }\n                    dataOldValue = toData(record);\n                    break;\n                case NATIVE:\n                    v = toData(value);\n                    dataValue = (Data) v;\n                    dataOldValue = toData(record);\n                    break;\n                default:\n                    throw new IllegalArgumentException(\"Invalid storage format: \"\n                            + cacheConfig.getInMemoryFormat());\n            }\n\n            Data eventDataKey = toEventData(key);\n            Data eventDataValue = toEventData(dataValue);\n            Data eventDataOldValue = toEventData(dataOldValue);\n\n            onBeforeUpdateRecord(key, record, value, dataOldValue);\n            record.setValue(v);\n            onAfterUpdateRecord(key, record, value, dataOldValue);\n\n            updateHasExpiringEntry(record);\n\n            if (isEventsEnabled) {\n                publishEvent(name, CacheEventType.UPDATED, eventDataKey,\n                        eventDataOldValue, eventDataValue, true);\n            }\n            return record;\n        } catch (Throwable error) {\n            onUpdateRecordError(key, record, value, dataValue, dataOldValue, error);\n            throw ExceptionUtil.rethrow(error);\n        }\n    }","id":50988,"modified_method":"protected R updateRecord(Data key, R record, Object value) {\n        Data dataOldValue = null;\n        Data dataValue = null;\n        Object recordValue = value;\n        try {\n            switch (cacheConfig.getInMemoryFormat()) {\n                case BINARY:\n                    recordValue = toData(value);\n                    dataValue = (Data) recordValue;\n                    dataOldValue = toData(record);\n                    break;\n                case OBJECT:\n                    if (value instanceof Data) {\n                        recordValue = dataToValue((Data) value);\n                        dataValue = (Data) value;\n                    } else {\n                        dataValue = valueToData(value);\n                    }\n                    dataOldValue = toData(record);\n                    break;\n                case NATIVE:\n                    recordValue = toData(value);\n                    dataValue = (Data) recordValue;\n                    dataOldValue = toData(record);\n                    break;\n                default:\n                    throw new IllegalArgumentException(\"Invalid storage format: \"\n                            + cacheConfig.getInMemoryFormat());\n            }\n\n            Data eventDataKey = toEventData(key);\n            Data eventDataValue = toEventData(dataValue);\n            Data eventDataOldValue = toEventData(dataOldValue);\n\n            record.setValue(recordValue);\n\n            onUpdateRecord(key, record, value, dataOldValue);\n\n            updateHasExpiringEntry(record);\n\n            if (isEventsEnabled) {\n                publishEvent(name, CacheEventType.UPDATED, eventDataKey,\n                        eventDataOldValue, eventDataValue, true);\n            }\n            return record;\n        } catch (Throwable error) {\n            onUpdateRecordError(key, record, value, dataValue, dataOldValue, error);\n            throw ExceptionUtil.rethrow(error);\n        }\n    }","commit_id":"2b08e68d4a209fb465b0b6eece06b1b3060d4f2a","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"@Override\n    public boolean replace(Data key, Object oldValue, Object newValue,\n                           ExpiryPolicy expiryPolicy, String caller) {\n        expiryPolicy = getExpiryPolicy(expiryPolicy);\n\n        final long now = Clock.currentTimeMillis();\n        final long start = isStatisticsEnabled() ? System.nanoTime() : 0;\n\n        boolean isHit = false;\n        boolean result;\n        R record = records.get(key);\n        boolean isExpired = record != null && record.isExpiredAt(now);\n\n        onBeforeGetAndReplace(key, oldValue, newValue, expiryPolicy,\n                              caller, false, record, isExpired);\n\n        if (record == null || isExpired) {\n            result = false;\n        } else {\n            isHit = true;\n            Object currentValue = toValue(record);\n            if (compare(currentValue, toValue(oldValue))) {\n                result = updateRecordWithExpiry(key, newValue, record,\n                                                expiryPolicy, now, false);\n            } else {\n                // updateAccessDuration(record, expiryPolicy, now);\n                onRecordAccess(record, expiryPolicy, now);\n                result = false;\n            }\n        }\n\n        onAfterGetAndReplace(key, oldValue, newValue, expiryPolicy, caller,\n                             false, record, isExpired, result);\n\n        updateReplaceStat(result, isHit, start);\n\n        updateHasExpiringEntry(record);\n\n        return result;\n    }","id":50989,"modified_method":"@Override\n    public boolean replace(Data key, Object oldValue, Object newValue,\n                           ExpiryPolicy expiryPolicy, String caller) {\n        expiryPolicy = getExpiryPolicy(expiryPolicy);\n\n        final long now = Clock.currentTimeMillis();\n        final long start = isStatisticsEnabled() ? System.nanoTime() : 0;\n\n        boolean isHit = false;\n        boolean replaced = false;\n        R record = records.get(key);\n        boolean isExpired = record != null && record.isExpiredAt(now);\n\n        try {\n            if (record == null || isExpired) {\n                replaced = false;\n            } else {\n                isHit = true;\n                Object currentValue = toValue(record);\n                if (compare(currentValue, toValue(oldValue))) {\n                    replaced = updateRecordWithExpiry(key, newValue, record,\n                                                      expiryPolicy, now, false);\n                } else {\n                    onRecordAccess(record, expiryPolicy, now);\n                    replaced = false;\n                }\n            }\n\n            onReplace(key, oldValue, newValue, expiryPolicy, caller,\n                      false, record, isExpired, replaced);\n\n            updateReplaceStat(replaced, isHit, start);\n\n            updateHasExpiringEntry(record);\n\n            return replaced;\n        } catch (Throwable error) {\n            onReplaceError(key, oldValue, newValue, expiryPolicy, caller,\n                           false, record, isExpired, replaced, error);\n            throw ExceptionUtil.rethrow(error);\n        }\n    }","commit_id":"2b08e68d4a209fb465b0b6eece06b1b3060d4f2a","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"@Override\n    public Object getAndRemove(Data key, String caller) {\n        final long now = Clock.currentTimeMillis();\n        final long start = isStatisticsEnabled() ? System.nanoTime() : 0;\n\n        deleteCacheEntry(key);\n\n        R record = records.get(key);\n        boolean isExpired = record != null && record.isExpiredAt(now);\n\n        final Object obj;\n        boolean result;\n        if (record == null || isExpired) {\n            obj = null;\n            result = false;\n        } else {\n            obj = toValue(record);\n            result = deleteRecord(key);\n        }\n\n        onRemove(key, null, caller, false, record, result);\n\n        if (records.size() == 0) {\n            hasExpiringEntry = false;\n        }\n\n        if (isStatisticsEnabled()) {\n            statistics.addGetTimeNanos(System.nanoTime() - start);\n            if (obj != null) {\n                statistics.increaseCacheHits(1);\n                statistics.increaseCacheRemovals(1);\n                statistics.addRemoveTimeNanos(System.nanoTime() - start);\n            } else {\n                statistics.increaseCacheMisses(1);\n            }\n        }\n\n        return obj;\n    }","id":50990,"modified_method":"@Override\n    public Object getAndRemove(Data key, String caller) {\n        final long now = Clock.currentTimeMillis();\n        final long start = isStatisticsEnabled() ? System.nanoTime() : 0;\n\n        deleteCacheEntry(key);\n\n        R record = records.get(key);\n        boolean isExpired = record != null && record.isExpiredAt(now);\n        final Object obj;\n        boolean removed = false;\n\n        try {\n            if (record == null || isExpired) {\n                obj = null;\n                removed = false;\n            } else {\n                obj = toValue(record);\n                removed = deleteRecord(key);\n            }\n\n            onRemove(key, null, caller, false, record, removed);\n\n            if (records.size() == 0) {\n                hasExpiringEntry = false;\n            }\n\n            if (isStatisticsEnabled()) {\n                statistics.addGetTimeNanos(System.nanoTime() - start);\n                if (obj != null) {\n                    statistics.increaseCacheHits(1);\n                    statistics.increaseCacheRemovals(1);\n                    statistics.addRemoveTimeNanos(System.nanoTime() - start);\n                } else {\n                    statistics.increaseCacheMisses(1);\n                }\n            }\n\n            return obj;\n        } catch (Throwable error) {\n            onRemoveError(key, null, caller, false, record, removed, error);\n            throw ExceptionUtil.rethrow(error);\n        }\n    }","commit_id":"2b08e68d4a209fb465b0b6eece06b1b3060d4f2a","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"protected void onGetAndPutError(Data key, Object value, ExpiryPolicy expiryPolicy,\n                                    String caller, boolean getValue,\n                                    boolean disableWriteThrough, R record,\n                                    Object oldValue, boolean wouldBeNewPut,\n                                    Throwable error) {\n    }","id":50991,"modified_method":"protected void onPutError(Data key, Object value, ExpiryPolicy expiryPolicy, String caller,\n                              boolean getValue, boolean disableWriteThrough, R record,\n                              Object oldValue, boolean wouldBeNewPut, Throwable error) {\n    }","commit_id":"2b08e68d4a209fb465b0b6eece06b1b3060d4f2a","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"@Override\n    public Set<Data> loadAll(Set<Data> keys, boolean replaceExistingValues) {\n        Set<Data> keysLoaded = new HashSet<Data>();\n        Map<Data, Object> loaded = loadAllCacheEntry(keys);\n        if (loaded == null || loaded.isEmpty()) {\n            return keysLoaded;\n        }\n        if (replaceExistingValues) {\n            for (Map.Entry<Data, Object> entry : loaded.entrySet()) {\n                final Data key = entry.getKey();\n                final Object value = entry.getValue();\n                if (value != null) {\n                    getAndPut(key, value, null, null, false, true);\n                    keysLoaded.add(key);\n                }\n            }\n        } else {\n            for (Map.Entry<Data, Object> entry : loaded.entrySet()) {\n                final Data key = entry.getKey();\n                final Object value = entry.getValue();\n                if (value != null) {\n                    final boolean hasPut = putIfAbsent(key, value, null, null, true);\n                    if (hasPut) {\n                        keysLoaded.add(key);\n                    }\n                }\n            }\n        }\n        return keysLoaded;\n    }","id":50992,"modified_method":"@Override\n    public Set<Data> loadAll(Set<Data> keys, boolean replaceExistingValues) {\n        Set<Data> keysLoaded = new HashSet<Data>();\n        Map<Data, Object> loaded = loadAllCacheEntry(keys);\n        if (loaded == null || loaded.isEmpty()) {\n            return keysLoaded;\n        }\n        if (replaceExistingValues) {\n            for (Map.Entry<Data, Object> entry : loaded.entrySet()) {\n                final Data key = entry.getKey();\n                final Object value = entry.getValue();\n                if (value != null) {\n                    put(key, value, null, null, false, true);\n                    keysLoaded.add(key);\n                }\n            }\n        } else {\n            for (Map.Entry<Data, Object> entry : loaded.entrySet()) {\n                final Data key = entry.getKey();\n                final Object value = entry.getValue();\n                if (value != null) {\n                    final boolean hasPut = putIfAbsent(key, value, null, null, true);\n                    if (hasPut) {\n                        keysLoaded.add(key);\n                    }\n                }\n            }\n        }\n        return keysLoaded;\n    }","commit_id":"2b08e68d4a209fb465b0b6eece06b1b3060d4f2a","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"CacheDataRecord(Data value, long creationTime, long expiryTime) {\n        super(creationTime, expiryTime);\n        this.value = value;\n    }","id":50993,"modified_method":"public CacheDataRecord(Data value, long creationTime, long expiryTime) {\n        super(creationTime, expiryTime);\n        this.value = value;\n    }","commit_id":"2b08e68d4a209fb465b0b6eece06b1b3060d4f2a","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"CacheDataRecord() {\n        super();\n    }","id":50994,"modified_method":"public CacheDataRecord() {\n        super();\n    }","commit_id":"2b08e68d4a209fb465b0b6eece06b1b3060d4f2a","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"CacheObjectRecord(Object value, long creationTime, long expiryTime) {\n        super(creationTime, expiryTime);\n        this.value = value;\n    }","id":50995,"modified_method":"public CacheObjectRecord(Object value, long creationTime, long expiryTime) {\n        super(creationTime, expiryTime);\n        this.value = value;\n    }","commit_id":"2b08e68d4a209fb465b0b6eece06b1b3060d4f2a","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"/**\n     * Merge two documents BaseObject.\n     * \n     * @param sdoc the document to merge.\n     */\n    public void mergeObject(DefaultXObjectDocument sdoc)\n    {\n        if (getXClassManager() != sdoc.getXClassManager()) {\n            return;\n        }\n\n        getBaseObject(true).merge(sdoc.getBaseObject(false));\n    }","id":50996,"modified_method":"/**\n     * Overwrite current BaseObject fields with provided one. Only provided non null fields are\n     * copied.\n     * \n     * @param sdoc the document to merge.\n     */\n    public void mergeObject(DefaultXObjectDocument sdoc)\n    {\n        if (getXClassManager() != sdoc.getXClassManager()) {\n            return;\n        }\n\n        BaseObject obj1 = getBaseObject(true);\n        BaseObject obj2 = sdoc.getBaseObject(false);\n\n        for (Iterator it = obj1.getPropertyList().iterator(); it.hasNext();) {\n            String fieldName = (String) it.next();\n            Object fieldValue2 = obj2.safeget(fieldName);\n\n            if (fieldValue2 != null) {\n                obj1.safeput(fieldName, (PropertyInterface) ((BaseElement) fieldValue2).clone());\n            }\n        }\n    }","commit_id":"ae96ac446f199e11466e0a365968efb81f9d204c","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Merge two documents BaseObject.\n     * \n     * @param sdoc the document to merge.\n     */\n    public void mergeObject(DefaultXObjectDocument sdoc)\n    {\n        if (getXClassManager() != sdoc.getXClassManager()) {\n            return;\n        }\n\n        getBaseObject(true).merge(sdoc.getBaseObject(false));\n    }","id":50997,"modified_method":"/**\n     * Overwrite current BaseObject fields with provided one. Only provided non null fields are\n     * copied.\n     * \n     * @param sdoc the document to merge.\n     */\n    public void mergeObject(DefaultXObjectDocument sdoc)\n    {\n        if (getXClassManager() != sdoc.getXClassManager()) {\n            return;\n        }\n\n        BaseObject obj1 = getBaseObject(true);\n        BaseObject obj2 = sdoc.getBaseObject(false);\n\n        for (Iterator it = obj1.getPropertyList().iterator(); it.hasNext();) {\n            String fieldName = (String) it.next();\n            Object fieldValue2 = obj2.safeget(fieldName);\n\n            if (fieldValue2 != null) {\n                obj1.safeput(fieldName, (PropertyInterface) ((BaseElement) fieldValue2).clone());\n            }\n        }\n    }","commit_id":"49ba14ab725d04bc03314521e79d490b27dbbf65","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public synchronized void SaleDoubleClick() {\r\n        if (wasMouseDoubleClicked()) {\r\n            String sale = selectedSale();\r\n            if (null != sale) {\r\n                replaceSaleAndDeleteShoppingList_();\r\n            }\r\n        }\r\n    }","id":50998,"modified_method":"public synchronized void saleDoubleClick() {\r\n        if (wasMouseDoubleClicked()) {\r\n            String sale = selectedSale();\r\n            if (null != sale) {\r\n                replaceSaleAndDeleteShoppingList_();\r\n            }\r\n        }\r\n    }","commit_id":"58f204c36b43080ed8701e3d83b56f8da9e1be8f","url":"https://github.com/apache/ofbiz"},{"original_method":"public void openDlg() {\r\n        XDialog dlg = (XDialog) pageMgr.loadPage(m_pos.getScreenLocation() + \"/dialog/loadsale\");\r\n        m_dialog = dlg;\r\n        dlg.setCaption(UtilProperties.getMessage(\"pos\", \"LoadASale\", Locale.getDefault()));\r\n        //dlg.setModal(true);\r\n        m_salesList = (XList) dlg.findComponent(\"salesList\");\r\n        addMouseHandler(m_salesList, \"SaleDoubleClick\");\r\n\r\n        m_cancel = (XButton) dlg.findComponent(\"BtnCancel\");\r\n        m_add = (XButton) dlg.findComponent(\"BtnAdd\");\r\n        m_replace = (XButton) dlg.findComponent(\"BtnReplace\");\r\n        m_delete = (XButton) dlg.findComponent(\"BtnDelete\");\r\n        m_replaceAndDelete = (XButton) dlg.findComponent(\"BtnReplaceAndDelete\");\r\n        addMouseHandler(m_cancel, \"cancel\");\r\n        addMouseHandler(m_add, \"addSale\");\r\n        addMouseHandler(m_replace, \"replaceSale\");\r\n        addMouseHandler(m_delete, \"deleteShoppingList\");\r\n        addMouseHandler(m_replaceAndDelete, \"replaceSaleAndDeleteShoppingList\");\r\n\r\n        m_listModel = new DefaultListModel();\r\n        for (Iterator i = m_saleMap.entrySet().iterator(); i.hasNext();) {\r\n            Object o = i.next();\r\n            Map.Entry entry = (Map.Entry)o;\r\n            String val = entry.getValue().toString();\r\n            m_listModel.addElement(val);\r\n        }\r\n        m_salesList.setModel(m_listModel);\r\n        m_salesList.setVisibleRowCount(-1);\r\n        m_salesList.ensureIndexIsVisible(m_salesList.getItemCount());     \r\n        m_salesList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);\r\n        m_salesList.setToolTipText(UtilProperties.getMessage(\"pos\", \"LoadSaleListDblClickTip\", Locale.getDefault()));\r\n\r\n        dlg.pack();\r\n        dlg.showDialog(this);\r\n    }","id":50999,"modified_method":"public void openDlg() {\r\n        m_dialog = (XDialog) pageMgr.loadPage(m_pos.getScreenLocation() + \"/dialog/loadsale\");\r\n        m_dialog.setCaption(UtilProperties.getMessage(\"pos\", \"LoadASale\", Locale.getDefault()));\r\n        m_salesList = (XList) m_dialog.findComponent(\"salesList\");\r\n        addMouseHandler(m_salesList, \"saleDoubleClick\");\r\n\r\n        m_cancel = (XButton) m_dialog.findComponent(\"BtnCancel\");\r\n        m_add = (XButton) m_dialog.findComponent(\"BtnAdd\");\r\n        m_replace = (XButton) m_dialog.findComponent(\"BtnReplace\");\r\n        m_delete = (XButton) m_dialog.findComponent(\"BtnDelete\");\r\n        m_replaceAndDelete = (XButton) m_dialog.findComponent(\"BtnReplaceAndDelete\");\r\n        addMouseHandler(m_cancel, \"cancel\");\r\n        addMouseHandler(m_add, \"addSale\");\r\n        addMouseHandler(m_replace, \"replaceSale\");\r\n        addMouseHandler(m_delete, \"deleteShoppingList\");\r\n        addMouseHandler(m_replaceAndDelete, \"replaceSaleAndDeleteShoppingList\");\r\n\r\n        m_listModel = new DefaultListModel();\r\n        for (Iterator i = m_saleMap.entrySet().iterator(); i.hasNext();) {\r\n            Object o = i.next();\r\n            Map.Entry entry = (Map.Entry)o;\r\n            String val = entry.getValue().toString();\r\n            m_listModel.addElement(val);\r\n        }\r\n        m_salesList.setModel(m_listModel);\r\n        m_salesList.setVisibleRowCount(-1);\r\n        m_salesList.ensureIndexIsVisible(m_salesList.getItemCount());     \r\n        m_salesList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);\r\n        m_salesList.setToolTipText(UtilProperties.getMessage(\"pos\", \"LoadSaleListDblClickTip\", Locale.getDefault()));\r\n\r\n        m_dialog.pack();\r\n        m_salesList.requestFocusInWindow();\r\n        m_dialog.showDialog(this);\r\n    }","commit_id":"58f204c36b43080ed8701e3d83b56f8da9e1be8f","url":"https://github.com/apache/ofbiz"}]