[{"original_method":"/**\n   * Returns an exception if the name of a pre-defined functions is similar to the\n   * specified function name.\n   * @param name function name\n   * @param ii input info\n   * @return query exception\n   */\n  QueryException similarError(final QNm name, final InputInfo ii) {\n    // compare specified name with names of predefined functions\n    final byte[] ln = name.local();\n    final Levenshtein ls = new Levenshtein();\n    for(int k = 1; k < size; ++k) {\n      final int i = indexOf(keys[k], '}');\n      final byte[] u = substring(keys[k], 2, i);\n      final byte[] l = substring(keys[k], i + 1);\n      if(eq(ln, l)) {\n        final byte[] prefix = NSGlobal.prefix(name.uri());\n        return FUNCSIMILAR.get(ii, prefix.length != 0 ? concat(prefix, token(\":\"), l) : name.id(),\n          new TokenBuilder(NSGlobal.prefix(u)).add(':').add(l));\n      } else if(ls.similar(ln, l)) {\n        return FUNCSIMILAR.get(ii, name.string(), l);\n      }\n    }\n    return null;\n  }","id":61000,"modified_method":"/**\n   * Returns an exception if the name of a pre-defined function is similar to the\n   * specified function name.\n   * @param name function name\n   * @param ii input info\n   * @return query exception\n   */\n  QueryException similarError(final QNm name, final InputInfo ii) {\n    // compare specified name with names of predefined functions\n    final byte[] ln = name.local();\n    final Levenshtein ls = new Levenshtein();\n    for(int k = 1; k < size; ++k) {\n      final int i = indexOf(keys[k], '}');\n      final byte[] u = substring(keys[k], 2, i);\n      final byte[] l = substring(keys[k], i + 1);\n      if(eq(ln, l)) {\n        return FUNCSIMILAR.get(ii, name.prefixId(FNURI),\n            new TokenBuilder(NSGlobal.prefix(u)).add(':').add(l));\n      } else if(ls.similar(ln, l)) {\n        return FUNCSIMILAR.get(ii, name.string(), l);\n      }\n    }\n    return null;\n  }","commit_id":"06f25f83f60da4d2a2dce93c7352f6e2dfa2c5f2","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\n  public String getMessage() {\n    final TokenBuilder tb = new TokenBuilder();\n    if(info != null) tb.add(STOPPED_AT).add(info.toString()).add(COL).add(NL);\n    final byte[] code = name.local();\n    if(code.length != 0) tb.add('[').add(code).add(\"] \");\n    tb.add(getLocalizedMessage());\n    if(!stack.isEmpty()) {\n      tb.add(NL).add(NL).add(STACK_TRACE).add(COL);\n      for(final InputInfo ii : stack) tb.add(NL).add(LI).add(ii.toString());\n    }\n    return tb.toString();\n  }","id":61001,"modified_method":"@Override\n  public String getMessage() {\n    final TokenBuilder tb = new TokenBuilder();\n    if(info != null) tb.add(STOPPED_AT).add(info.toString()).add(COL).add(NL);\n    final byte[] code = name.local();\n    if(code.length != 0) tb.add('[').add(name.prefixId(QueryText.ERRORURI)).add(\"] \");\n    tb.add(getLocalizedMessage());\n    if(!stack.isEmpty()) {\n      tb.add(NL).add(NL).add(STACK_TRACE).add(COL);\n      for(final InputInfo ii : stack) tb.add(NL).add(LI).add(ii.toString());\n    }\n    return tb.toString();\n  }","commit_id":"06f25f83f60da4d2a2dce93c7352f6e2dfa2c5f2","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Runs all tests.\n   * @param suites root element\n   * @throws IOException query exception\n   */\n  public void test(final FElem suites) throws IOException {\n    final FElem suite = new FElem(TESTSUITE).add(NAME, file.url());\n    final ArrayList<StaticFunc> before = new ArrayList<StaticFunc>(0);\n    final ArrayList<StaticFunc> after = new ArrayList<StaticFunc>(0);\n    final ArrayList<StaticFunc> beforeModule = new ArrayList<StaticFunc>(0);\n    final ArrayList<StaticFunc> afterModule = new ArrayList<StaticFunc>(0);\n    final ArrayList<StaticFunc> test = new ArrayList<StaticFunc>(0);\n    final Performance perf = new Performance();\n\n    try {\n      final QueryContext qc = new QueryContext(ctx);\n      input = string(file.read());\n      qc.parse(input, file.path(), null);\n      funcs = qc.funcs.funcs();\n\n      // loop through all functions\n      for(final StaticFunc uf : funcs) {\n        // find Unit annotations\n        final Ann ann = uf.ann;\n        final int as = ann.size();\n        boolean xq = false;\n        for(int a = 0; !xq && a < as; a++) {\n          xq |= eq(ann.names[a].uri(), QueryText.UNITURI);\n        }\n        if(!xq) continue;\n\n        // Unit function:\n        if(uf.ann.contains(Ann.Q_PRIVATE)) throw UNIT_PRIVATE.get(null, uf.name.local());\n        if(uf.args.length > 0) throw UNIT_ARGS.get(null, uf.name.local());\n\n        if(indexOf(uf, BEFORE) != -1) before.add(uf);\n        if(indexOf(uf, AFTER) != -1) after.add(uf);\n        if(indexOf(uf, BEFORE_MODULE) != -1) beforeModule.add(uf);\n        if(indexOf(uf, AFTER_MODULE) != -1) afterModule.add(uf);\n        if(indexOf(uf, TEST) != -1) test.add(uf);\n      }\n\n      // call initializing functions before first test\n      for(final StaticFunc uf : beforeModule) eval(uf);\n\n      for(final StaticFunc uf : test) {\n        // check arguments\n        final Value values = uf.ann.values[indexOf(uf, TEST)];\n        final long vs = values.size();\n\n        // expected error code\n        byte[] code = null;\n        if(vs != 0) {\n          if(vs == 2 && eq(EXPECTED, values.itemAt(0).string(null))) {\n            code = values.itemAt(1).string(null);\n          } else {\n            throw UNIT_ANN.get(null, '%', uf.ann.names[0]);\n          }\n        }\n\n        final FElem testcase = new FElem(TESTCASE).add(NAME, uf.name.local());\n        tests++;\n\n        final Performance perf2 = new Performance();\n        final int skip = indexOf(uf, IGNORE);\n        if(skip == -1) {\n          try {\n            // call functions marked with \"before\"\n            for(final StaticFunc fn : before) eval(fn);\n            // call functions\n            eval(uf);\n            // call functions marked with \"after\"\n            for(final StaticFunc fn : after) eval(fn);\n\n            if(code != null) {\n              failures++;\n              testcase.add(new FElem(FAILURE).add(new FElem(EXPECTED).add(code)));\n            }\n          } catch(final QueryException ex) {\n            final QNm name = ex.qname();\n            if(code == null || !eq(code, name.local())) {\n              final FElem error;\n              final boolean failure = eq(name.uri(), QueryText.UNITURI);\n              if(failure) {\n                failures++;\n                error = new FElem(FAILURE);\n              } else {\n                errors++;\n                error = new FElem(ERROR);\n              }\n              error.add(LINE, token(ex.line()));\n              error.add(COLUMN, token(ex.column()));\n\n              if(ex instanceof UnitException) {\n                final UnitException ue = (UnitException) ex;\n                error.add(elem(ue.returned, RETURNED, ue.count));\n                error.add(elem(ue.expected, EXPECTED, ue.count));\n              } else {\n                if(!failure) error.add(TYPE, ex.qname().local());\n                error.add(ex.getLocalizedMessage());\n              }\n              testcase.add(error);\n            }\n          }\n        } else {\n          // skip test\n          final Value sv = uf.ann.values[skip];\n          testcase.add(SKIPPED, sv.isEmpty() ? EMPTY : sv.itemAt(0).string(null));\n          skipped++;\n        }\n        testcase.add(TIME, time(perf2));\n        suite.add(testcase);\n      }\n\n      // run finalizing tests\n      for(final StaticFunc uf : afterModule) eval(uf);\n\n    } catch(final QueryException ex) {\n      if(current == null) {\n        // handle parsing errors\n        final FElem error = new FElem(ERROR);\n        error.add(LINE, token(ex.line()));\n        error.add(COLUMN, token(ex.column()));\n        error.add(TYPE, ex.qname().local());\n        error.add(ex.getLocalizedMessage());\n        suite.add(error);\n      } else {\n        // handle initializers\n        final FElem testcase = new FElem(TESTCASE).add(NAME, current.name.local());\n        testcase.add(TIME, time(perf));\n        suite.add(testcase);\n      }\n      errors++;\n    }\n\n    if(suite.hasChildren()) {\n      suite.add(TIME, time(perf));\n      suite.add(TESTS, token(tests));\n      suite.add(FAILURES, token(failures));\n      suite.add(ERRORS, token(errors));\n      suite.add(SKIPPED, token(skipped));\n      suites.add(suite);\n    }\n  }","id":61002,"modified_method":"/**\n   * Runs all tests.\n   * @param suites root element\n   * @throws IOException query exception\n   */\n  public void test(final FElem suites) throws IOException {\n    final FElem suite = new FElem(TESTSUITE).add(NAME, file.url());\n    final ArrayList<StaticFunc> before = new ArrayList<StaticFunc>(0);\n    final ArrayList<StaticFunc> after = new ArrayList<StaticFunc>(0);\n    final ArrayList<StaticFunc> beforeModule = new ArrayList<StaticFunc>(0);\n    final ArrayList<StaticFunc> afterModule = new ArrayList<StaticFunc>(0);\n    final ArrayList<StaticFunc> test = new ArrayList<StaticFunc>(0);\n    final Performance perf = new Performance();\n\n    try {\n      final QueryContext qc = new QueryContext(ctx);\n      input = string(file.read());\n      qc.parse(input, file.path(), null);\n      funcs = qc.funcs.funcs();\n\n      // loop through all functions\n      for(final StaticFunc uf : funcs) {\n        // find Unit annotations\n        final Ann ann = uf.ann;\n        final int as = ann.size();\n        boolean xq = false;\n        for(int a = 0; !xq && a < as; a++) {\n          xq |= eq(ann.names[a].uri(), QueryText.UNITURI);\n        }\n        if(!xq) continue;\n\n        // Unit function:\n        if(uf.ann.contains(Ann.Q_PRIVATE)) throw UNIT_PRIVATE.get(null, uf.name.local());\n        if(uf.args.length > 0) throw UNIT_ARGS.get(null, uf.name.local());\n\n        if(indexOf(uf, BEFORE) != -1) before.add(uf);\n        if(indexOf(uf, AFTER) != -1) after.add(uf);\n        if(indexOf(uf, BEFORE_MODULE) != -1) beforeModule.add(uf);\n        if(indexOf(uf, AFTER_MODULE) != -1) afterModule.add(uf);\n        if(indexOf(uf, TEST) != -1) test.add(uf);\n      }\n\n      // call initializing functions before first test\n      for(final StaticFunc uf : beforeModule) eval(uf);\n\n      for(final StaticFunc uf : test) {\n        // check arguments\n        final Value values = uf.ann.values[indexOf(uf, TEST)];\n        final long vs = values.size();\n\n        // expected error code\n        byte[] code = null;\n        if(vs != 0) {\n          if(vs == 2 && eq(EXPECTED, values.itemAt(0).string(null))) {\n            code = values.itemAt(1).string(null);\n          } else {\n            throw UNIT_ANN.get(null, '%', uf.ann.names[0]);\n          }\n        }\n\n        final FElem testcase = new FElem(TESTCASE).add(NAME, uf.name.local());\n        tests++;\n\n        final Performance perf2 = new Performance();\n        final int skip = indexOf(uf, IGNORE);\n        if(skip == -1) {\n          try {\n            // call functions marked with \"before\"\n            for(final StaticFunc fn : before) eval(fn);\n            // call functions\n            eval(uf);\n            // call functions marked with \"after\"\n            for(final StaticFunc fn : after) eval(fn);\n\n            if(code != null) {\n              failures++;\n              testcase.add(new FElem(FAILURE).add(new FElem(EXPECTED).add(code)));\n            }\n          } catch(final QueryException ex) {\n            final QNm name = ex.qname();\n            if(code == null || !eq(code, name.local())) {\n              final FElem error;\n              final boolean failure = Err.UNIT_ASSERT.eq(name);\n              if(failure) {\n                failures++;\n                error = new FElem(FAILURE);\n              } else {\n                errors++;\n                error = new FElem(ERROR);\n              }\n              error.add(LINE, token(ex.line()));\n              error.add(COLUMN, token(ex.column()));\n\n              if(ex instanceof UnitException) {\n                final UnitException ue = (UnitException) ex;\n                error.add(elem(ue.returned, RETURNED, ue.count));\n                error.add(elem(ue.expected, EXPECTED, ue.count));\n              } else {\n                if(!failure) error.add(TYPE, ex.qname().prefixId(QueryText.ERRORURI));\n                error.add(ex.getLocalizedMessage());\n              }\n              testcase.add(error);\n            }\n          }\n        } else {\n          // skip test\n          final Value sv = uf.ann.values[skip];\n          testcase.add(SKIPPED, sv.isEmpty() ? EMPTY : sv.itemAt(0).string(null));\n          skipped++;\n        }\n        testcase.add(TIME, time(perf2));\n        suite.add(testcase);\n      }\n\n      // run finalizing tests\n      for(final StaticFunc uf : afterModule) eval(uf);\n\n    } catch(final QueryException ex) {\n      if(current == null) {\n        // handle parsing errors\n        final FElem error = new FElem(ERROR);\n        error.add(LINE, token(ex.line()));\n        error.add(COLUMN, token(ex.column()));\n        error.add(TYPE, ex.qname().prefixId(QueryText.ERRORURI));\n        error.add(ex.getLocalizedMessage());\n        suite.add(error);\n      } else {\n        // handle initializers\n        final FElem testcase = new FElem(TESTCASE).add(NAME, current.name.local());\n        testcase.add(TIME, time(perf));\n        suite.add(testcase);\n      }\n      errors++;\n    }\n\n    if(suite.hasChildren()) {\n      suite.add(TIME, time(perf));\n      suite.add(TESTS, token(tests));\n      suite.add(FAILURES, token(failures));\n      suite.add(ERRORS, token(errors));\n      suite.add(SKIPPED, token(skipped));\n      suites.add(suite);\n    }\n  }","commit_id":"06f25f83f60da4d2a2dce93c7352f6e2dfa2c5f2","url":"https://github.com/BaseXdb/basex"},{"original_method":"public List<EditableSModelDescriptor> getUtilModels() {\n    List<EditableSModelDescriptor> result = new ArrayList<EditableSModelDescriptor>();\n    for (SModel md : getModels()) {\n      if (SModelStereotype.getStereotype(md).equals(SModelStereotype.NONE)\n          && getAspectForModel(md) == null\n          && !isAccessoryModel(md.getReference())) {\n        result.add(((EditableSModelDescriptor) md));\n      }\n    }\n    return result;\n  }","id":61003,"modified_method":"public List<SModel> getUtilModels() {\n    List<SModel> result = new ArrayList<SModel>();\n    for (SModel md : getModels()) {\n      if (getAspectForModel(md) != null || isAccessoryModel(md.getReference())) {\n        continue;\n      }\n      String st = SModelStereotype.getStereotype(md);\n      if (SModelStereotype.isStubModelStereotype(st) || SModelStereotype.isDescriptorModelStereotype(st)) {\n        // perhaps, we need more generic isPredefinedStereotypeMPS()\n        continue;\n      }\n      result.add((md));\n    }\n    return result;\n  }","commit_id":"7fc35fbebe0474c2d7ffbcc5d0311b2e8f35c077","url":"https://github.com/JetBrains/MPS"},{"original_method":"public List<SModelDescriptor> getSubfolderModels(Collection<SModelDescriptor> candidates) {\n    if (myModelDescriptor == null) return Collections.EMPTY_LIST;\n    List<SModelDescriptor> result = new ArrayList<SModelDescriptor>();\n    String modelName = myModelDescriptor.getLongName();\n    if (modelName == null) return result;\n    for (SModelDescriptor candidate : candidates) {\n      String candidateName = candidate.getLongName();\n      if (candidateName == null || !candidateName.startsWith(modelName) || modelName.equals(candidateName)) continue;\n      if (candidateName.charAt(modelName.length()) == '.') {\n        boolean modelIsStub = myModelDescriptor.getStereotype().equals(SModelStereotype.JAVA_STUB);\n        boolean candidateIsStub = candidate.getStereotype().equals(SModelStereotype.JAVA_STUB);\n        if (modelIsStub != candidateIsStub) continue;\n        String shortName = candidateName.replace(modelName + \".\", \"\");\n        if (shortName.contains(\".\")) {\n          String maxPackage = candidateName.substring(0, candidateName.lastIndexOf('.'));\n          SModelDescriptor md = SModelRepository.getInstance().getModelDescriptor(SModelReference.fromString(maxPackage));\n          if (md != null) {\n            if (md.getModule().getOwnModelDescriptors().contains(myModelDescriptor)) {\n              continue;\n            }\n          }\n        }\n        result.add(candidate);\n      }\n    }\n    return result;\n  }","id":61004,"modified_method":"public List<SModelDescriptor> getSubfolderModels(Collection<SModelDescriptor> candidates) {\n    if (myModelDescriptor == null) return Collections.EMPTY_LIST;\n    List<SModelDescriptor> result = new ArrayList<SModelDescriptor>();\n    String modelName = myModelDescriptor.getLongName();\n    if (modelName == null) return result;\n    for (SModelDescriptor candidate : candidates) {\n      String candidateName = candidate.getLongName();\n      if (candidateName == null || !candidateName.startsWith(modelName) || modelName.equals(candidateName)) continue;\n      if (candidateName.charAt(modelName.length()) == '.') {\n        String modelStereotype = myModelDescriptor.getStereotype();\n        String candidateStereotype = candidate.getStereotype();\n        if (!modelStereotype.equals(candidateStereotype)) continue;\n        String shortName = candidateName.replace(modelName + \".\", \"\");\n        if (shortName.contains(\".\")) {\n          String maxPackage = candidateName.substring(0, candidateName.lastIndexOf('.'));\n          SModelDescriptor md = SModelRepository.getInstance().getModelDescriptor(SModelReference.fromString(maxPackage));\n          if (md != null) {\n            if (md.getModule().getOwnModelDescriptors().contains(myModelDescriptor)) {\n              continue;\n            }\n          }\n        }\n        result.add(candidate);\n      }\n    }\n    return result;\n  }","commit_id":"02b42ca9e6f398cf053582baa543e2bf5317221a","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static <T> void convertArgumentsToStringList(T arguments, T defaultArguments, Class clazz, List<String> result) {\n        Class superClazz = clazz.getSuperclass();\n        if (superClazz != null) {\n            convertArgumentsToStringList(arguments, defaultArguments, superClazz, result);\n        }\n\n        for (Field field : clazz.getDeclaredFields()) {\n            Argument argument = field.getAnnotation(Argument.class);\n            if (argument == null) continue;\n\n            Object value;\n            Object defaultValue;\n            try {\n                value = field.get(arguments);\n                defaultValue = field.get(defaultArguments);\n            }\n            catch (IllegalAccessException ignored) {\n                // skip this field\n                continue;\n            }\n\n            if (ComparatorUtil.equalsNullable(value, defaultValue)) continue;\n\n            String name = Args.getAlias(argument);\n            if (name == null) {\n                name = Args.getName(argument, field);\n            }\n\n            result.add(argument.prefix() + name);\n\n            Class<?> fieldType = field.getType();\n            if (fieldType != boolean.class && fieldType != Boolean.class) {\n                result.add(value.toString());\n            }\n        }\n    }","id":61005,"modified_method":"private static <T> void convertArgumentsToStringList(T arguments, T defaultArguments, Class clazz, List<String> result) {\n        Class superClazz = clazz.getSuperclass();\n        if (superClazz != null) {\n            convertArgumentsToStringList(arguments, defaultArguments, superClazz, result);\n        }\n\n        for (Field field : clazz.getDeclaredFields()) {\n            Argument argument = field.getAnnotation(Argument.class);\n            if (argument == null) continue;\n\n            Object value;\n            Object defaultValue;\n            try {\n                value = field.get(arguments);\n                defaultValue = field.get(defaultArguments);\n            }\n            catch (IllegalAccessException ignored) {\n                // skip this field\n                continue;\n            }\n\n            if (ComparatorUtil.equalsNullable(value, defaultValue)) continue;\n\n            String name = Args.getAlias(argument);\n            if (name == null) {\n                name = Args.getName(argument, field);\n            }\n\n            Class<?> fieldType = field.getType();\n\n            if (fieldType.isArray()) {\n                Object[] values = (Object[]) value;\n                if (values.length == 0) continue;\n                value = StringUtil.join(values, Function.TO_STRING, argument.delimiter());\n            }\n\n            result.add(argument.prefix() + name);\n\n            if (fieldType == boolean.class || fieldType == Boolean.class) continue;\n\n            result.add(value.toString());\n        }\n    }","commit_id":"5a28f4e1582af683a88500bf5b5ede9d482b0283","url":"https://github.com/JetBrains/kotlin"},{"original_method":"private void printArgumentsIfNeeded(\n            @NotNull PrintStream errStream,\n            @NotNull A arguments,\n            @NotNull MessageRenderer messageRenderer\n    ) {\n        if (arguments.printArgs) {\n            String freeArgs = StringUtil.join(arguments.freeArgs, \" \");\n\n            List<String> argumentsAsList = ArgumentUtils.convertArgumentsToStringList(arguments, createArguments());\n            String argumentsAsString = StringUtil.join(argumentsAsList, \" \");\n\n            String printArgsMessage = messageRenderer.render(CompilerMessageSeverity.INFO,\n                                                             \"Invoking compiler \" + getClass().getName() +\n                                                             \" with arguments \" + argumentsAsString + \" \" + freeArgs,\n                                                             CompilerMessageLocation.NO_LOCATION);\n            errStream.println(printArgsMessage);\n        }\n    }","id":61006,"modified_method":"private void printArgumentsIfNeeded(\n            @NotNull PrintStream errStream,\n            @NotNull A arguments,\n            @NotNull MessageRenderer messageRenderer\n    ) {\n        if (arguments.printArgs) {\n            String freeArgs = !arguments.freeArgs.isEmpty() ? \" \" + StringUtil.join(arguments.freeArgs, \" \") : \"\";\n\n            List<String> argumentsAsList = ArgumentUtils.convertArgumentsToStringList(arguments, createArguments());\n            String argumentsAsString = StringUtil.join(argumentsAsList, \" \");\n\n            String printArgsMessage = messageRenderer.render(CompilerMessageSeverity.INFO,\n                                                             \"Invoking compiler \" + getClass().getName() +\n                                                             \" with arguments \" + argumentsAsString + freeArgs,\n                                                             CompilerMessageLocation.NO_LOCATION);\n            errStream.println(printArgsMessage);\n        }\n    }","commit_id":"5a28f4e1582af683a88500bf5b5ede9d482b0283","url":"https://github.com/JetBrains/kotlin"},{"original_method":"public IDEAConfig(@NotNull Project project) {\n        super(project, \"default\", getLibLocationAndTargetForProject(project).first, EcmaVersion.defaultVersion(), false);\n    }","id":61007,"modified_method":"public IDEAConfig(@NotNull Project project) {\n        super(project, \"default\", KotlinFrameworkDetector.getLibLocationForProject(project), EcmaVersion.defaultVersion(), false);\n    }","commit_id":"5a28f4e1582af683a88500bf5b5ede9d482b0283","url":"https://github.com/JetBrains/kotlin"},{"original_method":"JSDeclarationsCacheProvider(final Project project) {\n        super(project, TargetPlatform.JS);\n\n        cachedKey = Key.create(\"KOTLIN_JS_DECLARATIONS_CACHE\");\n\n        declarationsProvider = new CachedValueProvider<KotlinDeclarationsCache>() {\n            @Nullable\n            @Override\n            public Result<KotlinDeclarationsCache> compute() {\n                synchronized (declarationAnalysisLock) {\n                    LibrarySourcesConfig config = new LibrarySourcesConfig(\n                            project, \"default\",\n                            KotlinFrameworkDetector.getLibLocationAndTargetForProject(project).first,\n                            EcmaVersion.defaultVersion(), false);\n\n                    AnalyzeExhaust analyzeExhaust = AnalyzerFacadeForJS.analyzeFiles(\n                            JetFilesProvider.getInstance(project).allInScope(GlobalSearchScope.allScope(project)),\n                            Predicates.<PsiFile>alwaysFalse(),\n                            config,\n                            true);\n\n                    return Result.<KotlinDeclarationsCache>create(\n                            new KotlinDeclarationsCacheImpl(analyzeExhaust),\n                            PsiModificationTracker.OUT_OF_CODE_BLOCK_MODIFICATION_COUNT,\n                            KotlinCacheManager.getInstance(project).getDeclarationsTracker()\n                    );\n                }\n            }\n        };\n    }","id":61008,"modified_method":"JSDeclarationsCacheProvider(final Project project) {\n        super(project, TargetPlatform.JS);\n\n        cachedKey = Key.create(\"KOTLIN_JS_DECLARATIONS_CACHE\");\n\n        declarationsProvider = new CachedValueProvider<KotlinDeclarationsCache>() {\n            @Nullable\n            @Override\n            public Result<KotlinDeclarationsCache> compute() {\n                synchronized (declarationAnalysisLock) {\n                    LibrarySourcesConfig config = new LibrarySourcesConfig(\n                            project, \"default\",\n                            KotlinFrameworkDetector.getLibLocationForProject(project),\n                            EcmaVersion.defaultVersion(), false);\n\n                    AnalyzeExhaust analyzeExhaust = AnalyzerFacadeForJS.analyzeFiles(\n                            JetFilesProvider.getInstance(project).allInScope(GlobalSearchScope.allScope(project)),\n                            Predicates.<PsiFile>alwaysFalse(),\n                            config,\n                            true);\n\n                    return Result.<KotlinDeclarationsCache>create(\n                            new KotlinDeclarationsCacheImpl(analyzeExhaust),\n                            PsiModificationTracker.OUT_OF_CODE_BLOCK_MODIFICATION_COUNT,\n                            KotlinCacheManager.getInstance(project).getDeclarationsTracker()\n                    );\n                }\n            }\n        };\n    }","commit_id":"5a28f4e1582af683a88500bf5b5ede9d482b0283","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@NotNull\n    @Override\n    protected ExitCode doExecute(\n            @NotNull K2JSCompilerArguments arguments,\n            @NotNull MessageCollector messageCollector,\n            @NotNull Disposable rootDisposable\n    ) {\n        if (arguments.sourceFiles == null) {\n            messageCollector.report(CompilerMessageSeverity.ERROR, \"Specify sources location via -sourceFiles\", NO_LOCATION);\n            return ExitCode.INTERNAL_ERROR;\n        }\n\n        CompilerConfiguration configuration = new CompilerConfiguration();\n        configuration.addAll(CommonConfigurationKeys.SOURCE_ROOTS_KEY, Arrays.asList(arguments.sourceFiles));\n        JetCoreEnvironment environmentForJS = JetCoreEnvironment.createForProduction(rootDisposable, configuration);\n\n        Project project = environmentForJS.getProject();\n\n        ClassPathLibrarySourcesLoader sourceLoader = new ClassPathLibrarySourcesLoader(project);\n        List<JetFile> sourceFiles = sourceLoader.findSourceFiles();\n        environmentForJS.getSourceFiles().addAll(sourceFiles);\n\n        if (arguments.verbose) {\n            reportCompiledSourcesList(messageCollector, environmentForJS);\n        }\n\n        Config config = getConfig(arguments, project);\n        if (analyzeAndReportErrors(messageCollector, environmentForJS.getSourceFiles(), config)) {\n            return COMPILATION_ERROR;\n        }\n\n        String outputFile = arguments.outputFile;\n        if (outputFile == null) {\n            messageCollector.report(CompilerMessageSeverity.ERROR, \"Specify output file via -output\", CompilerMessageLocation.NO_LOCATION);\n            return ExitCode.INTERNAL_ERROR;\n        }\n\n        MainCallParameters mainCallParameters = createMainCallParameters(arguments.main);\n        return translateAndGenerateOutputFile(mainCallParameters, environmentForJS, config, outputFile);\n    }","id":61009,"modified_method":"@NotNull\n    @Override\n    protected ExitCode doExecute(\n            @NotNull K2JSCompilerArguments arguments,\n            @NotNull MessageCollector messageCollector,\n            @NotNull Disposable rootDisposable\n    ) {\n        if (arguments.sourceFiles == null) {\n            messageCollector.report(CompilerMessageSeverity.ERROR, \"Specify sources location via -sourceFiles\", NO_LOCATION);\n            return ExitCode.INTERNAL_ERROR;\n        }\n\n        CompilerConfiguration configuration = new CompilerConfiguration();\n        configuration.addAll(CommonConfigurationKeys.SOURCE_ROOTS_KEY, Arrays.asList(arguments.sourceFiles));\n        JetCoreEnvironment environmentForJS = JetCoreEnvironment.createForProduction(rootDisposable, configuration);\n\n        Project project = environmentForJS.getProject();\n\n        ClassPathLibrarySourcesLoader sourceLoader = new ClassPathLibrarySourcesLoader(project);\n        List<JetFile> sourceFiles = sourceLoader.findSourceFiles();\n        environmentForJS.getSourceFiles().addAll(sourceFiles);\n\n        if (arguments.verbose) {\n            reportCompiledSourcesList(messageCollector, environmentForJS);\n        }\n\n        String outputFile = arguments.outputFile;\n        if (outputFile == null) {\n            messageCollector.report(CompilerMessageSeverity.ERROR, \"Specify output file via -output\", CompilerMessageLocation.NO_LOCATION);\n            return ExitCode.INTERNAL_ERROR;\n        }\n\n        Config config = getConfig(arguments, project);\n        if (analyzeAndReportErrors(messageCollector, environmentForJS.getSourceFiles(), config)) {\n            return COMPILATION_ERROR;\n        }\n\n        MainCallParameters mainCallParameters = createMainCallParameters(arguments.main);\n        return translateAndGenerateOutputFile(mainCallParameters, environmentForJS, config, outputFile);\n    }","commit_id":"5a28f4e1582af683a88500bf5b5ede9d482b0283","url":"https://github.com/JetBrains/kotlin"},{"original_method":"private static void doCompile(@NotNull final MessageCollector messageCollector, @NotNull OutputSink sink, @NotNull final Module module,\n            @NotNull final CompilerEnvironment environment) {\n        OutputItemsCollectorImpl collector = new OutputItemsCollectorImpl();\n        outputCompilerMessagesAndHandleExitCode(messageCollector, collector, new Function<PrintStream, Integer>() {\n            @Override\n            public Integer fun(PrintStream stream) {\n                return execInProcess(messageCollector, environment, stream, module);\n            }\n        });\n        TranslatingCompilerUtils.reportOutputs(sink, environment.getOutput(), collector);\n    }","id":61010,"modified_method":"private static void doCompile(\n            @NotNull MessageCollector messageCollector, @NotNull OutputSink sink, @NotNull Module module,\n            @NotNull CompilerEnvironment environment, VirtualFile[] files\n    ) {\n        List<File> srcFiles = ContainerUtil.map(files, new Function<VirtualFile, File>() {\n            @Override\n            public File fun(VirtualFile file) {\n                return new File(file.getPath());\n            }\n        });\n        List<String> libraryFiles = getLibraryFiles(module);\n        File outDir = environment.getOutput();\n        File outFile = new File(outDir, module.getName() + \".js\");\n\n        OutputItemsCollectorImpl outputItemsCollector = new OutputItemsCollectorImpl();\n\n        CommonCompilerArguments commonArguments = KotlinCommonCompilerSettings.getInstance(module.getProject()).getSettings();\n        K2JSCompilerArguments k2jsArguments = Kotlin2JsCompilerSettings.getInstance(module.getProject()).getSettings();\n\n        KotlinCompilerRunner.runK2JsCompiler(commonArguments, k2jsArguments, messageCollector, environment,\n                                             outputItemsCollector, srcFiles, libraryFiles, outFile);\n\n        if (!ApplicationManager.getApplication().isUnitTestMode()) {\n            VirtualFile virtualFile = LocalFileSystem.getInstance().findFileByIoFile(outDir);\n            assert virtualFile != null : \"Virtual file not found for module output: \" + outDir;\n            virtualFile.refresh(false, true);\n        }\n\n        TranslatingCompilerUtils.reportOutputs(sink, environment.getOutput(), outputItemsCollector);\n    }","commit_id":"5a28f4e1582af683a88500bf5b5ede9d482b0283","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@Override\n    public void compile(CompileContext context, Chunk<Module> moduleChunk, VirtualFile[] files, OutputSink sink) {\n        if (files.length == 0) {\n            return;\n        }\n\n        Module module = getModule(context, moduleChunk);\n        if (module == null) {\n            return;\n        }\n\n        MessageCollector messageCollector = new MessageCollectorAdapter(context);\n\n        CompilerEnvironment environment = TranslatingCompilerUtils.getEnvironmentFor(context, module, /*tests = */ false);\n        if (!environment.success()) {\n            environment.reportErrorsTo(messageCollector);\n            return;\n        }\n\n        doCompile(messageCollector, sink, module, environment);\n    }","id":61011,"modified_method":"@Override\n    public void compile(CompileContext context, Chunk<Module> moduleChunk, VirtualFile[] files, OutputSink sink) {\n        if (files.length == 0) {\n            return;\n        }\n\n        Module module = getModule(context, moduleChunk);\n        if (module == null) {\n            return;\n        }\n\n        MessageCollector messageCollector = new MessageCollectorAdapter(context);\n\n        CompilerEnvironment environment = TranslatingCompilerUtils.getEnvironmentFor(context, module, /*tests = */ false);\n        if (!environment.success()) {\n            environment.reportErrorsTo(messageCollector);\n            return;\n        }\n\n        doCompile(messageCollector, sink, module, environment, files);\n    }","commit_id":"5a28f4e1582af683a88500bf5b5ede9d482b0283","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@Override\n    protected void checkHeader(@NotNull MessageChecker checker) {\n        checker.expect(Message.info().textStartsWith(\"Kotlin Compiler version\"));\n        checker.expect(stats().textMatchesRegexp(\"Compiling source files: .*/src/test.kt\"));\n    }","id":61012,"modified_method":"@Override\n    protected void checkHeader(@NotNull MessageChecker checker) {\n        checker.expect(info().textStartsWith(\"Using kotlinHome=\"));\n        checker.expect(info().textStartsWith(\"Invoking compiler\"));\n        checker.expect(info().textStartsWith(\"Kotlin Compiler version\"));\n        checker.expect(stats().textMatchesRegexp(\"Compiling source files: .*/src/test.kt\"));\n    }","commit_id":"5a28f4e1582af683a88500bf5b5ede9d482b0283","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@NotNull\n    public static Pair<List<String>, String> getLibLocationAndTargetForProject(@NotNull Project project) {\n        Module[] modules = ModuleManager.getInstance(project).getModules();\n        for (Module module : modules) {\n            if (isJsKotlinModule(module)) {\n                return getLibLocationAndTargetForProject(module);\n            }\n        }\n\n        return Pair.empty();\n    }","id":61013,"modified_method":"@NotNull\n    public static List<String> getLibLocationForProject(@NotNull Project project) {\n        Module[] modules = ModuleManager.getInstance(project).getModules();\n        for (Module module : modules) {\n            if (isJsKotlinModule(module)) {\n                return getLibLocationForProject(module);\n            }\n        }\n\n        return Collections.emptyList();\n    }","commit_id":"5a28f4e1582af683a88500bf5b5ede9d482b0283","url":"https://github.com/JetBrains/kotlin"},{"original_method":"public static Pair<List<String>, String> getLibLocationAndTargetForProject(final Module module) {\n        final Set<String> pathsToJSLib = Sets.newHashSet();\n\n        ApplicationManager.getApplication().runReadAction(new Runnable() {\n            @Override\n            public void run() {\n                ModuleRootManager.getInstance(module).orderEntries().librariesOnly().forEachLibrary(new Processor<Library>() {\n                    @Override\n                    public boolean process(Library library) {\n                        if (LibraryPresentationProviderUtil.isDetected(JsHeaderLibraryPresentationProvider.getInstance(), library)) {\n                            for (VirtualFile file : library.getRootProvider().getFiles(OrderRootType.SOURCES)) {\n                                String path = PathUtil.getLocalPath(PathUtil.getLocalFile(file));\n                                if (path != null) {\n                                    pathsToJSLib.add(path);\n                                }\n                                else {\n                                    assert !file.isValid() : \"Path is expected to be null only for invalid file: \" + file;\n                                }\n                            }\n                        }\n\n                        return true;\n                    }\n                });\n            }\n        });\n\n        return Pair.<List<String>, String>create(Lists.newArrayList(pathsToJSLib), EcmaVersion.defaultVersion().toString());\n    }","id":61014,"modified_method":"@NotNull\n    public static List<String> getLibLocationForProject(@NotNull final Module module) {\n        final Set<String> pathsToJSLib = Sets.newHashSet();\n\n        ApplicationManager.getApplication().runReadAction(new Runnable() {\n            @Override\n            public void run() {\n                ModuleRootManager.getInstance(module).orderEntries().librariesOnly().forEachLibrary(new Processor<Library>() {\n                    @Override\n                    public boolean process(Library library) {\n                        if (LibraryPresentationProviderUtil.isDetected(JsHeaderLibraryPresentationProvider.getInstance(), library)) {\n                            for (VirtualFile file : library.getRootProvider().getFiles(OrderRootType.SOURCES)) {\n                                String path = PathUtil.getLocalPath(PathUtil.getLocalFile(file));\n                                if (path != null) {\n                                    pathsToJSLib.add(path);\n                                }\n                                else {\n                                    assert !file.isValid() : \"Path is expected to be null only for invalid file: \" + file;\n                                }\n                            }\n                        }\n\n                        return true;\n                    }\n                });\n            }\n        });\n\n        return Lists.newArrayList(pathsToJSLib);\n    }","commit_id":"5a28f4e1582af683a88500bf5b5ede9d482b0283","url":"https://github.com/JetBrains/kotlin"},{"original_method":"public static void marshal_6332494575505825672(ExportLabelContext ctx) {\n    SLinkOperations.setTarget(ctx.getKeeper(), MetaAdapterFactory.getReferenceLink(0x97a52717898f4598L, 0x8150573d9fd03868L, 0x57e18a43f31d0ef6L, 0x57e18a43f31d1cb8L, \"class\"), ctx.getOutput());\n  }","id":61015,"modified_method":"public static void marshal_6332494575505825672(final ExportLabelContext ctx) {\n    SPropertyOperations.set(ctx.getKeeper(), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\"), SPropertyOperations.getString(ctx.getOutput(), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\")));\n    ListSequence.fromList(SLinkOperations.getChildren(ctx.getOutput(), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101d9d3ca30L, 0x4a9a46de59132803L, \"member\"))).visitAll(new IVisitor<SNode>() {\n      public void visit(SNode it) {\n        ListSequence.fromList(SLinkOperations.getChildren(ctx.getKeeper(), MetaAdapterFactory.getContainmentLink(0x97a52717898f4598L, 0x8150573d9fd03868L, 0x57e18a43f31d0ef6L, 0x3dafeb069349ceeaL, \"member\"))).addElement(SNodeOperations.copyNode(it));\n      }\n    });\n  }","commit_id":"9beab4d61c0e4455c0a2ea6cbc6b27d85b389d37","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static void marshal_1417545764634750374(ExportLabelContext ctx) {\n    SLinkOperations.setTarget(ctx.getKeeper(), MetaAdapterFactory.getReferenceLink(0x97a52717898f4598L, 0x8150573d9fd03868L, 0x13ac225cc9e9f5bfL, 0x13ac225cc9e9f5c0L, \"class\"), ctx.getOutput());\n  }","id":61016,"modified_method":"public static void marshal_1417545764634750374(final ExportLabelContext ctx) {\n    SPropertyOperations.set(ctx.getKeeper(), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\"), SPropertyOperations.getString(ctx.getOutput(), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\")));\n    ListSequence.fromList(SLinkOperations.getChildren(ctx.getOutput(), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101d9d3ca30L, 0x4a9a46de59132803L, \"member\"))).visitAll(new IVisitor<SNode>() {\n      public void visit(SNode it) {\n        ListSequence.fromList(SLinkOperations.getChildren(ctx.getKeeper(), MetaAdapterFactory.getContainmentLink(0x97a52717898f4598L, 0x8150573d9fd03868L, 0x13ac225cc9e9f5bfL, 0x3dafeb06931e61abL, \"member\"))).addElement(SNodeOperations.copyNode(it));\n      }\n    });\n  }","commit_id":"9beab4d61c0e4455c0a2ea6cbc6b27d85b389d37","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static void unmarshal_1417545764634750376(final ExportLabelContext ctx) {\n    SPropertyOperations.set(ctx.getOutput(), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\"), SPropertyOperations.getString(SLinkOperations.getTarget(ctx.getKeeper(), MetaAdapterFactory.getReferenceLink(0x97a52717898f4598L, 0x8150573d9fd03868L, 0x13ac225cc9e9f5bfL, 0x13ac225cc9e9f5c0L, \"class\")), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\")));\n    ListSequence.fromList(SLinkOperations.getChildren(SLinkOperations.getTarget(ctx.getKeeper(), MetaAdapterFactory.getReferenceLink(0x97a52717898f4598L, 0x8150573d9fd03868L, 0x13ac225cc9e9f5bfL, 0x13ac225cc9e9f5c0L, \"class\")), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101d9d3ca30L, 0x4a9a46de59132803L, \"member\"))).visitAll(new IVisitor<SNode>() {\n      public void visit(SNode it) {\n        ListSequence.fromList(SLinkOperations.getChildren(ctx.getOutput(), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101d9d3ca30L, 0x4a9a46de59132803L, \"member\"))).addElement(SNodeOperations.copyNode(it));\n      }\n    });\n  }","id":61017,"modified_method":"public static void unmarshal_1417545764634750376(final ExportLabelContext ctx) {\n    SPropertyOperations.set(ctx.getOutput(), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\"), SPropertyOperations.getString(ctx.getKeeper(), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\")));\n    ListSequence.fromList(SLinkOperations.getChildren(ctx.getKeeper(), MetaAdapterFactory.getContainmentLink(0x97a52717898f4598L, 0x8150573d9fd03868L, 0x13ac225cc9e9f5bfL, 0x3dafeb06931e61abL, \"member\"))).visitAll(new IVisitor<SNode>() {\n      public void visit(SNode it) {\n        ListSequence.fromList(SLinkOperations.getChildren(ctx.getOutput(), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101d9d3ca30L, 0x4a9a46de59132803L, \"member\"))).addElement(SNodeOperations.copyNode(it));\n      }\n    });\n  }","commit_id":"9beab4d61c0e4455c0a2ea6cbc6b27d85b389d37","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static void unmarshal_6332494575505825674(final ExportLabelContext ctx) {\n    SPropertyOperations.set(ctx.getOutput(), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\"), SPropertyOperations.getString(SLinkOperations.getTarget(ctx.getKeeper(), MetaAdapterFactory.getReferenceLink(0x97a52717898f4598L, 0x8150573d9fd03868L, 0x57e18a43f31d0ef6L, 0x57e18a43f31d1cb8L, \"class\")), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\")));\n    ListSequence.fromList(SLinkOperations.getChildren(SLinkOperations.getTarget(ctx.getKeeper(), MetaAdapterFactory.getReferenceLink(0x97a52717898f4598L, 0x8150573d9fd03868L, 0x57e18a43f31d0ef6L, 0x57e18a43f31d1cb8L, \"class\")), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101d9d3ca30L, 0x4a9a46de59132803L, \"member\"))).visitAll(new IVisitor<SNode>() {\n      public void visit(SNode it) {\n        ListSequence.fromList(SLinkOperations.getChildren(ctx.getOutput(), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101d9d3ca30L, 0x4a9a46de59132803L, \"member\"))).addElement(SNodeOperations.copyNode(it));\n      }\n    });\n  }","id":61018,"modified_method":"public static void unmarshal_6332494575505825674(final ExportLabelContext ctx) {\n    SPropertyOperations.set(ctx.getOutput(), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\"), SPropertyOperations.getString(ctx.getKeeper(), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\")));\n    ListSequence.fromList(SLinkOperations.getChildren(ctx.getKeeper(), MetaAdapterFactory.getContainmentLink(0x97a52717898f4598L, 0x8150573d9fd03868L, 0x57e18a43f31d0ef6L, 0x3dafeb069349ceeaL, \"member\"))).visitAll(new IVisitor<SNode>() {\n      public void visit(SNode it) {\n        ListSequence.fromList(SLinkOperations.getChildren(ctx.getOutput(), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101d9d3ca30L, 0x4a9a46de59132803L, \"member\"))).addElement(SNodeOperations.copyNode(it));\n      }\n    });\n  }","commit_id":"9beab4d61c0e4455c0a2ea6cbc6b27d85b389d37","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n    public void run() {\n      try {\n        Thread.sleep(delay);\n        containerExecutor.signalContainer(user, pid, signal);\n      } catch (InterruptedException e) {\n        return;\n      } catch (IOException e) {\n        LOG.warn(\"Exception when killing task \" + pid, e);\n      }\n    }","id":61019,"modified_method":"@Override\n    public void run() {\n      try {\n        Thread.sleep(delay);\n        containerExecutor.signalContainer(user, pid, signal);\n      } catch (InterruptedException e) {\n        return;\n      } catch (IOException e) {\n        String message = \"Exception when user \" + user + \" killing task \" + pid\n            + \" in DelayedProcessKiller: \" + StringUtils.stringifyException(e);\n        LOG.warn(message);\n        container.handle(new ContainerDiagnosticsUpdateEvent(container\n          .getContainerId(), message));\n      }\n    }","commit_id":"7a29bccd7aaf2eb33adac937379ba6be43a1031d","url":"https://github.com/apache/hadoop"},{"original_method":"public DelayedProcessKiller(String user, String pid, long delay,\n        Signal signal,\n        ContainerExecutor containerExecutor) {\n      this.user = user;\n      this.pid = pid;\n      this.delay = delay;\n      this.signal = signal;\n      this.containerExecutor = containerExecutor;\n      setName(\"Task killer for \" + pid);\n      setDaemon(false);\n    }","id":61020,"modified_method":"public DelayedProcessKiller(Container container, String user, String pid,\n        long delay, Signal signal, ContainerExecutor containerExecutor) {\n      this.container = container;\n      this.user = user;\n      this.pid = pid;\n      this.delay = delay;\n      this.signal = signal;\n      this.containerExecutor = containerExecutor;\n      setName(\"Task killer for \" + pid);\n      setDaemon(false);\n    }","commit_id":"7a29bccd7aaf2eb33adac937379ba6be43a1031d","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n   * Cleanup the container.\n   * Cancels the launch if launch has not started yet or signals\n   * the executor to not execute the process if not already done so.\n   * Also, sends a SIGTERM followed by a SIGKILL to the process if\n   * the process id is available.\n   * @throws IOException\n   */\n  public void cleanupContainer() throws IOException {\n    ContainerId containerId = container.getContainerId();\n    String containerIdStr = ConverterUtils.toString(containerId);\n    LOG.info(\"Cleaning up container \" + containerIdStr);\n\n    // launch flag will be set to true if process already launched\n    boolean alreadyLaunched = !shouldLaunchContainer.compareAndSet(false, true);\n    if (!alreadyLaunched) {\n      LOG.info(\"Container \" + containerIdStr + \" not launched.\"\n          + \" No cleanup needed to be done\");\n      return;\n    }\n\n    LOG.debug(\"Marking container \" + containerIdStr + \" as inactive\");\n    // this should ensure that if the container process has not launched \n    // by this time, it will never be launched\n    exec.deactivateContainer(containerId);\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Getting pid for container \" + containerIdStr + \" to kill\"\n          + \" from pid file \" \n          + (pidFilePath != null ? pidFilePath.toString() : \"null\"));\n    }\n    \n    // however the container process may have already started\n    try {\n\n      // get process id from pid file if available\n      // else if shell is still active, get it from the shell\n      String processId = null;\n      if (pidFilePath != null) {\n        processId = getContainerPid(pidFilePath);\n      }\n\n      // kill process\n      if (processId != null) {\n        String user = container.getUser();\n        LOG.debug(\"Sending signal to pid \" + processId\n            + \" as user \" + user\n            + \" for container \" + containerIdStr);\n        if (sleepDelayBeforeSigKill > 0) {\n          boolean result = exec.signalContainer(user,\n              processId, Signal.TERM);\n          LOG.debug(\"Sent signal to pid \" + processId\n              + \" as user \" + user\n              + \" for container \" + containerIdStr\n              + \", result=\" + (result? \"success\" : \"failed\"));\n          new DelayedProcessKiller(user,\n              processId, sleepDelayBeforeSigKill, Signal.KILL, exec).start();\n        }\n      }\n    } catch (Exception e) {\n      LOG.warn(\"Got error when trying to cleanup container \" + containerIdStr\n          + \", error=\" + e.getMessage());\n    } finally {\n      // cleanup pid file if present\n      if (pidFilePath != null) {\n        FileContext lfs = FileContext.getLocalFSFileContext();\n        lfs.delete(pidFilePath, false);\n      }\n    }\n  }","id":61021,"modified_method":"/**\n   * Cleanup the container.\n   * Cancels the launch if launch has not started yet or signals\n   * the executor to not execute the process if not already done so.\n   * Also, sends a SIGTERM followed by a SIGKILL to the process if\n   * the process id is available.\n   * @throws IOException\n   */\n  @SuppressWarnings(\"unchecked\") // dispatcher not typed\n  public void cleanupContainer() throws IOException {\n    ContainerId containerId = container.getContainerId();\n    String containerIdStr = ConverterUtils.toString(containerId);\n    LOG.info(\"Cleaning up container \" + containerIdStr);\n\n    // launch flag will be set to true if process already launched\n    boolean alreadyLaunched = !shouldLaunchContainer.compareAndSet(false, true);\n    if (!alreadyLaunched) {\n      LOG.info(\"Container \" + containerIdStr + \" not launched.\"\n          + \" No cleanup needed to be done\");\n      return;\n    }\n\n    LOG.debug(\"Marking container \" + containerIdStr + \" as inactive\");\n    // this should ensure that if the container process has not launched \n    // by this time, it will never be launched\n    exec.deactivateContainer(containerId);\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Getting pid for container \" + containerIdStr + \" to kill\"\n          + \" from pid file \" \n          + (pidFilePath != null ? pidFilePath.toString() : \"null\"));\n    }\n    \n    // however the container process may have already started\n    try {\n\n      // get process id from pid file if available\n      // else if shell is still active, get it from the shell\n      String processId = null;\n      if (pidFilePath != null) {\n        processId = getContainerPid(pidFilePath);\n      }\n\n      // kill process\n      if (processId != null) {\n        String user = container.getUser();\n        LOG.debug(\"Sending signal to pid \" + processId\n            + \" as user \" + user\n            + \" for container \" + containerIdStr);\n        if (sleepDelayBeforeSigKill > 0) {\n          boolean result = exec.signalContainer(user,\n              processId, Signal.TERM);\n          LOG.debug(\"Sent signal to pid \" + processId\n              + \" as user \" + user\n              + \" for container \" + containerIdStr\n              + \", result=\" + (result? \"success\" : \"failed\"));\n          new DelayedProcessKiller(container, user,\n              processId, sleepDelayBeforeSigKill, Signal.KILL, exec).start();\n        }\n      }\n    } catch (Exception e) {\n      String message =\n          \"Exception when trying to cleanup container \" + containerIdStr\n              + \": \" + StringUtils.stringifyException(e);\n      LOG.warn(message);\n      dispatcher.getEventHandler().handle(\n        new ContainerDiagnosticsUpdateEvent(containerId, message));\n    } finally {\n      // cleanup pid file if present\n      if (pidFilePath != null) {\n        FileContext lfs = FileContext.getLocalFSFileContext();\n        lfs.delete(pidFilePath, false);\n      }\n    }\n  }","commit_id":"7a29bccd7aaf2eb33adac937379ba6be43a1031d","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n  public int launchContainer(Container container,\n      Path nmPrivateContainerScriptPath, Path nmPrivateTokensPath,\n      String userName, String appId, Path containerWorkDir,\n      List<String> localDirs, List<String> logDirs) throws IOException {\n\n    FsPermission dirPerm = new FsPermission(APPDIR_PERM);\n    ContainerId containerId = container.getContainerId();\n\n    // create container dirs on all disks\n    String containerIdStr = ConverterUtils.toString(containerId);\n    String appIdStr =\n        ConverterUtils.toString(\n            containerId.getApplicationAttemptId().\n                getApplicationId());\n    for (String sLocalDir : localDirs) {\n      Path usersdir = new Path(sLocalDir, ContainerLocalizer.USERCACHE);\n      Path userdir = new Path(usersdir, userName);\n      Path appCacheDir = new Path(userdir, ContainerLocalizer.APPCACHE);\n      Path appDir = new Path(appCacheDir, appIdStr);\n      Path containerDir = new Path(appDir, containerIdStr);\n      createDir(containerDir, dirPerm, true);\n    }\n\n    // Create the container log-dirs on all disks\n    createContainerLogDirs(appIdStr, containerIdStr, logDirs);\n\n    Path tmpDir = new Path(containerWorkDir,\n        YarnConfiguration.DEFAULT_CONTAINER_TEMP_DIR);\n    createDir(tmpDir, dirPerm, false);\n\n    // copy launch script to work dir\n    Path launchDst =\n        new Path(containerWorkDir, ContainerLaunch.CONTAINER_SCRIPT);\n    lfs.util().copy(nmPrivateContainerScriptPath, launchDst);\n\n    // copy container tokens to work dir\n    Path tokenDst =\n      new Path(containerWorkDir, ContainerLaunch.FINAL_CONTAINER_TOKENS_FILE);\n    lfs.util().copy(nmPrivateTokensPath, tokenDst);\n\n    // Create new local launch wrapper script\n    LocalWrapperScriptBuilder sb = Shell.WINDOWS ?\n      new WindowsLocalWrapperScriptBuilder(containerIdStr, containerWorkDir) :\n      new UnixLocalWrapperScriptBuilder(containerWorkDir);\n\n    // Fail fast if attempting to launch the wrapper script would fail due to\n    // Windows path length limitation.\n    if (Shell.WINDOWS &&\n        sb.getWrapperScriptPath().toString().length() > WIN_MAX_PATH) {\n      throw new IOException(String.format(\n        \"Cannot launch container using script at path %s, because it exceeds \" +\n        \"the maximum supported path length of %d characters.  Consider \" +\n        \"configuring shorter directories in %s.\", sb.getWrapperScriptPath(),\n        WIN_MAX_PATH, YarnConfiguration.NM_LOCAL_DIRS));\n    }\n\n    Path pidFile = getPidFilePath(containerId);\n    if (pidFile != null) {\n      sb.writeLocalWrapperScript(launchDst, pidFile);\n    } else {\n      LOG.info(\"Container \" + containerIdStr\n          + \" was marked as inactive. Returning terminated error\");\n      return ExitCode.TERMINATED.getExitCode();\n    }\n\n    // create log dir under app\n    // fork script\n    ShellCommandExecutor shExec = null;\n    try {\n      lfs.setPermission(launchDst,\n          ContainerExecutor.TASK_LAUNCH_SCRIPT_PERMISSION);\n      lfs.setPermission(sb.getWrapperScriptPath(),\n          ContainerExecutor.TASK_LAUNCH_SCRIPT_PERMISSION);\n\n      // Setup command to run\n      String[] command = getRunCommand(sb.getWrapperScriptPath().toString(),\n        containerIdStr, this.getConf());\n\n      LOG.info(\"launchContainer: \" + Arrays.toString(command));\n      shExec = new ShellCommandExecutor(\n          command,\n          new File(containerWorkDir.toUri().getPath()),\n          container.getLaunchContext().getEnvironment());      // sanitized env\n      if (isContainerActive(containerId)) {\n        shExec.execute();\n      }\n      else {\n        LOG.info(\"Container \" + containerIdStr +\n            \" was marked as inactive. Returning terminated error\");\n        return ExitCode.TERMINATED.getExitCode();\n      }\n    } catch (IOException e) {\n      if (null == shExec) {\n        return -1;\n      }\n      int exitCode = shExec.getExitCode();\n      LOG.warn(\"Exit code from task is : \" + exitCode);\n      String message = shExec.getOutput();\n      logOutput(message);\n      container.handle(new ContainerDiagnosticsUpdateEvent(containerId,\n          message));\n      return exitCode;\n    } finally {\n      ; //\n    }\n    return 0;\n  }","id":61022,"modified_method":"@Override\n  public int launchContainer(Container container,\n      Path nmPrivateContainerScriptPath, Path nmPrivateTokensPath,\n      String userName, String appId, Path containerWorkDir,\n      List<String> localDirs, List<String> logDirs) throws IOException {\n\n    FsPermission dirPerm = new FsPermission(APPDIR_PERM);\n    ContainerId containerId = container.getContainerId();\n\n    // create container dirs on all disks\n    String containerIdStr = ConverterUtils.toString(containerId);\n    String appIdStr =\n        ConverterUtils.toString(\n            containerId.getApplicationAttemptId().\n                getApplicationId());\n    for (String sLocalDir : localDirs) {\n      Path usersdir = new Path(sLocalDir, ContainerLocalizer.USERCACHE);\n      Path userdir = new Path(usersdir, userName);\n      Path appCacheDir = new Path(userdir, ContainerLocalizer.APPCACHE);\n      Path appDir = new Path(appCacheDir, appIdStr);\n      Path containerDir = new Path(appDir, containerIdStr);\n      createDir(containerDir, dirPerm, true);\n    }\n\n    // Create the container log-dirs on all disks\n    createContainerLogDirs(appIdStr, containerIdStr, logDirs);\n\n    Path tmpDir = new Path(containerWorkDir,\n        YarnConfiguration.DEFAULT_CONTAINER_TEMP_DIR);\n    createDir(tmpDir, dirPerm, false);\n\n    // copy launch script to work dir\n    Path launchDst =\n        new Path(containerWorkDir, ContainerLaunch.CONTAINER_SCRIPT);\n    lfs.util().copy(nmPrivateContainerScriptPath, launchDst);\n\n    // copy container tokens to work dir\n    Path tokenDst =\n      new Path(containerWorkDir, ContainerLaunch.FINAL_CONTAINER_TOKENS_FILE);\n    lfs.util().copy(nmPrivateTokensPath, tokenDst);\n\n    // Create new local launch wrapper script\n    LocalWrapperScriptBuilder sb = Shell.WINDOWS ?\n      new WindowsLocalWrapperScriptBuilder(containerIdStr, containerWorkDir) :\n      new UnixLocalWrapperScriptBuilder(containerWorkDir);\n\n    // Fail fast if attempting to launch the wrapper script would fail due to\n    // Windows path length limitation.\n    if (Shell.WINDOWS &&\n        sb.getWrapperScriptPath().toString().length() > WIN_MAX_PATH) {\n      throw new IOException(String.format(\n        \"Cannot launch container using script at path %s, because it exceeds \" +\n        \"the maximum supported path length of %d characters.  Consider \" +\n        \"configuring shorter directories in %s.\", sb.getWrapperScriptPath(),\n        WIN_MAX_PATH, YarnConfiguration.NM_LOCAL_DIRS));\n    }\n\n    Path pidFile = getPidFilePath(containerId);\n    if (pidFile != null) {\n      sb.writeLocalWrapperScript(launchDst, pidFile);\n    } else {\n      LOG.info(\"Container \" + containerIdStr\n          + \" was marked as inactive. Returning terminated error\");\n      return ExitCode.TERMINATED.getExitCode();\n    }\n\n    // create log dir under app\n    // fork script\n    ShellCommandExecutor shExec = null;\n    try {\n      lfs.setPermission(launchDst,\n          ContainerExecutor.TASK_LAUNCH_SCRIPT_PERMISSION);\n      lfs.setPermission(sb.getWrapperScriptPath(),\n          ContainerExecutor.TASK_LAUNCH_SCRIPT_PERMISSION);\n\n      // Setup command to run\n      String[] command = getRunCommand(sb.getWrapperScriptPath().toString(),\n        containerIdStr, this.getConf());\n\n      LOG.info(\"launchContainer: \" + Arrays.toString(command));\n      shExec = new ShellCommandExecutor(\n          command,\n          new File(containerWorkDir.toUri().getPath()),\n          container.getLaunchContext().getEnvironment());      // sanitized env\n      if (isContainerActive(containerId)) {\n        shExec.execute();\n      }\n      else {\n        LOG.info(\"Container \" + containerIdStr +\n            \" was marked as inactive. Returning terminated error\");\n        return ExitCode.TERMINATED.getExitCode();\n      }\n    } catch (IOException e) {\n      if (null == shExec) {\n        return -1;\n      }\n      int exitCode = shExec.getExitCode();\n      LOG.warn(\"Exit code from container \" + containerId + \" is : \" + exitCode);\n      // 143 (SIGTERM) and 137 (SIGKILL) exit codes means the container was\n      // terminated/killed forcefully. In all other cases, log the\n      // container-executor's output\n      if (exitCode != ExitCode.FORCE_KILLED.getExitCode()\n          && exitCode != ExitCode.TERMINATED.getExitCode()) {\n        LOG.warn(\"Exception from container-launch with container ID: \"\n            + containerId + \" and exit code: \" + exitCode , e);\n        logOutput(shExec.getOutput());\n        String diagnostics = \"Exception from container-launch: \\n\"\n            + StringUtils.stringifyException(e) + \"\\n\" + shExec.getOutput();\n        container.handle(new ContainerDiagnosticsUpdateEvent(containerId,\n            diagnostics));\n      } else {\n        container.handle(new ContainerDiagnosticsUpdateEvent(containerId,\n            \"Container killed on request. Exit code is \" + exitCode));\n      }\n      return exitCode;\n    } finally {\n      ; //\n    }\n    return 0;\n  }","commit_id":"7a29bccd7aaf2eb33adac937379ba6be43a1031d","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n  public int launchContainer(Container container,\n      Path nmPrivateCotainerScriptPath, Path nmPrivateTokensPath,\n      String user, String appId, Path containerWorkDir,\n      List<String> localDirs, List<String> logDirs) throws IOException {\n\n    ContainerId containerId = container.getContainerId();\n    String containerIdStr = ConverterUtils.toString(containerId);\n    \n    resourcesHandler.preExecute(containerId,\n            container.getResource());\n    String resourcesOptions = resourcesHandler.getResourcesOption(\n            containerId);\n\n    ShellCommandExecutor shExec = null;\n\n    try {\n      Path pidFilePath = getPidFilePath(containerId);\n      if (pidFilePath != null) {\n        List<String> command = new ArrayList<String>();\n        addSchedPriorityCommand(command);\n        command.addAll(Arrays.asList(\n            containerExecutorExe, user, Integer\n                .toString(Commands.LAUNCH_CONTAINER.getValue()), appId,\n            containerIdStr, containerWorkDir.toString(),\n            nmPrivateCotainerScriptPath.toUri().getPath().toString(),\n            nmPrivateTokensPath.toUri().getPath().toString(),\n            pidFilePath.toString(),\n            StringUtils.join(\",\", localDirs),\n            StringUtils.join(\",\", logDirs),\n            resourcesOptions));\n        String[] commandArray = command.toArray(new String[command.size()]);\n        shExec = new ShellCommandExecutor(commandArray, null, // NM's cwd\n            container.getLaunchContext().getEnvironment()); // sanitized env\n        // DEBUG\n        LOG.info(\"launchContainer: \" + Arrays.toString(commandArray));\n        shExec.execute();\n        if (LOG.isDebugEnabled()) {\n          logOutput(shExec.getOutput());\n        }\n      } else {\n        LOG.info(\"Container was marked as inactive. Returning terminated error\");\n        return ExitCode.TERMINATED.getExitCode();\n      }\n    } catch (ExitCodeException e) {\n\n      if (null == shExec) {\n        return -1;\n      }\n\n      int exitCode = shExec.getExitCode();\n      LOG.warn(\"Exit code from container is : \" + exitCode);\n      // 143 (SIGTERM) and 137 (SIGKILL) exit codes means the container was\n      // terminated/killed forcefully. In all other cases, log the\n      // container-executor's output\n      if (exitCode != ExitCode.FORCE_KILLED.getExitCode()\n          && exitCode != ExitCode.TERMINATED.getExitCode()) {\n        LOG.warn(\"Exception from container-launch : \", e);\n        logOutput(shExec.getOutput());\n        String diagnostics = \"Exception from container-launch: \\n\"\n            + StringUtils.stringifyException(e) + \"\\n\" + shExec.getOutput();\n        container.handle(new ContainerDiagnosticsUpdateEvent(containerId,\n            diagnostics));\n      } else {\n        container.handle(new ContainerDiagnosticsUpdateEvent(containerId,\n            \"Container killed on request. Exit code is \" + exitCode));\n      }\n      return exitCode;\n    } finally {\n      resourcesHandler.postExecute(containerId);\n    }\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Output from LinuxContainerExecutor's launchContainer follows:\");\n      logOutput(shExec.getOutput());\n    }\n    return 0;\n  }","id":61023,"modified_method":"@Override\n  public int launchContainer(Container container,\n      Path nmPrivateCotainerScriptPath, Path nmPrivateTokensPath,\n      String user, String appId, Path containerWorkDir,\n      List<String> localDirs, List<String> logDirs) throws IOException {\n\n    ContainerId containerId = container.getContainerId();\n    String containerIdStr = ConverterUtils.toString(containerId);\n    \n    resourcesHandler.preExecute(containerId,\n            container.getResource());\n    String resourcesOptions = resourcesHandler.getResourcesOption(\n            containerId);\n\n    ShellCommandExecutor shExec = null;\n\n    try {\n      Path pidFilePath = getPidFilePath(containerId);\n      if (pidFilePath != null) {\n        List<String> command = new ArrayList<String>();\n        addSchedPriorityCommand(command);\n        command.addAll(Arrays.asList(\n            containerExecutorExe, user, Integer\n                .toString(Commands.LAUNCH_CONTAINER.getValue()), appId,\n            containerIdStr, containerWorkDir.toString(),\n            nmPrivateCotainerScriptPath.toUri().getPath().toString(),\n            nmPrivateTokensPath.toUri().getPath().toString(),\n            pidFilePath.toString(),\n            StringUtils.join(\",\", localDirs),\n            StringUtils.join(\",\", logDirs),\n            resourcesOptions));\n        String[] commandArray = command.toArray(new String[command.size()]);\n        shExec = new ShellCommandExecutor(commandArray, null, // NM's cwd\n            container.getLaunchContext().getEnvironment()); // sanitized env\n        // DEBUG\n        LOG.info(\"launchContainer: \" + Arrays.toString(commandArray));\n        shExec.execute();\n        if (LOG.isDebugEnabled()) {\n          logOutput(shExec.getOutput());\n        }\n      } else {\n        LOG.info(\"Container was marked as inactive. Returning terminated error\");\n        return ExitCode.TERMINATED.getExitCode();\n      }\n    } catch (ExitCodeException e) {\n      if (null == shExec) {\n        return -1;\n      }\n      int exitCode = shExec.getExitCode();\n      LOG.warn(\"Exit code from container \" + containerId + \" is : \" + exitCode);\n      // 143 (SIGTERM) and 137 (SIGKILL) exit codes means the container was\n      // terminated/killed forcefully. In all other cases, log the\n      // container-executor's output\n      if (exitCode != ExitCode.FORCE_KILLED.getExitCode()\n          && exitCode != ExitCode.TERMINATED.getExitCode()) {\n        LOG.warn(\"Exception from container-launch with container ID: \"\n            + containerId + \" and exit code: \" + exitCode , e);\n        logOutput(shExec.getOutput());\n        String diagnostics = \"Exception from container-launch: \\n\"\n            + StringUtils.stringifyException(e) + \"\\n\" + shExec.getOutput();\n        container.handle(new ContainerDiagnosticsUpdateEvent(containerId,\n            diagnostics));\n      } else {\n        container.handle(new ContainerDiagnosticsUpdateEvent(containerId,\n            \"Container killed on request. Exit code is \" + exitCode));\n      }\n      return exitCode;\n    } finally {\n      resourcesHandler.postExecute(containerId);\n    }\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Output from LinuxContainerExecutor's launchContainer follows:\");\n      logOutput(shExec.getOutput());\n    }\n    return 0;\n  }","commit_id":"7a29bccd7aaf2eb33adac937379ba6be43a1031d","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n  public void deleteAsUser(String user, Path dir, Path... baseDirs) {\n    List<String> command = new ArrayList<String>(\n        Arrays.asList(containerExecutorExe,\n                    user,\n                    Integer.toString(Commands.DELETE_AS_USER.getValue()),\n                    dir == null ? \"\" : dir.toUri().getPath()));\n    if (baseDirs == null || baseDirs.length == 0) {\n      LOG.info(\"Deleting absolute path : \" + dir);\n    } else {\n      for (Path baseDir : baseDirs) {\n        Path del = dir == null ? baseDir : new Path(baseDir, dir);\n        LOG.info(\"Deleting path : \" + del);\n        command.add(baseDir.toUri().getPath());\n      }\n    }\n    String[] commandArray = command.toArray(new String[command.size()]);\n    ShellCommandExecutor shExec = new ShellCommandExecutor(commandArray);\n    LOG.info(\" -- DEBUG -- deleteAsUser: \" + Arrays.toString(commandArray));\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"deleteAsUser: \" + Arrays.toString(commandArray));\n    }\n    try {\n      shExec.execute();\n      if (LOG.isDebugEnabled()) {\n        logOutput(shExec.getOutput());\n      }\n    } catch (IOException e) {\n      int exitCode = shExec.getExitCode();\n      LOG.warn(\"Exit code from container is : \" + exitCode);\n      if (exitCode != 0) {\n        LOG.error(\"DeleteAsUser for \" + dir.toUri().getPath()\n            + \" returned with non-zero exit code\" + exitCode);\n        LOG.error(\"Output from LinuxContainerExecutor's deleteAsUser follows:\");\n        logOutput(shExec.getOutput());\n      }\n    }\n  }","id":61024,"modified_method":"@Override\n  public void deleteAsUser(String user, Path dir, Path... baseDirs) {\n    List<String> command = new ArrayList<String>(\n        Arrays.asList(containerExecutorExe,\n                    user,\n                    Integer.toString(Commands.DELETE_AS_USER.getValue()),\n                    dir == null ? \"\" : dir.toUri().getPath()));\n    if (baseDirs == null || baseDirs.length == 0) {\n      LOG.info(\"Deleting absolute path : \" + dir);\n    } else {\n      for (Path baseDir : baseDirs) {\n        Path del = dir == null ? baseDir : new Path(baseDir, dir);\n        LOG.info(\"Deleting path : \" + del);\n        command.add(baseDir.toUri().getPath());\n      }\n    }\n    String[] commandArray = command.toArray(new String[command.size()]);\n    ShellCommandExecutor shExec = new ShellCommandExecutor(commandArray);\n    LOG.info(\" -- DEBUG -- deleteAsUser: \" + Arrays.toString(commandArray));\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"deleteAsUser: \" + Arrays.toString(commandArray));\n    }\n    try {\n      shExec.execute();\n      if (LOG.isDebugEnabled()) {\n        logOutput(shExec.getOutput());\n      }\n    } catch (IOException e) {\n      int exitCode = shExec.getExitCode();\n      LOG.error(\"DeleteAsUser for \" + dir.toUri().getPath()\n          + \" returned with exit code: \" + exitCode, e);\n      LOG.error(\"Output from LinuxContainerExecutor's deleteAsUser follows:\");\n      logOutput(shExec.getOutput());\n    }\n  }","commit_id":"7a29bccd7aaf2eb33adac937379ba6be43a1031d","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n  public boolean signalContainer(String user, String pid, Signal signal)\n      throws IOException {\n\n    String[] command =\n        new String[] { containerExecutorExe,\n                   user,\n                   Integer.toString(Commands.SIGNAL_CONTAINER.getValue()),\n                   pid,\n                   Integer.toString(signal.getValue()) };\n    ShellCommandExecutor shExec = new ShellCommandExecutor(command);\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"signalContainer: \" + Arrays.toString(command));\n    }\n    try {\n      shExec.execute();\n    } catch (ExitCodeException e) {\n      int ret_code = shExec.getExitCode();\n      if (ret_code == ResultCode.INVALID_CONTAINER_PID.getValue()) {\n        return false;\n      }\n      logOutput(shExec.getOutput());\n      throw new IOException(\"Problem signalling container \" + pid + \" with \" +\n                            signal + \"; exit = \" + ret_code);\n    }\n    return true;\n  }","id":61025,"modified_method":"@Override\n  public boolean signalContainer(String user, String pid, Signal signal)\n      throws IOException {\n\n    String[] command =\n        new String[] { containerExecutorExe,\n                   user,\n                   Integer.toString(Commands.SIGNAL_CONTAINER.getValue()),\n                   pid,\n                   Integer.toString(signal.getValue()) };\n    ShellCommandExecutor shExec = new ShellCommandExecutor(command);\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"signalContainer: \" + Arrays.toString(command));\n    }\n    try {\n      shExec.execute();\n    } catch (ExitCodeException e) {\n      int ret_code = shExec.getExitCode();\n      if (ret_code == ResultCode.INVALID_CONTAINER_PID.getValue()) {\n        return false;\n      }\n      LOG.warn(\"Error in signalling container \" + pid + \" with \" + signal\n          + \"; exit = \" + ret_code, e);\n      logOutput(shExec.getOutput());\n      throw new IOException(\"Problem signalling container \" + pid + \" with \"\n          + signal + \"; output: \" + shExec.getOutput() + \" and exitCode: \"\n          + ret_code, e);\n    }\n    return true;\n  }","commit_id":"7a29bccd7aaf2eb33adac937379ba6be43a1031d","url":"https://github.com/apache/hadoop"},{"original_method":"public void mountCgroups(List<String> cgroupKVs, String hierarchy)\n         throws IOException {\n    List<String> command = new ArrayList<String>(\n            Arrays.asList(containerExecutorExe, \"--mount-cgroups\", hierarchy));\n    command.addAll(cgroupKVs);\n    \n    String[] commandArray = command.toArray(new String[command.size()]);\n    ShellCommandExecutor shExec = new ShellCommandExecutor(commandArray);\n\n    if (LOG.isDebugEnabled()) {\n        LOG.debug(\"mountCgroups: \" + Arrays.toString(commandArray));\n    }\n\n    try {\n        shExec.execute();\n    } catch (IOException e) {\n        int ret_code = shExec.getExitCode();\n        logOutput(shExec.getOutput());\n        throw new IOException(\"Problem mounting cgroups \" + cgroupKVs + \n                  \"; exit code = \" + ret_code, e);\n    }\n  }","id":61026,"modified_method":"public void mountCgroups(List<String> cgroupKVs, String hierarchy)\n         throws IOException {\n    List<String> command = new ArrayList<String>(\n            Arrays.asList(containerExecutorExe, \"--mount-cgroups\", hierarchy));\n    command.addAll(cgroupKVs);\n    \n    String[] commandArray = command.toArray(new String[command.size()]);\n    ShellCommandExecutor shExec = new ShellCommandExecutor(commandArray);\n\n    if (LOG.isDebugEnabled()) {\n        LOG.debug(\"mountCgroups: \" + Arrays.toString(commandArray));\n    }\n\n    try {\n        shExec.execute();\n    } catch (IOException e) {\n        int ret_code = shExec.getExitCode();\n        LOG.warn(\"Exception in LinuxContainerExecutor mountCgroups \", e);\n        logOutput(shExec.getOutput());\n        throw new IOException(\"Problem mounting cgroups \" + cgroupKVs + \n          \"; exit code = \" + ret_code + \" and output: \" + shExec.getOutput(), e);\n    }\n  }","commit_id":"7a29bccd7aaf2eb33adac937379ba6be43a1031d","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n  public void startLocalizer(Path nmPrivateContainerTokensPath,\n      InetSocketAddress nmAddr, String user, String appId, String locId,\n      List<String> localDirs, List<String> logDirs)\n      throws IOException, InterruptedException {\n\n    List<String> command = new ArrayList<String>();\n    addSchedPriorityCommand(command);\n    command.addAll(Arrays.asList(containerExecutorExe,\n                   user, \n                   Integer.toString(Commands.INITIALIZE_CONTAINER.getValue()),\n                   appId,\n                   nmPrivateContainerTokensPath.toUri().getPath().toString(),\n                   StringUtils.join(\",\", localDirs),\n                   StringUtils.join(\",\", logDirs)));\n\n    File jvm =                                  // use same jvm as parent\n      new File(new File(System.getProperty(\"java.home\"), \"bin\"), \"java\");\n    command.add(jvm.toString());\n    command.add(\"-classpath\");\n    command.add(System.getProperty(\"java.class.path\"));\n    String javaLibPath = System.getProperty(\"java.library.path\");\n    if (javaLibPath != null) {\n      command.add(\"-Djava.library.path=\" + javaLibPath);\n    }\n    command.add(ContainerLocalizer.class.getName());\n    command.add(user);\n    command.add(appId);\n    command.add(locId);\n    command.add(nmAddr.getHostName());\n    command.add(Integer.toString(nmAddr.getPort()));\n    for (String dir : localDirs) {\n      command.add(dir);\n    }\n    String[] commandArray = command.toArray(new String[command.size()]);\n    ShellCommandExecutor shExec = new ShellCommandExecutor(commandArray);\n    // TODO: DEBUG\n    LOG.info(\"initApplication: \" + Arrays.toString(commandArray));\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"initApplication: \" + Arrays.toString(commandArray));\n    }\n    try {\n      shExec.execute();\n      if (LOG.isDebugEnabled()) {\n        logOutput(shExec.getOutput());\n      }\n    } catch (ExitCodeException e) {\n      int exitCode = shExec.getExitCode();\n      LOG.warn(\"Exit code from container is : \" + exitCode);\n      logOutput(shExec.getOutput());\n      throw new IOException(\"App initialization failed (\" + exitCode + \n          \") with output: \" + shExec.getOutput(), e);\n    }\n  }","id":61027,"modified_method":"@Override\n  public void startLocalizer(Path nmPrivateContainerTokensPath,\n      InetSocketAddress nmAddr, String user, String appId, String locId,\n      List<String> localDirs, List<String> logDirs)\n      throws IOException, InterruptedException {\n\n    List<String> command = new ArrayList<String>();\n    addSchedPriorityCommand(command);\n    command.addAll(Arrays.asList(containerExecutorExe,\n                   user, \n                   Integer.toString(Commands.INITIALIZE_CONTAINER.getValue()),\n                   appId,\n                   nmPrivateContainerTokensPath.toUri().getPath().toString(),\n                   StringUtils.join(\",\", localDirs),\n                   StringUtils.join(\",\", logDirs)));\n\n    File jvm =                                  // use same jvm as parent\n      new File(new File(System.getProperty(\"java.home\"), \"bin\"), \"java\");\n    command.add(jvm.toString());\n    command.add(\"-classpath\");\n    command.add(System.getProperty(\"java.class.path\"));\n    String javaLibPath = System.getProperty(\"java.library.path\");\n    if (javaLibPath != null) {\n      command.add(\"-Djava.library.path=\" + javaLibPath);\n    }\n    command.add(ContainerLocalizer.class.getName());\n    command.add(user);\n    command.add(appId);\n    command.add(locId);\n    command.add(nmAddr.getHostName());\n    command.add(Integer.toString(nmAddr.getPort()));\n    for (String dir : localDirs) {\n      command.add(dir);\n    }\n    String[] commandArray = command.toArray(new String[command.size()]);\n    ShellCommandExecutor shExec = new ShellCommandExecutor(commandArray);\n    // TODO: DEBUG\n    LOG.info(\"initApplication: \" + Arrays.toString(commandArray));\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"initApplication: \" + Arrays.toString(commandArray));\n    }\n    try {\n      shExec.execute();\n      if (LOG.isDebugEnabled()) {\n        logOutput(shExec.getOutput());\n      }\n    } catch (ExitCodeException e) {\n      int exitCode = shExec.getExitCode();\n      LOG.warn(\"Exit code from container \" + locId + \" startLocalizer is : \"\n          + exitCode, e);\n      logOutput(shExec.getOutput());\n      throw new IOException(\"Application \" + appId + \" initialization failed\" +\n      \t\t\" (exitCode=\" + exitCode + \") with output: \" + shExec.getOutput(), e);\n    }\n  }","commit_id":"7a29bccd7aaf2eb33adac937379ba6be43a1031d","url":"https://github.com/apache/hadoop"},{"original_method":"@Override \n  public void init() throws IOException {        \n    // Send command to executor which will just start up, \n    // verify configuration/permissions and exit\n    List<String> command = new ArrayList<String>(\n        Arrays.asList(containerExecutorExe,\n            \"--checksetup\"));\n    String[] commandArray = command.toArray(new String[command.size()]);\n    ShellCommandExecutor shExec = new ShellCommandExecutor(commandArray);\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"checkLinuxExecutorSetup: \" + Arrays.toString(commandArray));\n    }\n    try {\n      shExec.execute();\n    } catch (ExitCodeException e) {\n      int exitCode = shExec.getExitCode();\n      LOG.warn(\"Exit code from container is : \" + exitCode);\n      logOutput(shExec.getOutput());\n      throw new IOException(\"Linux container executor not configured properly\"\n          + \" (error=\" + exitCode + \")\", e);\n    }\n   \n    resourcesHandler.init(this);\n  }","id":61028,"modified_method":"@Override \n  public void init() throws IOException {        \n    // Send command to executor which will just start up, \n    // verify configuration/permissions and exit\n    List<String> command = new ArrayList<String>(\n        Arrays.asList(containerExecutorExe,\n            \"--checksetup\"));\n    String[] commandArray = command.toArray(new String[command.size()]);\n    ShellCommandExecutor shExec = new ShellCommandExecutor(commandArray);\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"checkLinuxExecutorSetup: \" + Arrays.toString(commandArray));\n    }\n    try {\n      shExec.execute();\n    } catch (ExitCodeException e) {\n      int exitCode = shExec.getExitCode();\n      LOG.warn(\"Exit code from container executor initialization is : \"\n          + exitCode, e);\n      logOutput(shExec.getOutput());\n      throw new IOException(\"Linux container executor not configured properly\"\n          + \" (error=\" + exitCode + \")\", e);\n    }\n   \n    resourcesHandler.init(this);\n  }","commit_id":"7a29bccd7aaf2eb33adac937379ba6be43a1031d","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n  public int launchContainer(Container container,\n      Path nmPrivateCotainerScriptPath, Path nmPrivateTokensPath,\n      String user, String appId, Path containerWorkDir) throws IOException {\n\n    ContainerId containerId = container.getContainerID();\n    String containerIdStr = ConverterUtils.toString(containerId);\n    List<String> command = new ArrayList<String>(\n      Arrays.asList(containerExecutorExe, \n                    user, \n                    Integer.toString(Commands.LAUNCH_CONTAINER.getValue()),\n                    appId,\n                    containerIdStr,\n                    containerWorkDir.toString(),\n                    nmPrivateCotainerScriptPath.toUri().getPath().toString(),\n                    nmPrivateTokensPath.toUri().getPath().toString()));\n    String[] commandArray = command.toArray(new String[command.size()]);\n    ShellCommandExecutor shExec = \n        new ShellCommandExecutor(\n            commandArray,\n            null,                                              // NM's cwd\n            container.getLaunchContext().getEnvironment());    // sanitized env\n    launchCommandObjs.put(containerId, shExec);\n    // DEBUG\n    LOG.info(\"launchContainer: \" + Arrays.toString(commandArray));\n    String output = shExec.getOutput();\n    try {\n      shExec.execute();\n      if (LOG.isDebugEnabled()) {\n        logOutput(output);\n      }\n    } catch (ExitCodeException e) {\n      int exitCode = shExec.getExitCode();\n      LOG.warn(\"Exit code from container is : \" + exitCode);\n      // 143 (SIGTERM) and 137 (SIGKILL) exit codes means the container was\n      // terminated/killed forcefully. In all other cases, log the\n      // container-executor's output\n      if (exitCode != 143 && exitCode != 137) {\n        LOG.warn(\"Exception from container-launch : \", e);\n        logOutput(output);\n        String diagnostics = \"Exception from container-launch: \\n\"\n            + StringUtils.stringifyException(e) + \"\\n\" + output;\n        container.handle(new ContainerDiagnosticsUpdateEvent(containerId,\n            diagnostics));\n      } else {\n        container.handle(new ContainerDiagnosticsUpdateEvent(containerId,\n            \"Container killed on request. Exit code is \" + exitCode));\n      }\n      return exitCode;\n    } finally {\n      launchCommandObjs.remove(containerId);\n    }\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Output from LinuxContainerExecutor's launchContainer follows:\");\n      logOutput(output);\n    }\n    return 0;\n  }","id":61029,"modified_method":"@Override\n  public int launchContainer(Container container,\n      Path nmPrivateCotainerScriptPath, Path nmPrivateTokensPath,\n      String user, String appId, Path containerWorkDir) throws IOException {\n\n    ContainerId containerId = container.getContainerID();\n    String containerIdStr = ConverterUtils.toString(containerId);\n    List<String> command = new ArrayList<String>(\n      Arrays.asList(containerExecutorExe, \n                    user, \n                    Integer.toString(Commands.LAUNCH_CONTAINER.getValue()),\n                    appId,\n                    containerIdStr,\n                    containerWorkDir.toString(),\n                    nmPrivateCotainerScriptPath.toUri().getPath().toString(),\n                    nmPrivateTokensPath.toUri().getPath().toString()));\n    String[] commandArray = command.toArray(new String[command.size()]);\n    ShellCommandExecutor shExec = \n        new ShellCommandExecutor(\n            commandArray,\n            null,                                              // NM's cwd\n            container.getLaunchContext().getEnvironment());    // sanitized env\n    launchCommandObjs.put(containerId, shExec);\n    // DEBUG\n    LOG.info(\"launchContainer: \" + Arrays.toString(commandArray));\n    try {\n      shExec.execute();\n      if (LOG.isDebugEnabled()) {\n        logOutput(shExec.getOutput());\n      }\n    } catch (ExitCodeException e) {\n      int exitCode = shExec.getExitCode();\n      LOG.warn(\"Exit code from container is : \" + exitCode);\n      // 143 (SIGTERM) and 137 (SIGKILL) exit codes means the container was\n      // terminated/killed forcefully. In all other cases, log the\n      // container-executor's output\n      if (exitCode != 143 && exitCode != 137) {\n        LOG.warn(\"Exception from container-launch : \", e);\n        logOutput(shExec.getOutput());\n        String diagnostics = \"Exception from container-launch: \\n\"\n            + StringUtils.stringifyException(e) + \"\\n\" + shExec.getOutput();\n        container.handle(new ContainerDiagnosticsUpdateEvent(containerId,\n            diagnostics));\n      } else {\n        container.handle(new ContainerDiagnosticsUpdateEvent(containerId,\n            \"Container killed on request. Exit code is \" + exitCode));\n      }\n      return exitCode;\n    } finally {\n      launchCommandObjs.remove(containerId);\n    }\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Output from LinuxContainerExecutor's launchContainer follows:\");\n      logOutput(shExec.getOutput());\n    }\n    return 0;\n  }","commit_id":"a8190ce5c520fcb69399485231ef7c0b7fdc3df7","url":"https://github.com/apache/hadoop"},{"original_method":"static IScannableCodeBase createFilesystemCodeBase(FilesystemCodeBaseLocator codeBaseLocator) throws IOException {\n\t\tString fileName = codeBaseLocator.getPathName();\n\n\t\tFile file = new File(fileName);\n\n\t\tif (file.isDirectory()) {\n\t\t\treturn new DirectoryCodeBase(codeBaseLocator, file);\n\t\t} else if (fileName.endsWith(\".class\")) {\n\t\t\treturn new SingleFileCodeBase(codeBaseLocator, fileName);\n\t\t} else {\n\t\t\treturn new ZipInputStreamCodeBase(codeBaseLocator, file);\n\t\t}\n\t}","id":61030,"modified_method":"static IScannableCodeBase createFilesystemCodeBase(FilesystemCodeBaseLocator codeBaseLocator) throws IOException {\n\t\tString fileName = codeBaseLocator.getPathName();\n\n\t\tFile file = new File(fileName);\n\n\t\tif (file.isDirectory()) {\n\t\t\treturn new DirectoryCodeBase(codeBaseLocator, file);\n\t\t} else if (fileName.endsWith(\".class\")) {\n\t\t\treturn new SingleFileCodeBase(codeBaseLocator, fileName);\n\t\t} else {\n\t\t    return ZipCodeBaseFactory.makeZipCodeBase(codeBaseLocator, file);\n\t\t}\n\t}","commit_id":"02f006ddfe860d19cc6286bb14e293bfb3ba3c5d","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"/**\n\t * Constructor.\n\t * \n\t * @param codeBaseLocator the codebase locator for this codebase\n\t */\n\tpublic NestedZipFileCodeBase(NestedZipFileCodeBaseLocator codeBaseLocator)\n\t\t\tthrows ResourceNotFoundException, IOException {\n\t\tsuper(codeBaseLocator);\n\t\tthis.parentCodeBase = codeBaseLocator.getParentCodeBase();\n\t\tthis.resourceName = codeBaseLocator.getResourceName();\n\n\t\tInputStream inputStream = null;\n\t\tOutputStream outputStream = null;\n\t\ttry {\n\t\t\t// Create a temp file\n\t\t\tthis.tempFile = File.createTempFile(\"findbugs\", \".zip\");\n\t\t\ttempFile.deleteOnExit(); // just in case we crash before the codebase is closed\n\n\t\t\t// Copy nested zipfile to the temporary file\n\t\t\t// FIXME: potentially long blocking operation - should be interruptible\n\t\t\tinputStream = parentCodeBase.lookupResource(resourceName).openResource();\n\t\t\toutputStream = new BufferedOutputStream(new FileOutputStream(tempFile));\n\t\t\tIO.copy(inputStream, outputStream);\n\t\t\toutputStream.flush();\n\n\t\t\t// Create the delegate to read from the temporary file\n\t\t\tdelegateCodeBase = new ZipFileCodeBase(codeBaseLocator, tempFile);\n\t\t} finally {\n\t\t\tif (inputStream != null) {\n\t\t\t\tIO.close(inputStream);\n\t\t\t}\n\n\t\t\tif (outputStream != null) {\n\t\t\t\tIO.close(outputStream);\n\t\t\t}\n\t\t}\n\t}","id":61031,"modified_method":"/**\n\t * Constructor.\n\t * \n\t * @param codeBaseLocator the codebase locator for this codebase\n\t */\n\tpublic NestedZipFileCodeBase(NestedZipFileCodeBaseLocator codeBaseLocator)\n\t\t\tthrows ResourceNotFoundException, IOException {\n\t\tsuper(codeBaseLocator);\n\t\tthis.parentCodeBase = codeBaseLocator.getParentCodeBase();\n\t\tthis.resourceName = codeBaseLocator.getResourceName();\n\n\t\tInputStream inputStream = null;\n\t\tOutputStream outputStream = null;\n\t\ttry {\n\t\t\t// Create a temp file\n\t\t\tthis.tempFile = File.createTempFile(\"findbugs\", \".zip\");\n\t\t\ttempFile.deleteOnExit(); // just in case we crash before the codebase is closed\n\n\t\t\t// Copy nested zipfile to the temporary file\n\t\t\t// FIXME: potentially long blocking operation - should be interruptible\n\t\t\tinputStream = parentCodeBase.lookupResource(resourceName).openResource();\n\t\t\toutputStream = new BufferedOutputStream(new FileOutputStream(tempFile));\n\t\t\tIO.copy(inputStream, outputStream);\n\t\t\toutputStream.flush();\n\n\t\t\t// Create the delegate to read from the temporary file\n\t\t\tdelegateCodeBase = ZipCodeBaseFactory.makeZipCodeBase(codeBaseLocator, tempFile);\n\t\t} finally {\n\t\t\tif (inputStream != null) {\n\t\t\t\tIO.close(inputStream);\n\t\t\t}\n\n\t\t\tif (outputStream != null) {\n\t\t\t\tIO.close(outputStream);\n\t\t\t}\n\t\t}\n\t}","commit_id":"02f006ddfe860d19cc6286bb14e293bfb3ba3c5d","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"/**\n\t * Constructor.\n\t * \n\t * @param codeBaseLocator the codebase locator for this codebase\n\t * @param file the File containing the zip file (may be a temp file\n\t *         if the codebase was copied from a nested zipfile in\n\t *         another codebase)\n\t */\n\tpublic ZipInputStreamCodeBase(ICodeBaseLocator codeBaseLocator, File file) throws IOException {\n\t\tsuper(codeBaseLocator);\n\n\t\tthis.file = file;\n\t\tsetLastModifiedTime(file.lastModified());\n\t\tZipInputStream zis = new ZipInputStream(new FileInputStream(file));\n\t\tZipEntry ze;\n\t\tif (DEBUG) \n\t\tSystem.out.println(\"Reading zip input stream \" + file);\n\t\tint count = 0;\n\t\t while ((ze = zis.getNextEntry()) != null) {\n\t\t\t if (!ze.isDirectory() && (ze.getName().equals(\"META-INF/MANIFEST.MF\") || ze.getName().endsWith(\".class\"))) {\n\t\t\t\t count++;\n\t\t\t\t if (DEBUG && count % 10000 == 0) \n\t\t\t\t\t System.out.println(\"Reading # \" + count + \" : \" + ze.getName());\n\t\t\t\t long sz = ze.getSize();\n\t\t\t\t \n\t\t\t\t ByteArrayOutputStream out;\n\t\t\t\t if (sz < 0 || sz > Integer.MAX_VALUE) out = new ByteArrayOutputStream();\n\t\t\t\t else out = new ByteArrayOutputStream((int)sz);\n\t\t\t\t IO.copy(zis, out);\n\t\t\t\t byte[] bytes = out.toByteArray();\n\t\t\t\t setLastModifiedTime(ze.getTime());\n\t\t\t\t ZipInputStreamCodeBaseEntry z = new ZipInputStreamCodeBaseEntry(this, ze, bytes);\n\t\t\t\t map.put(ze.getName(), z);\n\t\t\t }\n\t\t\t zis.closeEntry();\n\t\t\t \n\t\t }\n\t\t\tif (DEBUG) System.out.println(\"Done with zip input stream \" + file);\n\n\t}","id":61032,"modified_method":"/**\n\t * Constructor.\n\t * \n\t * @param codeBaseLocator the codebase locator for this codebase\n\t * @param file the File containing the zip file (may be a temp file\n\t *         if the codebase was copied from a nested zipfile in\n\t *         another codebase)\n\t */\n\tpublic ZipInputStreamCodeBase(ICodeBaseLocator codeBaseLocator, File file) throws IOException {\n\t\tsuper(codeBaseLocator);\n\n\t\tthis.file = file;\n\t\tsetLastModifiedTime(file.lastModified());\n\t\tZipInputStream zis = new ZipInputStream(new FileInputStream(file));\n\t\tZipEntry ze;\n\t\tif (DEBUG)\n\t\t\tSystem.out.println(\"Reading zip input stream \" + file);\n\t\tint count = 0;\n\t\twhile ((ze = zis.getNextEntry()) != null) {\n\t\t\tif (!ze.isDirectory() && (ze.getName().equals(\"META-INF/MANIFEST.MF\") || ze.getName().endsWith(\".class\"))) {\n\t\t\t\tentries.add(ze.getName());\n\t\t\t\tif (ze.getName().equals(\"META-INF/MANIFEST.MF\")) \n\t\t\t\t\tmap.put(ze.getName(), build(zis, ze));\n\t\t\t}\n\t\t\tzis.closeEntry();\n\n\t\t}\n\t\tif (DEBUG)\n\t\t\tSystem.out.println(\"Done with zip input stream \" + file);\n\n\t}","commit_id":"02f006ddfe860d19cc6286bb14e293bfb3ba3c5d","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"public ICodeBaseEntry lookupResource(String resourceName) throws ResourceNotFoundException {\n\t\t// Translate resource name, in case a resource name\n\t\t// has been overridden and the resource is being accessed\n\t\t// using the overridden name.\n\t\tresourceName = translateResourceName(resourceName);\n\t\tZipInputStreamCodeBaseEntry z = map.get(resourceName);\n\t\tif (z == null) throw new ResourceNotFoundException(resourceName);\n\t\treturn z;\n\t}","id":61033,"modified_method":"public ICodeBaseEntry lookupResource(String resourceName) throws ResourceNotFoundException {\n\n\t\t// Translate resource name, in case a resource name\n\t\t// has been overridden and the resource is being accessed\n\t\t// using the overridden name.\n\t\tresourceName = translateResourceName(resourceName);\n\t\tif (!entries.contains(resourceName))\n\t\t\tthrow new ResourceNotFoundException(resourceName);\n\n\t\ttry {\n\t\t\tZipInputStreamCodeBaseEntry z = map.get(resourceName);\n\t\t\tif (z != null)\n\t\t\t\treturn z;\n\t\t\tZipInputStream zis = new ZipInputStream(new FileInputStream(file));\n\t\t\tZipEntry ze;\n\t\t\tboolean found = false;\n\t\t\tint countDown = 20;\n\t\t\twhile ((ze = zis.getNextEntry()) != null && countDown >= 0) {\n\t\t\t\tif (ze.getName().equals(resourceName))\n\t\t\t\t\tfound = true;\n\t\t\t\tif (found) {\n\t\t\t\t\tcountDown--;\n\t\t\t\t\tif (map.containsKey(ze.getName()))\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tz = build(zis, ze);\n\t\t\t\t\tmap.put(ze.getName(), z);\n\t\t\t\t}\n\t\t\t\tzis.closeEntry();\n\t\t\t}\n\t\t\tz = map.get(resourceName);\n\t\t\tif (z == null)\n\t\t\t\tthrow new AssertionError(\"Could not find \" + resourceName);\n\t\t\treturn z;\n\t\t} catch (IOException e) {\n\t\t\tthrow new ResourceNotFoundException(resourceName);\n\t\t}\n\t}","commit_id":"02f006ddfe860d19cc6286bb14e293bfb3ba3c5d","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"public ICodeBaseIterator iterator() {\n\t\t\n\t\treturn new ICodeBaseIterator() {\n\t\t\tjava.util.Iterator<ZipInputStreamCodeBaseEntry> i = map.values().iterator();\n\t\t\tpublic boolean hasNext()  {\n\t            return i.hasNext();\n            }\n\n\t\t\tpublic ICodeBaseEntry next()  {\n\t            return i.next();\n            } };\n\t\t\t\n\n\t}","id":61034,"modified_method":"public ICodeBaseIterator iterator() {\n\t\treturn new MyIterator();\n\t}","commit_id":"02f006ddfe860d19cc6286bb14e293bfb3ba3c5d","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"private Map<String, Map<String, String>> loadAliases(final ResourceResolver resolver) {\n        final Map<String, Map<String, String>> map = new HashMap<String, Map<String, String>>();\n        final String queryString = \"SELECT sling:alias FROM nt:base WHERE sling:alias IS NOT NULL\";\n        final Iterator<Resource> i = resolver.findResources(queryString, \"sql\");\n        while (i.hasNext()) {\n            final Resource resource = i.next();\n\n            // ignore system tree\n            if (resource.getPath().startsWith(JCR_SYSTEM_PREFIX)) {\n                log.debug(\"loadAliases: Ignoring {}\", resource);\n                continue;\n            }\n\n            // require properties\n            final ValueMap props = resource.adaptTo(ValueMap.class);\n            if (props == null) {\n                log.debug(\"loadAliases: Ignoring {} without properties\", resource);\n                continue;\n            }\n\n            final String parentPath = resource.getParent().getPath();\n            Map<String, String> parentMap = map.get(parentPath);\n            if (parentMap == null) {\n                parentMap = new HashMap<String, String>();\n                map.put(parentPath, parentMap);\n            }\n            for (final String alias : props.get(ResourceResolverImpl.PROP_ALIAS, String[].class)) {\n                parentMap.put(alias, resource.getName());\n            }\n        }\n\n        return map;\n\n    }","id":61035,"modified_method":"private Map<String, Map<String, String>> loadAliases(final ResourceResolver resolver) {\n        final Map<String, Map<String, String>> map = new HashMap<String, Map<String, String>>();\n        final String queryString = \"SELECT sling:alias FROM nt:base WHERE sling:alias IS NOT NULL\";\n        final Iterator<Resource> i = resolver.findResources(queryString, \"sql\");\n        while (i.hasNext()) {\n            final Resource resource = i.next();\n\n            // ignore system tree\n            if (resource.getPath().startsWith(JCR_SYSTEM_PREFIX)) {\n                log.debug(\"loadAliases: Ignoring {}\", resource);\n                continue;\n            }\n\n            // require properties\n            final ValueMap props = resource.adaptTo(ValueMap.class);\n            if (props == null) {\n                log.debug(\"loadAliases: Ignoring {} without properties\", resource);\n                continue;\n            }\n\n            final String resourceName;\n            final String parentPath;\n            if (resource.getName().equals(\"jcr:content\")) {\n                final Resource containingResource = resource.getParent();\n                parentPath = containingResource.getParent().getPath();\n                resourceName = containingResource.getName();\n            } else {\n                parentPath = resource.getParent().getPath();\n                resourceName = resource.getName();\n            }\n            Map<String, String> parentMap = map.get(parentPath);\n            if (parentMap == null) {\n                parentMap = new HashMap<String, String>();\n                map.put(parentPath, parentMap);\n            }\n            for (final String alias : props.get(ResourceResolverImpl.PROP_ALIAS, String[].class)) {\n                parentMap.put(alias, resourceName);\n            }\n        }\n\n        return map;\n\n    }","commit_id":"55aabf6ade05712c2aee330acac10d2884ac2534","url":"https://github.com/apache/sling"},{"original_method":"@Override\n    protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) {\n        return null;\n    }","id":61036,"modified_method":"@Override\n    protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) {\n        log.trace(\"Retrieving authz information for {}\", principals);\n        final User user = User.load(principals.getPrimaryPrincipal().toString(), core);\n        final SimpleAuthorizationInfo info = new SimpleAuthorizationInfo();\n        final List<String> permissions = user.getPermissions();\n        if (permissions != null) {\n            info.setStringPermissions(Sets.newHashSet(permissions));\n        }\n        return info;\n    }","commit_id":"23a226dc779df68c96100b4bca3b9a76e68fa7a8","url":"https://github.com/Graylog2/graylog2-server"},{"original_method":"@Override\n    protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken authToken) throws AuthenticationException {\n        if (!(authToken instanceof UsernamePasswordToken)) {\n            throw new IllegalArgumentException(\"Only implemented for UsernamePasswordToken currently.\");\n        }\n        UsernamePasswordToken token = (UsernamePasswordToken) authToken;\n        log.info(\"Retrieving authc info for user {}:{}\", token.getUsername(), token.getCredentials());\n\n        final SimpleAccount simpleAccount;\n        if (User.exists(token.getUsername(), new String(token.getPassword()), core)) {\n            simpleAccount = new SimpleAccount(token.getPrincipal(),\n                    token.getCredentials(),\n                    ByteSource.Util.bytes(core.getConfiguration().getPasswordSecret()),\n                    \"graylog2MongoDbRealm\");\n            log.info(\"User {} authenticated by hashed password\", token.getUsername());\n        } else {\n            log.warn(\"User {} could not be authenticated\", token.getUsername());\n            throw new AuthenticationException(\"Unknown user or wrong credentials.\");\n        }\n\n        return simpleAccount;\n    }","id":61037,"modified_method":"@Override\n    protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken authToken) throws AuthenticationException {\n        if (!(authToken instanceof UsernamePasswordToken)) {\n            throw new IllegalArgumentException(\"Only implemented for UsernamePasswordToken currently.\");\n        }\n        UsernamePasswordToken token = (UsernamePasswordToken) authToken;\n        log.info(\"Retrieving authc info for user {}\", token.getUsername());\n\n        final SimpleAccount simpleAccount;\n        if (User.exists(token.getUsername(), new String(token.getPassword()), core)) {\n            simpleAccount = new SimpleAccount(token.getPrincipal(),\n                    token.getCredentials(),\n                    ByteSource.Util.bytes(core.getConfiguration().getPasswordSecret()),\n                    \"graylog2MongoDbRealm\");\n            log.info(\"User {} authenticated by hashed password\", token.getUsername());\n        } else {\n            log.warn(\"User {} could not be authenticated\", token.getUsername());\n            throw new AuthenticationException(\"Unknown user or wrong credentials.\");\n        }\n\n        return simpleAccount;\n    }","commit_id":"23a226dc779df68c96100b4bca3b9a76e68fa7a8","url":"https://github.com/Graylog2/graylog2-server"},{"original_method":"@Override\n    public void configure(ResourceInfo resourceInfo, FeatureContext context) {\n        final Class<?> resourceClass = resourceInfo.getResourceClass();\n        final Method resourceMethod = resourceInfo.getResourceMethod();\n\n        if (resourceMethod.isAnnotationPresent(RequiresAuthentication.class) ||\n                resourceClass.isAnnotationPresent(RequiresAuthentication.class)) {\n            log.info(\"Resource method {}#{} requires an authenticated user.\", resourceClass.getCanonicalName(), resourceMethod.getName());\n            context.register(new ShiroAuthenticationFilter());\n        }\n    }","id":61038,"modified_method":"@Override\n    public void configure(ResourceInfo resourceInfo, FeatureContext context) {\n        final Class<?> resourceClass = resourceInfo.getResourceClass();\n        final Method resourceMethod = resourceInfo.getResourceMethod();\n\n        if (resourceMethod.isAnnotationPresent(RequiresAuthentication.class) ||\n                resourceClass.isAnnotationPresent(RequiresAuthentication.class)) {\n            log.info(\"Resource method {}#{} requires an authenticated user.\", resourceClass.getCanonicalName(), resourceMethod.getName());\n            context.register(new ShiroAuthenticationFilter());\n        }\n        if (resourceMethod.isAnnotationPresent(RequiresPermissions.class) ||\n                resourceClass.isAnnotationPresent(RequiresPermissions.class)) {\n            RequiresPermissions a = resourceClass.getAnnotation(RequiresPermissions.class);\n            if (a == null) {\n                a = resourceMethod.getAnnotation(RequiresPermissions.class);\n            }\n            log.info(\"Resource method {}#{} requires an authorization checks.\", resourceClass.getCanonicalName(), resourceMethod.getName());\n            context.register(new ShiroAuthorizationFilter(a));\n        }\n    }","commit_id":"23a226dc779df68c96100b4bca3b9a76e68fa7a8","url":"https://github.com/Graylog2/graylog2-server"},{"original_method":"protected Map<String, Validator> getValidations() {\n        return new HashMap<String, Validator>() {{\n            put(USERNAME, new FilledStringValidator());\n            put(PASSWORD, new FilledStringValidator());\n            put(FULL_NAME, new FilledStringValidator());\n        }};\n    }","id":61039,"modified_method":"protected Map<String, Validator> getValidations() {\n        return new HashMap<String, Validator>() {{\n            put(USERNAME, new FilledStringValidator());\n            put(PASSWORD, new FilledStringValidator());\n            put(FULL_NAME, new FilledStringValidator());\n            put(PERMISSIONS, new ListValidator());\n        }};\n    }","commit_id":"23a226dc779df68c96100b4bca3b9a76e68fa7a8","url":"https://github.com/Graylog2/graylog2-server"},{"original_method":"@POST\n    @RequiresAuthentication\n    @RequiresPermissions(\"users:create\")\n    @Consumes(MediaType.APPLICATION_JSON)\n    @Produces(MediaType.APPLICATION_JSON)\n    public Response create(String body) {\n        if (body == null || body.isEmpty()) {\n            LOG.error(\"Missing parameters. Returning HTTP 400.\");\n            throw new WebApplicationException(400);\n        }\n\n        CreateRequest cr;\n        try {\n            cr = objectMapper.readValue(body, CreateRequest.class);\n        } catch(IOException e) {\n            LOG.error(\"Error while parsing JSON\", e);\n            throw new WebApplicationException(e, Response.Status.BAD_REQUEST);\n        }\n\n        // Create user.\n        Map<String, Object> userData = Maps.newHashMap();\n        userData.put(\"username\", cr.username);\n        userData.put(\"password\", cr.password); // core.getConfiguration().getPasswordSecret()));\n        userData.put(\"full_name\", cr.fullName);\n\n        User user = new User(userData, core);\n        ObjectId id;\n        try {\n            // TODO JPA this is wrong, the primary key is the username\n            id = user.save();\n        } catch (ValidationException e) {\n            LOG.error(\"Validation error.\", e);\n            throw new WebApplicationException(e, Response.Status.BAD_REQUEST);\n        }\n\n        Map<String, Object> result = Maps.newHashMap();\n        result.put(\"user_id\", id.toStringMongod());\n\n        return Response.status(Response.Status.CREATED).entity(json(result)).build();\n    }","id":61040,"modified_method":"@POST\n    @RequiresPermissions(RestPermissions.USERS_CREATE)\n    public Response create(String body) {\n        if (body == null || body.isEmpty()) {\n            LOG.error(\"Missing parameters. Returning HTTP 400.\");\n            throw new WebApplicationException(400);\n        }\n\n        CreateRequest cr;\n        try {\n            cr = objectMapper.readValue(body, CreateRequest.class);\n        } catch(IOException e) {\n            LOG.error(\"Error while parsing JSON\", e);\n            throw new WebApplicationException(e, Response.Status.BAD_REQUEST);\n        }\n\n        // Create user.\n        Map<String, Object> userData = Maps.newHashMap();\n        userData.put(\"username\", cr.username);\n        userData.put(\"password\", cr.password); // core.getConfiguration().getPasswordSecret()));\n        userData.put(\"full_name\", cr.fullName);\n        userData.put(\"permissions\", cr.permissions);\n\n        User user = new User(userData, core);\n        ObjectId id;\n        try {\n            // TODO JPA this is wrong, the primary key is the username\n            id = user.save();\n        } catch (ValidationException e) {\n            LOG.error(\"Validation error.\", e);\n            throw new WebApplicationException(e, Response.Status.BAD_REQUEST);\n        }\n\n        Map<String, Object> result = Maps.newHashMap();\n        result.put(\"user_id\", id.toStringMongod());\n\n        return Response.status(Response.Status.CREATED).entity(json(result)).build();\n    }","commit_id":"23a226dc779df68c96100b4bca3b9a76e68fa7a8","url":"https://github.com/Graylog2/graylog2-server"},{"original_method":"public void test_fourCycles() throws Exception {\n    Graph<String> graph = new Graph<String>();\n    GraphAnalyzer<String> cd = graph.getCycleDetector();\n    graph.addEdges(\"A\", \"B\");\n    graph.addEdges(\"B\", \"C\", \"F\", \"E\");\n    graph.addEdges(\"C\", \"D\", \"G\");\n    graph.addEdges(\"D\", \"C\", \"H\");\n    graph.addEdges(\"E\", \"A\", \"F\");\n    graph.addEdges(\"F\", \"G\");\n    graph.addEdges(\"G\", \"F\", \"H\", \"I\", \"J\");\n    graph.addEdges(\"H\", \"I\");\n    graph.addEdges(\"I\", \"G\", \"K\");\n    List<List<String>> cycles = cd.findCycles(graph.getVertices());\n    Assert.assertSame(3, ListSequence.fromList(cycles).count());\n    Assert.assertTrue(ListSequence.fromList(ListSequence.fromListAndArray(new ArrayList<String>(), \"A\", \"B\", \"E\")).disjunction(ListSequence.fromList(ListSequence.fromList(cycles).getElement(0))).isEmpty());\n    Assert.assertTrue(ListSequence.fromList(ListSequence.fromListAndArray(new ArrayList<String>(), \"D\", \"C\")).disjunction(ListSequence.fromList(ListSequence.fromList(cycles).getElement(1))).isEmpty());\n    Assert.assertTrue(ListSequence.fromList(ListSequence.fromListAndArray(new ArrayList<String>(), \"G\", \"I\", \"F\", \"H\")).disjunction(ListSequence.fromList(ListSequence.fromList(cycles).getElement(2))).isEmpty());\n  }","id":61041,"modified_method":"public void test_fourCycles() throws Exception {\n    Graph<String> graph = new Graph<String>();\n    GraphAnalyzer<String> cd = graph.getCycleDetector();\n    graph.addEdges(\"A\", \"B\");\n    graph.addEdges(\"B\", \"C\", \"F\", \"E\");\n    graph.addEdges(\"C\", \"D\", \"G\");\n    graph.addEdges(\"D\", \"C\", \"H\");\n    graph.addEdges(\"E\", \"A\", \"F\");\n    graph.addEdges(\"F\", \"G\");\n    graph.addEdges(\"G\", \"F\", \"H\", \"I\", \"J\");\n    graph.addEdges(\"H\", \"I\");\n    graph.addEdges(\"I\", \"G\", \"K\");\n    List<List<String>> cycles = cd.findCycles();\n    Assert.assertSame(3, ListSequence.fromList(cycles).count());\n    Assert.assertTrue(ListSequence.fromList(ListSequence.fromListAndArray(new ArrayList<String>(), \"A\", \"B\", \"E\")).disjunction(ListSequence.fromList(ListSequence.fromList(cycles).getElement(0))).isEmpty());\n    Assert.assertTrue(ListSequence.fromList(ListSequence.fromListAndArray(new ArrayList<String>(), \"D\", \"C\")).disjunction(ListSequence.fromList(ListSequence.fromList(cycles).getElement(1))).isEmpty());\n    Assert.assertTrue(ListSequence.fromList(ListSequence.fromListAndArray(new ArrayList<String>(), \"G\", \"I\", \"F\", \"H\")).disjunction(ListSequence.fromList(ListSequence.fromList(cycles).getElement(2))).isEmpty());\n  }","commit_id":"614f2ab1602e9ffcbea655028337daed5a4d9a1c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void test_linear() throws Exception {\n    Graph<String> graph = new Graph<String>();\n    GraphAnalyzer<String> cd = graph.getCycleDetector();\n    graph.addEdges(\"A\", \"B\");\n    graph.addEdges(\"B\", \"C\");\n    graph.addEdges(\"C\", \"D\");\n    List<List<String>> cycles = cd.findCycles(Sequence.fromIterable(graph.getVertices()).sort(new ISelector<String, Comparable<?>>() {\n      public Comparable<?> select(String it) {\n        return it;\n      }\n    }, false));\n    Assert.assertSame(0, ListSequence.fromList(cycles).count());\n    cycles = cd.findCycles(graph.getVertices());\n    Assert.assertSame(0, ListSequence.fromList(cycles).count());\n    cycles = cd.findCycles(Sequence.fromIterable(graph.getVertices()).sort(new ISelector<String, Comparable<?>>() {\n      public Comparable<?> select(String it) {\n        return ((Object) it).hashCode();\n      }\n    }, true));\n    Assert.assertSame(0, ListSequence.fromList(cycles).count());\n  }","id":61042,"modified_method":"public void test_linear() throws Exception {\n    Graph<String> graph = new Graph<String>();\n    GraphAnalyzer<String> cd = graph.getCycleDetector();\n    graph.addEdges(\"A\", \"B\");\n    graph.addEdges(\"B\", \"C\");\n    graph.addEdges(\"C\", \"D\");\n    graph.sort(new _FunctionTypes._return_P1_E0<String, String>() {\n      public String invoke(String s) {\n        return s;\n      }\n    }, false);\n    List<List<String>> cycles = cd.findCycles();\n    Assert.assertSame(0, ListSequence.fromList(cycles).count());\n    cycles = cd.findCycles();\n    Assert.assertSame(0, ListSequence.fromList(cycles).count());\n    graph.sort(new _FunctionTypes._return_P1_E0<Integer, String>() {\n      public Integer invoke(String s) {\n        return ((Object) s).hashCode();\n      }\n    }, true);\n    cycles = cd.findCycles();\n    Assert.assertSame(0, ListSequence.fromList(cycles).count());\n  }","commit_id":"614f2ab1602e9ffcbea655028337daed5a4d9a1c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void test_topoSort() throws Exception {\n    Graph<String> graph = new Graph<String>();\n    GraphAnalyzer<String> cd = graph.getCycleDetector();\n    graph.addEdges(\"A\", \"B\", \"C\", \"H\", \"I\");\n    graph.addEdges(\"B\", \"C\", \"D\", \"E\", \"G\");\n    graph.addEdges(\"C\", \"D\", \"G\", \"K\");\n    graph.addEdges(\"D\", \"E\", \"H\");\n    graph.addEdges(\"E\", \"F\");\n    graph.addEdges(\"F\", \"G\");\n    graph.addEdges(\"G\", \"H\", \"I\", \"J\");\n    graph.addEdges(\"H\", \"I\");\n    graph.addEdges(\"I\", \"K\", \"J\");\n    List<List<String>> cycles = cd.findCycles(graph.getVertices());\n    Assert.assertSame(0, ListSequence.fromList(cycles).count());\n    final Queue<String> q = QueueSequence.fromQueueAndArray(new LinkedList<String>(), \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\");\n    Sequence.fromIterable(cd.topologicalSort(graph.getVertices())).visitAll(new IVisitor<String>() {\n      public void visit(String v) {\n        Assert.assertEquals(QueueSequence.fromQueue(q).removeFirstElement(), v);\n      }\n    });\n    final Queue<String> qq = QueueSequence.fromQueueAndArray(new LinkedList<String>(), \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\");\n    Sequence.fromIterable(cd.topologicalSort(Sequence.fromIterable(graph.getVertices()).sort(new ISelector<String, Comparable<?>>() {\n      public Comparable<?> select(String v) {\n        return v;\n      }\n    }, false))).visitAll(new IVisitor<String>() {\n      public void visit(String v) {\n        Assert.assertEquals(QueueSequence.fromQueue(qq).removeFirstElement(), v);\n      }\n    });\n  }","id":61043,"modified_method":"public void test_topoSort() throws Exception {\n    Graph<String> graph = new Graph<String>();\n    GraphAnalyzer<String> cd = graph.getCycleDetector();\n    graph.addEdges(\"A\", \"B\", \"C\", \"H\", \"I\");\n    graph.addEdges(\"B\", \"C\", \"D\", \"E\", \"G\");\n    graph.addEdges(\"C\", \"D\", \"G\", \"K\");\n    graph.addEdges(\"D\", \"E\", \"H\");\n    graph.addEdges(\"E\", \"F\");\n    graph.addEdges(\"F\", \"G\");\n    graph.addEdges(\"G\", \"H\", \"I\", \"J\");\n    graph.addEdges(\"H\", \"I\");\n    graph.addEdges(\"I\", \"K\", \"J\");\n    List<List<String>> cycles = cd.findCycles();\n    Assert.assertSame(0, ListSequence.fromList(cycles).count());\n    final Queue<String> q = QueueSequence.fromQueueAndArray(new LinkedList<String>(), \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\");\n    Sequence.fromIterable(cd.topologicalSort()).visitAll(new IVisitor<String>() {\n      public void visit(String v) {\n        Assert.assertEquals(QueueSequence.fromQueue(q).removeFirstElement(), v);\n      }\n    });\n    final Queue<String> qq = QueueSequence.fromQueueAndArray(new LinkedList<String>(), \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\");\n    graph.sort(new _FunctionTypes._return_P1_E0<String, String>() {\n      public String invoke(String s) {\n        return s;\n      }\n    }, false);\n    Sequence.fromIterable(cd.topologicalSort()).visitAll(new IVisitor<String>() {\n      public void visit(String v) {\n        Assert.assertEquals(QueueSequence.fromQueue(qq).removeFirstElement(), v);\n      }\n    });\n  }","commit_id":"614f2ab1602e9ffcbea655028337daed5a4d9a1c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void test_oneCycle() throws Exception {\n    Graph<String> graph = new Graph<String>();\n    GraphAnalyzer<String> cd = graph.getCycleDetector();\n    graph.addEdges(\"A\", \"B\", \"C\");\n    graph.addEdges(\"B\", \"D\", \"E\");\n    graph.addEdges(\"D\", \"C\");\n    graph.addEdges(\"C\", \"B\", \"E\");\n    List<List<String>> cycles = cd.findCycles(graph.getVertices());\n    Assert.assertSame(1, ListSequence.fromList(cycles).count());\n    Assert.assertSame(3, ListSequence.fromList(ListSequence.fromList(cycles).getElement(0)).count());\n    Assert.assertTrue(ListSequence.fromList(ListSequence.fromListAndArray(new ArrayList<String>(), \"B\", \"C\", \"D\")).disjunction(ListSequence.fromList(ListSequence.fromList(cycles).getElement(0))).isEmpty());\n  }","id":61044,"modified_method":"public void test_oneCycle() throws Exception {\n    Graph<String> graph = new Graph<String>();\n    GraphAnalyzer<String> cd = graph.getCycleDetector();\n    graph.addEdges(\"A\", \"B\", \"C\");\n    graph.addEdges(\"B\", \"D\", \"E\");\n    graph.addEdges(\"D\", \"C\");\n    graph.addEdges(\"C\", \"B\", \"E\");\n    List<List<String>> cycles = cd.findCycles();\n    Assert.assertSame(1, ListSequence.fromList(cycles).count());\n    Assert.assertSame(3, ListSequence.fromList(ListSequence.fromList(cycles).getElement(0)).count());\n    Assert.assertTrue(ListSequence.fromList(ListSequence.fromListAndArray(new ArrayList<String>(), \"B\", \"C\", \"D\")).disjunction(ListSequence.fromList(ListSequence.fromList(cycles).getElement(0))).isEmpty());\n  }","commit_id":"614f2ab1602e9ffcbea655028337daed5a4d9a1c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void test_primitive() throws Exception {\n    Graph<String> graph = new Graph<String>();\n    GraphAnalyzer<String> cd = graph.getCycleDetector();\n    graph.addEdges(\"A\", \"B\");\n    Assert.assertTrue(ListSequence.fromList(cd.findCycles(graph.getVertices())).isEmpty());\n    final Queue<String> q = QueueSequence.fromQueueAndArray(new LinkedList<String>(), \"A\", \"B\");\n    Sequence.fromIterable(cd.topologicalSort(graph.getVertices())).visitAll(new IVisitor<String>() {\n      public void visit(String v) {\n        Assert.assertEquals(QueueSequence.fromQueue(q).removeFirstElement(), v);\n      }\n    });\n    graph.addEdges(\"B\", \"A\");\n    List<List<String>> cycles = cd.findCycles(graph.getVertices());\n    Assert.assertSame(1, ListSequence.fromList(cycles).count());\n    Assert.assertEquals(ListSequence.fromListAndArray(new ArrayList<String>(), \"A\", \"B\"), ListSequence.fromList(cycles).getElement(0));\n  }","id":61045,"modified_method":"public void test_primitive() throws Exception {\n    Graph<String> graph = new Graph<String>();\n    GraphAnalyzer<String> cd = graph.getCycleDetector();\n    graph.addEdges(\"A\", \"B\");\n    Assert.assertTrue(ListSequence.fromList(cd.findCycles()).isEmpty());\n    final Queue<String> q = QueueSequence.fromQueueAndArray(new LinkedList<String>(), \"A\", \"B\");\n    Sequence.fromIterable(cd.topologicalSort()).visitAll(new IVisitor<String>() {\n      public void visit(String v) {\n        Assert.assertEquals(QueueSequence.fromQueue(q).removeFirstElement(), v);\n      }\n    });\n    graph.addEdges(\"B\", \"A\");\n    List<List<String>> cycles = cd.findCycles();\n    Assert.assertSame(1, ListSequence.fromList(cycles).count());\n    Assert.assertEquals(ListSequence.fromListAndArray(new ArrayList<String>(), \"A\", \"B\"), ListSequence.fromList(cycles).getElement(0));\n  }","commit_id":"614f2ab1602e9ffcbea655028337daed5a4d9a1c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public Iterable<V> getVertices() {\n    return vertices;\n  }","id":61046,"modified_method":"public Iterable<V> getVertices() {\n    return (sorter != null ?\n      SetSequence.fromSet(vertices).sort(sorter, asc) :\n      vertices\n    );\n  }","commit_id":"614f2ab1602e9ffcbea655028337daed5a4d9a1c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public GraphAnalyzer<V> getCycleDetector() {\n    return new GraphAnalyzer<V>() {\n      @Override\n      public Iterable<V> forwardEdges(V v) {\n        return MapSequence.fromMap(fwEdges).get(v);\n      }\n\n      @Override\n      public Iterable<V> backwardEdges(V v) {\n        return MapSequence.fromMap(bkEdges).get(v);\n      }\n    };\n  }","id":61047,"modified_method":"public GraphAnalyzer<V> getCycleDetector() {\n    return new GraphAnalyzer<V>() {\n      @Override\n      public Iterable<V> forwardEdges(V v) {\n        return MapSequence.fromMap(fwEdges).get(v);\n      }\n\n      @Override\n      public Iterable<V> vertices() {\n        return getVertices();\n      }\n\n      @Override\n      public Iterable<V> backwardEdges(V v) {\n        return MapSequence.fromMap(bkEdges).get(v);\n      }\n    };\n  }","commit_id":"614f2ab1602e9ffcbea655028337daed5a4d9a1c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public Iterable<V> topologicalSort(Iterable<V> vertices) {\n    Iterable<GraphAnalyzer.Wrapper<V>> ws = this.init(vertices);\n    return Sequence.fromIterable(this.topoSort(ws)).select(new ISelector<GraphAnalyzer.Wrapper<V>, V>() {\n      public V select(GraphAnalyzer.Wrapper<V> w) {\n        return w.vertex;\n      }\n    });\n  }","id":61048,"modified_method":"public Iterable<V> topologicalSort() {\n    Iterable<GraphAnalyzer.Wrapper<V>> ws = this.init(vertices());\n    return Sequence.fromIterable(this.topoSort(ws)).select(new ISelector<GraphAnalyzer.Wrapper<V>, V>() {\n      public V select(GraphAnalyzer.Wrapper<V> w) {\n        return w.vertex;\n      }\n    });\n  }","commit_id":"614f2ab1602e9ffcbea655028337daed5a4d9a1c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public Iterable<GraphAnalyzer.Wrapper<V>> topoSort(Iterable<GraphAnalyzer.Wrapper<V>> ws) {\n    final List<GraphAnalyzer.Wrapper<V>> res = ListSequence.fromList(new ArrayList<GraphAnalyzer.Wrapper<V>>());\n    dfs(ws, new _FunctionTypes._void_P2_E0<GraphAnalyzer.Wrapper<V>, _FunctionTypes._void_P0_E0>() {\n      public void invoke(GraphAnalyzer.Wrapper<V> w, _FunctionTypes._void_P0_E0 cont) {\n        cont.invoke();\n        ListSequence.fromList(res).addElement(w);\n      }\n    }, forward);\n    return ListSequence.fromList(res).reversedList();\n  }","id":61049,"modified_method":"private Iterable<GraphAnalyzer.Wrapper<V>> topoSort(Iterable<GraphAnalyzer.Wrapper<V>> ws) {\n    final List<GraphAnalyzer.Wrapper<V>> res = ListSequence.fromList(new ArrayList<GraphAnalyzer.Wrapper<V>>());\n    dfs(ws, new _FunctionTypes._void_P2_E0<GraphAnalyzer.Wrapper<V>, _FunctionTypes._void_P0_E0>() {\n      public void invoke(GraphAnalyzer.Wrapper<V> w, _FunctionTypes._void_P0_E0 cont) {\n        cont.invoke();\n        ListSequence.fromList(res).addElement(w);\n      }\n    }, forward);\n    return ListSequence.fromList(res).reversedList();\n  }","commit_id":"614f2ab1602e9ffcbea655028337daed5a4d9a1c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public List<List<V>> findCycles(Iterable<V> vertices) {\n    Iterable<GraphAnalyzer.Wrapper<V>> ws = this.init(vertices);\n    this.topoSort(ws);\n    return this.collectCycles(this.topoSort(ws));\n  }","id":61050,"modified_method":"public List<List<V>> findCycles() {\n    Iterable<GraphAnalyzer.Wrapper<V>> ws = this.init(vertices());\n    this.topoSort(ws);\n    return this.collectCycles(this.topoSort(ws));\n  }","commit_id":"614f2ab1602e9ffcbea655028337daed5a4d9a1c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void validate(IMonitor monit) {\n    this.state = Script.State.VALID;\n  }","id":61051,"modified_method":"public void validate() {\n  }","commit_id":"614f2ab1602e9ffcbea655028337daed5a4d9a1c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public Script(Iterable<ITarget> targets, ITarget defaultTarget) {\n    this.targets = ListSequence.fromListWithValues(new ArrayList<ITarget>(), targets);\n    this.defaultTarget = defaultTarget;\n  }","id":61052,"modified_method":"public Script(TargetRange targetRange, Iterable<ITarget> targets, ITarget defaultTarget) {\n    this.targetRange = targetRange;\n    this.targets = ListSequence.fromListWithValues(new ArrayList<ITarget>(), targets);\n    this.defaultTarget = defaultTarget;\n  }","commit_id":"614f2ab1602e9ffcbea655028337daed5a4d9a1c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public Script toScript() {\n    List<ITarget> targets = ListSequence.fromList(new ArrayList<ITarget>());\n    Map<ITarget.Name, ITarget> availableTargets = MapSequence.fromMap(new HashMap<ITarget.Name, ITarget>());\n    Map<IFacet.Name, IFacet> fview = Collections.unmodifiableMap(facetsView);\n    Map<IFacet.Name, IFacet> required = MapSequence.fromMap(new HashMap<IFacet.Name, IFacet>());\n    Map<IFacet.Name, IFacet> optional = MapSequence.fromMap(new HashMap<IFacet.Name, IFacet>());\n    for (IFacet fct : Sequence.fromIterable(MapSequence.fromMap(fview).values())) {\n      this.collectRequired(fct.extended(), required);\n      this.collectRequired(fct.required(), required);\n      this.collectOptional(fct.optional(), optional);\n      for (ITarget trg : Sequence.fromIterable(fct.targets(fview))) {\n        if (MapSequence.fromMap(availableTargets).containsKey(trg.getName())) {\n          LOG.error(\"duplicate target: \" + trg.getName());\n        } else {\n          MapSequence.fromMap(availableTargets).put(trg.getName(), trg);\n        }\n      }\n    }\n\n    return new Script(targets, MapSequence.fromMap(availableTargets).get(defaultTarget));\n  }","id":61053,"modified_method":"public IScript toScript() {\n    if (ListSequence.fromList(errors).isNotEmpty()) {\n      return new InvalidScript();\n    }\n    final Map<IFacet.Name, ScriptBuilder.FacetRefs> refs = MapSequence.fromMap(new HashMap<IFacet.Name, ScriptBuilder.FacetRefs>());\n    this.collectRefs(refs);\n    if (ListSequence.fromList(errors).isNotEmpty()) {\n      return new InvalidScript();\n    }\n    Iterable<IFacet.Name> sorted = this.toposortByExtended(refs);\n    if (ListSequence.fromList(errors).isNotEmpty()) {\n      return new InvalidScript();\n    }\n    TargetRange tr = new TargetRange();\n    List<ITarget> allTargets = ListSequence.fromList(Sequence.fromIterable(sorted).translate(new ITranslator2<IFacet.Name, ITarget>() {\n      public Iterable<ITarget> translate(IFacet.Name fname) {\n        return MapSequence.fromMap(facetsView).get(fname).targets();\n      }\n    }).toListSequence()).reversedList();\n    for (ITarget trg : ListSequence.fromList(allTargets)) {\n      if (SetSequence.fromSet(requestedTargets).contains(trg.getName()) || trg.getName().equals(defaultTarget)) {\n        tr.addTarget(trg);\n      }\n    }\n    tr.addRelated(Sequence.fromIterable(MapSequence.fromMap(facetsView).values()).translate(new ITranslator2<IFacet, ITarget>() {\n      public Iterable<ITarget> translate(IFacet fct) {\n        return fct.targets();\n      }\n    }));\n    return new InvalidScript();\n  }","commit_id":"614f2ab1602e9ffcbea655028337daed5a4d9a1c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public ScriptBuilder withResourcePool(ResourcePool pool) {\n    this.pool = pool;\n    return this;\n  }","id":61054,"modified_method":"public ScriptBuilder withResources(ResourcePool pool) {\n    this.pool = pool;\n    return this;\n  }","commit_id":"614f2ab1602e9ffcbea655028337daed5a4d9a1c","url":"https://github.com/JetBrains/MPS"},{"original_method":"private void collectOptional(Iterable<IFacet.Name> facets, Map<IFacet.Name, IFacet> optional) {\n    for (IFacet.Name opt : Sequence.fromIterable(facets)) {\n      IFacet f = FacetRegistry.getInstance().lookup(opt);\n      if (f == null) {\n        LOG.debug(\"not found optional facet: \" + opt);\n      } else {\n        MapSequence.fromMap(optional).put(opt, f);\n      }\n    }\n  }","id":61055,"modified_method":"private void collectOptional(IFacet fct, Iterable<IFacet.Name> facets, List<IFacet> optional) {\n    for (IFacet.Name opt : Sequence.fromIterable(facets)) {\n      IFacet f = MapSequence.fromMap(facetsView).get(opt);\n      if (f == null) {\n        String msg = \"not found optional facet: \" + opt;\n        LOG.debug(msg);\n      } else {\n        ListSequence.fromList(optional).addElement(f);\n      }\n    }\n  }","commit_id":"614f2ab1602e9ffcbea655028337daed5a4d9a1c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public ScriptBuilder withTarget(ITarget.Name targetName) {\n    SetSequence.fromSet(targets).addElement(targetName);\n    return this;\n  }","id":61056,"modified_method":"public ScriptBuilder withTarget(ITarget.Name targetName) {\n    SetSequence.fromSet(requestedTargets).addElement(targetName);\n    return this;\n  }","commit_id":"614f2ab1602e9ffcbea655028337daed5a4d9a1c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public ScriptBuilder withDefault(ITarget.Name targetName) {\n    SetSequence.fromSet(targets).addElement(targetName);\n    this.defaultTarget = targetName;\n    return this;\n  }","id":61057,"modified_method":"public ScriptBuilder withDefault(ITarget.Name targetName) {\n    SetSequence.fromSet(requestedTargets).addElement(targetName);\n    this.defaultTarget = targetName;\n    return this;\n  }","commit_id":"614f2ab1602e9ffcbea655028337daed5a4d9a1c","url":"https://github.com/JetBrains/MPS"},{"original_method":"private void collectRequired(Iterable<IFacet.Name> facets, Map<IFacet.Name, IFacet> required) {\n    for (IFacet.Name req : Sequence.fromIterable(facets)) {\n      IFacet f = FacetRegistry.getInstance().lookup(req);\n      if (f == null) {\n        LOG.error(\"not found required facet: \" + req);\n      } else {\n        MapSequence.fromMap(required).put(req, f);\n      }\n    }\n  }","id":61058,"modified_method":"private void collectRequired(IFacet fct, Iterable<IFacet.Name> facets, List<IFacet> required) {\n    for (IFacet.Name req : Sequence.fromIterable(facets)) {\n      IFacet f = MapSequence.fromMap(facetsView).get(req);\n      if (f == null) {\n        String msg = \"not found required facet: \" + req;\n        LOG.error(msg);\n        error(fct.getName(), msg);\n      } else {\n        ListSequence.fromList(required).addElement(f);\n      }\n    }\n  }","commit_id":"614f2ab1602e9ffcbea655028337daed5a4d9a1c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public ScriptBuilder withFacets(Iterable<IFacet.Name> facetNames) {\n    for (IFacet.Name fn : Sequence.fromIterable(facetNames)) {\n      IFacet fct = FacetRegistry.getInstance().lookup(fn);\n      if (fct != null) {\n        MapSequence.fromMap(facetsView).put(fn, fct);\n      } else {\n        LOG.error(\"facet not found: \" + fn);\n      }\n    }\n    return this;\n  }","id":61059,"modified_method":"public ScriptBuilder withFacets(Iterable<IFacet.Name> facetNames) {\n    for (IFacet.Name fn : Sequence.fromIterable(facetNames)) {\n      IFacet fct = FacetRegistry.getInstance().lookup(fn);\n      if (fct != null) {\n        MapSequence.fromMap(facetsView).put(fn, fct);\n      } else {\n        String msg = \"facet not found: \" + fn;\n        LOG.error(msg);\n        error(fn, msg);\n      }\n    }\n    return this;\n  }","commit_id":"614f2ab1602e9ffcbea655028337daed5a4d9a1c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void test_buildScript() throws Exception {\n    ScriptBuilder scb = new ScriptBuilder();\n    scb.withFacets(Sequence.fromIterable(Sequence.fromArray(facets)).select(new ISelector<IFacet, IFacet.Name>() {\n      public IFacet.Name select(IFacet f) {\n        return f.getName();\n      }\n    }));\n    scb.withTarget(new ITarget.Name(\"make\"));\n    Script sc = scb.toScript();\n    Assert.assertNotNull(sc);\n  }","id":61060,"modified_method":"public void test_buildScript() throws Exception {\n    ScriptBuilder scb = new ScriptBuilder();\n    scb.withFacets(Sequence.fromIterable(Sequence.fromArray(facets)).select(new ISelector<IFacet, IFacet.Name>() {\n      public IFacet.Name select(IFacet f) {\n        return f.getName();\n      }\n    }));\n    scb.withTarget(new ITarget.Name(\"make\"));\n    IScript sc = scb.toScript();\n    Assert.assertNotNull(sc);\n  }","commit_id":"614f2ab1602e9ffcbea655028337daed5a4d9a1c","url":"https://github.com/JetBrains/MPS"},{"original_method":"private String report() {\n    Frame res = UKV.get(Key.make(target));\n    return \"Created interaction feature \" + res.names()[source.numCols()]\n            + \" (order: \" + factors.length + \") with \" + res.lastVec().domain().length + \" factor levels\"\n            + \" in\" + PrettyPrint.msecs(_time, true);\n  }","id":61061,"modified_method":"private String report() {\n    Frame res = UKV.get(Key.make(target));\n    return \"Created interaction feature \" + res.names()[0]\n            + \" (order: \" + factors.length + \") with \" + res.lastVec().domain().length + \" factor levels\"\n            + \" in\" + PrettyPrint.msecs(_time, true);\n  }","commit_id":"d93ac132cc1f54e9a25a233d5ab25a247ec26be6","url":"https://github.com/h2oai/h2o-2"},{"original_method":"@Override public Response serve() {\n    try {\n//      if (max_factors < 1) throw new IllegalArgumentException(\"max_factors must be >1.\");\n      if (factors.length == 0) throw new IllegalArgumentException(\"factors must be non-empty.\");\n      for (int v: factors) {\n        if (!source.vecs()[v].isEnum()) {\n          throw new IllegalArgumentException(\"Column \" + source.names()[v] + \" is not a factor.\");\n        }\n      }\n\n      Timer time = new Timer();\n      final createInteractions in = new createInteractions(this);\n      H2O.submitTask(in);\n      in.join();\n      _time = time.time();\n      Log.info(report());\n      return Response.done(this);\n    } catch( Throwable t ) {\n      return Response.error(t);\n    }\n  }","id":61062,"modified_method":"@Override public Response serve() {\n    try {\n//      if (max_factors < 1) throw new IllegalArgumentException(\"max_factors must be >1.\");\n      if (factors.length == 0) throw new IllegalArgumentException(\"factors must be non-empty.\");\n      for (int v: factors) {\n        if (!source.vecs()[v].isEnum()) {\n          throw new IllegalArgumentException(\"Column \" + source.names()[v] + \" is not a factor.\");\n        }\n      }\n      if (target == null) {\n        target = source._key.toString() + \".interaction.\";\n        target += \"C\" + factors[0];\n        for (int i=1; i<factors.length; ++i) {\n          target += \"_C\" + factors[i];\n        }\n      }\n\n      Timer time = new Timer();\n      final createInteractions in = new createInteractions(this);\n      H2O.submitTask(in);\n      in.join();\n      _time = time.time();\n      Log.info(report());\n      return Response.done(this);\n    } catch( Throwable t ) {\n      return Response.error(t);\n    }\n  }","commit_id":"d93ac132cc1f54e9a25a233d5ab25a247ec26be6","url":"https://github.com/h2oai/h2o-2"},{"original_method":"@Override public boolean toHTML( StringBuilder sb ) {\n    Frame fr = UKV.get(Key.make(target));\n    if (fr==null) {\n      return false;\n    }\n    RString aft = new RString(\"<a href='Inspect2.html?src_key=%$key'>%key<\/a>\");\n    aft.replace(\"key\", target);\n    DocGen.HTML.section(sb, report() + \"<br/>Frame '\" + aft.toString() + \"' now has \" + fr.numCols() + \" columns.\");\n    return true;\n  }","id":61063,"modified_method":"@Override public boolean toHTML( StringBuilder sb ) {\n    Frame fr = UKV.get(Key.make(target));\n    if (fr==null) {\n      return false;\n    }\n    RString aft = new RString(\"<a href='Inspect2.html?src_key=%$key'>%key<\/a>\");\n    aft.replace(\"key\", target);\n    DocGen.HTML.section(sb, report() + \"<br/>Frame '\" + aft.toString() + \"' contains the interaction feature.\");\n    return true;\n  }","commit_id":"d93ac132cc1f54e9a25a233d5ab25a247ec26be6","url":"https://github.com/h2oai/h2o-2"},{"original_method":"@Override\n  public void map(Chunk[] cs) {\n    _unsortedMap = new Utils.IcedHashMap<IcedLong, IcedLong>();\n    // find unique interaction domain\n    for (int r = 0; r < cs[0]._len; r++) {\n      int a = cs[_i].isNA0(r) ? _missing : (int)cs[_i].at80(r);\n      long ab;\n      if (_j != _i) {\n        int b = cs[_j].isNA0(r) ? _missing : (int) cs[_j].at80(r);\n\n        // key: combine both ints into a long\n        ab = ((long) a << 32) | (b & 0xFFFFFFFFL);\n        assert a == (int) (ab >> 32);\n        assert b == (int) ab;\n      } else {\n        if (a == _missing) continue;\n        ab = (long)a;\n      }\n\n      // add key to hash map, and count occurrences (for pruning)\n      IcedLong AB = new IcedLong(ab);\n      if (_unsortedMap.containsKey(AB)) {\n        _unsortedMap.put(AB, new IcedLong(_unsortedMap.get(AB)._val + 1));\n      } else {\n        _unsortedMap.put(AB, new IcedLong(1));\n      }\n    }\n  }","id":61064,"modified_method":"public createInteractionDomain(boolean same) { _same = same; }","commit_id":"d93ac132cc1f54e9a25a233d5ab25a247ec26be6","url":"https://github.com/h2oai/h2o-2"},{"original_method":"@Override\n    protected void setupLocal() {\n      // turn _keys into a sorted array of pairs\n      _valToIndex = new java.util.ArrayList<Map.Entry<Long,Integer>>(); // map factor level (int,int) to domain index (long)\n      for (int i=0;i<_keys.length;++i) {\n        _valToIndex.add(new AbstractMap.SimpleEntry<Long, Integer>(_keys[i], i));\n      }\n      // sort by key (the factor level)\n      Collections.sort(_valToIndex, new Comparator<Map.Entry<Long, Integer>>() {\n        @Override public int compare(Map.Entry<Long, Integer> o1, Map.Entry<Long, Integer> o2) { return o1.getKey().compareTo(o2.getKey()); }\n      });\n    }","id":61065,"modified_method":"public fillInteractionEnums(boolean same, long[] keys) {\n      _same = same; _keys = keys;\n    }","commit_id":"d93ac132cc1f54e9a25a233d5ab25a247ec26be6","url":"https://github.com/h2oai/h2o-2"},{"original_method":"@Override\n  public void compute2() {\n    // base frame - same as source\n    DKV.remove(Key.make(_ci.target));//shouldn't be needed, but this avoids missing chunk issues\n    _out = new Frame(Key.make(_ci.target), _ci.source.names().clone(), _ci.source.vecs().clone());\n    _out.delete_and_lock(_job);\n\n    int idx1 = _ci.factors[0];\n    Vec tmp = null;\n    int start = _ci.factors.length == 1 ? 0 : 1;\n    for (int i=start; i<_ci.factors.length; ++i) {\n      if (i>1) {\n        idx1 = _out.find(tmp);\n        assert idx1 >= 0;\n      }\n      int idx2 = _ci.factors[i];\n//      Log.info(\"Combining columns \" + idx1 + \" and \" + idx2);\n\n      // Pass 1: compute unique domains of all interaction features\n      createInteractionDomain pass1 = new createInteractionDomain(idx1, idx2).doAll(_out);\n\n      // Create a new Vec based on the domain\n      final String name = _out._names[idx1] + \"_\" + _out._names[idx2];\n      final Vec vec = _out.anyVec().makeZero(makeDomain(pass1._unsortedMap, idx1, idx2));\n      _out.add(name, vec);\n      _out.update(_job);\n\n      // Create array of enum pairs, in the same (sorted) order as in the _domain map -> for linear lookup\n      // Note: \"other\" is not mapped in keys, so keys.length can be 1 less than domain.length\n      long[] keys = new long[_sortedMap.size()];\n      int pos = 0;\n      for (long k : _sortedMap.keySet()) {\n        keys[pos++] = k;\n      }\n      assert(_out.lastVec().domain().length == keys.length || _out.lastVec().domain().length == keys.length + 1); // domain might contain _other\n\n      // Pass 2: fill Vec values\n      new fillInteractionEnums(idx1, idx2, keys).doAll(_out);\n      tmp = _out.lastVec();\n\n      // remove temporary vec\n      if (i>1) {\n        final int idx = _out.vecs().length-2; //second-last vec\n//        Log.info(\"Removing column \" + _out._names[idx]);\n        _out.remove(idx);\n        _out.update(_job);\n      }\n    }\n    tryComplete();\n  }","id":61066,"modified_method":"@Override\n  public void compute2() {\n    // base frame - same as source\n    DKV.remove(Key.make(_ci.target));\n\n    _ci.source.read_lock(_job);\n    try {\n      int idx1 = _ci.factors[0];\n      Vec tmp = null;\n      int start = _ci.factors.length == 1 ? 0 : 1;\n      for (int i = start; i < _ci.factors.length; ++i) {\n        String name;\n        int idx2 = _ci.factors[i];\n        if (i > 1) {\n          idx1 = _out.find(tmp);\n          assert idx1 >= 0;\n          name = _out._names[idx1] + \"_\" + _ci.source._names[idx2];\n        } else {\n          name = _ci.source._names[idx1] + \"_\" + _ci.source._names[idx2];\n        }\n//      Log.info(\"Combining columns \" + idx1 + \" and \" + idx2);\n        final Vec A = i > 1 ? _out.vecs()[idx1] : _ci.source.vecs()[idx1];\n        final Vec B = _ci.source.vecs()[idx2];\n\n        // Pass 1: compute unique domains of all interaction features\n        createInteractionDomain pass1 = new createInteractionDomain(idx1 == idx2).doAll(A, B);\n\n        // Create a new Vec based on the domain\n        final Vec vec = _ci.source.anyVec().makeZero(makeDomain(pass1._unsortedMap, A.domain(), B.domain()));\n        if (i > 1) {\n          _out.add(name, vec);\n          _out.update(_job);\n        } else {\n          _out = new Frame(Key.make(_ci.target), new String[]{name}, new Vec[]{vec});\n          _out.delete_and_lock(_job);\n        }\n        final Vec C = _out.lastVec();\n\n        // Create array of enum pairs, in the same (sorted) order as in the _domain map -> for linear lookup\n        // Note: \"other\" is not mapped in keys, so keys.length can be 1 less than domain.length\n        long[] keys = new long[_sortedMap.size()];\n        int pos = 0;\n        for (long k : _sortedMap.keySet()) {\n          keys[pos++] = k;\n        }\n        assert (C.domain().length == keys.length || C.domain().length == keys.length + 1); // domain might contain _other\n\n        // Pass 2: fill Vec values\n        new fillInteractionEnums(idx1 == idx2, keys).doAll(A, B, C);\n        tmp = C;\n\n        // remove temporary vec\n        if (i > 1) {\n          final int idx = _out.vecs().length - 2; //second-last vec\n//        Log.info(\"Removing column \" + _out._names[idx]);\n          _out.remove(idx);\n          _out.update(_job);\n        }\n      }\n      tryComplete();\n    } finally {\n      _ci.source.unlock(_job);\n    }\n  }","commit_id":"d93ac132cc1f54e9a25a233d5ab25a247ec26be6","url":"https://github.com/h2oai/h2o-2"},{"original_method":"protected String[] makeDomain(Map<IcedLong, IcedLong> unsortedMap, int _i, int _j) {\n    String[] _domain;\n    Frame _fr = _out;\n//    Log.info(\"Collected hash table\");\n//    Log.info(java.util.Arrays.deepToString(unsortedMap.entrySet().toArray()));\n\n//    Log.info(\"Interaction between \" + _fr.domains()[_i].length + \" and \" + _fr.domains()[_j].length + \" factor levels => \" +\n//            ((long)_fr.domains()[_i].length * (long)_fr.domains()[_j].length) + \" possible factors.\");\n\n    _sortedMap = mySort(unsortedMap);\n\n    // create domain of the most frequent unique factors\n    long factorCount = 0;\n//    Log.info(\"Found \" + _sortedMap.size() + \" unique interaction factors (out of \" + ((long)_fr.domains()[_i].length * (long)_fr.domains()[_j].length) + \").\");\n    _domain = new String[_sortedMap.size()]; //TODO: use ArrayList here, then convert to array\n    Iterator it2 = _sortedMap.entrySet().iterator();\n    int d = 0;\n    while (it2.hasNext()) {\n      Map.Entry kv = (Map.Entry)it2.next();\n      final long ab = (Long)kv.getKey();\n      final long count = (Long)kv.getValue();\n      if (factorCount < _ci.max_factors && count >= _ci.min_occurrence) {\n        factorCount++;\n        // extract the two original factor enums\n        String feature = \"\";\n        if (_j != _i) {\n          int a = (int)(ab >> 32);\n          final String fA = a != _missing ? _fr.domains()[_i][a] : \"NA\";\n          feature = fA + \"_\";\n        }\n        int b = (int) ab;\n        String fB = b != _missing ? _fr.domains()[_j][b] : \"NA\";\n        feature += fB;\n\n//        Log.info(\"Adding interaction feature \" + feature + \", occurrence count: \" + count);\n//        Log.info(\"Total number of interaction factors so far: \" + factorCount);\n        _domain[d++] = feature;\n      } else break;\n    }\n    if (d < _sortedMap.size()) {\n//      Log.info(\"Truncated map to \" + _sortedMap.size() + \" elements.\");\n      String[] copy = new String[d+1];\n      System.arraycopy(_domain, 0, copy, 0, d);\n      copy[d] = _other;\n      _domain = copy;\n\n      Map tm = new LinkedHashMap<Long, Long>();\n      it2 = _sortedMap.entrySet().iterator();\n      while (--d >= 0) {\n        Map.Entry kv = (Map.Entry) it2.next();\n        tm.put(kv.getKey(), kv.getValue());\n      }\n      _sortedMap = tm;\n    }\n//    Log.info(\"Created domain: \" + Arrays.deepToString(_domain));\n    return _domain;\n  }","id":61067,"modified_method":"protected String[] makeDomain(Map<IcedLong, IcedLong> unsortedMap, String[] dA, String[] dB) {\n    String[] _domain;\n//    Log.info(\"Collected hash table\");\n//    Log.info(java.util.Arrays.deepToString(unsortedMap.entrySet().toArray()));\n\n//    Log.info(\"Interaction between \" + dA.length + \" and \" + dB.length + \" factor levels => \" +\n//            ((long)dA.length * dB.length) + \" possible factors.\");\n\n    _sortedMap = mySort(unsortedMap);\n\n    // create domain of the most frequent unique factors\n    long factorCount = 0;\n//    Log.info(\"Found \" + _sortedMap.size() + \" unique interaction factors (out of \" + ((long)dA.length * (long)dB.length) + \").\");\n    _domain = new String[_sortedMap.size()]; //TODO: use ArrayList here, then convert to array\n    Iterator it2 = _sortedMap.entrySet().iterator();\n    int d = 0;\n    while (it2.hasNext()) {\n      Map.Entry kv = (Map.Entry)it2.next();\n      final long ab = (Long)kv.getKey();\n      final long count = (Long)kv.getValue();\n      if (factorCount < _ci.max_factors && count >= _ci.min_occurrence) {\n        factorCount++;\n        // extract the two original factor enums\n        String feature = \"\";\n        if (dA != dB) {\n          int a = (int)(ab >> 32);\n          final String fA = a != _missing ? dA[a] : \"NA\";\n          feature = fA + \"_\";\n        }\n        int b = (int) ab;\n        String fB = b != _missing ? dB[b] : \"NA\";\n        feature += fB;\n\n//        Log.info(\"Adding interaction feature \" + feature + \", occurrence count: \" + count);\n//        Log.info(\"Total number of interaction factors so far: \" + factorCount);\n        _domain[d++] = feature;\n      } else break;\n    }\n    if (d < _sortedMap.size()) {\n//      Log.info(\"Truncated map to \" + _sortedMap.size() + \" elements.\");\n      String[] copy = new String[d+1];\n      System.arraycopy(_domain, 0, copy, 0, d);\n      copy[d] = _other;\n      _domain = copy;\n\n      Map tm = new LinkedHashMap<Long, Long>();\n      it2 = _sortedMap.entrySet().iterator();\n      while (--d >= 0) {\n        Map.Entry kv = (Map.Entry) it2.next();\n        tm.put(kv.getKey(), kv.getValue());\n      }\n      _sortedMap = tm;\n    }\n//    Log.info(\"Created domain: \" + Arrays.deepToString(_domain));\n    return _domain;\n  }","commit_id":"d93ac132cc1f54e9a25a233d5ab25a247ec26be6","url":"https://github.com/h2oai/h2o-2"},{"original_method":"@Override\n    public void map(Chunk[] cs) {\n      // find unique interaction domain\n      for (int r = 0; r < cs[0]._len; r++) {\n        final int a = cs[_i].isNA0(r) ? _missing : (int)cs[_i].at80(r);\n        long ab;\n        if (_j != _i) {\n          final int b = cs[_j].isNA0(r) ? _missing : (int) cs[_j].at80(r);\n          ab = ((long) a << 32) | (b & 0xFFFFFFFFL); // key: combine both ints into a long\n        } else {\n          ab = (long)a;\n        }\n\n        if (_i == _j && cs[_i].isNA0(r)) {\n          cs[cs.length - 1].setNA0(r);\n        } else {\n          // find _domain index for given factor level ab\n          int level = -1;\n          int pos = Collections.binarySearch(_valToIndex, new AbstractMap.SimpleEntry<Long,Integer>(ab,0), new Comparator<Map.Entry<Long, Integer>>() {\n            @Override public int compare(Map.Entry<Long, Integer> o1, Map.Entry<Long, Integer> o2) { return o1.getKey().compareTo(o2.getKey()); }\n          });\n          if (pos >= 0) {\n            level = _valToIndex.get(pos).getValue();\n            assert _keys[level] == ab; //confirm that binary search in _valToIndex worked\n          }\n          if (level < 0) {\n            for (int i=0; i<_keys.length; ++i) {\n              assert (_keys[i] != ab);\n            }\n            level = _fr.lastVec().domain().length-1;\n            assert _fr.lastVec().domain()[level].equals(_other);\n          }\n          cs[cs.length - 1].set0(r, level);\n        }\n      }\n    }","id":61068,"modified_method":"@Override\n    public void map(Chunk A, Chunk B, Chunk C) {\n      // find unique interaction domain\n      for (int r = 0; r < A._len; r++) {\n        final int a = A.isNA0(r) ? _missing : (int)A.at80(r);\n        long ab;\n        if (!_same) {\n          final int b = B.isNA0(r) ? _missing : (int) B.at80(r);\n          ab = ((long) a << 32) | (b & 0xFFFFFFFFL); // key: combine both ints into a long\n        } else {\n          ab = (long)a;\n        }\n\n        if (_same && A.isNA0(r)) {\n          C.setNA0(r);\n        } else {\n          // find _domain index for given factor level ab\n          int level = -1;\n          int pos = Collections.binarySearch(_valToIndex, new AbstractMap.SimpleEntry<Long,Integer>(ab,0), new Comparator<Map.Entry<Long, Integer>>() {\n            @Override public int compare(Map.Entry<Long, Integer> o1, Map.Entry<Long, Integer> o2) { return o1.getKey().compareTo(o2.getKey()); }\n          });\n          if (pos >= 0) {\n            level = _valToIndex.get(pos).getValue();\n            assert _keys[level] == ab; //confirm that binary search in _valToIndex worked\n          }\n          if (level < 0) {\n            for (int i=0; i<_keys.length; ++i) {\n              assert (_keys[i] != ab);\n            }\n            level = _fr.lastVec().domain().length-1;\n            assert _fr.lastVec().domain()[level].equals(_other);\n          }\n          C.set0(r, level);\n        }\n      }\n    }","commit_id":"d93ac132cc1f54e9a25a233d5ab25a247ec26be6","url":"https://github.com/h2oai/h2o-2"},{"original_method":"@Override\n    public void map(Chunk [] chks) {\n      _res = MemoryManager.malloc8d(chks.length-1);\n      for(int i = 0; i < chks[0]._len; i = chks[0].nextNZ(i)) {\n        final double y = chks[0].at0(i);\n        for(int j = 1; j < chks.length; ++j)\n          _res[j-1] += y*chks[j].at0(i);\n      }\n    }","id":61069,"modified_method":"@Override\n    public void map(Chunk [] chks) {\n      _res = MemoryManager.malloc8d(chks.length-1);\n      int [] pos = MemoryManager.malloc4(chks.length-1);\n      for(int i = 0; i < pos.length; ++i)\n        pos[i] = chks[i+1].nextNZ(-1);\n      for(int i = 0; i < chks[0]._len; i = chks[0].nextNZ(i)) {\n        final double y = chks[0].at0(i);\n        for(int j = 1; j < chks.length; ++j) {\n          if(chks[j] instanceof CXIChunk)\n            while(pos[j-1] < chks[j]._len && pos[j-1] < i)\n              pos[j-1] = chks[j].nextNZ(pos[j-1]);\n          else pos[j-1] = i;\n          if(pos[j-1] == i)\n            _res[j - 1] += y * chks[j].at0(i);\n        }\n      }\n    }","commit_id":"d6ed1b0745fb12916567224539e7f0ccc6016f2d","url":"https://github.com/h2oai/h2o-2"},{"original_method":"@Override\n    public void postGlobal() {\n      assert _c.len() == _res.length;\n      for(int i = 0; i < _res.length; ++i)\n        _c.set0(i, _res[i]);\n      _c.close(_c.cidx(),_fs);\n    }","id":61070,"modified_method":"@Override\n    public void postGlobal() {\n      DKV.put(_k, new NewChunk(_res).compress(),_fs, false);\n    }","commit_id":"d6ed1b0745fb12916567224539e7f0ccc6016f2d","url":"https://github.com/h2oai/h2o-2"},{"original_method":"public static Frame mmul2(Frame x, Frame y) {\n    if(x.numCols() != y.numRows())\n      throw new IllegalArgumentException(\"dimensions do not match! x.numcols = \" + x.numCols() + \", y.numRows = \" + y.numRows());\n    // make the target frame which is compatible with left hand side (same number of rows -> keep it's vector group and espc)\n    Frame z = new Frame(x.anyVec().makeZeros(y.numCols()));\n    // make transpose co-located with y\n    x = transpose(x,new Frame(y.anyVec().makeZeros((int)x.numRows())));\n    x.reloadVecs();\n    new MatrixMulTsk2(x,y).doAll(z);\n    z.reloadVecs();\n    x.delete();\n    return z;\n  }","id":61071,"modified_method":"public static Frame mmul2(Frame x, Frame y) {\n    if(x.numCols() != y.numRows())\n      throw new IllegalArgumentException(\"dimensions do not match! x.numcols = \" + x.numCols() + \", y.numRows = \" + y.numRows());\n    // make the target frame which is compatible with left hand side (same number of rows -> keep it's vector group and espc)\n    Frame z = new Frame(x.anyVec().makeZeros(y.numCols()));\n    new MatrixMulTsk(y).doAll(Utils.append(x.vecs(),z.vecs()));\n    z.reloadVecs();\n    return z;\n  }","commit_id":"d6ed1b0745fb12916567224539e7f0ccc6016f2d","url":"https://github.com/h2oai/h2o-2"},{"original_method":"public VecMulTsk(H2OCountedCompleter cmp, Chunk c, Futures fs) {\n      super(cmp);\n      _c = c; _fs = fs;\n    }","id":61072,"modified_method":"public VecMulTsk(H2OCountedCompleter cmp, Chunk c, Futures fs) {\n      super(cmp);\n      _k = c._vec.chunkKey(c.cidx()); _fs = fs;\n    }","commit_id":"d6ed1b0745fb12916567224539e7f0ccc6016f2d","url":"https://github.com/h2oai/h2o-2"},{"original_method":"public MatrixMulTsk2(Frame X, Frame Y) {\n      _X = X;\n      _Y = Y;\n    }","id":61073,"modified_method":"public MatrixMulTsk2(Frame X, Frame Y, Key progressKey) {\n      _X = X;\n      _Y = Y;\n      _progressKey = progressKey;\n    }","commit_id":"d6ed1b0745fb12916567224539e7f0ccc6016f2d","url":"https://github.com/h2oai/h2o-2"},{"original_method":"public void map(Chunk [] chks) {\n      addToPendingCount(chks.length);\n      int iStart = (int)chks[0]._start;\n      int iEnd = iStart + chks[0]._len;\n      Vec[] xs = Arrays.copyOfRange(_X.vecs(), iStart, iEnd);\n      for(int j = 0; j < chks.length; ++j)\n        new VecMulTsk(this,chks[j],_fs).asyncExec(Utils.append(new Vec[]{_Y.vec(j)}, xs));\n    }","id":61074,"modified_method":"public void map(Chunk [] chks) {\n      _j = new AtomicInteger(MAX_P);\n      addToPendingCount(chks.length);\n      int iStart = (int)chks[0]._start;\n      int iEnd = iStart + chks[0]._len;\n      Vec[] xs = Arrays.copyOfRange(_X.vecs(), iStart, iEnd);\n      for(int i = 0; i < Math.min(MAX_P,chks.length); ++i)\n        new VecMulTsk(new Cmp(i,chks,xs), chks[i], _fs).asyncExec(Utils.append(new Vec[]{_Y.vec(i)}, xs));\n    }","commit_id":"d6ed1b0745fb12916567224539e7f0ccc6016f2d","url":"https://github.com/h2oai/h2o-2"},{"original_method":"public static Frame mmul(Frame x, Frame y) {\n    if(x.numCols() != y.numRows())\n      throw new IllegalArgumentException(\"dimensions do not match! x.numcols = \" + x.numCols() + \", y.numRows = \" + y.numRows());\n    // make the target frame which is compatible with left hand side (same number of rows -> keep it's vector group and espc)\n    Frame z = new Frame(x.anyVec().makeZeros(y.numCols()));\n    new MatrixMulTsk(y).doAll(Utils.append(x.vecs(),z.vecs()));\n    z.reloadVecs();\n    return z;\n  }","id":61075,"modified_method":"public static Frame mmul(Frame x, Frame y) {\n    final Key progressKey = Key.make();\n    Frame z = new Frame(x.anyVec().makeZeros(y.numCols()));\n    DKV.put(progressKey, new MulProgress(z.vecs().length*z.anyVec().nChunks()));\n\n    Job j = new Job(Key.make(x._key + \" %*% \" + y._key),progressKey){\n      @Override public float progress(){\n        MulProgress p = DKV.get(progressKey).get();\n        return p.progress();\n      }\n    };\n    j.start(new H2OEmptyCompleter());\n\n    if(x.numCols() != y.numRows())\n      throw new IllegalArgumentException(\"dimensions do not match! x.numcols = \" + x.numCols() + \", y.numRows = \" + y.numRows());\n    // make the target frame which is compatible with left hand side (same number of rows -> keep it's vector group and espc)\n    // make transpose co-located with y\n    x = transpose(x,new Frame(y.anyVec().makeZeros((int)x.numRows())));\n    x.reloadVecs();\n    new MatrixMulTsk2(x,y,progressKey).doAll(z);\n    z.reloadVecs();\n    x.delete();\n    j.remove();\n    return z;\n  }","commit_id":"d6ed1b0745fb12916567224539e7f0ccc6016f2d","url":"https://github.com/h2oai/h2o-2"},{"original_method":"public Frame deepSlice( Object orows, Object ocols ) {\n    // ocols is either a long[] or a Frame-of-1-Vec\n    long[] cols = null;\n    if( ocols == null ) cols = null;\n    else if (ocols instanceof long[]) cols = (long[])ocols;\n    else if (ocols instanceof Frame) {\n      Frame fr = (Frame) ocols;\n      if (fr.numCols() != 1)\n        throw new IllegalArgumentException(\"Columns Frame must have only one column (actually has \" + fr.numCols() + \" columns)\");\n      long n = fr.anyVec().length();\n      if (n > MAX_EQ2_COLS)\n        throw new IllegalArgumentException(\"Too many requested columns (requested \" + n +\", max \" + MAX_EQ2_COLS + \")\");\n      cols = new long[(int)n];\n      Vec v = fr.anyVec();\n      for (long i = 0; i < v.length(); i++)\n        cols[(int)i] = v.at8(i);\n    } else\n      throw new IllegalArgumentException(\"Columns is specified by an unsupported data type (\" + ocols.getClass().getName() + \")\");\n\n    // Since cols is probably short convert to a positive list.\n    int c2[] = null;\n    if( cols==null ) {\n      c2 = new int[numCols()];\n      for( int i=0; i<c2.length; i++ ) c2[i]=i;\n    } else if( cols.length==0 ) {\n      c2 = new int[0];\n    } else if( cols[0] > 0 ) {\n      c2 = new int[cols.length];\n      for( int i=0; i<cols.length; i++ )\n        c2[i] = (int)cols[i]-1; // Convert 1-based cols to zero-based\n    } else {\n      c2 = new int[numCols()-cols.length];\n      int j=0;\n      for( int i=0; i<numCols(); i++ ) {\n        if( j >= cols.length || i < (-cols[j]-1) ) c2[i-j] = i;\n        else j++;\n      }\n    }\n    for( int i=0; i<c2.length; i++ )\n      if( c2[i] >= numCols() )\n        throw new IllegalArgumentException(\"Trying to select column \"+(c2[i]+1)+\" but only \"+numCols()+\" present.\");\n    if( c2.length==0 )\n      throw new IllegalArgumentException(\"No columns selected (did you try to select column 0 instead of column 1?)\");\n\n    // Do Da Slice\n    // orows is either a long[] or a Vec\n    if (orows == null){\n      Vec [] vs = new Vec[c2.length];\n      for(int i = 0; i < vs.length; ++i)\n        vs[i] = vecs()[c2[i]];\n      return new Frame(new DeepCopyTask(vs).doAll(vs)._res);\n    } else if (orows instanceof long[]) {\n      final long CHK_ROWS=1000000;\n      long[] rows = (long[])orows;\n      if( rows.length==0 || rows[0] < 0 )\n        return new DeepSlice(rows,c2,vecs()).doAll(c2.length, this).outputFrame(names(c2), domains(c2));\n      // Vec'ize the index array\n      Futures fs = new Futures();\n      AppendableVec av = new AppendableVec(\"rownames\");\n      int r = 0;\n      int c = 0;\n      while (r < rows.length) {\n        NewChunk nc = new NewChunk(av, c);\n        long end = Math.min(r+CHK_ROWS, rows.length);\n        for (; r < end; r++) {\n          nc.addNum(rows[r]);\n        }\n        nc.close(c++, fs);\n      }\n      Vec c0 = av.close(fs);   // c0 is the row index vec\n      fs.blockForPending();\n      Frame fr2 = new Slice(c2, this).doAll(c2.length,new Frame(new String[]{\"rownames\"}, new Vec[]{c0}))\n              .outputFrame(names(c2), domains(c2));\n      UKV.remove(c0._key);      // Remove hidden vector\n      return fr2;\n    }\n    Frame frows = (Frame)orows;\n    Vec vrows = frows.anyVec();\n    // It's a compatible Vec; use it as boolean selector.\n    // Build column names for the result.\n    Vec [] vecs = new Vec[c2.length+1];\n    String [] names = new String[c2.length+1];\n    for(int i = 0; i < c2.length; ++i){\n      vecs[i] = _vecs[c2[i]];\n      names[i] = _names[c2[i]];\n    }\n    vecs[c2.length] = vrows;\n    names[c2.length] = \"predicate\";\n    return new DeepSelect().doAll(c2.length,new Frame(names,vecs)).outputFrame(names(c2),domains(c2));\n  }","id":61076,"modified_method":"public Frame deepSlice( Object orows, Object ocols ) {\n    // ocols is either a long[] or a Frame-of-1-Vec\n    long[] cols = null;\n    if( ocols == null ) cols = null;\n    else if (ocols instanceof long[]) cols = (long[])ocols;\n    else if (ocols instanceof Frame) {\n      Frame fr = (Frame) ocols;\n      if (fr.numCols() != 1)\n        throw new IllegalArgumentException(\"Columns Frame must have only one column (actually has \" + fr.numCols() + \" columns)\");\n      long n = fr.anyVec().length();\n      if (n > MAX_EQ2_COLS)\n        throw new IllegalArgumentException(\"Too many requested columns (requested \" + n +\", max \" + MAX_EQ2_COLS + \")\");\n      cols = new long[(int)n];\n      Vec v = fr.anyVec();\n      for (long i = 0; i < v.length(); i++)\n        cols[(int)i] = v.at8(i);\n    } else\n      throw new IllegalArgumentException(\"Columns is specified by an unsupported data type (\" + ocols.getClass().getName() + \")\");\n\n    // Since cols is probably short convert to a positive list.\n    int c2[] = null;\n    if( cols==null ) {\n      c2 = new int[numCols()];\n      for( int i=0; i<c2.length; i++ ) c2[i]=i;\n    } else if( cols.length==0 ) {\n      c2 = new int[0];\n    } else if( cols[0] > 0 ) {\n      c2 = new int[cols.length];\n      for( int i=0; i<cols.length; i++ )\n        c2[i] = (int)cols[i]-1; // Convert 1-based cols to zero-based\n    } else {\n      c2 = new int[numCols()-cols.length];\n      int j=0;\n      for( int i=0; i<numCols(); i++ ) {\n        if( j >= cols.length || i < (-cols[j]-1) ) c2[i-j] = i;\n        else j++;\n      }\n    }\n    for( int i=0; i<c2.length; i++ )\n      if( c2[i] >= numCols() )\n        throw new IllegalArgumentException(\"Trying to select column \"+(c2[i]+1)+\" but only \"+numCols()+\" present.\");\n    if( c2.length==0 )\n      throw new IllegalArgumentException(\"No columns selected (did you try to select column 0 instead of column 1?)\");\n\n    // Do Da Slice\n    // orows is either a long[] or a Vec\n    if (orows == null)\n      return new DeepSlice((long[])orows,c2,vecs()).doAll(c2.length,this).outputFrame(names(c2),domains(c2));\n    else if (orows instanceof long[]) {\n      final long CHK_ROWS=1000000;\n      long[] rows = (long[])orows;\n      if( rows.length==0 || rows[0] < 0 )\n        return new DeepSlice(rows,c2,vecs()).doAll(c2.length, this).outputFrame(names(c2), domains(c2));\n      // Vec'ize the index array\n      Futures fs = new Futures();\n      AppendableVec av = new AppendableVec(\"rownames\");\n      int r = 0;\n      int c = 0;\n      while (r < rows.length) {\n        NewChunk nc = new NewChunk(av, c);\n        long end = Math.min(r+CHK_ROWS, rows.length);\n        for (; r < end; r++) {\n          nc.addNum(rows[r]);\n        }\n        nc.close(c++, fs);\n      }\n      Vec c0 = av.close(fs);   // c0 is the row index vec\n      fs.blockForPending();\n      Frame fr2 = new Slice(c2, this).doAll(c2.length,new Frame(new String[]{\"rownames\"}, new Vec[]{c0}))\n              .outputFrame(names(c2), domains(c2));\n      UKV.remove(c0._key);      // Remove hidden vector\n      return fr2;\n    }\n    Frame frows = (Frame)orows;\n    Vec vrows = frows.anyVec();\n    // It's a compatible Vec; use it as boolean selector.\n    // Build column names for the result.\n    Vec [] vecs = new Vec[c2.length+1];\n    String [] names = new String[c2.length+1];\n    for(int i = 0; i < c2.length; ++i){\n      vecs[i] = _vecs[c2[i]];\n      names[i] = _names[c2[i]];\n    }\n    vecs[c2.length] = vrows;\n    names[c2.length] = \"predicate\";\n    return new DeepSelect().doAll(c2.length,new Frame(names,vecs)).outputFrame(names(c2),domains(c2));\n  }","commit_id":"12671ee55a6058a0cbb7da2f046c315b253fda80","url":"https://github.com/h2oai/h2o-2"},{"original_method":"@Override\n   public GetTransUnitsNavigationResult execute(GetTransUnitsNavigation action, ExecutionContext context) throws ActionException\n   {\n\n      identity.checkLoggedIn();\n      HLocale hLocale;\n      try\n      {\n         hLocale = localeServiceImpl.validateLocaleByProjectIteration(action.getWorkspaceId().getLocaleId(), action.getWorkspaceId().getProjectIterationId().getProjectSlug(), action.getWorkspaceId().getProjectIterationId().getIterationSlug());\n      }\n      catch (ZanataServiceException e)\n      {\n         throw new ActionException(e);\n      }\n\n      ArrayList<Long> idIndexList = new ArrayList<Long>();\n      HashMap<Long, ContentState> transIdStateList = new HashMap<Long, ContentState>();\n\n      List<HTextFlow> textFlows;\n\n      if (Strings.isNullOrEmpty(action.getPhrase()))\n      {\n         long startTime = System.nanoTime();\n         textFlows = textFlowDAO.getNavigationByDocumentId(action.getId(), hLocale, new TextFlowResultTransformer(hLocale));\n         log.info(\"********** duration :{} second\", (System.nanoTime() - startTime) / 1000000000.0);\n      }\n      else\n      {\n         log.info(\"find message:\" + action.getPhrase());\n         textFlows = searchByPhrase(action);\n      }\n\n      for (HTextFlow textFlow : textFlows)\n      {\n         HTextFlowTarget textFlowTarget = textFlow.getTargets().get(hLocale.getId());\n         if (checkStateAndValidate(action.isNewState(), action.isFuzzyState(), action.isApprovedState(), textFlowTarget))\n         {\n            if (textFlowTarget == null)\n            {\n               transIdStateList.put(textFlow.getId(), ContentState.New);\n            }\n            else\n            {\n               transIdStateList.put(textFlow.getId(), textFlowTarget.getState());\n            }\n            idIndexList.add(textFlow.getId());\n         }\n      }\n      log.info(\"returned size: \" + idIndexList.size());\n\n      return new GetTransUnitsNavigationResult(new DocumentId(action.getId()), idIndexList, transIdStateList);\n   }","id":61077,"modified_method":"@Override\n   public GetTransUnitsNavigationResult execute(GetTransUnitsNavigation action, ExecutionContext context) throws ActionException\n   {\n\n      identity.checkLoggedIn();\n      HLocale hLocale;\n      try\n      {\n         hLocale = localeServiceImpl.validateLocaleByProjectIteration(action.getWorkspaceId().getLocaleId(), action.getWorkspaceId().getProjectIterationId().getProjectSlug(), action.getWorkspaceId().getProjectIterationId().getIterationSlug());\n      }\n      catch (ZanataServiceException e)\n      {\n         throw new ActionException(e);\n      }\n\n      FilterConstraints filterConstraints = FilterConstraints.filterBy(action.getPhrase()).filterSource().filterTarget().filterByStatus(action.isNewState(), action.isFuzzyState(), action.isApprovedState());\n      ArrayList<Long> idIndexList = new ArrayList<Long>();\n      HashMap<Long, ContentState> transIdStateMap = new HashMap<Long, ContentState>();\n\n      List<HTextFlow> textFlows;\n      TextFlowResultTransformer resultTransformer = new TextFlowResultTransformer(hLocale);\n      long startTime = System.nanoTime();\n      textFlows = textFlowDAO.getNavigationByDocumentId(action.getId(), hLocale, resultTransformer, filterConstraints);\n      for (HTextFlow textFlow : textFlows)\n      {\n         idIndexList.add(textFlow.getId());\n         transIdStateMap.put(textFlow.getId(), textFlow.getTargets().get(hLocale.getId()).getState());\n      }\n      log.info(\"********** duration :{} second\", (System.nanoTime() - startTime) / 1000000000.0);\n      log.debug(\"for action {} returned size: \", action, idIndexList.size());\n      return new GetTransUnitsNavigationResult(new DocumentId(action.getId()), idIndexList, transIdStateMap);\n\n   }","commit_id":"8d352ea1d1f1f996f73124f2997a6d3380d278f5","url":"https://github.com/zanata/zanata-server"},{"original_method":"@BeforeMethod\n   public void setUp() throws Exception\n   {\n      MockitoAnnotations.initMocks(this);\n      TextFlowDAO dao = new TextFlowDAO((Session) getEm().getDelegate());\n      // @formatter:off\n      handler = SeamAutowire.instance()\n            .use(\"identity\", identity)\n            .use(\"localeServiceImpl\", localeService)\n            .use(\"textFlowDAO\", dao)\n            .use(\"textFlowSearchServiceImpl\", textFlowSearchServiceImpl)\n            .autowire(GetTransUnitsNavigationHandler.class);\n      // @formatter:on\n   }","id":61078,"modified_method":"@BeforeMethod\n   public void setUp() throws Exception\n   {\n      MockitoAnnotations.initMocks(this);\n      TextFlowDAO dao = new TextFlowDAO((Session) getEm().getDelegate());\n      // @formatter:off\n      handler = SeamAutowire.instance()\n            .use(\"identity\", identity)\n            .use(\"localeServiceImpl\", localeService)\n            .use(\"textFlowDAO\", dao)\n            .autowire(GetTransUnitsNavigationHandler.class);\n      // @formatter:on\n   }","commit_id":"8d352ea1d1f1f996f73124f2997a6d3380d278f5","url":"https://github.com/zanata/zanata-server"},{"original_method":"public GetTransUnitsNavigationHandler createGetTransUnitsNavigationHandlerWithBehavior(DocumentId documentId, List<HTextFlow> hTextFlows, HLocale hLocale)\n   {\n      // @formatter:off\n      GetTransUnitsNavigationHandler handler = SeamAutowire.instance()\n            .use(\"identity\", identity)\n            .use(\"textFlowDAO\", textFlowDAO)\n            .use(\"localeServiceImpl\", localeServiceImpl)\n            .use(\"textFlowSearchServiceImpl\", textFlowSearchServiceImpl)\n            .autowire(GetTransUnitsNavigationHandler.class);\n      // @formatter:on\n      when(textFlowDAO.getNavigationByDocumentId(eq(documentId.getId()), eq(hLocale), isA(ResultTransformer.class))).thenReturn(hTextFlows);\n      when(localeServiceImpl.validateLocaleByProjectIteration(any(LocaleId.class), anyString(), anyString())).thenReturn(hLocale);\n\n      return handler;\n   }","id":61079,"modified_method":"public GetTransUnitsNavigationHandler createGetTransUnitsNavigationHandlerWithBehavior(DocumentId documentId, List<HTextFlow> hTextFlows, HLocale hLocale)\n   {\n      // @formatter:off\n      GetTransUnitsNavigationHandler handler = SeamAutowire.instance()\n            .use(\"identity\", identity)\n            .use(\"textFlowDAO\", textFlowDAO)\n            .use(\"localeServiceImpl\", localeServiceImpl)\n            .autowire(GetTransUnitsNavigationHandler.class);\n      // @formatter:on\n      when(textFlowDAO.getNavigationByDocumentId(eq(documentId.getId()), eq(hLocale), isA(ResultTransformer.class), isA(FilterConstraints.class))).thenReturn(hTextFlows);\n      when(localeServiceImpl.validateLocaleByProjectIteration(any(LocaleId.class), anyString(), anyString())).thenReturn(hLocale);\n\n      return handler;\n   }","commit_id":"8d352ea1d1f1f996f73124f2997a6d3380d278f5","url":"https://github.com/zanata/zanata-server"},{"original_method":"@SuppressWarnings(\"unchecked\")\n   public List<HTextFlow> getNavigationByDocumentId(Long documentId, HLocale hLocale, ResultTransformer resultTransformer)\n   {\n      String queryString = \"select tf.id, tft.state from HTextFlow tf \" +\n            \"left join ( select tf_id, state from HTextFlowTarget where locale = :locale) tft on tft.tf_id = tf.id \" +\n            \"where tf.document_id = :docId \" +\n            \"order by tf.pos\";\n      Query query = getSession().createSQLQuery(queryString)\n            .addScalar(\"id\", Hibernate.LONG)\n            .addScalar(\"state\")\n            .setParameter(\"docId\", documentId)\n            .setParameter(\"locale\", hLocale.getId())\n            .setResultTransformer(resultTransformer);\n\n      List list = query.list();\n      log.info(\"result: {}\", list.size());\n      return list;\n   }","id":61080,"modified_method":"@SuppressWarnings(\"unchecked\")\n   public List<HTextFlow> getNavigationByDocumentId(Long documentId, HLocale hLocale, ResultTransformer resultTransformer, FilterConstraints filterConstraints)\n   {\n      StringBuilder queryBuilder = new StringBuilder();\n      // I can't write a HQL or criteria to achieve the same result. I gave up...\n      // @formatter:off\n      queryBuilder\n            .append(\"SELECT tf.id, tft.state FROM HTextFlow tf \")\n            .append(\" LEFT JOIN ( SELECT tf_id, state, content0, content1, content2, content3, content4, content5 \")\n            .append(\"             FROM HTextFlowTarget WHERE locale = :locale) tft ON tft.tf_id = tf.id \")\n            .append(\" WHERE tf.document_id = :docId \");\n      queryBuilder\n            .append(\" AND \")\n            .append(buildContentStateCondition(filterConstraints.isIncludeApproved(), filterConstraints.isIncludeFuzzy(), filterConstraints.isIncludeNew(), \"tft\"))\n            .append(\" AND (\")\n            .append(buildSearchCondition(filterConstraints.getSearchString(), \"tf\")) // search in source\n            .append(\" OR \")\n            .append(buildSearchCondition(filterConstraints.getSearchString(), \"tft\")) // search in target\n            .append(\")\")\n      ;\n      queryBuilder\n            .append(\" ORDER BY tf.pos\");\n      // @formatter:on\n      log.debug(\"get navigation SQL query: {}\", queryBuilder);\n      Query query = getSession().createSQLQuery(queryBuilder.toString())\n            .addScalar(\"id\", Hibernate.LONG)\n            .addScalar(\"state\")\n            .setParameter(\"docId\", documentId)\n            .setParameter(\"locale\", hLocale.getId())\n            .setResultTransformer(resultTransformer);\n\n      return query.list();\n   }","commit_id":"8d352ea1d1f1f996f73124f2997a6d3380d278f5","url":"https://github.com/zanata/zanata-server"},{"original_method":"public boolean isFilterApproved()\n   {\n      return filterApproved;\n   }","id":61081,"modified_method":"public boolean isFilterApproved()\n   {\n      return filterStates.isApprovedOn();\n   }","commit_id":"dd5806758b5a20725c035f1ab0051b8c32ad5837","url":"https://github.com/zanata/zanata-server"},{"original_method":"public boolean isFilterRejected()\n   {\n      return filterRejected;\n   }","id":61082,"modified_method":"public boolean isFilterRejected()\n   {\n      return filterStates.isRejectedOn();\n   }","commit_id":"dd5806758b5a20725c035f1ab0051b8c32ad5837","url":"https://github.com/zanata/zanata-server"},{"original_method":"public static GetTransUnitList newAction(GetTransUnitActionContext context)\n   {\n      return new GetTransUnitList(context.getDocument().getId(), context.getOffset(), context.getCount(), context.getFindMessage(), context.isFilterTranslated(), context.isFilterNeedReview(), context.isFilterUntranslated(), context.isFilterApproved(), context.isFilterRejected(), context.isFilterHasError(), context.getTargetTransUnitId(), context.getValidationIds());\n   }","id":61083,"modified_method":"public static GetTransUnitList newAction(GetTransUnitActionContext context)\n   {\n      return new GetTransUnitList(context);\n   }","commit_id":"dd5806758b5a20725c035f1ab0051b8c32ad5837","url":"https://github.com/zanata/zanata-server"},{"original_method":"public boolean isFilterNeedReview()\n   {\n      return filterNeedReview;\n   }","id":61084,"modified_method":"public boolean isFilterNeedReview()\n   {\n      return filterStates.isFuzzyOn();\n   }","commit_id":"dd5806758b5a20725c035f1ab0051b8c32ad5837","url":"https://github.com/zanata/zanata-server"},{"original_method":"@Override\n   public String toString()\n   {\n      // @formatter:off\n      return Objects.toStringHelper(this).\n            add(\"offset\", offset).\n            add(\"count\", count).\n            add(\"documentId\", documentId).\n            add(\"phrase\", phrase).\n            add(\"filterTranslated\", filterTranslated).\n            add(\"filterNeedReview\", filterNeedReview).\n            add(\"filterUntranslated\", filterUntranslated).\n            add(\"filterApproved\", filterApproved).\n            add(\"filterRejected\", filterRejected).\n            add(\"filterHasError\", filterHasError).\n            add(\"targetTransUnitId\", targetTransUnitId).\n            add(\"needReloadIndex\", needReloadIndex).\n            toString();\n      // @formatter:on\n   }","id":61085,"modified_method":"@Override\n   public String toString()\n   {\n      // @formatter:off\n      return Objects.toStringHelper(this).\n            add(\"offset\", offset).\n            add(\"count\", count).\n            add(\"documentId\", documentId).\n            add(\"phrase\", phrase).\n            add(\"filterStates\", filterStates).\n            add(\"filterHasError\", filterHasError).\n            add(\"targetTransUnitId\", targetTransUnitId).\n            add(\"needReloadIndex\", needReloadIndex).\n            toString();\n      // @formatter:on\n   }","commit_id":"dd5806758b5a20725c035f1ab0051b8c32ad5837","url":"https://github.com/zanata/zanata-server"},{"original_method":"public boolean isFilterTranslated()\n   {\n      return filterTranslated;\n   }","id":61086,"modified_method":"public boolean isFilterTranslated()\n   {\n      return filterStates.isTranslatedOn();\n   }","commit_id":"dd5806758b5a20725c035f1ab0051b8c32ad5837","url":"https://github.com/zanata/zanata-server"},{"original_method":"public boolean isAcceptAllStatus()\n   {\n      //all filter options are checked or unchecked\n      return filterNeedReview == filterTranslated && filterNeedReview == filterUntranslated && filterNeedReview == filterHasError && filterApproved == filterNeedReview && filterRejected == filterNeedReview;\n   }","id":61087,"modified_method":"public boolean isAcceptAllStatus()\n   {\n      //all filter options are checked or unchecked\n      return filterStates.hasNoStates() && !filterHasError || filterStates.hasAllStates() && filterHasError;\n   }","commit_id":"dd5806758b5a20725c035f1ab0051b8c32ad5837","url":"https://github.com/zanata/zanata-server"},{"original_method":"public boolean isFilterUntranslated()\n   {\n      return filterUntranslated;\n   }","id":61088,"modified_method":"public boolean isFilterUntranslated()\n   {\n      return filterStates.isNewOn();\n   }","commit_id":"dd5806758b5a20725c035f1ab0051b8c32ad5837","url":"https://github.com/zanata/zanata-server"},{"original_method":"@Override\n   public GetTransUnitListResult execute(GetTransUnitList action, ExecutionContext context) throws ActionException\n   {\n      identity.checkLoggedIn();\n      HLocale hLocale = validateAndGetLocale(action);\n\n      log.info(\"action: {}\", action);\n      int targetOffset = action.getOffset();\n      int targetPage = action.getOffset() / action.getCount();\n      GetTransUnitsNavigationResult navigationResult = null;\n      if (action.isNeedReloadIndex())\n      {\n         GetTransUnitsNavigation getTransUnitsNavigation = new GetTransUnitsNavigation(action.getDocumentId().getId(), action.getPhrase(), action.isFilterUntranslated(), action.isFilterNeedReview(), action.isFilterTranslated(), action.isFilterApproved(), action.isFilterRejected());\n         log.debug(\"get trans unit navigation action: {}\", getTransUnitsNavigation);\n         navigationResult = getTransUnitsNavigationService.getNavigationIndexes(getTransUnitsNavigation, hLocale);\n\n         int totalPageNumber = navigationResult.getIdIndexList().size() / action.getCount();\n         if (targetPage > totalPageNumber)\n         {\n            targetPage = totalPageNumber;\n            targetOffset = action.getCount() * targetPage;\n         }\n            \n         if (action.getTargetTransUnitId() != null)\n         {\n            int targetIndexInDoc = navigationResult.getIdIndexList().indexOf(action.getTargetTransUnitId());\n            targetPage = targetIndexInDoc / action.getCount();\n            targetOffset = action.getCount() * targetPage;\n         }\n      }\n\n      List<HTextFlow> textFlows = getTextFlows(action, hLocale, targetOffset);\n      \n      GetTransUnitListResult result = transformToTransUnits(action, hLocale, textFlows, targetOffset, targetPage);\n      result.setNavigationIndex(navigationResult);\n      return result;\n   }","id":61089,"modified_method":"@Override\n   public GetTransUnitListResult execute(GetTransUnitList action, ExecutionContext context) throws ActionException\n   {\n      identity.checkLoggedIn();\n      HLocale hLocale = validateAndGetLocale(action);\n\n      log.info(\"action: {}\", action);\n      int targetOffset = action.getOffset();\n      int targetPage = action.getOffset() / action.getCount();\n      GetTransUnitsNavigationResult navigationResult = null;\n      if (action.isNeedReloadIndex())\n      {\n         GetTransUnitsNavigation getTransUnitsNavigation = new GetTransUnitsNavigation(action.getDocumentId().getId(), action.getPhrase(), action.getFilterStates());\n         log.debug(\"get trans unit navigation action: {}\", getTransUnitsNavigation);\n         navigationResult = getTransUnitsNavigationService.getNavigationIndexes(getTransUnitsNavigation, hLocale);\n\n         int totalPageNumber = navigationResult.getIdIndexList().size() / action.getCount();\n         if (targetPage > totalPageNumber)\n         {\n            targetPage = totalPageNumber;\n            targetOffset = action.getCount() * targetPage;\n         }\n            \n         if (action.getTargetTransUnitId() != null)\n         {\n            int targetIndexInDoc = navigationResult.getIdIndexList().indexOf(action.getTargetTransUnitId());\n            targetPage = targetIndexInDoc / action.getCount();\n            targetOffset = action.getCount() * targetPage;\n         }\n      }\n\n      List<HTextFlow> textFlows = getTextFlows(action, hLocale, targetOffset);\n      \n      GetTransUnitListResult result = transformToTransUnits(action, hLocale, textFlows, targetOffset, targetPage);\n      result.setNavigationIndex(navigationResult);\n      return result;\n   }","commit_id":"dd5806758b5a20725c035f1ab0051b8c32ad5837","url":"https://github.com/zanata/zanata-server"},{"original_method":"private List<HTextFlow> getTextFlows(GetTransUnitList action, HLocale hLocale, int offset)\n   {\n      List<HTextFlow> textFlows;\n      // no status and phrase filter\n      if (!hasStatusAndPhaseFilter(action))\n      {\n         // no validation filter\n         log.debug(\"Fetch TransUnits:*\");\n         if (!hasValidationFilter(action))\n         {\n            textFlows = textFlowDAO.getTextFlowsByDocumentId(action.getDocumentId(), offset, action.getCount());\n         }\n         // has validation filter\n         else\n         {\n            textFlows = textFlowDAO.getAllTextFlowsByDocumentId(action.getDocumentId());\n            textFlows = validationServiceImpl.filterHasErrorTexFlow(textFlows, action.getValidationIds(), hLocale.getLocaleId(), offset, action.getCount());\n         }\n      }\n      // has status and phrase filter\n      else\n      {\n         // @formatter:off\n         FilterConstraints constraints = FilterConstraints.builder()\n               .filterBy(action.getPhrase())\n               .caseSensitive(false).checkInSource(true).checkInTarget(true)\n               .includeStates(ActiveStates.builder()\n                     .setNewOn(action.isFilterUntranslated())\n                     .setFuzzyOn(action.isFilterNeedReview())\n                     .setTranslatedOn(action.isFilterTranslated())\n                     .setApprovedOn(action.isFilterApproved())\n                     .setRejectedOn(action.isFilterRejected())\n                     .build())\n               .build();\n         // @formatter:on\n         log.debug(\"Fetch TransUnits filtered by status and/or search: {}\", constraints);\n         if (!hasValidationFilter(action))\n         {\n            textFlows = textFlowDAO.getTextFlowByDocumentIdWithConstraints(action.getDocumentId(), hLocale, constraints, offset, action.getCount());\n         }\n         // has validation filter\n         else\n         {\n            textFlows = textFlowDAO.getAllTextFlowByDocumentIdWithConstraints(action.getDocumentId(), hLocale, constraints);\n            textFlows = validationServiceImpl.filterHasErrorTexFlow(textFlows, action.getValidationIds(), hLocale.getLocaleId(), offset, action.getCount());\n         }\n      }\n      return textFlows;\n   }","id":61090,"modified_method":"private List<HTextFlow> getTextFlows(GetTransUnitList action, HLocale hLocale, int offset)\n   {\n      List<HTextFlow> textFlows;\n      if (!hasStatusAndPhaseFilter(action))\n      {\n         log.debug(\"Fetch TransUnits:*\");\n         if (!hasValidationFilter(action))\n         {\n            textFlows = textFlowDAO.getTextFlowsByDocumentId(action.getDocumentId(), offset, action.getCount());\n         }\n         else\n         {\n            textFlows = textFlowDAO.getAllTextFlowsByDocumentId(action.getDocumentId());\n            textFlows = validationServiceImpl.filterHasErrorTexFlow(textFlows, action.getValidationIds(), hLocale.getLocaleId(), offset, action.getCount());\n         }\n      }\n      // has status and phrase filter\n      else\n      {\n         // @formatter:off\n         FilterConstraints constraints = FilterConstraints.builder()\n               .filterBy(action.getPhrase())\n               .caseSensitive(false).checkInSource(true).checkInTarget(true)\n               .includeStates(action.getFilterStates())\n               .build();\n         // @formatter:on\n         log.debug(\"Fetch TransUnits filtered by status and/or search: {}\", constraints);\n         if (!hasValidationFilter(action))\n         {\n            textFlows = textFlowDAO.getTextFlowByDocumentIdWithConstraints(action.getDocumentId(), hLocale, constraints, offset, action.getCount());\n         }\n         // has validation filter\n         else\n         {\n            textFlows = textFlowDAO.getAllTextFlowByDocumentIdWithConstraints(action.getDocumentId(), hLocale, constraints);\n            textFlows = validationServiceImpl.filterHasErrorTexFlow(textFlows, action.getValidationIds(), hLocale.getLocaleId(), offset, action.getCount());\n         }\n      }\n      return textFlows;\n   }","commit_id":"dd5806758b5a20725c035f1ab0051b8c32ad5837","url":"https://github.com/zanata/zanata-server"},{"original_method":"@Override\n   public String toString()\n   {\n      // @formatter:off\n      return Objects.toStringHelper(this).\n            add(\"id\", id).\n            add(\"phrase\", phrase).\n            add(\"isFuzzyState\", isFuzzyState).\n            add(\"isNewState\", isNewState).\n            add(\"isTranslatedState\", isTranslatedState).\n            add(\"isApprovedState\", isApprovedState).\n            add(\"isRejectedState\", isRejectedState).\n            toString();\n      // @formatter:on\n   }","id":61091,"modified_method":"@Override\n   public String toString()\n   {\n      // @formatter:off\n      return Objects.toStringHelper(this).\n            add(\"id\", id).\n            add(\"phrase\", phrase).\n            add(\"activeStates\", activeStates).\n            toString();\n      // @formatter:on\n   }","commit_id":"dd5806758b5a20725c035f1ab0051b8c32ad5837","url":"https://github.com/zanata/zanata-server"},{"original_method":"public GetTransUnitsNavigation(Long id, String phrase, boolean isNewState, boolean isFuzzyState, boolean isTranslatedState, boolean isApprovedState, boolean isRejectedState)\n   {\n      this.id = id;\n      this.phrase = phrase;\n      this.isNewState = isNewState;\n      this.isFuzzyState = isFuzzyState;\n      this.isTranslatedState = isTranslatedState;\n      this.isApprovedState = isApprovedState;\n      this.isRejectedState = isRejectedState;\n   }","id":61092,"modified_method":"public GetTransUnitsNavigation(Long id, String phrase, ActiveStates activeStates)\n   {\n      this.id = id;\n      this.phrase = phrase;\n      this.activeStates = activeStates;\n   }","commit_id":"dd5806758b5a20725c035f1ab0051b8c32ad5837","url":"https://github.com/zanata/zanata-server"},{"original_method":"public static GetTransUnitsNavigation newAction(GetTransUnitActionContext context)\n   {\n      return new GetTransUnitsNavigation(context.getDocument().getId().getId(), context.getFindMessage(), context.isFilterUntranslated(), context.isFilterNeedReview(), context.isFilterTranslated(), context.isFilterApproved(), context.isFilterRejected());\n   }","id":61093,"modified_method":"public static GetTransUnitsNavigation newAction(GetTransUnitActionContext context)\n   {\n      return new GetTransUnitsNavigation(context);\n   }","commit_id":"dd5806758b5a20725c035f1ab0051b8c32ad5837","url":"https://github.com/zanata/zanata-server"},{"original_method":"protected GetTransUnitsNavigationResult getNavigationIndexes(GetTransUnitsNavigation action, HLocale hLocale)\n   {\n      FilterConstraints filterConstraints = FilterConstraints.builder()\n            .filterBy(action.getPhrase())\n            .checkInSource(true).checkInTarget(true)\n            .includeStates(ActiveStates.builder()\n                  .setNewOn(action.isNewState())\n                  .setFuzzyOn(action.isFuzzyState())\n                  .setTranslatedOn(action.isTranslatedState())\n                  .setApprovedOn(action.isApprovedState())\n                  .setRejectedOn(action.isRejectedState())\n                  .build())\n            .build();\n\n      List<TransUnitId> idIndexList = new ArrayList<TransUnitId>();\n      Map<TransUnitId, ContentState> transIdStateMap = new HashMap<TransUnitId, ContentState>();\n\n      List<HTextFlow> textFlows;\n      TextFlowResultTransformer resultTransformer = new TextFlowResultTransformer(hLocale);\n\n      textFlows = textFlowDAO.getNavigationByDocumentId(action.getId(), hLocale, resultTransformer, filterConstraints);\n      for (HTextFlow textFlow : textFlows)\n      {\n         TransUnitId transUnitId = new TransUnitId(textFlow.getId());\n         idIndexList.add(transUnitId);\n         transIdStateMap.put(transUnitId, textFlow.getTargets().get(hLocale.getId()).getState());\n      }\n\n      log.debug(\"for action {} returned size: {}\", action, idIndexList.size());\n      return new GetTransUnitsNavigationResult(idIndexList, transIdStateMap);\n   }","id":61094,"modified_method":"protected GetTransUnitsNavigationResult getNavigationIndexes(GetTransUnitsNavigation action, HLocale hLocale)\n   {\n      FilterConstraints filterConstraints = FilterConstraints.builder()\n            .filterBy(action.getPhrase())\n            .checkInSource(true).checkInTarget(true)\n            .includeStates(action.getActiveStates())\n            .build();\n\n      List<TransUnitId> idIndexList = new ArrayList<TransUnitId>();\n      Map<TransUnitId, ContentState> transIdStateMap = new HashMap<TransUnitId, ContentState>();\n\n      List<HTextFlow> textFlows;\n      TextFlowResultTransformer resultTransformer = new TextFlowResultTransformer(hLocale);\n\n      textFlows = textFlowDAO.getNavigationByDocumentId(action.getId(), hLocale, resultTransformer, filterConstraints);\n      for (HTextFlow textFlow : textFlows)\n      {\n         TransUnitId transUnitId = new TransUnitId(textFlow.getId());\n         idIndexList.add(transUnitId);\n         transIdStateMap.put(transUnitId, textFlow.getTargets().get(hLocale.getId()).getState());\n      }\n\n      log.debug(\"for action {} returned size: {}\", action, idIndexList.size());\n      return new GetTransUnitsNavigationResult(idIndexList, transIdStateMap);\n   }","commit_id":"dd5806758b5a20725c035f1ab0051b8c32ad5837","url":"https://github.com/zanata/zanata-server"},{"original_method":"@Override\n   public GetTransUnitsNavigationResult execute(GetTransUnitsNavigation action, ExecutionContext context) throws ActionException\n   {\n\n      identity.checkLoggedIn();\n      HLocale hLocale;\n      try\n      {\n         hLocale = localeServiceImpl.validateLocaleByProjectIteration(action.getWorkspaceId().getLocaleId(), action.getWorkspaceId().getProjectIterationId().getProjectSlug(), action.getWorkspaceId().getProjectIterationId().getIterationSlug());\n      }\n      catch (ZanataServiceException e)\n      {\n         throw new ActionException(e);\n      }\n\n      ArrayList<Long> idIndexList = new ArrayList<Long>();\n      HashMap<Long, ContentState> transIdStateList = new HashMap<Long, ContentState>();\n\n      List<HTextFlow> textFlows;\n\n      if (action.getPhrase() != null && !action.getPhrase().isEmpty())\n      {\n         log.info(\"find message:\" + action.getPhrase());\n         //FIXME use hibernate search\n         List<Long> idList = textFlowDAO.getNavigationBy(action.getId(), action.getPhrase().toLowerCase(), action.getWorkspaceId().getLocaleId());\n\n         textFlows = textFlowDAO.findByIdList(idList);\n      }\n      else\n      {\n         textFlows = textFlowDAO.getNavigationByDocumentId(action.getId());\n      }\n\n      for (HTextFlow textFlow : textFlows)\n      {\n         HTextFlowTarget textFlowTarget = textFlow.getTargets().get(hLocale.getId());\n         if (checkStateAndValidate(action.isNewState(), action.isFuzzyState(), action.isApprovedState(), textFlowTarget))\n         {\n            if (textFlowTarget == null)\n            {\n               transIdStateList.put(textFlow.getId(), ContentState.New);\n            }\n            else\n            {\n               transIdStateList.put(textFlow.getId(), textFlowTarget.getState());\n            }\n            idIndexList.add(textFlow.getId());\n         }\n      }\n      log.info(\"returned size: \" + idIndexList.size());\n\n      return new GetTransUnitsNavigationResult(new DocumentId(action.getId()), idIndexList, transIdStateList);\n   }","id":61095,"modified_method":"@Override\n   public GetTransUnitsNavigationResult execute(GetTransUnitsNavigation action, ExecutionContext context) throws ActionException\n   {\n\n      identity.checkLoggedIn();\n      HLocale hLocale;\n      try\n      {\n         hLocale = localeServiceImpl.validateLocaleByProjectIteration(action.getWorkspaceId().getLocaleId(), action.getWorkspaceId().getProjectIterationId().getProjectSlug(), action.getWorkspaceId().getProjectIterationId().getIterationSlug());\n      }\n      catch (ZanataServiceException e)\n      {\n         throw new ActionException(e);\n      }\n\n      ArrayList<Long> idIndexList = new ArrayList<Long>();\n      HashMap<Long, ContentState> transIdStateList = new HashMap<Long, ContentState>();\n\n      List<HTextFlow> textFlows;\n\n      if (Strings.isNullOrEmpty(action.getPhrase()))\n      {\n         textFlows = textFlowDAO.getNavigationByDocumentId(action.getId());\n      }\n      else\n      {\n         log.info(\"find message:\" + action.getPhrase());\n         textFlows = searchByPhrase(action);\n      }\n\n      for (HTextFlow textFlow : textFlows)\n      {\n         HTextFlowTarget textFlowTarget = textFlow.getTargets().get(hLocale.getId());\n         if (checkStateAndValidate(action.isNewState(), action.isFuzzyState(), action.isApprovedState(), textFlowTarget))\n         {\n            if (textFlowTarget == null)\n            {\n               transIdStateList.put(textFlow.getId(), ContentState.New);\n            }\n            else\n            {\n               transIdStateList.put(textFlow.getId(), textFlowTarget.getState());\n            }\n            idIndexList.add(textFlow.getId());\n         }\n      }\n      log.info(\"returned size: \" + idIndexList.size());\n\n      return new GetTransUnitsNavigationResult(new DocumentId(action.getId()), idIndexList, transIdStateList);\n   }","commit_id":"9919fd9fd903f959e1bf0feaa3738516c9934b4e","url":"https://github.com/zanata/zanata-server"},{"original_method":"@Override\n   public void onFindMessage(FindMessageEvent event)\n   {\n      // TODO modal navigation disabled if there's findMessage.\n      // TODO turn FindMessageEvent into UpdateContextCommand like the rest.\n      findMessage = event.getMessage();\n      // FIXME context may be null if loading from bookmark (document is not yet loaded)\n      if (context == null)\n      {\n         return;\n      }\n      context = context.changeFindMessage(findMessage);\n      if (Strings.isNullOrEmpty(findMessage))\n      {\n         init(context);\n         eventBus.fireEvent(new EnableModalNavigationEvent(true));\n      }\n      else\n      {\n         eventBus.fireEvent(new EnableModalNavigationEvent(false));\n         requestTransUnitsAndUpdatePageIndex(context);\n      }\n   }","id":61096,"modified_method":"@Override\n   public void onFindMessage(FindMessageEvent event)\n   {\n      // TODO turn FindMessageEvent into UpdateContextCommand like the rest.\n      findMessage = event.getMessage();\n      // FIXME context may be null if loading from bookmark (document is not yet loaded)\n      if (context == null)\n      {\n         return;\n      }\n      context = context.changeFindMessage(findMessage);\n      init(context);\n   }","commit_id":"9919fd9fd903f959e1bf0feaa3738516c9934b4e","url":"https://github.com/zanata/zanata-server"},{"original_method":"@Override\n   public GetTransUnitListResult execute(GetTransUnitList action, ExecutionContext context) throws ActionException\n   {\n      identity.checkLoggedIn();\n      log.info(\"Fetching TransUnits for document {}\", action.getDocumentId());\n      log.debug(\"action: {}\", action);\n\n      final HLocale hLocale;\n      try\n      {\n         hLocale = localeServiceImpl.validateLocaleByProjectIteration(action.getWorkspaceId().getLocaleId(), action.getWorkspaceId().getProjectIterationId().getProjectSlug(), action.getWorkspaceId().getProjectIterationId().getIterationSlug());\n      }\n      catch (ZanataServiceException e)\n      {\n         throw new ActionException(e);\n      }\n\n      List<HTextFlow> textFlows;\n\n      if (hasSearchPhrase(action))\n      {\n         log.debug(\"Fetch TransUnits: {}\", action.getPhrase());\n         textFlows = searchByPhrase(action);\n      }\n      else if (action.isAcceptAllStatus())\n      {\n         log.debug(\"Fetch TransUnits:*\");\n         return getTransUnitsWithPage(action, hLocale);\n      }\n      else\n      {\n         log.debug(\"Fetch TransUnits filtered by status: {}\", action);\n         textFlows = textFlowDAO.getTextFlowsByStatus(action.getDocumentId(), hLocale, action.isFilterTranslated(), action.isFilterNeedReview(), action.isFilterUntranslated());\n      }\n\n      int gotoRow = 0;\n      int size = textFlows.size();\n      int startIndex = action.getOffset();\n      int endIndex = Math.min(action.getOffset() + action.getCount(), size);\n      log.debug(\"loading index from {} to {}\", startIndex, endIndex);\n\n      ArrayList<TransUnit> units = new ArrayList<TransUnit>();\n      for (int i = startIndex; i < endIndex; i++)\n      {\n         HTextFlow textFlow = textFlows.get(i);\n         TransUnit tu = transUnitTransformer.transform(textFlow, hLocale);\n         if (action.getTargetTransUnitId() != null && tu.getId().equals(action.getTargetTransUnitId()))\n         {\n            gotoRow = i - startIndex;\n         }\n         units.add(tu);\n      }\n      log.debug(\"go to index {}\", gotoRow);\n      return new GetTransUnitListResult(action.getDocumentId(), units, gotoRow);\n   }","id":61097,"modified_method":"@Override\n   public GetTransUnitListResult execute(GetTransUnitList action, ExecutionContext context) throws ActionException\n   {\n      identity.checkLoggedIn();\n      log.info(\"Fetching TransUnits for document {}\", action.getDocumentId());\n      log.debug(\"action: {}\", action);\n\n      final HLocale hLocale;\n      try\n      {\n         hLocale = localeServiceImpl.validateLocaleByProjectIteration(action.getWorkspaceId().getLocaleId(), action.getWorkspaceId().getProjectIterationId().getProjectSlug(), action.getWorkspaceId().getProjectIterationId().getIterationSlug());\n      }\n      catch (ZanataServiceException e)\n      {\n         throw new ActionException(e);\n      }\n\n      List<HTextFlow> textFlows;\n\n      if (action.isAcceptAllStatus() && !hasSearchPhrase(action.getPhrase()))\n      {\n         log.debug(\"Fetch TransUnits:*\");\n         return getTransUnitsWithPage(action, hLocale);\n      }\n      else\n      {\n         FilterConstraints constraints = FilterConstraints.filterBy(action.getPhrase())\n               .ignoreCase()\n               .filterByStatus(action.isFilterUntranslated(), action.isFilterNeedReview(), action.isFilterTranslated());\n         log.debug(\"Fetch TransUnits filtered by status and/or search: {}\", constraints);\n         textFlows = textFlowDAO.getTextFlowByDocumentIdWithConstraint(action.getDocumentId(), hLocale, constraints);\n//         textFlows = searchByPhrase(action);\n//         textFlows = textFlowDAO.getTextFlowsByStatus(action.getDocumentId(), hLocale, action.isFilterTranslated(), action.isFilterNeedReview(), action.isFilterUntranslated());\n      }\n\n      int gotoRow = 0;\n      int size = textFlows.size();\n      int startIndex = action.getOffset();\n      int endIndex = Math.min(action.getOffset() + action.getCount(), size);\n      log.debug(\"loading index from {} to {}\", startIndex, endIndex);\n\n      ArrayList<TransUnit> units = new ArrayList<TransUnit>();\n      for (int i = startIndex; i < endIndex; i++)\n      {\n         HTextFlow textFlow = textFlows.get(i);\n         TransUnit tu = transUnitTransformer.transform(textFlow, hLocale);\n         if (action.getTargetTransUnitId() != null && tu.getId().equals(action.getTargetTransUnitId()))\n         {\n            gotoRow = i - startIndex;\n         }\n         units.add(tu);\n      }\n      log.debug(\"go to index {}\", gotoRow);\n      return new GetTransUnitListResult(action.getDocumentId(), units, gotoRow);\n   }","commit_id":"e780023023798ae205ae1439e6dcc3653528bace","url":"https://github.com/zanata/zanata-server"},{"original_method":"private List<HTextFlow> searchByPhrase(GetTransUnitList action)\n   {\n      FilterConstraints constraints = FilterConstraints.filterBy(action.getPhrase()).ignoreCase();\n      constraints.includeApproved().includeFuzzy().includeNew();\n      if (!action.isAcceptAllStatus())\n      {\n         if (!action.isFilterNeedReview())\n         {\n            constraints.excludeFuzzy();\n         }\n         if (!action.isFilterTranslated())\n         {\n            constraints.excludeApproved();\n         }\n         if (!action.isFilterUntranslated())\n         {\n            constraints.excludeNew();\n         }\n      }\n\n      List<HTextFlow> textFlows = textFlowSearchServiceImpl.findTextFlows(action.getWorkspaceId(), action.getDocumentId(), constraints);\n      Collections.sort(textFlows, HTextFlowPosComparator.INSTANCE);\n      return textFlows;\n   }","id":61098,"modified_method":"private List<HTextFlow> searchByPhrase(GetTransUnitList action)\n   {\n      FilterConstraints constraints = FilterConstraints.filterBy(action.getPhrase())\n            .ignoreCase()\n            .filterByStatus(action.isFilterUntranslated(), action.isFilterNeedReview(), action.isFilterTranslated());\n\n      List<HTextFlow> textFlows = textFlowSearchServiceImpl.findTextFlows(action.getWorkspaceId(), action.getDocumentId(), constraints);\n      Collections.sort(textFlows, HTextFlowPosComparator.INSTANCE);\n      return textFlows;\n   }","commit_id":"e780023023798ae205ae1439e6dcc3653528bace","url":"https://github.com/zanata/zanata-server"},{"original_method":"@Test\n   public void testExecuteForSearch() throws Exception\n   {\n      // Given: we want to search for file in fuzzy and untranslated text flows\n      GetTransUnitList action = GetTransUnitList.newAction(new GetTransUnitActionContext(documentId)\n            .changeFindMessage(\"file\").changeFilterUntranslated(true).changeFilterNeedReview(true));\n      prepareActionAndMockLocaleService(action);\n\n      // When:\n      GetTransUnitListResult result = handler.execute(action, null);\n\n      // Then:\n      log.info(\"result: {}\", result);\n      assertThat(result.getDocumentId(), Matchers.equalTo(documentId));\n      assertThat(result.getGotoRow(), Matchers.equalTo(0));\n      assertThat(TestFixture.asIds(result.getUnits()), Matchers.contains(3, 5, 6));\n   }","id":61099,"modified_method":"@Test\n   public void testExecuteForSearch() throws Exception\n   {\n      // Given: we want to search for file (mixed case) in fuzzy and untranslated text flows\n      GetTransUnitList action = GetTransUnitList.newAction(new GetTransUnitActionContext(documentId)\n            .changeFindMessage(\"FiLe\").changeFilterUntranslated(true).changeFilterNeedReview(true));\n      prepareActionAndMockLocaleService(action);\n\n      // When:\n      GetTransUnitListResult result = handler.execute(action, null);\n\n      // Then:\n      log.info(\"result: {}\", result);\n      assertThat(result.getDocumentId(), Matchers.equalTo(documentId));\n      assertThat(result.getGotoRow(), Matchers.equalTo(0));\n      assertThat(TestFixture.asIds(result.getUnits()), Matchers.contains(3, 5, 6, 8));\n   }","commit_id":"e780023023798ae205ae1439e6dcc3653528bace","url":"https://github.com/zanata/zanata-server"},{"original_method":"@Test\n    public void testEmptyRoot() throws Exception {\n        KernelServices kernelServices = createEmptyRoot();\n\n        ModelNode model = kernelServices.readWholeModel(false, true);\n        assertAttribute(model, ModelDescriptionConstants.NAMESPACES, new ModelNode().setEmptyList());\n        assertAttribute(model, ModelDescriptionConstants.SCHEMA_LOCATIONS, new ModelNode().setEmptyList());\n        assertAttribute(model, ModelDescriptionConstants.NAME, new ModelNode(\"Unnamed Domain\"));\n        assertAttribute(model, ModelDescriptionConstants.PRODUCT_NAME, null);\n        assertAttribute(model, ModelDescriptionConstants.PRODUCT_VERSION, null);\n        assertAttribute(model, ModelDescriptionConstants.MANAGEMENT_MAJOR_VERSION, new ModelNode(Version.MANAGEMENT_MAJOR_VERSION));\n        assertAttribute(model, ModelDescriptionConstants.MANAGEMENT_MINOR_VERSION, new ModelNode(Version.MANAGEMENT_MINOR_VERSION));\n        assertAttribute(model, ModelDescriptionConstants.MANAGEMENT_MICRO_VERSION, new ModelNode(Version.MANAGEMENT_MICRO_VERSION));\n        assertAttribute(model, ServerDescriptionConstants.PROCESS_TYPE, new ModelNode(\"Domain Controller\"));\n        assertAttribute(model, ServerDescriptionConstants.LAUNCH_TYPE, new ModelNode(\"DOMAIN\"));\n\n        //These two cannot work in tests - placeholder\n        assertAttribute(model, ModelDescriptionConstants.RELEASE_VERSION, new ModelNode(\"-\"));\n        assertAttribute(model, ModelDescriptionConstants.RELEASE_CODENAME, new ModelNode(\"-\"));\n\n        //Try changing namespaces, schema-locations and name\n    }","id":61100,"modified_method":"@Test\n    public void testEmptyRoot() throws Exception {\n        KernelServices kernelServices = createEmptyRoot();\n\n        ModelNode model = kernelServices.readWholeModel(false, true);\n        assertAttribute(model, ModelDescriptionConstants.NAMESPACES, new ModelNode().setEmptyList());\n        assertAttribute(model, ModelDescriptionConstants.SCHEMA_LOCATIONS, new ModelNode().setEmptyList());\n        assertAttribute(model, ModelDescriptionConstants.NAME, new ModelNode(\"Unnamed Domain\"));\n        assertAttribute(model, ModelDescriptionConstants.PRODUCT_NAME, null);\n        assertAttribute(model, ModelDescriptionConstants.PRODUCT_VERSION, null);\n        assertAttribute(model, ModelDescriptionConstants.MANAGEMENT_MAJOR_VERSION, new ModelNode(Version.MANAGEMENT_MAJOR_VERSION));\n        assertAttribute(model, ModelDescriptionConstants.MANAGEMENT_MINOR_VERSION, new ModelNode(Version.MANAGEMENT_MINOR_VERSION));\n        assertAttribute(model, ModelDescriptionConstants.MANAGEMENT_MICRO_VERSION, new ModelNode(Version.MANAGEMENT_MICRO_VERSION));\n        assertAttribute(model, ServerDescriptionConstants.PROCESS_TYPE, new ModelNode(\"Domain Controller\"));\n        assertAttribute(model, ServerDescriptionConstants.LAUNCH_TYPE, new ModelNode(\"DOMAIN\"));\n\n        //These two cannot work in tests - placeholder\n        assertAttribute(model, ModelDescriptionConstants.RELEASE_VERSION, new ModelNode(\"Unknown\"));\n        assertAttribute(model, ModelDescriptionConstants.RELEASE_CODENAME, new ModelNode(\"Unknown\"));\n\n        //Try changing namespaces, schema-locations and name\n    }","commit_id":"ff45fb40a1f7fe45174997b2e87861c1eab54237","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Test\n    public void testTransformers_1_1_0() throws Exception {\n        System.setProperty(\"org.jboss.as.jpa.testBadExpr\", \"hello\");\n\n        try {\n            ModelVersion oldVersion = ModelVersion.create(1, 1, 0);\n            KernelServicesBuilder builder = createKernelServicesBuilder(null)\n                    .setSubsystemXml(getSubsystemXml());\n            builder.createLegacyKernelServicesBuilder(null, oldVersion)\n                    .setExtensionClassName(JPAExtension.class.getName())\n                    .addMavenResourceURL(\"org.jboss.as:jboss-as-jpa:7.1.2.Final\");\n            KernelServices mainServices = builder.build();\n            KernelServices legacyServices = mainServices.getLegacyServices(oldVersion);\n            Assert.assertNotNull(legacyServices);\n\n            checkSubsystemModelTransformation(mainServices, oldVersion);\n\n            final ModelNode operation = new ModelNode();\n            operation.get(OP).set(WRITE_ATTRIBUTE_OPERATION);\n            operation.get(OP_ADDR).add(SUBSYSTEM, JPAExtension.SUBSYSTEM_NAME);\n            operation.get(NAME).set(JPADefinition.DEFAULT_DATASOURCE.getName());\n            operation.get(VALUE).set(\"${org.jboss.as.jpa.testBadExpr}\");\n\n            final ModelNode mainResult = mainServices.executeOperation(operation);\n            System.out.println(mainResult);\n            Assert.assertTrue(SUCCESS.equals(mainResult.get(OUTCOME).asString()));\n\n            try {\n                mainServices.transformOperation(oldVersion, operation);\n                // legacyServices.executeOperation(operation); would actually work - however it does not understand the expr\n                // so we need to reject the expression on the DC already\n                Assert.fail(\"should reject the expression\");\n            } catch (OperationFailedException e) {\n                // OK\n            }\n        } finally {\n            System.clearProperty(\"org.jboss.as.jpa.testBadExpr\");\n        }\n    }","id":61101,"modified_method":"@Test\n    public void testTransformers_1_1_0() throws Exception {\n        System.setProperty(\"org.jboss.as.jpa.testBadExpr\", \"hello\");\n\n        try {\n            ModelVersion oldVersion = ModelVersion.create(1, 1, 0);\n            KernelServicesBuilder builder = createKernelServicesBuilder(null)\n                    .setSubsystemXml(getSubsystemXml());\n            builder.createLegacyKernelServicesBuilder(null, oldVersion)\n                    .setExtensionClassName(JPAExtension.class.getName())\n                    .addMavenResourceURL(\"org.jboss.as:jboss-as-jpa:7.1.2.Final\");\n            KernelServices mainServices = builder.build();\n            KernelServices legacyServices = mainServices.getLegacyServices(oldVersion);\n            Assert.assertNotNull(legacyServices);\n\n            checkSubsystemModelTransformation(mainServices, oldVersion);\n\n            final ModelNode operation = new ModelNode();\n            operation.get(OP).set(WRITE_ATTRIBUTE_OPERATION);\n            operation.get(OP_ADDR).add(SUBSYSTEM, JPAExtension.SUBSYSTEM_NAME);\n            operation.get(NAME).set(JPADefinition.DEFAULT_DATASOURCE.getName());\n            operation.get(VALUE).set(\"${org.jboss.as.jpa.testBadExpr}\");\n\n            final ModelNode mainResult = mainServices.executeOperation(operation);\n            System.out.println(mainResult);\n            Assert.assertTrue(SUCCESS.equals(mainResult.get(OUTCOME).asString()));\n\n            final OperationTransformer.TransformedOperation op = mainServices.transformOperation(oldVersion, operation);\n            final ModelNode result = mainServices.executeOperation(oldVersion, op);\n            Assert.assertEquals(FAILED, result.get(OUTCOME).asString());\n\n        } finally {\n            System.clearProperty(\"org.jboss.as.jpa.testBadExpr\");\n        }\n    }","commit_id":"ff45fb40a1f7fe45174997b2e87861c1eab54237","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * Execute an operation in the  controller containg the passed in version of the subsystem.\n     * The operation and results will be translated from the format for the main controller to the\n     * legacy controller's format.\n     *\n     * @param modelVersion the subsystem model version of the legacy subsystem model controller\n     * @param op the operation for the main controller\n     * @throws IllegalStateException if this is not the test's main model controller\n     * @throws IllegalStateException if there is no legacy controller containing the version of the subsystem\n     */\n    public ModelNode executeOperation(ModelVersion modelVersion, TransformedOperation op) {\n        ModelTestKernelServices legacy = getLegacyServices(modelVersion);\n        ModelNode result = new ModelNode();\n        if (op.getTransformedOperation() != null) {\n            result = legacy.executeOperation(op.getTransformedOperation());\n        }\n        OperationResultTransformer resultTransformer = op.getResultTransformer();\n        if (resultTransformer != null) {\n            result = resultTransformer.transformResult(result);\n        }\n        return result;\n    }","id":61102,"modified_method":"/**\n     * Execute an operation in the  controller containg the passed in version of the subsystem.\n     * The operation and results will be translated from the format for the main controller to the\n     * legacy controller's format.\n     *\n     * @param modelVersion the subsystem model version of the legacy subsystem model controller\n     * @param op the operation for the main controller\n     * @throws IllegalStateException if this is not the test's main model controller\n     * @throws IllegalStateException if there is no legacy controller containing the version of the subsystem\n     */\n    public ModelNode executeOperation(final ModelVersion modelVersion, final TransformedOperation op) {\n        ModelTestKernelServices legacy = getLegacyServices(modelVersion);\n        ModelNode result = new ModelNode();\n        if (op.getTransformedOperation() != null) {\n            result = legacy.executeOperation(op.getTransformedOperation(), new ModelController.OperationTransactionControl() {\n                    @Override\n                    public void operationPrepared(ModelController.OperationTransaction transaction, ModelNode result) {\n                        if(op.rejectOperation(result)) {\n                            transaction.rollback();\n                        } else {\n                            transaction.commit();\n                        }\n                    }\n                });\n        }\n        OperationResultTransformer resultTransformer = op.getResultTransformer();\n        if (resultTransformer != null) {\n            result = resultTransformer.transformResult(result);\n        }\n        return result;\n    }","commit_id":"ff45fb40a1f7fe45174997b2e87861c1eab54237","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Test\n    public void testRejectExpressionsForTransportParams() throws Exception {\n        String subsystemXml = readResource(\"subsystem_1_3.xml\");\n        KernelServicesBuilder builder = createKernelServicesBuilder(createAdditionalInitialization())\n                .setSubsystemXml(subsystemXml);\n\n        // Add legacy subsystems\n        ModelVersion version_1_1_0 = ModelVersion.create(1, 1, 0);\n        builder.createLegacyKernelServicesBuilder(createAdditionalInitialization(), version_1_1_0)\n            .addMavenResourceURL(\"org.jboss.as:jboss-as-messaging:7.1.2.Final\");\n\n        KernelServices mainServices = builder.build();\n        KernelServices legacyServices = mainServices.getLegacyServices(version_1_1_0);\n        assertNotNull(legacyServices);\n\n        checkSubsystemModelTransformation(mainServices, version_1_1_0);\n\n        ModelNode operation = new ModelNode();\n        operation.get(OP).set(ADD);\n        ModelNode address = new ModelNode();\n        address.add(SUBSYSTEM, MessagingExtension.SUBSYSTEM_NAME);\n        address.add(HORNETQ_SERVER, \"default\");\n        address.add(REMOTE_CONNECTOR, \"netty\");\n        address.add(PARAM, \"password\");\n        operation.get(OP_ADDR).set(address);\n        operation.get(VALUE).set(\"${mypassword:default}\");\n\n        ModelNode mainResult = mainServices.executeOperation(operation);\n        assertEquals(mainResult.toJSONString(true), SUCCESS, mainResult.get(OUTCOME).asString());\n\n        try {\n            TransformedOperation transformedOperation = mainServices.transformOperation(version_1_1_0, operation);\n            fail(\"should reject the expression,instead got \" + transformedOperation.getTransformedOperation().toJSONString(true));\n        } catch (OperationFailedException e) {\n            // OK\n        }\n    }","id":61103,"modified_method":"@Test\n    public void testRejectExpressionsForTransportParams() throws Exception {\n        String subsystemXml = readResource(\"subsystem_1_3.xml\");\n        KernelServicesBuilder builder = createKernelServicesBuilder(createAdditionalInitialization())\n                .setSubsystemXml(subsystemXml);\n\n        // Add legacy subsystems\n        ModelVersion version_1_1_0 = ModelVersion.create(1, 1, 0);\n        builder.createLegacyKernelServicesBuilder(createAdditionalInitialization(), version_1_1_0)\n            .addMavenResourceURL(\"org.jboss.as:jboss-as-messaging:7.1.2.Final\");\n\n        KernelServices mainServices = builder.build();\n        KernelServices legacyServices = mainServices.getLegacyServices(version_1_1_0);\n        assertNotNull(legacyServices);\n\n        checkSubsystemModelTransformation(mainServices, version_1_1_0);\n\n        ModelNode operation = new ModelNode();\n        operation.get(OP).set(ADD);\n        ModelNode address = new ModelNode();\n        address.add(SUBSYSTEM, MessagingExtension.SUBSYSTEM_NAME);\n        address.add(HORNETQ_SERVER, \"default\");\n        address.add(REMOTE_CONNECTOR, \"netty\");\n        address.add(PARAM, \"password\");\n        operation.get(OP_ADDR).set(address);\n        operation.get(VALUE).set(\"${mypassword:default}\");\n\n        ModelNode mainResult = mainServices.executeOperation(operation);\n        assertEquals(mainResult.toJSONString(true), SUCCESS, mainResult.get(OUTCOME).asString());\n\n        TransformedOperation transformedOperation = mainServices.transformOperation(version_1_1_0, operation);\n        final ModelNode result = mainServices.executeOperation(version_1_1_0, transformedOperation);\n        Assert.assertEquals(\"should reject the expression\", FAILED, result.get(OUTCOME).asString());\n\n    }","commit_id":"ff45fb40a1f7fe45174997b2e87861c1eab54237","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Test\n    public void testTransformers() throws Exception {\n        String subsystemXml = readResource(\"subsystem_1_3.xml\");\n        KernelServicesBuilder builder = createKernelServicesBuilder(createAdditionalInitialization())\n                .setSubsystemXml(subsystemXml);\n\n        // Add legacy subsystems\n        ModelVersion version_1_1_0 = ModelVersion.create(1, 1, 0);\n        builder.createLegacyKernelServicesBuilder(createAdditionalInitialization(), version_1_1_0)\n            .addMavenResourceURL(\"org.jboss.as:jboss-as-messaging:7.1.2.Final\");\n\n        KernelServices mainServices = builder.build();\n        KernelServices legacyServices = mainServices.getLegacyServices(version_1_1_0);\n        assertNotNull(legacyServices);\n\n        checkSubsystemModelTransformation(mainServices, version_1_1_0);\n\n        ModelNode operation = new ModelNode();\n        operation.get(OP).set(WRITE_ATTRIBUTE_OPERATION);\n        ModelNode address = new ModelNode();\n        address.add(SUBSYSTEM, MessagingExtension.SUBSYSTEM_NAME);\n        address.add(\"hornetq-server\", \"default\");\n        address.add(\"path\", \"journal-directory\");\n        operation.get(OP_ADDR).set(address);\n        operation.get(NAME).set(\"path\");\n        operation.get(VALUE).set(\"${my.journal.dir:journal}\");\n\n        ModelNode mainResult = mainServices.executeOperation(operation);\n        assertEquals(mainResult.toJSONString(true), SUCCESS, mainResult.get(OUTCOME).asString());\n\n        ModelNode successResult = new ModelNode();\n        successResult.get(OUTCOME).set(SUCCESS);\n        successResult.protect();\n        ModelNode failedResult = new ModelNode();\n        failedResult.get(OUTCOME).set(FAILED);\n        failedResult.protect();\n        ModelNode ignoreResult = new ModelNode();\n        ignoreResult.get(OUTCOME).set(IGNORED);\n        ignoreResult.protect();\n\n        try {\n            TransformedOperation transformedOperation = mainServices.transformOperation(version_1_1_0, operation);\n            // legacyServices.executeOperation(operation); would actually work - however it does not understand the expr\n            // so we need to reject the expression on the DC already\n            fail(\"should reject the expression,instead got \" + transformedOperation.getTransformedOperation().toJSONString(true));\n        } catch (OperationFailedException e) {\n            // OK\n        }\n        // TODO replace try/catch above with the below once RejectExpressionValuesTransformer is fixed\n//        TransformedOperation transformedOperation = mainServices.transformOperation(version_1_1_0, operation);\n//        ModelNode transformedResult = transformedOperation.getResultTransformer().transformResult(successResult);\n//        assertEquals(\"success transformed to failed\", FAILED, transformedResult.get(OUTCOME).asString());\n//        transformedResult = transformedOperation.getResultTransformer().transformResult(successResult);\n//        assertEquals(\"failed transformed to failed\", FAILED, transformedResult.get(OUTCOME).asString());\n//        assertTrue(\"failed transformed with failure description\", transformedResult.hasDefined(FAILURE_DESCRIPTION));\n//        transformedResult = transformedOperation.getResultTransformer().transformResult(ignoreResult);\n//        assertEquals(\"ignored result untransformed\", IGNORED, transformedResult.get(OUTCOME).asString());\n\n        operation = new ModelNode();\n        operation.get(OP).set(WRITE_ATTRIBUTE_OPERATION);\n        address = new ModelNode();\n        address.add(SUBSYSTEM, MessagingExtension.SUBSYSTEM_NAME);\n        address.add(HORNETQ_SERVER, \"default\");\n        address.add(POOLED_CONNECTION_FACTORY, \"hornetq-ra-local\");\n        operation.get(OP_ADDR).set(address);\n        operation.get(NAME).set(\"use-auto-recovery\");\n        operation.get(VALUE).set(\"false\");\n\n        mainResult = mainServices.executeOperation(operation);\n        assertEquals(mainResult.toJSONString(true), SUCCESS, mainResult.get(OUTCOME).asString());\n\n        TransformedOperation transformedOperation = mainServices.transformOperation(version_1_1_0, operation);\n        ModelNode transformedResult = transformedOperation.getResultTransformer().transformResult(successResult);\n        assertEquals(\"success transformed to failed\", FAILED, transformedResult.get(OUTCOME).asString());\n        transformedResult = transformedOperation.getResultTransformer().transformResult(successResult);\n        assertEquals(\"failed transformed to failed\", FAILED, transformedResult.get(OUTCOME).asString());\n        assertTrue(\"failed transformed with failure description\", transformedResult.hasDefined(FAILURE_DESCRIPTION));\n        transformedResult = transformedOperation.getResultTransformer().transformResult(ignoreResult);\n        assertEquals(\"ignored result untransformed\", IGNORED, transformedResult.get(OUTCOME).asString());\n    }","id":61104,"modified_method":"@Test\n    public void testTransformers() throws Exception {\n        String subsystemXml = readResource(\"subsystem_1_3.xml\");\n        KernelServicesBuilder builder = createKernelServicesBuilder(createAdditionalInitialization())\n                .setSubsystemXml(subsystemXml);\n\n        // Add legacy subsystems\n        ModelVersion version_1_1_0 = ModelVersion.create(1, 1, 0);\n        builder.createLegacyKernelServicesBuilder(createAdditionalInitialization(), version_1_1_0)\n            .addMavenResourceURL(\"org.jboss.as:jboss-as-messaging:7.1.2.Final\");\n\n        KernelServices mainServices = builder.build();\n        KernelServices legacyServices = mainServices.getLegacyServices(version_1_1_0);\n        assertNotNull(legacyServices);\n\n        checkSubsystemModelTransformation(mainServices, version_1_1_0);\n\n        ModelNode operation = new ModelNode();\n        operation.get(OP).set(WRITE_ATTRIBUTE_OPERATION);\n        ModelNode address = new ModelNode();\n        address.add(SUBSYSTEM, MessagingExtension.SUBSYSTEM_NAME);\n        address.add(\"hornetq-server\", \"default\");\n        address.add(\"path\", \"journal-directory\");\n        operation.get(OP_ADDR).set(address);\n        operation.get(NAME).set(\"path\");\n        operation.get(VALUE).set(\"${my.journal.dir:journal}\");\n\n        ModelNode mainResult = mainServices.executeOperation(operation);\n        assertEquals(mainResult.toJSONString(true), SUCCESS, mainResult.get(OUTCOME).asString());\n\n        ModelNode successResult = new ModelNode();\n        successResult.get(OUTCOME).set(SUCCESS);\n        successResult.protect();\n        ModelNode failedResult = new ModelNode();\n        failedResult.get(OUTCOME).set(FAILED);\n        failedResult.protect();\n        ModelNode ignoreResult = new ModelNode();\n        ignoreResult.get(OUTCOME).set(IGNORED);\n        ignoreResult.protect();\n\n        final OperationTransformer.TransformedOperation op = mainServices.transformOperation(version_1_1_0, operation);\n        final ModelNode result = mainServices.executeOperation(version_1_1_0, op);\n        Assert.assertEquals(\"should reject the expression\", FAILED, result.get(OUTCOME).asString());\n\n        operation = new ModelNode();\n        operation.get(OP).set(WRITE_ATTRIBUTE_OPERATION);\n        address = new ModelNode();\n        address.add(SUBSYSTEM, MessagingExtension.SUBSYSTEM_NAME);\n        address.add(HORNETQ_SERVER, \"default\");\n        address.add(POOLED_CONNECTION_FACTORY, \"hornetq-ra-local\");\n        operation.get(OP_ADDR).set(address);\n        operation.get(NAME).set(\"use-auto-recovery\");\n        operation.get(VALUE).set(\"false\");\n\n        mainResult = mainServices.executeOperation(operation);\n        assertEquals(mainResult.toJSONString(true), SUCCESS, mainResult.get(OUTCOME).asString());\n\n        TransformedOperation transformedOperation = mainServices.transformOperation(version_1_1_0, operation);\n        ModelNode transformedResult = transformedOperation.getResultTransformer().transformResult(successResult);\n        assertEquals(\"success transformed to failed\", FAILED, transformedResult.get(OUTCOME).asString());\n        transformedResult = transformedOperation.getResultTransformer().transformResult(successResult);\n        assertEquals(\"failed transformed to failed\", FAILED, transformedResult.get(OUTCOME).asString());\n        assertTrue(\"failed transformed with failure description\", transformedResult.hasDefined(FAILURE_DESCRIPTION));\n        transformedResult = transformedOperation.getResultTransformer().transformResult(ignoreResult);\n        assertEquals(\"ignored result untransformed\", IGNORED, transformedResult.get(OUTCOME).asString());\n    }","commit_id":"ff45fb40a1f7fe45174997b2e87861c1eab54237","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * Execute an operation in the model controller\n     *\n     * @param operation the operation to execute\n     * @param inputStream Input Streams for the operation\n     * @return the whole result of the operation\n     */\n    public ModelNode executeOperation(ModelNode operation, InputStream...inputStreams) {\n        if (inputStreams.length == 0) {\n            return controller.execute(operation, null, OperationTransactionControl.COMMIT, null);\n        } else {\n            ExecutorService executor = Executors.newCachedThreadPool();\n            try {\n                ModelControllerClient client = controller.createClient(executor);\n                OperationBuilder builder = OperationBuilder.create(operation);\n                for (InputStream in : inputStreams) {\n                    builder.addInputStream(in);\n                }\n                Operation op = builder.build();\n\n                try {\n                    return client.execute(op);\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            } finally {\n                executor.shutdownNow();\n            }\n        }\n    }","id":61105,"modified_method":"/**\n     * Execute an operation in the model controller\n     *\n     * @param operation the operation to execute\n     * @param inputStream Input Streams for the operation\n     * @return the whole result of the operation\n     */\n    public ModelNode executeOperation(ModelNode operation, InputStream...inputStreams) {\n        if (inputStreams.length == 0) {\n            return executeOperation(operation, OperationTransactionControl.COMMIT);\n        } else {\n            ExecutorService executor = Executors.newCachedThreadPool();\n            try {\n                ModelControllerClient client = controller.createClient(executor);\n                OperationBuilder builder = OperationBuilder.create(operation);\n                for (InputStream in : inputStreams) {\n                    builder.addInputStream(in);\n                }\n                Operation op = builder.build();\n\n                try {\n                    return client.execute(op);\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            } finally {\n                executor.shutdownNow();\n            }\n        }\n    }","commit_id":"ff45fb40a1f7fe45174997b2e87861c1eab54237","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Test\n    public void testEmptyRoot() throws Exception {\n        KernelServices kernelServices = createEmptyRoot();\n\n        ModelNode model = kernelServices.readWholeModel(false, true);\n        assertAttribute(model, ModelDescriptionConstants.NAMESPACES, new ModelNode().setEmptyList());\n        assertAttribute(model, ModelDescriptionConstants.SCHEMA_LOCATIONS, new ModelNode().setEmptyList());\n        assertAttribute(model, ModelDescriptionConstants.NAME, new ModelNode(getDefaultServerName()));\n        assertAttribute(model, ModelDescriptionConstants.PRODUCT_NAME, null);\n        assertAttribute(model, ModelDescriptionConstants.PRODUCT_VERSION, null);\n        assertAttribute(model, ModelDescriptionConstants.MANAGEMENT_MAJOR_VERSION, new ModelNode(Version.MANAGEMENT_MAJOR_VERSION));\n        assertAttribute(model, ModelDescriptionConstants.MANAGEMENT_MINOR_VERSION, new ModelNode(Version.MANAGEMENT_MINOR_VERSION));\n        assertAttribute(model, ModelDescriptionConstants.MANAGEMENT_MICRO_VERSION, new ModelNode(Version.MANAGEMENT_MICRO_VERSION));\n        assertAttribute(model, ServerDescriptionConstants.PROCESS_STATE, new ModelNode(\"running\"));\n        assertAttribute(model, ServerDescriptionConstants.PROCESS_TYPE, new ModelNode(\"Server\"));\n        assertAttribute(model, ServerDescriptionConstants.LAUNCH_TYPE, new ModelNode(\"STANDALONE\"));\n\n        //These two cannot work in tests - placeholder\n        assertAttribute(model, ModelDescriptionConstants.RELEASE_VERSION, new ModelNode(\"-\"));\n        assertAttribute(model, ModelDescriptionConstants.RELEASE_CODENAME, new ModelNode(\"-\"));\n\n\n        //Try changing namespaces, schema-locations and name\n    }","id":61106,"modified_method":"@Test\n    public void testEmptyRoot() throws Exception {\n        KernelServices kernelServices = createEmptyRoot();\n\n        ModelNode model = kernelServices.readWholeModel(false, true);\n        assertAttribute(model, ModelDescriptionConstants.NAMESPACES, new ModelNode().setEmptyList());\n        assertAttribute(model, ModelDescriptionConstants.SCHEMA_LOCATIONS, new ModelNode().setEmptyList());\n        assertAttribute(model, ModelDescriptionConstants.NAME, new ModelNode(getDefaultServerName()));\n        assertAttribute(model, ModelDescriptionConstants.PRODUCT_NAME, null);\n        assertAttribute(model, ModelDescriptionConstants.PRODUCT_VERSION, null);\n        assertAttribute(model, ModelDescriptionConstants.MANAGEMENT_MAJOR_VERSION, new ModelNode(Version.MANAGEMENT_MAJOR_VERSION));\n        assertAttribute(model, ModelDescriptionConstants.MANAGEMENT_MINOR_VERSION, new ModelNode(Version.MANAGEMENT_MINOR_VERSION));\n        assertAttribute(model, ModelDescriptionConstants.MANAGEMENT_MICRO_VERSION, new ModelNode(Version.MANAGEMENT_MICRO_VERSION));\n        assertAttribute(model, ServerDescriptionConstants.PROCESS_STATE, new ModelNode(\"running\"));\n        assertAttribute(model, ServerDescriptionConstants.PROCESS_TYPE, new ModelNode(\"Server\"));\n        assertAttribute(model, ServerDescriptionConstants.LAUNCH_TYPE, new ModelNode(\"STANDALONE\"));\n\n        //These two cannot work in tests - placeholder\n        assertAttribute(model, ModelDescriptionConstants.RELEASE_VERSION, new ModelNode(\"Unknown\"));\n        assertAttribute(model, ModelDescriptionConstants.RELEASE_CODENAME, new ModelNode(\"Unknown\"));\n\n\n        //Try changing namespaces, schema-locations and name\n    }","commit_id":"ff45fb40a1f7fe45174997b2e87861c1eab54237","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Test\n    public void testTransformers() throws Exception {\n        String subsystemXml = readResource(\"subsystem.xml\");\n        ModelVersion modelVersion = ModelVersion.create(1, 1, 0);\n        //Use the non-runtime version of the extension which will happen on the HC\n        KernelServicesBuilder builder = createKernelServicesBuilder(AdditionalInitialization.MANAGEMENT)\n                .setSubsystemXml(subsystemXml);\n\n        // Add legacy subsystems\n        builder.createLegacyKernelServicesBuilder(null, modelVersion)\n            .addMavenResourceURL(\"org.jboss.as:jboss-as-transactions:7.1.2.Final\");\n\n        KernelServices mainServices = builder.build();\n        KernelServices legacyServices = mainServices.getLegacyServices(modelVersion);\n        Assert.assertNotNull(legacyServices);\n\n        checkSubsystemModelTransformation(mainServices, modelVersion);\n\n        final ModelNode operation = new ModelNode();\n        operation.get(OP).set(WRITE_ATTRIBUTE_OPERATION);\n        operation.get(OP_ADDR).add(SUBSYSTEM, TransactionExtension.SUBSYSTEM_NAME);\n        operation.get(NAME).set(\"status-socket-binding\");\n        operation.get(VALUE).set(\"${org.jboss.test:default-socket-binding}\");\n\n        final ModelNode mainResult = mainServices.executeOperation(operation);\n        Assert.assertTrue(SUCCESS.equals(mainResult.get(OUTCOME).asString()));\n\n        try {\n            mainServices.transformOperation(modelVersion, operation);\n            // legacyServices.executeOperation(operation); would actually work - however it does not understand the expr\n            // so we need to reject the expression on the DC already\n            Assert.fail(\"should reject the expression\");\n        } catch (OperationFailedException e) {\n            // OK\n        }\n    }","id":61107,"modified_method":"@Test\n    public void testTransformers() throws Exception {\n        String subsystemXml = readResource(\"subsystem.xml\");\n        ModelVersion modelVersion = ModelVersion.create(1, 1, 0);\n        //Use the non-runtime version of the extension which will happen on the HC\n        KernelServicesBuilder builder = createKernelServicesBuilder(AdditionalInitialization.MANAGEMENT)\n                .setSubsystemXml(subsystemXml);\n\n        // Add legacy subsystems\n        builder.createLegacyKernelServicesBuilder(null, modelVersion)\n            .addMavenResourceURL(\"org.jboss.as:jboss-as-transactions:7.1.2.Final\");\n\n        KernelServices mainServices = builder.build();\n        KernelServices legacyServices = mainServices.getLegacyServices(modelVersion);\n        Assert.assertNotNull(legacyServices);\n\n        checkSubsystemModelTransformation(mainServices, modelVersion);\n\n        final ModelNode operation = new ModelNode();\n        operation.get(OP).set(WRITE_ATTRIBUTE_OPERATION);\n        operation.get(OP_ADDR).add(SUBSYSTEM, TransactionExtension.SUBSYSTEM_NAME);\n        operation.get(NAME).set(\"status-socket-binding\");\n        operation.get(VALUE).set(\"${org.jboss.test:default-socket-binding}\");\n\n        final ModelNode mainResult = mainServices.executeOperation(operation);\n        Assert.assertTrue(SUCCESS.equals(mainResult.get(OUTCOME).asString()));\n\n        final OperationTransformer.TransformedOperation op = mainServices.transformOperation(modelVersion, operation);\n        ModelNode result = mainServices.executeOperation(modelVersion, op);\n        Assert.assertEquals(FAILED, result.get(OUTCOME).asString());\n\n    }","commit_id":"ff45fb40a1f7fe45174997b2e87861c1eab54237","url":"https://github.com/wildfly/wildfly"},{"original_method":"private void registerTransformers1_0_0(SubsystemRegistration registration) {\n        // Register the transformers\n        final TransformersSubRegistration transformers = registration.registerModelTransformers(ModelVersion.create(1, 0, 0), new ResourceTransformer() {\n            @Override\n            public void transformResource(ResourceTransformationContext context, PathAddress address, Resource resource) throws OperationFailedException {\n                ModelNode model = resource.getModel();\n\n                //The existance of the expose-model=>resolved child is translated into the show-model=>true attribute\n                Resource exposeResolvedResource = resource.getChild(PathElement.pathElement(CommonAttributes.EXPOSE_MODEL, CommonAttributes.RESOLVED));\n                boolean showModel = false;\n                if (exposeResolvedResource != null) {\n                     showModel = model.isDefined();\n                }\n                model.get(CommonAttributes.SHOW_MODEL).set(showModel);\n                ResourceTransformationContext childContext = context.addTransformedResource(PathAddress.EMPTY_ADDRESS, resource);\n\n                //Process all the child resources skipping the expose-model=>* children\n                for (String type :resource.getChildTypes()) {\n                    if (!type.equals(CommonAttributes.EXPOSE_MODEL)) {\n                        for (ResourceEntry child : resource.getChildren(type)) {\n                            childContext.processChild(child.getPathElement(), child);\n                        }\n                    }\n                }\n            }\n        });\n\n\n        TransformersSubRegistration expressions = transformers.registerSubResource(ExposeModelResourceExpression.INSTANCE.getPathElement());\n\n        expressions.discardOperations(ADD, REMOVE, WRITE_ATTRIBUTE_OPERATION, READ_ATTRIBUTE_OPERATION);\n\n        TransformersSubRegistration resolved = transformers.registerSubResource(ExposeModelResourceResolved.INSTANCE.getPathElement());\n        resolved.discardOperations(WRITE_ATTRIBUTE_OPERATION);\n        resolved.registerOperationTransformer(ADD, new AbstractOperationTransformer() {\n            @Override\n            protected ModelNode transform(TransformationContext context, PathAddress address, ModelNode operation) {\n                ModelNode node = new ModelNode();\n                node.get(OP).set(WRITE_ATTRIBUTE_OPERATION);\n                node.get(OP_ADDR).set(address.subAddress(0, address.size() - 1).toModelNode());\n                node.get(NAME).set(CommonAttributes.SHOW_MODEL);\n                node.get(VALUE).set(true);\n                return node;\n            }\n        });\n\n        resolved.registerOperationTransformer(REMOVE, new AbstractOperationTransformer() {\n            @Override\n            protected ModelNode transform(TransformationContext context, PathAddress address, ModelNode operation) {\n                ModelNode node = new ModelNode();\n                node.get(OP).set(WRITE_ATTRIBUTE_OPERATION);\n                node.get(OP_ADDR).set(address.subAddress(0, address.size() - 1).toModelNode());\n                node.get(NAME).set(CommonAttributes.SHOW_MODEL);\n                node.get(VALUE).set(false);\n                return node;\n            }\n        });\n        resolved.registerOperationTransformer(READ_ATTRIBUTE_OPERATION, new OperationTransformer() {\n\n            @Override\n            public TransformedOperation transformOperation(final TransformationContext context, final PathAddress address, final ModelNode operation) {\n                return new TransformedOperation(null, new OperationResultTransformer() {\n                    @Override\n                    public ModelNode transformResult(ModelNode result) {\n                        if (operation.get(NAME).asString().equals(CommonAttributes.DOMAIN_NAME)) {\n                            result.get(RESULT).set(CommonAttributes.DEFAULT_RESOLVED_DOMAIN);\n                        }\n                        result.get(OUTCOME).set(SUCCESS);\n                        result.get(RESULT);\n                        return result;\n                    }\n                });\n            }\n        });\n\n        RejectExpressionValuesTransformer rejectTransformer = new RejectExpressionValuesTransformer(RemotingConnectorResource.USE_MANAGEMENT_ENDPOINT);\n        TransformersSubRegistration remoting = transformers.registerSubResource(RemotingConnectorResource.REMOTE_CONNECTOR_CONFIG_PATH,\n                (ResourceTransformer) rejectTransformer);\n        remoting.registerOperationTransformer(ADD, rejectTransformer);\n        remoting.registerOperationTransformer(WRITE_ATTRIBUTE_OPERATION, rejectTransformer.getWriteAttributeTransformer());\n    }","id":61108,"modified_method":"private void registerTransformers1_0_0(SubsystemRegistration registration) {\n\n        ResourceTransformationDescriptionBuilder builder = TransformationDescriptionBuilder.Factory.createSubsystemInstance();\n        builder.setCustomResourceTransformer(new ResourceTransformer() {\n            @Override\n            public void transformResource(ResourceTransformationContext context, PathAddress address, Resource resource)\n                    throws OperationFailedException {\n                ModelNode model = resource.getModel();\n\n                // The existance of the expose-model=>resolved child is\n                // translated into the show-model=>true attribute\n                Resource exposeResolvedResource = resource.getChild(PathElement.pathElement(CommonAttributes.EXPOSE_MODEL, CommonAttributes.RESOLVED));\n                boolean showModel = false;\n                if (exposeResolvedResource != null) {\n                    showModel = model.isDefined();\n                }\n                model.get(CommonAttributes.SHOW_MODEL).set(showModel);\n                ResourceTransformationContext childContext = context.addTransformedResource(PathAddress.EMPTY_ADDRESS, resource);\n\n                // Process all the child resources skipping the expose-model=>*\n                // children\n                for (String type : resource.getChildTypes()) {\n                    if (!type.equals(CommonAttributes.EXPOSE_MODEL)) {\n                        for (ResourceEntry child : resource.getChildren(type)) {\n                            childContext.processChild(child.getPathElement(), child);\n                        }\n                    }\n                }\n            }\n        });\n        builder.rejectChildResource(PathElement.pathElement(CommonAttributes.EXPOSE_MODEL, CommonAttributes.EXPRESSION));\n        ResourceTransformationDescriptionBuilder resolvedBuilder = builder.addChildResource(PathElement.pathElement(CommonAttributes.EXPOSE_MODEL, CommonAttributes.RESOLVED));\n        resolvedBuilder.getAttributeBuilder()\n            .addRejectCheck(RejectAttributeChecker.SIMPLE_EXPRESSIONS, CommonAttributes.DOMAIN_NAME, CommonAttributes.PROPER_PROPERTY_FORMAT)\n            .addRejectCheck(new RejectAttributeChecker.DefaultRejectAttributeChecker() {\n                @Override\n                public String getRejectionLogMessage(Map<String, ModelNode> attributes) {\n                    return JmxMessages.MESSAGES.domainNameMustBeJBossAs();\n                }\n\n                @Override\n                protected boolean rejectAttribute(PathAddress address, String attributeName, ModelNode attributeValue,\n                        TransformationContext context) {\n                    return attributeValue.isDefined() && !attributeValue.asString().equals(\"jboss.as\");\n                }\n            }, CommonAttributes.DOMAIN_NAME)\n            .addRejectCheck(new RejectAttributeChecker.DefaultRejectAttributeChecker() {\n                @Override\n                public String getRejectionLogMessage(Map<String, ModelNode> attributes) {\n                    return JmxMessages.MESSAGES.properPropertyFormatMustBeFalse();\n                }\n\n                @Override\n                public boolean rejectOperationParameter(PathAddress address, String attributeName, ModelNode attributeValue,\n                        ModelNode operation, TransformationContext context) {\n                    if (operation.get(OP).asString().equals(REMOVE)) {\n                        return false;\n                    }\n                    return super.rejectOperationParameter(address, attributeName, attributeValue, operation, context);\n                }\n\n                @Override\n                protected boolean rejectAttribute(PathAddress address, String attributeName, ModelNode attributeValue,\n                        TransformationContext context) {\n                    return !attributeValue.isDefined() || (attributeValue.getType() == ModelType.BOOLEAN && attributeValue.asBoolean());\n                }\n            }, CommonAttributes.PROPER_PROPERTY_FORMAT);\n        resolvedBuilder.setCustomResourceTransformer(ResourceTransformer.DISCARD);\n        resolvedBuilder.addOperationTransformationOverride(ADD).inheritResourceAttributeDefinitions().setCustomOperationTransformer(new ResolvedOperationTransformer(true));\n        resolvedBuilder.addOperationTransformationOverride(REMOVE).inheritResourceAttributeDefinitions().setCustomOperationTransformer(new ResolvedOperationTransformer(false));\n        //No need to do write-attribute and undefine-attribute, null becomes true and any other value than 'jboss.as' is rejected\n        resolvedBuilder.addOperationTransformationOverride(UNDEFINE_ATTRIBUTE_OPERATION).inheritResourceAttributeDefinitions().setCustomOperationTransformer(OperationTransformer.DISCARD);\n        resolvedBuilder.addOperationTransformationOverride(WRITE_ATTRIBUTE_OPERATION).inheritResourceAttributeDefinitions().setCustomOperationTransformer(OperationTransformer.DISCARD);\n        resolvedBuilder.addOperationTransformationOverride(READ_ATTRIBUTE_OPERATION).setCustomOperationTransformer(new OperationTransformer() {\n            @Override\n            public TransformedOperation transformOperation(final TransformationContext context, final PathAddress address, final ModelNode operation)\n                    throws OperationFailedException {\n                return new TransformedOperation(null, new OperationResultTransformer() {\n\n                    @Override\n                    public ModelNode transformResult(ModelNode result) {\n                        if (operation.get(NAME).asString().equals(CommonAttributes.DOMAIN_NAME)) {\n                            result.get(RESULT).set(CommonAttributes.DEFAULT_RESOLVED_DOMAIN);\n                        }\n                        result.get(OUTCOME).set(SUCCESS);\n                        result.get(RESULT);\n                        return result;\n                    }\n                });\n            }\n        });\n        builder.addChildResource(RemotingConnectorResource.REMOTE_CONNECTOR_CONFIG_PATH)\n            .getAttributeBuilder()\n                .addRejectCheck(RejectAttributeChecker.SIMPLE_EXPRESSIONS, RemotingConnectorResource.USE_MANAGEMENT_ENDPOINT);\n\n        TransformationDescription.Tools.register(builder.build(), registration, ModelVersion.create(1, 0, 0));\n    }","commit_id":"b30bb2e4327efefd3d87fb708911d272d14cbec2","url":"https://github.com/wildfly/wildfly"},{"original_method":"private void testTransformation_1_0_0(String mavenGAV) throws Exception {\n        String subsystemXml =\n                \"<subsystem xmlns=\\\"\" + Namespace.CURRENT.getUriString() + \"\\\">\" +\n                \"   <expose-resolved-model domain-name=\\\"jboss.RESOLVED\\\"/>\" +\n                \"   <expose-expression-model domain-name=\\\"jboss.EXPRESSION\\\"/>\" +\n                \"   <remoting-connector />\" +\n                \"<\/subsystem>\";\n\n        ModelVersion oldVersion = ModelVersion.create(1, 0, 0);\n        KernelServicesBuilder builder = createKernelServicesBuilder(new BaseAdditionalInitalization())\n                .setSubsystemXml(subsystemXml);\n        builder.createLegacyKernelServicesBuilder(null, oldVersion)\n                .setExtensionClassName(JMXExtension.class.getName())\n                .addMavenResourceURL(mavenGAV)\n                //TODO https://issues.jboss.org/browse/AS7-6530\n                .skipReverseControllerCheck();\n\n        KernelServices mainServices = builder.build();\n        KernelServices legacyServices = mainServices.getLegacyServices(oldVersion);\n        Assert.assertNotNull(legacyServices);\n\n\n        ModelNode legacyModel = checkSubsystemModelTransformation(mainServices, oldVersion);\n        check_1_0_0_Model(legacyModel.get(SUBSYSTEM, JMXExtension.SUBSYSTEM_NAME), true, true);\n\n        //Test that show-model=>expression is ignored\n        ModelNode op = createOperation(WRITE_ATTRIBUTE_OPERATION, CommonAttributes.EXPOSE_MODEL, CommonAttributes.EXPRESSION);\n        op.get(NAME).set(CommonAttributes.DOMAIN_NAME);\n        op.get(VALUE).set(\"discarded\");\n        TransformedOperation transformedOp = mainServices.transformOperation(oldVersion, op);\n        Assert.assertNull(transformedOp.getTransformedOperation());\n\n        op = createOperation(READ_ATTRIBUTE_OPERATION, CommonAttributes.EXPOSE_MODEL, CommonAttributes.EXPRESSION);\n        op.get(NAME).set(CommonAttributes.DOMAIN_NAME);\n        transformedOp = mainServices.transformOperation(oldVersion, op);\n        Assert.assertNull(transformedOp.getTransformedOperation());\n\n        op = createOperation(ADD, CommonAttributes.EXPOSE_MODEL, CommonAttributes.EXPRESSION);\n        transformedOp = mainServices.transformOperation(oldVersion, op);\n        Assert.assertNull(transformedOp.getTransformedOperation());\n\n        op = createOperation(REMOVE, CommonAttributes.EXPOSE_MODEL, CommonAttributes.EXPRESSION);\n        transformedOp = mainServices.transformOperation(oldVersion, op);\n        Assert.assertNull(transformedOp.getTransformedOperation());\n\n        //Test the show-model=>resolved is converted\n        op = createOperation(WRITE_ATTRIBUTE_OPERATION, CommonAttributes.EXPOSE_MODEL, CommonAttributes.RESOLVED);\n        op.get(NAME).set(CommonAttributes.DOMAIN_NAME);\n        op.get(VALUE).set(\"discarded\");\n        final TransformedOperation operation = mainServices.transformOperation(oldVersion, op);\n        Assert.assertNotNull(operation);\n        Assert.assertNull(operation.getTransformedOperation());\n\n        op = createOperation(READ_ATTRIBUTE_OPERATION, CommonAttributes.EXPOSE_MODEL, CommonAttributes.RESOLVED);\n        op.get(NAME).set(CommonAttributes.DOMAIN_NAME);\n        transformedOp = mainServices.transformOperation(oldVersion, op);\n        Assert.assertNull(transformedOp.getTransformedOperation());\n        Assert.assertEquals(CommonAttributes.DEFAULT_RESOLVED_DOMAIN, mainServices.executeOperation(oldVersion, transformedOp).get(RESULT).asString());\n\n        op = createOperation(REMOVE, CommonAttributes.EXPOSE_MODEL, CommonAttributes.RESOLVED);\n        transformedOp = mainServices.transformOperation(oldVersion, op);\n        checkOutcome(mainServices.executeOperation(op));\n        checkOutcome(mainServices.executeOperation(oldVersion, transformedOp));\n        legacyModel = checkSubsystemModelTransformation(mainServices, oldVersion);\n        check_1_0_0_Model(legacyModel.get(SUBSYSTEM, getMainSubsystemName()), true, false);\n\n\n        op = createOperation(ADD, CommonAttributes.EXPOSE_MODEL, CommonAttributes.RESOLVED);\n        transformedOp = mainServices.transformOperation(oldVersion, op);\n        checkOutcome(mainServices.executeOperation(op));\n        checkOutcome(mainServices.executeOperation(oldVersion, transformedOp));\n        legacyModel = checkSubsystemModelTransformation(mainServices, oldVersion);\n        check_1_0_0_Model(legacyModel.get(SUBSYSTEM, getMainSubsystemName()), true, true);\n\n    }","id":61109,"modified_method":"private void testTransformation_1_0_0(String mavenGAV) throws Exception {\n        String subsystemXml =\n                \"<subsystem xmlns=\\\"\" + Namespace.CURRENT.getUriString() + \"\\\">\" +\n                \"   <expose-resolved-model domain-name=\\\"jboss.as\\\" proper-property-format=\\\"false\\\"/>\" +\n                \"   <remoting-connector />\" +\n                \"<\/subsystem>\";\n\n        ModelVersion oldVersion = ModelVersion.create(1, 0, 0);\n        KernelServicesBuilder builder = createKernelServicesBuilder(new BaseAdditionalInitalization())\n                .setSubsystemXml(subsystemXml);\n        builder.createLegacyKernelServicesBuilder(null, oldVersion)\n                .setExtensionClassName(JMXExtension.class.getName())\n                .addMavenResourceURL(mavenGAV)\n                .configureReverseControllerCheck(AdditionalInitialization.MANAGEMENT, new ModelFixer() {\n                    @Override\n                    public ModelNode fixModel(ModelNode modelNode) {\n                        //This is slightly weird...\n                        //The reason is that in 7.2 the default behaviour is 'true' which is the a new feature, while 7.1.x uses 'false' under the scenes\n                        //So the ops from 7.1.x can never result in 'true'\n                        modelNode.get(CommonAttributes.EXPOSE_MODEL, CommonAttributes.RESOLVED, CommonAttributes.PROPER_PROPERTY_FORMAT).set(false);\n                        return modelNode;\n                    }\n                });\n\n        KernelServices mainServices = builder.build();\n        KernelServices legacyServices = mainServices.getLegacyServices(oldVersion);\n        Assert.assertNotNull(legacyServices);\n\n\n        ModelNode legacyModel = checkSubsystemModelTransformation(mainServices, oldVersion);\n        check_1_0_0_Model(legacyModel.get(SUBSYSTEM, JMXExtension.SUBSYSTEM_NAME), true, true);\n\n        //Test that show-model=>expression is ignored\n        ModelNode op = createOperation(ADD, CommonAttributes.EXPOSE_MODEL, CommonAttributes.EXPRESSION);\n        TransformedOperation transformedOp = mainServices.transformOperation(oldVersion, op);\n        Assert.assertTrue(transformedOp.rejectOperation(null));\n\n        op = createOperation(WRITE_ATTRIBUTE_OPERATION, CommonAttributes.EXPOSE_MODEL, CommonAttributes.EXPRESSION);\n        op.get(NAME).set(CommonAttributes.DOMAIN_NAME);\n        op.get(VALUE).set(\"discarded\");\n        transformedOp = mainServices.transformOperation(oldVersion, op);\n        Assert.assertTrue(transformedOp.rejectOperation(null));\n\n        op = createOperation(READ_ATTRIBUTE_OPERATION, CommonAttributes.EXPOSE_MODEL, CommonAttributes.EXPRESSION);\n        op.get(NAME).set(CommonAttributes.DOMAIN_NAME);\n        transformedOp = mainServices.transformOperation(oldVersion, op);\n        Assert.assertTrue(transformedOp.rejectOperation(null));\n\n        op = createOperation(REMOVE, CommonAttributes.EXPOSE_MODEL, CommonAttributes.EXPRESSION);\n        transformedOp = mainServices.transformOperation(oldVersion, op);\n        Assert.assertTrue(transformedOp.rejectOperation(null));\n\n        //Test the show-model=>resolved domain name is rejected if we try to make it anything different from the default\n        op = createOperation(WRITE_ATTRIBUTE_OPERATION, CommonAttributes.EXPOSE_MODEL, CommonAttributes.RESOLVED);\n        op.get(NAME).set(CommonAttributes.DOMAIN_NAME);\n        op.get(VALUE).set(\"discarded\");\n        transformedOp = mainServices.transformOperation(oldVersion, op);\n        Assert.assertTrue(transformedOp.rejectOperation(null));\n\n        op = createOperation(WRITE_ATTRIBUTE_OPERATION, CommonAttributes.EXPOSE_MODEL, CommonAttributes.RESOLVED);\n        op.get(NAME).set(CommonAttributes.DOMAIN_NAME);\n        op.get(VALUE).set(\"jboss.as\");\n        transformedOp = mainServices.transformOperation(oldVersion, op);\n        Assert.assertNull(transformedOp.getTransformedOperation());\n        Assert.assertFalse(transformedOp.rejectOperation(null));\n\n        op = createOperation(UNDEFINE_ATTRIBUTE_OPERATION, CommonAttributes.EXPOSE_MODEL, CommonAttributes.RESOLVED);\n        op.get(NAME).set(CommonAttributes.DOMAIN_NAME);\n        transformedOp = mainServices.transformOperation(oldVersion, op);\n        Assert.assertFalse(transformedOp.rejectOperation(null));\n\n        op = createOperation(READ_ATTRIBUTE_OPERATION, CommonAttributes.EXPOSE_MODEL, CommonAttributes.RESOLVED);\n        op.get(NAME).set(CommonAttributes.DOMAIN_NAME);\n        transformedOp = mainServices.transformOperation(oldVersion, op);\n        Assert.assertNull(transformedOp.getTransformedOperation());\n        Assert.assertEquals(CommonAttributes.DEFAULT_RESOLVED_DOMAIN, mainServices.executeOperation(oldVersion, transformedOp).get(RESULT).asString());\n\n        op = createOperation(REMOVE, CommonAttributes.EXPOSE_MODEL, CommonAttributes.RESOLVED);\n        transformedOp = mainServices.transformOperation(oldVersion, op);\n        checkOutcome(mainServices.executeOperation(op));\n        checkOutcome(mainServices.executeOperation(oldVersion, transformedOp));\n        legacyModel = checkSubsystemModelTransformation(mainServices, oldVersion);\n        check_1_0_0_Model(legacyModel.get(SUBSYSTEM, getMainSubsystemName()), true, false);\n\n        op = createOperation(ADD, CommonAttributes.EXPOSE_MODEL, CommonAttributes.RESOLVED);\n        op.get(CommonAttributes.PROPER_PROPERTY_FORMAT).set(false);\n        transformedOp = mainServices.transformOperation(oldVersion, op);\n        checkOutcome(mainServices.executeOperation(op));\n        checkOutcome(mainServices.executeOperation(oldVersion, transformedOp));\n        legacyModel = checkSubsystemModelTransformation(mainServices, oldVersion);\n        check_1_0_0_Model(legacyModel.get(SUBSYSTEM, getMainSubsystemName()), true, true);\n    }","commit_id":"b30bb2e4327efefd3d87fb708911d272d14cbec2","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * Tests rejection of expressions in 1.1.0 model.\n     *\n     * @throws Exception\n     */\n    private void testRejectExpressions_1_0_0(String mavenGAV) throws Exception {\n        String subsystemXml =\n            \"<subsystem xmlns=\\\"\" + Namespace.CURRENT.getUriString() + \"\\\">\" +\n                    \"   <remoting-connector use-management-endpoint=\\\"${test.exp:false}\\\"/>\" +\n                    \"<\/subsystem>\";\n\n        // create builder for current subsystem version\n        KernelServicesBuilder builder = createKernelServicesBuilder(AdditionalInitialization.MANAGEMENT);\n\n        // create builder for legacy subsystem version\n        ModelVersion version_1_0_0 = ModelVersion.create(1, 0, 0);\n        builder.createLegacyKernelServicesBuilder(null, version_1_0_0)\n                .addMavenResourceURL(mavenGAV);\n\n        KernelServices mainServices = builder.build();\n        Assert.assertTrue(mainServices.isSuccessfulBoot());\n        KernelServices legacyServices = mainServices.getLegacyServices(version_1_0_0);\n        Assert.assertNotNull(legacyServices);\n        Assert.assertTrue(legacyServices.isSuccessfulBoot());\n\n        PathAddress subsystemAddress = PathAddress.pathAddress(PathElement.pathElement(SUBSYSTEM, JMXExtension.SUBSYSTEM_NAME));\n        ModelTestUtils.checkFailedTransformedBootOperations(\n                mainServices,\n                version_1_0_0,\n                builder.parseXml(subsystemXml),\n                new FailedOperationTransformationConfig()\n                        .addFailedAttribute(\n                                subsystemAddress.append(RemotingConnectorResource.REMOTE_CONNECTOR_CONFIG_PATH),\n                                new FailedOperationTransformationConfig.RejectExpressionsConfig(RemotingConnectorResource.USE_MANAGEMENT_ENDPOINT))\n                        );\n\n    }","id":61110,"modified_method":"/**\n     * Tests rejection of expressions in 1.1.0 model.\n     *\n     * @throws Exception\n     */\n    private void testRejectExpressions_1_0_0(String mavenGAV) throws Exception {\n        String subsystemXml =\n            \"<subsystem xmlns=\\\"\" + Namespace.CURRENT.getUriString() + \"\\\">\" +\n                    \"   <expose-resolved-model domain-name=\\\"${test.domain-name:non-standard}\\\" proper-property-format=\\\"${test.proper-property-format:true}\\\"/>\" +\n                    \"   <expose-expression-model domain-name=\\\"jboss.as\\\"/>\" +\n                    \"   <remoting-connector use-management-endpoint=\\\"${test.exp:false}\\\"/>\" +\n                    \"<\/subsystem>\";\n\n        // create builder for current subsystem version\n        KernelServicesBuilder builder = createKernelServicesBuilder(AdditionalInitialization.MANAGEMENT);\n\n        // create builder for legacy subsystem version\n        ModelVersion version_1_0_0 = ModelVersion.create(1, 0, 0);\n        builder.createLegacyKernelServicesBuilder(null, version_1_0_0)\n                .addMavenResourceURL(mavenGAV);\n\n        KernelServices mainServices = builder.build();\n        Assert.assertTrue(mainServices.isSuccessfulBoot());\n        KernelServices legacyServices = mainServices.getLegacyServices(version_1_0_0);\n        Assert.assertNotNull(legacyServices);\n        Assert.assertTrue(legacyServices.isSuccessfulBoot());\n\n        PathAddress subsystemAddress = PathAddress.pathAddress(PathElement.pathElement(SUBSYSTEM, JMXExtension.SUBSYSTEM_NAME));\n        ModelTestUtils.checkFailedTransformedBootOperations(\n                mainServices,\n                version_1_0_0,\n                builder.parseXml(subsystemXml),\n                new FailedOperationTransformationConfig()\n                        .addFailedAttribute(\n                                subsystemAddress.append(CommonAttributes.EXPOSE_MODEL, CommonAttributes.RESOLVED),\n                                new FailedOperationTransformationConfig.ChainedConfig(\n                                        createChainedConfigList(\n                                                new FailedOperationTransformationConfig.RejectExpressionsConfig(ExposeModelResourceResolved.DOMAIN_NAME),\n                                                new CorrectDomainNameConfig(ExposeModelResourceResolved.DOMAIN_NAME),\n                                                new CorrectPropertyFormatConfig(ExposeModelResourceResolved.PROPER_PROPERTY_FORMAT)),\n                                        ExposeModelResourceResolved.DOMAIN_NAME, ExposeModelResourceResolved.PROPER_PROPERTY_FORMAT))\n                        .addFailedAttribute(\n                                subsystemAddress.append(CommonAttributes.EXPOSE_MODEL, CommonAttributes.EXPRESSION),\n                                FailedOperationTransformationConfig.REJECTED_RESOURCE)\n                        .addFailedAttribute(\n                                subsystemAddress.append(RemotingConnectorResource.REMOTE_CONNECTOR_CONFIG_PATH),\n                                new FailedOperationTransformationConfig.RejectExpressionsConfig(RemotingConnectorResource.USE_MANAGEMENT_ENDPOINT)));\n    }","commit_id":"b30bb2e4327efefd3d87fb708911d272d14cbec2","url":"https://github.com/wildfly/wildfly"},{"original_method":"private void checkCollection(Collection collection, List<ErrorReport> errors, ProgressCallback callback) throws TerminatedException {\n        XmldbURI uri = collection.getURI();\n        callback.startCollection(uri.toString());\n\n        for (Iterator i = collection.collectionIteratorNoLock(); i.hasNext(); ) {\n            XmldbURI childUri = (XmldbURI) i.next();\n            try {\n                Collection child = broker.getCollection(uri.append(childUri));\n                if (child == null) {\n                    ErrorReport.CollectionError error = new org.exist.backup.ErrorReport.CollectionError(\n                            org.exist.backup.ErrorReport.CHILD_COLLECTION, \"Child collection not found: \" + childUri\n                                    + \", parent is \" + uri);\n                    error.setCollectionId(collection.getId());\n                    error.setCollectionURI(childUri);\n                    errors.add(error);\n                    callback.error(error);\n                    continue;\n                }\n                checkCollection(child, errors, callback);\n            } catch (Exception e) {\n                ErrorReport.CollectionError error = new ErrorReport.CollectionError(org.exist.backup.ErrorReport.CHILD_COLLECTION,\n                        \"Error while loading child collection: \" + childUri + \", parent is \" + uri);\n                error.setCollectionId(collection.getId());\n                error.setCollectionURI(childUri);\n                errors.add(error);\n                callback.error(error);\n            }\n        }\n    }","id":61111,"modified_method":"private void checkCollection(Collection collection, List<ErrorReport> errors, ProgressCallback callback) throws TerminatedException {\n        XmldbURI uri = collection.getURI();\n        callback.startCollection(uri.toString());\n\n        for (Iterator i = collection.collectionIteratorNoLock(); i.hasNext(); ) {\n            XmldbURI childUri = (XmldbURI) i.next();\n            try {\n                Collection child = broker.getCollection(uri.append(childUri));\n                if (child == null) {\n                    ErrorReport.CollectionError error = new org.exist.backup.ErrorReport.CollectionError(\n                            org.exist.backup.ErrorReport.CHILD_COLLECTION, \"Child collection not found: \" + childUri\n                                    + \", parent is \" + uri);\n                    error.setCollectionId(collection.getId());\n                    error.setCollectionURI(childUri);\n                    errors.add(error);\n                    callback.error(error);\n                    continue;\n                }\n                if (child.getId() != collection.getId())\n                \tcheckCollection(child, errors, callback);\n            } catch (Exception e) {\n                ErrorReport.CollectionError error = new ErrorReport.CollectionError(org.exist.backup.ErrorReport.CHILD_COLLECTION,\n                        \"Error while loading child collection: \" + childUri + \", parent is \" + uri);\n                error.setCollectionId(collection.getId());\n                error.setCollectionURI(childUri);\n                errors.add(error);\n                callback.error(error);\n            }\n        }\n    }","commit_id":"f6d64ed65590d90be62928d09b74733b363770b3","url":"https://github.com/eXist-db/exist"},{"original_method":"private void checkCollection( Collection collection, List<ErrorReport> errors, ProgressCallback callback ) throws TerminatedException\n    {\n        XmldbURI uri = collection.getURI();\n        callback.startCollection( uri.toString() );\n\n        for( Iterator<XmldbURI> i = collection.collectionIteratorNoLock(); i.hasNext(); ) {\n            XmldbURI childUri = i.next();\n\n            try {\n                Collection child = broker.getCollection( uri.append( childUri ) );\n\n                if( child == null ) {\n                    ErrorReport.CollectionError error = new org.exist.backup.ErrorReport.CollectionError( org.exist.backup.ErrorReport.CHILD_COLLECTION, \"Child collection not found: \" + childUri + \", parent is \" + uri );\n                    error.setCollectionId( collection.getId() );\n                    error.setCollectionURI( childUri );\n                    errors.add( error );\n                    callback.error( error );\n                    continue;\n                }\n                checkCollection( child, errors, callback );\n            }\n            catch( Exception e ) {\n                ErrorReport.CollectionError error = new ErrorReport.CollectionError( org.exist.backup.ErrorReport.CHILD_COLLECTION, \"Error while loading child collection: \" + childUri + \", parent is \" + uri );\n                error.setCollectionId( collection.getId() );\n                error.setCollectionURI( childUri );\n                errors.add( error );\n                callback.error( error );\n            }\n        }\n    }","id":61112,"modified_method":"private void checkCollection( Collection collection, List<ErrorReport> errors, ProgressCallback callback ) throws TerminatedException\n    {\n        XmldbURI uri = collection.getURI();\n        callback.startCollection( uri.toString() );\n\n        for( Iterator<XmldbURI> i = collection.collectionIteratorNoLock(); i.hasNext(); ) {\n            XmldbURI childUri = i.next();\n\n            try {\n                Collection child = broker.getCollection( uri.append( childUri ) );\n\n                if( child == null ) {\n                    ErrorReport.CollectionError error = new org.exist.backup.ErrorReport.CollectionError( org.exist.backup.ErrorReport.CHILD_COLLECTION, \"Child collection not found: \" + childUri + \", parent is \" + uri );\n                    error.setCollectionId( collection.getId() );\n                    error.setCollectionURI( childUri );\n                    errors.add( error );\n                    callback.error( error );\n                    continue;\n                }\n                if (child.getId() != collection.getId())\n                \tcheckCollection( child, errors, callback );\n            }\n            catch( Exception e ) {\n                ErrorReport.CollectionError error = new ErrorReport.CollectionError( org.exist.backup.ErrorReport.CHILD_COLLECTION, \"Error while loading child collection: \" + childUri + \", parent is \" + uri );\n                error.setCollectionId( collection.getId() );\n                error.setCollectionURI( childUri );\n                errors.add( error );\n                callback.error( error );\n            }\n        }\n    }","commit_id":"514d43453d88e5363d3c4517364feeb7920a455c","url":"https://github.com/eXist-db/exist"},{"original_method":"private void ensureLoadedTo(final ModelLoadingState state) {\n    if (state.ordinal() <= myState.ordinal()) return;\n    myState = state;  //this is for elimination of infinite recursion\n\n    ModelLoadResult res = NodeReadAccessCasterInEditor.runReadTransparentAction(new Computable<ModelLoadResult>() {\n      public ModelLoadResult compute() {\n        return UndoHelper.getInstance().runNonUndoableAction(new Computable<ModelLoadResult>() {\n          public ModelLoadResult compute() {\n            return doLoad(state, myModel);\n          }\n        });\n      }\n    });\n    myModel.setModelDescriptor(null);\n    myModel = res.getModel();\n    myModel.setModelDescriptor(myDescriptor);\n    myState = res.getState();\n  }","id":61113,"modified_method":"private void ensureLoadedTo(final ModelLoadingState state) {\n    if (state.ordinal() <= myState.ordinal()) return;\n    myState = state;  //this is for elimination of infinite recursion\n\n    ModelLoadResult res = NodeReadAccessCasterInEditor.runReadTransparentAction(new Computable<ModelLoadResult>() {\n      public ModelLoadResult compute() {\n        return UndoHelper.getInstance().runNonUndoableAction(new Computable<ModelLoadResult>() {\n          public ModelLoadResult compute() {\n            return doLoad(state, myModel);\n          }\n        });\n      }\n    });\n    if (myModel != null) {\n      myModel.setModelDescriptor(null);\n    }\n    myModel = res.getModel();\n    myModel.setModelDescriptor(myDescriptor);\n    myState = res.getState();\n  }","commit_id":"d8da5e75ec4bbbb2ec10cff813fecf72a7f50655","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void refresh() {\n    ModelAccess.assertLegalWrite();\n\n    getSModel().clearAdaptersAndUserObjects();\n    getSModel().refreshRefactoringHistory();\n  }","id":61114,"modified_method":"public void refresh() {\n    ModelAccess.assertLegalWrite();\n\n    SModel smodel = getCurrentModelInternal();\n    if (smodel == null) return;\n\n    getSModel().clearAdaptersAndUserObjects();\n    getSModel().refreshRefactoringHistory();\n  }","commit_id":"5e9c5e7ce3c2e419aea1b4cc6f00b421aa18945f","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void dispose() {\n    ModelAccess.assertLegalWrite();\n    synchronized (myModel) {\n      SModel smodel = myModel.getModel(myModel.getState());\n      if (smodel != null) {\n        fireBeforeModelDisposed(smodel);\n        smodel.dispose();\n      }\n    }\n    clearListeners();\n  }","id":61115,"modified_method":"public void dispose() {\n    ModelAccess.assertLegalWrite();\n    SModel smodel = getCurrentModelInternal();\n    if (smodel != null) {\n      fireBeforeModelDisposed(smodel);\n      smodel.dispose();\n    }\n    clearListeners();\n  }","commit_id":"5e9c5e7ce3c2e419aea1b4cc6f00b421aa18945f","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void replaceModel(@NotNull SModel newModel, ModelLoadingState loadingState) {\n    ModelAccess.assertLegalWrite();\n    if (newModel == mySModel) return;\n    final SModel oldSModel = mySModel;\n    if (oldSModel != null) {\n      oldSModel.setModelDescriptor(null);\n    }\n    mySModel = newModel;\n    mySModel.setModelDescriptor(this);\n    MPSModuleRepository.getInstance().invalidateCaches();\n    Runnable modelReplacedNotifier = new Runnable() {\n      public void run() {\n        fireModelReplaced();\n        if (oldSModel != null) {\n          oldSModel.dispose();\n        }\n      }\n    };\n    if (ModelAccess.instance().isInEDT()) {\n      modelReplacedNotifier.run();\n    } else {\n      ModelAccess.instance().runWriteInEDT(modelReplacedNotifier);\n    }\n  }","id":61116,"modified_method":"public void replaceModel(SModel newModel, ModelLoadingState state) {\n    ModelAccess.assertLegalWrite();\n    if (newModel == mySModel) return;\n    final SModel oldSModel = mySModel;\n    if (oldSModel != null) {\n      oldSModel.setModelDescriptor(null);\n    }\n    mySModel = newModel;\n    setLoadingState(state);\n\n    if (mySModel != null) {\n      mySModel.setModelDescriptor(this);\n    }\n    MPSModuleRepository.getInstance().invalidateCaches();\n    Runnable modelReplacedNotifier = new Runnable() {\n      public void run() {\n        fireModelReplaced();\n        if (oldSModel != null) {\n          oldSModel.dispose();\n        }\n      }\n    };\n    if (ModelAccess.instance().isInEDT()) {\n      modelReplacedNotifier.run();\n    } else {\n      ModelAccess.instance().runWriteInEDT(modelReplacedNotifier);\n    }\n  }","commit_id":"5e9c5e7ce3c2e419aea1b4cc6f00b421aa18945f","url":"https://github.com/JetBrains/MPS"},{"original_method":"protected SModel createModel() {\n    SModel model = getSource().loadSModel(myModule, this, ModelLoadingState.FULLY_LOADED).getModel();\n    updateDiskTimestamp();\n    return model;\n  }","id":61117,"modified_method":"private SModel createModel() {\n    SModel model = getSource().loadSModel(myModule, this, ModelLoadingState.FULLY_LOADED).getModel();\n    updateDiskTimestamp();\n    return model;\n  }","commit_id":"5e9c5e7ce3c2e419aea1b4cc6f00b421aa18945f","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  public final synchronized jetbrains.mps.smodel.SModel getSModelInternal() {\n    if (mySModel == null) {\n      mySModel = createModel();\n      mySModel.setModelDescriptor(this);\n      fireModelStateChanged(ModelLoadingState.NOT_LOADED, ModelLoadingState.FULLY_LOADED);\n    }\n    return mySModel;\n  }","id":61118,"modified_method":"@Override\n  public final jetbrains.mps.smodel.SModel getSModelInternal() {\n    if (mySModel != null) {\n      return mySModel;\n    }\n    synchronized (this) {\n      if (mySModel == null) {\n        mySModel = createModel();\n        mySModel.setModelDescriptor(this);\n        fireModelStateChanged(ModelLoadingState.NOT_LOADED, ModelLoadingState.FULLY_LOADED);\n      }\n    }\n    return mySModel;\n  }","commit_id":"df72408796fc9085a53d1053c62e44dd2947ca49","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  public final DefaultSModel getSModelInternal() {\n    synchronized (myModel) {\n      ModelLoadingState oldState = myModel.getState();\n      DefaultSModel res = myModel.getModel(ModelLoadingState.ROOTS_LOADED);\n      if (res == null) return null; // this is when we are in recursion\n      res.setModelDescriptor(this);\n      if (oldState != myModel.getState()) {\n        fireModelStateChanged(oldState, myModel.getState());\n      }\n      return res;\n    }\n  }","id":61119,"modified_method":"@Override\n  public final DefaultSModel getSModelInternal() {\n    ModelLoadingState oldState = myModel.getState();\n    if (oldState.ordinal() >= ModelLoadingState.ROOTS_LOADED.ordinal()) {\n      return myModel.getModel(ModelLoadingState.ROOTS_LOADED);\n    }\n    synchronized (myModel) {\n      oldState = myModel.getState();\n      DefaultSModel res = myModel.getModel(ModelLoadingState.ROOTS_LOADED);\n      if (res == null) return null; // this is when we are in recursion\n      if (oldState != myModel.getState()) {\n        res.setModelDescriptor(this);\n        fireModelStateChanged(oldState, myModel.getState());\n      }\n      return res;\n    }\n  }","commit_id":"df72408796fc9085a53d1053c62e44dd2947ca49","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SModel createTransientModel(final String longName, String stereotype) {\n    while (!isValidName(longName, stereotype)) {\n      stereotype += \"_\";\n    }\n\n    String modelName = stereotype == null ? longName : longName + \"@\" + stereotype;\n    SModel result = new TransientSModelDescriptor(modelName);\n\n    myModels.put(result.getModelName(), result);\n    invalidateCaches();\n    return result;\n  }","id":61120,"modified_method":"public SModel createTransientModel(final String longName, String stereotype) {\n    while (!isValidName(longName, stereotype)) {\n      stereotype += \"_\";\n    }\n\n    String modelName = stereotype == null ? longName : longName + \"@\" + stereotype;\n    SModel result = new TransientSModelDescriptor(modelName);\n    result.load();\n\n    myModels.put(result.getModelName(), result);\n    invalidateCaches();\n    return result;\n  }","commit_id":"df72408796fc9085a53d1053c62e44dd2947ca49","url":"https://github.com/JetBrains/MPS"},{"original_method":"private void ensureLoadedTo(final ModelLoadingState state) {\n    if (state.ordinal() <= myState.ordinal()) return;\n    myState = state;  //this is for elimination of infinite recursion\n\n    ModelLoadResult res = NodeReadAccessCasterInEditor.runReadTransparentAction(new Computable<ModelLoadResult>() {\n      @Override\n      public ModelLoadResult compute() {\n        return UndoHelper.getInstance().runNonUndoableAction(new Computable<ModelLoadResult>() {\n          @Override\n          public ModelLoadResult compute() {\n            return doLoad(state, myModel);\n          }\n        });\n      }\n    });\n    if (myModel != null) {\n      assert res.getModel() == myModel;\n    } else {\n      myModel = res.getModel();\n      myModel.setModelDescriptor(myDescriptor);\n    }\n    myState = res.getState();\n  }","id":61121,"modified_method":"private void ensureLoadedTo(final ModelLoadingState state) {\n    if (state.ordinal() <= myState.ordinal() || myLoading) return;\n    myLoading = true;  //this is for elimination of infinite recursion\n    try {\n      ModelLoadResult res = NodeReadAccessCasterInEditor.runReadTransparentAction(new Computable<ModelLoadResult>() {\n        @Override\n        public ModelLoadResult compute() {\n          return UndoHelper.getInstance().runNonUndoableAction(new Computable<ModelLoadResult>() {\n            @Override\n            public ModelLoadResult compute() {\n              return doLoad(state, myModel);\n            }\n          });\n        }\n      });\n      if (myModel != null) {\n        assert res.getModel() == myModel;\n      } else {\n        myModel = res.getModel();\n        myModel.setModelDescriptor(myDescriptor);\n      }\n      myState = res.getState();\n    } finally {\n      myLoading = false;\n    }\n  }","commit_id":"df72408796fc9085a53d1053c62e44dd2947ca49","url":"https://github.com/JetBrains/MPS"},{"original_method":"public final DefaultSModel getModel(@Nullable ModelLoadingState state) {\n    if (state == null) return myModel;\n    if (!ModelAccess.instance().canWrite()) {\n      synchronized (this) {\n        ensureLoadedTo(state);\n      }\n    } else {\n      ensureLoadedTo(state);\n    }\n    return myModel;\n  }","id":61122,"modified_method":"public final DefaultSModel getModel(@Nullable ModelLoadingState state) {\n    if (state == null) return myModel;\n    if (!ModelAccess.instance().canWrite()) {\n      if (state.ordinal() > myState.ordinal()) {\n        synchronized (this) {\n          ensureLoadedTo(state);\n        }\n      }\n    } else {\n      ensureLoadedTo(state);\n    }\n    return myModel;\n  }","commit_id":"df72408796fc9085a53d1053c62e44dd2947ca49","url":"https://github.com/JetBrains/MPS"},{"original_method":"@NotNull\n    @Override\n    public AttributesDescriptor[] getAttributeDescriptors() {\n        // TODO i18n\n        return new AttributesDescriptor[]{\n            new AttributesDescriptor(OptionsBundle.message(\"options.java.attribute.descriptor.keyword\"), JetHighlightingColors.KEYWORD),\n            new AttributesDescriptor(\"Built-in annotation\", JetHighlightingColors.BUILTIN_ANNOTATION),\n            new AttributesDescriptor(OptionsBundle.message(\"options.java.attribute.descriptor.number\"), JetHighlightingColors.NUMBER),\n\n            new AttributesDescriptor(OptionsBundle.message(\"options.java.attribute.descriptor.string\"), JetHighlightingColors.STRING),\n            new AttributesDescriptor(OptionsBundle.message(\"options.java.attribute.descriptor.valid.escape.in.string\"), JetHighlightingColors.VALID_STRING_ESCAPE),\n            new AttributesDescriptor(OptionsBundle.message(\"options.java.attribute.descriptor.invalid.escape.in.string\"), JetHighlightingColors.INVALID_STRING_ESCAPE),\n\n            new AttributesDescriptor(OptionsBundle.message(\"options.java.attribute.descriptor.operator.sign\"), JetHighlightingColors.OPERATOR_SIGN),\n            new AttributesDescriptor(OptionsBundle.message(\"options.java.attribute.descriptor.parentheses\"), JetHighlightingColors.PARENTHESIS),\n            new AttributesDescriptor(OptionsBundle.message(\"options.java.attribute.descriptor.braces\"), JetHighlightingColors.BRACES),\n            new AttributesDescriptor(OptionsBundle.message(\"options.java.attribute.descriptor.brackets\"), JetHighlightingColors.BRACKETS),\n            new AttributesDescriptor(\"Function literal braces\", JetHighlightingColors.FUNCTION_LITERAL_BRACES),\n            new AttributesDescriptor(OptionsBundle.message(\"options.java.attribute.descriptor.comma\"), JetHighlightingColors.COMMA),\n            new AttributesDescriptor(OptionsBundle.message(\"options.java.attribute.descriptor.semicolon\"), JetHighlightingColors.SEMICOLON),\n            new AttributesDescriptor(OptionsBundle.message(\"options.java.attribute.descriptor.dot\"), JetHighlightingColors.DOT),\n            new AttributesDescriptor(\"Safe access dot\", JetHighlightingColors.SAFE_ACCESS),\n            new AttributesDescriptor(\"Arrow\", JetHighlightingColors.ARROW),\n\n            new AttributesDescriptor(OptionsBundle.message(\"options.java.attribute.descriptor.line.comment\"), JetHighlightingColors.LINE_COMMENT),\n            new AttributesDescriptor(OptionsBundle.message(\"options.java.attribute.descriptor.block.comment\"), JetHighlightingColors.BLOCK_COMMENT),\n            new AttributesDescriptor(\"KDoc comment\", JetHighlightingColors.DOC_COMMENT),\n            new AttributesDescriptor(\"KDoc tag\", JetHighlightingColors.DOC_COMMENT_TAG),\n            new AttributesDescriptor(\"KDoc tag value\", JetHighlightingColors.DOC_COMMENT_TAG_VALUE),\n            new AttributesDescriptor(\"KDoc markup\", JetHighlightingColors.DOC_COMMENT_MARKUP),\n\n            new AttributesDescriptor(OptionsBundle.message(\"options.java.attribute.descriptor.class\"), JetHighlightingColors.CLASS),\n            new AttributesDescriptor(OptionsBundle.message(\"options.java.attribute.descriptor.type.parameter\"), JetHighlightingColors.TYPE_PARAMETER),\n            new AttributesDescriptor(OptionsBundle.message(\"options.java.attribute.descriptor.abstract.class\"), JetHighlightingColors.ABSTRACT_CLASS),\n            new AttributesDescriptor(\"Trait\", JetHighlightingColors.TRAIT),\n            new AttributesDescriptor(\"Annotation\", JetHighlightingColors.ANNOTATION),\n\n            new AttributesDescriptor(\"Closure or anonymous object bound variable\", JetHighlightingColors.WRAPPED_INTO_REF),\n            new AttributesDescriptor(\"Read-only local variable (val)\", JetHighlightingColors.LOCAL_VAL),\n            new AttributesDescriptor(\"Mutable local variable (var)\", JetHighlightingColors.LOCAL_VAR),\n\n            new AttributesDescriptor(\"Instance property\", JetHighlightingColors.INSTANCE_PROPERTY),\n            new AttributesDescriptor(\"Instance property with backing field\", JetHighlightingColors.INSTANCE_PROPERTY_WITH_BACKING_FIELD),\n            new AttributesDescriptor(\"Instance property backing field access\", JetHighlightingColors.INSTANCE_BACKING_FIELD_ACCESS),\n\n            new AttributesDescriptor(\"Namespace property\", JetHighlightingColors.NAMESPACE_PROPERTY),\n            new AttributesDescriptor(\"Namespace property with backing field\", JetHighlightingColors.NAMESPACE_PROPERTY_WITH_BACKING_FIELD),\n            new AttributesDescriptor(\"Namespace property backing field access\", JetHighlightingColors.NAMESPACE_BACKING_FIELD_ACCESS),\n\n            new AttributesDescriptor(\"Extension property\", JetHighlightingColors.EXTENSION_PROPERTY),\n\n            new AttributesDescriptor(\"Function literal default parameter\", JetHighlightingColors.FUNCTION_LITERAL_DEFAULT_PARAMETER),\n\n            new AttributesDescriptor(OptionsBundle.message(\"options.java.attribute.descriptor.bad.character\"), JetHighlightingColors.BAD_CHARACTER),\n\n            new AttributesDescriptor(\"Automatically casted value\", JetHighlightingColors.AUTO_CASTED_VALUE),\n\n            new AttributesDescriptor(\"Label\", JetHighlightingColors.LABEL),\n        };\n    }","id":61123,"modified_method":"@NotNull\n    @Override\n    public AttributesDescriptor[] getAttributeDescriptors() {\n        // TODO i18n\n        return new AttributesDescriptor[]{\n            new AttributesDescriptor(OptionsBundle.message(\"options.java.attribute.descriptor.keyword\"), JetHighlightingColors.KEYWORD),\n            new AttributesDescriptor(\"Built-in annotation\", JetHighlightingColors.BUILTIN_ANNOTATION),\n            new AttributesDescriptor(OptionsBundle.message(\"options.java.attribute.descriptor.number\"), JetHighlightingColors.NUMBER),\n\n            new AttributesDescriptor(OptionsBundle.message(\"options.java.attribute.descriptor.string\"), JetHighlightingColors.STRING),\n            new AttributesDescriptor(OptionsBundle.message(\"options.java.attribute.descriptor.valid.escape.in.string\"), JetHighlightingColors.VALID_STRING_ESCAPE),\n            new AttributesDescriptor(OptionsBundle.message(\"options.java.attribute.descriptor.invalid.escape.in.string\"), JetHighlightingColors.INVALID_STRING_ESCAPE),\n\n            new AttributesDescriptor(OptionsBundle.message(\"options.java.attribute.descriptor.operator.sign\"), JetHighlightingColors.OPERATOR_SIGN),\n            new AttributesDescriptor(OptionsBundle.message(\"options.java.attribute.descriptor.parentheses\"), JetHighlightingColors.PARENTHESIS),\n            new AttributesDescriptor(OptionsBundle.message(\"options.java.attribute.descriptor.braces\"), JetHighlightingColors.BRACES),\n            new AttributesDescriptor(OptionsBundle.message(\"options.java.attribute.descriptor.brackets\"), JetHighlightingColors.BRACKETS),\n            new AttributesDescriptor(\"Function literal braces\", JetHighlightingColors.FUNCTION_LITERAL_BRACES),\n            new AttributesDescriptor(OptionsBundle.message(\"options.java.attribute.descriptor.comma\"), JetHighlightingColors.COMMA),\n            new AttributesDescriptor(OptionsBundle.message(\"options.java.attribute.descriptor.semicolon\"), JetHighlightingColors.SEMICOLON),\n            new AttributesDescriptor(OptionsBundle.message(\"options.java.attribute.descriptor.dot\"), JetHighlightingColors.DOT),\n            new AttributesDescriptor(\"Safe access dot\", JetHighlightingColors.SAFE_ACCESS),\n            new AttributesDescriptor(\"Arrow\", JetHighlightingColors.ARROW),\n\n            new AttributesDescriptor(OptionsBundle.message(\"options.java.attribute.descriptor.line.comment\"), JetHighlightingColors.LINE_COMMENT),\n            new AttributesDescriptor(OptionsBundle.message(\"options.java.attribute.descriptor.block.comment\"), JetHighlightingColors.BLOCK_COMMENT),\n            new AttributesDescriptor(\"KDoc comment\", JetHighlightingColors.DOC_COMMENT),\n            new AttributesDescriptor(\"KDoc tag\", JetHighlightingColors.DOC_COMMENT_TAG),\n            new AttributesDescriptor(\"KDoc tag value\", JetHighlightingColors.DOC_COMMENT_TAG_VALUE),\n            new AttributesDescriptor(\"KDoc markup\", JetHighlightingColors.DOC_COMMENT_MARKUP),\n\n            new AttributesDescriptor(OptionsBundle.message(\"options.java.attribute.descriptor.class\"), JetHighlightingColors.CLASS),\n            new AttributesDescriptor(OptionsBundle.message(\"options.java.attribute.descriptor.type.parameter\"), JetHighlightingColors.TYPE_PARAMETER),\n            new AttributesDescriptor(OptionsBundle.message(\"options.java.attribute.descriptor.abstract.class\"), JetHighlightingColors.ABSTRACT_CLASS),\n            new AttributesDescriptor(\"Trait\", JetHighlightingColors.TRAIT),\n            new AttributesDescriptor(\"Annotation\", JetHighlightingColors.ANNOTATION),\n\n            new AttributesDescriptor(\"Closure or anonymous object bound variable\", JetHighlightingColors.WRAPPED_INTO_REF),\n            new AttributesDescriptor(\"Read-only local variable (val)\", JetHighlightingColors.LOCAL_VAL),\n            new AttributesDescriptor(\"Mutable local variable (var)\", JetHighlightingColors.LOCAL_VAR),\n\n            new AttributesDescriptor(\"Instance property\", JetHighlightingColors.INSTANCE_PROPERTY),\n            new AttributesDescriptor(\"Namespace property\", JetHighlightingColors.NAMESPACE_PROPERTY),\n            new AttributesDescriptor(\"Property with backing field\", JetHighlightingColors.PROPERTY_WITH_BACKING_FIELD),\n            new AttributesDescriptor(\"Property backing field access\", JetHighlightingColors.BACKING_FIELD_ACCESS),\n            new AttributesDescriptor(\"Extension property\", JetHighlightingColors.EXTENSION_PROPERTY),\n\n            new AttributesDescriptor(\"Function literal default parameter\", JetHighlightingColors.FUNCTION_LITERAL_DEFAULT_PARAMETER),\n\n            new AttributesDescriptor(OptionsBundle.message(\"options.java.attribute.descriptor.bad.character\"), JetHighlightingColors.BAD_CHARACTER),\n\n            new AttributesDescriptor(\"Automatically casted value\", JetHighlightingColors.AUTO_CASTED_VALUE),\n\n            new AttributesDescriptor(\"Label\", JetHighlightingColors.LABEL),\n        };\n    }","commit_id":"80c70616f04c7f85bbb7c8a516809ebf07644261","url":"https://github.com/JetBrains/kotlin"},{"original_method":"private void putPropertyAnnotation(@NotNull PsiElement elementToHighlight, boolean namespace, boolean withBackingField) {\n        holder.createInfoAnnotation(\n            elementToHighlight,\n            \"This property has a backing field\")\n            .setTextAttributes(withBackingField ?\n                (namespace\n                 ? JetHighlightingColors.NAMESPACE_PROPERTY_WITH_BACKING_FIELD\n                 : JetHighlightingColors.INSTANCE_PROPERTY_WITH_BACKING_FIELD) :\n                (namespace\n                 ? JetHighlightingColors.NAMESPACE_PROPERTY\n                 : JetHighlightingColors.INSTANCE_PROPERTY));\n    }","id":61124,"modified_method":"private void putPropertyAnnotation(@NotNull PsiElement elementToHighlight, boolean namespace, boolean withBackingField) {\n        holder.createInfoAnnotation(elementToHighlight, null).setTextAttributes(\n            namespace\n            ? JetHighlightingColors.NAMESPACE_PROPERTY\n            : JetHighlightingColors.INSTANCE_PROPERTY\n        );\n        if (withBackingField) {\n            holder.createInfoAnnotation(\n                elementToHighlight,\n                \"This property has a backing field\")\n                .setTextAttributes(JetHighlightingColors.PROPERTY_WITH_BACKING_FIELD);\n        }\n    }","commit_id":"80c70616f04c7f85bbb7c8a516809ebf07644261","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@Override\n    public void visitSimpleNameExpression(JetSimpleNameExpression expression) {\n        DeclarationDescriptor target = bindingContext.get(BindingContext.REFERENCE_TARGET, expression);\n        if (!(target instanceof PropertyDescriptor)) {\n            return;\n        }\n\n        if (((PropertyDescriptor)target).getReceiverParameter() != ReceiverDescriptor.NO_RECEIVER) {\n            holder.createInfoAnnotation(expression, null).setTextAttributes(\n                JetHighlightingColors.EXTENSION_PROPERTY);\n        }\n\n        boolean namespace = target.getContainingDeclaration() instanceof NamespaceDescriptor;\n        if (expression.getReferencedNameElementType() == JetTokens.FIELD_IDENTIFIER) {\n            holder.createInfoAnnotation(expression, null).setTextAttributes(\n                (namespace ?\n                 JetHighlightingColors.NAMESPACE_BACKING_FIELD_ACCESS :\n                 JetHighlightingColors.INSTANCE_BACKING_FIELD_ACCESS)\n            );\n        } else {\n            putPropertyAnnotation(expression, namespace, false);\n        }\n    }","id":61125,"modified_method":"@Override\n    public void visitSimpleNameExpression(JetSimpleNameExpression expression) {\n        DeclarationDescriptor target = bindingContext.get(BindingContext.REFERENCE_TARGET, expression);\n        if (!(target instanceof PropertyDescriptor)) {\n            return;\n        }\n\n        if (((PropertyDescriptor)target).getReceiverParameter() != ReceiverDescriptor.NO_RECEIVER) {\n            holder.createInfoAnnotation(expression, null).setTextAttributes(\n                JetHighlightingColors.EXTENSION_PROPERTY);\n        }\n\n        boolean namespace = target.getContainingDeclaration() instanceof NamespaceDescriptor;\n        putPropertyAnnotation(expression, namespace, false);\n        if (expression.getReferencedNameElementType() == JetTokens.FIELD_IDENTIFIER) {\n            holder.createInfoAnnotation(expression, null).setTextAttributes(JetHighlightingColors.BACKING_FIELD_ACCESS);\n        }\n    }","commit_id":"80c70616f04c7f85bbb7c8a516809ebf07644261","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@Override\n  public void annotate(final @NotNull PsiElement element, final @NotNull AnnotationHolder holder) {\n    if (holder.isBatchMode()) return;\n\n    final DartSdk sdk = DartSdk.getGlobalDartSdk();\n\n    if (DartTokenTypesSets.BUILT_IN_IDENTIFIERS.contains(element.getNode().getElementType())) {\n      if (element.getNode().getTreeParent().getElementType() != DartTokenTypes.ID) {\n        final String message = ApplicationManager.getApplication().isUnitTestMode() ? \"highlighted as keyword\" : null;\n        holder.createInfoAnnotation(element, message).setTextAttributes(TextAttributesKey.find(DartSyntaxHighlighterColors.DART_KEYWORD));\n        return;\n      }\n    }\n\n    if (element.getNode().getElementType() == DartTokenTypes.REGULAR_STRING_PART) {\n      highlightEscapeSequences(element, holder);\n      return;\n    }\n\n    if (element instanceof DartMetadata) {\n      final DartArguments arguments = ((DartMetadata)element).getArguments();\n      final int endOffset = arguments == null ? element.getTextRange().getEndOffset() : arguments.getTextRange().getStartOffset();\n      final TextRange range = TextRange.create(element.getTextRange().getStartOffset(), endOffset);\n\n      final String message = ApplicationManager.getApplication().isUnitTestMode() ? \"metadata\" : null;\n      holder.createInfoAnnotation(range, message).setTextAttributes(TextAttributesKey.find(DartSyntaxHighlighterColors.DART_METADATA));\n      return;\n    }\n\n    if (element instanceof DartReference && element.getParent() instanceof DartType && \"dynamic\".equals(element.getText())) {\n      holder.createInfoAnnotation(element, null).setTextAttributes(TextAttributesKey.find(DartSyntaxHighlighterColors.DART_BUILTIN));\n      return;\n    }\n\n    highlightIfDeclarationOrReference(element, holder, sdk);\n  }","id":61126,"modified_method":"@Override\n  public void annotate(final @NotNull PsiElement element, final @NotNull AnnotationHolder holder) {\n    if (holder.isBatchMode()) return;\n\n    final DartSdk sdk = DartSdk.getGlobalDartSdk();\n\n    if (DartTokenTypesSets.BUILT_IN_IDENTIFIERS.contains(element.getNode().getElementType())) {\n      if (element.getNode().getTreeParent().getElementType() != DartTokenTypes.ID) {\n        final String message = ApplicationManager.getApplication().isUnitTestMode() ? \"highlighted as keyword\" : null;\n        holder.createInfoAnnotation(element, message).setTextAttributes(TextAttributesKey.find(DartSyntaxHighlighterColors.DART_KEYWORD));\n        return;\n      }\n    }\n\n    if (element.getNode().getElementType() == DartTokenTypes.REGULAR_STRING_PART) {\n      highlightEscapeSequences(element, holder);\n      return;\n    }\n\n    if (element instanceof DartMetadata) {\n      final DartArguments arguments = ((DartMetadata)element).getArguments();\n      final int endOffset = arguments == null ? element.getTextRange().getEndOffset() : arguments.getTextRange().getStartOffset();\n      final TextRange range = TextRange.create(element.getTextRange().getStartOffset(), endOffset);\n\n      final String message = ApplicationManager.getApplication().isUnitTestMode() ? \"metadata\" : null;\n      holder.createInfoAnnotation(range, message).setTextAttributes(TextAttributesKey.find(DartSyntaxHighlighterColors.DART_METADATA));\n      return;\n    }\n\n    if (element instanceof DartReference && element.getParent() instanceof DartType && \"dynamic\".equals(element.getText())) {\n      createInfoAnnotation(holder, element, DartSyntaxHighlighterColors.DART_BUILTIN);\n      return;\n    }\n\n    highlightIfDeclarationOrReference(element, holder, sdk);\n  }","commit_id":"2f0a3e6e77000a3819d4144c043487253f1e9508","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"private static boolean isStatic(final PsiElement element) {\n    if (element instanceof DartComponent) {\n      return ((DartComponent)element).isStatic();\n    }\n    return false;\n  }","id":61127,"modified_method":"private static boolean isStatic(final PsiElement element) {\n    return element instanceof DartComponent && ((DartComponent)element).isStatic();\n  }","commit_id":"2f0a3e6e77000a3819d4144c043487253f1e9508","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"@Nullable\n  private static TextAttributesKey getAttributeByType(final @Nullable DartComponentType type, boolean isStatic) {\n    if (type == null) {\n      return null;\n    }\n    switch (type) {\n      case CLASS:\n      case TYPEDEF:\n        return TextAttributesKey.find(DartSyntaxHighlighterColors.DART_CLASS);\n      case PARAMETER:\n        return TextAttributesKey.find(DartSyntaxHighlighterColors.DART_PARAMETER);\n      case FUNCTION:\n        return TextAttributesKey.find(DartSyntaxHighlighterColors.DART_FUNCTION);\n      case VARIABLE:\n        return TextAttributesKey.find(DartSyntaxHighlighterColors.DART_LOCAL_VARIABLE);\n      case LABEL:\n        return TextAttributesKey.find(DartSyntaxHighlighterColors.DART_LABEL);\n      case FIELD:\n        if (isStatic) return TextAttributesKey.find(DartSyntaxHighlighterColors.DART_STATIC_MEMBER_VARIABLE);\n        return TextAttributesKey.find(DartSyntaxHighlighterColors.DART_INSTANCE_MEMBER_VARIABLE);\n      case METHOD:\n        if (isStatic) return TextAttributesKey.find(DartSyntaxHighlighterColors.DART_STATIC_MEMBER_FUNCTION);\n        return TextAttributesKey.find(DartSyntaxHighlighterColors.DART_INSTANCE_MEMBER_FUNCTION);\n      default:\n        return null;\n    }\n  }","id":61128,"modified_method":"@Nullable\n  private static TextAttributesKey getAttributeByType(final @Nullable DartComponentType type, boolean isStatic, boolean isTopLevel) {\n    if (type == null) {\n      return null;\n    }\n    switch (type) {\n      case CLASS:\n      case TYPEDEF:\n        return TextAttributesKey.find(DartSyntaxHighlighterColors.DART_CLASS);\n      case PARAMETER:\n        return TextAttributesKey.find(DartSyntaxHighlighterColors.DART_PARAMETER);\n      case FUNCTION:\n        if (isTopLevel) return TextAttributesKey.find(DartSyntaxHighlighterColors.DART_TOP_LEVEL_FUNCTION_DECLARATION);\n        return TextAttributesKey.find(DartSyntaxHighlighterColors.DART_FUNCTION);\n      case VARIABLE:\n        if (isTopLevel) return TextAttributesKey.find(DartSyntaxHighlighterColors.DART_TOP_LEVEL_VARIABLE_DECLARATION);\n        return TextAttributesKey.find(DartSyntaxHighlighterColors.DART_LOCAL_VARIABLE);\n      case LABEL:\n        return TextAttributesKey.find(DartSyntaxHighlighterColors.DART_LABEL);\n      case FIELD:\n        if (isStatic) return TextAttributesKey.find(DartSyntaxHighlighterColors.DART_STATIC_MEMBER_VARIABLE);\n        return TextAttributesKey.find(DartSyntaxHighlighterColors.DART_INSTANCE_MEMBER_VARIABLE);\n      case METHOD:\n        if (isStatic) return TextAttributesKey.find(DartSyntaxHighlighterColors.DART_STATIC_MEMBER_FUNCTION);\n        return TextAttributesKey.find(DartSyntaxHighlighterColors.DART_INSTANCE_MEMBER_FUNCTION);\n      default:\n        return null;\n    }\n  }","commit_id":"2f0a3e6e77000a3819d4144c043487253f1e9508","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"private static void highlightIfDeclarationOrReference(final PsiElement element,\n                                                        final AnnotationHolder holder,\n                                                        final @Nullable DartSdk sdk) {\n    DartComponentName componentName = null;\n\n    if (element instanceof DartComponentName) {\n      componentName = (DartComponentName)element;\n    }\n    else if (element instanceof DartReference) {\n      final DartReference[] references = PsiTreeUtil.getChildrenOfType(element, DartReference.class);\n      boolean chain = references != null && references.length > 1;\n      if (!chain) {\n        final PsiElement resolved = ((DartReference)element).resolve(); // todo this takes too much time\n        if (resolved instanceof DartComponentName) componentName = (DartComponentName)resolved;\n      }\n    }\n\n    if (componentName != null) {\n      if (BUILT_IN_TYPES_HIGHLIGHTED_AS_KEYWORDS.contains(componentName.getName()) &&\n          sdk != null && isInSdkCore(sdk, componentName.getContainingFile())) {\n        holder.createInfoAnnotation(element, null).setTextAttributes(TextAttributesKey.find(DartSyntaxHighlighterColors.DART_BUILTIN));\n        return;\n      }\n\n      final boolean isStatic = isStatic(componentName.getParent());\n      final TextAttributesKey attribute = getAttributeByType(DartComponentType.typeOf(componentName.getParent()), isStatic);\n      if (attribute != null) {\n        holder.createInfoAnnotation(element, null).setTextAttributes(attribute);\n      }\n    }\n  }","id":61129,"modified_method":"private static void highlightIfDeclarationOrReference(final PsiElement element,\n                                                        final AnnotationHolder holder,\n                                                        final @Nullable DartSdk sdk) {\n    DartComponentName componentName = null;\n\n    //System.out.println(element.getText());\n\n    if (element instanceof DartComponentName) {\n      componentName = (DartComponentName)element;\n    }\n    else if (element instanceof DartReference) {\n      final DartReference[] references = PsiTreeUtil.getChildrenOfType(element, DartReference.class);\n      boolean chain = references != null && references.length > 1;\n      if (!chain) {\n        final PsiElement resolved = ((DartReference)element).resolve(); // todo this takes too much time\n        final PsiElement elementParent = element.getParent();\n        if (resolved != null && elementParent instanceof DartCallExpression) {\n          final PsiElement parent = resolved.getParent();\n          if (parent instanceof DartFunctionDeclarationWithBodyOrNative) {\n            createInfoAnnotation(holder, element, DartSyntaxHighlighterColors.DART_TOP_LEVEL_FUNCTION_CALL);\n          } else if (parent instanceof DartMethodDeclaration) {\n            final String callType =\n              ((DartMethodDeclaration)parent).isStatic() ? DartSyntaxHighlighterColors.DART_STATIC_MEMBER_FUNCTION_CALL\n                                                         : DartSyntaxHighlighterColors.DART_INSTANCE_MEMBER_FUNCTION_CALL;\n            createInfoAnnotation(holder, element, callType);\n          }\n        } else {\n          if (resolved instanceof DartComponentName) componentName = (DartComponentName)resolved;\n        }\n      }\n    }\n\n    if (componentName != null) {\n      if (BUILT_IN_TYPES_HIGHLIGHTED_AS_KEYWORDS.contains(componentName.getName()) &&\n          sdk != null && isInSdkCore(sdk, componentName.getContainingFile())) {\n        createInfoAnnotation(holder, element, DartSyntaxHighlighterColors.DART_BUILTIN);\n\n        return;\n      }\n\n      final boolean isStatic = isStatic(componentName.getParent());\n      final boolean isTopLevel = !isStatic && isTopLevel(componentName.getParent());\n      final TextAttributesKey attribute = getAttributeByType(DartComponentType.typeOf(componentName.getParent()), isStatic, isTopLevel);\n      if (attribute != null) {\n        holder.createInfoAnnotation(element, null).setTextAttributes(attribute);\n      }\n    } else {\n      highlightDeclarationsAndInvocations(element, holder);\n    }\n\n  }","commit_id":"2f0a3e6e77000a3819d4144c043487253f1e9508","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"@NotNull\n  public String getDemoText() {\n    return \"/**\\n\" +\n           \" * documentation\\n\" +\n           \" */\\n\" +\n           \"<metadata>@Metadata<\/metadata>('text')\\n\" +\n           \"class <class>SomeClass<\/class> implements <class>OtherClass<\/class> {\\n\" +\n           \"  /// documentation\\n\" +\n           \"  var <instance.member.variable>someField<\/instance.member.variable> = null; // line comment\\n\" +\n           \"  var <instance.member.variable>someString<\/instance.member.variable> = \\\"Escape sequences: <escape>\\\\n<\/escape> <escape>\\\\xFF<\/escape> <escape>\\\\u1234<\/escape> <escape>\\\\u{2F}<\/escape>\\\"\\n\" +\n           \"  <class>String<\/class> <instance.member.variable>otherString<\/instance.member.variable> = \\\"Invalid escape sequences: <bad.escape>\\\\xZZ<\/bad.escape> <bad.escape>\\\\uXYZZ<\/bad.escape> <bad.escape>\\\\u{XYZ}<\/bad.escape>\\\"\\n\" +\n           \"  static <builtin>num<\/builtin> <static.member.variable>staticField<\/static.member.variable> = 12345.67890;\\n\" +\n           \"\\n\" +\n           \"  static <static.member.function>staticFunction<\/static.member.function>() {\\n\" +\n           \"    <label>label<\/label>: <static.member.variable>staticField<\/static.member.variable>++; /* block comment */\\n\" +\n           \"  }\\n\" +\n           \"\\n\" +\n           \"  <instance.member.function>foo<\/instance.member.function>(<builtin>dynamic<\/builtin> <parameter>param<\/parameter>) {\\n\" +\n           \"    print(<instance.member.variable>someString<\/instance.member.variable> + <parameter>param<\/parameter>);\\n\" +\n           \"    var <local.variable>localVar<\/local.variable> = <class>SomeClass<\/class>.<static.member.variable>staticField<\/static.member.variable>; \\n\" +\n           \"    <local.variable>localVar<\/local.variable>++; \\n\" +\n           \"    <function>localFunction<\/function>() {\\n\" +\n           \"      <local.variable>localVar<\/local.variable> = ```; // bad character\\n\" +\n           \"    };\\n\" +\n           \"  }\\n\" +\n           \"}\";\n  }","id":61130,"modified_method":"@NotNull\n  public String getDemoText() {\n    return \"/**\\n\" +\n           \" * documentation\\n\" +\n           \" */\\n\" +\n           \"<metadata>@Metadata<\/metadata>('text')\\n\" +\n           \"class <class>SomeClass<\/class> implements <class>OtherClass<\/class> {\\n\" +\n           \"  /// documentation\\n\" +\n           \"  var <instance.member.variable>someField<\/instance.member.variable> = null; // line comment\\n\" +\n           \"  var <instance.member.variable>someString<\/instance.member.variable> = \\\"Escape sequences: <escape>\\\\n<\/escape> <escape>\\\\xFF<\/escape> <escape>\\\\u1234<\/escape> <escape>\\\\u{2F}<\/escape>\\\"\\n\" +\n           \"  <class>String<\/class> <instance.member.variable>otherString<\/instance.member.variable> = \\\"Invalid escape sequences: <bad.escape>\\\\xZZ<\/bad.escape> <bad.escape>\\\\uXYZZ<\/bad.escape> <bad.escape>\\\\u{XYZ}<\/bad.escape>\\\"\\n\" +\n           \"  static <builtin>num<\/builtin> <static.member.variable>staticField<\/static.member.variable> = 12345.67890;\\n\" +\n           \"\\n\" +\n           \"  static <static.member.function>staticFunction<\/static.member.function>() {\\n\" +\n           \"    <label>label<\/label>: <static.member.variable>staticField<\/static.member.variable>++; /* block comment */\\n\" +\n           \"  }\\n\\n\" +\n           \"  <constructor.decl>SomeClass<\/constructor.decl>(this.someString);\\n\" +\n           \"\\n\" +\n           \"  <instance.member.function>foo<\/instance.member.function>(<builtin>dynamic<\/builtin> <parameter>param<\/parameter>) {\\n\" +\n           \"    print(<instance.member.variable>someString<\/instance.member.variable> + <parameter>param<\/parameter>);\\n\" +\n           \"    var <local.variable>localVar<\/local.variable> = <class>SomeClass<\/class>.<static.member.variable>staticField<\/static.member.variable>; \\n\" +\n           \"    var <local.variable>localVar2<\/local.variable> = new <constructor.call>SomeClass<\/constructor.call>('content');\\n\" +\n           \"    <local.variable>localVar<\/local.variable>++; \\n\" +\n           \"    <function>localFunction<\/function>() {\\n\" +\n           \"      <local.variable>localVar<\/local.variable> = ```; // bad character\\n\" +\n           \"    };\\n\" +\n           \"  }\\n\" +\n           \"}\";\n  }","commit_id":"2f0a3e6e77000a3819d4144c043487253f1e9508","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"@Override\n  public void annotate(final @NotNull PsiElement node, final @NotNull AnnotationHolder holder) {\n    if (holder.isBatchMode()) return;\n\n    if (node.getNode().getElementType() == DartTokenTypes.REGULAR_STRING_PART) {\n      highlightEscapeSequences(node, holder);\n      return;\n    }\n\n    PsiElement element = node;\n    if (element instanceof DartReference && element.getParent() instanceof DartType) {\n      final TextAttributesKey attribute = getAttributeByBuiltinType(element.getText());\n      if (attribute != null) {\n        holder.createInfoAnnotation(node, null).setTextAttributes(attribute);\n        return;\n      }\n    }\n\n    if (element instanceof DartReference) {\n      final DartReference[] references = PsiTreeUtil.getChildrenOfType(element, DartReference.class);\n      boolean chain = references != null && references.length > 1;\n      if (!chain) {\n        element = ((DartReference)element).resolve(); // todo this takes too much time\n      }\n    }\n    if (element instanceof DartComponentName) {\n      TextAttributesKey attribute = getAttributeByBuiltinType(((DartComponentName)element).getName());\n      if (attribute != null) {\n        holder.createInfoAnnotation(node, null).setTextAttributes(attribute);\n        return;\n      }\n      final boolean isStatic = checkStatic(element.getParent());\n      attribute = getAttributeByType(DartComponentType.typeOf(element.getParent()), isStatic);\n      if (attribute != null) {\n        holder.createInfoAnnotation(node, null).setTextAttributes(attribute);\n      }\n    }\n  }","id":61131,"modified_method":"@Override\n  public void annotate(final @NotNull PsiElement element, final @NotNull AnnotationHolder holder) {\n    if (holder.isBatchMode()) return;\n\n    if (DartTokenTypesSets.BUILT_IN_IDENTIFIERS.contains(element.getNode().getElementType())) {\n      if (element.getNode().getTreeParent().getElementType() != DartTokenTypes.ID) {\n        final String message = ApplicationManager.getApplication().isUnitTestMode() ? \"highlighted as keyword\" : null;\n        holder.createInfoAnnotation(element, message).setTextAttributes(TextAttributesKey.find(DartSyntaxHighlighterColors.DART_KEYWORD));\n        return;\n      }\n    }\n\n    if (element.getNode().getElementType() == DartTokenTypes.REGULAR_STRING_PART) {\n      highlightEscapeSequences(element, holder);\n      return;\n    }\n\n    if (element instanceof DartReference && element.getParent() instanceof DartType && \"dynamic\".equals(element.getText())) {\n      holder.createInfoAnnotation(element, null).setTextAttributes(TextAttributesKey.find(DartSyntaxHighlighterColors.DART_BUILTIN));\n      //noinspection UnnecessaryReturnStatement\n      return;\n    }\n\n    highlightIfDeclarationOrReference(element, holder);\n  }","commit_id":"228fc63ae24b0a3d9dcedabd402828ea2eff240c","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"private static boolean checkStatic(PsiElement parent) {\n    if (parent instanceof DartComponent) {\n      return ((DartComponent)parent).isStatic();\n    }\n    return false;\n  }","id":61132,"modified_method":"private static boolean isStatic(final PsiElement element) {\n    if (element instanceof DartComponent) {\n      return ((DartComponent)element).isStatic();\n    }\n    return false;\n  }","commit_id":"228fc63ae24b0a3d9dcedabd402828ea2eff240c","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"public static void showValuePopup(@NotNull XFullValueEvaluator text, @NotNull MouseEvent event, @NotNull Project project) {\n    final JTextArea textArea = new JTextArea(\"Evaluating...\");\n    textArea.setEditable(false);\n    textArea.setBackground(HintUtil.INFORMATION_COLOR);\n    textArea.setLineWrap(false);\n\n    final JScrollPane component = ScrollPaneFactory.createScrollPane(textArea);\n    final Dimension frameSize = WindowManager.getInstance().getFrame(project).getSize();\n    final Dimension size = new Dimension(frameSize.width / 2, frameSize.height / 2);\n    component.setPreferredSize(size);\n    component.setBorder(null);\n\n    final JBPopup popup = JBPopupFactory.getInstance().createComponentPopupBuilder(component, null)\n      .setResizable(true)\n      .setMovable(true)\n      .setDimensionServiceKey(project, \"XDebugger.FullValuePopup\", false)\n      .setRequestFocus(false)\n      .createPopup();\n\n    text.startEvaluation(new FullValueEvaluationCallbackImpl(popup, textArea));\n\n    final Component parentComponent = event.getComponent();\n    RelativePoint point = new RelativePoint(parentComponent, new Point(event.getX()-size.width, event.getY()-size.height));\n    popup.show(point);\n  }","id":61133,"modified_method":"public static void showValuePopup(@NotNull XFullValueEvaluator text, @NotNull MouseEvent event, @NotNull Project project) {\n    final JTextArea textArea = new JTextArea(\"Evaluating...\");\n    final FullValueEvaluationCallbackImpl callback = new FullValueEvaluationCallbackImpl(textArea);\n    text.startEvaluation(callback);\n    textArea.setEditable(false);\n    textArea.setBackground(HintUtil.INFORMATION_COLOR);\n    textArea.setLineWrap(false);\n\n    final JScrollPane component = ScrollPaneFactory.createScrollPane(textArea);\n    final Dimension frameSize = WindowManager.getInstance().getFrame(project).getSize();\n    Dimension size = DimensionService.getInstance().getSize(FULL_VALUE_POPUP_DIMENSION_KEY, project);\n    if (size == null) {\n      size = new Dimension(frameSize.width / 2, frameSize.height / 2);\n    }\n\n    component.setPreferredSize(size);\n    component.setBorder(null);\n\n    final JBPopup popup = JBPopupFactory.getInstance().createComponentPopupBuilder(component, null)\n      .setResizable(true)\n      .setMovable(true)\n      .setDimensionServiceKey(project, FULL_VALUE_POPUP_DIMENSION_KEY, false)\n      .setRequestFocus(false)\n      .setCancelCallback(new Computable<Boolean>() {\n        public Boolean compute() {\n          callback.setObsolete();\n          return true;\n        }\n      })\n      .createPopup();\n    final Component parentComponent = event.getComponent();\n    RelativePoint point = new RelativePoint(parentComponent, new Point(event.getX()-size.width, event.getY()-size.height));\n    popup.show(point);\n  }","commit_id":"8ed0913a4d3ee97bc114f432f0a6b11896144029","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void evaluated(@NotNull final String fullValue) {\n      invokeOnEventDispatch(new Runnable() {\n        public void run() {\n          myTextArea.setText(fullValue);\n          myTextArea.setCaretPosition(0);\n        }\n      });\n    }","id":61134,"modified_method":"public void evaluated(@NotNull final String fullValue) {\n      evaluated(fullValue, null);\n    }","commit_id":"8ed0913a4d3ee97bc114f432f0a6b11896144029","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public FullValueEvaluationCallbackImpl(final JBPopup popup, final JTextArea textArea) {\n      myPopup = popup;\n      myTextArea = textArea;\n    }","id":61135,"modified_method":"public FullValueEvaluationCallbackImpl(final JTextArea textArea) {\n      myTextArea = textArea;\n    }","commit_id":"8ed0913a4d3ee97bc114f432f0a6b11896144029","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public boolean isObsolete() {\n      return myPopup.isDisposed();\n    }","id":61136,"modified_method":"public boolean isObsolete() {\n      return myObsolete.get();\n    }","commit_id":"8ed0913a4d3ee97bc114f432f0a6b11896144029","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void showComponent(RelativePoint point) {\n    final JBPopup hector = JBPopupFactory.getInstance().createComponentPopupBuilder(this, null)\n      .setRequestFocus(true)\n      .setMovable(true)\n      .setCallback(new Runnable() {\n        public void run() {\n          onClose();\n        }\n      })\n      .createPopup();\n    final JBPopup oldHector = getOldHector();\n    if (oldHector != null){\n      oldHector.cancel();\n    } else {\n      myHectorRef = new WeakReference<JBPopup>(hector);\n      hector.show(point);\n    }\n  }","id":61137,"modified_method":"public void showComponent(RelativePoint point) {\n    final JBPopup hector = JBPopupFactory.getInstance().createComponentPopupBuilder(this, null)\n      .setRequestFocus(true)\n      .setMovable(true)\n      .setCancelCallback(new Computable<Boolean>() {\n        public Boolean compute() {\n          onClose();\n          return Boolean.TRUE;\n        }\n      })\n      .createPopup();\n    final JBPopup oldHector = getOldHector();\n    if (oldHector != null){\n      oldHector.cancel();\n    } else {\n      myHectorRef = new WeakReference<JBPopup>(hector);\n      hector.show(point);\n    }\n  }","commit_id":"05889f2361e419bd6b4ec398f66fb8cf0280eee1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public JBPopup showJavaDocInfo(final Editor editor, PsiFile file, boolean requestFocus) {\n    myEditor = editor;\n    PsiDocumentManager.getInstance(myProject).commitAllDocuments();\n\n    final PsiExpressionList list =\n      ParameterInfoController.findArgumentList(file, editor.getCaretModel().getOffset(), -1);\n    if (list != null) {\n      myParameterInfoController = ParameterInfoController.getControllerAtOffset(editor, list.getTextRange().getStartOffset());\n    }\n\n\n    PsiElement element = TargetElementUtil.findTargetElement(editor,\n                                                             TargetElementUtil.ELEMENT_NAME_ACCEPTED\n                                                             | TargetElementUtil.REFERENCED_ELEMENT_ACCEPTED\n                                                             | TargetElementUtil.LOOKUP_ITEM_ACCEPTED\n                                                             | TargetElementUtil.NEW_AS_CONSTRUCTOR\n                                                             | TargetElementUtil.THIS_ACCEPTED\n                                                             | TargetElementUtil.SUPER_ACCEPTED);\n    PsiElement originalElement = (file != null)?file.findElementAt(editor.getCaretModel().getOffset()): null;\n\n    if (element == null && editor != null) {\n      final PsiReference ref = TargetElementUtil.findReference(editor, editor.getCaretModel().getOffset());\n\n      if (ref != null) {\n        final PsiElement parent = ref.getElement().getParent();\n\n        if (parent instanceof PsiMethodCallExpression) {\n          element = parent;\n        }\n      }\n\n      Lookup activeLookup = LookupManager.getInstance(myProject).getActiveLookup();\n\n      if (activeLookup != null) {\n        LookupItem item = activeLookup.getCurrentItem();\n        if (item == null) return null;\n\n        if (file!=null) {\n          DocumentationProvider documentationProvider = documentationProviders.get(file.getFileType());\n          if (documentationProvider!=null) {\n\n            if (ref!=null) originalElement = ref.getElement();\n            element = documentationProvider.getDocumentationElementForLookupItem(item.getObject(), originalElement);\n          }\n        }\n      }\n    }\n\n    if (element instanceof PsiAnonymousClass) {\n      element = ((PsiAnonymousClass)element).getBaseClassType().resolve();\n    }\n\n    if (element == null && myParameterInfoController != null) {\n      final Object[] objects = myParameterInfoController.getSelectedElements();\n\n      if (objects != null && objects.length > 0) {\n        element = getPsiElementFromParameterInfoObject(objects[0], element);\n      }\n    }\n\n    if (element == null && file != null) { // look if we are within a javadoc comment\n      element = originalElement;\n      if (element == null) return null;\n      PsiDocComment comment = PsiTreeUtil.getParentOfType(element, PsiDocComment.class);\n      if (comment == null) return null;\n      element = comment.getParent();\n      if (!(element instanceof PsiDocCommentOwner)) return null;\n    }\n\n    JBPopupImpl oldHint = (JBPopupImpl)getDocInfoHint();\n    if (oldHint != null) {\n      JavaDocInfoComponent component = (JavaDocInfoComponent)oldHint.getComponent();\n      PsiElement element1 = component.getElement();\n      if (element != null && element.equals(element1)) {\n        if (requestFocus) {\n          component.getComponent().requestFocus();\n        }\n        return oldHint;\n      }\n      oldHint.cancel();\n    }\n\n    JavaDocInfoComponent component = new JavaDocInfoComponent(this);\n\n    try {\n      element.putUserData(ORIGINAL_ELEMENT_KEY,originalElement);\n    } catch(RuntimeException ex) {} // PsiPackage does not allow putUserData\n\n\n    final JBPopup hint = JBPopupFactory.getInstance().createComponentPopupBuilder(component, component)\n      .setRequestFocus(true)\n      .setForceHeavyweight(false)\n      .setDimensionServiceKey(JAVADOC_LOCATION_AND_SIZE)\n      .setResizable(true)\n      .setMovable(true)\n      .setTitle(CodeInsightBundle.message(\"javadoc.info.title\", SymbolPresentationUtil.getSymbolPresentableText(element)))\n      .setCallback(new Runnable(){\n        public void run() {\n\n          if (fromQuickSearch()) {\n            ((ChooseByNameBase.JPanelProvider)myPreviouslyFocused.getParent()).unregisterHint();\n          }\n\n          myEditor = null;\n          myPreviouslyFocused = null;\n          myParameterInfoController = null;\n        }})\n      .createPopup();\n\n\n    component.setHint(hint);\n\n    fetchDocInfo(getDefaultProvider(element), component);\n\n    myDocInfoHintRef = new WeakReference<JBPopup>(hint);\n\n    return hint;\n  }","id":61138,"modified_method":"public JBPopup showJavaDocInfo(final Editor editor, PsiFile file, boolean requestFocus) {\n    myEditor = editor;\n    PsiDocumentManager.getInstance(myProject).commitAllDocuments();\n\n    final PsiExpressionList list =\n      ParameterInfoController.findArgumentList(file, editor.getCaretModel().getOffset(), -1);\n    if (list != null) {\n      myParameterInfoController = ParameterInfoController.getControllerAtOffset(editor, list.getTextRange().getStartOffset());\n    }\n\n\n    PsiElement element = TargetElementUtil.findTargetElement(editor,\n                                                             TargetElementUtil.ELEMENT_NAME_ACCEPTED\n                                                             | TargetElementUtil.REFERENCED_ELEMENT_ACCEPTED\n                                                             | TargetElementUtil.LOOKUP_ITEM_ACCEPTED\n                                                             | TargetElementUtil.NEW_AS_CONSTRUCTOR\n                                                             | TargetElementUtil.THIS_ACCEPTED\n                                                             | TargetElementUtil.SUPER_ACCEPTED);\n    PsiElement originalElement = (file != null)?file.findElementAt(editor.getCaretModel().getOffset()): null;\n\n    if (element == null && editor != null) {\n      final PsiReference ref = TargetElementUtil.findReference(editor, editor.getCaretModel().getOffset());\n\n      if (ref != null) {\n        final PsiElement parent = ref.getElement().getParent();\n\n        if (parent instanceof PsiMethodCallExpression) {\n          element = parent;\n        }\n      }\n\n      Lookup activeLookup = LookupManager.getInstance(myProject).getActiveLookup();\n\n      if (activeLookup != null) {\n        LookupItem item = activeLookup.getCurrentItem();\n        if (item == null) return null;\n\n        if (file!=null) {\n          DocumentationProvider documentationProvider = documentationProviders.get(file.getFileType());\n          if (documentationProvider!=null) {\n\n            if (ref!=null) originalElement = ref.getElement();\n            element = documentationProvider.getDocumentationElementForLookupItem(item.getObject(), originalElement);\n          }\n        }\n      }\n    }\n\n    if (element instanceof PsiAnonymousClass) {\n      element = ((PsiAnonymousClass)element).getBaseClassType().resolve();\n    }\n\n    if (element == null && myParameterInfoController != null) {\n      final Object[] objects = myParameterInfoController.getSelectedElements();\n\n      if (objects != null && objects.length > 0) {\n        element = getPsiElementFromParameterInfoObject(objects[0], element);\n      }\n    }\n\n    if (element == null && file != null) { // look if we are within a javadoc comment\n      element = originalElement;\n      if (element == null) return null;\n      PsiDocComment comment = PsiTreeUtil.getParentOfType(element, PsiDocComment.class);\n      if (comment == null) return null;\n      element = comment.getParent();\n      if (!(element instanceof PsiDocCommentOwner)) return null;\n    }\n\n    JBPopupImpl oldHint = (JBPopupImpl)getDocInfoHint();\n    if (oldHint != null) {\n      JavaDocInfoComponent component = (JavaDocInfoComponent)oldHint.getComponent();\n      PsiElement element1 = component.getElement();\n      if (element != null && element.equals(element1)) {\n        if (requestFocus) {\n          component.getComponent().requestFocus();\n        }\n        return oldHint;\n      }\n      oldHint.cancel();\n    }\n\n    JavaDocInfoComponent component = new JavaDocInfoComponent(this);\n\n    try {\n      element.putUserData(ORIGINAL_ELEMENT_KEY,originalElement);\n    } catch(RuntimeException ex) {} // PsiPackage does not allow putUserData\n\n\n    final JBPopup hint = JBPopupFactory.getInstance().createComponentPopupBuilder(component, component)\n      .setRequestFocus(true)\n      .setForceHeavyweight(false)\n      .setDimensionServiceKey(JAVADOC_LOCATION_AND_SIZE)\n      .setResizable(true)\n      .setMovable(true)\n      .setTitle(CodeInsightBundle.message(\"javadoc.info.title\", SymbolPresentationUtil.getSymbolPresentableText(element)))\n      .setCancelCallback(new Computable<Boolean>(){\n        public Boolean compute() {\n          if (fromQuickSearch()) {\n            ((ChooseByNameBase.JPanelProvider)myPreviouslyFocused.getParent()).unregisterHint();\n          }\n\n          myEditor = null;\n          myPreviouslyFocused = null;\n          myParameterInfoController = null;\n          return Boolean.TRUE;\n        }\n      })\n      .createPopup();\n\n\n    component.setHint(hint);\n\n    fetchDocInfo(getDefaultProvider(element), component);\n\n    myDocInfoHintRef = new WeakReference<JBPopup>(hint);\n\n    return hint;\n  }","commit_id":"05889f2361e419bd6b4ec398f66fb8cf0280eee1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public JBPopup showJavaDocInfo(@NotNull PsiElement element) {\n    final JavaDocInfoComponent component = new JavaDocInfoComponent(this);\n\n\n    final JBPopup hint = JBPopupFactory.getInstance().createComponentPopupBuilder(component, component)\n      .setRequestFocus(true)\n      .setForceHeavyweight(true)\n      .setDimensionServiceKey(JAVADOC_LOCATION_AND_SIZE)\n      .setResizable(true)\n      .setMovable(true)\n      .setTitle(CodeInsightBundle.message(\"javadoc.info.title\", SymbolPresentationUtil.getSymbolPresentableText(element)))\n      .setCallback(new Runnable(){\n        public void run() {\n          if (fromQuickSearch()) {\n            ((ChooseByNameBase.JPanelProvider)myPreviouslyFocused.getParent()).unregisterHint();\n          }\n\n          myEditor = null;\n          myPreviouslyFocused = null;\n        }})\n      .createPopup();\n\n\n    JBPopupImpl oldHint = (JBPopupImpl)getDocInfoHint();\n\n    if (oldHint != null) {\n      JavaDocInfoComponent oldComponent = (JavaDocInfoComponent)oldHint.getComponent();\n      PsiElement element1 = oldComponent.getElement();\n      if (element.equals(element1)) {\n        return oldHint;\n      }\n      oldHint.cancel();\n    }\n\n    component.setHint(hint);\n\n    fetchDocInfo(getDefaultProvider(element), component);\n\n    myDocInfoHintRef = new WeakReference<JBPopup>(hint);\n\n    myPreviouslyFocused = WindowManagerEx.getInstanceEx().getFocusedComponent(myProject);\n\n    if (fromQuickSearch()) {\n      ((ChooseByNameBase.JPanelProvider)myPreviouslyFocused.getParent()).registerHint(hint);\n    }\n\n    return hint;\n  }","id":61139,"modified_method":"public JBPopup showJavaDocInfo(@NotNull PsiElement element) {\n    final JavaDocInfoComponent component = new JavaDocInfoComponent(this);\n\n\n    final JBPopup hint = JBPopupFactory.getInstance().createComponentPopupBuilder(component, component)\n      .setRequestFocus(true)\n      .setForceHeavyweight(true)\n      .setDimensionServiceKey(JAVADOC_LOCATION_AND_SIZE)\n      .setResizable(true)\n      .setMovable(true)\n      .setTitle(CodeInsightBundle.message(\"javadoc.info.title\", SymbolPresentationUtil.getSymbolPresentableText(element)))\n      .setCancelCallback(new Computable<Boolean>() {\n        public Boolean compute() {\n          if (fromQuickSearch()) {\n            ((ChooseByNameBase.JPanelProvider)myPreviouslyFocused.getParent()).unregisterHint();\n          }\n\n          myEditor = null;\n          myPreviouslyFocused = null;\n          return Boolean.TRUE;\n        }\n      })\n      .createPopup();\n\n\n    JBPopupImpl oldHint = (JBPopupImpl)getDocInfoHint();\n\n    if (oldHint != null) {\n      JavaDocInfoComponent oldComponent = (JavaDocInfoComponent)oldHint.getComponent();\n      PsiElement element1 = oldComponent.getElement();\n      if (element.equals(element1)) {\n        return oldHint;\n      }\n      oldHint.cancel();\n    }\n\n    component.setHint(hint);\n\n    fetchDocInfo(getDefaultProvider(element), component);\n\n    myDocInfoHintRef = new WeakReference<JBPopup>(hint);\n\n    myPreviouslyFocused = WindowManagerEx.getInstanceEx().getFocusedComponent(myProject);\n\n    if (fromQuickSearch()) {\n      ((ChooseByNameBase.JPanelProvider)myPreviouslyFocused.getParent()).registerHint(hint);\n    }\n\n    return hint;\n  }","commit_id":"05889f2361e419bd6b4ec398f66fb8cf0280eee1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void show() {\n      if (myPopup != null) {\n        myPopup.cancel();\n      }\n\n      myPopup = JBPopupFactory.getInstance().createComponentPopupBuilder(myPanel, myCancelButton)\n        .setForceHeavyweight(true)\n        .setRequestFocus(true)\n        .createPopup();\n      myPopup.showInCenterOf(myParentWindow);\n      StackingPopupDispatcher.onPopupHidden(myPopup); // Mouse click hiding is not necessary.\n\n      SwingUtilities.invokeLater(new Runnable() {\n        public void run() {\n          myCancelButton.requestFocus();\n        }\n      });\n    }","id":61140,"modified_method":"public void show() {\n      if (myPopup != null) {\n        myPopup.cancel();\n      }\n\n      myPopup = JBPopupFactory.getInstance().createComponentPopupBuilder(myPanel, myCancelButton)\n        .setForceHeavyweight(true)\n        .setRequestFocus(true)\n        .setCancelCallback(new Computable<Boolean>() {\n          public Boolean compute() {\n            return isCanceled() || !isRunning();\n          }\n        }).createPopup();\n      myPopup.showInCenterOf(myParentWindow);\n      StackingPopupDispatcher.onPopupHidden(myPopup); // Mouse click hiding is not necessary.\n\n      SwingUtilities.invokeLater(new Runnable() {\n        public void run() {\n          myCancelButton.requestFocus();\n        }\n      });\n    }","commit_id":"05889f2361e419bd6b4ec398f66fb8cf0280eee1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void doNavigate(final int index) {\n    final Project project = CommonDataKeys.PROJECT.getData(DataManager.getInstance().getDataContext(getField().getTextEditor()));\n    final Executor executor = ourShiftIsPressed.get()\n                              ? DefaultRunExecutor.getRunExecutorInstance()\n                              : ExecutorRegistry.getInstance().getExecutorById(ToolWindowId.DEBUG);\n    assert project != null;\n    final SearchListModel model = getModel();\n    if (isMoreItem(index)) {\n      final String pattern = myPopupField.getText();\n      WidgetID wid = null;\n      if (index == model.moreIndex.classes) wid = WidgetID.CLASSES;\n      else if (index == model.moreIndex.files) wid = WidgetID.FILES;\n      else if (index == model.moreIndex.settings) wid = WidgetID.SETTINGS;\n      else if (index == model.moreIndex.actions) wid = WidgetID.ACTIONS;\n      else if (index == model.moreIndex.symbols) wid = WidgetID.SYMBOLS;\n      else if (index == model.moreIndex.runConfigurations) wid = WidgetID.RUN_CONFIGURATIONS;\n      if (wid != null) {\n        final WidgetID widgetID = wid;\n        myCurrentWorker.doWhenProcessed(new Runnable() {\n          @Override\n          public void run() {\n            myCalcThread = new CalcThread(project, pattern, true);\n            myPopupActualWidth = 0;\n            myCurrentWorker = myCalcThread.insert(index, widgetID);\n          }\n        });\n\n        return;\n      }\n    }\n    final String pattern = getField().getText();\n    final Object value = myList.getSelectedValue();\n    saveHistory(project, pattern, value);\n    IdeFocusManager focusManager = IdeFocusManager.findInstanceByComponent(getField().getTextEditor());\n    if (myPopup != null && myPopup.isVisible()) {\n      myPopup.cancel();\n    }\n\n    if (value instanceof BooleanOptionDescription) {\n      final BooleanOptionDescription option = (BooleanOptionDescription)value;\n      option.setOptionState(!option.isOptionEnabled());\n      myList.revalidate();\n      myList.repaint();\n      return;\n    }\n\n    if (value instanceof OptionsTopHitProvider) {\n      //noinspection SSBasedInspection\n      SwingUtilities.invokeLater(new Runnable() {\n        @Override\n        public void run() {\n          getField().setText(\"#\" + ((OptionsTopHitProvider)value).getId() + \" \");\n        }\n      });\n      return;\n    }\n    Runnable onDone = null;\n\n    AccessToken token = ApplicationManager.getApplication().acquireReadActionLock();\n    try {\n      if (value instanceof PsiElement) {\n        onDone = new Runnable() {\n          public void run() {\n            NavigationUtil.activateFileWithPsiElement((PsiElement)value, true);\n          }\n        };\n        return;\n      }\n      else if (isVirtualFile(value)) {\n        onDone = new Runnable() {\n          public void run() {\n            OpenSourceUtil.navigate(true, new OpenFileDescriptor(project, (VirtualFile)value));\n          }\n        };\n        return;\n      }\n      else if (isActionValue(value) || isSetting(value) || isRunConfiguration(value)) {\n        focusManager.requestDefaultFocus(true);\n        final Component comp = myContextComponent;\n        final AnActionEvent event = myActionEvent;\n        IdeFocusManager.getInstance(project).doWhenFocusSettlesDown(new Runnable() {\n          @Override\n          public void run() {\n            Component c = comp;\n            if (c == null) {\n              c = KeyboardFocusManager.getCurrentKeyboardFocusManager().getFocusOwner();\n            }\n\n            if (isRunConfiguration(value)) {\n              ((ChooseRunConfigurationPopup.ItemWrapper)value).perform(project, executor, DataManager.getInstance().getDataContext(c));\n            } else {\n              GotoActionAction.openOptionOrPerformAction(value, pattern, project, c, event);\n              if (isToolWindowAction(value)) return;\n            }\n          }\n        });\n        return;\n      }\n      else if (value instanceof Navigatable) {\n        onDone = new Runnable() {\n          @Override\n          public void run() {\n            OpenSourceUtil.navigate(true, (Navigatable)value);\n          }\n        };\n        return;\n      }\n    }\n    finally {\n      token.finish();\n      final ActionCallback callback = onFocusLost();\n      if (onDone != null) {\n        callback.doWhenDone(onDone);\n      }\n    }\n    focusManager.requestDefaultFocus(true);\n  }","id":61141,"modified_method":"private void doNavigate(final int index) {\n    final Project project = CommonDataKeys.PROJECT.getData(DataManager.getInstance().getDataContext(getField().getTextEditor()));\n    final Executor executor = ourShiftIsPressed.get()\n                              ? DefaultRunExecutor.getRunExecutorInstance()\n                              : ExecutorRegistry.getInstance().getExecutorById(ToolWindowId.DEBUG);\n    assert project != null;\n    final SearchListModel model = getModel();\n    if (isMoreItem(index)) {\n      final String pattern = myPopupField.getText();\n      WidgetID wid = null;\n      if (index == model.moreIndex.classes) wid = WidgetID.CLASSES;\n      else if (index == model.moreIndex.files) wid = WidgetID.FILES;\n      else if (index == model.moreIndex.settings) wid = WidgetID.SETTINGS;\n      else if (index == model.moreIndex.actions) wid = WidgetID.ACTIONS;\n      else if (index == model.moreIndex.symbols) wid = WidgetID.SYMBOLS;\n      else if (index == model.moreIndex.runConfigurations) wid = WidgetID.RUN_CONFIGURATIONS;\n      if (wid != null) {\n        final WidgetID widgetID = wid;\n        myCurrentWorker.doWhenProcessed(new Runnable() {\n          @Override\n          public void run() {\n            myCalcThread = new CalcThread(project, pattern, true);\n            myPopupActualWidth = 0;\n            myCurrentWorker = myCalcThread.insert(index, widgetID);\n          }\n        });\n\n        return;\n      }\n    }\n    final String pattern = getField().getText();\n    final Object value = myList.getSelectedValue();\n    saveHistory(project, pattern, value);\n    IdeFocusManager focusManager = IdeFocusManager.findInstanceByComponent(getField().getTextEditor());\n    if (myPopup != null && myPopup.isVisible()) {\n      myPopup.cancel();\n    }\n\n    if (value instanceof BooleanOptionDescription) {\n      final BooleanOptionDescription option = (BooleanOptionDescription)value;\n      option.setOptionState(!option.isOptionEnabled());\n      myList.revalidate();\n      myList.repaint();\n      getField().requestFocus();\n      return;\n    }\n\n    if (value instanceof OptionsTopHitProvider) {\n      //noinspection SSBasedInspection\n      SwingUtilities.invokeLater(new Runnable() {\n        @Override\n        public void run() {\n          getField().setText(\"#\" + ((OptionsTopHitProvider)value).getId() + \" \");\n        }\n      });\n      return;\n    }\n    Runnable onDone = null;\n\n    AccessToken token = ApplicationManager.getApplication().acquireReadActionLock();\n    try {\n      if (value instanceof PsiElement) {\n        onDone = new Runnable() {\n          public void run() {\n            NavigationUtil.activateFileWithPsiElement((PsiElement)value, true);\n          }\n        };\n        return;\n      }\n      else if (isVirtualFile(value)) {\n        onDone = new Runnable() {\n          public void run() {\n            OpenSourceUtil.navigate(true, new OpenFileDescriptor(project, (VirtualFile)value));\n          }\n        };\n        return;\n      }\n      else if (isActionValue(value) || isSetting(value) || isRunConfiguration(value)) {\n        focusManager.requestDefaultFocus(true);\n        final Component comp = myContextComponent;\n        final AnActionEvent event = myActionEvent;\n        IdeFocusManager.getInstance(project).doWhenFocusSettlesDown(new Runnable() {\n          @Override\n          public void run() {\n            Component c = comp;\n            if (c == null) {\n              c = KeyboardFocusManager.getCurrentKeyboardFocusManager().getFocusOwner();\n            }\n\n            if (isRunConfiguration(value)) {\n              ((ChooseRunConfigurationPopup.ItemWrapper)value).perform(project, executor, DataManager.getInstance().getDataContext(c));\n            } else {\n              GotoActionAction.openOptionOrPerformAction(value, pattern, project, c, event);\n              if (isToolWindowAction(value)) return;\n            }\n          }\n        });\n        return;\n      }\n      else if (value instanceof Navigatable) {\n        onDone = new Runnable() {\n          @Override\n          public void run() {\n            OpenSourceUtil.navigate(true, (Navigatable)value);\n          }\n        };\n        return;\n      }\n    }\n    finally {\n      token.finish();\n      final ActionCallback callback = onFocusLost();\n      if (onDone != null) {\n        callback.doWhenDone(onDone);\n      }\n    }\n    focusManager.requestDefaultFocus(true);\n  }","commit_id":"3728cea1deefae531ab81f2ab0bc570dcaab0408","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void actionPerformed(AnActionEvent e, MouseEvent me) {\n    if (myBalloon != null && myBalloon.isVisible()) {\n      showAll.set(!showAll.get());\n      myNonProjectCheckBox.setSelected(showAll.get());\n//      myPopupField.getTextEditor().setBackground(showAll.get() ? new JBColor(new Color(0xffffe4), new Color(0x494539)) : UIUtil.getTextFieldBackground());\n      rebuildList(myPopupField.getText());\n      return;\n    }\n    myCurrentWorker = ActionCallback.DONE;\n    if (e != null) {\n      myEditor = e.getData(CommonDataKeys.EDITOR);\n      myFile = e.getData(CommonDataKeys.PSI_FILE);\n    }\n    if (e == null && myFocusOwner != null) {\n      e = new AnActionEvent(me, DataManager.getInstance().getDataContext(myFocusOwner), ActionPlaces.UNKNOWN, getTemplatePresentation(), ActionManager.getInstance(), 0);\n    }\n    if (e == null) return;\n\n    updateComponents();\n    myContextComponent = PlatformDataKeys.CONTEXT_COMPONENT.getData(e.getDataContext());\n    Window wnd = myContextComponent != null ? SwingUtilities.windowForComponent(myContextComponent)\n      : KeyboardFocusManager.getCurrentKeyboardFocusManager().getFocusedWindow();\n    if (wnd == null && myContextComponent instanceof Window) {\n      wnd = (Window)myContextComponent;\n    }\n    if (wnd == null || wnd.getParent() != null) return;\n    myActionEvent = e;\n    if (myPopupField != null) {\n      Disposer.dispose(myPopupField);\n    }\n    myPopupField = new MySearchTextField();\n    myPopupField.getTextEditor().addKeyListener(new KeyAdapter() {\n      @Override\n      public void keyTyped(KeyEvent e) {\n        myHistoryIndex = 0;\n        myHistoryItem = null;\n      }\n\n      @Override\n      public void keyPressed(KeyEvent e) {\n        if (e.getKeyCode() == KeyEvent.VK_SHIFT) {\n          myList.repaint();\n        }\n      }\n\n      @Override\n      public void keyReleased(KeyEvent e) {\n        if (e.getKeyCode() == KeyEvent.VK_SHIFT) {\n          myList.repaint();\n        }\n      }\n    });\n    initSearchField(myPopupField);\n    myPopupField.setOpaque(false);\n    final JTextField editor = myPopupField.getTextEditor();\n    editor.setColumns(SEARCH_FIELD_COLUMNS);\n    final JPanel panel = new JPanel(new BorderLayout()) {\n      @Override\n      protected void paintComponent(Graphics g) {\n        final Gradient gradient = getGradientColors();\n        ((Graphics2D)g).setPaint(new GradientPaint(0, 0, gradient.getStartColor(), 0, getHeight(), gradient.getEndColor()));\n        g.fillRect(0, 0, getWidth(), getHeight());\n      }\n    };\n    final JLabel title = new JLabel(\" Search Everywhere:       \");\n    final JPanel topPanel = new NonOpaquePanel(new BorderLayout());\n    title.setForeground(new JBColor(Gray._240, Gray._200));\n    if (SystemInfo.isMac) {\n      title.setFont(title.getFont().deriveFont(Font.BOLD, title.getFont().getSize() - 1f));\n    } else {\n      title.setFont(title.getFont().deriveFont(Font.BOLD));\n    }\n    topPanel.add(title, BorderLayout.WEST);\n    final JPanel controls = new JPanel(new BorderLayout());\n    controls.setOpaque(false);\n    final JLabel settings = new JLabel(AllIcons.General.WebSettings);\n    new ClickListener(){\n      @Override\n      public boolean onClick(@NotNull MouseEvent event, int clickCount) {\n        showSettings();\n        return true;\n      }\n    }.installOn(settings);\n    controls.add(settings, BorderLayout.EAST);\n    myNonProjectCheckBox.setForeground(new JBColor(Gray._240, Gray._200));\n    myNonProjectCheckBox.setText(\"Include non-project items (\" + getShortcut() + \")  \");\n    if (!NonProjectScopeDisablerEP.isSearchInNonProjectDisabled()) {\n      controls.add(myNonProjectCheckBox, BorderLayout.WEST);\n    }\n    topPanel.add(controls, BorderLayout.EAST);\n    panel.add(myPopupField, BorderLayout.CENTER);\n    panel.add(topPanel, BorderLayout.NORTH);\n    panel.setBorder(IdeBorderFactory.createEmptyBorder(3, 5, 4, 5));\n    DataManager.registerDataProvider(panel, this);\n    final ComponentPopupBuilder builder = JBPopupFactory.getInstance().createComponentPopupBuilder(panel, editor);\n    myBalloon = builder\n      .setCancelOnClickOutside(true)\n      .setModalContext(false)\n      .setRequestFocus(true)\n      .createPopup();\n    myBalloon.getContent().setBorder(new EmptyBorder(0,0,0,0));\n    final Window window = WindowManager.getInstance().suggestParentWindow(e.getProject());\n\n    //noinspection ConstantConditions\n    e.getProject().getMessageBus().connect(myBalloon).subscribe(DumbService.DUMB_MODE, new DumbService.DumbModeListener() {\n      @Override\n      public void enteredDumbMode() {\n      }\n\n      @Override\n      public void exitDumbMode() {\n        rebuildList(myPopupField.getText());\n      }\n    });\n\n    Component parent = UIUtil.findUltimateParent(window);\n    registerDataProvider(panel, e.getProject());\n    final RelativePoint showPoint;\n    if (me != null) {\n      final Component label = me.getComponent();\n      final Component button = label.getParent();\n      assert button != null;\n      showPoint = new RelativePoint(button, new Point(button.getWidth() - panel.getPreferredSize().width, button.getHeight()));\n    } else {\n      if (parent != null) {\n        int height = UISettings.getInstance().SHOW_MAIN_TOOLBAR ? 135 : 115;\n        if (parent instanceof IdeFrameImpl && ((IdeFrameImpl)parent).isInFullScreen()) {\n          height -= 20;\n        }\n        showPoint = new RelativePoint(parent, new Point((parent.getSize().width - panel.getPreferredSize().width)/ 2, height));\n      } else {\n        showPoint = JBPopupFactory.getInstance().guessBestPopupLocation(e.getDataContext());\n      }\n    }\n    myList.setFont(UIUtil.getListFont());\n    myBalloon.show(showPoint);\n    initSearchActions(myBalloon, myPopupField);\n    IdeFocusManager focusManager = IdeFocusManager.getInstance(e.getProject());\n    focusManager.requestFocus(editor, true);\n    FeatureUsageTracker.getInstance().triggerFeatureUsed(IdeActions.ACTION_SEARCH_EVERYWHERE);\n  }","id":61142,"modified_method":"public void actionPerformed(AnActionEvent e, MouseEvent me) {\n    if (myBalloon != null && myBalloon.isVisible()) {\n      showAll.set(!showAll.get());\n      myNonProjectCheckBox.setSelected(showAll.get());\n//      myPopupField.getTextEditor().setBackground(showAll.get() ? new JBColor(new Color(0xffffe4), new Color(0x494539)) : UIUtil.getTextFieldBackground());\n      rebuildList(myPopupField.getText());\n      return;\n    }\n    myCurrentWorker = ActionCallback.DONE;\n    if (e != null) {\n      myEditor = e.getData(CommonDataKeys.EDITOR);\n      myFile = e.getData(CommonDataKeys.PSI_FILE);\n    }\n    if (e == null && myFocusOwner != null) {\n      e = new AnActionEvent(me, DataManager.getInstance().getDataContext(myFocusOwner), ActionPlaces.UNKNOWN, getTemplatePresentation(), ActionManager.getInstance(), 0);\n    }\n    if (e == null) return;\n\n    updateComponents();\n    myContextComponent = PlatformDataKeys.CONTEXT_COMPONENT.getData(e.getDataContext());\n    Window wnd = myContextComponent != null ? SwingUtilities.windowForComponent(myContextComponent)\n      : KeyboardFocusManager.getCurrentKeyboardFocusManager().getFocusedWindow();\n    if (wnd == null && myContextComponent instanceof Window) {\n      wnd = (Window)myContextComponent;\n    }\n    if (wnd == null || wnd.getParent() != null) return;\n    myActionEvent = e;\n    if (myPopupField != null) {\n      Disposer.dispose(myPopupField);\n    }\n    myPopupField = new MySearchTextField();\n    myPopupField.getTextEditor().addKeyListener(new KeyAdapter() {\n      @Override\n      public void keyTyped(KeyEvent e) {\n        myHistoryIndex = 0;\n        myHistoryItem = null;\n      }\n\n      @Override\n      public void keyPressed(KeyEvent e) {\n        if (e.getKeyCode() == KeyEvent.VK_SHIFT) {\n          myList.repaint();\n        }\n      }\n\n      @Override\n      public void keyReleased(KeyEvent e) {\n        if (e.getKeyCode() == KeyEvent.VK_SHIFT) {\n          myList.repaint();\n        }\n      }\n    });\n    initSearchField(myPopupField);\n    myPopupField.setOpaque(false);\n    final JTextField editor = myPopupField.getTextEditor();\n    editor.setColumns(SEARCH_FIELD_COLUMNS);\n    final JPanel panel = new JPanel(new BorderLayout()) {\n      @Override\n      protected void paintComponent(Graphics g) {\n        final Gradient gradient = getGradientColors();\n        ((Graphics2D)g).setPaint(new GradientPaint(0, 0, gradient.getStartColor(), 0, getHeight(), gradient.getEndColor()));\n        g.fillRect(0, 0, getWidth(), getHeight());\n      }\n    };\n    final JLabel title = new JLabel(\" Search Everywhere:       \");\n    final JPanel topPanel = new NonOpaquePanel(new BorderLayout());\n    title.setForeground(new JBColor(Gray._240, Gray._200));\n    if (SystemInfo.isMac) {\n      title.setFont(title.getFont().deriveFont(Font.BOLD, title.getFont().getSize() - 1f));\n    } else {\n      title.setFont(title.getFont().deriveFont(Font.BOLD));\n    }\n    topPanel.add(title, BorderLayout.WEST);\n    final JPanel controls = new JPanel(new BorderLayout());\n    controls.setOpaque(false);\n    final JLabel settings = new JLabel(AllIcons.General.WebSettings);\n    new ClickListener(){\n      @Override\n      public boolean onClick(@NotNull MouseEvent event, int clickCount) {\n        showSettings();\n        return true;\n      }\n    }.installOn(settings);\n    controls.add(settings, BorderLayout.EAST);\n    myNonProjectCheckBox.setForeground(new JBColor(Gray._240, Gray._200));\n    myNonProjectCheckBox.setText(\"Include non-project items (\" + getShortcut() + \")  \");\n    if (!NonProjectScopeDisablerEP.isSearchInNonProjectDisabled()) {\n      controls.add(myNonProjectCheckBox, BorderLayout.WEST);\n    }\n    topPanel.add(controls, BorderLayout.EAST);\n    panel.add(myPopupField, BorderLayout.CENTER);\n    panel.add(topPanel, BorderLayout.NORTH);\n    panel.setBorder(IdeBorderFactory.createEmptyBorder(3, 5, 4, 5));\n    DataManager.registerDataProvider(panel, this);\n    final ComponentPopupBuilder builder = JBPopupFactory.getInstance().createComponentPopupBuilder(panel, editor);\n    myBalloon = builder\n      .setCancelOnClickOutside(true)\n      .setModalContext(false)\n      .setRequestFocus(true)\n      .setCancelCallback(new Computable<Boolean>() {\n        @Override\n        public Boolean compute() {\n          return !mySkipFocusGain;\n        }\n      })\n      .createPopup();\n    myBalloon.getContent().setBorder(new EmptyBorder(0,0,0,0));\n    final Window window = WindowManager.getInstance().suggestParentWindow(e.getProject());\n\n    //noinspection ConstantConditions\n    e.getProject().getMessageBus().connect(myBalloon).subscribe(DumbService.DUMB_MODE, new DumbService.DumbModeListener() {\n      @Override\n      public void enteredDumbMode() {\n      }\n\n      @Override\n      public void exitDumbMode() {\n        rebuildList(myPopupField.getText());\n      }\n    });\n\n    Component parent = UIUtil.findUltimateParent(window);\n    registerDataProvider(panel, e.getProject());\n    final RelativePoint showPoint;\n    if (me != null) {\n      final Component label = me.getComponent();\n      final Component button = label.getParent();\n      assert button != null;\n      showPoint = new RelativePoint(button, new Point(button.getWidth() - panel.getPreferredSize().width, button.getHeight()));\n    } else {\n      if (parent != null) {\n        int height = UISettings.getInstance().SHOW_MAIN_TOOLBAR ? 135 : 115;\n        if (parent instanceof IdeFrameImpl && ((IdeFrameImpl)parent).isInFullScreen()) {\n          height -= 20;\n        }\n        showPoint = new RelativePoint(parent, new Point((parent.getSize().width - panel.getPreferredSize().width)/ 2, height));\n      } else {\n        showPoint = JBPopupFactory.getInstance().guessBestPopupLocation(e.getDataContext());\n      }\n    }\n    myList.setFont(UIUtil.getListFont());\n    myBalloon.show(showPoint);\n    initSearchActions(myBalloon, myPopupField);\n    IdeFocusManager focusManager = IdeFocusManager.getInstance(e.getProject());\n    focusManager.requestFocus(editor, true);\n    FeatureUsageTracker.getInstance().triggerFeatureUsed(IdeActions.ACTION_SEARCH_EVERYWHERE);\n  }","commit_id":"3728cea1deefae531ab81f2ab0bc570dcaab0408","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void run() {\n      try {\n        check();\n\n        //noinspection SSBasedInspection\n        SwingUtilities.invokeLater(new Runnable() {\n          @Override\n          public void run() {\n            // this line must be called on EDT to avoid context switch at clear().append(\"text\") Don't touch. Ask [kb]\n            myList.getEmptyText().setText(\"Searching...\");\n\n            if (myList.getModel() instanceof SearchListModel) {\n              //noinspection unchecked\n              myAlarm.cancelAllRequests();\n              myAlarm.addRequest(new Runnable() {\n                @Override\n                public void run() {\n                  if (!myDone.isRejected()) {\n                    myList.setModel(myListModel);\n                    updatePopup();\n                  }\n                }\n              }, 50);\n            } else {\n              myList.setModel(myListModel);\n            }\n          }\n        });\n\n        if (pattern.trim().length() == 0) {\n          buildModelFromRecentFiles();\n          updatePopup();\n          return;\n        }\n\n        checkModelsUpToDate();              check();\n        buildTopHit(pattern);               check();\n\n        if (!pattern.startsWith(\"#\")) {\n          buildRecentFiles(pattern);\n          check();\n          updatePopup();\n          check();\n          buildToolWindows(pattern);\n          check();\n          updatePopup();\n          check();\n\n          runReadAction(new Runnable() {\n            public void run() {\n              buildRunConfigurations(pattern);\n            }\n          }, true);\n          runReadAction(new Runnable() {\n            public void run() {\n              buildClasses(pattern);\n            }\n          }, true);\n          runReadAction(new Runnable() {\n            public void run() {\n              buildFiles(pattern);\n            }\n          }, false);\n\n          buildActionsAndSettings(pattern);\n\n          updatePopup();\n\n          runReadAction(new Runnable() {\n            public void run() {\n              buildSymbols(pattern);\n            }\n          }, true);\n        }\n        updatePopup();\n      }\n      catch (ProcessCanceledException ignore) {\n        myDone.setRejected();\n      }\n      catch (Exception e) {\n        LOG.error(e);\n        myDone.setRejected();\n      }\n      finally {\n        if (!isCanceled()) {\n          myList.getEmptyText().setText(StatusText.DEFAULT_EMPTY_TEXT);\n          updatePopup();\n        }\n        if (!myDone.isProcessed()) {\n          myDone.setDone();\n        }\n      }\n    }","id":61143,"modified_method":"@Override\n    public void run() {\n      try {\n        check();\n\n        //noinspection SSBasedInspection\n        SwingUtilities.invokeLater(new Runnable() {\n          @Override\n          public void run() {\n            // this line must be called on EDT to avoid context switch at clear().append(\"text\") Don't touch. Ask [kb]\n            myList.getEmptyText().setText(\"Searching...\");\n\n            if (myList.getModel() instanceof SearchListModel) {\n              //noinspection unchecked\n              myAlarm.cancelAllRequests();\n              myAlarm.addRequest(new Runnable() {\n                @Override\n                public void run() {\n                  if (!myDone.isRejected()) {\n                    myList.setModel(myListModel);\n                    updatePopup();\n                  }\n                }\n              }, 50);\n            } else {\n              myList.setModel(myListModel);\n            }\n          }\n        });\n\n        if (pattern.trim().length() == 0) {\n          buildModelFromRecentFiles();\n          updatePopup();\n          return;\n        }\n\n        checkModelsUpToDate();              check();\n        buildTopHit(pattern);               check();\n\n        if (!pattern.startsWith(\"#\")) {\n          buildRecentFiles(pattern);\n          check();\n          updatePopup();\n          check();\n          buildToolWindows(pattern);\n          check();\n          updatePopup();\n          check();\n\n          runReadAction(new Runnable() {\n            public void run() {\n              buildRunConfigurations(pattern);\n            }\n          }, true);\n          runReadAction(new Runnable() {\n            public void run() {\n              buildClasses(pattern);\n            }\n          }, true);\n          runReadAction(new Runnable() {\n            public void run() {\n              buildFiles(pattern);\n            }\n          }, false);\n          runReadAction(new Runnable() {\n            public void run() {\n              buildSymbols(pattern);\n            }\n          }, true);\n\n          buildActionsAndSettings(pattern);\n\n          updatePopup();\n\n        }\n        updatePopup();\n      }\n      catch (ProcessCanceledException ignore) {\n        myDone.setRejected();\n      }\n      catch (Exception e) {\n        LOG.error(e);\n        myDone.setRejected();\n      }\n      finally {\n        if (!isCanceled()) {\n          myList.getEmptyText().setText(StatusText.DEFAULT_EMPTY_TEXT);\n          updatePopup();\n        }\n        if (!myDone.isProcessed()) {\n          myDone.setDone();\n        }\n      }\n    }","commit_id":"3728cea1deefae531ab81f2ab0bc570dcaab0408","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@SuppressWarnings(\"SSBasedInspection\")\n    private void updatePopup() {\n      check();\n      SwingUtilities.invokeLater(new Runnable() {\n        @Override\n        public void run() {\n          myListModel.update();\n          myList.revalidate();\n          myList.repaint();\n\n          myRenderer.recalculateWidth();\n          if (myBalloon == null || myBalloon.isDisposed()) {\n            return;\n          }\n          if (myPopup == null || !myPopup.isVisible()) {\n            final ActionCallback callback = ListDelegationUtil.installKeyboardDelegation(getField().getTextEditor(), myList);\n            final ComponentPopupBuilder builder = JBPopupFactory.getInstance()\n              .createComponentPopupBuilder(new JBScrollPane(myList), null);\n            myPopup = builder\n              .setRequestFocus(false)\n              .setCancelKeyEnabled(false)\n              .setCancelCallback(new Computable<Boolean>() {\n                @Override\n                public Boolean compute() {\n                  return myBalloon == null || myBalloon.isDisposed() || !getField().getTextEditor().hasFocus();\n                }\n              })\n              .createPopup();\n            myPopup.getContent().setBorder(new EmptyBorder(0, 0, 0, 0));\n            Disposer.register(myPopup, new Disposable() {\n              @Override\n              public void dispose() {\n                callback.setDone();\n                resetFields();\n                myNonProjectCheckBox.setSelected(false);\n                ActionToolbarImpl.updateAllToolbarsImmediately();\n                if (myActionEvent != null && myActionEvent.getInputEvent() instanceof MouseEvent) {\n                  final Component component = myActionEvent.getInputEvent().getComponent();\n                  if (component != null) {\n                    final JLabel label = UIUtil.getParentOfType(JLabel.class, component);\n                    if (label != null) {\n                      label.setIcon(AllIcons.Actions.FindPlain);\n                    }\n                  }\n                }\n                myActionEvent = null;\n              }\n            });\n            myPopup.show(new RelativePoint(getField().getParent(), new Point(0, getField().getParent().getHeight())));\n            updatePopupBounds();\n\n            ActionManager.getInstance().addAnActionListener(new AnActionListener.Adapter() {\n              @Override\n              public void beforeActionPerformed(AnAction action, DataContext dataContext, AnActionEvent event) {\n                if (action instanceof TextComponentEditorAction) {\n                  return;\n                }\n                myPopup.cancel();\n              }\n            }, myPopup);\n          }\n          else {\n            myList.revalidate();\n            myList.repaint();\n          }\n          ListScrollingUtil.ensureSelectionExists(myList);\n          if (myList.getModel().getSize() > 0) {\n            updatePopupBounds();\n          }\n        }\n      });\n    }","id":61144,"modified_method":"@SuppressWarnings(\"SSBasedInspection\")\n    private void updatePopup() {\n      check();\n      SwingUtilities.invokeLater(new Runnable() {\n        @Override\n        public void run() {\n          myListModel.update();\n          myList.revalidate();\n          myList.repaint();\n\n          myRenderer.recalculateWidth();\n          if (myBalloon == null || myBalloon.isDisposed()) {\n            return;\n          }\n          if (myPopup == null || !myPopup.isVisible()) {\n            final ActionCallback callback = ListDelegationUtil.installKeyboardDelegation(getField().getTextEditor(), myList);\n            final ComponentPopupBuilder builder = JBPopupFactory.getInstance()\n              .createComponentPopupBuilder(new JBScrollPane(myList), null);\n            myPopup = builder\n              .setRequestFocus(false)\n              .setCancelKeyEnabled(false)\n              .setCancelCallback(new Computable<Boolean>() {\n                @Override\n                public Boolean compute() {\n                  return myBalloon == null || myBalloon.isDisposed() || (!getField().getTextEditor().hasFocus() && !mySkipFocusGain);\n                }\n              })\n              .createPopup();\n            myPopup.getContent().setBorder(new EmptyBorder(0, 0, 0, 0));\n            Disposer.register(myPopup, new Disposable() {\n              @Override\n              public void dispose() {\n                callback.setDone();\n                resetFields();\n                myNonProjectCheckBox.setSelected(false);\n                ActionToolbarImpl.updateAllToolbarsImmediately();\n                if (myActionEvent != null && myActionEvent.getInputEvent() instanceof MouseEvent) {\n                  final Component component = myActionEvent.getInputEvent().getComponent();\n                  if (component != null) {\n                    final JLabel label = UIUtil.getParentOfType(JLabel.class, component);\n                    if (label != null) {\n                      label.setIcon(AllIcons.Actions.FindPlain);\n                    }\n                  }\n                }\n                myActionEvent = null;\n              }\n            });\n            myPopup.show(new RelativePoint(getField().getParent(), new Point(0, getField().getParent().getHeight())));\n            updatePopupBounds();\n\n            ActionManager.getInstance().addAnActionListener(new AnActionListener.Adapter() {\n              @Override\n              public void beforeActionPerformed(AnAction action, DataContext dataContext, AnActionEvent event) {\n                if (action instanceof TextComponentEditorAction) {\n                  return;\n                }\n                myPopup.cancel();\n              }\n            }, myPopup);\n          }\n          else {\n            myList.revalidate();\n            myList.repaint();\n          }\n          ListScrollingUtil.ensureSelectionExists(myList);\n          if (myList.getModel().getSize() > 0) {\n            updatePopupBounds();\n          }\n        }\n      });\n    }","commit_id":"3728cea1deefae531ab81f2ab0bc570dcaab0408","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void deleteAllSchedules(Id.Namespace namespaceId) throws SchedulerException {\n    List<ApplicationSpecification> allAppSpec = Lists.newArrayList(getStore().getAllApplications(namespaceId));\n    for (ApplicationSpecification appSpec : allAppSpec) {\n      deleteAllSchedules(namespaceId, appSpec);\n    }\n  }","id":61145,"modified_method":"@Override\n  public void deleteAllSchedules(Id.Namespace namespaceId) throws SchedulerException {\n    for (ApplicationSpecification appSpec : getStore().getAllApplications(namespaceId)) {\n      deleteAllSchedules(namespaceId, appSpec);\n    }\n  }","commit_id":"2c92c4bc5be59557f645e657df012a04507b6af7","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public void deleteAllSchedules(Id.Namespace namespaceId) throws SchedulerException {\n    List<ApplicationSpecification> allAppSpec = Lists.newArrayList(store.getAllApplications(namespaceId));\n    for (ApplicationSpecification appSpec : allAppSpec) {\n      deleteAllSchedules(namespaceId, appSpec);\n    }\n  }","id":61146,"modified_method":"@Override\n  public void deleteAllSchedules(Id.Namespace namespaceId) throws SchedulerException {\n    for (ApplicationSpecification appSpec : store.getAllApplications(namespaceId)) {\n      deleteAllSchedules(namespaceId, appSpec);\n    }\n  }","commit_id":"2c92c4bc5be59557f645e657df012a04507b6af7","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public void deleteAllSchedules(Id.Namespace namespaceId) throws SchedulerException {\n    List<ApplicationSpecification> allAppSpec = Lists.newArrayList(store.getAllApplications(namespaceId));\n    for (ApplicationSpecification appSpec : allAppSpec) {\n      deleteAllSchedules(namespaceId, appSpec);\n    }\n  }","id":61147,"modified_method":"@Override\n  public void deleteAllSchedules(Id.Namespace namespaceId) throws SchedulerException {\n    for (ApplicationSpecification appSpec : store.getAllApplications(namespaceId)) {\n      deleteAllSchedules(namespaceId, appSpec);\n    }\n  }","commit_id":"2c92c4bc5be59557f645e657df012a04507b6af7","url":"https://github.com/caskdata/cdap"},{"original_method":"public XarMergeResult importXARToWiki(XarFile previousXarFile, File xarFile, String wiki,\n        MergeConfiguration mergeConfiguration) throws IOException\n    {\n        FileInputStream fis = new FileInputStream(xarFile);\n        try {\n            return importXARToWiki(previousXarFile, fis, wiki, mergeConfiguration);\n        } finally {\n            fis.close();\n        }\n    }","id":61148,"modified_method":"private XarMergeResult importXARToWiki(XarFile previousXarFile, File xarFile, String wiki,\n        PackageConfiguration configuration) throws IOException\n    {\n        FileInputStream fis = new FileInputStream(xarFile);\n        try {\n            return importXARToWiki(previousXarFile, fis, wiki, configuration);\n        } finally {\n            fis.close();\n        }\n    }","commit_id":"27c86d1ba70f01d6ca4432a848a87014728d044d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Override\n    public void unimportPages(Collection<XarEntry> pages, String wiki) throws XWikiException\n    {\n        if (wiki == null) {\n            XWikiContext context = getXWikiContext();\n            if (context.getWiki().isVirtualMode()) {\n                List<String> wikis = getXWikiContext().getWiki().getVirtualWikisDatabaseNames(context);\n\n                if (!wikis.contains(context.getMainXWiki())) {\n                    unimportPagesFromWiki(pages, context.getMainXWiki());\n                }\n\n                for (String subwiki : wikis) {\n                    unimportPagesFromWiki(pages, subwiki);\n                }\n            } else {\n                unimportPagesFromWiki(pages, context.getMainXWiki());\n            }\n        } else {\n            unimportPagesFromWiki(pages, wiki);\n        }\n    }","id":61149,"modified_method":"@Override\n    public void unimportPages(Collection<XarEntry> pages, PackageConfiguration configuration) throws XWikiException\n    {\n        if (configuration.getWiki() == null) {\n            XWikiContext context = getXWikiContext();\n            if (context.getWiki().isVirtualMode()) {\n                List<String> wikis = getXWikiContext().getWiki().getVirtualWikisDatabaseNames(context);\n\n                if (!wikis.contains(context.getMainXWiki())) {\n                    unimportPagesFromWiki(pages, context.getMainXWiki(), configuration);\n                }\n\n                for (String subwiki : wikis) {\n                    unimportPagesFromWiki(pages, subwiki, configuration);\n                }\n            } else {\n                unimportPagesFromWiki(pages, context.getMainXWiki(), configuration);\n            }\n        } else {\n            unimportPagesFromWiki(pages, configuration.getWiki(), configuration);\n        }\n    }","commit_id":"27c86d1ba70f01d6ca4432a848a87014728d044d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Override\n    public void importXAR(XarFile previousXarFile, File xarFile, String wiki, MergeConfiguration mergeConfiguration)\n        throws IOException, XWikiException\n    {\n        if (wiki == null) {\n            XWikiContext context = getXWikiContext();\n            if (context.getWiki().isVirtualMode()) {\n                List<String> wikis = getXWikiContext().getWiki().getVirtualWikisDatabaseNames(context);\n\n                if (!wikis.contains(context.getMainXWiki())) {\n                    importXARToWiki(previousXarFile, xarFile, context.getMainXWiki(), mergeConfiguration);\n                }\n\n                for (String subwiki : wikis) {\n                    importXARToWiki(previousXarFile, xarFile, subwiki, mergeConfiguration);\n                }\n            } else {\n                importXARToWiki(previousXarFile, xarFile, context.getMainXWiki(), mergeConfiguration);\n            }\n        } else {\n            importXARToWiki(previousXarFile, xarFile, wiki, mergeConfiguration);\n        }\n    }","id":61150,"modified_method":"@Override\n    public void importXAR(XarFile previousXarFile, File xarFile, PackageConfiguration configuration)\n        throws IOException, XWikiException\n    {\n        if (configuration.getWiki() == null) {\n            XWikiContext context = getXWikiContext();\n            if (context.getWiki().isVirtualMode()) {\n                List<String> wikis = getXWikiContext().getWiki().getVirtualWikisDatabaseNames(context);\n\n                if (!wikis.contains(context.getMainXWiki())) {\n                    importXARToWiki(previousXarFile, xarFile, context.getMainXWiki(), configuration);\n                }\n\n                for (String subwiki : wikis) {\n                    importXARToWiki(previousXarFile, xarFile, subwiki, configuration);\n                }\n            } else {\n                importXARToWiki(previousXarFile, xarFile, context.getMainXWiki(), configuration);\n            }\n        } else {\n            importXARToWiki(previousXarFile, xarFile, configuration.getWiki(), configuration);\n        }\n    }","commit_id":"27c86d1ba70f01d6ca4432a848a87014728d044d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public void unimportXARFromWiki(File xarFile, String wiki) throws IOException\n    {\n        unimportPagesFromWiki(getEntries(xarFile), wiki);\n    }","id":61151,"modified_method":"private void unimportXARFromWiki(File xarFile, String wiki, PackageConfiguration configuration) throws IOException\n    {\n        unimportPagesFromWiki(getEntries(xarFile), wiki, configuration);\n    }","commit_id":"27c86d1ba70f01d6ca4432a848a87014728d044d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public XarMergeResult importXARToWiki(XarFile previousXarFile, InputStream xarInputStream, String wiki,\n        MergeConfiguration mergeConfiguration) throws IOException\n    {\n        XarMergeResult mergeResult = new XarMergeResult();\n\n        ZipInputStream zis = new ZipInputStream(xarInputStream);\n\n        XWikiContext xcontext = getXWikiContext();\n\n        String currentWiki = xcontext.getDatabase();\n        try {\n            xcontext.setDatabase(wiki);\n\n            this.observation.notify(new XARImportingEvent(), null, xcontext);\n\n            for (ZipEntry entry = zis.getNextEntry(); entry != null; entry = zis.getNextEntry()) {\n                if (!entry.isDirectory()) {\n                    try {\n                        DocumentImporterHandler documentHandler =\n                            new DocumentImporterHandler(this, this.componentManager, wiki);\n                        documentHandler.setPreviousXarFile(previousXarFile);\n                        documentHandler.setMergeConfiguration(mergeConfiguration);\n\n                        parseDocument(zis, documentHandler);\n\n                        if (documentHandler.getMergeResult() != null) {\n                            mergeResult.addMergeResult(documentHandler.getMergeResult());\n                        }\n                    } catch (NotADocumentException e) {\n                        // Impossible to know that before parsing\n                        this.logger.debug(\"Entry [\" + entry + \"] is not a document\", e);\n                    } catch (Exception e) {\n                        this.logger.error(\"Failed to parse document [\" + entry.getName() + \"]\", e);\n                    }\n                }\n            }\n        } finally {\n            this.observation.notify(new XARImportedEvent(), null, xcontext);\n\n            xcontext.setDatabase(currentWiki);\n        }\n\n        return mergeResult;\n    }","id":61152,"modified_method":"private XarMergeResult importXARToWiki(XarFile previousXarFile, InputStream xarInputStream, String wiki,\n        PackageConfiguration configuration) throws IOException\n    {\n        XarMergeResult mergeResult = new XarMergeResult();\n\n        ZipInputStream zis = new ZipInputStream(xarInputStream);\n\n        XWikiContext xcontext = getXWikiContext();\n\n        String currentWiki = xcontext.getDatabase();\n        try {\n            xcontext.setDatabase(wiki);\n\n            this.observation.notify(new XARImportingEvent(), null, xcontext);\n\n            for (ZipEntry entry = zis.getNextEntry(); entry != null; entry = zis.getNextEntry()) {\n                if (!entry.isDirectory()) {\n                    try {\n                        DocumentImporterHandler documentHandler =\n                            new DocumentImporterHandler(this, this.componentManager, wiki);\n                        documentHandler.setPreviousXarFile(previousXarFile);\n                        documentHandler.setConfiguration(configuration);\n\n                        parseDocument(zis, documentHandler);\n\n                        if (documentHandler.getMergeResult() != null) {\n                            mergeResult.addMergeResult(documentHandler.getMergeResult());\n                        }\n                    } catch (NotADocumentException e) {\n                        // Impossible to know that before parsing\n                        this.logger.debug(\"Entry [\" + entry + \"] is not a document\", e);\n                    } catch (Exception e) {\n                        this.logger.error(\"Failed to parse document [\" + entry.getName() + \"]\", e);\n                    }\n                }\n            }\n        } finally {\n            this.observation.notify(new XARImportedEvent(), null, xcontext);\n\n            xcontext.setDatabase(currentWiki);\n        }\n\n        return mergeResult;\n    }","commit_id":"27c86d1ba70f01d6ca4432a848a87014728d044d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public void unimportPagesFromWiki(Collection<XarEntry> pages, String wiki)\n    {\n        WikiReference wikiReference = new WikiReference(wiki);\n\n        XWikiContext xcontext = getXWikiContext();\n        for (XarEntry xarEntry : pages) {\n            DocumentReference documentReference = this.resolver.resolve(xarEntry.getDocumentReference(), wikiReference);\n            try {\n                XWikiDocument document = getXWikiContext().getWiki().getDocument(documentReference, xcontext);\n\n                if (!document.isNew()) {\n                    String language = xarEntry.getLanguage();\n                    if (language != null) {\n                        document = document.getTranslatedDocument(language, xcontext);\n                        getXWikiContext().getWiki().deleteDocument(document, xcontext);\n                    } else {\n                        getXWikiContext().getWiki().deleteAllDocuments(document, xcontext);\n                    }\n                }\n            } catch (XWikiException e) {\n                this.logger.error(\"Failed to delete document [\" + documentReference + \"]\", e);\n            }\n        }\n    }","id":61153,"modified_method":"private void unimportPagesFromWiki(Collection<XarEntry> pages, String wiki, PackageConfiguration configuration)\n    {\n        WikiReference wikiReference = new WikiReference(wiki);\n\n        XWikiContext xcontext = getXWikiContext();\n        for (XarEntry xarEntry : pages) {\n            DocumentReference documentReference = this.resolver.resolve(xarEntry.getDocumentReference(), wikiReference);\n            try {\n                XWikiDocument document = getXWikiContext().getWiki().getDocument(documentReference, xcontext);\n\n                if (!document.isNew()) {\n                    String language = xarEntry.getLanguage();\n                    if (language != null) {\n                        document = document.getTranslatedDocument(language, xcontext);\n                        getXWikiContext().getWiki().deleteDocument(document, xcontext);\n                    } else {\n                        getXWikiContext().getWiki().deleteAllDocuments(document, xcontext);\n                    }\n                }\n            } catch (XWikiException e) {\n                this.logger.error(\"Failed to delete document [\" + documentReference + \"]\", e);\n            }\n        }\n    }","commit_id":"27c86d1ba70f01d6ca4432a848a87014728d044d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"private void saveDocument(String comment) throws SAXException\n    {\n        try {\n            XWikiContext context = getXWikiContext();\n\n            XWikiDocument document = getDocument();\n            XWikiDocument dbDocument = getDatabaseDocument().clone();\n            XWikiDocument previousDocument = getPreviousDocument();\n\n            // Merge and save\n            if (dbDocument != null && !dbDocument.isNew()) {\n                if (previousDocument != null) {\n                    MergeResult documentMergeResult =\n                        dbDocument.merge(previousDocument, document, this.mergeConfiguration, context);\n                    if (documentMergeResult.isModified()) {\n                        saveDocument(dbDocument, comment, context);\n                    }\n                    this.mergeResult =\n                        new XarEntryMergeResult(new XarEntry(dbDocument.getDocumentReference(),\n                            dbDocument.getLanguage()), documentMergeResult);\n                } else {\n                    if (dbDocument.apply(document)) {\n                        saveDocument(dbDocument, comment, context);\n                    }\n                }\n            } else {\n                document.setCreatorReference(context.getUserReference());\n\n                saveDocument(document, comment, context);\n            }\n        } catch (Exception e) {\n            throw new SAXException(\"Failed to save document\", e);\n        }\n    }","id":61154,"modified_method":"private void saveDocument(String comment) throws SAXException\n    {\n        try {\n            XWikiContext context = getXWikiContext();\n\n            XWikiDocument currentDocument = getDatabaseDocument();\n            XWikiDocument nextDocument = getDocument();\n\n            // Merge and save\n            if (currentDocument != null && !currentDocument.isNew()) {\n                XWikiDocument previousDocument = getPreviousDocument();\n\n                if (previousDocument != null) {\n                    XWikiDocument mergedDocument = currentDocument.clone();\n\n                    MergeResult documentMergeResult =\n                        mergedDocument.merge(previousDocument, nextDocument,\n                            this.configuration.getMergeConfiguration(), context);\n\n                    if (documentMergeResult.isModified()) {\n                        if (this.configuration.isInteractive() && !documentMergeResult.getErrors().isEmpty()) {\n                            XWikiDocument documentToSave =\n                                askDocumentToSave(currentDocument, previousDocument, nextDocument, mergedDocument);\n\n                            if (documentToSave != currentDocument) {\n                                saveDocument(documentToSave, comment, context);\n                            }\n                        } else {\n                            saveDocument(mergedDocument, comment, context);\n                        }\n                    }\n\n                    this.mergeResult =\n                        new XarEntryMergeResult(new XarEntry(mergedDocument.getDocumentReference(),\n                            mergedDocument.getLanguage()), documentMergeResult);\n                } else {\n                    saveDocument(nextDocument, comment, context);\n                }\n            } else {\n                saveDocument(nextDocument, comment, context);\n            }\n        } catch (Exception e) {\n            throw new SAXException(\"Failed to save document\", e);\n        }\n    }","commit_id":"27c86d1ba70f01d6ca4432a848a87014728d044d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"private void saveDocument(XWikiDocument document, String comment, XWikiContext context) throws XWikiException\n    {\n        document.setAuthorReference(context.getUserReference());\n        document.setContentAuthorReference(context.getUserReference());\n\n        context.getWiki().saveDocument(document, comment, context);\n    }","id":61155,"modified_method":"private void saveDocument(XWikiDocument document, String comment, XWikiContext context) throws Exception\n    {\n        XWikiDocument currentDocument = getDatabaseDocument();\n        DocumentReference userReference = getUserReference(context);\n\n        if (!currentDocument.isNew()) {\n            if (document != currentDocument) {\n                if (document.isNew()) {\n                    currentDocument.apply(document);\n                } else {\n                    currentDocument = document;\n                }\n            }\n        } else {\n            currentDocument = document;\n            currentDocument.setCreatorReference(userReference);\n        }\n\n        currentDocument.setAuthorReference(userReference);\n        currentDocument.setContentAuthorReference(userReference);\n\n        context.getWiki().saveDocument(currentDocument, comment, context);\n    }","commit_id":"27c86d1ba70f01d6ca4432a848a87014728d044d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public void setMergeConfiguration(MergeConfiguration mergeConfiguration)\n    {\n        this.mergeConfiguration = mergeConfiguration;\n    }","id":61156,"modified_method":"public void setConfiguration(PackageConfiguration configuration)\n    {\n        this.configuration = configuration;\n    }","commit_id":"27c86d1ba70f01d6ca4432a848a87014728d044d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Get the extension handler corresponding to the given extension ID and version. The returned handler can be used\n     * to get more information about the extension, such as the authors, an extension description, its license...\n     * \n     * @param id the extension id or provided feature (virtual extension) of the extension to resolve\n     * @param version the specific version to resolve\n     * @return the read-only handler corresponding to the requested extension, or {@code null} if the extension couldn't\n     *         be resolved, in which case {@link #getLastError()} contains the failure reason\n     */\n    public Extension resolve(String id, String version)\n    {\n        setError(null);\n\n        Extension extension = null;\n\n        try {\n            extension =\n                UnmodifiableUtils.unmodifiableExtension(this.extensionManager.resolveExtension(new ExtensionId(id,\n                    version)));\n        } catch (Exception e) {\n            setError(e);\n        }\n\n        return extension;\n    }","id":61157,"modified_method":"/**\n     * Get the extension handler corresponding to the given extension ID and version. The returned handler can be used\n     * to get more information about the extension, such as the authors, an extension description, its license...\n     * \n     * @param id the extension id or provided feature (virtual extension) of the extension to resolve\n     * @param version the specific version to resolve\n     * @return the read-only handler corresponding to the requested extension, or {@code null} if the extension couldn't\n     *         be resolved, in which case {@link #getLastError()} contains the failure reason\n     */\n    public Extension resolve(String id, String version)\n    {\n        setError(null);\n\n        Extension extension = null;\n\n        try {\n            extension = safe(this.extensionManager.resolveExtension(new ExtensionId(id, version)));\n        } catch (Exception e) {\n            setError(e);\n        }\n\n        return extension;\n    }","commit_id":"27c86d1ba70f01d6ca4432a848a87014728d044d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Get all the installed extensions that depend on the specified extension. The results are grouped by namespace, so\n     * the same extension can appear multiple times, once for each namespace where it is installed.\n     * \n     * @param feature the extension id or provided feature (virtual extension) of the extension to resolve\n     * @param version the specific version to check\n     * @return a map namespace -&gt; list of dependent extensions, or {@code null} if any error occurs while computing\n     *         the result, in which case {@link #getLastError()} contains the failure reason\n     */\n    public Map<String, Collection<LocalExtension>> getBackwardDependencies(String feature, String version)\n    {\n        setError(null);\n\n        Map<String, Collection<LocalExtension>> extensions;\n\n        try {\n            extensions =\n                UnmodifiableUtils.unmodifiableExtensions(this.localExtensionRepository\n                    .getBackwardDependencies(new ExtensionId(feature, version)));\n        } catch (Exception e) {\n            setError(e);\n\n            extensions = null;\n        }\n\n        return extensions;\n    }","id":61158,"modified_method":"/**\n     * Get all the installed extensions that depend on the specified extension. The results are grouped by namespace, so\n     * the same extension can appear multiple times, once for each namespace where it is installed.\n     * \n     * @param feature the extension id or provided feature (virtual extension) of the extension to resolve\n     * @param version the specific version to check\n     * @return a map namespace -&gt; list of dependent extensions, or {@code null} if any error occurs while computing\n     *         the result, in which case {@link #getLastError()} contains the failure reason\n     */\n    public Map<String, Collection<LocalExtension>> getBackwardDependencies(String feature, String version)\n    {\n        setError(null);\n\n        Map<String, Collection<LocalExtension>> extensions;\n\n        try {\n            extensions = safe(this.localExtensionRepository.getBackwardDependencies(new ExtensionId(feature, version)));\n        } catch (Exception e) {\n            setError(e);\n\n            extensions = null;\n        }\n\n        return extensions;\n    }","commit_id":"27c86d1ba70f01d6ca4432a848a87014728d044d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Get the extension handler corresponding to the given extension ID and version. The returned handler can be used\n     * to get more information about the extension, such as the authors, an extension description, its license...\n     * \n     * @param extensionDependency the extension dependency to resolve\n     * @return the read-only handler corresponding to the requested extension, or {@code null} if the extension couldn't\n     *         be resolved, in which case {@link #getLastError()} contains the failure reason\n     */\n    public Extension resolve(ExtensionDependency extensionDependency)\n    {\n        setError(null);\n\n        Extension extension = null;\n\n        try {\n            extension =\n                UnmodifiableUtils.unmodifiableExtension(this.extensionManager.resolveExtension(extensionDependency));\n        } catch (Exception e) {\n            setError(e);\n        }\n\n        return extension;\n    }","id":61159,"modified_method":"/**\n     * Get the extension handler corresponding to the given extension ID and version. The returned handler can be used\n     * to get more information about the extension, such as the authors, an extension description, its license...\n     * \n     * @param extensionDependency the extension dependency to resolve\n     * @return the read-only handler corresponding to the requested extension, or {@code null} if the extension couldn't\n     *         be resolved, in which case {@link #getLastError()} contains the failure reason\n     */\n    public Extension resolve(ExtensionDependency extensionDependency)\n    {\n        setError(null);\n\n        Extension extension = null;\n\n        try {\n            extension = safe(this.extensionManager.resolveExtension(extensionDependency));\n        } catch (Exception e) {\n            setError(e);\n        }\n\n        return extension;\n    }","commit_id":"27c86d1ba70f01d6ca4432a848a87014728d044d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Get the extension handler corresponding to the given core extension ID. The returned handler can be used to get\n     * more information about the extension, such as the authors, an extension description, its license...\n     * \n     * @param feature the extension id or provided feature (virtual extension) of the extension to resolve\n     * @return the read-only handler corresponding to the requested extension, or {@code null} if the extension isn't\n     *         provided by the platform\n     */\n    public CoreExtension getCoreExtension(String feature)\n    {\n        return UnmodifiableUtils.unmodifiableExtension(this.coreExtensionRepository.getCoreExtension(feature));\n    }","id":61160,"modified_method":"/**\n     * Get the extension handler corresponding to the given core extension ID. The returned handler can be used to get\n     * more information about the extension, such as the authors, an extension description, its license...\n     * \n     * @param feature the extension id or provided feature (virtual extension) of the extension to resolve\n     * @return the read-only handler corresponding to the requested extension, or {@code null} if the extension isn't\n     *         provided by the platform\n     */\n    public CoreExtension getCoreExtension(String feature)\n    {\n        return safe(this.coreExtensionRepository.getCoreExtension(feature));\n    }","commit_id":"27c86d1ba70f01d6ca4432a848a87014728d044d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Get the status of the currently executing job, if any.\n     * \n     * @return status of the currently executing job, or {@code null} if no job is being executed\n     */\n    public JobStatus getCurrentJobStatus()\n    {\n        Job job = this.jobManager.getCurrentJob();\n        JobStatus jobStatus;\n        if (job != null) {\n            jobStatus = job.getStatus();\n            if (!this.documentAccessBridge.hasProgrammingRights()) {\n                jobStatus = new UnmodifiableJobStatus<JobStatus>(jobStatus);\n            }\n        } else {\n            jobStatus = null;\n        }\n\n        return jobStatus;\n    }","id":61161,"modified_method":"/**\n     * Get the status of the currently executing job, if any.\n     * \n     * @return status of the currently executing job, or {@code null} if no job is being executed\n     */\n    public JobStatus getCurrentJobStatus()\n    {\n        Job job = this.jobManager.getCurrentJob();\n        JobStatus jobStatus;\n        if (job != null) {\n            jobStatus = job.getStatus();\n            if (!this.documentAccessBridge.hasProgrammingRights()) {\n                jobStatus = safe(jobStatus);\n            }\n        } else {\n            jobStatus = null;\n        }\n\n        return jobStatus;\n    }","commit_id":"27c86d1ba70f01d6ca4432a848a87014728d044d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Get a list of cached extensions from the local extension repository. This doesn't include core extensions, only\n     * custom extensions fetched or installed.\n     * \n     * @return a list of read-only handlers corresponding to the local extensions, an empty list if nothing is available\n     *         in the local repository\n     */\n    public Collection<LocalExtension> getLocalExtensions()\n    {\n        return UnmodifiableUtils.unmodifiableExtensions(this.localExtensionRepository.getLocalExtensions());\n    }","id":61162,"modified_method":"/**\n     * Get a list of cached extensions from the local extension repository. This doesn't include core extensions, only\n     * custom extensions fetched or installed.\n     * \n     * @return a list of read-only handlers corresponding to the local extensions, an empty list if nothing is available\n     *         in the local repository\n     */\n    public Collection<LocalExtension> getLocalExtensions()\n    {\n        return safe(this.localExtensionRepository.getLocalExtensions());\n    }","commit_id":"27c86d1ba70f01d6ca4432a848a87014728d044d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Get the extension handler corresponding to the given installed extension ID or feature (virtual ID) provided by\n     * the extension and namespace.\n     * <p>\n     * The returned handler can be used to get more information about the extension, such as the authors, an extension\n     * description, its license...\n     * \n     * @param feature the extension id or provided feature (virtual extension) of the extension to resolve\n     * @param namespace the optional namespace where the extension should be installed\n     * @return the read-only handler corresponding to the requested extension, or {@code null} if the extension isn't\n     *         installed in the target namespace\n     */\n    public LocalExtension getInstalledExtension(String feature, String namespace)\n    {\n        return UnmodifiableUtils.unmodifiableExtension(this.localExtensionRepository.getInstalledExtension(feature,\n            namespace));\n    }","id":61163,"modified_method":"/**\n     * Get the extension handler corresponding to the given installed extension ID or feature (virtual ID) provided by\n     * the extension and namespace.\n     * <p>\n     * The returned handler can be used to get more information about the extension, such as the authors, an extension\n     * description, its license...\n     * \n     * @param feature the extension id or provided feature (virtual extension) of the extension to resolve\n     * @param namespace the optional namespace where the extension should be installed\n     * @return the read-only handler corresponding to the requested extension, or {@code null} if the extension isn't\n     *         installed in the target namespace\n     */\n    public LocalExtension getInstalledExtension(String feature, String namespace)\n    {\n        return safe(this.localExtensionRepository.getInstalledExtension(feature, namespace));\n    }","commit_id":"27c86d1ba70f01d6ca4432a848a87014728d044d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Start the asynchronous uninstallation plan creation process for an extension if no other job is in progress\n     * already.\n     * <p>\n     * Only uninstall from the provided namespace.\n     * \n     * @param id the identifier of the extension to install\n     * @param namespace the (optional) namespace from where to uninstall the extension; if {@code null} or empty, the\n     *            extension will be installed globally\n     * @return the {@link Job} object which can be used to monitor the progress of the installation process, or\n     *         {@code null} in case of failure\n     */\n    public ExtensionPlan createUninstallPlan(String id, String namespace)\n    {\n        setError(null);\n\n        UninstallRequest uninstallRequest = new UninstallRequest();\n        uninstallRequest.addExtension(new ExtensionId(id, (Version) null));\n        if (StringUtils.isNotBlank(namespace)) {\n            uninstallRequest.addNamespace(namespace);\n        }\n\n        ExtensionPlan status;\n        try {\n            status =\n                new UnmodifiableExtensionPlan((ExtensionPlan) this.jobManager.executeJob(UninstallPlanJob.JOBTYPE,\n                    uninstallRequest).getStatus());\n        } catch (JobException e) {\n            setError(e);\n\n            status = null;\n        }\n\n        return status;\n    }","id":61164,"modified_method":"/**\n     * Start the asynchronous uninstallation plan creation process for an extension if no other job is in progress\n     * already.\n     * <p>\n     * Only uninstall from the provided namespace.\n     * \n     * @param id the identifier of the extension to install\n     * @param namespace the (optional) namespace from where to uninstall the extension; if {@code null} or empty, the\n     *            extension will be installed globally\n     * @return the {@link Job} object which can be used to monitor the progress of the installation process, or\n     *         {@code null} in case of failure\n     */\n    public ExtensionPlan createUninstallPlan(String id, String namespace)\n    {\n        setError(null);\n\n        UninstallRequest uninstallRequest = new UninstallRequest();\n        uninstallRequest.addExtension(new ExtensionId(id, (Version) null));\n        if (StringUtils.isNotBlank(namespace)) {\n            uninstallRequest.addNamespace(namespace);\n        }\n\n        ExtensionPlan status;\n        try {\n            status =\n                safe((ExtensionPlan) this.jobManager.executeJob(UninstallPlanJob.JOBTYPE, uninstallRequest).getStatus());\n        } catch (JobException e) {\n            setError(e);\n\n            status = null;\n        }\n\n        return status;\n    }","commit_id":"27c86d1ba70f01d6ca4432a848a87014728d044d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Start the asynchronous installation plan creation process for an extension if no other job is in progress\n     * already.\n     * \n     * @param id the identifier of the extension to install\n     * @param version the version to install\n     * @param namespace the (optional) namespace where to install the extension; if {@code null} or empty, the extension\n     *            will be installed globally\n     * @return the {@link Job} object which can be used to monitor the progress of the installation process, or\n     *         {@code null} in case of failure\n     */\n    public ExtensionPlan createInstallPlan(String id, String version, String namespace)\n    {\n        setError(null);\n\n        InstallRequest installRequest = new InstallRequest();\n        installRequest.addExtension(new ExtensionId(id, version));\n        if (StringUtils.isNotBlank(namespace)) {\n            installRequest.addNamespace(namespace);\n        }\n\n        ExtensionPlan status;\n        try {\n            status =\n                new UnmodifiableExtensionPlan((ExtensionPlan) this.jobManager.executeJob(InstallPlanJob.JOBTYPE,\n                    installRequest).getStatus());\n        } catch (JobException e) {\n            setError(e);\n\n            status = null;\n        }\n\n        return status;\n    }","id":61165,"modified_method":"/**\n     * Start the asynchronous installation plan creation process for an extension if no other job is in progress\n     * already.\n     * \n     * @param id the identifier of the extension to install\n     * @param version the version to install\n     * @param namespace the (optional) namespace where to install the extension; if {@code null} or empty, the extension\n     *            will be installed globally\n     * @return the {@link Job} object which can be used to monitor the progress of the installation process, or\n     *         {@code null} in case of failure\n     */\n    public ExtensionPlan createInstallPlan(String id, String version, String namespace)\n    {\n        setError(null);\n\n        InstallRequest installRequest = new InstallRequest();\n        installRequest.addExtension(new ExtensionId(id, version));\n        if (StringUtils.isNotBlank(namespace)) {\n            installRequest.addNamespace(namespace);\n        }\n\n        ExtensionPlan status;\n        try {\n            status =\n                safe((ExtensionPlan) this.jobManager.executeJob(InstallPlanJob.JOBTYPE, installRequest).getStatus());\n        } catch (JobException e) {\n            setError(e);\n\n            status = null;\n        }\n\n        return status;\n    }","commit_id":"27c86d1ba70f01d6ca4432a848a87014728d044d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Get a list of all currently installed extensions. This doesn't include core extensions, only custom extensions\n     * installed by the administrators.\n     * \n     * @return a list of read-only handlers corresponding to the installed extensions, an empty list if nothing is\n     *         installed\n     */\n    public Collection<LocalExtension> getInstalledExtensions()\n    {\n        return UnmodifiableUtils.unmodifiableExtensions(this.localExtensionRepository.getInstalledExtensions());\n    }","id":61166,"modified_method":"/**\n     * Get a list of all currently installed extensions. This doesn't include core extensions, only custom extensions\n     * installed by the administrators.\n     * \n     * @return a list of read-only handlers corresponding to the installed extensions, an empty list if nothing is\n     *         installed\n     */\n    public Collection<LocalExtension> getInstalledExtensions()\n    {\n        return safe(this.localExtensionRepository.getInstalledExtensions());\n    }","commit_id":"27c86d1ba70f01d6ca4432a848a87014728d044d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Get a list of core extensions provided by the current version of the platform.\n     * \n     * @return a list of read-only handlers corresponding to the core extensions\n     */\n    public Collection<CoreExtension> getCoreExtensions()\n    {\n        return UnmodifiableUtils.unmodifiableExtensions(this.coreExtensionRepository.getCoreExtensions());\n    }","id":61167,"modified_method":"/**\n     * Get a list of core extensions provided by the current version of the platform.\n     * \n     * @return a list of read-only handlers corresponding to the core extensions\n     */\n    public Collection<CoreExtension> getCoreExtensions()\n    {\n        return safe(this.coreExtensionRepository.getCoreExtensions());\n    }","commit_id":"27c86d1ba70f01d6ca4432a848a87014728d044d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * @return all the repositories except core and local repositories\n     */\n    public Collection<ExtensionRepository> getRepositories()\n    {\n        return UnmodifiableUtils.unmodifiableExtensionRepositories(this.repositoryManager.getRepositories());\n    }","id":61168,"modified_method":"/**\n     * @return all the repositories except core and local repositories\n     */\n    public Collection<ExtensionRepository> getRepositories()\n    {\n        return safe(this.repositoryManager.getRepositories());\n    }","commit_id":"27c86d1ba70f01d6ca4432a848a87014728d044d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Return all the extensions available for the provide namespace. This also include root extension since namespaces\n     * inherit from root.\n     * <p>\n     * This doesn't include core extensions, only extension installed through the API.\n     * \n     * @param namespace the target namespace for which to retrieve the list of installed extensions\n     * @return a list of read-only handlers corresponding to the installed extensions, an empty list if nothing is\n     *         installed in the target namespace\n     */\n    public Collection<LocalExtension> getInstalledExtensions(String namespace)\n    {\n        return UnmodifiableUtils\n            .unmodifiableExtensions(this.localExtensionRepository.getInstalledExtensions(namespace));\n    }","id":61169,"modified_method":"/**\n     * Return all the extensions available for the provide namespace. This also include root extension since namespaces\n     * inherit from root.\n     * <p>\n     * This doesn't include core extensions, only extension installed through the API.\n     * \n     * @param namespace the target namespace for which to retrieve the list of installed extensions\n     * @return a list of read-only handlers corresponding to the installed extensions, an empty list if nothing is\n     *         installed in the target namespace\n     */\n    public Collection<LocalExtension> getInstalledExtensions(String namespace)\n    {\n        return safe(this.localExtensionRepository.getInstalledExtensions(namespace));\n    }","commit_id":"27c86d1ba70f01d6ca4432a848a87014728d044d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Start the asynchronous uninstallation plan creation process for an extension if no other job is in progress\n     * already.\n     * <p>\n     * Uninstall from all namepspace.\n     * \n     * @param extensionId the identifier of the extension to install\n     * @return the {@link Job} object which can be used to monitor the progress of the installation process, or\n     *         {@code null} in case of failure\n     */\n    public ExtensionPlan createUninstallPlan(ExtensionId extensionId)\n    {\n        setError(null);\n\n        UninstallRequest uninstallRequest = new UninstallRequest();\n        uninstallRequest.addExtension(extensionId);\n\n        ExtensionPlan status;\n        try {\n            status =\n                new UnmodifiableExtensionPlan((ExtensionPlan) this.jobManager.executeJob(UninstallPlanJob.JOBTYPE,\n                    uninstallRequest).getStatus());\n        } catch (JobException e) {\n            setError(e);\n\n            status = null;\n        }\n\n        return status;\n    }","id":61170,"modified_method":"/**\n     * Start the asynchronous uninstallation plan creation process for an extension if no other job is in progress\n     * already.\n     * <p>\n     * Uninstall from all namepspace.\n     * \n     * @param extensionId the identifier of the extension to install\n     * @return the {@link Job} object which can be used to monitor the progress of the installation process, or\n     *         {@code null} in case of failure\n     */\n    public ExtensionPlan createUninstallPlan(ExtensionId extensionId)\n    {\n        setError(null);\n\n        UninstallRequest uninstallRequest = new UninstallRequest();\n        uninstallRequest.addExtension(extensionId);\n\n        ExtensionPlan status;\n        try {\n            status =\n                safe((ExtensionPlan) this.jobManager.executeJob(UninstallPlanJob.JOBTYPE, uninstallRequest).getStatus());\n        } catch (JobException e) {\n            setError(e);\n\n            status = null;\n        }\n\n        return status;\n    }","commit_id":"27c86d1ba70f01d6ca4432a848a87014728d044d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Merge a String.\n     * \n     * @param previousStr previous version of the string\n     * @param newStr new version of the string\n     * @param currentStr current version of the string\n     * @param mergeResult the merge report\n     * @return the merged string\n     */\n    // TODO: add support for line merge\n    public static String mergeString(String previousStr, String newStr, String currentStr, MergeResult mergeResult)\n    {\n        String result = currentStr;\n\n        try {\n            Revision revision = Diff.diff(ToString.stringToArray(previousStr), ToString.stringToArray(newStr));\n            if (revision.size() > 0) {\n                result = ToString.arrayToString(revision.patch(ToString.stringToArray(currentStr)));\n\n                mergeResult.setModified(true);\n            }\n        } catch (Exception e) {\n            mergeResult.getErrors().add(e);\n        }\n\n        return result;\n    }","id":61171,"modified_method":"/**\n     * Merge a String.\n     * \n     * @param previousStr previous version of the string\n     * @param newStr new version of the string\n     * @param currentStr current version of the string\n     * @param mergeResult the merge report\n     * @return the merged string\n     */\n    // TODO: add support for line merge\n    public static String mergeString(String previousStr, String newStr, String currentStr, MergeResult mergeResult)\n    {\n        String result = currentStr;\n\n        try {\n            Patch patch = DiffUtils.diff(IOUtils.readLines(new StringReader(previousStr)), IOUtils.readLines(new StringReader(newStr)));\n            if (patch.getDeltas().size() > 0) {\n                result = StringUtils.join(patch.applyTo(IOUtils.readLines(new StringReader(currentStr))), '\\n');\n\n                mergeResult.setModified(true);\n            }\n        } catch (Exception e) {\n            mergeResult.getErrors().add(e);\n        }\n\n        return result;\n    }","commit_id":"27c86d1ba70f01d6ca4432a848a87014728d044d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Override\n    public void upgrade(LocalExtension previousLocalExtension, LocalExtension newLocalExtension, String namespace,\n        Map<String, ? > extra) throws InstallException\n    {\n        // Only import XAR when it's a local order (otherwise it will be imported several times and the wiki will\n        // probably not be in an expected state)\n        if (!isRemote(extra)) {\n            String wiki = namespace;\n\n            if (wiki != null) {\n                if (wiki.startsWith(WIKI_NAMESPACEPREFIX)) {\n                    wiki = wiki.substring(WIKI_NAMESPACEPREFIX.length());\n                } else {\n                    throw new InstallException(\"Unsupported namespace [\" + namespace + \"], only \"\n                        + WIKI_NAMESPACEPREFIX + \"wikiid format is supported\");\n                }\n            }\n\n            XarLocalExtension previousXarExtension;\n            try {\n                previousXarExtension = (XarLocalExtension) this.xarRepository.resolve(previousLocalExtension.getId());\n            } catch (ResolveException e) {\n                // Not supposed to be possible\n                throw new InstallException(\"Failed to get xar extension [\" + previousLocalExtension.getId()\n                    + \"] from xar repository\", e);\n            }\n\n            // Install new pages\n            install(previousXarExtension, newLocalExtension, wiki);\n\n            // Uninstall old version pages not anymore in the new version\n            Set<XarEntry> previousPages = new HashSet<XarEntry>(previousXarExtension.getPages());\n\n            List<XarEntry> newPages;\n            try {\n                XarLocalExtension newXarExtension =\n                    (XarLocalExtension) this.xarRepository.resolve(newLocalExtension.getId());\n                newPages = newXarExtension.getPages();\n            } catch (ResolveException e) {\n                try {\n                    newPages = this.packager.getEntries(new File(newLocalExtension.getFile().getAbsolutePath()));\n                } catch (IOException e1) {\n                    throw new InstallException(\"Failed to get xar extension [\" + newLocalExtension.getId() + \"] pages\",\n                        e);\n                }\n            }\n\n            for (XarEntry entry : newPages) {\n                previousPages.remove(entry);\n            }\n\n            try {\n                this.packager.unimportPages(previousPages, wiki);\n            } catch (Exception e) {\n                this.logger.warn(\"Exception when cleaning pages removed since previous xar extension version\", e);\n            }\n        }\n    }","id":61172,"modified_method":"@Override\n    public void upgrade(LocalExtension previousLocalExtension, LocalExtension newLocalExtension, String namespace,\n        Request request) throws InstallException\n    {\n        // Only import XAR when it's a local order (otherwise it will be imported several times and the wiki will\n        // probably not be in an expected state)\n        if (!request.isRemote()) {\n            String wiki = namespace;\n\n            if (wiki != null) {\n                if (wiki.startsWith(WIKI_NAMESPACEPREFIX)) {\n                    wiki = wiki.substring(WIKI_NAMESPACEPREFIX.length());\n                } else {\n                    throw new InstallException(\"Unsupported namespace [\" + namespace + \"], only \"\n                        + WIKI_NAMESPACEPREFIX + \"wikiid format is supported\");\n                }\n            }\n\n            XarLocalExtension previousXarExtension;\n            try {\n                previousXarExtension = (XarLocalExtension) this.xarRepository.resolve(previousLocalExtension.getId());\n            } catch (ResolveException e) {\n                // Not supposed to be possible\n                throw new InstallException(\"Failed to get xar extension [\" + previousLocalExtension.getId()\n                    + \"] from xar repository\", e);\n            }\n\n            // Install new pages\n            install(previousXarExtension, newLocalExtension, wiki, request);\n\n            // Uninstall old version pages not anymore in the new version\n            Set<XarEntry> previousPages = new HashSet<XarEntry>(previousXarExtension.getPages());\n\n            List<XarEntry> newPages;\n            try {\n                XarLocalExtension newXarExtension =\n                    (XarLocalExtension) this.xarRepository.resolve(newLocalExtension.getId());\n                newPages = newXarExtension.getPages();\n            } catch (ResolveException e) {\n                try {\n                    newPages = this.packager.getEntries(new File(newLocalExtension.getFile().getAbsolutePath()));\n                } catch (IOException e1) {\n                    throw new InstallException(\"Failed to get xar extension [\" + newLocalExtension.getId() + \"] pages\",\n                        e);\n                }\n            }\n\n            for (XarEntry entry : newPages) {\n                previousPages.remove(entry);\n            }\n\n            try {\n                this.packager.unimportPages(previousPages, createPackageConfiguration(request, wiki));\n            } catch (Exception e) {\n                this.logger.warn(\"Exception when cleaning pages removed since previous xar extension version\", e);\n            }\n        }\n    }","commit_id":"27c86d1ba70f01d6ca4432a848a87014728d044d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"private void install(XarLocalExtension previousExtension, LocalExtension localExtension, String wiki)\n        throws InstallException\n    {\n        // TODO: should be configurable\n        MergeConfiguration mergeConfiguration = new MergeConfiguration();\n\n        // import xar into wiki (add new version when the page already exists)\n        try {\n            this.packager.importXAR(previousExtension != null ? new XarFile(new File(previousExtension.getFile()\n                .getAbsolutePath()), previousExtension.getPages()) : null, new File(localExtension.getFile()\n                .getAbsolutePath()), wiki, mergeConfiguration);\n        } catch (Exception e) {\n            throw new InstallException(\"Failed to import xar for extension [\" + localExtension + \"]\", e);\n        }\n    }","id":61173,"modified_method":"private void install(XarLocalExtension previousExtension, LocalExtension localExtension, String wiki,\n        Request request) throws InstallException\n    {\n        // import xar into wiki (add new version when the page already exists)\n        try {\n            this.packager.importXAR(previousExtension != null ? new XarFile(new File(previousExtension.getFile()\n                .getAbsolutePath()), previousExtension.getPages()) : null, new File(localExtension.getFile()\n                .getAbsolutePath()), createPackageConfiguration(request, wiki));\n        } catch (Exception e) {\n            throw new InstallException(\"Failed to import xar for extension [\" + localExtension + \"]\", e);\n        }\n    }","commit_id":"27c86d1ba70f01d6ca4432a848a87014728d044d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Override\n    public void install(LocalExtension localExtension, String namespace, Map<String, ? > extra) throws InstallException\n    {\n        // Only import XAR when it's a local order (otherwise it will be imported several times and the wiki will\n        // probably not be in an expected state)\n        if (!isRemote(extra)) {\n            String wiki = namespace;\n\n            if (wiki != null) {\n                if (wiki.startsWith(WIKI_NAMESPACEPREFIX)) {\n                    wiki = wiki.substring(WIKI_NAMESPACEPREFIX.length());\n                } else {\n                    throw new InstallException(\"Unsupported namespace [\" + namespace + \"], only \"\n                        + WIKI_NAMESPACEPREFIX + \"wikiid format is supported\");\n                }\n            }\n\n            install(null, localExtension, wiki);\n        }\n    }","id":61174,"modified_method":"@Override\n    public void install(LocalExtension localExtension, String namespace, Request request) throws InstallException\n    {\n        // Only import XAR when it's a local order (otherwise it will be imported several times and the wiki will\n        // probably not be in an expected state)\n        if (!request.isRemote()) {\n            String wiki = namespace;\n\n            if (wiki != null) {\n                if (wiki.startsWith(WIKI_NAMESPACEPREFIX)) {\n                    wiki = wiki.substring(WIKI_NAMESPACEPREFIX.length());\n                } else {\n                    throw new InstallException(\"Unsupported namespace [\" + namespace + \"], only \"\n                        + WIKI_NAMESPACEPREFIX + \"wikiid format is supported\");\n                }\n            }\n\n            install(null, localExtension, wiki, request);\n        }\n    }","commit_id":"27c86d1ba70f01d6ca4432a848a87014728d044d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Override\n    public void uninstall(LocalExtension localExtension, String namespace, Map<String, ? > extra)\n        throws UninstallException\n    {\n        // Only remove XAR when it's a local order (otherwise it will be deleted several times and the wiki will\n        // probably not be in an expected state)\n        if (!isRemote(extra)) {\n            String wiki = namespace;\n\n            if (wiki != null) {\n                if (wiki.startsWith(WIKI_NAMESPACEPREFIX)) {\n                    wiki = wiki.substring(WIKI_NAMESPACEPREFIX.length());\n                } else {\n                    throw new UninstallException(\"Unsupported namespace [\" + namespace + \"], only \"\n                        + WIKI_NAMESPACEPREFIX + \"wikiid format is supported\");\n                }\n            }\n\n            // TODO: delete pages from the wiki which belong only to this extension (several extension could have some\n            // common pages which will cause all sort of other issues but still could happen technically)\n\n            // TODO: maybe remove only unmodified page ? At least ask for sure when question/answer system will be\n            // implemented\n\n            try {\n                XarLocalExtension xarLocalExtension =\n                    (XarLocalExtension) this.xarRepository.resolve(localExtension.getId());\n                List<XarEntry> pages = xarLocalExtension.getPages();\n                this.packager.unimportPages(pages, wiki);\n            } catch (Exception e) {\n                // Not supposed to be possible\n                throw new UninstallException(\"Failed to get xar extension [\" + localExtension.getId()\n                    + \"] from xar repository\", e);\n            }\n        }\n    }","id":61175,"modified_method":"@Override\n    public void uninstall(LocalExtension localExtension, String namespace, Request request) throws UninstallException\n    {\n        // Only remove XAR when it's a local order (otherwise it will be deleted several times and the wiki will\n        // probably not be in an expected state)\n        if (!request.isRemote()) {\n            String wiki = namespace;\n\n            if (wiki != null) {\n                if (wiki.startsWith(WIKI_NAMESPACEPREFIX)) {\n                    wiki = wiki.substring(WIKI_NAMESPACEPREFIX.length());\n                } else {\n                    throw new UninstallException(\"Unsupported namespace [\" + namespace + \"], only \"\n                        + WIKI_NAMESPACEPREFIX + \"wikiid format is supported\");\n                }\n            }\n\n            // TODO: delete pages from the wiki which belong only to this extension (several extension could have some\n            // common pages which will cause all sort of other issues but still could happen technically)\n\n            // TODO: maybe remove only unmodified page ? At least ask for sure when question/answer system will be\n            // implemented\n\n            try {\n                XarLocalExtension xarLocalExtension =\n                    (XarLocalExtension) this.xarRepository.resolve(localExtension.getId());\n                List<XarEntry> pages = xarLocalExtension.getPages();\n                this.packager.unimportPages(pages, createPackageConfiguration(request, wiki));\n            } catch (Exception e) {\n                // Not supposed to be possible\n                throw new UninstallException(\"Failed to get xar extension [\" + localExtension.getId()\n                    + \"] from xar repository\", e);\n            }\n        }\n    }","commit_id":"27c86d1ba70f01d6ca4432a848a87014728d044d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Test\n    public void testInstall() throws Throwable\n    {\n        XWikiDocument existingDocument = new XWikiDocument(new DocumentReference(\"wiki\", \"space\", \"page\"));\n        existingDocument.setDefaultLanguage(\"en\");\n        existingDocument.setTranslation(0);\n        existingDocument.setNew(false);\n        existingDocument.setVersion(\"1.1\");\n        BaseObject object = new BaseObject();\n        object.setXClassReference(new DocumentReference(\"wiki\", \"space\", \"object\"));\n        existingDocument.addXObject(object);\n        Map<String, XWikiDocument> documentMap = new HashMap<String, XWikiDocument>();\n        documentMap.put(existingDocument.getRealLanguage(), existingDocument);\n        this.documents.put(existingDocument.getDocumentReference(), documentMap);\n\n        // install\n\n        install(this.localXarExtensiontId1, \"wiki\");\n\n        // validate\n\n        // space.page\n        XWikiDocument page = this.mockXWiki.getDocument(existingDocument.getDocumentReference(), getContext());\n\n        Assert.assertFalse(\"Document wiki:space.page has not been saved in the database\", page.isNew());\n\n        Assert.assertNull(page.getXObject(object.getXClassReference()));\n\n        Assert.assertEquals(\"Wrong content\", \"content\", page.getContent());\n        Assert.assertEquals(\"Wrong author\", this.contextUser, page.getAuthorReference());\n        Assert.assertEquals(\"Wrong versions\", \"2.1\", page.getVersion());\n\n        BaseClass baseClass = page.getXClass();\n        Assert.assertNotNull(baseClass.getField(\"property\"));\n        Assert.assertEquals(\"property\", baseClass.getField(\"property\").getName());\n        Assert.assertSame(NumberClass.class, baseClass.getField(\"property\").getClass());\n\n        // space1.page1\n\n        XWikiDocument page1 =\n            this.mockXWiki.getDocument(new DocumentReference(\"wiki\", \"space1\", \"page1\"), getContext());\n\n        Assert.assertFalse(\"Document wiki:space2.page2 has not been saved in the database\", page1.isNew());\n\n        // translated.translated.tr\n        DocumentReference translatedReference = new DocumentReference(\"wiki\", \"translated\", \"translated\");\n        XWikiDocument translated = this.documents.get(translatedReference).get(\"tr\");\n\n        Assert.assertNotNull(\"Document wiki:space.page has not been saved in the database\", translated);\n        Assert.assertFalse(\"Document wiki:space.page has not been saved in the database\", translated.isNew());\n\n        Assert.assertEquals(\"Wrong content\", \"translated content\", translated.getContent());\n        Assert.assertEquals(\"Wrong author\", this.contextUser, translated.getAuthorReference());\n        Assert.assertEquals(\"Wrong versions\", \"1.1\", translated.getVersion());\n    }","id":61176,"modified_method":"@Test\n    public void testInstall() throws Throwable\n    {\n        XWikiDocument existingDocument = new XWikiDocument(new DocumentReference(\"wiki\", \"space\", \"page\"));\n        existingDocument.setDefaultLanguage(\"en\");\n        existingDocument.setTranslation(0);\n        existingDocument.setNew(false);\n        existingDocument.setVersion(\"1.1\");\n        BaseObject object = new BaseObject();\n        object.setXClassReference(new DocumentReference(\"wiki\", \"space\", \"object\"));\n        existingDocument.addXObject(object);\n        Map<String, XWikiDocument> documentMap = new HashMap<String, XWikiDocument>();\n        documentMap.put(existingDocument.getRealLanguage(), existingDocument);\n        this.documents.put(existingDocument.getDocumentReference(), documentMap);\n\n        // install\n\n        install(this.localXarExtensiontId1, \"wiki\");\n\n        // validate\n\n        // space.page\n        XWikiDocument page = this.mockXWiki.getDocument(existingDocument.getDocumentReference(), getContext());\n\n        Assert.assertFalse(\"Document wiki:space.page has not been saved in the database\", page.isNew());\n\n        Assert.assertNull(page.getXObject(object.getXClassReference()));\n\n        Assert.assertEquals(\"Wrong content\", \"content\", page.getContent());\n        Assert.assertEquals(\"Wrong author\", this.contextUser, page.getAuthorReference());\n        Assert.assertEquals(\"Wrong versions\", \"2.1\", page.getVersion());\n\n        BaseClass baseClass = page.getXClass();\n        Assert.assertNotNull(baseClass.getField(\"property\"));\n        Assert.assertEquals(\"property\", baseClass.getField(\"property\").getName());\n        Assert.assertSame(NumberClass.class, baseClass.getField(\"property\").getClass());\n\n        // space1.page1\n\n        XWikiDocument page1 =\n            this.mockXWiki.getDocument(new DocumentReference(\"wiki\", \"space1\", \"page1\"), getContext());\n\n        Assert.assertFalse(\"Document wiki:space1.page1 has not been saved in the database\", page1.isNew());\n\n        // translated.translated.tr\n        DocumentReference translatedReference = new DocumentReference(\"wiki\", \"translated\", \"translated\");\n        XWikiDocument translated = this.documents.get(translatedReference).get(\"tr\");\n\n        Assert.assertNotNull(\"Document wiki:space.page has not been saved in the database\", translated);\n        Assert.assertFalse(\"Document wiki:space.page has not been saved in the database\", translated.isNew());\n\n        Assert.assertEquals(\"Wrong content\", \"translated content\", translated.getContent());\n        Assert.assertEquals(\"Wrong author\", this.contextUser, translated.getAuthorReference());\n        Assert.assertEquals(\"Wrong versions\", \"1.1\", translated.getVersion());\n    }","commit_id":"27c86d1ba70f01d6ca4432a848a87014728d044d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public void importXARToWiki(XarFile previousXarFile, File xarFile, String wiki) throws IOException\n    {\n        FileInputStream fis = new FileInputStream(xarFile);\n        ZipInputStream zis = new ZipInputStream(fis);\n\n        try {\n            for (ZipEntry entry = zis.getNextEntry(); entry != null; entry = zis.getNextEntry()) {\n                if (!entry.isDirectory()) {\n                    try {\n                        DocumentImporterHandler documentHandler =\n                            new DocumentImporterHandler(this.componentManager, wiki);\n\n                        parseDocument(zis, documentHandler);\n                    } catch (NotADocumentException e) {\n                        // Impossible to know that before parsing\n                    } catch (Exception e) {\n                        this.logger.error(\"Failed to parse document [\" + entry.getName() + \"]\", e);\n                    }\n                }\n            }\n        } finally {\n            zis.close();\n        }\n    }","id":61177,"modified_method":"public void importXARToWiki(XarFile previousXarFile, File xarFile, String wiki) throws IOException\n    {\n        FileInputStream fis = new FileInputStream(xarFile);\n        ZipInputStream zis = new ZipInputStream(fis);\n\n        try {\n            for (ZipEntry entry = zis.getNextEntry(); entry != null; entry = zis.getNextEntry()) {\n                if (!entry.isDirectory()) {\n                    try {\n                        DocumentImporterHandler documentHandler =\n                            new DocumentImporterHandler(this, this.componentManager, wiki);\n                        documentHandler.setPreviousXarFile(previousXarFile);\n\n                        parseDocument(zis, documentHandler);\n                    } catch (NotADocumentException e) {\n                        // Impossible to know that before parsing\n                    } catch (Exception e) {\n                        this.logger.error(\"Failed to parse document [\" + entry.getName() + \"]\", e);\n                    }\n                }\n            }\n        } finally {\n            zis.close();\n        }\n    }","commit_id":"d821b2a0ac419e564184423f265b805cd86fb61b","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"private void parseDocument(InputStream in, ContentHandler documentHandler) throws ParserConfigurationException,\n        SAXException, IOException, NotADocumentException\n    {\n        SAXParser saxParser = this.parserFactory.newSAXParser();\n        XMLReader xmlReader = saxParser.getXMLReader();\n\n        RootHandler handler = new RootHandler(this.componentManager);\n        handler.setHandler(\"xwikidoc\", documentHandler);\n        xmlReader.setContentHandler(handler);\n\n        try {\n            xmlReader.parse(new InputSource(new CloseShieldInputStream(in)));\n        } catch (UnknownRootElement e) {\n            throw new NotADocumentException(\"Failed to parse stream\", e);\n        }\n    }","id":61178,"modified_method":"public void parseDocument(InputStream in, ContentHandler documentHandler) throws ParserConfigurationException,\n        SAXException, IOException, NotADocumentException\n    {\n        SAXParser saxParser = this.parserFactory.newSAXParser();\n        XMLReader xmlReader = saxParser.getXMLReader();\n\n        RootHandler handler = new RootHandler(this.componentManager);\n        handler.setHandler(\"xwikidoc\", documentHandler);\n        xmlReader.setContentHandler(handler);\n\n        try {\n            xmlReader.parse(new InputSource(new CloseShieldInputStream(in)));\n        } catch (UnknownRootElement e) {\n            throw new NotADocumentException(\"Failed to parse stream\", e);\n        }\n    }","commit_id":"d821b2a0ac419e564184423f265b805cd86fb61b","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public DocumentImporterHandler(ComponentManager componentManager, String wiki)\n    {\n        super(componentManager);\n\n        setCurrentBean(new XWikiDocument(new DocumentReference(wiki, \"XWiki\", \"Page\")));\n\n        // Default syntax in a XAR is xwiki/1.0\n        getDocument().setSyntax(Syntax.XWIKI_1_0);\n\n        // skip useless known elements\n        this.skippedElements.add(\"version\");\n        this.skippedElements.add(\"minorEdit\");\n        this.skippedElements.add(\"comment\");\n    }","id":61179,"modified_method":"public DocumentImporterHandler(DefaultPackager packager, ComponentManager componentManager, String wiki)\n    {\n        super(componentManager, wiki);\n\n        this.packager = packager;\n    }","commit_id":"d821b2a0ac419e564184423f265b805cd86fb61b","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"private void saveDocument(String comment) throws SAXException\n    {\n        try {\n            XWikiContext context = getXWikiContext();\n\n            XWikiDocument document = getDocument();\n            XWikiDocument dbDocument = getDatabaseDocument();\n            // TODO: get previous document\n\n            // TODO: diff previous and new document\n            // TODO: if there is differences\n            // TODO: ..apply diff to db document\n        } catch (Exception e) {\n            throw new SAXException(\"Failed to save document\", e);\n        }\n\n        this.needSave = false;\n    }","id":61180,"modified_method":"private void saveDocument(String comment) throws SAXException\n    {\n        try {\n            XWikiContext context = getXWikiContext();\n\n            XWikiDocument document = getDocument();\n            XWikiDocument dbDocument = getDatabaseDocument().clone();\n            XWikiDocument previousDocument = getPreviousDocument();\n\n            if (previousDocument != null) {\n                if (merge(previousDocument, document, dbDocument).isModified()) {\n                    context.getWiki().saveDocument(document, comment, context);\n                }\n            } else {\n                if (!dbDocument.isNew()) {\n                    document.setVersion(dbDocument.getVersion());\n                }\n\n                context.getWiki().saveDocument(document, comment, context);\n            }\n        } catch (Exception e) {\n            throw new SAXException(\"Failed to save document\", e);\n        }\n    }","commit_id":"d821b2a0ac419e564184423f265b805cd86fb61b","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Override\n    protected void endHandlerElement(String uri, String localName, String qName) throws SAXException\n    {\n        if (this.needSave) {\n            saveDocument(getDocument().getAttachmentList().isEmpty() ? \"Import\" : \"Import: final save\");\n        }\n    }","id":61181,"modified_method":"@Override\n    protected void endHandlerElement(String uri, String localName, String qName) throws SAXException\n    {\n        saveDocument(getDocument().getAttachmentList().isEmpty() ? \"Import\" : \"Import: final save\");\n    }","commit_id":"d821b2a0ac419e564184423f265b805cd86fb61b","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public XWikiDocument getDocument()\n    {\n        return (XWikiDocument) getCurrentBean();\n    }","id":61182,"modified_method":"private XWikiDocument getPreviousDocument() throws NotADocumentException, ParserConfigurationException,\n        SAXException, IOException\n    {\n        XWikiDocument document = getDocument();\n\n        DocumentHandler documentHandler = new DocumentHandler(getComponentManager(), document.getWikiName());\n\n        this.packager.parseDocument(this.previousXarFile.getInputStream(new XarEntry(document.getSpace(), document\n            .getName(), document.getLanguage())), documentHandler);\n\n        return documentHandler.getDocument();\n    }","commit_id":"d821b2a0ac419e564184423f265b805cd86fb61b","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public XarFile(File file, Collection<XarEntry> entries) throws ZipException, IOException\n    {\n        this.zipFile = new ZipFile(file);\n\n        for (XarEntry xarEntry : entries) {\n            this.entries.put(xarEntry.getDocumentReference(), xarEntry);\n        }\n    }","id":61183,"modified_method":"public XarFile(File file, Collection<XarEntry> entries) throws ZipException, IOException\n    {\n        this.zipFile = new ZipFile(file);\n\n        for (XarEntry xarEntry : entries) {\n            this.entries.put(xarEntry, xarEntry);\n        }\n    }","commit_id":"d821b2a0ac419e564184423f265b805cd86fb61b","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public XarEntry getEntry(EntityReference reference)\n    {\n        return this.entries.get(reference);\n    }","id":61184,"modified_method":"public XarEntry getEntry(EntityReference reference, String language)\n    {\n        return this.entries.get(new XarEntry(reference, language));\n    }","commit_id":"d821b2a0ac419e564184423f265b805cd86fb61b","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public void importXARToWiki(XarFile previousXarFile, File xarFile, String wiki) throws IOException\n    {\n        FileInputStream fis = new FileInputStream(xarFile);\n        ZipInputStream zis = new ZipInputStream(fis);\n\n        try {\n            for (ZipEntry entry = zis.getNextEntry(); entry != null; entry = zis.getNextEntry()) {\n                if (!entry.isDirectory()) {\n                    try {\n                        DocumentImporterHandler documentHandler =\n                            new DocumentImporterHandler(this.componentManager, wiki);\n\n                        parseDocument(zis, documentHandler);\n                    } catch (NotADocumentException e) {\n                        // Impossible to know that before parsing\n                    } catch (Exception e) {\n                        this.logger.error(\"Failed to parse document [\" + entry.getName() + \"]\", e);\n                    }\n                }\n            }\n        } finally {\n            zis.close();\n        }\n    }","id":61185,"modified_method":"public void importXARToWiki(XarFile previousXarFile, File xarFile, String wiki) throws IOException\n    {\n        FileInputStream fis = new FileInputStream(xarFile);\n        ZipInputStream zis = new ZipInputStream(fis);\n\n        try {\n            for (ZipEntry entry = zis.getNextEntry(); entry != null; entry = zis.getNextEntry()) {\n                if (!entry.isDirectory()) {\n                    try {\n                        DocumentImporterHandler documentHandler =\n                            new DocumentImporterHandler(this, this.componentManager, wiki);\n                        documentHandler.setPreviousXarFile(previousXarFile);\n\n                        parseDocument(zis, documentHandler);\n                    } catch (NotADocumentException e) {\n                        // Impossible to know that before parsing\n                    } catch (Exception e) {\n                        this.logger.error(\"Failed to parse document [\" + entry.getName() + \"]\", e);\n                    }\n                }\n            }\n        } finally {\n            zis.close();\n        }\n    }","commit_id":"52f5bfc58801670f89fdeeee8f69545698eb4073","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"private void parseDocument(InputStream in, ContentHandler documentHandler) throws ParserConfigurationException,\n        SAXException, IOException, NotADocumentException\n    {\n        SAXParser saxParser = this.parserFactory.newSAXParser();\n        XMLReader xmlReader = saxParser.getXMLReader();\n\n        RootHandler handler = new RootHandler(this.componentManager);\n        handler.setHandler(\"xwikidoc\", documentHandler);\n        xmlReader.setContentHandler(handler);\n\n        try {\n            xmlReader.parse(new InputSource(new CloseShieldInputStream(in)));\n        } catch (UnknownRootElement e) {\n            throw new NotADocumentException(\"Failed to parse stream\", e);\n        }\n    }","id":61186,"modified_method":"public void parseDocument(InputStream in, ContentHandler documentHandler) throws ParserConfigurationException,\n        SAXException, IOException, NotADocumentException\n    {\n        SAXParser saxParser = this.parserFactory.newSAXParser();\n        XMLReader xmlReader = saxParser.getXMLReader();\n\n        RootHandler handler = new RootHandler(this.componentManager);\n        handler.setHandler(\"xwikidoc\", documentHandler);\n        xmlReader.setContentHandler(handler);\n\n        try {\n            xmlReader.parse(new InputSource(new CloseShieldInputStream(in)));\n        } catch (UnknownRootElement e) {\n            throw new NotADocumentException(\"Failed to parse stream\", e);\n        }\n    }","commit_id":"52f5bfc58801670f89fdeeee8f69545698eb4073","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public DocumentImporterHandler(ComponentManager componentManager, String wiki)\n    {\n        super(componentManager);\n\n        setCurrentBean(new XWikiDocument(new DocumentReference(wiki, \"XWiki\", \"Page\")));\n\n        // Default syntax in a XAR is xwiki/1.0\n        getDocument().setSyntax(Syntax.XWIKI_1_0);\n\n        // skip useless known elements\n        this.skippedElements.add(\"version\");\n        this.skippedElements.add(\"minorEdit\");\n        this.skippedElements.add(\"comment\");\n    }","id":61187,"modified_method":"public DocumentImporterHandler(DefaultPackager packager, ComponentManager componentManager, String wiki)\n    {\n        super(componentManager, wiki);\n\n        this.packager = packager;\n    }","commit_id":"52f5bfc58801670f89fdeeee8f69545698eb4073","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"private void saveDocument(String comment) throws SAXException\n    {\n        try {\n            XWikiContext context = getXWikiContext();\n\n            XWikiDocument document = getDocument();\n            XWikiDocument dbDocument = getDatabaseDocument();\n            // TODO: get previous document\n\n            // TODO: diff previous and new document\n            // TODO: if there is differences\n            // TODO: ..apply diff to db document\n        } catch (Exception e) {\n            throw new SAXException(\"Failed to save document\", e);\n        }\n\n        this.needSave = false;\n    }","id":61188,"modified_method":"private void saveDocument(String comment) throws SAXException\n    {\n        try {\n            XWikiContext context = getXWikiContext();\n\n            XWikiDocument document = getDocument();\n            XWikiDocument dbDocument = getDatabaseDocument().clone();\n            XWikiDocument previousDocument = getPreviousDocument();\n\n            if (previousDocument != null) {\n                if (merge(previousDocument, document, dbDocument).isModified()) {\n                    context.getWiki().saveDocument(document, comment, context);\n                }\n            } else {\n                if (!dbDocument.isNew()) {\n                    document.setVersion(dbDocument.getVersion());\n                }\n\n                context.getWiki().saveDocument(document, comment, context);\n            }\n        } catch (Exception e) {\n            throw new SAXException(\"Failed to save document\", e);\n        }\n    }","commit_id":"52f5bfc58801670f89fdeeee8f69545698eb4073","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public XWikiDocument getDocument()\n    {\n        return (XWikiDocument) getCurrentBean();\n    }","id":61189,"modified_method":"private XWikiDocument getPreviousDocument() throws NotADocumentException, ParserConfigurationException,\n        SAXException, IOException\n    {\n        XWikiDocument document = getDocument();\n\n        DocumentHandler documentHandler = new DocumentHandler(getComponentManager(), document.getWikiName());\n\n        this.packager.parseDocument(this.previousXarFile.getInputStream(new XarEntry(document.getSpace(), document\n            .getName(), document.getLanguage())), documentHandler);\n\n        return documentHandler.getDocument();\n    }","commit_id":"52f5bfc58801670f89fdeeee8f69545698eb4073","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Override\n    protected void endHandlerElement(String uri, String localName, String qName) throws SAXException\n    {\n        if (this.needSave) {\n            saveDocument(getDocument().getAttachmentList().isEmpty() ? \"Import\" : \"Import: final save\");\n        }\n    }","id":61190,"modified_method":"@Override\n    protected void endHandlerElement(String uri, String localName, String qName) throws SAXException\n    {\n        saveDocument(getDocument().getAttachmentList().isEmpty() ? \"Import\" : \"Import: final save\");\n    }","commit_id":"52f5bfc58801670f89fdeeee8f69545698eb4073","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public XarFile(File file, Collection<XarEntry> entries) throws ZipException, IOException\n    {\n        this.zipFile = new ZipFile(file);\n\n        for (XarEntry xarEntry : entries) {\n            this.entries.put(xarEntry.getDocumentReference(), xarEntry);\n        }\n    }","id":61191,"modified_method":"public XarFile(File file, Collection<XarEntry> entries) throws ZipException, IOException\n    {\n        this.zipFile = new ZipFile(file);\n\n        for (XarEntry xarEntry : entries) {\n            this.entries.put(xarEntry, xarEntry);\n        }\n    }","commit_id":"52f5bfc58801670f89fdeeee8f69545698eb4073","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public XarEntry getEntry(EntityReference reference)\n    {\n        return this.entries.get(reference);\n    }","id":61192,"modified_method":"public XarEntry getEntry(EntityReference reference, String language)\n    {\n        return this.entries.get(new XarEntry(reference, language));\n    }","commit_id":"52f5bfc58801670f89fdeeee8f69545698eb4073","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * @return array with required class directories / libs on the classpath\n     */\n    private String[] createAuxClasspath() {\n        String[] classPath = PDEClassPathGenerator.computeClassPath(javaProject);\n        return classPath;\n    }","id":61193,"modified_method":"/**\n     * @return array with required class directories / libs on the classpath\n     */\n    private String[] createAuxClasspath() {\n        return PDEClassPathGenerator.computeClassPath(javaProject);\n    }","commit_id":"77710786c6c77e30b327bfeb8763defd214808e7","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"private void createConfigurationTabFolder(Composite composite) {\n        tabFolder = new TabFolder(composite, SWT.TOP);\n        GridData layoutData = new GridData(GridData.FILL_HORIZONTAL | GridData.GRAB_HORIZONTAL | GridData.FILL_VERTICAL\n                | GridData.GRAB_VERTICAL);\n        layoutData.verticalIndent = -5;\n        tabFolder.setLayoutData(layoutData);\n\n        detectorTab = createDetectorConfigurationTab(tabFolder);\n        reportConfigurationTab = createReportConfigurationTab(tabFolder);\n        filterFilesTab = createFilterFilesTab(tabFolder);\n        if (getProject() == null) {\n            // workspace settings\n            workspaceSettingsTab = createWorkspaceSettings(tabFolder);\n        }\n    }","id":61194,"modified_method":"private void createConfigurationTabFolder(Composite composite) {\n        tabFolder = new TabFolder(composite, SWT.TOP);\n        GridData layoutData = new GridData(GridData.FILL_HORIZONTAL | GridData.GRAB_HORIZONTAL | GridData.FILL_VERTICAL\n                | GridData.GRAB_VERTICAL);\n        layoutData.verticalIndent = -5;\n        tabFolder.setLayoutData(layoutData);\n\n        detectorTab = createDetectorConfigurationTab(tabFolder);\n        reportConfigurationTab = createReportConfigurationTab(tabFolder);\n        filterFilesTab = createFilterFilesTab(tabFolder);\n//        if (getProject() == null) {\n            // workspace settings\n            workspaceSettingsTab = createWorkspaceSettings(tabFolder);\n//        }\n    }","commit_id":"77710786c6c77e30b327bfeb8763defd214808e7","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"public static String[] computeClassPath(IJavaProject javaProject) {\n        String[] classPath = new String[0];\n        try {\n            // first try to check and resolve plugin project. It can fail if\n            // there is no\n            // PDE plugins installed in the current Eclipse instance (PDE is\n            // optional)\n            classPath = createPluginClassPath(javaProject);\n        } catch (NoClassDefFoundError ce) {\n            // ok, we do not have PDE installed, now try to get default java\n            // classpath\n            classPath = createJavaClasspath(javaProject);\n        } catch (CoreException e) {\n            FindbugsPlugin.getDefault().logException(e, \"Could not compute aux. classpath for project \" + javaProject);\n            return classPath;\n        }\n        return classPath;\n    }","id":61195,"modified_method":"/**\n     * @param javaProject non null\n     * @return never null (may be empty array)\n     */\n    public static String[] computeClassPath(IJavaProject javaProject) {\n        String[] classPath = new String[0];\n        try {\n            // first try to check and resolve plugin project. It can fail if\n            // there is no\n            // PDE plugins installed in the current Eclipse instance (PDE is\n            // optional)\n            classPath = createPluginClassPath(javaProject);\n        } catch (NoClassDefFoundError ce) {\n            // ok, we do not have PDE installed, now try to get default java\n            // classpath\n            classPath = createJavaClasspath(javaProject);\n        } catch (CoreException e) {\n            FindbugsPlugin.getDefault().logException(e, \"Could not compute aux. classpath for project \" + javaProject);\n            return classPath;\n        }\n        return classPath;\n    }","commit_id":"77710786c6c77e30b327bfeb8763defd214808e7","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"private static String[] createJavaClasspath(IJavaProject javaProject) {\n        LinkedHashSet<String> classPath = new LinkedHashSet<String>();\n        try {\n            // doesn't return jre libraries\n            String[] defaultClassPath = JavaRuntime.computeDefaultRuntimeClassPath(javaProject);\n            for (String classpathEntry : defaultClassPath) {\n                IPath path = new Path(classpathEntry);\n                if (path.toFile().exists()) {\n                    classPath.add(path.toOSString());\n                }\n            }\n\n            // add CPE_CONTAINER classpathes\n            IClasspathEntry[] rawClasspath = javaProject.getRawClasspath();\n            for (IClasspathEntry entry : rawClasspath) {\n                if (entry.getEntryKind() == IClasspathEntry.CPE_CONTAINER) {\n                    IClasspathContainer classpathContainer = JavaCore.getClasspathContainer(entry.getPath(), javaProject);\n                    if (classpathContainer != null && !(classpathContainer instanceof JREContainer)) {\n                        IClasspathEntry[] classpathEntries = classpathContainer.getClasspathEntries();\n                        for (IClasspathEntry iClasspathEntry : classpathEntries) {\n                            IPath path = iClasspathEntry.getPath();\n                            if (path != null && path.toFile().exists()) {\n                                classPath.add(path.toOSString());\n                            }\n                        }\n                    }\n                }\n            }\n        } catch (CoreException e) {\n            FindbugsPlugin.getDefault().logException(e, \"Could not compute aux. classpath for project \" + javaProject);\n        }\n        return classPath.toArray(new String[classPath.size()]);\n    }","id":61196,"modified_method":"private static String[] createJavaClasspath(IJavaProject javaProject) {\n        LinkedHashSet<String> classPath = new LinkedHashSet<String>();\n        try {\n            // doesn't return jre libraries\n            String[] defaultClassPath = JavaRuntime.computeDefaultRuntimeClassPath(javaProject);\n            for (String classpathEntry : defaultClassPath) {\n                IPath path = new Path(classpathEntry);\n                if(isValidPath(path)) {\n                    classPath.add(path.toOSString());\n                }\n            }\n            IPreferenceStore store = FindbugsPlugin.getPluginPreferences(javaProject.getProject());\n            boolean shortClassPath = store.getBoolean(FindBugsConstants.KEY_SHORT_CLASSPATH);\n            if(shortClassPath){\n                return classPath.toArray(new String[classPath.size()]);\n            }\n            // add CPE_CONTAINER classpathes\n            IClasspathEntry[] rawClasspath = javaProject.getRawClasspath();\n            for (IClasspathEntry entry : rawClasspath) {\n                if (entry.getEntryKind() == IClasspathEntry.CPE_CONTAINER) {\n                    IClasspathContainer classpathContainer = JavaCore.getClasspathContainer(entry.getPath(), javaProject);\n                    if (classpathContainer != null && !(classpathContainer instanceof JREContainer)) {\n                        IClasspathEntry[] classpathEntries = classpathContainer.getClasspathEntries();\n                        for (IClasspathEntry iClasspathEntry : classpathEntries) {\n                            IPath path = iClasspathEntry.getPath();\n                            if (isValidPath(path)) {\n                                classPath.add(path.toOSString());\n                            }\n                        }\n                    }\n                }\n            }\n        } catch (CoreException e) {\n            FindbugsPlugin.getDefault().logException(e, \"Could not compute aux. classpath for project \" + javaProject);\n        }\n        return classPath.toArray(new String[classPath.size()]);\n    }","commit_id":"77710786c6c77e30b327bfeb8763defd214808e7","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"private static String[] createPluginClassPath(IJavaProject javaProject) throws CoreException {\n        String[] javaClassPath = createJavaClasspath(javaProject);\n        IPluginModelBase model = PluginRegistry.findModel(javaProject.getProject());\n        if (model == null || model.getPluginBase().getId() == null) {\n            return javaClassPath;\n        }\n        List<String> pdeClassPath = new ArrayList<String>();\n        pdeClassPath.addAll(Arrays.asList(javaClassPath));\n\n        BundleDescription target = model.getBundleDescription();\n\n        Set<BundleDescription> bundles = new HashSet<BundleDescription>();\n        // target is null if plugin uses non OSGI format\n        if (target != null) {\n            addDependentBundles(target, bundles);\n        }\n\n        // get the default location => relative to wsp\n        IPath defaultOutputLocation = ResourceUtils.relativeToAbsolute(javaProject.getOutputLocation());\n\n        for (BundleDescription bd : bundles) {\n            IPluginModelBase model2 = PluginRegistry.findModel(bd);\n            ArrayList<IClasspathEntry> classpathEntries = new ArrayList<IClasspathEntry>();\n            ClasspathUtilCore.addLibraries(model2, classpathEntries);\n\n            for (IClasspathEntry cpe : classpathEntries) {\n                IPath location;\n                if (cpe.getEntryKind() == IClasspathEntry.CPE_SOURCE) {\n                    location = ResourceUtils.getOutputLocation(cpe, defaultOutputLocation);\n                } else {\n                    location = cpe.getPath();\n                }\n                if (location == null) {\n                    continue;\n                }\n                String locationStr = location.toOSString();\n                if (!pdeClassPath.contains(locationStr)) {\n                    if (location.toFile().exists()) {\n                        pdeClassPath.add(locationStr);\n                    } else {\n                        location = ResourceUtils.relativeToAbsolute(location);\n                        if (location.toFile().exists()) {\n                            pdeClassPath.add(location.toOSString());\n                        }\n                    }\n                }\n            }\n        }\n\n        if(defaultOutputLocation != null) {\n            String defaultOutput = defaultOutputLocation.toOSString();\n            if(pdeClassPath.indexOf(defaultOutput) > 0) {\n                pdeClassPath.remove(defaultOutput);\n                pdeClassPath.add(0, defaultOutput);\n            }\n        }\n        return pdeClassPath.toArray(new String[pdeClassPath.size()]);\n    }","id":61197,"modified_method":"private static String[] createPluginClassPath(IJavaProject javaProject) throws CoreException {\n        String[] javaClassPath = createJavaClasspath(javaProject);\n        IPluginModelBase model = PluginRegistry.findModel(javaProject.getProject());\n        IPreferenceStore store = FindbugsPlugin.getPluginPreferences(javaProject.getProject());\n        boolean shortClassPath = store.getBoolean(FindBugsConstants.KEY_SHORT_CLASSPATH);\n        if (shortClassPath || model == null || model.getPluginBase().getId() == null) {\n            return javaClassPath;\n        }\n        List<String> pdeClassPath = new ArrayList<String>();\n        pdeClassPath.addAll(Arrays.asList(javaClassPath));\n\n        BundleDescription target = model.getBundleDescription();\n\n        Set<BundleDescription> bundles = new HashSet<BundleDescription>();\n        // target is null if plugin uses non OSGI format\n        if (target != null) {\n            addDependentBundles(target, bundles);\n        }\n\n        // convert default location (relative to wsp) to absolute path\n        IPath defaultOutputLocation = ResourceUtils.relativeToAbsolute(javaProject.getOutputLocation());\n\n        for (BundleDescription bd : bundles) {\n            appendBundleToClasspath(bd, pdeClassPath, defaultOutputLocation);\n        }\n\n        if(defaultOutputLocation != null) {\n            String defaultOutput = defaultOutputLocation.toOSString();\n            if(pdeClassPath.indexOf(defaultOutput) > 0) {\n                pdeClassPath.remove(defaultOutput);\n                pdeClassPath.add(0, defaultOutput);\n            }\n        }\n        return pdeClassPath.toArray(new String[pdeClassPath.size()]);\n    }","commit_id":"77710786c6c77e30b327bfeb8763defd214808e7","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"public void refreshUI(UserPreferences prefs) {\n        confirmSwitch.setSelection(store.getBoolean(FindBugsConstants.ASK_ABOUT_PERSPECTIVE_SWITCH));\n        switchTo.setSelection(store.getBoolean(FindBugsConstants.SWITCH_PERSPECTIVE_AFTER_ANALYSIS));\n        confirmBuild.setSelection(!store.getBoolean(FindBugsConstants.DONT_REMIND_ABOUT_FULL_BUILD));\n        detectorProvider.setFilters(store);\n        detectorProvider.refresh();\n    }","id":61198,"modified_method":"public void refreshUI(UserPreferences prefs) {\n            optimizeClasspath.setSelection(store.getBoolean(FindBugsConstants.KEY_SHORT_CLASSPATH));\n        if(page.getProject() != null) {\n            return;\n        }\n        confirmSwitch.setSelection(store.getBoolean(FindBugsConstants.ASK_ABOUT_PERSPECTIVE_SWITCH));\n        switchTo.setSelection(store.getBoolean(FindBugsConstants.SWITCH_PERSPECTIVE_AFTER_ANALYSIS));\n        confirmBuild.setSelection(!store.getBoolean(FindBugsConstants.DONT_REMIND_ABOUT_FULL_BUILD));\n        detectorProvider.setFilters(store);\n        detectorProvider.refresh();\n    }","commit_id":"77710786c6c77e30b327bfeb8763defd214808e7","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"public WorkspaceSettingsTab(TabFolder tabFolder, final FindbugsPropertyPage page, int style) {\n        super(tabFolder, style);\n        this.page = page;\n        setLayout(new GridLayout());\n        store = page.getPreferenceStore();\n\n        TabItem tabDetector = new TabItem(tabFolder, SWT.NONE);\n        tabDetector.setText(\"Misc. Settings\");\n        tabDetector.setControl(this);\n\n        ManagePathsWidget pathsWidget = new ManagePathsWidget(this);\n        ListViewer viewer = pathsWidget.createViewer(\"Custom Detectors\",\n                \"See: <a href=\\\"http://www.ibm.com/developerworks/library/j-findbug2/\\\">'Writing custom detectors'<\/a>\"\n                        + \" and <a href=\\\"http://fb-contrib.sourceforge.net/\\\">fb-contrib<\/a>: additional bug detectors package\");\n        detectorProvider = createDetectorProvider(viewer);\n        pathsWidget.createButtonsArea(detectorProvider);\n        detectorProvider.refresh();\n\n        switchTo = new Button(this, SWT.CHECK);\n        switchTo.setText(\"Switch to the FindBugs perspective after analysis\");\n        switchTo.setSelection(store.getBoolean(FindBugsConstants.SWITCH_PERSPECTIVE_AFTER_ANALYSIS));\n        switchTo.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e) {\n                store.setValue(FindBugsConstants.SWITCH_PERSPECTIVE_AFTER_ANALYSIS, switchTo.getSelection());\n            }\n        });\n\n        confirmSwitch = new Button(this, SWT.CHECK);\n        confirmSwitch.setText(\"Ask before switching to the FindBugs perspective\");\n        confirmSwitch.setSelection(store.getBoolean(FindBugsConstants.ASK_ABOUT_PERSPECTIVE_SWITCH));\n        confirmSwitch.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e) {\n                store.setValue(FindBugsConstants.ASK_ABOUT_PERSPECTIVE_SWITCH, confirmSwitch.getSelection());\n            }\n        });\n\n        confirmBuild = new Button(this, SWT.CHECK);\n        confirmBuild.setText(\"Remind to redo analysis after changes of relevant settings\");\n        confirmBuild.setSelection(!store.getBoolean(FindBugsConstants.DONT_REMIND_ABOUT_FULL_BUILD));\n        confirmBuild.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e) {\n                store.setValue(FindBugsConstants.DONT_REMIND_ABOUT_FULL_BUILD, !confirmBuild.getSelection());\n            }\n        });\n    }","id":61199,"modified_method":"public WorkspaceSettingsTab(TabFolder tabFolder, final FindbugsPropertyPage page, int style) {\n        super(tabFolder, style);\n        this.page = page;\n        setLayout(new GridLayout());\n        store = page.getPreferenceStore();\n\n        TabItem tabDetector = new TabItem(tabFolder, SWT.NONE);\n        tabDetector.setText(\"Misc. Settings\");\n        tabDetector.setControl(this);\n\n        optimizeClasspath = new Button(this, SWT.CHECK);\n        optimizeClasspath.setSelection(store.getBoolean(FindBugsConstants.KEY_SHORT_CLASSPATH));\n        optimizeClasspath.setText(\"Use short classpath for Eclipse plugins (experimental)\");\n        if(page.getProject() != null) {\n            return;\n        }\n        ManagePathsWidget pathsWidget = new ManagePathsWidget(this);\n        ListViewer viewer = pathsWidget.createViewer(\"Custom Detectors\",\n                \"See: <a href=\\\"http://www.ibm.com/developerworks/library/j-findbug2/\\\">'Writing custom detectors'<\/a>\"\n                        + \" and <a href=\\\"http://fb-contrib.sourceforge.net/\\\">fb-contrib<\/a>: additional bug detectors package\");\n        detectorProvider = createDetectorProvider(viewer);\n        pathsWidget.createButtonsArea(detectorProvider);\n        detectorProvider.refresh();\n\n        switchTo = new Button(this, SWT.CHECK);\n        switchTo.setText(\"Switch to the FindBugs perspective after analysis\");\n        switchTo.setSelection(store.getBoolean(FindBugsConstants.SWITCH_PERSPECTIVE_AFTER_ANALYSIS));\n        switchTo.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e) {\n                store.setValue(FindBugsConstants.SWITCH_PERSPECTIVE_AFTER_ANALYSIS, switchTo.getSelection());\n            }\n        });\n\n        confirmSwitch = new Button(this, SWT.CHECK);\n        confirmSwitch.setText(\"Ask before switching to the FindBugs perspective\");\n        confirmSwitch.setSelection(store.getBoolean(FindBugsConstants.ASK_ABOUT_PERSPECTIVE_SWITCH));\n        confirmSwitch.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e) {\n                store.setValue(FindBugsConstants.ASK_ABOUT_PERSPECTIVE_SWITCH, confirmSwitch.getSelection());\n            }\n        });\n\n        confirmBuild = new Button(this, SWT.CHECK);\n        confirmBuild.setText(\"Remind to redo analysis after changes of relevant settings\");\n        confirmBuild.setSelection(!store.getBoolean(FindBugsConstants.DONT_REMIND_ABOUT_FULL_BUILD));\n        confirmBuild.addSelectionListener(new SelectionAdapter() {\n            @Override\n            public void widgetSelected(SelectionEvent e) {\n                store.setValue(FindBugsConstants.DONT_REMIND_ABOUT_FULL_BUILD, !confirmBuild.getSelection());\n            }\n        });\n    }","commit_id":"77710786c6c77e30b327bfeb8763defd214808e7","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"public void performOK() {\n        final SortedSet<String> detectorPaths = PrefsUtil.readDetectorPaths(store);\n\n        if (DetectorFactoryCollection.isLoaded()) {\n            DetectorFactoryCollection dfc = DetectorFactoryCollection.instance();\n            URL[] pluginList = dfc.getPluginList();\n            boolean shouldReplace = pluginList.length != detectorPaths.size();\n            if (!shouldReplace) {\n                // check if both lists are really identical\n                for (URL url : pluginList) {\n                    String file = url.getFile();\n                    IPath filterPath = FindBugsWorker.getFilterPath(file, null);\n                    if (!detectorPaths.contains(filterPath.toPortableString())) {\n                        shouldReplace = true;\n                        break;\n                    }\n                }\n            }\n            if (!shouldReplace) {\n                return;\n            }\n        } else if (detectorPaths.isEmpty()) {\n            return;\n        }\n        FindbugsPlugin.applyCustomDetectors(true);\n        pluginsChanged = true;\n    }","id":61200,"modified_method":"public void performOK() {\n        if(optimizeClasspath != null) {\n            boolean shortClassPath = optimizeClasspath.getSelection();\n            store.setValue(FindBugsConstants.KEY_SHORT_CLASSPATH, shortClassPath);\n        } else {\n            final SortedSet<String> detectorPaths = PrefsUtil.readDetectorPaths(store);\n            if (detectorPaths.isEmpty() && !DetectorFactoryCollection.isLoaded()) {\n                return;\n            }\n            FindbugsPlugin.applyCustomDetectors(true);\n            pluginsChanged = true;\n        }\n    }","commit_id":"77710786c6c77e30b327bfeb8763defd214808e7","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"public String getUrl() {\n        return m_url;\n    }","id":61201,"modified_method":"public String getUrl() {\n    \treturn m_pool.getJdbcUrl();\n    }","commit_id":"4e672c6bd4a6cdf2775322792c7ae5b1287082ae","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public String getUser() {\n        return m_user;\n    }","id":61202,"modified_method":"public String getUser() {\n        return m_pool.getUser();\n    }","commit_id":"4e672c6bd4a6cdf2775322792c7ae5b1287082ae","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void setUrl(String url) {\n        m_url = url;\n    }","id":61203,"modified_method":"public void setUrl(String url) {\n        m_pool.setJdbcUrl(url);\n    }","commit_id":"4e672c6bd4a6cdf2775322792c7ae5b1287082ae","url":"https://github.com/OpenNMS/opennms"},{"original_method":"private void initializePool() throws PropertyVetoException, SQLException {\n        m_pool = new ComboPooledDataSource();\n        m_pool.setPassword(m_password);\n        m_pool.setUser(m_user);\n        m_url = m_database.getDatabaseChoice().getDriver().getUrl();\n        m_pool.setJdbcUrl(m_url);\n        m_className = m_database.getDatabaseChoice().getDriver().getClassName();\n        m_pool.setDriverClass(m_className);\n        \n        //defaults\n//        m_pool.setAcquireIncrement(DEFAULT_AQUIRE_INCREMENT);\n//        m_pool.setAcquireRetryAttempts(DEFAULT_RETRY_ATTEMPTS);\n//        m_pool.setAcquireRetryDelay(DEFAULT_RETRY_DELAY);\n//        m_pool.setAutoCommitOnClose(DEFAULT_AUTOCOMMIT_ON_CLOSE);\n//        m_pool.setBreakAfterAcquireFailure(DEFAULT_BREAK_AFTER_ACQUIRE_FAILURE);\n//        m_pool.setCheckoutTimeout(DEFAULT_CHECKOUT_TIMEOUT);\n//        m_pool.setConnectionTesterClassName(DEFAULT_TESTER_CLASS_NAME);\n//        m_pool.setDescription(DEFAULT_POOL_DESCRIPTION);\n//        m_pool.setForceIgnoreUnresolvedTransactions(DEFAULT_FORCE_IGNORE_UNRESOLVED_TRANSACTION);\n//        m_pool.setIdentityToken(DEFAULT_IDENTITY_TOKEN);\n//        m_pool.setIdleConnectionTestPeriod(DEFAULT_IDLE_CONNECTION_TEST_PERIOD);\n//        m_pool.setInitialPoolSize(DEFAULT_INITIAL_POOL_SIZE);\n//        m_pool.setLoginTimeout(DEFAULT_LOGIN_TIMEOUT);\n//        m_pool.setLogWriter(DEFAULT_LOG_WRITER);\n//        m_pool.setMaxIdleTime(DEFAUT_MAX_IDLE_TIME);\n//        m_pool.setMaxPoolSize(DEFAULT_MAX_POOL_SIZE);\n//        m_pool.setMaxStatements(DEFAULT_MAX_STATEMENTS);\n//        m_pool.setMaxStatementsPerConnection(DEFAULT_MAX_STATEMENTS_PER_CONNECTION);\n//        m_pool.setMinPoolSize(DEFAULT_MIN_POOL_SIZE);\n//        m_pool.setNumHelperThreads(DEFAULT_NUM_HELPER_THREADS);\n//        m_pool.setPreferredTestQuery(DEFAULT_PERFERRED_TEST_QUERY);\n//        m_pool.setPropertyCycle(DEFAULT_PROPERTY_CYCLE);\n//        m_pool.setTestConnectionOnCheckin(DEFAULT_SET_TEST_CONNECTION_ON_CHECKIN);\n//        m_pool.setTestConnectionOnCheckout(DEFAULT_SET_TEST_CONNECTION_ON_CHECKOUT);\n//        m_pool.setUsesTraditionalReflectiveProxies(DEFAULT_USES_TRADITIONAL_REFLECTIVE_PROXIES);\n    }","id":61204,"modified_method":"private void initializePool(JdbcDataSource ds) throws PropertyVetoException, SQLException {\n        m_pool = new ComboPooledDataSource();\n        m_pool.setPassword(ds.getPassword());\n        m_pool.setUser(ds.getUserName());\n        m_pool.setJdbcUrl(ds.getUrl());\n        m_pool.setDriverClass(ds.getClassName());\n        \n        Properties props = new Properties();\n        Collection c = ds.getParamCollection();\n        for (Iterator it = c.iterator(); it.hasNext();) {\n\t\t\tParam p = (Param) it.next();\n\t\t\tprops.put(p.getName(), p.getValue());\n\t\t}\n        if (!props.isEmpty()) {\n            m_pool.setProperties(props);\n\t\t}\n    }","commit_id":"4e672c6bd4a6cdf2775322792c7ae5b1287082ae","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void setUser(String user) {\n        m_user = user;\n    }","id":61205,"modified_method":"public void setUser(String user) {\n        m_pool.setUser(user);\n    }","commit_id":"4e672c6bd4a6cdf2775322792c7ae5b1287082ae","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public C3P0ConnectionFactory(String configFile) throws IOException, MarshalException, ValidationException, PropertyVetoException, SQLException {\n        Class dsc = Database.class;\n\n        // Set the system identifier for the source of the input stream.\n        // This is necessary so that any location information can\n        // positively identify the source of the error.\n        //\n        FileInputStream fileInputStream = new FileInputStream(configFile);\n\t\ttry {\n\t\t\tInputSource dbIn = new InputSource(fileInputStream);\n\t\t\tdbIn.setSystemId(configFile);\n\n\t\t\tm_database = (Database) Unmarshaller.unmarshal(dsc, dbIn);\n\t\t\tParam[] params = m_database.getDatabaseChoice().getDriver().getParam();\n\t\t\tfor (Iterator it = Arrays.asList(params).iterator(); it.hasNext();) {\n\t\t\t    Param param = (Param) it.next();\n\t\t\t    if (param.getName().equals(\"user\")) {\n\t\t\t        m_user = param.getValue();\n\t\t\t    } else if (param.getName().equals(\"password\")) {\n\t\t\t        m_password = param.getValue();\n\t\t\t    }\n\t\t\t}\n\n\t\t\tinitializePool();\n\t\t} finally {\n\t\t\tfileInputStream.close();\n\t\t}\n        \n    }","id":61206,"modified_method":"protected C3P0ConnectionFactory(String configFile, String dsName) throws IOException, MarshalException, ValidationException, PropertyVetoException, SQLException {\n\n        // Set the system identifier for the source of the input stream.\n        // This is necessary so that any location information can\n        // positively identify the source of the error.\n        //\n        FileInputStream fileInputStream = new FileInputStream(configFile);\n\t\tfinal Reader rdr = new InputStreamReader(fileInputStream);\n        log().info(\"C3P2ConnectionFactory: setting up data sources from:\"+configFile);\n\t\ttry {\n\t\t\tJdbcDataSource ds = marshalDataSourceFromConfig(rdr, dsName);\n\t\t\tinitializePool(ds);\n\t\t} finally {\n\t\t\trdr.close();\n\t\t\tfileInputStream.close();\n\t\t}\n    }","commit_id":"4e672c6bd4a6cdf2775322792c7ae5b1287082ae","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public static synchronized void init(String dsName) throws IOException, MarshalException, ValidationException, ClassNotFoundException, PropertyVetoException, SQLException {\n        if (isLoaded(dsName)) {\n            // init already called - return\n            // to reload, reload() will need to be called\n            return;\n        }\n\n        File cfgFile = ConfigFileConstants.getConfigFileByName(dsName+\"-database.xml\");\n        DataSource dataSource = new C3P0ConnectionFactory(cfgFile.getPath());                \n        setInstance(dsName,dataSource);\n    }","id":61207,"modified_method":"public static synchronized void init(String dsName) throws IOException, MarshalException, ValidationException, ClassNotFoundException, PropertyVetoException, SQLException {\n        if (isLoaded(dsName)) {\n            // init already called - return\n            // to reload, reload() will need to be called\n            return;\n        }\n\n        File cfgFile = ConfigFileConstants.getFile(ConfigFileConstants.OPENNMS_DATASOURCE_CONFIG_FILE_NAME);\n        DataSource dataSource = new C3P0ConnectionFactory(cfgFile.getPath(), dsName);\n        setInstance(dsName,dataSource);\n    }","commit_id":"4e672c6bd4a6cdf2775322792c7ae5b1287082ae","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Load the config from the default config file and create the singleton\n     * instance of this factory.\n     * \n     * @exception java.io.IOException\n     *                Thrown if the specified config file cannot be read\n     * @exception org.exolab.castor.xml.MarshalException\n     *                Thrown if the file does not conform to the schema.\n     * @exception org.exolab.castor.xml.ValidationException\n     *                Thrown if the contents do not match the required schema.\n     * @throws SQLException \n     * @throws PropertyVetoException \n     * \n     */\n    public static synchronized void init() throws IOException, MarshalException, ValidationException, ClassNotFoundException, PropertyVetoException, SQLException {\n    \tif (isLoaded(\"opennms\")\t) return;\n    \t\n    \tinit(\"opennms\");\n\n    \t\n    }","id":61208,"modified_method":"/**\n     * Load the config from the default config file and create the singleton\n     * instance of this factory.\n     * \n     * @exception java.io.IOException\n     *                Thrown if the specified config file cannot be read\n     * @exception org.exolab.castor.xml.MarshalException\n     *                Thrown if the file does not conform to the schema.\n     * @exception org.exolab.castor.xml.ValidationException\n     *                Thrown if the contents do not match the required schema.\n     * @throws SQLException \n     * @throws PropertyVetoException \n     * \n     */\n    public static synchronized void init() throws IOException, MarshalException, ValidationException, ClassNotFoundException, PropertyVetoException, SQLException {\n    \tif (!isLoaded(\"opennms\")) {\n           \tinit(\"opennms\");\n    \t}\n    }","commit_id":"4e672c6bd4a6cdf2775322792c7ae5b1287082ae","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Protected constructor\n     * \n     * @exception java.io.IOException\n     *                Thrown if the specified config file cannot be read\n     * @exception org.exolab.castor.xml.MarshalException\n     *                Thrown if the file does not conform to the schema.\n     * @exception org.exolab.castor.xml.ValidationException\n     *                Thrown if the contents do not match the required schema.\n     */\n    protected DatabaseChecker(String configFile) throws IOException,\n\t\t\t\t\t\t      MarshalException,\n\t\t\t\t\t\t      ValidationException,\n\t\t\t\t\t\t      ClassNotFoundException {\n        Class dsc = Database.class;\n\n        // Set the system identifier for the source of the input stream.\n        // This is necessary so that any location information can\n        // positively identify the source of the error.\n        //\n        InputSource dbIn = new InputSource(new FileInputStream(configFile));\n        dbIn.setSystemId(configFile);\n\n        // Attempt to load the database reference.\n        //\n        m_database = (Database) Unmarshaller.unmarshal(dsc, dbIn);\n\n        Param[] parms = m_database.getDatabaseChoice().getDriver().getParam();\n        for (int i = 0; i < parms.length; i++) {\n            if (parms[i].getName().equals(\"user\")) {\n                m_driverUser = parms[i].getValue();\n\t    } else if (parms[i].getName().equals(\"password\")) {\n                m_driverPass = parms[i].getValue();\n\t    } else {\n\t\tthrow new ValidationException(\"Unsupported JDO parameter: \" +\n\t\t\t\t\t      parms[i].getName());\n\t    }\n        }\n        m_driverUrl = m_database.getDatabaseChoice().getDriver().getUrl();\n        String driverCN =\n\t    m_database.getDatabaseChoice().getDriver().getClassName();\n\n        Class.forName(driverCN);\n    }","id":61209,"modified_method":"/**\n     * Protected constructor\n     * \n     * @exception java.io.IOException\n     *                Thrown if the specified config file cannot be read\n     * @exception org.exolab.castor.xml.MarshalException\n     *                Thrown if the file does not conform to the schema.\n     * @exception org.exolab.castor.xml.ValidationException\n     *                Thrown if the contents do not match the required schema.\n     */\n    protected DatabaseChecker(String configFile) throws IOException,\n\t\t\t\t\t\t      MarshalException,\n\t\t\t\t\t\t      ValidationException,\n\t\t\t\t\t\t      ClassNotFoundException {\n        Class<DataSourceConfiguration> dsc = DataSourceConfiguration.class;\n\n        // Set the system identifier for the source of the input stream.\n        // This is necessary so that any location information can\n        // positively identify the source of the error.\n        //\n        InputSource dbIn = new InputSource(new FileInputStream(configFile));\n        dbIn.setSystemId(configFile);\n\n        // Attempt to load the database reference.\n        //\n        DataSourceConfiguration m_database = (DataSourceConfiguration) Unmarshaller.unmarshal(dsc, dbIn);\n\n        /*\n        Param[] parms = m_database.getDatabaseChoice().getDriver().getParam();\n        for (int i = 0; i < parms.length; i++) {\n        \tif (parms[i].getName().equals(\"user\")) {\n        \t\tm_driverUser = parms[i].getValue();\n        \t} else if (parms[i].getName().equals(\"password\")) {\n        \t\tm_driverPass = parms[i].getValue();\n        \t} else {\n        \t\tthrow new ValidationException(\"Unsupported JDO parameter: \" +\n        \t\t\t\tparms[i].getName());\n        \t}\n        }\n        */\n        \n        Collection<JdbcDataSource> jdbcDataSources = m_database.getJdbcDataSourceCollection();\n        for (JdbcDataSource jdbcDataSource : jdbcDataSources) {\n\t\t\tm_driverUrl = jdbcDataSource.getUrl();\n\t\t\tm_driverUser = jdbcDataSource.getUserName();\n\t\t\tm_driverPass = jdbcDataSource.getPassword();\n\t        String driverCN = jdbcDataSource.getClassName();\n\t        Class.forName(driverCN);\n\t\t}\n    }","commit_id":"4e672c6bd4a6cdf2775322792c7ae5b1287082ae","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Load the config from the default config file and create the singleton\n     * instance of this factory.\n     * \n     * @exception java.io.IOException\n     *                Thrown if the specified config file cannot be read\n     * @exception org.exolab.castor.xml.MarshalException\n     *                Thrown if the file does not conform to the schema.\n     * @exception org.exolab.castor.xml.ValidationException\n     *                Thrown if the contents do not match the required schema.\n     * \n     */\n    protected DatabaseChecker() throws IOException,\n\t\t\t\t     MarshalException,\n\t\t\t\t     ValidationException,\n\t\t\t\t     ClassNotFoundException {\n\tthis(ConfigFileConstants.getFile(ConfigFileConstants.DB_CONFIG_FILE_NAME).getPath());\n    }","id":61210,"modified_method":"/**\n     * Load the config from the default config file and create the singleton\n     * instance of this factory.\n     * \n     * @exception java.io.IOException\n     *                Thrown if the specified config file cannot be read\n     * @exception org.exolab.castor.xml.MarshalException\n     *                Thrown if the file does not conform to the schema.\n     * @exception org.exolab.castor.xml.ValidationException\n     *                Thrown if the contents do not match the required schema.\n     * \n     */\n    protected DatabaseChecker() throws IOException, MarshalException, ValidationException, ClassNotFoundException {\n    \tthis(ConfigFileConstants.getFile(ConfigFileConstants.OPENNMS_DATASOURCE_CONFIG_FILE_NAME).getPath());\n    }","commit_id":"4e672c6bd4a6cdf2775322792c7ae5b1287082ae","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public String getUrl() {\n        return m_url;\n    }","id":61211,"modified_method":"public String getUrl() {\n    \treturn m_pool.getJdbcUrl();\n    }","commit_id":"a72a935e177ec8a7bfdb1c93140ba5331ebd95b9","url":"https://github.com/OpenNMS/opennms"},{"original_method":"private void initializePool() throws PropertyVetoException, SQLException {\n        m_pool = new ComboPooledDataSource();\n        m_pool.setPassword(m_password);\n        m_pool.setUser(m_user);\n        m_url = m_database.getDatabaseChoice().getDriver().getUrl();\n        m_pool.setJdbcUrl(m_url);\n        m_className = m_database.getDatabaseChoice().getDriver().getClassName();\n        m_pool.setDriverClass(m_className);\n        \n        //defaults\n//        m_pool.setAcquireIncrement(DEFAULT_AQUIRE_INCREMENT);\n//        m_pool.setAcquireRetryAttempts(DEFAULT_RETRY_ATTEMPTS);\n//        m_pool.setAcquireRetryDelay(DEFAULT_RETRY_DELAY);\n//        m_pool.setAutoCommitOnClose(DEFAULT_AUTOCOMMIT_ON_CLOSE);\n//        m_pool.setBreakAfterAcquireFailure(DEFAULT_BREAK_AFTER_ACQUIRE_FAILURE);\n//        m_pool.setCheckoutTimeout(DEFAULT_CHECKOUT_TIMEOUT);\n//        m_pool.setConnectionTesterClassName(DEFAULT_TESTER_CLASS_NAME);\n//        m_pool.setDescription(DEFAULT_POOL_DESCRIPTION);\n//        m_pool.setForceIgnoreUnresolvedTransactions(DEFAULT_FORCE_IGNORE_UNRESOLVED_TRANSACTION);\n//        m_pool.setIdentityToken(DEFAULT_IDENTITY_TOKEN);\n//        m_pool.setIdleConnectionTestPeriod(DEFAULT_IDLE_CONNECTION_TEST_PERIOD);\n//        m_pool.setInitialPoolSize(DEFAULT_INITIAL_POOL_SIZE);\n//        m_pool.setLoginTimeout(DEFAULT_LOGIN_TIMEOUT);\n//        m_pool.setLogWriter(DEFAULT_LOG_WRITER);\n//        m_pool.setMaxIdleTime(DEFAUT_MAX_IDLE_TIME);\n//        m_pool.setMaxPoolSize(DEFAULT_MAX_POOL_SIZE);\n//        m_pool.setMaxStatements(DEFAULT_MAX_STATEMENTS);\n//        m_pool.setMaxStatementsPerConnection(DEFAULT_MAX_STATEMENTS_PER_CONNECTION);\n//        m_pool.setMinPoolSize(DEFAULT_MIN_POOL_SIZE);\n//        m_pool.setNumHelperThreads(DEFAULT_NUM_HELPER_THREADS);\n//        m_pool.setPreferredTestQuery(DEFAULT_PERFERRED_TEST_QUERY);\n//        m_pool.setPropertyCycle(DEFAULT_PROPERTY_CYCLE);\n//        m_pool.setTestConnectionOnCheckin(DEFAULT_SET_TEST_CONNECTION_ON_CHECKIN);\n//        m_pool.setTestConnectionOnCheckout(DEFAULT_SET_TEST_CONNECTION_ON_CHECKOUT);\n//        m_pool.setUsesTraditionalReflectiveProxies(DEFAULT_USES_TRADITIONAL_REFLECTIVE_PROXIES);\n    }","id":61212,"modified_method":"private void initializePool(JdbcDataSource ds) throws PropertyVetoException, SQLException {\n        m_pool = new ComboPooledDataSource();\n        m_pool.setPassword(ds.getPassword());\n        m_pool.setUser(ds.getUserName());\n        m_pool.setJdbcUrl(ds.getUrl());\n        m_pool.setDriverClass(ds.getClassName());\n        \n        Properties props = new Properties();\n        Collection c = ds.getParamCollection();\n        for (Iterator it = c.iterator(); it.hasNext();) {\n\t\t\tParam p = (Param) it.next();\n\t\t\tprops.put(p.getName(), p.getValue());\n\t\t}\n        if (!props.isEmpty()) {\n            m_pool.setProperties(props);\n\t\t}\n    }","commit_id":"a72a935e177ec8a7bfdb1c93140ba5331ebd95b9","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void setUser(String user) {\n        m_user = user;\n    }","id":61213,"modified_method":"public void setUser(String user) {\n        m_pool.setUser(user);\n    }","commit_id":"a72a935e177ec8a7bfdb1c93140ba5331ebd95b9","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void setUrl(String url) {\n        m_url = url;\n    }","id":61214,"modified_method":"public void setUrl(String url) {\n        m_pool.setJdbcUrl(url);\n    }","commit_id":"a72a935e177ec8a7bfdb1c93140ba5331ebd95b9","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public String getUser() {\n        return m_user;\n    }","id":61215,"modified_method":"public String getUser() {\n        return m_pool.getUser();\n    }","commit_id":"a72a935e177ec8a7bfdb1c93140ba5331ebd95b9","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public C3P0ConnectionFactory(String configFile) throws IOException, MarshalException, ValidationException, PropertyVetoException, SQLException {\n        Class dsc = Database.class;\n\n        // Set the system identifier for the source of the input stream.\n        // This is necessary so that any location information can\n        // positively identify the source of the error.\n        //\n        FileInputStream fileInputStream = new FileInputStream(configFile);\n\t\ttry {\n\t\t\tInputSource dbIn = new InputSource(fileInputStream);\n\t\t\tdbIn.setSystemId(configFile);\n\n\t\t\tm_database = (Database) Unmarshaller.unmarshal(dsc, dbIn);\n\t\t\tParam[] params = m_database.getDatabaseChoice().getDriver().getParam();\n\t\t\tfor (Iterator it = Arrays.asList(params).iterator(); it.hasNext();) {\n\t\t\t    Param param = (Param) it.next();\n\t\t\t    if (param.getName().equals(\"user\")) {\n\t\t\t        m_user = param.getValue();\n\t\t\t    } else if (param.getName().equals(\"password\")) {\n\t\t\t        m_password = param.getValue();\n\t\t\t    }\n\t\t\t}\n\n\t\t\tinitializePool();\n\t\t} finally {\n\t\t\tfileInputStream.close();\n\t\t}\n        \n    }","id":61216,"modified_method":"protected C3P0ConnectionFactory(String configFile, String dsName) throws IOException, MarshalException, ValidationException, PropertyVetoException, SQLException {\n\n        // Set the system identifier for the source of the input stream.\n        // This is necessary so that any location information can\n        // positively identify the source of the error.\n        //\n        FileInputStream fileInputStream = new FileInputStream(configFile);\n\t\tfinal Reader rdr = new InputStreamReader(fileInputStream);\n        log().info(\"C3P2ConnectionFactory: setting up data sources from:\"+configFile);\n\t\ttry {\n\t\t\tJdbcDataSource ds = marshalDataSourceFromConfig(rdr, dsName);\n\t\t\tinitializePool(ds);\n\t\t} finally {\n\t\t\trdr.close();\n\t\t\tfileInputStream.close();\n\t\t}\n    }","commit_id":"a72a935e177ec8a7bfdb1c93140ba5331ebd95b9","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Load the config from the default config file and create the singleton\n     * instance of this factory.\n     * \n     * @exception java.io.IOException\n     *                Thrown if the specified config file cannot be read\n     * @exception org.exolab.castor.xml.MarshalException\n     *                Thrown if the file does not conform to the schema.\n     * @exception org.exolab.castor.xml.ValidationException\n     *                Thrown if the contents do not match the required schema.\n     * @throws SQLException \n     * @throws PropertyVetoException \n     * \n     */\n    public static synchronized void init() throws IOException, MarshalException, ValidationException, ClassNotFoundException, PropertyVetoException, SQLException {\n    \tif (isLoaded(\"opennms\")\t) return;\n    \t\n    \tinit(\"opennms\");\n\n    \t\n    }","id":61217,"modified_method":"/**\n     * Load the config from the default config file and create the singleton\n     * instance of this factory.\n     * \n     * @exception java.io.IOException\n     *                Thrown if the specified config file cannot be read\n     * @exception org.exolab.castor.xml.MarshalException\n     *                Thrown if the file does not conform to the schema.\n     * @exception org.exolab.castor.xml.ValidationException\n     *                Thrown if the contents do not match the required schema.\n     * @throws SQLException \n     * @throws PropertyVetoException \n     * \n     */\n    public static synchronized void init() throws IOException, MarshalException, ValidationException, ClassNotFoundException, PropertyVetoException, SQLException {\n    \tif (!isLoaded(\"opennms\")) {\n           \tinit(\"opennms\");\n    \t}\n    }","commit_id":"a72a935e177ec8a7bfdb1c93140ba5331ebd95b9","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public static synchronized void init(String dsName) throws IOException, MarshalException, ValidationException, ClassNotFoundException, PropertyVetoException, SQLException {\n        if (isLoaded(dsName)) {\n            // init already called - return\n            // to reload, reload() will need to be called\n            return;\n        }\n\n        File cfgFile = ConfigFileConstants.getConfigFileByName(dsName+\"-database.xml\");\n        DataSource dataSource = new C3P0ConnectionFactory(cfgFile.getPath());                \n        setInstance(dsName,dataSource);\n    }","id":61218,"modified_method":"public static synchronized void init(String dsName) throws IOException, MarshalException, ValidationException, ClassNotFoundException, PropertyVetoException, SQLException {\n        if (isLoaded(dsName)) {\n            // init already called - return\n            // to reload, reload() will need to be called\n            return;\n        }\n\n        File cfgFile = ConfigFileConstants.getFile(ConfigFileConstants.OPENNMS_DATASOURCE_CONFIG_FILE_NAME);\n        DataSource dataSource = new C3P0ConnectionFactory(cfgFile.getPath(), dsName);\n        setInstance(dsName,dataSource);\n    }","commit_id":"a72a935e177ec8a7bfdb1c93140ba5331ebd95b9","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Load the config from the default config file and create the singleton\n     * instance of this factory.\n     * \n     * @exception java.io.IOException\n     *                Thrown if the specified config file cannot be read\n     * @exception org.exolab.castor.xml.MarshalException\n     *                Thrown if the file does not conform to the schema.\n     * @exception org.exolab.castor.xml.ValidationException\n     *                Thrown if the contents do not match the required schema.\n     * \n     */\n    protected DatabaseChecker() throws IOException,\n\t\t\t\t     MarshalException,\n\t\t\t\t     ValidationException,\n\t\t\t\t     ClassNotFoundException {\n\tthis(ConfigFileConstants.getFile(ConfigFileConstants.DB_CONFIG_FILE_NAME).getPath());\n    }","id":61219,"modified_method":"/**\n     * Load the config from the default config file and create the singleton\n     * instance of this factory.\n     * \n     * @exception java.io.IOException\n     *                Thrown if the specified config file cannot be read\n     * @exception org.exolab.castor.xml.MarshalException\n     *                Thrown if the file does not conform to the schema.\n     * @exception org.exolab.castor.xml.ValidationException\n     *                Thrown if the contents do not match the required schema.\n     * \n     */\n    protected DatabaseChecker() throws IOException, MarshalException, ValidationException, ClassNotFoundException {\n    \tthis(ConfigFileConstants.getFile(ConfigFileConstants.OPENNMS_DATASOURCE_CONFIG_FILE_NAME).getPath());\n    }","commit_id":"a72a935e177ec8a7bfdb1c93140ba5331ebd95b9","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Protected constructor\n     * \n     * @exception java.io.IOException\n     *                Thrown if the specified config file cannot be read\n     * @exception org.exolab.castor.xml.MarshalException\n     *                Thrown if the file does not conform to the schema.\n     * @exception org.exolab.castor.xml.ValidationException\n     *                Thrown if the contents do not match the required schema.\n     */\n    protected DatabaseChecker(String configFile) throws IOException,\n\t\t\t\t\t\t      MarshalException,\n\t\t\t\t\t\t      ValidationException,\n\t\t\t\t\t\t      ClassNotFoundException {\n        Class dsc = Database.class;\n\n        // Set the system identifier for the source of the input stream.\n        // This is necessary so that any location information can\n        // positively identify the source of the error.\n        //\n        InputSource dbIn = new InputSource(new FileInputStream(configFile));\n        dbIn.setSystemId(configFile);\n\n        // Attempt to load the database reference.\n        //\n        m_database = (Database) Unmarshaller.unmarshal(dsc, dbIn);\n\n        Param[] parms = m_database.getDatabaseChoice().getDriver().getParam();\n        for (int i = 0; i < parms.length; i++) {\n            if (parms[i].getName().equals(\"user\")) {\n                m_driverUser = parms[i].getValue();\n\t    } else if (parms[i].getName().equals(\"password\")) {\n                m_driverPass = parms[i].getValue();\n\t    } else {\n\t\tthrow new ValidationException(\"Unsupported JDO parameter: \" +\n\t\t\t\t\t      parms[i].getName());\n\t    }\n        }\n        m_driverUrl = m_database.getDatabaseChoice().getDriver().getUrl();\n        String driverCN =\n\t    m_database.getDatabaseChoice().getDriver().getClassName();\n\n        Class.forName(driverCN);\n    }","id":61220,"modified_method":"/**\n     * Protected constructor\n     * \n     * @exception java.io.IOException\n     *                Thrown if the specified config file cannot be read\n     * @exception org.exolab.castor.xml.MarshalException\n     *                Thrown if the file does not conform to the schema.\n     * @exception org.exolab.castor.xml.ValidationException\n     *                Thrown if the contents do not match the required schema.\n     */\n    protected DatabaseChecker(String configFile) throws IOException,\n\t\t\t\t\t\t      MarshalException,\n\t\t\t\t\t\t      ValidationException,\n\t\t\t\t\t\t      ClassNotFoundException {\n        Class<DataSourceConfiguration> dsc = DataSourceConfiguration.class;\n\n        // Set the system identifier for the source of the input stream.\n        // This is necessary so that any location information can\n        // positively identify the source of the error.\n        //\n        InputSource dbIn = new InputSource(new FileInputStream(configFile));\n        dbIn.setSystemId(configFile);\n\n        // Attempt to load the database reference.\n        //\n        DataSourceConfiguration m_database = (DataSourceConfiguration) Unmarshaller.unmarshal(dsc, dbIn);\n\n        /*\n        Param[] parms = m_database.getDatabaseChoice().getDriver().getParam();\n        for (int i = 0; i < parms.length; i++) {\n        \tif (parms[i].getName().equals(\"user\")) {\n        \t\tm_driverUser = parms[i].getValue();\n        \t} else if (parms[i].getName().equals(\"password\")) {\n        \t\tm_driverPass = parms[i].getValue();\n        \t} else {\n        \t\tthrow new ValidationException(\"Unsupported JDO parameter: \" +\n        \t\t\t\tparms[i].getName());\n        \t}\n        }\n        */\n        \n        Collection<JdbcDataSource> jdbcDataSources = m_database.getJdbcDataSourceCollection();\n        for (JdbcDataSource jdbcDataSource : jdbcDataSources) {\n\t\t\tm_driverUrl = jdbcDataSource.getUrl();\n\t\t\tm_driverUser = jdbcDataSource.getUserName();\n\t\t\tm_driverPass = jdbcDataSource.getPassword();\n\t        String driverCN = jdbcDataSource.getClassName();\n\t        Class.forName(driverCN);\n\t\t}\n    }","commit_id":"a72a935e177ec8a7bfdb1c93140ba5331ebd95b9","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void setUser(String user) {\n        m_user = user;\n    }","id":61221,"modified_method":"public void setUser(String user) {\n        m_pool.setUser(user);\n    }","commit_id":"8f5c125a30aa9dff164915596ef09abcbed9b55e","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void setUrl(String url) {\n        m_url = url;\n    }","id":61222,"modified_method":"public void setUrl(String url) {\n        m_pool.setJdbcUrl(url);\n    }","commit_id":"8f5c125a30aa9dff164915596ef09abcbed9b55e","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public String getUrl() {\n        return m_url;\n    }","id":61223,"modified_method":"public String getUrl() {\n    \treturn m_pool.getJdbcUrl();\n    }","commit_id":"8f5c125a30aa9dff164915596ef09abcbed9b55e","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public C3P0ConnectionFactory(String configFile) throws IOException, MarshalException, ValidationException, PropertyVetoException, SQLException {\n        Class dsc = Database.class;\n\n        // Set the system identifier for the source of the input stream.\n        // This is necessary so that any location information can\n        // positively identify the source of the error.\n        //\n        FileInputStream fileInputStream = new FileInputStream(configFile);\n\t\ttry {\n\t\t\tInputSource dbIn = new InputSource(fileInputStream);\n\t\t\tdbIn.setSystemId(configFile);\n\n\t\t\tm_database = (Database) Unmarshaller.unmarshal(dsc, dbIn);\n\t\t\tParam[] params = m_database.getDatabaseChoice().getDriver().getParam();\n\t\t\tfor (Iterator it = Arrays.asList(params).iterator(); it.hasNext();) {\n\t\t\t    Param param = (Param) it.next();\n\t\t\t    if (param.getName().equals(\"user\")) {\n\t\t\t        m_user = param.getValue();\n\t\t\t    } else if (param.getName().equals(\"password\")) {\n\t\t\t        m_password = param.getValue();\n\t\t\t    }\n\t\t\t}\n\n\t\t\tinitializePool();\n\t\t} finally {\n\t\t\tfileInputStream.close();\n\t\t}\n        \n    }","id":61224,"modified_method":"protected C3P0ConnectionFactory(String configFile, String dsName) throws IOException, MarshalException, ValidationException, PropertyVetoException, SQLException {\n\n        // Set the system identifier for the source of the input stream.\n        // This is necessary so that any location information can\n        // positively identify the source of the error.\n        //\n        FileInputStream fileInputStream = new FileInputStream(configFile);\n\t\tfinal Reader rdr = new InputStreamReader(fileInputStream);\n        log().info(\"C3P2ConnectionFactory: setting up data sources from:\"+configFile);\n\t\ttry {\n\t\t\tJdbcDataSource ds = marshalDataSourceFromConfig(rdr, dsName);\n\t\t\tinitializePool(ds);\n\t\t} finally {\n\t\t\trdr.close();\n\t\t\tfileInputStream.close();\n\t\t}\n    }","commit_id":"8f5c125a30aa9dff164915596ef09abcbed9b55e","url":"https://github.com/OpenNMS/opennms"},{"original_method":"private void initializePool() throws PropertyVetoException, SQLException {\n        m_pool = new ComboPooledDataSource();\n        m_pool.setPassword(m_password);\n        m_pool.setUser(m_user);\n        m_url = m_database.getDatabaseChoice().getDriver().getUrl();\n        m_pool.setJdbcUrl(m_url);\n        m_className = m_database.getDatabaseChoice().getDriver().getClassName();\n        m_pool.setDriverClass(m_className);\n        \n        //defaults\n//        m_pool.setAcquireIncrement(DEFAULT_AQUIRE_INCREMENT);\n//        m_pool.setAcquireRetryAttempts(DEFAULT_RETRY_ATTEMPTS);\n//        m_pool.setAcquireRetryDelay(DEFAULT_RETRY_DELAY);\n//        m_pool.setAutoCommitOnClose(DEFAULT_AUTOCOMMIT_ON_CLOSE);\n//        m_pool.setBreakAfterAcquireFailure(DEFAULT_BREAK_AFTER_ACQUIRE_FAILURE);\n//        m_pool.setCheckoutTimeout(DEFAULT_CHECKOUT_TIMEOUT);\n//        m_pool.setConnectionTesterClassName(DEFAULT_TESTER_CLASS_NAME);\n//        m_pool.setDescription(DEFAULT_POOL_DESCRIPTION);\n//        m_pool.setForceIgnoreUnresolvedTransactions(DEFAULT_FORCE_IGNORE_UNRESOLVED_TRANSACTION);\n//        m_pool.setIdentityToken(DEFAULT_IDENTITY_TOKEN);\n//        m_pool.setIdleConnectionTestPeriod(DEFAULT_IDLE_CONNECTION_TEST_PERIOD);\n//        m_pool.setInitialPoolSize(DEFAULT_INITIAL_POOL_SIZE);\n//        m_pool.setLoginTimeout(DEFAULT_LOGIN_TIMEOUT);\n//        m_pool.setLogWriter(DEFAULT_LOG_WRITER);\n//        m_pool.setMaxIdleTime(DEFAUT_MAX_IDLE_TIME);\n//        m_pool.setMaxPoolSize(DEFAULT_MAX_POOL_SIZE);\n//        m_pool.setMaxStatements(DEFAULT_MAX_STATEMENTS);\n//        m_pool.setMaxStatementsPerConnection(DEFAULT_MAX_STATEMENTS_PER_CONNECTION);\n//        m_pool.setMinPoolSize(DEFAULT_MIN_POOL_SIZE);\n//        m_pool.setNumHelperThreads(DEFAULT_NUM_HELPER_THREADS);\n//        m_pool.setPreferredTestQuery(DEFAULT_PERFERRED_TEST_QUERY);\n//        m_pool.setPropertyCycle(DEFAULT_PROPERTY_CYCLE);\n//        m_pool.setTestConnectionOnCheckin(DEFAULT_SET_TEST_CONNECTION_ON_CHECKIN);\n//        m_pool.setTestConnectionOnCheckout(DEFAULT_SET_TEST_CONNECTION_ON_CHECKOUT);\n//        m_pool.setUsesTraditionalReflectiveProxies(DEFAULT_USES_TRADITIONAL_REFLECTIVE_PROXIES);\n    }","id":61225,"modified_method":"private void initializePool(JdbcDataSource ds) throws PropertyVetoException, SQLException {\n        m_pool = new ComboPooledDataSource();\n        m_pool.setPassword(ds.getPassword());\n        m_pool.setUser(ds.getUserName());\n        m_pool.setJdbcUrl(ds.getUrl());\n        m_pool.setDriverClass(ds.getClassName());\n        \n        Properties props = new Properties();\n        Collection c = ds.getParamCollection();\n        for (Iterator it = c.iterator(); it.hasNext();) {\n\t\t\tParam p = (Param) it.next();\n\t\t\tprops.put(p.getName(), p.getValue());\n\t\t}\n        if (!props.isEmpty()) {\n            m_pool.setProperties(props);\n\t\t}\n    }","commit_id":"8f5c125a30aa9dff164915596ef09abcbed9b55e","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public String getUser() {\n        return m_user;\n    }","id":61226,"modified_method":"public String getUser() {\n        return m_pool.getUser();\n    }","commit_id":"8f5c125a30aa9dff164915596ef09abcbed9b55e","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Load the config from the default config file and create the singleton\n     * instance of this factory.\n     * \n     * @exception java.io.IOException\n     *                Thrown if the specified config file cannot be read\n     * @exception org.exolab.castor.xml.MarshalException\n     *                Thrown if the file does not conform to the schema.\n     * @exception org.exolab.castor.xml.ValidationException\n     *                Thrown if the contents do not match the required schema.\n     * @throws SQLException \n     * @throws PropertyVetoException \n     * \n     */\n    public static synchronized void init() throws IOException, MarshalException, ValidationException, ClassNotFoundException, PropertyVetoException, SQLException {\n    \tif (isLoaded(\"opennms\")\t) return;\n    \t\n    \tinit(\"opennms\");\n\n    \t\n    }","id":61227,"modified_method":"/**\n     * Load the config from the default config file and create the singleton\n     * instance of this factory.\n     * \n     * @exception java.io.IOException\n     *                Thrown if the specified config file cannot be read\n     * @exception org.exolab.castor.xml.MarshalException\n     *                Thrown if the file does not conform to the schema.\n     * @exception org.exolab.castor.xml.ValidationException\n     *                Thrown if the contents do not match the required schema.\n     * @throws SQLException \n     * @throws PropertyVetoException \n     * \n     */\n    public static synchronized void init() throws IOException, MarshalException, ValidationException, ClassNotFoundException, PropertyVetoException, SQLException {\n    \tif (!isLoaded(\"opennms\")) {\n           \tinit(\"opennms\");\n    \t}\n    }","commit_id":"8f5c125a30aa9dff164915596ef09abcbed9b55e","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public static synchronized void init(String dsName) throws IOException, MarshalException, ValidationException, ClassNotFoundException, PropertyVetoException, SQLException {\n        if (isLoaded(dsName)) {\n            // init already called - return\n            // to reload, reload() will need to be called\n            return;\n        }\n\n        File cfgFile = ConfigFileConstants.getConfigFileByName(dsName+\"-database.xml\");\n        DataSource dataSource = new C3P0ConnectionFactory(cfgFile.getPath());                \n        setInstance(dsName,dataSource);\n    }","id":61228,"modified_method":"public static synchronized void init(String dsName) throws IOException, MarshalException, ValidationException, ClassNotFoundException, PropertyVetoException, SQLException {\n        if (isLoaded(dsName)) {\n            // init already called - return\n            // to reload, reload() will need to be called\n            return;\n        }\n\n        File cfgFile = ConfigFileConstants.getFile(ConfigFileConstants.OPENNMS_DATASOURCE_CONFIG_FILE_NAME);\n        DataSource dataSource = new C3P0ConnectionFactory(cfgFile.getPath(), dsName);\n        setInstance(dsName,dataSource);\n    }","commit_id":"8f5c125a30aa9dff164915596ef09abcbed9b55e","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Load the config from the default config file and create the singleton\n     * instance of this factory.\n     * \n     * @exception java.io.IOException\n     *                Thrown if the specified config file cannot be read\n     * @exception org.exolab.castor.xml.MarshalException\n     *                Thrown if the file does not conform to the schema.\n     * @exception org.exolab.castor.xml.ValidationException\n     *                Thrown if the contents do not match the required schema.\n     * \n     */\n    protected DatabaseChecker() throws IOException,\n\t\t\t\t     MarshalException,\n\t\t\t\t     ValidationException,\n\t\t\t\t     ClassNotFoundException {\n\tthis(ConfigFileConstants.getFile(ConfigFileConstants.DB_CONFIG_FILE_NAME).getPath());\n    }","id":61229,"modified_method":"/**\n     * Load the config from the default config file and create the singleton\n     * instance of this factory.\n     * \n     * @exception java.io.IOException\n     *                Thrown if the specified config file cannot be read\n     * @exception org.exolab.castor.xml.MarshalException\n     *                Thrown if the file does not conform to the schema.\n     * @exception org.exolab.castor.xml.ValidationException\n     *                Thrown if the contents do not match the required schema.\n     * \n     */\n    protected DatabaseChecker() throws IOException, MarshalException, ValidationException, ClassNotFoundException {\n    \tthis(ConfigFileConstants.getFile(ConfigFileConstants.OPENNMS_DATASOURCE_CONFIG_FILE_NAME).getPath());\n    }","commit_id":"8f5c125a30aa9dff164915596ef09abcbed9b55e","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Protected constructor\n     * \n     * @exception java.io.IOException\n     *                Thrown if the specified config file cannot be read\n     * @exception org.exolab.castor.xml.MarshalException\n     *                Thrown if the file does not conform to the schema.\n     * @exception org.exolab.castor.xml.ValidationException\n     *                Thrown if the contents do not match the required schema.\n     */\n    protected DatabaseChecker(String configFile) throws IOException,\n\t\t\t\t\t\t      MarshalException,\n\t\t\t\t\t\t      ValidationException,\n\t\t\t\t\t\t      ClassNotFoundException {\n        Class dsc = Database.class;\n\n        // Set the system identifier for the source of the input stream.\n        // This is necessary so that any location information can\n        // positively identify the source of the error.\n        //\n        InputSource dbIn = new InputSource(new FileInputStream(configFile));\n        dbIn.setSystemId(configFile);\n\n        // Attempt to load the database reference.\n        //\n        m_database = (Database) Unmarshaller.unmarshal(dsc, dbIn);\n\n        Param[] parms = m_database.getDatabaseChoice().getDriver().getParam();\n        for (int i = 0; i < parms.length; i++) {\n            if (parms[i].getName().equals(\"user\")) {\n                m_driverUser = parms[i].getValue();\n\t    } else if (parms[i].getName().equals(\"password\")) {\n                m_driverPass = parms[i].getValue();\n\t    } else {\n\t\tthrow new ValidationException(\"Unsupported JDO parameter: \" +\n\t\t\t\t\t      parms[i].getName());\n\t    }\n        }\n        m_driverUrl = m_database.getDatabaseChoice().getDriver().getUrl();\n        String driverCN =\n\t    m_database.getDatabaseChoice().getDriver().getClassName();\n\n        Class.forName(driverCN);\n    }","id":61230,"modified_method":"/**\n     * Protected constructor\n     * \n     * @exception java.io.IOException\n     *                Thrown if the specified config file cannot be read\n     * @exception org.exolab.castor.xml.MarshalException\n     *                Thrown if the file does not conform to the schema.\n     * @exception org.exolab.castor.xml.ValidationException\n     *                Thrown if the contents do not match the required schema.\n     */\n    protected DatabaseChecker(String configFile) throws IOException,\n\t\t\t\t\t\t      MarshalException,\n\t\t\t\t\t\t      ValidationException,\n\t\t\t\t\t\t      ClassNotFoundException {\n        Class<DataSourceConfiguration> dsc = DataSourceConfiguration.class;\n\n        // Set the system identifier for the source of the input stream.\n        // This is necessary so that any location information can\n        // positively identify the source of the error.\n        //\n        InputSource dbIn = new InputSource(new FileInputStream(configFile));\n        dbIn.setSystemId(configFile);\n\n        // Attempt to load the database reference.\n        //\n        DataSourceConfiguration m_database = (DataSourceConfiguration) Unmarshaller.unmarshal(dsc, dbIn);\n\n        /*\n        Param[] parms = m_database.getDatabaseChoice().getDriver().getParam();\n        for (int i = 0; i < parms.length; i++) {\n        \tif (parms[i].getName().equals(\"user\")) {\n        \t\tm_driverUser = parms[i].getValue();\n        \t} else if (parms[i].getName().equals(\"password\")) {\n        \t\tm_driverPass = parms[i].getValue();\n        \t} else {\n        \t\tthrow new ValidationException(\"Unsupported JDO parameter: \" +\n        \t\t\t\tparms[i].getName());\n        \t}\n        }\n        */\n        \n        Collection<JdbcDataSource> jdbcDataSources = m_database.getJdbcDataSourceCollection();\n        for (JdbcDataSource jdbcDataSource : jdbcDataSources) {\n\t\t\tm_driverUrl = jdbcDataSource.getUrl();\n\t\t\tm_driverUser = jdbcDataSource.getUserName();\n\t\t\tm_driverPass = jdbcDataSource.getPassword();\n\t        String driverCN = jdbcDataSource.getClassName();\n\t        Class.forName(driverCN);\n\t\t}\n    }","commit_id":"8f5c125a30aa9dff164915596ef09abcbed9b55e","url":"https://github.com/OpenNMS/opennms"},{"original_method":"private static void replaceSchemaReferences\n        (final Schema oldSchema,\n         final Schema newSchema,\n         final Collection<LWComponent> nodes,\n         final tufts.vue.LWMap sourceMap)\n    {\n        int updateCount = 0;\n\n        newSchema.setRowNodeStyle(oldSchema.getRowNodeStyle()); // ideally, only when the existing isn't already used anywhere\n\n        for (LWComponent c : nodes) {\n            final MetaMap data = c.getRawData();\n            if (data == null)\n                continue;\n            if (data.getSchema() == oldSchema) {\n                data.setSchema(newSchema);\n                updateCount++;\n            }\n//             else if (DEBUG.Enabled) {\n//                 Log.debug(\"keeping schema: \" + data.getSchema());\n//             }\n        }\n\n        Log.info(String.format(\"updated %d schema handle references in %s\", updateCount, sourceMap));\n\n    }","id":61231,"modified_method":"private static synchronized void replaceSchemaReferences\n        (final Schema oldSchema,\n         final Schema newSchema,\n         final Collection<LWComponent> nodes,\n         final tufts.vue.LWMap sourceMap)\n    {\n        int updateCount = 0;\n\n        //newSchema.setRowNodeStyle(oldSchema.getRowNodeStyle()); // ideally, only when the existing isn't already used anywhere\n\n        for (LWComponent c : nodes) {\n            final MetaMap data = c.getRawData();\n            if (data == null)\n                continue;\n            if (data.getSchema() == oldSchema) {\n                data.setSchema(newSchema);\n                updateCount++;\n            }\n//             else if (DEBUG.Enabled) {\n//                 Log.debug(\"keeping schema: \" + data.getSchema());\n//             }\n        }\n\n        Log.info(String.format(\"updated %d schema handle references in %s\", updateCount, sourceMap));\n\n    }","commit_id":"76a20a564a75f48bfebe99bc7629b46ec329f536","url":"https://github.com/VUE/VUE"},{"original_method":"@Override\n    public String toString() {\n        try {\n            String extra = \"\";\n            if (DEBUG.META) extra = \" \" + DSGUID + \"/\" + mResource;\n            return String.format(\"Schema@%07x[%s/%s; #%dx%d %s k=%s%s]\",\n                                 System.identityHashCode(this),\n                                 \"\"+mLocalID,\n                                 //\"\"+GUID,\n                                 \"\"+DSGUID,\n                                 mFields.size(),\n                                 mRows.size(),\n                                 Util.color(mName, Util.TERM_PURPLE),\n                                 Relation.quoteKey(mKeyField),\n                                 extra);\n        } catch (Throwable t) {\n            t.printStackTrace();\n            return \"Schema[\" + t + \"]\";\n        }\n    }","id":61232,"modified_method":"@Override\n    public String toString() {\n        try {\n            String extra = \"\";\n            if (DEBUG.META) extra = \" \" + DSGUID + \"/\" + mResource;\n            return String.format(\"Schema@%08x[%s/%s; #%dx%d %s%s k=%s%s]\",\n                                 System.identityHashCode(this),\n                                 \"\"+mLocalID,\n                                 //\"\"+GUID,\n                                 \"\"+DSGUID,\n                                 mFields.size(),\n                                 mRows.size(),\n                                 Util.color(mName, Util.TERM_PURPLE),\n                                 isDiscarded ? Util.color(\" DISCARDED\", Util.TERM_RED) : \"\",\n                                 Relation.quoteKey(mKeyField),\n                                 extra);\n        } catch (Throwable t) {\n            t.printStackTrace();\n            return \"Schema[\" + t + \"]\";\n        }\n    }","commit_id":"76a20a564a75f48bfebe99bc7629b46ec329f536","url":"https://github.com/VUE/VUE"},{"original_method":"/** find all schema handles in all nodes that match the new schema\n     * and replace them with pointers to the live data schema */\n    public static void updateAllSchemaReferences(final Schema newlyLoadedSchema,\n                                                  final Collection<tufts.vue.LWMap> maps)\n    {\n        if (DEBUG.Enabled) {\n            Log.debug(\"updateAllSchemaReferences; \" + newlyLoadedSchema + \"; maps: \" + maps);\n            Util.dump(_SchemaByResource, \"BY-RESOURCE\");\n            Util.dump(_SchemaByDSGUID, \"BY-DSGUID\");\n        }\n        \n        if (!newlyLoadedSchema.isLoaded()) {\n            Log.warn(\"newly loaded schema is empty: \" + newlyLoadedSchema, new Throwable(\"FYI\"));\n            return;\n        }\n        \n        int updateCount = 0;\n        int mapUpdateCount = 0;\n\n        // todo: if this ever gets slow, could improve performance by pre-computing a\n        // lookup map of all schema handles that map to the new schema (which will\n        // usually contain only a single schema mapping) then we only have to check\n        // every schema reference found against the pre-computed lookups instead of\n        // doing a Schema.lookup against all loaded Schema's.\n        \n        for (tufts.vue.LWMap map : maps) {\n            final int countAtMapStart = updateCount;\n            final Collection<LWComponent> nodes = map.getAllDescendents(LWComponent.ChildKind.ANY);\n            for (LWComponent c : nodes) {\n                final MetaMap data = c.getRawData();\n                if (data == null)\n                    continue;\n                final Schema curSchema = data.getSchema();\n                if (curSchema != null) {\n                    final Schema newSchema = Schema.lookupAuthority(curSchema);\n//                     Log.debug(\"curs: \" + newSchema);\n//                     Log.debug(\"auth: \" + newSchema);\n                    if (newSchema != curSchema) {\n                        data.setSchema(newSchema);\n                        updateCount++;\n                        if (newSchema != newlyLoadedSchema) {\n                            Log.warn(\"out of date schema in \" + c + \"; oldSchema=\" + curSchema + \"; replaced with \" + newSchema);\n                        } else {\n                            //if (DEBUG.SCHEMA) Log.debug(\"replaced schema handle in \" + c);\n                        }\n\n                    }\n                }\n            }\n            if (updateCount > countAtMapStart)\n                mapUpdateCount++;\n        }\n        Log.info(String.format(\"updated %d schema handle references in %d maps\", updateCount, mapUpdateCount));\n    }","id":61233,"modified_method":"/** find all schema handles in all nodes that match the new schema\n     * and replace them with pointers to the live data schema */\n    // codepath: called in XmlDataSource anytime we load a new authoritative, \"real\" schema -- as such\n    // couldn't we do this automatically?\n    public static synchronized void reportNewAuthoritativeSchema\n        (final Schema newlyLoadedSchema,\n         final Collection<tufts.vue.LWMap> maps)\n    {\n        if (DEBUG.Enabled) {\n            Log.debug(\"updateAllSchemaReferences; \" + newlyLoadedSchema + \"; maps: \" + maps);\n            dumpAuthorities();\n        }\n        \n        if (!newlyLoadedSchema.isLoaded()) {\n            Log.warn(\"newly loaded schema is empty: \" + newlyLoadedSchema, new Throwable(\"FYI\"));\n            return;\n        }\n        \n        int scanCount = 0;\n        int scanMapCount = 0;\n        int updateCount = 0;\n        int updateMapCount = 0;\n\n        // todo: if this ever gets slow, could improve performance by pre-computing a\n        // lookup map of all schema handles that map to the new schema (which will\n        // usually contain only a single schema mapping) then we only have to check\n        // every schema reference found against the pre-computed lookups instead of\n        // doing a Schema.lookup against all loaded Schema's. E.g., we'd make a\n        // a series of calls to replaceSchemaReferences.\n        \n        for (tufts.vue.LWMap map : maps) {\n            final int countAtMapStart = updateCount;\n            final Collection<LWComponent> nodes = map.getAllDescendents(LWComponent.ChildKind.ANY);\n            for (LWComponent c : nodes) {\n                final MetaMap data = c.getRawData();\n                if (data == null)\n                    continue;\n                final Schema curSchema = data.getSchema();\n                if (curSchema != null) {\n                    final Schema newSchema = Schema.lookupAuthority(curSchema);\n//                     Log.debug(\"curs: \" + newSchema);\n//                     Log.debug(\"auth: \" + newSchema);\n                    scanCount++;\n                    if (newSchema != curSchema) {\n                        curSchema.discardFor(newSchema);\n                        data.setSchema(newSchema);\n                        updateCount++;\n                        if (newSchema != newlyLoadedSchema) {\n                            Log.warn(\"out of date schema in \" + c + \"; oldSchema=\" + curSchema + \"; replaced with \" + newSchema);\n                        } else {\n                            //if (DEBUG.SCHEMA) Log.debug(\"replaced schema handle in \" + c);\n                        }\n\n                    }\n                }\n            }\n            if (updateCount > countAtMapStart)\n                updateMapCount++;\n            scanMapCount++;\n        }\n        Log.info(String.format(\"scanned %d schema references in %d maps\", scanCount, scanMapCount));\n        Log.info(String.format(\"replaced %d schema references in %d maps\", updateCount, updateMapCount));\n    }","commit_id":"76a20a564a75f48bfebe99bc7629b46ec329f536","url":"https://github.com/VUE/VUE"},{"original_method":"/** for looking up a loaded (data-containing) schema from a an empty schema-handle.\n     * If the given schema is already loaded, or if no matching loaded schema can be found,\n     * the passed in schema is returned.\n     */\n    public static Schema lookupAuthority(final Schema schema) {\n        if (DEBUG.SCHEMA && DEBUG.META) Log.debug(\"LOOKUP SCHEMA \" + schema);\n        if (schema == null)\n            return null;\n        if (schema.isLoaded())\n            return schema;\n\n        final Schema authoritativeSchema = lookForReplacement(schema);\n\n        if (authoritativeSchema != null)\n            return authoritativeSchema;\n        else\n            return schema;\n        \n    }","id":61234,"modified_method":"/** for looking up a loaded (data-containing) schema from a an empty schema-handle.\n     * If the given schema is already loaded, or if no matching loaded schema can be found,\n     * the passed in schema is returned.\n     */\n    public static Schema lookupAuthority(final Schema schema) {\n        if (DEBUG.SCHEMA && DEBUG.META) Log.debug(\"LOOKUP SCHEMA \" + schema);\n        if (schema == null)\n            return null;\n        \n//         if (schema.isLoaded())\n//             return schema;\n\n        final Schema authoritativeSchema = lookup(schema);\n\n        if (authoritativeSchema != null && authoritativeSchema != schema) {\n            if (schema.isLoaded() && DEBUG.Enabled) {\n                Util.printStackTrace(\"replacing loaded schema \" + schema + \" with authority \" + authoritativeSchema);\n            }\n            return authoritativeSchema;\n        }\n        else\n            return schema;\n        \n    }","commit_id":"76a20a564a75f48bfebe99bc7629b46ec329f536","url":"https://github.com/VUE/VUE"},{"original_method":"/** set the node style object used for record/row nodes */\n    public void setRowNodeStyle(LWComponent style) {\n        if (DEBUG.SCHEMA) Log.debug(\"setRowNodeStyle: \" + style);\n        initStyleNode(style);\n        mStyleNode = style;\n    }","id":61235,"modified_method":"/** set the node style object used for record/row nodes */\n    public synchronized void setRowNodeStyle(LWComponent style) {\n        if (DEBUG.SCHEMA) Log.debug(\"setRowNodeStyle: \" + style);\n        runtimeInitStyleNode(style);\n        mStyleNode = style;\n    }","commit_id":"76a20a564a75f48bfebe99bc7629b46ec329f536","url":"https://github.com/VUE/VUE"},{"original_method":"private static void registerByResource(Schema s, Resource r) {\n        Schema prev = _SchemaByResource.put(r, s);\n        if (prev != null) {\n            Log.warn(\"REPLACING EXISTING byRESOURCE; orphaning\" + prev, new Throwable(\"HERE\"));\n        }\n        Log.info(s + \"; recorded as AUTHORITATIVE for Resource: \" + r);\n        if (s.getResource() != r)\n            Log.warn(new Throwable(\"INCONSISTENT RESOURCE STATE\"));\n    }","id":61236,"modified_method":"private static synchronized void registerByResource(Schema s, Resource r) {\n        Schema prev = _SchemaByResource.put(r, s);\n        if (prev != null) {\n            Log.warn(\"REPLACING EXISTING byRESOURCE; orphaning\" + prev, new Throwable(\"HERE\"));\n        }\n        if (prev == s)\n            Log.info(s + \"; was already AUTHORITATIVE for Resource: \" + r);\n        else\n            Log.info(s + \"; recorded as AUTHORITATIVE for Resource: \" + r);\n        if (s.getResource() != r)\n            Log.warn(\"\"+s, new Throwable(\"INCONSISTENT RESOURCE STATE \" + r + \" != \" + s.getResource()));\n    }","commit_id":"76a20a564a75f48bfebe99bc7629b46ec329f536","url":"https://github.com/VUE/VUE"},{"original_method":"public void flushData() {\n        if (DEBUG.Enabled) Log.debug(\"flushing \" + this);\n        mRows.clear();\n        mLongestFieldName = 10;\n        for (Field f : getFields()) {\n            f.flushStats(); // flush data / enums, but keep any style\n        }\n    }","id":61237,"modified_method":"public synchronized void flushData() {\n        if (DEBUG.Enabled) Log.debug(\"flushing \" + this);\n        mRows.clear();\n        mLongestFieldName = 10; // for debug\n        for (Field f : getFields()) {\n            f.flushStats(); // flush data / enums, but keep any style\n        }\n    }","commit_id":"76a20a564a75f48bfebe99bc7629b46ec329f536","url":"https://github.com/VUE/VUE"},{"original_method":"private void createAttachableAssociations(Collection<Field> restoredFields) {\n\n        if (DEBUG.SCHEMA) Log.debug(this + \"; createAttachableAssociations\");\n\n        for (Field field : restoredFields) {\n            for (Field.PersistRef ref : field.getRelatedFieldRefs()) {\n                if (DEBUG.SCHEMA) Log.debug(this + \"; persisted relation for \" + field + \": \" + ref);\n                for (Field possibleMatch : AllFieldsByLowerName.get(ref.fieldName.toLowerCase())) {\n                    final String guid = possibleMatch.getSchema().getGUID();\n                    Log.debug(\"Checking GUID \" + guid);\n                    if (ref.schemaGuid.equals(guid)) {\n                        final Field match = possibleMatch;\n                        Log.debug(\"found live field to match ref: \" + ref + \" = \" + Util.tags(match));\n                        Association.add(field, possibleMatch);\n                    }\n                }\n            }\n        }\n    }","id":61238,"modified_method":"private static synchronized void createAttachableAssociations(Schema schema, Collection<Field> restoredFields) {\n\n        if (DEBUG.SCHEMA) Log.debug(schema + \"; createAttachableAssociations\");\n\n        for (Field field : restoredFields) {\n            for (Field.PersistRef ref : field.getRelatedFieldRefs()) {\n                if (DEBUG.SCHEMA) Log.debug(schema + \"; persisted relation for \" + field + \": \" + ref);\n                for (Field possibleMatch : AllFieldsByLowerName.get(ref.fieldName.toLowerCase())) {\n                    final String guid = possibleMatch.getSchema().getGUID();\n                    Log.debug(\"Checking GUID \" + guid);\n                    if (ref.schemaGuid.equals(guid)) {\n                        final Field match = possibleMatch;\n                        Log.debug(\"found live field to match ref: \" + ref + \" = \" + Util.tags(match));\n                        Association.add(field, possibleMatch);\n                    }\n                }\n            }\n        }\n    }","commit_id":"76a20a564a75f48bfebe99bc7629b46ec329f536","url":"https://github.com/VUE/VUE"},{"original_method":"public static Schema newInstance(Resource r, String dsGUID) {\n\n        Schema prev;\n\n        final Schema s = new Schema();\n        \n         // may want to wait to do registrations until we actually load the rows...\n        \n//         if (dsGUID != null)\n//             registerByDSGUID(s, dsGUID);\n//         registerByResource(s, r);\n\n        s.setResource(r);\n        s.setDSGUID(dsGUID);\n        s.setGUID(edu.tufts.vue.util.GUID.generate());\n        //if (DEBUG.SCHEMA) Log.debug(\"INSTANCED SCHEMA \" + s + \"\\n\");\n        if (DEBUG.SCHEMA) Log.debug(s + \"; INSTANCED\");\n\n        if (dsGUID != null)\n            registerByDSGUID(s, dsGUID);\n        registerByResource(s, r);\n        \n        if (DEBUG.SCHEMA) Log.debug(s + \"; REGISTERED\");\n        \n        return s;\n    }","id":61239,"modified_method":"private static Schema newAuthorityInstance(Resource r, String dsGUID) {\n\n        final Schema s = new Schema();\n        \n        s.setResource(r);\n        s.setDSGUID(dsGUID);\n        s.setGUID(edu.tufts.vue.util.GUID.generate());\n        //if (DEBUG.SCHEMA) Log.debug(\"INSTANCED SCHEMA \" + s + \"\\n\");\n        if (DEBUG.SCHEMA) Log.debug(s + \"; INSTANCED\");\n\n        registerAsAuthority(s);\n        // would we want to wait to do registrations until we actually load the rows?\n        \n        if (DEBUG.SCHEMA) Log.debug(s + \"; REGISTERED\");\n        \n        if (DEBUG.SCHEMA) dumpAuthorities();\n        \n        return s;\n    }","commit_id":"76a20a564a75f48bfebe99bc7629b46ec329f536","url":"https://github.com/VUE/VUE"},{"original_method":"private static void initStyleNode(LWComponent style) {\n        if (style != null) {\n            // the INTERNAL flag permits the style to operate (deliver events) w/out a parent\n            //style.setFlag(LWComponent.Flag.INTERNAL);\n            style.clearFlag(LWComponent.Flag.INTERNAL); // no longer used to deliver events\n            // the DATA_STYLE bit is not persisted, must restore this bit manually:\n            style.setFlag(LWComponent.Flag.DATA_STYLE);\n\n            // as the style objects aren't proper children of the map, they never get this\n            // cleared, and we have to do it here manually to make sure\n            style.markAsRestored();\n\n            // hack to give the style a parent so it is considered \"alive\" and can deliver events\n            //style.setParent(FalseStyleParent);\n        }\n    }","id":61240,"modified_method":"private static LWComponent runtimeInitStyleNode(LWComponent style) {\n        if (style != null) {\n            // the INTERNAL flag permits the style to operate (deliver events) w/out a parent\n            //style.setFlag(LWComponent.Flag.INTERNAL);\n            style.clearFlag(LWComponent.Flag.INTERNAL); // no longer used to deliver events\n            // the DATA_STYLE bit is not persisted, must restore this bit manually:\n            style.setFlag(LWComponent.Flag.DATA_STYLE);\n\n            // as the style objects aren't proper children of the map, they never get this\n            // cleared, and we have to do it here manually to make sure\n            style.markAsRestored();\n\n            // hack to give the style a parent so it is considered \"alive\" and can deliver events\n            //style.setParent(FalseStyleParent);\n        }\n        return style;\n    }","commit_id":"76a20a564a75f48bfebe99bc7629b46ec329f536","url":"https://github.com/VUE/VUE"},{"original_method":"/** If an existing schema exists matching the DSGUID, return that, otherwise, a new schema instance */\n    // TODO: factor in looking up based on the resource if the DSGUID doesn't match for some reason\n    public static Schema getInstance(Resource r, String dataSourceGUID) {\n        Schema s = _SchemaByDSGUID.get(dataSourceGUID);\n        if (s == null) {\n            if (DEBUG.SCHEMA) Log.debug(\"fetch: dsGUID \" + Util.tags(dataSourceGUID) + \" not found; instancing new\");\n            return newInstance(r, dataSourceGUID);\n        } else {\n            if (DEBUG.SCHEMA) {\n                Log.debug(\"fetch: found by GUID \" + s);\n                Log.debug(\"fetch: existing fields:\");\n                Util.dump(s.mFields);\n            }\n            return s;\n        }\n    }","id":61241,"modified_method":"public static Schema getInstance(Resource r, String dsGUID) {\n        return getInstance(r, dsGUID, null, SCHEMA_REFERENCE);\n    }","commit_id":"76a20a564a75f48bfebe99bc7629b46ec329f536","url":"https://github.com/VUE/VUE"},{"original_method":"/** to be called on each schema at the end of a map load */\n    public void syncToGlobalModel(tufts.vue.LWMap sourceMap, Collection<LWComponent> allRestored)\n    {\n        Log.debug(this + \"; SYNC TO GLOBAL MODEL\");\n        \n        boolean replacedByExistingSchema = false;\n        if (getDSGUID() != null) {\n            Schema existing = lookForReplacement(this);\n            if (existing != null) {\n                Log.debug(\"DUMPING THIS SCHEMA FOR EXISTING:\\n\\t  dumped: \" + this + \"\\n\\texisting: \" + existing);\n                replaceSchemaReferences(this, existing, allRestored, sourceMap);\n                replacedByExistingSchema = true;\n            } else {\n                registerByDSGUID(this, getDSGUID());\n            }\n        }\n        \n        //Log.debug(\"LOAD FIELDS WITH \" + mPersistFields);\n        \n        if (!replacedByExistingSchema) {\n            for (Field f : mPersistFields) {\n\n                final LWComponent style = f.getStyleNode();\n                if (DEBUG.Enabled) Log.debug(String.format(\"keeping field %s%-23s%s style=%s\",\n                                                           Util.TERM_GREEN, f, Util.TERM_CLEAR, style));\n                initStyleNode(style);\n                addField(f);\n            }\n            createAttachableAssociations(mPersistFields);\n            if (DEBUG.Enabled) Log.debug(this + \" IS THE AUTHORITY; DSGUID=\" + getDSGUID() + \"\\n\");\n            \n        }\n    }","id":61242,"modified_method":"/**\n     * Any deserialized Schema's saved with the map that match any already loaded\n     * authoritative Schema's will be replaced in the set of restored nodes, and and all\n     * Field's found will be scanned for associations to be added.\n     */\n    public static synchronized void restoreSavedMapSchemas\n        (final tufts.vue.LWMap restoredMap,\n         final Collection<Schema> restoredSchemaHandles,\n         final Collection<LWComponent> allRestored)\n    {\n        if (DEBUG.SCHEMA) {\n            Log.debug(\"SCHEMA's in map \" + restoredMap + \":\");\n            Util.dump(restoredSchemaHandles);\n            Schema.dumpAuthorities();\n        }\n\n        for (Schema schema : restoredSchemaHandles) {\n            try {\n                Log.debug(schema + \"; SYNC TO GLOBAL MODEL\");\n                schema.restoreFields();\n                attemptAuthorityReplacement(schema, restoredMap, allRestored);\n                createAttachableAssociations(schema, schema.mPersistFields); // these Fields may have just been effectively discarded!\n                //schema.attemptReplacementsAndFindAssociations(restoredMap, allRestored);\n            } catch (Throwable t) {\n                Log.error(\"error updating schema references for \" + schema, t);\n            }\n        }\n    }","commit_id":"76a20a564a75f48bfebe99bc7629b46ec329f536","url":"https://github.com/VUE/VUE"},{"original_method":"private static void registerByDSGUID(Schema s, String dsGUID) {\n        Schema prev = _SchemaByDSGUID.put(dsGUID, s);\n        if (prev != null) {\n            Log.warn(\"REPLACING EXISTING DSGUID; orphaning: \" + prev, new Throwable(\"HERE\"));\n        }\n        Log.info(s + \"; recorded as AUTHORITATIVE for DSGUID\");\n        if (s.getDSGUID() != dsGUID)\n            Log.warn(new Throwable(\"INCONSISTENT DSGUID STATE\"));\n    }","id":61243,"modified_method":"private static synchronized void registerByDSGUID(Schema s, String dsGUID) {\n        Schema prev = _SchemaByDSGUID.put(dsGUID, s);\n        if (prev != null && prev != s) {\n            Log.warn(\"REPLACING EXISTING DSGUID; orphaning: \" + prev, new Throwable(\"HERE\"));\n        }\n        if (prev == s)\n            Log.info(s + \"; was already AUTHORITATIVE for DSGUID \" + dsGUID);\n        else\n            Log.info(s + \"; recorded as AUTHORITATIVE for DSGUID \" + dsGUID);\n        if (s.getDSGUID() != dsGUID)\n            Log.warn(\"\"+s, new Throwable(\"INCONSISTENT DSGUID STATE; \" + dsGUID));\n    }","commit_id":"76a20a564a75f48bfebe99bc7629b46ec329f536","url":"https://github.com/VUE/VUE"},{"original_method":"@Override\n\tpublic void updateActivitySet(long activityId)\n\t\tthrows PortalException, SystemException {\n\n\t\tSocialActivity activity =\n\t\t\tSocialActivityLocalServiceUtil.fetchSocialActivity(activityId);\n\n\t\tif ((activity == null) || (activity.getActivitySetId() > 0)) {\n\t\t\treturn;\n\t\t}\n\n\t\tlong activitySetId = getActivitySetId(activityId);\n\n\t\tif (activitySetId > 0) {\n\t\t\tSocialActivitySetLocalServiceUtil.incrementActivityCount(\n\t\t\t\tactivitySetId, activityId);\n\n\t\t\tif (activity.getType() == _ACTIVITY_KEY_UPDATE_PAGE) {\n\t\t\t\tSocialActivitySet activitySet =\n\t\t\t\t\tSocialActivitySetLocalServiceUtil.fetchSocialActivitySet(\n\t\t\t\t\t\tactivitySetId);\n\n\t\t\t\tWikiPageResource pageResource =\n\t\t\t\t\tWikiPageResourceLocalServiceUtil.fetchWikiPageResource(\n\t\t\t\t\t\tactivity.getClassPK());\n\n\t\t\t\tWikiPage wikiPage = WikiPageLocalServiceUtil.getPage(\n\t\t\t\t\tpageResource.getResourcePrimKey());\n\n\t\t\t\tJSONObject extraDataJSONObject =\n\t\t\t\t\tJSONFactoryUtil.createJSONObject(\n\t\t\t\t\t\tactivitySet.getExtraData());\n\n\t\t\t\textraDataJSONObject.put(\n\t\t\t\t\t\"targetVersion\",\n\t\t\t\t\tMathUtil.format(wikiPage.getVersion() + 0.1, 1, 1));\n\n\t\t\t\tactivitySet.setExtraData(extraDataJSONObject.toString());\n\n\t\t\t\tSocialActivitySetLocalServiceUtil.updateSocialActivitySet(\n\t\t\t\t\tactivitySet);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tSocialActivitySet activitySet =\n\t\t\t\tSocialActivitySetLocalServiceUtil.addActivitySet(activityId);\n\n\t\t\tif (activity.getType() == _ACTIVITY_KEY_UPDATE_PAGE) {\n\t\t\t\tWikiPageResource pageResource =\n\t\t\t\t\tWikiPageResourceLocalServiceUtil.fetchWikiPageResource(\n\t\t\t\t\t\tactivity.getClassPK());\n\n\t\t\t\tWikiPage wikiPage = WikiPageLocalServiceUtil.getPage(\n\t\t\t\t\tpageResource.getResourcePrimKey());\n\n\t\t\t\tJSONObject extraDataJSONObject =\n\t\t\t\t\tJSONFactoryUtil.createJSONObject();\n\n\t\t\t\textraDataJSONObject.put(\"sourceVersion\", wikiPage.getVersion());\n\t\t\t\textraDataJSONObject.put(\n\t\t\t\t\t\"targetVersion\",\n\t\t\t\t\tMathUtil.format(wikiPage.getVersion() + 0.1, 1, 1));\n\n\t\t\t\tactivitySet.setExtraData(extraDataJSONObject.toString());\n\n\t\t\t\tSocialActivitySetLocalServiceUtil.updateSocialActivitySet(\n\t\t\t\t\tactivitySet);\n\t\t\t}\n\t\t}\n\t}","id":61244,"modified_method":"@Override\n\tpublic void updateActivitySet(long activityId)\n\t\tthrows PortalException, SystemException {\n\n\t\tSocialActivity activity =\n\t\t\tSocialActivityLocalServiceUtil.fetchSocialActivity(activityId);\n\n\t\tif ((activity == null) || (activity.getActivitySetId() > 0)) {\n\t\t\treturn;\n\t\t}\n\n\t\tlong activitySetId = getActivitySetId(activityId);\n\n\t\tif (activitySetId > 0) {\n\t\t\tSocialActivitySetLocalServiceUtil.incrementActivityCount(\n\t\t\t\tactivitySetId, activityId);\n\n\t\t\tif (activity.getType() == _ACTIVITY_KEY_UPDATE_PAGE) {\n\t\t\t\tSocialActivitySet activitySet =\n\t\t\t\t\tSocialActivitySetLocalServiceUtil.fetchSocialActivitySet(\n\t\t\t\t\t\tactivitySetId);\n\n\t\t\t\tWikiPageResource pageResource =\n\t\t\t\t\tWikiPageResourceLocalServiceUtil.fetchWikiPageResource(\n\t\t\t\t\t\tactivity.getClassPK());\n\n\t\t\t\tWikiPage wikiPage = WikiPageLocalServiceUtil.getPage(\n\t\t\t\t\tpageResource.getResourcePrimKey());\n\n\t\t\t\tJSONObject extraDataJSONObject = null;\n\n\t\t\t\tif (Validator.isNull(activitySet.getExtraData())) {\n\t\t\t\t\textraDataJSONObject = JSONFactoryUtil.createJSONObject();\n\n\t\t\t\t\textraDataJSONObject.put(\n\t\t\t\t\t\t\"sourceVersion\", wikiPage.getVersion());\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\textraDataJSONObject =\n\t\t\t\t\t\tJSONFactoryUtil.createJSONObject(\n\t\t\t\t\t\t\tactivitySet.getExtraData());\n\t\t\t\t}\n\n\t\t\t\textraDataJSONObject.put(\n\t\t\t\t\t\"targetVersion\",\n\t\t\t\t\tMathUtil.format(wikiPage.getVersion() + 0.1, 1, 1));\n\n\t\t\t\tactivitySet.setExtraData(extraDataJSONObject.toString());\n\n\t\t\t\tSocialActivitySetLocalServiceUtil.updateSocialActivitySet(\n\t\t\t\t\tactivitySet);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tSocialActivitySet activitySet =\n\t\t\t\tSocialActivitySetLocalServiceUtil.addActivitySet(activityId);\n\n\t\t\tif (activity.getType() == _ACTIVITY_KEY_UPDATE_PAGE) {\n\t\t\t\tWikiPageResource pageResource =\n\t\t\t\t\tWikiPageResourceLocalServiceUtil.fetchWikiPageResource(\n\t\t\t\t\t\tactivity.getClassPK());\n\n\t\t\t\tWikiPage wikiPage = WikiPageLocalServiceUtil.getPage(\n\t\t\t\t\tpageResource.getResourcePrimKey());\n\n\t\t\t\tJSONObject extraDataJSONObject =\n\t\t\t\t\tJSONFactoryUtil.createJSONObject();\n\n\t\t\t\textraDataJSONObject.put(\"sourceVersion\", wikiPage.getVersion());\n\t\t\t\textraDataJSONObject.put(\n\t\t\t\t\t\"targetVersion\",\n\t\t\t\t\tMathUtil.format(wikiPage.getVersion() + 0.1, 1, 1));\n\n\t\t\t\tactivitySet.setExtraData(extraDataJSONObject.toString());\n\n\t\t\t\tSocialActivitySetLocalServiceUtil.updateSocialActivitySet(\n\t\t\t\t\tactivitySet);\n\t\t\t}\n\t\t}\n\t}","commit_id":"2a2fe36ca722f139e4621efde6ed55de03bc2421","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected JSONObject getFileEntryJSONObject(AssetEntry assetEntry)\n\t\tthrows PortalException {\n\n\t\tFileEntry fileEntry = dlAppService.getFileEntry(\n\t\t\tassetEntry.getClassPK());\n\n\t\tJSONObject fileEntryJSONObject = JSONFactoryUtil.createJSONObject(\n\t\t\tJSONFactoryUtil.looseSerialize(fileEntry));\n\n\t\tfileEntryJSONObject.put(\"url\", getFileEntryPreviewURL(fileEntry));\n\n\t\treturn fileEntryJSONObject;\n\t}","id":61245,"modified_method":"protected JSONObject getFileEntryJSONObject(AssetEntry assetEntry)\n\t\tthrows PortalException {\n\n\t\tFileEntry fileEntry = dlAppService.getFileEntry(\n\t\t\tassetEntry.getClassPK());\n\n\t\tJSONObject fileEntryJSONObject = JSONFactoryUtil.createJSONObject();\n\n\t\tfileEntryJSONObject.put(\"fileEntry\", JSONFactoryUtil.createJSONObject(\n\t\t\tJSONFactoryUtil.looseSerialize(fileEntry)));\n\n\t\tfileEntryJSONObject.put(\"url\", getFileEntryPreviewURL(fileEntry));\n\n\t\treturn fileEntryJSONObject;\n\t}","commit_id":"cc8a06753678713ee2ca81e5f8b982e45af2a317","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private static final JSONObject _toJSONObject(\n\t\t\tPortletPreferences portletSetup, String css)\n\t\tthrows Exception {\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Transform CSS to JSON \" + css);\n\t\t}\n\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject(css);\n\n\t\tJSONObject portletData = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"portletData\", portletData);\n\n\t\tJSONObject titles = JSONFactoryUtil.createJSONObject();\n\n\t\tportletData.put(\"titles\", titles);\n\n\t\tLocale[] locales = LanguageUtil.getAvailableLocales();\n\n\t\tfor (int i = 0; i < locales.length; i++) {\n\t\t\tString languageId = LocaleUtil.toLanguageId(locales[i]);\n\n\t\t\tString title = portletSetup.getValue(\n\t\t\t\t\"portletSetupTitle_\" + languageId, null);\n\n\t\t\tif (Validator.isNotNull(languageId)) {\n\t\t\t\ttitles.put(languageId, title);\n\t\t\t}\n\t\t}\n\n\t\tboolean useCustomTitle = GetterUtil.getBoolean(\n\t\t\tportletSetup.getValue(\"portletSetupUseCustomTitle\", null));\n\t\tboolean showBorders = GetterUtil.getBoolean(\n\t\t\tportletSetup.getValue(\"portletSetupShowBorders\", null), true);\n\t\tString linkToLayoutUuid = GetterUtil.getString(\n\t\t\tportletSetup.getValue(\"portletSetupLinkToLayoutUuid\", null));\n\n\t\tportletData.put(\"useCustomTitle\", useCustomTitle);\n\t\tportletData.put(\"showBorders\", showBorders);\n\t\tportletData.put(\"portletLinksTarget\", linkToLayoutUuid);\n\n\t\treturn jsonObj;\n\t}","id":61246,"modified_method":"private static final JSONObject _toJSONObject(\n\t\t\tPortletPreferences portletSetup, String css)\n\t\tthrows Exception {\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Transform CSS to JSON \" + css);\n\t\t}\n\n\t\tJSONObject jsonObj = null;\n\n\t\tif (Validator.isNotNull(css)) {\n\t\t\tjsonObj = JSONFactoryUtil.createJSONObject(css);\n\n\t\t\tjsonObj.put(\"cssValue\", true);\n\t\t}\n\t\telse {\n\t\t\tjsonObj = JSONFactoryUtil.createJSONObject();\n\t\t}\n\n\t\tJSONObject portletData = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"portletData\", portletData);\n\n\t\tJSONObject titles = JSONFactoryUtil.createJSONObject();\n\n\t\tportletData.put(\"titles\", titles);\n\n\t\tLocale[] locales = LanguageUtil.getAvailableLocales();\n\n\t\tfor (int i = 0; i < locales.length; i++) {\n\t\t\tString languageId = LocaleUtil.toLanguageId(locales[i]);\n\n\t\t\tString title = portletSetup.getValue(\n\t\t\t\t\"portletSetupTitle_\" + languageId, null);\n\n\t\t\tif (Validator.isNotNull(languageId)) {\n\t\t\t\ttitles.put(languageId, title);\n\t\t\t}\n\t\t}\n\n\t\tboolean useCustomTitle = GetterUtil.getBoolean(\n\t\t\tportletSetup.getValue(\"portletSetupUseCustomTitle\", null));\n\t\tboolean showBorders = GetterUtil.getBoolean(\n\t\t\tportletSetup.getValue(\"portletSetupShowBorders\", null), true);\n\t\tString linkToLayoutUuid = GetterUtil.getString(\n\t\t\tportletSetup.getValue(\"portletSetupLinkToLayoutUuid\", null));\n\n\t\tportletData.put(\"useCustomTitle\", useCustomTitle);\n\t\tportletData.put(\"showBorders\", showBorders);\n\t\tportletData.put(\"portletLinksTarget\", linkToLayoutUuid);\n\n\t\treturn jsonObj;\n\t}","commit_id":"4df880ffc75cc7a03c32a6ca38837fccdadb8f4b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static final String cssToString(PortletPreferences portletSetup) {\n\t\tString css = portletSetup.getValue(\n\t\t\t\"portletSetupCss\", StringPool.BLANK);\n\n\t\ttry {\n\t\t\tif (Validator.isNotNull(css)) {\n\t\t\t\treturn _toJSONObject(portletSetup, css).toString();\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tcss = null;\n\n\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t_log.warn(e);\n\t\t\t}\n\t\t}\n\n\t\treturn css;\n\t}","id":61247,"modified_method":"public static final String cssToString(PortletPreferences portletSetup) {\n\t\tString css = portletSetup.getValue(\n\t\t\t\"portletSetupCss\", StringPool.BLANK);\n\n\t\ttry {\n\t\t\treturn _toJSONObject(portletSetup, css).toString();\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tcss = null;\n\n\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t_log.warn(e);\n\t\t\t}\n\t\t}\n\n\t\treturn css;\n\t}","commit_id":"4df880ffc75cc7a03c32a6ca38837fccdadb8f4b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public EditorCell createNodeAttributeCell(EditorContext context, SNode attribute, EditorCell nodeCell) {\n    return createRoleAttributeCell(context, attribute, AttributeConcept.class, nodeCell);\n  }","id":61248,"modified_method":"public EditorCell createNodeAttributeCell(EditorContext context, SNode attribute, EditorCell nodeCell) {\n    // TODO: Make processing of style attributes more generic.\n    EditorCell attributeCell = createRoleAttributeCell(context, attribute, AttributeConcept.class, nodeCell);\n    if (nodeCell.getStyle().get(StyleAttributes.INDENT_LAYOUT_NEW_LINE)) {\n      attributeCell.getStyle().set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, true);\n    }\n    return attributeCell;\n  }","commit_id":"e1fd58745e127187c77c2e682328348ff5f24d3d","url":"https://github.com/JetBrains/MPS"},{"original_method":"public EditorCell createNodeAttributeCell(EditorContext context, SNode attribute, EditorCell nodeCell) {\n    // TODO: Make processing of style attributes more generic.\n    EditorCell attributeCell = createRoleAttributeCell(context, attribute, AttributeConcept.class, nodeCell);\n    if (nodeCell.getStyle().get(StyleAttributes.INDENT_LAYOUT_NEW_LINE)) {\n      attributeCell.getStyle().set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, true);\n    }\n    return attributeCell;\n  }","id":61249,"modified_method":"public EditorCell createNodeAttributeCell(EditorContext context, SNode attribute, EditorCell nodeCell) {\n    return createRoleAttributeCell(context, attribute, AttributeConcept.class, nodeCell);\n  }","commit_id":"e316a72dac327ef0967ab714a723f076fb901abc","url":"https://github.com/JetBrains/MPS"},{"original_method":"public EditorCell createRoleAttributeCell(EditorContext context, SNode roleAttribute, Class attributeClass, EditorCell cellWithRole) {\n    return context.createRoleAttributeCell(attributeClass, cellWithRole, roleAttribute);\n  }","id":61250,"modified_method":"public EditorCell createRoleAttributeCell(EditorContext context, SNode roleAttribute, Class attributeClass, EditorCell cellWithRole) {\n    // TODO: Make processing of style attributes more generic.\n    EditorCell attributeCell = context.createRoleAttributeCell(attributeClass, cellWithRole, roleAttribute);\n    if (cellWithRole.getStyle().get(StyleAttributes.INDENT_LAYOUT_NEW_LINE)) {\n      attributeCell.getStyle().set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, true);\n    }\n    \n    return attributeCell;\n  }","commit_id":"e316a72dac327ef0967ab714a723f076fb901abc","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static JavaResolveResult getStaticFactoryCandidateInfo(PsiNewExpression newExpression,\n                                                                 PsiElement context) {\n    final PsiExpressionList argumentList = newExpression.getArgumentList();\n    if (argumentList == null) {\n      //token expected diagnostic is provided by parser\n      return null;\n    }\n\n    final PsiClass psiClass = findClass(newExpression);\n    if (psiClass == null) {\n      //should not happens: unresolved class reference would be first and inference won't start\n      return null;\n    }\n\n    final PsiMethod staticFactory = findConstructorStaticFactory(psiClass, newExpression);\n    if (staticFactory == null) {\n      //additional diagnostics: inference fails due to unresolved constructor\n      return JavaResolveResult.EMPTY;\n    }\n\n    final MethodCandidateInfo staticFactoryCandidateInfo = createMethodCandidate(staticFactory, context, false, argumentList);\n    if (staticFactory.isVarArgs()) {\n      final Computable<Integer> computable = new Computable<Integer>() {\n        @Override\n        public Integer compute() {\n          return staticFactoryCandidateInfo.getPertinentApplicabilityLevel();\n        }\n      };\n      final Integer applicability = MethodCandidateInfo.ourOverloadGuard.doPreventingRecursion(newExpression, true, computable);\n      if ((applicability != null ? applicability : staticFactoryCandidateInfo.getApplicabilityLevel()) < MethodCandidateInfo.ApplicabilityLevel.FIXED_ARITY) {\n        return createMethodCandidate(staticFactory, context, true, argumentList);\n      }\n    }\n    return staticFactoryCandidateInfo;\n  }","id":61251,"modified_method":"private static JavaResolveResult getStaticFactoryCandidateInfo(PsiNewExpression newExpression,\n                                                                 PsiElement context) {\n    final PsiExpressionList argumentList = newExpression.getArgumentList();\n    if (argumentList == null) {\n      //token expected diagnostic is provided by parser\n      return null;\n    }\n\n    final PsiClass psiClass = findClass(newExpression);\n    if (psiClass == null) {\n      //should not happens: unresolved class reference would be first and inference won't start\n      return null;\n    }\n\n    final PsiMethod staticFactory = findConstructorStaticFactory(psiClass, newExpression);\n    if (staticFactory == null) {\n      //additional diagnostics: inference fails due to unresolved constructor\n      return JavaResolveResult.EMPTY;\n    }\n\n    final MethodCandidateInfo staticFactoryCandidateInfo = createMethodCandidate(staticFactory, context, false, argumentList);\n    if (!staticFactory.isVarArgs()) {\n      return staticFactoryCandidateInfo;\n    }\n\n    final JavaMethodsConflictResolver resolver = new JavaMethodsConflictResolver(argumentList, PsiUtil.getLanguageLevel(argumentList));\n    final ArrayList<CandidateInfo> conflicts = new ArrayList<CandidateInfo>();\n    conflicts.add(staticFactoryCandidateInfo);\n    conflicts.add(createMethodCandidate(staticFactory, context, true, argumentList));\n    return resolver.resolveConflict(conflicts);\n  }","commit_id":"aded26aa0ac36d10e49d6ee82bfe3cc803999a97","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected void doFix(Project project, ProblemDescriptor descriptor)\n                throws IncorrectOperationException {\n            final PsiElement element = descriptor.getPsiElement();\n            final PsiMethod method = (PsiMethod)element.getParent();\n            final PsiParameterList parameterList = method.getParameterList();\n            final PsiParameter[] parameters = parameterList.getParameters();\n\n            final Query<PsiReference> query = ReferencesSearch.search(method);\n            query.forEach(new Processor<PsiReference>() {\n                public boolean process(PsiReference reference) {\n                    final PsiReferenceExpression referenceExpression =\n                            (PsiReferenceExpression)reference.getElement();\n                    final PsiMethodCallExpression methodCallExpression =\n                            (PsiMethodCallExpression)\n                                    referenceExpression.getParent();\n                    final PsiExpressionList argumentList =\n                            methodCallExpression.getArgumentList();\n                    final PsiExpression[] arguments =\n                            argumentList.getExpressions();\n                    for (PsiExpression argument : arguments) {\n                        System.out.println(argument);\n                    }\n                    return true;\n                }\n            });\n\n            final PsiParameter lastParameter =\n                    parameters[parameters.length - 1];\n            if (lastParameter.isVarArgs()) {\n                final PsiEllipsisType type =\n                        (PsiEllipsisType)lastParameter.getType();\n                final PsiType arrayType = type.toArrayType();\n                final PsiManager psiManager = lastParameter.getManager();\n                final PsiElementFactory factory =\n                        psiManager.getElementFactory();\n                final PsiTypeElement newTypeElement =\n                        factory.createTypeElement(arrayType);\n                final PsiTypeElement typeElement =\n                        lastParameter.getTypeElement();\n                typeElement.replace(newTypeElement);\n            }\n        }","id":61252,"modified_method":"protected void doFix(Project project, ProblemDescriptor descriptor)\n                throws IncorrectOperationException {\n            final PsiElement element = descriptor.getPsiElement();\n            final PsiMethod method = (PsiMethod)element.getParent();\n            final PsiParameterList parameterList = method.getParameterList();\n            final PsiParameter[] parameters = parameterList.getParameters();\n            final PsiParameter lastParameter =\n                    parameters[parameters.length - 1];\n            if (!lastParameter.isVarArgs()) {\n                return;\n            }\n            final PsiEllipsisType type =\n                    (PsiEllipsisType)lastParameter.getType();\n            final Query<PsiReference> query = ReferencesSearch.search(method);\n            final PsiType componentType = type.getComponentType();\n            final String typeText = componentType.getCanonicalText();\n            //query.forEach(new VarargProcessor(typeText, parameters.length - 1));\n            final VarargProcessor processor =\n                    new VarargProcessor(\n                            typeText, parameters.length - 1);\n            final Collection<PsiReference> references = query.findAll();\n            for (PsiReference reference : references) {\n                processor.process(reference);\n            }\n            final PsiType arrayType = type.toArrayType();\n            final PsiManager psiManager = lastParameter.getManager();\n            final PsiElementFactory factory = psiManager.getElementFactory();\n            final PsiTypeElement newTypeElement =\n                    factory.createTypeElement(arrayType);\n            final PsiTypeElement typeElement =\n                    lastParameter.getTypeElement();\n            typeElement.replace(newTypeElement);\n        }","commit_id":"5a387dd5d3a584f128af9b6146d04e1577392278","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n    protected InspectionGadgetsFix buildFix(PsiElement location) {\n        //return new VarargParameterFix();\n        return null;\n    }","id":61253,"modified_method":"@Nullable\n    protected InspectionGadgetsFix buildFix(PsiElement location) {\n        return new VarargParameterFix();\n    }","commit_id":"5a387dd5d3a584f128af9b6146d04e1577392278","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public String getName() {\n            return \"Change variable argument parameter to array parameter\";\n        }","id":61254,"modified_method":"public String getName() {\n            return InspectionGadgetsBundle.message(\n                    \"variable.argument.method.quick.fix\");\n        }","commit_id":"5a387dd5d3a584f128af9b6146d04e1577392278","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void checkParametersNumber(final List<CandidateInfo> conflicts, final int argumentsCount) {\n    boolean found = false;\n    for (CandidateInfo info : conflicts) {\n      if (info instanceof MethodCandidateInfo) {\n        final PsiMethod method = ((MethodCandidateInfo)info).getElement();\n        if (!method.isVarArgs() && method.getParameterList().getParameters().length == argumentsCount) {\n          found = true;\n        }\n      }\n    }\n\n    if (found) {\n      for (Iterator<CandidateInfo> iterator = conflicts.iterator(); iterator.hasNext();) {\n        CandidateInfo info = iterator.next();\n        if (info instanceof MethodCandidateInfo) {\n          final PsiMethod method = ((MethodCandidateInfo)info).getElement();\n          if (method.getParameterList().getParameters().length != argumentsCount) {\n            iterator.remove();\n          }\n        }\n      }\n    }\n  }","id":61255,"modified_method":"private void checkParametersNumber(final List<CandidateInfo> conflicts, final int argumentsCount) {\n    boolean parametersNumberMatch = false;\n    for (CandidateInfo info : conflicts) {\n      if (info instanceof MethodCandidateInfo) {\n        final PsiMethod method = ((MethodCandidateInfo)info).getElement();\n        if (method.isVarArgs()) return; //Do not filter if there is at least one varargs method\n        if (method.getParameterList().getParameters().length == argumentsCount) {\n          parametersNumberMatch = true;\n        }\n      }\n    }\n\n    if (parametersNumberMatch) {\n      for (Iterator<CandidateInfo> iterator = conflicts.iterator(); iterator.hasNext();) {\n        CandidateInfo info = iterator.next();\n        if (info instanceof MethodCandidateInfo) {\n          final PsiMethod method = ((MethodCandidateInfo)info).getElement();\n          if (method.getParameterList().getParameters().length != argumentsCount) {\n            iterator.remove();\n          }\n        }\n      }\n    }\n  }","commit_id":"aeb7b93f84024db3f4aef61b203a09a13462e181","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private int isMoreSpecific(final MethodCandidateInfo info1, final MethodCandidateInfo info2) {\n    PsiMethod method1 = info1.getElement();\n    PsiMethod method2 = info2.getElement();\n    final PsiClass class1 = method1.getContainingClass();\n    final PsiClass class2 = method2.getContainingClass();\n    Boolean isMoreSpecific = null;\n\n    final PsiParameter[] params1 = method1.getParameterList().getParameters();\n    final PsiParameter[] params2 = method2.getParameterList().getParameters();\n\n    PsiExpression[] args = myArgumentsList.getExpressions();\n\n    for(int i = 0; i < args.length; i++){\n      if (i >= params1.length || i >= params2.length) break;\n\n      boolean varArgs1 = params1[i].isVarArgs();\n      boolean varArgs2 = params2[i].isVarArgs();\n      if (!varArgs1 && varArgs2) return Specifics.TRUE;\n      if (varArgs1 && !varArgs2) return Specifics.FALSE;\n\n      final PsiType type1 = info1.getSubstitutor().substitute(params1[i].getType());\n      final PsiType type2 = info2.getSubstitutor().substitute(params2[i].getType());\n\n      final PsiType argType = args[i].getType();\n      Boolean lessBoxing = isLessBoxing(argType, type1, type2);\n      if (lessBoxing != null) {\n        if (isMoreSpecific != null && !lessBoxing.equals(isMoreSpecific)) return Specifics.CONFLICT;\n        isMoreSpecific = lessBoxing;\n        continue;\n      }\n\n      final boolean assignable2From1 = type1 != null && type2 != null && type2.isAssignableFrom(type1);\n      final boolean assignable1From2 = type1 != null && type2 != null && type1.isAssignableFrom(type2);\n      if (assignable1From2 && assignable2From1) {\n        //prefer less generic candidate\n        PsiType erased1 = TypeConversionUtil.erasure(params1[i].getType());\n        PsiType erased2 = TypeConversionUtil.erasure(params2[i].getType());\n        if (!erased2.isAssignableFrom(erased1)) {\n          if (isMoreSpecific == Boolean.TRUE) return Specifics.CONFLICT;\n          isMoreSpecific = Boolean.FALSE;\n        }\n        if (!erased1.isAssignableFrom(erased2)) {\n          if (isMoreSpecific == Boolean.FALSE) return Specifics.CONFLICT;\n          isMoreSpecific = Boolean.TRUE;\n        }\n        continue;\n      }\n      else if (assignable1From2){\n        if (isMoreSpecific == Boolean.TRUE) return Specifics.CONFLICT;\n        isMoreSpecific = Boolean.FALSE;\n      }\n      else if (assignable2From1){\n        if (isMoreSpecific == Boolean.FALSE) return Specifics.CONFLICT;\n        isMoreSpecific = Boolean.TRUE;\n      }\n      else{\n        return Specifics.CONFLICT;\n      }\n    }\n\n    if (isMoreSpecific == null) {\n      if (method1.isVarArgs() && !method2.isVarArgs()) return Specifics.FALSE;\n      if (method2.isVarArgs() && !method1.isVarArgs()) return Specifics.TRUE;\n    }\n\n    if (isMoreSpecific == null){\n      if (class1 != class2){\n        if (class2.isInheritor(class1, true)\n            || class1.isInterface() && !class2.isInterface()){\n          isMoreSpecific = Boolean.FALSE;\n        }\n        else if (class1.isInheritor(class2, true)\n                 || class2.isInterface()){\n            isMoreSpecific = Boolean.TRUE;\n          }\n      }\n    }\n    if (isMoreSpecific == null){\n      return Specifics.CONFLICT;\n    }\n\n    return isMoreSpecific.booleanValue() ? Specifics.TRUE : Specifics.FALSE;\n  }","id":61256,"modified_method":"private int isMoreSpecific(final MethodCandidateInfo info1, final MethodCandidateInfo info2) {\n    PsiMethod method1 = info1.getElement();\n    PsiMethod method2 = info2.getElement();\n    final PsiClass class1 = method1.getContainingClass();\n    final PsiClass class2 = method2.getContainingClass();\n    Boolean isMoreSpecific = null;\n\n    final PsiParameter[] params1 = method1.getParameterList().getParameters();\n    final PsiParameter[] params2 = method2.getParameterList().getParameters();\n\n    PsiExpression[] args = myArgumentsList.getExpressions();\n\n    for(int i = 0; i < args.length; i++){\n      if (i >= params1.length || i >= params2.length) break;\n\n      boolean varArgs1 = params1[i].isVarArgs();\n      boolean varArgs2 = params2[i].isVarArgs();\n      if (!varArgs1 && varArgs2) return Specifics.TRUE;\n      if (varArgs1 && !varArgs2) return Specifics.FALSE;\n\n      final PsiType type1 = info1.getSubstitutor().substitute(params1[i].getType());\n      final PsiType type2 = info2.getSubstitutor().substitute(params2[i].getType());\n\n      final PsiType argType = args[i].getType();\n      Boolean lessBoxing = isLessBoxing(argType, type1, type2);\n      if (lessBoxing != null) {\n        if (isMoreSpecific != null && !lessBoxing.equals(isMoreSpecific)) return Specifics.CONFLICT;\n        isMoreSpecific = lessBoxing;\n        continue;\n      }\n\n      final boolean assignable2From1 = type1 != null && type2 != null && type2.isAssignableFrom(type1);\n      final boolean assignable1From2 = type1 != null && type2 != null && type1.isAssignableFrom(type2);\n      if (assignable1From2 && assignable2From1) {\n        //prefer less generic candidate\n        PsiType erased1 = TypeConversionUtil.erasure(params1[i].getType());\n        PsiType erased2 = TypeConversionUtil.erasure(params2[i].getType());\n        if (!erased2.isAssignableFrom(erased1)) {\n          if (isMoreSpecific == Boolean.TRUE) return Specifics.CONFLICT;\n          isMoreSpecific = Boolean.FALSE;\n        }\n        if (!erased1.isAssignableFrom(erased2)) {\n          if (isMoreSpecific == Boolean.FALSE) return Specifics.CONFLICT;\n          isMoreSpecific = Boolean.TRUE;\n        }\n      }\n      else if (assignable1From2){\n        if (isMoreSpecific == Boolean.TRUE) return Specifics.CONFLICT;\n        isMoreSpecific = Boolean.FALSE;\n      }\n      else if (assignable2From1){\n        if (isMoreSpecific == Boolean.FALSE) return Specifics.CONFLICT;\n        isMoreSpecific = Boolean.TRUE;\n      }\n      else{\n        return Specifics.CONFLICT;\n      }\n    }\n\n    if (isMoreSpecific == null) {\n      if (method1.isVarArgs() && !method2.isVarArgs()) return Specifics.FALSE;\n      if (method2.isVarArgs() && !method1.isVarArgs()) return Specifics.TRUE;\n    }\n\n    if (isMoreSpecific == null){\n      if (class1 != class2){\n        if (class2.isInheritor(class1, true)\n            || class1.isInterface() && !class2.isInterface()){\n          isMoreSpecific = Boolean.FALSE;\n        }\n        else if (class1.isInheritor(class2, true)\n                 || class2.isInterface()){\n            isMoreSpecific = Boolean.TRUE;\n          }\n      }\n    }\n    if (isMoreSpecific == null){\n      return Specifics.CONFLICT;\n    }\n\n    return isMoreSpecific.booleanValue() ? Specifics.TRUE : Specifics.FALSE;\n  }","commit_id":"aeb7b93f84024db3f4aef61b203a09a13462e181","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static HighlightInfo checkVarArgParameterIsLast(PsiParameter parameter) {\n    PsiElement declarationScope = parameter.getDeclarationScope();\n    if (declarationScope instanceof PsiMethod) {\n      PsiParameter[] params = ((PsiMethod)declarationScope).getParameterList().getParameters();\n      if (parameter.isVarArgs() && params[params.length - 1] != parameter) {\n        HighlightInfo info = HighlightInfo.createHighlightInfo(HighlightInfoType.ERROR,\n                                                               parameter,\n                                                               JavaErrorMessages.message(\"vararg.not.last.parameter\"));\n        String displayName = UncheckedWarningLocalInspection.DISPLAY_NAME;\n        QuickFixAction.registerQuickFixAction(info, new MakeVarargParameterLastFix(parameter), null, displayName);\n        return info;\n      }\n    }\n    return null;\n  }","id":61257,"modified_method":"public static HighlightInfo checkVarArgParameterIsLast(PsiParameter parameter) {\n    PsiElement declarationScope = parameter.getDeclarationScope();\n    if (declarationScope instanceof PsiMethod) {\n      PsiParameter[] params = ((PsiMethod)declarationScope).getParameterList().getParameters();\n      if (parameter.isVarArgs()) {\n        if (!PsiUtil.getLanguageLevel(parameter).hasEnumKeywordAndAutoboxing()) {\n          return HighlightInfo\n            .createHighlightInfo(HighlightInfoType.ERROR, parameter, JavaErrorMessages.message(\"varargs.prior.15\"));\n        }\n\n        if (params[params.length - 1] != parameter) {\n          HighlightInfo info = HighlightInfo.createHighlightInfo(HighlightInfoType.ERROR,\n                                                                 parameter,\n                                                                 JavaErrorMessages.message(\"vararg.not.last.parameter\"));\n          String displayName = UncheckedWarningLocalInspection.DISPLAY_NAME;\n          QuickFixAction.registerQuickFixAction(info, new MakeVarargParameterLastFix(parameter), null, displayName);\n          return info;\n        }\n      }\n    }\n    return null;\n  }","commit_id":"55a43a30360892730dfcefdc418ab91c8086e8f9","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public List<Long> fetchNextEntries(QueueConsumer consumer, QueueConfig config, QueueStateImpl queueState, ReadPointer readPointer) throws OperationException {\n      List<Long> newEntryIds = new ArrayList<Long>();\n\n      // If claimed entries exist, return them\n      long claimedEntryIdBegin = queueState.getClaimedEntryBegin();\n      long claimedEntryIdEnd = queueState.getClaimedEntryEnd();\n      if(claimedEntryIdBegin != INVALID_ENTRY_ID && claimedEntryIdEnd != INVALID_ENTRY_ID &&\n        claimedEntryIdEnd >= claimedEntryIdBegin) {\n        for(long i = claimedEntryIdBegin; i <= claimedEntryIdEnd; ++i) {\n          newEntryIds.add(i);\n        }\n        return newEntryIds;\n      }\n\n      // Else claim new queue entries to process\n      QueuePartitioner partitioner=config.getPartitionerType().getPartitioner();\n      while (newEntryIds.isEmpty()) {\n        // TODO: use raw Get instead of the workaround of incrementing zero\n        // TODO: move counters into oracle\n        long groupReadPointetr = table.incrementAtomicDirtily(makeRowKey(GROUP_READ_POINTER, consumer.getGroupId()), GROUP_READ_POINTER, 0);\n        if(groupReadPointetr + config.getBatchSize() >= queueState.getQueueWritePointer()) {\n          // Reached the end of queue as per cached QueueWritePointer,\n          // read it again to see if there is any progress made by producers\n          // TODO: use raw Get instead of the workaround of incrementing zero\n          // TODO: move counters into oracle\n          long queueWritePointer = table.incrementAtomicDirtily(makeRowName(GLOBAL_ENTRY_ID_PREFIX), GLOBAL_ENTRYID_COUNTER, 0);\n          queueState.setQueueWritePointer(queueWritePointer);\n        }\n\n        // End of queue reached\n        if(groupReadPointetr >= queueState.getQueueWritePointer()) {\n          return Collections.EMPTY_LIST;\n        }\n\n        // If there are enough entries for all consumers to claim, then claim batchSize entries\n        // Otherwise divide the entries equally among all consumers\n        long curBatchSize = groupReadPointetr + (config.getBatchSize() * consumer.getGroupSize()) < queueState.getQueueWritePointer() ?\n          config.getBatchSize() : (queueState.getQueueWritePointer() - groupReadPointetr) / consumer.getGroupSize();\n        // Make sure there is progress\n        if(curBatchSize < 1) {\n          curBatchSize = 1;\n        }\n\n        long endEntryId = table.incrementAtomicDirtily(makeRowKey(GROUP_READ_POINTER, consumer.getGroupId()),\n                                                       GROUP_READ_POINTER, curBatchSize);\n        long startEntryId = endEntryId - curBatchSize + 1;\n        // Note: incrementing GROUP_READ_POINTER, and storing the claimed entryIds in HBase ideally need to happen atomically.\n        //       HBase doesn't support atomic increment and put.\n        //       Also, for performance reasons we have moved the write to method saveDequeueEntryState where all writes for a dequeue happen\n        queueState.setClaimedEntryBegin(startEntryId);\n        queueState.setClaimedEntryEnd(endEntryId);\n\n        final int cacheSize = (int)(endEntryId - startEntryId + 1);\n\n        // Determine which entries  need to be read from storage based on partition type\n        for(int id = 0; id < cacheSize; ++id) {\n          final long currentEntryId = startEntryId + id;\n          if(partitioner.shouldEmit(consumer, currentEntryId)) {\n            newEntryIds.add(currentEntryId);\n          }\n        }\n      }\n      return newEntryIds;\n    }","id":61258,"modified_method":"@Override\n    public List<Long> fetchNextEntries(QueueConsumer consumer, QueueConfig config, QueueStateImpl queueState, ReadPointer readPointer) throws OperationException {\n      List<Long> newEntryIds = new ArrayList<Long>();\n\n      // If claimed entries exist, return them\n      long claimedEntryIdBegin = queueState.getClaimedEntryBegin();\n      long claimedEntryIdEnd = queueState.getClaimedEntryEnd();\n      if(claimedEntryIdBegin != INVALID_ENTRY_ID && claimedEntryIdEnd != INVALID_ENTRY_ID &&\n        claimedEntryIdEnd >= claimedEntryIdBegin) {\n        for(long i = claimedEntryIdBegin; i <= claimedEntryIdEnd; ++i) {\n          newEntryIds.add(i);\n        }\n        return newEntryIds;\n      }\n\n      final long batchSize = getBatchSize(config);\n\n      // Else claim new queue entries to process\n      QueuePartitioner partitioner=config.getPartitionerType().getPartitioner();\n      while (newEntryIds.isEmpty()) {\n        // TODO: use raw Get instead of the workaround of incrementing zero\n        // TODO: move counters into oracle\n        long groupReadPointetr = table.incrementAtomicDirtily(makeRowKey(GROUP_READ_POINTER, consumer.getGroupId()), GROUP_READ_POINTER, 0);\n        if(groupReadPointetr + batchSize >= queueState.getQueueWritePointer()) {\n          // Reached the end of queue as per cached QueueWritePointer,\n          // read it again to see if there is any progress made by producers\n          // TODO: use raw Get instead of the workaround of incrementing zero\n          // TODO: move counters into oracle\n          long queueWritePointer = table.incrementAtomicDirtily(makeRowName(GLOBAL_ENTRY_ID_PREFIX), GLOBAL_ENTRYID_COUNTER, 0);\n          queueState.setQueueWritePointer(queueWritePointer);\n        }\n\n        // End of queue reached\n        if(groupReadPointetr >= queueState.getQueueWritePointer()) {\n          return Collections.EMPTY_LIST;\n        }\n\n        // If there are enough entries for all consumers to claim, then claim batchSize entries\n        // Otherwise divide the entries equally among all consumers\n        long curBatchSize = groupReadPointetr + (batchSize * consumer.getGroupSize()) < queueState.getQueueWritePointer() ?\n          batchSize : (queueState.getQueueWritePointer() - groupReadPointetr) / consumer.getGroupSize();\n        // Make sure there is progress\n        if(curBatchSize < 1) {\n          curBatchSize = 1;\n        }\n\n        long endEntryId = table.incrementAtomicDirtily(makeRowKey(GROUP_READ_POINTER, consumer.getGroupId()),\n                                                       GROUP_READ_POINTER, curBatchSize);\n        long startEntryId = endEntryId - curBatchSize + 1;\n        // Note: incrementing GROUP_READ_POINTER, and storing the claimed entryIds in HBase ideally need to happen atomically.\n        //       HBase doesn't support atomic increment and put.\n        //       Also, for performance reasons we have moved the write to method saveDequeueEntryState where all writes for a dequeue happen\n        queueState.setClaimedEntryBegin(startEntryId);\n        queueState.setClaimedEntryEnd(endEntryId);\n\n        final int cacheSize = (int)(endEntryId - startEntryId + 1);\n\n        // Determine which entries  need to be read from storage based on partition type\n        for(int id = 0; id < cacheSize; ++id) {\n          final long currentEntryId = startEntryId + id;\n          if(partitioner.shouldEmit(consumer, currentEntryId)) {\n            newEntryIds.add(currentEntryId);\n          }\n        }\n      }\n      return newEntryIds;\n    }","commit_id":"32f26642885fe9975103dc95321bb83c36273934","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n    public List<Long> fetchNextEntries(QueueConsumer consumer, QueueConfig config, QueueStateImpl queueState, ReadPointer readPointer) throws OperationException {\n      long entryId = queueState.getConsumerReadPointer();\n      QueuePartitioner partitioner=config.getPartitionerType().getPartitioner();\n      List<Long> newEntryIds = new ArrayList<Long>();\n\n      while (newEntryIds.isEmpty()) {\n        if(entryId >= queueState.getQueueWritePointer()) {\n          // Reached the end of queue as per cached QueueWritePointer,\n          // read it again to see if there is any progress made by producers\n          // TODO: use raw Get instead of the workaround of incrementing zero\n          long queueWritePointer = table.incrementAtomicDirtily(makeRowName(GLOBAL_ENTRY_ID_PREFIX), GLOBAL_ENTRYID_COUNTER, 0);\n          queueState.setQueueWritePointer(queueWritePointer);\n          // If still no progress, return empty queue\n          if(entryId >= queueState.getQueueWritePointer()) {\n            return Collections.EMPTY_LIST;\n          }\n        }\n\n        long batchSize = getBatchSize(config);\n        long startEntryId = entryId + 1;\n        long endEntryId =\n                  startEntryId + (batchSize * consumer.getGroupSize()) < queueState.getQueueWritePointer() ?\n                  startEntryId + (batchSize * consumer.getGroupSize()) : queueState.getQueueWritePointer();\n\n        final int cacheSize = (int)(endEntryId - startEntryId + 1);\n\n        // Determine which entries  need to be read from storage\n        for(int id = 0; id < cacheSize; ++id) {\n          final long currentEntryId = startEntryId + id;\n          if(partitioner.shouldEmit(consumer, currentEntryId)) {\n            newEntryIds.add(currentEntryId);\n          }\n        }\n        entryId = endEntryId;\n      }\n      return newEntryIds;\n    }","id":61259,"modified_method":"@Override\n    public List<Long> fetchNextEntries(QueueConsumer consumer, QueueConfig config, QueueStateImpl queueState, ReadPointer readPointer) throws OperationException {\n      long entryId = queueState.getConsumerReadPointer();\n      QueuePartitioner partitioner=config.getPartitionerType().getPartitioner();\n      List<Long> newEntryIds = new ArrayList<Long>();\n\n      while (newEntryIds.isEmpty()) {\n        if(entryId >= queueState.getQueueWritePointer()) {\n          // Reached the end of queue as per cached QueueWritePointer,\n          // read it again to see if there is any progress made by producers\n          // TODO: use raw Get instead of the workaround of incrementing zero\n          long queueWritePointer = table.incrementAtomicDirtily(makeRowName(GLOBAL_ENTRY_ID_PREFIX), GLOBAL_ENTRYID_COUNTER, 0);\n          queueState.setQueueWritePointer(queueWritePointer);\n          // If still no progress, return empty queue\n          if(entryId >= queueState.getQueueWritePointer()) {\n            return Collections.EMPTY_LIST;\n          }\n        }\n\n        final long batchSize = getBatchSize(config);\n        long startEntryId = entryId + 1;\n        long endEntryId =\n                  startEntryId + (batchSize * consumer.getGroupSize()) < queueState.getQueueWritePointer() ?\n                  startEntryId + (batchSize * consumer.getGroupSize()) : queueState.getQueueWritePointer();\n\n        final int cacheSize = (int)(endEntryId - startEntryId + 1);\n\n        // Determine which entries  need to be read from storage\n        for(int id = 0; id < cacheSize; ++id) {\n          final long currentEntryId = startEntryId + id;\n          if(partitioner.shouldEmit(consumer, currentEntryId)) {\n            newEntryIds.add(currentEntryId);\n          }\n        }\n        entryId = endEntryId;\n      }\n      return newEntryIds;\n    }","commit_id":"32f26642885fe9975103dc95321bb83c36273934","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n    public List<Long> fetchNextEntries(\n      QueueConsumer consumer, QueueConfig config, QueueStateImpl queueState, ReadPointer readPointer) throws OperationException {\n      long entryId = queueState.getConsumerReadPointer();\n      QueuePartitioner partitioner=config.getPartitionerType().getPartitioner();\n      List<Long> newEntryIds = new ArrayList<Long>();\n\n      outerLoop:\n      while (newEntryIds.isEmpty()) {\n        if(entryId >= queueState.getQueueWritePointer()) {\n          // Reached the end of queue as per cached QueueWritePointer,\n          // read it again to see if there is any progress made by producers\n          // TODO: use raw Get instead of the workaround of incrementing zero\n          long queueWritePointer = table.incrementAtomicDirtily(makeRowName(GLOBAL_ENTRY_ID_PREFIX), GLOBAL_ENTRYID_COUNTER, 0);\n          queueState.setQueueWritePointer(queueWritePointer);\n          if(LOG.isTraceEnabled()) {\n            logTrace(String.format(\"New queueWritePointer = %d\", queueWritePointer));\n          }\n          // If still no progress, return empty queue\n          if(entryId >= queueState.getQueueWritePointer()) {\n            return Collections.EMPTY_LIST;\n          }\n        }\n\n        long batchSize = getBatchSize(config);\n        long startEntryId = entryId + 1;\n        long endEntryId =\n                startEntryId + (batchSize * consumer.getGroupSize()) < queueState.getQueueWritePointer() ?\n                    startEntryId + (batchSize * consumer.getGroupSize()) : queueState.getQueueWritePointer();\n\n        // Read  header data from underlying storage, if any\n        final int cacheSize = (int)(endEntryId - startEntryId + 1);\n        final String partitioningKey = consumer.getPartitioningKey();\n        if(partitioningKey == null || partitioningKey.isEmpty()) {\n          throw new OperationException(StatusCode.INTERNAL_ERROR,\n            String.format(\"Queue-%s: Using Hash Partitioning with null/empty partitioningKey.\", Bytes.toString(queueName)));\n        }\n        final byte [][] rowKeys = new byte[cacheSize][];\n        for(int id = 0; id < cacheSize; ++id) {\n          rowKeys[id] = makeRowKey(GLOBAL_DATA_PREFIX, startEntryId + id);\n        }\n        final byte[][] columnKeys = new byte[1][];\n        columnKeys[0] = makeColumnName(ENTRY_HEADER, partitioningKey);\n        OperationResult<Map<byte[], Map<byte[], byte[]>>> headerResult = table.get(rowKeys, columnKeys, readPointer);\n\n        // Determine which entries  need to be read from storage\n        for(int id = 0; id < cacheSize; ++id) {\n          final long currentEntryId = startEntryId + id;\n          if (!headerResult.isEmpty()) {\n            Map<byte[], Map<byte[], byte[]>> headerValue = headerResult.getValue();\n            Map<byte[], byte[]> headerMap = headerValue.get(rowKeys[id]);\n            if(headerMap == null) {\n              break outerLoop;\n            }\n            byte[] hashBytes = headerMap.get(columnKeys[0]);\n            if(hashBytes == null) {\n              break outerLoop;\n            }\n            int hashValue = Bytes.toInt(hashBytes);\n            if(partitioner.shouldEmit(consumer, currentEntryId, hashValue)) {\n              newEntryIds.add(currentEntryId);\n            }\n          } else {\n            // Not able to read header\n            break outerLoop;\n          }\n        }\n        entryId = endEntryId;\n      }\n      return newEntryIds;\n    }","id":61260,"modified_method":"@Override\n    public List<Long> fetchNextEntries(\n      QueueConsumer consumer, QueueConfig config, QueueStateImpl queueState, ReadPointer readPointer) throws OperationException {\n      long entryId = queueState.getConsumerReadPointer();\n      QueuePartitioner partitioner=config.getPartitionerType().getPartitioner();\n      List<Long> newEntryIds = new ArrayList<Long>();\n\n      outerLoop:\n      while (newEntryIds.isEmpty()) {\n        if(entryId >= queueState.getQueueWritePointer()) {\n          // Reached the end of queue as per cached QueueWritePointer,\n          // read it again to see if there is any progress made by producers\n          // TODO: use raw Get instead of the workaround of incrementing zero\n          long queueWritePointer = table.incrementAtomicDirtily(makeRowName(GLOBAL_ENTRY_ID_PREFIX), GLOBAL_ENTRYID_COUNTER, 0);\n          queueState.setQueueWritePointer(queueWritePointer);\n          if(LOG.isTraceEnabled()) {\n            logTrace(String.format(\"New queueWritePointer = %d\", queueWritePointer));\n          }\n          // If still no progress, return empty queue\n          if(entryId >= queueState.getQueueWritePointer()) {\n            return Collections.EMPTY_LIST;\n          }\n        }\n\n        final long batchSize = getBatchSize(config);\n        long startEntryId = entryId + 1;\n        long endEntryId =\n                startEntryId + (batchSize * consumer.getGroupSize()) < queueState.getQueueWritePointer() ?\n                    startEntryId + (batchSize * consumer.getGroupSize()) : queueState.getQueueWritePointer();\n\n        // Read  header data from underlying storage, if any\n        final int cacheSize = (int)(endEntryId - startEntryId + 1);\n        final String partitioningKey = consumer.getPartitioningKey();\n        if(partitioningKey == null || partitioningKey.isEmpty()) {\n          throw new OperationException(StatusCode.INTERNAL_ERROR,\n            String.format(\"Queue-%s: Using Hash Partitioning with null/empty partitioningKey.\", Bytes.toString(queueName)));\n        }\n        final byte [][] rowKeys = new byte[cacheSize][];\n        for(int id = 0; id < cacheSize; ++id) {\n          rowKeys[id] = makeRowKey(GLOBAL_DATA_PREFIX, startEntryId + id);\n        }\n        final byte[][] columnKeys = new byte[1][];\n        columnKeys[0] = makeColumnName(ENTRY_HEADER, partitioningKey);\n        OperationResult<Map<byte[], Map<byte[], byte[]>>> headerResult = table.get(rowKeys, columnKeys, readPointer);\n\n        // Determine which entries  need to be read from storage\n        for(int id = 0; id < cacheSize; ++id) {\n          final long currentEntryId = startEntryId + id;\n          if (!headerResult.isEmpty()) {\n            Map<byte[], Map<byte[], byte[]>> headerValue = headerResult.getValue();\n            Map<byte[], byte[]> headerMap = headerValue.get(rowKeys[id]);\n            if(headerMap == null) {\n              break outerLoop;\n            }\n            byte[] hashBytes = headerMap.get(columnKeys[0]);\n            if(hashBytes == null) {\n              break outerLoop;\n            }\n            int hashValue = Bytes.toInt(hashBytes);\n            if(partitioner.shouldEmit(consumer, currentEntryId, hashValue)) {\n              newEntryIds.add(currentEntryId);\n            }\n          } else {\n            // Not able to read header\n            break outerLoop;\n          }\n        }\n        entryId = endEntryId;\n      }\n      return newEntryIds;\n    }","commit_id":"32f26642885fe9975103dc95321bb83c36273934","url":"https://github.com/caskdata/cdap"},{"original_method":"public QueueConfig(PartitionerType partitionerType, boolean singleEntry) {\n    this.partitionerType = partitionerType;\n    this.singleEntry = singleEntry;\n    this.batchSize = 100;\n  }","id":61261,"modified_method":"public QueueConfig(PartitionerType partitionerType, boolean singleEntry) {\n    this.partitionerType = partitionerType;\n    this.singleEntry = singleEntry;\n    this.batchSize = -1;\n  }","commit_id":"b5082ac342716b9fd0928010b3bc0d093e4c7cff","url":"https://github.com/caskdata/cdap"},{"original_method":"protected TTQueueNewOnVCTable(VersionedColumnarTable table, byte[] queueName, TransactionOracle oracle,\n                                final CConfiguration conf) {\n    this.table = table;\n    this.queueName = queueName;\n    this.oracle = oracle;\n  }","id":61262,"modified_method":"protected TTQueueNewOnVCTable(VersionedColumnarTable table, byte[] queueName, TransactionOracle oracle,\n                                final CConfiguration conf) {\n    this.table = table;\n    this.queueName = queueName;\n    this.oracle = oracle;\n    this.DEFAULT_BATCH_SIZE = conf.getLong(\"ttqueue.batch.size.default\", 100) > 0 ?\n                                                        conf.getLong(\"ttqueue.batch.size.default\", 100) : 100;\n  }","commit_id":"b5082ac342716b9fd0928010b3bc0d093e4c7cff","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n    public List<Long> fetchNextEntries(QueueConsumer consumer, QueueConfig config, QueueStateImpl queueState, ReadPointer readPointer) throws OperationException {\n      long entryId = queueState.getConsumerReadPointer();\n      QueuePartitioner partitioner=config.getPartitionerType().getPartitioner();\n      List<Long> newEntryIds = new ArrayList<Long>();\n\n      while (newEntryIds.isEmpty()) {\n        if(entryId >= queueState.getQueueWritePointer()) {\n          // Reached the end of queue as per cached QueueWritePointer,\n          // read it again to see if there is any progress made by producers\n          // TODO: use raw Get instead of the workaround of incrementing zero\n          long queueWritePointer = table.incrementAtomicDirtily(makeRowName(GLOBAL_ENTRY_ID_PREFIX), GLOBAL_ENTRYID_COUNTER, 0);\n          queueState.setQueueWritePointer(queueWritePointer);\n          // If still no progress, return empty queue\n          if(entryId >= queueState.getQueueWritePointer()) {\n            return Collections.EMPTY_LIST;\n          }\n        }\n\n        long startEntryId = entryId + 1;\n        long endEntryId =\n                  startEntryId + (config.getBatchSize() * consumer.getGroupSize()) < queueState.getQueueWritePointer() ?\n                  startEntryId + (config.getBatchSize() * consumer.getGroupSize()) : queueState.getQueueWritePointer();\n\n        final int cacheSize = (int)(endEntryId - startEntryId + 1);\n\n        // Determine which entries  need to be read from storage\n        for(int id = 0; id < cacheSize; ++id) {\n          final long currentEntryId = startEntryId + id;\n          if(partitioner.shouldEmit(consumer, currentEntryId)) {\n            newEntryIds.add(currentEntryId);\n          }\n        }\n        entryId = endEntryId;\n      }\n      return newEntryIds;\n    }","id":61263,"modified_method":"@Override\n    public List<Long> fetchNextEntries(QueueConsumer consumer, QueueConfig config, QueueStateImpl queueState, ReadPointer readPointer) throws OperationException {\n      long entryId = queueState.getConsumerReadPointer();\n      QueuePartitioner partitioner=config.getPartitionerType().getPartitioner();\n      List<Long> newEntryIds = new ArrayList<Long>();\n\n      while (newEntryIds.isEmpty()) {\n        if(entryId >= queueState.getQueueWritePointer()) {\n          // Reached the end of queue as per cached QueueWritePointer,\n          // read it again to see if there is any progress made by producers\n          // TODO: use raw Get instead of the workaround of incrementing zero\n          long queueWritePointer = table.incrementAtomicDirtily(makeRowName(GLOBAL_ENTRY_ID_PREFIX), GLOBAL_ENTRYID_COUNTER, 0);\n          queueState.setQueueWritePointer(queueWritePointer);\n          // If still no progress, return empty queue\n          if(entryId >= queueState.getQueueWritePointer()) {\n            return Collections.EMPTY_LIST;\n          }\n        }\n\n        long batchSize = getBatchSize(config);\n        long startEntryId = entryId + 1;\n        long endEntryId =\n                  startEntryId + (batchSize * consumer.getGroupSize()) < queueState.getQueueWritePointer() ?\n                  startEntryId + (batchSize * consumer.getGroupSize()) : queueState.getQueueWritePointer();\n\n        final int cacheSize = (int)(endEntryId - startEntryId + 1);\n\n        // Determine which entries  need to be read from storage\n        for(int id = 0; id < cacheSize; ++id) {\n          final long currentEntryId = startEntryId + id;\n          if(partitioner.shouldEmit(consumer, currentEntryId)) {\n            newEntryIds.add(currentEntryId);\n          }\n        }\n        entryId = endEntryId;\n      }\n      return newEntryIds;\n    }","commit_id":"b5082ac342716b9fd0928010b3bc0d093e4c7cff","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n    public List<Long> fetchNextEntries(\n      QueueConsumer consumer, QueueConfig config, QueueStateImpl queueState, ReadPointer readPointer) throws OperationException {\n      long entryId = queueState.getConsumerReadPointer();\n      QueuePartitioner partitioner=config.getPartitionerType().getPartitioner();\n      List<Long> newEntryIds = new ArrayList<Long>();\n\n      outerLoop:\n      while (newEntryIds.isEmpty()) {\n        if(entryId >= queueState.getQueueWritePointer()) {\n          // Reached the end of queue as per cached QueueWritePointer,\n          // read it again to see if there is any progress made by producers\n          // TODO: use raw Get instead of the workaround of incrementing zero\n          long queueWritePointer = table.incrementAtomicDirtily(makeRowName(GLOBAL_ENTRY_ID_PREFIX), GLOBAL_ENTRYID_COUNTER, 0);\n          queueState.setQueueWritePointer(queueWritePointer);\n          if(LOG.isTraceEnabled()) {\n            logTrace(String.format(\"New queueWritePointer = %d\", queueWritePointer));\n          }\n          // If still no progress, return empty queue\n          if(entryId >= queueState.getQueueWritePointer()) {\n            return Collections.EMPTY_LIST;\n          }\n        }\n\n        long startEntryId = entryId + 1;\n        long endEntryId =\n                startEntryId + (config.getBatchSize() * consumer.getGroupSize()) < queueState.getQueueWritePointer() ?\n                    startEntryId + (config.getBatchSize() * consumer.getGroupSize()) : queueState.getQueueWritePointer();\n\n        // Read  header data from underlying storage, if any\n        final int cacheSize = (int)(endEntryId - startEntryId + 1);\n        final String partitioningKey = consumer.getPartitioningKey();\n        if(partitioningKey == null || partitioningKey.isEmpty()) {\n          throw new OperationException(StatusCode.INTERNAL_ERROR,\n            String.format(\"Queue-%s: Using Hash Partitioning with null/empty partitioningKey.\", Bytes.toString(queueName)));\n        }\n        final byte [][] rowKeys = new byte[cacheSize][];\n        for(int id = 0; id < cacheSize; ++id) {\n          rowKeys[id] = makeRowKey(GLOBAL_DATA_PREFIX, startEntryId + id);\n        }\n        final byte[][] columnKeys = new byte[1][];\n        columnKeys[0] = makeColumnName(ENTRY_HEADER, partitioningKey);\n        OperationResult<Map<byte[], Map<byte[], byte[]>>> headerResult = table.get(rowKeys, columnKeys, readPointer);\n\n        // Determine which entries  need to be read from storage\n        for(int id = 0; id < cacheSize; ++id) {\n          final long currentEntryId = startEntryId + id;\n          if (!headerResult.isEmpty()) {\n            Map<byte[], Map<byte[], byte[]>> headerValue = headerResult.getValue();\n            Map<byte[], byte[]> headerMap = headerValue.get(rowKeys[id]);\n            if(headerMap == null) {\n              break outerLoop;\n            }\n            byte[] hashBytes = headerMap.get(columnKeys[0]);\n            if(hashBytes == null) {\n              break outerLoop;\n            }\n            int hashValue = Bytes.toInt(hashBytes);\n            if(partitioner.shouldEmit(consumer, currentEntryId, hashValue)) {\n              newEntryIds.add(currentEntryId);\n            }\n          } else {\n            // Not able to read header\n            break outerLoop;\n          }\n        }\n        entryId = endEntryId;\n      }\n      return newEntryIds;\n    }","id":61264,"modified_method":"@Override\n    public List<Long> fetchNextEntries(\n      QueueConsumer consumer, QueueConfig config, QueueStateImpl queueState, ReadPointer readPointer) throws OperationException {\n      long entryId = queueState.getConsumerReadPointer();\n      QueuePartitioner partitioner=config.getPartitionerType().getPartitioner();\n      List<Long> newEntryIds = new ArrayList<Long>();\n\n      outerLoop:\n      while (newEntryIds.isEmpty()) {\n        if(entryId >= queueState.getQueueWritePointer()) {\n          // Reached the end of queue as per cached QueueWritePointer,\n          // read it again to see if there is any progress made by producers\n          // TODO: use raw Get instead of the workaround of incrementing zero\n          long queueWritePointer = table.incrementAtomicDirtily(makeRowName(GLOBAL_ENTRY_ID_PREFIX), GLOBAL_ENTRYID_COUNTER, 0);\n          queueState.setQueueWritePointer(queueWritePointer);\n          if(LOG.isTraceEnabled()) {\n            logTrace(String.format(\"New queueWritePointer = %d\", queueWritePointer));\n          }\n          // If still no progress, return empty queue\n          if(entryId >= queueState.getQueueWritePointer()) {\n            return Collections.EMPTY_LIST;\n          }\n        }\n\n        long batchSize = getBatchSize(config);\n        long startEntryId = entryId + 1;\n        long endEntryId =\n                startEntryId + (batchSize * consumer.getGroupSize()) < queueState.getQueueWritePointer() ?\n                    startEntryId + (batchSize * consumer.getGroupSize()) : queueState.getQueueWritePointer();\n\n        // Read  header data from underlying storage, if any\n        final int cacheSize = (int)(endEntryId - startEntryId + 1);\n        final String partitioningKey = consumer.getPartitioningKey();\n        if(partitioningKey == null || partitioningKey.isEmpty()) {\n          throw new OperationException(StatusCode.INTERNAL_ERROR,\n            String.format(\"Queue-%s: Using Hash Partitioning with null/empty partitioningKey.\", Bytes.toString(queueName)));\n        }\n        final byte [][] rowKeys = new byte[cacheSize][];\n        for(int id = 0; id < cacheSize; ++id) {\n          rowKeys[id] = makeRowKey(GLOBAL_DATA_PREFIX, startEntryId + id);\n        }\n        final byte[][] columnKeys = new byte[1][];\n        columnKeys[0] = makeColumnName(ENTRY_HEADER, partitioningKey);\n        OperationResult<Map<byte[], Map<byte[], byte[]>>> headerResult = table.get(rowKeys, columnKeys, readPointer);\n\n        // Determine which entries  need to be read from storage\n        for(int id = 0; id < cacheSize; ++id) {\n          final long currentEntryId = startEntryId + id;\n          if (!headerResult.isEmpty()) {\n            Map<byte[], Map<byte[], byte[]>> headerValue = headerResult.getValue();\n            Map<byte[], byte[]> headerMap = headerValue.get(rowKeys[id]);\n            if(headerMap == null) {\n              break outerLoop;\n            }\n            byte[] hashBytes = headerMap.get(columnKeys[0]);\n            if(hashBytes == null) {\n              break outerLoop;\n            }\n            int hashValue = Bytes.toInt(hashBytes);\n            if(partitioner.shouldEmit(consumer, currentEntryId, hashValue)) {\n              newEntryIds.add(currentEntryId);\n            }\n          } else {\n            // Not able to read header\n            break outerLoop;\n          }\n        }\n        entryId = endEntryId;\n      }\n      return newEntryIds;\n    }","commit_id":"b5082ac342716b9fd0928010b3bc0d093e4c7cff","url":"https://github.com/caskdata/cdap"},{"original_method":"public void testConfigureBlogsEntryDefaultNoWorkflow()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry\"));\n\t}","id":61265,"modified_method":"public void testConfigureBlogsEntryDefaultNoWorkflow()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t}","commit_id":"f163b1135342850f0a7eaf79eee64dcc97d383f6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigureBlogsEntryDefaultSingleApprover()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry\",\n\t\t\tRuntimeVariables.replace(\"label=Default: Single Approver\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Default: Single Approver\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry\"));\n\t}","id":61266,"modified_method":"public void testConfigureBlogsEntryDefaultSingleApprover()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"Default: Single Approver\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Default: Single Approver\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t}","commit_id":"f163b1135342850f0a7eaf79eee64dcc97d383f6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigureBlogsEntrySingleApprover()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry\",\n\t\t\tRuntimeVariables.replace(\"label=Single Approver (Version 1)\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Single Approver (Version 1)\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry\"));\n\t}","id":61267,"modified_method":"public void testConfigureBlogsEntrySingleApprover()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"Single Approver (Version 1)\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Single Approver (Version 1)\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t}","commit_id":"f163b1135342850f0a7eaf79eee64dcc97d383f6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigureCommentsDefaultNoWorkflow()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion\"));\n\t}","id":61268,"modified_method":"public void testConfigureCommentsDefaultNoWorkflow()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\"));\n\t}","commit_id":"f163b1135342850f0a7eaf79eee64dcc97d383f6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigureCommentsDefaultSingleApprover()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion\",\n\t\t\tRuntimeVariables.replace(\"label=Default: Single Approver\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Default: Single Approver\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion\"));\n\t}","id":61269,"modified_method":"public void testConfigureCommentsDefaultSingleApprover()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\",\n\t\t\tRuntimeVariables.replace(\"Default: Single Approver\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Default: Single Approver\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\"));\n\t}","commit_id":"f163b1135342850f0a7eaf79eee64dcc97d383f6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigureMBMessageDefaultNoWorkflow()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage\"));\n\t}","id":61270,"modified_method":"public void testConfigureMBMessageDefaultNoWorkflow()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\"));\n\t}","commit_id":"f163b1135342850f0a7eaf79eee64dcc97d383f6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigureMBMessageDefaultSingleApprover()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage\",\n\t\t\tRuntimeVariables.replace(\"label=Default: Single Approver\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Default: Single Approver\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage\"));\n\t}","id":61271,"modified_method":"public void testConfigureMBMessageDefaultSingleApprover()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"Default: Single Approver\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Default: Single Approver\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\"));\n\t}","commit_id":"f163b1135342850f0a7eaf79eee64dcc97d383f6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigureMBMessageSingleApprover()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage\",\n\t\t\tRuntimeVariables.replace(\"label=Single Approver (Version 1)\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Single Approver (Version 1)\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage\"));\n\t}","id":61272,"modified_method":"public void testConfigureMBMessageSingleApprover()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"Single Approver (Version 1)\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Single Approver (Version 1)\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\"));\n\t}","commit_id":"f163b1135342850f0a7eaf79eee64dcc97d383f6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigureWebContentDefaultNoWorkflow()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle\"));\n\t}","id":61273,"modified_method":"public void testConfigureWebContentDefaultNoWorkflow()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\"));\n\t}","commit_id":"f163b1135342850f0a7eaf79eee64dcc97d383f6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigureWebContentDefaultSingleApprover()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle\",\n\t\t\tRuntimeVariables.replace(\"label=Default: Single Approver\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Default: Single Approver\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle\"));\n\t}","id":61274,"modified_method":"public void testConfigureWebContentDefaultSingleApprover()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"Default: Single Approver\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Default: Single Approver\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\"));\n\t}","commit_id":"f163b1135342850f0a7eaf79eee64dcc97d383f6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigureWebContentSingleApprover()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Workflow Configuration\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle\",\n\t\t\tRuntimeVariables.replace(\"label=Single Approver (Version 1)\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Single Approver (Version 1)\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle\"));\n\t}","id":61275,"modified_method":"public void testConfigureWebContentSingleApprover()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Workflow Configuration\",\n\t\t\tRuntimeVariables.replace(\"Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"Single Approver (Version 1)\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Single Approver (Version 1)\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\"));\n\t}","commit_id":"f163b1135342850f0a7eaf79eee64dcc97d383f6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigureWikiPageDefaultNoWorkflow()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage\"));\n\t}","id":61276,"modified_method":"public void testConfigureWikiPageDefaultNoWorkflow()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\"));\n\t}","commit_id":"f163b1135342850f0a7eaf79eee64dcc97d383f6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigureWikiPageDefaultSingleApprover()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage\",\n\t\t\tRuntimeVariables.replace(\"label=Default: Single Approver\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Default: Single Approver\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage\"));\n\t}","id":61277,"modified_method":"public void testConfigureWikiPageDefaultSingleApprover()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"Default: Single Approver\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Default: Single Approver\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\"));\n\t}","commit_id":"f163b1135342850f0a7eaf79eee64dcc97d383f6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigureWikiPageSingleApprover() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage\",\n\t\t\tRuntimeVariables.replace(\"label=Single Approver (Version 1)\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Single Approver (Version 1)\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage\"));\n\t}","id":61278,"modified_method":"public void testConfigureWikiPageSingleApprover() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"Single Approver (Version 1)\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Single Approver (Version 1)\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\"));\n\t}","commit_id":"f163b1135342850f0a7eaf79eee64dcc97d383f6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDefaultConfigureBlogsEntrySingleApprover()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Workflow\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Default Configuration\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry\",\n\t\t\tRuntimeVariables.replace(\"label=Single Approver (Version 1)\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Single Approver (Version 1)\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry\"));\n\t}","id":61279,"modified_method":"public void testDefaultConfigureBlogsEntrySingleApprover()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Workflow\", RuntimeVariables.replace(\"Workflow\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Default Configuration\",\n\t\t\tRuntimeVariables.replace(\"Default Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"Single Approver (Version 1)\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Single Approver (Version 1)\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t}","commit_id":"f163b1135342850f0a7eaf79eee64dcc97d383f6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDefaultConfigureCommentsSingleApprover()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Workflow\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Default Configuration\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion\",\n\t\t\tRuntimeVariables.replace(\"label=Single Approver (Version 1)\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Single Approver (Version 1)\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion\"));\n\t}","id":61280,"modified_method":"public void testDefaultConfigureCommentsSingleApprover()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Workflow\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Default Configuration\",\n\t\t\tRuntimeVariables.replace(\"Default Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\",\n\t\t\tRuntimeVariables.replace(\"Single Approver (Version 1)\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Single Approver (Version 1)\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\"));\n\t}","commit_id":"f163b1135342850f0a7eaf79eee64dcc97d383f6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDefaultConfigureMBMessageSingleApprover()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Workflow\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Default Configuration\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage\",\n\t\t\tRuntimeVariables.replace(\"label=Single Approver (Version 1)\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Single Approver (Version 1)\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage\"));\n\t}","id":61281,"modified_method":"public void testDefaultConfigureMBMessageSingleApprover()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Workflow\", RuntimeVariables.replace(\"Workflow\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Default Configuration\",\n\t\t\tRuntimeVariables.replace(\"Default Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"Single Approver (Version 1)\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Single Approver (Version 1)\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\"));\n\t}","commit_id":"f163b1135342850f0a7eaf79eee64dcc97d383f6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDefaultConfigureWebContentSingleApprover()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Workflow\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Default Configuration\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle\",\n\t\t\tRuntimeVariables.replace(\"label=Single Approver (Version 1)\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Single Approver (Version 1)\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle\"));\n\t}","id":61282,"modified_method":"public void testDefaultConfigureWebContentSingleApprover()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Workflow\", RuntimeVariables.replace(\"Workflow\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Default Configuration\",\n\t\t\tRuntimeVariables.replace(\"Default Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"Single Approver (Version 1)\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Single Approver (Version 1)\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\"));\n\t}","commit_id":"f163b1135342850f0a7eaf79eee64dcc97d383f6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDefaultConfigureWikiPageSingleApprover()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Workflow\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Default Configuration\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage\",\n\t\t\tRuntimeVariables.replace(\"label=Single Approver (Version 1)\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Single Approver (Version 1)\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage\"));\n\t}","id":61283,"modified_method":"public void testDefaultConfigureWikiPageSingleApprover()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Workflow\", RuntimeVariables.replace(\"Workflow\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Default Configuration\",\n\t\t\tRuntimeVariables.replace(\"Default Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"Single Approver (Version 1)\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Single Approver (Version 1)\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\"));\n\t}","commit_id":"f163b1135342850f0a7eaf79eee64dcc97d383f6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\n\t\ttestSuite.addTest(ConfigureBlogsEntryDefaultNoWorkflowTests.suite());\n\t\ttestSuite.addTest(\n\t\t\tConfigureBlogsEntryDefaultSingleApproverTests.suite());\n\t\ttestSuite.addTest(ConfigureBlogsEntrySingleApproverTests.suite());\n\t\ttestSuite.addTest(ConfigureCommentsDefaultNoWorkflowTests.suite());\n\t\ttestSuite.addTest(ConfigureCommentsDefaultSingleApproverTests.suite());\n\t\ttestSuite.addTest(ConfigureCommentsSingleApproverTests.suite());\n\t\ttestSuite.addTest(ConfigureDLDocumentDefaultNoWorkflowTests.suite());\n\t\ttestSuite.addTest(\n\t\t\tConfigureDLDocumentDefaultSingleApproverTests.suite());\n\t\ttestSuite.addTest(ConfigureDLDocumentSingleApproverTests.suite());\n\t\ttestSuite.addTest(ConfigureMBMessageDefaultNoWorkflowTests.suite());\n\t\ttestSuite.addTest(ConfigureMBMessageDefaultSingleApproverTests.suite());\n\t\ttestSuite.addTest(ConfigureMBMessageSingleApproverTests.suite());\n\t\ttestSuite.addTest(ConfigureWebContentDefaultNoWorkflowTests.suite());\n\t\ttestSuite.addTest(\n\t\t\tConfigureWebContentDefaultSingleApproverTests.suite());\n\t\ttestSuite.addTest(ConfigureWebContentSingleApproverTests.suite());\n\t\ttestSuite.addTest(ConfigureWikiPageDefaultNoWorkflowTests.suite());\n\t\ttestSuite.addTest(ConfigureWikiPageDefaultSingleApproverTests.suite());\n\t\ttestSuite.addTest(ConfigureWikiPageSingleApproverTests.suite());\n\n\t\treturn testSuite;\n\t}","id":61284,"modified_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\n\t\ttestSuite.addTest(ConfigureBlogsEntryDefaultNoWorkflowTests.suite());\n\t\ttestSuite.addTest(\n\t\t\tConfigureBlogsEntryDefaultSingleApproverTests.suite());\n\t\ttestSuite.addTest(ConfigureBlogsEntrySingleApproverTests.suite());\n\t\ttestSuite.addTest(ConfigureCommentsDefaultNoWorkflowTests.suite());\n\t\ttestSuite.addTest(ConfigureCommentsDefaultSingleApproverTests.suite());\n\t\ttestSuite.addTest(ConfigureCommentsSingleApproverTests.suite());\n\t\ttestSuite.addTest(ConfigureMBMessageDefaultNoWorkflowTests.suite());\n\t\ttestSuite.addTest(ConfigureMBMessageDefaultSingleApproverTests.suite());\n\t\ttestSuite.addTest(ConfigureMBMessageSingleApproverTests.suite());\n\t\ttestSuite.addTest(ConfigurePageRevisionDefaultNoWorkflowTests.suite());\n\t\ttestSuite.addTest(\n\t\t\tConfigurePageRevisionDefaultSingleApproverTests.suite());\n\t\ttestSuite.addTest(ConfigurePageRevisionSingleApproverTests.suite());\n\t\ttestSuite.addTest(ConfigureWebContentDefaultNoWorkflowTests.suite());\n\t\ttestSuite.addTest(\n\t\t\tConfigureWebContentDefaultSingleApproverTests.suite());\n\t\ttestSuite.addTest(ConfigureWebContentSingleApproverTests.suite());\n\t\ttestSuite.addTest(ConfigureWikiPageDefaultNoWorkflowTests.suite());\n\t\ttestSuite.addTest(ConfigureWikiPageDefaultSingleApproverTests.suite());\n\t\ttestSuite.addTest(ConfigureWikiPageSingleApproverTests.suite());\n\n\t\treturn testSuite;\n\t}","commit_id":"f163b1135342850f0a7eaf79eee64dcc97d383f6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownWorkflowConfiguration() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Workflow\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Default Configuration\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.documentlibrary.model.DLFileEntry\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Workflow Configuration\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.documentlibrary.model.DLFileEntry\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":61285,"modified_method":"public void testTearDownWorkflowConfiguration() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Workflow\", RuntimeVariables.replace(\"Workflow\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Default Configuration\",\n\t\t\tRuntimeVariables.replace(\"Default Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.User']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.User']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\"));\n\t\tselenium.clickAt(\"link=Workflow Configuration\",\n\t\t\tRuntimeVariables.replace(\"Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\"));\n\t}","commit_id":"f163b1135342850f0a7eaf79eee64dcc97d383f6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownWorkflowConfiguration() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Workflow\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Default Configuration\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.documentlibrary.model.DLFileEntry\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Workflow Configuration\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.documentlibrary.model.DLFileEntry\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":61286,"modified_method":"public void testTearDownWorkflowConfiguration() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Workflow\", RuntimeVariables.replace(\"Workflow\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Default Configuration\",\n\t\t\tRuntimeVariables.replace(\"Default Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.User']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.User']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\"));\n\t\tselenium.clickAt(\"link=Workflow Configuration\",\n\t\t\tRuntimeVariables.replace(\"Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\"));\n\t}","commit_id":"f163b1135342850f0a7eaf79eee64dcc97d383f6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownWorkflowConfiguration() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Workflow\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Default Configuration\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.documentlibrary.model.DLFileEntry\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Workflow Configuration\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.documentlibrary.model.DLFileEntry\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":61287,"modified_method":"public void testTearDownWorkflowConfiguration() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Workflow\", RuntimeVariables.replace(\"Workflow\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Default Configuration\",\n\t\t\tRuntimeVariables.replace(\"Default Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.User']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.User']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\"));\n\t\tselenium.clickAt(\"link=Workflow Configuration\",\n\t\t\tRuntimeVariables.replace(\"Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\"));\n\t}","commit_id":"f163b1135342850f0a7eaf79eee64dcc97d383f6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownWorkflowConfiguration() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Workflow\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Default Configuration\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.documentlibrary.model.DLFileEntry\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Workflow Configuration\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.documentlibrary.model.DLFileEntry\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":61288,"modified_method":"public void testTearDownWorkflowConfiguration() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Workflow\", RuntimeVariables.replace(\"Workflow\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Default Configuration\",\n\t\t\tRuntimeVariables.replace(\"Default Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.User']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.User']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\"));\n\t\tselenium.clickAt(\"link=Workflow Configuration\",\n\t\t\tRuntimeVariables.replace(\"Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\"));\n\t}","commit_id":"f163b1135342850f0a7eaf79eee64dcc97d383f6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownWorkflowConfiguration() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Workflow\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Default Configuration\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.documentlibrary.model.DLFileEntry\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Workflow Configuration\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.documentlibrary.model.DLFileEntry\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":61289,"modified_method":"public void testTearDownWorkflowConfiguration() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Workflow\", RuntimeVariables.replace(\"Workflow\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Default Configuration\",\n\t\t\tRuntimeVariables.replace(\"Default Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.User']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.User']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\"));\n\t\tselenium.clickAt(\"link=Workflow Configuration\",\n\t\t\tRuntimeVariables.replace(\"Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\"));\n\t}","commit_id":"f163b1135342850f0a7eaf79eee64dcc97d383f6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownWorkflowConfiguration() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Workflow\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Default Configuration\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.documentlibrary.model.DLFileEntry\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Workflow Configuration\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.documentlibrary.model.DLFileEntry\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":61290,"modified_method":"public void testTearDownWorkflowConfiguration() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Workflow\", RuntimeVariables.replace(\"Workflow\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Default Configuration\",\n\t\t\tRuntimeVariables.replace(\"Default Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.User']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.User']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\"));\n\t\tselenium.clickAt(\"link=Workflow Configuration\",\n\t\t\tRuntimeVariables.replace(\"Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\"));\n\t}","commit_id":"f163b1135342850f0a7eaf79eee64dcc97d383f6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownWorkflowConfiguration() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Workflow\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Default Configuration\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.documentlibrary.model.DLFileEntry\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Workflow Configuration\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.documentlibrary.model.DLFileEntry\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":61291,"modified_method":"public void testTearDownWorkflowConfiguration() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Workflow\", RuntimeVariables.replace(\"Workflow\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Default Configuration\",\n\t\t\tRuntimeVariables.replace(\"Default Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.User']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.User']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\"));\n\t\tselenium.clickAt(\"link=Workflow Configuration\",\n\t\t\tRuntimeVariables.replace(\"Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\"));\n\t}","commit_id":"f163b1135342850f0a7eaf79eee64dcc97d383f6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownWorkflowConfiguration() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Workflow\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Default Configuration\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.documentlibrary.model.DLFileEntry\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Workflow Configuration\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.documentlibrary.model.DLFileEntry\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":61292,"modified_method":"public void testTearDownWorkflowConfiguration() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Workflow\", RuntimeVariables.replace(\"Workflow\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Default Configuration\",\n\t\t\tRuntimeVariables.replace(\"Default Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.User']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.User']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\"));\n\t\tselenium.clickAt(\"link=Workflow Configuration\",\n\t\t\tRuntimeVariables.replace(\"Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\"));\n\t}","commit_id":"f163b1135342850f0a7eaf79eee64dcc97d383f6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownWorkflowConfiguration() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Workflow\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Default Configuration\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.documentlibrary.model.DLFileEntry\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Workflow Configuration\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.documentlibrary.model.DLFileEntry\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":61293,"modified_method":"public void testTearDownWorkflowConfiguration() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Workflow\", RuntimeVariables.replace(\"Workflow\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Default Configuration\",\n\t\t\tRuntimeVariables.replace(\"Default Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.User']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.User']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\"));\n\t\tselenium.clickAt(\"link=Workflow Configuration\",\n\t\t\tRuntimeVariables.replace(\"Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\"));\n\t}","commit_id":"f163b1135342850f0a7eaf79eee64dcc97d383f6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownWorkflowConfiguration() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Workflow\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Default Configuration\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.documentlibrary.model.DLFileEntry\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Workflow Configuration\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.documentlibrary.model.DLFileEntry\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":61294,"modified_method":"public void testTearDownWorkflowConfiguration() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Workflow\", RuntimeVariables.replace(\"Workflow\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Default Configuration\",\n\t\t\tRuntimeVariables.replace(\"Default Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.User']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.User']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\"));\n\t\tselenium.clickAt(\"link=Workflow Configuration\",\n\t\t\tRuntimeVariables.replace(\"Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\"));\n\t}","commit_id":"f163b1135342850f0a7eaf79eee64dcc97d383f6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownWorkflowConfiguration() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Workflow\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Default Configuration\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.documentlibrary.model.DLFileEntry\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Workflow Configuration\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.documentlibrary.model.DLFileEntry\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":61295,"modified_method":"public void testTearDownWorkflowConfiguration() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Workflow\", RuntimeVariables.replace(\"Workflow\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Default Configuration\",\n\t\t\tRuntimeVariables.replace(\"Default Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.User']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.User']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\"));\n\t\tselenium.clickAt(\"link=Workflow Configuration\",\n\t\t\tRuntimeVariables.replace(\"Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\"));\n\t}","commit_id":"f163b1135342850f0a7eaf79eee64dcc97d383f6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownWorkflowConfiguration() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Workflow\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Default Configuration\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.documentlibrary.model.DLFileEntry\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Workflow Configuration\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.documentlibrary.model.DLFileEntry\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":61296,"modified_method":"public void testTearDownWorkflowConfiguration() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Workflow\", RuntimeVariables.replace(\"Workflow\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Default Configuration\",\n\t\t\tRuntimeVariables.replace(\"Default Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.User']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.User']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\"));\n\t\tselenium.clickAt(\"link=Workflow Configuration\",\n\t\t\tRuntimeVariables.replace(\"Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\"));\n\t}","commit_id":"f163b1135342850f0a7eaf79eee64dcc97d383f6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownWorkflowConfiguration() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Workflow\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Default Configuration\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.documentlibrary.model.DLFileEntry\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Workflow Configuration\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.documentlibrary.model.DLFileEntry\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":61297,"modified_method":"public void testTearDownWorkflowConfiguration() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Workflow\", RuntimeVariables.replace(\"Workflow\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Default Configuration\",\n\t\t\tRuntimeVariables.replace(\"Default Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.User']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.User']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\"));\n\t\tselenium.clickAt(\"link=Workflow Configuration\",\n\t\t\tRuntimeVariables.replace(\"Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\"));\n\t}","commit_id":"f163b1135342850f0a7eaf79eee64dcc97d383f6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownWorkflowConfiguration() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Workflow\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Default Configuration\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.documentlibrary.model.DLFileEntry\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Workflow Configuration\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.documentlibrary.model.DLFileEntry\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":61298,"modified_method":"public void testTearDownWorkflowConfiguration() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Workflow\", RuntimeVariables.replace(\"Workflow\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Default Configuration\",\n\t\t\tRuntimeVariables.replace(\"Default Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.User']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.User']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\"));\n\t\tselenium.clickAt(\"link=Workflow Configuration\",\n\t\t\tRuntimeVariables.replace(\"Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\"));\n\t}","commit_id":"f163b1135342850f0a7eaf79eee64dcc97d383f6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownWorkflowConfiguration() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Workflow\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Default Configuration\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.documentlibrary.model.DLFileEntry\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Workflow Configuration\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.documentlibrary.model.DLFileEntry\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":61299,"modified_method":"public void testTearDownWorkflowConfiguration() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Workflow\", RuntimeVariables.replace(\"Workflow\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Default Configuration\",\n\t\t\tRuntimeVariables.replace(\"Default Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.User']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portal.model.User']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\"));\n\t\tassertEquals(\"No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\"));\n\t\tselenium.clickAt(\"link=Workflow Configuration\",\n\t\t\tRuntimeVariables.replace(\"Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"Default: No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portal.model.LayoutRevision']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\"));\n\t\tassertEquals(\"Default: No workflow\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\"));\n\t}","commit_id":"f163b1135342850f0a7eaf79eee64dcc97d383f6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPageUC() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Unit Converter Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"save\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Unit Converter Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Unit Converter Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":61300,"modified_method":"public void testAddPageUC() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Unit Converter Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//button[@id='save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Unit Converter Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Unit Converter Test Page\",\n\t\t\tRuntimeVariables.replace(\"Unit Converter Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"0a75809fdd132f120084efff14532c9938a45df9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPageUC() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Unit Converter Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"save\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Unit Converter Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Unit Converter Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":61301,"modified_method":"public void testAddPageUC() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Unit Converter Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//button[@id='save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Unit Converter Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Unit Converter Test Page\",\n\t\t\tRuntimeVariables.replace(\"Unit Converter Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"0a75809fdd132f120084efff14532c9938a45df9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPageUC() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Unit Converter Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"save\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Unit Converter Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Unit Converter Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":61302,"modified_method":"public void testAddPageUC() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Unit Converter Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//button[@id='save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Unit Converter Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Unit Converter Test Page\",\n\t\t\tRuntimeVariables.replace(\"Unit Converter Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"0a75809fdd132f120084efff14532c9938a45df9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPageUC() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Unit Converter Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"save\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Unit Converter Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Unit Converter Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":61303,"modified_method":"public void testAddPageUC() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Unit Converter Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//button[@id='save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Unit Converter Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Unit Converter Test Page\",\n\t\t\tRuntimeVariables.replace(\"Unit Converter Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"0a75809fdd132f120084efff14532c9938a45df9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletUCDuplicate() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Unit Converter Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Unit Converter Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"u\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@title='Unit Converter']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isVisible(\"//div[@title='Unit Converter']/p/a\"));\n\t}","id":61304,"modified_method":"public void testAddPortletUCDuplicate() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Unit Converter Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Unit Converter Test Page\",\n\t\t\tRuntimeVariables.replace(\"Unit Converter Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//input[@id='layout_configuration_content']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"u\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@title='Unit Converter']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isVisible(\"//div[@title='Unit Converter']/p/a\"));\n\t}","commit_id":"0a75809fdd132f120084efff14532c9938a45df9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletUC() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Unit Converter Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Unit Converter Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"u\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@title='Unit Converter']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Unit Converter']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":61305,"modified_method":"public void testAddPortletUC() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Unit Converter Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Unit Converter Test Page\",\n\t\t\tRuntimeVariables.replace(\"Unit Converter Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@title='Unit Converter']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Unit Converter']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"0a75809fdd132f120084efff14532c9938a45df9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletUC() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Unit Converter Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Unit Converter Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"u\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@title='Unit Converter']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Unit Converter']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":61306,"modified_method":"public void testAddPortletUC() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Unit Converter Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Unit Converter Test Page\",\n\t\t\tRuntimeVariables.replace(\"Unit Converter Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@title='Unit Converter']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Unit Converter']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"0a75809fdd132f120084efff14532c9938a45df9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletUC() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Unit Converter Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Unit Converter Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"u\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@title='Unit Converter']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Unit Converter']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":61307,"modified_method":"public void testAddPortletUC() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Unit Converter Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Unit Converter Test Page\",\n\t\t\tRuntimeVariables.replace(\"Unit Converter Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@title='Unit Converter']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Unit Converter']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"0a75809fdd132f120084efff14532c9938a45df9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletUC() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Unit Converter Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Unit Converter Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"u\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@title='Unit Converter']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Unit Converter']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":61308,"modified_method":"public void testAddPortletUC() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Unit Converter Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Unit Converter Test Page\",\n\t\t\tRuntimeVariables.replace(\"Unit Converter Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@title='Unit Converter']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Unit Converter']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"0a75809fdd132f120084efff14532c9938a45df9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConvertUnit() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Unit Converter Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Unit Converter Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_27_fromValue\", RuntimeVariables.replace(\"1.0\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_27_fromId\", RuntimeVariables.replace(\"label=Inch\"));\n\t\tselenium.select(\"_27_toId\", RuntimeVariables.replace(\"label=Centimeter\"));\n\t\tselenium.clickAt(\"//input[@value='Convert']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"2.5399999187200026\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\"_27_to_value\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(\"2.5399999187200026\", selenium.getValue(\"_27_to_value\"));\n\t}","id":61309,"modified_method":"public void testConvertUnit() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Unit Converter Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Unit Converter Test Page\",\n\t\t\tRuntimeVariables.replace(\"Unit Converter Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@name='_27_fromValue']\",\n\t\t\tRuntimeVariables.replace(\"1.0\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@name='_27_fromId']\",\n\t\t\tRuntimeVariables.replace(\"Inch\"));\n\t\tselenium.select(\"//select[@name='_27_toId']\",\n\t\t\tRuntimeVariables.replace(\"Centimeter\"));\n\t\tselenium.select(\"//select[@name='_27_type']\",\n\t\t\tRuntimeVariables.replace(\"Length\"));\n\t\tselenium.clickAt(\"//input[@value='Convert']\",\n\t\t\tRuntimeVariables.replace(\"Convert\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"2.5399999187200026\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\"//input[@name='_27_to_value']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(\"2.5399999187200026\",\n\t\t\tselenium.getValue(\"//input[@name='_27_to_value']\"));\n\t}","commit_id":"0a75809fdd132f120084efff14532c9938a45df9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testRemovePortletUC() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Unit Converter Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Unit Converter Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(\"//img[@alt='Remove']\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to remove this component[\\\\s\\\\S]$\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!selenium.isElementPresent(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isElementPresent(\"//section\"));\n\t}","id":61310,"modified_method":"public void testRemovePortletUC() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Unit Converter Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Unit Converter Test Page\",\n\t\t\tRuntimeVariables.replace(\"Unit Converter Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(\"//img[@alt='Remove']\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to remove this component[\\\\s\\\\S]$\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!selenium.isElementPresent(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isElementPresent(\"//section\"));\n\t}","commit_id":"0a75809fdd132f120084efff14532c9938a45df9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[4]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Public Pages\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page1Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page3Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page4Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page5Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":61311,"modified_method":"public void testTearDownPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[4]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Public Pages\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page1Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page3Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page4Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page5Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"0a75809fdd132f120084efff14532c9938a45df9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[4]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Public Pages\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page1Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page3Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page4Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page5Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":61312,"modified_method":"public void testTearDownPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[4]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Public Pages\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page1Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page3Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page4Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page5Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"0a75809fdd132f120084efff14532c9938a45df9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[4]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Public Pages\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page1Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page3Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page4Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page5Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":61313,"modified_method":"public void testTearDownPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[4]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Public Pages\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page1Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page3Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page4Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page5Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"0a75809fdd132f120084efff14532c9938a45df9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[4]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Public Pages\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page1Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page3Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page4Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page5Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":61314,"modified_method":"public void testTearDownPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[4]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Public Pages\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page1Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page3Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page4Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page5Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"0a75809fdd132f120084efff14532c9938a45df9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPageTranslator() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Translator Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"save\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Translator Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Translator Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":61315,"modified_method":"public void testAddPageTranslator() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Translator Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//button[@id='save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Translator Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Translator Test Page\",\n\t\t\tRuntimeVariables.replace(\"Translator Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"53b9a475be56e884b9c4bd5d1fb6c3ad2dd84ed2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletTranslator() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Translator Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Translator Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"t\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@title='Translator']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Translator']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":61316,"modified_method":"public void testAddPortletTranslator() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Translator Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Translator Test Page\",\n\t\t\tRuntimeVariables.replace(\"Translator Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[@title='Translator']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Translator']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"53b9a475be56e884b9c4bd5d1fb6c3ad2dd84ed2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[4]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Public Pages\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page1Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page3Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page4Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page5Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":61317,"modified_method":"public void testTearDownPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[4]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Public Pages\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page1Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page3Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page4Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page5Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"53b9a475be56e884b9c4bd5d1fb6c3ad2dd84ed2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTranslateChineseCEnglish() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Translator Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Translator Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_26_id\",\n\t\t\tRuntimeVariables.replace(\"label=Chinese (China) to English\"));\n\t\tselenium.type(\"_26_text\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"\\u6211\\u7684\\u540d\\u5b57\\u662fMike Vader\\u8bd1\\u8005\\uff0c\\u6d41\\u5229\\u5b8c\\u5168\\u6210\\u529f6\\u901a\\u4fe1\\u7684\\u767e\\u4e07\\u4e2a\\u5f62\\u5f0f\\u3002\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Translate']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"My name is Mike the Vader translator, fluent completely successful 6 correspondence 1,000,000 forms.\"));\n\t}","id":61318,"modified_method":"public void testTranslateChineseCEnglish() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Translator Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Translator Test Page\",\n\t\t\tRuntimeVariables.replace(\"Translator Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_26_text']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"\\u6211\\u7684\\u540d\\u5b57\\u662fMike Vader\\u8bd1\\u8005\\uff0c\\u6d41\\u5229\\u5b8c\\u5168\\u6210\\u529f6\\u901a\\u4fe1\\u7684\\u767e\\u4e07\\u4e2a\\u5f62\\u5f0f\\u3002\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_26_id']\",\n\t\t\tRuntimeVariables.replace(\"Chinese (China) to English\"));\n\t\tselenium.clickAt(\"//input[@value='Translate']\",\n\t\t\tRuntimeVariables.replace(\"Translate\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"My name is Mike the Vader translator, fluent completely successful 6 correspondence 1,000,000 forms.\"));\n\t}","commit_id":"53b9a475be56e884b9c4bd5d1fb6c3ad2dd84ed2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTranslateChineseTEnglish() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Translator Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Translator Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_26_id\",\n\t\t\tRuntimeVariables.replace(\"label=Chinese (Taiwan) to English\"));\n\t\tselenium.type(\"_26_text\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"\\u6211\\u7684\\u540d\\u5b57\\u662fLiferay\\u8bd1\\u8005\\uff0c\\u6d41\\u5229\\u5b8c\\u5168\\u6210\\u529f6\\u901a\\u4fe1\\u7684\\u767e\\u4e07\\u4e2a\\u5f62\\u5f0f\\u3002\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Translate']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"My name is the Liferay translator, fluent completely successful 6 correspondence 1,000,000 forms.\"));\n\t}","id":61319,"modified_method":"public void testTranslateChineseTEnglish() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Translator Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Translator Test Page\",\n\t\t\tRuntimeVariables.replace(\"Translator Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_26_text']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"\\u6211\\u7684\\u540d\\u5b57\\u662fLiferay\\u8bd1\\u8005\\uff0c\\u6d41\\u5229\\u5b8c\\u5168\\u6210\\u529f6\\u901a\\u4fe1\\u7684\\u767e\\u4e07\\u4e2a\\u5f62\\u5f0f\\u3002\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_26_id']\",\n\t\t\tRuntimeVariables.replace(\"Chinese (Taiwan) to English\"));\n\t\tselenium.clickAt(\"//input[@value='Translate']\",\n\t\t\tRuntimeVariables.replace(\"Translate\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"My name is the Liferay translator, fluent completely successful 6 correspondence 1,000,000 forms.\"));\n\t}","commit_id":"53b9a475be56e884b9c4bd5d1fb6c3ad2dd84ed2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTranslateDutchEnglish() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Translator Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Translator Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_26_id\",\n\t\t\tRuntimeVariables.replace(\"label=Dutch to English\"));\n\t\tselenium.type(\"_26_text\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Mijn naam is Vertaler Liferay, vloeiend in meer dan 6 miljoen vormen van mededeling.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Translate']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"My name is translator Liferay, fluently in more than 6 millions forms of communication.\"));\n\t}","id":61320,"modified_method":"public void testTranslateDutchEnglish() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Translator Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Translator Test Page\",\n\t\t\tRuntimeVariables.replace(\"Translator Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_26_text']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Mijn naam is Vertaler Liferay, vloeiend in meer dan 6 miljoen vormen van mededeling.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_26_id']\",\n\t\t\tRuntimeVariables.replace(\"Dutch to English\"));\n\t\tselenium.clickAt(\"//input[@value='Translate']\",\n\t\t\tRuntimeVariables.replace(\"Translate\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"My name is translator Liferay, fluently in more than 6 millions forms of communication.\"));\n\t}","commit_id":"53b9a475be56e884b9c4bd5d1fb6c3ad2dd84ed2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTranslateEnglishChineseC() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Translator Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Translator Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_26_id\",\n\t\t\tRuntimeVariables.replace(\"label=English to Chinese (China)\"));\n\t\tselenium.type(\"_26_text\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"My name is Liferay Translator, fluent in over 6 million forms of communication.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Translate']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"\\u6211\\u7684\\u540d\\u5b57\\u662fLiferay\\u8bd1\\u8005\\uff0c\\u6d41\\u5229\\u5b8c\\u5168\\u6210\\u529f6\\u901a\\u4fe1\\u7684\\u767e\\u4e07\\u4e2a\\u5f62\\u5f0f\\u3002\"));\n\t}","id":61321,"modified_method":"public void testTranslateEnglishChineseC() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Translator Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Translator Test Page\",\n\t\t\tRuntimeVariables.replace(\"Translator Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_26_text']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"My name is Liferay Translator, fluent in over 6 million forms of communication.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_26_id']\",\n\t\t\tRuntimeVariables.replace(\"English to Chinese (China)\"));\n\t\tselenium.clickAt(\"//input[@value='Translate']\",\n\t\t\tRuntimeVariables.replace(\"Translate\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"\\u6211\\u7684\\u540d\\u5b57\\u662fLiferay\\u8bd1\\u8005\\uff0c\\u6d41\\u5229\\u5b8c\\u5168\\u6210\\u529f6\\u901a\\u4fe1\\u7684\\u767e\\u4e07\\u4e2a\\u5f62\\u5f0f\\u3002\"));\n\t}","commit_id":"53b9a475be56e884b9c4bd5d1fb6c3ad2dd84ed2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTranslateEnglishChineseT() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Translator Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Translator Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_26_id\",\n\t\t\tRuntimeVariables.replace(\"label=English to Chinese (Taiwan)\"));\n\t\tselenium.type(\"_26_text\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"My name is Liferay Translator, fluent in over 6 million forms of communication.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Translate']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"\\u6211\\u7684\\u540d\\u5b57\\u662fLiferay\\u8b6f\\u8005\\uff0c\\u6d41\\u5229\\u5b8c\\u5168\\u6210\\u529f6\\u901a\\u4fe1\\u7684\\u767e\\u842c\\u500b\\u5f62\\u5f0f\\u3002\"));\n\t}","id":61322,"modified_method":"public void testTranslateEnglishChineseT() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Translator Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Translator Test Page\",\n\t\t\tRuntimeVariables.replace(\"Translator Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_26_text']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"My name is Liferay Translator, fluent in over 6 million forms of communication.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_26_id']\",\n\t\t\tRuntimeVariables.replace(\"English to Chinese (Taiwan)\"));\n\t\tselenium.clickAt(\"//input[@value='Translate']\",\n\t\t\tRuntimeVariables.replace(\"Translate\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"\\u6211\\u7684\\u540d\\u5b57\\u662fLiferay\\u8b6f\\u8005\\uff0c\\u6d41\\u5229\\u5b8c\\u5168\\u6210\\u529f6\\u901a\\u4fe1\\u7684\\u767e\\u842c\\u500b\\u5f62\\u5f0f\\u3002\"));\n\t}","commit_id":"53b9a475be56e884b9c4bd5d1fb6c3ad2dd84ed2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTranslateEnglishDutch() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Translator Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Translator Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_26_id\",\n\t\t\tRuntimeVariables.replace(\"label=English to Dutch\"));\n\t\tselenium.type(\"_26_text\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"My name is Liferay Translator, fluent in over 6 million forms of communication.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Translate']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Mijn naam is Vertaler Liferay, vloeiend in meer dan 6 miljoen vormen van mededeling.\"));\n\t}","id":61323,"modified_method":"public void testTranslateEnglishDutch() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Translator Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Translator Test Page\",\n\t\t\tRuntimeVariables.replace(\"Translator Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_26_text']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"My name is Liferay Translator, fluent in over 6 million forms of communication.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_26_id']\",\n\t\t\tRuntimeVariables.replace(\"English to Dutch\"));\n\t\tselenium.clickAt(\"//input[@value='Translate']\",\n\t\t\tRuntimeVariables.replace(\"Translate\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Mijn naam is Vertaler Liferay, vloeiend in meer dan 6 miljoen vormen van mededeling.\"));\n\t}","commit_id":"53b9a475be56e884b9c4bd5d1fb6c3ad2dd84ed2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTranslateEnglishFrench() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Translator Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Translator Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_26_id\",\n\t\t\tRuntimeVariables.replace(\"label=English to French\"));\n\t\tselenium.type(\"_26_text\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"My name is Liferay Translator, fluent in over 6 million forms of communication.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Translate']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Mon nom est traducteur de Liferay, fluent dans plus de 6 millions de formes de communication.\"));\n\t}","id":61324,"modified_method":"public void testTranslateEnglishFrench() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Translator Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Translator Test Page\",\n\t\t\tRuntimeVariables.replace(\"Translator Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_26_text']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"My name is Liferay Translator, fluent in over 6 million forms of communication.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_26_id']\",\n\t\t\tRuntimeVariables.replace(\"English to French\"));\n\t\tselenium.clickAt(\"//input[@value='Translate']\",\n\t\t\tRuntimeVariables.replace(\"Translate\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Mon nom est traducteur de Liferay, fluent dans plus de 6 millions de formes de communication.\"));\n\t}","commit_id":"53b9a475be56e884b9c4bd5d1fb6c3ad2dd84ed2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTranslateEnglishGerman() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Translator Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Translator Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_26_id\",\n\t\t\tRuntimeVariables.replace(\"label=English to German\"));\n\t\tselenium.type(\"_26_text\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"My name is Liferay Translator, fluent in over 6 million forms of communication.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Translate']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Mein Name ist der Liferay \\u00dcbersetzer, der innen \\u00fcber 6 Million Formen Kommunikation flie\\u00dfend ist.\"));\n\t}","id":61325,"modified_method":"public void testTranslateEnglishGerman() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Translator Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Translator Test Page\",\n\t\t\tRuntimeVariables.replace(\"Translator Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_26_text']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"My name is Liferay Translator, fluent in over 6 million forms of communication.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_26_id']\",\n\t\t\tRuntimeVariables.replace(\"English to German\"));\n\t\tselenium.clickAt(\"//input[@value='Translate']\",\n\t\t\tRuntimeVariables.replace(\"Translate\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Mein Name ist der Liferay \\u00dcbersetzer, der innen \\u00fcber 6 Million Formen Kommunikation flie\\u00dfend ist.\"));\n\t}","commit_id":"53b9a475be56e884b9c4bd5d1fb6c3ad2dd84ed2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTranslateEnglishItalian() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Translator Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Translator Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_26_id\",\n\t\t\tRuntimeVariables.replace(\"label=English to Italian\"));\n\t\tselenium.type(\"_26_text\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"My name is Liferay Translator, fluent in over 6 million forms of communication.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Translate']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Il mio nome \\u00e8 traduttore di Liferay, fluente dentro oltre 6 milione forme di comunicazione.\"));\n\t}","id":61326,"modified_method":"public void testTranslateEnglishItalian() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Translator Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Translator Test Page\",\n\t\t\tRuntimeVariables.replace(\"Translator Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_26_text']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"My name is Liferay Translator, fluent in over 6 million forms of communication.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_26_id']\",\n\t\t\tRuntimeVariables.replace(\"English to Italian\"));\n\t\tselenium.clickAt(\"//input[@value='Translate']\",\n\t\t\tRuntimeVariables.replace(\"Translate\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Il mio nome \\u00e8 traduttore di Liferay, fluente dentro oltre 6 milione forme di comunicazione.\"));\n\t}","commit_id":"53b9a475be56e884b9c4bd5d1fb6c3ad2dd84ed2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTranslateEnglishJapanese() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Translator Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Translator Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_26_id\",\n\t\t\tRuntimeVariables.replace(\"label=English to Japanese\"));\n\t\tselenium.type(\"_26_text\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"My name is JR Skywalker, fluent in over 6 million forms of communication.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Translate']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"\\u79c1\\u306e\\u540d\\u524d\\u306f\\u30b3\\u30df\\u30e5\\u30cb\\u30b1\\u30fc\\u30b7\\u30e7\\u30f3\\u306e6,000,000\\u306e\\u5f62\\u614b\\u306b\\u6d41\\u66a2\\u306a\\u30b8\\u30e5\\u30cb\\u30a2Skywalker\\u3067\\u3042\\u308b\\u3002\"));\n\t}","id":61327,"modified_method":"public void testTranslateEnglishJapanese() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Translator Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Translator Test Page\",\n\t\t\tRuntimeVariables.replace(\"Translator Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_26_text']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"My name is JR Skywalker, fluent in over 6 million forms of communication.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_26_id']\",\n\t\t\tRuntimeVariables.replace(\"English to Japanese\"));\n\t\tselenium.clickAt(\"//input[@value='Translate']\",\n\t\t\tRuntimeVariables.replace(\"Translate\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"\\u79c1\\u306e\\u540d\\u524d\\u306f\\u30b3\\u30df\\u30e5\\u30cb\\u30b1\\u30fc\\u30b7\\u30e7\\u30f3\\u306e6,000,000\\u306e\\u5f62\\u614b\\u306b\\u6d41\\u66a2\\u306a\\u30b8\\u30e5\\u30cb\\u30a2Skywalker\\u3067\\u3042\\u308b\\u3002\"));\n\t}","commit_id":"53b9a475be56e884b9c4bd5d1fb6c3ad2dd84ed2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTranslateEnglishPortuguese() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Translator Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Translator Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_26_id\",\n\t\t\tRuntimeVariables.replace(\"label=English to Portuguese\"));\n\t\tselenium.type(\"_26_text\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"My name is Liferay Translator, fluent in over 6 million forms of communication.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Translate']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Meu nome \\u00e9 tradutor de Liferay, fluente dentro sobre 6 milh\\u00e3o formul\\u00e1rios de uma comunica\\u00e7\\u00e3o.\"));\n\t}","id":61328,"modified_method":"public void testTranslateEnglishPortuguese() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Translator Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Translator Test Page\",\n\t\t\tRuntimeVariables.replace(\"Translator Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_26_text']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"My name is Liferay Translator, fluent in over 6 million forms of communication.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_26_id']\",\n\t\t\tRuntimeVariables.replace(\"English to Portuguese\"));\n\t\tselenium.clickAt(\"//input[@value='Translate']\",\n\t\t\tRuntimeVariables.replace(\"Translate\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Meu nome \\u00e9 tradutor de Liferay, fluente dentro sobre 6 milh\\u00e3o formul\\u00e1rios de uma comunica\\u00e7\\u00e3o.\"));\n\t}","commit_id":"53b9a475be56e884b9c4bd5d1fb6c3ad2dd84ed2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTranslateEnglishSpanish() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Translator Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Translator Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_26_id\",\n\t\t\tRuntimeVariables.replace(\"label=English to Spanish\"));\n\t\tselenium.type(\"_26_text\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"My name is Liferay Translator, fluent in over 6 million forms of communication.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Translate']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Mi nombre es traductor de Liferay, fluido adentro sobre 6 millones de formas de comunicaci\\u00f3n.\"));\n\t}","id":61329,"modified_method":"public void testTranslateEnglishSpanish() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Translator Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Translator Test Page\",\n\t\t\tRuntimeVariables.replace(\"Translator Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_26_text']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"My name is Liferay Translator, fluent in over 6 million forms of communication.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_26_id']\",\n\t\t\tRuntimeVariables.replace(\"English to Spanish\"));\n\t\tselenium.clickAt(\"//input[@value='Translate']\",\n\t\t\tRuntimeVariables.replace(\"Translate\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Mi nombre es traductor de Liferay, fluido adentro sobre 6 millones de formas de comunicaci\\u00f3n.\"));\n\t}","commit_id":"53b9a475be56e884b9c4bd5d1fb6c3ad2dd84ed2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTranslateFrenchEnglish() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Translator Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Translator Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_26_id\",\n\t\t\tRuntimeVariables.replace(\"label=French to English\"));\n\t\tselenium.type(\"_26_text\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Mon nom est traducteur de Liferay, fluent dans plus de 6 millions de formes de communication.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Translate']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"My name is translator of Liferay, flowing in more than 6 million forms of communication.\"));\n\t}","id":61330,"modified_method":"public void testTranslateFrenchEnglish() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Translator Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Translator Test Page\",\n\t\t\tRuntimeVariables.replace(\"Translator Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_26_text']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Mon nom est traducteur de Liferay, fluent dans plus de 6 millions de formes de communication.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_26_id']\",\n\t\t\tRuntimeVariables.replace(\"French to English\"));\n\t\tselenium.clickAt(\"//input[@value='Translate']\",\n\t\t\tRuntimeVariables.replace(\"Translate\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"My name is translator of Liferay, flowing in more than 6 million forms of communication.\"));\n\t}","commit_id":"53b9a475be56e884b9c4bd5d1fb6c3ad2dd84ed2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTranslateFrenchGerman() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Translator Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Translator Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_26_id\",\n\t\t\tRuntimeVariables.replace(\"label=French to German\"));\n\t\tselenium.type(\"_26_text\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Mon nom est traducteur de Liferay, fluent dans plus de 6 millions de formes de communication.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Translate']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Mein Name ist \\u00fcbersetzer von Liferay, flie\\u00dfender in mehr als 6 Millionen Kommunikationsformen.\"));\n\t}","id":61331,"modified_method":"public void testTranslateFrenchGerman() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Translator Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Translator Test Page\",\n\t\t\tRuntimeVariables.replace(\"Translator Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_26_text']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Mon nom est traducteur de Liferay, fluent dans plus de 6 millions de formes de communication.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_26_id']\",\n\t\t\tRuntimeVariables.replace(\"French to German\"));\n\t\tselenium.clickAt(\"//input[@value='Translate']\",\n\t\t\tRuntimeVariables.replace(\"Translate\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Mein Name ist \\u00fcbersetzer von Liferay, flie\\u00dfender in mehr als 6 Millionen Kommunikationsformen.\"));\n\t}","commit_id":"53b9a475be56e884b9c4bd5d1fb6c3ad2dd84ed2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTranslateGermanEnglish() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Translator Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Translator Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_26_id\",\n\t\t\tRuntimeVariables.replace(\"label=German to English\"));\n\t\tselenium.type(\"_26_text\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Mein Name ist \\u00fcbersetzer von Liferay, flie?ender in mehr als 6 Millionen Kommunikationsformen.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Translate']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"My name is a translator of Liferay, flie? more ender in more than 6 million communication forms.\"));\n\t}","id":61332,"modified_method":"public void testTranslateGermanEnglish() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Translator Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Translator Test Page\",\n\t\t\tRuntimeVariables.replace(\"Translator Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_26_text']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Mein Name ist \\u00fcbersetzer von Liferay, flie?ender in mehr als 6 Millionen Kommunikationsformen.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_26_id']\",\n\t\t\tRuntimeVariables.replace(\"German to English\"));\n\t\tselenium.clickAt(\"//input[@value='Translate']\",\n\t\t\tRuntimeVariables.replace(\"Translate\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"My name is a translator of Liferay, flie? more ender in more than 6 million communication forms.\"));\n\t}","commit_id":"53b9a475be56e884b9c4bd5d1fb6c3ad2dd84ed2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTranslateGermanFrench() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Translator Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Translator Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_26_id\",\n\t\t\tRuntimeVariables.replace(\"label=German to French\"));\n\t\tselenium.type(\"_26_text\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Mein Name ist ein Fl\\u00fcssig\\u00fcbersetzer Liferay unter mehr als 6 Millionen Kommunikationsformen. \"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Translate']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Mon nom est un traducteur liquide Liferay sous plus de 6 millions de formes de communication.\"));\n\t}","id":61333,"modified_method":"public void testTranslateGermanFrench() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Translator Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Translator Test Page\",\n\t\t\tRuntimeVariables.replace(\"Translator Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_26_text']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Mein Name ist ein Fl\\u00fcssig\\u00fcbersetzer Liferay unter mehr als 6 Millionen Kommunikationsformen.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_26_id']\",\n\t\t\tRuntimeVariables.replace(\"German to French\"));\n\t\tselenium.clickAt(\"//input[@value='Translate']\",\n\t\t\tRuntimeVariables.replace(\"Translate\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Mon nom est un traducteur liquide Liferay sous plus de 6 millions de formes de communication.\"));\n\t}","commit_id":"53b9a475be56e884b9c4bd5d1fb6c3ad2dd84ed2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTranslateItalianEnglish() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Translator Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Translator Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_26_id\",\n\t\t\tRuntimeVariables.replace(\"label=Italian to English\"));\n\t\tselenium.type(\"_26_text\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Il mio nome \\u00e8 traduttore di Liferay, fluente dentro oltre 6 milione forme della comunicazione.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Translate']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"My name is translator of Liferay, flowing within beyond 6 million forms the communication.\"));\n\t}","id":61334,"modified_method":"public void testTranslateItalianEnglish() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Translator Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Translator Test Page\",\n\t\t\tRuntimeVariables.replace(\"Translator Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_26_text']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Il mio nome \\u00e8 traduttore di Liferay, fluente dentro oltre 6 milione forme della comunicazione.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_26_id']\",\n\t\t\tRuntimeVariables.replace(\"Italian to English\"));\n\t\tselenium.clickAt(\"//input[@value='Translate']\",\n\t\t\tRuntimeVariables.replace(\"Translate\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"My name is translator of Liferay, flowing within beyond 6 million forms the communication.\"));\n\t}","commit_id":"53b9a475be56e884b9c4bd5d1fb6c3ad2dd84ed2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTranslateJapaneseEnglish() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Translator Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Translator Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_26_id\",\n\t\t\tRuntimeVariables.replace(\"label=Japanese to English\"));\n\t\tselenium.type(\"_26_text\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"\\u79c1\\u306e\\u540d\\u524d\\u306f\\u30b3\\u30df\\u30e5\\u30cb\\u30b1\\u30fc\\u30b7\\u30e7\\u30f3\\u306e6,000,000\\u306e\\u5f62\\u614b\\u306e\\u6d41\\u66a2\\u306aLiferay\\u306e\\u8a33\\u8005\\u3067\\u3042\\u308b\\u3002\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Translate']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"My name is the translator of fluent Liferay of form of 6,000,000 of communication.\"));\n\t}","id":61335,"modified_method":"public void testTranslateJapaneseEnglish() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Translator Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Translator Test Page\",\n\t\t\tRuntimeVariables.replace(\"Translator Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_26_text']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"\\u79c1\\u306e\\u540d\\u524d\\u306f\\u30b3\\u30df\\u30e5\\u30cb\\u30b1\\u30fc\\u30b7\\u30e7\\u30f3\\u306e6,000,000\\u306e\\u5f62\\u614b\\u306e\\u6d41\\u66a2\\u306aLiferay\\u306e\\u8a33\\u8005\\u3067\\u3042\\u308b\\u3002\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_26_id']\",\n\t\t\tRuntimeVariables.replace(\"Japanese to English\"));\n\t\tselenium.clickAt(\"//input[@value='Translate']\",\n\t\t\tRuntimeVariables.replace(\"Translate\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"My name is the translator of fluent Liferay of form of 6,000,000 of communication.\"));\n\t}","commit_id":"53b9a475be56e884b9c4bd5d1fb6c3ad2dd84ed2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTranslatePortugueseEnglish() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Translator Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Translator Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_26_id\",\n\t\t\tRuntimeVariables.replace(\"label=Portuguese to English\"));\n\t\tselenium.type(\"_26_text\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Meu nome \\u00e9 tradutor de Liferay, fluent dentro sobre 6 milh\\u00e3o formul\\u00e1rios de uma comunica\\u00e7\\u00e3o.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Translate']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"My name is translating of Liferay, fluent inside on 6 million forms of a communication.\"));\n\t}","id":61336,"modified_method":"public void testTranslatePortugueseEnglish() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Translator Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Translator Test Page\",\n\t\t\tRuntimeVariables.replace(\"Translator Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_26_text']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Meu nome \\u00e9 tradutor de Liferay, fluent dentro sobre 6 milh\\u00e3o formul\\u00e1rios de uma comunica\\u00e7\\u00e3o.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_26_id']\",\n\t\t\tRuntimeVariables.replace(\"Portuguese to English\"));\n\t\tselenium.clickAt(\"//input[@value='Translate']\",\n\t\t\tRuntimeVariables.replace(\"Translate\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"My name is translating of Liferay, fluent inside on 6 million forms of a communication.\"));\n\t}","commit_id":"53b9a475be56e884b9c4bd5d1fb6c3ad2dd84ed2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTranslateSpanishEnglish() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Translator Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Translator Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_26_id\",\n\t\t\tRuntimeVariables.replace(\"label=Spanish to English\"));\n\t\tselenium.type(\"_26_text\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Mi nombre es traductor de Liferay, fluido adentro sobre 6 millones de formas de comunicaci\\u00f3n.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Translate']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"My name is translator of Liferay, fluid inside on 6 million communication forms.\"));\n\t}","id":61337,"modified_method":"public void testTranslateSpanishEnglish() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Translator Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Translator Test Page\",\n\t\t\tRuntimeVariables.replace(\"Translator Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_26_text']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Mi nombre es traductor de Liferay, fluido adentro sobre 6 millones de formas de comunicaci\\u00f3n.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_26_id']\",\n\t\t\tRuntimeVariables.replace(\"Spanish to English\"));\n\t\tselenium.clickAt(\"//input[@value='Translate']\",\n\t\t\tRuntimeVariables.replace(\"Translate\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"My name is translator of Liferay, fluid inside on 6 million communication forms.\"));\n\t}","commit_id":"53b9a475be56e884b9c4bd5d1fb6c3ad2dd84ed2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void insert(ActiveDashboardDto activeDashboardDto) {\n    SqlSession session = mybatis.openSession();\n    ActiveDashboardMapper mapper = session.getMapper(ActiveDashboardMapper.class);\n    try {\n      mapper.insert(activeDashboardDto);\n      session.commit();\n    } finally {\n      MyBatis.closeSessionQuietly(session);\n    }\n  }","id":61338,"modified_method":"public void insert(ActiveDashboardDto activeDashboardDto) {\n    SqlSession session = mybatis.openSession();\n    ActiveDashboardMapper mapper = session.getMapper(ActiveDashboardMapper.class);\n    try {\n      mapper.insert(activeDashboardDto);\n      session.commit();\n    } finally {\n      MyBatis.closeQuietly(session);\n    }\n  }","commit_id":"8c6df4977b90cfce0cc6797e3b1ba23b1253a62c","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public static List<Class<?>> getDaoClasses() {\n    return Collections.unmodifiableList(Arrays.asList(\n      ActiveDashboardDao.class,\n      DashboardDao.class,\n      DuplicationDao.class,\n      LoadedTemplateDao.class,\n      PurgeDao.class,\n      ResourceIndexerDao.class,\n      ReviewDao.class,\n      RuleDao.class));\n  }","id":61339,"modified_method":"public static List<Class<?>> getDaoClasses() {\n    return Collections.unmodifiableList(Arrays.asList(\n      ActiveDashboardDao.class,\n      DashboardDao.class,\n      DuplicationDao.class,\n      LoadedTemplateDao.class,\n      PurgeDao.class,\n      ResourceIndexerDao.class,\n      ResourceDao.class,\n      ReviewDao.class,\n      RuleDao.class));\n  }","commit_id":"8c6df4977b90cfce0cc6797e3b1ba23b1253a62c","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public DashboardDto selectGlobalDashboard(String name) {\n    SqlSession session = mybatis.openSession();\n    try {\n      DashboardMapper mapper = session.getMapper(DashboardMapper.class);\n      return mapper.selectGlobalDashboard(name);\n    } finally {\n      MyBatis.closeSessionQuietly(session);\n    }\n  }","id":61340,"modified_method":"public DashboardDto selectGlobalDashboard(String name) {\n    SqlSession session = mybatis.openSession();\n    try {\n      DashboardMapper mapper = session.getMapper(DashboardMapper.class);\n      return mapper.selectGlobalDashboard(name);\n    } finally {\n      MyBatis.closeQuietly(session);\n    }\n  }","commit_id":"8c6df4977b90cfce0cc6797e3b1ba23b1253a62c","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public void insert(DashboardDto dashboardDto) {\n    SqlSession session = mybatis.openSession();\n    DashboardMapper dashboardMapper = session.getMapper(DashboardMapper.class);\n    WidgetMapper widgetMapper = session.getMapper(WidgetMapper.class);\n    WidgetPropertyMapper widgetPropertyMapper = session.getMapper(WidgetPropertyMapper.class);\n    try {\n      dashboardMapper.insert(dashboardDto);\n      for (WidgetDto widgetDto : dashboardDto.getWidgets()) {\n        widgetDto.setDashboardId(dashboardDto.getId());\n        widgetMapper.insert(widgetDto);\n        for (WidgetPropertyDto widgetPropertyDto : widgetDto.getWidgetProperties()) {\n          widgetPropertyDto.setWidgetId(widgetDto.getId());\n          widgetPropertyMapper.insert(widgetPropertyDto);\n        }\n      }\n      session.commit();\n    } finally {\n      MyBatis.closeSessionQuietly(session);\n    }\n  }","id":61341,"modified_method":"public void insert(DashboardDto dashboardDto) {\n    SqlSession session = mybatis.openSession();\n    DashboardMapper dashboardMapper = session.getMapper(DashboardMapper.class);\n    WidgetMapper widgetMapper = session.getMapper(WidgetMapper.class);\n    WidgetPropertyMapper widgetPropertyMapper = session.getMapper(WidgetPropertyMapper.class);\n    try {\n      dashboardMapper.insert(dashboardDto);\n      for (WidgetDto widgetDto : dashboardDto.getWidgets()) {\n        widgetDto.setDashboardId(dashboardDto.getId());\n        widgetMapper.insert(widgetDto);\n        for (WidgetPropertyDto widgetPropertyDto : widgetDto.getWidgetProperties()) {\n          widgetPropertyDto.setWidgetId(widgetDto.getId());\n          widgetPropertyMapper.insert(widgetPropertyDto);\n        }\n      }\n      session.commit();\n    } finally {\n      MyBatis.closeQuietly(session);\n    }\n  }","commit_id":"8c6df4977b90cfce0cc6797e3b1ba23b1253a62c","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"/**\n   * @return true if the database has been created, false if this database is not supported\n   */\n  public boolean createDatabase() {\n    if (DdlUtils.supportsDialect(database.getDialect().getId())) {\n      LoggerFactory.getLogger(getClass()).info(\"Create database\");\n      SqlSession session = myBatis.openSession();\n      Connection connection = session.getConnection();\n      try {\n        DdlUtils.createSchema(connection, database.getDialect().getId());\n      } finally {\n        try {\n          MyBatis.closeSessionQuietly(session);\n\n          // The connection is probably already closed by session.close()\n          // but it's not documented in mybatis javadoc.\n          connection.close();\n        } catch (Exception e) {\n          // ignore\n        }\n      }\n      return true;\n    }\n    return false;\n  }","id":61342,"modified_method":"/**\n   * @return true if the database has been created, false if this database is not supported\n   */\n  public boolean createDatabase() {\n    if (DdlUtils.supportsDialect(database.getDialect().getId())) {\n      LoggerFactory.getLogger(getClass()).info(\"Create database\");\n      SqlSession session = myBatis.openSession();\n      Connection connection = session.getConnection();\n      try {\n        DdlUtils.createSchema(connection, database.getDialect().getId());\n      } finally {\n        try {\n          MyBatis.closeQuietly(session);\n\n          // The connection is probably already closed by session.close()\n          // but it's not documented in mybatis javadoc.\n          connection.close();\n        } catch (Exception e) {\n          // ignore\n        }\n      }\n      return true;\n    }\n    return false;\n  }","commit_id":"8c6df4977b90cfce0cc6797e3b1ba23b1253a62c","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public List getExtensions() {\n    return Arrays.asList(\n      // shared components\n      DefaultPeriodCleaner.class, ProjectPurgeTask.class,\n\n      // purges\n      PeriodPurge.class, DeleteFileHistory.class, DeleteDirectoryHistory.class, DeleteAbortedBuilds.class, ProjectPurgePostJob.class,\n\n      // post-job\n      DeprecatedPurgePostJob.class);\n  }","id":61343,"modified_method":"public List getExtensions() {\n    return Arrays.asList(\n      DefaultPeriodCleaner.class,\n      PeriodPurge.class,\n\n      // post-jobs\n      ProjectPurgePostJob.class, DeprecatedPurgePostJob.class);\n  }","commit_id":"8c6df4977b90cfce0cc6797e3b1ba23b1253a62c","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void shouldGetExtensions() {\n    assertThat(new DbCleanerPlugin().getExtensions().size(), greaterThan(5));\n  }","id":61344,"modified_method":"@Test\n  public void shouldGetExtensions() {\n    assertThat(new DbCleanerPlugin().getExtensions().size(), greaterThan(2));\n  }","commit_id":"8c6df4977b90cfce0cc6797e3b1ba23b1253a62c","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public List<DuplicationUnitDto> selectCandidates(int resourceSnapshotId, Integer lastSnapshotId, String language) {\n    SqlSession session = mybatis.openSession();\n    try {\n      DuplicationMapper mapper = session.getMapper(DuplicationMapper.class);\n      return mapper.selectCandidates(resourceSnapshotId, lastSnapshotId, language);\n    } finally {\n      MyBatis.closeSessionQuietly(session);\n    }\n  }","id":61345,"modified_method":"public List<DuplicationUnitDto> selectCandidates(int resourceSnapshotId, Integer lastSnapshotId, String language) {\n    SqlSession session = mybatis.openSession();\n    try {\n      DuplicationMapper mapper = session.getMapper(DuplicationMapper.class);\n      return mapper.selectCandidates(resourceSnapshotId, lastSnapshotId, language);\n    } finally {\n      MyBatis.closeQuietly(session);\n    }\n  }","commit_id":"8c6df4977b90cfce0cc6797e3b1ba23b1253a62c","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"/**\n   * Insert rows in the table DUPLICATIONS_INDEX.\n   * Note that generated ids are not returned.\n   */\n  public void insert(Collection<DuplicationUnitDto> units) {\n    SqlSession session = mybatis.openSession(ExecutorType.BATCH);\n    try {\n      DuplicationMapper mapper = session.getMapper(DuplicationMapper.class);\n      for (DuplicationUnitDto unit : units) {\n        mapper.batchInsert(unit);\n      }\n      session.commit();\n\n    } finally {\n      MyBatis.closeSessionQuietly(session);\n    }\n  }","id":61346,"modified_method":"/**\n   * Insert rows in the table DUPLICATIONS_INDEX.\n   * Note that generated ids are not returned.\n   */\n  public void insert(Collection<DuplicationUnitDto> units) {\n    SqlSession session = mybatis.openSession(ExecutorType.BATCH);\n    try {\n      DuplicationMapper mapper = session.getMapper(DuplicationMapper.class);\n      for (DuplicationUnitDto unit : units) {\n        mapper.batchInsert(unit);\n      }\n      session.commit();\n\n    } finally {\n      MyBatis.closeQuietly(session);\n    }\n  }","commit_id":"8c6df4977b90cfce0cc6797e3b1ba23b1253a62c","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public int countByTypeAndKey(String type, String key) {\n    SqlSession session = mybatis.openSession();\n    LoadedTemplateMapper mapper = session.getMapper(LoadedTemplateMapper.class);\n    try {\n      return mapper.countByTypeAndKey(type, key);\n    } finally {\n      MyBatis.closeSessionQuietly(session);\n    }\n  }","id":61347,"modified_method":"public int countByTypeAndKey(String type, String key) {\n    SqlSession session = mybatis.openSession();\n    LoadedTemplateMapper mapper = session.getMapper(LoadedTemplateMapper.class);\n    try {\n      return mapper.countByTypeAndKey(type, key);\n    } finally {\n      MyBatis.closeQuietly(session);\n    }\n  }","commit_id":"8c6df4977b90cfce0cc6797e3b1ba23b1253a62c","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public void insert(LoadedTemplateDto loadedTemplateDto) {\n    SqlSession session = mybatis.openSession();\n    LoadedTemplateMapper mapper = session.getMapper(LoadedTemplateMapper.class);\n    try {\n      mapper.insert(loadedTemplateDto);\n      session.commit();\n    } finally {\n      MyBatis.closeSessionQuietly(session);\n    }\n  }","id":61348,"modified_method":"public void insert(LoadedTemplateDto loadedTemplateDto) {\n    SqlSession session = mybatis.openSession();\n    LoadedTemplateMapper mapper = session.getMapper(LoadedTemplateMapper.class);\n    try {\n      mapper.insert(loadedTemplateDto);\n      session.commit();\n    } finally {\n      MyBatis.closeQuietly(session);\n    }\n  }","commit_id":"8c6df4977b90cfce0cc6797e3b1ba23b1253a62c","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public static void closeSessionQuietly(SqlSession session) {\n    if (session != null) {\n      try {\n        session.close();\n      } catch (Exception e) {\n        LoggerFactory.getLogger(MyBatis.class).warn(\"Fail to close session\", e);\n        // do not re-throw the exception\n      }\n    }\n  }","id":61349,"modified_method":"public static void closeQuietly(SqlSession session) {\n    if (session != null) {\n      try {\n        session.close();\n      } catch (Exception e) {\n        LoggerFactory.getLogger(MyBatis.class).warn(\"Fail to close session\", e);\n        // do not re-throw the exception\n      }\n    }\n  }","commit_id":"8c6df4977b90cfce0cc6797e3b1ba23b1253a62c","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public void executeOn(final Project project, SensorContext context) {\n    final Date beforeBuildDate = new Date();\n\n    ProjectPurgeContext purgeContext = new ProjectPurgeContext() {\n      public Long getRootProjectId() {\n        return new Long(project.getId());\n      }\n\n      public Date getBeforeBuildDate() {\n        return beforeBuildDate;\n      }\n    };\n\n    Logger logger = LoggerFactory.getLogger(getClass());\n    logger.info(\"Optimizing project\");\n    task.execute(purgeContext);\n  }","id":61350,"modified_method":"public void executeOn(final Project project, SensorContext context) {\n    long projectId = (long) project.getId();\n    deleteAbortedBuilds(projectId);\n    deleteFileHistory(projectId);\n    if (settings.getBoolean(DbCleanerConstants.PROPERTY_CLEAN_DIRECTORY)) {\n      deleteDirectoryHistory(projectId);\n    }\n    purgeProject(projectId);\n  }","commit_id":"8c6df4977b90cfce0cc6797e3b1ba23b1253a62c","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public ProjectPurgePostJob(ProjectPurgeTask task) {\n    this.task = task;\n  }","id":61351,"modified_method":"public ProjectPurgePostJob(PurgeDao purgeDao, Settings settings) {\n    this.purgeDao = purgeDao;\n    this.settings = settings;\n  }","commit_id":"8c6df4977b90cfce0cc6797e3b1ba23b1253a62c","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public PurgeDao(MyBatis mybatis) {\n    this.mybatis = mybatis;\n  }","id":61352,"modified_method":"public PurgeDao(MyBatis mybatis, ResourceDao resourceDao) {\n    this.mybatis = mybatis;\n    this.resourceDao = resourceDao;\n  }","commit_id":"8c6df4977b90cfce0cc6797e3b1ba23b1253a62c","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public PurgeDao deleteSnapshots(PurgeSnapshotQuery query) {\n    SqlSession session = mybatis.openSession(ExecutorType.BATCH);\n    try {\n      final PurgeMapper mapper = session.getMapper(PurgeMapper.class);\n      final BatchSession batchSession = new BatchSession(session);\n      session.select(\"selectSnapshotIds\", query, new ResultHandler() {\n        public void handleResult(ResultContext context) {\n          Long snapshotId = (Long) context.getResultObject();\n          batchSession.increment(deleteSnapshot(snapshotId, mapper));\n        }\n      });\n      batchSession.commit();\n      return this;\n\n    } finally {\n      MyBatis.closeSessionQuietly(session);\n    }\n  }","id":61353,"modified_method":"public PurgeDao deleteSnapshots(PurgeSnapshotQuery query) {\n    final BatchSession session = mybatis.openBatchSession();\n    try {\n      final PurgeMapper mapper = session.getMapper(PurgeMapper.class);\n      session.select(\"org.sonar.core.purge.PurgeMapper.selectSnapshotIds\", query, new ResultHandler() {\n        public void handleResult(ResultContext context) {\n          Long snapshotId = (Long) context.getResultObject();\n          session.increment(deleteSnapshot(snapshotId, mapper));\n        }\n      });\n      session.commit();\n      return this;\n\n    } finally {\n      MyBatis.closeQuietly(session);\n    }\n  }","commit_id":"8c6df4977b90cfce0cc6797e3b1ba23b1253a62c","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"int disableResource(long resourceId, PurgeMapper mapper) {\n    mapper.disableResource(resourceId);\n    mapper.deleteResourceIndex(resourceId);\n    mapper.unsetSnapshotIslast(resourceId);\n    // TODO close reviews\n    return 3; // nb of SQL requests\n  }","id":61354,"modified_method":"int disableResource(long resourceId, PurgeMapper mapper) {\n    mapper.deleteResourceIndex(resourceId);\n    mapper.setSnapshotIsLastToFalse(resourceId);\n    mapper.disableResource(resourceId);\n    // TODO close reviews\n    return 3; // nb of SQL requests\n  }","commit_id":"8c6df4977b90cfce0cc6797e3b1ba23b1253a62c","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void shouldDeleteSnapshot() {\n    setupData(\"shouldDeleteSnapshot\");\n\n    SqlSession session = getMyBatis().openSession();\n    try {\n      // this method does not commit and close the session\n      dao.deleteSnapshot(5L, session.getMapper(PurgeMapper.class));\n      session.commit();\n\n    } finally {\n      MyBatis.closeSessionQuietly(session);\n    }\n    checkTables(\"shouldDeleteSnapshot\",\n      \"snapshots\", \"project_measures\", \"measure_data\", \"rule_failures\", \"snapshot_sources\", \"duplications_index\", \"events\", \"dependencies\");\n  }","id":61355,"modified_method":"/**\n   * Test that all related data is deleted.\n   */\n  @Test\n  public void shouldDeleteSnapshot() {\n    setupData(\"shouldDeleteSnapshot\");\n\n    SqlSession session = getMyBatis().openSession();\n    try {\n      // this method does not commit and close the session\n      dao.deleteSnapshot(5L, session.getMapper(PurgeMapper.class));\n      session.commit();\n\n    } finally {\n      MyBatis.closeQuietly(session);\n    }\n    checkTables(\"shouldDeleteSnapshot\",\n      \"snapshots\", \"project_measures\", \"measure_data\", \"rule_failures\", \"snapshot_sources\", \"duplications_index\", \"events\", \"dependencies\");\n  }","commit_id":"8c6df4977b90cfce0cc6797e3b1ba23b1253a62c","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void shouldPurgeSnapshots() {\n    setupData(\"shouldPurgeSnapshots\");\n\n    dao.purgeSnapshots(PurgeSnapshotQuery.create());\n\n    checkTables(\"shouldPurgeSnapshots\",\n      \"snapshots\", \"project_measures\", \"measure_data\", \"rule_failures\", \"snapshot_sources\", \"duplications_index\", \"events\", \"dependencies\");\n  }","id":61356,"modified_method":"@Test\n  public void shouldDeleteSnapshots() {\n    setupData(\"shouldDeleteSnapshots\");\n    dao.deleteSnapshots(PurgeSnapshotQuery.create().setIslast(false).setResourceId(1L));\n    checkTables(\"shouldDeleteSnapshots\", \"snapshots\");\n  }","commit_id":"8c6df4977b90cfce0cc6797e3b1ba23b1253a62c","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Before\n  public void createDao() {\n    dao = new PurgeDao(getMyBatis());\n  }","id":61357,"modified_method":"@Before\n  public void createDao() {\n    dao = new PurgeDao(getMyBatis(), new ResourceDao(getMyBatis()));\n  }","commit_id":"8c6df4977b90cfce0cc6797e3b1ba23b1253a62c","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public boolean indexResource(int id, String name, String qualifier, int rootProjectId) {\n    boolean indexed = false;\n    if (isIndexableQualifier(qualifier)) {\n      SqlSession session = mybatis.openSession();\n      try {\n        String key = nameToKey(name);\n        if (key.length() >= MINIMUM_KEY_SIZE) {\n          indexed = true;\n          ResourceIndexerMapper mapper = session.getMapper(ResourceIndexerMapper.class);\n          boolean toBeIndexed = sanitizeIndex(id, key, mapper);\n          if (toBeIndexed) {\n            ResourceIndexDto dto = new ResourceIndexDto()\n              .setResourceId(id)\n              .setQualifier(qualifier)\n              .setRootProjectId(rootProjectId)\n              .setNameSize(name.length());\n\n            for (int position = 0; position <= key.length() - MINIMUM_KEY_SIZE; position++) {\n              dto.setPosition(position);\n              dto.setKey(StringUtils.substring(key, position));\n              mapper.insert(dto);\n            }\n            session.commit();\n          }\n        }\n      } finally {\n        MyBatis.closeSessionQuietly(session);\n      }\n    }\n    return indexed;\n  }","id":61358,"modified_method":"public boolean indexResource(int id, String name, String qualifier, int rootProjectId) {\n    boolean indexed = false;\n    if (isIndexableQualifier(qualifier)) {\n      SqlSession session = mybatis.openSession();\n      try {\n        String key = nameToKey(name);\n        if (key.length() >= MINIMUM_KEY_SIZE) {\n          indexed = true;\n          ResourceIndexerMapper mapper = session.getMapper(ResourceIndexerMapper.class);\n          boolean toBeIndexed = sanitizeIndex(id, key, mapper);\n          if (toBeIndexed) {\n            ResourceIndexDto dto = new ResourceIndexDto()\n              .setResourceId(id)\n              .setQualifier(qualifier)\n              .setRootProjectId(rootProjectId)\n              .setNameSize(name.length());\n\n            for (int position = 0; position <= key.length() - MINIMUM_KEY_SIZE; position++) {\n              dto.setPosition(position);\n              dto.setKey(StringUtils.substring(key, position));\n              mapper.insert(dto);\n            }\n            session.commit();\n          }\n        }\n      } finally {\n        MyBatis.closeQuietly(session);\n      }\n    }\n    return indexed;\n  }","commit_id":"8c6df4977b90cfce0cc6797e3b1ba23b1253a62c","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"/**\n   * This method is reentrant. It can be executed even if the project is already indexed.\n   */\n  public ResourceIndexerDao indexProject(final int rootProjectId) {\n    SqlSession session = mybatis.openSession(ExecutorType.BATCH);\n    try {\n      ResourceIndexerMapper mapper = session.getMapper(ResourceIndexerMapper.class);\n      doIndexProject(rootProjectId, session, mapper);\n      session.commit();\n      return this;\n\n    } finally {\n      MyBatis.closeSessionQuietly(session);\n    }\n  }","id":61359,"modified_method":"/**\n   * This method is reentrant. It can be executed even if the project is already indexed.\n   */\n  public ResourceIndexerDao indexProject(final int rootProjectId) {\n    SqlSession session = mybatis.openSession(ExecutorType.BATCH);\n    try {\n      ResourceIndexerMapper mapper = session.getMapper(ResourceIndexerMapper.class);\n      doIndexProject(rootProjectId, session, mapper);\n      session.commit();\n      return this;\n\n    } finally {\n      MyBatis.closeQuietly(session);\n    }\n  }","commit_id":"8c6df4977b90cfce0cc6797e3b1ba23b1253a62c","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"/**\n   * This method is reentrant. It can be executed even if some projects are already indexed.\n   */\n  public ResourceIndexerDao indexProjects() {\n    final SqlSession session = mybatis.openSession(ExecutorType.BATCH);\n    try {\n      final ResourceIndexerMapper mapper = session.getMapper(ResourceIndexerMapper.class);\n      session.select(\"selectRootProjectIds\", /* workaround to get booleans */ResourceIndexerQuery.create(), new ResultHandler() {\n        public void handleResult(ResultContext context) {\n          Integer rootProjectId = (Integer) context.getResultObject();\n          doIndexProject(rootProjectId, session, mapper);\n          session.commit();\n        }\n      });\n      return this;\n\n    } finally {\n      MyBatis.closeSessionQuietly(session);\n    }\n  }","id":61360,"modified_method":"/**\n   * This method is reentrant. It can be executed even if some projects are already indexed.\n   */\n  public ResourceIndexerDao indexProjects() {\n    final SqlSession session = mybatis.openSession(ExecutorType.BATCH);\n    try {\n      final ResourceIndexerMapper mapper = session.getMapper(ResourceIndexerMapper.class);\n      session.select(\"selectRootProjectIds\", /* workaround to get booleans */ResourceIndexerQuery.create(), new ResultHandler() {\n        public void handleResult(ResultContext context) {\n          Integer rootProjectId = (Integer) context.getResultObject();\n          doIndexProject(rootProjectId, session, mapper);\n          session.commit();\n        }\n      });\n      return this;\n\n    } finally {\n      MyBatis.closeQuietly(session);\n    }\n  }","commit_id":"8c6df4977b90cfce0cc6797e3b1ba23b1253a62c","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public Integer countByQuery(ReviewQuery query) {\n    SqlSession session = mybatis.openSession();\n    try {\n      ReviewMapper mapper = session.getMapper(ReviewMapper.class);\n      Integer result = 0;\n      if (query.needToPartitionQuery()) {\n        for (ReviewQuery partitionedQuery : query.partition()) {\n          result += mapper.countByQuery(partitionedQuery);\n        }\n      } else {\n        result = mapper.countByQuery(query);\n      }\n      return result;\n    } finally {\n      MyBatis.closeSessionQuietly(session);\n    }\n  }","id":61361,"modified_method":"public Integer countByQuery(ReviewQuery query) {\n    SqlSession session = mybatis.openSession();\n    try {\n      ReviewMapper mapper = session.getMapper(ReviewMapper.class);\n      Integer result = 0;\n      if (query.needToPartitionQuery()) {\n        for (ReviewQuery partitionedQuery : query.partition()) {\n          result += mapper.countByQuery(partitionedQuery);\n        }\n      } else {\n        result = mapper.countByQuery(query);\n      }\n      return result;\n    } finally {\n      MyBatis.closeQuietly(session);\n    }\n  }","commit_id":"8c6df4977b90cfce0cc6797e3b1ba23b1253a62c","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public ReviewDto selectById(long id) {\n    SqlSession session = mybatis.openSession();\n    try {\n      ReviewMapper mapper = session.getMapper(ReviewMapper.class);\n      return mapper.selectById(id);\n    } finally {\n      MyBatis.closeSessionQuietly(session);\n    }\n  }","id":61362,"modified_method":"public ReviewDto selectById(long id) {\n    SqlSession session = mybatis.openSession();\n    try {\n      ReviewMapper mapper = session.getMapper(ReviewMapper.class);\n      return mapper.selectById(id);\n    } finally {\n      MyBatis.closeQuietly(session);\n    }\n  }","commit_id":"8c6df4977b90cfce0cc6797e3b1ba23b1253a62c","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public List<ReviewDto> selectByQuery(ReviewQuery query) {\n    SqlSession session = mybatis.openSession();\n    try {\n      ReviewMapper mapper = session.getMapper(ReviewMapper.class);\n      List<ReviewDto> result;\n      if (query.needToPartitionQuery()) {\n        result = Lists.newArrayList();\n        for (ReviewQuery partitionedQuery : query.partition()) {\n          result.addAll(mapper.selectByQuery(partitionedQuery));\n        }\n      } else {\n        result = mapper.selectByQuery(query);\n      }\n      return result;\n    } finally {\n      MyBatis.closeSessionQuietly(session);\n    }\n  }","id":61363,"modified_method":"public List<ReviewDto> selectByQuery(ReviewQuery query) {\n    SqlSession session = mybatis.openSession();\n    try {\n      ReviewMapper mapper = session.getMapper(ReviewMapper.class);\n      List<ReviewDto> result;\n      if (query.needToPartitionQuery()) {\n        result = Lists.newArrayList();\n        for (ReviewQuery partitionedQuery : query.partition()) {\n          result.addAll(mapper.selectByQuery(partitionedQuery));\n        }\n      } else {\n        result = mapper.selectByQuery(query);\n      }\n      return result;\n    } finally {\n      MyBatis.closeQuietly(session);\n    }\n  }","commit_id":"8c6df4977b90cfce0cc6797e3b1ba23b1253a62c","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public List<RuleDto> selectAll() {\n    SqlSession session = mybatis.openSession();\n    try {\n      RuleMapper mapper = session.getMapper(RuleMapper.class);\n      return mapper.selectAll();\n    } finally {\n      MyBatis.closeSessionQuietly(session);\n    }\n  }","id":61364,"modified_method":"public List<RuleDto> selectAll() {\n    SqlSession session = mybatis.openSession();\n    try {\n      RuleMapper mapper = session.getMapper(RuleMapper.class);\n      return mapper.selectAll();\n    } finally {\n      MyBatis.closeQuietly(session);\n    }\n  }","commit_id":"8c6df4977b90cfce0cc6797e3b1ba23b1253a62c","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public RuleDto selectById(Long id) {\n    SqlSession session = mybatis.openSession();\n    try {\n      RuleMapper mapper = session.getMapper(RuleMapper.class);\n      return mapper.selectById(id);\n    } finally {\n      MyBatis.closeSessionQuietly(session);\n    }\n  }","id":61365,"modified_method":"public RuleDto selectById(Long id) {\n    SqlSession session = mybatis.openSession();\n    try {\n      RuleMapper mapper = session.getMapper(RuleMapper.class);\n      return mapper.selectById(id);\n    } finally {\n      MyBatis.closeQuietly(session);\n    }\n  }","commit_id":"8c6df4977b90cfce0cc6797e3b1ba23b1253a62c","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n    public void branchBaseBeforeClusterJoin() throws Exception {\n        MemoryDocumentStore store = new MemoryDocumentStore();\n        DocumentNodeStore ns1 = builderProvider.newBuilder()\n                .setDocumentStore(store).setAsyncDelay(0).getNodeStore();\n\n        NodeBuilder b1 = ns1.getRoot().builder();\n        b1.child(\"parent\");\n        merge(ns1, b1);\n        ns1.runBackgroundOperations();\n\n        DocumentNodeStore ns2 = builderProvider.newBuilder()\n                .setDocumentStore(store).setAsyncDelay(0).getNodeStore();\n        NodeBuilder b2 = ns2.getRoot().builder();\n        b2.child(\"parent\").child(\"baz\");\n        merge(ns2, b2);\n        ns2.runBackgroundOperations();\n\n        DocumentNodeState root = ns1.getRoot();\n        DocumentNodeStoreBranch b = ns1.createBranch(root);\n        // branch state is now Unmodified\n        NodeBuilder builder = root.builder();\n        builder.child(\"parent\").child(\"foo\");\n        b.setRoot(builder.getNodeState());\n        // branch state is now InMemory\n        builder.child(\"parent\").child(\"bar\");\n        b.setRoot(builder.getNodeState());\n        // branch state is now Persisted\n\n        b.rebase();\n        NodeState parent = b.getHead().getChildNode(\"parent\");\n        assertTrue(parent.exists());\n        assertTrue(parent.hasChildNode(\"foo\"));\n        assertTrue(parent.hasChildNode(\"bar\"));\n        assertFalse(parent.hasChildNode(\"baz\"));\n\n        ns1.runBackgroundOperations();\n\n        b.merge(EmptyHook.INSTANCE, CommitInfo.EMPTY);\n        parent = ns1.getRoot().getChildNode(\"parent\");\n        assertTrue(parent.exists());\n        assertTrue(parent.hasChildNode(\"foo\"));\n        assertTrue(parent.hasChildNode(\"bar\"));\n        assertTrue(parent.hasChildNode(\"baz\"));\n    }","id":61366,"modified_method":"@Test\n    public void branchBaseBeforeClusterJoin() throws Exception {\n        MemoryDocumentStore store = new MemoryDocumentStore();\n        DocumentNodeStore ns1 = builderProvider.newBuilder()\n                .setClusterId(1).setDocumentStore(store)\n                .setAsyncDelay(0).getNodeStore();\n\n        NodeBuilder b1 = ns1.getRoot().builder();\n        b1.child(\"parent\");\n        merge(ns1, b1);\n        ns1.runBackgroundOperations();\n\n        DocumentNodeStore ns2 = builderProvider.newBuilder()\n                .setClusterId(2).setDocumentStore(store)\n                .setAsyncDelay(0).getNodeStore();\n        NodeBuilder b2 = ns2.getRoot().builder();\n        b2.child(\"parent\").child(\"baz\");\n        merge(ns2, b2);\n        ns2.runBackgroundOperations();\n\n        DocumentNodeState root = ns1.getRoot();\n        DocumentNodeStoreBranch b = ns1.createBranch(root);\n        // branch state is now Unmodified\n        NodeBuilder builder = root.builder();\n        builder.child(\"parent\").child(\"foo\");\n        b.setRoot(builder.getNodeState());\n        // branch state is now InMemory\n        builder.child(\"parent\").child(\"bar\");\n        b.setRoot(builder.getNodeState());\n        // branch state is now Persisted\n\n        b.rebase();\n        NodeState parent = b.getHead().getChildNode(\"parent\");\n        assertTrue(parent.exists());\n        assertTrue(parent.hasChildNode(\"foo\"));\n        assertTrue(parent.hasChildNode(\"bar\"));\n        assertFalse(parent.hasChildNode(\"baz\"));\n\n        ns1.runBackgroundOperations();\n\n        b.merge(EmptyHook.INSTANCE, CommitInfo.EMPTY);\n        parent = ns1.getRoot().getChildNode(\"parent\");\n        assertTrue(parent.exists());\n        assertTrue(parent.hasChildNode(\"foo\"));\n        assertTrue(parent.hasChildNode(\"bar\"));\n        assertTrue(parent.hasChildNode(\"baz\"));\n    }","commit_id":"46543071cb15bd8c4fa3df7c74952eecbd0bc296","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"@Test\n    public void lastRevWithRevisionVector() throws Exception {\n        MemoryDocumentStore store = new MemoryDocumentStore();\n        DocumentNodeStore ns1 = builderProvider.newBuilder()\n                .setDocumentStore(store).setAsyncDelay(0).getNodeStore();\n        DocumentNodeStore ns2 = builderProvider.newBuilder()\n                .setDocumentStore(store).setAsyncDelay(0).getNodeStore();\n\n        NodeBuilder b1 = ns1.getRoot().builder();\n        b1.child(\"parent\");\n        merge(ns1, b1);\n        b1 = ns1.getRoot().builder();\n        NodeBuilder parent = b1.child(\"parent\");\n        parent.setProperty(\"p\", 1);\n        parent.child(\"child\");\n        merge(ns1, b1);\n        ns1.runBackgroundOperations();\n        ns2.runBackgroundOperations();\n\n        NodeBuilder b2 = ns2.getRoot().builder();\n        b2.child(\"parent\").setProperty(\"p\", 2);\n        merge(ns2, b2);\n        ns2.runBackgroundOperations();\n        ns1.runBackgroundOperations();\n\n        assertTrue(ns1.getRoot().getChildNode(\"parent\").hasChildNode(\"child\"));\n    }","id":61367,"modified_method":"@Test\n    public void lastRevWithRevisionVector() throws Exception {\n        MemoryDocumentStore store = new MemoryDocumentStore();\n        DocumentNodeStore ns1 = builderProvider.newBuilder()\n                .setClusterId(1).setDocumentStore(store)\n                .setAsyncDelay(0).getNodeStore();\n        DocumentNodeStore ns2 = builderProvider.newBuilder()\n                .setClusterId(2).setDocumentStore(store)\n                .setAsyncDelay(0).getNodeStore();\n\n        NodeBuilder b1 = ns1.getRoot().builder();\n        b1.child(\"parent\");\n        merge(ns1, b1);\n        b1 = ns1.getRoot().builder();\n        NodeBuilder parent = b1.child(\"parent\");\n        parent.setProperty(\"p\", 1);\n        parent.child(\"child\");\n        merge(ns1, b1);\n        ns1.runBackgroundOperations();\n        ns2.runBackgroundOperations();\n\n        NodeBuilder b2 = ns2.getRoot().builder();\n        b2.child(\"parent\").setProperty(\"p\", 2);\n        merge(ns2, b2);\n        ns2.runBackgroundOperations();\n        ns1.runBackgroundOperations();\n\n        assertTrue(ns1.getRoot().getChildNode(\"parent\").hasChildNode(\"child\"));\n    }","commit_id":"46543071cb15bd8c4fa3df7c74952eecbd0bc296","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"@Test\n    public void concurrentChildOperations2() throws Exception {\n        Clock clock = new Clock.Virtual();\n        Revision.setClock(clock);\n        MemoryDocumentStore store = new MemoryDocumentStore();\n        DocumentNodeStore ns1 = builderProvider.newBuilder()\n                .setAsyncDelay(0).clock(clock)\n                .setDocumentStore(store).getNodeStore();\n        DocumentNodeStore ns2 = builderProvider.newBuilder()\n                .setAsyncDelay(0).clock(clock)\n                .setDocumentStore(store).getNodeStore();\n\n        // create initial /foo\n        NodeBuilder b1 = ns1.getRoot().builder();\n        b1.child(\"foo\");\n        merge(ns1, b1);\n\n        // make changes visible on both cluster nodes\n        ns1.runBackgroundOperations();\n        ns2.runBackgroundOperations();\n\n        // add child-1 on cluster node 1\n        b1 = ns1.getRoot().builder();\n        b1.child(\"foo\").child(\"child-1\");\n        merge(ns1, b1);\n\n        // push _lastRev updates to DocumentStore\n        ns1.runBackgroundOperations();\n\n        // remove child-2 on cluster node 2\n        NodeBuilder b2 = ns2.getRoot().builder();\n        b2.child(\"foo\").child(\"child-2\");\n        merge(ns2, b2);\n\n        // on cluster node 2, add of child-1 is not yet visible\n        List<ChildNodeEntry> children = Lists.newArrayList(ns2.getRoot().getChildNode(\"foo\").getChildNodeEntries());\n        assertEquals(1, Iterables.size(children));\n\n        // this will make changes from cluster node 1 visible\n        ns2.runBackgroundOperations();\n\n        children = Lists.newArrayList(ns2.getRoot().getChildNode(\"foo\").getChildNodeEntries());\n        assertEquals(2, Iterables.size(children));\n    }","id":61368,"modified_method":"@Test\n    public void concurrentChildOperations2() throws Exception {\n        Clock clock = new Clock.Virtual();\n        Revision.setClock(clock);\n        MemoryDocumentStore store = new MemoryDocumentStore();\n        DocumentNodeStore ns1 = builderProvider.newBuilder()\n                .setClusterId(1).setAsyncDelay(0).clock(clock)\n                .setDocumentStore(store).getNodeStore();\n        DocumentNodeStore ns2 = builderProvider.newBuilder()\n                .setClusterId(2).setAsyncDelay(0).clock(clock)\n                .setDocumentStore(store).getNodeStore();\n\n        // create initial /foo\n        NodeBuilder b1 = ns1.getRoot().builder();\n        b1.child(\"foo\");\n        merge(ns1, b1);\n\n        // make changes visible on both cluster nodes\n        ns1.runBackgroundOperations();\n        ns2.runBackgroundOperations();\n\n        // add child-1 on cluster node 1\n        b1 = ns1.getRoot().builder();\n        b1.child(\"foo\").child(\"child-1\");\n        merge(ns1, b1);\n\n        // push _lastRev updates to DocumentStore\n        ns1.runBackgroundOperations();\n\n        // remove child-2 on cluster node 2\n        NodeBuilder b2 = ns2.getRoot().builder();\n        b2.child(\"foo\").child(\"child-2\");\n        merge(ns2, b2);\n\n        // on cluster node 2, add of child-1 is not yet visible\n        List<ChildNodeEntry> children = Lists.newArrayList(ns2.getRoot().getChildNode(\"foo\").getChildNodeEntries());\n        assertEquals(1, Iterables.size(children));\n\n        // this will make changes from cluster node 1 visible\n        ns2.runBackgroundOperations();\n\n        children = Lists.newArrayList(ns2.getRoot().getChildNode(\"foo\").getChildNodeEntries());\n        assertEquals(2, Iterables.size(children));\n    }","commit_id":"46543071cb15bd8c4fa3df7c74952eecbd0bc296","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"@Test\n    public void crossClusterCheckpointNewClusterNode() throws Exception {\n        DocumentStore store = new MemoryDocumentStore();\n        DocumentNodeStore ns1 = builderProvider.newBuilder()\n                .setDocumentStore(store).setAsyncDelay(0).getNodeStore();\n\n        // create 'foo' on ns1\n        NodeBuilder b1 = ns1.getRoot().builder();\n        b1.child(\"foo\");\n        ns1.merge(b1, EmptyHook.INSTANCE, CommitInfo.EMPTY);\n\n        // checkpoint sees 'foo' but not 'bar'\n        String checkpoint = ns1.checkpoint(Long.MAX_VALUE);\n\n        // create 'bar' on ns1\n        b1 = ns1.getRoot().builder();\n        b1.child(\"bar\");\n        ns1.merge(b1, EmptyHook.INSTANCE, CommitInfo.EMPTY);\n\n        // make visible\n        ns1.runBackgroundOperations();\n\n        // now start second node store\n        DocumentNodeStore ns2 = builderProvider.newBuilder()\n                .setDocumentStore(store).setAsyncDelay(0).getNodeStore();\n        NodeBuilder b2 = ns2.getRoot().builder();\n        b2.child(\"baz\");\n        ns2.merge(b2, EmptyHook.INSTANCE, CommitInfo.EMPTY);\n\n        NodeState root = ns2.retrieve(checkpoint);\n        assertNotNull(root);\n        assertTrue(root.hasChildNode(\"foo\"));\n        assertFalse(root.hasChildNode(\"bar\"));\n        assertFalse(root.hasChildNode(\"baz\"));\n    }","id":61369,"modified_method":"@Test\n    public void crossClusterCheckpointNewClusterNode() throws Exception {\n        DocumentStore store = new MemoryDocumentStore();\n        DocumentNodeStore ns1 = builderProvider.newBuilder().setClusterId(1)\n                .setDocumentStore(store).setAsyncDelay(0).getNodeStore();\n\n        // create 'foo' on ns1\n        NodeBuilder b1 = ns1.getRoot().builder();\n        b1.child(\"foo\");\n        ns1.merge(b1, EmptyHook.INSTANCE, CommitInfo.EMPTY);\n\n        // checkpoint sees 'foo' but not 'bar'\n        String checkpoint = ns1.checkpoint(Long.MAX_VALUE);\n\n        // create 'bar' on ns1\n        b1 = ns1.getRoot().builder();\n        b1.child(\"bar\");\n        ns1.merge(b1, EmptyHook.INSTANCE, CommitInfo.EMPTY);\n\n        // make visible\n        ns1.runBackgroundOperations();\n\n        // now start second node store\n        DocumentNodeStore ns2 = builderProvider.newBuilder().setClusterId(2)\n                .setDocumentStore(store).setAsyncDelay(0).getNodeStore();\n        NodeBuilder b2 = ns2.getRoot().builder();\n        b2.child(\"baz\");\n        ns2.merge(b2, EmptyHook.INSTANCE, CommitInfo.EMPTY);\n\n        NodeState root = ns2.retrieve(checkpoint);\n        assertNotNull(root);\n        assertTrue(root.hasChildNode(\"foo\"));\n        assertFalse(root.hasChildNode(\"bar\"));\n        assertFalse(root.hasChildNode(\"baz\"));\n    }","commit_id":"1f22cd504e964f88b4a6a6b15d15034fa4fc52fa","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"@Test\n    public void crossClusterNodeCheckpoint() throws Exception {\n        // use an async delay to ensure DocumentNodeStore.suspendUntil() works\n        // but set it to a high value and control background ops manually in\n        // this test\n        final int asyncDelay = (int) TimeUnit.MINUTES.toMillis(1);\n        DocumentStore store = new MemoryDocumentStore();\n        final DocumentNodeStore ns1 = builderProvider.newBuilder()\n                .setDocumentStore(store).setAsyncDelay(asyncDelay).getNodeStore();\n        final DocumentNodeStore ns2 = builderProvider.newBuilder()\n                .setDocumentStore(store).setAsyncDelay(asyncDelay).getNodeStore();\n\n        // create node on ns1\n        NodeBuilder builder = ns1.getRoot().builder();\n        builder.child(\"foo\");\n        ns1.merge(builder, EmptyHook.INSTANCE, CommitInfo.EMPTY);\n        // make visible on ns2\n        ns1.runBackgroundOperations();\n        ns2.runBackgroundOperations();\n        // create checkpoint on ns1\n        String cp1 = ns1.checkpoint(Long.MAX_VALUE);\n        // retrieve checkpoint on ns2\n        NodeState root = ns2.retrieve(cp1);\n        assertNotNull(root);\n        assertTrue(root.hasChildNode(\"foo\"));\n        ns2.release(cp1);\n\n        // create node on ns1\n        builder = ns1.getRoot().builder();\n        builder.child(\"bar\");\n        ns1.merge(builder, EmptyHook.INSTANCE, CommitInfo.EMPTY);\n        // create checkpoint when 'bar' is not yet visible to ns2\n        final String cp2 = ns1.checkpoint(Long.MAX_VALUE);\n        // retrieve checkpoint on ns2\n        final NodeState state[] = new NodeState[1];\n        Thread t = new Thread(new Runnable() {\n            @Override\n            public void run() {\n                state[0] = ns2.retrieve(cp2);\n            }\n        });\n        t.start();\n        ns1.runBackgroundOperations();\n        ns2.runBackgroundOperations();\n        t.join();\n        assertNotNull(state[0]);\n        assertTrue(state[0].hasChildNode(\"bar\"));\n    }","id":61370,"modified_method":"@Test\n    public void crossClusterNodeCheckpoint() throws Exception {\n        // use an async delay to ensure DocumentNodeStore.suspendUntil() works\n        // but set it to a high value and control background ops manually in\n        // this test\n        final int asyncDelay = (int) TimeUnit.MINUTES.toMillis(1);\n        DocumentStore store = new MemoryDocumentStore();\n        final DocumentNodeStore ns1 = builderProvider.newBuilder().setClusterId(1)\n                .setDocumentStore(store).setAsyncDelay(asyncDelay).getNodeStore();\n        final DocumentNodeStore ns2 = builderProvider.newBuilder().setClusterId(2)\n                .setDocumentStore(store).setAsyncDelay(asyncDelay).getNodeStore();\n\n        // create node on ns1\n        NodeBuilder builder = ns1.getRoot().builder();\n        builder.child(\"foo\");\n        ns1.merge(builder, EmptyHook.INSTANCE, CommitInfo.EMPTY);\n        // make visible on ns2\n        ns1.runBackgroundOperations();\n        ns2.runBackgroundOperations();\n        // create checkpoint on ns1\n        String cp1 = ns1.checkpoint(Long.MAX_VALUE);\n        // retrieve checkpoint on ns2\n        NodeState root = ns2.retrieve(cp1);\n        assertNotNull(root);\n        assertTrue(root.hasChildNode(\"foo\"));\n        ns2.release(cp1);\n\n        // create node on ns1\n        builder = ns1.getRoot().builder();\n        builder.child(\"bar\");\n        ns1.merge(builder, EmptyHook.INSTANCE, CommitInfo.EMPTY);\n        // create checkpoint when 'bar' is not yet visible to ns2\n        final String cp2 = ns1.checkpoint(Long.MAX_VALUE);\n        // retrieve checkpoint on ns2\n        final NodeState state[] = new NodeState[1];\n        Thread t = new Thread(new Runnable() {\n            @Override\n            public void run() {\n                state[0] = ns2.retrieve(cp2);\n            }\n        });\n        t.start();\n        ns1.runBackgroundOperations();\n        ns2.runBackgroundOperations();\n        t.join();\n        assertNotNull(state[0]);\n        assertTrue(state[0].hasChildNode(\"bar\"));\n    }","commit_id":"1f22cd504e964f88b4a6a6b15d15034fa4fc52fa","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"@Test\n    public void crossClusterReadOldCheckpoint() throws Exception {\n        DocumentStore store = new MemoryDocumentStore();\n        DocumentNodeStore ns1 = builderProvider.newBuilder()\n                .setDocumentStore(store).setAsyncDelay(0).getNodeStore();\n\n        NodeBuilder b1 = ns1.getRoot().builder();\n        b1.child(\"foo\");\n        ns1.merge(b1, EmptyHook.INSTANCE, CommitInfo.EMPTY);\n        ns1.runBackgroundOperations();\n\n        // manually create a check point in 1.2 format\n        Revision headRev = Revision.fromString(ns1.getHeadRevision().toString());\n        long expires = Long.MAX_VALUE;\n        String data = \"{\\\"expires\\\":\\\"\" + expires + \"\\\"}\";\n        UpdateOp update = new UpdateOp(\"checkpoint\", false);\n        update.setMapEntry(\"data\", headRev, data);\n        store.createOrUpdate(Collection.SETTINGS, update);\n\n        // now start second node store\n        DocumentNodeStore ns2 = builderProvider.newBuilder()\n                .setDocumentStore(store).setAsyncDelay(0).getNodeStore();\n        NodeBuilder b2 = ns2.getRoot().builder();\n        b2.child(\"baz\");\n        ns2.merge(b2, EmptyHook.INSTANCE, CommitInfo.EMPTY);\n\n        NodeState root = ns2.retrieve(headRev.toString());\n        assertNotNull(root);\n        assertTrue(root.hasChildNode(\"foo\"));\n        assertFalse(root.hasChildNode(\"baz\"));\n    }","id":61371,"modified_method":"@Test\n    public void crossClusterReadOldCheckpoint() throws Exception {\n        DocumentStore store = new MemoryDocumentStore();\n        DocumentNodeStore ns1 = builderProvider.newBuilder().setClusterId(1)\n                .setDocumentStore(store).setAsyncDelay(0).getNodeStore();\n\n        NodeBuilder b1 = ns1.getRoot().builder();\n        b1.child(\"foo\");\n        ns1.merge(b1, EmptyHook.INSTANCE, CommitInfo.EMPTY);\n        ns1.runBackgroundOperations();\n\n        // manually create a check point in 1.2 format\n        Revision headRev = Revision.fromString(ns1.getHeadRevision().toString());\n        long expires = Long.MAX_VALUE;\n        String data = \"{\\\"expires\\\":\\\"\" + expires + \"\\\"}\";\n        UpdateOp update = new UpdateOp(\"checkpoint\", false);\n        update.setMapEntry(\"data\", headRev, data);\n        store.createOrUpdate(Collection.SETTINGS, update);\n\n        // now start second node store\n        DocumentNodeStore ns2 = builderProvider.newBuilder().setClusterId(2)\n                .setDocumentStore(store).setAsyncDelay(0).getNodeStore();\n        NodeBuilder b2 = ns2.getRoot().builder();\n        b2.child(\"baz\");\n        ns2.merge(b2, EmptyHook.INSTANCE, CommitInfo.EMPTY);\n\n        NodeState root = ns2.retrieve(headRev.toString());\n        assertNotNull(root);\n        assertTrue(root.hasChildNode(\"foo\"));\n        assertFalse(root.hasChildNode(\"baz\"));\n    }","commit_id":"1f22cd504e964f88b4a6a6b15d15034fa4fc52fa","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"@Test\n  public void testProgramAPI() throws Exception {\n    Map<String, String> propMap = Maps.newHashMap();\n    propMap.put(\"key\", \"instance\");\n    File jarFile = createAppJarFile(AppReturnsArgs.class);\n    appClient.deploy(Id.Namespace.DEFAULT, jarFile);\n    Id.Application app = Id.Application.from(Id.Namespace.DEFAULT, AppReturnsArgs.NAME);\n    Id.Service service = Id.Service.from(app, AppReturnsArgs.SERVICE);\n\n    try {\n      client.setInstancePreferences(propMap);\n      Map<String, String> setMap = Maps.newHashMap();\n      setMap.put(\"saved\", \"args\");\n\n      programClient.setRuntimeArgs(service, setMap);\n      assertEquals(setMap, programClient.getRuntimeArgs(service));\n      programClient.start(service, false, ImmutableMap.of(\"run\", \"value\"));\n      assertProgramRunning(programClient, service);\n\n      propMap.put(\"run\", \"value\");\n      propMap.putAll(setMap);\n\n      URL serviceURL = new URL(serviceClient.getServiceURL(service), AppReturnsArgs.ENDPOINT);\n      HttpRequest request = HttpRequest.builder(HttpMethod.GET, serviceURL).build();\n      HttpResponse response = HttpRequests.execute(request);\n      assertEquals(HttpURLConnection.HTTP_OK, response.getResponseCode());\n      assertEquals(GSON.toJson(propMap), response.getResponseBodyAsString());\n      programClient.stop(service);\n      assertProgramStopped(programClient, service);\n\n      client.deleteInstancePreferences();\n      programClient.start(service);\n      assertProgramRunning(programClient, service);\n      propMap.remove(\"key\");\n      propMap.remove(\"run\");\n\n      serviceURL = new URL(serviceClient.getServiceURL(service), AppReturnsArgs.ENDPOINT);\n      request = HttpRequest.builder(HttpMethod.GET, serviceURL).build();\n      response = HttpRequests.execute(request);\n      assertEquals(HttpURLConnection.HTTP_OK, response.getResponseCode());\n      assertEquals(GSON.toJson(propMap), response.getResponseBodyAsString());\n      programClient.stop(service);\n      assertProgramStopped(programClient, service);\n\n      propMap.clear();\n      programClient.setRuntimeArgs(service, propMap);\n      programClient.start(service);\n      assertProgramRunning(programClient, service);\n      serviceURL = new URL(serviceClient.getServiceURL(service), AppReturnsArgs.ENDPOINT);\n      request = HttpRequest.builder(HttpMethod.GET, serviceURL).build();\n      response = HttpRequests.execute(request);\n      assertEquals(HttpURLConnection.HTTP_OK, response.getResponseCode());\n      assertEquals(GSON.toJson(propMap), response.getResponseBodyAsString());\n    } finally {\n      programClient.stop(service);\n      assertProgramStopped(programClient, service);\n      appClient.delete(app);\n    }\n  }","id":61372,"modified_method":"@Test\n  public void testProgramAPI() throws Exception {\n    Map<String, String> propMap = Maps.newHashMap();\n    propMap.put(\"key\", \"instance\");\n    File jarFile = createAppJarFile(AppReturnsArgs.class);\n    appClient.deploy(Id.Namespace.DEFAULT, jarFile);\n    Id.Application app = Id.Application.from(Id.Namespace.DEFAULT, AppReturnsArgs.NAME);\n    Id.Service service = Id.Service.from(app, AppReturnsArgs.SERVICE);\n\n    try {\n      client.setInstancePreferences(propMap);\n      Map<String, String> setMap = Maps.newHashMap();\n      setMap.put(\"saved\", \"args\");\n\n      programClient.setRuntimeArgs(service, setMap);\n      assertEquals(setMap, programClient.getRuntimeArgs(service));\n      programClient.start(service, false, ImmutableMap.of(\"run\", \"value\"));\n      assertProgramRunning(programClient, service);\n\n      propMap.put(\"run\", \"value\");\n      propMap.putAll(setMap);\n\n      URL serviceURL = new URL(serviceClient.getServiceURL(service), AppReturnsArgs.ENDPOINT);\n      HttpRequest request = HttpRequest.builder(HttpMethod.GET, serviceURL).build();\n      HttpResponse response = HttpRequests.execute(request);\n      assertEquals(HttpURLConnection.HTTP_OK, response.getResponseCode());\n      Map<String, String> responseMap = GSON.fromJson(response.getResponseBodyAsString(), STRING_MAP_TYPE);\n      assertEquals(propMap, responseMap);\n      programClient.stop(service);\n      assertProgramStopped(programClient, service);\n\n      client.deleteInstancePreferences();\n      programClient.start(service);\n      assertProgramRunning(programClient, service);\n      propMap.remove(\"key\");\n      propMap.remove(\"run\");\n\n      serviceURL = new URL(serviceClient.getServiceURL(service), AppReturnsArgs.ENDPOINT);\n      request = HttpRequest.builder(HttpMethod.GET, serviceURL).build();\n      response = HttpRequests.execute(request);\n      assertEquals(HttpURLConnection.HTTP_OK, response.getResponseCode());\n      responseMap = GSON.fromJson(response.getResponseBodyAsString(), STRING_MAP_TYPE);\n      assertEquals(propMap, responseMap);\n      programClient.stop(service);\n      assertProgramStopped(programClient, service);\n\n      propMap.clear();\n      programClient.setRuntimeArgs(service, propMap);\n      programClient.start(service);\n      assertProgramRunning(programClient, service);\n      serviceURL = new URL(serviceClient.getServiceURL(service), AppReturnsArgs.ENDPOINT);\n      request = HttpRequest.builder(HttpMethod.GET, serviceURL).build();\n      response = HttpRequests.execute(request);\n      assertEquals(HttpURLConnection.HTTP_OK, response.getResponseCode());\n      responseMap = GSON.fromJson(response.getResponseBodyAsString(), STRING_MAP_TYPE);\n      assertEquals(propMap, responseMap);\n    } finally {\n      programClient.stop(service);\n      assertProgramStopped(programClient, service);\n      appClient.delete(app);\n    }\n  }","commit_id":"ff952f1a335a512df7f2f7cf6a557c17cc315a4b","url":"https://github.com/caskdata/cdap"},{"original_method":"/**\n     * Collects data the brute-force way: gets an iterator for the filter in question\n     * from every memtable and sstable, then merges them together.\n     */\n    private ColumnFamily collectAllData()\n    {\n        logger.debug(\"collectAllData\");\n        // AtomicSortedColumns doesn't work for super columns (see #3821)\n        ISortedColumns.Factory factory = mutableColumns\n                                       ? cfs.metadata.cfType == ColumnFamilyType.Super ? ThreadSafeSortedColumns.factory() : AtomicSortedColumns.factory()\n                                       : ArrayBackedSortedColumns.factory();\n        List<IColumnIterator> iterators = new ArrayList<IColumnIterator>();\n        ColumnFamily returnCF = ColumnFamily.create(cfs.metadata, factory, filter.filter.isReversed());\n\n        ColumnFamilyStore.ViewFragment view = cfs.markReferenced(filter.key);\n        try\n        {\n            for (Memtable memtable : view.memtables)\n            {\n                IColumnIterator iter = filter.getMemtableColumnIterator(memtable);\n                if (iter != null)\n                {\n                    returnCF.delete(iter.getColumnFamily());\n                    iterators.add(iter);\n                }\n            }\n\n            for (SSTableReader sstable : view.sstables)\n            {\n                IColumnIterator iter = filter.getSSTableColumnIterator(sstable);\n                iterators.add(iter);\n                if (iter.getColumnFamily() != null)\n                {\n                    returnCF.delete(iter.getColumnFamily());\n                    sstablesIterated++;\n                }\n            }\n\n            // we need to distinguish between \"there is no data at all for this row\" (BF will let us rebuild that efficiently)\n            // and \"there used to be data, but it's gone now\" (we should cache the empty CF so we don't need to rebuild that slower)\n            if (iterators.isEmpty())\n                return null;\n\n            filter.collateColumns(returnCF, iterators, gcBefore);\n\n            // Caller is responsible for final removeDeletedCF.  This is important for cacheRow to work correctly:\n            return returnCF;\n        }\n        finally\n        {\n            for (IColumnIterator iter : iterators)\n                FileUtils.closeQuietly(iter);\n            SSTableReader.releaseReferences(view.sstables);\n        }\n    }","id":61373,"modified_method":"/**\n     * Collects data the brute-force way: gets an iterator for the filter in question\n     * from every memtable and sstable, then merges them together.\n     */\n    private ColumnFamily collectAllData()\n    {\n        logger.debug(\"collectAllData\");\n        // AtomicSortedColumns doesn't work for super columns (see #3821)\n        ISortedColumns.Factory factory = mutableColumns\n                                       ? cfs.metadata.cfType == ColumnFamilyType.Super ? ThreadSafeSortedColumns.factory() : AtomicSortedColumns.factory()\n                                       : ArrayBackedSortedColumns.factory();\n        ColumnFamilyStore.ViewFragment view = cfs.markReferenced(filter.key);\n        List<IColumnIterator> iterators = new ArrayList<IColumnIterator>(Iterables.size(view.memtables) + view.sstables.size());\n        ColumnFamily returnCF = ColumnFamily.create(cfs.metadata, factory, filter.filter.isReversed());\n\n        try\n        {\n            for (Memtable memtable : view.memtables)\n            {\n                IColumnIterator iter = filter.getMemtableColumnIterator(memtable);\n                if (iter != null)\n                {\n                    returnCF.delete(iter.getColumnFamily());\n                    iterators.add(iter);\n                }\n            }\n            \n            long mostRecentRowTombstone = Long.MIN_VALUE;\n            Map<IColumnIterator, Long> iteratorMaxTimes = Maps.newHashMapWithExpectedSize(view.sstables.size());\n            for (SSTableReader sstable : view.sstables)\n            {\n                // if we've already seen a row tombstone with a timestamp greater \n                // than the most recent update to this sstable, we can skip it\n                if (sstable.getMaxTimestamp() < mostRecentRowTombstone)\n                    continue;\n\n                IColumnIterator iter = filter.getSSTableColumnIterator(sstable);\n                iteratorMaxTimes.put(iter, sstable.getMaxTimestamp());\n                if (iter.getColumnFamily() != null)\n                {\n                    ColumnFamily cf = iter.getColumnFamily();\n                    if (cf.isMarkedForDelete())\n                        mostRecentRowTombstone = cf.getMarkedForDeleteAt();\n\n                    returnCF.delete(cf);\n                    sstablesIterated++;\n                }\n            }\n            \n            // If we saw a row tombstone, do a second pass through the iterators we\n            // obtained from the sstables and drop any whose maxTimestamp < that of the\n            // row tombstone\n            for (Map.Entry<IColumnIterator, Long> entry : iteratorMaxTimes.entrySet())\n            {\n                if (entry.getValue() >= mostRecentRowTombstone)\n                    iterators.add(entry.getKey());\n            }\n\n            // we need to distinguish between \"there is no data at all for this row\" (BF will let us rebuild that efficiently)\n            // and \"there used to be data, but it's gone now\" (we should cache the empty CF so we don't need to rebuild that slower)\n            if (iterators.isEmpty())\n                return null;\n\n            filter.collateColumns(returnCF, iterators, gcBefore);\n\n            // Caller is responsible for final removeDeletedCF.  This is important for cacheRow to work correctly:\n            return returnCF;\n        }\n        finally\n        {\n            for (IColumnIterator iter : iterators)\n                FileUtils.closeQuietly(iter);\n            SSTableReader.releaseReferences(view.sstables);\n        }\n    }","commit_id":"3a04d85488b32c106ccfec76092b187f5728b3dd","url":"https://github.com/apache/cassandra"},{"original_method":"/**\n     * Collects data in order of recency, using the sstable maxtimestamp data.\n     * Once we have data for all requests columns that is newer than the newest remaining maxtimestamp,\n     * we stop.\n     */\n    private ColumnFamily collectTimeOrderedData()\n    {\n        logger.debug(\"collectTimeOrderedData\");\n\n        // AtomicSortedColumns doesn't work for super columns (see #3821)\n        ISortedColumns.Factory factory = mutableColumns\n                                       ? cfs.metadata.cfType == ColumnFamilyType.Super ? ThreadSafeSortedColumns.factory() : AtomicSortedColumns.factory()\n                                       : TreeMapBackedSortedColumns.factory();\n        ColumnFamily container = ColumnFamily.create(cfs.metadata, factory, filter.filter.isReversed());\n        List<IColumnIterator> iterators = new ArrayList<IColumnIterator>();\n        ColumnFamilyStore.ViewFragment view = cfs.markReferenced(filter.key);\n        try\n        {\n            for (Memtable memtable : view.memtables)\n            {\n                IColumnIterator iter = filter.getMemtableColumnIterator(memtable);\n                if (iter != null)\n                {\n                    iterators.add(iter);\n                    container.delete(iter.getColumnFamily());\n                    while (iter.hasNext())\n                        container.addColumn(iter.next());\n                }\n            }\n\n            // avoid changing the filter columns of the original filter\n            // (reduceNameFilter removes columns that are known to be irrelevant)\n            TreeSet<ByteBuffer> filterColumns = new TreeSet<ByteBuffer>(((NamesQueryFilter) filter.filter).columns);\n            QueryFilter reducedFilter = new QueryFilter(filter.key, filter.path, new NamesQueryFilter(filterColumns));\n\n            /* add the SSTables on disk */\n            Collections.sort(view.sstables, SSTable.maxTimestampComparator);\n\n            // read sorted sstables\n            for (SSTableReader sstable : view.sstables)\n            {\n                long currentMaxTs = sstable.getMaxTimestamp();\n                reduceNameFilter(reducedFilter, container, currentMaxTs);\n                if (((NamesQueryFilter) reducedFilter.filter).columns.isEmpty())\n                    break;\n\n                IColumnIterator iter = reducedFilter.getSSTableColumnIterator(sstable);\n                iterators.add(iter);\n                if (iter.getColumnFamily() != null)\n                {\n                    container.delete(iter.getColumnFamily());\n                    sstablesIterated++;\n                    while (iter.hasNext())\n                        container.addColumn(iter.next());\n                }\n            }\n\n            // we need to distinguish between \"there is no data at all for this row\" (BF will let us rebuild that efficiently)\n            // and \"there used to be data, but it's gone now\" (we should cache the empty CF so we don't need to rebuild that slower)\n            if (iterators.isEmpty())\n                return null;\n\n            // do a final collate.  toCollate is boilerplate required to provide a CloseableIterator\n            final ColumnFamily c2 = container;\n            CloseableIterator<IColumn> toCollate = new SimpleAbstractColumnIterator()\n            {\n                final Iterator<IColumn> iter = c2.iterator();\n\n                protected IColumn computeNext()\n                {\n                    return iter.hasNext() ? iter.next() : endOfData();\n                }\n\n                public ColumnFamily getColumnFamily()\n                {\n                    return c2;\n                }\n\n                public DecoratedKey getKey()\n                {\n                    return filter.key;\n                }\n            };\n            ColumnFamily returnCF = container.cloneMeShallow();\n            filter.collateColumns(returnCF, Collections.singletonList(toCollate), gcBefore);\n\n            // \"hoist up\" the requested data into a more recent sstable\n            if (sstablesIterated > cfs.getMinimumCompactionThreshold()\n                && !cfs.isCompactionDisabled()\n                && cfs.getCompactionStrategy() instanceof SizeTieredCompactionStrategy)\n            {\n                RowMutation rm = new RowMutation(cfs.table.name, new Row(filter.key, returnCF.cloneMe()));\n                try\n                {\n                    // skipping commitlog and index updates is fine since we're just de-fragmenting existing data\n                    Table.open(rm.getTable()).apply(rm, false, false);\n                }\n                catch (IOException e)\n                {\n                    // log and allow the result to be returned\n                    logger.error(\"Error re-writing read results\", e);\n                }\n            }\n\n            // Caller is responsible for final removeDeletedCF.  This is important for cacheRow to work correctly:\n            return returnCF;\n        }\n        finally\n        {\n            for (IColumnIterator iter : iterators)\n                FileUtils.closeQuietly(iter);\n            SSTableReader.releaseReferences(view.sstables);\n        }\n    }","id":61374,"modified_method":"/**\n     * Collects data in order of recency, using the sstable maxtimestamp data.\n     * Once we have data for all requests columns that is newer than the newest remaining maxtimestamp,\n     * we stop.\n     */\n    private ColumnFamily collectTimeOrderedData()\n    {\n        logger.debug(\"collectTimeOrderedData\");\n\n        // AtomicSortedColumns doesn't work for super columns (see #3821)\n        ISortedColumns.Factory factory = mutableColumns\n                                       ? cfs.metadata.cfType == ColumnFamilyType.Super ? ThreadSafeSortedColumns.factory() : AtomicSortedColumns.factory()\n                                       : TreeMapBackedSortedColumns.factory();\n        ColumnFamily container = ColumnFamily.create(cfs.metadata, factory, filter.filter.isReversed());\n        List<IColumnIterator> iterators = new ArrayList<IColumnIterator>();\n        ColumnFamilyStore.ViewFragment view = cfs.markReferenced(filter.key);\n        try\n        {\n            for (Memtable memtable : view.memtables)\n            {\n                IColumnIterator iter = filter.getMemtableColumnIterator(memtable);\n                if (iter != null)\n                {\n                    iterators.add(iter);\n                    container.delete(iter.getColumnFamily());\n                    while (iter.hasNext())\n                        container.addColumn(iter.next());\n                }\n            }\n\n            // avoid changing the filter columns of the original filter\n            // (reduceNameFilter removes columns that are known to be irrelevant)\n            TreeSet<ByteBuffer> filterColumns = new TreeSet<ByteBuffer>(((NamesQueryFilter) filter.filter).columns);\n            QueryFilter reducedFilter = new QueryFilter(filter.key, filter.path, new NamesQueryFilter(filterColumns));\n\n            /* add the SSTables on disk */\n            Collections.sort(view.sstables, SSTable.maxTimestampComparator);\n\n            // read sorted sstables\n            long mostRecentRowTombstone = Long.MIN_VALUE;\n            for (SSTableReader sstable : view.sstables)\n            {\n                // if we've already seen a row tombstone with a timestamp greater \n                // than the most recent update to this sstable, we're done, since the rest of the sstables\n                // will also be older\n                if (sstable.getMaxTimestamp() < mostRecentRowTombstone)\n                    break;\n                \n                long currentMaxTs = sstable.getMaxTimestamp();\n                reduceNameFilter(reducedFilter, container, currentMaxTs);\n                if (((NamesQueryFilter) reducedFilter.filter).columns.isEmpty())\n                    break;\n\n                IColumnIterator iter = reducedFilter.getSSTableColumnIterator(sstable);\n                iterators.add(iter);\n                if (iter.getColumnFamily() != null)\n                {\n                    ColumnFamily cf = iter.getColumnFamily();\n                    if (cf.isMarkedForDelete())\n                    {\n                        // track the most recent row level tombstone we encounter\n                        mostRecentRowTombstone = cf.getMarkedForDeleteAt();\n                    }\n                    \n                    container.delete(cf);\n                    sstablesIterated++;\n                    while (iter.hasNext())\n                        container.addColumn(iter.next());\n                }\n            }\n\n            // we need to distinguish between \"there is no data at all for this row\" (BF will let us rebuild that efficiently)\n            // and \"there used to be data, but it's gone now\" (we should cache the empty CF so we don't need to rebuild that slower)\n            if (iterators.isEmpty())\n                return null;\n\n            // do a final collate.  toCollate is boilerplate required to provide a CloseableIterator\n            final ColumnFamily c2 = container;\n            CloseableIterator<IColumn> toCollate = new SimpleAbstractColumnIterator()\n            {\n                final Iterator<IColumn> iter = c2.iterator();\n\n                protected IColumn computeNext()\n                {\n                    return iter.hasNext() ? iter.next() : endOfData();\n                }\n\n                public ColumnFamily getColumnFamily()\n                {\n                    return c2;\n                }\n\n                public DecoratedKey getKey()\n                {\n                    return filter.key;\n                }\n            };\n            ColumnFamily returnCF = container.cloneMeShallow();\n            filter.collateColumns(returnCF, Collections.singletonList(toCollate), gcBefore);\n\n            // \"hoist up\" the requested data into a more recent sstable\n            if (sstablesIterated > cfs.getMinimumCompactionThreshold()\n                && !cfs.isCompactionDisabled()\n                && cfs.getCompactionStrategy() instanceof SizeTieredCompactionStrategy)\n            {\n                RowMutation rm = new RowMutation(cfs.table.name, new Row(filter.key, returnCF.cloneMe()));\n                try\n                {\n                    // skipping commitlog and index updates is fine since we're just de-fragmenting existing data\n                    Table.open(rm.getTable()).apply(rm, false, false);\n                }\n                catch (IOException e)\n                {\n                    // log and allow the result to be returned\n                    logger.error(\"Error re-writing read results\", e);\n                }\n            }\n\n            // Caller is responsible for final removeDeletedCF.  This is important for cacheRow to work correctly:\n            return returnCF;\n        }\n        finally\n        {\n            for (IColumnIterator iter : iterators)\n                FileUtils.closeQuietly(iter);\n            SSTableReader.releaseReferences(view.sstables);\n        }\n    }","commit_id":"3a04d85488b32c106ccfec76092b187f5728b3dd","url":"https://github.com/apache/cassandra"},{"original_method":"@Test\n    public void testIndexUpdate() throws IOException\n    {\n        RowMutation rm;\n\n        rm = new RowMutation(\"Keyspace2\", \"k1\".getBytes());\n        rm.add(new QueryPath(\"Indexed1\", null, \"birthdate\".getBytes(\"UTF8\")), FBUtilities.toByteArray(1L), new TimestampClock(1));\n        rm.apply();\n\n        rm = new RowMutation(\"Keyspace2\", \"k1\".getBytes());\n        rm.add(new QueryPath(\"Indexed1\", null, \"birthdate\".getBytes(\"UTF8\")), FBUtilities.toByteArray(2L), new TimestampClock(2));\n        rm.apply();\n\n        IndexExpression expr = new IndexExpression(\"birthdate\".getBytes(\"UTF8\"), IndexOperator.EQ, FBUtilities.toByteArray(1L));\n        IndexClause clause = new IndexClause(Arrays.asList(expr), ArrayUtils.EMPTY_BYTE_ARRAY, 100);\n        IFilter filter = new IdentityQueryFilter();\n        IPartitioner p = StorageService.getPartitioner();\n        Range range = new Range(p.getMinimumToken(), p.getMinimumToken());\n        List<Row> rows = Table.open(\"Keyspace2\").getColumnFamilyStore(\"Indexed1\").scan(clause, range, filter);\n        assert rows.size() == 0;\n\n        expr = new IndexExpression(\"birthdate\".getBytes(\"UTF8\"), IndexOperator.EQ, FBUtilities.toByteArray(2L));\n        clause = new IndexClause(Arrays.asList(expr), ArrayUtils.EMPTY_BYTE_ARRAY, 100);\n        rows = Table.open(\"Keyspace2\").getColumnFamilyStore(\"Indexed1\").scan(clause, range, filter);\n        assert Arrays.equals(\"k1\".getBytes(), rows.get(0).key.key);\n    }","id":61375,"modified_method":"@Test\n    public void testIndexUpdate() throws IOException\n    {\n        Table table = Table.open(\"Keyspace2\");\n\n        // create a row and update the birthdate value, test that the index query fetches the new version\n        RowMutation rm;\n        rm = new RowMutation(\"Keyspace2\", \"k1\".getBytes());\n        rm.add(new QueryPath(\"Indexed1\", null, \"birthdate\".getBytes(\"UTF8\")), FBUtilities.toByteArray(1L), new TimestampClock(1));\n        rm.apply();\n        rm = new RowMutation(\"Keyspace2\", \"k1\".getBytes());\n        rm.add(new QueryPath(\"Indexed1\", null, \"birthdate\".getBytes(\"UTF8\")), FBUtilities.toByteArray(2L), new TimestampClock(2));\n        rm.apply();\n\n        IndexExpression expr = new IndexExpression(\"birthdate\".getBytes(\"UTF8\"), IndexOperator.EQ, FBUtilities.toByteArray(1L));\n        IndexClause clause = new IndexClause(Arrays.asList(expr), ArrayUtils.EMPTY_BYTE_ARRAY, 100);\n        IFilter filter = new IdentityQueryFilter();\n        IPartitioner p = StorageService.getPartitioner();\n        Range range = new Range(p.getMinimumToken(), p.getMinimumToken());\n        List<Row> rows = table.getColumnFamilyStore(\"Indexed1\").scan(clause, range, filter);\n        assert rows.size() == 0;\n\n        expr = new IndexExpression(\"birthdate\".getBytes(\"UTF8\"), IndexOperator.EQ, FBUtilities.toByteArray(2L));\n        clause = new IndexClause(Arrays.asList(expr), ArrayUtils.EMPTY_BYTE_ARRAY, 100);\n        rows = table.getColumnFamilyStore(\"Indexed1\").scan(clause, range, filter);\n        assert Arrays.equals(\"k1\".getBytes(), rows.get(0).key.key);\n\n        // update the birthdate value with an OLDER timestamp, and test that the index ignores this\n        rm = new RowMutation(\"Keyspace2\", \"k1\".getBytes());\n        rm.add(new QueryPath(\"Indexed1\", null, \"birthdate\".getBytes(\"UTF8\")), FBUtilities.toByteArray(3L), new TimestampClock(0));\n        rm.apply();\n\n        rows = table.getColumnFamilyStore(\"Indexed1\").scan(clause, range, filter);\n        assert Arrays.equals(\"k1\".getBytes(), rows.get(0).key.key);\n    }","commit_id":"6055d1b696ea2e3085947afe22344b8d7a1d3589","url":"https://github.com/apache/cassandra"},{"original_method":"/**\n     * This method adds the row to the Commit Log associated with this table.\n     * Once this happens the data associated with the individual column families\n     * is also written to the column family store's memtable.\n    */\n    public void apply(RowMutation mutation, Object serializedMutation, boolean writeCommitLog) throws IOException\n    {\n        HashMap<ColumnFamilyStore,Memtable> memtablesToFlush = new HashMap<ColumnFamilyStore, Memtable>(2);\n\n        // write the mutation to the commitlog and memtables\n        flusherLock.readLock().lock();\n        try\n        {\n            if (writeCommitLog)\n                CommitLog.instance().add(mutation, serializedMutation);\n        \n            DecoratedKey key = StorageService.getPartitioner().decorateKey(mutation.key());\n            for (ColumnFamily columnFamily : mutation.getColumnFamilies())\n            {\n                ColumnFamilyStore cfs = columnFamilyStores.get(columnFamily.id());\n                if (cfs == null)\n                {\n                    logger.error(\"Attempting to mutate non-existant column family \" + columnFamily.id());\n                    continue;\n                }\n\n                ColumnFamily oldIndexedColumns;\n                SortedSet<byte[]> mutatedIndexedColumns = null;\n                for (byte[] column : cfs.getIndexedColumns())\n                {\n                    if (columnFamily.getColumnNames().contains(column))\n                    {\n                        if (mutatedIndexedColumns == null)\n                            mutatedIndexedColumns = new TreeSet<byte[]>(FBUtilities.byteArrayComparator);\n                        mutatedIndexedColumns.add(column);\n                    }\n                }\n\n                if (mutatedIndexedColumns == null)\n                {\n                    // just update the actual value, no extra synchronization\n                    applyCF(cfs, key, columnFamily, memtablesToFlush);\n                }\n                else\n                {\n                    synchronized (indexLockFor(mutation.key()))\n                    {\n                        // read old indexed values\n                        QueryFilter filter = QueryFilter.getNamesFilter(key, new QueryPath(cfs.getColumnFamilyName()), mutatedIndexedColumns);\n                        oldIndexedColumns = cfs.getColumnFamily(filter);\n\n                        // apply the mutation\n                        applyCF(cfs, key, columnFamily, memtablesToFlush);\n\n                        // add new index entries\n                        for (byte[] columnName : mutatedIndexedColumns)\n                        {\n                            IColumn column = columnFamily.getColumn(columnName);\n                            DecoratedKey<LocalToken> valueKey = cfs.getIndexKeyFor(columnName, column.value());\n                            ColumnFamily cf = cfs.newIndexedColumnFamily(columnName);\n                            cf.addColumn(new Column(mutation.key(), ArrayUtils.EMPTY_BYTE_ARRAY, column.clock()));\n                            applyCF(cfs.getIndexedColumnFamilyStore(columnName), valueKey, cf, memtablesToFlush);\n                        }\n\n                        // remove the old index entries\n                        if (oldIndexedColumns != null)\n                        {\n                            int localDeletionTime = (int)(System.currentTimeMillis() / 1000);\n                            for (Map.Entry<byte[], IColumn> entry : oldIndexedColumns.getColumnsMap().entrySet())\n                            {\n                                byte[] columnName = entry.getKey();\n                                IColumn column = entry.getValue();\n                                DecoratedKey<LocalToken> valueKey = cfs.getIndexKeyFor(columnName, column.value());\n                                ColumnFamily cf = cfs.newIndexedColumnFamily(columnName);\n                                cf.deleteColumn(mutation.key(), localDeletionTime, column.clock());\n                                applyCF(cfs.getIndexedColumnFamilyStore(columnName), valueKey, cf, memtablesToFlush);\n                            }\n                        }\n                    }\n                }\n\n                ColumnFamily cachedRow = cfs.getRawCachedRow(key);\n                if (cachedRow != null)\n                    cachedRow.addAll(columnFamily);\n            }\n        }\n        finally\n        {\n            flusherLock.readLock().unlock();\n        }\n\n        // flush memtables that got filled up.  usually mTF will be empty and this will be a no-op\n        for (Map.Entry<ColumnFamilyStore, Memtable> entry : memtablesToFlush.entrySet())\n            entry.getKey().maybeSwitchMemtable(entry.getValue(), writeCommitLog);\n    }","id":61376,"modified_method":"/**\n     * This method adds the row to the Commit Log associated with this table.\n     * Once this happens the data associated with the individual column families\n     * is also written to the column family store's memtable.\n    */\n    public void apply(RowMutation mutation, Object serializedMutation, boolean writeCommitLog) throws IOException\n    {\n        HashMap<ColumnFamilyStore,Memtable> memtablesToFlush = new HashMap<ColumnFamilyStore, Memtable>(2);\n\n        // write the mutation to the commitlog and memtables\n        flusherLock.readLock().lock();\n        try\n        {\n            if (writeCommitLog)\n                CommitLog.instance().add(mutation, serializedMutation);\n        \n            DecoratedKey key = StorageService.getPartitioner().decorateKey(mutation.key());\n            for (ColumnFamily cf : mutation.getColumnFamilies())\n            {\n                ColumnFamilyStore cfs = columnFamilyStores.get(cf.id());\n                if (cfs == null)\n                {\n                    logger.error(\"Attempting to mutate non-existant column family \" + cf.id());\n                    continue;\n                }\n\n                SortedSet<byte[]> mutatedIndexedColumns = null;\n                for (byte[] column : cfs.getIndexedColumns())\n                {\n                    if (cf.getColumnNames().contains(column))\n                    {\n                        if (mutatedIndexedColumns == null)\n                            mutatedIndexedColumns = new TreeSet<byte[]>(FBUtilities.byteArrayComparator);\n                        mutatedIndexedColumns.add(column);\n                    }\n                }\n\n                if (mutatedIndexedColumns == null)\n                {\n                    // just update the actual value, no extra synchronization\n                    applyCF(cfs, key, cf, memtablesToFlush);\n                }\n                else\n                {\n                    synchronized (indexLockFor(mutation.key()))\n                    {\n                        // read old indexed values\n                        QueryFilter filter = QueryFilter.getNamesFilter(key, new QueryPath(cfs.getColumnFamilyName()), mutatedIndexedColumns);\n                        ColumnFamily oldIndexedColumns = cfs.getColumnFamily(filter);\n\n                        // ignore obsolete column updates\n                        if (oldIndexedColumns != null)\n                        {\n                            for (IColumn oldColumn : oldIndexedColumns)\n                            {\n                                if (cfs.metadata.reconciler.reconcile((Column) oldColumn, (Column) cf.getColumn(oldColumn.name())).equals(oldColumn))\n                                {\n                                    cf.remove(oldColumn.name());\n                                    mutatedIndexedColumns.remove(oldColumn.name());\n                                    oldIndexedColumns.remove(oldColumn.name());\n                                }\n                            }\n                        }\n\n                        // apply the mutation\n                        applyCF(cfs, key, cf, memtablesToFlush);\n\n                        // add new index entries\n                        for (byte[] columnName : mutatedIndexedColumns)\n                        {\n                            IColumn column = cf.getColumn(columnName);\n                            DecoratedKey<LocalToken> valueKey = cfs.getIndexKeyFor(columnName, column.value());\n                            ColumnFamily cfi = cfs.newIndexedColumnFamily(columnName);\n                            cfi.addColumn(new Column(mutation.key(), ArrayUtils.EMPTY_BYTE_ARRAY, column.clock()));\n                            applyCF(cfs.getIndexedColumnFamilyStore(columnName), valueKey, cfi, memtablesToFlush);\n                        }\n\n                        // remove the old index entries\n                        if (oldIndexedColumns != null)\n                        {\n                            int localDeletionTime = (int)(System.currentTimeMillis() / 1000);\n                            for (Map.Entry<byte[], IColumn> entry : oldIndexedColumns.getColumnsMap().entrySet())\n                            {\n                                byte[] columnName = entry.getKey();\n                                IColumn column = entry.getValue();\n                                DecoratedKey<LocalToken> valueKey = cfs.getIndexKeyFor(columnName, column.value());\n                                ColumnFamily cfi = cfs.newIndexedColumnFamily(columnName);\n                                cfi.deleteColumn(mutation.key(), localDeletionTime, column.clock());\n                                applyCF(cfs.getIndexedColumnFamilyStore(columnName), valueKey, cfi, memtablesToFlush);\n                            }\n                        }\n                    }\n                }\n\n                ColumnFamily cachedRow = cfs.getRawCachedRow(key);\n                if (cachedRow != null)\n                    cachedRow.addAll(cf);\n            }\n        }\n        finally\n        {\n            flusherLock.readLock().unlock();\n        }\n\n        // flush memtables that got filled up.  usually mTF will be empty and this will be a no-op\n        for (Map.Entry<ColumnFamilyStore, Memtable> entry : memtablesToFlush.entrySet())\n            entry.getKey().maybeSwitchMemtable(entry.getValue(), writeCommitLog);\n    }","commit_id":"6055d1b696ea2e3085947afe22344b8d7a1d3589","url":"https://github.com/apache/cassandra"},{"original_method":"private static boolean sendMessage(InetAddress endPoint, String tableName, String key) throws IOException\n    {\n        if (!FailureDetector.instance().isAlive(endPoint))\n        {\n            return false;\n        }\n\n        Table table = Table.open(tableName);\n        RowMutation rm = new RowMutation(tableName, key);\n        for (ColumnFamilyStore cfstore : table.getColumnFamilyStores().values())\n        {\n            rm.add(cfstore.getColumnFamily(new IdentityQueryFilter(key, new QueryPath(cfstore.getColumnFamilyName()))));\n        }\n        Message message = rm.makeRowMutationMessage();\n        WriteResponseHandler responseHandler = new WriteResponseHandler(1);\n        MessagingService.instance().sendRR(message, new InetAddress[] { endPoint }, responseHandler);\n\n        try\n        {\n            responseHandler.get();\n        }\n        catch (TimeoutException e)\n        {\n            return false;\n        }\n        return true;\n    }","id":61377,"modified_method":"private static boolean sendMessage(InetAddress endPoint, String tableName, String key) throws IOException\n    {\n        if (!FailureDetector.instance().isAlive(endPoint))\n        {\n            return false;\n        }\n\n        Table table = Table.open(tableName);\n        RowMutation rm = new RowMutation(tableName, key);\n        for (ColumnFamilyStore cfstore : table.getColumnFamilyStores().values())\n        {\n            ColumnFamily cf = cfstore.getColumnFamily(new IdentityQueryFilter(key, new QueryPath(cfstore.getColumnFamilyName())));\n            if (cf != null)\n                rm.add(cf);\n        }\n        Message message = rm.makeRowMutationMessage();\n        WriteResponseHandler responseHandler = new WriteResponseHandler(1);\n        MessagingService.instance().sendRR(message, new InetAddress[] { endPoint }, responseHandler);\n\n        try\n        {\n            responseHandler.get();\n        }\n        catch (TimeoutException e)\n        {\n            return false;\n        }\n        return true;\n    }","commit_id":"e0f5809386760f29147ccc16910dfe4ad83e1c31","url":"https://github.com/apache/cassandra"},{"original_method":"public void add(ColumnFamily columnFamily)\n    {\n        if (modifications_.containsKey(columnFamily.name()))\n        {\n            throw new IllegalArgumentException(\"ColumnFamily \" + columnFamily.name() + \" is already being modified\");\n        }\n        modifications_.put(columnFamily.name(), columnFamily);\n    }","id":61378,"modified_method":"public void add(ColumnFamily columnFamily)\n    {\n        assert columnFamily != null;\n        if (modifications_.containsKey(columnFamily.name()))\n        {\n            throw new IllegalArgumentException(\"ColumnFamily \" + columnFamily.name() + \" is already being modified\");\n        }\n        modifications_.put(columnFamily.name(), columnFamily);\n    }","commit_id":"e0f5809386760f29147ccc16910dfe4ad83e1c31","url":"https://github.com/apache/cassandra"},{"original_method":"@Test\n    public void shouldParseDefaultNodeFileHeaderCorrectly() throws Exception\n    {\n        // GIVEN\n        CharSeeker seeker = new BufferedCharSeeker( wrap( new StringReader(\n                \"ID:ID,label-one:label,also-labels:LABEL,name,age:long\" ) ) );\n        IdType idType = IdType.STRING;\n        Extractors extractors = new Extractors( ',' );\n\n        // WHEN\n        Header header = DataFactories.defaultFormatNodeFileHeader().create( seeker, COMMAS, idType );\n\n        // THEN\n        assertArrayEquals( array(\n                entry( \"ID\", Type.ID, idType.extractor( extractors ) ),\n                entry( \"label-one\", Type.LABEL, extractors.stringArray() ),\n                entry( \"also-labels\", Type.LABEL, extractors.stringArray() ),\n                entry( \"name\", Type.PROPERTY, extractors.string() ),\n                entry( \"age\", Type.PROPERTY, extractors.long_() ) ), header.entries() );\n        seeker.close();\n    }","id":61379,"modified_method":"@Test\n    public void shouldParseDefaultNodeFileHeaderCorrectly() throws Exception\n    {\n        // GIVEN\n        CharSeeker seeker = seeker( \"ID:ID,label-one:label,also-labels:LABEL,name,age:long\" );\n        IdType idType = IdType.STRING;\n        Extractors extractors = new Extractors( ',' );\n\n        // WHEN\n        Header header = DataFactories.defaultFormatNodeFileHeader().create( seeker, COMMAS, idType );\n\n        // THEN\n        assertArrayEquals( array(\n                entry( \"ID\", Type.ID, idType.extractor( extractors ) ),\n                entry( \"label-one\", Type.LABEL, extractors.stringArray() ),\n                entry( \"also-labels\", Type.LABEL, extractors.stringArray() ),\n                entry( \"name\", Type.PROPERTY, extractors.string() ),\n                entry( \"age\", Type.PROPERTY, extractors.long_() ) ), header.entries() );\n        seeker.close();\n    }","commit_id":"70fdf5582a27c64ded89464880cfc77f89d8c161","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldAllowMissingIdHeaderEntry() throws Exception\n    {\n        // GIVEN\n        CharSeeker seeker = new BufferedCharSeeker( wrap( new StringReader( \"one\\ttwo\" ) ) );\n        Extractors extractors = new Extractors( ';' );\n\n        // WHEN\n        Header header = DataFactories.defaultFormatNodeFileHeader().create( seeker, TABS, IdType.ACTUAL );\n\n        // THEN\n        assertArrayEquals( array(\n                entry( \"one\", Type.PROPERTY, extractors.string() ),\n                entry( \"two\", Type.PROPERTY, extractors.string() ) ), header.entries() );\n        seeker.close();\n    }","id":61380,"modified_method":"@Test\n    public void shouldAllowMissingIdHeaderEntry() throws Exception\n    {\n        // GIVEN\n        CharSeeker seeker = seeker( \"one\\ttwo\" );\n        Extractors extractors = new Extractors( ';' );\n\n        // WHEN\n        Header header = DataFactories.defaultFormatNodeFileHeader().create( seeker, TABS, IdType.ACTUAL );\n\n        // THEN\n        assertArrayEquals( array(\n                entry( \"one\", Type.PROPERTY, extractors.string() ),\n                entry( \"two\", Type.PROPERTY, extractors.string() ) ), header.entries() );\n        seeker.close();\n    }","commit_id":"70fdf5582a27c64ded89464880cfc77f89d8c161","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldFailForDuplicatePropertyHeaderEntries() throws Exception\n    {\n        // GIVEN\n        CharSeeker seeker = new BufferedCharSeeker( wrap( new StringReader( \"one:id\\tname\\tname:long\" ) ) );\n        IdType idType = IdType.ACTUAL;\n        Extractors extractors = new Extractors( '\\t' );\n\n        // WHEN\n        try\n        {\n            DataFactories.defaultFormatNodeFileHeader().create( seeker, TABS, idType );\n            fail( \"Should fail\" );\n        }\n        catch ( DuplicateHeaderException e )\n        {\n            assertEquals( entry( \"name\", Type.PROPERTY, extractors.string() ), e.getFirst() );\n            assertEquals( entry( \"name\", Type.PROPERTY, extractors.long_() ), e.getOther() );\n        }\n        seeker.close();\n    }","id":61381,"modified_method":"@Test\n    public void shouldFailForDuplicatePropertyHeaderEntries() throws Exception\n    {\n        // GIVEN\n        CharSeeker seeker = seeker( \"one:id\\tname\\tname:long\" );\n        IdType idType = IdType.ACTUAL;\n        Extractors extractors = new Extractors( '\\t' );\n\n        // WHEN\n        try\n        {\n            DataFactories.defaultFormatNodeFileHeader().create( seeker, TABS, idType );\n            fail( \"Should fail\" );\n        }\n        catch ( DuplicateHeaderException e )\n        {\n            assertEquals( entry( \"name\", Type.PROPERTY, extractors.string() ), e.getFirst() );\n            assertEquals( entry( \"name\", Type.PROPERTY, extractors.long_() ), e.getOther() );\n        }\n        seeker.close();\n    }","commit_id":"70fdf5582a27c64ded89464880cfc77f89d8c161","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldFailForDuplicateIdHeaderEntries() throws Exception\n    {\n        // GIVEN\n        CharSeeker seeker = new BufferedCharSeeker( wrap( new StringReader( \"one:id\\ttwo:id\" ) ) );\n        IdType idType = IdType.ACTUAL;\n        Extractors extractors = new Extractors( '\\t' );\n\n        // WHEN\n        try\n        {\n            DataFactories.defaultFormatNodeFileHeader().create( seeker, TABS, idType );\n            fail( \"Should fail\" );\n        }\n        catch ( DuplicateHeaderException e )\n        {\n            assertEquals( entry( \"one\", Type.ID, extractors.long_() ), e.getFirst() );\n            assertEquals( entry( \"two\", Type.ID, extractors.long_() ), e.getOther() );\n        }\n        seeker.close();\n    }","id":61382,"modified_method":"@Test\n    public void shouldFailForDuplicateIdHeaderEntries() throws Exception\n    {\n        // GIVEN\n        CharSeeker seeker = seeker( \"one:id\\ttwo:id\" );\n        IdType idType = IdType.ACTUAL;\n        Extractors extractors = new Extractors( '\\t' );\n\n        // WHEN\n        try\n        {\n            DataFactories.defaultFormatNodeFileHeader().create( seeker, TABS, idType );\n            fail( \"Should fail\" );\n        }\n        catch ( DuplicateHeaderException e )\n        {\n            assertEquals( entry( \"one\", Type.ID, extractors.long_() ), e.getFirst() );\n            assertEquals( entry( \"two\", Type.ID, extractors.long_() ), e.getOther() );\n        }\n        seeker.close();\n    }","commit_id":"70fdf5582a27c64ded89464880cfc77f89d8c161","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldParseGroupName() throws Exception\n    {\n     // GIVEN\n        CharSeeker seeker = new BufferedCharSeeker( wrap( new StringReader(\n                \":START_ID(GroupOne)\\t:END_ID(GroupTwo)\\ttype:TYPE\\tdate:long\\tmore:long[]\" ) ) );\n        IdType idType = IdType.ACTUAL;\n        Extractors extractors = new Extractors( '\\t' );\n\n        // WHEN\n        Header header = DataFactories.defaultFormatRelationshipFileHeader().create( seeker, TABS, idType );\n\n        // THEN\n        assertArrayEquals( array(\n                entry( null, Type.START_ID, \"GroupOne\", idType.extractor( extractors ) ),\n                entry( null, Type.END_ID, \"GroupTwo\", idType.extractor( extractors ) ),\n                entry( \"type\", Type.TYPE, extractors.string() ),\n                entry( \"date\", Type.PROPERTY, extractors.long_() ),\n                entry( \"more\", Type.PROPERTY, extractors.longArray() ) ), header.entries() );\n        seeker.close();\n    }","id":61383,"modified_method":"@Test\n    public void shouldParseGroupName() throws Exception\n    {\n     // GIVEN\n        CharSeeker seeker = seeker( \":START_ID(GroupOne)\\t:END_ID(GroupTwo)\\ttype:TYPE\\tdate:long\\tmore:long[]\" );\n        IdType idType = IdType.ACTUAL;\n        Extractors extractors = new Extractors( '\\t' );\n\n        // WHEN\n        Header header = DataFactories.defaultFormatRelationshipFileHeader().create( seeker, TABS, idType );\n\n        // THEN\n        assertArrayEquals( array(\n                entry( null, Type.START_ID, \"GroupOne\", idType.extractor( extractors ) ),\n                entry( null, Type.END_ID, \"GroupTwo\", idType.extractor( extractors ) ),\n                entry( \"type\", Type.TYPE, extractors.string() ),\n                entry( \"date\", Type.PROPERTY, extractors.long_() ),\n                entry( \"more\", Type.PROPERTY, extractors.longArray() ) ), header.entries() );\n        seeker.close();\n    }","commit_id":"70fdf5582a27c64ded89464880cfc77f89d8c161","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldParseDefaultRelationshipFileHeaderCorrectly() throws Exception\n    {\n        // GIVEN\n        CharSeeker seeker = new BufferedCharSeeker( wrap( new StringReader(\n                \":START_ID\\t:END_ID\\ttype:TYPE\\tdate:long\\tmore:long[]\" ) ) );\n        IdType idType = IdType.ACTUAL;\n        Extractors extractors = new Extractors( '\\t' );\n\n        // WHEN\n        Header header = DataFactories.defaultFormatRelationshipFileHeader().create( seeker, TABS, idType );\n\n        // THEN\n        assertArrayEquals( array(\n                entry( null, Type.START_ID, idType.extractor( extractors ) ),\n                entry( null, Type.END_ID, idType.extractor( extractors ) ),\n                entry( \"type\", Type.TYPE, extractors.string() ),\n                entry( \"date\", Type.PROPERTY, extractors.long_() ),\n                entry( \"more\", Type.PROPERTY, extractors.longArray() ) ), header.entries() );\n        seeker.close();\n    }","id":61384,"modified_method":"@Test\n    public void shouldParseDefaultRelationshipFileHeaderCorrectly() throws Exception\n    {\n        // GIVEN\n        CharSeeker seeker = seeker( \":START_ID\\t:END_ID\\ttype:TYPE\\tdate:long\\tmore:long[]\" );\n        IdType idType = IdType.ACTUAL;\n        Extractors extractors = new Extractors( '\\t' );\n\n        // WHEN\n        Header header = DataFactories.defaultFormatRelationshipFileHeader().create( seeker, TABS, idType );\n\n        // THEN\n        assertArrayEquals( array(\n                entry( null, Type.START_ID, idType.extractor( extractors ) ),\n                entry( null, Type.END_ID, idType.extractor( extractors ) ),\n                entry( \"type\", Type.TYPE, extractors.string() ),\n                entry( \"date\", Type.PROPERTY, extractors.long_() ),\n                entry( \"more\", Type.PROPERTY, extractors.longArray() ) ), header.entries() );\n        seeker.close();\n    }","commit_id":"70fdf5582a27c64ded89464880cfc77f89d8c161","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldHaveEmptyHeadersBeInterpretedAsIgnored() throws Exception\n    {\n        // GIVEN\n        CharSeeker seeker = new BufferedCharSeeker( wrap( new StringReader( \"one:id\\ttwo\\t\\tdate:long\" ) ) );\n        IdType idType = IdType.ACTUAL;\n        Extractors extractors = new Extractors( '\\t' );\n\n        // WHEN\n        Header header = DataFactories.defaultFormatNodeFileHeader().create( seeker, TABS, idType );\n\n        // THEN\n        assertArrayEquals( array(\n                entry( \"one\", Type.ID, extractors.long_() ),\n                entry( \"two\", Type.PROPERTY, extractors.string() ),\n                entry( null, Type.IGNORE, null ),\n                entry( \"date\", Type.PROPERTY, extractors.long_() ) ), header.entries() );\n        seeker.close();\n    }","id":61385,"modified_method":"@Test\n    public void shouldHaveEmptyHeadersBeInterpretedAsIgnored() throws Exception\n    {\n        // GIVEN\n        CharSeeker seeker = seeker( \"one:id\\ttwo\\t\\tdate:long\" );\n        IdType idType = IdType.ACTUAL;\n        Extractors extractors = new Extractors( '\\t' );\n\n        // WHEN\n        Header header = DataFactories.defaultFormatNodeFileHeader().create( seeker, TABS, idType );\n\n        // THEN\n        assertArrayEquals( array(\n                entry( \"one\", Type.ID, extractors.long_() ),\n                entry( \"two\", Type.PROPERTY, extractors.string() ),\n                entry( null, Type.IGNORE, null ),\n                entry( \"date\", Type.PROPERTY, extractors.long_() ) ), header.entries() );\n        seeker.close();\n    }","commit_id":"70fdf5582a27c64ded89464880cfc77f89d8c161","url":"https://github.com/neo4j/neo4j"},{"original_method":"public static void main( String[] incomingArguments )\n    {\n        Args args = Args.parse( incomingArguments );\n        if ( asksForUsage( args ) )\n        {\n            printUsage( System.out );\n            return;\n        }\n\n        FileSystemAbstraction fs = new DefaultFileSystemAbstraction();\n        File storeDir;\n        Collection<Option<File[]>> nodesFiles, relationshipsFiles;\n        boolean enableStacktrace;\n        Number processors = null;\n        Input input = null;\n        String badFileName;\n        int badTolerance;\n        try\n        {\n            storeDir = args.interpretOption( Options.STORE_DIR.key(), Converters.<File>mandatory(),\n                    Converters.toFile(), Validators.DIRECTORY_IS_WRITABLE, Validators.CONTAINS_NO_EXISTING_DATABASE );\n            nodesFiles = INPUT_FILES_EXTRACTOR.apply( args, Options.NODE_DATA.key() );\n            relationshipsFiles = INPUT_FILES_EXTRACTOR.apply( args, Options.RELATIONSHIP_DATA.key() );\n            enableStacktrace = args.getBoolean( Options.STACKTRACE.key(), Boolean.FALSE, Boolean.TRUE );\n            processors = args.getNumber( Options.PROCESSORS.key(), null );\n            IdType idType = args.interpretOption( Options.ID_TYPE.key(),\n                    withDefault( (IdType)Options.ID_TYPE.defaultValue() ), TO_ID_TYPE );\n            badTolerance = args.getNumber( Options.BAD_TOLERANCE.key,\n                    (Number) Options.BAD_TOLERANCE.defaultValue() ).intValue();\n            badFileName = args.get( Options.BAD.key );\n            input = new CsvInput(\n                    nodeData( nodesFiles ), defaultFormatNodeFileHeader(),\n                    relationshipData( relationshipsFiles ), defaultFormatRelationshipFileHeader(),\n                    idType, csvConfiguration( args ), Collectors.badRelationships( badTolerance ) );\n        }\n        catch ( IllegalArgumentException e )\n        {\n            throw andPrintError( \"Input error\", e, false );\n        }\n\n        LifeSupport life = new LifeSupport();\n        Logging logging = life.add( new ClassicLoggingService(\n                new Config( stringMap( store_dir.name(), storeDir.getAbsolutePath() ) ) ) );\n        life.start();\n        org.neo4j.unsafe.impl.batchimport.Configuration config = importConfiguration( processors, badFileName );\n        BatchImporter importer = new ParallelBatchImporter( storeDir.getPath(),\n                config,\n                logging,\n                ExecutionMonitors.defaultVisible() );\n        boolean success = false;\n        try\n        {\n            importer.doImport( input );\n            success = true;\n        }\n        catch ( Exception e )\n        {\n            throw andPrintError( \"Import error\", e, enableStacktrace );\n        }\n        finally\n        {\n            File badRelationships = new File( config.badFileName() );\n            if ( badRelationships.exists() )\n            {\n                out.println(\"There were bad relationships which were skipped \" +\n                            \"and logged into \" + badRelationships.getAbsolutePath());\n            }\n\n            life.shutdown();\n            if ( !success )\n            {\n                try\n                {\n                    StoreFile.fileOperation( FileOperation.DELETE, fs, storeDir, null,\n                            Iterables.<StoreFile,StoreFile>iterable( StoreFile.values() ),\n                            false, false, StoreFileType.values() );\n                }\n                catch ( IOException e )\n                {\n                    System.err.println( \"Unable to delete store files after an aborted import \" + e );\n                    if ( enableStacktrace )\n                    {\n                        e.printStackTrace();\n                    }\n                }\n            }\n        }\n    }","id":61386,"modified_method":"/**\n     * Runs the import tool given the supplied arguments.\n     *\n     * @param incomingArguments arguments for specifying input and configuration for the import.\n     */\n    public static void main( String[] incomingArguments )\n    {\n        main( incomingArguments, false );\n    }","commit_id":"70fdf5582a27c64ded89464880cfc77f89d8c161","url":"https://github.com/neo4j/neo4j"},{"original_method":"private static Configuration csvConfiguration( Args args )\n    {\n        final Configuration defaultConfiguration = COMMAS;\n        final Character specificDelimiter =\n                args.interpretOption( Options.DELIMITER.key(), Converters.<Character>optional(), DELIMITER_CONVERTER );\n        final Character specificArrayDelimiter =\n                args.interpretOption( Options.ARRAY_DELIMITER.key(), Converters.<Character>optional(), DELIMITER_CONVERTER );\n        final Character specificQuote =\n                args.interpretOption( Options.QUOTE.key(), Converters.<Character>optional(), Converters.toCharacter() );\n        return new Configuration.Default()\n        {\n            @Override\n            public char delimiter()\n            {\n                return specificDelimiter != null\n                        ? specificDelimiter.charValue()\n                        : defaultConfiguration.delimiter();\n            }\n\n            @Override\n            public char arrayDelimiter()\n            {\n                return specificArrayDelimiter != null\n                        ? specificArrayDelimiter.charValue()\n                        : defaultConfiguration.arrayDelimiter();\n            }\n\n            @Override\n            public char quotationCharacter()\n            {\n                return specificQuote != null\n                        ? specificQuote.charValue()\n                        : defaultConfiguration.quotationCharacter();\n            }\n        };\n    }","id":61387,"modified_method":"private static Configuration csvConfiguration( Args args, final boolean defaultSettingsSuitableForTests )\n    {\n        final Configuration defaultConfiguration = COMMAS;\n        final Character specificDelimiter =\n                args.interpretOption( Options.DELIMITER.key(), Converters.<Character>optional(), DELIMITER_CONVERTER );\n        final Character specificArrayDelimiter =\n                args.interpretOption( Options.ARRAY_DELIMITER.key(), Converters.<Character>optional(), DELIMITER_CONVERTER );\n        final Character specificQuote =\n                args.interpretOption( Options.QUOTE.key(), Converters.<Character>optional(), Converters.toCharacter() );\n        return new Configuration.Default()\n        {\n            @Override\n            public char delimiter()\n            {\n                return specificDelimiter != null\n                        ? specificDelimiter.charValue()\n                        : defaultConfiguration.delimiter();\n            }\n\n            @Override\n            public char arrayDelimiter()\n            {\n                return specificArrayDelimiter != null\n                        ? specificArrayDelimiter.charValue()\n                        : defaultConfiguration.arrayDelimiter();\n            }\n\n            @Override\n            public char quotationCharacter()\n            {\n                return specificQuote != null\n                        ? specificQuote.charValue()\n                        : defaultConfiguration.quotationCharacter();\n            }\n\n            @Override\n            public int bufferSize()\n            {\n                return defaultSettingsSuitableForTests ? 10_000 : super.bufferSize();\n            }\n        };\n    }","commit_id":"70fdf5582a27c64ded89464880cfc77f89d8c161","url":"https://github.com/neo4j/neo4j"},{"original_method":"private static org.neo4j.unsafe.impl.batchimport.Configuration importConfiguration( final Number processors,\n            final String badFileName  )\n    {\n        return new org.neo4j.unsafe.impl.batchimport.Configuration.Default()\n        {\n            @Override\n            public int maxNumberOfProcessors()\n            {\n                return processors != null ? processors.intValue() : super.maxNumberOfProcessors();\n            }\n\n            @Override\n            public String badFileName()\n            {\n                return badFileName != null ? badFileName : super.badFileName();\n            }\n        };\n    }","id":61388,"modified_method":"private static org.neo4j.unsafe.impl.batchimport.Configuration importConfiguration( final Number processors,\n            final String badFileName, final boolean defaultSettingsSuitableForTests )\n    {\n        return new org.neo4j.unsafe.impl.batchimport.Configuration.Default()\n        {\n            @Override\n            public int maxNumberOfProcessors()\n            {\n                return processors != null ? processors.intValue() : super.maxNumberOfProcessors();\n            }\n\n            @Override\n            public String badFileName()\n            {\n                return badFileName != null ? badFileName : super.badFileName();\n            }\n\n            @Override\n            public int bigFileChannelBufferSizeMultiplier()\n            {\n                return defaultSettingsSuitableForTests ? 1 : super.bigFileChannelBufferSizeMultiplier();\n            }\n        };\n    }","commit_id":"70fdf5582a27c64ded89464880cfc77f89d8c161","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void basicCsvImportCustomDelimiterQuotation() throws Exception\n    {\n        // GIVEN\n        File movies = file( \"ops\", \"movies2.csv\" );\n        try (PrintStream out = new PrintStream( movies ))\n        {\n            out.println( \"movieId:ID;title;year:int;:LABEL\" );\n            out.println( \"tt0133093;'The Matrix';1999;Movie\" );\n            out.println( \"tt0234215;'The Matrix Reloaded';2003;Movie|Sequel\" );\n            out.println( \"tt0242653;'The Matrix Revolutions';2003;Movie|Sequel\" );\n        }\n\n        File actors = file( \"ops\", \"actors2.csv\" );\n        try (PrintStream out = new PrintStream( actors ))\n        {\n            out.println( \"personId:ID;name;:LABEL\" );\n            out.println( \"keanu;'Keanu Reeves';Actor\" );\n            out.println( \"laurence;'Laurence Fishburne';Actor\" );\n            out.println( \"carrieanne;'Carrie-Anne Moss';Actor\" );\n        }\n\n        File roles = file( \"ops\", \"roles2.csv\" );\n        try (PrintStream out = new PrintStream( roles ))\n        {\n            out.println( \":START_ID;role;:END_ID;:TYPE\" );\n            out.println( \"keanu;'Neo';tt0133093;ACTED_IN\" );\n            out.println( \"keanu;'Neo';tt0234215;ACTED_IN\" );\n            out.println( \"keanu;'Neo';tt0242653;ACTED_IN\" );\n            out.println( \"laurence;'Morpheus';tt0133093;ACTED_IN\" );\n            out.println( \"laurence;'Morpheus';tt0234215;ACTED_IN\" );\n            out.println( \"laurence;'Morpheus';tt0242653;ACTED_IN\" );\n            out.println( \"carrieanne;'Trinity';tt0133093;ACTED_IN\" );\n            out.println( \"carrieanne;'Trinity';tt0234215;ACTED_IN\" );\n            out.println( \"carrieanne;'Trinity';tt0242653;ACTED_IN\" );\n        }\n\n        // WHEN\n        String[] arguments = arguments(\n                \"--into\", directory.absolutePath(),\n                \"--nodes\", movies.getAbsolutePath(),\n                \"--nodes\", actors.getAbsolutePath(),\n                \"--relationships\", roles.getAbsolutePath(),\n                \"--delimiter\", \";\",\n                \"--array-delimiter\", \"|\",\n                \"--quote\", \"'\");\n        ImportTool.main( arguments );\n\n        // DOCS\n        String realDir = movies.getParentFile().getAbsolutePath();\n        printCommandToFile( arguments, realDir, \"custom-delimiter-quotation-command.adoc\" );\n\n        // THEN\n        verifyData();\n    }","id":61389,"modified_method":"@Test\n    public void basicCsvImportCustomDelimiterQuotation() throws Exception\n    {\n        // GIVEN\n        File movies = file( \"ops\", \"movies2.csv\" );\n        try (PrintStream out = new PrintStream( movies ))\n        {\n            out.println( \"movieId:ID;title;year:int;:LABEL\" );\n            out.println( \"tt0133093;'The Matrix';1999;Movie\" );\n            out.println( \"tt0234215;'The Matrix Reloaded';2003;Movie|Sequel\" );\n            out.println( \"tt0242653;'The Matrix Revolutions';2003;Movie|Sequel\" );\n        }\n\n        File actors = file( \"ops\", \"actors2.csv\" );\n        try (PrintStream out = new PrintStream( actors ))\n        {\n            out.println( \"personId:ID;name;:LABEL\" );\n            out.println( \"keanu;'Keanu Reeves';Actor\" );\n            out.println( \"laurence;'Laurence Fishburne';Actor\" );\n            out.println( \"carrieanne;'Carrie-Anne Moss';Actor\" );\n        }\n\n        File roles = file( \"ops\", \"roles2.csv\" );\n        try (PrintStream out = new PrintStream( roles ))\n        {\n            out.println( \":START_ID;role;:END_ID;:TYPE\" );\n            out.println( \"keanu;'Neo';tt0133093;ACTED_IN\" );\n            out.println( \"keanu;'Neo';tt0234215;ACTED_IN\" );\n            out.println( \"keanu;'Neo';tt0242653;ACTED_IN\" );\n            out.println( \"laurence;'Morpheus';tt0133093;ACTED_IN\" );\n            out.println( \"laurence;'Morpheus';tt0234215;ACTED_IN\" );\n            out.println( \"laurence;'Morpheus';tt0242653;ACTED_IN\" );\n            out.println( \"carrieanne;'Trinity';tt0133093;ACTED_IN\" );\n            out.println( \"carrieanne;'Trinity';tt0234215;ACTED_IN\" );\n            out.println( \"carrieanne;'Trinity';tt0242653;ACTED_IN\" );\n        }\n\n        // WHEN\n        String[] arguments = arguments(\n                \"--into\", directory.absolutePath(),\n                \"--nodes\", movies.getAbsolutePath(),\n                \"--nodes\", actors.getAbsolutePath(),\n                \"--relationships\", roles.getAbsolutePath(),\n                \"--delimiter\", \";\",\n                \"--array-delimiter\", \"|\",\n                \"--quote\", \"'\");\n        importTool( arguments );\n\n        // DOCS\n        String realDir = movies.getParentFile().getAbsolutePath();\n        printCommandToFile( arguments, realDir, \"custom-delimiter-quotation-command.adoc\" );\n\n        // THEN\n        verifyData();\n    }","commit_id":"70fdf5582a27c64ded89464880cfc77f89d8c161","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void propertyTypes() throws FileNotFoundException\n    {\n        // GIVEN\n        File movies = file( \"ops\", \"movies10.csv\" );\n        try (PrintStream out = new PrintStream( movies ))\n        {\n            out.println( \"movieId:ID,title,year:int,:LABEL\" );\n            out.println( \"tt0099892,\\\"Joe Versus the Volcano\\\",1990,Movie\" );\n        }\n\n        File actors = file( \"ops\", \"actors10.csv\" );\n        try (PrintStream out = new PrintStream( actors ))\n        {\n            out.println( \"personId:ID,name,:LABEL\" );\n            out.println( \"meg,\\\"Meg Ryan\\\",Actor\" );\n        }\n\n        File roles = file( \"ops\", \"roles10.csv\" );\n        try (PrintStream out = new PrintStream( roles ))\n        {\n            out.println( \":START_ID,roles:string[],:END_ID,:TYPE\" );\n            out.println( \"meg,\\\"DeDe;Angelica Graynamore;Patricia Graynamore\\\",tt0099892,ACTED_IN\" );\n        }\n\n        // WHEN\n        String[] arguments = arguments(\n                \"--into\", directory.absolutePath(),\n                \"--nodes\", movies.getAbsolutePath(),\n                \"--nodes\", actors.getAbsolutePath(),\n                \"--relationships\", roles.getAbsolutePath() );\n        ImportTool.main( arguments );\n\n        // DOCS\n        String realDir = movies.getParentFile().getAbsolutePath();\n        printCommandToFile( arguments, realDir, \"property-types.adoc\" );\n\n        // THEN\n        GraphDatabaseService db = new GraphDatabaseFactory().newEmbeddedDatabase( directory.absolutePath() );\n        try ( Transaction tx = db.beginTx() )\n        {\n            int nodeCount = 0, relationshipCount = 0;\n            for ( Node ignored : GlobalGraphOperations.at( db ).getAllNodes() )\n            {\n                nodeCount++;\n            }\n            assertEquals( 2, nodeCount );\n\n            for ( Relationship relationship : GlobalGraphOperations.at( db ).getAllRelationships() )\n            {\n                assertTrue( relationship.hasProperty( \"roles\" ) );\n\n                String[] retrievedRoles = (String[]) relationship.getProperty( \"roles\" );\n                assertEquals(3, retrievedRoles.length);\n\n                relationshipCount++;\n            }\n            assertEquals( 1, relationshipCount );\n\n            tx.success();\n        }\n        finally\n        {\n            db.shutdown();\n        }\n    }","id":61390,"modified_method":"@Test\n    public void propertyTypes() throws FileNotFoundException\n    {\n        // GIVEN\n        File movies = file( \"ops\", \"movies10.csv\" );\n        try (PrintStream out = new PrintStream( movies ))\n        {\n            out.println( \"movieId:ID,title,year:int,:LABEL\" );\n            out.println( \"tt0099892,\\\"Joe Versus the Volcano\\\",1990,Movie\" );\n        }\n\n        File actors = file( \"ops\", \"actors10.csv\" );\n        try (PrintStream out = new PrintStream( actors ))\n        {\n            out.println( \"personId:ID,name,:LABEL\" );\n            out.println( \"meg,\\\"Meg Ryan\\\",Actor\" );\n        }\n\n        File roles = file( \"ops\", \"roles10.csv\" );\n        try (PrintStream out = new PrintStream( roles ))\n        {\n            out.println( \":START_ID,roles:string[],:END_ID,:TYPE\" );\n            out.println( \"meg,\\\"DeDe;Angelica Graynamore;Patricia Graynamore\\\",tt0099892,ACTED_IN\" );\n        }\n\n        // WHEN\n        String[] arguments = arguments(\n                \"--into\", directory.absolutePath(),\n                \"--nodes\", movies.getAbsolutePath(),\n                \"--nodes\", actors.getAbsolutePath(),\n                \"--relationships\", roles.getAbsolutePath() );\n        importTool( arguments );\n\n        // DOCS\n        String realDir = movies.getParentFile().getAbsolutePath();\n        printCommandToFile( arguments, realDir, \"property-types.adoc\" );\n\n        // THEN\n        GraphDatabaseService db = new GraphDatabaseFactory().newEmbeddedDatabase( directory.absolutePath() );\n        try ( Transaction tx = db.beginTx() )\n        {\n            int nodeCount = 0, relationshipCount = 0;\n            for ( Node ignored : GlobalGraphOperations.at( db ).getAllNodes() )\n            {\n                nodeCount++;\n            }\n            assertEquals( 2, nodeCount );\n\n            for ( Relationship relationship : GlobalGraphOperations.at( db ).getAllRelationships() )\n            {\n                assertTrue( relationship.hasProperty( \"roles\" ) );\n\n                String[] retrievedRoles = (String[]) relationship.getProperty( \"roles\" );\n                assertEquals(3, retrievedRoles.length);\n\n                relationshipCount++;\n            }\n            assertEquals( 1, relationshipCount );\n\n            tx.success();\n        }\n        finally\n        {\n            db.shutdown();\n        }\n    }","commit_id":"70fdf5582a27c64ded89464880cfc77f89d8c161","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void basicCsvImport() throws Exception\n    {\n        // GIVEN\n        File movies = file( \"ops\", \"movies.csv\" );\n        try (PrintStream out = new PrintStream( movies ))\n        {\n            out.println( \"movieId:ID,title,year:int,:LABEL\" );\n            out.println( \"tt0133093,\\\"The Matrix\\\",1999,Movie\" );\n            out.println( \"tt0234215,\\\"The Matrix Reloaded\\\",2003,Movie;Sequel\" );\n            out.println( \"tt0242653,\\\"The Matrix Revolutions\\\",2003,Movie;Sequel\" );\n        }\n\n        File actors = file( \"ops\", \"actors.csv\" );\n        try (PrintStream out = new PrintStream( actors ))\n        {\n            out.println( \"personId:ID,name,:LABEL\" );\n            out.println( \"keanu,\\\"Keanu Reeves\\\",Actor\" );\n            out.println( \"laurence,\\\"Laurence Fishburne\\\",Actor\" );\n            out.println( \"carrieanne,\\\"Carrie-Anne Moss\\\",Actor\" );\n        }\n\n        File roles = file( \"ops\", \"roles.csv\" );\n        try (PrintStream out = new PrintStream( roles ))\n        {\n            out.println( \":START_ID,role,:END_ID,:TYPE\" );\n            out.println( \"keanu,\\\"Neo\\\",tt0133093,ACTED_IN\" );\n            out.println( \"keanu,\\\"Neo\\\",tt0234215,ACTED_IN\" );\n            out.println( \"keanu,\\\"Neo\\\",tt0242653,ACTED_IN\" );\n            out.println( \"laurence,\\\"Morpheus\\\",tt0133093,ACTED_IN\" );\n            out.println( \"laurence,\\\"Morpheus\\\",tt0234215,ACTED_IN\" );\n            out.println( \"laurence,\\\"Morpheus\\\",tt0242653,ACTED_IN\" );\n            out.println( \"carrieanne,\\\"Trinity\\\",tt0133093,ACTED_IN\" );\n            out.println( \"carrieanne,\\\"Trinity\\\",tt0234215,ACTED_IN\" );\n            out.println( \"carrieanne,\\\"Trinity\\\",tt0242653,ACTED_IN\" );\n        }\n\n        // WHEN\n        String[] arguments = arguments(\n                \"--into\", directory.absolutePath(),\n                \"--nodes\", movies.getAbsolutePath(),\n                \"--nodes\", actors.getAbsolutePath(),\n                \"--relationships\", roles.getAbsolutePath() );\n        ImportTool.main( arguments );\n\n        // DOCS\n        String realDir = movies.getParentFile().getAbsolutePath();\n        printCommandToFile( arguments, realDir, \"example-command.adoc\" );\n\n        // THEN\n        verifyData();\n    }","id":61391,"modified_method":"@Test\n    public void basicCsvImport() throws Exception\n    {\n        // GIVEN\n        File movies = file( \"ops\", \"movies.csv\" );\n        try (PrintStream out = new PrintStream( movies ))\n        {\n            out.println( \"movieId:ID,title,year:int,:LABEL\" );\n            out.println( \"tt0133093,\\\"The Matrix\\\",1999,Movie\" );\n            out.println( \"tt0234215,\\\"The Matrix Reloaded\\\",2003,Movie;Sequel\" );\n            out.println( \"tt0242653,\\\"The Matrix Revolutions\\\",2003,Movie;Sequel\" );\n        }\n\n        File actors = file( \"ops\", \"actors.csv\" );\n        try (PrintStream out = new PrintStream( actors ))\n        {\n            out.println( \"personId:ID,name,:LABEL\" );\n            out.println( \"keanu,\\\"Keanu Reeves\\\",Actor\" );\n            out.println( \"laurence,\\\"Laurence Fishburne\\\",Actor\" );\n            out.println( \"carrieanne,\\\"Carrie-Anne Moss\\\",Actor\" );\n        }\n\n        File roles = file( \"ops\", \"roles.csv\" );\n        try (PrintStream out = new PrintStream( roles ))\n        {\n            out.println( \":START_ID,role,:END_ID,:TYPE\" );\n            out.println( \"keanu,\\\"Neo\\\",tt0133093,ACTED_IN\" );\n            out.println( \"keanu,\\\"Neo\\\",tt0234215,ACTED_IN\" );\n            out.println( \"keanu,\\\"Neo\\\",tt0242653,ACTED_IN\" );\n            out.println( \"laurence,\\\"Morpheus\\\",tt0133093,ACTED_IN\" );\n            out.println( \"laurence,\\\"Morpheus\\\",tt0234215,ACTED_IN\" );\n            out.println( \"laurence,\\\"Morpheus\\\",tt0242653,ACTED_IN\" );\n            out.println( \"carrieanne,\\\"Trinity\\\",tt0133093,ACTED_IN\" );\n            out.println( \"carrieanne,\\\"Trinity\\\",tt0234215,ACTED_IN\" );\n            out.println( \"carrieanne,\\\"Trinity\\\",tt0242653,ACTED_IN\" );\n        }\n\n        // WHEN\n        String[] arguments = arguments(\n                \"--into\", directory.absolutePath(),\n                \"--nodes\", movies.getAbsolutePath(),\n                \"--nodes\", actors.getAbsolutePath(),\n                \"--relationships\", roles.getAbsolutePath() );\n        importTool( arguments );\n\n        // DOCS\n        String realDir = movies.getParentFile().getAbsolutePath();\n        printCommandToFile( arguments, realDir, \"example-command.adoc\" );\n\n        // THEN\n        verifyData();\n    }","commit_id":"70fdf5582a27c64ded89464880cfc77f89d8c161","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void idSpaces() throws FileNotFoundException\n    {\n        // GIVEN\n        File movies = file( \"ops\", \"movies7.csv\" );\n        try (PrintStream out = new PrintStream( movies ))\n        {\n            out.println( \"movieId:ID(Movie),title,year:int,:LABEL\" );\n            out.println( \"1,\\\"The Matrix\\\",1999,Movie\" );\n            out.println( \"2,\\\"The Matrix Reloaded\\\",2003,Movie;Sequel\" );\n            out.println( \"3,\\\"The Matrix Revolutions\\\",2003,Movie;Sequel\" );\n        }\n\n        File actors = file( \"ops\", \"actors7.csv\" );\n        try (PrintStream out = new PrintStream( actors ))\n        {\n            out.println( \"personId:ID(Actor),name,:LABEL\" );\n            out.println( \"1,\\\"Keanu Reeves\\\",Actor\" );\n            out.println( \"2,\\\"Laurence Fishburne\\\",Actor\" );\n            out.println( \"3,\\\"Carrie-Anne Moss\\\",Actor\" );\n        }\n\n        File roles = file( \"ops\", \"roles7.csv\" );\n        try ( PrintStream out = new PrintStream( roles ) )\n        {\n            out.println( \":START_ID(Actor),role,:END_ID(Movie)\" );\n            out.println( \"1,\\\"Neo\\\",1\" );\n            out.println( \"1,\\\"Neo\\\",2\" );\n            out.println( \"1,\\\"Neo\\\",3\" );\n            out.println( \"2,\\\"Morpheus\\\",1\" );\n            out.println( \"2,\\\"Morpheus\\\",2\" );\n            out.println( \"2,\\\"Morpheus\\\",3\" );\n            out.println( \"3,\\\"Trinity\\\",1\" );\n            out.println( \"3,\\\"Trinity\\\",2\" );\n            out.println( \"3,\\\"Trinity\\\",3\" );\n        }\n        // WHEN\n        String[] arguments = arguments(\n                \"--into\", directory.absolutePath(),\n                \"--nodes\", movies.getAbsolutePath(),\n                \"--nodes\", actors.getAbsolutePath(),\n                \"--relationships:\" + join( new String[] { \"ACTED_IN\" }, \":\" ), roles.getAbsolutePath());\n        ImportTool.main( arguments );\n\n        // DOCS\n        String realDir = movies.getParentFile().getAbsolutePath();\n        printCommandToFile( arguments, realDir, \"id-spaces.adoc\" );\n\n        // THEN\n        verifyData();\n    }","id":61392,"modified_method":"@Test\n    public void idSpaces() throws FileNotFoundException\n    {\n        // GIVEN\n        File movies = file( \"ops\", \"movies7.csv\" );\n        try (PrintStream out = new PrintStream( movies ))\n        {\n            out.println( \"movieId:ID(Movie),title,year:int,:LABEL\" );\n            out.println( \"1,\\\"The Matrix\\\",1999,Movie\" );\n            out.println( \"2,\\\"The Matrix Reloaded\\\",2003,Movie;Sequel\" );\n            out.println( \"3,\\\"The Matrix Revolutions\\\",2003,Movie;Sequel\" );\n        }\n\n        File actors = file( \"ops\", \"actors7.csv\" );\n        try (PrintStream out = new PrintStream( actors ))\n        {\n            out.println( \"personId:ID(Actor),name,:LABEL\" );\n            out.println( \"1,\\\"Keanu Reeves\\\",Actor\" );\n            out.println( \"2,\\\"Laurence Fishburne\\\",Actor\" );\n            out.println( \"3,\\\"Carrie-Anne Moss\\\",Actor\" );\n        }\n\n        File roles = file( \"ops\", \"roles7.csv\" );\n        try ( PrintStream out = new PrintStream( roles ) )\n        {\n            out.println( \":START_ID(Actor),role,:END_ID(Movie)\" );\n            out.println( \"1,\\\"Neo\\\",1\" );\n            out.println( \"1,\\\"Neo\\\",2\" );\n            out.println( \"1,\\\"Neo\\\",3\" );\n            out.println( \"2,\\\"Morpheus\\\",1\" );\n            out.println( \"2,\\\"Morpheus\\\",2\" );\n            out.println( \"2,\\\"Morpheus\\\",3\" );\n            out.println( \"3,\\\"Trinity\\\",1\" );\n            out.println( \"3,\\\"Trinity\\\",2\" );\n            out.println( \"3,\\\"Trinity\\\",3\" );\n        }\n        // WHEN\n        String[] arguments = arguments(\n                \"--into\", directory.absolutePath(),\n                \"--nodes\", movies.getAbsolutePath(),\n                \"--nodes\", actors.getAbsolutePath(),\n                \"--relationships:\" + join( new String[] { \"ACTED_IN\" }, \":\" ), roles.getAbsolutePath());\n        importTool( arguments );\n\n        // DOCS\n        String realDir = movies.getParentFile().getAbsolutePath();\n        printCommandToFile( arguments, realDir, \"id-spaces.adoc\" );\n\n        // THEN\n        verifyData();\n    }","commit_id":"70fdf5582a27c64ded89464880cfc77f89d8c161","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void separateHeadersCsvImport() throws Exception\n    {\n        // GIVEN\n        File moviesHeader = file( \"ops\", \"movies3-header.csv\" );\n        try ( PrintStream out = new PrintStream( moviesHeader ) )\n        {\n            out.println( \"movieId:ID,title,year:int,:LABEL\" );\n        }\n        File movies = file( \"ops\", \"movies3.csv\" );\n        try ( PrintStream out = new PrintStream( movies ) )\n        {\n            out.println( \"tt0133093,\\\"The Matrix\\\",1999,Movie\" );\n            out.println( \"tt0234215,\\\"The Matrix Reloaded\\\",2003,Movie;Sequel\" );\n            out.println( \"tt0242653,\\\"The Matrix Revolutions\\\",2003,Movie;Sequel\" );\n        }\n        File actorsHeader = file( \"ops\", \"actors3-header.csv\" );\n        try ( PrintStream out = new PrintStream( actorsHeader ) )\n        {\n            out.println( \"personId:ID,name,:LABEL\" );\n        }\n        File actors = file( \"ops\", \"actors3.csv\" );\n        try ( PrintStream out = new PrintStream( actors ) )\n        {\n            out.println( \"keanu,\\\"Keanu Reeves\\\",Actor\" );\n            out.println( \"laurence,\\\"Laurence Fishburne\\\",Actor\" );\n            out.println( \"carrieanne,\\\"Carrie-Anne Moss\\\",Actor\" );\n        }\n        File rolesHeader = file( \"ops\", \"roles3-header.csv\" );\n        try ( PrintStream out = new PrintStream( rolesHeader ) )\n        {\n            out.println( \":START_ID,role,:END_ID,:TYPE\" );\n        }\n        File roles = file( \"ops\", \"roles3.csv\" );\n        try ( PrintStream out = new PrintStream( roles ) )\n        {\n            out.println( \"keanu,\\\"Neo\\\",tt0133093,ACTED_IN\" );\n            out.println( \"keanu,\\\"Neo\\\",tt0234215,ACTED_IN\" );\n            out.println( \"keanu,\\\"Neo\\\",tt0242653,ACTED_IN\" );\n            out.println( \"laurence,\\\"Morpheus\\\",tt0133093,ACTED_IN\" );\n            out.println( \"laurence,\\\"Morpheus\\\",tt0234215,ACTED_IN\" );\n            out.println( \"laurence,\\\"Morpheus\\\",tt0242653,ACTED_IN\" );\n            out.println( \"carrieanne,\\\"Trinity\\\",tt0133093,ACTED_IN\" );\n            out.println( \"carrieanne,\\\"Trinity\\\",tt0234215,ACTED_IN\" );\n            out.println( \"carrieanne,\\\"Trinity\\\",tt0242653,ACTED_IN\" );\n        }\n\n        // WHEN\n        String[] arguments = arguments(\n                \"--into\", directory.absolutePath(),\n                \"--nodes\", moviesHeader.getAbsolutePath() + MULTI_FILE_DELIMITER + movies.getAbsolutePath(),\n                \"--nodes\", actorsHeader.getAbsolutePath() + MULTI_FILE_DELIMITER + actors.getAbsolutePath(),\n                \"--relationships\", rolesHeader.getAbsolutePath() + MULTI_FILE_DELIMITER + roles.getAbsolutePath());\n        ImportTool.main( arguments );\n\n        // DOCS\n        String realDir = movies.getParentFile().getAbsolutePath();\n        printCommandToFile( arguments, realDir, \"separate-header-example-command.adoc\" );\n\n        // THEN\n        verifyData();\n    }","id":61393,"modified_method":"@Test\n    public void separateHeadersCsvImport() throws Exception\n    {\n        // GIVEN\n        File moviesHeader = file( \"ops\", \"movies3-header.csv\" );\n        try ( PrintStream out = new PrintStream( moviesHeader ) )\n        {\n            out.println( \"movieId:ID,title,year:int,:LABEL\" );\n        }\n        File movies = file( \"ops\", \"movies3.csv\" );\n        try ( PrintStream out = new PrintStream( movies ) )\n        {\n            out.println( \"tt0133093,\\\"The Matrix\\\",1999,Movie\" );\n            out.println( \"tt0234215,\\\"The Matrix Reloaded\\\",2003,Movie;Sequel\" );\n            out.println( \"tt0242653,\\\"The Matrix Revolutions\\\",2003,Movie;Sequel\" );\n        }\n        File actorsHeader = file( \"ops\", \"actors3-header.csv\" );\n        try ( PrintStream out = new PrintStream( actorsHeader ) )\n        {\n            out.println( \"personId:ID,name,:LABEL\" );\n        }\n        File actors = file( \"ops\", \"actors3.csv\" );\n        try ( PrintStream out = new PrintStream( actors ) )\n        {\n            out.println( \"keanu,\\\"Keanu Reeves\\\",Actor\" );\n            out.println( \"laurence,\\\"Laurence Fishburne\\\",Actor\" );\n            out.println( \"carrieanne,\\\"Carrie-Anne Moss\\\",Actor\" );\n        }\n        File rolesHeader = file( \"ops\", \"roles3-header.csv\" );\n        try ( PrintStream out = new PrintStream( rolesHeader ) )\n        {\n            out.println( \":START_ID,role,:END_ID,:TYPE\" );\n        }\n        File roles = file( \"ops\", \"roles3.csv\" );\n        try ( PrintStream out = new PrintStream( roles ) )\n        {\n            out.println( \"keanu,\\\"Neo\\\",tt0133093,ACTED_IN\" );\n            out.println( \"keanu,\\\"Neo\\\",tt0234215,ACTED_IN\" );\n            out.println( \"keanu,\\\"Neo\\\",tt0242653,ACTED_IN\" );\n            out.println( \"laurence,\\\"Morpheus\\\",tt0133093,ACTED_IN\" );\n            out.println( \"laurence,\\\"Morpheus\\\",tt0234215,ACTED_IN\" );\n            out.println( \"laurence,\\\"Morpheus\\\",tt0242653,ACTED_IN\" );\n            out.println( \"carrieanne,\\\"Trinity\\\",tt0133093,ACTED_IN\" );\n            out.println( \"carrieanne,\\\"Trinity\\\",tt0234215,ACTED_IN\" );\n            out.println( \"carrieanne,\\\"Trinity\\\",tt0242653,ACTED_IN\" );\n        }\n\n        // WHEN\n        String[] arguments = arguments(\n                \"--into\", directory.absolutePath(),\n                \"--nodes\", moviesHeader.getAbsolutePath() + MULTI_FILE_DELIMITER + movies.getAbsolutePath(),\n                \"--nodes\", actorsHeader.getAbsolutePath() + MULTI_FILE_DELIMITER + actors.getAbsolutePath(),\n                \"--relationships\", rolesHeader.getAbsolutePath() + MULTI_FILE_DELIMITER + roles.getAbsolutePath());\n        importTool( arguments );\n\n        // DOCS\n        String realDir = movies.getParentFile().getAbsolutePath();\n        printCommandToFile( arguments, realDir, \"separate-header-example-command.adoc\" );\n\n        // THEN\n        verifyData();\n    }","commit_id":"70fdf5582a27c64ded89464880cfc77f89d8c161","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void sameRelationshipTypeEverywhere() throws FileNotFoundException\n    {\n        // GIVEN\n        File movies = file( \"ops\", \"movies6.csv\" );\n        try (PrintStream out = new PrintStream( movies ))\n        {\n            out.println( \"movieId:ID,title,year:int,:LABEL\" );\n            out.println( \"tt0133093,\\\"The Matrix\\\",1999,Movie\" );\n            out.println( \"tt0234215,\\\"The Matrix Reloaded\\\",2003,Movie;Sequel\" );\n            out.println( \"tt0242653,\\\"The Matrix Revolutions\\\",2003,Movie;Sequel\" );\n        }\n\n        File actors = file( \"ops\", \"actors6.csv\" );\n        try (PrintStream out = new PrintStream( actors ))\n        {\n            out.println( \"personId:ID,name,:LABEL\" );\n            out.println( \"keanu,\\\"Keanu Reeves\\\",Actor\" );\n            out.println( \"laurence,\\\"Laurence Fishburne\\\",Actor\" );\n            out.println( \"carrieanne,\\\"Carrie-Anne Moss\\\",Actor\" );\n        }\n\n        File roles = file( \"ops\", \"roles6.csv\" );\n        try ( PrintStream out = new PrintStream( roles ) )\n        {\n            out.println( \":START_ID,role,:END_ID\" );\n            out.println( \"keanu,\\\"Neo\\\",tt0133093\" );\n            out.println( \"keanu,\\\"Neo\\\",tt0234215\" );\n            out.println( \"keanu,\\\"Neo\\\",tt0242653\" );\n            out.println( \"laurence,\\\"Morpheus\\\",tt0133093\" );\n            out.println( \"laurence,\\\"Morpheus\\\",tt0234215\" );\n            out.println( \"laurence,\\\"Morpheus\\\",tt0242653\" );\n            out.println( \"carrieanne,\\\"Trinity\\\",tt0133093\" );\n            out.println( \"carrieanne,\\\"Trinity\\\",tt0234215\" );\n            out.println( \"carrieanne,\\\"Trinity\\\",tt0242653\" );\n        }\n        // WHEN\n        String[] arguments = arguments(\n                \"--into\", directory.absolutePath(),\n                \"--nodes\", movies.getAbsolutePath(),\n                \"--nodes\", actors.getAbsolutePath(),\n                \"--relationships:\" + join( new String[] { \"ACTED_IN\" }, \":\" ), roles.getAbsolutePath());\n        ImportTool.main( arguments );\n\n        // DOCS\n        String realDir = movies.getParentFile().getAbsolutePath();\n        printCommandToFile( arguments, realDir, \"same-relationship-type-everywhere.adoc\" );\n\n        // THEN\n        verifyData();\n    }","id":61394,"modified_method":"@Test\n    public void sameRelationshipTypeEverywhere() throws FileNotFoundException\n    {\n        // GIVEN\n        File movies = file( \"ops\", \"movies6.csv\" );\n        try (PrintStream out = new PrintStream( movies ))\n        {\n            out.println( \"movieId:ID,title,year:int,:LABEL\" );\n            out.println( \"tt0133093,\\\"The Matrix\\\",1999,Movie\" );\n            out.println( \"tt0234215,\\\"The Matrix Reloaded\\\",2003,Movie;Sequel\" );\n            out.println( \"tt0242653,\\\"The Matrix Revolutions\\\",2003,Movie;Sequel\" );\n        }\n\n        File actors = file( \"ops\", \"actors6.csv\" );\n        try (PrintStream out = new PrintStream( actors ))\n        {\n            out.println( \"personId:ID,name,:LABEL\" );\n            out.println( \"keanu,\\\"Keanu Reeves\\\",Actor\" );\n            out.println( \"laurence,\\\"Laurence Fishburne\\\",Actor\" );\n            out.println( \"carrieanne,\\\"Carrie-Anne Moss\\\",Actor\" );\n        }\n\n        File roles = file( \"ops\", \"roles6.csv\" );\n        try ( PrintStream out = new PrintStream( roles ) )\n        {\n            out.println( \":START_ID,role,:END_ID\" );\n            out.println( \"keanu,\\\"Neo\\\",tt0133093\" );\n            out.println( \"keanu,\\\"Neo\\\",tt0234215\" );\n            out.println( \"keanu,\\\"Neo\\\",tt0242653\" );\n            out.println( \"laurence,\\\"Morpheus\\\",tt0133093\" );\n            out.println( \"laurence,\\\"Morpheus\\\",tt0234215\" );\n            out.println( \"laurence,\\\"Morpheus\\\",tt0242653\" );\n            out.println( \"carrieanne,\\\"Trinity\\\",tt0133093\" );\n            out.println( \"carrieanne,\\\"Trinity\\\",tt0234215\" );\n            out.println( \"carrieanne,\\\"Trinity\\\",tt0242653\" );\n        }\n        // WHEN\n        String[] arguments = arguments(\n                \"--into\", directory.absolutePath(),\n                \"--nodes\", movies.getAbsolutePath(),\n                \"--nodes\", actors.getAbsolutePath(),\n                \"--relationships:\" + join( new String[] { \"ACTED_IN\" }, \":\" ), roles.getAbsolutePath());\n        importTool( arguments );\n\n        // DOCS\n        String realDir = movies.getParentFile().getAbsolutePath();\n        printCommandToFile( arguments, realDir, \"same-relationship-type-everywhere.adoc\" );\n\n        // THEN\n        verifyData();\n    }","commit_id":"70fdf5582a27c64ded89464880cfc77f89d8c161","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void sameNodeLabelEverywhere() throws FileNotFoundException\n    {\n        // GIVEN\n        File movies = file( \"ops\", \"movies5.csv\" );\n        try (PrintStream out = new PrintStream( movies ))\n        {\n            out.println( \"movieId:ID,title,year:int\" );\n            out.println( \"tt0133093,\\\"The Matrix\\\",1999\" );\n        }\n\n        File sequels = file( \"ops\", \"sequels5.csv\" );\n        try (PrintStream out = new PrintStream( sequels ))\n        {\n            out.println( \"movieId:ID,title,year:int\" );\n            out.println( \"tt0234215,\\\"The Matrix Reloaded\\\",2003\" );\n            out.println( \"tt0242653,\\\"The Matrix Revolutions\\\",2003\" );\n        }\n\n        File actors = file( \"ops\", \"actors5.csv\" );\n        try (PrintStream out = new PrintStream( actors ))\n        {\n            out.println( \"personId:ID,name\" );\n            out.println( \"keanu,\\\"Keanu Reeves\\\"\" );\n            out.println( \"laurence,\\\"Laurence Fishburne\\\"\" );\n            out.println( \"carrieanne,\\\"Carrie-Anne Moss\\\"\" );\n        }\n\n        File roles = file( \"ops\", \"roles5.csv\" );\n        try ( PrintStream out = new PrintStream( roles ) )\n        {\n            out.println( \":START_ID,role,:END_ID,:TYPE\" );\n            out.println( \"keanu,\\\"Neo\\\",tt0133093,ACTED_IN\" );\n            out.println( \"keanu,\\\"Neo\\\",tt0234215,ACTED_IN\" );\n            out.println( \"keanu,\\\"Neo\\\",tt0242653,ACTED_IN\" );\n            out.println( \"laurence,\\\"Morpheus\\\",tt0133093,ACTED_IN\" );\n            out.println( \"laurence,\\\"Morpheus\\\",tt0234215,ACTED_IN\" );\n            out.println( \"laurence,\\\"Morpheus\\\",tt0242653,ACTED_IN\" );\n            out.println( \"carrieanne,\\\"Trinity\\\",tt0133093,ACTED_IN\" );\n            out.println( \"carrieanne,\\\"Trinity\\\",tt0234215,ACTED_IN\" );\n            out.println( \"carrieanne,\\\"Trinity\\\",tt0242653,ACTED_IN\" );\n        }\n        // WHEN\n        String[] arguments = arguments(\n                \"--into\", directory.absolutePath(),\n                \"--nodes:\" + join( new String[] { \"Movie\" }, \":\" ),\n                    movies.getAbsolutePath(),\n                \"--nodes:\" + join( new String[] { \"Movie\", \"Sequel\" }, \":\" ),\n                    sequels.getAbsolutePath(),\n                \"--nodes:\" + join( new String[] { \"Actor\" }, \":\" ),\n                    actors.getAbsolutePath(),\n                \"--relationships\", roles.getAbsolutePath() );\n        ImportTool.main( arguments );\n\n        // DOCS\n        String realDir = movies.getParentFile().getAbsolutePath();\n        printCommandToFile( arguments, realDir, \"same-node-label-everywhere.adoc\" );\n\n        // THEN\n        verifyData();\n    }","id":61395,"modified_method":"@Test\n    public void sameNodeLabelEverywhere() throws FileNotFoundException\n    {\n        // GIVEN\n        File movies = file( \"ops\", \"movies5.csv\" );\n        try (PrintStream out = new PrintStream( movies ))\n        {\n            out.println( \"movieId:ID,title,year:int\" );\n            out.println( \"tt0133093,\\\"The Matrix\\\",1999\" );\n        }\n\n        File sequels = file( \"ops\", \"sequels5.csv\" );\n        try (PrintStream out = new PrintStream( sequels ))\n        {\n            out.println( \"movieId:ID,title,year:int\" );\n            out.println( \"tt0234215,\\\"The Matrix Reloaded\\\",2003\" );\n            out.println( \"tt0242653,\\\"The Matrix Revolutions\\\",2003\" );\n        }\n\n        File actors = file( \"ops\", \"actors5.csv\" );\n        try (PrintStream out = new PrintStream( actors ))\n        {\n            out.println( \"personId:ID,name\" );\n            out.println( \"keanu,\\\"Keanu Reeves\\\"\" );\n            out.println( \"laurence,\\\"Laurence Fishburne\\\"\" );\n            out.println( \"carrieanne,\\\"Carrie-Anne Moss\\\"\" );\n        }\n\n        File roles = file( \"ops\", \"roles5.csv\" );\n        try ( PrintStream out = new PrintStream( roles ) )\n        {\n            out.println( \":START_ID,role,:END_ID,:TYPE\" );\n            out.println( \"keanu,\\\"Neo\\\",tt0133093,ACTED_IN\" );\n            out.println( \"keanu,\\\"Neo\\\",tt0234215,ACTED_IN\" );\n            out.println( \"keanu,\\\"Neo\\\",tt0242653,ACTED_IN\" );\n            out.println( \"laurence,\\\"Morpheus\\\",tt0133093,ACTED_IN\" );\n            out.println( \"laurence,\\\"Morpheus\\\",tt0234215,ACTED_IN\" );\n            out.println( \"laurence,\\\"Morpheus\\\",tt0242653,ACTED_IN\" );\n            out.println( \"carrieanne,\\\"Trinity\\\",tt0133093,ACTED_IN\" );\n            out.println( \"carrieanne,\\\"Trinity\\\",tt0234215,ACTED_IN\" );\n            out.println( \"carrieanne,\\\"Trinity\\\",tt0242653,ACTED_IN\" );\n        }\n        // WHEN\n        String[] arguments = arguments(\n                \"--into\", directory.absolutePath(),\n                \"--nodes:\" + join( new String[] { \"Movie\" }, \":\" ),\n                    movies.getAbsolutePath(),\n                \"--nodes:\" + join( new String[] { \"Movie\", \"Sequel\" }, \":\" ),\n                    sequels.getAbsolutePath(),\n                \"--nodes:\" + join( new String[] { \"Actor\" }, \":\" ),\n                    actors.getAbsolutePath(),\n                \"--relationships\", roles.getAbsolutePath() );\n        importTool( arguments );\n\n        // DOCS\n        String realDir = movies.getParentFile().getAbsolutePath();\n        printCommandToFile( arguments, realDir, \"same-node-label-everywhere.adoc\" );\n\n        // THEN\n        verifyData();\n    }","commit_id":"70fdf5582a27c64ded89464880cfc77f89d8c161","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void badRelationshipsDefault() throws IOException\n    {\n        // GIVEN\n        File movies = file( \"ops\", \"movies9.csv\" );\n        try (PrintStream out = new PrintStream( movies ))\n        {\n            out.println( \"movieId:ID,title,year:int,:LABEL\" );\n            out.println( \"tt0133093,\\\"The Matrix\\\",1999,Movie\" );\n            out.println( \"tt0234215,\\\"The Matrix Reloaded\\\",2003,Movie;Sequel\" );\n            out.println( \"tt0242653,\\\"The Matrix Revolutions\\\",2003,Movie;Sequel\" );\n        }\n\n        File actors = file( \"ops\", \"actors9.csv\" );\n        try (PrintStream out = new PrintStream( actors ))\n        {\n            out.println( \"personId:ID,name,:LABEL\" );\n            out.println( \"keanu,\\\"Keanu Reeves\\\",Actor\" );\n            out.println( \"laurence,\\\"Laurence Fishburne\\\",Actor\" );\n            out.println( \"carrieanne,\\\"Carrie-Anne Moss\\\",Actor\" );\n        }\n\n        File roles = file( \"ops\", \"roles9.csv\" );\n        try (PrintStream out = new PrintStream( roles ))\n        {\n            out.println( \":START_ID,role,:END_ID,:TYPE\" );\n            out.println( \"keanu,\\\"Neo\\\",tt0133093,ACTED_IN\" );\n            out.println( \"keanu,\\\"Neo\\\",tt0234215,ACTED_IN\" );\n            out.println( \"keanu,\\\"Neo\\\",tt0242653,ACTED_IN\" );\n            out.println( \"laurence,\\\"Morpheus\\\",tt0133093,ACTED_IN\" );\n            out.println( \"laurence,\\\"Morpheus\\\",tt0234215,ACTED_IN\" );\n            out.println( \"laurence,\\\"Morpheus\\\",tt0242653,ACTED_IN\" );\n            out.println( \"carrieanne,\\\"Trinity\\\",tt0133093,ACTED_IN\" );\n            out.println( \"carrieanne,\\\"Trinity\\\",tt0234215,ACTED_IN\" );\n            out.println( \"carrieanne,\\\"Trinity\\\",tt0242653,ACTED_IN\" );\n            out.println( \"emil,\\\"Emil\\\",tt0133093,ACTED_IN\" );\n        }\n\n        // WHEN\n        String[] arguments = arguments(\n                \"--into\", directory.absolutePath(),\n                \"--nodes\", movies.getAbsolutePath(),\n                \"--nodes\", actors.getAbsolutePath(),\n                \"--relationships\", roles.getAbsolutePath() );\n        ImportTool.main( arguments );\n\n        // DOCS\n        String realDir = movies.getParentFile().getAbsolutePath();\n        printCommandToFile( arguments, realDir, \"bad-relationships-default.adoc\" );\n        FileUtils.copyFile(new File(new Configuration.Default().badFileName()),\n                file( \"ops\", \"bad-relationships-default-not-imported.bad.adoc\" ) );\n\n        // THEN\n        verifyData();\n\n    }","id":61396,"modified_method":"@Test\n    public void badRelationshipsDefault() throws IOException\n    {\n        // GIVEN\n        File movies = file( \"ops\", \"movies9.csv\" );\n        try (PrintStream out = new PrintStream( movies ))\n        {\n            out.println( \"movieId:ID,title,year:int,:LABEL\" );\n            out.println( \"tt0133093,\\\"The Matrix\\\",1999,Movie\" );\n            out.println( \"tt0234215,\\\"The Matrix Reloaded\\\",2003,Movie;Sequel\" );\n            out.println( \"tt0242653,\\\"The Matrix Revolutions\\\",2003,Movie;Sequel\" );\n        }\n\n        File actors = file( \"ops\", \"actors9.csv\" );\n        try (PrintStream out = new PrintStream( actors ))\n        {\n            out.println( \"personId:ID,name,:LABEL\" );\n            out.println( \"keanu,\\\"Keanu Reeves\\\",Actor\" );\n            out.println( \"laurence,\\\"Laurence Fishburne\\\",Actor\" );\n            out.println( \"carrieanne,\\\"Carrie-Anne Moss\\\",Actor\" );\n        }\n\n        File roles = file( \"ops\", \"roles9.csv\" );\n        try (PrintStream out = new PrintStream( roles ))\n        {\n            out.println( \":START_ID,role,:END_ID,:TYPE\" );\n            out.println( \"keanu,\\\"Neo\\\",tt0133093,ACTED_IN\" );\n            out.println( \"keanu,\\\"Neo\\\",tt0234215,ACTED_IN\" );\n            out.println( \"keanu,\\\"Neo\\\",tt0242653,ACTED_IN\" );\n            out.println( \"laurence,\\\"Morpheus\\\",tt0133093,ACTED_IN\" );\n            out.println( \"laurence,\\\"Morpheus\\\",tt0234215,ACTED_IN\" );\n            out.println( \"laurence,\\\"Morpheus\\\",tt0242653,ACTED_IN\" );\n            out.println( \"carrieanne,\\\"Trinity\\\",tt0133093,ACTED_IN\" );\n            out.println( \"carrieanne,\\\"Trinity\\\",tt0234215,ACTED_IN\" );\n            out.println( \"carrieanne,\\\"Trinity\\\",tt0242653,ACTED_IN\" );\n            out.println( \"emil,\\\"Emil\\\",tt0133093,ACTED_IN\" );\n        }\n\n        // WHEN\n        String[] arguments = arguments(\n                \"--into\", directory.absolutePath(),\n                \"--nodes\", movies.getAbsolutePath(),\n                \"--nodes\", actors.getAbsolutePath(),\n                \"--relationships\", roles.getAbsolutePath() );\n        importTool( arguments );\n\n        // DOCS\n        String realDir = movies.getParentFile().getAbsolutePath();\n        printCommandToFile( arguments, realDir, \"bad-relationships-default.adoc\" );\n        FileUtils.copyFile(new File(new Configuration.Default().badFileName()),\n                file( \"ops\", \"bad-relationships-default-not-imported.bad.adoc\" ) );\n\n        // THEN\n        verifyData();\n\n    }","commit_id":"70fdf5582a27c64ded89464880cfc77f89d8c161","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void multipleInputFiles() throws Exception\n    {\n        // GIVEN\n        File moviesHeader = file( \"ops\", \"movies4-header.csv\" );\n        try ( PrintStream out = new PrintStream( moviesHeader ) )\n        {\n            out.println( \"movieId:ID,title,year:int,:LABEL\" );\n        }\n        File moviesPart1 = file( \"ops\", \"movies4-part1.csv\" );\n        try ( PrintStream out = new PrintStream( moviesPart1 ) )\n        {\n            out.println( \"tt0133093,\\\"The Matrix\\\",1999,Movie\" );\n            out.println( \"tt0234215,\\\"The Matrix Reloaded\\\",2003,Movie;Sequel\" );\n        }\n        File moviesPart2 = file( \"ops\", \"movies4-part2.csv\" );\n        try ( PrintStream out = new PrintStream( moviesPart2 ) )\n        {\n            out.println( \"tt0242653,\\\"The Matrix Revolutions\\\",2003,Movie;Sequel\" );\n        }\n        File actorsHeader = file( \"ops\", \"actors4-header.csv\" );\n        try ( PrintStream out = new PrintStream( actorsHeader ) )\n        {\n            out.println( \"personId:ID,name,:LABEL\" );\n        }\n        File actorsPart1 = file( \"ops\", \"actors4-part1.csv\" );\n        try ( PrintStream out = new PrintStream( actorsPart1 ) )\n        {\n            out.println( \"keanu,\\\"Keanu Reeves\\\",Actor\" );\n            out.println( \"laurence,\\\"Laurence Fishburne\\\",Actor\" );\n        }\n        File actorsPart2 = file( \"ops\", \"actors4-part2.csv\" );\n        try ( PrintStream out = new PrintStream( actorsPart2 ) )\n        {\n            out.println( \"carrieanne,\\\"Carrie-Anne Moss\\\",Actor\" );\n        }\n        File rolesHeader = file( \"ops\", \"roles4-header.csv\" );\n        try ( PrintStream out = new PrintStream( rolesHeader ) )\n        {\n            out.println( \":START_ID,role,:END_ID,:TYPE\" );\n        }\n        File rolesPart1 = file( \"ops\", \"roles4-part1.csv\" );\n        try ( PrintStream out = new PrintStream( rolesPart1 ) )\n        {\n            out.println( \"keanu,\\\"Neo\\\",tt0133093,ACTED_IN\" );\n            out.println( \"keanu,\\\"Neo\\\",tt0234215,ACTED_IN\" );\n            out.println( \"keanu,\\\"Neo\\\",tt0242653,ACTED_IN\" );\n            out.println( \"laurence,\\\"Morpheus\\\",tt0133093,ACTED_IN\" );\n            out.println( \"laurence,\\\"Morpheus\\\",tt0234215,ACTED_IN\" );\n        }\n        File rolesPart2 = file( \"ops\", \"roles4-part2.csv\" );\n        try ( PrintStream out = new PrintStream( rolesPart2 ) )\n        {\n            out.println( \"laurence,\\\"Morpheus\\\",tt0242653,ACTED_IN\" );\n            out.println( \"carrieanne,\\\"Trinity\\\",tt0133093,ACTED_IN\" );\n            out.println( \"carrieanne,\\\"Trinity\\\",tt0234215,ACTED_IN\" );\n            out.println( \"carrieanne,\\\"Trinity\\\",tt0242653,ACTED_IN\" );\n        }\n\n        // WHEN\n        String[] arguments = arguments(\n                \"--into\", directory.absolutePath(),\n                \"--nodes\", moviesHeader.getAbsolutePath() + MULTI_FILE_DELIMITER + moviesPart1.getAbsolutePath() +\n                        MULTI_FILE_DELIMITER + moviesPart2.getAbsolutePath(),\n                \"--nodes\", actorsHeader.getAbsolutePath() + MULTI_FILE_DELIMITER + actorsPart1.getAbsolutePath() +\n                        MULTI_FILE_DELIMITER + actorsPart2.getAbsolutePath(),\n                \"--relationships\", rolesHeader.getAbsolutePath() + MULTI_FILE_DELIMITER + rolesPart1.getAbsolutePath() +\n                        MULTI_FILE_DELIMITER + rolesPart2.getAbsolutePath() );\n        ImportTool.main( arguments );\n\n        // DOCS\n        String realDir = moviesPart2.getParentFile().getAbsolutePath();\n        printCommandToFile( arguments, realDir, \"multiple-input-files.adoc\" );\n\n        // THEN\n        verifyData();\n    }","id":61397,"modified_method":"@Test\n    public void multipleInputFiles() throws Exception\n    {\n        // GIVEN\n        File moviesHeader = file( \"ops\", \"movies4-header.csv\" );\n        try ( PrintStream out = new PrintStream( moviesHeader ) )\n        {\n            out.println( \"movieId:ID,title,year:int,:LABEL\" );\n        }\n        File moviesPart1 = file( \"ops\", \"movies4-part1.csv\" );\n        try ( PrintStream out = new PrintStream( moviesPart1 ) )\n        {\n            out.println( \"tt0133093,\\\"The Matrix\\\",1999,Movie\" );\n            out.println( \"tt0234215,\\\"The Matrix Reloaded\\\",2003,Movie;Sequel\" );\n        }\n        File moviesPart2 = file( \"ops\", \"movies4-part2.csv\" );\n        try ( PrintStream out = new PrintStream( moviesPart2 ) )\n        {\n            out.println( \"tt0242653,\\\"The Matrix Revolutions\\\",2003,Movie;Sequel\" );\n        }\n        File actorsHeader = file( \"ops\", \"actors4-header.csv\" );\n        try ( PrintStream out = new PrintStream( actorsHeader ) )\n        {\n            out.println( \"personId:ID,name,:LABEL\" );\n        }\n        File actorsPart1 = file( \"ops\", \"actors4-part1.csv\" );\n        try ( PrintStream out = new PrintStream( actorsPart1 ) )\n        {\n            out.println( \"keanu,\\\"Keanu Reeves\\\",Actor\" );\n            out.println( \"laurence,\\\"Laurence Fishburne\\\",Actor\" );\n        }\n        File actorsPart2 = file( \"ops\", \"actors4-part2.csv\" );\n        try ( PrintStream out = new PrintStream( actorsPart2 ) )\n        {\n            out.println( \"carrieanne,\\\"Carrie-Anne Moss\\\",Actor\" );\n        }\n        File rolesHeader = file( \"ops\", \"roles4-header.csv\" );\n        try ( PrintStream out = new PrintStream( rolesHeader ) )\n        {\n            out.println( \":START_ID,role,:END_ID,:TYPE\" );\n        }\n        File rolesPart1 = file( \"ops\", \"roles4-part1.csv\" );\n        try ( PrintStream out = new PrintStream( rolesPart1 ) )\n        {\n            out.println( \"keanu,\\\"Neo\\\",tt0133093,ACTED_IN\" );\n            out.println( \"keanu,\\\"Neo\\\",tt0234215,ACTED_IN\" );\n            out.println( \"keanu,\\\"Neo\\\",tt0242653,ACTED_IN\" );\n            out.println( \"laurence,\\\"Morpheus\\\",tt0133093,ACTED_IN\" );\n            out.println( \"laurence,\\\"Morpheus\\\",tt0234215,ACTED_IN\" );\n        }\n        File rolesPart2 = file( \"ops\", \"roles4-part2.csv\" );\n        try ( PrintStream out = new PrintStream( rolesPart2 ) )\n        {\n            out.println( \"laurence,\\\"Morpheus\\\",tt0242653,ACTED_IN\" );\n            out.println( \"carrieanne,\\\"Trinity\\\",tt0133093,ACTED_IN\" );\n            out.println( \"carrieanne,\\\"Trinity\\\",tt0234215,ACTED_IN\" );\n            out.println( \"carrieanne,\\\"Trinity\\\",tt0242653,ACTED_IN\" );\n        }\n\n        // WHEN\n        String[] arguments = arguments(\n                \"--into\", directory.absolutePath(),\n                \"--nodes\", moviesHeader.getAbsolutePath() + MULTI_FILE_DELIMITER + moviesPart1.getAbsolutePath() +\n                        MULTI_FILE_DELIMITER + moviesPart2.getAbsolutePath(),\n                \"--nodes\", actorsHeader.getAbsolutePath() + MULTI_FILE_DELIMITER + actorsPart1.getAbsolutePath() +\n                        MULTI_FILE_DELIMITER + actorsPart2.getAbsolutePath(),\n                \"--relationships\", rolesHeader.getAbsolutePath() + MULTI_FILE_DELIMITER + rolesPart1.getAbsolutePath() +\n                        MULTI_FILE_DELIMITER + rolesPart2.getAbsolutePath() );\n        importTool( arguments );\n\n        // DOCS\n        String realDir = moviesPart2.getParentFile().getAbsolutePath();\n        printCommandToFile( arguments, realDir, \"multiple-input-files.adoc\" );\n\n        // THEN\n        verifyData();\n    }","commit_id":"70fdf5582a27c64ded89464880cfc77f89d8c161","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldHandleAdditiveLabelsWithSpaces() throws Exception\n    {\n        // GIVEN\n        List<String> nodeIds = nodeIds();\n        Configuration config = Configuration.COMMAS;\n        final Label label1 = DynamicLabel.label( \"My First Label\" );\n        final Label label2 = DynamicLabel.label( \"My Other Label\" );\n\n        // WHEN\n        ImportTool.main( arguments(\n                \"--into\", dbRule.getStoreDir().getAbsolutePath(),\n                \"--nodes:My First Label:My Other Label\",\n                        nodeData( true, config, nodeIds, alwaysTrue() ).getAbsolutePath(),\n                \"--relationships\", relationshipData( true, config, nodeIds, alwaysTrue() ).getAbsolutePath()\n                 ) );\n\n        // THEN\n        verifyData( new Validator<Node>()\n        {\n            @Override\n            public void validate( Node node )\n            {\n                assertTrue( node.hasLabel( label1 ) );\n                assertTrue( node.hasLabel( label2 ) );\n            }\n        }, Validators.<Relationship>emptyValidator() );\n    }","id":61398,"modified_method":"@Test\n    public void shouldHandleAdditiveLabelsWithSpaces() throws Exception\n    {\n        // GIVEN\n        List<String> nodeIds = nodeIds();\n        Configuration config = Configuration.COMMAS;\n        final Label label1 = DynamicLabel.label( \"My First Label\" );\n        final Label label2 = DynamicLabel.label( \"My Other Label\" );\n\n        // WHEN\n        importTool(\n                \"--into\", dbRule.getStoreDir().getAbsolutePath(),\n                \"--nodes:My First Label:My Other Label\",\n                        nodeData( true, config, nodeIds, alwaysTrue() ).getAbsolutePath(),\n                \"--relationships\", relationshipData( true, config, nodeIds, alwaysTrue() ).getAbsolutePath() );\n\n        // THEN\n        verifyData( new Validator<Node>()\n        {\n            @Override\n            public void validate( Node node )\n            {\n                assertTrue( node.hasLabel( label1 ) );\n                assertTrue( node.hasLabel( label2 ) );\n            }\n        }, Validators.<Relationship>emptyValidator() );\n    }","commit_id":"70fdf5582a27c64ded89464880cfc77f89d8c161","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldNotBeAbleToMixSpecifiedAndUnspecifiedGroups() throws Exception\n    {\n        // GIVEN\n        List<String> groupOneNodeIds = asList( \"1\", \"2\", \"3\" );\n        List<String> groupTwoNodeIds = asList( \"4\", \"5\", \"2\" );\n        Configuration config = Configuration.COMMAS;\n\n        // WHEN\n        try\n        {\n            ImportTool.main( arguments(\n                    \"--into\",          dbRule.getStoreDir().getAbsolutePath(),\n                    \"--nodes\",         nodeHeader( config, \"MyGroup\" ).getAbsolutePath() + MULTI_FILE_DELIMITER +\n                    nodeData( false, config, groupOneNodeIds, alwaysTrue() ).getAbsolutePath(),\n                    \"--nodes\",         nodeHeader( config ).getAbsolutePath() + MULTI_FILE_DELIMITER +\n                    nodeData( false, config, groupTwoNodeIds, alwaysTrue() ).getAbsolutePath() ) );\n            fail( \"Should have failed\" );\n        }\n        catch ( Exception e )\n        {\n            assertTrue( Exceptions.contains( e, \"Mixing specified\", IllegalStateException.class ) );\n        }\n    }","id":61399,"modified_method":"@Test\n    public void shouldNotBeAbleToMixSpecifiedAndUnspecifiedGroups() throws Exception\n    {\n        // GIVEN\n        List<String> groupOneNodeIds = asList( \"1\", \"2\", \"3\" );\n        List<String> groupTwoNodeIds = asList( \"4\", \"5\", \"2\" );\n        Configuration config = Configuration.COMMAS;\n\n        // WHEN\n        try\n        {\n            importTool(\n                    \"--into\",          dbRule.getStoreDir().getAbsolutePath(),\n                    \"--nodes\",         nodeHeader( config, \"MyGroup\" ).getAbsolutePath() + MULTI_FILE_DELIMITER +\n                    nodeData( false, config, groupOneNodeIds, alwaysTrue() ).getAbsolutePath(),\n                    \"--nodes\",         nodeHeader( config ).getAbsolutePath() + MULTI_FILE_DELIMITER +\n                    nodeData( false, config, groupTwoNodeIds, alwaysTrue() ).getAbsolutePath() );\n            fail( \"Should have failed\" );\n        }\n        catch ( Exception e )\n        {\n            assertTrue( Exceptions.contains( e, \"Mixing specified\", IllegalStateException.class ) );\n        }\n    }","commit_id":"70fdf5582a27c64ded89464880cfc77f89d8c161","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldLogRelationshipsReferingToMissingNode() throws Exception\n    {\n        // GIVEN\n        List<String> nodeIds = asList( \"a\", \"b\", \"c\" );\n        Configuration config = Configuration.COMMAS;\n        File nodeData = nodeData( true, config, nodeIds, alwaysTrue() );\n        List<Triplet<String,String,String>> relationships = Arrays.asList(\n                // header                                   line 1 of file1\n                Triplet.of( \"a\", \"b\", \"TYPE\" ), //          line 2 of file1\n                Triplet.of( \"c\", \"bogus\", \"TYPE\" ), //      line 3 of file1\n                Triplet.of( \"b\", \"c\", \"KNOWS\" ), //         line 1 of file2\n                Triplet.of( \"c\", \"a\", \"KNOWS\" ), //         line 2 of file2\n                Triplet.of( \"missing\", \"a\", \"KNOWS\" ) ); // line 3 of file2\n        File relationshipData1 = relationshipData( true, config, relationships.iterator(), lines( 0, 2 ), true );\n        File relationshipData2 = relationshipData( false, config, relationships.iterator(), lines( 2, 5 ), true );\n        File bad = file( \"bad.log\" );\n\n        // WHEN importing data where some relationships refer to missing nodes\n        ImportTool.main( arguments(\n                \"--into\",          dbRule.getStoreDir().getAbsolutePath(),\n                \"--nodes\",         nodeData.getAbsolutePath(),\n                \"--bad\",           bad.getAbsolutePath(),\n                \"--bad-tolerance\", \"2\",\n                \"--relationships\", relationshipData1.getAbsolutePath() + MULTI_FILE_DELIMITER +\n                                   relationshipData2.getAbsolutePath() ) );\n\n        // THEN\n        String badContents = FileUtils.readTextFile( bad, Charset.defaultCharset() );\n        assertTrue( \"Didn't contain first bad relationship\",\n                badContents.contains( relationshipData1.getAbsolutePath() + \":3\" ) );\n        assertTrue( \"Didn't contain second bad relationship\",\n                badContents.contains( relationshipData2.getAbsolutePath() + \":3\" ) );\n    }","id":61400,"modified_method":"@Test\n    public void shouldLogRelationshipsReferingToMissingNode() throws Exception\n    {\n        // GIVEN\n        List<String> nodeIds = asList( \"a\", \"b\", \"c\" );\n        Configuration config = Configuration.COMMAS;\n        File nodeData = nodeData( true, config, nodeIds, alwaysTrue() );\n        List<Triplet<String,String,String>> relationships = Arrays.asList(\n                // header                                   line 1 of file1\n                Triplet.of( \"a\", \"b\", \"TYPE\" ), //          line 2 of file1\n                Triplet.of( \"c\", \"bogus\", \"TYPE\" ), //      line 3 of file1\n                Triplet.of( \"b\", \"c\", \"KNOWS\" ), //         line 1 of file2\n                Triplet.of( \"c\", \"a\", \"KNOWS\" ), //         line 2 of file2\n                Triplet.of( \"missing\", \"a\", \"KNOWS\" ) ); // line 3 of file2\n        File relationshipData1 = relationshipData( true, config, relationships.iterator(), lines( 0, 2 ), true );\n        File relationshipData2 = relationshipData( false, config, relationships.iterator(), lines( 2, 5 ), true );\n        File bad = file( \"bad.log\" );\n\n        // WHEN importing data where some relationships refer to missing nodes\n        importTool(\n                \"--into\",          dbRule.getStoreDir().getAbsolutePath(),\n                \"--nodes\",         nodeData.getAbsolutePath(),\n                \"--bad\",           bad.getAbsolutePath(),\n                \"--bad-tolerance\", \"2\",\n                \"--relationships\", relationshipData1.getAbsolutePath() + MULTI_FILE_DELIMITER +\n                                   relationshipData2.getAbsolutePath() );\n\n        // THEN\n        String badContents = FileUtils.readTextFile( bad, Charset.defaultCharset() );\n        assertTrue( \"Didn't contain first bad relationship\",\n                badContents.contains( relationshipData1.getAbsolutePath() + \":3\" ) );\n        assertTrue( \"Didn't contain second bad relationship\",\n                badContents.contains( relationshipData2.getAbsolutePath() + \":3\" ) );\n    }","commit_id":"70fdf5582a27c64ded89464880cfc77f89d8c161","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldFailIfTooManyBadRelationships() throws Exception\n    {\n        // GIVEN\n        List<String> nodeIds = asList( \"a\", \"b\", \"c\" );\n        Configuration config = Configuration.COMMAS;\n        File nodeData = nodeData( true, config, nodeIds, alwaysTrue() );\n        List<Triplet<String,String,String>> relationships = Arrays.asList(\n                // header                                   line 1 of file1\n                Triplet.of( \"a\", \"b\", \"TYPE\" ), //          line 2 of file1\n                Triplet.of( \"c\", \"bogus\", \"TYPE\" ), //      line 3 of file1\n                Triplet.of( \"b\", \"c\", \"KNOWS\" ), //         line 1 of file2\n                Triplet.of( \"c\", \"a\", \"KNOWS\" ), //         line 2 of file2\n                Triplet.of( \"missing\", \"a\", \"KNOWS\" ) ); // line 3 of file2\n        File relationshipData1 = relationshipData( true, config, relationships.iterator(), lines( 0, 2 ), true );\n        File relationshipData2 = relationshipData( false, config, relationships.iterator(), lines( 2, 5 ), true );\n        File bad = file( \"bad.log\" );\n\n        // WHEN importing data where some relationships refer to missing nodes\n        try\n        {\n            ImportTool.main( arguments(\n                    \"--into\",          dbRule.getStoreDir().getAbsolutePath(),\n                    \"--nodes\",         nodeData.getAbsolutePath(),\n                    \"--bad\",           bad.getAbsolutePath(),\n                    \"--bad-tolerance\", \"1\",\n                    \"--relationships\", relationshipData1.getAbsolutePath() + MULTI_FILE_DELIMITER +\n                                       relationshipData2.getAbsolutePath() ) );\n        }\n        catch ( Exception e )\n        {\n            // THEN\n            assertThat( e.getMessage(), containsString( relationshipData2.getAbsolutePath() + \":3\" ) );\n        }\n    }","id":61401,"modified_method":"@Test\n    public void shouldFailIfTooManyBadRelationships() throws Exception\n    {\n        // GIVEN\n        List<String> nodeIds = asList( \"a\", \"b\", \"c\" );\n        Configuration config = Configuration.COMMAS;\n        File nodeData = nodeData( true, config, nodeIds, alwaysTrue() );\n        List<Triplet<String,String,String>> relationships = Arrays.asList(\n                // header                                   line 1 of file1\n                Triplet.of( \"a\", \"b\", \"TYPE\" ), //          line 2 of file1\n                Triplet.of( \"c\", \"bogus\", \"TYPE\" ), //      line 3 of file1\n                Triplet.of( \"b\", \"c\", \"KNOWS\" ), //         line 1 of file2\n                Triplet.of( \"c\", \"a\", \"KNOWS\" ), //         line 2 of file2\n                Triplet.of( \"missing\", \"a\", \"KNOWS\" ) ); // line 3 of file2\n        File relationshipData1 = relationshipData( true, config, relationships.iterator(), lines( 0, 2 ), true );\n        File relationshipData2 = relationshipData( false, config, relationships.iterator(), lines( 2, 5 ), true );\n        File bad = file( \"bad.log\" );\n\n        // WHEN importing data where some relationships refer to missing nodes\n        try\n        {\n            importTool(\n                    \"--into\",          dbRule.getStoreDir().getAbsolutePath(),\n                    \"--nodes\",         nodeData.getAbsolutePath(),\n                    \"--bad\",           bad.getAbsolutePath(),\n                    \"--bad-tolerance\", \"1\",\n                    \"--relationships\", relationshipData1.getAbsolutePath() + MULTI_FILE_DELIMITER +\n                                       relationshipData2.getAbsolutePath() ) ;\n        }\n        catch ( Exception e )\n        {\n            // THEN\n            assertThat( e.getMessage(), containsString( relationshipData2.getAbsolutePath() + \":3\" ) );\n        }\n    }","commit_id":"70fdf5582a27c64ded89464880cfc77f89d8c161","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldImportMultipleInputsWithAddedLabelsAndDefaultRelationshipType() throws Exception\n    {\n        // GIVEN\n        List<String> nodeIds = nodeIds();\n        Configuration config = Configuration.COMMAS;\n        final String[] firstLabels = { \"AddedOne\", \"AddedTwo\" };\n        final String[] secondLabels = { \"AddedThree\" };\n        final String firstType = \"TYPE_1\";\n        final String secondType = \"TYPE_2\";\n\n        // WHEN\n        ImportTool.main( arguments(\n                \"--into\", dbRule.getStoreDir().getAbsolutePath(),\n                \"--nodes:\" + join( firstLabels, \":\" ),\n                    nodeData( true, config, nodeIds, lines( 0, NODE_COUNT/2 ) ).getAbsolutePath(),\n                \"--nodes:\" + join( secondLabels, \":\" ),\n                    nodeData( true, config, nodeIds, lines( NODE_COUNT/2, NODE_COUNT ) ).getAbsolutePath(),\n                \"--relationships:\" + firstType,\n                    relationshipData( true, config, nodeIds, lines( 0, RELATIONSHIP_COUNT/2 ), false ).getAbsolutePath(),\n                \"--relationships:\" + secondType,\n                    relationshipData( true, config, nodeIds,\n                            lines( RELATIONSHIP_COUNT/2, RELATIONSHIP_COUNT ), false ).getAbsolutePath() ) );\n\n        // THEN\n        verifyData(\n                new Validator<Node>()\n                {\n                    @Override\n                    public void validate( Node node )\n                    {\n                        if ( node.getId() < NODE_COUNT/2 )\n                        {\n                            assertNodeHasLabels( node, firstLabels );\n                        }\n                        else\n                        {\n                            assertNodeHasLabels( node, secondLabels );\n                        }\n                    }\n                },\n                new Validator<Relationship>()\n                {\n                    @Override\n                    public void validate( Relationship relationship )\n                    {\n                        if ( relationship.getId() < RELATIONSHIP_COUNT/2 )\n                        {\n                            assertEquals( firstType, relationship.getType().name() );\n                        }\n                        else\n                        {\n                            assertEquals( secondType, relationship.getType().name() );\n                        }\n                    }\n                } );\n    }","id":61402,"modified_method":"@Test\n    public void shouldImportMultipleInputsWithAddedLabelsAndDefaultRelationshipType() throws Exception\n    {\n        // GIVEN\n        List<String> nodeIds = nodeIds();\n        Configuration config = Configuration.COMMAS;\n        final String[] firstLabels = { \"AddedOne\", \"AddedTwo\" };\n        final String[] secondLabels = { \"AddedThree\" };\n        final String firstType = \"TYPE_1\";\n        final String secondType = \"TYPE_2\";\n\n        // WHEN\n        importTool(\n                \"--into\", dbRule.getStoreDir().getAbsolutePath(),\n                \"--nodes:\" + join( firstLabels, \":\" ),\n                    nodeData( true, config, nodeIds, lines( 0, NODE_COUNT/2 ) ).getAbsolutePath(),\n                \"--nodes:\" + join( secondLabels, \":\" ),\n                    nodeData( true, config, nodeIds, lines( NODE_COUNT/2, NODE_COUNT ) ).getAbsolutePath(),\n                \"--relationships:\" + firstType,\n                    relationshipData( true, config, nodeIds, lines( 0, RELATIONSHIP_COUNT/2 ), false ).getAbsolutePath(),\n                \"--relationships:\" + secondType,\n                    relationshipData( true, config, nodeIds,\n                            lines( RELATIONSHIP_COUNT/2, RELATIONSHIP_COUNT ), false ).getAbsolutePath() );\n\n        // THEN\n        verifyData(\n                new Validator<Node>()\n                {\n                    @Override\n                    public void validate( Node node )\n                    {\n                        if ( node.getId() < NODE_COUNT/2 )\n                        {\n                            assertNodeHasLabels( node, firstLabels );\n                        }\n                        else\n                        {\n                            assertNodeHasLabels( node, secondLabels );\n                        }\n                    }\n                },\n                new Validator<Relationship>()\n                {\n                    @Override\n                    public void validate( Relationship relationship )\n                    {\n                        if ( relationship.getId() < RELATIONSHIP_COUNT/2 )\n                        {\n                            assertEquals( firstType, relationship.getType().name() );\n                        }\n                        else\n                        {\n                            assertEquals( secondType, relationship.getType().name() );\n                        }\n                    }\n                } );\n    }","commit_id":"70fdf5582a27c64ded89464880cfc77f89d8c161","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldImportGroupsOfOverlappingIds() throws Exception\n    {\n        // GIVEN\n        List<String> groupOneNodeIds = asList( \"1\", \"2\", \"3\" );\n        List<String> groupTwoNodeIds = asList( \"4\", \"5\", \"2\" );\n        List<Triplet<String,String,String>> rels = asList(\n                Triplet.of( \"1\", \"4\", \"TYPE\" ),\n                Triplet.of( \"2\", \"5\", \"TYPE\" ),\n                Triplet.of( \"3\", \"2\", \"TYPE\" ) );\n        Configuration config = Configuration.COMMAS;\n        String groupOne = \"Actor\";\n        String groupTwo = \"Movie\";\n\n        // WHEN\n        String[] args = arguments(\n                \"--into\",  dbRule.getStoreDir().getAbsolutePath(),\n                \"--nodes\", nodeHeader( config, groupOne ) + MULTI_FILE_DELIMITER +\n                           nodeData( false, config, groupOneNodeIds, alwaysTrue() ),\n                \"--nodes\", nodeHeader( config, groupTwo ) + MULTI_FILE_DELIMITER +\n                           nodeData( false, config, groupTwoNodeIds, alwaysTrue() ),\n                \"--relationships\", relationshipHeader( config, groupOne, groupTwo, true ) + MULTI_FILE_DELIMITER +\n                                   relationshipData( false, config, rels.iterator(), alwaysTrue(), true )\n\n        );\n\n        ImportTool.main( args );\n\n        // THEN\n        GraphDatabaseService db = dbRule.getGraphDatabaseService();\n        try ( Transaction tx = db.beginTx() )\n        {\n            int nodeCount = 0;\n            for ( Node node : GlobalGraphOperations.at( db ).getAllNodes() )\n            {\n                assertTrue( node.hasProperty( \"name\" ) );\n                nodeCount++;\n                assertEquals( 1, count( node.getRelationships() ) );\n            }\n            assertEquals( 6, nodeCount );\n            tx.success();\n        }\n    }","id":61403,"modified_method":"@Test\n    public void shouldImportGroupsOfOverlappingIds() throws Exception\n    {\n        // GIVEN\n        List<String> groupOneNodeIds = asList( \"1\", \"2\", \"3\" );\n        List<String> groupTwoNodeIds = asList( \"4\", \"5\", \"2\" );\n        List<Triplet<String,String,String>> rels = asList(\n                Triplet.of( \"1\", \"4\", \"TYPE\" ),\n                Triplet.of( \"2\", \"5\", \"TYPE\" ),\n                Triplet.of( \"3\", \"2\", \"TYPE\" ) );\n        Configuration config = Configuration.COMMAS;\n        String groupOne = \"Actor\";\n        String groupTwo = \"Movie\";\n\n        // WHEN\n        importTool(\n                \"--into\",  dbRule.getStoreDir().getAbsolutePath(),\n                \"--nodes\", nodeHeader( config, groupOne ) + MULTI_FILE_DELIMITER +\n                           nodeData( false, config, groupOneNodeIds, alwaysTrue() ),\n                \"--nodes\", nodeHeader( config, groupTwo ) + MULTI_FILE_DELIMITER +\n                           nodeData( false, config, groupTwoNodeIds, alwaysTrue() ),\n                \"--relationships\", relationshipHeader( config, groupOne, groupTwo, true ) + MULTI_FILE_DELIMITER +\n                                   relationshipData( false, config, rels.iterator(), alwaysTrue(), true ) );\n\n        // THEN\n        GraphDatabaseService db = dbRule.getGraphDatabaseService();\n        try ( Transaction tx = db.beginTx() )\n        {\n            int nodeCount = 0;\n            for ( Node node : GlobalGraphOperations.at( db ).getAllNodes() )\n            {\n                assertTrue( node.hasProperty( \"name\" ) );\n                nodeCount++;\n                assertEquals( 1, count( node.getRelationships() ) );\n            }\n            assertEquals( 6, nodeCount );\n            tx.success();\n        }\n    }","commit_id":"70fdf5582a27c64ded89464880cfc77f89d8c161","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldImportWithHeadersBeingInSeparateFiles() throws Exception\n    {\n        // GIVEN\n        List<String> nodeIds = nodeIds();\n        Configuration config = Configuration.TABS;\n\n        // WHEN\n        ImportTool.main( arguments(\n                \"--into\", dbRule.getStoreDir().getAbsolutePath(),\n                \"--delimiter\", \"TAB\",\n                \"--array-delimiter\", String.valueOf( config.arrayDelimiter() ),\n                \"--nodes\",\n                    nodeHeader( config ).getAbsolutePath() + MULTI_FILE_DELIMITER +\n                    nodeData( false, config, nodeIds, alwaysTrue() ).getAbsolutePath(),\n                \"--relationships\",\n                    relationshipHeader( config ).getAbsolutePath() + MULTI_FILE_DELIMITER +\n                    relationshipData( false, config, nodeIds, alwaysTrue() ).getAbsolutePath() ) );\n\n        // THEN\n        verifyData();\n    }","id":61404,"modified_method":"@Test\n    public void shouldImportWithHeadersBeingInSeparateFiles() throws Exception\n    {\n        // GIVEN\n        List<String> nodeIds = nodeIds();\n        Configuration config = Configuration.TABS;\n\n        // WHEN\n        importTool(\n                \"--into\", dbRule.getStoreDir().getAbsolutePath(),\n                \"--delimiter\", \"TAB\",\n                \"--array-delimiter\", String.valueOf( config.arrayDelimiter() ),\n                \"--nodes\",\n                    nodeHeader( config ).getAbsolutePath() + MULTI_FILE_DELIMITER +\n                    nodeData( false, config, nodeIds, alwaysTrue() ).getAbsolutePath(),\n                \"--relationships\",\n                    relationshipHeader( config ).getAbsolutePath() + MULTI_FILE_DELIMITER +\n                    relationshipData( false, config, nodeIds, alwaysTrue() ).getAbsolutePath() );\n\n        // THEN\n        verifyData();\n    }","commit_id":"70fdf5582a27c64ded89464880cfc77f89d8c161","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldImportSplitInputFiles() throws Exception\n    {\n        // GIVEN\n        List<String> nodeIds = nodeIds();\n        Configuration config = Configuration.COMMAS;\n\n        // WHEN\n        ImportTool.main( arguments(\n                \"--into\", dbRule.getStoreDir().getAbsolutePath(),\n                \"--nodes\", // One group with one header file and one data file\n                    nodeHeader( config ).getAbsolutePath() + MULTI_FILE_DELIMITER +\n                    nodeData( false, config, nodeIds, lines( 0, NODE_COUNT/2 ) ).getAbsolutePath(),\n                \"--nodes\", // One group with two data files, where the header sits in the first file\n                    nodeData( true, config, nodeIds,\n                            lines( NODE_COUNT / 2, NODE_COUNT * 3 / 4 ) ).getAbsolutePath() + MULTI_FILE_DELIMITER +\n                    nodeData( false, config, nodeIds, lines( NODE_COUNT * 3 / 4, NODE_COUNT ) ).getAbsolutePath(),\n                \"--relationships\",\n                    relationshipHeader( config ).getAbsolutePath() + MULTI_FILE_DELIMITER +\n                    relationshipData( false, config, nodeIds, alwaysTrue() ).getAbsolutePath() ) );\n\n        // THEN\n        verifyData();\n    }","id":61405,"modified_method":"@Test\n    public void shouldImportSplitInputFiles() throws Exception\n    {\n        // GIVEN\n        List<String> nodeIds = nodeIds();\n        Configuration config = Configuration.COMMAS;\n\n        // WHEN\n        importTool(\n                \"--into\", dbRule.getStoreDir().getAbsolutePath(),\n                \"--nodes\", // One group with one header file and one data file\n                    nodeHeader( config ).getAbsolutePath() + MULTI_FILE_DELIMITER +\n                    nodeData( false, config, nodeIds, lines( 0, NODE_COUNT/2 ) ).getAbsolutePath(),\n                \"--nodes\", // One group with two data files, where the header sits in the first file\n                    nodeData( true, config, nodeIds,\n                            lines( NODE_COUNT / 2, NODE_COUNT * 3 / 4 ) ).getAbsolutePath() + MULTI_FILE_DELIMITER +\n                    nodeData( false, config, nodeIds, lines( NODE_COUNT * 3 / 4, NODE_COUNT ) ).getAbsolutePath(),\n                \"--relationships\",\n                    relationshipHeader( config ).getAbsolutePath() + MULTI_FILE_DELIMITER +\n                    relationshipData( false, config, nodeIds, alwaysTrue() ).getAbsolutePath() );\n\n        // THEN\n        verifyData();\n    }","commit_id":"70fdf5582a27c64ded89464880cfc77f89d8c161","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldImportWithoutTypeSpecifiedInRelationshipHeaderbutWithDefaultTypeInArgument() throws Exception\n    {\n        // GIVEN\n        List<String> nodeIds = nodeIds();\n        Configuration config = Configuration.COMMAS;\n        String type = randomType();\n\n        // WHEN\n        ImportTool.main( arguments(\n                \"--into\",          dbRule.getStoreDir().getAbsolutePath(),\n                \"--nodes\",         nodeData( true, config, nodeIds, alwaysTrue() ).getAbsolutePath(),\n                                   // there will be no :TYPE specified in the header of the relationships below\n                \"--relationships:\" + type,\n                                   relationshipData( true, config, nodeIds, alwaysTrue(), false ).getAbsolutePath() ) );\n\n        // THEN\n        verifyData();\n    }","id":61406,"modified_method":"@Test\n    public void shouldImportWithoutTypeSpecifiedInRelationshipHeaderbutWithDefaultTypeInArgument() throws Exception\n    {\n        // GIVEN\n        List<String> nodeIds = nodeIds();\n        Configuration config = Configuration.COMMAS;\n        String type = randomType();\n\n        // WHEN\n        importTool(\n                \"--into\",          dbRule.getStoreDir().getAbsolutePath(),\n                \"--nodes\",         nodeData( true, config, nodeIds, alwaysTrue() ).getAbsolutePath(),\n                                   // there will be no :TYPE specified in the header of the relationships below\n                \"--relationships:\" + type,\n                                   relationshipData( true, config, nodeIds, alwaysTrue(), false ).getAbsolutePath() );\n\n        // THEN\n        verifyData();\n    }","commit_id":"70fdf5582a27c64ded89464880cfc77f89d8c161","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldImportOnlyNodes() throws Exception\n    {\n        // GIVEN\n        List<String> nodeIds = nodeIds();\n        Configuration config = Configuration.COMMAS;\n\n        // WHEN\n        ImportTool.main( arguments(\n                \"--into\",          dbRule.getStoreDir().getAbsolutePath(),\n                \"--nodes\",         nodeData( true, config, nodeIds, alwaysTrue() ).getAbsolutePath() ) );\n                // no relationships\n\n        // THEN\n        GraphDatabaseService db = dbRule.getGraphDatabaseService();\n        try ( Transaction tx = db.beginTx() )\n        {\n            int nodeCount = 0;\n            for ( Node node : GlobalGraphOperations.at( db ).getAllNodes() )\n            {\n                assertTrue( node.hasProperty( \"name\" ) );\n                nodeCount++;\n                assertFalse( node.hasRelationship() );\n            }\n            assertEquals( NODE_COUNT, nodeCount );\n            tx.success();\n        }\n    }","id":61407,"modified_method":"@Test\n    public void shouldImportOnlyNodes() throws Exception\n    {\n        // GIVEN\n        List<String> nodeIds = nodeIds();\n        Configuration config = Configuration.COMMAS;\n\n        // WHEN\n        importTool(\n                \"--into\",          dbRule.getStoreDir().getAbsolutePath(),\n                \"--nodes\",         nodeData( true, config, nodeIds, alwaysTrue() ).getAbsolutePath() );\n                // no relationships\n\n        // THEN\n        GraphDatabaseService db = dbRule.getGraphDatabaseService();\n        try ( Transaction tx = db.beginTx() )\n        {\n            int nodeCount = 0;\n            for ( Node node : GlobalGraphOperations.at( db ).getAllNodes() )\n            {\n                assertTrue( node.hasProperty( \"name\" ) );\n                nodeCount++;\n                assertFalse( node.hasRelationship() );\n            }\n            assertEquals( NODE_COUNT, nodeCount );\n            tx.success();\n        }\n    }","commit_id":"70fdf5582a27c64ded89464880cfc77f89d8c161","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldIncludeSourceInformationInNodeIdCollisionError() throws Exception\n    {\n        // GIVEN\n        List<String> nodeIds = asList( \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"a\", \"g\" );\n        Configuration config = Configuration.COMMAS;\n        File nodeHeaderFile = nodeHeader( config );\n        File nodeData1 = nodeData( false, config, nodeIds, lines( 0, 4 ) );\n        File nodeData2 = nodeData( false, config, nodeIds, lines( 4, nodeIds.size() ) );\n\n        // WHEN\n        try\n        {\n            ImportTool.main( arguments(\n                    \"--into\",  dbRule.getStoreDir().getAbsolutePath(),\n                    \"--nodes\", nodeHeaderFile.getAbsolutePath() + MULTI_FILE_DELIMITER +\n                               nodeData1.getAbsolutePath() + MULTI_FILE_DELIMITER +\n                               nodeData2.getAbsolutePath() ) );\n            fail( \"Should have failed with duplicate node IDs\" );\n        }\n        catch ( Exception e )\n        {\n            // THEN\n            assertThat( e.getMessage(), containsString( nodeData1.getPath() + \":\" + 1 ) );\n            assertThat( e.getMessage(), containsString( nodeData2.getPath() + \":\" + 3 ) );\n        }\n    }","id":61408,"modified_method":"@Test\n    public void shouldIncludeSourceInformationInNodeIdCollisionError() throws Exception\n    {\n        // GIVEN\n        List<String> nodeIds = asList( \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"a\", \"g\" );\n        Configuration config = Configuration.COMMAS;\n        File nodeHeaderFile = nodeHeader( config );\n        File nodeData1 = nodeData( false, config, nodeIds, lines( 0, 4 ) );\n        File nodeData2 = nodeData( false, config, nodeIds, lines( 4, nodeIds.size() ) );\n\n        // WHEN\n        try\n        {\n            importTool(\n                    \"--into\",  dbRule.getStoreDir().getAbsolutePath(),\n                    \"--nodes\", nodeHeaderFile.getAbsolutePath() + MULTI_FILE_DELIMITER +\n                               nodeData1.getAbsolutePath() + MULTI_FILE_DELIMITER +\n                               nodeData2.getAbsolutePath() );\n            fail( \"Should have failed with duplicate node IDs\" );\n        }\n        catch ( Exception e )\n        {\n            // THEN\n            assertThat( e.getMessage(), containsString( nodeData1.getPath() + \":\" + 1 ) );\n            assertThat( e.getMessage(), containsString( nodeData2.getPath() + \":\" + 3 ) );\n        }\n    }","commit_id":"70fdf5582a27c64ded89464880cfc77f89d8c161","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldImportWithAsManyDefaultsAsAvailable() throws Exception\n    {\n        // GIVEN\n        List<String> nodeIds = nodeIds();\n        Configuration config = Configuration.COMMAS;\n\n        // WHEN\n        ImportTool.main( arguments(\n                \"--into\",          dbRule.getStoreDir().getAbsolutePath(),\n                \"--nodes\",         nodeData( true, config, nodeIds, alwaysTrue() ).getAbsolutePath(),\n                \"--relationships\", relationshipData( true, config, nodeIds, alwaysTrue() ).getAbsolutePath() ) );\n\n        // THEN\n        verifyData();\n    }","id":61409,"modified_method":"@Test\n    public void shouldImportWithAsManyDefaultsAsAvailable() throws Exception\n    {\n        // GIVEN\n        List<String> nodeIds = nodeIds();\n        Configuration config = Configuration.COMMAS;\n\n        // WHEN\n        importTool(\n                \"--into\",          dbRule.getStoreDir().getAbsolutePath(),\n                \"--nodes\",         nodeData( true, config, nodeIds, alwaysTrue() ).getAbsolutePath(),\n                \"--relationships\", relationshipData( true, config, nodeIds, alwaysTrue() ).getAbsolutePath() );\n\n        // THEN\n        verifyData();\n    }","commit_id":"70fdf5582a27c64ded89464880cfc77f89d8c161","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void registerDocumentContents(LocalHistoryFacade vcs, VirtualFile f, Document d) {\n    Content content = acquireAndUpdateActualContent(f, d);\n    if (content != null) {\n      vcs.contentChanged(f.getPath(), content, Clock.getTime());\n    }\n  }","id":61410,"modified_method":"private void registerDocumentContents(LocalHistoryFacade vcs, VirtualFile f, Document d) {\n    Pair<StoredContent, Long> contentAndStamp = acquireAndUpdateActualContent(f, d);\n    if (contentAndStamp != null) {\n      vcs.contentChanged(f.getPath(), contentAndStamp.first, contentAndStamp.second);\n    }\n  }","commit_id":"6d5a16a575da1cbd13e859ef6671f9bb383b4ecf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void saveDocumentContent(VirtualFile f, Document d) {\n    f.putUserData(SAVED_DOCUMENT_CONTENT_AND_STAMP_KEY,\n                  Pair.create(StoredContent.acquireContent(bytesFromDocument(d)), d.getModificationStamp()));\n  }","id":61411,"modified_method":"private void saveDocumentContent(VirtualFile f, Document d) {\n    f.putUserData(SAVED_DOCUMENT_CONTENT_AND_STAMP_KEY,\n                  new ContentAndTimestamps(Clock.getTime(),\n                                           StoredContent.acquireContent(bytesFromDocument(d)),\n                                           d.getModificationStamp()));\n  }","commit_id":"6d5a16a575da1cbd13e859ef6671f9bb383b4ecf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  private Entry doCreateEntry(VirtualFile file, boolean forDeletion) {\n    if (!file.isDirectory()) {\n      if (!isVersioned(file)) return null;\n\n      Content c;\n      if (forDeletion) {\n        FileDocumentManager m = FileDocumentManager.getInstance();\n        Document d = m.getCachedDocument(file); // should not try to load document\n        if (d != null && !m.isDocumentUnsaved(d)) d = null;\n        c = acquireAndClearCurrentContent(file, d);\n      }\n      else {\n        c = getActualContentNoAcquire(file);\n      }\n      return new FileEntry(file.getName(), c, file.getTimeStamp(), !file.isWritable());\n    }\n    DirectoryEntry newDir = new DirectoryEntry(file.getName());\n    doCreateChildren(newDir, iterateDBChildren(file), forDeletion);\n    if (!isVersioned(file) && newDir.getChildren().isEmpty()) return null;\n    return newDir;\n  }","id":61412,"modified_method":"@Nullable\n  private Entry doCreateEntry(VirtualFile file, boolean forDeletion) {\n    if (!file.isDirectory()) {\n      if (!isVersioned(file)) return null;\n\n      Pair<StoredContent, Long> contentAndStamps;\n      if (forDeletion) {\n        FileDocumentManager m = FileDocumentManager.getInstance();\n        Document d = m.getCachedDocument(file); // should not try to load document\n        if (d != null && !m.isDocumentUnsaved(d)) d = null;\n        contentAndStamps = acquireAndClearCurrentContent(file, d);\n      }\n      else {\n        contentAndStamps = getActualContentNoAcquire(file);\n      }\n      return new FileEntry(file.getName(), contentAndStamps.first, contentAndStamps.second, !file.isWritable());\n    }\n    DirectoryEntry newDir = new DirectoryEntry(file.getName());\n    doCreateChildren(newDir, iterateDBChildren(file), forDeletion);\n    if (!isVersioned(file) && newDir.getChildren().isEmpty()) return null;\n    return newDir;\n  }","commit_id":"6d5a16a575da1cbd13e859ef6671f9bb383b4ecf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private Content getActualContentNoAcquire(VirtualFile f) {\n    Pair<StoredContent, Long> result = f.getUserData(SAVED_DOCUMENT_CONTENT_AND_STAMP_KEY);\n    if (result == null) {\n      return StoredContent.transientContent(f);\n    }\n    return result.first;\n  }","id":61413,"modified_method":"@NotNull\n  private Pair<StoredContent, Long> getActualContentNoAcquire(VirtualFile f) {\n    ContentAndTimestamps result = f.getUserData(SAVED_DOCUMENT_CONTENT_AND_STAMP_KEY);\n    if (result == null) {\n      return Pair.create(StoredContent.transientContent(f), f.getTimeStamp());\n    }\n    return Pair.create(result.content, result.registeredTimestamp);\n  }","commit_id":"6d5a16a575da1cbd13e859ef6671f9bb383b4ecf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public Content acquireAndClearCurrentContent(VirtualFile f, @Nullable Document d) {\n    Pair<StoredContent, Long> contentAndStamp = f.getUserData(SAVED_DOCUMENT_CONTENT_AND_STAMP_KEY);\n    f.putUserData(SAVED_DOCUMENT_CONTENT_AND_STAMP_KEY, null);\n\n    if (d != null && contentAndStamp != null) {\n      // if previously stored content was not changed, return it\n      if (d.getModificationStamp() == contentAndStamp.second) return contentAndStamp.first;\n    }\n\n    // release previously stored\n    if (contentAndStamp != null) {\n      contentAndStamp.first.release();\n    }\n\n    // take document's content if any\n    if (d != null) {\n      return StoredContent.acquireContent(bytesFromDocument(d));\n    }\n\n    return StoredContent.acquireContent(f);\n  }","id":61414,"modified_method":"@NotNull\n  public Pair<StoredContent, Long> acquireAndClearCurrentContent(VirtualFile f, @Nullable Document d) {\n    ContentAndTimestamps contentAndStamp = f.getUserData(SAVED_DOCUMENT_CONTENT_AND_STAMP_KEY);\n    f.putUserData(SAVED_DOCUMENT_CONTENT_AND_STAMP_KEY, null);\n\n    if (d != null && contentAndStamp != null) {\n      // if previously stored content was not changed, return it\n      if (d.getModificationStamp() == contentAndStamp.documentModificationStamp) {\n        return Pair.create(contentAndStamp.content, contentAndStamp.registeredTimestamp);\n      }\n    }\n\n    // release previously stored\n    if (contentAndStamp != null) {\n      contentAndStamp.content.release();\n    }\n\n    // take document's content if any\n    if (d != null) {\n      return Pair.create(StoredContent.acquireContent(bytesFromDocument(d)), Clock.getTime());\n    }\n\n    return Pair.create(StoredContent.acquireContent(f), f.getTimeStamp());\n  }","commit_id":"6d5a16a575da1cbd13e859ef6671f9bb383b4ecf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  public Content acquireAndUpdateActualContent(VirtualFile f, @Nullable Document d) {\n    Pair<StoredContent, Long> contentAndStamp = f.getUserData(SAVED_DOCUMENT_CONTENT_AND_STAMP_KEY);\n    if (contentAndStamp == null) {\n      if (d != null) saveDocumentContent(f, d);\n      return StoredContent.acquireContent(f);\n    }\n\n    StoredContent content = contentAndStamp.first;\n\n    // if no need to save current document content when simply return and clear stored one\n    if (d == null) {\n      f.putUserData(SAVED_DOCUMENT_CONTENT_AND_STAMP_KEY, null);\n      return content;\n    }\n\n    // if the stored content equals the current one, do not store it and return null\n    if (d.getModificationStamp() == contentAndStamp.second) return null;\n\n    // is current content has been changed, store it and return the previous one\n    saveDocumentContent(f, d);\n    return content;\n  }","id":61415,"modified_method":"@Nullable\n  public Pair<StoredContent, Long> acquireAndUpdateActualContent(VirtualFile f, @Nullable Document d) {\n    ContentAndTimestamps contentAndStamp = f.getUserData(SAVED_DOCUMENT_CONTENT_AND_STAMP_KEY);\n    if (contentAndStamp == null) {\n      if (d != null) saveDocumentContent(f, d);\n      return Pair.create(StoredContent.acquireContent(f), f.getTimeStamp());\n    }\n\n    // if no need to save current document content when simply return and clear stored one\n    if (d == null) {\n      f.putUserData(SAVED_DOCUMENT_CONTENT_AND_STAMP_KEY, null);\n      return Pair.create(contentAndStamp.content, contentAndStamp.registeredTimestamp);\n    }\n\n    // if the stored content equals the current one, do not store it and return null\n    if (d.getModificationStamp() == contentAndStamp.documentModificationStamp) return null;\n\n    // is current content has been changed, store it and return the previous one\n    saveDocumentContent(f, d);\n    return Pair.create(contentAndStamp.content, contentAndStamp.registeredTimestamp);\n  }","commit_id":"6d5a16a575da1cbd13e859ef6671f9bb383b4ecf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void registerUnsavedDocuments(final LocalHistoryFacade vcs) {\n    ApplicationManager.getApplication().runReadAction(new Runnable() {\n      public void run() {\n        vcs.beginChangeSet();\n        for (Document d : FileDocumentManager.getInstance().getUnsavedDocuments()) {\n          VirtualFile f = getFile(d);\n          if (!shouldRegisterDocument(f)) continue;\n          registerDocumentContents(vcs, f, d);\n          registerDocumentContents(vcs, f, d);\n        }\n        vcs.endChangeSet(null);\n      }\n    });\n  }","id":61416,"modified_method":"public void registerUnsavedDocuments(final LocalHistoryFacade vcs) {\n    ApplicationManager.getApplication().runReadAction(new Runnable() {\n      public void run() {\n        vcs.beginChangeSet();\n        for (Document d : FileDocumentManager.getInstance().getUnsavedDocuments()) {\n          VirtualFile f = getFile(d);\n          if (!shouldRegisterDocument(f)) continue;\n          registerDocumentContents(vcs, f, d);\n        }\n        vcs.endChangeSet(null);\n      }\n    });\n  }","commit_id":"6d5a16a575da1cbd13e859ef6671f9bb383b4ecf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void beforeContentsChange(VirtualFileEvent e) {\n    if (!areContentChangesVersioned(e)) return;\n    VirtualFile f = e.getFile();\n\n    Content content = myGateway.acquireAndUpdateActualContent(f, null);\n    if (content != null) {\n      myVcs.contentChanged(f.getPath(), content, f.getTimeStamp());\n    }\n  }","id":61417,"modified_method":"@Override\n  public void beforeContentsChange(VirtualFileEvent e) {\n    if (!areContentChangesVersioned(e)) return;\n    VirtualFile f = e.getFile();\n\n    Pair<StoredContent, Long> content = myGateway.acquireAndUpdateActualContent(f, null);\n    if (content != null) {\n      myVcs.contentChanged(f.getPath(), content.first, content.second);\n    }\n  }","commit_id":"6d5a16a575da1cbd13e859ef6671f9bb383b4ecf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected void addDefinition(ActionRequest req) throws Exception {\n\t\tString xml = ParamUtil.getString(req, \"xml\");\n\n\t\tWorkflowComponentServiceUtil.deploy(xml);\n\t}","id":61418,"modified_method":"protected void addDefinition(ActionRequest req) throws Exception {\n\t\tString xml = ParamUtil.getString(req, \"xml\");\n\n\t\tString[] communityPermissions = req.getParameterValues(\n\t\t\t\"communityPermissions\");\n\t\tString[] guestPermissions = req.getParameterValues(\n\t\t\t\"guestPermissions\");\n\n\t\tWorkflowDefinitionServiceUtil.addDefinition(\n\t\t\txml, communityPermissions, guestPermissions);\n\t}","commit_id":"e0c74b181944d96d62220ca75cd3b5d625f1b8ea","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void updateTask(ActionRequest req) throws Exception {\n\t\t/*String xml = ParamUtil.getString(req, \"xml\");\n\n\t\tWorkflowComponentServiceUtil.deploy(xml);*/\n\t}","id":61419,"modified_method":"protected void updateTask(ActionRequest req) throws Exception {\n\t\tlong taskId = ParamUtil.getLong(req, \"taskId\");\n\n\t\tString transition = ParamUtil.getString(req, \"transition\");\n\n\t\tWorkflowTaskServiceUtil.updateTask(\n\t\t\ttaskId, transition, req.getParameterMap());\n\t}","commit_id":"e0c74b181944d96d62220ca75cd3b5d625f1b8ea","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void processAction(\n\t\t\tActionMapping mapping, ActionForm form, PortletConfig config,\n\t\t\tActionRequest req, ActionResponse res)\n\t\tthrows Exception {\n\n\t\tString cmd = ParamUtil.getString(req, Constants.CMD);\n\n\t\ttry {\n\t\t\tif (cmd.equals(Constants.ADD) || cmd.equals(Constants.UPDATE)) {\n\t\t\t\tupdateTask(req);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.DELETE)) {\n\t\t\t\tdeleteTask(req);\n\t\t\t}\n\n\t\t\tsendRedirect(req, res);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\t/*if (e instanceof NoSuchTaskException ||\n\t\t\t\te instanceof PrincipalException) {\n\n\t\t\t\tSessionErrors.add(req, e.getClass().getName());\n\n\t\t\t\tsetForward(req, \"portlet.wiki.error\");\n\t\t\t}\n\t\t\telse if (e instanceof TaskNameException) {\n\t\t\t\tSessionErrors.add(req, e.getClass().getName());\n\t\t\t}\n\t\t\telse {*/\n\t\t\t\tthrow e;\n\t\t\t//}\n\t\t}\n\t}","id":61420,"modified_method":"public void processAction(\n\t\t\tActionMapping mapping, ActionForm form, PortletConfig config,\n\t\t\tActionRequest req, ActionResponse res)\n\t\tthrows Exception {\n\n\t\tString cmd = ParamUtil.getString(req, Constants.CMD);\n\n\t\ttry {\n\t\t\tif (cmd.equals(Constants.UPDATE)) {\n\t\t\t\tupdateTask(req);\n\t\t\t}\n\n\t\t\tsendRedirect(req, res);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (e instanceof PrincipalException) {\n\t\t\t\tSessionErrors.add(req, e.getClass().getName());\n\n\t\t\t\tsetForward(req, \"portlet.workflow.error\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t}","commit_id":"e0c74b181944d96d62220ca75cd3b5d625f1b8ea","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public InstanceSearch(RenderRequest req, PortletURL iteratorURL) {\n\t\tsuper(req, new InstanceDisplayTerms(req), new InstanceSearchTerms(req),\n\t\t\t  DEFAULT_CUR_PARAM, DEFAULT_DELTA, iteratorURL, headerNames,\n\t\t\t  EMPTY_RESULTS_MESSAGE);\n\n\t\tInstanceDisplayTerms displayTerms =\n\t\t\t(InstanceDisplayTerms)getDisplayTerms();\n\n\t\titeratorURL.setParameter(\n\t\t\tInstanceDisplayTerms.DEFINITION_NAME,\n\t\t\tdisplayTerms.getDefinitionName());\n\t\titeratorURL.setParameter(\n\t\t\tInstanceDisplayTerms.DEFINITION_VERSION,\n\t\t\tdisplayTerms.getDefinitionVersion());\n\t}","id":61421,"modified_method":"public InstanceSearch(RenderRequest req, PortletURL iteratorURL) {\n\t\tsuper(req, new InstanceDisplayTerms(req), new InstanceSearchTerms(req),\n\t\t\t  DEFAULT_CUR_PARAM, DEFAULT_DELTA, iteratorURL, headerNames,\n\t\t\t  EMPTY_RESULTS_MESSAGE);\n\n\t\tInstanceDisplayTerms displayTerms =\n\t\t\t(InstanceDisplayTerms)getDisplayTerms();\n\n\t\titeratorURL.setParameter(\n\t\t\tInstanceDisplayTerms.DEFINITION_ID,\n\t\t\tString.valueOf(displayTerms.getDefinitionId()));\n\t\titeratorURL.setParameter(\n\t\t\tInstanceDisplayTerms.INSTANCE_ID,\n\t\t\tString.valueOf(displayTerms.getInstanceId()));\n\t\titeratorURL.setParameter(\n\t\t\tInstanceDisplayTerms.DEFINITION_NAME,\n\t\t\tdisplayTerms.getDefinitionName());\n\t\titeratorURL.setParameter(\n\t\t\tInstanceDisplayTerms.DEFINITION_VERSION,\n\t\t\tdisplayTerms.getDefinitionVersion());\n\t\titeratorURL.setParameter(\n\t\t\tInstanceDisplayTerms.HIDE_ENDED_TASKS,\n\t\t\tString.valueOf(displayTerms.isHideEndedTasks()));\n\t}","commit_id":"e0c74b181944d96d62220ca75cd3b5d625f1b8ea","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public InstanceSearchTerms(RenderRequest req) {\n\t\tsuper(req);\n\n\t\tdefinitionName = DAOParamUtil.getLike(\n\t\t\treq, DEFINITION_NAME, StringPool.PERCENT);\n\t\tdefinitionVersion = ParamUtil.getString(req, DEFINITION_VERSION);\n\t\tstartDateGT = DAOParamUtil.getISODate(req, START_DATE_GT);\n\t\tstartDateLT = DAOParamUtil.getISODate(req, START_DATE_LT);\n\t\tendDateGT = DAOParamUtil.getISODate(req, END_DATE_GT);\n\t\tendDateLT = DAOParamUtil.getISODate(req, END_DATE_LT);\n\t}","id":61422,"modified_method":"public InstanceSearchTerms(RenderRequest req) {\n\t\tsuper(req);\n\n\t\tdefinitionId = ParamUtil.getLong(req, DEFINITION_ID);\n\t\tdefinitionName = DAOParamUtil.getLike(\n\t\t\treq, DEFINITION_NAME, StringPool.PERCENT);\n\t\tdefinitionVersion = ParamUtil.getString(req, DEFINITION_VERSION);\n\t\tstartDateGT = DAOParamUtil.getISODate(req, START_DATE_GT);\n\t\tstartDateLT = DAOParamUtil.getISODate(req, START_DATE_LT);\n\t\tendDateGT = DAOParamUtil.getISODate(req, END_DATE_GT);\n\t\tendDateLT = DAOParamUtil.getISODate(req, END_DATE_LT);\n\t\thideEndedTasks = ParamUtil.getBoolean(req, HIDE_ENDED_TASKS);\n\t}","commit_id":"e0c74b181944d96d62220ca75cd3b5d625f1b8ea","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public TaskSearch(RenderRequest req, PortletURL iteratorURL) {\n\t\tsuper(req, new TaskDisplayTerms(req), new TaskSearchTerms(req),\n\t\t\t  DEFAULT_CUR_PARAM, DEFAULT_DELTA, iteratorURL, headerNames,\n\t\t\t  EMPTY_RESULTS_MESSAGE);\n\n\t\tTaskDisplayTerms displayTerms = (TaskDisplayTerms)getDisplayTerms();\n\n\t\titeratorURL.setParameter(\n\t\t\tTaskDisplayTerms.TASK_NAME, displayTerms.getTaskName());\n\t\titeratorURL.setParameter(\n\t\t\tTaskDisplayTerms.DEFINITION_NAME, displayTerms.getDefinitionName());\n\t}","id":61423,"modified_method":"public TaskSearch(RenderRequest req, PortletURL iteratorURL) {\n\t\tsuper(req, new TaskDisplayTerms(req), new TaskSearchTerms(req),\n\t\t\t  DEFAULT_CUR_PARAM, DEFAULT_DELTA, iteratorURL, headerNames,\n\t\t\t  EMPTY_RESULTS_MESSAGE);\n\n\t\tTaskDisplayTerms displayTerms = (TaskDisplayTerms)getDisplayTerms();\n\n\t\titeratorURL.setParameter(\n\t\t\tTaskDisplayTerms.INSTANCE_ID,\n\t\t\tString.valueOf(displayTerms.getInstanceId()));\n\t\titeratorURL.setParameter(\n\t\t\tTaskDisplayTerms.TASK_NAME, displayTerms.getTaskName());\n\t\titeratorURL.setParameter(\n\t\t\tTaskDisplayTerms.DEFINITION_NAME, displayTerms.getDefinitionName());\n\t\titeratorURL.setParameter(\n\t\t\tTaskDisplayTerms.ASSIGNED_TO, displayTerms.getAssignedTo());\n\t\titeratorURL.setParameter(\n\t\t\tTaskDisplayTerms.HIDE_ENDED_TASKS,\n\t\t\tString.valueOf(displayTerms.isHideEndedTasks()));\n\t}","commit_id":"e0c74b181944d96d62220ca75cd3b5d625f1b8ea","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public TaskSearchTerms(RenderRequest req) {\n\t\tsuper(req);\n\n\t\ttaskName = DAOParamUtil.getLike(req, TASK_NAME, StringPool.PERCENT);\n\t\tdefinitionName = DAOParamUtil.getLike(\n\t\t\treq, DEFINITION_NAME, StringPool.PERCENT);\n\t\tcreateDateGT = DAOParamUtil.getISODate(req, CREATE_DATE_GT);\n\t\tcreateDateLT = DAOParamUtil.getISODate(req, CREATE_DATE_LT);\n\t\tstartDateGT = DAOParamUtil.getISODate(req, START_DATE_GT);\n\t\tstartDateLT = DAOParamUtil.getISODate(req, START_DATE_LT);\n\t\tendDateGT = DAOParamUtil.getISODate(req, END_DATE_GT);\n\t\tendDateLT = DAOParamUtil.getISODate(req, END_DATE_LT);\n\t}","id":61424,"modified_method":"public TaskSearchTerms(RenderRequest req) {\n\t\tsuper(req);\n\n\t\tinstanceId = ParamUtil.getLong(req, INSTANCE_ID);\n\t\ttaskName = DAOParamUtil.getLike(req, TASK_NAME, StringPool.PERCENT);\n\t\tdefinitionName = DAOParamUtil.getLike(\n\t\t\treq, DEFINITION_NAME, StringPool.PERCENT);\n\t\tassignedTo = ParamUtil.getString(req, ASSIGNED_TO);\n\t\tcreateDateGT = DAOParamUtil.getISODate(req, CREATE_DATE_GT);\n\t\tcreateDateLT = DAOParamUtil.getISODate(req, CREATE_DATE_LT);\n\t\tstartDateGT = DAOParamUtil.getISODate(req, START_DATE_GT);\n\t\tstartDateLT = DAOParamUtil.getISODate(req, START_DATE_LT);\n\t\tendDateGT = DAOParamUtil.getISODate(req, END_DATE_GT);\n\t\tendDateLT = DAOParamUtil.getISODate(req, END_DATE_LT);\n\t\thideEndedTasks = ParamUtil.getBoolean(req, HIDE_ENDED_TASKS);\n\t}","commit_id":"e0c74b181944d96d62220ca75cd3b5d625f1b8ea","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public String deploy(String xml) throws WorkflowComponentException {\n\t\ttry {\n\t\t\tWorkflowURL url = getWorkflowURL();\n\n\t\t\tString formattedXml = StringUtil.replace(\n\t\t\t\txml,\n\t\t\t\tnew String[] {\n\t\t\t\t\t\"\\n\", \"\\r\", \"\\t\"\n\t\t\t\t},\n\t\t\t\tnew String[] {\n\t\t\t\t\t\"\", \"\", \"\"\n\t\t\t\t});\n\n\t\t\turl.setParameter(Constants.CMD, \"deploy\");\n\t\t\turl.setParameter(\"xml\", formattedXml);\n\n\t\t\tString content = url.getContent();\n\n\t\t\tString definitionId = WorkflowXMLUtil.parseString(\n\t\t\t\tcontent, \"definitionId\");\n\n\t\t\tWorkflowDefinitionServiceUtil.addDefinition(\n\t\t\t\tGetterUtil.getLong(definitionId), xml);\n\n\t\t\treturn definitionId;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new WorkflowComponentException(e);\n\t\t}\n\t}","id":61425,"modified_method":"public String deploy(String xml) throws WorkflowComponentException {\n\t\ttry {\n\t\t\tWorkflowURL url = getWorkflowURL();\n\n\t\t\txml = StringUtil.replace(\n\t\t\t\txml,\n\t\t\t\tnew String[] {\n\t\t\t\t\t\"\\n\", \"\\r\", \"\\t\"\n\t\t\t\t},\n\t\t\t\tnew String[] {\n\t\t\t\t\t\"\", \"\", \"\"\n\t\t\t\t});\n\n\t\t\turl.setParameter(Constants.CMD, \"deploy\");\n\t\t\turl.setParameter(\"xml\", xml);\n\n\t\t\tString content = url.getContent();\n\n\t\t\treturn WorkflowXMLUtil.parseString(content, \"definitionId\");\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new WorkflowComponentException(e);\n\t\t}\n\t}","commit_id":"e0c74b181944d96d62220ca75cd3b5d625f1b8ea","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public com.liferay.portlet.workflow.model.WorkflowDefinition getDefinition(\n\t\tlong definitionId)\n\t\tthrows com.liferay.portal.PortalException, \n\t\t\tcom.liferay.portal.SystemException, java.rmi.RemoteException {\n\t\tPrincipalSessionBean.setThreadValues(_sc);\n\n\t\treturn WorkflowDefinitionServiceFactory.getTxImpl().getDefinition(definitionId);\n\t}","id":61426,"modified_method":"public com.liferay.portlet.workflow.model.WorkflowDefinition addDefinition(\n\t\tjava.lang.String xml, java.lang.String[] communityPermissions,\n\t\tjava.lang.String[] guestPermissions)\n\t\tthrows com.liferay.portal.PortalException, \n\t\t\tcom.liferay.portal.SystemException, java.rmi.RemoteException {\n\t\tPrincipalSessionBean.setThreadValues(_sc);\n\n\t\treturn WorkflowDefinitionServiceFactory.getTxImpl().addDefinition(xml,\n\t\t\tcommunityPermissions, guestPermissions);\n\t}","commit_id":"e0c74b181944d96d62220ca75cd3b5d625f1b8ea","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static void addDefinition(HttpPrincipal httpPrincipal,\n\t\tlong definitionId, java.lang.String xml)\n\t\tthrows com.liferay.portal.SystemException, \n\t\t\tcom.liferay.portal.PortalException {\n\t\ttry {\n\t\t\tObject paramObj0 = new LongWrapper(definitionId);\n\t\t\tObject paramObj1 = xml;\n\n\t\t\tif (xml == null) {\n\t\t\t\tparamObj1 = new NullWrapper(\"java.lang.String\");\n\t\t\t}\n\n\t\t\tMethodWrapper methodWrapper = new MethodWrapper(WorkflowDefinitionServiceUtil.class.getName(),\n\t\t\t\t\t\"addDefinition\", new Object[] { paramObj0, paramObj1 });\n\n\t\t\ttry {\n\t\t\t\tTunnelUtil.invoke(httpPrincipal, methodWrapper);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\tif (e instanceof com.liferay.portal.SystemException) {\n\t\t\t\t\tthrow (com.liferay.portal.SystemException)e;\n\t\t\t\t}\n\n\t\t\t\tif (e instanceof com.liferay.portal.PortalException) {\n\t\t\t\t\tthrow (com.liferay.portal.PortalException)e;\n\t\t\t\t}\n\n\t\t\t\tthrow new com.liferay.portal.SystemException(e);\n\t\t\t}\n\t\t}\n\t\tcatch (com.liferay.portal.SystemException se) {\n\t\t\tString stackTrace = StackTraceUtil.getStackTrace(se);\n\t\t\t_log.error(stackTrace);\n\t\t\tthrow se;\n\t\t}\n\t}","id":61427,"modified_method":"public static com.liferay.portlet.workflow.model.WorkflowDefinition addDefinition(\n\t\tHttpPrincipal httpPrincipal, java.lang.String xml,\n\t\tjava.lang.String[] communityPermissions,\n\t\tjava.lang.String[] guestPermissions)\n\t\tthrows com.liferay.portal.SystemException, \n\t\t\tcom.liferay.portal.PortalException {\n\t\ttry {\n\t\t\tObject paramObj0 = xml;\n\n\t\t\tif (xml == null) {\n\t\t\t\tparamObj0 = new NullWrapper(\"java.lang.String\");\n\t\t\t}\n\n\t\t\tObject paramObj1 = communityPermissions;\n\n\t\t\tif (communityPermissions == null) {\n\t\t\t\tparamObj1 = new NullWrapper(\"[Ljava.lang.String;\");\n\t\t\t}\n\n\t\t\tObject paramObj2 = guestPermissions;\n\n\t\t\tif (guestPermissions == null) {\n\t\t\t\tparamObj2 = new NullWrapper(\"[Ljava.lang.String;\");\n\t\t\t}\n\n\t\t\tMethodWrapper methodWrapper = new MethodWrapper(WorkflowDefinitionServiceUtil.class.getName(),\n\t\t\t\t\t\"addDefinition\",\n\t\t\t\t\tnew Object[] { paramObj0, paramObj1, paramObj2 });\n\t\t\tObject returnObj = null;\n\n\t\t\ttry {\n\t\t\t\treturnObj = TunnelUtil.invoke(httpPrincipal, methodWrapper);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\tif (e instanceof com.liferay.portal.SystemException) {\n\t\t\t\t\tthrow (com.liferay.portal.SystemException)e;\n\t\t\t\t}\n\n\t\t\t\tif (e instanceof com.liferay.portal.PortalException) {\n\t\t\t\t\tthrow (com.liferay.portal.PortalException)e;\n\t\t\t\t}\n\n\t\t\t\tthrow new com.liferay.portal.SystemException(e);\n\t\t\t}\n\n\t\t\treturn (com.liferay.portlet.workflow.model.WorkflowDefinition)returnObj;\n\t\t}\n\t\tcatch (com.liferay.portal.SystemException se) {\n\t\t\tString stackTrace = StackTraceUtil.getStackTrace(se);\n\t\t\t_log.error(stackTrace);\n\t\t\tthrow se;\n\t\t}\n\t}","commit_id":"e0c74b181944d96d62220ca75cd3b5d625f1b8ea","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void addDefinition(long definitionId, String xml)\n\t\tthrows PortalException, SystemException {\n\n\t\ttry {\n\t\t\tString companyId = getUser().getCompanyId();\n\t\t\tString portletId = CompanyImpl.SYSTEM;\n\t\t\tString groupId = GroupImpl.DEFAULT_PARENT_GROUP_ID;\n\t\t\tString repositoryId = CompanyImpl.SYSTEM;\n\t\t\tString dirName = \"workflow/definitions\";\n\t\t\tString fileName = dirName  + \"/\" + definitionId + \".xml\";\n\n\t\t\ttry {\n\t\t\t\tDLServiceUtil.addDirectory(\n\t\t\t\t\tcompanyId, repositoryId, dirName);\n\t\t\t}\n\t\t\tcatch (DuplicateDirectoryException dde) {\n\t\t\t}\n\n\t\t\tDLServiceUtil.addFile(\n\t\t\t\tcompanyId, portletId, groupId, repositoryId, fileName,\n\t\t\t\txml.getBytes());\n\t\t}\n\t\tcatch (RemoteException re) {\n\t\t\tthrow new SystemException(re);\n\t\t}\n\t}","id":61428,"modified_method":"public WorkflowDefinition addDefinition(\n\t\t\tString xml, String[] communityPermissions,\n\t\t\tString[] guestPermissions)\n\t\tthrows PortalException, SystemException {\n\n\t\treturn addDefinition(\n\t\t\txml, null, null, communityPermissions, guestPermissions);\n\t}","commit_id":"e0c74b181944d96d62220ca75cd3b5d625f1b8ea","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static com.liferay.portlet.workflow.model.WorkflowDefinitionSoap getDefinition(\n\t\tlong definitionId) throws RemoteException {\n\t\ttry {\n\t\t\tcom.liferay.portlet.workflow.model.WorkflowDefinition returnValue = WorkflowDefinitionServiceUtil.getDefinition(definitionId);\n\n\t\t\treturn com.liferay.portlet.workflow.model.WorkflowDefinitionSoap.toSoapModel(returnValue);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tString stackTrace = StackTraceUtil.getStackTrace(e);\n\t\t\t_log.error(stackTrace);\n\t\t\tthrow new RemoteException(stackTrace);\n\t\t}\n\t}","id":61429,"modified_method":"public static com.liferay.portlet.workflow.model.WorkflowDefinitionSoap addDefinition(\n\t\tjava.lang.String xml, java.lang.String[] communityPermissions,\n\t\tjava.lang.String[] guestPermissions) throws RemoteException {\n\t\ttry {\n\t\t\tcom.liferay.portlet.workflow.model.WorkflowDefinition returnValue = WorkflowDefinitionServiceUtil.addDefinition(xml,\n\t\t\t\t\tcommunityPermissions, guestPermissions);\n\n\t\t\treturn com.liferay.portlet.workflow.model.WorkflowDefinitionSoap.toSoapModel(returnValue);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tString stackTrace = StackTraceUtil.getStackTrace(e);\n\t\t\t_log.error(stackTrace);\n\t\t\tthrow new RemoteException(stackTrace);\n\t\t}\n\t}","commit_id":"e0c74b181944d96d62220ca75cd3b5d625f1b8ea","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n     * Parses the string.\n     *\n     * <p>Valid placeholders are:<\/p>\n     * <ul>\n     * <li><b>ipaddr<\/b>, The Node IP Address<\/li>\n     * <li><b>step<\/b>, The Collection Step in seconds<\/li>\n     * <li><b>nodeId<\/b>, The Node ID<\/li>\n     * <li><b>nodeLabel<\/b>, The Node Label<\/li>\n     * <li><b>foreignId<\/b>, The Node Foreign ID<\/li>\n     * <li><b>foreignSource<\/b>, The Node Foreign Source<\/li>\n     * <li>Any asset property defined on the node.<\/li>\n     * <\/ul>\n     * \n     * @param reference the reference\n     * @param unformattedString the unformatted string\n     * @param node the node\n     * @param ipAddress the IP address\n     * @return the string\n     * @throws IllegalArgumentException the illegal argument exception\n     */\n    protected String parseString(final String reference, final String unformattedString, final OnmsNode node, final String ipAddress) throws IllegalArgumentException {\n        if (unformattedString == null)\n            return null;\n        String formattedString = unformattedString.replaceAll(\"[{](?i)(ipAddr|ipAddress)[}]\", ipAddress);\n        formattedString = formattedString.replaceAll(\"[{](?i)nodeId[}]\", node.getNodeId());\n        if (node.getLabel() != null)\n            formattedString = formattedString.replaceAll(\"[{](?i)nodeLabel[}]\", node.getLabel());\n        if (node.getForeignId() != null)\n            formattedString = formattedString.replaceAll(\"[{](?i)foreignId[}]\", node.getForeignId());\n        if (node.getForeignSource() != null)\n            formattedString = formattedString.replaceAll(\"[{](?i)foreignSource[}]\", node.getForeignSource());\n        if (node.getAssetRecord() != null) {\n            BeanWrapper wrapper = new BeanWrapperImpl(node.getAssetRecord());\n            for (PropertyDescriptor p : wrapper.getPropertyDescriptors()) {\n                Object obj = wrapper.getPropertyValue(p.getName());\n                if (obj != null)\n                    formattedString = formattedString.replaceAll(\"[{](?i)\" + p.getName() + \"[}]\", obj.toString());\n            }\n        }\n        if (formattedString.matches(\".*[{].+[}].*\"))\n            throw new IllegalArgumentException(\"The \" + reference + \" \" + formattedString + \" contains unknown placeholders.\");\n        return formattedString;\n    }","id":61430,"modified_method":"/**\n     * Parses the string.\n     * \n     * <p>Valid placeholders are:<\/p>\n     * <ul>\n     * <li><b>ipaddr<\/b>, The Node IP Address<\/li>\n     * <li><b>step<\/b>, The Collection Step in seconds<\/li>\n     * <li><b>nodeId<\/b>, The Node ID<\/li>\n     * <li><b>nodeLabel<\/b>, The Node Label<\/li>\n     * <li><b>foreignId<\/b>, The Node Foreign ID<\/li>\n     * <li><b>foreignSource<\/b>, The Node Foreign Source<\/li>\n     * <li>Any asset property defined on the node.<\/li>\n     * <\/ul>\n     *\n     * @param reference the reference\n     * @param unformattedString the unformatted string\n     * @param node the node\n     * @param ipAddress the IP address\n     * @param collectionStep the collection step\n     * @return the string\n     * @throws IllegalArgumentException the illegal argument exception\n     */\n    protected String parseString(final String reference, final String unformattedString, final OnmsNode node, final String ipAddress, final Integer collectionStep) throws IllegalArgumentException {\n        if (unformattedString == null || node == null)\n            return null;\n        String formattedString = unformattedString.replaceAll(\"[{](?i)(ipAddr|ipAddress)[}]\", ipAddress);\n        formattedString = formattedString.replaceAll(\"[{](?i)step[}]\", collectionStep.toString());\n        formattedString = formattedString.replaceAll(\"[{](?i)nodeId[}]\", node.getNodeId());\n        if (node.getLabel() != null)\n            formattedString = formattedString.replaceAll(\"[{](?i)nodeLabel[}]\", node.getLabel());\n        if (node.getForeignId() != null)\n            formattedString = formattedString.replaceAll(\"[{](?i)foreignId[}]\", node.getForeignId());\n        if (node.getForeignSource() != null)\n            formattedString = formattedString.replaceAll(\"[{](?i)foreignSource[}]\", node.getForeignSource());\n        if (node.getAssetRecord() != null) {\n            BeanWrapper wrapper = new BeanWrapperImpl(node.getAssetRecord());\n            for (PropertyDescriptor p : wrapper.getPropertyDescriptors()) {\n                Object obj = wrapper.getPropertyValue(p.getName());\n                if (obj != null)\n                    formattedString = formattedString.replaceAll(\"[{](?i)\" + p.getName() + \"[}]\", obj.toString());\n            }\n        }\n        if (formattedString.matches(\".*[{].+[}].*\"))\n            throw new IllegalArgumentException(\"The \" + reference + \" \" + formattedString + \" contains unknown placeholders.\");\n        return formattedString;\n    }","commit_id":"a5978b365a9635fbb7150458215c42f92aa50646","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n    public XmlCollectionSet collect(CollectionAgent agent, XmlDataCollection collection, Map<String, Object> parameters) throws CollectionException {\n        XmlCollectionSet collectionSet = new XmlCollectionSet();\n        collectionSet.setCollectionTimestamp(new Date());\n        collectionSet.setStatus(ServiceCollector.COLLECTION_UNKNOWN);\n        DateTime startTime = new DateTime();\n        try {\n            LOG.debug(\"collect: looping sources for collection {}\", collection.getName());\n            for (XmlSource source : collection.getXmlSources()) {\n                LOG.debug(\"collect: starting source url '{}' collection\", source.getUrl());\n                String urlStr = parseUrl(source.getUrl(), agent, collection.getXmlRrd().getStep());\n                LOG.debug(\"collect: parsed url for source url '{}'\", source.getUrl());\n                Request request = parseRequest(source.getRequest(), agent);\n                LOG.debug(\"collect: parsed request for source url '{}'\", source.getUrl());\n                fillCollectionSet(urlStr, request, agent, collectionSet, source);\n                LOG.debug(\"collect: finished source url '{}' collection\", source.getUrl());\n            }\n            collectionSet.setStatus(ServiceCollector.COLLECTION_SUCCEEDED);\n            DateTime endTime = new DateTime();\n            LOG.debug(\"collect: finished collection {}: duration: {} ms\", collection.getName(), endTime.getMillis()-startTime.getMillis());\n            return collectionSet;\n        } catch (Exception e) {\n            collectionSet.setStatus(ServiceCollector.COLLECTION_FAILED);\n            DateTime endTime = new DateTime();\n            LOG.debug(\"collect: failed collection {}: duration: {} ms\", collection.getName(), endTime.getMillis()-startTime.getMillis());\n            throw new CollectionException(e.getMessage(), e);\n        }\n    }","id":61431,"modified_method":"@Override\n    public XmlCollectionSet collect(CollectionAgent agent, XmlDataCollection collection, Map<String, Object> parameters) throws CollectionException {\n        XmlCollectionSet collectionSet = new XmlCollectionSet();\n        collectionSet.setCollectionTimestamp(new Date());\n        collectionSet.setStatus(ServiceCollector.COLLECTION_UNKNOWN);\n        DateTime startTime = new DateTime();\n        try {\n            LOG.debug(\"collect: looping sources for collection {}\", collection.getName());\n            for (XmlSource source : collection.getXmlSources()) {\n                LOG.debug(\"collect: starting source url '{}' collection\", source.getUrl());\n                String urlStr = parseUrl(source.getUrl(), agent, collection.getXmlRrd().getStep());\n                LOG.debug(\"collect: parsed url for source url '{}'\", source.getUrl());\n                Request request = parseRequest(source.getRequest(), agent, collection.getXmlRrd().getStep());\n                LOG.debug(\"collect: parsed request for source url '{}'\", source.getUrl());\n                fillCollectionSet(urlStr, request, agent, collectionSet, source);\n                LOG.debug(\"collect: finished source url '{}' collection\", source.getUrl());\n            }\n            collectionSet.setStatus(ServiceCollector.COLLECTION_SUCCEEDED);\n            return collectionSet;\n        } catch (Exception e) {\n            collectionSet.setStatus(ServiceCollector.COLLECTION_FAILED);\n            throw new CollectionException(e.getMessage(), e);\n        } finally {\n            String status = collectionSet.getStatus() == ServiceCollector.COLLECTION_SUCCEEDED ? \"finished\" : \"failed\";\n            DateTime endTime = new DateTime();\n            LOG.debug(\"collect: {} collection {}: duration: {} ms\", status, collection.getName(), endTime.getMillis()-startTime.getMillis());\n        }\n    }","commit_id":"a5978b365a9635fbb7150458215c42f92aa50646","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Parses the URL.\n     * \n     * <p>Additional placeholders:<\/p>\n     * <ul>\n     * <li><b>step<\/b>, The Collection Step in seconds<\/li>\n     * <\/ul>\n     * \n     * @param unformattedUrl the unformatted URL\n     * @param agent the collection agent\n     * @param collectionStep the collection step (in seconds)\n     * @return the string\n     * \n     * @throws IllegalArgumentException the illegal argument exception\n     */\n    protected String parseUrl(final String unformattedUrl, final CollectionAgent agent, final Integer collectionStep) throws IllegalArgumentException {\n        final OnmsNode node = getNodeDao().get(agent.getNodeId());\n        String url = parseString(\"URL\", unformattedUrl, node, agent.getHostAddress());\n        return url.replaceAll(\"[{]step[}]\", collectionStep.toString());\n    }","id":61432,"modified_method":"/**\n     * Parses the URL.\n     * \n     * <p>Additional placeholders:<\/p>\n     * <ul>\n     * <li><b>step<\/b>, The Collection Step in seconds<\/li>\n     * <\/ul>\n     * \n     * @param unformattedUrl the unformatted URL\n     * @param agent the collection agent\n     * @param collectionStep the collection step (in seconds)\n     * @return the string\n     * \n     * @throws IllegalArgumentException the illegal argument exception\n     */\n    protected String parseUrl(final String unformattedUrl, final CollectionAgent agent, final Integer collectionStep) throws IllegalArgumentException {\n        final OnmsNode node = getNodeDao().get(agent.getNodeId());\n        return parseString(\"URL\", unformattedUrl, node, agent.getHostAddress(), collectionStep);\n    }","commit_id":"a5978b365a9635fbb7150458215c42f92aa50646","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Parses the request.\n     *\n     * @param unformattedRequest the unformatted request\n     * @param agent the agent\n     * @return the request\n     * @throws IllegalArgumentException the illegal argument exception\n     */\n    protected Request parseRequest(final Request unformattedRequest, final CollectionAgent agent) throws IllegalArgumentException {\n        if (unformattedRequest == null)\n            return null;\n        final OnmsNode node = getNodeDao().get(agent.getNodeId());\n        final Request request = new Request();\n        for (Header header : unformattedRequest.getHeaders()) {\n            request.addHeader(header.getName(), parseString(header.getName(), header.getValue(), node, agent.getHostAddress()));\n        }\n        for (Parameter param : unformattedRequest.getParameters()) {\n            request.addParameter(param.getName(), parseString(param.getName(), param.getValue(), node, agent.getHostAddress()));\n        }\n        final Content cnt = unformattedRequest.getContent();\n        if (cnt != null)\n            request.setContent(new Content(cnt.getType(), parseString(\"Content\", cnt.getData(), node, agent.getHostAddress())));\n        return request;\n    }","id":61433,"modified_method":"/**\n     * Parses the request.\n     *\n     * @param unformattedRequest the unformatted request\n     * @param agent the agent\n     * @param collectionStep the collection step\n     * @return the request\n     * @throws IllegalArgumentException the illegal argument exception\n     */\n    protected Request parseRequest(final Request unformattedRequest, final CollectionAgent agent, final Integer collectionStep) throws IllegalArgumentException {\n        if (unformattedRequest == null)\n            return null;\n        final OnmsNode node = getNodeDao().get(agent.getNodeId());\n        final Request request = new Request();\n        for (Header header : unformattedRequest.getHeaders()) {\n            request.addHeader(header.getName(), parseString(header.getName(), header.getValue(), node, agent.getHostAddress(), collectionStep));\n        }\n        for (Parameter param : unformattedRequest.getParameters()) {\n            request.addParameter(param.getName(), parseString(param.getName(), param.getValue(), node, agent.getHostAddress(), collectionStep));\n        }\n        final Content cnt = unformattedRequest.getContent();\n        if (cnt != null)\n            request.setContent(new Content(cnt.getType(), parseString(\"Content\", cnt.getData(), node, agent.getHostAddress(), collectionStep)));\n        return request;\n    }","commit_id":"a5978b365a9635fbb7150458215c42f92aa50646","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Test parse string.\n     *\n     * @throws Exception the exception\n     */\n    @Test\n    public void testParseString() throws Exception {\n        AbstractXmlCollectionHandler handler = new AbstractXmlCollectionHandler() {\n            @Override\n            public XmlCollectionSet collect(CollectionAgent agent,\n                    XmlDataCollection collection,\n                    Map<String, Object> parameters)\n                            throws CollectionException {\n                return null;\n            }\n\n            @Override\n            protected void processXmlResource(\n                    XmlCollectionResource collectionResource,\n                    AttributeGroupType attribGroupType) {\n            }\n\n            @Override\n            protected void fillCollectionSet(String urlString,\n                    Request request, CollectionAgent agent,\n                    XmlCollectionSet collectionSet, XmlSource source)\n                    throws Exception {\n            }\n        };\n        OnmsNode node = new OnmsNode();\n        node.setId(1);\n        node.setLabel(\"mynode.local\");\n        OnmsAssetRecord asset = new OnmsAssetRecord();\n        asset.setSerialNumber(\"1001\");\n        node.setAssetRecord(asset);\n        String url = handler.parseString(\"URL\", \"http://{nodeLabel}/{ipAddress}/serial/{serialNumber}\", node, \"127.0.0.1\");\n        Assert.assertEquals(\"http://mynode.local/127.0.0.1/serial/1001\", url);\n        String multiline = \"<data>\\n   <source label='{nodeLabel}'/>\\n<\/data>\";\n        String xml = handler.parseString(\"Content\", multiline, node, \"127.0.0.1\");\n        Assert.assertEquals(\"<data>\\n   <source label='mynode.local'/>\\n<\/data>\", xml);\n    }","id":61434,"modified_method":"/**\n     * Test parse string.\n     *\n     * @throws Exception the exception\n     */\n    @Test\n    public void testParseString() throws Exception {\n        AbstractXmlCollectionHandler handler = new AbstractXmlCollectionHandler() {\n            @Override\n            public XmlCollectionSet collect(CollectionAgent agent,\n                    XmlDataCollection collection,\n                    Map<String, Object> parameters)\n                            throws CollectionException {\n                return null;\n            }\n\n            @Override\n            protected void processXmlResource(\n                    XmlCollectionResource collectionResource,\n                    AttributeGroupType attribGroupType) {\n            }\n\n            @Override\n            protected void fillCollectionSet(String urlString,\n                    Request request, CollectionAgent agent,\n                    XmlCollectionSet collectionSet, XmlSource source)\n                    throws Exception {\n            }\n        };\n        OnmsNode node = new OnmsNode();\n        node.setId(1);\n        node.setLabel(\"mynode.local\");\n        OnmsAssetRecord asset = new OnmsAssetRecord();\n        asset.setSerialNumber(\"1001\");\n        node.setAssetRecord(asset);\n        String url = handler.parseString(\"URL\", \"http://{nodeLabel}/{ipAddress}/serial/{serialNumber}/{step}\", node, \"127.0.0.1\", 300);\n        Assert.assertEquals(\"http://mynode.local/127.0.0.1/serial/1001/300\", url);\n        String multiline = \"<data>\\n   <source label='{nodeLabel}'/>\\n<\/data>\";\n        String xml = handler.parseString(\"Content\", multiline, node, \"127.0.0.1\", 300);\n        Assert.assertEquals(\"<data>\\n   <source label='mynode.local'/>\\n<\/data>\", xml);\n    }","commit_id":"a5978b365a9635fbb7150458215c42f92aa50646","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n    public XmlCollectionSet collect(CollectionAgent agent, XmlDataCollection collection, Map<String, Object> parameters) throws CollectionException {\n        // Create a new collection set.\n        XmlCollectionSet collectionSet = new XmlCollectionSet();\n        collectionSet.setCollectionTimestamp(new Date());\n        collectionSet.setStatus(ServiceCollector.COLLECTION_UNKNOWN);\n\n        // TODO We could be careful when handling exceptions because parsing exceptions will be treated different from connection or retrieval exceptions\n        try {\n            File resourceDir = new File(getRrdRepository().getRrdBaseDir(), Integer.toString(agent.getNodeId()));\n            for (XmlSource source : collection.getXmlSources()) {\n                if (!source.getUrl().startsWith(Sftp3gppUrlHandler.PROTOCOL)) {\n                    throw new CollectionException(\"The 3GPP SFTP Collection Handler can only use the protocol \" + Sftp3gppUrlHandler.PROTOCOL);\n                }\n                String urlStr = parseUrl(source.getUrl(), agent, collection.getXmlRrd().getStep());\n                Request request = parseRequest(source.getRequest(), agent);\n                URL url = UrlFactory.getUrl(urlStr, request);\n                String lastFile = Sftp3gppUtils.getLastFilename(getServiceName(), resourceDir, url.getPath());\n                Sftp3gppUrlConnection connection = (Sftp3gppUrlConnection) url.openConnection();\n                if (lastFile == null) {\n                    lastFile = connection.get3gppFileName();\n                    LOG.debug(\"collect(single): retrieving file from {}{}{} from {}\", url.getPath(), File.separatorChar, lastFile, agent.getHostAddress());\n                    VTDNav doc = getVTDXmlDocument(urlStr, request);\n                    fillCollectionSet(agent, collectionSet, source, doc);\n                    Sftp3gppUtils.setLastFilename(getServiceName(), resourceDir, url.getPath(), lastFile);\n                    Sftp3gppUtils.deleteFile(connection, lastFile);\n                } else {\n                    connection.connect();\n                    List<String> files = connection.getFileList();\n                    long lastTs = connection.getTimeStampFromFile(lastFile);\n                    boolean collected = false;\n                    for (String fileName : files) {\n                        if (connection.getTimeStampFromFile(fileName) > lastTs) {\n                            LOG.debug(\"collect(multiple): retrieving file {} from {}\", fileName, agent.getHostAddress());\n                            InputStream is = connection.getFile(fileName);\n                            VTDNav doc = getVTDXmlDocument(is, request);\n                            IOUtils.closeQuietly(is);\n                            fillCollectionSet(agent, collectionSet, source, doc);\n                            Sftp3gppUtils.setLastFilename(getServiceName(), resourceDir, url.getPath(), fileName);\n                            Sftp3gppUtils.deleteFile(connection, fileName);\n                            collected = true;\n                        }\n                    }\n                    if (!collected) {\n                        LOG.warn(\"collect: could not find any file after {} on {}\", lastFile, agent);\n                    }\n                    connection.disconnect();\n                }\n            }\n            collectionSet.setStatus(ServiceCollector.COLLECTION_SUCCEEDED);\n            return collectionSet;\n        } catch (Exception e) {\n            collectionSet.setStatus(ServiceCollector.COLLECTION_FAILED);\n            throw new CollectionException(e.getMessage(), e);\n        }\n    }","id":61435,"modified_method":"@Override\n    public XmlCollectionSet collect(CollectionAgent agent, XmlDataCollection collection, Map<String, Object> parameters) throws CollectionException {\n        // Create a new collection set.\n        XmlCollectionSet collectionSet = new XmlCollectionSet();\n        collectionSet.setCollectionTimestamp(new Date());\n        collectionSet.setStatus(ServiceCollector.COLLECTION_UNKNOWN);\n\n        // TODO We could be careful when handling exceptions because parsing exceptions will be treated different from connection or retrieval exceptions\n        DateTime startTime = new DateTime();\n        try {\n            File resourceDir = new File(getRrdRepository().getRrdBaseDir(), Integer.toString(agent.getNodeId()));\n            for (XmlSource source : collection.getXmlSources()) {\n                if (!source.getUrl().startsWith(Sftp3gppUrlHandler.PROTOCOL)) {\n                    throw new CollectionException(\"The 3GPP SFTP Collection Handler can only use the protocol \" + Sftp3gppUrlHandler.PROTOCOL);\n                }\n                String urlStr = parseUrl(source.getUrl(), agent, collection.getXmlRrd().getStep());\n                Request request = parseRequest(source.getRequest(), agent, collection.getXmlRrd().getStep());\n                URL url = UrlFactory.getUrl(urlStr, request);\n                String lastFile = Sftp3gppUtils.getLastFilename(getServiceName(), resourceDir, url.getPath());\n                Sftp3gppUrlConnection connection = (Sftp3gppUrlConnection) url.openConnection();\n                if (lastFile == null) {\n                    lastFile = connection.get3gppFileName();\n                    LOG.debug(\"collect(single): retrieving file from {}{}{} from {}\", url.getPath(), File.separatorChar, lastFile, agent.getHostAddress());\n                    VTDNav doc = getVTDXmlDocument(urlStr, request);\n                    fillCollectionSet(agent, collectionSet, source, doc);\n                    Sftp3gppUtils.setLastFilename(getServiceName(), resourceDir, url.getPath(), lastFile);\n                    Sftp3gppUtils.deleteFile(connection, lastFile);\n                } else {\n                    connection.connect();\n                    List<String> files = connection.getFileList();\n                    long lastTs = connection.getTimeStampFromFile(lastFile);\n                    boolean collected = false;\n                    for (String fileName : files) {\n                        if (connection.getTimeStampFromFile(fileName) > lastTs) {\n                            LOG.debug(\"collect(multiple): retrieving file {} from {}\", fileName, agent.getHostAddress());\n                            InputStream is = connection.getFile(fileName);\n                            VTDNav doc = getVTDXmlDocument(is, request);\n                            IOUtils.closeQuietly(is);\n                            fillCollectionSet(agent, collectionSet, source, doc);\n                            Sftp3gppUtils.setLastFilename(getServiceName(), resourceDir, url.getPath(), fileName);\n                            Sftp3gppUtils.deleteFile(connection, fileName);\n                            collected = true;\n                        }\n                    }\n                    if (!collected) {\n                        LOG.warn(\"collect: could not find any file after {} on {}\", lastFile, agent);\n                    }\n                    connection.disconnect();\n                }\n            }\n            collectionSet.setStatus(ServiceCollector.COLLECTION_SUCCEEDED);\n            return collectionSet;\n        } catch (Exception e) {\n            collectionSet.setStatus(ServiceCollector.COLLECTION_FAILED);\n            throw new CollectionException(e.getMessage(), e);\n        } finally {\n            String status = collectionSet.getStatus() == ServiceCollector.COLLECTION_SUCCEEDED ? \"finished\" : \"failed\";\n            DateTime endTime = new DateTime();\n            LOG.debug(\"collect: {} collection {}: duration: {} ms\", status, collection.getName(), endTime.getMillis()-startTime.getMillis());\n        }\n    }","commit_id":"a5978b365a9635fbb7150458215c42f92aa50646","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n    public XmlCollectionSet collect(CollectionAgent agent, XmlDataCollection collection, Map<String, Object> parameters) throws CollectionException {\n        // Create a new collection set.\n        XmlCollectionSet collectionSet = new XmlCollectionSet();\n        collectionSet.setCollectionTimestamp(new Date());\n        collectionSet.setStatus(ServiceCollector.COLLECTION_UNKNOWN);\n\n        // TODO We could be careful when handling exceptions because parsing exceptions will be treated different from connection or retrieval exceptions\n        try {\n            File resourceDir = new File(getRrdRepository().getRrdBaseDir(), Integer.toString(agent.getNodeId()));\n            for (XmlSource source : collection.getXmlSources()) {\n                if (!source.getUrl().startsWith(Sftp3gppUrlHandler.PROTOCOL)) {\n                    throw new CollectionException(\"The 3GPP SFTP Collection Handler can only use the protocol \" + Sftp3gppUrlHandler.PROTOCOL);\n                }\n                String urlStr = parseUrl(source.getUrl(), agent, collection.getXmlRrd().getStep());\n                Request request = parseRequest(source.getRequest(), agent);\n                URL url = UrlFactory.getUrl(urlStr, request);\n                String lastFile = Sftp3gppUtils.getLastFilename(getServiceName(), resourceDir, url.getPath());\n                Sftp3gppUrlConnection connection = (Sftp3gppUrlConnection) url.openConnection();\n                if (lastFile == null) {\n                    lastFile = connection.get3gppFileName();\n                    LOG.debug(\"collect(single): retrieving file from {}{}{} from {}\", url.getPath(), File.separatorChar, lastFile, agent.getHostAddress());\n                    Document doc = getXmlDocument(urlStr, request);\n                    fillCollectionSet(agent, collectionSet, source, doc);\n                    Sftp3gppUtils.setLastFilename(getServiceName(), resourceDir, url.getPath(), lastFile);\n                    Sftp3gppUtils.deleteFile(connection, lastFile);\n                } else {\n                    connection.connect();\n                    List<String> files = connection.getFileList();\n                    long lastTs = connection.getTimeStampFromFile(lastFile);\n                    boolean collected = false;\n                    for (String fileName : files) {\n                        if (connection.getTimeStampFromFile(fileName) > lastTs) {\n                            LOG.debug(\"collect(multiple): retrieving file {} from {}\", fileName, agent.getHostAddress());\n                            InputStream is = connection.getFile(fileName);\n                            Document doc = getXmlDocument(is, request);\n                            IOUtils.closeQuietly(is);\n                            fillCollectionSet(agent, collectionSet, source, doc);\n                            Sftp3gppUtils.setLastFilename(getServiceName(), resourceDir, url.getPath(), fileName);\n                            Sftp3gppUtils.deleteFile(connection, fileName);\n                            collected = true;\n                        }\n                    }\n                    if (!collected) {\n                        LOG.warn(\"collect: could not find any file after {} on {}\", lastFile, agent);\n                    }\n                    connection.disconnect();\n                }\n            }\n            collectionSet.setStatus(ServiceCollector.COLLECTION_SUCCEEDED);\n            return collectionSet;\n        } catch (Exception e) {\n            collectionSet.setStatus(ServiceCollector.COLLECTION_FAILED);\n            throw new CollectionException(e.getMessage(), e);\n        }\n    }","id":61436,"modified_method":"@Override\n    public XmlCollectionSet collect(CollectionAgent agent, XmlDataCollection collection, Map<String, Object> parameters) throws CollectionException {\n        // Create a new collection set.\n        XmlCollectionSet collectionSet = new XmlCollectionSet();\n        collectionSet.setCollectionTimestamp(new Date());\n        collectionSet.setStatus(ServiceCollector.COLLECTION_UNKNOWN);\n\n        // TODO We could be careful when handling exceptions because parsing exceptions will be treated different from connection or retrieval exceptions\n        DateTime startTime = new DateTime();\n        try {\n            File resourceDir = new File(getRrdRepository().getRrdBaseDir(), Integer.toString(agent.getNodeId()));\n            for (XmlSource source : collection.getXmlSources()) {\n                if (!source.getUrl().startsWith(Sftp3gppUrlHandler.PROTOCOL)) {\n                    throw new CollectionException(\"The 3GPP SFTP Collection Handler can only use the protocol \" + Sftp3gppUrlHandler.PROTOCOL);\n                }\n                String urlStr = parseUrl(source.getUrl(), agent, collection.getXmlRrd().getStep());\n                Request request = parseRequest(source.getRequest(), agent, collection.getXmlRrd().getStep());\n                URL url = UrlFactory.getUrl(urlStr, request);\n                String lastFile = Sftp3gppUtils.getLastFilename(getServiceName(), resourceDir, url.getPath());\n                Sftp3gppUrlConnection connection = (Sftp3gppUrlConnection) url.openConnection();\n                if (lastFile == null) {\n                    lastFile = connection.get3gppFileName();\n                    LOG.debug(\"collect(single): retrieving file from {}{}{} from {}\", url.getPath(), File.separatorChar, lastFile, agent.getHostAddress());\n                    Document doc = getXmlDocument(urlStr, request);\n                    fillCollectionSet(agent, collectionSet, source, doc);\n                    Sftp3gppUtils.setLastFilename(getServiceName(), resourceDir, url.getPath(), lastFile);\n                    Sftp3gppUtils.deleteFile(connection, lastFile);\n                } else {\n                    connection.connect();\n                    List<String> files = connection.getFileList();\n                    long lastTs = connection.getTimeStampFromFile(lastFile);\n                    boolean collected = false;\n                    for (String fileName : files) {\n                        if (connection.getTimeStampFromFile(fileName) > lastTs) {\n                            LOG.debug(\"collect(multiple): retrieving file {} from {}\", fileName, agent.getHostAddress());\n                            InputStream is = connection.getFile(fileName);\n                            Document doc = getXmlDocument(is, request);\n                            IOUtils.closeQuietly(is);\n                            fillCollectionSet(agent, collectionSet, source, doc);\n                            Sftp3gppUtils.setLastFilename(getServiceName(), resourceDir, url.getPath(), fileName);\n                            Sftp3gppUtils.deleteFile(connection, fileName);\n                            collected = true;\n                        }\n                    }\n                    if (!collected) {\n                        LOG.warn(\"collect: could not find any file after {} on {}\", lastFile, agent);\n                    }\n                    connection.disconnect();\n                }\n            }\n            collectionSet.setStatus(ServiceCollector.COLLECTION_SUCCEEDED);\n            return collectionSet;\n        } catch (Exception e) {\n            collectionSet.setStatus(ServiceCollector.COLLECTION_FAILED);\n            throw new CollectionException(e.getMessage(), e);\n        } finally {\n            String status = collectionSet.getStatus() == ServiceCollector.COLLECTION_SUCCEEDED ? \"finished\" : \"failed\";\n            DateTime endTime = new DateTime();\n            LOG.debug(\"collect: {} collection {}: duration: {} ms\", status, collection.getName(), endTime.getMillis()-startTime.getMillis());\n        }\n    }","commit_id":"a5978b365a9635fbb7150458215c42f92aa50646","url":"https://github.com/OpenNMS/opennms"},{"original_method":"protected void validateClaims(Client client, JwtClaims claims) {\n        validateIssuer(claims.getIssuer());\n        validateSubject(client, claims.getSubject());\n        validateAudience(client, claims.getAudience());\n        validateExpiryTime(claims.getExpiryTime());\n        validateNotBeforeTime(claims.getNotBefore());\n        validateIssuedAtTime(claims.getIssuedAt());\n        validateTokenId(claims.getTokenId());\n    }","id":61437,"modified_method":"protected void validateClaims(Client client, JwtClaims claims) {\n        validateIssuer(claims.getIssuer());\n        validateSubject(client, claims.getSubject());\n        validateAudience(client, claims.getAudience());\n        JwtUtils.validateJwtTimeClaims(claims);    \n    }","commit_id":"f34d5aaadb1a06d77193bf274078fce47020a39c","url":"https://github.com/apache/cxf"},{"original_method":"private static ServerAccessToken toAccessToken(JwtToken jwt, \n                                                   Client client,\n                                                   String tokenId) {\n        Long issuedAt = jwt.getClaims().getIssuedAt();\n        Long notBefore = jwt.getClaims().getNotBefore();\n        if (issuedAt == null) {\n            issuedAt = System.currentTimeMillis();\n            notBefore = null;\n        }\n        Long expiresIn = null;\n        if (notBefore == null) {\n            expiresIn = 3600L;\n        } else {\n            expiresIn = notBefore - issuedAt;\n        }\n       \n        return new BearerAccessToken(client, tokenId, issuedAt, expiresIn);\n    }","id":61438,"modified_method":"private static ServerAccessToken toAccessToken(JwtToken jwt, \n                                                   Client client,\n                                                   String tokenId) {\n        JwtClaims claims = jwt.getClaims();\n        validateJwtSubjectAndAudience(claims, client);\n        Long issuedAt = claims.getIssuedAt();\n        Long notBefore = claims.getNotBefore();\n        Long expiresIn = notBefore - issuedAt;\n        \n        return new BearerAccessToken(client, tokenId, issuedAt, expiresIn);\n    }","commit_id":"f34d5aaadb1a06d77193bf274078fce47020a39c","url":"https://github.com/apache/cxf"},{"original_method":"protected void validateSubject(Client client, String subject) {\n        //TODO\n    }","id":61439,"modified_method":"protected void validateSubject(Client client, String subject) {\n        // We must have a Subject\n        if (subject == null) {\n            throw new OAuthServiceException(OAuthConstants.INVALID_GRANT);\n        }\n    }","commit_id":"a77774de468e4e068f63da91d917dfc0b87c3e3b","url":"https://github.com/apache/cxf"},{"original_method":"protected void validateClaims(Client client, JwtClaims claims) {\n        validateIssuer(claims.getIssuer());\n        validateSubject(client, claims.getSubject());\n        validateAudience(client, claims.getAudience());\n        \n        // If we have no issued time then we need to have an expiry\n        boolean expiredRequired = claims.getIssuedAt() == null;\n        JwtUtils.validateJwtExpiry(claims, clockOffset, expiredRequired);\n        \n        JwtUtils.validateJwtNotBefore(claims, clockOffset, false);\n        \n        // If we have no expiry then we must have an issued at\n        boolean issuedAtRequired = claims.getExpiryTime() == null;\n        JwtUtils.validateJwtIssuedAt(claims, ttl, clockOffset, issuedAtRequired);\n    }","id":61440,"modified_method":"protected void validateClaims(Client client, JwtClaims claims) {\n        JwtUtils.validateTokenClaims(claims, ttl, clockOffset);\n        \n        validateIssuer(claims.getIssuer());\n        validateSubject(client, claims.getSubject());\n        validateAudience(client, claims.getAudience());\n        \n        // We must have an Expiry\n        if (claims.getClaim(JwtConstants.CLAIM_EXPIRY) == null) {\n            throw new OAuthServiceException(OAuthConstants.INVALID_GRANT);\n        }\n    }","commit_id":"a77774de468e4e068f63da91d917dfc0b87c3e3b","url":"https://github.com/apache/cxf"},{"original_method":"@Override\n    protected void validateToken(JwtToken jwt) {\n        // If we have no issued time then we need to have an expiry\n        boolean expiredRequired = jwt.getClaims().getIssuedAt() == null;\n        JwtUtils.validateJwtExpiry(jwt.getClaims(), clockOffset, expiredRequired);\n        \n        JwtUtils.validateJwtNotBefore(jwt.getClaims(), clockOffset, false);\n        \n        // If we have no expiry then we must have an issued at\n        boolean issuedAtRequired = jwt.getClaims().getExpiryTime() == null;\n        JwtUtils.validateJwtIssuedAt(jwt.getClaims(), ttl, clockOffset, issuedAtRequired);\n    }","id":61441,"modified_method":"@Override\n    protected void validateToken(JwtToken jwt) {\n        JwtUtils.validateTokenClaims(jwt.getClaims(), ttl, clockOffset);\n    }","commit_id":"a77774de468e4e068f63da91d917dfc0b87c3e3b","url":"https://github.com/apache/cxf"},{"original_method":"protected void validateToken(JwtToken jwt) {\n        // If we have no issued time then we need to have an expiry\n        boolean expiredRequired = jwt.getClaims().getIssuedAt() == null;\n        JwtUtils.validateJwtExpiry(jwt.getClaims(), clockOffset, expiredRequired);\n        \n        JwtUtils.validateJwtNotBefore(jwt.getClaims(), clockOffset, false);\n        \n        // If we have no expiry then we must have an issued at\n        boolean issuedAtRequired = jwt.getClaims().getExpiryTime() == null;\n        JwtUtils.validateJwtIssuedAt(jwt.getClaims(), ttl, clockOffset, issuedAtRequired);\n    }","id":61442,"modified_method":"protected void validateToken(JwtToken jwt) {\n        JwtUtils.validateTokenClaims(jwt.getClaims(), ttl, clockOffset, false);\n    }","commit_id":"11dce0b377d65f6247a4ed424e942a9d4807c864","url":"https://github.com/apache/cxf"},{"original_method":"private Set<String> searchChildContext(String contextPrefix) throws OperationException {\n    SortedSet<String> nextLevelContexts = Sets.newTreeSet();\n    TimeSeriesTable table = timeSeriesTables.get();\n    MetricsScanQuery query = new MetricsScanQueryBuilder().setContext(contextPrefix).\n      allowEmptyMetric().build(-1, -1);\n\n    List<String> results = table.getNextLevelContexts(query);\n    for (String nextContext : results) {\n      nextContext = (contextPrefix == null) ? nextContext : nextContext.substring(contextPrefix.length() + 1);\n      nextLevelContexts.add(getNextPart(nextContext));\n    }\n    return nextLevelContexts;\n  }","id":61443,"modified_method":"private Collection<String> searchChildContext(String contextPrefix) throws OperationException {\n    SortedSet<String> nextLevelContexts = Sets.newTreeSet();\n    TimeSeriesTable table = timeSeriesTables.get();\n    MetricsScanQuery query = new MetricsScanQueryBuilder().setContext(contextPrefix).\n      allowEmptyMetric().build(-1, -1);\n\n    List<String> results = table.getNextLevelContexts(query);\n    for (String context : results) {\n      int nextPartEnd = context.indexOf(\".\", contextPrefix == null ? 0 : contextPrefix.length() + 1);\n      nextLevelContexts.add(nextPartEnd == -1 ? context : context.substring(0, nextPartEnd));\n    }\n    return nextLevelContexts;\n  }","commit_id":"b1ba4bdb330fb5c76a25e1dbcb29bd2a614bb24e","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n  public void testSearchContext() throws Exception {\n    // WordCount is in myspace, WCount in yourspace\n    verifySearchResult(\"/v3/metrics/search?target=childContext&context=myspace\",\n                       ImmutableList.<String>of(\"WordCount1\"));\n    verifySearchResult(\"/v3/metrics/search?target=childContext&context=yourspace\",\n                       ImmutableList.<String>of(\"WCount1\"));\n\n    // WordCount should be found in myspace, not in yourspace\n    verifySearchResult(\"/v3/metrics/search?target=childContext&context=myspace.WordCount1.f\",\n                       ImmutableList.<String>of(\"WordCounter\"));\n    verifySearchResult(\"/v3/metrics/search?target=childContext&context=yourspace.WordCount1.f\",\n                       ImmutableList.<String>of());\n\n    // WCount should be found in yourspace, not in myspace\n    verifySearchResult(\"/v3/metrics/search?target=childContext&context=yourspace.WCount1\",\n                       ImmutableList.<String>of(\"b\", \"f\", \"p\"));\n    verifySearchResult(\"/v3/metrics/search?target=childContext&context=myspace.WCount1\", ImmutableList.<String>of());\n\n    // verify other metrics for WCount app\n    verifySearchResult(\"/v3/metrics/search?target=childContext&context=yourspace.WCount1.b.ClassicWordCount\",\n                       ImmutableList.<String>of(\"m\", \"r\"));\n    verifySearchResult(\"/v3/metrics/search?target=childContext&context=yourspace.WCount1.b.ClassicWordCount.m\",\n                       ImmutableList.<String>of());\n  }","id":61444,"modified_method":"@Test\n  public void testSearchContext() throws Exception {\n    // empty context\n    verifySearchResultContains(\"/v3/metrics/search?target=childContext\",\n                               ImmutableList.<String>of(\"myspace\", \"yourspace\"));\n\n    // WordCount is in myspace, WCount in yourspace\n    verifySearchResult(\"/v3/metrics/search?target=childContext&context=yourspace\",\n                       ImmutableList.<String>of(\"yourspace.WCount1\"));\n    // WordCount is in myspace, WCount in yourspace\n    verifySearchResult(\"/v3/metrics/search?target=childContext&context=myspace\",\n                       ImmutableList.<String>of(\"myspace.WordCount1\"));\n    verifySearchResult(\"/v3/metrics/search?target=childContext&context=yourspace\",\n                       ImmutableList.<String>of(\"yourspace.WCount1\"));\n\n    // WordCount should be found in myspace, not in yourspace\n    verifySearchResult(\"/v3/metrics/search?target=childContext&context=myspace.WordCount1.f\",\n                       ImmutableList.<String>of(\"myspace.WordCount1.f.WordCounter\"));\n    verifySearchResult(\"/v3/metrics/search?target=childContext&context=yourspace.WordCount1.f\",\n                       ImmutableList.<String>of());\n\n    // WCount should be found in yourspace, not in myspace\n    verifySearchResult(\"/v3/metrics/search?target=childContext&context=yourspace.WCount1\",\n                       ImmutableList.<String>of(\"yourspace.WCount1.b\", \"yourspace.WCount1.f\", \"yourspace.WCount1.p\"));\n    verifySearchResult(\"/v3/metrics/search?target=childContext&context=myspace.WCount1\", ImmutableList.<String>of());\n\n    // verify other metrics for WCount app\n    verifySearchResult(\"/v3/metrics/search?target=childContext&context=yourspace.WCount1.b.ClassicWordCount\",\n                       ImmutableList.<String>of(\"yourspace.WCount1.b.ClassicWordCount.m\",\n                                                \"yourspace.WCount1.b.ClassicWordCount.r\"));\n    verifySearchResult(\"/v3/metrics/search?target=childContext&context=yourspace.WCount1.b.ClassicWordCount.m\",\n                       ImmutableList.<String>of());\n  }","commit_id":"b1ba4bdb330fb5c76a25e1dbcb29bd2a614bb24e","url":"https://github.com/caskdata/cdap"},{"original_method":"@Inject\n  public DefaultMetricStore(final MetricDatasetFactory dsFactory) {\n    final FactTableSupplier factTableSupplier = new FactTableSupplier() {\n      @Override\n      public FactTable get(int resolution, int ignoredRollTime) {\n        // roll time will be taken from configuration todo: clean this up\n        return dsFactory.get(resolution);\n      }\n    };\n    this.cube = Suppliers.memoize(new Supplier<Cube>() {\n      @Override\n      public Cube get() {\n        // 1 sec, 1 min, 1 hour and \"all time totals\"\n        return new DefaultCube(new int[] {1, 60, 3600, Integer.MAX_VALUE}, factTableSupplier, createAggregations());\n      }\n    });\n\n    // NOTE: to reduce number of aggregations we rename some of the emitted tags to \"canonical\" names\n    this.tagMapping = ImmutableMap.of(\n      // flow\n      Constants.Metrics.Tag.FLOWLET, PROGRAM_LEVEL2,\n      Constants.Metrics.Tag.FLOWLET_QUEUE, PROGRAM_LEVEL3,\n      // mapreduce\n      Constants.Metrics.Tag.MR_TASK_TYPE, PROGRAM_LEVEL2,\n      // service\n      Constants.Metrics.Tag.SERVICE_RUNNABLE, PROGRAM_LEVEL2\n    );\n  }","id":61445,"modified_method":"@Inject\n  public DefaultMetricStore(final MetricDatasetFactory dsFactory) {\n    final FactTableSupplier factTableSupplier = new FactTableSupplier() {\n      @Override\n      public FactTable get(int resolution, int ignoredRollTime) {\n        // roll time will be taken from configuration todo: clean this up\n        return dsFactory.get(resolution);\n      }\n    };\n    this.cube = Suppliers.memoize(new Supplier<Cube>() {\n      @Override\n      public Cube get() {\n        // 1 sec, 1 min, 1 hour and \"all time totals\"\n        return new DefaultCube(new int[] {1, 60, 3600, Integer.MAX_VALUE}, factTableSupplier, createAggregations());\n      }\n    });\n\n    // NOTE: to reduce number of aggregations we rename some of the emitted tags to \"canonical\" names\n    this.tagMapping = ImmutableMap.of(\n      // flow\n      Constants.Metrics.Tag.FLOWLET, PROGRAM_LEVEL2,\n      Constants.Metrics.Tag.FLOWLET_QUEUE, PROGRAM_LEVEL3,\n      // mapreduce\n      Constants.Metrics.Tag.MR_TASK_TYPE, PROGRAM_LEVEL2,\n      Constants.Metrics.Tag.INSTANCE_ID, PROGRAM_LEVEL3,\n      // service\n      Constants.Metrics.Tag.SERVICE_RUNNABLE, PROGRAM_LEVEL2\n    );\n  }","commit_id":"71298b6ef4d973b8e8f3a6f8b3b532f03c94ad16","url":"https://github.com/caskdata/cdap"},{"original_method":"private boolean startsWithTags(List<TagValue> expected, List<TagValue> actual) {\n    if (actual.size() < expected.size()) {\n      return false;\n    }\n    for (int i = 0; i < expected.size(); i++) {\n      if (!expected.get(i).equals(actual.get(i))) {\n        return false;\n      }\n    }\n    return true;\n  }","id":61446,"modified_method":"private boolean startsWithTags(List<TagValue> expected, List<TagValue> actual) {\n    if (actual.size() < expected.size()) {\n      return false;\n    }\n    for (int i = 0; i < expected.size(); i++) {\n      if (expected.get(i).getValue() != null && !expected.get(i).equals(actual.get(i))) {\n        return false;\n      }\n    }\n    return true;\n  }","commit_id":"71298b6ef4d973b8e8f3a6f8b3b532f03c94ad16","url":"https://github.com/caskdata/cdap"},{"original_method":"/**\n   * Given a list of {@link co.cask.cdap.metrics.store.timeseries.TagValue} and time range,\n   * return all measure names of the Facts that have given tagValues and are in the given time range.\n   * @param tags - list of tags to match, we return the measureNames that match this tags list.\n   * @param startTs\n   * @param endTs\n   * @return Sorted collection of measureNames\n   * @throws Exception\n   */\n  public Collection<String> getMeasureNames(List<TagValue> tags, long startTs, long endTs) throws Exception {\n    //todo: push down this logic to server side to reduce RPC calls (CDAP-1421)\n    //todo: pass a limit on number of tags returned\n    byte[] startRow = codec.createStartRowKey(tags, null, startTs, true);\n    byte[] endRow = codec.createEndRowKey(tags, null, endTs, true);\n    endRow = Bytes.stopKeyForPrefix(endRow);\n    FuzzyRowFilter fuzzyRowFilter = createFuzzyRowFilter(new FactScan(startTs, endTs, null, tags),\n                                                                startRow, true);\n    Row rowResult;\n    SortedSet<String> measureNames = Sets.newTreeSet();\n    Scanner scanner = null;\n    long startTimeBase = startTs / rollTime * rollTime;\n    long endTimeBase = endTs / rollTime * rollTime;\n    try {\n        scanner = timeSeriesTable.scan(startRow, endRow, null, fuzzyRowFilter);\n        while ((rowResult = scanner.next()) != null) {\n          byte[] rowKey = rowResult.getRow();\n          // since the timestamp filter is fuzzy and also the aggregate_key is at the begging of rowKey,\n          // we could match rows where (ts < startTs or ts > endTs) and the tags at beginning match,\n          // we will skip those rows\n          if ((codec.getTimestamp(rowKey, codec.createColumn(startTs)) < startTimeBase) ||\n            (codec.getTimestamp(rowKey, codec.createColumn(endTs)) > endTimeBase)) {\n            continue;\n          }\n          // if the timestamp is within query range and the tag-list matches, we add them to the result\n          if (startsWithTags(tags, codec.getTagValues(rowKey))) {\n            //add item to result set and increment the start rowKey\n            measureNames.add(codec.getMeasureName(rowResult.getRow()));\n            startRow = codec.getNextRowKey(rowResult.getRow(), tags.size());\n            scanner = timeSeriesTable.scan(startRow, endRow, null, fuzzyRowFilter);\n          }\n        }\n    } finally {\n      scanner.close();\n    }\n    return measureNames;\n  }","id":61447,"modified_method":"/**\n   * Given a list of {@link co.cask.cdap.metrics.store.timeseries.TagValue} and time range,\n   * return all measure names of the Facts that have given tagValues and are in the given time range.\n   * @param tags - list of tags to match, we return the measureNames that match this tags list.\n   * @param startTs\n   * @param endTs\n   * @return Sorted collection of measureNames\n   * @throws Exception\n   */\n  public Collection<String> getMeasureNames(List<TagValue> tags, long startTs, long endTs) throws Exception {\n    //todo: push down this logic to server side to reduce RPC calls (CDAP-1421)\n    //todo: pass a limit on number of tags returned\n    byte[] startRow = codec.createStartRowKey(tags, null, startTs, true);\n    byte[] endRow = codec.createEndRowKey(tags, null, endTs, true);\n    endRow = Bytes.stopKeyForPrefix(endRow);\n    FuzzyRowFilter fuzzyRowFilter = createFuzzyRowFilter(new FactScan(startTs, endTs, null, tags),\n                                                         startRow, true);\n    Row rowResult;\n    SortedSet<String> measureNames = Sets.newTreeSet();\n    Scanner scanner = null;\n    long startTimeBase = startTs / rollTime * rollTime;\n    long endTimeBase = endTs / rollTime * rollTime;\n    try {\n      scanner = timeSeriesTable.scan(startRow, endRow, null, fuzzyRowFilter);\n      while ((rowResult = scanner.next()) != null) {\n        byte[] rowKey = rowResult.getRow();\n        // since the timestamp filter is fuzzy and also the aggregate_key is at the begging of rowKey,\n        // we could match rows where (ts < startTs or ts > endTs) and the tags at beginning match,\n        // we will skip those rows\n        if ((codec.getTimestamp(rowKey, codec.createColumn(startTs)) < startTimeBase) ||\n          (codec.getTimestamp(rowKey, codec.createColumn(endTs)) > endTimeBase)) {\n          continue;\n        }\n        List<TagValue> tagValues = codec.getTagValues(rowResult.getRow());\n        // if the timestamp is within query range and the tag-list matches, we add them to the result\n        if (startsWithTags(tags, tagValues)) {\n          //add item to result set and increment the start rowKey\n          measureNames.add(codec.getMeasureName(rowResult.getRow()));\n          startRow = codec.getNextRowKey(rowResult.getRow(), tagValues.size());\n          scanner = timeSeriesTable.scan(startRow, endRow, null, fuzzyRowFilter);\n        }\n      }\n    } finally {\n      scanner.close();\n    }\n    return measureNames;\n  }","commit_id":"71298b6ef4d973b8e8f3a6f8b3b532f03c94ad16","url":"https://github.com/caskdata/cdap"},{"original_method":"public Collection<TagValue> getNextTags(List<TagValue> tags, long startTs, long endTs) throws Exception {\n    //todo: push down this logic to server side to reduce RPC calls (CDAP-1421)\n    //todo: pass a limit on number of tags returned\n    byte[] startRow = codec.createStartRowKey(tags, null, startTs, true);\n    byte[] endRow = codec.createEndRowKey(tags, null, endTs, true);\n    endRow = Bytes.stopKeyForPrefix(endRow);\n    FuzzyRowFilter fuzzyRowFilter = createFuzzyRowFilter(new FactScan(startTs, endTs, null, tags),\n                                                                startRow, true);\n    Row rowResult;\n    int targetIndex = tags.size();\n    SortedSet<TagValue> result = Sets.newTreeSet(new Comparator<TagValue>() {\n      @Override\n      public int compare(TagValue t1, TagValue t2) {\n        int cmp = t1.getTagName().compareTo(t2.getTagName());\n        if (cmp != 0) {\n          return cmp;\n        }\n        return t1.getValue().compareTo(t2.getValue());\n      }\n    });\n\n    Scanner scanner = null;\n    long startTimeBase = startTs / rollTime * rollTime;\n    long endTimeBase = endTs / rollTime * rollTime;\n    try {\n      scanner = timeSeriesTable.scan(startRow, endRow, null, fuzzyRowFilter);\n      while ((rowResult = scanner.next()) != null) {\n        byte[] rowKey = rowResult.getRow();\n        // since the timestamp filter is fuzzy and also the aggregate_key is at the begging of rowKey,\n        // we could match rows where (ts < startTs or ts > endTs) and the tags at beginning match,\n        // we will skip those rows\n        if ((codec.getTimestamp(rowKey, codec.createColumn(startTs)) < startTimeBase) ||\n          (codec.getTimestamp(rowKey, codec.createColumn(endTs)) > endTimeBase)) {\n          continue;\n        }\n        List<TagValue> tagValues = codec.getTagValues(rowResult.getRow());\n        // if the timestamp is within query range and the tag-list matches, we add them to the result\n        if (startsWithTags(tags, tagValues)) {\n          //add item to result set and increment the start rowKey\n          if (tagValues.size() > targetIndex) {\n            result.add(tagValues.get(targetIndex));\n          }\n          startRow = codec.getNextRowKey(rowResult.getRow(), tags.size());\n          scanner = timeSeriesTable.scan(startRow, endRow, null, fuzzyRowFilter);\n        }\n      }\n    } finally {\n      scanner.close();\n    }\n\n    return result;\n  }","id":61448,"modified_method":"public Collection<TagValue> getNextTags(List<TagValue> tags, long startTs, long endTs) throws Exception {\n    //todo: push down this logic to server side to reduce RPC calls (CDAP-1421)\n    //todo: pass a limit on number of tags returned\n    byte[] startRow = codec.createStartRowKey(tags, null, startTs, true);\n    byte[] endRow = codec.createEndRowKey(tags, null, endTs, true);\n    endRow = Bytes.stopKeyForPrefix(endRow);\n    FuzzyRowFilter fuzzyRowFilter = createFuzzyRowFilter(new FactScan(startTs, endTs, null, tags),\n                                                         startRow, true);\n    Row rowResult;\n    int targetIndex = tags.size();\n    SortedSet<TagValue> result = Sets.newTreeSet(new Comparator<TagValue>() {\n      @Override\n      public int compare(TagValue t1, TagValue t2) {\n        int cmp = t1.getTagName().compareTo(t2.getTagName());\n        if (cmp != 0) {\n          return cmp;\n        }\n        if (t1.getValue() == null) {\n          if (t2.getValue() == null) {\n            return 0;\n          } else {\n            return -1;\n          }\n        }\n        if (t2.getValue() == null) {\n          return 1;\n        }\n        return t1.getValue().compareTo(t2.getValue());\n      }\n    });\n\n    Scanner scanner = null;\n    long startTimeBase = startTs / rollTime * rollTime;\n    long endTimeBase = endTs / rollTime * rollTime;\n    try {\n      scanner = timeSeriesTable.scan(startRow, endRow, null, fuzzyRowFilter);\n      while ((rowResult = scanner.next()) != null) {\n        byte[] rowKey = rowResult.getRow();\n        // since the timestamp filter is fuzzy and also the aggregate_key is at the begging of rowKey,\n        // we could match rows where (ts < startTs or ts > endTs) and the tags at beginning match,\n        // we will skip those rows\n        if ((codec.getTimestamp(rowKey, codec.createColumn(startTs)) < startTimeBase) ||\n          (codec.getTimestamp(rowKey, codec.createColumn(endTs)) > endTimeBase)) {\n          continue;\n        }\n        List<TagValue> tagValues = codec.getTagValues(rowResult.getRow());\n        // if the timestamp is within query range and the tag-list matches, we add them to the result\n        if (startsWithTags(tags, tagValues)) {\n          //add item to result set and increment the start rowKey\n          if (tagValues.size() > targetIndex) {\n              result.add(tagValues.get(targetIndex));\n          }\n          startRow = codec.getNextRowKey(rowResult.getRow(), tags.size());\n          scanner = timeSeriesTable.scan(startRow, endRow, null, fuzzyRowFilter);\n        }\n      }\n    } finally {\n      scanner.close();\n    }\n\n    return result;\n  }","commit_id":"71298b6ef4d973b8e8f3a6f8b3b532f03c94ad16","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n  public void testBasics() throws Exception {\n    InMemoryOrderedTableService.create(\"EntityTable\");\n    InMemoryOrderedTableService.create(\"DataTable\");\n    int resolution = 10;\n    int rollTimebaseInterval = 2;\n\n    FactTable table = new FactTable(new InMemoryMetricsTable(\"DataTable\"),\n                                                            new EntityTable(new InMemoryMetricsTable(\"EntityTable\")),\n                                                            resolution, rollTimebaseInterval);\n\n    // aligned to start of resolution bucket\n    // \"/1000\" because time is expected to be in seconds\n    long ts = ((System.currentTimeMillis() / 1000) / resolution) * resolution;\n\n    // testing encoding with multiple tags\n    List<TagValue> tagValues = ImmutableList.of(new TagValue(\"tag1\", \"value1\"),\n                                                new TagValue(\"tag2\", \"value2\"),\n                                                new TagValue(\"tag3\", \"value3\"));\n\n\n    // trying adding one by one, in same (first) time resolution bucket\n    for (int i = 0; i < 5; i++) {\n      for (int k = 1; k < 4; k++) {\n        table.add(ImmutableList.of(new Fact(tagValues, MeasureType.COUNTER, \"metric\" + k,\n                                            // note: \"+i\" here and below doesn't affect results, just to confirm\n                                            //       that data points are rounded to the resolution\n                                            new TimeValue(ts + i, k))));\n      }\n    }\n\n    // trying adding one by one, in different time resolution buckets\n    for (int i = 0; i < 3; i++) {\n      for (int k = 1; k < 4; k++) {\n        table.add(ImmutableList.of(new Fact(tagValues, MeasureType.COUNTER, \"metric\" + k,\n                                            new TimeValue(ts + resolution * i + i, 2 * k))));\n      }\n    }\n\n    // trying adding as list\n    // first incs in same (second) time resolution bucket\n    List<Fact> aggs = Lists.newArrayList();\n    for (int i = 0; i < 7; i++) {\n      for (int k = 1; k < 4; k++) {\n        aggs.add(new Fact(tagValues, MeasureType.COUNTER, \"metric\" + k, new TimeValue(ts + resolution, 3 * k)));\n      }\n    }\n    // then incs in different time resolution buckets\n    for (int i = 0; i < 3; i++) {\n      for (int k = 1; k < 4; k++) {\n        aggs.add(new Fact(tagValues, MeasureType.COUNTER, \"metric\" + k, new TimeValue(ts + resolution * i, 4 * k)));\n      }\n    }\n\n    table.add(aggs);\n\n    // verify each metric\n    for (int k = 1; k < 4; k++) {\n      FactScan scan = new FactScan(ts - 2 * resolution, ts + 3 * resolution, \"metric\" + k, tagValues);\n      Table<String, List<TagValue>, List<TimeValue>> expected = HashBasedTable.create();\n      expected.put(\"metric\" + k, tagValues, ImmutableList.of(new TimeValue(ts, 11 * k),\n                                                             new TimeValue(ts + resolution, 27 * k),\n                                                             new TimeValue(ts + 2 * resolution, 6 * k)));\n      assertScan(table, expected, scan);\n    }\n\n    // verify each metric within a single timeBase\n    for (int k = 1; k < 4; k++) {\n      FactScan scan = new FactScan(ts, ts + resolution - 1, \"metric\" + k, tagValues);\n      Table<String, List<TagValue>, List<TimeValue>> expected = HashBasedTable.create();\n      expected.put(\"metric\" + k, tagValues, ImmutableList.of(new TimeValue(ts, 11 * k)));\n      assertScan(table, expected, scan);\n    }\n\n    // verify all metrics with fuzzy metric in scan\n    Table<String, List<TagValue>, List<TimeValue>> expected = HashBasedTable.create();\n    for (int k = 1; k < 4; k++) {\n      expected.put(\"metric\" + k, tagValues, ImmutableList.of(new TimeValue(ts, 11 * k),\n                                                             new TimeValue(ts + resolution, 27 * k),\n                                                             new TimeValue(ts + 2 * resolution, 6 * k)));\n    }\n    // metric = null means \"all\"\n    FactScan scan = new FactScan(ts - 2 * resolution, ts + 3 * resolution, null, tagValues);\n    assertScan(table, expected, scan);\n\n    // delete metric test\n    expected.clear();\n\n    // delete the metrics data at (timestamp + 20) resolution\n    scan = new FactScan(ts + resolution * 2, ts + resolution * 3, null, tagValues);\n    table.delete(scan);\n    for (int k = 1; k < 4; k++) {\n      expected.put(\"metric\" + k, tagValues, ImmutableList.of(new TimeValue(ts, 11 * k),\n                                                             new TimeValue(ts + resolution, 27 * k)));\n    }\n    // verify deletion\n    scan = new FactScan(ts - 2 * resolution, ts + 3 * resolution, null, tagValues);\n    assertScan(table, expected, scan);\n\n    // delete metrics for \"metric1\" at ts0 and verify deletion\n    scan = new FactScan(ts, ts + 1, \"metric1\", tagValues);\n    table.delete(scan);\n    expected.clear();\n    expected.put(\"metric1\", tagValues, ImmutableList.of(new TimeValue(ts + resolution, 27)));\n    scan = new FactScan(ts - 2 * resolution, ts + 3 * resolution, \"metric1\", tagValues);\n    assertScan(table, expected, scan);\n\n    // verify the next tags search\n    Collection<TagValue> nextTags = table.getNextTags(ImmutableList.of(new TagValue(\"tag1\", \"value1\")), ts, ts + 1);\n    Assert.assertEquals(ImmutableSet.of(new TagValue(\"tag2\", \"value2\")), nextTags);\n    //assertTagValues(ImmutableList.of(new TagValue(\"tag2\", \"value2\")), nextTags);\n\n    nextTags = table.getNextTags(ImmutableList.of(new TagValue(\"tag1\", \"value1\"), new TagValue(\"tag2\", \"value2\")),\n                                 ts, ts + 3);\n    Assert.assertEquals(ImmutableSet.of(new TagValue(\"tag3\", \"value3\")), nextTags);\n\n    // add new tag values\n    tagValues = ImmutableList.of(new TagValue(\"tag1\", \"value1\"), new TagValue(\"tag2\", \"value5\"));\n    table.add(ImmutableList.of(new Fact(tagValues, MeasureType.COUNTER, \"metric\",\n                                        new TimeValue(ts, 10))));\n\n    tagValues = ImmutableList.of(new TagValue(\"tag1\", \"value1\"), new TagValue(\"tag4\", \"value5\"));\n    table.add(ImmutableList.of(new Fact(tagValues, MeasureType.COUNTER, \"metric\",\n                                        new TimeValue(ts, 10))));\n\n    nextTags = table.getNextTags(ImmutableList.of(new TagValue(\"tag1\", \"value1\")),\n                                 ts, ts + 1);\n    Assert.assertEquals(ImmutableSet.of(new TagValue(\"tag2\", \"value2\"),\n                                        new TagValue(\"tag2\", \"value5\"), new TagValue(\"tag4\", \"value5\")), nextTags);\n    // search for metric names given tags list and verify\n\n    Collection<String> metricNames = table.getMeasureNames(ImmutableList.of(new TagValue(\"tag1\", \"value1\"),\n                                                                            new TagValue(\"tag2\", \"value2\"),\n                                                                            new TagValue(\"tag3\", \"value3\")),\n                                                           ts, ts + 1);\n    Assert.assertEquals(ImmutableSet.of(\"metric2\", \"metric3\"), metricNames);\n\n    metricNames = table.getMeasureNames(ImmutableList.of(new TagValue(\"tag1\", \"value1\")), ts, ts + 1);\n    Assert.assertEquals(ImmutableSet.of(\"metric\", \"metric2\"), metricNames);\n\n  }","id":61449,"modified_method":"@Test\n  public void testBasics() throws Exception {\n    InMemoryOrderedTableService.create(\"EntityTable\");\n    InMemoryOrderedTableService.create(\"DataTable\");\n    int resolution = 10;\n    int rollTimebaseInterval = 2;\n\n    FactTable table = new FactTable(new InMemoryMetricsTable(\"DataTable\"),\n                                                            new EntityTable(new InMemoryMetricsTable(\"EntityTable\")),\n                                                            resolution, rollTimebaseInterval);\n\n    // aligned to start of resolution bucket\n    // \"/1000\" because time is expected to be in seconds\n    long ts = ((System.currentTimeMillis() / 1000) / resolution) * resolution;\n\n    // testing encoding with multiple tags\n    List<TagValue> tagValues = ImmutableList.of(new TagValue(\"tag1\", \"value1\"),\n                                                new TagValue(\"tag2\", \"value2\"),\n                                                new TagValue(\"tag3\", \"value3\"));\n\n\n    // trying adding one by one, in same (first) time resolution bucket\n    for (int i = 0; i < 5; i++) {\n      for (int k = 1; k < 4; k++) {\n        table.add(ImmutableList.of(new Fact(tagValues, MeasureType.COUNTER, \"metric\" + k,\n                                            // note: \"+i\" here and below doesn't affect results, just to confirm\n                                            //       that data points are rounded to the resolution\n                                            new TimeValue(ts + i, k))));\n      }\n    }\n\n    // trying adding one by one, in different time resolution buckets\n    for (int i = 0; i < 3; i++) {\n      for (int k = 1; k < 4; k++) {\n        table.add(ImmutableList.of(new Fact(tagValues, MeasureType.COUNTER, \"metric\" + k,\n                                            new TimeValue(ts + resolution * i + i, 2 * k))));\n      }\n    }\n\n    // trying adding as list\n    // first incs in same (second) time resolution bucket\n    List<Fact> aggs = Lists.newArrayList();\n    for (int i = 0; i < 7; i++) {\n      for (int k = 1; k < 4; k++) {\n        aggs.add(new Fact(tagValues, MeasureType.COUNTER, \"metric\" + k, new TimeValue(ts + resolution, 3 * k)));\n      }\n    }\n    // then incs in different time resolution buckets\n    for (int i = 0; i < 3; i++) {\n      for (int k = 1; k < 4; k++) {\n        aggs.add(new Fact(tagValues, MeasureType.COUNTER, \"metric\" + k, new TimeValue(ts + resolution * i, 4 * k)));\n      }\n    }\n\n    table.add(aggs);\n\n    // verify each metric\n    for (int k = 1; k < 4; k++) {\n      FactScan scan = new FactScan(ts - 2 * resolution, ts + 3 * resolution, \"metric\" + k, tagValues);\n      Table<String, List<TagValue>, List<TimeValue>> expected = HashBasedTable.create();\n      expected.put(\"metric\" + k, tagValues, ImmutableList.of(new TimeValue(ts, 11 * k),\n                                                             new TimeValue(ts + resolution, 27 * k),\n                                                             new TimeValue(ts + 2 * resolution, 6 * k)));\n      assertScan(table, expected, scan);\n    }\n\n    // verify each metric within a single timeBase\n    for (int k = 1; k < 4; k++) {\n      FactScan scan = new FactScan(ts, ts + resolution - 1, \"metric\" + k, tagValues);\n      Table<String, List<TagValue>, List<TimeValue>> expected = HashBasedTable.create();\n      expected.put(\"metric\" + k, tagValues, ImmutableList.of(new TimeValue(ts, 11 * k)));\n      assertScan(table, expected, scan);\n    }\n\n    // verify all metrics with fuzzy metric in scan\n    Table<String, List<TagValue>, List<TimeValue>> expected = HashBasedTable.create();\n    for (int k = 1; k < 4; k++) {\n      expected.put(\"metric\" + k, tagValues, ImmutableList.of(new TimeValue(ts, 11 * k),\n                                                             new TimeValue(ts + resolution, 27 * k),\n                                                             new TimeValue(ts + 2 * resolution, 6 * k)));\n    }\n    // metric = null means \"all\"\n    FactScan scan = new FactScan(ts - 2 * resolution, ts + 3 * resolution, null, tagValues);\n    assertScan(table, expected, scan);\n\n    // delete metric test\n    expected.clear();\n\n    // delete the metrics data at (timestamp + 20) resolution\n    scan = new FactScan(ts + resolution * 2, ts + resolution * 3, null, tagValues);\n    table.delete(scan);\n    for (int k = 1; k < 4; k++) {\n      expected.put(\"metric\" + k, tagValues, ImmutableList.of(new TimeValue(ts, 11 * k),\n                                                             new TimeValue(ts + resolution, 27 * k)));\n    }\n    // verify deletion\n    scan = new FactScan(ts - 2 * resolution, ts + 3 * resolution, null, tagValues);\n    assertScan(table, expected, scan);\n\n    // delete metrics for \"metric1\" at ts0 and verify deletion\n    scan = new FactScan(ts, ts + 1, \"metric1\", tagValues);\n    table.delete(scan);\n    expected.clear();\n    expected.put(\"metric1\", tagValues, ImmutableList.of(new TimeValue(ts + resolution, 27)));\n    scan = new FactScan(ts - 2 * resolution, ts + 3 * resolution, \"metric1\", tagValues);\n    assertScan(table, expected, scan);\n\n    // verify the next tags search\n    Collection<TagValue> nextTags = table.getNextTags(ImmutableList.of(new TagValue(\"tag1\", \"value1\")), ts, ts + 1);\n    Assert.assertEquals(ImmutableSet.of(new TagValue(\"tag2\", \"value2\")), nextTags);\n    //assertTagValues(ImmutableList.of(new TagValue(\"tag2\", \"value2\")), nextTags);\n\n    nextTags = table.getNextTags(ImmutableList.of(new TagValue(\"tag1\", \"value1\"), new TagValue(\"tag2\", \"value2\")),\n                                 ts, ts + 3);\n    Assert.assertEquals(ImmutableSet.of(new TagValue(\"tag3\", \"value3\")), nextTags);\n\n    // add new tag values\n    tagValues = ImmutableList.of(new TagValue(\"tag1\", \"value1\"), new TagValue(\"tag2\", \"value5\"));\n    table.add(ImmutableList.of(new Fact(tagValues, MeasureType.COUNTER, \"metric\",\n                                        new TimeValue(ts, 10))));\n\n    tagValues = ImmutableList.of(new TagValue(\"tag1\", \"value1\"), new TagValue(\"tag4\", \"value5\"));\n    table.add(ImmutableList.of(new Fact(tagValues, MeasureType.COUNTER, \"metric\",\n                                        new TimeValue(ts, 10))));\n\n    nextTags = table.getNextTags(ImmutableList.of(new TagValue(\"tag1\", \"value1\")),\n                                 ts, ts + 1);\n    Assert.assertEquals(ImmutableSet.of(new TagValue(\"tag2\", \"value2\"),\n                                        new TagValue(\"tag2\", \"value5\"), new TagValue(\"tag4\", \"value5\")), nextTags);\n    // search for metric names given tags list and verify\n\n    Collection<String> metricNames = table.getMeasureNames(ImmutableList.of(new TagValue(\"tag1\", \"value1\"),\n                                                                            new TagValue(\"tag2\", \"value2\"),\n                                                                            new TagValue(\"tag3\", \"value3\")),\n                                                           ts, ts + 1);\n    Assert.assertEquals(ImmutableSet.of(\"metric2\", \"metric3\"), metricNames);\n\n    metricNames = table.getMeasureNames(ImmutableList.of(new TagValue(\"tag1\", \"value1\")), ts, ts + 1);\n    Assert.assertEquals(ImmutableSet.of(\"metric\", \"metric2\", \"metric3\"), metricNames);\n\n  }","commit_id":"71298b6ef4d973b8e8f3a6f8b3b532f03c94ad16","url":"https://github.com/caskdata/cdap"},{"original_method":"private static void buildComponentTypeContext(Iterator<String> pathParts, Map<String, String> tagValues,\n                                                String componentType, String requestType, String componentTagName)\n    throws MetricsPathException {\n    String nextPath = pathParts.next();\n\n    if (nextPath.equals(RUN_ID)) {\n      tagValues.put(Constants.Metrics.Tag.RUN_ID, pathParts.next());\n      if (pathParts.hasNext()) {\n        nextPath = pathParts.next();\n      } else {\n        return;\n      }\n    }\n    if (!nextPath.equals(componentType)) {\n      String exception = String.format(\"Expecting '%s' after the %s name \", componentType,\n                                       requestType.substring(0, requestType.length() - 1));\n      throw new MetricsPathException(exception);\n    }\n    if (!pathParts.hasNext()) {\n      String exception = String.format(\"'%s' must be followed by a %s name \", componentType,\n                                       componentType.substring(0, componentType.length() - 1));\n      throw new MetricsPathException(exception);\n    }\n    tagValues.put(componentTagName, urlDecode(pathParts.next()));\n  }","id":61450,"modified_method":"private static void buildComponentTypeContext(Iterator<String> pathParts, Map<String, String> tagValues,\n                                                String componentType, String requestType, String componentTagName)\n    throws MetricsPathException {\n    String nextPath = pathParts.next();\n\n    if (nextPath.equals(RUN_ID)) {\n      tagValues.put(Constants.Metrics.Tag.RUN_ID, pathParts.next());\n      if (pathParts.hasNext()) {\n        nextPath = pathParts.next();\n      } else {\n        return;\n      }\n    } else {\n      tagValues.put(Constants.Metrics.Tag.RUN_ID, null);\n    }\n    if (!nextPath.equals(componentType)) {\n      String exception = String.format(\"Expecting '%s' after the %s name \", componentType,\n                                       requestType.substring(0, requestType.length() - 1));\n      throw new MetricsPathException(exception);\n    }\n    if (!pathParts.hasNext()) {\n      String exception = String.format(\"'%s' must be followed by a %s name \", componentType,\n                                       componentType.substring(0, componentType.length() - 1));\n      throw new MetricsPathException(exception);\n    }\n    tagValues.put(componentTagName, urlDecode(pathParts.next()));\n  }","commit_id":"71298b6ef4d973b8e8f3a6f8b3b532f03c94ad16","url":"https://github.com/caskdata/cdap"},{"original_method":"static CubeQuery parse(URI requestURI) throws MetricsPathException {\n    CubeQueryBuilder builder = new CubeQueryBuilder();\n    // metric will be at the end.\n    String uriPath = requestURI.getRawPath();\n    int index = uriPath.lastIndexOf(\"/\");\n    builder.setMetricName(urlDecode(uriPath.substring(index + 1)));\n\n    // strip the metric from the end of the path\n    String strippedPath = uriPath.substring(0, index);\n\n    if (strippedPath.startsWith(\"/system/cluster\")) {\n      builder.setSliceByTagValues(ImmutableMap.of(Constants.Metrics.Tag.NAMESPACE, Constants.SYSTEM_NAMESPACE,\n                                                  Constants.Metrics.Tag.CLUSTER_METRICS, \"true\"));\n      builder.setScope(\"system\");\n    } else if (strippedPath.startsWith(\"/system/transactions\")) {\n      builder.setSliceByTagValues(ImmutableMap.of(Constants.Metrics.Tag.NAMESPACE, Constants.SYSTEM_NAMESPACE,\n                                                  Constants.Metrics.Tag.COMPONENT, TRANSACTION_METRICS_CONTEXT));\n      builder.setScope(\"system\");\n    } else {\n      parseContext(strippedPath, builder);\n    }\n\n    parseQueryString(requestURI, builder);\n\n    return builder.build();\n  }","id":61451,"modified_method":"static CubeQuery parse(URI requestURI) throws MetricsPathException {\n    CubeQueryBuilder builder = new CubeQueryBuilder();\n    // metric will be at the end.\n    String uriPath = requestURI.getRawPath();\n    int index = uriPath.lastIndexOf(\"/\");\n    builder.setMetricName(urlDecode(uriPath.substring(index + 1)));\n    String strippedPath = null;\n    // strip the metric from the end of the path\n    if (index != -1) {\n      strippedPath = uriPath.substring(0, index);\n\n      if (strippedPath.startsWith(\"/system/cluster\")) {\n        builder.setSliceByTagValues(ImmutableMap.of(Constants.Metrics.Tag.NAMESPACE, Constants.SYSTEM_NAMESPACE,\n                                                    Constants.Metrics.Tag.CLUSTER_METRICS, \"true\"));\n        builder.setScope(\"system\");\n      } else if (strippedPath.startsWith(\"/system/transactions\")) {\n        builder.setSliceByTagValues(ImmutableMap.of(Constants.Metrics.Tag.NAMESPACE, Constants.SYSTEM_NAMESPACE,\n                                                    Constants.Metrics.Tag.COMPONENT, TRANSACTION_METRICS_CONTEXT));\n        builder.setScope(\"system\");\n      } else {\n        parseContext(strippedPath, builder);\n      }\n    } else {\n      builder.setSliceByTagValues(Maps.<String, String>newHashMap());\n    }\n    parseQueryString(requestURI, builder);\n\n    return builder.build();\n  }","commit_id":"71298b6ef4d973b8e8f3a6f8b3b532f03c94ad16","url":"https://github.com/caskdata/cdap"},{"original_method":"private void getMetrics(HttpRequest request, HttpResponder responder, String metricPrefix) {\n    String contextPrefix = null;\n    try {\n      String path = request.getUri();\n      String base = Constants.Gateway.API_VERSION_2 + \"/metrics/available/apps\";\n      if (path.startsWith(base)) {\n        Iterator<String> pathParts = Splitter.on('/').split(path.substring(base.length() + 1)).iterator();\n\n        Map<String, String> tagValues = Maps.newHashMap();\n        tagValues.put(Constants.Metrics.Tag.NAMESPACE, Constants.DEFAULT_NAMESPACE);\n        MetricQueryParser.parseSubContext(pathParts, tagValues);\n      }\n    } catch (MetricsPathException e) {\n      responder.sendError(HttpResponseStatus.NOT_FOUND, e.getMessage());\n      return;\n    }\n\n    Map<String, ContextNode> metricContextsMap = Maps.newHashMap();\n\n    // todo: fill metricContextsMap\n\n    // return the metrics sorted by metric name so it can directly be displayed to the user.\n    JsonArray output = new JsonArray();\n    List<String> sortedMetrics = Lists.newArrayList(metricContextsMap.keySet());\n    Collections.sort(sortedMetrics);\n    for (String metric : sortedMetrics) {\n      JsonObject metricNode = new JsonObject();\n      metricNode.addProperty(\"metric\", metric);\n      ContextNode metricContexts = metricContextsMap.get(metric);\n      // the root node has junk for its type and id, but has the list of contexts as its \"children\"\n      metricNode.add(\"contexts\", metricContexts.toJson().getAsJsonArray(\"children\"));\n      output.add(metricNode);\n    }\n\n    responder.sendJson(HttpResponseStatus.OK, output);\n  }","id":61452,"modified_method":"private void getMetrics(HttpRequest request, HttpResponder responder, String metricPrefix) {\n    String contextPrefix = null;\n    Map<String, ContextNode> metricContextsMap = Maps.newHashMap();\n    try {\n      String path = request.getUri();\n      String base = Constants.Gateway.API_VERSION_2 + \"/metrics/available/apps\";\n      if (path.startsWith(base)) {\n        Iterator<String> pathParts = Splitter.on('/').split(path.substring(base.length() + 1)).iterator();\n        // using LinkedHashMap, so we can iterate and construct TagValue Pairs used for constructing CubeExploreQuery.\n        Map<String, String> tagValues = Maps.newLinkedHashMap();\n        tagValues.put(Constants.Metrics.Tag.NAMESPACE, Constants.DEFAULT_NAMESPACE);\n        tagValues.put(Constants.Metrics.Tag.APP, URLDecoder.decode(pathParts.next(), CharEncoding.UTF_8));\n        MetricQueryParser.parseSubContext(pathParts, tagValues);\n\n        List<TagValue> tagsList = Lists.newArrayList();\n        for (Map.Entry<String, String> tag : tagValues.entrySet()) {\n          tagsList.add(new TagValue(tag.getKey(), tag.getValue()));\n        }\n        List<List<TagValue>> resultSet = Lists.newArrayList();\n        getAllPossibleTags(tagsList, resultSet);\n        for (List<TagValue> tagValueList : resultSet) {\n          CubeExploreQuery query = new CubeExploreQuery(0, Integer.MAX_VALUE, 1, -1, tagValueList);\n          Collection<String> measureNames = metricStore.getMeasureNames(query);\n          for (String measureName : measureNames) {\n            addContext(getContext(tagValueList), measureName, metricContextsMap);\n          }\n        }\n      }\n    } catch (MetricsPathException e) {\n      responder.sendError(HttpResponseStatus.NOT_FOUND, e.getMessage());\n      return;\n    } catch (Exception e) {\n      responder.sendError(HttpResponseStatus.INTERNAL_SERVER_ERROR, e.getMessage());\n      return;\n    }\n\n    // return the metrics sorted by metric name so it can directly be displayed to the user.\n    JsonArray output = new JsonArray();\n    List<String> sortedMetrics = Lists.newArrayList(metricContextsMap.keySet());\n    Collections.sort(sortedMetrics);\n    for (String metric : sortedMetrics) {\n      JsonObject metricNode = new JsonObject();\n      metricNode.addProperty(\"metric\", metric);\n      ContextNode metricContexts = metricContextsMap.get(metric);\n      // the root node has junk for its type and id, but has the list of contexts as its \"children\"\n      metricNode.add(\"contexts\", metricContexts.toJson().getAsJsonArray(\"children\"));\n      output.add(metricNode);\n    }\n\n    responder.sendJson(HttpResponseStatus.OK, output);\n  }","commit_id":"71298b6ef4d973b8e8f3a6f8b3b532f03c94ad16","url":"https://github.com/caskdata/cdap"},{"original_method":"@Inject\n  public MetricsDiscoveryHandler(Authenticator authenticator, MetricStore metricStore) {\n    super(authenticator);\n    this.metricStore = metricStore;\n  }","id":61453,"modified_method":"@Inject\n  public MetricsDiscoveryHandler(Authenticator authenticator, MetricStore metricStore) {\n    super(authenticator);\n    this.metricStore = metricStore;\n    tagMappings = ImmutableList.of(\"app\", \"ptp\", \"prg\", \"pr2\", \"pr3\", \"pr4\", \"ds\");\n  }","commit_id":"71298b6ef4d973b8e8f3a6f8b3b532f03c94ad16","url":"https://github.com/caskdata/cdap"},{"original_method":"private Collection<String> searchChildContext(String contextPrefix) throws Exception {\n    SortedSet<String> nextLevelContexts = Sets.newTreeSet();\n\n    // todo: implement\n\n    return nextLevelContexts;\n  }","id":61454,"modified_method":"private Collection<String> searchChildContext(String contextPrefix) throws Exception {\n    CubeExploreQuery searchQuery = new CubeExploreQuery(0, Integer.MAX_VALUE - 1, 1, -1, getContext(contextPrefix));\n    Collection<TagValue> nextTags = metricStore.getNextTags(searchQuery);\n    Collection<String> result = Lists.newArrayList();\n    for (TagValue tag : nextTags) {\n      if (tag.getValue() == null) {\n        continue;\n      }\n      String resultTag = contextPrefix == null ? tag.getValue() : contextPrefix + \".\" + tag.getValue();\n      result.add(resultTag);\n    }\n    return result;\n  }","commit_id":"71298b6ef4d973b8e8f3a6f8b3b532f03c94ad16","url":"https://github.com/caskdata/cdap"},{"original_method":"private Set<String> searchMetric(String contextPrefix) throws Exception {\n    SortedSet<String> metrics = Sets.newTreeSet();\n\n    // todo: implement\n\n    return metrics;\n  }","id":61455,"modified_method":"private Collection<String> searchMetric(String contextPrefix) throws Exception {\n    CubeExploreQuery searchQuery = new CubeExploreQuery(0, Integer.MAX_VALUE - 1, 1, -1, getContext(contextPrefix));\n    Collection<String> metricNames = metricStore.getMeasureNames(searchQuery);\n    return Lists.newArrayList(Iterables.filter(metricNames, Predicates.notNull()));\n  }","commit_id":"71298b6ef4d973b8e8f3a6f8b3b532f03c94ad16","url":"https://github.com/caskdata/cdap"},{"original_method":"@Inject\n  public MetricsHandler(Authenticator authenticator,\n                        final MetricStore metricStore) {\n    super(authenticator);\n\n    this.metricStore = metricStore;\n  }","id":61456,"modified_method":"@Inject\n  public MetricsHandler(Authenticator authenticator,\n                        final MetricStore metricStore) {\n    super(authenticator);\n\n    this.metricStore = metricStore;\n    tagMappings = ImmutableList.of(\"ns\", \"app\", \"ptp\", \"prg\", \"pr2\", \"pr3\", \"pr4\", \"ds\");\n  }","commit_id":"71298b6ef4d973b8e8f3a6f8b3b532f03c94ad16","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n  public void testSearchMetrics() throws Exception {\n    // metrics in system namespace\n    verifySearchResult(\"/v3/metrics/search?target=metric&context=system.-.cluster\",\n                       ImmutableList.<String>of(\"system.resources.total.storage\"));\n    // cluster metrics must have system prefix in context\n    verifySearchResult(\"/v3/metrics/search?target=metric&context=-.cluster\", ImmutableList.<String>of());\n\n    // metrics in myspace\n    verifySearchResult(\"/v3/metrics/search?target=metric&context=myspace.WordCount1.f.WordCounter.splitter\",\n                       ImmutableList.<String>of(\"system.reads\", \"system.writes\", \"user.reads\", \"user.writes\"));\n\n    verifySearchResult(\"/v3/metrics/search?target=metric&context=myspace.WordCount1.f.WordCounter.collector\",\n                       ImmutableList.<String>of(\"system.aa\", \"system.ab\", \"system.zz\"));\n\n    // wrong namespace\n    verifySearchResult(\"/v3/metrics/search?target=metric&context=yourspace.WordCount1.f.WordCounter.splitter\",\n                       ImmutableList.<String>of());\n\n\n    // metrics in yourspace\n    verifySearchResult(\"/v3/metrics/search?target=metric&context=yourspace.WCount1.f.WCounter.splitter\",\n                       ImmutableList.<String>of(\"system.reads\"));\n\n    // wrong namespace\n    verifySearchResult(\"/v3/metrics/search?target=metric&context=myspace.WCount1.f.WCounter.splitter\",\n                       ImmutableList.<String>of());\n  }","id":61457,"modified_method":"@Test\n  public void testSearchMetrics() throws Exception {\n    // metrics in myspace\n    verifySearchResult(\"/v3/metrics/search?target=metric&context=myspace.WordCount1.f.WordCounter.splitter\",\n                       ImmutableList.<String>of(\"system.reads\", \"system.writes\", \"user.reads\", \"user.writes\"));\n\n    verifySearchResult(\"/v3/metrics/search?target=metric&context=myspace.WordCount1.f.WordCounter.collector\",\n                       ImmutableList.<String>of(\"system.aa\", \"system.ab\", \"system.zz\"));\n\n    verifySearchResult(\"/v3/metrics/search?target=metric&context=myspace.WordCount1.f.WordCounter\",\n                       ImmutableList.<String>of(\"system.aa\", \"system.ab\", \"system.reads\",\n                                                \"system.writes\", \"system.zz\", \"user.reads\", \"user.writes\"));\n\n    // wrong namespace\n    verifySearchResult(\"/v3/metrics/search?target=metric&context=yourspace.WordCount1.f.WordCounter.splitter\",\n                       ImmutableList.<String>of());\n\n\n    // metrics in yourspace\n    verifySearchResult(\"/v3/metrics/search?target=metric&context=yourspace.WCount1.f.WCounter.splitter\",\n                       ImmutableList.<String>of(\"system.reads\"));\n\n    // wrong namespace\n    verifySearchResult(\"/v3/metrics/search?target=metric&context=myspace.WCount1.f.WCounter.splitter\",\n                       ImmutableList.<String>of());\n  }","commit_id":"71298b6ef4d973b8e8f3a6f8b3b532f03c94ad16","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n  public void testSearchContext() throws Exception {\n    // empty context\n    verifySearchResultContains(\"/v3/metrics/search?target=childContext\",\n                       ImmutableList.<String>of(\"myspace\", \"system\", \"yourspace\"));\n\n    // verify childContext in system context\n    verifySearchResultContains(\"/v3/metrics/search?target=childContext&context=system\",\n                       ImmutableList.<String>of(\"system.-\"));\n    verifySearchResultContains(\"/v3/metrics/search?target=childContext&context=system.-\",\n                       ImmutableList.<String>of(\"system.-.cluster\"));\n\n    // WordCount is in myspace, WCount in yourspace\n    verifySearchResult(\"/v3/metrics/search?target=childContext&context=yourspace\",\n                       ImmutableList.<String>of(\"yourspace.WCount1\"));\n    // WordCount is in myspace, WCount in yourspace\n    verifySearchResult(\"/v3/metrics/search?target=childContext&context=myspace\",\n                       ImmutableList.<String>of(\"myspace.WordCount1\"));\n    verifySearchResult(\"/v3/metrics/search?target=childContext&context=yourspace\",\n                       ImmutableList.<String>of(\"yourspace.WCount1\"));\n\n    // WordCount should be found in myspace, not in yourspace\n    verifySearchResult(\"/v3/metrics/search?target=childContext&context=myspace.WordCount1.f\",\n                       ImmutableList.<String>of(\"myspace.WordCount1.f.WordCounter\"));\n    verifySearchResult(\"/v3/metrics/search?target=childContext&context=yourspace.WordCount1.f\",\n                       ImmutableList.<String>of());\n\n    // WCount should be found in yourspace, not in myspace\n    verifySearchResult(\"/v3/metrics/search?target=childContext&context=yourspace.WCount1\",\n                       ImmutableList.<String>of(\"yourspace.WCount1.b\", \"yourspace.WCount1.f\", \"yourspace.WCount1.p\"));\n    verifySearchResult(\"/v3/metrics/search?target=childContext&context=myspace.WCount1\", ImmutableList.<String>of());\n\n    // verify other metrics for WCount app\n    verifySearchResult(\"/v3/metrics/search?target=childContext&context=yourspace.WCount1.b.ClassicWordCount\",\n                       ImmutableList.<String>of(\"yourspace.WCount1.b.ClassicWordCount.m\",\n                                                \"yourspace.WCount1.b.ClassicWordCount.r\"));\n    verifySearchResult(\"/v3/metrics/search?target=childContext&context=yourspace.WCount1.b.ClassicWordCount.m\",\n                       ImmutableList.<String>of(\"yourspace.WCount1.b.ClassicWordCount.m.task1\"));\n    verifySearchResult(\"/v3/metrics/search?target=childContext&context=yourspace.WCount1.b.ClassicWordCount.m.task1\",\n                       ImmutableList.<String>of());\n  }","id":61458,"modified_method":"@Test\n  public void testSearchContext() throws Exception {\n    // empty context\n    verifySearchResultContains(\"/v3/metrics/search?target=childContext\",\n                       ImmutableList.<String>of(\"myspace\", \"yourspace\"));\n\n    // WordCount is in myspace, WCount in yourspace\n    verifySearchResult(\"/v3/metrics/search?target=childContext&context=yourspace\",\n                       ImmutableList.<String>of(\"yourspace.WCount1\"));\n    // WordCount is in myspace, WCount in yourspace\n    verifySearchResult(\"/v3/metrics/search?target=childContext&context=myspace\",\n                       ImmutableList.<String>of(\"myspace.WordCount1\"));\n    verifySearchResult(\"/v3/metrics/search?target=childContext&context=yourspace\",\n                       ImmutableList.<String>of(\"yourspace.WCount1\"));\n\n    // WordCount should be found in myspace, not in yourspace\n    verifySearchResult(\"/v3/metrics/search?target=childContext&context=myspace.WordCount1.f\",\n                       ImmutableList.<String>of(\"myspace.WordCount1.f.WordCounter\"));\n    verifySearchResult(\"/v3/metrics/search?target=childContext&context=yourspace.WordCount1.f\",\n                       ImmutableList.<String>of());\n\n    // WCount should be found in yourspace, not in myspace\n    verifySearchResult(\"/v3/metrics/search?target=childContext&context=yourspace.WCount1\",\n                       ImmutableList.<String>of(\"yourspace.WCount1.b\", \"yourspace.WCount1.f\", \"yourspace.WCount1.p\"));\n    verifySearchResult(\"/v3/metrics/search?target=childContext&context=myspace.WCount1\", ImmutableList.<String>of());\n\n    // verify other metrics for WCount app\n    verifySearchResult(\"/v3/metrics/search?target=childContext&context=yourspace.WCount1.b.ClassicWordCount\",\n                       ImmutableList.<String>of(\"yourspace.WCount1.b.ClassicWordCount.m\",\n                                                \"yourspace.WCount1.b.ClassicWordCount.r\"));\n    verifySearchResult(\"/v3/metrics/search?target=childContext&context=yourspace.WCount1.b.ClassicWordCount.m\",\n                       ImmutableList.<String>of(\"yourspace.WCount1.b.ClassicWordCount.m.task1\"));\n    verifySearchResult(\"/v3/metrics/search?target=childContext&context=yourspace.WCount1.b.ClassicWordCount.m.task1\",\n                       ImmutableList.<String>of());\n  }","commit_id":"71298b6ef4d973b8e8f3a6f8b3b532f03c94ad16","url":"https://github.com/caskdata/cdap"},{"original_method":"private void doTest(final String beforeFileName, boolean withExtraFile) throws Exception {\n        final String originalFileText = FileUtil.loadFile(new File(getTestDataPath() + beforeFileName), true);\n\n        if (InTextDirectivesUtils.findStringWithPrefixes(originalFileText, \"// WITH_RUNTIME\") != null) {\n            ConfigLibraryUtil.configureKotlinRuntime(myModule, PluginTestCaseBase.fullJdk());\n        }\n\n        if (withExtraFile) {\n            configureByFiles(null, beforeFileName, beforeFileName.replace(\".Main.\", \".data.Sample.\"));\n        }\n        else {\n            configureByFiles(null, beforeFileName);\n        }\n\n        CommandProcessor.getInstance().executeCommand(getProject(), new Runnable() {\n            @Override\n            public void run() {\n                try {\n                    Pair<String, Boolean> pair = LightQuickFixTestCase.parseActionHint(getFile(), originalFileText);\n                    String text = pair.getFirst();\n\n                    boolean actionShouldBeAvailable = pair.getSecond();\n\n                    DirectiveBasedActionUtils.checkForUnexpectedErrors((JetFile) getFile());\n\n                    doAction(text, actionShouldBeAvailable, beforeFileName);\n                }\n                catch (ComparisonFailure e) {\n                    throw e;\n                }\n                catch (Throwable e) {\n                    e.printStackTrace();\n                    fail(getTestName(true));\n                }\n            }\n        }, \"\", \"\");\n    }","id":61459,"modified_method":"private void doTest(final String beforeFileName, boolean withExtraFile) throws Exception {\n        final String testDataPath = getTestDataPath();\n        File mainFile = new File(testDataPath + beforeFileName);\n        final String originalFileText = FileUtil.loadFile(mainFile, true);\n\n        if (InTextDirectivesUtils.findStringWithPrefixes(originalFileText, \"// WITH_RUNTIME\") != null) {\n            ConfigLibraryUtil.configureKotlinRuntime(myModule, PluginTestCaseBase.fullJdk());\n        }\n\n        if (withExtraFile) {\n            File mainFileDir = mainFile.getParentFile();\n            assert mainFileDir != null;\n\n            final String mainFileName = mainFile.getName();\n            final String extraFileNamePrefix = mainFileName.replace(\".Main.kt\", \".data.Sample.\");\n            File[] extraFiles = mainFileDir.listFiles(\n                    new FilenameFilter() {\n                        @Override\n                        public boolean accept(@NotNull File dir, @NotNull String name) {\n                            return name.startsWith(extraFileNamePrefix);\n                        }\n                    }\n            );\n            assert extraFiles != null;\n\n            List<String> testFiles = new ArrayList<String>();\n            testFiles.add(beforeFileName);\n            KotlinPackage.mapTo(\n                    extraFiles,\n                    testFiles,\n                    new Function1<File, String>() {\n                        @Override\n                        public String invoke(File file) {\n                            return beforeFileName.replace(mainFileName, file.getName());\n                        }\n                    }\n            );\n\n            configureByFiles(null, ArrayUtil.toStringArray(testFiles));\n        }\n        else {\n            configureByFiles(null, beforeFileName);\n        }\n\n        CommandProcessor.getInstance().executeCommand(getProject(), new Runnable() {\n            @Override\n            public void run() {\n                try {\n                    PsiFile psiFile = getFile();\n\n                    Pair<String, Boolean> pair = LightQuickFixTestCase.parseActionHint(psiFile, originalFileText);\n                    String text = pair.getFirst();\n\n                    boolean actionShouldBeAvailable = pair.getSecond();\n\n                    if (psiFile instanceof JetFile) {\n                        DirectiveBasedActionUtils.checkForUnexpectedErrors((JetFile) psiFile);\n                    }\n\n                    doAction(text, actionShouldBeAvailable, beforeFileName);\n                }\n                catch (ComparisonFailure e) {\n                    throw e;\n                }\n                catch (Throwable e) {\n                    e.printStackTrace();\n                    fail(getTestName(true));\n                }\n            }\n        }, \"\", \"\");\n    }","commit_id":"77a5ddbcd0a1f385added5cd4f24aa91da867814","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    myDataTestFixture = new MavenWithDataTestFixture(myDir);\n    myDataTestFixture.setUp();\n\n    myRepositoryManager = MavenIndicesManager.getInstance(myProject);\n    myRepositoryManager.initIndex();\n    myRepositoryManager.add(new MavenIndex(\"local1\", myDataTestFixture.getTestDataPath(\"local1\"), MavenIndex.Kind.LOCAL));\n    myRepositoryManager.add(new MavenIndex(\"local2\", myDataTestFixture.getTestDataPath(\"local2\"), MavenIndex.Kind.LOCAL));\n    myRepositoryManager.startUpdateAll();\n  }","id":61460,"modified_method":"@Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    myDataTestFixture = new MavenWithDataTestFixture(myDir);\n    myDataTestFixture.setUp();\n\n    FileUtil.copyDir(new File(myDataTestFixture.getTestDataPath(\"local2\")),\n                     new File(myDataTestFixture.getTestDataPath(\"local1\")));\n\n    getMavenCoreSettings().setLocalRepository(myDataTestFixture.getTestDataPath(\"local1\"));\n\n    myRepositoryManager = MavenIndicesManager.getInstance(myProject);\n    myRepositoryManager.doInit();\n  }","commit_id":"4ee9889c3710829b5852f287cf11ece2ffc12252","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testGroupIdCompletion() throws Exception {\n    updateProjectPom(\"<groupId>test<\/groupId>\" +\n                     \"<artifactId>project<\/artifactId>\" +\n                     \"<version>1<\/version>\" +\n\n                     \"<dependencies>\" +\n                     \"  <dependency>\" +\n                     \"    <groupId><caret><\/groupId>\" +\n                     \"  <\/dependency>\" +\n                     \"<\/dependencies>\");\n    \n    assertCompletionVariants(myProjectPom, \"junit\", \"jmock\");\n  }","id":61461,"modified_method":"public void testGroupIdCompletion() throws Exception {\n    updateProjectPom(\"<groupId>test<\/groupId>\" +\n                     \"<artifactId>project<\/artifactId>\" +\n                     \"<version>1<\/version>\" +\n\n                     \"<dependencies>\" +\n                     \"  <dependency>\" +\n                     \"    <groupId><caret><\/groupId>\" +\n                     \"  <\/dependency>\" +\n                     \"<\/dependencies>\");\n    \n    assertCompletionVariants(myProjectPom, \"junit\", \"jmock\", \"test\");\n  }","commit_id":"4ee9889c3710829b5852f287cf11ece2ffc12252","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  protected void tearDown() throws Exception {\n    myRepositoryManager.closeIndex();\n    myRepositoryManager.clearIndices();\n    super.tearDown();\n  }","id":61462,"modified_method":"@Override\n  protected void tearDown() throws Exception {\n    super.tearDown();\n    myRepositoryManager.clearIndices();\n  }","commit_id":"4ee9889c3710829b5852f287cf11ece2ffc12252","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testCompletionFromProjectArtifacts() throws Exception {\n    createModulePom(\"m1\",\n                    \"<groupId>project-group<\/groupId>\" +\n                    \"<artifactId>m1<\/artifactId>\" +\n                    \"<version>1<\/version>\");\n\n    createModulePom(\"m2\",\n                    \"<groupId>project-group<\/groupId>\" +\n                    \"<artifactId>m2<\/artifactId>\" +\n                    \"<version>2<\/version>\");\n\n    myRepositoryManager.updateProjectIndex();\n\n    updateProjectPom(\"<groupId>test<\/groupId>\" +\n                     \"<artifactId>project<\/artifactId>\" +\n                     \"<version>1<\/version>\" +\n\n                     \"<dependencies>\" +\n                     \"  <dependency>\" +\n                     \"    <groupId>project-group<\/groupId>\" +\n                     \"    <artifactId><caret><\/artifactId>\" +\n                     \"  <\/dependency>\" +\n                     \"<\/dependencies>\");\n\n    assertCompletionVariants(myProjectPom, \"m1\", \"m2\");\n  }","id":61463,"modified_method":"public void testAddingCreatedProjectsIntoCompletion() throws Exception {\n    createModulePom(\"m1\",\n                    \"<groupId>project-group<\/groupId>\" +\n                    \"<artifactId>m1<\/artifactId>\" +\n                    \"<version>1<\/version>\");\n\n    createModulePom(\"m2\",\n                    \"<groupId>project-group<\/groupId>\" +\n                    \"<artifactId>m2<\/artifactId>\" +\n                    \"<version>2<\/version>\");\n\n    updateProjectPom(\"<groupId>test<\/groupId>\" +\n                     \"<artifactId>project<\/artifactId>\" +\n                     \"<version>1<\/version>\" +\n\n                     \"<dependencies>\" +\n                     \"  <dependency>\" +\n                     \"    <groupId>project-group<\/groupId>\" +\n                     \"    <artifactId><caret><\/artifactId>\" +\n                     \"  <\/dependency>\" +\n                     \"<\/dependencies>\");\n\n    assertCompletionVariants(myProjectPom, \"m1\", \"m2\");\n  }","commit_id":"4ee9889c3710829b5852f287cf11ece2ffc12252","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void initComponent() {\n    StartupManager.getInstance(myProject).registerStartupActivity(new Runnable() {\n      public void run() {\n        if (ApplicationManager.getApplication().isUnitTestMode()) return;\n        if (!MavenProjectsManager.getInstance(myProject).isMavenProject()) return;\n\n        try {\n          initIndex();\n        }\n        catch (MavenException e) {\n          showErrorWhenProjectIsOpen(e);\n        }\n\n        StartupManager.getInstance(myProject).registerPostStartupActivity(new Runnable() {\n          public void run() {\n            try {\n              checkLocalIndex();\n              checkProjectIndex();\n            }\n            catch (MavenIndexException e) {\n              showErrorWhenProjectIsOpen(new MavenException(e));\n            }\n          }\n        });\n      }\n    });\n  }","id":61464,"modified_method":"public void initComponent() {\n    StartupManager.getInstance(myProject).registerPostStartupActivity(new Runnable() {\n      public void run() {\n        if (ApplicationManager.getApplication().isUnitTestMode()) return;\n        if (!MavenProjectsManager.getInstance(myProject).isMavenProject()) return;\n\n        doInit();\n      }\n    });\n  }","commit_id":"4ee9889c3710829b5852f287cf11ece2ffc12252","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@TestOnly\n  public void initIndex() throws MavenException {\n    myEmbedder = MavenFactory.createEmbedderForExecute(getSettings());\n    myIndices = new MavenIndices(myEmbedder, getIndicesDir());\n\n    try {\n      myIndices.load();\n    }\n    catch (MavenIndexException e) {\n      throw new MavenException(\"Couldn't load Maven Repositories: \" + e.getMessage());\n    }\n  }","id":61465,"modified_method":"private void initIndices() throws MavenException {\n    myEmbedder = MavenFactory.createEmbedderForExecute(getSettings());\n    myIndices = new MavenIndices(myEmbedder, getIndicesDir());\n\n    try {\n      myIndices.load();\n    }\n    catch (MavenIndexException e) {\n      throw new MavenException(\"Couldn't load Maven Repositories: \" + e.getMessage());\n    }\n  }","commit_id":"4ee9889c3710829b5852f287cf11ece2ffc12252","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void showErrorWhenProjectIsOpen(final MavenException e) {\n    StartupManager.getInstance(myProject).registerPostStartupActivity(new Runnable() {\n      public void run() {\n        MavenLog.LOG.warn(e);\n        new MavenImportToolWindow(myProject, RepositoryBundle.message(\"maven.indices\")).displayErrors(e);\n      }\n    });\n  }","id":61466,"modified_method":"private void showError(final MavenException e) {\n    MavenLog.LOG.warn(e);\n    new MavenImportToolWindow(myProject, RepositoryBundle.message(\"maven.indices\")).displayErrors(e);\n  }","commit_id":"4ee9889c3710829b5852f287cf11ece2ffc12252","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void disposeComponent() {\n    closeIndex();\n  }","id":61467,"modified_method":"public void disposeComponent() {\n    if (!isInitialized) return;\n\n    VirtualFileManager.getInstance().removeVirtualFileListener(myFileListener);\n    closeIndex();\n  }","commit_id":"4ee9889c3710829b5852f287cf11ece2ffc12252","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void doStartUpdate(final MavenIndex info) {\n    new Task.Backgroundable(myProject, RepositoryBundle.message(\"maven.indices.updating\"), true) {\n      public void run(@NotNull ProgressIndicator indicator) {\n        try {\n          List<MavenIndex> infos = info != null ? Collections.singletonList(info) : myIndices.getIndices();\n\n          for (MavenIndex each : infos) {\n            indicator.setText(RepositoryBundle.message(\"maven.indices.updating.index\", each.getId()));\n            myIndices.update(each, myProject, indicator);\n          }\n\n          ApplicationManager.getApplication().invokeLater(new Runnable() {\n            public void run() {\n              rehighlightAllPoms();\n            }\n          });\n        }\n        catch (MavenIndexException e) {\n          showErrorWhenProjectIsOpen(new MavenException(e));\n        }\n      }\n    }.queue();\n  }","id":61468,"modified_method":"private void doStartUpdate(final MavenIndex info) {\n    new Task.Backgroundable(myProject, RepositoryBundle.message(\"maven.indices.updating\"), true) {\n      public void run(@NotNull ProgressIndicator indicator) {\n        try {\n          List<MavenIndex> infos = info != null ? Collections.singletonList(info) : myIndices.getIndices();\n\n          for (MavenIndex each : infos) {\n            indicator.setText(RepositoryBundle.message(\"maven.indices.updating.index\", each.getId()));\n            myIndices.update(each, myProject, indicator);\n          }\n\n          ApplicationManager.getApplication().invokeLater(new Runnable() {\n            public void run() {\n              rehighlightAllPoms();\n            }\n          });\n        }\n        catch (MavenIndexException e) {\n          showError(new MavenException(e));\n        }\n      }\n    }.queue();\n  }","commit_id":"4ee9889c3710829b5852f287cf11ece2ffc12252","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static IElementType parse(PsiBuilder builder) {\n//    PsiBuilder.Marker adMarker = builder.mark();\n\n    if (!ParserUtils.getToken(builder, mAT)) {\n//      adMarker.rollbackTo();\n      return WRONGWAY;\n    }\n\n    if (!ParserUtils.getToken(builder, kINTERFACE)) {\n//      adMarker.rollbackTo();\n      return WRONGWAY;\n    }\n\n    if (!ParserUtils.getToken(builder, mIDENT)) {\n//      adMarker.rollbackTo();\n      return WRONGWAY;\n    }\n\n    if (tWRONG_SET.contains(AnnotationBlock.parse(builder))) {\n//      adMarker.rollbackTo();\n      return WRONGWAY;\n    }\n\n//    adMarker.done(ANNOTATION_BLOCK);\n    return ANNOTATION_BLOCK;\n  }","id":61469,"modified_method":"public static IElementType parse(PsiBuilder builder) {\n//    PsiBuilder.Marker adMarker = builder.mark();\n\n    if (!ParserUtils.getToken(builder, mAT)) {\n//      adMarker.rollbackTo();\n      return WRONGWAY;\n    }\n\n    if (!ParserUtils.getToken(builder, kINTERFACE)) {\n//      adMarker.rollbackTo();\n      return WRONGWAY;\n    }\n\n    if (!ParserUtils.getToken(builder, mIDENT)) {\n//      adMarker.rollbackTo();\n      return WRONGWAY;\n    }\n\n    if (WRONGWAY.equals(AnnotationBlock.parse(builder))) {\n//      adMarker.rollbackTo();\n      return WRONGWAY;\n    }\n\n//    adMarker.done(ANNOTATION_BLOCK);\n    return ANNOTATION_BLOCK;\n  }","commit_id":"4787e244d80536220c962c69131ce65c1bba9a78","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static IElementType parse(PsiBuilder builder) {\n    PsiBuilder.Marker bbm = builder.mark();\n\n    IElementType balancedTokens;\n    IElementType myBracket = null;\n\n    if (ParserUtils.getToken(builder, mLPAREN)) {\n      myBracket = mLPAREN;\n    }\n\n    if (ParserUtils.getToken(builder, mLCURLY)) {\n      myBracket = mLCURLY;\n    }\n\n    if (ParserUtils.getToken(builder, mGSTRING_SINGLE_BEGIN)) {\n      myBracket = mGSTRING_SINGLE_BEGIN;\n    }\n\n    if (myBracket == null) {\n      bbm.rollbackTo();\n      builder.error(GroovyBundle.message(\"lbrack.or.lparen.or.lcurly.or.string_ctor_start.expected\"));\n      return WRONGWAY;\n    }\n\n    balancedTokens = BalancedTokens.parse(builder);\n\n    if (tWRONG_SET.contains(balancedTokens)) {\n      bbm.rollbackTo();\n      return WRONGWAY;\n    }\n\n    if (ParserUtils.getToken(builder, mRPAREN) && !mRPAREN.equals(Pairs.pairElementsMap.get(myBracket))\n        || ParserUtils.getToken(builder, mRBRACK) && !mRBRACK.equals(Pairs.pairElementsMap.get(myBracket))\n        || ParserUtils.getToken(builder, mRCURLY) && !mRCURLY.equals(Pairs.pairElementsMap.get(myBracket))\n        || ParserUtils.getToken(builder, mGSTRING_SINGLE_END) && !mGSTRING_SINGLE_END.equals(Pairs.pairElementsMap.get(myBracket))) {\n      bbm.rollbackTo();\n      return WRONGWAY;\n    } else {\n      bbm.done(BALANCED_BRACKETS);\n      return BALANCED_BRACKETS;\n    }\n  }","id":61470,"modified_method":"public static IElementType parse(PsiBuilder builder) {\n    PsiBuilder.Marker bbm = builder.mark();\n\n    IElementType balancedTokens;\n    IElementType myBracket = null;\n\n    if (ParserUtils.getToken(builder, mLPAREN)) {\n      myBracket = mLPAREN;\n    }\n\n    if (ParserUtils.getToken(builder, mLCURLY)) {\n      myBracket = mLCURLY;\n    }\n\n    if (ParserUtils.getToken(builder, mGSTRING_SINGLE_BEGIN)) {\n      myBracket = mGSTRING_SINGLE_BEGIN;\n    }\n\n    if (myBracket == null) {\n      bbm.rollbackTo();\n      builder.error(GroovyBundle.message(\"lbrack.or.lparen.or.lcurly.or.string_ctor_start.expected\"));\n      return WRONGWAY;\n    }\n\n    balancedTokens = BalancedTokens.parse(builder);\n\n    if (WRONGWAY.equals(balancedTokens)) {\n      bbm.rollbackTo();\n      return WRONGWAY;\n    }\n\n    if (ParserUtils.getToken(builder, mRPAREN) && !mRPAREN.equals(Pairs.pairElementsMap.get(myBracket))\n        || ParserUtils.getToken(builder, mRBRACK) && !mRBRACK.equals(Pairs.pairElementsMap.get(myBracket))\n        || ParserUtils.getToken(builder, mRCURLY) && !mRCURLY.equals(Pairs.pairElementsMap.get(myBracket))\n        || ParserUtils.getToken(builder, mGSTRING_SINGLE_END) && !mGSTRING_SINGLE_END.equals(Pairs.pairElementsMap.get(myBracket))) {\n      bbm.rollbackTo();\n      return WRONGWAY;\n    } else {\n      bbm.done(BALANCED_BRACKETS);\n      return BALANCED_BRACKETS;\n    }\n  }","commit_id":"4787e244d80536220c962c69131ce65c1bba9a78","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static IElementType parse (PsiBuilder builder) {\n    //todo: handle differents brackets cases\n\n    IElementType balancedToken;\n    do {\n      balancedToken = BalancedBrackets.parse(builder);\n    } while(!tWRONG_SET.contains(balancedToken));\n\n    return BALANCED_TOKENS;\n  }","id":61471,"modified_method":"public static IElementType parse (PsiBuilder builder) {\n    //todo: handle differents brackets cases\n\n    IElementType balancedToken;\n    do {\n      balancedToken = BalancedBrackets.parse(builder);\n    } while(!WRONGWAY.equals(balancedToken));\n\n    return BALANCED_TOKENS;\n  }","commit_id":"4787e244d80536220c962c69131ce65c1bba9a78","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static IElementType parse(PsiBuilder builder) {\n    //see also InterfaceBlock, EnumBlock, AnnotationBlock\n    PsiBuilder.Marker cbMarker = builder.mark();\n\n    if (!ParserUtils.getToken(builder, mLCURLY)) {\n      builder.error(GroovyBundle.message(\"lcurly.expected\"));\n      cbMarker.rollbackTo();\n      return WRONGWAY;\n    }\n\n    ClassMember.parse(builder);\n\n    IElementType sep = Separators.parse(builder);\n\n    while (!tWRONG_SET.contains(sep)) {\n      ClassMember.parse(builder);\n\n      sep = Separators.parse(builder);\n    }\n\n    ParserUtils.waitNextRCurly(builder);\n\n    if (!ParserUtils.getToken(builder, mRCURLY)) {\n      builder.error(GroovyBundle.message(\"rcurly.expected\"));\n//      cbMarker.rollbackTo();\n//      return WRONGWAY;\n    }\n\n    cbMarker.done(CLASS_BLOCK);\n    return CLASS_BLOCK;\n  }","id":61472,"modified_method":"public static IElementType parse(PsiBuilder builder) {\n    //see also InterfaceBlock, EnumBlock, AnnotationBlock\n    PsiBuilder.Marker cbMarker = builder.mark();\n\n    if (!ParserUtils.getToken(builder, mLCURLY)) {\n      builder.error(GroovyBundle.message(\"lcurly.expected\"));\n      cbMarker.rollbackTo();\n      return WRONGWAY;\n    }\n\n    ClassMember.parse(builder);\n\n    IElementType sep = Separators.parse(builder);\n\n    while (!WRONGWAY.equals(sep)) {\n      ClassMember.parse(builder);\n\n      sep = Separators.parse(builder);\n    }\n\n    ParserUtils.waitNextRCurly(builder);\n\n    if (!ParserUtils.getToken(builder, mRCURLY)) {\n      builder.error(GroovyBundle.message(\"rcurly.expected\"));\n//      cbMarker.rollbackTo();\n//      return WRONGWAY;\n    }\n\n    cbMarker.done(CLASS_BLOCK);\n    return CLASS_BLOCK;\n  }","commit_id":"4787e244d80536220c962c69131ce65c1bba9a78","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static IElementType parse(PsiBuilder builder) {\n    if (!ParserUtils.getToken(builder, kCLASS)) {\n      return WRONGWAY;\n    }\n\n    if (!ParserUtils.getToken(builder, mIDENT)) {\n      builder.error(GroovyBundle.message(\"identifier.expected\"));\n      return WRONGWAY;\n    }\n\n    ParserUtils.getToken(builder, mNLS);\n\n    TypeParameters.parse(builder);\n\n    if (kEXTENDS.equals(builder.getTokenType()))\n      if (tWRONG_SET.contains(SuperClassClause.parse(builder))) {\n//      return WRONGWAY;\n      }\n\n    if (kIMPLEMENTS.equals(builder.getTokenType()))\n      if (tWRONG_SET.contains(ImplementsClause.parse(builder))) {\n//      return WRONGWAY;\n      }\n\n    if (mLCURLY.equals(builder.getTokenType())) {\n      if (tWRONG_SET.contains(ClassBlock.parse(builder))) {\n        return WRONGWAY;\n      }\n    } else {\n      builder.error(GroovyBundle.message(\"lcurly.expected\"));\n    }\n\n    return CLASS_DEFINITION;\n  }","id":61473,"modified_method":"public static IElementType parse(PsiBuilder builder) {\n    if (!ParserUtils.getToken(builder, kCLASS)) {\n      return WRONGWAY;\n    }\n\n    if (!ParserUtils.getToken(builder, mIDENT)) {\n      builder.error(GroovyBundle.message(\"identifier.expected\"));\n      return WRONGWAY;\n    }\n\n    ParserUtils.getToken(builder, mNLS);\n\n    TypeParameters.parse(builder);\n\n    if (kEXTENDS.equals(builder.getTokenType()))\n      if (WRONGWAY.equals(SuperClassClause.parse(builder))) {\n//      return WRONGWAY;\n      }\n\n    if (kIMPLEMENTS.equals(builder.getTokenType()))\n      if (WRONGWAY.equals(ImplementsClause.parse(builder))) {\n//      return WRONGWAY;\n      }\n\n    if (mLCURLY.equals(builder.getTokenType())) {\n      if (WRONGWAY.equals(ClassBlock.parse(builder))) {\n        return WRONGWAY;\n      }\n    } else {\n      builder.error(GroovyBundle.message(\"lcurly.expected\"));\n    }\n\n    return CLASS_DEFINITION;\n  }","commit_id":"4787e244d80536220c962c69131ce65c1bba9a78","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static IElementType parse(PsiBuilder builder) {\n    //constructor\n    PsiBuilder.Marker constructorStartMarker = builder.mark();\n    if (ConstructorStart.parse(builder)) {\n      constructorStartMarker.rollbackTo();\n\n      if (tWRONG_SET.contains(ModifiersOptional.parse(builder))) {\n        return WRONGWAY;\n      }\n\n      if (tWRONG_SET.contains(MethodDefinition.parse(builder))) {\n        return WRONGWAY;\n      }\n\n      return METHOD_DEFINITION;\n    }\n    constructorStartMarker.drop();\n\n    //declaration\n    PsiBuilder.Marker declMarker = builder.mark();\n    if (DeclarationStart.parse(builder)) {\n      declMarker.rollbackTo();\n      return Declaration.parse(builder);\n    }\n    declMarker.drop();\n\n    //type definition\n    PsiBuilder.Marker typeDeclStartMarker = builder.mark();\n    if (TypeDeclarationStart.parse(builder)) {\n      typeDeclStartMarker.rollbackTo();\n\n      IElementType typeDef = TypeDefinition.parse(builder);\n      if (tWRONG_SET.contains(typeDef)) {\n        return WRONGWAY;\n      }\n      return typeDef;\n    }\n    typeDeclStartMarker.drop();\n\n    //static compound statement\n    if (ParserUtils.getToken(builder, kSTATIC)) {\n      if (!tWRONG_SET.contains(OpenBlock.parse(builder))) {\n        return STATIC_COMPOUND_STATEMENT;\n      } else {\n        builder.error(GroovyBundle.message(\"compound.statemenet.expected\"));\n        return WRONGWAY;\n      }\n    }\n\n    if (!tWRONG_SET.contains(OpenBlock.parse(builder))) {\n      return COMPOUND_STATEMENT;\n    }\n\n    return WRONGWAY;\n\n  }","id":61474,"modified_method":"public static IElementType parse(PsiBuilder builder) {\n    //constructor\n    PsiBuilder.Marker constructorStartMarker = builder.mark();\n    if (ConstructorStart.parse(builder)) {\n      constructorStartMarker.rollbackTo();\n\n      PsiBuilder.Marker cmMarker = builder.mark();\n\n      if (WRONGWAY.equals(ModifiersOptional.parse(builder))) {\n        cmMarker.drop();\n        return WRONGWAY;\n      }\n\n      IElementType methodDef = MethodDefinition.parse(builder);\n      if (WRONGWAY.equals(methodDef)) {\n        cmMarker.drop();\n        return WRONGWAY;\n      }\n\n      cmMarker.done(methodDef);\n      return methodDef;\n    }\n    constructorStartMarker.rollbackTo();\n\n    //declaration\n    PsiBuilder.Marker declMarker = builder.mark();\n    if (DeclarationStart.parse(builder)) {\n      declMarker.rollbackTo();\n      return Declaration.parse(builder);\n    }\n    declMarker.rollbackTo();\n\n    //type definition\n    PsiBuilder.Marker typeDeclStartMarker = builder.mark();\n    if (TypeDeclarationStart.parse(builder)) {\n      typeDeclStartMarker.rollbackTo();\n\n      IElementType typeDef = TypeDefinition.parse(builder);\n      if (WRONGWAY.equals(typeDef)) {\n        return WRONGWAY;\n      }\n      return typeDef;\n    }\n    typeDeclStartMarker.rollbackTo();\n\n    //static compound statement\n    if (ParserUtils.getToken(builder, kSTATIC)) {\n      if (!WRONGWAY.equals(OpenBlock.parse(builder))) {\n        return STATIC_COMPOUND_STATEMENT;\n      } else {\n        builder.error(GroovyBundle.message(\"compound.statemenet.expected\"));\n        return WRONGWAY;\n      }\n    }\n\n    if (!WRONGWAY.equals(OpenBlock.parse(builder))) {\n      return COMPOUND_STATEMENT;\n    }\n\n    return WRONGWAY;\n  }","commit_id":"4787e244d80536220c962c69131ce65c1bba9a78","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static GroovyElementType parse(PsiBuilder builder) {\n    //allows error messages\n    IElementType modifiers = Modifiers.parse(builder);\n\n    if (!tWRONG_SET.contains(modifiers)) {\n      TypeSpec.parse(builder);\n\n      if (tWRONG_SET.contains(VariableDefinitions.parse(builder))) {\n        builder.error(GroovyBundle.message(\"variable.definitions.expected\"));\n        return WRONGWAY;\n      }\n    } else {\n      if (tWRONG_SET.contains(TypeSpec.parse(builder))) {\n        builder.error(GroovyBundle.message(\"type.specification.expected\"));\n        return WRONGWAY;\n      }\n\n      if (tWRONG_SET.contains(VariableDefinitions.parse(builder))) {\n        builder.error(GroovyBundle.message(\"variable.definitions.expected\"));\n        return WRONGWAY;\n      }\n    }\n\n    return DECLARATION;\n  }","id":61475,"modified_method":"public static GroovyElementType parse(PsiBuilder builder) {\n    PsiBuilder.Marker declmMarker = builder.mark();\n    //allows error messages\n    IElementType modifiers = Modifiers.parse(builder);\n\n    if (!WRONGWAY.equals(modifiers)) {\n\n      PsiBuilder.Marker checkMarker = builder.mark(); //point to begin of type or variable\n\n      if (WRONGWAY.equals(TypeSpec.parse(builder))) { //if type wasn't recognized trying poarse VaribleDeclaration\n        checkMarker.rollbackTo();\n\n        GroovyElementType varDecl = VariableDefinitions.parse(builder);\n        if (WRONGWAY.equals(varDecl)) {\n          builder.error(GroovyBundle.message(\"variable.definitions.expected\"));\n          return WRONGWAY;\n        } else {\n          declmMarker.done(varDecl);\n          return varDecl;\n        }\n\n      } else {  //type was recognezed\n        GroovyElementType varDeclarationTop = VariableDefinitions.parse(builder);\n        if (WRONGWAY.equals(varDeclarationTop)) {\n          checkMarker.rollbackTo();\n\n          GroovyElementType varDecl = VariableDefinitions.parse(builder);\n          if (WRONGWAY.equals(varDecl)) {\n            builder.error(GroovyBundle.message(\"variable.definitions.expected\"));\n            return WRONGWAY;\n          } else {\n            declmMarker.done(varDecl);\n            return varDecl;\n          }\n        } else {\n          checkMarker.drop();\n          declmMarker.done(varDeclarationTop);\n          return varDeclarationTop;\n        }\n      }\n    } else {\n      if (WRONGWAY.equals(TypeSpec.parse(builder))) {\n        builder.error(GroovyBundle.message(\"type.specification.expected\"));\n        return WRONGWAY;\n      }\n\n      GroovyElementType varDef = VariableDefinitions.parse(builder);\n      if (WRONGWAY.equals(varDef)) {\n        builder.error(GroovyBundle.message(\"variable.definitions.expected\"));\n        return WRONGWAY;\n      }\n\n      declmMarker.done(varDef);\n      return varDef;\n    }\n  }","commit_id":"4787e244d80536220c962c69131ce65c1bba9a78","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static boolean parseNextTokenInDeclaration(PsiBuilder builder) {\n    return ParserUtils.getToken(builder, mIDENT) ||\n          ParserUtils.validateToken(builder, TokenSets.BUILT_IN_TYPE) ||\n          ParserUtils.getToken(builder, mSTRING_LITERAL);\n  }","id":61476,"modified_method":"private static boolean parseNextTokenInDeclaration(PsiBuilder builder) {\n    return ParserUtils.lookAhead(builder, mIDENT) ||\n        TokenSets.BUILT_IN_TYPE.contains(builder.getTokenType()) ||\n        TokenSets.MODIFIERS.contains(builder.getTokenType()) ||\n          ParserUtils.lookAhead(builder, kDEF) ||\n          ParserUtils.lookAhead(builder, mAT) ||\n          ParserUtils.lookAhead(builder, mSTRING_LITERAL);\n  }","commit_id":"4787e244d80536220c962c69131ce65c1bba9a78","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static IElementType parseBalancedTokensInBrackets(PsiBuilder builder) {\n    PsiBuilder.Marker btm = builder.mark();\n\n    if (!ParserUtils.getToken(builder, mLBRACK, GroovyBundle.message(\"lbrack.expected\"))) {\n      btm.rollbackTo();\n      return WRONGWAY;\n    }\n\n    if (tWRONG_SET.contains(BalancedTokens.parse(builder))) {\n      btm.rollbackTo();\n      return WRONGWAY;\n    }\n\n    if (!ParserUtils.getToken(builder, mRBRACK, GroovyBundle.message(\"rbrack.expected\"))) {\n      btm.rollbackTo();\n      return WRONGWAY;\n    }\n\n    btm.done(BALANCED_TOKENS);\n\n    return BALANCED_TOKENS;\n  }","id":61477,"modified_method":"private static IElementType parseBalancedTokensInBrackets(PsiBuilder builder) {\n    PsiBuilder.Marker btm = builder.mark();\n\n    if (!ParserUtils.getToken(builder, mLBRACK, GroovyBundle.message(\"lbrack.expected\"))) {\n      btm.rollbackTo();\n      return WRONGWAY;\n    }\n\n    if (WRONGWAY.equals(BalancedTokens.parse(builder))) {\n      btm.rollbackTo();\n      return WRONGWAY;\n    }\n\n    if (!ParserUtils.getToken(builder, mRBRACK, GroovyBundle.message(\"rbrack.expected\"))) {\n      btm.rollbackTo();\n      return WRONGWAY;\n    }\n\n    btm.done(BALANCED_TOKENS);\n\n    return BALANCED_TOKENS;\n  }","commit_id":"4787e244d80536220c962c69131ce65c1bba9a78","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static boolean parse(PsiBuilder builder) {\n    IElementType elementType;\n\n    //def\n    if (ParserUtils.getToken(builder, kDEF)) return parseNextTokenInDeclaration(builder);\n\n    //Modifier\n    elementType = Modifier.parse(builder);\n    if (!tWRONG_SET.contains(elementType)) {\n      return parseNextTokenInDeclaration(builder);\n    }\n\n    //@IDENT\n    if (ParserUtils.getToken(builder, mAT)) {\n      return ParserUtils.getToken(builder, mIDENT);\n    }\n\n    // (upperCaseIdent | builtInType | QulifiedTypeName)  {LBRACK balacedTokens RBRACK} IDENT\n    if (!tWRONG_SET.contains(UpperCaseIdent.parse(builder)) || !tWRONG_SET.contains(BuiltInType.parse(builder)) || !tWRONG_SET.contains(QualifiedTypeName.parse(builder))) {\n\n      IElementType balancedTokens;\n\n      do {\n        balancedTokens = parseBalancedTokensInBrackets(builder);\n        if (!BALANCED_TOKENS.equals(balancedTokens)) {\n          return false;\n        }\n      } while (!tWRONG_SET.contains(balancedTokens));\n\n      //IDENT\n      return ParserUtils.getToken(builder, mIDENT);\n\n    } else {\n//      builder.error(GroovyBundle.message(\"upper.case.ident.or.builtIn.type.or.qualified.type.name.expected\"));\n      return false;\n    }\n  }","id":61478,"modified_method":"public static boolean parse(PsiBuilder builder) {\n    IElementType elementType;\n\n    //def\n    if (ParserUtils.getToken(builder, kDEF)) return parseNextTokenInDeclaration(builder);\n\n    //Modifiers\n    elementType = Modifiers.parse(builder);\n    if (!WRONGWAY.equals(elementType)) {\n      return parseNextTokenInDeclaration(builder);\n    }\n\n    //@IDENT\n    if (ParserUtils.getToken(builder, mAT)) {\n      return ParserUtils.getToken(builder, mIDENT);\n    }\n\n    // (upperCaseIdent | builtInType | QulifiedTypeName)  {LBRACK balacedTokens RBRACK} IDENT\n    if (!WRONGWAY.equals(UpperCaseIdent.parse(builder)) || !WRONGWAY.equals(BuiltInType.parse(builder)) || !WRONGWAY.equals(QualifiedTypeName.parse(builder))) {\n\n      IElementType balancedTokens;\n\n      do {\n        balancedTokens = parseBalancedTokensInBrackets(builder);\n        if (!BALANCED_TOKENS.equals(balancedTokens)) {\n          return false;\n        }\n      } while (!WRONGWAY.equals(balancedTokens));\n\n      //IDENT\n      return ParserUtils.getToken(builder, mIDENT);\n\n    } else {\n//      builder.error(GroovyBundle.message(\"upper.case.ident.or.builtIn.type.or.qualified.type.name.expected\"));\n      return false;\n    }\n  }","commit_id":"4787e244d80536220c962c69131ce65c1bba9a78","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static IElementType parse(PsiBuilder builder) {\n//    PsiBuilder.Marker edMarker = builder.mark();\n\n    if (!ParserUtils.getToken(builder, kENUM)){\n//      edMarker.rollbackTo();\n      return WRONGWAY;\n    }\n\n    if (!ParserUtils.getToken(builder, mIDENT)){\n//      edMarker.rollbackTo();\n      return WRONGWAY;\n    }\n\n    if (tWRONG_SET.contains(ImplementsClause.parse(builder))) {\n//      edMarker.rollbackTo();\n      return WRONGWAY;\n    }\n\n    if (tWRONG_SET.contains(EnumBlock.parse(builder))) {\n//      edMarker.rollbackTo();\n      return WRONGWAY;\n    }\n\n//    edMarker.done(ENUM_DEFINITION);\n    return ENUM_DEFINITION;\n  }","id":61479,"modified_method":"public static IElementType parse(PsiBuilder builder) {\n//    PsiBuilder.Marker edMarker = builder.mark();\n\n    if (!ParserUtils.getToken(builder, kENUM)){\n//      edMarker.rollbackTo();\n      return WRONGWAY;\n    }\n\n    if (!ParserUtils.getToken(builder, mIDENT)){\n//      edMarker.rollbackTo();\n      return WRONGWAY;\n    }\n\n    if (WRONGWAY.equals(ImplementsClause.parse(builder))) {\n//      edMarker.rollbackTo();\n      return WRONGWAY;\n    }\n\n    if (WRONGWAY.equals(EnumBlock.parse(builder))) {\n//      edMarker.rollbackTo();\n      return WRONGWAY;\n    }\n\n//    edMarker.done(ENUM_DEFINITION);\n    return ENUM_DEFINITION;\n  }","commit_id":"4787e244d80536220c962c69131ce65c1bba9a78","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n   * Creates Groovy PSI element by given AST node\n   *\n   * @param node Given node\n   * @return Respective PSI element\n   */\n  public static PsiElement createElement(ASTNode node) {\n    IElementType elem = node.getElementType();\n\n    //Identifiers & literal\n    if (elem.equals(IDENTIFIER)) return new GrIdentifierImpl(node);\n    if (elem.equals(LITERAL)) return new GrLiteralImpl(node);\n\n    //Lists, mapetc...\n    if (elem.equals(LIST)) return new GrListImpl(node);\n    if (elem.equals(MAP)) return new GrMapImpl(node);\n\n    if (elem.equals(MODIFIER)) return new GrModifierImpl(node);\n    if (elem.equals(MODIFIERS)) return new GrModifiersImpl(node);\n\n    // Imports\n    if (elem.equals(IMPORT_STATEMENT)) return new GrImportStatementImpl(node);\n    if (elem.equals(IMPORT_SELECTOR)) return new GrImportSelectorImpl(node);\n    if (elem.equals(IMPORT_REFERENCE)) return new GrImportReferenceImpl(node);\n\n    // Packaging\n    if (elem.equals(PACKAGE_DEFINITION)) return new GrPackageDefinitionImpl(node);\n\n    //statements\n    if (elem.equals(IF_STATEMENT)) return new GrIfStatementImpl(node);\n    if (elem.equals(FOR_STATEMENT)) return new GrForStatementImpl(node);\n    if (elem.equals(WHILE_STATEMENT)) return new GrWhileStatementImpl(node);\n    if (elem.equals(WITH_STATEMENT)) return new GrWithStatementImpl(node);\n    if (elem.equals(STAR_STATEMENT)) return new GrStarStatementImpl(node);\n\n    //type definitions\n    if (elem.equals(CLASS_DEFINITION)) return new GrClassDefinitionImpl(node);\n    if (elem.equals(INTERFACE_DEFINITION)) return new GrInterfaceDefinitionImpl(node);\n    if (elem.equals(ENUM_DEFINITION)) return new GrEnumTypeDefinitionImpl(node);\n    if (elem.equals(ANNOTATION_DEFINITION)) return new GrAnnotationTypeDefinitionImpl(node);\n\n    if (elem.equals(CLASS_INTERFACE_TYPE)) return new GrClassInterfaceTypeImpl(node);\n\n    //clauses\n    if (elem.equals(IMPLEMENTS_CLAUSE)) return new GrImplementsClauseImpl(node);\n    if (elem.equals(EXTENDS_CLAUSE)) return new GrExtendsClauseImpl(node);\n\n    //blocks\n    if (elem.equals(CLASS_BLOCK)) return new GrClassBodyImpl(node);\n    if (elem.equals(INTERFACE_BLOCK)) return new GrInterfaceBodyImplType(node);\n    if (elem.equals(ENUM_BLOCK)) return new GrEnumBodyImplType(node);\n    if (elem.equals(ANNOTATION_BLOCK)) return new GrAnnotationBodyImplType(node);\n    if (elem.equals(CLOSABLE_BLOCK)) return new GrClosableBlockImpl(node);\n    if (elem.equals(OPEN_BLOCK)) return new GrOpenBlockImpl(node);\n    if (elem.equals(CONSTRUCTOR_BODY)) return new GrConstructorBodyImpl(node);\n    if (elem.equals(METHOD_BODY)) return new GrMethodBodyImpl(node);\n\n    //members\n    if (elem.equals(CLASS_FIELD)) return new GrClassMemberImpl(node);\n    if (elem.equals(INTERFACE_FIELD)) return new GrInterfaceMemberImpl(node);\n    if (elem.equals(ENUM_FIELD)) return new GrEnumMemberImpl(node);\n    if (elem.equals(ANNOTATION_FIELD)) return new GrAnnotationMemberImpl(node);\n\n    if (elem.equals(CONSTRUCTOR_DEFINITION)) return new GrConstructorBodyImpl(node);\n    if (elem.equals(METHOD_DEFINITION)) return new GrMethodDefinitionImpl(node);\n\n    //parameters\n    if (elem.equals(PARAMETERS_LIST)) return new GrParameterListImpl(node);\n    if (elem.equals(PARAMETER)) return new GrParameterImpl(node);\n    if (elem.equals(PARAMETER_MODIFIERS)) return new GrParameterModifiersImpl(node);\n\n    //expressions\n    if (elem.equals(EXPRESSION_STATEMENT)) return new GrCallExpressionImpl(node);\n    if (elem.equals(COMMAND_ARGUMENTS)) return new GrCommandArgsImpl(node);\n    if (elem.equals(CONDITIONAL_EXPRESSION)) return new GrConditionalExprImpl(node);\n    if (elem.equals(ASSIGNMENT_EXPRESSION)) return new GrAssignmentExprImpl(node);\n    if (elem.equals(LOGICAL_OR_EXPRESSION)) return new GrLogicalOrExprImpl(node);\n    if (elem.equals(LOGICAL_AND_EXPRESSION)) return new GrLogicalAndExprImpl(node);\n    if (elem.equals(EXCLUSIVE_OR_EXPRESSION)) return new GrExclusiveOrExprImpl(node);\n    if (elem.equals(INCLUSIVE_OR_EXPRESSION)) return new GrInclusiveOrExprImpl(node);\n    if (elem.equals(AND_EXPRESSION)) return new GrAndExprImpl(node);\n    if (elem.equals(REGEX_EXPRESSION)) return new GrRegexExprImpl(node);\n    if (elem.equals(EQUALITY_EXPRESSION)) return new GrEqualityExprImpl(node);\n    if (elem.equals(RELATIONAL_EXPRESSION)) return new GrRelationalExprImpl(node);\n    if (elem.equals(SHIFT_EXPRESSION)) return new GrShiftExprImpl(node);\n    if (elem.equals(ADDITIVE_EXPRESSION)) return new GrAdditiveExprImpl(node);\n    if (elem.equals(MULTIPLICATIVE_EXPRESSION)) return new GrMultiplicativeExprImpl(node);\n    if (elem.equals(POWER_EXPRESSION)) return new GrPowerExprImpl(node);\n    if (elem.equals(POWER_EXPRESSION_SIMPLE)) return new GrPowerExprImpl(node);\n    if (elem.equals(UNARY_EXPRESSION)) return new GrUnaryExprImpl(node);\n    if (elem.equals(POSTFIX_EXPRESSION)) return new GrPostfixExprImpl(node);\n    if (elem.equals(CAST_EXPRESSION)) return new GrTypeCastExprImpl(node);\n    if (elem.equals(TYPE_CAST)) return new GrTypeCastImpl(node);\n    if (elem.equals(ARRAY_TYPE)) return new GrArrayTypeElementImpl(node);\n    if (elem.equals(BUILT_IN_TYPE)) return new GrBuiltInTypeImpl(node);\n    if (elem.equals(GSTRING)) return new GrStringImpl(node);\n    if (elem.equals(REFERENCE_EXPRESSION)) return new GrReferenceExprImpl(node);\n\n    //Paths\n    if (elem.equals(PATH_PROPERTY)) return new GrPropertySelectorImpl(node);\n    if (elem.equals(PATH_PROPERTY_REFERENCE)) return new GrPropertySelectionImpl(node);\n    if (elem.equals(PATH_METHOD_CALL)) return new GrMethodCallImpl(node);\n    if (elem.equals(PATH_INDEX_PROPERTY)) return new GrIndexPropertyImpl(node);\n\n    // Arguments\n    if (elem.equals(ARGUMENTS)) return new GrArgumentsImpl(node);\n\n\n    if (elem.equals(BALANCED_BRACKETS)) return new GrBalancedBracketsImpl(node);\n    if (elem.equals(DECLARATION)) return new GrDeclarationStatementImpl(node);\n\n    return new ASTWrapperPsiElement(node);\n  }","id":61480,"modified_method":"/**\n   * Creates Groovy PSI element by given AST node\n   *\n   * @param node Given node\n   * @return Respective PSI element\n   */\n  public static PsiElement createElement(ASTNode node) {\n    IElementType elem = node.getElementType();\n\n    //Identifiers & literal\n    if (elem.equals(IDENTIFIER)) return new GrIdentifierImpl(node);\n    if (elem.equals(LITERAL)) return new GrLiteralImpl(node);\n\n    //Lists, mapetc...\n    if (elem.equals(LIST)) return new GrListImpl(node);\n    if (elem.equals(MAP)) return new GrMapImpl(node);\n\n//    if (elem.equals(MODIFIER)) return new GrModifierImpl(node);\n    if (elem.equals(MODIFIERS)) return new GrModifiersImpl(node);\n\n    // Imports\n    if (elem.equals(IMPORT_STATEMENT)) return new GrImportStatementImpl(node);\n    if (elem.equals(IMPORT_SELECTOR)) return new GrImportSelectorImpl(node);\n    if (elem.equals(IMPORT_REFERENCE)) return new GrImportReferenceImpl(node);\n\n    // Packaging\n    if (elem.equals(PACKAGE_DEFINITION)) return new GrPackageDefinitionImpl(node);\n\n    //statements\n    if (elem.equals(IF_STATEMENT)) return new GrIfStatementImpl(node);\n    if (elem.equals(FOR_STATEMENT)) return new GrForStatementImpl(node);\n    if (elem.equals(WHILE_STATEMENT)) return new GrWhileStatementImpl(node);\n    if (elem.equals(WITH_STATEMENT)) return new GrWithStatementImpl(node);\n    if (elem.equals(STAR_STATEMENT)) return new GrStarStatementImpl(node);\n    if (elem.equals(VARIABLE_DEFINITION)) return new GrVariableDefinitionsImpl(node);\n\n\n    //type definitions\n    if (elem.equals(CLASS_DEFINITION)) return new GrClassDefinitionImpl(node);\n    if (elem.equals(INTERFACE_DEFINITION)) return new GrInterfaceDefinitionImpl(node);\n    if (elem.equals(ENUM_DEFINITION)) return new GrEnumTypeDefinitionImpl(node);\n    if (elem.equals(ANNOTATION_DEFINITION)) return new GrAnnotationTypeDefinitionImpl(node);\n\n    if (elem.equals(CLASS_INTERFACE_TYPE)) return new GrClassInterfaceTypeImpl(node);\n\n    //clauses\n    if (elem.equals(IMPLEMENTS_CLAUSE)) return new GrImplementsClauseImpl(node);\n    if (elem.equals(EXTENDS_CLAUSE)) return new GrExtendsClauseImpl(node);\n\n    //blocks\n    if (elem.equals(CLASS_BLOCK)) return new GrClassBodyImpl(node);\n    if (elem.equals(INTERFACE_BLOCK)) return new GrInterfaceBodyImplType(node);\n    if (elem.equals(ENUM_BLOCK)) return new GrEnumBodyImplType(node);\n    if (elem.equals(ANNOTATION_BLOCK)) return new GrAnnotationBodyImplType(node);\n    if (elem.equals(CLOSABLE_BLOCK)) return new GrClosableBlockImpl(node);\n    if (elem.equals(OPEN_BLOCK)) return new GrOpenBlockImpl(node);\n    if (elem.equals(CONSTRUCTOR_BODY)) return new GrConstructorBodyImpl(node);\n    if (elem.equals(METHOD_BODY)) return new GrMethodBodyImpl(node);\n\n    //members\n    if (elem.equals(CLASS_FIELD)) return new GrClassMemberImpl(node);\n    if (elem.equals(INTERFACE_FIELD)) return new GrInterfaceMemberImpl(node);\n    if (elem.equals(ENUM_FIELD)) return new GrEnumMemberImpl(node);\n    if (elem.equals(ANNOTATION_FIELD)) return new GrAnnotationMemberImpl(node);\n\n    if (elem.equals(CONSTRUCTOR_DEFINITION)) return new GrConstructorBodyImpl(node);\n    if (elem.equals(METHOD_DEFINITION)) return new GrMethodDefinitionImpl(node);\n\n    //parameters\n    if (elem.equals(PARAMETERS_LIST)) return new GrParameterListImpl(node);\n    if (elem.equals(PARAMETER)) return new GrParameterImpl(node);\n    if (elem.equals(PARAMETER_MODIFIERS)) return new GrParameterModifiersImpl(node);\n\n    //expressions\n    if (elem.equals(EXPRESSION_STATEMENT)) return new GrCallExpressionImpl(node);\n    if (elem.equals(COMMAND_ARGUMENTS)) return new GrCommandArgsImpl(node);\n    if (elem.equals(CONDITIONAL_EXPRESSION)) return new GrConditionalExprImpl(node);\n    if (elem.equals(ASSIGNMENT_EXPRESSION)) return new GrAssignmentExprImpl(node);\n    if (elem.equals(LOGICAL_OR_EXPRESSION)) return new GrLogicalOrExprImpl(node);\n    if (elem.equals(LOGICAL_AND_EXPRESSION)) return new GrLogicalAndExprImpl(node);\n    if (elem.equals(EXCLUSIVE_OR_EXPRESSION)) return new GrExclusiveOrExprImpl(node);\n    if (elem.equals(INCLUSIVE_OR_EXPRESSION)) return new GrInclusiveOrExprImpl(node);\n    if (elem.equals(AND_EXPRESSION)) return new GrAndExprImpl(node);\n    if (elem.equals(REGEX_EXPRESSION)) return new GrRegexExprImpl(node);\n    if (elem.equals(EQUALITY_EXPRESSION)) return new GrEqualityExprImpl(node);\n    if (elem.equals(RELATIONAL_EXPRESSION)) return new GrRelationalExprImpl(node);\n    if (elem.equals(SHIFT_EXPRESSION)) return new GrShiftExprImpl(node);\n    if (elem.equals(ADDITIVE_EXPRESSION)) return new GrAdditiveExprImpl(node);\n    if (elem.equals(MULTIPLICATIVE_EXPRESSION)) return new GrMultiplicativeExprImpl(node);\n    if (elem.equals(POWER_EXPRESSION)) return new GrPowerExprImpl(node);\n    if (elem.equals(POWER_EXPRESSION_SIMPLE)) return new GrPowerExprImpl(node);\n    if (elem.equals(UNARY_EXPRESSION)) return new GrUnaryExprImpl(node);\n    if (elem.equals(POSTFIX_EXPRESSION)) return new GrPostfixExprImpl(node);\n    if (elem.equals(CAST_EXPRESSION)) return new GrTypeCastExprImpl(node);\n    if (elem.equals(TYPE_CAST)) return new GrTypeCastImpl(node);\n    if (elem.equals(ARRAY_TYPE)) return new GrArrayTypeElementImpl(node);\n    if (elem.equals(BUILT_IN_TYPE)) return new GrBuiltInTypeImpl(node);\n    if (elem.equals(GSTRING)) return new GrStringImpl(node);\n    if (elem.equals(REFERENCE_EXPRESSION)) return new GrReferenceExprImpl(node);\n\n    //Paths\n    if (elem.equals(PATH_PROPERTY)) return new GrPropertySelectorImpl(node);\n    if (elem.equals(PATH_PROPERTY_REFERENCE)) return new GrPropertySelectionImpl(node);\n    if (elem.equals(PATH_METHOD_CALL)) return new GrMethodCallImpl(node);\n    if (elem.equals(PATH_INDEX_PROPERTY)) return new GrIndexPropertyImpl(node);\n\n    // Arguments\n    if (elem.equals(ARGUMENTS)) return new GrArgumentsImpl(node);\n\n\n    if (elem.equals(BALANCED_BRACKETS)) return new GrBalancedBracketsImpl(node);\n    if (elem.equals(DECLARATION)) return new GrDeclarationStatementImpl(node);\n\n    return new ASTWrapperPsiElement(node);\n  }","commit_id":"4787e244d80536220c962c69131ce65c1bba9a78","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static IElementType parse(PsiBuilder builder) {\n    //see also InterfaceExtends\n\n    PsiBuilder.Marker isMarker = builder.mark();\n\n    if (!ParserUtils.getToken(builder, kIMPLEMENTS)) {\n      isMarker.rollbackTo();\n      return NONE;\n    }\n\n    ParserUtils.getToken(builder, mNLS);\n\n    if (tWRONG_SET.contains(ClassOrInterfaceType.parse(builder))) {\n      isMarker.rollbackTo();\n      return WRONGWAY;\n    }\n\n    while (ParserUtils.lookAhead(builder, mCOMMA)) {\n      ParserUtils.getToken(builder, mNLS);\n\n      ParserUtils.getToken(builder, mCOMMA);\n\n      if (tWRONG_SET.contains(ClassOrInterfaceType.parse(builder))) {\n        isMarker.rollbackTo();\n        return WRONGWAY;\n      }\n    }\n\n    isMarker.done(IMPLEMENTS_CLAUSE);\n    return IMPLEMENTS_CLAUSE;\n  }","id":61481,"modified_method":"public static IElementType parse(PsiBuilder builder) {\n    //see also InterfaceExtends\n\n    PsiBuilder.Marker isMarker = builder.mark();\n\n    if (!ParserUtils.getToken(builder, kIMPLEMENTS)) {\n      isMarker.rollbackTo();\n      return NONE;\n    }\n\n    ParserUtils.getToken(builder, mNLS);\n\n    if (WRONGWAY.equals(ClassOrInterfaceType.parse(builder))) {\n      isMarker.rollbackTo();\n      return WRONGWAY;\n    }\n\n    while (ParserUtils.lookAhead(builder, mCOMMA)) {\n      ParserUtils.getToken(builder, mNLS);\n\n      ParserUtils.getToken(builder, mCOMMA);\n\n      if (WRONGWAY.equals(ClassOrInterfaceType.parse(builder))) {\n        isMarker.rollbackTo();\n        return WRONGWAY;\n      }\n    }\n\n    isMarker.done(IMPLEMENTS_CLAUSE);\n    return IMPLEMENTS_CLAUSE;\n  }","commit_id":"4787e244d80536220c962c69131ce65c1bba9a78","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static IElementType parse(PsiBuilder builder) {\n    //see also InterfaceBlock, EnumBlock, AnnotationBlock\n   PsiBuilder.Marker ibMarker = builder.mark();\n\n    if (!ParserUtils.getToken(builder, mLCURLY)){\n      ibMarker.rollbackTo();\n      return WRONGWAY;\n    }\n\n    InterfaceMember.parse(builder);\n\n    IElementType sep = Separators.parse(builder);\n\n    while(!tWRONG_SET.contains(sep)){\n      InterfaceMember.parse(builder);\n\n      sep = Separators.parse(builder);\n    }\n\n    if (!ParserUtils.getToken(builder, mRCURLY)){\n      ibMarker.rollbackTo();\n      return WRONGWAY;\n    }\n\n    ibMarker.done(INTERFACE_BLOCK);\n    return INTERFACE_BLOCK;\n  }","id":61482,"modified_method":"public static IElementType parse(PsiBuilder builder) {\n    //see also InterfaceBlock, EnumBlock, AnnotationBlock\n   PsiBuilder.Marker ibMarker = builder.mark();\n\n    if (!ParserUtils.getToken(builder, mLCURLY)){\n      ibMarker.rollbackTo();\n      return WRONGWAY;\n    }\n\n    InterfaceMember.parse(builder);\n\n    IElementType sep = Separators.parse(builder);\n\n    while(!WRONGWAY.equals(sep)){\n      InterfaceMember.parse(builder);\n\n      sep = Separators.parse(builder);\n    }\n\n    if (!ParserUtils.getToken(builder, mRCURLY)){\n      ibMarker.rollbackTo();\n      return WRONGWAY;\n    }\n\n    ibMarker.done(INTERFACE_BLOCK);\n    return INTERFACE_BLOCK;\n  }","commit_id":"4787e244d80536220c962c69131ce65c1bba9a78","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static IElementType parse(PsiBuilder builder) {\n    if (!ParserUtils.getToken(builder, kINTERFACE)) {\n      return WRONGWAY;\n    }\n\n    if (!ParserUtils.getToken(builder, mIDENT)) {\n      return WRONGWAY;\n    }\n\n    ParserUtils.getToken(builder, mNLS);\n\n    TypeParameters.parse(builder);\n\n    if (tWRONG_SET.contains(InterfaceExtends.parse(builder))) {\n      return WRONGWAY;\n    }\n\n    if (tWRONG_SET.contains(InterfaceBlock.parse(builder))) {\n      return WRONGWAY;\n    }\n\n    return INTERFACE_DEFINITION;\n  }","id":61483,"modified_method":"public static IElementType parse(PsiBuilder builder) {\n    if (!ParserUtils.getToken(builder, kINTERFACE)) {\n      return WRONGWAY;\n    }\n\n    if (!ParserUtils.getToken(builder, mIDENT)) {\n      return WRONGWAY;\n    }\n\n    ParserUtils.getToken(builder, mNLS);\n\n    TypeParameters.parse(builder);\n\n    if (WRONGWAY.equals(InterfaceExtends.parse(builder))) {\n      return WRONGWAY;\n    }\n\n    if (WRONGWAY.equals(InterfaceBlock.parse(builder))) {\n      return WRONGWAY;\n    }\n\n    return INTERFACE_DEFINITION;\n  }","commit_id":"4787e244d80536220c962c69131ce65c1bba9a78","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static IElementType parse(PsiBuilder builder) {\n\n    //type definition field\n    PsiBuilder.Marker ifMarker = builder.mark();\n\n    PsiBuilder.Marker typeDeclStartMarker = builder.mark();\n    if (TypeDeclarationStart.parse(builder)) {\n      typeDeclStartMarker.rollbackTo();\n\n      if (tWRONG_SET.contains(ModifiersOptional.parse(builder))) {\n        ifMarker.rollbackTo();\n        return WRONGWAY;\n      }\n\n      IElementType typeDef = TypeDefinitionInternal.parse(builder);\n      if (tWRONG_SET.contains(typeDef)) {\n        ifMarker.rollbackTo();\n        return WRONGWAY;\n      }\n\n      ifMarker.done(typeDef);\n      return typeDef;\n    }\n    typeDeclStartMarker.rollbackTo();\n    ifMarker.rollbackTo();\n\n    //declaration\n    PsiBuilder.Marker declStartMarker = builder.mark();\n    if (DeclarationStart.parse(builder)) {\n      declStartMarker.rollbackTo();\n      return Declaration.parse(builder);\n    }\n    declStartMarker.rollbackTo();\n\n    return WRONGWAY;\n  }","id":61484,"modified_method":"public static IElementType parse(PsiBuilder builder) {\n\n    //type definition field\n    PsiBuilder.Marker ifMarker = builder.mark();\n\n    PsiBuilder.Marker typeDeclStartMarker = builder.mark();\n    if (TypeDeclarationStart.parse(builder)) {\n      typeDeclStartMarker.rollbackTo();\n\n      if (WRONGWAY.equals(ModifiersOptional.parse(builder))) {\n        ifMarker.rollbackTo();\n        return WRONGWAY;\n      }\n\n      IElementType typeDef = TypeDefinitionInternal.parse(builder);\n      if (WRONGWAY.equals(typeDef)) {\n        ifMarker.rollbackTo();\n        return WRONGWAY;\n      }\n\n      ifMarker.done(typeDef);\n      return typeDef;\n    }\n    typeDeclStartMarker.rollbackTo();\n    ifMarker.rollbackTo();\n\n    //declaration\n    PsiBuilder.Marker declStartMarker = builder.mark();\n    if (DeclarationStart.parse(builder)) {\n      declStartMarker.rollbackTo();\n      return Declaration.parse(builder);\n    }\n    declStartMarker.rollbackTo();\n\n    return WRONGWAY;\n  }","commit_id":"4787e244d80536220c962c69131ce65c1bba9a78","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static IElementType parse(PsiBuilder builder) {\n    PsiBuilder.Marker cbMarker = builder.mark();\n\n    if (!ParserUtils.getToken(builder, mLCURLY)) {\n      builder.error(GroovyBundle.message(\"lcurly.expected\"));\n      cbMarker.rollbackTo();\n      return WRONGWAY;\n    }\n\n    ParserUtils.getToken(builder, mNLS);\n\n    if (!tWRONG_SET.contains(ExplicitConstructorStatement.parse(builder))) {\n\n      builder.error(GroovyBundle.message(\"constructor.expected\"));\n      //explicit constructor invocation\n      if (!tWRONG_SET.contains(Separators.parse(builder))) {\n        if (tWRONG_SET.contains(OpenOrClosableBlock.parseBlockBody(builder))) {\n          cbMarker.rollbackTo();\n          return WRONGWAY;\n        }\n      }\n\n      cbMarker.done(CONSTRUCTOR_BODY);\n      return CONSTRUCTOR_BODY;\n\n    } else {\n      //just list block statements\n      if (tWRONG_SET.contains(OpenOrClosableBlock.parseBlockBody(builder))) {\n        cbMarker.rollbackTo();\n        return WRONGWAY;\n      }\n    }\n\n    ParserUtils.waitNextRCurly(builder);\n\n    if (!ParserUtils.getToken(builder, mRCURLY)) {\n      builder.error(GroovyBundle.message(\"rcurly.expected\"));\n    }\n\n    cbMarker.done(METHOD_BODY);\n    return METHOD_BODY;\n  }","id":61485,"modified_method":"public static IElementType parse(PsiBuilder builder) {\n    PsiBuilder.Marker cbMarker = builder.mark();\n\n    if (!ParserUtils.getToken(builder, mLCURLY)) {\n      builder.error(GroovyBundle.message(\"lcurly.expected\"));\n      cbMarker.rollbackTo();\n      return WRONGWAY;\n    }\n\n    ParserUtils.getToken(builder, mNLS);\n\n    if (!WRONGWAY.equals(ExplicitConstructorStatement.parse(builder))) {\n\n      builder.error(GroovyBundle.message(\"constructor.expected\"));\n      //explicit constructor invocation\n      if (!WRONGWAY.equals(Separators.parse(builder))) {\n        if (WRONGWAY.equals(OpenOrClosableBlock.parseBlockBody(builder))) {\n          cbMarker.rollbackTo();\n          return WRONGWAY;\n        }\n      }\n\n      cbMarker.done(CONSTRUCTOR_BODY);\n      return CONSTRUCTOR_BODY;\n\n    } else {\n      //just list block statements\n      if (WRONGWAY.equals(OpenOrClosableBlock.parseBlockBody(builder))) {\n        cbMarker.rollbackTo();\n        return WRONGWAY;\n      }\n    }\n\n    ParserUtils.waitNextRCurly(builder);\n\n    if (!ParserUtils.getToken(builder, mRCURLY)) {\n      builder.error(GroovyBundle.message(\"rcurly.expected\"));\n    }\n\n    cbMarker.done(METHOD_BODY);\n    return METHOD_BODY;\n  }","commit_id":"4787e244d80536220c962c69131ce65c1bba9a78","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static IElementType parse(PsiBuilder builder) {\n    PsiBuilder.Marker constrMarker = builder.mark();\n\n    if (!ParserUtils.getToken(builder, mIDENT)) {\n      constrMarker.rollbackTo();\n      builder.error(GroovyBundle.message(\"identifier.expected\"));\n      return WRONGWAY;\n    }\n\n    if (!ParserUtils.getToken(builder, mLPAREN)) {\n      constrMarker.rollbackTo();\n      builder.error(GroovyBundle.message(\"lparen.expected\"));\n    }\n\n    if (ParserUtils.lookAhead(builder, kFINAL) || ParserUtils.lookAhead(builder, kDEF) || ParserUtils.lookAhead(builder, mAT)) {\n      ParameterDeclarationList.parse(builder);\n    }\n\n    if (!ParserUtils.getToken(builder, mRPAREN)) {\n      ParserUtils.waitNextRCurly(builder);\n\n      builder.error(GroovyBundle.message(\"rparen.expected\"));\n    }\n\n    ThrowClause.parse(builder);\n\n    NlsWarn.parse(builder);\n\n    IElementType methodBody = MethodBody.parse(builder);\n\n    if (METHOD_BODY.equals(methodBody)) {\n      constrMarker.done(METHOD_DEFINITION);\n      return METHOD_DEFINITION;\n    } else if (CONSTRUCTOR_BODY.equals(methodBody)) {\n      constrMarker.done(CONSTRUCTOR_DEFINITION);\n      return CONSTRUCTOR_DEFINITION;\n    } else {\n      constrMarker.rollbackTo();\n      return WRONGWAY;\n    }\n  }","id":61486,"modified_method":"public static IElementType parse(PsiBuilder builder) {\n    if (!ParserUtils.getToken(builder, mIDENT)) {\n      builder.error(GroovyBundle.message(\"identifier.expected\"));\n      return WRONGWAY;\n    }\n\n    if (!ParserUtils.getToken(builder, mLPAREN)) {\n      builder.error(GroovyBundle.message(\"lparen.expected\"));\n    }\n\n    ParameterDeclarationList.parse(builder);\n\n    if (!ParserUtils.getToken(builder, mRPAREN)) {\n      ParserUtils.waitNextRCurly(builder);\n\n      builder.error(GroovyBundle.message(\"rparen.expected\"));\n    }\n\n    ThrowClause.parse(builder);\n\n    NlsWarn.parse(builder);\n\n    IElementType methodBody = MethodBody.parse(builder);\n\n    if (METHOD_BODY.equals(methodBody)) {\n      return METHOD_DEFINITION;\n    } else if (CONSTRUCTOR_BODY.equals(methodBody)) {\n      return CONSTRUCTOR_DEFINITION;\n    } else {\n      return WRONGWAY;\n    }\n  }","commit_id":"4787e244d80536220c962c69131ce65c1bba9a78","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static IElementType parse(PsiBuilder builder) {\n    if (ParserUtils.validateToken(builder, TokenSets.MODIFIERS)) {\n      builder.advanceLexer();\n      return MODIFIER;\n    } else {\n//      builder.error(GroovyBundle.message(\"modifier.expected\"));\n      return WRONGWAY;\n    }\n  }","id":61487,"modified_method":"public static IElementType parse(PsiBuilder builder) {\n    if (TokenSets.MODIFIERS.contains(builder.getTokenType())) {\n      builder.advanceLexer();\n      return MODIFIERS;\n    }\n    return WRONGWAY;\n  }","commit_id":"4787e244d80536220c962c69131ce65c1bba9a78","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static IElementType parse(PsiBuilder builder) {\n    PsiBuilder.Marker modifiersMarker = builder.mark();\n\n    if (ParserUtils.lookAhead(builder, kDEF)) {\n      ParserUtils.eatElement(builder, MODIFIER);\n\n      ParserUtils.getToken(builder, mNLS);\n      modifiersMarker.drop();\n      return MODIFIER;\n    }\n\n    IElementType annotation = Annotation.parse(builder);\n    IElementType modifier = Modifier.parse(builder);\n\n    ParserUtils.getToken(builder, mNLS);\n\n    if (!(ANNOTATION.equals(annotation) || MODIFIER.equals(modifier))) {\n      modifiersMarker.rollbackTo();\n      return WRONGWAY;\n    }\n\n    annotation = Annotation.parse(builder);\n    modifier = Modifier.parse(builder);\n\n    boolean moreThanOneModifier = false;\n    while(ANNOTATION.equals(annotation) || MODIFIER.equals(modifier)) {\n      annotation = Annotation.parse(builder);\n      modifier = Modifier.parse(builder);\n\n      ParserUtils.getToken(builder, mNLS);\n\n      moreThanOneModifier = true;\n    }\n\n    if (moreThanOneModifier) {\n      modifiersMarker.done(MODIFIERS);\n      return MODIFIERS;\n    } else {\n      modifiersMarker.done(MODIFIER);\n      return MODIFIER;\n    }\n  }","id":61488,"modified_method":"public static IElementType parse(PsiBuilder builder) {\n    PsiBuilder.Marker modifiersMarker = builder.mark();\n\n//    if (ParserUtils.lookAhead(builder, kDEF)) {\n//      ParserUtils.eatElement(builder, MODIFIER);\n//\n//      ParserUtils.getToken(builder, mNLS);\n//      modifiersMarker.drop();\n//      return MODIFIER;\n//    }\n\n    IElementType annotation = Annotation.parse(builder);\n    IElementType modifier = Modifier.parse(builder);\n    IElementType def = ParserUtils.lookAhead(builder, kDEF) ? kDEF : NONE;\n\n    ParserUtils.getToken(builder, mNLS);\n\n    if (!(ANNOTATION.equals(annotation) || MODIFIERS.equals(modifier) || kDEF.equals(def))) {\n      modifiersMarker.rollbackTo();\n      return WRONGWAY;\n    }\n\n    annotation = Annotation.parse(builder);\n    modifier = Modifier.parse(builder);\n    def = ParserUtils.lookAhead(builder, kDEF) ? kDEF : NONE;\n\n    boolean moreThanOneModifier = false;\n    while(ANNOTATION.equals(annotation) || MODIFIERS.equals(modifier) || kDEF.equals(def)) {\n      annotation = Annotation.parse(builder);\n      modifier = Modifier.parse(builder);\n      def = ParserUtils.getToken(builder, kDEF) ? kDEF : NONE;\n\n      ParserUtils.getToken(builder, mNLS);\n\n      moreThanOneModifier = true;\n    }\n\n//    if (moreThanOneModifier) {\n      modifiersMarker.done(MODIFIERS);\n      return MODIFIERS;\n//    } else {\n//      modifiersMarker.done(MODIFIER);\n//      return MODIFIER;\n//    }\n\n  }","commit_id":"4787e244d80536220c962c69131ce65c1bba9a78","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static IElementType parse(PsiBuilder builder) {\n    if (!ParserUtils.lookAhead(builder, kFINAL) && !ParserUtils.lookAhead(builder, kDEF) && !ParserUtils.lookAhead(builder, mAT)) {\n      return WRONGWAY;\n    }\n\n    PsiBuilder.Marker pdMarker = builder.mark();\n\n    if (tWRONG_SET.contains(ParameterModifierOptional.parse(builder))){\n      pdMarker.rollbackTo();\n      return WRONGWAY;\n    }\n\n    TypeSpec.parse(builder);\n\n    ParserUtils.getToken(builder, mTRIPLE_DOT);\n\n    if (!ParserUtils.getToken(builder, mIDENT)){\n      pdMarker.rollbackTo();\n      return WRONGWAY;\n    }\n\n    VariableInitializer.parse(builder);\n\n    pdMarker.done(PARAMETER);\n    return PARAMETER;\n  }","id":61489,"modified_method":"public static IElementType parse(PsiBuilder builder) {\n    PsiBuilder.Marker pdMarker = builder.mark();\n\n    if (WRONGWAY.equals(ParameterModifierOptional.parse(builder))) {\n      pdMarker.rollbackTo();\n      return WRONGWAY;\n    }\n\n    PsiBuilder.Marker checkMarker = builder.mark();\n\n    GroovyElementType type = TypeSpec.parse(builder);\n    if (!WRONGWAY.equals(type)) { //type was recognized\n      ParserUtils.getToken(builder, mTRIPLE_DOT);\n\n      if (!ParserUtils.getToken(builder, mIDENT)) { //if there is no identifier rollback to begin\n        checkMarker.rollbackTo();\n\n        if (!ParserUtils.getToken(builder, mIDENT)) { //parse identifier because suggestion about type was wrong\n          pdMarker.rollbackTo();\n          return WRONGWAY;\n        }\n\n        VariableInitializer.parse(builder);\n\n        pdMarker.done(PARAMETER);\n        return PARAMETER;\n      } else { //parse typized identifier\n        checkMarker.drop();\n        VariableInitializer.parse(builder);\n\n        pdMarker.done(PARAMETER);\n        return PARAMETER;\n      }\n    } else {\n      //TODO:\n      return WRONGWAY;\n    }\n  }","commit_id":"4787e244d80536220c962c69131ce65c1bba9a78","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static IElementType parse(PsiBuilder builder) {\n    if (!ParserUtils.lookAhead(builder, kFINAL) && !ParserUtils.lookAhead(builder, kDEF) && !ParserUtils.lookAhead(builder, mAT)) {\n      builder.error(GroovyBundle.message(\"final.def.or.annotation.definition.expected\"));\n      return WRONGWAY;\n    }\n\n    PsiBuilder.Marker pdlMarker = builder.mark();\n\n    if (tWRONG_SET.contains(ParameterDeclaration.parse(builder))) {\n      pdlMarker.rollbackTo();\n      return WRONGWAY;\n    }\n\n    while (ParserUtils.getToken(builder, mCOMMA)) {\n      ParserUtils.getToken(builder, mNLS);\n\n      if (tWRONG_SET.contains(ParameterDeclaration.parse(builder))) {\n        pdlMarker.rollbackTo();\n        return WRONGWAY;\n      }\n    }\n\n    pdlMarker.done(PARAMETERS_LIST);\n    return PARAMETERS_LIST;\n  }","id":61490,"modified_method":"public static IElementType parse(PsiBuilder builder) {\n//    if (!ParserUtils.lookAhead(builder, kFINAL) && !ParserUtils.lookAhead(builder, kDEF) && !ParserUtils.lookAhead(builder, mAT)) {\n//      builder.error(GroovyBundle.message(\"final.def.or.annotation.definition.expected\"));\n//      return WRONGWAY;\n//    }\n\n    PsiBuilder.Marker pdlMarker = builder.mark();\n\n    if (WRONGWAY.equals(ParameterDeclaration.parse(builder))) {\n      pdlMarker.rollbackTo();\n      return WRONGWAY;\n    }\n\n    while (ParserUtils.getToken(builder, mCOMMA)) {\n      ParserUtils.getToken(builder, mNLS);\n\n      if (WRONGWAY.equals(ParameterDeclaration.parse(builder))) {\n        pdlMarker.rollbackTo();\n        return WRONGWAY;\n      }\n    }\n\n    pdlMarker.done(PARAMETERS_LIST);\n    return PARAMETERS_LIST;\n  }","commit_id":"4787e244d80536220c962c69131ce65c1bba9a78","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static IElementType parse(PsiBuilder builder) {\n    PsiBuilder.Marker sccMarker = builder.mark();\n\n    if (!ParserUtils.getToken(builder, kEXTENDS)){\n      sccMarker.rollbackTo();\n      return NONE;\n    }\n\n    ParserUtils.getToken(builder, mNLS);\n\n    if (tWRONG_SET.contains(ClassOrInterfaceType.parse(builder))){\n      sccMarker.rollbackTo();\n      builder.error(GroovyBundle.message(\"class.or.interface.type.expected\"));\n      return WRONGWAY;\n    }\n\n    ParserUtils.getToken(builder, mNLS);\n\n    sccMarker.done(EXTENDS_CLAUSE);\n    return EXTENDS_CLAUSE;\n  }","id":61491,"modified_method":"public static IElementType parse(PsiBuilder builder) {\n    PsiBuilder.Marker sccMarker = builder.mark();\n\n    if (!ParserUtils.getToken(builder, kEXTENDS)){\n      sccMarker.rollbackTo();\n      return NONE;\n    }\n\n    ParserUtils.getToken(builder, mNLS);\n\n    if (WRONGWAY.equals(ClassOrInterfaceType.parse(builder))){\n      sccMarker.rollbackTo();\n      builder.error(GroovyBundle.message(\"class.or.interface.type.expected\"));\n      return WRONGWAY;\n    }\n\n    ParserUtils.getToken(builder, mNLS);\n\n    sccMarker.done(EXTENDS_CLAUSE);\n    return EXTENDS_CLAUSE;\n  }","commit_id":"4787e244d80536220c962c69131ce65c1bba9a78","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static boolean  parse(PsiBuilder builder) {\n    if (tWRONG_SET.contains(ModifiersOptional.parse(builder))) {\n      return false;\n    }\n\n    if (!ParserUtils.getToken(builder, kCLASS))\n      if (!ParserUtils.getToken(builder, kINTERFACE))\n        if (!ParserUtils.getToken(builder, kENUM))\n          if (!(ParserUtils.getToken(builder, mAT) && ParserUtils.getToken(builder, kINTERFACE))) {\n//            builder.error(GroovyBundle.message(\"class.interface.enum.or.at.interface.expected\"));\n            return false;\n          }\n\n    return true;\n  }","id":61492,"modified_method":"public static boolean  parse(PsiBuilder builder) {\n    if (WRONGWAY.equals(ModifiersOptional.parse(builder))) {\n      return false;\n    }\n\n    if (!ParserUtils.getToken(builder, kCLASS))\n      if (!ParserUtils.getToken(builder, kINTERFACE))\n        if (!ParserUtils.getToken(builder, kENUM))\n          if (!(ParserUtils.getToken(builder, mAT) && ParserUtils.getToken(builder, kINTERFACE))) {\n//            builder.error(GroovyBundle.message(\"class.interface.enum.or.at.interface.expected\"));\n            return false;\n          }\n\n    return true;\n  }","commit_id":"4787e244d80536220c962c69131ce65c1bba9a78","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static IElementType parse(PsiBuilder builder) {\n\n    if (!tWRONG_SET.contains(ClassDefinition.parse(builder))) return CLASS_DEFINITION;\n\n    if (!tWRONG_SET.contains(InterfaceDefinition.parse(builder))) return INTERFACE_DEFINITION;\n\n    if (!tWRONG_SET.contains(EnumDefinition.parse(builder))) return ENUM_DEFINITION;\n\n    if (!tWRONG_SET.contains(AnnotationDefinition.parse(builder))) return ANNOTATION_DEFINITION;\n\n    builder.error(GroovyBundle.message(\"class.or.interface.or.enum.or.annotation.expected\"));\n\n    return WRONGWAY;\n  }","id":61493,"modified_method":"public static IElementType parse(PsiBuilder builder) {\n\n    if (!WRONGWAY.equals(ClassDefinition.parse(builder))) return CLASS_DEFINITION;\n\n    if (!WRONGWAY.equals(InterfaceDefinition.parse(builder))) return INTERFACE_DEFINITION;\n\n    if (!WRONGWAY.equals(EnumDefinition.parse(builder))) return ENUM_DEFINITION;\n\n    if (!WRONGWAY.equals(AnnotationDefinition.parse(builder))) return ANNOTATION_DEFINITION;\n\n    builder.error(GroovyBundle.message(\"class.or.interface.or.enum.or.annotation.expected\"));\n\n    return WRONGWAY;\n  }","commit_id":"4787e244d80536220c962c69131ce65c1bba9a78","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static GroovyElementType parse(PsiBuilder builder) {\n    if (TokenSets.BUILT_IN_TYPE.contains(builder.getTokenType())) {\n      return parseBuiltInType(builder);\n    }\n    return WRONGWAY;\n  }","id":61494,"modified_method":"public static GroovyElementType parse(PsiBuilder builder) {\n    if (TokenSets.BUILT_IN_TYPE.contains(builder.getTokenType())) {\n      return parseBuiltInType(builder);\n    }\n\n    if (ParserUtils.lookAhead(builder, mIDENT)){\n      return parseClassOrInterfaceType(builder);\n    }\n\n    return WRONGWAY;\n  }","commit_id":"4787e244d80536220c962c69131ce65c1bba9a78","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static IElementType parse(PsiBuilder builder) {\n    return WRONGWAY;\n  }","id":61495,"modified_method":"public static GroovyElementType parse(PsiBuilder builder) {\n//    PsiBuilder.Marker vdMarker = builder.mark();\n\n    if (!(ParserUtils.lookAhead(builder, mIDENT) || ParserUtils.lookAhead(builder, mSTRING_LITERAL))) {\n      builder.error(GroovyBundle.message(\"indentifier.or.string.literal.expected\"));\n//      vdMarker.rollbackTo();\n      return WRONGWAY;\n    }\n\n    PsiBuilder.Marker varMarker = builder.mark();\n    if ((ParserUtils.getToken(builder, mIDENT) || ParserUtils.getToken(builder, mSTRING_LITERAL)) && ParserUtils.getToken(builder, mLPAREN)) {\n\n      ParameterDeclarationList.parse(builder);\n      if (!ParserUtils.getToken(builder, mRPAREN)) {\n        ParserUtils.waitNextRCurly(builder);\n\n        builder.error(GroovyBundle.message(\"rparen.expected\"));\n      }\n\n      ThrowClause.parse(builder);\n\n      NlsWarn.parse(builder);\n\n      OpenBlock.parse(builder);\n\n      varMarker.drop();\n//      vdMarker.done(METHOD_DEFINITION);\n      return METHOD_DEFINITION;\n    } else {\n      varMarker.rollbackTo();\n    }\n\n    if (parseVariableDeclarator(builder)) {\n      while (ParserUtils.getToken(builder, mCOMMA)) {\n        ParserUtils.getToken(builder, mNLS);\n\n        parseVariableDeclarator(builder);\n      }\n\n//      vdMarker.done(VARIABLE_DEFINITION);\n      return VARIABLE_DEFINITION;\n    }\n\n\n    builder.error(GroovyBundle.message(\"indentifier.or.string.literal.expected\"));\n//    vdMarker.rollbackTo();\n    return WRONGWAY;\n\n  }","commit_id":"4787e244d80536220c962c69131ce65c1bba9a78","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static boolean forInClauseParse(PsiBuilder builder, GroovyParser parser) {\n\n    PsiBuilder.Marker marker = builder.mark();\n\n    PsiBuilder.Marker declMarker = builder.mark();\n\n    if (ParserUtils.lookAhead(builder, mIDENT, kIN)) {\n      ParserUtils.eatElement(builder, PARAMETER);\n      declMarker.drop();\n      ParserUtils.getToken(builder, kIN);\n      if (!ShiftExpression.parse(builder, parser)) {\n        builder.error(GroovyBundle.message(\"expression.expected\"));\n      }\n      marker.done(FOR_IN_CLAUSE);\n      return true;\n    }\n\n    if (DeclarationStart.parse(builder, parser)) {\n      if (Modifiers.parse(builder, parser)) {\n        TypeSpec.parse(builder);\n        return singleDeclNoInitParse(builder, marker, declMarker, parser);\n      }\n    }\n\n    if (TypeSpec.parse(builder)) {\n      return singleDeclNoInitParse(builder, marker, declMarker, parser);\n    }\n\n    declMarker.drop();\n    marker.drop();\n    return false;\n  }","id":61496,"modified_method":"private static boolean forInClauseParse(PsiBuilder builder, GroovyParser parser) {\n\n    PsiBuilder.Marker marker = builder.mark();\n\n    PsiBuilder.Marker parameterMarker = builder.mark();\n    Modifiers.parse(builder, parser);\n    if (ParserUtils.lookAhead(builder, mIDENT, kIN) || ParserUtils.lookAhead(builder, mIDENT, mCOLON)) {\n      ParserUtils.getToken(builder, mIDENT);\n    }\n    else {\n      TypeSpec.parseStrict(builder);\n      ParserUtils.getToken(builder, mIDENT, GroovyBundle.message(\"identifier.expected\"));\n    }\n    parameterMarker.done(PARAMETER);\n\n    if (!ParserUtils.getToken(builder, kIN) && !ParserUtils.getToken(builder, mCOLON)) {\n      builder.error(GroovyBundle.message(\"in.expected\"));\n      marker.drop();\n      return false;\n    }\n\n    if (!ShiftExpression.parse(builder, parser)) {\n      builder.error(GroovyBundle.message(\"expression.expected\"));\n    }\n    marker.done(FOR_IN_CLAUSE);\n    return true;\n  }","commit_id":"a7df4c1ba332fe03bb3b809c8d5783431ce8b6c2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void annotate(PsiElement element, AnnotationHolder holder) {\n    if (element instanceof GrCodeReferenceElement) {\n      checkReferenceElement(holder, (GrCodeReferenceElement)element);\n    }\n    else if (element instanceof GrReferenceExpression) {\n      checkReferenceExpression(holder, (GrReferenceExpression)element);\n    }\n    else if (element instanceof GrTypeDefinition) {\n      final GrTypeDefinition typeDefinition = (GrTypeDefinition)element;\n      checkTypeDefinition(holder, typeDefinition);\n      checkTypeDefinitionModifiers(holder, typeDefinition);\n      final GrTypeDefinitionBody body = typeDefinition.getBody();\n      if (body != null) checkDuplicateMethod(body.getGroovyMethods(), holder);\n      checkImplementedMethodsOfClass(holder, typeDefinition);\n    }\n    else if (element instanceof GrMethod) {\n      final GrMethod method = (GrMethod)element;\n      checkMethodDefinitionModifiers(holder, method);\n      checkInnerMethod(holder, method);\n    }\n    else if (element instanceof GrVariableDeclaration) {\n      checkVariableDeclaration(holder, (GrVariableDeclaration)element);\n    }\n    else if (element instanceof GrVariable) {\n      if (element instanceof GrMember) {\n        highlightMember(holder, ((GrMember)element));\n        checkStaticDeclarationsInInnerClass((GrMember)element, holder);\n      }\n      checkVariable(holder, (GrVariable)element);\n    }\n    else if (element instanceof GrAssignmentExpression) {\n      checkAssignmentExpression((GrAssignmentExpression)element, holder);\n    }\n    else if (element instanceof GrReturnStatement) {\n      checkReturnStatement((GrReturnStatement)element, holder);\n    }\n    else if (element instanceof GrListOrMap) {\n      checkMap(((GrListOrMap)element).getNamedArguments(), holder);\n    }\n    else if (element instanceof GrNewExpression) {\n      checkNewExpression(holder, (GrNewExpression)element);\n    }\n    else if (element instanceof GrDocMemberReference) {\n      checkGrDocMemberReference((GrDocMemberReference)element, holder);\n    }\n    else if (element instanceof GrConstructorInvocation) {\n      checkConstructorInvocation(holder, (GrConstructorInvocation)element);\n    }\n    else if (element instanceof GrFlowInterruptingStatement) {\n      checkFlowInterruptStatement(((GrFlowInterruptingStatement)element), holder);\n    } else if (element instanceof GrLabeledStatement) {\n      checkLabeledStatement(((GrLabeledStatement) element), holder);\n    }\n    else if (element.getParent() instanceof GrDocReferenceElement) {\n      checkGrDocReferenceElement(holder, element);\n    }\n    else if (element instanceof GrPackageDefinition) {\n      //todo: if reference isn't resolved it construct package definition\n      checkPackageReference(holder, (GrPackageDefinition)element);\n    }\n    else if (element instanceof GrThisReferenceExpression || element instanceof GrSuperReferenceExpression) {\n      checkThisOrSuperReferenceExpression(((GrExpression)element), holder);\n    }\n    else if (element instanceof GrLiteral) {\n      checkLiteral(((GrLiteral)element), holder);\n    }\n    else if (element instanceof GroovyFile) {\n      final GroovyFile file = (GroovyFile)element;\n      if (file.isScript()) {\n        checkScriptDuplicateMethod(file.getTopLevelDefinitions(), holder);\n      }\n    }\n    else if (element instanceof GrImportStatement) {\n      checkAnnotationList(holder, ((GrImportStatement)element).getAnnotationList());\n    }\n    else {\n      final ASTNode node = element.getNode();\n      if (node != null &&\n          !(element instanceof PsiWhiteSpace) &&\n          !GroovyTokenTypes.COMMENT_SET.contains(node.getElementType()) &&\n          element.getContainingFile() instanceof GroovyFile &&\n          !isDocCommentElement(element)) {\n        GroovyImportsTracker.getInstance(element.getProject()).markFileAnnotated((GroovyFile)element.getContainingFile());\n      }\n    }\n  }","id":61497,"modified_method":"public void annotate(PsiElement element, AnnotationHolder holder) {\n    if (element instanceof GrCodeReferenceElement) {\n      checkReferenceElement(holder, (GrCodeReferenceElement)element);\n    }\n    else if (element instanceof GrReferenceExpression) {\n      checkReferenceExpression(holder, (GrReferenceExpression)element);\n    }\n    else if (element instanceof GrTypeDefinition) {\n      final GrTypeDefinition typeDefinition = (GrTypeDefinition)element;\n      checkTypeDefinition(holder, typeDefinition);\n      checkTypeDefinitionModifiers(holder, typeDefinition);\n      final GrTypeDefinitionBody body = typeDefinition.getBody();\n      if (body != null) checkDuplicateMethod(body.getGroovyMethods(), holder);\n      checkImplementedMethodsOfClass(holder, typeDefinition);\n    }\n    else if (element instanceof GrMethod) {\n      final GrMethod method = (GrMethod)element;\n      checkMethodDefinitionModifiers(holder, method);\n      checkInnerMethod(holder, method);\n    }\n    else if (element instanceof GrVariableDeclaration) {\n      checkVariableDeclaration(holder, (GrVariableDeclaration)element);\n    }\n    else if (element instanceof GrVariable) {\n      if (element instanceof GrMember) {\n        highlightMember(holder, ((GrMember)element));\n        checkStaticDeclarationsInInnerClass((GrMember)element, holder);\n      }\n      checkVariable(holder, (GrVariable)element);\n    }\n    else if (element instanceof GrAssignmentExpression) {\n      checkAssignmentExpression((GrAssignmentExpression)element, holder);\n    }\n    else if (element instanceof GrReturnStatement) {\n      checkReturnStatement((GrReturnStatement)element, holder);\n    }\n    else if (element instanceof GrListOrMap) {\n      checkMap(((GrListOrMap)element).getNamedArguments(), holder);\n    }\n    else if (element instanceof GrNewExpression) {\n      checkNewExpression(holder, (GrNewExpression)element);\n    }\n    else if (element instanceof GrDocMemberReference) {\n      checkGrDocMemberReference((GrDocMemberReference)element, holder);\n    }\n    else if (element instanceof GrConstructorInvocation) {\n      checkConstructorInvocation(holder, (GrConstructorInvocation)element);\n    }\n    else if (element instanceof GrFlowInterruptingStatement) {\n      checkFlowInterruptStatement(((GrFlowInterruptingStatement)element), holder);\n    } else if (element instanceof GrLabeledStatement) {\n      checkLabeledStatement(((GrLabeledStatement) element), holder);\n    }\n    else if (element.getParent() instanceof GrDocReferenceElement) {\n      checkGrDocReferenceElement(holder, element);\n    }\n    else if (element instanceof GrPackageDefinition) {\n      //todo: if reference isn't resolved it construct package definition\n      checkPackageReference(holder, (GrPackageDefinition)element);\n    }\n    else if (element instanceof GrThisReferenceExpression || element instanceof GrSuperReferenceExpression) {\n      checkThisOrSuperReferenceExpression(((GrExpression)element), holder);\n    }\n    else if (element instanceof GrLiteral) {\n      checkLiteral(((GrLiteral)element), holder);\n    }\n    else if (element instanceof GrForInClause) {\n      checkForInClause(((GrForInClause)element), holder);\n    }\n    else if (element instanceof GroovyFile) {\n      final GroovyFile file = (GroovyFile)element;\n      if (file.isScript()) {\n        checkScriptDuplicateMethod(file.getTopLevelDefinitions(), holder);\n      }\n    }\n    else if (element instanceof GrImportStatement) {\n      checkAnnotationList(holder, ((GrImportStatement)element).getAnnotationList());\n    }\n    else {\n      final ASTNode node = element.getNode();\n      if (node != null &&\n          !(element instanceof PsiWhiteSpace) &&\n          !GroovyTokenTypes.COMMENT_SET.contains(node.getElementType()) &&\n          element.getContainingFile() instanceof GroovyFile &&\n          !isDocCommentElement(element)) {\n        GroovyImportsTracker.getInstance(element.getProject()).markFileAnnotated((GroovyFile)element.getContainingFile());\n      }\n    }\n  }","commit_id":"a7df4c1ba332fe03bb3b809c8d5783431ce8b6c2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static boolean parse(PsiBuilder builder, GroovyParser parser, boolean comExprAllowed) {\n    Marker marker = builder.mark();\n    final boolean isTuple = ParserUtils.lookAhead(builder, mLPAREN, mIDENT, mCOMMA);\n    if (parseSide(builder, parser, isTuple,comExprAllowed)) {\n      if (ParserUtils.getToken(builder, ASSIGNMENTS)) {\n        ParserUtils.getToken(builder, mNLS);\n        if (!parse(builder, parser, comExprAllowed)) {\n          builder.error(GroovyBundle.message(\"expression.expected\"));\n        }\n        marker.done(ASSIGNMENT_EXPRESSION);\n      }\n      else {\n        marker.drop();\n      }\n      return true;\n    }\n    else {\n      marker.drop();\n      return false;\n    }\n  }","id":61498,"modified_method":"public static boolean parse(PsiBuilder builder, GroovyParser parser, boolean comExprAllowed) {\n    Marker marker = builder.mark();\n    final boolean isTuple = ParserUtils.lookAhead(builder, mLPAREN, mIDENT, mCOMMA);\n    if (parseSide(builder, parser, isTuple,comExprAllowed)) {\n      if (ParserUtils.getToken(builder, TokenSets.ASSIGNMENTS)) {\n        ParserUtils.getToken(builder, mNLS);\n        if (!parse(builder, parser, comExprAllowed)) {\n          builder.error(GroovyBundle.message(\"expression.expected\"));\n        }\n        marker.done(ASSIGNMENT_EXPRESSION);\n      }\n      else {\n        marker.drop();\n      }\n      return true;\n    }\n    else {\n      marker.drop();\n      return false;\n    }\n  }","commit_id":"60902439a0792d81c6887a230e2c506bd7ce9fbe","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n   * Creates Groovy PSI element by given AST node\n   *\n   * @param node Given node\n   * @return Respective PSI element\n   */\n  public static PsiElement createElement(ASTNode node) {\n    IElementType elem = node.getElementType();\n\n    if (elem instanceof GroovyElementType.PsiCreator) {\n      return ((GroovyElementType.PsiCreator)elem).createPsi(node);\n    }\n\n    if (elem instanceof IGroovyDocElementType) {\n      return GroovyDocPsiCreator.createElement(node);\n    }\n\n    //Identifiers & literal\n    if (elem.equals(LITERAL)) return new GrLiteralImpl(node);\n    if (elem.equals(LABEL)) return new GrLabelImpl(node);\n//    if (elem.equals(IDENTIFIER)) return new GrIdentifierImpl(node);\n    //Lists, maps etc...\n    if (elem.equals(LIST_OR_MAP)) return new GrListOrMapImpl(node);\n\n    if (elem.equals(MODIFIERS)) return new GrModifierListImpl(node);\n    if (elem.equals(ANNOTATION)) return new GrAnnotationImpl(node);\n    if (elem.equals(ANNOTATION_ARGUMENTS)) return new GrAnnotationArgumentListImpl(node);\n    if (elem.equals(ANNOTATION_ARRAY_INITIALIZER)) return new GrAnnotationArrrayInitializerImpl(node);\n    if (elem.equals(ANNOTATION_MEMBER_VALUE_PAIR)) return new GrAnnotationNameValuePairImpl(node);\n    if (elem.equals(ANNOTATION_MEMBER_VALUE_PAIRS)) return new GrAnnotationNameValuePairsImpl(node);\n\n    if (elem.equals(DEFAULT_ANNOTATION_VALUE)) return new GrDefaultAnnotationValueImpl(node);\n\n    //throws\n    if (elem.equals(THROW_CLAUSE)) return new GrThrowsClauseImpl(node);\n\n    // Imports\n    if (elem.equals(IMPORT_STATEMENT)) return new GrImportStatementImpl(node);\n\n    // Packaging\n    if (elem.equals(PACKAGE_DEFINITION)) return new GrPackageDefinitionImpl(node);\n\n    //statements\n    if (elem.equals(LABELED_STATEMENT)) return new GrLabeledStatementImpl(node);\n    if (elem.equals(IF_STATEMENT)) return new GrIfStatementImpl(node);\n    if (elem.equals(FOR_STATEMENT)) return new GrForStatementImpl(node);\n    if (elem.equals(FOR_IN_CLAUSE)) return new GrForInClauseImpl(node);\n    if (elem.equals(FOR_TRADITIONAL_CLAUSE)) return new GrTraditionalForClauseImpl(node);\n    if (elem.equals(WHILE_STATEMENT)) return new GrWhileStatementImpl(node);\n    if (elem.equals(TRY_BLOCK_STATEMENT)) return new GrTryCatchStatementImpl(node);\n    if (elem.equals(CATCH_CLAUSE)) return new GrCatchClauseImpl(node);\n    if (elem.equals(FINALLY_CLAUSE)) return new GrFinallyClauseImpl(node);\n    if (elem.equals(SYNCHRONIZED_STATEMENT)) return new GrSynchronizedStatementImpl(node);\n    if (elem.equals(SWITCH_STATEMENT)) return new GrSwitchStatementImpl(node);\n    if (elem.equals(CASE_LABEL)) return new GrCaseLabelImpl(node);\n    if (elem.equals(CASE_SECTION)) return new GrCaseSectionImpl(node);\n    if (elem.equals(VARIABLE_DEFINITION) || elem.equals(VARIABLE_DEFINITION_ERROR))\n      return new GrVariableDeclarationBase.GrVariables(node);\n    if (elem.equals(MULTIPLE_VARIABLE_DEFINITION))\n      return new GrVariableDeclarationBase.GrMultipleVariables(node);\n    if (elem.equals(TUPLE_DECLARATION) || elem.equals(TUPLE_ERROR)) return new GrTupleDeclarationImpl(node);\n    if (elem.equals(TUPLE_EXPRESSION)) return new GrTupleExpressionImpl(node);\n    if (elem.equals(VARIABLE)) return new GrVariableImpl(node);\n\n    if (elem.equals(FIELD)) return new GrFieldImpl(node);\n    if (elem.equals(CLASS_INITIALIZER)) return new GrClassInitializerImpl(node);\n\n    //type definitions\n    if (elem.equals(CLASS_DEFINITION)) return new GrClassDefinitionImpl(node);\n    if (elem.equals(INTERFACE_DEFINITION))\n      return new GrInterfaceDefinitionImpl(node);\n    if (elem.equals(ENUM_DEFINITION)) return new GrEnumTypeDefinitionImpl(node);\n    if (elem.equals(ANNOTATION_DEFINITION))\n      return new GrAnnotationTypeDefinitionImpl(node);\n    if (elem.equals(ANNOTATION_METHOD)) return new GrAnnotationMethodImpl(node);\n\n    if (elem.equals(REFERENCE_ELEMENT)) return new GrCodeReferenceElementImpl(node);\n    if (elem.equals(CLASS_TYPE_ELEMENT)) return new GrClassTypeElementImpl(node);\n\n    //clauses\n    if (elem.equals(IMPLEMENTS_CLAUSE)) return new GrImplementsClauseImpl(node);\n    if (elem.equals(EXTENDS_CLAUSE)) return new GrExtendsClauseImpl(node);\n\n    //bodies\n    if (elem.equals(CLASS_BODY)) return new GrTypeDefinitionBodyBase.GrClassBody(node);\n    if (elem.equals(ENUM_BODY)) return new GrTypeDefinitionBodyBase.GrEnumBody(node);\n    if (elem.equals(BLOCK_STATEMENT)) return new GrBlockStatementImpl(node);\n    if (elem.equals(EXPLICIT_CONSTRUCTOR)) return new GrConstructorInvocationImpl(node);\n\n    //enum\n    if (elem.equals(ENUM_CONSTANTS)) return new GrEnumConstantListImpl(node);\n    if (elem.equals(ENUM_CONSTANT)) return new GrEnumConstantImpl(node);\n\n    //members\n    if (elem.equals(CONSTRUCTOR_DEFINITION)) return new GrConstructorImpl(node);\n    if (elem.equals(METHOD_DEFINITION)) return new GrMethodImpl(node);\n\n    //parameters\n    if (elem.equals(PARAMETERS_LIST)) return new GrParameterListImpl(node);\n    if (elem.equals(PARAMETER)) return new GrParameterImpl(node);\n\n    //type parameters\n    if (elem.equals(TYPE_ARGUMENT)) return new GrWildcardTypeArgumentImpl(node);\n    if (elem.equals(TYPE_ARGUMENTS)) return new GrTypeArgumentListImpl(node);\n\n\n    if (elem.equals(TYPE_PARAMETER_LIST)) return new GrTypeParameterListImpl(node);\n    if (elem.equals(TYPE_PARAMETER)) return new GrTypeParameterImpl(node);\n    if (elem.equals(TYPE_PARAMETER_EXTENDS_BOUND_LIST)) return new GrTypeParameterParameterExtendsListImpl(node);\n\n    //Branch statements\n    if (elem.equals(RETURN_STATEMENT)) return new GrReturnStatementImpl(node);\n    if (elem.equals(THROW_STATEMENT)) return new GrThrowStatementImpl(node);\n    if (elem.equals(ASSERT_STATEMENT)) return new GrAssertStatementImpl(node);\n    if (elem.equals(BREAK_STATEMENT)) return new GrBreakStatementImpl(node);\n    if (elem.equals(CONTINUE_STATEMENT)) return new GrContinueStatementImpl(node);\n\n    //expressions\n    if (elem.equals(CALL_EXPRESSION)) return new GrApplicationStatementImpl(node);\n    if (elem.equals(COMMAND_ARGUMENTS)) return new GrCommandArgumentListImpl(node);\n    if (elem.equals(CONDITIONAL_EXPRESSION)) return new GrConditionalExprImpl(node);\n    if (elem.equals(ELVIS_EXPRESSION)) return new GrElvisExprImpl(node);\n    if (elem.equals(ASSIGNMENT_EXPRESSION)) return new GrAssignmentExpressionImpl(node);\n\n    if (elem.equals(LOGICAL_OR_EXPRESSION)) return new GrLogicalExpressionImpl(node);\n    if (elem.equals(LOGICAL_AND_EXPRESSION)) return new GrLogicalExpressionImpl(node);\n\n    if (elem.equals(EXCLUSIVE_OR_EXPRESSION)) return new GrBitwiseExpressionImpl(node);\n    if (elem.equals(INCLUSIVE_OR_EXPRESSION)) return new GrBitwiseExpressionImpl(node);\n    if (elem.equals(AND_EXPRESSION)) return new GrBitwiseExpressionImpl(node);\n\n    if (elem.equals(REGEX_MATCH_EXPRESSION)) return new GrLogicalExpressionImpl(node);\n    if (elem.equals(REGEX_FIND_EXPRESSION)) return new GrRegexFindExpressionImpl(node);\n    if (elem.equals(EQUALITY_EXPRESSION)) return new GrRelationalExpressionImpl(node);\n    if (elem.equals(RELATIONAL_EXPRESSION)) return new GrRelationalExpressionImpl(node);\n    if (elem.equals(SHIFT_EXPRESSION)) return new GrShiftExpressionImpl(node);\n    if (elem.equals(RANGE_EXPRESSION)) return new GrRangeExpressionImpl(node);\n    if (elem.equals(COMPOSITE_SHIFT_SIGN)) return new GrOperationSignImpl(node);\n    if (elem.equals(ADDITIVE_EXPRESSION)) return new GrAdditiveExpressionImpl(node);\n    if (elem.equals(MULTIPLICATIVE_EXPRESSION)) return new GrMultiplicativeExpressionImpl(node);\n    if (elem.equals(POWER_EXPRESSION)) return new GrPowerExpressionImpl(node);\n    if (elem.equals(POWER_EXPRESSION_SIMPLE)) return new GrPowerExpressionImpl(node);\n    if (elem.equals(UNARY_EXPRESSION)) return new GrUnaryExpressionImpl(node);\n    if (elem.equals(POSTFIX_EXPRESSION)) return new GrPostfixExprImpl(node);\n    if (elem.equals(CAST_EXPRESSION)) return new GrTypeCastExpressionImpl(node);\n    if (elem.equals(SAFE_CAST_EXPRESSION)) return new GrSafeCastExpressionImpl(node);\n    if (elem.equals(INSTANCEOF_EXPRESSION)) return new GrInstanceofExpressionImpl(node);\n    if (elem.equals(BUILT_IN_TYPE_EXPRESSION)) return new GrBuiltinTypeClassExpressionImpl(node);\n    if (elem.equals(ARRAY_TYPE)) return new GrArrayTypeElementImpl(node);\n    if (elem.equals(BUILT_IN_TYPE)) return new GrBuiltInTypeElementImpl(node);\n    if (elem.equals(GSTRING)) return new GrStringImpl(node);\n    if (elem.equals(REGEX)) return new GrRegexImpl(node);\n    if (elem.equals(GSTRING_INJECTION)) return new GrStringInjectionImpl(node);\n    if (elem.equals(REFERENCE_EXPRESSION)) return new GrReferenceExpressionImpl(node);\n    if (elem.equals(THIS_REFERENCE_EXPRESSION)) return new GrThisReferenceExpressionImpl(node);\n    if (elem.equals(SUPER_REFERENCE_EXPRESSION)) return new GrSuperReferenceExpressionImpl(node);\n    if (elem.equals(PARENTHESIZED_EXPRESSION)) return new GrParenthesizedExpressionImpl(node);\n    if (elem.equals(NEW_EXPRESSION)) return new GrNewExpressionImpl(node);\n    if (elem.equals(ANONYMOUS_CLASS_DEFINITION)) return new GrAnonymousClassDefinitionImpl(node);\n    if (elem.equals(ARRAY_DECLARATOR)) return new GrArrayDeclarationImpl(node);\n\n    //Paths\n    if (elem.equals(PATH_PROPERTY)) return new GrPropertySelectorImpl(node);\n    if (elem.equals(PATH_PROPERTY_REFERENCE)) return new GrPropertySelectionImpl(node);\n    if (elem.equals(PATH_METHOD_CALL)) return new GrMethodCallExpressionImpl(node);\n    if (elem.equals(PATH_INDEX_PROPERTY)) return new GrIndexPropertyImpl(node);\n\n    // Arguments\n    if (elem.equals(ARGUMENTS)) return new GrArgumentListImpl(node);\n    if (elem.equals(ARGUMENT)) return new GrNamedArgumentImpl(node);\n    if (elem.equals(ARGUMENT_LABEL)) return new GrArgumentLabelImpl(node);\n\n    if (elem.equals(BALANCED_BRACKETS)) return new GroovyPsiElementImpl(node){};\n\n    return new ASTWrapperPsiElement(node);\n  }","id":61499,"modified_method":"/**\n   * Creates Groovy PSI element by given AST node\n   *\n   * @param node Given node\n   * @return Respective PSI element\n   */\n  public static PsiElement createElement(ASTNode node) {\n    IElementType elem = node.getElementType();\n\n    if (elem instanceof GroovyElementType.PsiCreator) {\n      return ((GroovyElementType.PsiCreator)elem).createPsi(node);\n    }\n\n    if (elem instanceof IGroovyDocElementType) {\n      return GroovyDocPsiCreator.createElement(node);\n    }\n\n    //Identifiers & literal\n    if (elem.equals(LITERAL)) return new GrLiteralImpl(node);\n    if (elem.equals(LABEL)) return new GrLabelImpl(node);\n//    if (elem.equals(IDENTIFIER)) return new GrIdentifierImpl(node);\n    //Lists, maps etc...\n    if (elem.equals(LIST_OR_MAP)) return new GrListOrMapImpl(node);\n\n    if (elem.equals(MODIFIERS)) return new GrModifierListImpl(node);\n    if (elem.equals(ANNOTATION)) return new GrAnnotationImpl(node);\n    if (elem.equals(ANNOTATION_ARGUMENTS)) return new GrAnnotationArgumentListImpl(node);\n    if (elem.equals(ANNOTATION_ARRAY_INITIALIZER)) return new GrAnnotationArrrayInitializerImpl(node);\n    if (elem.equals(ANNOTATION_MEMBER_VALUE_PAIR)) return new GrAnnotationNameValuePairImpl(node);\n    if (elem.equals(ANNOTATION_MEMBER_VALUE_PAIRS)) return new GrAnnotationNameValuePairsImpl(node);\n\n    if (elem.equals(DEFAULT_ANNOTATION_VALUE)) return new GrDefaultAnnotationValueImpl(node);\n\n    //throws\n    if (elem.equals(THROW_CLAUSE)) return new GrThrowsClauseImpl(node);\n\n    // Imports\n    if (elem.equals(IMPORT_STATEMENT)) return new GrImportStatementImpl(node);\n\n    // Packaging\n    if (elem.equals(PACKAGE_DEFINITION)) return new GrPackageDefinitionImpl(node);\n\n    //statements\n    if (elem.equals(LABELED_STATEMENT)) return new GrLabeledStatementImpl(node);\n    if (elem.equals(IF_STATEMENT)) return new GrIfStatementImpl(node);\n    if (elem.equals(FOR_STATEMENT)) return new GrForStatementImpl(node);\n    if (elem.equals(FOR_IN_CLAUSE)) return new GrForInClauseImpl(node);\n    if (elem.equals(FOR_TRADITIONAL_CLAUSE)) return new GrTraditionalForClauseImpl(node);\n    if (elem.equals(WHILE_STATEMENT)) return new GrWhileStatementImpl(node);\n    if (elem.equals(TRY_BLOCK_STATEMENT)) return new GrTryCatchStatementImpl(node);\n    if (elem.equals(CATCH_CLAUSE)) return new GrCatchClauseImpl(node);\n    if (elem.equals(FINALLY_CLAUSE)) return new GrFinallyClauseImpl(node);\n    if (elem.equals(SYNCHRONIZED_STATEMENT)) return new GrSynchronizedStatementImpl(node);\n    if (elem.equals(SWITCH_STATEMENT)) return new GrSwitchStatementImpl(node);\n    if (elem.equals(CASE_LABEL)) return new GrCaseLabelImpl(node);\n    if (elem.equals(CASE_SECTION)) return new GrCaseSectionImpl(node);\n    if (elem.equals(VARIABLE_DEFINITION) || elem.equals(VARIABLE_DEFINITION_ERROR))\n      return new GrVariableDeclarationBase.GrVariables(node);\n    if (elem.equals(MULTIPLE_VARIABLE_DEFINITION))\n      return new GrVariableDeclarationBase.GrMultipleVariables(node);\n    if (elem.equals(TUPLE_DECLARATION) || elem.equals(TUPLE_ERROR)) return new GrTupleDeclarationImpl(node);\n    if (elem.equals(TUPLE_EXPRESSION)) return new GrTupleExpressionImpl(node);\n    if (elem.equals(VARIABLE)) return new GrVariableImpl(node);\n\n    if (elem.equals(FIELD)) return new GrFieldImpl(node);\n    if (elem.equals(CLASS_INITIALIZER)) return new GrClassInitializerImpl(node);\n\n    //type definitions\n    if (elem.equals(CLASS_DEFINITION)) return new GrClassDefinitionImpl(node);\n    if (elem.equals(INTERFACE_DEFINITION))\n      return new GrInterfaceDefinitionImpl(node);\n    if (elem.equals(ENUM_DEFINITION)) return new GrEnumTypeDefinitionImpl(node);\n    if (elem.equals(ANNOTATION_DEFINITION))\n      return new GrAnnotationTypeDefinitionImpl(node);\n    if (elem.equals(ANNOTATION_METHOD)) return new GrAnnotationMethodImpl(node);\n\n    if (elem.equals(REFERENCE_ELEMENT)) return new GrCodeReferenceElementImpl(node);\n    if (elem.equals(CLASS_TYPE_ELEMENT)) return new GrClassTypeElementImpl(node);\n\n    //clauses\n    if (elem.equals(IMPLEMENTS_CLAUSE)) return new GrImplementsClauseImpl(node);\n    if (elem.equals(EXTENDS_CLAUSE)) return new GrExtendsClauseImpl(node);\n\n    //bodies\n    if (elem.equals(CLASS_BODY)) return new GrTypeDefinitionBodyBase.GrClassBody(node);\n    if (elem.equals(ENUM_BODY)) return new GrTypeDefinitionBodyBase.GrEnumBody(node);\n    if (elem.equals(BLOCK_STATEMENT)) return new GrBlockStatementImpl(node);\n    if (elem.equals(EXPLICIT_CONSTRUCTOR)) return new GrConstructorInvocationImpl(node);\n\n    //enum\n    if (elem.equals(ENUM_CONSTANTS)) return new GrEnumConstantListImpl(node);\n    if (elem.equals(ENUM_CONSTANT)) return new GrEnumConstantImpl(node);\n\n    //members\n    if (elem.equals(CONSTRUCTOR_DEFINITION)) return new GrConstructorImpl(node);\n    if (elem.equals(METHOD_DEFINITION)) return new GrMethodImpl(node);\n\n    //parameters\n    if (elem.equals(PARAMETERS_LIST)) return new GrParameterListImpl(node);\n    if (elem.equals(PARAMETER)) return new GrParameterImpl(node);\n\n    //type parameters\n    if (elem.equals(TYPE_ARGUMENT)) return new GrWildcardTypeArgumentImpl(node);\n    if (elem.equals(TYPE_ARGUMENTS)) return new GrTypeArgumentListImpl(node);\n\n\n    if (elem.equals(TYPE_PARAMETER_LIST)) return new GrTypeParameterListImpl(node);\n    if (elem.equals(TYPE_PARAMETER)) return new GrTypeParameterImpl(node);\n    if (elem.equals(TYPE_PARAMETER_EXTENDS_BOUND_LIST)) return new GrTypeParameterParameterExtendsListImpl(node);\n\n    //Branch statements\n    if (elem.equals(RETURN_STATEMENT)) return new GrReturnStatementImpl(node);\n    if (elem.equals(THROW_STATEMENT)) return new GrThrowStatementImpl(node);\n    if (elem.equals(ASSERT_STATEMENT)) return new GrAssertStatementImpl(node);\n    if (elem.equals(BREAK_STATEMENT)) return new GrBreakStatementImpl(node);\n    if (elem.equals(CONTINUE_STATEMENT)) return new GrContinueStatementImpl(node);\n\n    //expressions\n    if (elem.equals(CALL_EXPRESSION)) return new GrApplicationStatementImpl(node);\n    if (elem.equals(COMMAND_ARGUMENTS)) return new GrCommandArgumentListImpl(node);\n    if (elem.equals(CONDITIONAL_EXPRESSION)) return new GrConditionalExprImpl(node);\n    if (elem.equals(ELVIS_EXPRESSION)) return new GrElvisExprImpl(node);\n    if (elem.equals(ASSIGNMENT_EXPRESSION)) return new GrAssignmentExpressionImpl(node);\n\n    if (elem.equals(LOGICAL_OR_EXPRESSION)) return new GrLogicalExpressionImpl(node);\n    if (elem.equals(LOGICAL_AND_EXPRESSION)) return new GrLogicalExpressionImpl(node);\n\n    if (elem.equals(EXCLUSIVE_OR_EXPRESSION)) return new GrBitwiseExpressionImpl(node);\n    if (elem.equals(INCLUSIVE_OR_EXPRESSION)) return new GrBitwiseExpressionImpl(node);\n    if (elem.equals(AND_EXPRESSION)) return new GrBitwiseExpressionImpl(node);\n\n    if (elem.equals(REGEX_MATCH_EXPRESSION)) return new GrLogicalExpressionImpl(node);\n    if (elem.equals(REGEX_FIND_EXPRESSION)) return new GrRegexFindExpressionImpl(node);\n    if (elem.equals(EQUALITY_EXPRESSION)) return new GrRelationalExpressionImpl(node);\n    if (elem.equals(RELATIONAL_EXPRESSION)) return new GrRelationalExpressionImpl(node);\n    if (elem.equals(SHIFT_EXPRESSION)) return new GrShiftExpressionImpl(node);\n    if (elem.equals(RANGE_EXPRESSION)) return new GrRangeExpressionImpl(node);\n    if (TokenSets.SHIFT_SIGNS.contains(elem)) return new GrOperationSignImpl(node);\n    if (elem.equals(ADDITIVE_EXPRESSION)) return new GrAdditiveExpressionImpl(node);\n    if (elem.equals(MULTIPLICATIVE_EXPRESSION)) return new GrMultiplicativeExpressionImpl(node);\n    if (elem.equals(POWER_EXPRESSION)) return new GrPowerExpressionImpl(node);\n    if (elem.equals(POWER_EXPRESSION_SIMPLE)) return new GrPowerExpressionImpl(node);\n    if (elem.equals(UNARY_EXPRESSION)) return new GrUnaryExpressionImpl(node);\n    if (elem.equals(POSTFIX_EXPRESSION)) return new GrPostfixExprImpl(node);\n    if (elem.equals(CAST_EXPRESSION)) return new GrTypeCastExpressionImpl(node);\n    if (elem.equals(SAFE_CAST_EXPRESSION)) return new GrSafeCastExpressionImpl(node);\n    if (elem.equals(INSTANCEOF_EXPRESSION)) return new GrInstanceofExpressionImpl(node);\n    if (elem.equals(BUILT_IN_TYPE_EXPRESSION)) return new GrBuiltinTypeClassExpressionImpl(node);\n    if (elem.equals(ARRAY_TYPE)) return new GrArrayTypeElementImpl(node);\n    if (elem.equals(BUILT_IN_TYPE)) return new GrBuiltInTypeElementImpl(node);\n    if (elem.equals(GSTRING)) return new GrStringImpl(node);\n    if (elem.equals(REGEX)) return new GrRegexImpl(node);\n    if (elem.equals(GSTRING_INJECTION)) return new GrStringInjectionImpl(node);\n    if (elem.equals(REFERENCE_EXPRESSION)) return new GrReferenceExpressionImpl(node);\n    if (elem.equals(THIS_REFERENCE_EXPRESSION)) return new GrThisReferenceExpressionImpl(node);\n    if (elem.equals(SUPER_REFERENCE_EXPRESSION)) return new GrSuperReferenceExpressionImpl(node);\n    if (elem.equals(PARENTHESIZED_EXPRESSION)) return new GrParenthesizedExpressionImpl(node);\n    if (elem.equals(NEW_EXPRESSION)) return new GrNewExpressionImpl(node);\n    if (elem.equals(ANONYMOUS_CLASS_DEFINITION)) return new GrAnonymousClassDefinitionImpl(node);\n    if (elem.equals(ARRAY_DECLARATOR)) return new GrArrayDeclarationImpl(node);\n\n    //Paths\n    if (elem.equals(PATH_PROPERTY)) return new GrPropertySelectorImpl(node);\n    if (elem.equals(PATH_PROPERTY_REFERENCE)) return new GrPropertySelectionImpl(node);\n    if (elem.equals(PATH_METHOD_CALL)) return new GrMethodCallExpressionImpl(node);\n    if (elem.equals(PATH_INDEX_PROPERTY)) return new GrIndexPropertyImpl(node);\n\n    // Arguments\n    if (elem.equals(ARGUMENTS)) return new GrArgumentListImpl(node);\n    if (elem.equals(ARGUMENT)) return new GrNamedArgumentImpl(node);\n    if (elem.equals(ARGUMENT_LABEL)) return new GrArgumentLabelImpl(node);\n\n    if (elem.equals(BALANCED_BRACKETS)) return new GroovyPsiElementImpl(node){};\n\n    return new ASTWrapperPsiElement(node);\n  }","commit_id":"60902439a0792d81c6887a230e2c506bd7ce9fbe","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static int getExprPriorityLevel(GrExpression expr) {\n    int priority = 0;\n    //if (expr instanceof GrNewExpression) priority = 1;\n    if (expr instanceof GrPostfixExpression) priority = 5;\n    else if (expr instanceof GrUnaryExpression ||\n        expr instanceof GrTypeCastExpression) priority = 6;\n\n    else if (expr instanceof GrRangeExpressionImpl) priority = 11;\n\n    else if (expr instanceof GrBinaryExpression) {\n      final IElementType opToken = ((GrBinaryExpression)expr).getOperationTokenType();\n      LOG.assertTrue(opToken != null, expr.getText());\n\n      if (opToken == mSTAR_STAR) priority = 7;\n      else if (opToken == mSTAR || opToken == mDIV) priority = 8;\n      else if (opToken == mPLUS || opToken == mMINUS) priority = 9;\n      else if (opToken == COMPOSITE_SHIFT_SIGN) priority = 10;\n      else if (RELATIONS.contains(opToken)) priority = 12;\n      else if (opToken == mEQUAL || opToken == mNOT_EQUAL || opToken == mCOMPARE_TO) priority = 13;\n      else if (opToken == mREGEX_FIND || opToken == mREGEX_MATCH) priority = 14;\n      else if (opToken == mBAND) priority = 15;\n      else if (opToken == mBXOR) priority = 16;\n      else if (opToken == mBOR) priority = 17;\n      else if (opToken == mLAND) priority = 18;\n      else if (opToken == mLOR) priority = 19;\n    }\n    else if (expr instanceof GrConditionalExpression) priority = 20;\n    else if (expr instanceof GrSafeCastExpression) priority = 21;\n    else if (expr instanceof GrAssignmentExpression) priority = 22;\n    else if (expr instanceof GrApplicationStatement) priority = 23;\n\n    return -priority;\n  }","id":61500,"modified_method":"private static int getExprPriorityLevel(GrExpression expr) {\n    int priority = 0;\n    //if (expr instanceof GrNewExpression) priority = 1;\n    if (expr instanceof GrPostfixExpression) priority = 5;\n    else if (expr instanceof GrUnaryExpression ||\n        expr instanceof GrTypeCastExpression) priority = 6;\n\n    else if (expr instanceof GrRangeExpressionImpl) priority = 11;\n\n    else if (expr instanceof GrBinaryExpression) {\n      final IElementType opToken = ((GrBinaryExpression)expr).getOperationTokenType();\n      LOG.assertTrue(opToken != null, expr.getText());\n\n      if (opToken == mSTAR_STAR) priority = 7;\n      else if (opToken == mSTAR || opToken == mDIV) priority = 8;\n      else if (opToken == mPLUS || opToken == mMINUS) priority = 9;\n      else if (SHIFT_SIGNS.contains(opToken)) priority = 10;\n      else if (RELATIONS.contains(opToken)) priority = 12;\n      else if (opToken == mEQUAL || opToken == mNOT_EQUAL || opToken == mCOMPARE_TO) priority = 13;\n      else if (opToken == mREGEX_FIND || opToken == mREGEX_MATCH) priority = 14;\n      else if (opToken == mBAND) priority = 15;\n      else if (opToken == mBXOR) priority = 16;\n      else if (opToken == mBOR) priority = 17;\n      else if (opToken == mLAND) priority = 18;\n      else if (opToken == mLOR) priority = 19;\n    }\n    else if (expr instanceof GrConditionalExpression) priority = 20;\n    else if (expr instanceof GrSafeCastExpression) priority = 21;\n    else if (expr instanceof GrAssignmentExpression) priority = 22;\n    else if (expr instanceof GrApplicationStatement) priority = 23;\n\n    return -priority;\n  }","commit_id":"60902439a0792d81c6887a230e2c506bd7ce9fbe","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static boolean isNotAssociative(GrBinaryExpression binaryExpression) {\n    final IElementType opToken = binaryExpression.getOperationTokenType();\n    if (binaryExpression instanceof GrMultiplicativeExpressionImpl) {\n      return opToken != mSTAR;\n    }\n    if (binaryExpression instanceof GrAdditiveExpressionImpl) {\n      return opToken == mMINUS;\n    }\n    return RELATIONS.contains(opToken) || opToken == mCOMPARE_TO\n           || opToken == mREGEX_FIND || opToken == mREGEX_MATCH\n           || opToken == COMPOSITE_SHIFT_SIGN\n           || opToken==mSTAR;\n  }","id":61501,"modified_method":"private static boolean isNotAssociative(GrBinaryExpression binaryExpression) {\n    final IElementType opToken = binaryExpression.getOperationTokenType();\n    if (binaryExpression instanceof GrMultiplicativeExpressionImpl) {\n      return opToken != mSTAR;\n    }\n    if (binaryExpression instanceof GrAdditiveExpressionImpl) {\n      return opToken == mMINUS;\n    }\n    return RELATIONS.contains(opToken) || opToken == mCOMPARE_TO\n           || opToken == mREGEX_FIND || opToken == mREGEX_MATCH\n           || SHIFT_SIGNS.contains(opToken)\n           || opToken==mSTAR;\n  }","commit_id":"60902439a0792d81c6887a230e2c506bd7ce9fbe","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n   * For composite shift operators like >>>\n   *\n   * @param builder\n   * @return\n   */\n  private static boolean getCompositeSign(PsiBuilder builder) {\n    if (ParserUtils.lookAhead(builder, mGT, mASSIGN)) {\n      PsiBuilder.Marker marker = builder.mark();\n      for (int i = 0; i < 2; i++) {\n        builder.advanceLexer();\n      }\n      marker.done(COMPOSITE_SHIFT_SIGN);\n      return true;\n    } else {\n      return false;\n    }\n  }","id":61502,"modified_method":"/**\n   * For composite shift operators like >>>\n   *\n   * @param builder\n   * @return\n   */\n  private static boolean getCompositeSign(PsiBuilder builder) {\n    if (ParserUtils.lookAhead(builder, mGT, mASSIGN)) {\n      PsiBuilder.Marker marker = builder.mark();\n      for (int i = 0; i < 2; i++) {\n        builder.advanceLexer();\n      }\n      marker.done(MORE_OR_EQUALS_SIGN);\n      return true;\n    } else {\n      return false;\n    }\n  }","commit_id":"60902439a0792d81c6887a230e2c506bd7ce9fbe","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static boolean getCompositeSign(PsiBuilder builder) {\n    if (ParserUtils.lookAhead(builder, mGT, mGT, mGT)) {\n      PsiBuilder.Marker marker = builder.mark();\n      for (int i = 0; i < 3; i++) {\n        builder.getTokenText(); //todo[peter] remove look-ahead assertion\n        builder.advanceLexer();\n      }\n      marker.done(COMPOSITE_SHIFT_SIGN);\n      return true;\n    } else if (ParserUtils.lookAhead(builder, mLT, mLT) ||\n            ParserUtils.lookAhead(builder, mGT, mGT)) {\n      PsiBuilder.Marker marker = builder.mark();\n      for (int i = 0; i < 2; i++) {\n        builder.getTokenText(); //todo[peter] remove look-ahead assertion\n        builder.advanceLexer();\n      }\n      marker.done(COMPOSITE_SHIFT_SIGN);\n      return true;\n    } else {\n      return false;\n    }\n  }","id":61503,"modified_method":"private static boolean getCompositeSign(PsiBuilder builder) {\n    if (ParserUtils.lookAhead(builder, mGT, mGT, mGT)) {\n      PsiBuilder.Marker marker = builder.mark();\n      for (int i = 0; i < 3; i++) {\n        builder.getTokenText(); //todo[peter] remove look-ahead assertion\n        builder.advanceLexer();\n      }\n      marker.done(COMPOSITE_TRIPLE_SHIFT_SIGN);\n      return true;\n    }\n    else if (ParserUtils.lookAhead(builder, mLT, mLT)) {\n      PsiBuilder.Marker marker = builder.mark();\n      for (int i = 0; i < 2; i++) {\n        builder.getTokenText(); //todo[peter] remove look-ahead assertion\n        builder.advanceLexer();\n      }\n      marker.done(COMPOSITE_LSHIFT_SIGN);\n      return true;\n    }\n    else if (ParserUtils.lookAhead(builder, mGT, mGT)) {\n      PsiBuilder.Marker marker = builder.mark();\n      for (int i = 0; i < 2; i++) {\n        builder.getTokenText(); //todo[peter] remove look-ahead assertion\n        builder.advanceLexer();\n      }\n      marker.done(COMPOSITE_RSHIFT_SIGN);\n      return true;\n    }\n    else {\n      return false;\n    }\n  }","commit_id":"60902439a0792d81c6887a230e2c506bd7ce9fbe","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n     * Starts a thread for the progress on the given list.<p>\n     * \n     * @param list the list to use for the progress bar\n     * @param abortExisting if true then an already existing thread will be killed\n     */\n    public void startProgress(A_CmsListDialog list, boolean abortExisting) {\n\n        // check the list\n        if (list == null) {\n            throw new CmsIllegalArgumentException(Messages.get().container(Messages.ERR_PROGRESS_START_INVALID_LIST_0));\n        }\n\n        // check if created key already exists\n        if (m_threads.get(getKey()) != null) {\n            if (abortExisting) {\n                if (LOG.isDebugEnabled()) {\n                    LOG.debug(Messages.get().getBundle().key(Messages.LOG_PROGRESS_INTERRUPT_THREAD_1, getKey()));\n                }\n                Thread thread = (Thread)m_threads.get(getKey());\n                thread.interrupt();\n            } else {\n                throw new CmsIllegalStateException(\n                    Messages.get().container(Messages.ERR_PROGRESS_START_THREAD_EXISTS_0));\n            }\n        }\n\n        // start the thread\n        Thread thread = new CmsProgressThread(list, getKey(), list.getLocale());\n        m_threads.put(getKey(), thread);\n        thread.start();\n\n        // clean up abandoned threads\n        Iterator iter = m_threads.entrySet().iterator();\n        while (iter.hasNext()) {\n            Map.Entry entry = (Map.Entry)iter.next();\n\n            CmsProgressThread value = (CmsProgressThread)entry.getValue();\n            if ((!thread.isAlive()) && (System.currentTimeMillis() - value.getFinishTime() > CLEANUP_PERIOD)) {\n                if (LOG.isDebugEnabled()) {\n                    LOG.debug(Messages.get().getBundle().key(Messages.LOG_PROGRESS_CLEAN_UP_THREAD_1, getKey()));\n                }\n                m_threads.remove(entry.getKey());\n            }\n        }\n    }","id":61504,"modified_method":"/**\n     * Starts a thread for the progress on the given list.<p>\n     * \n     * @param list the list to use for the progress bar\n     * @param abortExisting if true then an already existing thread will be killed\n     */\n    public void startProgress(A_CmsListDialog list, boolean abortExisting) {\n\n        // check the list\n        if (list == null) {\n            throw new CmsIllegalArgumentException(Messages.get().container(Messages.ERR_PROGRESS_START_INVALID_LIST_0));\n        }\n\n        // check if created key already exists\n        if (m_threads.get(getKey()) != null) {\n            if (abortExisting) {\n                if (LOG.isDebugEnabled()) {\n                    LOG.debug(Messages.get().getBundle().key(Messages.LOG_PROGRESS_INTERRUPT_THREAD_1, getKey()));\n                }\n                Thread thread = (Thread)m_threads.get(getKey());\n                thread.interrupt();\n            } else {\n                throw new CmsIllegalStateException(\n                    Messages.get().container(Messages.ERR_PROGRESS_START_THREAD_EXISTS_0));\n            }\n        }\n\n        // create the thread\n        Thread thread = new CmsProgressThread(list, getKey(), list.getLocale());\n\n        Map threadsAbandoned = new HashMap();\n        Map threadsAlive = new HashMap();\n        synchronized (m_threads) {\n\n            // clean up abandoned threads\n            for (Iterator iter = m_threads.entrySet().iterator(); iter.hasNext();) {\n                Map.Entry entry = (Map.Entry)iter.next();\n                CmsProgressThread value = (CmsProgressThread)entry.getValue();\n\n                if ((!thread.isAlive()) && (System.currentTimeMillis() - value.getFinishTime() > CLEANUP_PERIOD)) {\n                    threadsAbandoned.put(entry.getKey(), entry.getValue());\n                } else {\n                    threadsAlive.put(entry.getKey(), entry.getValue());\n                }\n            }\n\n            // add and start new thread\n            threadsAlive.put(getKey(), thread);\n            thread.start();\n\n            m_threads = threadsAlive;\n        }\n\n        if (LOG.isDebugEnabled()) {\n            for (Iterator iter = threadsAbandoned.entrySet().iterator(); iter.hasNext();) {\n                LOG.debug(Messages.get().getBundle().key(Messages.LOG_PROGRESS_CLEAN_UP_THREAD_1, getKey()));\n            }\n        }\n    }","commit_id":"cad2912ef1b79f96c345d3a747223ea669b1b31d","url":"https://github.com/alkacon/opencms-core"},{"original_method":"public void assembleModelInheritance( Model child, Model parent )\n    {\n        // cannot inherit from null parent.\n        if ( parent == null )\n        {\n            return;\n        }\n\n        // Group id\n        if ( child.getGroupId() == null )\n        {\n            child.setGroupId( parent.getGroupId() );\n        }\n\n        // version\n        if ( child.getVersion() == null )\n        {\n            // The parent version may have resolved to something different, so we take what we asked for...\n            // instead of - child.setVersion( parent.getVersion() );\n\n            if ( child.getParent() != null )\n            {\n                child.setVersion( child.getParent().getVersion() );\n            }\n        }\n\n        // inceptionYear\n        if ( child.getInceptionYear() == null )\n        {\n            child.setInceptionYear( parent.getInceptionYear() );\n        }\n\n        // url\n        if ( child.getUrl() == null )\n        {\n            if ( parent.getUrl() != null )\n            {\n                child.setUrl( appendPath( parent.getUrl(), child.getArtifactId() ) );\n            }\n            else\n            {\n                child.setUrl( parent.getUrl() );\n            }\n        }\n\n        // ----------------------------------------------------------------------\n        // Distribution\n        // ----------------------------------------------------------------------\n\n        assembleDistributionInheritence( child, parent );\n\n        // issueManagement\n        if ( child.getIssueManagement() == null )\n        {\n            child.setIssueManagement( parent.getIssueManagement() );\n        }\n\n        // description\n        if ( child.getDescription() == null )\n        {\n            child.setDescription( parent.getDescription() );\n        }\n\n        // Organization\n        if ( child.getOrganization() == null )\n        {\n            child.setOrganization( parent.getOrganization() );\n        }\n\n        // Scm\n        assembleScmInheritance( child, parent );\n\n        // ciManagement\n        if ( child.getCiManagement() == null )\n        {\n            child.setCiManagement( parent.getCiManagement() );\n        }\n\n        // developers\n        if ( child.getDevelopers().size() == 0 )\n        {\n            child.setDevelopers( parent.getDevelopers() );\n        }\n\n        // licenses\n        if ( child.getLicenses().size() == 0 )\n        {\n            child.setLicenses( parent.getLicenses() );\n        }\n\n        // developers\n        if ( child.getContributors().size() == 0 )\n        {\n            child.setContributors( parent.getContributors() );\n        }\n\n        // mailingLists\n        if ( child.getMailingLists().size() == 0 )\n        {\n            child.setMailingLists( parent.getMailingLists() );\n        }\n\n        // Build\n        assembleBuildInheritance( child, parent.getBuild() );\n\n        ModelUtils.mergeModelBases( child, parent, false );\n    }","id":61505,"modified_method":"public void assembleModelInheritance( Model child, Model parent )\n    {\n        // cannot inherit from null parent.\n        if ( parent == null )\n        {\n            return;\n        }\n\n        // Group id\n        if ( child.getGroupId() == null )\n        {\n            child.setGroupId( parent.getGroupId() );\n        }\n\n        // version\n        if ( child.getVersion() == null )\n        {\n            // The parent version may have resolved to something different, so we take what we asked for...\n            // instead of - child.setVersion( parent.getVersion() );\n\n            if ( child.getParent() != null )\n            {\n                child.setVersion( child.getParent().getVersion() );\n            }\n        }\n\n        // inceptionYear\n        if ( child.getInceptionYear() == null )\n        {\n            child.setInceptionYear( parent.getInceptionYear() );\n        }\n\n        // url\n        if ( child.getUrl() == null )\n        {\n            if ( parent.getUrl() != null )\n            {\n                child.setUrl( appendPath( parent.getUrl(), child.getArtifactId() ) );\n            }\n            else\n            {\n                child.setUrl( parent.getUrl() );\n            }\n        }\n\n        // ----------------------------------------------------------------------\n        // Distribution\n        // ----------------------------------------------------------------------\n\n        assembleDistributionInheritence( child, parent );\n\n        // issueManagement\n        if ( child.getIssueManagement() == null )\n        {\n            child.setIssueManagement( parent.getIssueManagement() );\n        }\n\n        // description\n        if ( child.getDescription() == null )\n        {\n            child.setDescription( parent.getDescription() );\n        }\n\n        // Organization\n        if ( child.getOrganization() == null )\n        {\n            child.setOrganization( parent.getOrganization() );\n        }\n\n        // Scm\n        assembleScmInheritance( child, parent );\n\n        // ciManagement\n        if ( child.getCiManagement() == null )\n        {\n            child.setCiManagement( parent.getCiManagement() );\n        }\n\n        // developers\n        if ( child.getDevelopers().size() == 0 )\n        {\n            child.setDevelopers( parent.getDevelopers() );\n        }\n\n        // licenses\n        if ( child.getLicenses().size() == 0 )\n        {\n            child.setLicenses( parent.getLicenses() );\n        }\n\n        // developers\n        if ( child.getContributors().size() == 0 )\n        {\n            child.setContributors( parent.getContributors() );\n        }\n\n        // mailingLists\n        if ( child.getMailingLists().size() == 0 )\n        {\n            child.setMailingLists( parent.getMailingLists() );\n        }\n\n        // Build\n        assembleBuildInheritance( child, parent.getBuild() );\n        \n        assembleDependencyInheritance( child, parent );\n\n        child.setRepositories( ModelUtils.mergeRepositoryLists( child.getRepositories(), parent.getRepositories() ) );\n        child.setPluginRepositories( ModelUtils.mergeRepositoryLists( child.getPluginRepositories(), parent.getPluginRepositories() ) );\n        \n        assembleReportingInheritance( child, parent );\n        \n        assembleDependencyManagementInheritance( child, parent );\n        \n        assembleDistributionManagementInheritance( child, parent );\n    }","commit_id":"f437fb5dc2da383064a38a58d846adef3f0bc459","url":"https://github.com/apache/maven"},{"original_method":"private static String appendPath( String url, String path )\n    {\n        if ( url.endsWith( \"/\" ) )\n        {\n            return url + path;\n        }\n        else\n        {\n            return url + \"/\" + path;\n        }\n    }","id":61506,"modified_method":"private String appendPath( String url, String path )\n    {\n        if ( url.endsWith( \"/\" ) )\n        {\n            return url + path;\n        }\n        else\n        {\n            return url + \"/\" + path;\n        }\n    }","commit_id":"f437fb5dc2da383064a38a58d846adef3f0bc459","url":"https://github.com/apache/maven"},{"original_method":"private void assembleBuildInheritance( Model child, Build parentBuild )\n    {\n        Build childBuild = child.getBuild();\n\n        if ( parentBuild != null )\n        {\n            if ( childBuild == null )\n            {\n                childBuild = new Build();\n                child.setBuild( childBuild );\n            }\n\n            // The build has been set but we want to step in here and fill in\n            // values that have not been set by the child.\n\n            if ( childBuild.getSourceDirectory() == null )\n            {\n                childBuild.setSourceDirectory( parentBuild.getSourceDirectory() );\n            }\n\n            if ( childBuild.getScriptSourceDirectory() == null )\n            {\n                childBuild.setScriptSourceDirectory( parentBuild.getScriptSourceDirectory() );\n            }\n\n            if ( childBuild.getTestSourceDirectory() == null )\n            {\n                childBuild.setTestSourceDirectory( parentBuild.getTestSourceDirectory() );\n            }\n\n            if ( childBuild.getOutputDirectory() == null )\n            {\n                childBuild.setOutputDirectory( parentBuild.getOutputDirectory() );\n            }\n\n            if ( childBuild.getTestOutputDirectory() == null )\n            {\n                childBuild.setTestOutputDirectory( parentBuild.getTestOutputDirectory() );\n            }\n\n            // Extensions are accumlated\n            mergeExtensionLists( childBuild, parentBuild );\n\n            ModelUtils.mergeBuildBases( childBuild, parentBuild );\n        }\n    }","id":61507,"modified_method":"private void assembleBuildInheritance( Model child, Build parentBuild )\n    {\n        Build childBuild = child.getBuild();\n\n        if ( parentBuild != null )\n        {\n            if ( childBuild == null )\n            {\n                childBuild = new Build();\n                child.setBuild( childBuild );\n            }\n\n            // The build has been set but we want to step in here and fill in\n            // values that have not been set by the child.\n\n            if ( childBuild.getSourceDirectory() == null )\n            {\n                childBuild.setSourceDirectory( parentBuild.getSourceDirectory() );\n            }\n\n            if ( childBuild.getScriptSourceDirectory() == null )\n            {\n                childBuild.setScriptSourceDirectory( parentBuild.getScriptSourceDirectory() );\n            }\n\n            if ( childBuild.getTestSourceDirectory() == null )\n            {\n                childBuild.setTestSourceDirectory( parentBuild.getTestSourceDirectory() );\n            }\n\n            if ( childBuild.getOutputDirectory() == null )\n            {\n                childBuild.setOutputDirectory( parentBuild.getOutputDirectory() );\n            }\n\n            if ( childBuild.getTestOutputDirectory() == null )\n            {\n                childBuild.setTestOutputDirectory( parentBuild.getTestOutputDirectory() );\n            }\n\n            // Extensions are accumlated\n            mergeExtensionLists( childBuild, parentBuild );\n\n            if ( childBuild.getDirectory() == null )\n            {\n                childBuild.setDirectory( parentBuild.getDirectory() );\n            }\n\n            if ( childBuild.getDefaultGoal() == null )\n            {\n                childBuild.setDefaultGoal( parentBuild.getDefaultGoal() );\n            }\n\n            if ( childBuild.getFinalName() == null )\n            {\n                childBuild.setFinalName( parentBuild.getFinalName() );\n            }\n\n            List resources = childBuild.getResources();\n            if ( resources == null || resources.isEmpty() )\n            {\n                childBuild.setResources( parentBuild.getResources() );\n            }\n\n            resources = childBuild.getTestResources();\n            if ( resources == null || resources.isEmpty() )\n            {\n                childBuild.setTestResources( parentBuild.getTestResources() );\n            }\n\n            // Plugins are aggregated if Plugin.inherit != false\n            ModelUtils.mergePluginLists( childBuild, parentBuild, true );\n\n            // Plugin management :: aggregate\n            PluginManagement dominantPM = childBuild.getPluginManagement();\n            PluginManagement recessivePM = parentBuild.getPluginManagement();\n\n            if ( dominantPM == null && recessivePM != null )\n            {\n                childBuild.setPluginManagement( recessivePM );\n            }\n            else\n            {\n                ModelUtils.mergePluginLists( childBuild.getPluginManagement(), parentBuild.getPluginManagement(),\n                                             false );\n            }\n        }\n    }","commit_id":"f437fb5dc2da383064a38a58d846adef3f0bc459","url":"https://github.com/apache/maven"},{"original_method":"private static void mergeExtensionLists( Build childBuild, Build parentBuild )\n    {\n        for ( Iterator i = parentBuild.getExtensions().iterator(); i.hasNext(); )\n        {\n            Extension e = (Extension) i.next();\n            if ( !childBuild.getExtensions().contains( e ) )\n            {\n                childBuild.addExtension( e );\n            }\n        }\n    }","id":61508,"modified_method":"private void mergeExtensionLists( Build childBuild, Build parentBuild )\n    {\n        for ( Iterator i = parentBuild.getExtensions().iterator(); i.hasNext(); )\n        {\n            Extension e = (Extension) i.next();\n            if ( !childBuild.getExtensions().contains( e ) )\n            {\n                childBuild.addExtension( e );\n            }\n        }\n    }","commit_id":"f437fb5dc2da383064a38a58d846adef3f0bc459","url":"https://github.com/apache/maven"},{"original_method":"public void inject( Profile profile, Model model )\n    {\n        // [jc 11-aug-2005] NOTE: the following merge-then-override procedure is used to preserve proper dominance \n        // (profile wins), while ensuring that any changes are pushed to the model.\n        ModelUtils.mergeModelBases( profile, model, true );\n        \n        ModelUtils.overrideModelBase( model, profile );\n        \n        BuildBase profileBuild = profile.getBuild();\n        \n        if ( profileBuild != null )\n        {\n            ModelUtils.mergeBuildBases( profile.getBuild(), model.getBuild() );\n            \n            Build modelBuild = model.getBuild();\n            \n            ModelUtils.overrideBuildBase( modelBuild, profileBuild );\n        }\n    }","id":61509,"modified_method":"public void inject( Profile profile, Model model )\n    {\n        injectDependencies( profile, model );\n\n        injectModules( profile, model );\n\n        model.setRepositories( ModelUtils.mergeRepositoryLists( profile.getRepositories(), model.getRepositories() ) );\n        model.setPluginRepositories( ModelUtils.mergeRepositoryLists( profile.getPluginRepositories(), model\n            .getPluginRepositories() ) );\n\n        injectReporting( profile, model );\n\n        injectDependencyManagement( profile, model );\n\n        injectDistributionManagement( profile, model );\n        \n        injectBuild( profile, model );\n    }","commit_id":"f437fb5dc2da383064a38a58d846adef3f0bc459","url":"https://github.com/apache/maven"},{"original_method":"private static void mergePluginExecutionDefinitions( PluginExecution child, PluginExecution parent )\n    {\n        List parentGoals = parent.getGoals();\n\n        // if the supplemental goals are non-existent, then nothing related to goals changes.\n        if ( parentGoals != null && !parentGoals.isEmpty() )\n        {\n            List goals = new ArrayList( parentGoals );\n            if ( child.getGoals() != null )\n            {\n                goals.addAll( child.getGoals() );\n            }\n\n            child.setGoals( goals );\n        }\n\n        Xpp3Dom childConfiguration = (Xpp3Dom) child.getConfiguration();\n        Xpp3Dom parentConfiguration = (Xpp3Dom) parent.getConfiguration();\n\n        childConfiguration = Xpp3Dom.mergeXpp3Dom( childConfiguration, parentConfiguration );\n\n        child.setConfiguration( childConfiguration );\n    }","id":61510,"modified_method":"private static void mergePluginExecutionDefinitions( PluginExecution child, PluginExecution parent )\n    {\n        if ( child.getPhase() == null )\n        {\n            child.setPhase( parent.getPhase() );\n        }\n        \n        List parentGoals = parent.getGoals();\n        List childGoals = child.getGoals();\n        \n        List goals = new ArrayList();\n        \n        if ( childGoals != null && !childGoals.isEmpty() )\n        {\n            goals.addAll( childGoals );\n        }\n        \n        if ( parentGoals != null )\n        {\n            for ( Iterator goalIterator = parentGoals.iterator(); goalIterator.hasNext(); )\n            {\n                String goal = (String) goalIterator.next();\n                \n                if ( !goals.contains( goal ) )\n                {\n                    goals.add( goal );\n                }\n            }\n        }\n        \n        child.setGoals( goals );\n\n        Xpp3Dom childConfiguration = (Xpp3Dom) child.getConfiguration();\n        Xpp3Dom parentConfiguration = (Xpp3Dom) parent.getConfiguration();\n\n        childConfiguration = Xpp3Dom.mergeXpp3Dom( childConfiguration, parentConfiguration );\n\n        child.setConfiguration( childConfiguration );\n    }","commit_id":"f437fb5dc2da383064a38a58d846adef3f0bc459","url":"https://github.com/apache/maven"},{"original_method":"private static List mergeRepositoryLists( List dominantRepositories, List recessiveRepositories )\n    {\n        List repositories = new ArrayList();\n        \n        for ( Iterator it = dominantRepositories.iterator(); it.hasNext(); )\n        {\n            Repository repository = (Repository) it.next();\n            \n            repositories.add( repository );\n        }\n        \n        for ( Iterator it = recessiveRepositories.iterator(); it.hasNext(); )\n        {\n            Repository repository = (Repository) it.next();\n            \n            if ( !repositories.contains( repository ) )\n            {\n                repositories.add( repository );\n            }\n        }\n        \n        return repositories;\n    }","id":61511,"modified_method":"public static List mergeRepositoryLists( List dominant, List recessive )\n    {\n        List repositories = new ArrayList();\n        \n        for ( Iterator it = dominant.iterator(); it.hasNext(); )\n        {\n            Repository repository = (Repository) it.next();\n            \n            repositories.add( repository );\n        }\n        \n        for ( Iterator it = recessive.iterator(); it.hasNext(); )\n        {\n            Repository repository = (Repository) it.next();\n            \n            if ( !repositories.contains( repository ) )\n            {\n                repositories.add( repository );\n            }\n        }\n        \n        return repositories;\n    }","commit_id":"f437fb5dc2da383064a38a58d846adef3f0bc459","url":"https://github.com/apache/maven"},{"original_method":"protected Result doRun(final BuildListener listener) throws Exception {\n\n        \tResult r = null;\n        \tPrintStream logger = listener.getLogger();\n            FilePath remoteSettings = null, remoteGlobalSettings = null;\n\n            try {\n            \t\n                EnvVars envVars = getEnvironment(listener);\n                MavenInstallation mvn = project.getMaven();\n                if(mvn==null)\n                    throw new AbortException(Messages.MavenModuleSetBuild_NoMavenConfigured());\n\n                mvn = mvn.forEnvironment(envVars).forNode(Computer.currentComputer().getNode(), listener);\n                \n                MavenInformation mavenInformation = getModuleRoot().act( new MavenVersionCallable( mvn.getHome() ));\n                \n                String mavenVersion = mavenInformation.getVersion();\n                \n                MavenBuildInformation mavenBuildInformation = new MavenBuildInformation( mavenVersion );\n                \n                setMavenVersionUsed( mavenVersion );\n\n                LOGGER.fine(getFullDisplayName()+\" is building with mavenVersion \" + mavenVersion + \" from file \" + mavenInformation.getVersionResourcePath());\n\n                if(!project.isAggregatorStyleBuild()) {\n                    parsePoms(listener, logger, envVars, mvn, mavenVersion);\n                    // start module builds\n                    logger.println(\"Triggering \"+project.getRootModule().getModuleName());\n                    project.getRootModule().scheduleBuild(new UpstreamCause((Run<?,?>)MavenModuleSetBuild.this));\n                } else {\n                    // do builds here\n                    try {\n                        List<BuildWrapper> wrappers = new ArrayList<BuildWrapper>();\n                        for (BuildWrapper w : project.getBuildWrappersList())\n                            wrappers.add(w);\n                        ParametersAction parameters = getAction(ParametersAction.class);\n                        if (parameters != null)\n                            parameters.createBuildWrappers(MavenModuleSetBuild.this,wrappers);\n\n                        for( BuildWrapper w : wrappers) {\n                            Environment e = w.setUp(MavenModuleSetBuild.this, launcher, listener);\n                            if(e==null)\n                                return (r = Result.FAILURE);\n                            buildEnvironments.add(e);\n                            e.buildEnvVars(envVars); // #3502: too late for getEnvironment to do this\n                        }\n\n                    \t// run pre build steps\n                    \tif(!preBuild(listener,project.getPrebuilders())\n                        || !preBuild(listener,project.getPostbuilders())\n                        || !preBuild(listener,project.getPublishers())){\n                    \t\tr = FAILURE;\n                            return r;\n                    \t}\n\n                    \tif(!build(listener,project.getPrebuilders().toList())){\n                    \t\tr = FAILURE;\n                            return r;\n            \t\t\t}\n\n                        String settingsConfigId = project.getSettingConfigId();\n                        if (StringUtils.isNotBlank(settingsConfigId)) {\n                            Config settingsConfig = SettingsProviderUtils.findConfig( settingsConfigId, MavenSettingsProvider.class, org.jenkinsci.lib.configprovider.maven.MavenSettingsProvider.class );\n                            if (settingsConfig == null) {\n                                logger.println(\" your Apache Maven build is setup to use a config with id \" + settingsConfigId\n                                                   + \" but cannot find the config\");\n                            } else {\n                                logger.println(\"using settings config with name \" + settingsConfig.name);\n                                if (settingsConfig.content != null ) {\n                                    remoteSettings = SettingsProviderUtils.copyConfigContentToFilePath( settingsConfig, getWorkspace() );\n                                    project.setAlternateSettings( remoteSettings.getRemote() );\n                                }\n                            }\n                        }\n\n                        String globalSettingsConfigId = project.getGlobalSettingConfigId();\n                        if (StringUtils.isNotBlank(globalSettingsConfigId)) {\n                            Config settingsConfig = SettingsProviderUtils.findConfig( globalSettingsConfigId, GlobalMavenSettingsProvider.class, org.jenkinsci.lib.configprovider.maven.GlobalMavenSettingsProvider.class );\n                            if (settingsConfig == null) {\n                                logger.println(\" your Apache Maven build is setup to use a global settings config with id \" + globalSettingsConfigId\n                                                   + \" but cannot find the config\");\n                            } else {\n                                logger.println(\"using global settings config with name \" + settingsConfig.name);\n                                if (settingsConfig.content != null ) {\n                                    remoteGlobalSettings = SettingsProviderUtils.copyConfigContentToFilePath( settingsConfig, getWorkspace() );\n                                    project.globalSettingConfigPath = remoteGlobalSettings.getRemote();\n                                }\n                            }\n                        } else {\n                        \t// make sure the transient field is clean\n                        \tproject.globalSettingConfigPath = null;\n                        }\n\n                        parsePoms(listener, logger, envVars, mvn, mavenVersion); // #5428 : do pre-build *before* parsing pom\n                        SplittableBuildListener slistener = new SplittableBuildListener(listener);\n                        proxies = new HashMap<ModuleName, ProxyImpl2>();\n                        List<ModuleName> changedModules = new ArrayList<ModuleName>();\n                        \n                        if (project.isIncrementalBuild() && !getChangeSet().isEmptySet()) {\n                            changedModules.addAll(getUnbuildModulesSinceLastSuccessfulBuild());\n                        }\n\n                        for (MavenModule m : project.sortedActiveModules) {\n                            MavenBuild mb = m.newBuild();\n                            // JENKINS-8418\n                            mb.setBuiltOnStr( getBuiltOnStr() );\n                            // Check if incrementalBuild is selected and that there are changes -\n                            // we act as if incrementalBuild is not set if there are no changes.\n                            if (!MavenModuleSetBuild.this.getChangeSet().isEmptySet()\n                                && project.isIncrementalBuild()) {\n                                //If there are changes for this module, add it.\n                                // Also add it if we've never seen this module before,\n                                // or if the previous build of this module failed or was unstable.\n                                if ((mb.getPreviousBuiltBuild() == null) ||\n                                    (!getChangeSetFor(m).isEmpty()) \n                                    || (mb.getPreviousBuiltBuild().getResult().isWorseThan(Result.SUCCESS))) {\n                                    changedModules.add(m.getModuleName());\n                                }\n                            }\n\n                            mb.setWorkspace(getModuleRoot().child(m.getRelativePath()));\n                            proxies.put(m.getModuleName(), mb.new ProxyImpl2(MavenModuleSetBuild.this,slistener));\n                        }\n\n                        // run the complete build here\n\n                        // figure out the root POM location.\n                        // choice of module root ('ws' in this method) is somewhat arbitrary\n                        // when multiple CVS/SVN modules are checked out, so also check\n                        // the path against the workspace root if that seems like what the user meant (see issue #1293)\n                        String rootPOM = project.getRootPOM();\n                        FilePath pom = getModuleRoot().child(rootPOM);\n                        FilePath parentLoc = getWorkspace().child(rootPOM);\n                        if(!pom.exists() && parentLoc.exists())\n                            pom = parentLoc;\n\n                        \n                        ProcessCache.MavenProcess process = null;\n                        \n                        boolean maven3orLater = mavenBuildInformation.isMaven3OrLater(); \n                        if ( maven3orLater )\n                        {\n                            LOGGER.fine( \"using maven 3 \" + mavenVersion );\n                            process =\n                                MavenBuild.mavenProcessCache.get( launcher.getChannel(), slistener,\n                                                                  new Maven3ProcessFactory( project, launcher, envVars, getMavenOpts(listener, envVars),\n                                                                                            pom.getParent() ) );\n                        }\n                        else\n                        {\n                            LOGGER.fine( \"using maven 2 \" + mavenVersion );\n                            process =\n                                MavenBuild.mavenProcessCache.get( launcher.getChannel(), slistener,\n                                                                  new MavenProcessFactory( project, launcher, envVars,getMavenOpts(listener, envVars),\n                                                                                           pom.getParent() ) );\n                        }\n                        ArgumentListBuilder margs = new ArgumentListBuilder().add(\"-B\").add(\"-f\", pom.getRemote());\n                        if(project.usesPrivateRepository())\n                            margs.add(\"-Dmaven.repo.local=\"+getWorkspace().child(\".repository\"));\n\n                        if (project.globalSettingConfigPath != null)\n                            margs.add(\"-gs\" , project.globalSettingConfigPath);\n\n\n                        \n                        // If incrementalBuild is set\n                        // and the previous build didn't specify that we need a full build\n                        // and we're on Maven 2.1 or later\n                        // and there's at least one module listed in changedModules,\n                        // then do the Maven incremental build commands.\n                        // If there are no changed modules, we're building everything anyway.\n                        boolean maven2_1orLater = new ComparableVersion (mavenVersion).compareTo( new ComparableVersion (\"2.1\") ) >= 0;\n                        boolean needsFullBuild = getPreviousCompletedBuild() != null &&\n                            getPreviousCompletedBuild().getAction(NeedsFullBuildAction.class) != null;\n                        if (project.isIncrementalBuild() && !needsFullBuild && maven2_1orLater && !changedModules.isEmpty()) {\n                            margs.add(\"-amd\");\n                            margs.add(\"-pl\", Util.join(changedModules, \",\"));\n                        }\n\n                        if (project.getAlternateSettings() != null) {\n                            if (IOUtils.isAbsolute(project.getAlternateSettings())) {\n                                margs.add(\"-s\").add(project.getAlternateSettings());\n                            } else {\n                                FilePath mrSettings = getModuleRoot().child(project.getAlternateSettings());\n                                FilePath wsSettings = getWorkspace().child(project.getAlternateSettings());\n                                if (!wsSettings.exists() && mrSettings.exists())\n                                    wsSettings = mrSettings;\n                                \n                                margs.add(\"-s\").add(wsSettings.getRemote());\n                            }\n                        }\n\n\t\t\t\t\t\t// find the correct maven goals and options, there might by an action overruling the defaults\n                        // only one action is allowed to overwrite the hole \"goals and options\" string\n\t\t\t\t\t\tfinal MavenArgumentInterceptorAction interceptorAction = this.getBuild().getAction(MavenArgumentInterceptorAction.class);\n\t\t\t\t\t\tfinal String goals = interceptorAction != null && StringUtils.isNotBlank(interceptorAction.getGoalsAndOptions()) ? interceptorAction\n\t\t\t\t\t\t\t\t.getGoalsAndOptions() : project.getGoals();\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\tmargs.addTokenized(envVars.expand(goals));\n\n\t\t\t\t\t\t// enable the interceptors to change the whole command argument list\n\t\t\t\t\t\t// all available interceptors are allowed to modify the argument list\n\t\t\t\t\t\tfinal List<MavenArgumentInterceptorAction> argInterceptors = this.getBuild().getActions(MavenArgumentInterceptorAction.class);\n\t\t\t\t\t\tfor (MavenArgumentInterceptorAction mavenArgInterceptor : argInterceptors) {\n\t\t\t\t\t\t\tfinal ArgumentListBuilder newMargs = mavenArgInterceptor.intercept(margs);\n\t\t\t\t\t\t\tif (newMargs != null) {\n\t\t\t\t\t\t\t\tmargs = newMargs;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}                        \n                        \n                        if (maven3orLater)\n                        {   \n                            \n                            Map<ModuleName,List<MavenReporter>> reporters = new HashMap<ModuleName, List<MavenReporter>>(project.sortedActiveModules.size());\n                            for (MavenModule mavenModule : project.sortedActiveModules)\n                            {\n                                reporters.put( mavenModule.getModuleName(), mavenModule.createReporters() );\n                            }\n                            Maven3Builder maven3Builder = \n                                new Maven3Builder( slistener, proxies, reporters, margs.toList(), envVars, mavenBuildInformation );\n                            MavenProbeAction mpa=null;\n                            try {\n                                mpa = new MavenProbeAction(project,process.channel);\n                                addAction(mpa);\n                                r = process.call(maven3Builder);\n                                return r;\n                            } finally {\n                                maven3Builder.end(launcher);\n                                getActions().remove(mpa);\n                                process.discard();\n                            }                            \n                            \n                        } else {\n                         \n                            Maven2Builder builder = \n                                new Maven2Builder(slistener, proxies, project.sortedActiveModules, margs.toList(), envVars, mavenBuildInformation);\n                            MavenProbeAction mpa=null;\n                            try {\n                                mpa = new MavenProbeAction(project,process.channel);\n                                addAction(mpa);\n                                r = process.call(builder);\n                                return r;\n                            } finally {\n                                builder.end(launcher);\n                                getActions().remove(mpa);\n                                process.discard();\n                            }\n                        }\n                    } catch (InterruptedException e) {\n                        r = Executor.currentExecutor().abortResult();\n                        throw e;\n                    } finally {\n            \t\t\t// only run post build steps if requested...\n                        if (r==null || r.isBetterOrEqualTo(project.getRunPostStepsIfResult())) {\n                            if(!build(listener,project.getPostbuilders().toList())){\n                                r = FAILURE;\n            \t\t\t\t}\n            \t\t\t}\n            \t\t\t\n                        if (r != null) {\n                            setResult(r);\n                        }\n\n                        // tear down in reverse order\n                        boolean failed=false;\n                        for( int i=buildEnvironments.size()-1; i>=0; i-- ) {\n                            if (!buildEnvironments.get(i).tearDown(MavenModuleSetBuild.this,listener)) {\n                                failed=true;\n                            }                    \n                        }\n                        // WARNING The return in the finally clause will trump any return before\n                        if (failed) return Result.FAILURE;\n                    }\n                }\n                \n                \n                return r;\n            } catch (AbortException e) {\n                if(e.getMessage()!=null)\n                    listener.error(e.getMessage());\n                return Result.FAILURE;\n            } catch (InterruptedIOException e) {\n                e.printStackTrace(listener.error(\"Aborted Maven execution for InterruptedIOException\"));\n                return Executor.currentExecutor().abortResult();\n            } catch (IOException e) {\n                e.printStackTrace(listener.error(Messages.MavenModuleSetBuild_FailedToParsePom()));\n                return Result.FAILURE;\n            } catch (RunnerAbortedException e) {\n                return Result.FAILURE;\n            } catch (RuntimeException e) {\n                // bug in the code.\n                e.printStackTrace(listener.error(\"Processing failed due to a bug in the code. Please report this to jenkinsci-users@googlegroups.com\"));\n                logger.println(\"project=\"+project);\n                logger.println(\"project.getModules()=\"+project.getModules());\n                logger.println(\"project.getRootModule()=\"+project.getRootModule());\n                throw e;\n            } finally {\n                if (StringUtils.isNotBlank(project.getSettingConfigId())) {\n                    // restore to null if as was modified\n                    project.setAlternateSettings( null );\n                    project.save();\n                }\n                // delete tmp files used for MavenSettingsProvider\n                if (remoteSettings != null) {\n                    remoteSettings.delete();\n                }\n                if (remoteGlobalSettings != null ) {\n                    remoteGlobalSettings.delete();\n                }\n            }\n        }","id":61512,"modified_method":"protected Result doRun(final BuildListener listener) throws Exception {\n\n        \tResult r = null;\n        \tPrintStream logger = listener.getLogger();\n            FilePath remoteSettings = null, remoteGlobalSettings = null;\n\n            try {\n            \t\n                EnvVars envVars = getEnvironment(listener);\n                MavenInstallation mvn = project.getMaven();\n                if(mvn==null)\n                    throw new AbortException(Messages.MavenModuleSetBuild_NoMavenConfigured());\n\n                mvn = mvn.forEnvironment(envVars).forNode(Computer.currentComputer().getNode(), listener);\n                \n                MavenInformation mavenInformation = getModuleRoot().act( new MavenVersionCallable( mvn.getHome() ));\n                \n                String mavenVersion = mavenInformation.getVersion();\n                \n                MavenBuildInformation mavenBuildInformation = new MavenBuildInformation( mavenVersion );\n                \n                setMavenVersionUsed( mavenVersion );\n\n                LOGGER.fine(getFullDisplayName()+\" is building with mavenVersion \" + mavenVersion + \" from file \" + mavenInformation.getVersionResourcePath());\n\n                if(!project.isAggregatorStyleBuild()) {\n                    parsePoms(listener, logger, envVars, mvn, mavenVersion);\n                    // start module builds\n                    logger.println(\"Triggering \"+project.getRootModule().getModuleName());\n                    project.getRootModule().scheduleBuild(new UpstreamCause((Run<?,?>)MavenModuleSetBuild.this));\n                } else {\n                    // do builds here\n                    try {\n                        List<BuildWrapper> wrappers = new ArrayList<BuildWrapper>();\n                        for (BuildWrapper w : project.getBuildWrappersList())\n                            wrappers.add(w);\n                        ParametersAction parameters = getAction(ParametersAction.class);\n                        if (parameters != null)\n                            parameters.createBuildWrappers(MavenModuleSetBuild.this,wrappers);\n\n                        for( BuildWrapper w : wrappers) {\n                            Environment e = w.setUp(MavenModuleSetBuild.this, launcher, listener);\n                            if(e==null)\n                                return (r = Result.FAILURE);\n                            buildEnvironments.add(e);\n                            e.buildEnvVars(envVars); // #3502: too late for getEnvironment to do this\n                        }\n\n                    \t// run pre build steps\n                    \tif(!preBuild(listener,project.getPrebuilders())\n                        || !preBuild(listener,project.getPostbuilders())\n                        || !preBuild(listener,project.getPublishers())){\n                    \t\tr = FAILURE;\n                            return r;\n                    \t}\n\n                    \tif(!build(listener,project.getPrebuilders().toList())){\n                    \t\tr = FAILURE;\n                            return r;\n            \t\t\t}\n\n                        String settingsConfigId = project.getSettingConfigId();\n                        if (StringUtils.isNotBlank(settingsConfigId)) {\n                            Config settingsConfig = SettingsProviderUtils.findConfig( settingsConfigId, MavenSettingsProvider.class, org.jenkinsci.lib.configprovider.maven.MavenSettingsProvider.class );\n                            if (settingsConfig == null) {\n                                logger.println(\" your Apache Maven build is setup to use a config with id \" + settingsConfigId\n                                                   + \" but cannot find the config\");\n                            } else {\n                                logger.println(\"using settings config with name \" + settingsConfig.name);\n                                if (settingsConfig.content != null ) {\n                                    remoteSettings = SettingsProviderUtils.copyConfigContentToFilePath( settingsConfig, getWorkspace() );\n                                    project.setAlternateSettings( remoteSettings.getRemote() );\n                                }\n                            }\n                        }\n\n                        String globalSettingsConfigId = project.getGlobalSettingConfigId();\n                        if (StringUtils.isNotBlank(globalSettingsConfigId)) {\n                            Config settingsConfig = SettingsProviderUtils.findConfig( globalSettingsConfigId, GlobalMavenSettingsProvider.class, org.jenkinsci.lib.configprovider.maven.GlobalMavenSettingsProvider.class );\n                            if (settingsConfig == null) {\n                                logger.println(\" your Apache Maven build is setup to use a global settings config with id \" + globalSettingsConfigId\n                                                   + \" but cannot find the config\");\n                            } else {\n                                logger.println(\"using global settings config with name \" + settingsConfig.name);\n                                if (settingsConfig.content != null ) {\n                                    remoteGlobalSettings = SettingsProviderUtils.copyConfigContentToFilePath( settingsConfig, getWorkspace() );\n                                    project.globalSettingConfigPath = remoteGlobalSettings.getRemote();\n                                }\n                            }\n                        } else {\n                        \t// make sure the transient field is clean\n                        \tproject.globalSettingConfigPath = null;\n                        }\n\n                        parsePoms(listener, logger, envVars, mvn, mavenVersion); // #5428 : do pre-build *before* parsing pom\n                        SplittableBuildListener slistener = new SplittableBuildListener(listener);\n                        proxies = new HashMap<ModuleName, ProxyImpl2>();\n                        List<ModuleName> changedModules = new ArrayList<ModuleName>();\n                        \n                        if (project.isIncrementalBuild() && !getChangeSet().isEmptySet()) {\n                            changedModules.addAll(getUnbuildModulesSinceLastSuccessfulBuild());\n                        }\n\n                        for (MavenModule m : project.sortedActiveModules) {\n                            MavenBuild mb = m.newBuild();\n                            // JENKINS-8418\n                            mb.setBuiltOnStr( getBuiltOnStr() );\n                            // Check if incrementalBuild is selected and that there are changes -\n                            // we act as if incrementalBuild is not set if there are no changes.\n                            if (!MavenModuleSetBuild.this.getChangeSet().isEmptySet()\n                                && project.isIncrementalBuild()) {\n                                //If there are changes for this module, add it.\n                                // Also add it if we've never seen this module before,\n                                // or if the previous build of this module failed or was unstable.\n                                if ((mb.getPreviousBuiltBuild() == null) ||\n                                    (!getChangeSetFor(m).isEmpty()) \n                                    || (mb.getPreviousBuiltBuild().getResult().isWorseThan(Result.SUCCESS))) {\n                                    changedModules.add(m.getModuleName());\n                                }\n                            }\n\n                            mb.setWorkspace(getModuleRoot().child(m.getRelativePath()));\n                            proxies.put(m.getModuleName(), mb.new ProxyImpl2(MavenModuleSetBuild.this,slistener));\n                        }\n\n                        // run the complete build here\n\n                        // figure out the root POM location.\n                        // choice of module root ('ws' in this method) is somewhat arbitrary\n                        // when multiple CVS/SVN modules are checked out, so also check\n                        // the path against the workspace root if that seems like what the user meant (see issue #1293)\n                        String rootPOM = project.getRootPOM();\n                        FilePath pom = getModuleRoot().child(rootPOM);\n                        FilePath parentLoc = getWorkspace().child(rootPOM);\n                        if(!pom.exists() && parentLoc.exists())\n                            pom = parentLoc;\n\n                        \n                        ProcessCache.MavenProcess process = null;\n                        \n                        boolean maven3orLater = mavenBuildInformation.isMaven3OrLater(); \n                        if ( maven3orLater )\n                        {\n                            LOGGER.fine( \"using maven 3 \" + mavenVersion );\n                            process =\n                                MavenBuild.mavenProcessCache.get( launcher.getChannel(), slistener,\n                                                                  new Maven3ProcessFactory( project, launcher, envVars, getMavenOpts(listener, envVars),\n                                                                                            pom.getParent() ) );\n                        }\n                        else\n                        {\n                            LOGGER.fine( \"using maven 2 \" + mavenVersion );\n                            process =\n                                MavenBuild.mavenProcessCache.get( launcher.getChannel(), slistener,\n                                                                  new MavenProcessFactory( project, launcher, envVars,getMavenOpts(listener, envVars),\n                                                                                           pom.getParent() ) );\n                        }\n                        ArgumentListBuilder margs = new ArgumentListBuilder().add(\"-B\").add(\"-f\", pom.getRemote());\n                        if(project.usesPrivateRepository())\n                            margs.add(\"-Dmaven.repo.local=\"+getWorkspace().child(\".repository\"));\n\n                        if (project.globalSettingConfigPath != null)\n                            margs.add(\"-gs\" , project.globalSettingConfigPath);\n\n\n                        \n                        // If incrementalBuild is set\n                        // and the previous build didn't specify that we need a full build\n                        // and we're on Maven 2.1 or later\n                        // and there's at least one module listed in changedModules,\n                        // then do the Maven incremental build commands.\n                        // If there are no changed modules, we're building everything anyway.\n                        boolean maven2_1orLater = new ComparableVersion (mavenVersion).compareTo( new ComparableVersion (\"2.1\") ) >= 0;\n                        boolean needsFullBuild = getPreviousCompletedBuild() != null &&\n                            getPreviousCompletedBuild().getAction(NeedsFullBuildAction.class) != null;\n                        if (project.isIncrementalBuild() && !needsFullBuild && maven2_1orLater && !changedModules.isEmpty()) {\n                            margs.add(\"-amd\");\n                            margs.add(\"-pl\", Util.join(changedModules, \",\"));\n                        }\n\n                        if (project.getAlternateSettings() != null) {\n                            if (IOUtils.isAbsolute(project.getAlternateSettings())) {\n                                margs.add(\"-s\").add(project.getAlternateSettings());\n                            } else {\n                                FilePath mrSettings = getModuleRoot().child(project.getAlternateSettings());\n                                FilePath wsSettings = getWorkspace().child(project.getAlternateSettings());\n                                if (!wsSettings.exists() && mrSettings.exists())\n                                    wsSettings = mrSettings;\n                                \n                                margs.add(\"-s\").add(wsSettings.getRemote());\n                            }\n                        }\n\n                        \n                        final List<MavenArgumentInterceptorAction> argInterceptors = this.getBuild().getActions(MavenArgumentInterceptorAction.class);\n                        \n\t\t\t\t\t\t// find the correct maven goals and options, there might by an action overruling the defaults\n                        String goals = project.getGoals(); // default\n                        for (MavenArgumentInterceptorAction mavenArgInterceptor : argInterceptors) {\n                        \tif(StringUtils.isNotBlank(mavenArgInterceptor.getGoalsAndOptions())){\n                        \t\tgoals = mavenArgInterceptor.getGoalsAndOptions();\n                                // only one interceptor is allowed to overwrite the whole \"goals and options\" string\n                        \t\tbreak;\n                        \t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmargs.addTokenized(envVars.expand(goals));\n\n\t\t\t\t\t\t// enable the interceptors to change the whole command argument list\n\t\t\t\t\t\t// all available interceptors are allowed to modify the argument list\n\t\t\t\t\t\tfor (MavenArgumentInterceptorAction mavenArgInterceptor : argInterceptors) {\n\t\t\t\t\t\t\tfinal ArgumentListBuilder newMargs = mavenArgInterceptor.intercept(margs);\n\t\t\t\t\t\t\tif (newMargs != null) {\n\t\t\t\t\t\t\t\tmargs = newMargs;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}                        \n                        \n                        if (maven3orLater)\n                        {   \n                            \n                            Map<ModuleName,List<MavenReporter>> reporters = new HashMap<ModuleName, List<MavenReporter>>(project.sortedActiveModules.size());\n                            for (MavenModule mavenModule : project.sortedActiveModules)\n                            {\n                                reporters.put( mavenModule.getModuleName(), mavenModule.createReporters() );\n                            }\n                            Maven3Builder maven3Builder = \n                                new Maven3Builder( slistener, proxies, reporters, margs.toList(), envVars, mavenBuildInformation );\n                            MavenProbeAction mpa=null;\n                            try {\n                                mpa = new MavenProbeAction(project,process.channel);\n                                addAction(mpa);\n                                r = process.call(maven3Builder);\n                                return r;\n                            } finally {\n                                maven3Builder.end(launcher);\n                                getActions().remove(mpa);\n                                process.discard();\n                            }                            \n                            \n                        } else {\n                         \n                            Maven2Builder builder = \n                                new Maven2Builder(slistener, proxies, project.sortedActiveModules, margs.toList(), envVars, mavenBuildInformation);\n                            MavenProbeAction mpa=null;\n                            try {\n                                mpa = new MavenProbeAction(project,process.channel);\n                                addAction(mpa);\n                                r = process.call(builder);\n                                return r;\n                            } finally {\n                                builder.end(launcher);\n                                getActions().remove(mpa);\n                                process.discard();\n                            }\n                        }\n                    } catch (InterruptedException e) {\n                        r = Executor.currentExecutor().abortResult();\n                        throw e;\n                    } finally {\n            \t\t\t// only run post build steps if requested...\n                        if (r==null || r.isBetterOrEqualTo(project.getRunPostStepsIfResult())) {\n                            if(!build(listener,project.getPostbuilders().toList())){\n                                r = FAILURE;\n            \t\t\t\t}\n            \t\t\t}\n            \t\t\t\n                        if (r != null) {\n                            setResult(r);\n                        }\n\n                        // tear down in reverse order\n                        boolean failed=false;\n                        for( int i=buildEnvironments.size()-1; i>=0; i-- ) {\n                            if (!buildEnvironments.get(i).tearDown(MavenModuleSetBuild.this,listener)) {\n                                failed=true;\n                            }                    \n                        }\n                        // WARNING The return in the finally clause will trump any return before\n                        if (failed) return Result.FAILURE;\n                    }\n                }\n                \n                \n                return r;\n            } catch (AbortException e) {\n                if(e.getMessage()!=null)\n                    listener.error(e.getMessage());\n                return Result.FAILURE;\n            } catch (InterruptedIOException e) {\n                e.printStackTrace(listener.error(\"Aborted Maven execution for InterruptedIOException\"));\n                return Executor.currentExecutor().abortResult();\n            } catch (IOException e) {\n                e.printStackTrace(listener.error(Messages.MavenModuleSetBuild_FailedToParsePom()));\n                return Result.FAILURE;\n            } catch (RunnerAbortedException e) {\n                return Result.FAILURE;\n            } catch (RuntimeException e) {\n                // bug in the code.\n                e.printStackTrace(listener.error(\"Processing failed due to a bug in the code. Please report this to jenkinsci-users@googlegroups.com\"));\n                logger.println(\"project=\"+project);\n                logger.println(\"project.getModules()=\"+project.getModules());\n                logger.println(\"project.getRootModule()=\"+project.getRootModule());\n                throw e;\n            } finally {\n                if (StringUtils.isNotBlank(project.getSettingConfigId())) {\n                    // restore to null if as was modified\n                    project.setAlternateSettings( null );\n                    project.save();\n                }\n                // delete tmp files used for MavenSettingsProvider\n                if (remoteSettings != null) {\n                    remoteSettings.delete();\n                }\n                if (remoteGlobalSettings != null ) {\n                    remoteGlobalSettings.delete();\n                }\n            }\n        }","commit_id":"025cfd311a8835f0fc161e369393ca5df4182cd4","url":"https://github.com/kohsuke/hudson"},{"original_method":"protected Result doRun(final BuildListener listener) throws Exception {\n\n        \tResult r = null;\n        \tPrintStream logger = listener.getLogger();\n            FilePath remoteSettings = null, remoteGlobalSettings = null;\n\n            try {\n            \t\n                EnvVars envVars = getEnvironment(listener);\n                MavenInstallation mvn = project.getMaven();\n                if(mvn==null)\n                    throw new AbortException(Messages.MavenModuleSetBuild_NoMavenConfigured());\n\n                mvn = mvn.forEnvironment(envVars).forNode(Computer.currentComputer().getNode(), listener);\n                \n                MavenInformation mavenInformation = getModuleRoot().act( new MavenVersionCallable( mvn.getHome() ));\n                \n                String mavenVersion = mavenInformation.getVersion();\n                \n                MavenBuildInformation mavenBuildInformation = new MavenBuildInformation( mavenVersion );\n                \n                setMavenVersionUsed( mavenVersion );\n\n                LOGGER.fine(getFullDisplayName()+\" is building with mavenVersion \" + mavenVersion + \" from file \" + mavenInformation.getVersionResourcePath());\n\n                if(!project.isAggregatorStyleBuild()) {\n                    parsePoms(listener, logger, envVars, mvn, mavenVersion);\n                    // start module builds\n                    logger.println(\"Triggering \"+project.getRootModule().getModuleName());\n                    project.getRootModule().scheduleBuild(new UpstreamCause((Run<?,?>)MavenModuleSetBuild.this));\n                } else {\n                    // do builds here\n                    try {\n                        List<BuildWrapper> wrappers = new ArrayList<BuildWrapper>();\n                        for (BuildWrapper w : project.getBuildWrappersList())\n                            wrappers.add(w);\n                        ParametersAction parameters = getAction(ParametersAction.class);\n                        if (parameters != null)\n                            parameters.createBuildWrappers(MavenModuleSetBuild.this,wrappers);\n\n                        for( BuildWrapper w : wrappers) {\n                            Environment e = w.setUp(MavenModuleSetBuild.this, launcher, listener);\n                            if(e==null)\n                                return (r = Result.FAILURE);\n                            buildEnvironments.add(e);\n                            e.buildEnvVars(envVars); // #3502: too late for getEnvironment to do this\n                        }\n\n                    \t// run pre build steps\n                    \tif(!preBuild(listener,project.getPrebuilders())\n                        || !preBuild(listener,project.getPostbuilders())\n                        || !preBuild(listener,project.getPublishers())){\n                    \t\tr = FAILURE;\n                            return r;\n                    \t}\n\n                    \tif(!build(listener,project.getPrebuilders().toList())){\n                    \t\tr = FAILURE;\n                            return r;\n            \t\t\t}\n\n                        String settingsConfigId = project.getSettingConfigId();\n                        if (StringUtils.isNotBlank(settingsConfigId)) {\n                            Config settingsConfig = SettingsProviderUtils.findConfig( settingsConfigId, MavenSettingsProvider.class, org.jenkinsci.lib.configprovider.maven.MavenSettingsProvider.class );\n                            if (settingsConfig == null) {\n                                logger.println(\" your Apache Maven build is setup to use a config with id \" + settingsConfigId\n                                                   + \" but cannot find the config\");\n                            } else {\n                                logger.println(\"using settings config with name \" + settingsConfig.name);\n                                if (settingsConfig.content != null ) {\n                                    remoteSettings = SettingsProviderUtils.copyConfigContentToFilePath( settingsConfig, getWorkspace() );\n                                    project.setAlternateSettings( remoteSettings.getRemote() );\n                                }\n                            }\n                        }\n\n                        String globalSettingsConfigId = project.getGlobalSettingConfigId();\n                        if (StringUtils.isNotBlank(globalSettingsConfigId)) {\n                            Config settingsConfig = SettingsProviderUtils.findConfig( globalSettingsConfigId, GlobalMavenSettingsProvider.class, org.jenkinsci.lib.configprovider.maven.GlobalMavenSettingsProvider.class );\n                            if (settingsConfig == null) {\n                                logger.println(\" your Apache Maven build is setup to use a global settings config with id \" + globalSettingsConfigId\n                                                   + \" but cannot find the config\");\n                            } else {\n                                logger.println(\"using global settings config with name \" + settingsConfig.name);\n                                if (settingsConfig.content != null ) {\n                                    remoteGlobalSettings = SettingsProviderUtils.copyConfigContentToFilePath( settingsConfig, getWorkspace() );\n                                    project.globalSettingConfigPath = remoteGlobalSettings.getRemote();\n                                }\n                            }\n                        } else {\n                        \t// make sure the transient field is clean\n                        \tproject.globalSettingConfigPath = null;\n                        }\n\n                        parsePoms(listener, logger, envVars, mvn, mavenVersion); // #5428 : do pre-build *before* parsing pom\n                        SplittableBuildListener slistener = new SplittableBuildListener(listener);\n                        proxies = new HashMap<ModuleName, ProxyImpl2>();\n                        List<ModuleName> changedModules = new ArrayList<ModuleName>();\n                        \n                        if (project.isIncrementalBuild() && !getChangeSet().isEmptySet()) {\n                            changedModules.addAll(getUnbuildModulesSinceLastSuccessfulBuild());\n                        }\n\n                        for (MavenModule m : project.sortedActiveModules) {\n                            MavenBuild mb = m.newBuild();\n                            // JENKINS-8418\n                            mb.setBuiltOnStr( getBuiltOnStr() );\n                            // Check if incrementalBuild is selected and that there are changes -\n                            // we act as if incrementalBuild is not set if there are no changes.\n                            if (!MavenModuleSetBuild.this.getChangeSet().isEmptySet()\n                                && project.isIncrementalBuild()) {\n                                //If there are changes for this module, add it.\n                                // Also add it if we've never seen this module before,\n                                // or if the previous build of this module failed or was unstable.\n                                if ((mb.getPreviousBuiltBuild() == null) ||\n                                    (!getChangeSetFor(m).isEmpty()) \n                                    || (mb.getPreviousBuiltBuild().getResult().isWorseThan(Result.SUCCESS))) {\n                                    changedModules.add(m.getModuleName());\n                                }\n                            }\n\n                            mb.setWorkspace(getModuleRoot().child(m.getRelativePath()));\n                            proxies.put(m.getModuleName(), mb.new ProxyImpl2(MavenModuleSetBuild.this,slistener));\n                        }\n\n                        // run the complete build here\n\n                        // figure out the root POM location.\n                        // choice of module root ('ws' in this method) is somewhat arbitrary\n                        // when multiple CVS/SVN modules are checked out, so also check\n                        // the path against the workspace root if that seems like what the user meant (see issue #1293)\n                        String rootPOM = project.getRootPOM();\n                        FilePath pom = getModuleRoot().child(rootPOM);\n                        FilePath parentLoc = getWorkspace().child(rootPOM);\n                        if(!pom.exists() && parentLoc.exists())\n                            pom = parentLoc;\n\n                        \n                        ProcessCache.MavenProcess process = null;\n                        \n                        boolean maven3orLater = mavenBuildInformation.isMaven3OrLater(); \n                        if ( maven3orLater )\n                        {\n                            LOGGER.fine( \"using maven 3 \" + mavenVersion );\n                            process =\n                                MavenBuild.mavenProcessCache.get( launcher.getChannel(), slistener,\n                                                                  new Maven3ProcessFactory( project, launcher, envVars, getMavenOpts(listener, envVars),\n                                                                                            pom.getParent() ) );\n                        }\n                        else\n                        {\n                            LOGGER.fine( \"using maven 2 \" + mavenVersion );\n                            process =\n                                MavenBuild.mavenProcessCache.get( launcher.getChannel(), slistener,\n                                                                  new MavenProcessFactory( project, launcher, envVars,getMavenOpts(listener, envVars),\n                                                                                           pom.getParent() ) );\n                        }\n                        ArgumentListBuilder margs = new ArgumentListBuilder().add(\"-B\").add(\"-f\", pom.getRemote());\n                        if(project.usesPrivateRepository())\n                            margs.add(\"-Dmaven.repo.local=\"+getWorkspace().child(\".repository\"));\n\n                        if (project.globalSettingConfigPath != null)\n                            margs.add(\"-gs\" , project.globalSettingConfigPath);\n\n\n                        \n                        // If incrementalBuild is set\n                        // and the previous build didn't specify that we need a full build\n                        // and we're on Maven 2.1 or later\n                        // and there's at least one module listed in changedModules,\n                        // then do the Maven incremental build commands.\n                        // If there are no changed modules, we're building everything anyway.\n                        boolean maven2_1orLater = new ComparableVersion (mavenVersion).compareTo( new ComparableVersion (\"2.1\") ) >= 0;\n                        boolean needsFullBuild = getPreviousCompletedBuild() != null &&\n                            getPreviousCompletedBuild().getAction(NeedsFullBuildAction.class) != null;\n                        if (project.isIncrementalBuild() && !needsFullBuild && maven2_1orLater && !changedModules.isEmpty()) {\n                            margs.add(\"-amd\");\n                            margs.add(\"-pl\", Util.join(changedModules, \",\"));\n                        }\n\n                        if (project.getAlternateSettings() != null) {\n                            if (IOUtils.isAbsolute(project.getAlternateSettings())) {\n                                margs.add(\"-s\").add(project.getAlternateSettings());\n                            } else {\n                                FilePath mrSettings = getModuleRoot().child(project.getAlternateSettings());\n                                FilePath wsSettings = getWorkspace().child(project.getAlternateSettings());\n                                if (!wsSettings.exists() && mrSettings.exists())\n                                    wsSettings = mrSettings;\n                                \n                                margs.add(\"-s\").add(wsSettings.getRemote());\n                            }\n                        }\n\n\t\t\t\t\t\t// find the correct maven goals and options, there might by an action overruling the defaults\n                        // only one action is allowed to overwrite the hole \"goals and options\" string\n\t\t\t\t\t\tfinal MavenArgumentInterceptorAction interceptorAction = this.getBuild().getAction(MavenArgumentInterceptorAction.class);\n\t\t\t\t\t\tfinal String goals = interceptorAction != null && StringUtils.isNotBlank(interceptorAction.getGoalsAndOptions()) ? interceptorAction\n\t\t\t\t\t\t\t\t.getGoalsAndOptions() : project.getGoals();\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\tmargs.addTokenized(envVars.expand(goals));\n\n\t\t\t\t\t\t// enable the interceptors to change the whole command argument list\n\t\t\t\t\t\t// all available interceptors are allowed to modify the argument list\n\t\t\t\t\t\tfinal List<MavenArgumentInterceptorAction> argInterceptors = this.getBuild().getActions(MavenArgumentInterceptorAction.class);\n\t\t\t\t\t\tfor (MavenArgumentInterceptorAction mavenArgInterceptor : argInterceptors) {\n\t\t\t\t\t\t\tfinal ArgumentListBuilder newMargs = mavenArgInterceptor.intercept(margs);\n\t\t\t\t\t\t\tif (newMargs != null) {\n\t\t\t\t\t\t\t\tmargs = newMargs;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}                        \n                        \n                        if (maven3orLater)\n                        {   \n                            \n                            Map<ModuleName,List<MavenReporter>> reporters = new HashMap<ModuleName, List<MavenReporter>>(project.sortedActiveModules.size());\n                            for (MavenModule mavenModule : project.sortedActiveModules)\n                            {\n                                reporters.put( mavenModule.getModuleName(), mavenModule.createReporters() );\n                            }\n                            Maven3Builder maven3Builder = \n                                new Maven3Builder( slistener, proxies, reporters, margs.toList(), envVars, mavenBuildInformation );\n                            MavenProbeAction mpa=null;\n                            try {\n                                mpa = new MavenProbeAction(project,process.channel);\n                                addAction(mpa);\n                                r = process.call(maven3Builder);\n                                return r;\n                            } finally {\n                                maven3Builder.end(launcher);\n                                getActions().remove(mpa);\n                                process.discard();\n                            }                            \n                            \n                        } else {\n                         \n                            Maven2Builder builder = \n                                new Maven2Builder(slistener, proxies, project.sortedActiveModules, margs.toList(), envVars, mavenBuildInformation);\n                            MavenProbeAction mpa=null;\n                            try {\n                                mpa = new MavenProbeAction(project,process.channel);\n                                addAction(mpa);\n                                r = process.call(builder);\n                                return r;\n                            } finally {\n                                builder.end(launcher);\n                                getActions().remove(mpa);\n                                process.discard();\n                            }\n                        }\n                    } catch (InterruptedException e) {\n                        r = Executor.currentExecutor().abortResult();\n                        throw e;\n                    } finally {\n            \t\t\t// only run post build steps if requested...\n                        if (r==null || r.isBetterOrEqualTo(project.getRunPostStepsIfResult())) {\n                            if(!build(listener,project.getPostbuilders().toList())){\n                                r = FAILURE;\n            \t\t\t\t}\n            \t\t\t}\n            \t\t\t\n                        if (r != null) {\n                            setResult(r);\n                        }\n\n                        // tear down in reverse order\n                        boolean failed=false;\n                        for( int i=buildEnvironments.size()-1; i>=0; i-- ) {\n                            if (!buildEnvironments.get(i).tearDown(MavenModuleSetBuild.this,listener)) {\n                                failed=true;\n                            }                    \n                        }\n                        // WARNING The return in the finally clause will trump any return before\n                        if (failed) return Result.FAILURE;\n                    }\n                }\n                \n                \n                return r;\n            } catch (AbortException e) {\n                if(e.getMessage()!=null)\n                    listener.error(e.getMessage());\n                return Result.FAILURE;\n            } catch (InterruptedIOException e) {\n                e.printStackTrace(listener.error(\"Aborted Maven execution for InterruptedIOException\"));\n                return Executor.currentExecutor().abortResult();\n            } catch (IOException e) {\n                e.printStackTrace(listener.error(Messages.MavenModuleSetBuild_FailedToParsePom()));\n                return Result.FAILURE;\n            } catch (RunnerAbortedException e) {\n                return Result.FAILURE;\n            } catch (RuntimeException e) {\n                // bug in the code.\n                e.printStackTrace(listener.error(\"Processing failed due to a bug in the code. Please report this to jenkinsci-users@googlegroups.com\"));\n                logger.println(\"project=\"+project);\n                logger.println(\"project.getModules()=\"+project.getModules());\n                logger.println(\"project.getRootModule()=\"+project.getRootModule());\n                throw e;\n            } finally {\n                if (StringUtils.isNotBlank(project.getSettingConfigId())) {\n                    // restore to null if as was modified\n                    project.setAlternateSettings( null );\n                    project.save();\n                }\n                // delete tmp files used for MavenSettingsProvider\n                if (remoteSettings != null) {\n                    remoteSettings.delete();\n                }\n                if (remoteGlobalSettings != null ) {\n                    remoteGlobalSettings.delete();\n                }\n            }\n        }","id":61513,"modified_method":"protected Result doRun(final BuildListener listener) throws Exception {\n\n        \tResult r = null;\n        \tPrintStream logger = listener.getLogger();\n            FilePath remoteSettings = null, remoteGlobalSettings = null;\n\n            try {\n            \t\n                EnvVars envVars = getEnvironment(listener);\n                MavenInstallation mvn = project.getMaven();\n                if(mvn==null)\n                    throw new AbortException(Messages.MavenModuleSetBuild_NoMavenConfigured());\n\n                mvn = mvn.forEnvironment(envVars).forNode(Computer.currentComputer().getNode(), listener);\n                \n                MavenInformation mavenInformation = getModuleRoot().act( new MavenVersionCallable( mvn.getHome() ));\n                \n                String mavenVersion = mavenInformation.getVersion();\n                \n                MavenBuildInformation mavenBuildInformation = new MavenBuildInformation( mavenVersion );\n                \n                setMavenVersionUsed( mavenVersion );\n\n                LOGGER.fine(getFullDisplayName()+\" is building with mavenVersion \" + mavenVersion + \" from file \" + mavenInformation.getVersionResourcePath());\n\n                if(!project.isAggregatorStyleBuild()) {\n                    parsePoms(listener, logger, envVars, mvn, mavenVersion);\n                    // start module builds\n                    logger.println(\"Triggering \"+project.getRootModule().getModuleName());\n                    project.getRootModule().scheduleBuild(new UpstreamCause((Run<?,?>)MavenModuleSetBuild.this));\n                } else {\n                    // do builds here\n                    try {\n                        List<BuildWrapper> wrappers = new ArrayList<BuildWrapper>();\n                        for (BuildWrapper w : project.getBuildWrappersList())\n                            wrappers.add(w);\n                        ParametersAction parameters = getAction(ParametersAction.class);\n                        if (parameters != null)\n                            parameters.createBuildWrappers(MavenModuleSetBuild.this,wrappers);\n\n                        for( BuildWrapper w : wrappers) {\n                            Environment e = w.setUp(MavenModuleSetBuild.this, launcher, listener);\n                            if(e==null)\n                                return (r = Result.FAILURE);\n                            buildEnvironments.add(e);\n                            e.buildEnvVars(envVars); // #3502: too late for getEnvironment to do this\n                        }\n\n                    \t// run pre build steps\n                    \tif(!preBuild(listener,project.getPrebuilders())\n                        || !preBuild(listener,project.getPostbuilders())\n                        || !preBuild(listener,project.getPublishers())){\n                    \t\tr = FAILURE;\n                            return r;\n                    \t}\n\n                    \tif(!build(listener,project.getPrebuilders().toList())){\n                    \t\tr = FAILURE;\n                            return r;\n            \t\t\t}\n\n                        String settingsConfigId = project.getSettingConfigId();\n                        if (StringUtils.isNotBlank(settingsConfigId)) {\n                            Config settingsConfig = SettingsProviderUtils.findConfig( settingsConfigId, MavenSettingsProvider.class, org.jenkinsci.lib.configprovider.maven.MavenSettingsProvider.class );\n                            if (settingsConfig == null) {\n                                logger.println(\" your Apache Maven build is setup to use a config with id \" + settingsConfigId\n                                                   + \" but cannot find the config\");\n                            } else {\n                                logger.println(\"using settings config with name \" + settingsConfig.name);\n                                if (settingsConfig.content != null ) {\n                                    remoteSettings = SettingsProviderUtils.copyConfigContentToFilePath( settingsConfig, getWorkspace() );\n                                    project.setAlternateSettings( remoteSettings.getRemote() );\n                                }\n                            }\n                        }\n\n                        String globalSettingsConfigId = project.getGlobalSettingConfigId();\n                        if (StringUtils.isNotBlank(globalSettingsConfigId)) {\n                            Config settingsConfig = SettingsProviderUtils.findConfig( globalSettingsConfigId, GlobalMavenSettingsProvider.class, org.jenkinsci.lib.configprovider.maven.GlobalMavenSettingsProvider.class );\n                            if (settingsConfig == null) {\n                                logger.println(\" your Apache Maven build is setup to use a global settings config with id \" + globalSettingsConfigId\n                                                   + \" but cannot find the config\");\n                            } else {\n                                logger.println(\"using global settings config with name \" + settingsConfig.name);\n                                if (settingsConfig.content != null ) {\n                                    remoteGlobalSettings = SettingsProviderUtils.copyConfigContentToFilePath( settingsConfig, getWorkspace() );\n                                    project.globalSettingConfigPath = remoteGlobalSettings.getRemote();\n                                }\n                            }\n                        } else {\n                        \t// make sure the transient field is clean\n                        \tproject.globalSettingConfigPath = null;\n                        }\n\n                        parsePoms(listener, logger, envVars, mvn, mavenVersion); // #5428 : do pre-build *before* parsing pom\n                        SplittableBuildListener slistener = new SplittableBuildListener(listener);\n                        proxies = new HashMap<ModuleName, ProxyImpl2>();\n                        List<ModuleName> changedModules = new ArrayList<ModuleName>();\n                        \n                        if (project.isIncrementalBuild() && !getChangeSet().isEmptySet()) {\n                            changedModules.addAll(getUnbuildModulesSinceLastSuccessfulBuild());\n                        }\n\n                        for (MavenModule m : project.sortedActiveModules) {\n                            MavenBuild mb = m.newBuild();\n                            // JENKINS-8418\n                            mb.setBuiltOnStr( getBuiltOnStr() );\n                            // Check if incrementalBuild is selected and that there are changes -\n                            // we act as if incrementalBuild is not set if there are no changes.\n                            if (!MavenModuleSetBuild.this.getChangeSet().isEmptySet()\n                                && project.isIncrementalBuild()) {\n                                //If there are changes for this module, add it.\n                                // Also add it if we've never seen this module before,\n                                // or if the previous build of this module failed or was unstable.\n                                if ((mb.getPreviousBuiltBuild() == null) ||\n                                    (!getChangeSetFor(m).isEmpty()) \n                                    || (mb.getPreviousBuiltBuild().getResult().isWorseThan(Result.SUCCESS))) {\n                                    changedModules.add(m.getModuleName());\n                                }\n                            }\n\n                            mb.setWorkspace(getModuleRoot().child(m.getRelativePath()));\n                            proxies.put(m.getModuleName(), mb.new ProxyImpl2(MavenModuleSetBuild.this,slistener));\n                        }\n\n                        // run the complete build here\n\n                        // figure out the root POM location.\n                        // choice of module root ('ws' in this method) is somewhat arbitrary\n                        // when multiple CVS/SVN modules are checked out, so also check\n                        // the path against the workspace root if that seems like what the user meant (see issue #1293)\n                        String rootPOM = project.getRootPOM();\n                        FilePath pom = getModuleRoot().child(rootPOM);\n                        FilePath parentLoc = getWorkspace().child(rootPOM);\n                        if(!pom.exists() && parentLoc.exists())\n                            pom = parentLoc;\n\n                        \n                        ProcessCache.MavenProcess process = null;\n                        \n                        boolean maven3orLater = mavenBuildInformation.isMaven3OrLater(); \n                        if ( maven3orLater )\n                        {\n                            LOGGER.fine( \"using maven 3 \" + mavenVersion );\n                            process =\n                                MavenBuild.mavenProcessCache.get( launcher.getChannel(), slistener,\n                                                                  new Maven3ProcessFactory( project, launcher, envVars, getMavenOpts(listener, envVars),\n                                                                                            pom.getParent() ) );\n                        }\n                        else\n                        {\n                            LOGGER.fine( \"using maven 2 \" + mavenVersion );\n                            process =\n                                MavenBuild.mavenProcessCache.get( launcher.getChannel(), slistener,\n                                                                  new MavenProcessFactory( project, launcher, envVars,getMavenOpts(listener, envVars),\n                                                                                           pom.getParent() ) );\n                        }\n                        ArgumentListBuilder margs = new ArgumentListBuilder().add(\"-B\").add(\"-f\", pom.getRemote());\n                        if(project.usesPrivateRepository())\n                            margs.add(\"-Dmaven.repo.local=\"+getWorkspace().child(\".repository\"));\n\n                        if (project.globalSettingConfigPath != null)\n                            margs.add(\"-gs\" , project.globalSettingConfigPath);\n\n\n                        \n                        // If incrementalBuild is set\n                        // and the previous build didn't specify that we need a full build\n                        // and we're on Maven 2.1 or later\n                        // and there's at least one module listed in changedModules,\n                        // then do the Maven incremental build commands.\n                        // If there are no changed modules, we're building everything anyway.\n                        boolean maven2_1orLater = new ComparableVersion (mavenVersion).compareTo( new ComparableVersion (\"2.1\") ) >= 0;\n                        boolean needsFullBuild = getPreviousCompletedBuild() != null &&\n                            getPreviousCompletedBuild().getAction(NeedsFullBuildAction.class) != null;\n                        if (project.isIncrementalBuild() && !needsFullBuild && maven2_1orLater && !changedModules.isEmpty()) {\n                            margs.add(\"-amd\");\n                            margs.add(\"-pl\", Util.join(changedModules, \",\"));\n                        }\n\n                        if (project.getAlternateSettings() != null) {\n                            if (IOUtils.isAbsolute(project.getAlternateSettings())) {\n                                margs.add(\"-s\").add(project.getAlternateSettings());\n                            } else {\n                                FilePath mrSettings = getModuleRoot().child(project.getAlternateSettings());\n                                FilePath wsSettings = getWorkspace().child(project.getAlternateSettings());\n                                if (!wsSettings.exists() && mrSettings.exists())\n                                    wsSettings = mrSettings;\n                                \n                                margs.add(\"-s\").add(wsSettings.getRemote());\n                            }\n                        }\n\n                        \n                        final List<MavenArgumentInterceptorAction> argInterceptors = this.getBuild().getActions(MavenArgumentInterceptorAction.class);\n                        \n\t\t\t\t\t\t// find the correct maven goals and options, there might by an action overruling the defaults\n                        String goals = project.getGoals(); // default\n                        for (MavenArgumentInterceptorAction mavenArgInterceptor : argInterceptors) {\n                        \tif(StringUtils.isNotBlank(mavenArgInterceptor.getGoalsAndOptions())){\n                        \t\tgoals = mavenArgInterceptor.getGoalsAndOptions();\n                                // only one interceptor is allowed to overwrite the whole \"goals and options\" string\n                        \t\tbreak;\n                        \t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmargs.addTokenized(envVars.expand(goals));\n\n\t\t\t\t\t\t// enable the interceptors to change the whole command argument list\n\t\t\t\t\t\t// all available interceptors are allowed to modify the argument list\n\t\t\t\t\t\tfor (MavenArgumentInterceptorAction mavenArgInterceptor : argInterceptors) {\n\t\t\t\t\t\t\tfinal ArgumentListBuilder newMargs = mavenArgInterceptor.intercept(margs);\n\t\t\t\t\t\t\tif (newMargs != null) {\n\t\t\t\t\t\t\t\tmargs = newMargs;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}                        \n                        \n                        if (maven3orLater)\n                        {   \n                            \n                            Map<ModuleName,List<MavenReporter>> reporters = new HashMap<ModuleName, List<MavenReporter>>(project.sortedActiveModules.size());\n                            for (MavenModule mavenModule : project.sortedActiveModules)\n                            {\n                                reporters.put( mavenModule.getModuleName(), mavenModule.createReporters() );\n                            }\n                            Maven3Builder maven3Builder = \n                                new Maven3Builder( slistener, proxies, reporters, margs.toList(), envVars, mavenBuildInformation );\n                            MavenProbeAction mpa=null;\n                            try {\n                                mpa = new MavenProbeAction(project,process.channel);\n                                addAction(mpa);\n                                r = process.call(maven3Builder);\n                                return r;\n                            } finally {\n                                maven3Builder.end(launcher);\n                                getActions().remove(mpa);\n                                process.discard();\n                            }                            \n                            \n                        } else {\n                         \n                            Maven2Builder builder = \n                                new Maven2Builder(slistener, proxies, project.sortedActiveModules, margs.toList(), envVars, mavenBuildInformation);\n                            MavenProbeAction mpa=null;\n                            try {\n                                mpa = new MavenProbeAction(project,process.channel);\n                                addAction(mpa);\n                                r = process.call(builder);\n                                return r;\n                            } finally {\n                                builder.end(launcher);\n                                getActions().remove(mpa);\n                                process.discard();\n                            }\n                        }\n                    } catch (InterruptedException e) {\n                        r = Executor.currentExecutor().abortResult();\n                        throw e;\n                    } finally {\n            \t\t\t// only run post build steps if requested...\n                        if (r==null || r.isBetterOrEqualTo(project.getRunPostStepsIfResult())) {\n                            if(!build(listener,project.getPostbuilders().toList())){\n                                r = FAILURE;\n            \t\t\t\t}\n            \t\t\t}\n            \t\t\t\n                        if (r != null) {\n                            setResult(r);\n                        }\n\n                        // tear down in reverse order\n                        boolean failed=false;\n                        for( int i=buildEnvironments.size()-1; i>=0; i-- ) {\n                            if (!buildEnvironments.get(i).tearDown(MavenModuleSetBuild.this,listener)) {\n                                failed=true;\n                            }                    \n                        }\n                        // WARNING The return in the finally clause will trump any return before\n                        if (failed) return Result.FAILURE;\n                    }\n                }\n                \n                \n                return r;\n            } catch (AbortException e) {\n                if(e.getMessage()!=null)\n                    listener.error(e.getMessage());\n                return Result.FAILURE;\n            } catch (InterruptedIOException e) {\n                e.printStackTrace(listener.error(\"Aborted Maven execution for InterruptedIOException\"));\n                return Executor.currentExecutor().abortResult();\n            } catch (IOException e) {\n                e.printStackTrace(listener.error(Messages.MavenModuleSetBuild_FailedToParsePom()));\n                return Result.FAILURE;\n            } catch (RunnerAbortedException e) {\n                return Result.FAILURE;\n            } catch (RuntimeException e) {\n                // bug in the code.\n                e.printStackTrace(listener.error(\"Processing failed due to a bug in the code. Please report this to jenkinsci-users@googlegroups.com\"));\n                logger.println(\"project=\"+project);\n                logger.println(\"project.getModules()=\"+project.getModules());\n                logger.println(\"project.getRootModule()=\"+project.getRootModule());\n                throw e;\n            } finally {\n                if (StringUtils.isNotBlank(project.getSettingConfigId())) {\n                    // restore to null if as was modified\n                    project.setAlternateSettings( null );\n                    project.save();\n                }\n                // delete tmp files used for MavenSettingsProvider\n                if (remoteSettings != null) {\n                    remoteSettings.delete();\n                }\n                if (remoteGlobalSettings != null ) {\n                    remoteGlobalSettings.delete();\n                }\n            }\n        }","commit_id":"1efd2f986867e05f94385c474f179f0bb590f0d6","url":"https://github.com/kohsuke/hudson"},{"original_method":"private void mergePluginWithDefaults( Plugin plugin, Plugin def )\n    {\n        if ( plugin.getVersion() == null && def.getVersion() != null )\n        {\n            plugin.setVersion( def.getVersion() );\n        }\n        \n        List pluginGoals = plugin.getGoals();\n        if( pluginGoals == null || pluginGoals.isEmpty() )\n        {\n            plugin.setGoals( def.getGoals() );\n        }\n        \n        Xpp3Dom pluginConfiguration = (Xpp3Dom) plugin.getConfiguration();\n        if( pluginConfiguration == null )\n        {\n            plugin.setConfiguration( def.getConfiguration() );\n        }\n    }","id":61514,"modified_method":"private void mergePluginWithDefaults( Plugin plugin, Plugin def )\n    {\n        if ( plugin.getVersion() == null && def.getVersion() != null )\n        {\n            plugin.setVersion( def.getVersion() );\n        }\n\n        Map defaultGoals = new TreeMap();\n\n        List defGoalList = def.getGoals();\n\n        if ( defGoalList != null )\n        {\n            for ( Iterator it = defGoalList.iterator(); it.hasNext(); )\n            {\n                Goal defaultGoal = (Goal) it.next();\n\n                defaultGoals.put( defaultGoal.getId(), defaultGoal );\n            }\n        }\n\n        List pluginGoals = plugin.getGoals();\n\n        if ( pluginGoals != null )\n        {\n            for ( Iterator it = pluginGoals.iterator(); it.hasNext(); )\n            {\n                Goal pluginGoal = (Goal) it.next();\n\n                Goal defaultGoal = (Goal) defaultGoals.get( pluginGoal.getId() );\n\n                if ( defaultGoal != null )\n                {\n                    Xpp3Dom pluginGoalConfig = (Xpp3Dom) pluginGoal.getConfiguration();\n                    Xpp3Dom defaultGoalConfig = (Xpp3Dom) defaultGoal.getConfiguration();\n\n                    pluginGoalConfig = Xpp3Dom.mergeXpp3Dom( pluginGoalConfig, defaultGoalConfig );\n\n                    pluginGoal.setConfiguration( pluginGoalConfig );\n                }\n            }\n        }\n\n        Xpp3Dom pluginConfiguration = (Xpp3Dom) plugin.getConfiguration();\n        Xpp3Dom defaultConfiguration = (Xpp3Dom) def.getConfiguration();\n\n        pluginConfiguration = Xpp3Dom.mergeXpp3Dom( pluginConfiguration, defaultConfiguration );\n\n        plugin.setConfiguration( pluginConfiguration );\n    }","commit_id":"dfb2dfcaa14d80c977f54c1a39ba868e6036d79e","url":"https://github.com/apache/maven"},{"original_method":"public ActionMapping processMapping(\n\t\t\tHttpServletRequest req, HttpServletResponse res, String path)\n\t\tthrows IOException {\n\n\t\tif (path == null) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn super.processMapping(req, res, path);\n\t}","id":61515,"modified_method":"public ActionMapping processMapping(\n\t\t\tHttpServletRequest req, HttpServletResponse res, String path)\n\t\tthrows IOException {\n\n\t\tif (path == null) {\n\t\t\treturn null;\n\t\t}\n\n\t\tActionMapping mapping = super.processMapping(req, res, path);\n\n\t\tif (mapping == null) {\n\t\t\tString msg = getInternal().getMessage(\"processInvalid\");\n\n\t\t\t_log.error(\"User ID \" + req.getRemoteUser());\n\t\t\t_log.error(\"Current URL \" + PortalUtil.getCurrentURL(req));\n\t\t\t_log.error(\"Referer \" + req.getHeader(\"Referer\"));\n\n\t\t\t_log.error(msg + \" \" + path);\n\t\t}\n\n\t\treturn mapping;\n\t}","commit_id":"45e792f86441adfa865908579e2c06ac6f9ab96a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void doInvokeDeploy(HotDeployEvent event) throws Exception {\n\t\tServletContext servletContext = event.getServletContext();\n\n\t\tString servletContextName = servletContext.getServletContextName();\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Invoking deploy for \" + servletContextName);\n\t\t}\n\n\t\tString xml = HttpUtil.URLtoString(\n\t\t\tservletContext.getResource(\"/WEB-INF/liferay-hook.xml\"));\n\n\t\tif (xml == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (_log.isInfoEnabled()) {\n\t\t\t_log.info(\"Registering hook for \" + servletContextName);\n\t\t}\n\n\t\t_servletContextNames.add(servletContextName);\n\n\t\tClassLoader portletClassLoader = event.getContextClassLoader();\n\n\t\tinitLogger(portletClassLoader);\n\n\t\tDocument document = SAXReaderUtil.read(xml, true);\n\n\t\tElement rootElement = document.getRootElement();\n\n\t\tString portalPropertiesLocation = rootElement.elementText(\n\t\t\t\"portal-properties\");\n\n\t\tif (Validator.isNotNull(portalPropertiesLocation)) {\n\t\t\tConfiguration portalPropertiesConfiguration = null;\n\n\t\t\ttry {\n\t\t\t\tString name = portalPropertiesLocation;\n\n\t\t\t\tint pos = name.lastIndexOf(\".properties\");\n\n\t\t\t\tif (pos != -1) {\n\t\t\t\t\tname = name.substring(0, pos);\n\t\t\t\t}\n\n\t\t\t\tportalPropertiesConfiguration =\n\t\t\t\t\tConfigurationFactoryUtil.getConfiguration(\n\t\t\t\t\t\tportletClassLoader, name);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(\"Unable to read \" + portalPropertiesLocation, e);\n\t\t\t}\n\n\t\t\tif (portalPropertiesConfiguration != null) {\n\t\t\t\tProperties portalProperties =\n\t\t\t\t\tportalPropertiesConfiguration.getProperties();\n\n\t\t\t\tif (portalProperties.size() > 0) {\n\t\t\t\t\t_portalPropertiesMap.put(\n\t\t\t\t\t\tservletContextName, portalProperties);\n\n\t\t\t\t\t// Initialize properties, auto logins, model listeners, and\n\t\t\t\t\t// events in that specific order. Events have to be loaded\n\t\t\t\t\t// last because they may require model listeners to have\n\t\t\t\t\t// been registered.\n\n\t\t\t\t\tinitPortalProperties(\n\t\t\t\t\t\tservletContextName, portletClassLoader,\n\t\t\t\t\t\tportalProperties);\n\t\t\t\t\tinitAuthFailures(\n\t\t\t\t\t\tservletContextName, portletClassLoader,\n\t\t\t\t\t\tportalProperties);\n\t\t\t\t\tinitAutoDeployListeners(\n\t\t\t\t\t\tservletContextName, portletClassLoader,\n\t\t\t\t\t\tportalProperties);\n\t\t\t\t\tinitAutoLogins(\n\t\t\t\t\t\tservletContextName, portletClassLoader,\n\t\t\t\t\t\tportalProperties);\n\t\t\t\t\tinitAuthenticators(\n\t\t\t\t\t\tservletContextName, portletClassLoader,\n\t\t\t\t\t\tportalProperties);\n\t\t\t\t\tinitHotDeployListeners(\n\t\t\t\t\t\tservletContextName, portletClassLoader,\n\t\t\t\t\t\tportalProperties);\n\t\t\t\t\tinitModelListeners(\n\t\t\t\t\t\tservletContextName, portletClassLoader,\n\t\t\t\t\t\tportalProperties);\n\t\t\t\t\tinitEvents(\n\t\t\t\t\t\tservletContextName, portletClassLoader,\n\t\t\t\t\t\tportalProperties);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tLanguagesContainer languagesContainer = new LanguagesContainer();\n\n\t\t_languagesContainerMap.put(servletContextName, languagesContainer);\n\n\t\tList<Element> languagePropertiesElements = rootElement.elements(\n\t\t\t\"language-properties\");\n\n\t\tfor (Element languagePropertiesElement : languagePropertiesElements) {\n\t\t\tString languagePropertiesLocation =\n\t\t\t\tlanguagePropertiesElement.getText();\n\n\t\t\ttry {\n\t\t\t\tURL url = portletClassLoader.getResource(\n\t\t\t\t\tlanguagePropertiesLocation);\n\n\t\t\t\tif (url == null) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tInputStream is = url.openStream();\n\n\t\t\t\tProperties properties = PropertiesUtil.load(\n\t\t\t\t\tis, StringPool.UTF8);\n\n\t\t\t\tis.close();\n\n\t\t\t\tMap<String, String> languageMap = new HashMap<String, String>();\n\n\t\t\t\tfor (Map.Entry<Object, Object> entry : properties.entrySet()) {\n\t\t\t\t\tString key = (String)entry.getKey();\n\t\t\t\t\tString value = (String)entry.getValue();\n\n\t\t\t\t\tvalue = LanguageResources.fixValue(value);\n\n\t\t\t\t\tlanguageMap.put(key, value);\n\t\t\t\t}\n\n\t\t\t\tLocale locale = getLocale(languagePropertiesLocation);\n\n\t\t\t\tif (locale != null) {\n\t\t\t\t\tlanguagesContainer.addLanguage(locale, languageMap);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(\"Unable to read \" + languagePropertiesLocation, e);\n\t\t\t}\n\t\t}\n\n\t\tString customJspDir = rootElement.elementText(\"custom-jsp-dir\");\n\n\t\tif (Validator.isNotNull(customJspDir)) {\n\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t_log.debug(\"Custom JSP directory: \" + customJspDir);\n\t\t\t}\n\n\t\t\tboolean customJspGlobal = GetterUtil.getBoolean(\n\t\t\t\trootElement.elementText(\"custom-jsp-global\"), true);\n\n\t\t\tList<String> customJsps = new ArrayList<String>();\n\n\t\t\tString webDir = servletContext.getRealPath(StringPool.SLASH);\n\n\t\t\tgetCustomJsps(servletContext, webDir, customJspDir, customJsps);\n\n\t\t\tif (customJsps.size() > 0) {\n\t\t\t\tCustomJspBag customJspBag = new CustomJspBag(\n\t\t\t\t\tcustomJspDir, customJspGlobal, customJsps);\n\n\t\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t\tStringBundler sb = new StringBundler(customJsps.size() * 2);\n\n\t\t\t\t\tsb.append(\"Custom JSP files:\\n\");\n\n\t\t\t\t\tIterator<String> itr = customJsps.iterator();\n\n\t\t\t\t\twhile (itr.hasNext()) {\n\t\t\t\t\t\tString customJsp = itr.next();\n\n\t\t\t\t\t\tsb.append(customJsp);\n\n\t\t\t\t\t\tif (itr.hasNext()) {\n\t\t\t\t\t\t\tsb.append(StringPool.NEW_LINE);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t_log.debug(sb.toString());\n\t\t\t\t}\n\n\t\t\t\t_customJspBagsMap.put(servletContextName, customJspBag);\n\n\t\t\t\tinitCustomJspBag(servletContextName, customJspBag);\n\t\t\t}\n\t\t}\n\n\t\tList<Element> serviceElements = rootElement.elements(\"service\");\n\n\t\tfor (Element serviceElement : serviceElements) {\n\t\t\tString serviceType = serviceElement.elementText(\"service-type\");\n\t\t\tString serviceImpl = serviceElement.elementText(\"service-impl\");\n\n\t\t\tClass<?> serviceTypeClass = portletClassLoader.loadClass(\n\t\t\t\tserviceType);\n\t\t\tClass<?> serviceImplClass = portletClassLoader.loadClass(\n\t\t\t\tserviceImpl);\n\n\t\t\tConstructor<?> serviceImplConstructor =\n\t\t\t\tserviceImplClass.getConstructor(\n\t\t\t\t\tnew Class<?>[] {serviceTypeClass});\n\n\t\t\tObject serviceProxy = PortalBeanLocatorUtil.locate(serviceType);\n\n\t\t\tif (Proxy.isProxyClass(serviceProxy.getClass())) {\n\t\t\t\tinitServices(\n\t\t\t\t\tservletContextName, portletClassLoader, serviceType,\n\t\t\t\t\tserviceTypeClass, serviceImplConstructor, serviceProxy);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_log.error(\n\t\t\t\t\t\"Service hooks require Spring to be configured to use \" +\n\t\t\t\t\t\t\"JdkDynamicProxy and will not work with CGLIB\");\n\t\t\t}\n\t\t}\n\n\t\t// Begin backwards compatibility for 5.1.0\n\n\t\tModelListenersContainer modelListenersContainer =\n\t\t\t_modelListenersContainerMap.get(servletContextName);\n\n\t\tif (modelListenersContainer == null) {\n\t\t\tmodelListenersContainer = new ModelListenersContainer();\n\n\t\t\t_modelListenersContainerMap.put(\n\t\t\t\tservletContextName, modelListenersContainer);\n\t\t}\n\n\t\tList<Element> modelListenerElements = rootElement.elements(\n\t\t\t\"model-listener\");\n\n\t\tfor (Element modelListenerElement : modelListenerElements) {\n\t\t\tString modelName = modelListenerElement.elementText(\"model-name\");\n\t\t\tString modelListenerClassName = modelListenerElement.elementText(\n\t\t\t\t\"model-listener-class\");\n\n\t\t\tModelListener<BaseModel<?>> modelListener = initModelListener(\n\t\t\t\tmodelName, modelListenerClassName, portletClassLoader);\n\n\t\t\tif (modelListener != null) {\n\t\t\t\tmodelListenersContainer.registerModelListener(\n\t\t\t\t\tmodelName, modelListener);\n\t\t\t}\n\t\t}\n\n\t\tEventsContainer eventsContainer = _eventsContainerMap.get(\n\t\t\tservletContextName);\n\n\t\tif (eventsContainer == null) {\n\t\t\teventsContainer = new EventsContainer();\n\n\t\t\t_eventsContainerMap.put(servletContextName, eventsContainer);\n\t\t}\n\n\t\tList<Element> eventElements = rootElement.elements(\"event\");\n\n\t\tfor (Element eventElement : eventElements) {\n\t\t\tString eventName = eventElement.elementText(\"event-type\");\n\t\t\tString eventClassName = eventElement.elementText(\"event-class\");\n\n\t\t\tObject obj = initEvent(\n\t\t\t\teventName, eventClassName, portletClassLoader);\n\n\t\t\tif (obj != null) {\n\t\t\t\teventsContainer.registerEvent(eventName, obj);\n\t\t\t}\n\t\t}\n\n\t\t// End backwards compatibility for 5.1.0\n\n\t\tregisterClpMessageListeners(servletContext, portletClassLoader);\n\n\t\tFileAvailabilityUtil.reset();\n\n\t\tif (_log.isInfoEnabled()) {\n\t\t\t_log.info(\n\t\t\t\t\"Hook for \" + servletContextName + \" is available for use\");\n\t\t}\n\t}","id":61516,"modified_method":"protected void doInvokeDeploy(HotDeployEvent event) throws Exception {\n\t\tServletContext servletContext = event.getServletContext();\n\n\t\tString servletContextName = servletContext.getServletContextName();\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Invoking deploy for \" + servletContextName);\n\t\t}\n\n\t\tString xml = HttpUtil.URLtoString(\n\t\t\tservletContext.getResource(\"/WEB-INF/liferay-hook.xml\"));\n\n\t\tif (xml == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (_log.isInfoEnabled()) {\n\t\t\t_log.info(\"Registering hook for \" + servletContextName);\n\t\t}\n\n\t\t_servletContextNames.add(servletContextName);\n\n\t\tClassLoader portletClassLoader = event.getContextClassLoader();\n\n\t\tinitLogger(portletClassLoader);\n\n\t\tDocument document = SAXReaderUtil.read(xml, true);\n\n\t\tElement rootElement = document.getRootElement();\n\n\t\tString portalPropertiesLocation = rootElement.elementText(\n\t\t\t\"portal-properties\");\n\n\t\tif (Validator.isNotNull(portalPropertiesLocation)) {\n\t\t\tConfiguration portalPropertiesConfiguration = null;\n\n\t\t\ttry {\n\t\t\t\tString name = portalPropertiesLocation;\n\n\t\t\t\tint pos = name.lastIndexOf(\".properties\");\n\n\t\t\t\tif (pos != -1) {\n\t\t\t\t\tname = name.substring(0, pos);\n\t\t\t\t}\n\n\t\t\t\tportalPropertiesConfiguration =\n\t\t\t\t\tConfigurationFactoryUtil.getConfiguration(\n\t\t\t\t\t\tportletClassLoader, name);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(\"Unable to read \" + portalPropertiesLocation, e);\n\t\t\t}\n\n\t\t\tif (portalPropertiesConfiguration != null) {\n\t\t\t\tProperties portalProperties =\n\t\t\t\t\tportalPropertiesConfiguration.getProperties();\n\n\t\t\t\tif (portalProperties.size() > 0) {\n\t\t\t\t\t_portalPropertiesMap.put(\n\t\t\t\t\t\tservletContextName, portalProperties);\n\n\t\t\t\t\t// Initialize properties, auto logins, model listeners, and\n\t\t\t\t\t// events in that specific order. Events have to be loaded\n\t\t\t\t\t// last because they may require model listeners to have\n\t\t\t\t\t// been registered.\n\n\t\t\t\t\tinitPortalProperties(\n\t\t\t\t\t\tservletContextName, portletClassLoader,\n\t\t\t\t\t\tportalProperties);\n\t\t\t\t\tinitAuthFailures(\n\t\t\t\t\t\tservletContextName, portletClassLoader,\n\t\t\t\t\t\tportalProperties);\n\t\t\t\t\tinitAutoDeployListeners(\n\t\t\t\t\t\tservletContextName, portletClassLoader,\n\t\t\t\t\t\tportalProperties);\n\t\t\t\t\tinitAutoLogins(\n\t\t\t\t\t\tservletContextName, portletClassLoader,\n\t\t\t\t\t\tportalProperties);\n\t\t\t\t\tinitAuthenticators(\n\t\t\t\t\t\tservletContextName, portletClassLoader,\n\t\t\t\t\t\tportalProperties);\n\t\t\t\t\tinitHotDeployListeners(\n\t\t\t\t\t\tservletContextName, portletClassLoader,\n\t\t\t\t\t\tportalProperties);\n\t\t\t\t\tinitModelListeners(\n\t\t\t\t\t\tservletContextName, portletClassLoader,\n\t\t\t\t\t\tportalProperties);\n\t\t\t\t\tinitEvents(\n\t\t\t\t\t\tservletContextName, portletClassLoader,\n\t\t\t\t\t\tportalProperties);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tLanguagesContainer languagesContainer = new LanguagesContainer();\n\n\t\t_languagesContainerMap.put(servletContextName, languagesContainer);\n\n\t\tList<Element> languagePropertiesElements = rootElement.elements(\n\t\t\t\"language-properties\");\n\n\t\tfor (Element languagePropertiesElement : languagePropertiesElements) {\n\t\t\tString languagePropertiesLocation =\n\t\t\t\tlanguagePropertiesElement.getText();\n\n\t\t\ttry {\n\t\t\t\tURL url = portletClassLoader.getResource(\n\t\t\t\t\tlanguagePropertiesLocation);\n\n\t\t\t\tif (url == null) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tInputStream is = url.openStream();\n\n\t\t\t\tProperties properties = PropertiesUtil.load(\n\t\t\t\t\tis, StringPool.UTF8);\n\n\t\t\t\tis.close();\n\n\t\t\t\tMap<String, String> languageMap = new HashMap<String, String>();\n\n\t\t\t\tfor (Map.Entry<Object, Object> entry : properties.entrySet()) {\n\t\t\t\t\tString key = (String)entry.getKey();\n\t\t\t\t\tString value = (String)entry.getValue();\n\n\t\t\t\t\tvalue = LanguageResources.fixValue(value);\n\n\t\t\t\t\tlanguageMap.put(key, value);\n\t\t\t\t}\n\n\t\t\t\tLocale locale = getLocale(languagePropertiesLocation);\n\n\t\t\t\tif (locale != null) {\n\t\t\t\t\tlanguagesContainer.addLanguage(locale, languageMap);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(\"Unable to read \" + languagePropertiesLocation, e);\n\t\t\t}\n\t\t}\n\n\t\tString customJspDir = rootElement.elementText(\"custom-jsp-dir\");\n\n\t\tif (Validator.isNotNull(customJspDir)) {\n\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t_log.debug(\"Custom JSP directory: \" + customJspDir);\n\t\t\t}\n\n\t\t\tboolean customJspGlobal = GetterUtil.getBoolean(\n\t\t\t\trootElement.elementText(\"custom-jsp-global\"), true);\n\n\t\t\tList<String> customJsps = new ArrayList<String>();\n\n\t\t\tString webDir = servletContext.getRealPath(StringPool.SLASH);\n\n\t\t\tgetCustomJsps(servletContext, webDir, customJspDir, customJsps);\n\n\t\t\tif (customJsps.size() > 0) {\n\t\t\t\tCustomJspBag customJspBag = new CustomJspBag(\n\t\t\t\t\tcustomJspDir, customJspGlobal, customJsps);\n\n\t\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t\tStringBundler sb = new StringBundler(customJsps.size() * 2);\n\n\t\t\t\t\tsb.append(\"Custom JSP files:\\n\");\n\n\t\t\t\t\tIterator<String> itr = customJsps.iterator();\n\n\t\t\t\t\twhile (itr.hasNext()) {\n\t\t\t\t\t\tString customJsp = itr.next();\n\n\t\t\t\t\t\tsb.append(customJsp);\n\n\t\t\t\t\t\tif (itr.hasNext()) {\n\t\t\t\t\t\t\tsb.append(StringPool.NEW_LINE);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t_log.debug(sb.toString());\n\t\t\t\t}\n\n\t\t\t\t_customJspBagsMap.put(servletContextName, customJspBag);\n\n\t\t\t\tinitCustomJspBag(servletContextName, customJspBag);\n\t\t\t}\n\t\t}\n\n\t\tList<Element> serviceElements = rootElement.elements(\"service\");\n\n\t\tfor (Element serviceElement : serviceElements) {\n\t\t\tString serviceType = serviceElement.elementText(\"service-type\");\n\t\t\tString serviceImpl = serviceElement.elementText(\"service-impl\");\n\n\t\t\tClass<?> serviceTypeClass = portletClassLoader.loadClass(\n\t\t\t\tserviceType);\n\t\t\tClass<?> serviceImplClass = portletClassLoader.loadClass(\n\t\t\t\tserviceImpl);\n\n\t\t\tConstructor<?> serviceImplConstructor =\n\t\t\t\tserviceImplClass.getConstructor(\n\t\t\t\t\tnew Class<?>[] {serviceTypeClass});\n\n\t\t\tObject serviceProxy = PortalBeanLocatorUtil.locate(serviceType);\n\n\t\t\tif (Proxy.isProxyClass(serviceProxy.getClass())) {\n\t\t\t\tinitServices(\n\t\t\t\t\tservletContextName, portletClassLoader, serviceType,\n\t\t\t\t\tserviceTypeClass, serviceImplConstructor, serviceProxy);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_log.error(\n\t\t\t\t\t\"Service hooks require Spring to be configured to use \" +\n\t\t\t\t\t\t\"JdkDynamicProxy and will not work with CGLIB\");\n\t\t\t}\n\t\t}\n\n\t\tStrutsActionContainer strutsActionContainer = _strutsActionContainerMap.get(servletContextName);\n\n\t\tif (strutsActionContainer == null) {\n\t\t\tstrutsActionContainer = new StrutsActionContainer();\n\n\t\t\t_strutsActionContainerMap.put(servletContextName, strutsActionContainer);\n\t\t}\n\n\t\tList<Element> actionElements = rootElement.elements(\"action\");\n\n\t\tfor (Element actionElement : actionElements) {\n\t\t\tString actionPath = actionElement.elementText(\"action-path\");\n\t\t\tString actionImpl = actionElement.elementText(\"action-impl\");\n\n\t\t\tObject strutsAction =\n\t\t\t\tinitStrutsAction(actionPath, actionImpl, portletClassLoader);\n\n\t\t\tif (strutsAction instanceof StrutsPortletAction) {\n\t\t\t\tstrutsActionContainer.registerStrutsAction(\n\t\t\t\t\tactionPath, (StrutsPortletAction)strutsAction);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tstrutsActionContainer.registerStrutsAction(\n\t\t\t\t\tactionPath, (StrutsAction)strutsAction);\n\t\t\t}\n\t\t}\n\n\t\t// Begin backwards compatibility for 5.1.0\n\n\t\tModelListenersContainer modelListenersContainer =\n\t\t\t_modelListenersContainerMap.get(servletContextName);\n\n\t\tif (modelListenersContainer == null) {\n\t\t\tmodelListenersContainer = new ModelListenersContainer();\n\n\t\t\t_modelListenersContainerMap.put(\n\t\t\t\tservletContextName, modelListenersContainer);\n\t\t}\n\n\t\tList<Element> modelListenerElements = rootElement.elements(\n\t\t\t\"model-listener\");\n\n\t\tfor (Element modelListenerElement : modelListenerElements) {\n\t\t\tString modelName = modelListenerElement.elementText(\"model-name\");\n\t\t\tString modelListenerClassName = modelListenerElement.elementText(\n\t\t\t\t\"model-listener-class\");\n\n\t\t\tModelListener<BaseModel<?>> modelListener = initModelListener(\n\t\t\t\tmodelName, modelListenerClassName, portletClassLoader);\n\n\t\t\tif (modelListener != null) {\n\t\t\t\tmodelListenersContainer.registerModelListener(\n\t\t\t\t\tmodelName, modelListener);\n\t\t\t}\n\t\t}\n\n\t\tEventsContainer eventsContainer = _eventsContainerMap.get(\n\t\t\tservletContextName);\n\n\t\tif (eventsContainer == null) {\n\t\t\teventsContainer = new EventsContainer();\n\n\t\t\t_eventsContainerMap.put(servletContextName, eventsContainer);\n\t\t}\n\n\t\tList<Element> eventElements = rootElement.elements(\"event\");\n\n\t\tfor (Element eventElement : eventElements) {\n\t\t\tString eventName = eventElement.elementText(\"event-type\");\n\t\t\tString eventClassName = eventElement.elementText(\"event-class\");\n\n\t\t\tObject obj = initEvent(\n\t\t\t\teventName, eventClassName, portletClassLoader);\n\n\t\t\tif (obj != null) {\n\t\t\t\teventsContainer.registerEvent(eventName, obj);\n\t\t\t}\n\t\t}\n\n\t\t// End backwards compatibility for 5.1.0\n\n\t\tregisterClpMessageListeners(servletContext, portletClassLoader);\n\n\t\tFileAvailabilityUtil.reset();\n\n\t\tif (_log.isInfoEnabled()) {\n\t\t\t_log.info(\n\t\t\t\t\"Hook for \" + servletContextName + \" is available for use\");\n\t\t}\n\t}","commit_id":"5986fbb849caf9b6a3db23dd70d384e3cfd30984","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void doInvokeUndeploy(HotDeployEvent event) throws Exception {\n\t\tServletContext servletContext = event.getServletContext();\n\n\t\tString servletContextName = servletContext.getServletContextName();\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Invoking undeploy for \" + servletContextName);\n\t\t}\n\n\t\tif (!_servletContextNames.remove(servletContextName)) {\n\t\t\treturn;\n\t\t}\n\n\t\tAuthenticatorsContainer authenticatorsContainer =\n\t\t\t_authenticatorsContainerMap.remove(servletContextName);\n\n\t\tif (authenticatorsContainer != null) {\n\t\t\tauthenticatorsContainer.unregisterAuthenticators();\n\t\t}\n\n\t\tAuthFailuresContainer authFailuresContainer =\n\t\t\t_authFailuresContainerMap.remove(servletContextName);\n\n\t\tif (authFailuresContainer != null) {\n\t\t\tauthFailuresContainer.unregisterAuthFailures();\n\t\t}\n\n\t\tAutoDeployListenersContainer autoDeployListenersContainer =\n\t\t\t_autoDeployListenersContainerMap.remove(servletContextName);\n\n\t\tif (autoDeployListenersContainer != null) {\n\t\t\tautoDeployListenersContainer.unregisterAutoDeployListeners();\n\t\t}\n\n\t\tAutoLoginsContainer autoLoginsContainer =\n\t\t\t_autoLoginsContainerMap.remove(servletContextName);\n\n\t\tif (autoLoginsContainer != null) {\n\t\t\tautoLoginsContainer.unregisterAutoLogins();\n\t\t}\n\n\t\tCustomJspBag customJspBag = _customJspBagsMap.remove(\n\t\t\tservletContextName);\n\n\t\tif (customJspBag != null) {\n\t\t\tdestroyCustomJspBag(servletContextName, customJspBag);\n\t\t}\n\n\t\tEventsContainer eventsContainer = _eventsContainerMap.remove(\n\t\t\tservletContextName);\n\n\t\tif (eventsContainer != null) {\n\t\t\teventsContainer.unregisterEvents();\n\t\t}\n\n\t\tHotDeployListenersContainer hotDeployListenersContainer =\n\t\t\t_hotDeployListenersContainerMap.remove(servletContextName);\n\n\t\tif (hotDeployListenersContainer != null) {\n\t\t\thotDeployListenersContainer.unregisterHotDeployListeners();\n\t\t}\n\n\t\tLanguagesContainer languagesContainer = _languagesContainerMap.remove(\n\t\t\tservletContextName);\n\n\t\tif (languagesContainer != null) {\n\t\t\tlanguagesContainer.unregisterLanguages();\n\t\t}\n\n\t\tModelListenersContainer modelListenersContainer =\n\t\t\t_modelListenersContainerMap.remove(servletContextName);\n\n\t\tif (modelListenersContainer != null) {\n\t\t\tmodelListenersContainer.unregisterModelListeners();\n\t\t}\n\n\t\tProperties portalProperties = _portalPropertiesMap.remove(\n\t\t\tservletContextName);\n\n\t\tif (portalProperties != null) {\n\t\t\tdestroyPortalProperties(servletContextName, portalProperties);\n\t\t}\n\n\t\tdestroyServices(servletContextName);\n\n\t\tunregisterClpMessageListeners(servletContext);\n\n\t\tif (_log.isInfoEnabled()) {\n\t\t\t_log.info(\"Hook for \" + servletContextName + \" was unregistered\");\n\t\t}\n\t}","id":61517,"modified_method":"protected void doInvokeUndeploy(HotDeployEvent event) throws Exception {\n\t\tServletContext servletContext = event.getServletContext();\n\n\t\tString servletContextName = servletContext.getServletContextName();\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Invoking undeploy for \" + servletContextName);\n\t\t}\n\n\t\tif (!_servletContextNames.remove(servletContextName)) {\n\t\t\treturn;\n\t\t}\n\n\t\tAuthenticatorsContainer authenticatorsContainer =\n\t\t\t_authenticatorsContainerMap.remove(servletContextName);\n\n\t\tif (authenticatorsContainer != null) {\n\t\t\tauthenticatorsContainer.unregisterAuthenticators();\n\t\t}\n\n\t\tAuthFailuresContainer authFailuresContainer =\n\t\t\t_authFailuresContainerMap.remove(servletContextName);\n\n\t\tif (authFailuresContainer != null) {\n\t\t\tauthFailuresContainer.unregisterAuthFailures();\n\t\t}\n\n\t\tAutoDeployListenersContainer autoDeployListenersContainer =\n\t\t\t_autoDeployListenersContainerMap.remove(servletContextName);\n\n\t\tif (autoDeployListenersContainer != null) {\n\t\t\tautoDeployListenersContainer.unregisterAutoDeployListeners();\n\t\t}\n\n\t\tAutoLoginsContainer autoLoginsContainer =\n\t\t\t_autoLoginsContainerMap.remove(servletContextName);\n\n\t\tif (autoLoginsContainer != null) {\n\t\t\tautoLoginsContainer.unregisterAutoLogins();\n\t\t}\n\n\t\tCustomJspBag customJspBag = _customJspBagsMap.remove(\n\t\t\tservletContextName);\n\n\t\tif (customJspBag != null) {\n\t\t\tdestroyCustomJspBag(servletContextName, customJspBag);\n\t\t}\n\n\t\tEventsContainer eventsContainer = _eventsContainerMap.remove(\n\t\t\tservletContextName);\n\n\t\tif (eventsContainer != null) {\n\t\t\teventsContainer.unregisterEvents();\n\t\t}\n\n\t\tHotDeployListenersContainer hotDeployListenersContainer =\n\t\t\t_hotDeployListenersContainerMap.remove(servletContextName);\n\n\t\tif (hotDeployListenersContainer != null) {\n\t\t\thotDeployListenersContainer.unregisterHotDeployListeners();\n\t\t}\n\n\t\tLanguagesContainer languagesContainer = _languagesContainerMap.remove(\n\t\t\tservletContextName);\n\n\t\tif (languagesContainer != null) {\n\t\t\tlanguagesContainer.unregisterLanguages();\n\t\t}\n\n\t\tModelListenersContainer modelListenersContainer =\n\t\t\t_modelListenersContainerMap.remove(servletContextName);\n\n\t\tif (modelListenersContainer != null) {\n\t\t\tmodelListenersContainer.unregisterModelListeners();\n\t\t}\n\n\t\tProperties portalProperties = _portalPropertiesMap.remove(\n\t\t\tservletContextName);\n\n\t\tif (portalProperties != null) {\n\t\t\tdestroyPortalProperties(servletContextName, portalProperties);\n\t\t}\n\n\t\tdestroyServices(servletContextName);\n\n\t\tStrutsActionContainer strutsActionContainer = \n\t\t\t_strutsActionContainerMap.remove(servletContextName);\n\n\t\tif (strutsActionContainer != null) {\n\t\t\tstrutsActionContainer.unregisterStrutsActions();\n\t\t}\n\n\t\tunregisterClpMessageListeners(servletContext);\n\n\t\tif (_log.isInfoEnabled()) {\n\t\t\t_log.info(\"Hook for \" + servletContextName + \" was unregistered\");\n\t\t}\n\t}","commit_id":"5986fbb849caf9b6a3db23dd70d384e3cfd30984","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected String processPath(\n\t\t\tHttpServletRequest request, HttpServletResponse response)\n\t\tthrows IOException {\n\n\t\tString path = GetterUtil.getString(\n\t\t\tsuper.processPath(request, response));\n\n\t\tHttpSession session = request.getSession();\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)request.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\t// Current users\n\n\t\tUserTracker userTracker = LiveUsers.getUserTracker(\n\t\t\tthemeDisplay.getCompanyId(), session.getId());\n\n\t\tif ((userTracker != null) && (!path.equals(_PATH_C)) &&\n\t\t\t(path.indexOf(_PATH_J_SECURITY_CHECK) == -1) &&\n\t\t\t(path.indexOf(_PATH_PORTAL_PROTECTED) == -1) &&\n\t\t\t(!_trackerIgnorePaths.contains(path))) {\n\n\t\t\tString fullPath = null;\n\n\t\t\ttry {\n\t\t\t\tif (PropsValues.SESSION_TRACKER_FRIENDLY_PATHS_ENABLED) {\n\t\t\t\t\tfullPath = getFriendlyTrackerPath(\n\t\t\t\t\t\tpath, themeDisplay, request);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(e, e);\n\t\t\t}\n\n\t\t\tString queryString = request.getQueryString();\n\n\t\t\tif (Validator.isNull(fullPath) &&\n\t\t\t\tValidator.isNotNull(queryString)) {\n\n\t\t\t\tfullPath = path.concat(StringPool.QUESTION).concat(queryString);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfullPath = path;\n\t\t\t}\n\n\t\t\tUserTrackerPath userTrackerPath = UserTrackerPathUtil.create(0);\n\n\t\t\tuserTrackerPath.setUserTrackerId(userTracker.getUserTrackerId());\n\t\t\tuserTrackerPath.setPath(fullPath);\n\t\t\tuserTrackerPath.setPathDate(new Date());\n\n\t\t\tuserTracker.addPath(userTrackerPath);\n\t\t}\n\n\t\tString remoteUser = request.getRemoteUser();\n\n\t\tUser user = null;\n\n\t\ttry {\n\t\t\tuser = PortalUtil.getUser(request);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t}\n\n\t\t// Last path\n\n\t\tif (_lastPaths.contains(path) && !_trackerIgnorePaths.contains(path)) {\n\t\t\tboolean saveLastPath = ParamUtil.getBoolean(\n\t\t\t\trequest, \"saveLastPath\", true);\n\n\t\t\tif (themeDisplay.isLifecycleResource() ||\n\t\t\t\tthemeDisplay.isStateExclusive() ||\n\t\t\t\tthemeDisplay.isStatePopUp() ||\n\t\t\t\t!request.getMethod().equalsIgnoreCase(HttpMethods.GET)) {\n\n\t\t\t\tsaveLastPath = false;\n\t\t\t}\n\n\t\t\t// Save last path\n\n\t\t\tif (saveLastPath) {\n\n\t\t\t\t// Was a last path set by another servlet that dispatched to\n\t\t\t\t// the MainServlet? If so, use that last path instead.\n\n\t\t\t\tLastPath lastPath = (LastPath)request.getAttribute(\n\t\t\t\t\tWebKeys.LAST_PATH);\n\n\t\t\t\tif (lastPath == null) {\n\t\t\t\t\tlastPath = new LastPath(\n\t\t\t\t\t\tthemeDisplay.getPathMain(), path,\n\t\t\t\t\t\trequest.getParameterMap());\n\t\t\t\t}\n\n\t\t\t\tsession.setAttribute(WebKeys.LAST_PATH, lastPath);\n\t\t\t}\n\t\t}\n\n\t\t// Authenticated users can always log out\n\n\t\tif (((remoteUser != null) || (user != null)) &&\n\t\t\t(path.equals(_PATH_PORTAL_LOGOUT))) {\n\n\t\t\treturn path;\n\t\t}\n\n\t\t// Authenticated users can always extend or confirm their session\n\n\t\tif (((remoteUser != null) || (user != null)) &&\n\t\t\t(path.equals(_PATH_PORTAL_EXPIRE_SESSION) ||\n\t\t\t path.equals(_PATH_PORTAL_EXTEND_SESSION))) {\n\n\t\t\treturn path;\n\t\t}\n\n\t\t// Authenticated users can always agree to terms of use\n\n\t\tif (((remoteUser != null) || (user != null)) &&\n\t\t\t(path.equals(_PATH_PORTAL_UPDATE_TERMS_OF_USE))) {\n\n\t\t\treturn path;\n\t\t}\n\n\t\t// Authenticated users must still exist in the system\n\n\t\tif ((remoteUser != null) && (user == null)) {\n\t\t\treturn _PATH_PORTAL_LOGOUT;\n\t\t}\n\n\t\t// Authenticated users must be active\n\n\t\tif ((user != null) && !user.isActive()) {\n\t\t\tSessionErrors.add(request, UserActiveException.class.getName());\n\n\t\t\treturn _PATH_PORTAL_ERROR;\n\t\t}\n\n\t\tif (!path.equals(_PATH_PORTAL_JSON_SERVICE) &&\n\t\t\t!path.equals(_PATH_PORTAL_RENDER_PORTLET) &&\n\t\t\t!ParamUtil.getBoolean(request, \"wsrp\")) {\n\n\t\t\t// Authenticated users should agree to Terms of Use\n\n\t\t\tif ((user != null) && !user.isAgreedToTermsOfUse()) {\n\t\t\t\tboolean termsOfUseRequired = false;\n\n\t\t\t\ttry {\n\t\t\t\t\ttermsOfUseRequired = PrefsPropsUtil.getBoolean(\n\t\t\t\t\t\tuser.getCompanyId(), PropsKeys.TERMS_OF_USE_REQUIRED);\n\t\t\t\t}\n\t\t\t\tcatch (SystemException se) {\n\t\t\t\t\ttermsOfUseRequired = PropsValues.TERMS_OF_USE_REQUIRED;\n\t\t\t\t}\n\n\t\t\t\tif (termsOfUseRequired) {\n\t\t\t\t\treturn _PATH_PORTAL_TERMS_OF_USE;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Authenticated users must have a current password\n\n\t\t\tif ((user != null) && user.isPasswordReset()) {\n\t\t\t\treturn _PATH_PORTAL_UPDATE_PASSWORD;\n\t\t\t}\n\n\t\t\t// Authenticated users must have an email address\n\n\t\t\tif ((user != null) &&\n\t\t\t\tValidator.isNull(user.getDisplayEmailAddress())) {\n\n\t\t\t\treturn _PATH_PORTAL_UPDATE_EMAIL_ADDRESS;\n\t\t\t}\n\n\t\t\t// Authenticated users should have a reminder query\n\n\t\t\tif ((user != null) &&\n\t\t\t\t(Validator.isNull(user.getReminderQueryQuestion()) ||\n\t\t\t\t Validator.isNull(user.getReminderQueryAnswer()))) {\n\n\t\t\t\tif (PropsValues.USERS_REMINDER_QUERIES_ENABLED) {\n\t\t\t\t\treturn _PATH_PORTAL_UPDATE_REMINDER_QUERY;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Users must sign in\n\n\t\tif (!isPublicPath(path)) {\n\t\t\tif (user == null) {\n\t\t\t\tSessionErrors.add(request, PrincipalException.class.getName());\n\n\t\t\t\treturn _PATH_PORTAL_LOGIN;\n\t\t\t}\n\t\t}\n\n\t\tActionMapping mapping =\n\t\t\t(ActionMapping)moduleConfig.findActionConfig(path);\n\n\t\tpath = mapping.getPath();\n\n\t\t// Define the portlet objects\n\n\t\tif (isPortletPath(path)) {\n\t\t\ttry {\n\t\t\t\tPortlet portlet = null;\n\n\t\t\t\tlong companyId = PortalUtil.getCompanyId(request);\n\t\t\t\tString portletId = ParamUtil.getString(request, \"p_p_id\");\n\n\t\t\t\tif (Validator.isNotNull(portletId)) {\n\t\t\t\t\tportlet = PortletLocalServiceUtil.getPortletById(\n\t\t\t\t\t\tcompanyId, portletId);\n\t\t\t\t}\n\n\t\t\t\tif (portlet == null) {\n\t\t\t\t\tString strutsPath = path.substring(\n\t\t\t\t\t\t1, path.lastIndexOf(CharPool.SLASH));\n\n\t\t\t\t\tportlet = PortletLocalServiceUtil.getPortletByStrutsPath(\n\t\t\t\t\t\tcompanyId, strutsPath);\n\t\t\t\t}\n\n\t\t\t\tif ((portlet != null) && portlet.isActive()) {\n\t\t\t\t\tdefineObjects(request, response, portlet);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\trequest.setAttribute(PageContext.EXCEPTION, e);\n\n\t\t\t\tpath = _PATH_COMMON_ERROR;\n\t\t\t}\n\t\t}\n\n\t\t// Authenticated users must have access to at least one layout\n\n\t\tif (SessionErrors.contains(\n\t\t\t\trequest, LayoutPermissionException.class.getName())) {\n\n\t\t\treturn _PATH_PORTAL_ERROR;\n\t\t}\n\n\t\treturn path;\n\t}","id":61518,"modified_method":"protected String processPath(\n\t\t\tHttpServletRequest request, HttpServletResponse response)\n\t\tthrows IOException {\n\n\t\tString path = GetterUtil.getString(\n\t\t\tsuper.processPath(request, response));\n\n\t\tHttpSession session = request.getSession();\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)request.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\t// Current users\n\n\t\tUserTracker userTracker = LiveUsers.getUserTracker(\n\t\t\tthemeDisplay.getCompanyId(), session.getId());\n\n\t\tif ((userTracker != null) && (!path.equals(_PATH_C)) &&\n\t\t\t(path.indexOf(_PATH_J_SECURITY_CHECK) == -1) &&\n\t\t\t(path.indexOf(_PATH_PORTAL_PROTECTED) == -1) &&\n\t\t\t(!_trackerIgnorePaths.contains(path))) {\n\n\t\t\tString fullPath = null;\n\n\t\t\ttry {\n\t\t\t\tif (PropsValues.SESSION_TRACKER_FRIENDLY_PATHS_ENABLED) {\n\t\t\t\t\tfullPath = getFriendlyTrackerPath(\n\t\t\t\t\t\tpath, themeDisplay, request);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(e, e);\n\t\t\t}\n\n\t\t\tString queryString = request.getQueryString();\n\n\t\t\tif (Validator.isNull(fullPath) &&\n\t\t\t\tValidator.isNotNull(queryString)) {\n\n\t\t\t\tfullPath = path.concat(StringPool.QUESTION).concat(queryString);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfullPath = path;\n\t\t\t}\n\n\t\t\tUserTrackerPath userTrackerPath = UserTrackerPathUtil.create(0);\n\n\t\t\tuserTrackerPath.setUserTrackerId(userTracker.getUserTrackerId());\n\t\t\tuserTrackerPath.setPath(fullPath);\n\t\t\tuserTrackerPath.setPathDate(new Date());\n\n\t\t\tuserTracker.addPath(userTrackerPath);\n\t\t}\n\n\t\tString remoteUser = request.getRemoteUser();\n\n\t\tUser user = null;\n\n\t\ttry {\n\t\t\tuser = PortalUtil.getUser(request);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t}\n\n\t\t// Last path\n\n\t\tif (_lastPaths.contains(path) && !_trackerIgnorePaths.contains(path)) {\n\t\t\tboolean saveLastPath = ParamUtil.getBoolean(\n\t\t\t\trequest, \"saveLastPath\", true);\n\n\t\t\tif (themeDisplay.isLifecycleResource() ||\n\t\t\t\tthemeDisplay.isStateExclusive() ||\n\t\t\t\tthemeDisplay.isStatePopUp() ||\n\t\t\t\t!request.getMethod().equalsIgnoreCase(HttpMethods.GET)) {\n\n\t\t\t\tsaveLastPath = false;\n\t\t\t}\n\n\t\t\t// Save last path\n\n\t\t\tif (saveLastPath) {\n\n\t\t\t\t// Was a last path set by another servlet that dispatched to\n\t\t\t\t// the MainServlet? If so, use that last path instead.\n\n\t\t\t\tLastPath lastPath = (LastPath)request.getAttribute(\n\t\t\t\t\tWebKeys.LAST_PATH);\n\n\t\t\t\tif (lastPath == null) {\n\t\t\t\t\tlastPath = new LastPath(\n\t\t\t\t\t\tthemeDisplay.getPathMain(), path,\n\t\t\t\t\t\trequest.getParameterMap());\n\t\t\t\t}\n\n\t\t\t\tsession.setAttribute(WebKeys.LAST_PATH, lastPath);\n\t\t\t}\n\t\t}\n\n\t\t// Authenticated users can always log out\n\n\t\tif (((remoteUser != null) || (user != null)) &&\n\t\t\t(path.equals(_PATH_PORTAL_LOGOUT))) {\n\n\t\t\treturn path;\n\t\t}\n\n\t\t// Authenticated users can always extend or confirm their session\n\n\t\tif (((remoteUser != null) || (user != null)) &&\n\t\t\t(path.equals(_PATH_PORTAL_EXPIRE_SESSION) ||\n\t\t\t path.equals(_PATH_PORTAL_EXTEND_SESSION))) {\n\n\t\t\treturn path;\n\t\t}\n\n\t\t// Authenticated users can always agree to terms of use\n\n\t\tif (((remoteUser != null) || (user != null)) &&\n\t\t\t(path.equals(_PATH_PORTAL_UPDATE_TERMS_OF_USE))) {\n\n\t\t\treturn path;\n\t\t}\n\n\t\t// Authenticated users must still exist in the system\n\n\t\tif ((remoteUser != null) && (user == null)) {\n\t\t\treturn _PATH_PORTAL_LOGOUT;\n\t\t}\n\n\t\t// Authenticated users must be active\n\n\t\tif ((user != null) && !user.isActive()) {\n\t\t\tSessionErrors.add(request, UserActiveException.class.getName());\n\n\t\t\treturn _PATH_PORTAL_ERROR;\n\t\t}\n\n\t\tif (!path.equals(_PATH_PORTAL_JSON_SERVICE) &&\n\t\t\t!path.equals(_PATH_PORTAL_RENDER_PORTLET) &&\n\t\t\t!ParamUtil.getBoolean(request, \"wsrp\")) {\n\n\t\t\t// Authenticated users should agree to Terms of Use\n\n\t\t\tif ((user != null) && !user.isAgreedToTermsOfUse()) {\n\t\t\t\tboolean termsOfUseRequired = false;\n\n\t\t\t\ttry {\n\t\t\t\t\ttermsOfUseRequired = PrefsPropsUtil.getBoolean(\n\t\t\t\t\t\tuser.getCompanyId(), PropsKeys.TERMS_OF_USE_REQUIRED);\n\t\t\t\t}\n\t\t\t\tcatch (SystemException se) {\n\t\t\t\t\ttermsOfUseRequired = PropsValues.TERMS_OF_USE_REQUIRED;\n\t\t\t\t}\n\n\t\t\t\tif (termsOfUseRequired) {\n\t\t\t\t\treturn _PATH_PORTAL_TERMS_OF_USE;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Authenticated users must have a current password\n\n\t\t\tif ((user != null) && user.isPasswordReset()) {\n\t\t\t\treturn _PATH_PORTAL_UPDATE_PASSWORD;\n\t\t\t}\n\n\t\t\t// Authenticated users must have an email address\n\n\t\t\tif ((user != null) &&\n\t\t\t\tValidator.isNull(user.getDisplayEmailAddress())) {\n\n\t\t\t\treturn _PATH_PORTAL_UPDATE_EMAIL_ADDRESS;\n\t\t\t}\n\n\t\t\t// Authenticated users should have a reminder query\n\n\t\t\tif ((user != null) &&\n\t\t\t\t(Validator.isNull(user.getReminderQueryQuestion()) ||\n\t\t\t\t Validator.isNull(user.getReminderQueryAnswer()))) {\n\n\t\t\t\tif (PropsValues.USERS_REMINDER_QUERIES_ENABLED) {\n\t\t\t\t\treturn _PATH_PORTAL_UPDATE_REMINDER_QUERY;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Users must sign in\n\n\t\tif (!isPublicPath(path)) {\n\t\t\tif (user == null) {\n\t\t\t\tSessionErrors.add(request, PrincipalException.class.getName());\n\n\t\t\t\treturn _PATH_PORTAL_LOGIN;\n\t\t\t}\n\t\t}\n\n\t\tActionMapping mapping =\n\t\t\t(ActionMapping)moduleConfig.findActionConfig(path);\n\n\t\tif (mapping == null) {\n\t\t\tAction strutsAction = StrutsActionWrapperRegistry.getAction(path);\n\n\t\t\tif (strutsAction == null) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tpath = mapping.getPath();\n\t\t}\n\n\t\t// Define the portlet objects\n\n\t\tif (isPortletPath(path)) {\n\t\t\ttry {\n\t\t\t\tPortlet portlet = null;\n\n\t\t\t\tlong companyId = PortalUtil.getCompanyId(request);\n\t\t\t\tString portletId = ParamUtil.getString(request, \"p_p_id\");\n\n\t\t\t\tif (Validator.isNotNull(portletId)) {\n\t\t\t\t\tportlet = PortletLocalServiceUtil.getPortletById(\n\t\t\t\t\t\tcompanyId, portletId);\n\t\t\t\t}\n\n\t\t\t\tif (portlet == null) {\n\t\t\t\t\tString strutsPath = path.substring(\n\t\t\t\t\t\t1, path.lastIndexOf(CharPool.SLASH));\n\n\t\t\t\t\tportlet = PortletLocalServiceUtil.getPortletByStrutsPath(\n\t\t\t\t\t\tcompanyId, strutsPath);\n\t\t\t\t}\n\n\t\t\t\tif ((portlet != null) && portlet.isActive()) {\n\t\t\t\t\tdefineObjects(request, response, portlet);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\trequest.setAttribute(PageContext.EXCEPTION, e);\n\n\t\t\t\tpath = _PATH_COMMON_ERROR;\n\t\t\t}\n\t\t}\n\n\t\t// Authenticated users must have access to at least one layout\n\n\t\tif (SessionErrors.contains(\n\t\t\t\trequest, LayoutPermissionException.class.getName())) {\n\n\t\t\treturn _PATH_PORTAL_ERROR;\n\t\t}\n\n\t\treturn path;\n\t}","commit_id":"5986fbb849caf9b6a3db23dd70d384e3cfd30984","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected ActionMapping processMapping(\n\t\t\tHttpServletRequest request, HttpServletResponse response,\n\t\t\tString path)\n\t\tthrows IOException {\n\n\t\tif (path == null) {\n\t\t\treturn null;\n\t\t}\n\n\t\tActionMapping mapping = super.processMapping(request, response, path);\n\n\t\tif (mapping == null) {\n\t\t\tString msg = getInternal().getMessage(\"processInvalid\");\n\n\t\t\t_log.error(\"User ID \" + request.getRemoteUser());\n\t\t\t_log.error(\"Current URL \" + PortalUtil.getCurrentURL(request));\n\t\t\t_log.error(\"Referer \" + request.getHeader(\"Referer\"));\n\t\t\t_log.error(\"Remote address \" + request.getRemoteAddr());\n\n\t\t\t_log.error(msg + \" \" + path);\n\t\t}\n\n\t\treturn mapping;\n\t}","id":61519,"modified_method":"protected ActionMapping processMapping(\n\t\t\tHttpServletRequest request, HttpServletResponse response,\n\t\t\tString path)\n\t\tthrows IOException {\n\n\t\tif (path == null) {\n\t\t\treturn null;\n\t\t}\n\n\t\tActionMapping mapping = null;\n\n\t\tAction action = StrutsActionWrapperRegistry.getAction(path);\n\n\t\tif (action != null) {\n\t\t\tmapping = (ActionMapping)moduleConfig.findActionConfig(path);\n\n\t\t\tif (mapping == null) {\n\t\t\t\tmapping = new ActionMapping();\n\n\t\t\t\tmapping.setPath(path);\n\t\t\t\tmapping.setModuleConfig(moduleConfig);\n\n\t\t\t\trequest.setAttribute(Globals.MAPPING_KEY, mapping);\n\t\t\t}\n\n\t\t\treturn mapping;\n\t\t}\n\n\t\tmapping = super.processMapping(request, response, path);\n\n\t\tif (mapping == null) {\n\t\t\tString msg = getInternal().getMessage(\"processInvalid\");\n\n\t\t\t_log.error(\"User ID \" + request.getRemoteUser());\n\t\t\t_log.error(\"Current URL \" + PortalUtil.getCurrentURL(request));\n\t\t\t_log.error(\"Referer \" + request.getHeader(\"Referer\"));\n\t\t\t_log.error(\"Remote address \" + request.getRemoteAddr());\n\n\t\t\t_log.error(msg + \" \" + path);\n\t\t}\n\n\t\treturn mapping;\n\t}","commit_id":"5986fbb849caf9b6a3db23dd70d384e3cfd30984","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void process(\n\t\t\tHttpServletRequest request, HttpServletResponse response)\n\t\tthrows IOException, ServletException {\n\n\t\tString path = super.processPath(request, response);\n\n\t\tActionMapping mapping = (ActionMapping)moduleConfig.findActionConfig(\n\t\t\tpath);\n\n\t\tif (mapping == null) {\n\t\t\tString lastPath = getLastPath(request);\n\n\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t_log.debug(\"Last path \" + lastPath);\n\t\t\t}\n\n\t\t\tresponse.sendRedirect(lastPath);\n\n\t\t\treturn;\n\t\t}\n\n\t\tsuper.process(request, response);\n\n\t\ttry {\n\t\t\tif (isPortletPath(path)) {\n\t\t\t\tcleanUp(request);\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\t_log.error(e, e);\n\t\t}\n\t}","id":61520,"modified_method":"public void process(\n\t\t\tHttpServletRequest request, HttpServletResponse response)\n\t\tthrows IOException, ServletException {\n\n\t\tString path = super.processPath(request, response);\n\n\t\tActionMapping mapping = (ActionMapping)moduleConfig.findActionConfig(\n\t\t\tpath);\n\n\t\tAction action = StrutsActionWrapperRegistry.getAction(path);\n\n\t\tif (mapping == null && action == null) {\n\t\t\tString lastPath = getLastPath(request);\n\n\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t_log.debug(\"Last path \" + lastPath);\n\t\t\t}\n\n\t\t\tresponse.sendRedirect(lastPath);\n\n\t\t\treturn;\n\t\t}\n\n\t\tsuper.process(request, response);\n\n\t\ttry {\n\t\t\tif (isPortletPath(path)) {\n\t\t\t\tcleanUp(request);\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\t_log.error(e, e);\n\t\t}\n\t}","commit_id":"5986fbb849caf9b6a3db23dd70d384e3cfd30984","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public ActionMapping processMapping(\n\t\tHttpServletRequest request, HttpServletResponse response, String path) {\n\n\t\tif (path == null) {\n\t\t\treturn null;\n\t\t}\n\n\t\tActionMapping mapping = null;\n\n\t\tlong companyId = PortalUtil.getCompanyId(request);\n\n\t\tPortletConfigImpl portletConfigImpl =\n\t\t\t(PortletConfigImpl)request.getAttribute(\n\t\t\t\tJavaConstants.JAVAX_PORTLET_CONFIG);\n\n\t\ttry {\n\t\t\tPortlet portlet = PortletLocalServiceUtil.getPortletById(\n\t\t\t\tcompanyId, portletConfigImpl.getPortletId());\n\n\t\t\tif (moduleConfig.findActionConfig(path) != null) {\n\t\t\t\tmapping = super.processMapping(request, response, path);\n\t\t\t}\n\t\t\telse if (Validator.isNotNull(portlet.getParentStrutsPath())) {\n\t\t\t\tint pos = path.indexOf(StringPool.SLASH, 1);\n\n\t\t\t\tString parentPath =\n\t\t\t\t\tStringPool.SLASH + portlet.getParentStrutsPath() +\n\t\t\t\t\t\tpath.substring(pos, path.length());\n\n\t\t\t\tif (moduleConfig.findActionConfig(parentPath) != null) {\n\t\t\t\t\tmapping = super.processMapping(\n\t\t\t\t\t\trequest, response, parentPath);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t}\n\n\t\tif (mapping == null) {\n\t\t\tString msg = getInternal().getMessage(\"processInvalid\");\n\n\t\t\t_log.error(\"User ID \" + request.getRemoteUser());\n\t\t\t_log.error(\"Current URL \" + PortalUtil.getCurrentURL(request));\n\t\t\t_log.error(\"Referer \" + request.getHeader(\"Referer\"));\n\t\t\t_log.error(\"Remote address \" + request.getRemoteAddr());\n\n\t\t\t_log.error(msg + \" \" + path);\n\t\t}\n\n\t\treturn mapping;\n\t}","id":61521,"modified_method":"public ActionMapping processMapping(\n\t\tHttpServletRequest request, HttpServletResponse response, String path) {\n\n\t\tif (path == null) {\n\t\t\treturn null;\n\t\t}\n\n\t\tActionMapping mapping = null;\n\n\t\tlong companyId = PortalUtil.getCompanyId(request);\n\n\t\tPortletConfigImpl portletConfigImpl =\n\t\t\t(PortletConfigImpl)request.getAttribute(\n\t\t\t\tJavaConstants.JAVAX_PORTLET_CONFIG);\n\n\t\ttry {\n\t\t\tPortlet portlet = PortletLocalServiceUtil.getPortletById(\n\t\t\t\tcompanyId, portletConfigImpl.getPortletId());\n\n\t\t\tif (StrutsActionWrapperRegistry.getAction(path) != null) {\n\t\t\t\tmapping = (ActionMapping)moduleConfig.findActionConfig(path);\n\n\t\t\t\tif (mapping == null) {\n\t\t\t\t\tmapping = new ActionMapping();\n\t\t\t\t\tmapping.setPath(path);\n\t\t\t\t\tmapping.setModuleConfig(moduleConfig);\n\n\t\t\t\t\trequest.setAttribute(Globals.MAPPING_KEY, mapping);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (moduleConfig.findActionConfig(path) != null) {\n\t\t\t\tmapping = super.processMapping(request, response, path);\n\t\t\t}\n\t\t\telse if (Validator.isNotNull(portlet.getParentStrutsPath())) {\n\t\t\t\tint pos = path.indexOf(StringPool.SLASH, 1);\n\n\t\t\t\tString parentPath =\n\t\t\t\t\tStringPool.SLASH + portlet.getParentStrutsPath() +\n\t\t\t\t\t\tpath.substring(pos, path.length());\n\n\t\t\t\tif (StrutsActionWrapperRegistry.getAction(parentPath) != null) {\n\t\t\t\t\tmapping = (ActionMapping)moduleConfig.findActionConfig(path);\n\n\t\t\t\t\tif (mapping == null) {\n\t\t\t\t\t\tmapping = new ActionMapping();\n\t\t\t\t\t\tmapping.setPath(parentPath);\n\t\t\t\t\t\tmapping.setModuleConfig(moduleConfig);\n\n\t\t\t\t\t\trequest.setAttribute(Globals.MAPPING_KEY, mapping);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (moduleConfig.findActionConfig(parentPath) != null) {\n\t\t\t\t\tmapping = super.processMapping(\n\t\t\t\t\t\trequest, response, parentPath);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t}\n\n\t\tif (mapping == null) {\n\t\t\tString msg = getInternal().getMessage(\"processInvalid\");\n\n\t\t\t_log.error(\"User ID \" + request.getRemoteUser());\n\t\t\t_log.error(\"Current URL \" + PortalUtil.getCurrentURL(request));\n\t\t\t_log.error(\"Referer \" + request.getHeader(\"Referer\"));\n\t\t\t_log.error(\"Remote address \" + request.getRemoteAddr());\n\n\t\t\t_log.error(msg + \" \" + path);\n\t\t}\n\n\t\treturn mapping;\n\t}","commit_id":"5986fbb849caf9b6a3db23dd70d384e3cfd30984","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n    protected void configure() {\n        bind(ClusterService.class).to(InternalClusterService.class).asEagerSingleton();\n        bind(MetaDataCreateIndexService.class).asEagerSingleton();\n        bind(MetaDataDeleteIndexService.class).asEagerSingleton();\n        bind(MetaDataStateIndexService.class).asEagerSingleton();\n        bind(MetaDataMappingService.class).asEagerSingleton();\n        bind(MetaDataIndexAliasesService.class).asEagerSingleton();\n        bind(MetaDataUpdateSettingsService.class).asEagerSingleton();\n        bind(MetaDataIndexTemplateService.class).asEagerSingleton();\n\n        bind(RoutingService.class).asEagerSingleton();\n\n        bind(ShardStateAction.class).asEagerSingleton();\n        bind(NodeIndexCreatedAction.class).asEagerSingleton();\n        bind(NodeIndexDeletedAction.class).asEagerSingleton();\n        bind(NodeMappingCreatedAction.class).asEagerSingleton();\n        bind(MappingUpdatedAction.class).asEagerSingleton();\n    }","id":61522,"modified_method":"@Override\n    protected void configure() {\n        bind(ClusterService.class).to(InternalClusterService.class).asEagerSingleton();\n        bind(MetaDataCreateIndexService.class).asEagerSingleton();\n        bind(MetaDataDeleteIndexService.class).asEagerSingleton();\n        bind(MetaDataStateIndexService.class).asEagerSingleton();\n        bind(MetaDataMappingService.class).asEagerSingleton();\n        bind(MetaDataIndexAliasesService.class).asEagerSingleton();\n        bind(MetaDataUpdateSettingsService.class).asEagerSingleton();\n        bind(MetaDataIndexTemplateService.class).asEagerSingleton();\n\n        bind(RoutingService.class).asEagerSingleton();\n\n        bind(ShardStateAction.class).asEagerSingleton();\n        bind(NodeIndexCreatedAction.class).asEagerSingleton();\n        bind(NodeIndexDeletedAction.class).asEagerSingleton();\n        bind(NodeMappingCreatedAction.class).asEagerSingleton();\n        bind(NodeMappingRefreshAction.class).asEagerSingleton();\n        bind(MappingUpdatedAction.class).asEagerSingleton();\n    }","commit_id":"65e05538f0ddae8549469ec0b59ee7611b39fdb0","url":"https://github.com/elastic/elasticsearch"},{"original_method":"private void applyMappings(ClusterChangedEvent event) {\n        // go over and update mappings\n        for (IndexMetaData indexMetaData : event.state().metaData()) {\n            if (!indicesService.hasIndex(indexMetaData.index())) {\n                // we only create / update here\n                continue;\n            }\n            String index = indexMetaData.index();\n            IndexService indexService = indicesService.indexServiceSafe(index);\n            MapperService mapperService = indexService.mapperService();\n            // first, go over and update the _default_ mapping (if exists)\n            if (indexMetaData.mappings().containsKey(MapperService.DEFAULT_MAPPING)) {\n                processMapping(event, index, mapperService, MapperService.DEFAULT_MAPPING, indexMetaData.mapping(MapperService.DEFAULT_MAPPING).source());\n            }\n\n            // go over and add the relevant mappings (or update them)\n            for (MappingMetaData mappingMd : indexMetaData.mappings().values()) {\n                String mappingType = mappingMd.type();\n                CompressedString mappingSource = mappingMd.source();\n                if (mappingType.equals(MapperService.DEFAULT_MAPPING)) { // we processed _default_ first\n                    continue;\n                }\n                processMapping(event, index, mapperService, mappingType, mappingSource);\n            }\n            // go over and remove mappings\n            for (DocumentMapper documentMapper : mapperService) {\n                if (seenMappings.containsKey(new Tuple<String, String>(index, documentMapper.type())) && !indexMetaData.mappings().containsKey(documentMapper.type())) {\n                    // we have it in our mappings, but not in the metadata, and we have seen it in the cluster state, remove it\n                    mapperService.remove(documentMapper.type());\n                    seenMappings.remove(new Tuple<String, String>(index, documentMapper.type()));\n                }\n            }\n        }\n    }","id":61523,"modified_method":"private void applyMappings(ClusterChangedEvent event) {\n        // go over and update mappings\n        for (IndexMetaData indexMetaData : event.state().metaData()) {\n            if (!indicesService.hasIndex(indexMetaData.index())) {\n                // we only create / update here\n                continue;\n            }\n            List<String> typesToRefresh = null;\n            String index = indexMetaData.index();\n            IndexService indexService = indicesService.indexServiceSafe(index);\n            MapperService mapperService = indexService.mapperService();\n            // first, go over and update the _default_ mapping (if exists)\n            if (indexMetaData.mappings().containsKey(MapperService.DEFAULT_MAPPING)) {\n                processMapping(event, index, mapperService, MapperService.DEFAULT_MAPPING, indexMetaData.mapping(MapperService.DEFAULT_MAPPING).source());\n            }\n\n            // go over and add the relevant mappings (or update them)\n            for (MappingMetaData mappingMd : indexMetaData.mappings().values()) {\n                String mappingType = mappingMd.type();\n                CompressedString mappingSource = mappingMd.source();\n                if (mappingType.equals(MapperService.DEFAULT_MAPPING)) { // we processed _default_ first\n                    continue;\n                }\n                boolean requireRefresh = processMapping(event, index, mapperService, mappingType, mappingSource);\n                if (requireRefresh) {\n                    if (typesToRefresh == null) {\n                        typesToRefresh = Lists.newArrayList();\n                    }\n                    typesToRefresh.add(mappingType);\n                }\n            }\n            if (typesToRefresh != null) {\n                nodeMappingRefreshAction.nodeMappingRefresh(new NodeMappingRefreshAction.NodeMappingRefreshRequest(index, typesToRefresh.toArray(new String[typesToRefresh.size()]), event.state().nodes().localNodeId()));\n            }\n            // go over and remove mappings\n            for (DocumentMapper documentMapper : mapperService) {\n                if (seenMappings.containsKey(new Tuple<String, String>(index, documentMapper.type())) && !indexMetaData.mappings().containsKey(documentMapper.type())) {\n                    // we have it in our mappings, but not in the metadata, and we have seen it in the cluster state, remove it\n                    mapperService.remove(documentMapper.type());\n                    seenMappings.remove(new Tuple<String, String>(index, documentMapper.type()));\n                }\n            }\n        }\n    }","commit_id":"65e05538f0ddae8549469ec0b59ee7611b39fdb0","url":"https://github.com/elastic/elasticsearch"},{"original_method":"private void processMapping(ClusterChangedEvent event, String index, MapperService mapperService, String mappingType, CompressedString mappingSource) {\n        if (!seenMappings.containsKey(new Tuple<String, String>(index, mappingType))) {\n            seenMappings.put(new Tuple<String, String>(index, mappingType), true);\n        }\n\n        try {\n            if (!mapperService.hasMapping(mappingType)) {\n                if (logger.isDebugEnabled()) {\n                    logger.debug(\"[{}] adding mapping [{}], source [{}]\", index, mappingType, mappingSource.string());\n                }\n                mapperService.add(mappingType, mappingSource.string());\n                if (!mapperService.documentMapper(mappingType).mappingSource().equals(mappingSource)) {\n                    // this might happen when upgrading from 0.15 to 0.16\n                    logger.debug(\"[{}] parsed mapping [{}], and got different sources\\noriginal:\\n{}\\nparsed:\\n{}\", index, mappingType, mappingSource, mapperService.documentMapper(mappingType).mappingSource());\n                }\n                nodeMappingCreatedAction.nodeMappingCreated(new NodeMappingCreatedAction.NodeMappingCreatedResponse(index, mappingType, event.state().nodes().localNodeId()));\n            } else {\n                DocumentMapper existingMapper = mapperService.documentMapper(mappingType);\n                if (!mappingSource.equals(existingMapper.mappingSource())) {\n                    // mapping changed, update it\n                    if (logger.isDebugEnabled()) {\n                        logger.debug(\"[{}] updating mapping [{}], source [{}]\", index, mappingType, mappingSource.string());\n                    }\n                    mapperService.add(mappingType, mappingSource.string());\n                    if (!mapperService.documentMapper(mappingType).mappingSource().equals(mappingSource)) {\n                        // this might happen when upgrading from 0.15 to 0.16\n                        logger.debug(\"[{}] parsed mapping [{}], and got different sources\\noriginal:\\n{}\\nparsed:\\n{}\", index, mappingType, mappingSource, mapperService.documentMapper(mappingType).mappingSource());\n                    }\n                    nodeMappingCreatedAction.nodeMappingCreated(new NodeMappingCreatedAction.NodeMappingCreatedResponse(index, mappingType, event.state().nodes().localNodeId()));\n                }\n            }\n        } catch (Exception e) {\n            logger.warn(\"[{}] failed to add mapping [{}], source [{}]\", e, index, mappingType, mappingSource);\n        }\n    }","id":61524,"modified_method":"private boolean processMapping(ClusterChangedEvent event, String index, MapperService mapperService, String mappingType, CompressedString mappingSource) {\n        if (!seenMappings.containsKey(new Tuple<String, String>(index, mappingType))) {\n            seenMappings.put(new Tuple<String, String>(index, mappingType), true);\n        }\n\n        boolean requiresRefresh = false;\n        try {\n            if (!mapperService.hasMapping(mappingType)) {\n                if (logger.isDebugEnabled()) {\n                    logger.debug(\"[{}] adding mapping [{}], source [{}]\", index, mappingType, mappingSource.string());\n                }\n                mapperService.add(mappingType, mappingSource.string());\n                if (!mapperService.documentMapper(mappingType).mappingSource().equals(mappingSource)) {\n                    // this might happen when upgrading from 0.15 to 0.16\n                    logger.debug(\"[{}] parsed mapping [{}], and got different sources\\noriginal:\\n{}\\nparsed:\\n{}\", index, mappingType, mappingSource, mapperService.documentMapper(mappingType).mappingSource());\n                    requiresRefresh = true;\n                }\n                nodeMappingCreatedAction.nodeMappingCreated(new NodeMappingCreatedAction.NodeMappingCreatedResponse(index, mappingType, event.state().nodes().localNodeId()));\n            } else {\n                DocumentMapper existingMapper = mapperService.documentMapper(mappingType);\n                if (!mappingSource.equals(existingMapper.mappingSource())) {\n                    // mapping changed, update it\n                    if (logger.isDebugEnabled()) {\n                        logger.debug(\"[{}] updating mapping [{}], source [{}]\", index, mappingType, mappingSource.string());\n                    }\n                    mapperService.add(mappingType, mappingSource.string());\n                    if (!mapperService.documentMapper(mappingType).mappingSource().equals(mappingSource)) {\n                        requiresRefresh = true;\n                        // this might happen when upgrading from 0.15 to 0.16\n                        logger.debug(\"[{}] parsed mapping [{}], and got different sources\\noriginal:\\n{}\\nparsed:\\n{}\", index, mappingType, mappingSource, mapperService.documentMapper(mappingType).mappingSource());\n                    }\n                    nodeMappingCreatedAction.nodeMappingCreated(new NodeMappingCreatedAction.NodeMappingCreatedResponse(index, mappingType, event.state().nodes().localNodeId()));\n                }\n            }\n        } catch (Exception e) {\n            logger.warn(\"[{}] failed to add mapping [{}], source [{}]\", e, index, mappingType, mappingSource);\n        }\n        return requiresRefresh;\n    }","commit_id":"65e05538f0ddae8549469ec0b59ee7611b39fdb0","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Inject public IndicesClusterStateService(Settings settings, IndicesService indicesService, ClusterService clusterService,\n                                              ThreadPool threadPool, RecoveryTarget recoveryTarget, RecoverySource recoverySource,\n                                              ShardStateAction shardStateAction,\n                                              NodeIndexCreatedAction nodeIndexCreatedAction, NodeIndexDeletedAction nodeIndexDeletedAction,\n                                              NodeMappingCreatedAction nodeMappingCreatedAction) {\n        super(settings);\n        this.indicesService = indicesService;\n        this.clusterService = clusterService;\n        this.threadPool = threadPool;\n        this.recoverySource = recoverySource;\n        this.recoveryTarget = recoveryTarget;\n        this.shardStateAction = shardStateAction;\n        this.nodeIndexCreatedAction = nodeIndexCreatedAction;\n        this.nodeIndexDeletedAction = nodeIndexDeletedAction;\n        this.nodeMappingCreatedAction = nodeMappingCreatedAction;\n    }","id":61525,"modified_method":"@Inject public IndicesClusterStateService(Settings settings, IndicesService indicesService, ClusterService clusterService,\n                                              ThreadPool threadPool, RecoveryTarget recoveryTarget, RecoverySource recoverySource,\n                                              ShardStateAction shardStateAction,\n                                              NodeIndexCreatedAction nodeIndexCreatedAction, NodeIndexDeletedAction nodeIndexDeletedAction,\n                                              NodeMappingCreatedAction nodeMappingCreatedAction, NodeMappingRefreshAction nodeMappingRefreshAction) {\n        super(settings);\n        this.indicesService = indicesService;\n        this.clusterService = clusterService;\n        this.threadPool = threadPool;\n        this.recoverySource = recoverySource;\n        this.recoveryTarget = recoveryTarget;\n        this.shardStateAction = shardStateAction;\n        this.nodeIndexCreatedAction = nodeIndexCreatedAction;\n        this.nodeIndexDeletedAction = nodeIndexDeletedAction;\n        this.nodeMappingCreatedAction = nodeMappingCreatedAction;\n        this.nodeMappingRefreshAction = nodeMappingRefreshAction;\n    }","commit_id":"65e05538f0ddae8549469ec0b59ee7611b39fdb0","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n\tpublic boolean isFilterEnabled(\n\t\tHttpServletRequest request, HttpServletResponse response) {\n\n\t\ttry {\n\t\t\tlong companyId = PortalInstances.getCompanyId(request);\n\n\t\t\tNtlmConfiguration ntlmConfiguration =\n\t\t\t\t_configurationProvider.getConfiguration(\n\t\t\t\t\tNtlmConfiguration.class,\n\t\t\t\t\tnew CompanyServiceSettingsLocator(\n\t\t\t\t\t\tcompanyId, NtlmConstants.SERVICE_NAME));\n\n\t\t\tif (BrowserSnifferUtil.isIe(request) &&\n\t\t\t\tntlmConfiguration.enabled()) {\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\t_log.error(e, e);\n\t\t}\n\n\t\treturn false;\n\t}","id":61526,"modified_method":"@Override\n\tpublic boolean isFilterEnabled(\n\t\tHttpServletRequest request, HttpServletResponse response) {\n\n\t\tif (BrowserSnifferUtil.isIe(request)) {\n\t\t\tlong companyId = PortalInstances.getCompanyId(request);\n\n\t\t\ttry {\n\t\t\t\tNtlmConfiguration ntlmConfiguration =\n\t\t\t\t\t_configurationProvider.getConfiguration(\n\t\t\t\t\t\tNtlmConfiguration.class,\n\t\t\t\t\t\tnew CompanyServiceSettingsLocator(\n\t\t\t\t\t\t\tcompanyId, NtlmConstants.SERVICE_NAME));\n\n\t\t\t\treturn ntlmConfiguration.enabled();\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(e, e);\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}","commit_id":"6c12717419573aff1ffea410eac8629f8743edbc","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic boolean isFilterEnabled(\n\t\tHttpServletRequest request, HttpServletResponse response) {\n\n\t\ttry {\n\t\t\tlong companyId = PortalInstances.getCompanyId(request);\n\n\t\t\tNtlmConfiguration ntlmConfiguration =\n\t\t\t\t_configurationProvider.getConfiguration(\n\t\t\t\t\tNtlmConfiguration.class,\n\t\t\t\t\tnew CompanyServiceSettingsLocator(\n\t\t\t\t\t\tcompanyId, NtlmConstants.SERVICE_NAME));\n\n\t\t\tif (ntlmConfiguration.enabled() &&\n\t\t\t\tBrowserSnifferUtil.isIe(request) &&\n\t\t\t\trequest.getMethod().equals(HttpMethods.POST)) {\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tcatch (ConfigurationException ce) {\n\t\t\t_log.error(ce, ce);\n\t\t}\n\n\t\treturn false;\n\t}","id":61527,"modified_method":"@Override\n\tpublic boolean isFilterEnabled(\n\t\tHttpServletRequest request, HttpServletResponse response) {\n\n\t\tif (BrowserSnifferUtil.isIe(request) &&\n\t\t\trequest.getMethod().equals(HttpMethods.POST)) {\n\n\t\t\tlong companyId = PortalInstances.getCompanyId(request);\n\n\t\t\ttry {\n\t\t\t\tNtlmConfiguration ntlmConfiguration =\n\t\t\t\t\t_configurationProvider.getConfiguration(\n\t\t\t\t\t\tNtlmConfiguration.class,\n\t\t\t\t\t\tnew CompanyServiceSettingsLocator(\n\t\t\t\t\t\t\tcompanyId, NtlmConstants.SERVICE_NAME));\n\n\t\t\t\treturn ntlmConfiguration.enabled();\n\t\t\t}\n\t\t\tcatch (ConfigurationException ce) {\n\t\t\t\t_log.error(ce, ce);\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}","commit_id":"6c12717419573aff1ffea410eac8629f8743edbc","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic boolean isFilterEnabled(\n\t\tHttpServletRequest request, HttpServletResponse response) {\n\n\t\tif (BrowserSnifferUtil.isIe(request)) {\n\t\t\tlong companyId = PortalInstances.getCompanyId(request);\n\n\t\t\ttry {\n\t\t\t\tNtlmConfiguration ntlmConfiguration =\n\t\t\t\t\t_configurationProvider.getConfiguration(\n\t\t\t\t\t\tNtlmConfiguration.class,\n\t\t\t\t\t\tnew CompanyServiceSettingsLocator(\n\t\t\t\t\t\t\tcompanyId, NtlmConstants.SERVICE_NAME));\n\n\t\t\t\treturn ntlmConfiguration.enabled();\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(e, e);\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}","id":61528,"modified_method":"@Override\n\tpublic boolean isFilterEnabled(\n\t\tHttpServletRequest request, HttpServletResponse response) {\n\n\t\tif (!BrowserSnifferUtil.isIe(request)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlong companyId = PortalInstances.getCompanyId(request);\n\n\t\ttry {\n\t\t\tNtlmConfiguration ntlmConfiguration =\n\t\t\t\t_configurationProvider.getConfiguration(\n\t\t\t\t\tNtlmConfiguration.class,\n\t\t\t\t\tnew CompanyServiceSettingsLocator(\n\t\t\t\t\t\tcompanyId, NtlmConstants.SERVICE_NAME));\n\n\t\t\treturn ntlmConfiguration.enabled();\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\t_log.error(e, e);\n\t\t}\n\n\t\treturn false;\n\t}","commit_id":"8318bfc536c331f2e21aeaace7c18e5cbb994dee","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic boolean isFilterEnabled(\n\t\tHttpServletRequest request, HttpServletResponse response) {\n\n\t\tif (BrowserSnifferUtil.isIe(request) &&\n\t\t\trequest.getMethod().equals(HttpMethods.POST)) {\n\n\t\t\tlong companyId = PortalInstances.getCompanyId(request);\n\n\t\t\ttry {\n\t\t\t\tNtlmConfiguration ntlmConfiguration =\n\t\t\t\t\t_configurationProvider.getConfiguration(\n\t\t\t\t\t\tNtlmConfiguration.class,\n\t\t\t\t\t\tnew CompanyServiceSettingsLocator(\n\t\t\t\t\t\t\tcompanyId, NtlmConstants.SERVICE_NAME));\n\n\t\t\t\treturn ntlmConfiguration.enabled();\n\t\t\t}\n\t\t\tcatch (ConfigurationException ce) {\n\t\t\t\t_log.error(ce, ce);\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}","id":61529,"modified_method":"@Override\n\tpublic boolean isFilterEnabled(\n\t\tHttpServletRequest request, HttpServletResponse response) {\n\n\t\tif (!BrowserSnifferUtil.isIe(request) ||\n\t\t\t!request.getMethod().equals(HttpMethods.POST)) {\n\n\t\t\treturn false;\n\t\t}\n\n\t\tlong companyId = PortalInstances.getCompanyId(request);\n\n\t\ttry {\n\t\t\tNtlmConfiguration ntlmConfiguration =\n\t\t\t\t_configurationProvider.getConfiguration(\n\t\t\t\t\tNtlmConfiguration.class,\n\t\t\t\t\tnew CompanyServiceSettingsLocator(\n\t\t\t\t\t\tcompanyId, NtlmConstants.SERVICE_NAME));\n\n\t\t\treturn ntlmConfiguration.enabled();\n\t\t}\n\t\tcatch (ConfigurationException ce) {\n\t\t\t_log.error(ce, ce);\n\t\t}\n\n\t\treturn false;\n\t}","commit_id":"8318bfc536c331f2e21aeaace7c18e5cbb994dee","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n    public void run() {\n      LOG.info(getName() + \": starting\");\n      SERVER.set(HBaseServer.this);\n\n      while (running) {\n        SelectionKey key = null;\n        try {\n          selector.select(); // FindBugs IS2_INCONSISTENT_SYNC\n          Iterator<SelectionKey> iter = selector.selectedKeys().iterator();\n          while (iter.hasNext()) {\n            key = iter.next();\n            iter.remove();\n            try {\n              if (key.isValid()) {\n                if (key.isAcceptable())\n                  doAccept(key);\n                else if (key.isReadable())\n                  doRead(key);\n              }\n            } catch (IOException ignored) {\n            }\n            key = null;\n          }\n        } catch (OutOfMemoryError e) {\n          if (errorHandler != null) {\n            if (errorHandler.checkOOME(e)) {\n              LOG.info(getName() + \": exiting on OOME\");\n              closeCurrentConnection(key);\n              cleanupConnections(true);\n              return;\n            }\n          } else {\n            // we can run out of memory if we have too many threads\n            // log the event and sleep for a minute and give\n            // some thread(s) a chance to finish\n            LOG.warn(\"Out of Memory in server select\", e);\n            closeCurrentConnection(key);\n            cleanupConnections(true);\n            try { Thread.sleep(60000); } catch (Exception ignored) {}\n      }\n        } catch (InterruptedException e) {\n          if (running) {                          // unexpected -- log it\n            LOG.info(getName() + \" caught: \" +\n                     StringUtils.stringifyException(e));\n          }\n        } catch (Exception e) {\n          closeCurrentConnection(key);\n        }\n        cleanupConnections(false);\n      }\n      LOG.info(\"Stopping \" + this.getName());\n\n      synchronized (this) {\n        try {\n          acceptChannel.close();\n          selector.close();\n        } catch (IOException ignored) { }\n\n        selector= null;\n        acceptChannel= null;\n\n        // clean up all connections\n        while (!connectionList.isEmpty()) {\n          closeConnection(connectionList.remove(0));\n        }\n      }\n    }","id":61530,"modified_method":"@Override\n    public void run() {\n      LOG.info(getName() + \": starting\");\n      SERVER.set(HBaseServer.this);\n\n      while (running) {\n        SelectionKey key = null;\n        try {\n          selector.select(); // FindBugs IS2_INCONSISTENT_SYNC\n          Iterator<SelectionKey> iter = selector.selectedKeys().iterator();\n          while (iter.hasNext()) {\n            key = iter.next();\n            iter.remove();\n            try {\n              if (key.isValid()) {\n                if (key.isAcceptable())\n                  doAccept(key);\n              }\n            } catch (IOException ignored) {\n            }\n            key = null;\n          }\n        } catch (OutOfMemoryError e) {\n          if (errorHandler != null) {\n            if (errorHandler.checkOOME(e)) {\n              LOG.info(getName() + \": exiting on OOME\");\n              closeCurrentConnection(key);\n              cleanupConnections(true);\n              return;\n            }\n          } else {\n            // we can run out of memory if we have too many threads\n            // log the event and sleep for a minute and give\n            // some thread(s) a chance to finish\n            LOG.warn(\"Out of Memory in server select\", e);\n            closeCurrentConnection(key);\n            cleanupConnections(true);\n            try { Thread.sleep(60000); } catch (Exception ignored) {}\n      }\n        } catch (Exception e) {\n          closeCurrentConnection(key);\n        }\n        cleanupConnections(false);\n      }\n      LOG.info(\"Stopping \" + this.getName());\n\n      synchronized (this) {\n        try {\n          acceptChannel.close();\n          selector.close();\n        } catch (IOException ignored) { }\n\n        selector= null;\n        acceptChannel= null;\n\n        // clean up all connections\n        while (!connectionList.isEmpty()) {\n          closeConnection(connectionList.remove(0));\n        }\n      }\n    }","commit_id":"5581a249e89d7fe614a2f1a4496e58004226a323","url":"https://github.com/apache/hbase"},{"original_method":"protected HBaseServer(String bindAddress, int port,\n                  Class<? extends Writable> paramClass, int handlerCount,\n                  Configuration conf, String serverName)\n    throws IOException {\n    this.bindAddress = bindAddress;\n    this.conf = conf;\n    this.port = port;\n    this.paramClass = paramClass;\n    this.handlerCount = handlerCount;\n    this.socketSendBufferSize = 0;\n    this.maxQueueSize = handlerCount * MAX_QUEUE_SIZE_PER_HANDLER;\n    this.callQueue  = new LinkedBlockingQueue<Call>(maxQueueSize);\n    this.maxIdleTime = 2*conf.getInt(\"ipc.client.connection.maxidletime\", 1000);\n    this.maxConnectionsToNuke = conf.getInt(\"ipc.client.kill.max\", 10);\n    this.thresholdIdleConnections = conf.getInt(\"ipc.client.idlethreshold\", 4000);\n\n    // Start the listener here and let it bind to the port\n    listener = new Listener();\n    this.port = listener.getAddress().getPort();\n    this.rpcMetrics = new HBaseRpcMetrics(serverName,\n                          Integer.toString(this.port));\n    this.tcpNoDelay = conf.getBoolean(\"ipc.server.tcpnodelay\", false);\n    this.tcpKeepAlive = conf.getBoolean(\"ipc.server.tcpkeepalive\", true);\n\n    // Create the responder here\n    responder = new Responder();\n  }","id":61531,"modified_method":"protected HBaseServer(String bindAddress, int port,\n                  Class<? extends Writable> paramClass, int handlerCount,\n                  Configuration conf, String serverName)\n    throws IOException {\n    this.bindAddress = bindAddress;\n    this.conf = conf;\n    this.port = port;\n    this.paramClass = paramClass;\n    this.handlerCount = handlerCount;\n    this.socketSendBufferSize = 0;\n    this.maxQueueSize = handlerCount * MAX_QUEUE_SIZE_PER_HANDLER;\n     this.readThreads = conf.getInt(\n        \"ipc.server.read.threadpool.size\",\n        10);\n    this.callQueue  = new LinkedBlockingQueue<Call>(maxQueueSize);\n    this.maxIdleTime = 2*conf.getInt(\"ipc.client.connection.maxidletime\", 1000);\n    this.maxConnectionsToNuke = conf.getInt(\"ipc.client.kill.max\", 10);\n    this.thresholdIdleConnections = conf.getInt(\"ipc.client.idlethreshold\", 4000);\n\n    // Start the listener here and let it bind to the port\n    listener = new Listener();\n    this.port = listener.getAddress().getPort();\n    this.rpcMetrics = new HBaseRpcMetrics(serverName,\n                          Integer.toString(this.port));\n    this.tcpNoDelay = conf.getBoolean(\"ipc.server.tcpnodelay\", false);\n    this.tcpKeepAlive = conf.getBoolean(\"ipc.server.tcpkeepalive\", true);\n\n    // Create the responder here\n    responder = new Responder();\n  }","commit_id":"5581a249e89d7fe614a2f1a4496e58004226a323","url":"https://github.com/apache/hbase"},{"original_method":"synchronized void doStop() {\n      if (selector != null) {\n        selector.wakeup();\n        Thread.yield();\n      }\n      if (acceptChannel != null) {\n        try {\n          acceptChannel.socket().close();\n        } catch (IOException e) {\n          LOG.info(getName() + \":Exception in closing listener socket. \" + e);\n        }\n      }\n    }","id":61532,"modified_method":"synchronized void doStop() {\n      if (selector != null) {\n        selector.wakeup();\n        Thread.yield();\n      }\n      if (acceptChannel != null) {\n        try {\n          acceptChannel.socket().close();\n        } catch (IOException e) {\n          LOG.info(getName() + \":Exception in closing listener socket. \" + e);\n        }\n      }\n      readPool.shutdownNow();\n    }","commit_id":"5581a249e89d7fe614a2f1a4496e58004226a323","url":"https://github.com/apache/hbase"},{"original_method":"public Listener() throws IOException {\n      address = new InetSocketAddress(bindAddress, port);\n      // Create a new server socket and set to non blocking mode\n      acceptChannel = ServerSocketChannel.open();\n      acceptChannel.configureBlocking(false);\n\n      // Bind the server socket to the local host and port\n      bind(acceptChannel.socket(), address, backlogLength);\n      port = acceptChannel.socket().getLocalPort(); //Could be an ephemeral port\n      // create a selector;\n      selector= Selector.open();\n\n      // Register accepts on the server socket with the selector.\n      acceptChannel.register(selector, SelectionKey.OP_ACCEPT);\n      this.setName(\"IPC Server listener on \" + port);\n      this.setDaemon(true);\n    }","id":61533,"modified_method":"public Listener() throws IOException {\n      address = new InetSocketAddress(bindAddress, port);\n      // Create a new server socket and set to non blocking mode\n      acceptChannel = ServerSocketChannel.open();\n      acceptChannel.configureBlocking(false);\n\n      // Bind the server socket to the local host and port\n      bind(acceptChannel.socket(), address, backlogLength);\n      port = acceptChannel.socket().getLocalPort(); //Could be an ephemeral port\n      // create a selector;\n      selector= Selector.open();\n\n      readers = new Reader[readThreads];\n      readPool = Executors.newFixedThreadPool(readThreads);\n      for (int i = 0; i < readThreads; ++i) {\n        Selector readSelector = Selector.open();\n        Reader reader = new Reader(readSelector);\n        readers[i] = reader;\n        readPool.execute(reader);\n      }\n\n      // Register accepts on the server socket with the selector.\n      acceptChannel.register(selector, SelectionKey.OP_ACCEPT);\n      this.setName(\"IPC Server listener on \" + port);\n      this.setDaemon(true);\n    }","commit_id":"5581a249e89d7fe614a2f1a4496e58004226a323","url":"https://github.com/apache/hbase"},{"original_method":"void doAccept(SelectionKey key) throws IOException, OutOfMemoryError {\n      Connection c;\n      ServerSocketChannel server = (ServerSocketChannel) key.channel();\n      // accept up to 10 connections\n      for (int i=0; i<10; i++) {\n        SocketChannel channel = server.accept();\n        if (channel==null) return;\n\n        channel.configureBlocking(false);\n        channel.socket().setTcpNoDelay(tcpNoDelay);\n        channel.socket().setKeepAlive(tcpKeepAlive);\n        SelectionKey readKey = channel.register(selector, SelectionKey.OP_READ);\n        c = new Connection(channel, System.currentTimeMillis());\n        readKey.attach(c);\n        synchronized (connectionList) {\n          connectionList.add(numConnections, c);\n          numConnections++;\n        }\n        if (LOG.isDebugEnabled())\n          LOG.debug(\"Server connection from \" + c.toString() +\n              \"; # active connections: \" + numConnections +\n              \"; # queued calls: \" + callQueue.size());\n      }\n    }","id":61534,"modified_method":"void doAccept(SelectionKey key) throws IOException, OutOfMemoryError {\n      Connection c;\n      ServerSocketChannel server = (ServerSocketChannel) key.channel();\n\n      SocketChannel channel;\n      while ((channel = server.accept()) != null) {\n        channel.configureBlocking(false);\n        channel.socket().setTcpNoDelay(tcpNoDelay);\n        channel.socket().setKeepAlive(tcpKeepAlive);\n\n        Reader reader = getReader();\n        try {\n          reader.startAdd();\n          SelectionKey readKey = reader.registerChannel(channel);\n          c = new Connection(channel, System.currentTimeMillis());\n          readKey.attach(c);\n          synchronized (connectionList) {\n            connectionList.add(numConnections, c);\n            numConnections++;\n          }\n          if (LOG.isDebugEnabled())\n            LOG.debug(\"Server connection from \" + c.toString() +\n                \"; # active connections: \" + numConnections +\n                \"; # queued calls: \" + callQueue.size());\n        } finally {\n          reader.finishAdd();\n        }\n      }\n    }","commit_id":"5581a249e89d7fe614a2f1a4496e58004226a323","url":"https://github.com/apache/hbase"},{"original_method":"private void processAccept(SelectionKey key) {\n        //if (_log.shouldLog(Log.DEBUG))\n        //    _log.debug(\"processing accept\");\n        ServerSocketChannel servChan = (ServerSocketChannel)key.attachment();\n        try {\n            SocketChannel chan = servChan.accept();\n            // don't throw an NPE if the connect is gone again\n            if(chan == null)\n                return;\n            chan.configureBlocking(false);\n\n            if (!_transport.allowConnection()) {\n                if (_log.shouldLog(Log.WARN))\n                    _log.warn(\"Receive session request but at connection limit: \" + chan.socket().getInetAddress());\n                try { chan.close(); } catch (IOException ioe) { }\n                return;\n            }\n\n            if (_context.blocklist().isBlocklisted(chan.socket().getInetAddress().getAddress())) {\n                if (_log.shouldLog(Log.WARN))\n                    _log.warn(\"Receive session request from blocklisted IP: \" + chan.socket().getInetAddress());\n                // need to add this stat first\n                // _context.statManager().addRateData(\"ntcp.connectBlocklisted\", 1, 0);\n                try { chan.close(); } catch (IOException ioe) { }\n                return;\n            }\n            // BUGFIX for firewalls. --Sponge\n            chan.socket().setKeepAlive(true);\n\n            SelectionKey ckey = chan.register(_selector, SelectionKey.OP_READ);\n            new NTCPConnection(_context, _transport, chan, ckey);\n            //if (_log.shouldLog(Log.DEBUG))\n            //    _log.debug(\"new NTCP connection established: \" +con);\n        } catch (IOException ioe) {\n            _log.error(\"Error accepting\", ioe);\n        }\n    }","id":61535,"modified_method":"private void processAccept(SelectionKey key) {\n        //if (_log.shouldLog(Log.DEBUG))\n        //    _log.debug(\"processing accept\");\n        ServerSocketChannel servChan = (ServerSocketChannel)key.attachment();\n        try {\n            SocketChannel chan = servChan.accept();\n            // don't throw an NPE if the connect is gone again\n            if(chan == null)\n                return;\n            chan.configureBlocking(false);\n\n            if (!_transport.allowConnection()) {\n                if (_log.shouldLog(Log.WARN))\n                    _log.warn(\"Receive session request but at connection limit: \" + chan.socket().getInetAddress());\n                try { chan.close(); } catch (IOException ioe) { }\n                return;\n            }\n\n            if (_context.blocklist().isBlocklisted(chan.socket().getInetAddress().getAddress())) {\n                if (_log.shouldLog(Log.WARN))\n                    _log.warn(\"Receive session request from blocklisted IP: \" + chan.socket().getInetAddress());\n                // need to add this stat first\n                // _context.statManager().addRateData(\"ntcp.connectBlocklisted\", 1, 0);\n                try { chan.close(); } catch (IOException ioe) { }\n                return;\n            }\n            // BUGFIX for firewalls. --Sponge\n            if (_context.commSystem().getReachabilityStatus() != CommSystemFacade.STATUS_OK)\n                chan.socket().setKeepAlive(true);\n\n            SelectionKey ckey = chan.register(_selector, SelectionKey.OP_READ);\n            new NTCPConnection(_context, _transport, chan, ckey);\n            //if (_log.shouldLog(Log.DEBUG))\n            //    _log.debug(\"new NTCP connection established: \" +con);\n        } catch (IOException ioe) {\n            _log.error(\"Error accepting\", ioe);\n        }\n    }","commit_id":"e13026425408c51f35c68b35995f9ad9be64fe2d","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"private void processConnect(SelectionKey key) {\n        NTCPConnection con = (NTCPConnection)key.attachment();\n        try {\n            SocketChannel chan = con.getChannel();\n            boolean connected = chan.finishConnect();\n            if (_log.shouldLog(Log.DEBUG))\n                _log.debug(\"processing connect for \" + con + \": connected? \" + connected);\n            if (connected) {\n                // BUGFIX for firewalls. --Sponge\n                chan.socket().setKeepAlive(true);\n                con.setKey(key);\n                con.outboundConnected();\n                _context.statManager().addRateData(\"ntcp.connectSuccessful\", 1);\n            } else {\n                con.close();\n                _transport.markUnreachable(con.getRemotePeer().calculateHash());\n                _context.statManager().addRateData(\"ntcp.connectFailedTimeout\", 1);\n            }\n        } catch (IOException ioe) {   // this is the usual failure path for a timeout or connect refused\n            if (_log.shouldLog(Log.INFO))\n                _log.info(\"Failed outbound \" + con, ioe);\n            con.close();\n            //_context.shitlist().shitlistRouter(con.getRemotePeer().calculateHash(), \"Error connecting\", NTCPTransport.STYLE);\n            _transport.markUnreachable(con.getRemotePeer().calculateHash());\n            _context.statManager().addRateData(\"ntcp.connectFailedTimeoutIOE\", 1);\n        } catch (NoConnectionPendingException ncpe) {\n            // ignore\n            if (_log.shouldLog(Log.WARN))\n                _log.warn(\"error connecting on \" + con, ncpe);\n        }\n    }","id":61536,"modified_method":"private void processConnect(SelectionKey key) {\n        NTCPConnection con = (NTCPConnection)key.attachment();\n        try {\n            SocketChannel chan = con.getChannel();\n            boolean connected = chan.finishConnect();\n            if (_log.shouldLog(Log.DEBUG))\n                _log.debug(\"processing connect for \" + con + \": connected? \" + connected);\n            if (connected) {\n                // BUGFIX for firewalls. --Sponge\n                if (_context.commSystem().getReachabilityStatus() != CommSystemFacade.STATUS_OK)\n                    chan.socket().setKeepAlive(true);\n                con.setKey(key);\n                con.outboundConnected();\n                _context.statManager().addRateData(\"ntcp.connectSuccessful\", 1);\n            } else {\n                con.close();\n                _transport.markUnreachable(con.getRemotePeer().calculateHash());\n                _context.statManager().addRateData(\"ntcp.connectFailedTimeout\", 1);\n            }\n        } catch (IOException ioe) {   // this is the usual failure path for a timeout or connect refused\n            if (_log.shouldLog(Log.INFO))\n                _log.info(\"Failed outbound \" + con, ioe);\n            con.close();\n            //_context.shitlist().shitlistRouter(con.getRemotePeer().calculateHash(), \"Error connecting\", NTCPTransport.STYLE);\n            _transport.markUnreachable(con.getRemotePeer().calculateHash());\n            _context.statManager().addRateData(\"ntcp.connectFailedTimeoutIOE\", 1);\n        } catch (NoConnectionPendingException ncpe) {\n            // ignore\n            if (_log.shouldLog(Log.WARN))\n                _log.warn(\"error connecting on \" + con, ncpe);\n        }\n    }","commit_id":"e13026425408c51f35c68b35995f9ad9be64fe2d","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"private void appendComponent(JsonWriter json, ComponentDto component, UserSession userSession, DbSession session) {\n    List<PropertyDto> propertyDtos = dbClient.propertiesDao().selectByQuery(PropertyQuery.builder()\n      .setKey(\"favourite\")\n      .setComponentId(component.getId())\n      .setUserId(userSession.userId())\n      .build(),\n      session\n      );\n    boolean isFavourite = propertyDtos.size() == 1;\n\n    json.prop(\"key\", component.key());\n    json.prop(\"path\", component.path());\n    json.prop(\"name\", component.name());\n    json.prop(\"q\", component.qualifier());\n\n    ComponentDto subProject = (ComponentDto) nullableComponentById(component.subProjectId(), session);\n    ComponentDto project = (ComponentDto) componentById(component.projectId(), session);\n\n    // Do not display sub project long name if sub project and project are the same\n    boolean displaySubProjectLongName = subProject != null && !subProject.getId().equals(project.getId());\n\n    json.prop(\"subProjectName\", displaySubProjectLongName ? subProject.longName() : null);\n    json.prop(\"projectName\", project.longName());\n\n    json.prop(\"fav\", isFavourite);\n  }","id":61537,"modified_method":"private void appendComponent(JsonWriter json, ComponentDto component, UserSession userSession, DbSession session) {\n    List<PropertyDto> propertyDtos = dbClient.propertiesDao().selectByQuery(PropertyQuery.builder()\n      .setKey(\"favourite\")\n      .setComponentId(component.getId())\n      .setUserId(userSession.userId())\n      .build(),\n      session\n      );\n    boolean isFavourite = propertyDtos.size() == 1;\n\n    json.prop(\"key\", component.key());\n    json.prop(\"path\", component.path());\n    json.prop(\"name\", component.name());\n    json.prop(\"q\", component.qualifier());\n\n    ComponentDto subProject = (ComponentDto) nullableComponentById(component.subProjectId(), session);\n    ComponentDto project = (ComponentDto) componentById(component.projectId(), session);\n\n    // Do not display sub project if sub project and project are the same\n    boolean displaySubProject = subProject != null && !subProject.getId().equals(project.getId());\n\n    json.prop(\"subProject\", displaySubProject ? subProject.key() : null);\n    json.prop(\"subProjectName\", displaySubProject ? subProject.longName() : null);\n    json.prop(\"project\", project.key());\n    json.prop(\"projectName\", project.longName());\n\n    json.prop(\"fav\", isFavourite);\n  }","commit_id":"e60b394562fb7bbd95a8fa334adca7c94a97b02a","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void app_with_measures_when_period_is_set() throws Exception {\n    MockUserSession.set().addComponentPermission(UserRole.USER, PROJECT_KEY, COMPONENT_KEY);\n    addComponent();\n    addPeriod();\n\n    addVariationMeasure(CoreMetrics.NCLOC_KEY, 2, 1);\n    addVariationMeasure(CoreMetrics.COVERAGE_KEY, 5d, 1);\n    addVariationMeasure(CoreMetrics.DUPLICATED_LINES_DENSITY_KEY, 1.2, 1);\n\n    measures.add(MeasureDto.createFor(MeasureKey.of(COMPONENT_KEY, CoreMetrics.TECHNICAL_DEBT_KEY)).setVariation(1, 10.0));\n    when(durations.format(any(Locale.class), any(Duration.class), eq(Durations.DurationFormat.SHORT))).thenReturn(\"10min\");\n\n    WsTester.TestRequest request = tester.newGetRequest(\"api/components\", \"app\").setParam(\"key\", COMPONENT_KEY).setParam(\"period\", \"1\");\n    request.execute().assertJson(getClass(), \"app_with_measures_when_period_is_set.json\");\n\n    verify(measureDao).findByComponentKeyAndMetricKeys(eq(COMPONENT_KEY), measureKeysCaptor.capture(), eq(session));\n    assertThat(measureKeysCaptor.getValue()).contains(CoreMetrics.NCLOC_KEY, CoreMetrics.COVERAGE_KEY, CoreMetrics.DUPLICATED_LINES_DENSITY_KEY,\n      CoreMetrics.TECHNICAL_DEBT_KEY);\n  }","id":61538,"modified_method":"@Test\n  public void app_with_measures_when_period_is_set() throws Exception {\n    MockUserSession.set().addComponentPermission(UserRole.USER, SUB_PROJECT_KEY, COMPONENT_KEY);\n    addComponent();\n    addPeriod();\n\n    addVariationMeasure(CoreMetrics.NCLOC_KEY, 2, 1);\n    addVariationMeasure(CoreMetrics.COVERAGE_KEY, 5d, 1);\n    addVariationMeasure(CoreMetrics.DUPLICATED_LINES_DENSITY_KEY, 1.2, 1);\n\n    measures.add(MeasureDto.createFor(MeasureKey.of(COMPONENT_KEY, CoreMetrics.TECHNICAL_DEBT_KEY)).setVariation(1, 10.0));\n    when(durations.format(any(Locale.class), any(Duration.class), eq(Durations.DurationFormat.SHORT))).thenReturn(\"10min\");\n\n    WsTester.TestRequest request = tester.newGetRequest(\"api/components\", \"app\").setParam(\"key\", COMPONENT_KEY).setParam(\"period\", \"1\");\n    request.execute().assertJson(getClass(), \"app_with_measures_when_period_is_set.json\");\n\n    verify(measureDao).findByComponentKeyAndMetricKeys(eq(COMPONENT_KEY), measureKeysCaptor.capture(), eq(session));\n    assertThat(measureKeysCaptor.getValue()).contains(CoreMetrics.NCLOC_KEY, CoreMetrics.COVERAGE_KEY, CoreMetrics.DUPLICATED_LINES_DENSITY_KEY,\n      CoreMetrics.TECHNICAL_DEBT_KEY);\n  }","commit_id":"e60b394562fb7bbd95a8fa334adca7c94a97b02a","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void app_with_severities() throws Exception {\n    MockUserSession.set().addComponentPermission(UserRole.USER, PROJECT_KEY, COMPONENT_KEY);\n\n    addComponent();\n\n    Multiset<String> severities = HashMultiset.create();\n    severities.add(\"MAJOR\", 5);\n    when(issueService.findSeveritiesByComponent(COMPONENT_KEY, null, session)).thenReturn(severities);\n    when(i18n.message(any(Locale.class), eq(\"severity.MAJOR\"), isNull(String.class))).thenReturn(\"Major\");\n\n    WsTester.TestRequest request = tester.newGetRequest(\"api/components\", \"app\").setParam(\"key\", COMPONENT_KEY);\n    request.execute().assertJson(getClass(), \"app_with_severities.json\");\n  }","id":61539,"modified_method":"@Test\n  public void app_with_severities() throws Exception {\n    MockUserSession.set().addComponentPermission(UserRole.USER, SUB_PROJECT_KEY, COMPONENT_KEY);\n\n    addComponent();\n\n    Multiset<String> severities = HashMultiset.create();\n    severities.add(\"MAJOR\", 5);\n    when(issueService.findSeveritiesByComponent(COMPONENT_KEY, null, session)).thenReturn(severities);\n    when(i18n.message(any(Locale.class), eq(\"severity.MAJOR\"), isNull(String.class))).thenReturn(\"Major\");\n\n    WsTester.TestRequest request = tester.newGetRequest(\"api/components\", \"app\").setParam(\"key\", COMPONENT_KEY);\n    request.execute().assertJson(getClass(), \"app_with_severities.json\");\n  }","commit_id":"e60b394562fb7bbd95a8fa334adca7c94a97b02a","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void app_with_tabs() throws Exception {\n    MockUserSession.set().addComponentPermission(UserRole.USER, PROJECT_KEY, COMPONENT_KEY);\n    addComponent();\n\n    addMeasure(CoreMetrics.COVERAGE_KEY, 1.0);\n    addMeasure(CoreMetrics.DUPLICATED_LINES_KEY, 2);\n    addMeasure(CoreMetrics.SCM_AUTHORS_BY_LINE_KEY, 3);\n\n    WsTester.TestRequest request = tester.newGetRequest(\"api/components\", \"app\").setParam(\"key\", COMPONENT_KEY);\n    request.execute().assertJson(getClass(), \"app_with_tabs.json\");\n  }","id":61540,"modified_method":"@Test\n  public void app_with_tabs() throws Exception {\n    MockUserSession.set().addComponentPermission(UserRole.USER, SUB_PROJECT_KEY, COMPONENT_KEY);\n    addComponent();\n\n    addMeasure(CoreMetrics.COVERAGE_KEY, 1.0);\n    addMeasure(CoreMetrics.DUPLICATED_LINES_KEY, 2);\n    addMeasure(CoreMetrics.SCM_AUTHORS_BY_LINE_KEY, 3);\n\n    WsTester.TestRequest request = tester.newGetRequest(\"api/components\", \"app\").setParam(\"key\", COMPONENT_KEY);\n    request.execute().assertJson(getClass(), \"app_with_tabs.json\");\n  }","commit_id":"e60b394562fb7bbd95a8fa334adca7c94a97b02a","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void app_with_extension() throws Exception {\n    MockUserSession.set().addComponentPermission(UserRole.USER, PROJECT_KEY, COMPONENT_KEY);\n    addComponent();\n\n    when(views.getPages(anyString(), anyString(), anyString(), anyString(), any(String[].class))).thenReturn(\n      // Issues extension will be ignore\n      newArrayList(new ViewProxy<Page>(new MyExtension()), new ViewProxy<Page>(new IssuesExtension())));\n\n    WsTester.TestRequest request = tester.newGetRequest(\"api/components\", \"app\").setParam(\"key\", COMPONENT_KEY);\n    request.execute().assertJson(getClass(), \"app_with_extension.json\");\n  }","id":61541,"modified_method":"@Test\n  public void app_with_extension() throws Exception {\n    MockUserSession.set().addComponentPermission(UserRole.USER, SUB_PROJECT_KEY, COMPONENT_KEY);\n    addComponent();\n\n    when(views.getPages(anyString(), anyString(), anyString(), anyString(), any(String[].class))).thenReturn(\n      // Issues extension will be ignore\n      newArrayList(new ViewProxy<Page>(new MyExtension()), new ViewProxy<Page>(new IssuesExtension())));\n\n    WsTester.TestRequest request = tester.newGetRequest(\"api/components\", \"app\").setParam(\"key\", COMPONENT_KEY);\n    request.execute().assertJson(getClass(), \"app_with_extension.json\");\n  }","commit_id":"e60b394562fb7bbd95a8fa334adca7c94a97b02a","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void app_with_sub_project_equals_to_project() throws Exception {\n    MockUserSession.set().setLogin(\"john\").addComponentPermission(UserRole.USER, PROJECT_KEY, COMPONENT_KEY);\n\n    ComponentDto file = new ComponentDto().setId(10L).setQualifier(\"FIL\").setKey(COMPONENT_KEY).setName(\"Plugin.java\")\n      .setPath(\"src/main/java/org/sonar/api/Plugin.java\").setSubProjectId(1L).setProjectId(1L);\n    when(componentDao.getNullableByKey(session, COMPONENT_KEY)).thenReturn(file);\n    when(componentDao.getById(1L, session)).thenReturn(new ComponentDto().setId(1L).setLongName(\"SonarQube\"));\n    when(propertiesDao.selectByQuery(any(PropertyQuery.class), eq(session))).thenReturn(newArrayList(new PropertyDto()));\n\n    WsTester.TestRequest request = tester.newGetRequest(\"api/components\", \"app\").setParam(\"key\", COMPONENT_KEY);\n    request.execute().assertJson(getClass(), \"app_with_sub_project_equals_to_project.json\");\n  }","id":61542,"modified_method":"@Test\n  public void app_with_sub_project_equals_to_project() throws Exception {\n    MockUserSession.set().setLogin(\"john\").addComponentPermission(UserRole.USER, SUB_PROJECT_KEY, COMPONENT_KEY);\n\n    ComponentDto file = new ComponentDto().setId(10L).setQualifier(\"FIL\").setKey(COMPONENT_KEY).setName(\"Plugin.java\")\n      .setPath(\"src/main/java/org/sonar/api/Plugin.java\").setSubProjectId(1L).setProjectId(1L);\n    when(componentDao.getNullableByKey(session, COMPONENT_KEY)).thenReturn(file);\n    when(componentDao.getById(1L, session)).thenReturn(new ComponentDto().setId(1L).setLongName(\"SonarQube\").setKey(\"org.codehaus.sonar:sonar\"));\n    when(propertiesDao.selectByQuery(any(PropertyQuery.class), eq(session))).thenReturn(newArrayList(new PropertyDto()));\n\n    WsTester.TestRequest request = tester.newGetRequest(\"api/components\", \"app\").setParam(\"key\", COMPONENT_KEY);\n    request.execute().assertJson(getClass(), \"app_with_sub_project_equals_to_project.json\");\n  }","commit_id":"e60b394562fb7bbd95a8fa334adca7c94a97b02a","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void app() throws Exception {\n    MockUserSession.set().setLogin(\"john\").addComponentPermission(UserRole.USER, PROJECT_KEY, COMPONENT_KEY);\n\n    ComponentDto file = new ComponentDto().setId(10L).setQualifier(\"FIL\").setKey(COMPONENT_KEY).setName(\"Plugin.java\")\n      .setPath(\"src/main/java/org/sonar/api/Plugin.java\").setSubProjectId(5L).setProjectId(1L);\n    when(componentDao.getNullableByKey(session, COMPONENT_KEY)).thenReturn(file);\n    when(componentDao.getById(5L, session)).thenReturn(new ComponentDto().setId(5L).setLongName(\"SonarQube :: Plugin API\"));\n    when(componentDao.getById(1L, session)).thenReturn(new ComponentDto().setId(1L).setLongName(\"SonarQube\"));\n    when(propertiesDao.selectByQuery(any(PropertyQuery.class), eq(session))).thenReturn(newArrayList(new PropertyDto()));\n\n    WsTester.TestRequest request = tester.newGetRequest(\"api/components\", \"app\").setParam(\"key\", COMPONENT_KEY);\n    request.execute().assertJson(getClass(), \"app.json\");\n  }","id":61543,"modified_method":"@Test\n  public void app() throws Exception {\n    MockUserSession.set().setLogin(\"john\").addComponentPermission(UserRole.USER, SUB_PROJECT_KEY, COMPONENT_KEY);\n\n    ComponentDto file = new ComponentDto().setId(10L).setQualifier(\"FIL\").setKey(COMPONENT_KEY).setName(\"Plugin.java\")\n      .setPath(\"src/main/java/org/sonar/api/Plugin.java\").setSubProjectId(5L).setProjectId(1L);\n    when(componentDao.getNullableByKey(session, COMPONENT_KEY)).thenReturn(file);\n    when(componentDao.getById(5L, session)).thenReturn(new ComponentDto().setId(5L).setLongName(\"SonarQube :: Plugin API\").setKey(SUB_PROJECT_KEY));\n    when(componentDao.getById(1L, session)).thenReturn(new ComponentDto().setId(1L).setLongName(\"SonarQube\").setKey(\"org.codehaus.sonar:sonar\"));\n    when(propertiesDao.selectByQuery(any(PropertyQuery.class), eq(session))).thenReturn(newArrayList(new PropertyDto()));\n\n    WsTester.TestRequest request = tester.newGetRequest(\"api/components\", \"app\").setParam(\"key\", COMPONENT_KEY);\n    request.execute().assertJson(getClass(), \"app.json\");\n  }","commit_id":"e60b394562fb7bbd95a8fa334adca7c94a97b02a","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void app_with_severities_when_period_is_set() throws Exception {\n    MockUserSession.set().addComponentPermission(UserRole.USER, PROJECT_KEY, COMPONENT_KEY);\n    addComponent();\n    addPeriod();\n\n    Multiset<String> severities = HashMultiset.create();\n    severities.add(\"MAJOR\", 5);\n    when(issueService.findSeveritiesByComponent(eq(COMPONENT_KEY), any(Date.class), eq(session))).thenReturn(severities);\n    when(i18n.message(any(Locale.class), eq(\"severity.MAJOR\"), isNull(String.class))).thenReturn(\"Major\");\n\n    WsTester.TestRequest request = tester.newGetRequest(\"api/components\", \"app\").setParam(\"key\", COMPONENT_KEY).setParam(\"period\", \"1\");\n    request.execute().assertJson(getClass(), \"app_with_severities_when_period_is_set.json\");\n  }","id":61544,"modified_method":"@Test\n  public void app_with_severities_when_period_is_set() throws Exception {\n    MockUserSession.set().addComponentPermission(UserRole.USER, SUB_PROJECT_KEY, COMPONENT_KEY);\n    addComponent();\n    addPeriod();\n\n    Multiset<String> severities = HashMultiset.create();\n    severities.add(\"MAJOR\", 5);\n    when(issueService.findSeveritiesByComponent(eq(COMPONENT_KEY), any(Date.class), eq(session))).thenReturn(severities);\n    when(i18n.message(any(Locale.class), eq(\"severity.MAJOR\"), isNull(String.class))).thenReturn(\"Major\");\n\n    WsTester.TestRequest request = tester.newGetRequest(\"api/components\", \"app\").setParam(\"key\", COMPONENT_KEY).setParam(\"period\", \"1\");\n    request.execute().assertJson(getClass(), \"app_with_severities_when_period_is_set.json\");\n  }","commit_id":"e60b394562fb7bbd95a8fa334adca7c94a97b02a","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private void addComponent() {\n    ComponentDto file = new ComponentDto().setId(10L).setQualifier(\"FIL\").setKey(COMPONENT_KEY).setName(\"Plugin.java\")\n      .setPath(\"src/main/java/org/sonar/api/Plugin.java\").setSubProjectId(5L).setProjectId(1L);\n    when(componentDao.getNullableByKey(session, COMPONENT_KEY)).thenReturn(file);\n    when(componentDao.getById(5L, session)).thenReturn(new ComponentDto().setId(5L).setLongName(\"SonarQube :: Plugin API\"));\n    when(componentDao.getById(1L, session)).thenReturn(new ComponentDto().setId(1L).setLongName(\"SonarQube\"));\n  }","id":61545,"modified_method":"private void addComponent() {\n    ComponentDto file = new ComponentDto().setId(10L).setQualifier(\"FIL\").setKey(COMPONENT_KEY).setName(\"Plugin.java\")\n      .setPath(\"src/main/java/org/sonar/api/Plugin.java\").setSubProjectId(5L).setProjectId(1L);\n    when(componentDao.getNullableByKey(session, COMPONENT_KEY)).thenReturn(file);\n    when(componentDao.getById(5L, session)).thenReturn(new ComponentDto().setId(5L).setLongName(\"SonarQube :: Plugin API\").setKey(SUB_PROJECT_KEY));\n    when(componentDao.getById(1L, session)).thenReturn(new ComponentDto().setId(1L).setLongName(\"SonarQube\").setKey(\"org.codehaus.sonar:sonar\"));\n  }","commit_id":"e60b394562fb7bbd95a8fa334adca7c94a97b02a","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void app_with_manual_rules() throws Exception {\n    MockUserSession.set().addComponentPermission(UserRole.USER, PROJECT_KEY, COMPONENT_KEY);\n    addComponent();\n\n    Result<Rule> result = mock(Result.class);\n    Rule rule = mock(Rule.class);\n    when(rule.key()).thenReturn(RuleKey.of(\"manual\", \"API\"));\n    when(rule.name()).thenReturn(\"API\");\n    when(result.getHits()).thenReturn(newArrayList(rule));\n    when(ruleService.search(any(RuleQuery.class), any(QueryOptions.class))).thenReturn(result);\n\n    WsTester.TestRequest request = tester.newGetRequest(\"api/components\", \"app\").setParam(\"key\", COMPONENT_KEY);\n    request.execute().assertJson(getClass(), \"app_with_manual_rules.json\");\n  }","id":61546,"modified_method":"@Test\n  public void app_with_manual_rules() throws Exception {\n    MockUserSession.set().addComponentPermission(UserRole.USER, SUB_PROJECT_KEY, COMPONENT_KEY);\n    addComponent();\n\n    Result<Rule> result = mock(Result.class);\n    Rule rule = mock(Rule.class);\n    when(rule.key()).thenReturn(RuleKey.of(\"manual\", \"API\"));\n    when(rule.name()).thenReturn(\"API\");\n    when(result.getHits()).thenReturn(newArrayList(rule));\n    when(ruleService.search(any(RuleQuery.class), any(QueryOptions.class))).thenReturn(result);\n\n    WsTester.TestRequest request = tester.newGetRequest(\"api/components\", \"app\").setParam(\"key\", COMPONENT_KEY);\n    request.execute().assertJson(getClass(), \"app_with_manual_rules.json\");\n  }","commit_id":"e60b394562fb7bbd95a8fa334adca7c94a97b02a","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void app_with_measures() throws Exception {\n    MockUserSession.set().addComponentPermission(UserRole.USER, PROJECT_KEY, COMPONENT_KEY);\n    addComponent();\n\n    addMeasure(CoreMetrics.NCLOC_KEY, 200);\n    addMeasure(CoreMetrics.COVERAGE_KEY, 95.4);\n    addMeasure(CoreMetrics.DUPLICATED_LINES_DENSITY_KEY, 7.4);\n\n    measures.add(MeasureDto.createFor(MeasureKey.of(COMPONENT_KEY, CoreMetrics.TECHNICAL_DEBT_KEY)).setValue(182.0));\n    when(durations.format(any(Locale.class), any(Duration.class), eq(Durations.DurationFormat.SHORT))).thenReturn(\"3h 2min\");\n\n    WsTester.TestRequest request = tester.newGetRequest(\"api/components\", \"app\").setParam(\"key\", COMPONENT_KEY);\n    request.execute().assertJson(getClass(), \"app_with_measures.json\");\n\n    verify(measureDao).findByComponentKeyAndMetricKeys(eq(COMPONENT_KEY), measureKeysCaptor.capture(), eq(session));\n    assertThat(measureKeysCaptor.getValue()).contains(CoreMetrics.NCLOC_KEY, CoreMetrics.COVERAGE_KEY, CoreMetrics.DUPLICATED_LINES_DENSITY_KEY,\n      CoreMetrics.TECHNICAL_DEBT_KEY);\n  }","id":61547,"modified_method":"@Test\n  public void app_with_measures() throws Exception {\n    MockUserSession.set().addComponentPermission(UserRole.USER, SUB_PROJECT_KEY, COMPONENT_KEY);\n    addComponent();\n\n    addMeasure(CoreMetrics.NCLOC_KEY, 200);\n    addMeasure(CoreMetrics.COVERAGE_KEY, 95.4);\n    addMeasure(CoreMetrics.DUPLICATED_LINES_DENSITY_KEY, 7.4);\n\n    measures.add(MeasureDto.createFor(MeasureKey.of(COMPONENT_KEY, CoreMetrics.TECHNICAL_DEBT_KEY)).setValue(182.0));\n    when(durations.format(any(Locale.class), any(Duration.class), eq(Durations.DurationFormat.SHORT))).thenReturn(\"3h 2min\");\n\n    WsTester.TestRequest request = tester.newGetRequest(\"api/components\", \"app\").setParam(\"key\", COMPONENT_KEY);\n    request.execute().assertJson(getClass(), \"app_with_measures.json\");\n\n    verify(measureDao).findByComponentKeyAndMetricKeys(eq(COMPONENT_KEY), measureKeysCaptor.capture(), eq(session));\n    assertThat(measureKeysCaptor.getValue()).contains(CoreMetrics.NCLOC_KEY, CoreMetrics.COVERAGE_KEY, CoreMetrics.DUPLICATED_LINES_DENSITY_KEY,\n      CoreMetrics.TECHNICAL_DEBT_KEY);\n  }","commit_id":"e60b394562fb7bbd95a8fa334adca7c94a97b02a","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void app_with_issues_measures_when_period_is_set() throws Exception {\n    MockUserSession.set().addComponentPermission(UserRole.USER, PROJECT_KEY, COMPONENT_KEY);\n    addComponent();\n    addPeriod();\n\n    Multiset<String> severities = LinkedHashMultiset.create();\n    severities.add(\"BLOCKER\", 1);\n    severities.add(\"CRITICAL\", 2);\n    severities.add(\"MAJOR\", 5);\n    severities.add(\"MINOR\", 4);\n    severities.add(\"INFO\", 2);\n    when(issueService.findSeveritiesByComponent(eq(COMPONENT_KEY), any(Date.class), eq(session))).thenReturn(severities);\n\n    when(i18n.message(any(Locale.class), eq(\"severity.BLOCKER\"), isNull(String.class))).thenReturn(\"Blocker\");\n    when(i18n.message(any(Locale.class), eq(\"severity.CRITICAL\"), isNull(String.class))).thenReturn(\"Critical\");\n    when(i18n.message(any(Locale.class), eq(\"severity.MAJOR\"), isNull(String.class))).thenReturn(\"Major\");\n    when(i18n.message(any(Locale.class), eq(\"severity.MINOR\"), isNull(String.class))).thenReturn(\"Minor\");\n    when(i18n.message(any(Locale.class), eq(\"severity.INFO\"), isNull(String.class))).thenReturn(\"Info\");\n\n    when(i18n.formatInteger(any(Locale.class), eq(14))).thenReturn(\"14\");\n    when(i18n.formatInteger(any(Locale.class), eq(1))).thenReturn(\"1\");\n    when(i18n.formatInteger(any(Locale.class), eq(2))).thenReturn(\"2\");\n    when(i18n.formatInteger(any(Locale.class), eq(5))).thenReturn(\"5\");\n    when(i18n.formatInteger(any(Locale.class), eq(4))).thenReturn(\"4\");\n\n    WsTester.TestRequest request = tester.newGetRequest(\"api/components\", \"app\").setParam(\"key\", COMPONENT_KEY).setParam(\"period\", \"1\");\n    request.execute().assertJson(getClass(), \"app_with_issues_measures_when_period_is_set.json\");\n  }","id":61548,"modified_method":"@Test\n  public void app_with_issues_measures_when_period_is_set() throws Exception {\n    MockUserSession.set().addComponentPermission(UserRole.USER, SUB_PROJECT_KEY, COMPONENT_KEY);\n    addComponent();\n    addPeriod();\n\n    Multiset<String> severities = LinkedHashMultiset.create();\n    severities.add(\"BLOCKER\", 1);\n    severities.add(\"CRITICAL\", 2);\n    severities.add(\"MAJOR\", 5);\n    severities.add(\"MINOR\", 4);\n    severities.add(\"INFO\", 2);\n    when(issueService.findSeveritiesByComponent(eq(COMPONENT_KEY), any(Date.class), eq(session))).thenReturn(severities);\n\n    when(i18n.message(any(Locale.class), eq(\"severity.BLOCKER\"), isNull(String.class))).thenReturn(\"Blocker\");\n    when(i18n.message(any(Locale.class), eq(\"severity.CRITICAL\"), isNull(String.class))).thenReturn(\"Critical\");\n    when(i18n.message(any(Locale.class), eq(\"severity.MAJOR\"), isNull(String.class))).thenReturn(\"Major\");\n    when(i18n.message(any(Locale.class), eq(\"severity.MINOR\"), isNull(String.class))).thenReturn(\"Minor\");\n    when(i18n.message(any(Locale.class), eq(\"severity.INFO\"), isNull(String.class))).thenReturn(\"Info\");\n\n    when(i18n.formatInteger(any(Locale.class), eq(14))).thenReturn(\"14\");\n    when(i18n.formatInteger(any(Locale.class), eq(1))).thenReturn(\"1\");\n    when(i18n.formatInteger(any(Locale.class), eq(2))).thenReturn(\"2\");\n    when(i18n.formatInteger(any(Locale.class), eq(5))).thenReturn(\"5\");\n    when(i18n.formatInteger(any(Locale.class), eq(4))).thenReturn(\"4\");\n\n    WsTester.TestRequest request = tester.newGetRequest(\"api/components\", \"app\").setParam(\"key\", COMPONENT_KEY).setParam(\"period\", \"1\");\n    request.execute().assertJson(getClass(), \"app_with_issues_measures_when_period_is_set.json\");\n  }","commit_id":"e60b394562fb7bbd95a8fa334adca7c94a97b02a","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void app_with_issues_measures() throws Exception {\n    MockUserSession.set().addComponentPermission(UserRole.USER, PROJECT_KEY, COMPONENT_KEY);\n    addComponent();\n\n    Multiset<String> severities = LinkedHashMultiset.create();\n    severities.add(\"BLOCKER\", 1);\n    severities.add(\"CRITICAL\", 2);\n    severities.add(\"MAJOR\", 5);\n    severities.add(\"MINOR\", 4);\n    severities.add(\"INFO\", 2);\n    when(issueService.findSeveritiesByComponent(COMPONENT_KEY, null, session)).thenReturn(severities);\n    when(i18n.message(any(Locale.class), eq(\"severity.BLOCKER\"), isNull(String.class))).thenReturn(\"Blocker\");\n    when(i18n.message(any(Locale.class), eq(\"severity.CRITICAL\"), isNull(String.class))).thenReturn(\"Critical\");\n    when(i18n.message(any(Locale.class), eq(\"severity.MAJOR\"), isNull(String.class))).thenReturn(\"Major\");\n    when(i18n.message(any(Locale.class), eq(\"severity.MINOR\"), isNull(String.class))).thenReturn(\"Minor\");\n    when(i18n.message(any(Locale.class), eq(\"severity.INFO\"), isNull(String.class))).thenReturn(\"Info\");\n\n    when(i18n.formatInteger(any(Locale.class), eq(14))).thenReturn(\"14\");\n    when(i18n.formatInteger(any(Locale.class), eq(1))).thenReturn(\"1\");\n    when(i18n.formatInteger(any(Locale.class), eq(2))).thenReturn(\"2\");\n    when(i18n.formatInteger(any(Locale.class), eq(5))).thenReturn(\"5\");\n    when(i18n.formatInteger(any(Locale.class), eq(4))).thenReturn(\"4\");\n\n    WsTester.TestRequest request = tester.newGetRequest(\"api/components\", \"app\").setParam(\"key\", COMPONENT_KEY);\n    request.execute().assertJson(getClass(), \"app_with_issues_measures.json\");\n  }","id":61549,"modified_method":"@Test\n  public void app_with_issues_measures() throws Exception {\n    MockUserSession.set().addComponentPermission(UserRole.USER, SUB_PROJECT_KEY, COMPONENT_KEY);\n    addComponent();\n\n    Multiset<String> severities = LinkedHashMultiset.create();\n    severities.add(\"BLOCKER\", 1);\n    severities.add(\"CRITICAL\", 2);\n    severities.add(\"MAJOR\", 5);\n    severities.add(\"MINOR\", 4);\n    severities.add(\"INFO\", 2);\n    when(issueService.findSeveritiesByComponent(COMPONENT_KEY, null, session)).thenReturn(severities);\n    when(i18n.message(any(Locale.class), eq(\"severity.BLOCKER\"), isNull(String.class))).thenReturn(\"Blocker\");\n    when(i18n.message(any(Locale.class), eq(\"severity.CRITICAL\"), isNull(String.class))).thenReturn(\"Critical\");\n    when(i18n.message(any(Locale.class), eq(\"severity.MAJOR\"), isNull(String.class))).thenReturn(\"Major\");\n    when(i18n.message(any(Locale.class), eq(\"severity.MINOR\"), isNull(String.class))).thenReturn(\"Minor\");\n    when(i18n.message(any(Locale.class), eq(\"severity.INFO\"), isNull(String.class))).thenReturn(\"Info\");\n\n    when(i18n.formatInteger(any(Locale.class), eq(14))).thenReturn(\"14\");\n    when(i18n.formatInteger(any(Locale.class), eq(1))).thenReturn(\"1\");\n    when(i18n.formatInteger(any(Locale.class), eq(2))).thenReturn(\"2\");\n    when(i18n.formatInteger(any(Locale.class), eq(5))).thenReturn(\"5\");\n    when(i18n.formatInteger(any(Locale.class), eq(4))).thenReturn(\"4\");\n\n    WsTester.TestRequest request = tester.newGetRequest(\"api/components\", \"app\").setParam(\"key\", COMPONENT_KEY);\n    request.execute().assertJson(getClass(), \"app_with_issues_measures.json\");\n  }","commit_id":"e60b394562fb7bbd95a8fa334adca7c94a97b02a","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void app_with_tests_measure() throws Exception {\n    String componentKey = \"org.codehaus.sonar:sonar-server:src/test/java/org/sonar/server/issue/PlanActionTest.java\";\n    MockUserSession.set().addComponentPermission(UserRole.USER, PROJECT_KEY, componentKey);\n\n    ComponentDto file = new ComponentDto().setId(10L).setQualifier(\"UTS\").setKey(componentKey).setName(\"PlanActionTest.java\")\n      .setPath(\"src/test/java/org/sonar/server/issue/PlanActionTest.java\").setSubProjectId(5L).setProjectId(1L);\n    when(componentDao.getNullableByKey(session, componentKey)).thenReturn(file);\n    when(componentDao.getById(5L, session)).thenReturn(new ComponentDto().setId(5L).setLongName(\"SonarQube :: Plugin API\"));\n    when(componentDao.getById(1L, session)).thenReturn(new ComponentDto().setId(1L).setLongName(\"SonarQube\"));\n\n    addMeasure(CoreMetrics.TESTS_KEY, 10);\n\n    WsTester.TestRequest request = tester.newGetRequest(\"api/components\", \"app\").setParam(\"key\", componentKey);\n    request.execute().assertJson(getClass(), \"app_with_tests_measure.json\");\n\n    verify(measureDao).findByComponentKeyAndMetricKeys(eq(componentKey), measureKeysCaptor.capture(), eq(session));\n    assertThat(measureKeysCaptor.getValue()).contains(CoreMetrics.TESTS_KEY);\n  }","id":61550,"modified_method":"@Test\n  public void app_with_tests_measure() throws Exception {\n    String componentKey = \"org.codehaus.sonar:sonar-server:src/test/java/org/sonar/server/issue/PlanActionTest.java\";\n    MockUserSession.set().addComponentPermission(UserRole.USER, SUB_PROJECT_KEY, componentKey);\n\n    ComponentDto file = new ComponentDto().setId(10L).setQualifier(\"UTS\").setKey(componentKey).setName(\"PlanActionTest.java\")\n      .setPath(\"src/test/java/org/sonar/server/issue/PlanActionTest.java\").setSubProjectId(5L).setProjectId(1L);\n    when(componentDao.getNullableByKey(session, componentKey)).thenReturn(file);\n    when(componentDao.getById(5L, session)).thenReturn(new ComponentDto().setId(5L).setLongName(\"SonarQube :: Plugin API\").setKey(SUB_PROJECT_KEY));\n    when(componentDao.getById(1L, session)).thenReturn(new ComponentDto().setId(1L).setLongName(\"SonarQube\").setKey(\"org.codehaus.sonar:sonar\"));\n\n    addMeasure(CoreMetrics.TESTS_KEY, 10);\n\n    WsTester.TestRequest request = tester.newGetRequest(\"api/components\", \"app\").setParam(\"key\", componentKey);\n    request.execute().assertJson(getClass(), \"app_with_tests_measure.json\");\n\n    verify(measureDao).findByComponentKeyAndMetricKeys(eq(componentKey), measureKeysCaptor.capture(), eq(session));\n    assertThat(measureKeysCaptor.getValue()).contains(CoreMetrics.TESTS_KEY);\n  }","commit_id":"e60b394562fb7bbd95a8fa334adca7c94a97b02a","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void app_without_sub_project() throws Exception {\n    String componentKey = \"org.codehaus.sonar:sonar\";\n    MockUserSession.set().setLogin(\"john\").addComponentPermission(UserRole.USER, componentKey, componentKey);\n\n    ComponentDto file = new ComponentDto().setId(1L).setQualifier(\"TRK\").setKey(componentKey).setName(\"SonarQube\").setProjectId(1L);\n    when(componentDao.getNullableByKey(session, componentKey)).thenReturn(file);\n    when(componentDao.getById(1L, session)).thenReturn(new ComponentDto().setId(1L).setLongName(\"SonarQube\"));\n    when(propertiesDao.selectByQuery(any(PropertyQuery.class), eq(session))).thenReturn(newArrayList(new PropertyDto()));\n\n    WsTester.TestRequest request = tester.newGetRequest(\"api/components\", \"app\").setParam(\"key\", componentKey);\n    request.execute().assertJson(getClass(), \"app_without_sub_project.json\");\n  }","id":61551,"modified_method":"@Test\n  public void app_without_sub_project() throws Exception {\n    String componentKey = \"org.codehaus.sonar:sonar\";\n    MockUserSession.set().setLogin(\"john\").addComponentPermission(UserRole.USER, componentKey, componentKey);\n\n    ComponentDto file = new ComponentDto().setId(1L).setQualifier(\"TRK\").setKey(componentKey).setName(\"SonarQube\").setProjectId(1L);\n    when(componentDao.getNullableByKey(session, componentKey)).thenReturn(file);\n    when(componentDao.getById(1L, session)).thenReturn(new ComponentDto().setId(1L).setLongName(\"SonarQube\").setKey(\"org.codehaus.sonar:sonar\"));\n    when(propertiesDao.selectByQuery(any(PropertyQuery.class), eq(session))).thenReturn(newArrayList(new PropertyDto()));\n\n    WsTester.TestRequest request = tester.newGetRequest(\"api/components\", \"app\").setParam(\"key\", componentKey);\n    request.execute().assertJson(getClass(), \"app_without_sub_project.json\");\n  }","commit_id":"e60b394562fb7bbd95a8fa334adca7c94a97b02a","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void app_with_rules() throws Exception {\n    MockUserSession.set().addComponentPermission(UserRole.USER, PROJECT_KEY, COMPONENT_KEY);\n\n    addComponent();\n    when(issueService.findRulesByComponent(COMPONENT_KEY, null, session)).thenReturn(\n      new RulesAggregation().add(new RuleDto().setRuleKey(\"AvoidCycle\").setRepositoryKey(\"squid\").setName(\"Avoid Cycle\"))\n    );\n\n    WsTester.TestRequest request = tester.newGetRequest(\"api/components\", \"app\").setParam(\"key\", COMPONENT_KEY);\n    request.execute().assertJson(getClass(), \"app_with_rules.json\");\n  }","id":61552,"modified_method":"@Test\n  public void app_with_rules() throws Exception {\n    MockUserSession.set().addComponentPermission(UserRole.USER, SUB_PROJECT_KEY, COMPONENT_KEY);\n\n    addComponent();\n    when(issueService.findRulesByComponent(COMPONENT_KEY, null, session)).thenReturn(\n      new RulesAggregation().add(new RuleDto().setRuleKey(\"AvoidCycle\").setRepositoryKey(\"squid\").setName(\"Avoid Cycle\"))\n    );\n\n    WsTester.TestRequest request = tester.newGetRequest(\"api/components\", \"app\").setParam(\"key\", COMPONENT_KEY);\n    request.execute().assertJson(getClass(), \"app_with_rules.json\");\n  }","commit_id":"e60b394562fb7bbd95a8fa334adca7c94a97b02a","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void app_with_rules_when_period_is_set() throws Exception {\n    MockUserSession.set().addComponentPermission(UserRole.USER, PROJECT_KEY, COMPONENT_KEY);\n\n    addComponent();\n\n    Date periodDate = DateUtils.parseDate(\"2014-05-08\");\n    when(resourceDao.getLastSnapshotByResourceId(eq(1L), eq(session))).thenReturn(\n      new SnapshotDto().setPeriod1Mode(\"previous_analysis\").setPeriod1Date(periodDate)\n    );\n    when(periods.label(anyString(), anyString(), any(Date.class))).thenReturn(\"since previous analysis (May 08 2014)\");\n\n    when(issueService.findRulesByComponent(COMPONENT_KEY, periodDate, session)).thenReturn(\n      new RulesAggregation().add(new RuleDto().setRuleKey(\"AvoidCycle\").setRepositoryKey(\"squid\").setName(\"Avoid Cycle\"))\n    );\n\n    WsTester.TestRequest request = tester.newGetRequest(\"api/components\", \"app\").setParam(\"key\", COMPONENT_KEY).setParam(\"period\", \"1\");\n    request.execute().assertJson(getClass(), \"app_with_rules_when_period_is_set.json\");\n  }","id":61553,"modified_method":"@Test\n  public void app_with_rules_when_period_is_set() throws Exception {\n    MockUserSession.set().addComponentPermission(UserRole.USER, SUB_PROJECT_KEY, COMPONENT_KEY);\n\n    addComponent();\n\n    Date periodDate = DateUtils.parseDate(\"2014-05-08\");\n    when(resourceDao.getLastSnapshotByResourceId(eq(1L), eq(session))).thenReturn(\n      new SnapshotDto().setPeriod1Mode(\"previous_analysis\").setPeriod1Date(periodDate)\n    );\n    when(periods.label(anyString(), anyString(), any(Date.class))).thenReturn(\"since previous analysis (May 08 2014)\");\n\n    when(issueService.findRulesByComponent(COMPONENT_KEY, periodDate, session)).thenReturn(\n      new RulesAggregation().add(new RuleDto().setRuleKey(\"AvoidCycle\").setRepositoryKey(\"squid\").setName(\"Avoid Cycle\"))\n    );\n\n    WsTester.TestRequest request = tester.newGetRequest(\"api/components\", \"app\").setParam(\"key\", COMPONENT_KEY).setParam(\"period\", \"1\");\n    request.execute().assertJson(getClass(), \"app_with_rules_when_period_is_set.json\");\n  }","commit_id":"e60b394562fb7bbd95a8fa334adca7c94a97b02a","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void app_with_extension_having_permission() throws Exception {\n    MockUserSession.set().addComponentPermission(UserRole.USER, PROJECT_KEY, COMPONENT_KEY);\n    addComponent();\n\n    when(views.getPages(anyString(), anyString(), anyString(), anyString(), any(String[].class))).thenReturn(\n      newArrayList(new ViewProxy<Page>(new MyExtensionWithRole())));\n\n    WsTester.TestRequest request = tester.newGetRequest(\"api/components\", \"app\").setParam(\"key\", COMPONENT_KEY);\n    request.execute().assertJson(getClass(), \"app_with_extension_having_permission.json\");\n  }","id":61554,"modified_method":"@Test\n  public void app_with_extension_having_permission() throws Exception {\n    MockUserSession.set().addComponentPermission(UserRole.USER, SUB_PROJECT_KEY, COMPONENT_KEY);\n    addComponent();\n\n    when(views.getPages(anyString(), anyString(), anyString(), anyString(), any(String[].class))).thenReturn(\n      newArrayList(new ViewProxy<Page>(new MyExtensionWithRole())));\n\n    WsTester.TestRequest request = tester.newGetRequest(\"api/components\", \"app\").setParam(\"key\", COMPONENT_KEY);\n    request.execute().assertJson(getClass(), \"app_with_extension_having_permission.json\");\n  }","commit_id":"e60b394562fb7bbd95a8fa334adca7c94a97b02a","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void app_with_periods() throws Exception {\n    MockUserSession.set().addComponentPermission(UserRole.USER, PROJECT_KEY, COMPONENT_KEY);\n\n    addComponent();\n\n    when(resourceDao.getLastSnapshotByResourceId(eq(1L), eq(session))).thenReturn(\n      new SnapshotDto().setPeriod1Mode(\"previous_analysis\").setPeriod1Date(DateUtils.parseDate(\"2014-05-08\"))\n    );\n    when(periods.label(anyString(), anyString(), any(Date.class))).thenReturn(\"since previous analysis (May 08 2014)\");\n\n    WsTester.TestRequest request = tester.newGetRequest(\"api/components\", \"app\").setParam(\"key\", COMPONENT_KEY);\n    request.execute().assertJson(getClass(), \"app_with_periods.json\");\n  }","id":61555,"modified_method":"@Test\n  public void app_with_periods() throws Exception {\n    MockUserSession.set().addComponentPermission(UserRole.USER, SUB_PROJECT_KEY, COMPONENT_KEY);\n\n    addComponent();\n\n    when(resourceDao.getLastSnapshotByResourceId(eq(1L), eq(session))).thenReturn(\n      new SnapshotDto().setPeriod1Mode(\"previous_analysis\").setPeriod1Date(DateUtils.parseDate(\"2014-05-08\"))\n    );\n    when(periods.label(anyString(), anyString(), any(Date.class))).thenReturn(\"since previous analysis (May 08 2014)\");\n\n    WsTester.TestRequest request = tester.newGetRequest(\"api/components\", \"app\").setParam(\"key\", COMPONENT_KEY);\n    request.execute().assertJson(getClass(), \"app_with_periods.json\");\n  }","commit_id":"e60b394562fb7bbd95a8fa334adca7c94a97b02a","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public void testSave() {\n        OnmsEvent event = new OnmsEvent();\n        event.setDistPoller(getDistPollerDao().load(\"localhost\"));\n        event.setEventCreateTime(new Date());\n        event.setEventDescr(\"event dao test\");\n        event.setEventHost(\"localhost\");\n        event.setEventLog(\"Y\");\n        event.setEventDisplay(\"Y\");\n        event.setEventLogGroup(\"event dao test log group\");\n        event.setEventLogMsg(\"event dao test log msg\");\n        event.setEventSeverity(new Integer(7));\n        event.setEventSource(\"EventDaoTest\");\n        event.setEventTime(new Date());\n        event.setEventUei(\"uei://org/opennms/test/EventDaoTest\");\n        OnmsNode node = (OnmsNode) getNodeDao().findAll().iterator().next();\n        OnmsIpInterface iface = (OnmsIpInterface)node.getIpInterfaces().iterator().next();\n        OnmsMonitoredService service = (OnmsMonitoredService)iface.getMonitoredServices().iterator().next();\n        event.setNode(node);\n\t    event.setService(service);\n        OnmsAlarm alarm = new OnmsAlarm();\n\t    event.setAlarm(alarm);\n        getEventDao().save(event);\n        //it works we're so smart! hehe\n        event = getEventDao().load(event.getId());\n        assertEquals(\"uei://org/opennms/test/EventDaoTest\", event.getEventUei());\n    }","id":61556,"modified_method":"public void testSave() {\n        OnmsEvent event = new OnmsEvent();\n        event.setDistPoller(getDistPollerDao().load(\"localhost\"));\n        event.setEventCreateTime(new Date());\n        event.setEventDescr(\"event dao test\");\n        event.setEventHost(\"localhost\");\n        event.setEventLog(\"Y\");\n        event.setEventDisplay(\"Y\");\n        event.setEventLogGroup(\"event dao test log group\");\n        event.setEventLogMsg(\"event dao test log msg\");\n        event.setEventSeverity(new Integer(7));\n        event.setEventSource(\"EventDaoTest\");\n        event.setEventTime(new Date());\n        event.setEventUei(\"uei://org/opennms/test/EventDaoTest\");\n        OnmsNode node = (OnmsNode) getNodeDao().findAll().iterator().next();\n        OnmsIpInterface iface = (OnmsIpInterface)node.getIpInterfaces().iterator().next();\n        OnmsMonitoredService service = (OnmsMonitoredService)iface.getMonitoredServices().iterator().next();\n        event.setNode(node);\n\t    event.setServiceType(service.getServiceType());\n        OnmsAlarm alarm = new OnmsAlarm();\n\t    event.setAlarm(alarm);\n        event.setIpAddr(iface.getIpAddress());\n        getEventDao().save(event);\n       \n        OnmsEvent newEvent = getEventDao().load(event.getId());\n        assertEquals(\"uei://org/opennms/test/EventDaoTest\", newEvent.getEventUei());\n        assertNotNull(newEvent.getServiceType());\n        assertEquals(service.getNodeId(), newEvent.getNode().getId());\n        assertEquals(event.getIpAddr(), newEvent.getIpAddr());\n    }","commit_id":"f8a074ed2a68fcafb3e30d5e072700525d961ce2","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public Object mapRow(ResultSet rs, int rowNumber) throws SQLException {\n        final Integer id = (Integer) rs.getObject(\"eventid\");\n\n        LazyEvent event = (LazyEvent)Cache.obtain(OnmsEvent.class, id);\n        event.setLoaded(true);\n        \n        Integer nodeId = new Integer(rs.getInt(\"nodeID\"));\n        OnmsNode node = (OnmsNode)Cache.obtain(OnmsNode.class, nodeId);\n        event.setNode(node);\n        \n        String dpName = rs.getString(\"eventDpName\");\n        OnmsDistPoller distPoller = (OnmsDistPoller)Cache.obtain(OnmsDistPoller.class, dpName);\n        event.setDistPoller(distPoller);\n\n        \n        Integer alarmId = new Integer(rs.getInt(\"alarmId\"));\n        OnmsAlarm alarm = (alarmId.intValue() == 0) ? null : (OnmsAlarm)Cache.obtain(OnmsAlarm.class, alarmId);\n        event.setAlarm(alarm);\n        \n        Integer serviceId = new Integer(rs.getInt(\"serviceId\"));\n        OnmsMonitoredService service = (serviceId.intValue() == 0) ? null : (OnmsMonitoredService)Cache.obtain(OnmsMonitoredService.class, serviceId);\n        event.setService(service);\n\n        event.setEventUei(rs.getString(\"eventUei\"));\n        event.setEventTime(rs.getDate(\"eventTime\"));\n        event.setEventHost(rs.getString(\"eventHost\"));\n        event.setEventSource(rs.getString(\"eventSource\"));\n        event.setIpAddr(rs.getString(\"ipAddr\"));\n        event.setEventSnmpHost(rs.getString(\"eventSnmphost\"));\n        event.setEventSnmp(rs.getString(\"eventSnmp\"));\n        event.setEventParms(rs.getString(\"eventParms\"));\n        event.setEventCreateTime(rs.getDate(\"eventCreateTime\"));\n        event.setEventDescr(rs.getString(\"eventDescr\"));\n        event.setEventLogGroup(rs.getString(\"eventLoggroup\"));\n        event.setEventLogMsg(rs.getString(\"eventLogmsg\"));\n        event.setEventSeverity(new Integer(rs.getInt(\"eventSeverity\")));\n        event.setEventPathOutage(rs.getString(\"eventPathOutage\"));\n        event.setEventCorrelation(rs.getString(\"eventCorrelation\"));\n        event.setEventSuppressedCount(new Integer(rs.getInt(\"eventSuppressedCount\")));\n        event.setEventOperInstruct(rs.getString(\"eventOperInstruct\"));\n        event.setEventAutoAction(rs.getString(\"eventAutoAction\"));\n        event.setEventOperAction(rs.getString(\"eventOperAction\"));\n        event.setEventOperActionMenuText(rs.getString(\"eventOperActionMenuText\"));\n        event.setEventNotification(rs.getString(\"eventNotification\"));\n        event.setEventTTicket(rs.getString(\"eventTticket\"));\n        event.setEventTTicketState(new Integer(rs.getInt(\"eventTticketState\")));\n        event.setEventForward(rs.getString(\"eventForward\"));\n        event.setEventMouseOverText(rs.getString(\"eventMouseOverText\"));\n        event.setEventLog(rs.getString(\"eventLog\"));\n        event.setEventDisplay(rs.getString(\"eventDisplay\"));\n        event.setEventAckUser(rs.getString(\"eventAckUser\"));\n        event.setEventAckTime(rs.getDate(\"eventAckTime\"));\n        \n        event.setDirty(false);\n        return event;\n    }","id":61557,"modified_method":"public Object mapRow(ResultSet rs, int rowNumber) throws SQLException {\n        final Integer id = (Integer) rs.getObject(\"eventid\");\n\n        LazyEvent event = (LazyEvent)Cache.obtain(OnmsEvent.class, id);\n        event.setLoaded(true);\n        \n//        String ipAddr = rs.getString(\"ipAddr\");\n//        \n//        OnmsEntity entity = getEntity(nodeId, ipAddr, null, serviceId);\n\n        \n        Integer nodeId = (Integer)rs.getObject(\"nodeID\");\n        OnmsNode node = (nodeId == null) ? null : (OnmsNode)Cache.obtain(OnmsNode.class, nodeId);\n        event.setNode(node);\n        \n\n        String dpName = rs.getString(\"eventDpName\");\n        OnmsDistPoller distPoller = (dpName == null) ? null : (OnmsDistPoller)Cache.obtain(OnmsDistPoller.class, dpName);\n        event.setDistPoller(distPoller);\n\n        \n        Integer alarmId = (Integer)rs.getObject(\"alarmId\");\n        OnmsAlarm alarm = alarmId == null ? null : (OnmsAlarm)Cache.obtain(OnmsAlarm.class, alarmId);\n        event.setAlarm(alarm);\n        \n        Integer serviceId = (Integer)rs.getObject(\"serviceId\");\n        OnmsServiceType service = (serviceId == null) ? null : (OnmsServiceType)Cache.obtain(OnmsServiceType.class, serviceId);\n        event.setServiceType(service);\n\n        event.setEventUei(rs.getString(\"eventUei\"));\n        event.setEventTime(rs.getDate(\"eventTime\"));\n        event.setEventHost(rs.getString(\"eventHost\"));\n        event.setEventSource(rs.getString(\"eventSource\"));\n        event.setIpAddr(rs.getString(\"ipAddr\"));\n        event.setEventSnmpHost(rs.getString(\"eventSnmphost\"));\n        event.setEventSnmp(rs.getString(\"eventSnmp\"));\n        event.setEventParms(rs.getString(\"eventParms\"));\n        event.setEventCreateTime(rs.getDate(\"eventCreateTime\"));\n        event.setEventDescr(rs.getString(\"eventDescr\"));\n        event.setEventLogGroup(rs.getString(\"eventLoggroup\"));\n        event.setEventLogMsg(rs.getString(\"eventLogmsg\"));\n        event.setEventSeverity(new Integer(rs.getInt(\"eventSeverity\")));\n        event.setEventPathOutage(rs.getString(\"eventPathOutage\"));\n        event.setEventCorrelation(rs.getString(\"eventCorrelation\"));\n        event.setEventSuppressedCount(new Integer(rs.getInt(\"eventSuppressedCount\")));\n        event.setEventOperInstruct(rs.getString(\"eventOperInstruct\"));\n        event.setEventAutoAction(rs.getString(\"eventAutoAction\"));\n        event.setEventOperAction(rs.getString(\"eventOperAction\"));\n        event.setEventOperActionMenuText(rs.getString(\"eventOperActionMenuText\"));\n        event.setEventNotification(rs.getString(\"eventNotification\"));\n        event.setEventTTicket(rs.getString(\"eventTticket\"));\n        event.setEventTTicketState(new Integer(rs.getInt(\"eventTticketState\")));\n        event.setEventForward(rs.getString(\"eventForward\"));\n        event.setEventMouseOverText(rs.getString(\"eventMouseOverText\"));\n        event.setEventLog(rs.getString(\"eventLog\"));\n        event.setEventDisplay(rs.getString(\"eventDisplay\"));\n        event.setEventAckUser(rs.getString(\"eventAckUser\"));\n        event.setEventAckTime(rs.getDate(\"eventAckTime\"));\n        \n        event.setDirty(false);\n        return event;\n    }","commit_id":"f8a074ed2a68fcafb3e30d5e072700525d961ce2","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public int persist(OnmsEvent event) {\n        Object[] parms = new Object[] {\n                event.getEventUei(),   //eventUei\n                event.getNode().getId(),   //nodeID\n                event.getEventTime(),   //eventTime\n                event.getEventHost(),   //eventHost\n                event.getEventSource(),   //eventSource\n                event.getIpAddr(),   //ipAddr\n                event.getDistPoller().getName(),   //eventDpName\n                event.getEventSnmpHost(),   //eventSnmphost\n                event.getService().getId(),   //serviceID\n                event.getEventSnmp(),   //eventSnmp\n                event.getEventParms(),   //eventParms\n                event.getEventCreateTime(),   //eventCreateTime\n                event.getEventDescr(),   //eventDescr\n                event.getEventLogGroup(),   //eventLoggroup\n                event.getEventLogMsg(),   //eventLogmsg\n                event.getEventSeverity(),   //eventSeverity\n                event.getEventPathOutage(),   //eventPathOutage\n                event.getEventCorrelation(),   //eventCorrelation\n                event.getEventSuppressedCount(),   //eventSuppressedCount\n                event.getEventOperInstruct(),   //eventOperInstruct\n                event.getEventAutoAction(),   //eventAutoAction\n                event.getEventOperAction(),   //eventOperAction\n                event.getEventOperActionMenuText(),   //eventOperActionMenuText\n                event.getEventNotification(),   //eventNotification\n                event.getEventTTicket(),   //eventTticket\n                event.getEventTTicketState(),   //eventTticketState\n                event.getEventForward(),   //eventForward\n                event.getEventMouseOverText(),   //eventMouseOverText\n                event.getEventLog(),   //eventLog\n                event.getEventDisplay(),   //eventDisplay\n                event.getEventAckUser(),   //eventAckUser\n                event.getEventAckTime(),   //eventAckTime\n                event.getAlarm().getId(),   //alarmID\n                event.getId()\t\t\t\t//eventID\n        };   \n        \n        return update(parms);\n    }","id":61558,"modified_method":"public int persist(OnmsEvent event) {\n        Object[] parms = new Object[] {\n                event.getEventUei(),   //eventUei\n                event.getNode().getId(),   //nodeID\n                event.getEventTime(),   //eventTime\n                event.getEventHost(),   //eventHost\n                event.getEventSource(),   //eventSource\n                event.getIpAddr(),   //ipAddr\n                event.getDistPoller().getName(),   //eventDpName\n                event.getEventSnmpHost(),   //eventSnmphost\n                event.getServiceType().getId(),   //serviceID\n                event.getEventSnmp(),   //eventSnmp\n                event.getEventParms(),   //eventParms\n                event.getEventCreateTime(),   //eventCreateTime\n                event.getEventDescr(),   //eventDescr\n                event.getEventLogGroup(),   //eventLoggroup\n                event.getEventLogMsg(),   //eventLogmsg\n                event.getEventSeverity(),   //eventSeverity\n                event.getEventPathOutage(),   //eventPathOutage\n                event.getEventCorrelation(),   //eventCorrelation\n                event.getEventSuppressedCount(),   //eventSuppressedCount\n                event.getEventOperInstruct(),   //eventOperInstruct\n                event.getEventAutoAction(),   //eventAutoAction\n                event.getEventOperAction(),   //eventOperAction\n                event.getEventOperActionMenuText(),   //eventOperActionMenuText\n                event.getEventNotification(),   //eventNotification\n                event.getEventTTicket(),   //eventTticket\n                event.getEventTTicketState(),   //eventTticketState\n                event.getEventForward(),   //eventForward\n                event.getEventMouseOverText(),   //eventMouseOverText\n                event.getEventLog(),   //eventLog\n                event.getEventDisplay(),   //eventDisplay\n                event.getEventAckUser(),   //eventAckUser\n                event.getEventAckTime(),   //eventAckTime\n                event.getAlarm().getId(),   //alarmID\n                event.getId()\t\t\t\t//eventID\n        };   \n        \n        return update(parms);\n    }","commit_id":"f8a074ed2a68fcafb3e30d5e072700525d961ce2","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void setService(OnmsMonitoredService service) {\n\t\tm_service = service;\n\t}","id":61559,"modified_method":"public void setServiceType(OnmsServiceType serviceType) {\n\t\tm_serviceType = serviceType;\n\t}","commit_id":"f8a074ed2a68fcafb3e30d5e072700525d961ce2","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n\t * @hibernate.property column=\"serviceid\" length=\"4\"\n\t * \n\t */\n\tpublic OnmsMonitoredService getService() {\n\t\treturn m_service;\n\t}","id":61560,"modified_method":"/**\n\t * @hibernate.property column=\"serviceid\" length=\"4\"\n\t * \n\t */\n\tpublic OnmsServiceType getServiceType() {\n\t\treturn m_serviceType;\n\t}","commit_id":"f8a074ed2a68fcafb3e30d5e072700525d961ce2","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/** full constructor */\n\tpublic OnmsEvent(Integer eventid, String eventuei, Date eventtime,\n\t\t\tString eventhost, String eventsource, String ipaddr,\n\t\t\tOnmsDistPoller distPoller, String eventsnmphost, OnmsMonitoredService service,\n\t\t\tString eventsnmp, String eventparms, Date eventcreatetime,\n\t\t\tString eventdescr, String eventloggroup, String eventlogmsg,\n\t\t\tInteger eventseverity, String eventpathoutage, String eventcorrelation,\n\t\t\tInteger eventsuppressedcount, String eventoperinstruct,\n\t\t\tString eventautoaction, String eventoperaction,\n\t\t\tString eventoperactionmenutext, String eventnotification,\n\t\t\tString eventtticket, Integer eventtticketstate,\n\t\t\tString eventforward, String eventmouseovertext, String eventlog,\n\t\t\tString eventdisplay, String eventackuser, Date eventacktime,\n\t\t\tOnmsAlarm alarm, org.opennms.netmgt.model.OnmsNode node,\n\t\t\tSet notifications, Set outagesBySvcregainedeventid,\n\t\t\tSet outagesBySvclosteventid) {\n\t\tm_eventId = eventid;\n\t\tm_eventUei = eventuei;\n\t\tm_eventTime = eventtime;\n\t\tm_eventHost = eventhost;\n\t\tm_eventSource = eventsource;\n\t\tm_ipAddr = ipaddr;\n\t\tm_distPoller = distPoller;\n\t\tm_eventSnmpHost = eventsnmphost;\n\t\tm_service = service;\n\t\tm_eventSnmp = eventsnmp;\n\t\tm_eventParms = eventparms;\n\t\tm_eventCreateTime = eventcreatetime;\n\t\tm_eventDescr = eventdescr;\n\t\tm_eventLogGroup = eventloggroup;\n\t\tm_eventLogMsg = eventlogmsg;\n\t\tm_eventSeverity = eventseverity;\n\t\tm_eventPathOutage = eventpathoutage;\n\t\tm_eventCorrelation = eventcorrelation;\n\t\tm_eventSuppressedCount = eventsuppressedcount;\n\t\tm_eventOperInstruct = eventoperinstruct;\n\t\tm_eventAutoAction = eventautoaction;\n\t\tm_eventOperAction = eventoperaction;\n\t\tm_eventOperActionMenuText = eventoperactionmenutext;\n\t\tm_eventNotification = eventnotification;\n\t\tm_eventTTicket = eventtticket;\n\t\tm_eventTTicketState = eventtticketstate;\n\t\tm_eventForward = eventforward;\n\t\tm_eventMouseOverText = eventmouseovertext;\n\t\tm_eventLog = eventlog;\n\t\tm_eventDisplay = eventdisplay;\n\t\tm_eventAckUser = eventackuser;\n\t\tm_eventAckTime = eventacktime;\n\t\tm_alarm = alarm;\n\t\tm_node = node;\n\t\tm_notifications = notifications;\n\t\tm_outagesBySvcRegainedEventId = outagesBySvcregainedeventid;\n\t\tm_outagesBySvclostEventId = outagesBySvclosteventid;\n\t}","id":61561,"modified_method":"/** full constructor */\n\tpublic OnmsEvent(Integer eventid, String eventuei, Date eventtime,\n\t\t\tString eventhost, String eventsource, String ipaddr,\n\t\t\tOnmsDistPoller distPoller, String eventsnmphost, OnmsServiceType service,\n\t\t\tString eventsnmp, String eventparms, Date eventcreatetime,\n\t\t\tString eventdescr, String eventloggroup, String eventlogmsg,\n\t\t\tInteger eventseverity, String eventpathoutage, String eventcorrelation,\n\t\t\tInteger eventsuppressedcount, String eventoperinstruct,\n\t\t\tString eventautoaction, String eventoperaction,\n\t\t\tString eventoperactionmenutext, String eventnotification,\n\t\t\tString eventtticket, Integer eventtticketstate,\n\t\t\tString eventforward, String eventmouseovertext, String eventlog,\n\t\t\tString eventdisplay, String eventackuser, Date eventacktime,\n\t\t\tOnmsAlarm alarm, org.opennms.netmgt.model.OnmsNode node,\n\t\t\tSet notifications, Set outagesBySvcregainedeventid,\n\t\t\tSet outagesBySvclosteventid) {\n\t\tm_eventId = eventid;\n\t\tm_eventUei = eventuei;\n\t\tm_eventTime = eventtime;\n\t\tm_eventHost = eventhost;\n\t\tm_eventSource = eventsource;\n\t\tm_ipAddr = ipaddr;\n\t\tm_distPoller = distPoller;\n\t\tm_eventSnmpHost = eventsnmphost;\n\t\tm_serviceType = service;\n\t\tm_eventSnmp = eventsnmp;\n\t\tm_eventParms = eventparms;\n\t\tm_eventCreateTime = eventcreatetime;\n\t\tm_eventDescr = eventdescr;\n\t\tm_eventLogGroup = eventloggroup;\n\t\tm_eventLogMsg = eventlogmsg;\n\t\tm_eventSeverity = eventseverity;\n\t\tm_eventPathOutage = eventpathoutage;\n\t\tm_eventCorrelation = eventcorrelation;\n\t\tm_eventSuppressedCount = eventsuppressedcount;\n\t\tm_eventOperInstruct = eventoperinstruct;\n\t\tm_eventAutoAction = eventautoaction;\n\t\tm_eventOperAction = eventoperaction;\n\t\tm_eventOperActionMenuText = eventoperactionmenutext;\n\t\tm_eventNotification = eventnotification;\n\t\tm_eventTTicket = eventtticket;\n\t\tm_eventTTicketState = eventtticketstate;\n\t\tm_eventForward = eventforward;\n\t\tm_eventMouseOverText = eventmouseovertext;\n\t\tm_eventLog = eventlog;\n\t\tm_eventDisplay = eventdisplay;\n\t\tm_eventAckUser = eventackuser;\n\t\tm_eventAckTime = eventacktime;\n\t\tm_alarm = alarm;\n\t\tm_node = node;\n\t\tm_notifications = notifications;\n\t\tm_outagesBySvcRegainedEventId = outagesBySvcregainedeventid;\n\t\tm_outagesBySvclostEventId = outagesBySvclosteventid;\n\t}","commit_id":"f8a074ed2a68fcafb3e30d5e072700525d961ce2","url":"https://github.com/OpenNMS/opennms"},{"original_method":"private void writeInc(Cube cube, String measureName, long ts, long value, String... tags) throws Exception {\n    cube.add(new CubeFact(tagValuesByValues(tags), MeasureType.COUNTER, measureName, new TimeValue(ts, value)));\n  }","id":61562,"modified_method":"private void writeInc(Cube cube, String measureName, long ts, long value, String... tags) throws Exception {\n    cube.add(getFact(measureName, ts, value, tags));\n  }","commit_id":"caced3749bdf640abf2a7f06056f6c29789385e4","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n  public void test() throws Exception {\n    Aggregation agg1 = new DefaultAggregation(ImmutableList.of(\"tag1\", \"tag2\", \"tag3\"),\n                                              ImmutableList.of(\"tag1\", \"tag2\"));\n    Aggregation agg2 = new DefaultAggregation(ImmutableList.of(\"tag1\", \"tag2\"),\n                                              ImmutableList.of(\"tag1\"));\n\n    int resolution = 1;\n    Cube cube = getCube(\"myCube\", new int[] {resolution}, ImmutableList.of(agg1, agg2));\n\n    // write some data\n    // NOTE: we mostly use different ts, as we are interested in checking incs not at persist, but rather at query time\n    writeInc(cube, \"metric1\",  1,  1,  \"1\",  \"1\",  \"1\");\n    writeInc(cube, \"metric1\",  1,  1,  \"1\",  \"1\",  \"1\");\n    writeInc(cube, \"metric1\",  2,  2, null,  \"1\",  \"1\");\n    writeInc(cube, \"metric1\",  3,  3,  \"1\",  \"2\",  \"1\");\n    writeInc(cube, \"metric1\",  3,  5,  \"1\",  \"2\",  \"3\");\n    writeInc(cube, \"metric1\",  3,  7,  \"2\",  \"1\",  \"1\");\n    writeInc(cube, \"metric1\",  4,  4,  \"1\", null,  \"2\");\n    writeInc(cube, \"metric1\",  5,  5, null, null,  \"1\");\n    writeInc(cube, \"metric1\",  6,  6,  \"1\", null, null);\n    writeInc(cube, \"metric1\",  7,  3,  \"1\",  \"1\", null);\n    writeInc(cube, \"metric1\",  8,  2, null,  \"1\", null);\n    writeInc(cube, \"metric1\",  9,  1, null, null, null);\n    writeInc(cube, \"metric1\", 10,  2,  \"1\",  \"1\",  \"1\",  \"1\");\n    writeInc(cube, \"metric1\", 11,  3,  \"1\",  \"1\",  \"1\", null);\n    writeInc(cube, \"metric1\", 12,  4,  \"2\",  \"1\",  \"1\",  \"1\");\n    writeInc(cube, \"metric1\", 13,  5, null, null, null,  \"1\");\n\n    writeInc(cube, \"metric2\",  1,  1,  \"1\",  \"1\",  \"1\");\n\n\n    // now let's query!\n    verifyCountQuery(cube, 0, 15, resolution, \"metric1\", ImmutableMap.of(\"tag1\", \"1\"), ImmutableList.of(\"tag2\"),\n                     ImmutableList.of(\n                       new TimeSeries(\"metric1\", tagValues(\"tag2\", \"1\"), timeValues(1, 2, 7, 3, 10, 2, 11, 3)),\n                       new TimeSeries(\"metric1\", tagValues(\"tag2\", \"2\"), timeValues(3, 8))));\n\n    verifyCountQuery(cube, 0, 15, resolution, \"metric1\", ImmutableMap.of(\"tag1\", \"1\", \"tag2\", \"1\", \"tag3\", \"1\"),\n                     new ArrayList<String>(),\n                     ImmutableList.of(\n                       new TimeSeries(\"metric1\", new HashMap<String, String>(), timeValues(1, 2, 10, 2, 11, 3))));\n\n    verifyCountQuery(cube, 0, 15, resolution, \"metric1\", new HashMap<String, String>(), ImmutableList.of(\"tag1\"),\n                     ImmutableList.of(\n                       new TimeSeries(\"metric1\", tagValues(\"tag1\", \"1\"),\n                                      timeValues(1, 2, 3, 8, 4, 4, 6, 6, 7, 3, 10, 2, 11, 3)),\n                       new TimeSeries(\"metric1\", tagValues(\"tag1\", \"2\"),\n                                      timeValues(3, 7, 12, 4))));\n\n    verifyCountQuery(cube, 0, 15, resolution, \"metric1\", ImmutableMap.of(\"tag3\", \"3\"), new ArrayList<String>(),\n                     ImmutableList.of(\n                       new TimeSeries(\"metric1\", new HashMap<String, String>(), timeValues(3, 5))));\n\n    // delete cube data for \"metric1\" for tag->1,tag2->1,tag3->1 for timestamp 1 - 8 and\n    // check data for other timestamp is available\n\n    CubeDeleteQuery query = new CubeDeleteQuery(0, 8, resolution, \"metric1\",\n                                                ImmutableMap.of(\"tag1\", \"1\", \"tag2\", \"1\", \"tag3\", \"1\"));\n    cube.delete(query);\n\n    verifyCountQuery(cube, 0, 15, resolution, \"metric1\", ImmutableMap.of(\"tag1\", \"1\", \"tag2\", \"1\", \"tag3\", \"1\"),\n                     ImmutableList.<String>of(),\n                     ImmutableList.of(\n                       new TimeSeries(\"metric1\", new HashMap<String, String>(), timeValues(10, 2, 11, 3))));\n\n    // delete cube data for \"metric1\" for tag1->1 and tag2->1  and check by scanning tag1->1 and tag2->1 is empty,\n\n    query = new CubeDeleteQuery(0, 15, resolution, \"metric1\", ImmutableMap.of(\"tag1\", \"1\", \"tag2\", \"1\"));\n    cube.delete(query);\n\n    verifyCountQuery(cube, 0, 15, resolution, \"metric1\", ImmutableMap.of(\"tag1\", \"1\", \"tag2\", \"1\"),\n                     ImmutableList.<String>of(), ImmutableList.<TimeSeries>of());\n\n  }","id":61563,"modified_method":"@Test\n  public void test() throws Exception {\n    Aggregation agg1 = new DefaultAggregation(ImmutableList.of(\"tag1\", \"tag2\", \"tag3\"),\n                                              ImmutableList.of(\"tag1\", \"tag2\"));\n    Aggregation agg2 = new DefaultAggregation(ImmutableList.of(\"tag1\", \"tag2\"),\n                                              ImmutableList.of(\"tag1\"));\n\n    int resolution = 1;\n    Cube cube = getCube(\"myCube\", new int[] {resolution}, ImmutableList.of(agg1, agg2));\n\n    // write some data\n    // NOTE: we mostly use different ts, as we are interested in checking incs not at persist, but rather at query time\n    writeInc(cube, \"metric1\",  1,  1,  \"1\",  \"1\",  \"1\");\n    writeInc(cube, \"metric1\",  1,  1,  \"1\",  \"1\",  \"1\");\n    writeInc(cube, \"metric1\",  2,  2, null,  \"1\",  \"1\");\n    writeInc(cube, \"metric1\",  3,  3,  \"1\",  \"2\",  \"1\");\n    writeInc(cube, \"metric1\",  3,  5,  \"1\",  \"2\",  \"3\");\n    writeInc(cube, \"metric1\",  3,  7,  \"2\",  \"1\",  \"1\");\n    writeInc(cube, \"metric1\",  4,  4,  \"1\", null,  \"2\");\n    writeInc(cube, \"metric1\",  5,  5, null, null,  \"1\");\n    writeInc(cube, \"metric1\",  6,  6,  \"1\", null, null);\n    writeInc(cube, \"metric1\",  7,  3,  \"1\",  \"1\", null);\n    writeInc(cube, \"metric1\",  8,  2, null,  \"1\", null);\n    writeInc(cube, \"metric1\",  9,  1, null, null, null);\n    // writing in batch\n    cube.add(ImmutableList.of(\n      getFact(\"metric1\", 10,  2,  \"1\",  \"1\",  \"1\",  \"1\"),\n      getFact(\"metric1\", 11,  3,  \"1\",  \"1\",  \"1\", null),\n      getFact(\"metric1\", 12,  4,  \"2\",  \"1\",  \"1\",  \"1\"),\n      getFact(\"metric1\", 13,  5, null, null, null,  \"1\")\n    ));\n\n    writeInc(cube, \"metric2\",  1,  1,  \"1\",  \"1\",  \"1\");\n\n    // todo: do some write instead of increments - test those as well\n\n    // now let's query!\n    verifyCountQuery(cube, 0, 15, resolution, \"metric1\", ImmutableMap.of(\"tag1\", \"1\"), ImmutableList.of(\"tag2\"),\n                     ImmutableList.of(\n                       new TimeSeries(\"metric1\", tagValues(\"tag2\", \"1\"), timeValues(1, 2, 7, 3, 10, 2, 11, 3)),\n                       new TimeSeries(\"metric1\", tagValues(\"tag2\", \"2\"), timeValues(3, 8))));\n\n    verifyCountQuery(cube, 0, 15, resolution, \"metric1\", ImmutableMap.of(\"tag1\", \"1\", \"tag2\", \"1\", \"tag3\", \"1\"),\n                     new ArrayList<String>(),\n                     ImmutableList.of(\n                       new TimeSeries(\"metric1\", new HashMap<String, String>(), timeValues(1, 2, 10, 2, 11, 3))));\n\n    verifyCountQuery(cube, 0, 15, resolution, \"metric1\", new HashMap<String, String>(), ImmutableList.of(\"tag1\"),\n                     ImmutableList.of(\n                       new TimeSeries(\"metric1\", tagValues(\"tag1\", \"1\"),\n                                      timeValues(1, 2, 3, 8, 4, 4, 6, 6, 7, 3, 10, 2, 11, 3)),\n                       new TimeSeries(\"metric1\", tagValues(\"tag1\", \"2\"),\n                                      timeValues(3, 7, 12, 4))));\n\n    verifyCountQuery(cube, 0, 15, resolution, \"metric1\", ImmutableMap.of(\"tag3\", \"3\"), new ArrayList<String>(),\n                     ImmutableList.of(\n                       new TimeSeries(\"metric1\", new HashMap<String, String>(), timeValues(3, 5))));\n\n    // delete cube data for \"metric1\" for tag->1,tag2->1,tag3->1 for timestamp 1 - 8 and\n    // check data for other timestamp is available\n\n    CubeDeleteQuery query = new CubeDeleteQuery(0, 8, resolution, \"metric1\",\n                                                ImmutableMap.of(\"tag1\", \"1\", \"tag2\", \"1\", \"tag3\", \"1\"));\n    cube.delete(query);\n\n    verifyCountQuery(cube, 0, 15, resolution, \"metric1\", ImmutableMap.of(\"tag1\", \"1\", \"tag2\", \"1\", \"tag3\", \"1\"),\n                     ImmutableList.<String>of(),\n                     ImmutableList.of(\n                       new TimeSeries(\"metric1\", new HashMap<String, String>(), timeValues(10, 2, 11, 3))));\n\n    // delete cube data for \"metric1\" for tag1->1 and tag2->1  and check by scanning tag1->1 and tag2->1 is empty,\n\n    query = new CubeDeleteQuery(0, 15, resolution, \"metric1\", ImmutableMap.of(\"tag1\", \"1\", \"tag2\", \"1\"));\n    cube.delete(query);\n\n    verifyCountQuery(cube, 0, 15, resolution, \"metric1\", ImmutableMap.of(\"tag1\", \"1\", \"tag2\", \"1\"),\n                     ImmutableList.<String>of(), ImmutableList.<TimeSeries>of());\n\n  }","commit_id":"caced3749bdf640abf2a7f06056f6c29789385e4","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public void add(CubeFact fact) throws Exception {\n    List<Fact> facts = Lists.newArrayList();\n    for (Aggregation agg : aggregations) {\n      if (agg.accept(fact)) {\n        List<TagValue> tagValues = Lists.newArrayList();\n        for (String tagName : agg.getTagNames()) {\n          tagValues.add(new TagValue(tagName, fact.getTagValues().get(tagName)));\n        }\n        facts.add(new Fact(tagValues, fact.getMeasureType(), fact.getMeasureName(), fact.getTimeValue()));\n      }\n    }\n\n    for (FactTable table : resolutionToFactTable.values()) {\n      table.add(facts);\n    }\n  }","id":61564,"modified_method":"@Override\n  public void add(CubeFact fact) throws Exception {\n    add(ImmutableList.of(fact));\n  }","commit_id":"caced3749bdf640abf2a7f06056f6c29789385e4","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public void add(MetricValue metricValue) throws Exception {\n    String scope = metricValue.getTags().get(Constants.Metrics.Tag.SCOPE);\n    String measureName = (scope == null ? \"system.\" : scope + \".\") + metricValue.getName();\n\n    CubeFact fact = new CubeFact(metricValue.getTags(),\n                                 toMeasureType(metricValue.getType()), measureName,\n                                 new TimeValue(metricValue.getTimestamp(), metricValue.getValue()));\n    cube.get().add(fact);\n  }","id":61565,"modified_method":"@Override\n  public void add(MetricValue metricValue) throws Exception {\n    add(ImmutableList.of(metricValue));\n  }","commit_id":"caced3749bdf640abf2a7f06056f6c29789385e4","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  protected void publish(Iterator<MetricValue> metrics) throws Exception {\n    List<MetricValue> records = ImmutableList.copyOf(metrics);\n\n    for (MetricValue value : records) {\n      // todo: change method signature to allow adding multiple at once?\n      try {\n        metricStore.add(value);\n      } catch (Exception e) {\n        throw new RuntimeException(\"Failed to add metric data to a store\", e);\n      }\n    }\n  }","id":61566,"modified_method":"@Override\n  protected void publish(Iterator<MetricValue> metrics) throws Exception {\n    List<MetricValue> records = ImmutableList.copyOf(metrics);\n\n    try {\n      metricStore.add(records);\n    } catch (Exception e) {\n      throw new RuntimeException(\"Failed to add metrics data to a store\", e);\n    }\n  }","commit_id":"caced3749bdf640abf2a7f06056f6c29789385e4","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public void onReceived(Iterator<FetchedMessage> messages) {\n    // Decode the metrics records.\n    final ByteBufferInputStream is = new ByteBufferInputStream(null);\n    List<MetricValue> records = ImmutableList.copyOf(\n      Iterators.filter(Iterators.transform(messages, new Function<FetchedMessage, MetricValue>() {\n      @Override\n      public MetricValue apply(FetchedMessage input) {\n        try {\n          return recordReader.read(new BinaryDecoder(is.reset(input.getPayload())), recordSchema);\n        } catch (IOException e) {\n          LOG.info(\"Failed to decode message to MetricValue. Skipped. {}\", e.getMessage());\n          return null;\n        }\n      }\n    }), Predicates.notNull()));\n\n    if (records.isEmpty()) {\n      LOG.info(\"No records to process.\");\n      return;\n    }\n\n    for (MetricValue value : records) {\n      // todo: change method signature to allow adding list?\n      try {\n        metricStore.add(value);\n      } catch (Exception e) {\n        String msg = \"Failed to add metric data to a store\";\n        LOG.error(msg);\n        // todo: will it shut down the whole the metrics processor service??\n        throw new RuntimeException(msg, e);\n      }\n    }\n\n    recordProcessed += records.size();\n    if (recordProcessed % 1000 == 0) {\n      LOG.info(\"{} metrics records processed\", recordProcessed);\n      LOG.info(\"Last record time: {}\", records.get(records.size() - 1).getTimestamp());\n    }\n  }","id":61567,"modified_method":"@Override\n  public void onReceived(Iterator<FetchedMessage> messages) {\n    // Decode the metrics records.\n    final ByteBufferInputStream is = new ByteBufferInputStream(null);\n    List<MetricValue> records = ImmutableList.copyOf(\n      Iterators.filter(Iterators.transform(messages, new Function<FetchedMessage, MetricValue>() {\n      @Override\n      public MetricValue apply(FetchedMessage input) {\n        try {\n          return recordReader.read(new BinaryDecoder(is.reset(input.getPayload())), recordSchema);\n        } catch (IOException e) {\n          LOG.info(\"Failed to decode message to MetricValue. Skipped. {}\", e.getMessage());\n          return null;\n        }\n      }\n    }), Predicates.notNull()));\n\n    if (records.isEmpty()) {\n      LOG.info(\"No records to process.\");\n      return;\n    }\n\n    try {\n      metricStore.add(records);\n    } catch (Exception e) {\n      String msg = \"Failed to add metrics data to a store\";\n      LOG.error(msg);\n      // todo: will it shut down the whole the metrics processor service??\n      throw new RuntimeException(msg, e);\n    }\n\n    recordProcessed += records.size();\n    if (recordProcessed % 1000 == 0) {\n      LOG.info(\"{} metrics records processed\", recordProcessed);\n      LOG.info(\"Last record time: {}\", records.get(records.size() - 1).getTimestamp());\n    }\n  }","commit_id":"caced3749bdf640abf2a7f06056f6c29789385e4","url":"https://github.com/caskdata/cdap"},{"original_method":"/** {@inheritDoc} */\n    @Override protected IgniteConfiguration getConfiguration(String gridName) throws Exception {\n        IgniteConfiguration cfg = super.getConfiguration(gridName);\n\n        ((TcpDiscoverySpi)cfg.getDiscoverySpi()).setIpFinder(ipFinder);\n\n        cfg.setClientMode(client);\n\n        CacheConfiguration ccfg = new CacheConfiguration();\n\n        if (fairAffinity)\n            ccfg.setAffinity(new FairAffinityFunction());\n\n        cfg.setCacheConfiguration(ccfg);\n\n        cfg.setCommunicationSpi(new TestCommunicationSpi());\n\n        return cfg;\n    }","id":61568,"modified_method":"/** {@inheritDoc} */\n    @Override protected IgniteConfiguration getConfiguration(String gridName) throws Exception {\n        IgniteConfiguration cfg = super.getConfiguration(gridName);\n\n        ((TcpDiscoverySpi)cfg.getDiscoverySpi()).setIpFinder(ipFinder).setForceServerMode(true);\n\n        cfg.setClientMode(client);\n\n        CacheConfiguration ccfg = new CacheConfiguration();\n\n        if (fairAffinity)\n            ccfg.setAffinity(new FairAffinityFunction());\n\n        cfg.setCacheConfiguration(ccfg);\n\n        cfg.setCommunicationSpi(new TestCommunicationSpi());\n\n        return cfg;\n    }","commit_id":"9759b19ce5db74533e171a9eb3ba0bd2eee449b7","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Override protected IgniteConfiguration getConfiguration(String gridName) throws Exception {\n        IgniteConfiguration cfg = super.getConfiguration(gridName);\n\n        TcpDiscoverySpi discoSpi = new TcpDiscoverySpi();\n\n        discoSpi.setIpFinder(ipFinder);\n\n        cfg.setDiscoverySpi(discoSpi);\n\n        CacheConfiguration cCfg = new CacheConfiguration();\n\n        cCfg.setCacheMode(PARTITIONED);\n        cCfg.setBackups(1);\n        cCfg.setWriteSynchronizationMode(FULL_SYNC);\n        cCfg.setAtomicWriteOrderMode(writeOrderMode);\n\n        if (idx == 0 && client)\n            cfg.setClientMode(true);\n\n        idx++;\n\n        cfg.setCacheConfiguration(cCfg);\n\n        cfg.setCommunicationSpi(new TestCommunicationSpi());\n\n        return cfg;\n    }","id":61569,"modified_method":"/** {@inheritDoc} */\n    @Override protected IgniteConfiguration getConfiguration(String gridName) throws Exception {\n        IgniteConfiguration cfg = super.getConfiguration(gridName);\n\n        TcpDiscoverySpi discoSpi = new TcpDiscoverySpi();\n\n        discoSpi.setForceServerMode(true);\n        discoSpi.setIpFinder(ipFinder);\n\n        cfg.setDiscoverySpi(discoSpi);\n\n        CacheConfiguration cCfg = new CacheConfiguration();\n\n        cCfg.setCacheMode(PARTITIONED);\n        cCfg.setBackups(1);\n        cCfg.setWriteSynchronizationMode(FULL_SYNC);\n        cCfg.setAtomicWriteOrderMode(writeOrderMode);\n\n        if (idx == 0 && client)\n            cfg.setClientMode(true);\n\n        idx++;\n\n        cfg.setCacheConfiguration(cCfg);\n\n        cfg.setCommunicationSpi(new TestCommunicationSpi());\n\n        return cfg;\n    }","commit_id":"154bd9e318b1ed68c7894169800695df47649d75","url":"https://github.com/apache/ignite"},{"original_method":"@Override protected IgniteConfiguration getConfiguration(String gridName) throws Exception {\n        IgniteConfiguration cfg = super.getConfiguration(gridName);\n\n        CacheConfiguration ccfg = defaultCacheConfiguration();\n\n        ccfg.setCacheMode(CacheMode.PARTITIONED);\n        ccfg.setBackups(1);\n        ccfg.setAffinity(new RendezvousAffinityFunction());\n\n        if (client)\n            cfg.setClientMode(true);\n\n        cfg.setCacheConfiguration(ccfg);\n\n        return cfg;\n    }","id":61570,"modified_method":"/** {@inheritDoc} */\n    @Override protected IgniteConfiguration getConfiguration(String gridName) throws Exception {\n        IgniteConfiguration cfg = super.getConfiguration(gridName);\n\n        ((TcpDiscoverySpi)cfg.getDiscoverySpi()).setForceServerMode(true);\n\n        CacheConfiguration ccfg = defaultCacheConfiguration();\n\n        ccfg.setCacheMode(CacheMode.PARTITIONED);\n        ccfg.setBackups(1);\n        ccfg.setAffinity(new RendezvousAffinityFunction());\n\n        if (client)\n            cfg.setClientMode(true);\n\n        cfg.setCacheConfiguration(ccfg);\n\n        return cfg;\n    }","commit_id":"154bd9e318b1ed68c7894169800695df47649d75","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Override protected IgniteConfiguration getConfiguration(String gridName) throws Exception {\n        IgniteConfiguration cfg = super.getConfiguration(gridName);\n\n        ((TcpDiscoverySpi)cfg.getDiscoverySpi()).setIpFinder(ipFinder);\n\n        cfg.setClientMode(client);\n\n        cfg.setCommunicationSpi(new TestCommunicationSpi());\n\n        cfg.setCacheConfiguration(ccfg);\n\n        return cfg;\n    }","id":61571,"modified_method":"/** {@inheritDoc} */\n    @Override protected IgniteConfiguration getConfiguration(String gridName) throws Exception {\n        IgniteConfiguration cfg = super.getConfiguration(gridName);\n\n        ((TcpDiscoverySpi)cfg.getDiscoverySpi()).setIpFinder(ipFinder).setForceServerMode(true);\n\n        cfg.setClientMode(client);\n\n        cfg.setCommunicationSpi(new TestCommunicationSpi());\n\n        cfg.setCacheConfiguration(ccfg);\n\n        return cfg;\n    }","commit_id":"154bd9e318b1ed68c7894169800695df47649d75","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @SuppressWarnings({\"IfMayBeConditional\", \"unchecked\"})\n    @Override protected IgniteConfiguration getConfiguration(String gridName) throws Exception {\n        IgniteConfiguration cfg = super.getConfiguration(gridName);\n\n        TcpDiscoverySpi spi = new TcpDiscoverySpi();\n\n        spi.setIpFinder(ipFinder);\n\n        cfg.setDiscoverySpi(spi);\n\n        cfg.setIncludeProperties();\n\n        cfg.setMarshaller(new OptimizedMarshaller(false));\n\n        if (useCache) {\n            CacheConfiguration cc = defaultCacheConfiguration();\n\n            cc.setCacheMode(mode);\n            cc.setAtomicityMode(TRANSACTIONAL);\n\n            if (nearEnabled) {\n                NearCacheConfiguration nearCfg = new NearCacheConfiguration();\n\n                cc.setNearConfiguration(nearCfg);\n            }\n\n            cc.setWriteSynchronizationMode(FULL_SYNC);\n\n            cc.setEvictSynchronized(false);\n\n            if (store != null) {\n                cc.setCacheStoreFactory(new IgniteReflectionFactory<CacheStore>(TestStore.class));\n                cc.setReadThrough(true);\n                cc.setWriteThrough(true);\n            }\n\n            cfg.setCacheConfiguration(cc);\n        }\n        else {\n            cfg.setCacheConfiguration();\n\n            cfg.setClientMode(true);\n        }\n\n        return cfg;\n    }","id":61572,"modified_method":"/** {@inheritDoc} */\n    @SuppressWarnings({\"IfMayBeConditional\", \"unchecked\"})\n    @Override protected IgniteConfiguration getConfiguration(String gridName) throws Exception {\n        IgniteConfiguration cfg = super.getConfiguration(gridName);\n\n        TcpDiscoverySpi spi = new TcpDiscoverySpi();\n\n        spi.setForceServerMode(true);\n        spi.setIpFinder(ipFinder);\n\n        cfg.setDiscoverySpi(spi);\n\n        cfg.setIncludeProperties();\n\n        cfg.setMarshaller(new OptimizedMarshaller(false));\n\n        if (useCache) {\n            CacheConfiguration cc = defaultCacheConfiguration();\n\n            cc.setCacheMode(mode);\n            cc.setAtomicityMode(TRANSACTIONAL);\n\n            if (nearEnabled) {\n                NearCacheConfiguration nearCfg = new NearCacheConfiguration();\n\n                cc.setNearConfiguration(nearCfg);\n            }\n\n            cc.setWriteSynchronizationMode(FULL_SYNC);\n\n            cc.setEvictSynchronized(false);\n\n            if (store != null) {\n                cc.setCacheStoreFactory(new IgniteReflectionFactory<CacheStore>(TestStore.class));\n                cc.setReadThrough(true);\n                cc.setWriteThrough(true);\n            }\n\n            cfg.setCacheConfiguration(cc);\n        }\n        else {\n            cfg.setCacheConfiguration();\n\n            cfg.setClientMode(true);\n        }\n\n        return cfg;\n    }","commit_id":"cc1612dda53cb566ba251a6d241914b4d22079ce","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Override protected IgniteConfiguration getConfiguration(String gridName) throws Exception {\n        IgniteConfiguration cfg = super.getConfiguration(gridName);\n\n        TcpDiscoverySpi disco = new TcpDiscoverySpi();\n\n        disco.setMaxMissedHeartbeats(Integer.MAX_VALUE);\n        disco.setIpFinder(IP_FINDER);\n\n        cfg.setDiscoverySpi(disco);\n\n        if (gridName.endsWith(\"1\"))\n            cfg.setClientMode(true);\n        else {\n            assert gridName.endsWith(\"2\");\n\n            CacheConfiguration cacheCfg = defaultCacheConfiguration();\n\n            cacheCfg.setCacheMode(PARTITIONED);\n            cacheCfg.setBackups(1);\n\n            cfg.setCacheConfiguration(cacheCfg);\n        }\n\n        return cfg;\n    }","id":61573,"modified_method":"/** {@inheritDoc} */\n    @Override protected IgniteConfiguration getConfiguration(String gridName) throws Exception {\n        IgniteConfiguration cfg = super.getConfiguration(gridName);\n\n        TcpDiscoverySpi disco = new TcpDiscoverySpi();\n\n        disco.setMaxMissedHeartbeats(Integer.MAX_VALUE);\n        disco.setIpFinder(IP_FINDER);\n        disco.setForceServerMode(true);\n\n        cfg.setDiscoverySpi(disco);\n\n        if (gridName.endsWith(\"1\"))\n            cfg.setClientMode(true);\n        else {\n            assert gridName.endsWith(\"2\");\n\n            CacheConfiguration cacheCfg = defaultCacheConfiguration();\n\n            cacheCfg.setCacheMode(PARTITIONED);\n            cacheCfg.setBackups(1);\n\n            cfg.setCacheConfiguration(cacheCfg);\n        }\n\n        return cfg;\n    }","commit_id":"cc1612dda53cb566ba251a6d241914b4d22079ce","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Override protected IgniteConfiguration getConfiguration(String gridName) throws Exception {\n        IgniteConfiguration cfg = super.getConfiguration(gridName);\n\n        ((TcpDiscoverySpi)cfg.getDiscoverySpi()).setIpFinder(ipFinder);\n\n        if (addTemplate) {\n            CacheConfiguration dfltCfg = new CacheConfiguration();\n\n            dfltCfg.setAtomicityMode(TRANSACTIONAL);\n            dfltCfg.setBackups(2);\n\n            CacheConfiguration templateCfg1 = new CacheConfiguration();\n\n            templateCfg1.setName(TEMPLATE1);\n            templateCfg1.setBackups(3);\n\n            CacheConfiguration templateCfg2 = new CacheConfiguration();\n\n            templateCfg2.setName(TEMPLATE2);\n            templateCfg2.setBackups(4);\n\n            cfg.setCacheConfiguration(dfltCfg, templateCfg1, templateCfg2);\n        }\n\n        cfg.setClientMode(clientMode);\n\n        cfg.setIncludeEventTypes(EventType.EVT_CACHE_REBALANCE_STARTED, EventType.EVT_CACHE_REBALANCE_STOPPED);\n\n        return cfg;\n    }","id":61574,"modified_method":"/** {@inheritDoc} */\n    @Override protected IgniteConfiguration getConfiguration(String gridName) throws Exception {\n        IgniteConfiguration cfg = super.getConfiguration(gridName);\n\n        ((TcpDiscoverySpi)cfg.getDiscoverySpi()).setIpFinder(ipFinder).setForceServerMode(true);\n\n        if (addTemplate) {\n            CacheConfiguration dfltCfg = new CacheConfiguration();\n\n            dfltCfg.setAtomicityMode(TRANSACTIONAL);\n            dfltCfg.setBackups(2);\n\n            CacheConfiguration templateCfg1 = new CacheConfiguration();\n\n            templateCfg1.setName(TEMPLATE1);\n            templateCfg1.setBackups(3);\n\n            CacheConfiguration templateCfg2 = new CacheConfiguration();\n\n            templateCfg2.setName(TEMPLATE2);\n            templateCfg2.setBackups(4);\n\n            cfg.setCacheConfiguration(dfltCfg, templateCfg1, templateCfg2);\n        }\n\n        cfg.setClientMode(clientMode);\n\n        cfg.setIncludeEventTypes(EventType.EVT_CACHE_REBALANCE_STARTED, EventType.EVT_CACHE_REBALANCE_STOPPED);\n\n        return cfg;\n    }","commit_id":"cc1612dda53cb566ba251a6d241914b4d22079ce","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Override protected IgniteConfiguration getConfiguration(String gridName) throws Exception {\n        IgniteConfiguration cfg = super.getConfiguration(gridName);\n\n        if (getTestGridName(0).equals(gridName))\n            cfg.setClientMode(true);\n\n        cfg.setCommunicationSpi(new TestCommunicationSpi());\n\n        return cfg;\n    }","id":61575,"modified_method":"/** {@inheritDoc} */\n    @Override protected IgniteConfiguration getConfiguration(String gridName) throws Exception {\n        IgniteConfiguration cfg = super.getConfiguration(gridName);\n\n        cfg.setDiscoverySpi(new TcpDiscoverySpi().setForceServerMode(true));\n\n        if (getTestGridName(0).equals(gridName))\n            cfg.setClientMode(true);\n\n        cfg.setCommunicationSpi(new TestCommunicationSpi());\n\n        return cfg;\n    }","commit_id":"cc1612dda53cb566ba251a6d241914b4d22079ce","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * Create an Attachment from the MIME stream. If there is a previous attachment\n     * that is not read, cache that attachment.\n     *\n     * @return\n     * @throws IOException\n     */\n    private void setupAttachment(AttachmentImpl att, InternetHeaders headers) throws IOException {\n        MimeBodyPartInputStream partStream = new MimeBodyPartInputStream(stream, boundary, pbAmount);\n\n        final String ct = headers.getHeader(\"Content-Type\", null);\n        DataSource source = new AttachmentDataSource(ct, new DelegatingInputStream(partStream));\n        att.setDataHandler(new DataHandler(source));\n\n        for (Enumeration<?> e = headers.getAllHeaders(); e.hasMoreElements();) {\n            Header header = (Header) e.nextElement();\n            if (header.getName().equalsIgnoreCase(\"Content-Transfer-Encoding\")\n                            && header.getValue().equalsIgnoreCase(\"binary\")) {\n                att.setXOP(true);\n            }\n            att.setHeader(header.getName(), header.getValue());\n        }\n    }","id":61576,"modified_method":"/**\n     * Create an Attachment from the MIME stream. If there is a previous attachment\n     * that is not read, cache that attachment.\n     *\n     * @return\n     * @throws IOException\n     */\n    private void setupAttachment(AttachmentImpl att, InternetHeaders headers) throws IOException {\n        MimeBodyPartInputStream partStream = new MimeBodyPartInputStream(stream, boundary, pbAmount);\n\n        final String ct = headers.getHeader(\"Content-Type\", null);\n        \n        boolean quotedPrintable = false;\n        \n        for (Enumeration<?> e = headers.getAllHeaders(); e.hasMoreElements();) {\n            Header header = (Header) e.nextElement();\n            if (header.getName().equalsIgnoreCase(\"Content-Transfer-Encoding\")) {\n                if (header.getValue().equalsIgnoreCase(\"binary\")) {\n                    att.setXOP(true);\n                } else if (header.getValue().equalsIgnoreCase(\"quoted-printable\")) {\n                    quotedPrintable = true;\n                }\n            }\n            att.setHeader(header.getName(), header.getValue());\n        }\n        \n        DelegatingInputStream is = new DelegatingInputStream(partStream);\n        if (quotedPrintable) {\n            DataSource source = new AttachmentDataSource(ct, new QuotedPrintableDecoderStream(is));\n            att.setDataHandler(new DataHandler(source));\n        } else {\n            DataSource source = new AttachmentDataSource(ct, is);\n            att.setDataHandler(new DataHandler(source));\n        }\n    }","commit_id":"aa6df4b73705627f72805017e4ff1ccafe5f2114","url":"https://github.com/apache/cxf"},{"original_method":"@SuppressWarnings(\"unchecked\")\n    private void unwind(Message message) {\n        boolean isFineLogging = LOG.isLoggable(Level.FINE);\n        while (iterator.hasPrevious()) {\n            Interceptor currentInterceptor = iterator.previous();\n            if (isFineLogging) {\n                LOG.fine(\"Invoking handleFault on interceptor \" + currentInterceptor);\n            }\n            currentInterceptor.handleFault(message);\n        }\n    }","id":61577,"modified_method":"@SuppressWarnings(\"unchecked\")\n    private void unwind(Message message) {\n        boolean isFineLogging = LOG.isLoggable(Level.FINE);\n        while (iterator.hasPrevious()) {\n            Interceptor currentInterceptor = iterator.previous();\n            if (isFineLogging) {\n                LOG.fine(\"Invoking handleFault on interceptor \" + currentInterceptor);\n            }\n            try {\n                currentInterceptor.handleFault(message);\n            } catch (Exception e) {\n                LOG.log(Level.WARNING, \"Exception in handleFault on interceptor \" + currentInterceptor, e); \n            }\n        }\n    }","commit_id":"aa6df4b73705627f72805017e4ff1ccafe5f2114","url":"https://github.com/apache/cxf"},{"original_method":"protected BodyPart getBodyPart() throws MessagingException {\n\t\tMimeBodyPart bp = new MimeBodyPart();\n\t\tDataSource ds = new ByteArrayDataSource((byte[]) content(), _mimeType);\n\t\tbp.setDataHandler(new DataHandler(ds));\n\n\t\tif (this.contentID() != null)\n\t\t\tbp.setHeader(\"Content-ID\", this.contentID());\n\t\tbp.setFileName(this.fileName());\n\n\t\treturn bp;\n\t}","id":61578,"modified_method":"protected BodyPart getBodyPart() throws MessagingException {\n\t\tMimeBodyPart bp = new MimeBodyPart();\n\t\tif (getDataHandler() == null) {\n\t\t\tDataSource ds = new ByteArrayDataSource((byte[]) content(), _mimeType);\n\t\t\tbp.setDataHandler(new DataHandler(ds));\n\t\t} else {\n\t\t\tbp.setDataHandler(getDataHandler());\n\t\t\tif (_mimeType != null) {\n\t\t\t\tbp.setHeader(\"Content-type\", _mimeType);\n\t\t\t}\n\t\t}\n\n\t\tif (this.contentID() != null) {\n\t\t\tbp.setHeader(\"Content-ID\", this.contentID());\n\t\t}\n\t\tbp.setFileName(this.fileName());\n\t\treturn bp;\n\t}","commit_id":"b81d7097915b314206c4f04caa9546fe908cd284","url":"https://github.com/wocommunity/wonder"},{"original_method":"@Test public void cleanUpSlaves() throws Exception {\n        DumbSlave s1 = r.createOnlineSlave();\n        FreeStyleProject p = r.createFreeStyleProject();\n        p.setAssignedNode(s1);\n        FreeStyleBuild b1 = r.assertBuildStatusSuccess(p.scheduleBuild2(0));\n        assertEquals(s1, b1.getBuiltOn());\n        FilePath ws1 = b1.getWorkspace();\n        assertNotNull(ws1);\n        ws1.act(new Detouch());\n        DumbSlave s2 = r.createOnlineSlave();\n        p.setAssignedNode(s2);\n        FreeStyleBuild b2 = r.assertBuildStatusSuccess(p.scheduleBuild2(0));\n        assertEquals(s2, b2.getBuiltOn());\n        FilePath ws2 = b2.getWorkspace();\n        assertNotNull(ws2);\n        ws2.act(new Detouch());\n        p.setAssignedNode(r.jenkins);\n        FreeStyleBuild b3 = r.assertBuildStatusSuccess(p.scheduleBuild2(0));\n        assertEquals(r.jenkins, b3.getBuiltOn());\n        assertEquals(r.jenkins, p.getLastBuiltOn());\n        new WorkspaceCleanupThread().execute(StreamTaskListener.fromStdout());\n        assertFalse(ws1.exists());\n        assertFalse(ws2.exists());\n    }","id":61579,"modified_method":"@Test public void cleanUpSlaves() throws Exception {\n        FreeStyleProject p = r.createFreeStyleProject();\n\n        FilePath ws1 = createOldWorkspaceOn(r.createOnlineSlave(), p);\n\n        FilePath ws2 = createOldWorkspaceOn(r.createOnlineSlave(), p);\n\n        p.setAssignedNode(r.jenkins);\n        FreeStyleBuild b3 = r.assertBuildStatusSuccess(p.scheduleBuild2(0));\n        assertEquals(r.jenkins, b3.getBuiltOn());\n        assertEquals(r.jenkins, p.getLastBuiltOn());\n\n        performCleanup();\n\n        assertFalse(ws1.exists());\n        assertFalse(ws2.exists());\n        assertTrue(b3.getWorkspace().exists());\n    }","commit_id":"f5585971ce6daa1f737b3f85c7001c94b513cce9","url":"https://github.com/kohsuke/hudson"},{"original_method":"@Issue(\"JENKINS-21023\")\n    @Test public void jobInFolder() throws Exception {\n        MockFolder d = r.createFolder(\"d\");\n        FreeStyleProject p1 = d.createProject(FreeStyleProject.class, \"p\");\n        FreeStyleBuild b1 = r.assertBuildStatusSuccess(p1.scheduleBuild2(0));\n        assertEquals(r.jenkins, b1.getBuiltOn());\n        FilePath ws1 = b1.getWorkspace();\n        assertNotNull(ws1);\n        ws1.act(new Detouch());\n        DumbSlave s1 = r.createOnlineSlave();\n        p1.setAssignedNode(s1);\n        FreeStyleBuild b2 = r.assertBuildStatusSuccess(p1.scheduleBuild2(0));\n        assertEquals(s1, b2.getBuiltOn());\n        FilePath ws2 = b2.getWorkspace();\n        assertNotNull(ws2);\n        ws2.act(new Detouch());\n        DumbSlave s2 = r.createOnlineSlave();\n        p1.setAssignedNode(s2);\n        FreeStyleBuild b3 = r.assertBuildStatusSuccess(p1.scheduleBuild2(0));\n        assertEquals(s2, b3.getBuiltOn());\n        FilePath ws3 = b3.getWorkspace();\n        assertNotNull(ws3);\n        ws3.act(new Detouch());\n        assertEquals(s2, p1.getLastBuiltOn());\n        FreeStyleProject p2 = d.createProject(FreeStyleProject.class, \"p2\");\n        p2.setAssignedNode(s1);\n        FreeStyleBuild b4 = r.assertBuildStatusSuccess(p2.scheduleBuild2(0));\n        assertEquals(s1, b4.getBuiltOn());\n        FilePath ws4 = b4.getWorkspace();\n        assertNotNull(ws4);\n        ws4.act(new Detouch());\n        assertEquals(s1, p2.getLastBuiltOn());\n        ws2.getParent().act(new Detouch()); // ${s1.rootPath}/workspace/d/\n        new WorkspaceCleanupThread().execute(StreamTaskListener.fromStdout());\n        assertFalse(ws1.exists());\n        assertFalse(ws2.exists());\n        assertTrue(ws3.exists());\n        assertTrue(ws4.exists());\n    }","id":61580,"modified_method":"@Issue(\"JENKINS-21023\")\n    @Test public void jobInFolder() throws Exception {\n        MockFolder d = r.createFolder(\"d\");\n        FreeStyleProject p1 = d.createProject(FreeStyleProject.class, \"p\");\n        FilePath ws1 = createOldWorkspaceOn(r.jenkins, p1);\n\n        DumbSlave s1 = r.createOnlineSlave();\n        FilePath ws2 = createOldWorkspaceOn(s1, p1);\n        DumbSlave s2 = r.createOnlineSlave();\n        FilePath ws3 = createOldWorkspaceOn(s2, p1);\n        assertEquals(s2, p1.getLastBuiltOn());\n\n        FreeStyleProject p2 = d.createProject(FreeStyleProject.class, \"p2\");\n        FilePath ws4 = createOldWorkspaceOn(s1, p2);\n        assertEquals(s1, p2.getLastBuiltOn());\n        ws2.getParent().act(new Detouch()); // ${s1.rootPath}/workspace/d/\n\n        performCleanup();\n\n        assertFalse(ws1.exists());\n        assertFalse(ws2.exists());\n        assertTrue(ws3.exists());\n        assertTrue(ws4.exists());\n    }","commit_id":"f5585971ce6daa1f737b3f85c7001c94b513cce9","url":"https://github.com/kohsuke/hudson"},{"original_method":"@Issue(\"JENKINS-21023\")\n    @Test public void modernMasterWorkspaceLocation() throws Exception {\n        FreeStyleProject p = r.createFreeStyleProject();\n        FreeStyleBuild b1 = r.assertBuildStatusSuccess(p.scheduleBuild2(0));\n        assertEquals(r.jenkins, b1.getBuiltOn());\n        FilePath ws1 = b1.getWorkspace();\n        assertNotNull(ws1);\n        ws1.act(new Detouch());\n        DumbSlave s = r.createOnlineSlave();\n        p.setAssignedNode(s);\n        FreeStyleBuild b2 = r.assertBuildStatusSuccess(p.scheduleBuild2(0));\n        assertEquals(s, b2.getBuiltOn());\n        FilePath ws2 = b2.getWorkspace();\n        assertNotNull(ws2);\n        ws2.act(new Detouch());\n        assertEquals(s, p.getLastBuiltOn());\n        new WorkspaceCleanupThread().execute(StreamTaskListener.fromStdout());\n        assertFalse(ws1.exists());\n        assertTrue(ws2.exists());\n    }","id":61581,"modified_method":"@Issue(\"JENKINS-21023\")\n    @Test public void modernMasterWorkspaceLocation() throws Exception {\n        FreeStyleProject p = r.createFreeStyleProject();\n\n        FilePath ws1 = createOldWorkspaceOn(r.jenkins, p);\n\n        DumbSlave s = r.createOnlineSlave();\n        FilePath ws2 = createOldWorkspaceOn(s, p);\n        assertEquals(s, p.getLastBuiltOn());\n\n        performCleanup();\n\n        assertFalse(ws1.exists());\n        assertTrue(ws2.exists());\n    }","commit_id":"f5585971ce6daa1f737b3f85c7001c94b513cce9","url":"https://github.com/kohsuke/hudson"},{"original_method":"@Override\n    public String render(XWikiContext context) throws XWikiException\n    {\n        XWikiRequest request = context.getRequest();\n        String content = request.getParameter(\"content\");\n        String title = request.getParameter(\"title\");\n        XWikiDocument doc = context.getDoc();\n        XWiki xwiki = context.getWiki();\n        XWikiForm form = context.getForm();\n        VelocityContext vcontext = (VelocityContext) context.get(\"vcontext\");\n\n        boolean hasTranslation = false;\n        if (doc != context.get(\"tdoc\")) {\n            hasTranslation = true;\n        }\n\n        // we need to clone so that nothing happens in memory\n        doc = (XWikiDocument) doc.clone();\n        context.put(\"doc\", doc);\n        vcontext.put(\"doc\", doc.newDocument(context));\n\n        // Check for edit section\n        String sectionContent = \"\";\n        int sectionNumber = 0;\n        if (request.getParameter(\"section\") != null && xwiki.hasSectionEdit(context)) {\n            sectionNumber = NumberUtils.toInt(request.getParameter(\"section\"));\n            sectionContent = doc.getContentOfSection(sectionNumber);\n        }\n        vcontext.put(\"sectionNumber\", new Integer(sectionNumber));\n\n        synchronized (doc) {\n            XWikiDocument tdoc = (XWikiDocument) context.get(\"tdoc\");\n            EditForm peform = (EditForm) form;\n            String parent = peform.getParent();\n            if (parent != null) {\n                doc.setParent(parent);\n            }\n            String creator = peform.getCreator();\n            if (creator != null) {\n                doc.setCreator(creator);\n            }\n            String defaultTemplate = peform.getDefaultTemplate();\n            if (defaultTemplate != null) {\n                doc.setDefaultTemplate(defaultTemplate);\n            }\n            String defaultLanguage = peform.getDefaultLanguage();\n            if ((defaultLanguage != null) && !defaultLanguage.equals(\"\")) {\n                doc.setDefaultLanguage(defaultLanguage);\n            }\n            if (doc.isNew() && doc.getDefaultLanguage().equals(\"\")) {\n                doc.setDefaultLanguage(context.getWiki().getLanguagePreference(context));\n            }\n\n            String language = context.getWiki().getLanguagePreference(context);\n            String languagefromrequest = context.getRequest().getParameter(\"language\");\n            languagefromrequest = (languagefromrequest == null) ? \"\" : languagefromrequest;\n            String languagetoedit = languagefromrequest.equals(\"\") ? language : languagefromrequest;\n\n            // if no specific language is set or if it is \"default\" then we edit the current doc\n            if ((languagetoedit == null) || (languagetoedit.equals(\"default\"))) {\n                languagetoedit = \"\";\n            }\n            // if the document is new then we edit it as the default\n            // if the language to edit is the one of the default document then the language is the\n            // default\n            if (doc.isNew() || (doc.getDefaultLanguage().equals(languagetoedit))) {\n                languagetoedit = \"\";\n            }\n            // if the doc does not exist in the language to edit and the language was not\n            // explicitely set in the URL\n            // then we edit the default doc, otherwise this can cause to create translations without\n            // wanting it.\n            if ((!hasTranslation) && languagefromrequest.equals(\"\")) {\n                languagetoedit = \"\";\n            }\n\n            if (languagetoedit.equals(\"\")) {\n                // In this case the created document is going to be the default document\n                tdoc = doc;\n                context.put(\"tdoc\", doc);\n                vcontext.put(\"tdoc\", vcontext.get(\"doc\"));\n                if (doc.isNew()) {\n                    doc.setDefaultLanguage(language);\n                    doc.setLanguage(\"\");\n                }\n            } else {\n                // If the translated doc object is the same as the doc object\n                // this means the translated doc did not exists so we need to create it\n                if ((!hasTranslation) && context.getWiki().isMultiLingual(context)) {\n                    tdoc = new XWikiDocument(doc.getSpace(), doc.getName());\n                    tdoc.setLanguage(languagetoedit);\n                    tdoc.setContent(doc.getContent());\n                    tdoc.setSyntaxId(doc.getSyntaxId());\n                    tdoc.setAuthor(context.getUser());\n                    tdoc.setStore(doc.getStore());\n                    context.put(\"tdoc\", tdoc);\n                    vcontext.put(\"tdoc\", tdoc.newDocument(context));\n                }\n            }\n\n            XWikiDocument tdoc2 = (XWikiDocument) tdoc.clone();\n            if (content != null) {\n                tdoc2.setContent(content);\n                tdoc2.setTitle(title);\n            }\n            if (sectionContent != null && !sectionContent.equals(\"\")) {\n                if (content != null) {\n                    tdoc2.setContent(content);\n                } else {\n                    tdoc2.setContent(sectionContent);\n                }\n                if (title != null) {\n                    tdoc2.setTitle(doc.getDocumentSection(sectionNumber).getSectionTitle());\n                } else {\n                    tdoc2.setTitle(title);\n                }\n            }\n            context.put(\"tdoc\", tdoc2);\n            vcontext.put(\"tdoc\", tdoc2.newDocument(context));\n            try {\n                tdoc2.readFromTemplate(peform, context);\n            } catch (XWikiException e) {\n                if (e.getCode() == XWikiException.ERROR_XWIKI_APP_DOCUMENT_NOT_EMPTY) {\n                    context.put(\"exception\", e);\n                    return \"docalreadyexists\";\n                }\n            }\n\n            /* Setup a lock */\n            try {\n                XWikiLock lock = tdoc.getLock(context);\n                if ((lock == null) || (lock.getUserName().equals(context.getUser())) || (peform.isLockForce())) {\n                    tdoc.setLock(context.getUser(), context);\n                }\n            } catch (Exception e) {\n                e.printStackTrace();\n                // Lock should never make XWiki fail\n                // But we should log any related information\n                log.error(\"Exception while setting up lock\", e);\n            }\n        }\n\n        return \"edit\";\n    }","id":61582,"modified_method":"@Override\n    public String render(XWikiContext context) throws XWikiException\n    {\n        XWikiRequest request = context.getRequest();\n        String content = request.getParameter(\"content\");\n        String title = request.getParameter(\"title\");\n        XWikiDocument doc = context.getDoc();\n        XWiki xwiki = context.getWiki();\n        XWikiForm form = context.getForm();\n        VelocityContext vcontext = (VelocityContext) context.get(\"vcontext\");\n\n        boolean hasTranslation = false;\n        if (doc != context.get(\"tdoc\")) {\n            hasTranslation = true;\n        }\n\n        // we need to clone so that nothing happens in memory\n        doc = doc.clone();\n        context.put(\"doc\", doc);\n        vcontext.put(\"doc\", doc.newDocument(context));\n\n        // Check for edit section\n        String sectionContent = \"\";\n        int sectionNumber = 0;\n        if (request.getParameter(\"section\") != null && xwiki.hasSectionEdit(context)) {\n            sectionNumber = NumberUtils.toInt(request.getParameter(\"section\"));\n            sectionContent = doc.getContentOfSection(sectionNumber);\n        }\n        vcontext.put(\"sectionNumber\", new Integer(sectionNumber));\n\n        synchronized (doc) {\n            XWikiDocument tdoc = (XWikiDocument) context.get(\"tdoc\");\n            EditForm peform = (EditForm) form;\n            String parent = peform.getParent();\n            if (parent != null) {\n                doc.setParent(parent);\n            }\n            String creator = peform.getCreator();\n            if (creator != null) {\n                doc.setCreator(creator);\n            }\n            String defaultTemplate = peform.getDefaultTemplate();\n            if (defaultTemplate != null) {\n                doc.setDefaultTemplate(defaultTemplate);\n            }\n            String defaultLanguage = peform.getDefaultLanguage();\n            if ((defaultLanguage != null) && !defaultLanguage.equals(\"\")) {\n                doc.setDefaultLanguage(defaultLanguage);\n            }\n            if (doc.isNew() && doc.getDefaultLanguage().equals(\"\")) {\n                doc.setDefaultLanguage(context.getWiki().getLanguagePreference(context));\n            }\n\n            String language = context.getWiki().getLanguagePreference(context);\n            String languagefromrequest = context.getRequest().getParameter(\"language\");\n            languagefromrequest = (languagefromrequest == null) ? \"\" : languagefromrequest;\n            String languagetoedit = languagefromrequest.equals(\"\") ? language : languagefromrequest;\n\n            // if no specific language is set or if it is \"default\" then we edit the current doc\n            if ((languagetoedit == null) || (languagetoedit.equals(\"default\"))) {\n                languagetoedit = \"\";\n            }\n            // if the document is new then we edit it as the default\n            // if the language to edit is the one of the default document then the language is the\n            // default\n            if (doc.isNew() || (doc.getDefaultLanguage().equals(languagetoedit))) {\n                languagetoedit = \"\";\n            }\n            // if the doc does not exist in the language to edit and the language was not\n            // explicitely set in the URL\n            // then we edit the default doc, otherwise this can cause to create translations without\n            // wanting it.\n            if ((!hasTranslation) && languagefromrequest.equals(\"\")) {\n                languagetoedit = \"\";\n            }\n\n            if (languagetoedit.equals(\"\")) {\n                // In this case the created document is going to be the default document\n                tdoc = doc;\n                context.put(\"tdoc\", doc);\n                vcontext.put(\"tdoc\", vcontext.get(\"doc\"));\n                if (doc.isNew()) {\n                    doc.setDefaultLanguage(language);\n                    doc.setLanguage(\"\");\n                }\n            } else {\n                // If the translated doc object is the same as the doc object\n                // this means the translated doc did not exists so we need to create it\n                if ((!hasTranslation) && context.getWiki().isMultiLingual(context)) {\n                    tdoc = new XWikiDocument(doc.getDocumentReference());\n                    tdoc.setLanguage(languagetoedit);\n                    tdoc.setContent(doc.getContent());\n                    tdoc.setSyntax(doc.getSyntax());\n                    tdoc.setAuthor(context.getUser());\n                    tdoc.setStore(doc.getStore());\n                    context.put(\"tdoc\", tdoc);\n                    vcontext.put(\"tdoc\", tdoc.newDocument(context));\n                }\n            }\n\n            XWikiDocument tdoc2 = tdoc.clone();\n            if (content != null) {\n                tdoc2.setContent(content);\n                tdoc2.setTitle(title);\n            }\n            if (sectionContent != null && !sectionContent.equals(\"\")) {\n                if (content != null) {\n                    tdoc2.setContent(content);\n                } else {\n                    tdoc2.setContent(sectionContent);\n                }\n                if (title != null) {\n                    tdoc2.setTitle(doc.getDocumentSection(sectionNumber).getSectionTitle());\n                } else {\n                    tdoc2.setTitle(title);\n                }\n            }\n            context.put(\"tdoc\", tdoc2);\n            vcontext.put(\"tdoc\", tdoc2.newDocument(context));\n            try {\n                tdoc2.readFromTemplate(peform, context);\n            } catch (XWikiException e) {\n                if (e.getCode() == XWikiException.ERROR_XWIKI_APP_DOCUMENT_NOT_EMPTY) {\n                    context.put(\"exception\", e);\n                    return \"docalreadyexists\";\n                }\n            }\n\n            /* Setup a lock */\n            try {\n                XWikiLock lock = tdoc.getLock(context);\n                if ((lock == null) || (lock.getUserName().equals(context.getUser())) || (peform.isLockForce())) {\n                    tdoc.setLock(context.getUser(), context);\n                }\n            } catch (Exception e) {\n                e.printStackTrace();\n                // Lock should never make XWiki fail\n                // But we should log any related information\n                log.error(\"Exception while setting up lock\", e);\n            }\n        }\n\n        return \"edit\";\n    }","commit_id":"73d5ba845f2a065e62c2f41a0cd9ef8a2f2876ff","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Test that\n     * {@link ExportURLFactory#createAttachmentURL(String, String, String, String, String, com.xpn.xwiki.XWikiContext)}\n     * correctly escapes spaces into %20 when the exported document contains spaces in its name.\n     */\n    public void testCreateAttachmentURL() throws MalformedURLException\n    {\n        // Prepare the exported document and attachment.\n        XWikiDocument doc = new XWikiDocument(\" Space \", \"New  Page\");\n        XWikiAttachment attachment = new XWikiAttachment(doc, \"img .jpg\");\n        attachment.setContent(\"test\".getBytes());\n        doc.getAttachmentList().add(attachment);\n        this.mockXWiki.stubs().method(\"getDocument\").will(returnValue(doc));\n\n        URL url = this.urlFactory.createAttachmentURL(\"img .jpg\", \" Space \", \"Pa ge\", \"view\", \"\", \"x\", getContext());\n        assertEquals(new URL(\"file://attachment/x.%20Space%20.Pa%20ge.img%20.jpg\"), url);\n    }","id":61583,"modified_method":"/**\n     * Test that\n     * {@link ExportURLFactory#createAttachmentURL(String, String, String, String, String, com.xpn.xwiki.XWikiContext)}\n     * correctly escapes spaces into %20 when the exported document contains spaces in its name.\n     */\n    public void testCreateAttachmentURL() throws Exception\n    {\n        // Prepare the exported document and attachment.\n        XWikiDocument doc = new XWikiDocument(new DocumentReference(\"xwiki\", \" Space \", \"New  Page\"));\n        XWikiAttachment attachment = new XWikiAttachment(doc, \"img .jpg\");\n        attachment.setContent(new ByteArrayInputStream(\"test\".getBytes()));\n        doc.getAttachmentList().add(attachment);\n        this.mockXWiki.stubs().method(\"getDocument\").will(returnValue(doc));\n\n        URL url = this.urlFactory.createAttachmentURL(\"img .jpg\", \" Space \", \"Pa ge\", \"view\", \"\", \"x\", getContext());\n        assertEquals(new URL(\"file://attachment/x.%20Space%20.Pa%20ge.img%20.jpg\"), url);\n    }","commit_id":"73d5ba845f2a065e62c2f41a0cd9ef8a2f2876ff","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Saves the current document, updated according to the parameters sent in the request.\n     * \n     * @param context The current request {@link XWikiContext context}.\n     * @return <code>true<\/code> if there was an error and the response needs to render an error page,\n     *         <code>false<\/code> if the document was correctly saved.\n     * @throws XWikiException If an error occured: cannot communicate with the storage module, or cannot update the\n     *             document because the request contains invalid parameters.\n     */\n    public boolean save(XWikiContext context) throws XWikiException\n    {\n        XWiki xwiki = context.getWiki();\n        XWikiRequest request = context.getRequest();\n        XWikiDocument doc = context.getDoc();\n        XWikiForm form = context.getForm();\n\n        // This is pretty useless, since contexts aren't shared between threads.\n        // It just slows down execution.\n        String title = doc.getTitle();\n        // Check save session\n        int sectionNumber = 0;\n        if (request.getParameter(\"section\") != null && xwiki.hasSectionEdit(context)) {\n            sectionNumber = Integer.parseInt(request.getParameter(\"section\"));\n        }\n\n        // We need to clone this document first, since a cached storage would return the same object for the\n        // following requests, so concurrent request might get a partially modified object, or worse, if an error\n        // occurs during the save, the cached object will not reflect the actual document at all.\n        doc = (XWikiDocument) doc.clone();\n\n        String language = ((EditForm) form).getLanguage();\n        // FIXME Which one should be used: doc.getDefaultLanguage or\n        // form.getDefaultLanguage()?\n        // String defaultLanguage = ((EditForm) form).getDefaultLanguage();\n        XWikiDocument tdoc;\n\n        if (doc.isNew() || (language == null) || (language.equals(\"\")) || (language.equals(\"default\"))\n            || (language.equals(doc.getDefaultLanguage())))\n        {\n            // Need to save parent and defaultLanguage if they have changed\n            tdoc = doc;\n        } else {\n            tdoc = doc.getTranslatedDocument(language, context);\n            if ((tdoc == doc) && xwiki.isMultiLingual(context)) {\n                tdoc = new XWikiDocument(doc.getDocumentReference());\n                tdoc.setLanguage(language);\n                tdoc.setStore(doc.getStore());\n            } else if (tdoc != doc) {\n                // Same as above, clone the object retrieved from the store cache.\n                tdoc = (XWikiDocument) tdoc.clone();\n            }\n            tdoc.setTranslation(1);\n        }\n\n        if (doc.isNew()) {\n            doc.setLanguage(\"\");\n            if ((doc.getDefaultLanguage() == null) || (doc.getDefaultLanguage().equals(\"\"))) {\n                doc.setDefaultLanguage(context.getWiki().getLanguagePreference(context));\n            }\n        }\n\n        try {\n            tdoc.readFromTemplate(((EditForm) form).getTemplate(), context);\n        } catch (XWikiException e) {\n            if (e.getCode() == XWikiException.ERROR_XWIKI_APP_DOCUMENT_NOT_EMPTY) {\n                context.put(\"exception\", e);\n                return true;\n            }\n        }\n\n        if (sectionNumber != 0) {\n            XWikiDocument sectionDoc = tdoc.clone();\n            sectionDoc.readFromForm((EditForm) form, context);\n            String sectionContent = sectionDoc.getContent() + \"\\n\";\n            String content = doc.updateDocumentSection(sectionNumber, sectionContent);\n            tdoc.setContent(content);\n            tdoc.setTitle(title);\n            tdoc.setComment(sectionDoc.getComment());\n            tdoc.setMinorEdit(sectionDoc.isMinorEdit());\n        } else {\n            tdoc.readFromForm((EditForm) form, context);\n        }\n\n        // TODO: handle Author\n        String username = context.getUser();\n        tdoc.setAuthor(username);\n        if (tdoc.isNew()) {\n            tdoc.setCreator(username);\n        }\n\n        // Make sure we have at least the meta data dirty status\n        tdoc.setMetaDataDirty(true);\n\n        // Validate the document if we have xvalidate=1 in the request\n        if (\"1\".equals(request.getParameter(\"xvalidate\"))) {\n            boolean validationResult = tdoc.validate(context);\n            // if the validation fails we should show the inline action\n            if (validationResult == false) {\n                // Set display context to 'edit'\n                context.put(\"display\", \"edit\");\n                // Set the action to inline\n                context.setAction(\"inline\");\n                // Set the document in the context\n                VelocityContext vcontext = (VelocityContext) context.get(\"vcontext\");\n                context.put(\"doc\", doc);\n                context.put(\"cdoc\", tdoc);\n                context.put(\"tdoc\", tdoc);\n                Document vdoc = tdoc.newDocument(context);\n                vcontext.put(\"doc\", doc.newDocument(context));\n                vcontext.put(\"cdoc\", vdoc);\n                vcontext.put(\"tdoc\", vdoc);\n                return true;\n            }\n        }\n\n        // We get the comment to be used from the document\n        // It was read using readFromForm\n        xwiki.saveDocument(tdoc, tdoc.getComment(), tdoc.isMinorEdit(), context);\n        XWikiLock lock = tdoc.getLock(context);\n        if (lock != null) {\n            tdoc.removeLock(context);\n        }\n\n        return false;\n    }","id":61584,"modified_method":"/**\n     * Saves the current document, updated according to the parameters sent in the request.\n     * \n     * @param context The current request {@link XWikiContext context}.\n     * @return <code>true<\/code> if there was an error and the response needs to render an error page,\n     *         <code>false<\/code> if the document was correctly saved.\n     * @throws XWikiException If an error occured: cannot communicate with the storage module, or cannot update the\n     *             document because the request contains invalid parameters.\n     */\n    public boolean save(XWikiContext context) throws XWikiException\n    {\n        XWiki xwiki = context.getWiki();\n        XWikiRequest request = context.getRequest();\n        XWikiDocument doc = context.getDoc();\n        XWikiForm form = context.getForm();\n\n        // This is pretty useless, since contexts aren't shared between threads.\n        // It just slows down execution.\n        String title = doc.getTitle();\n        // Check save session\n        int sectionNumber = 0;\n        if (request.getParameter(\"section\") != null && xwiki.hasSectionEdit(context)) {\n            sectionNumber = Integer.parseInt(request.getParameter(\"section\"));\n        }\n\n        // We need to clone this document first, since a cached storage would return the same object for the\n        // following requests, so concurrent request might get a partially modified object, or worse, if an error\n        // occurs during the save, the cached object will not reflect the actual document at all.\n        doc = (XWikiDocument) doc.clone();\n\n        String language = ((EditForm) form).getLanguage();\n        // FIXME Which one should be used: doc.getDefaultLanguage or\n        // form.getDefaultLanguage()?\n        // String defaultLanguage = ((EditForm) form).getDefaultLanguage();\n        XWikiDocument tdoc;\n\n        if (doc.isNew() || (language == null) || (language.equals(\"\")) || (language.equals(\"default\"))\n            || (language.equals(doc.getDefaultLanguage())))\n        {\n            // Need to save parent and defaultLanguage if they have changed\n            tdoc = doc;\n        } else {\n            tdoc = doc.getTranslatedDocument(language, context);\n            if ((tdoc == doc) && xwiki.isMultiLingual(context)) {\n                tdoc = new XWikiDocument(doc.getDocumentReference());\n                tdoc.setLanguage(language);\n                tdoc.setStore(doc.getStore());\n            } else if (tdoc != doc) {\n                // Same as above, clone the object retrieved from the store cache.\n                tdoc = tdoc.clone();\n            }\n            tdoc.setTranslation(1);\n        }\n\n        if (doc.isNew()) {\n            doc.setLanguage(\"\");\n            if ((doc.getDefaultLanguage() == null) || (doc.getDefaultLanguage().equals(\"\"))) {\n                doc.setDefaultLanguage(context.getWiki().getLanguagePreference(context));\n            }\n        }\n\n        try {\n            tdoc.readFromTemplate(((EditForm) form).getTemplate(), context);\n        } catch (XWikiException e) {\n            if (e.getCode() == XWikiException.ERROR_XWIKI_APP_DOCUMENT_NOT_EMPTY) {\n                context.put(\"exception\", e);\n                return true;\n            }\n        }\n\n        if (sectionNumber != 0) {\n            XWikiDocument sectionDoc = tdoc.clone();\n            sectionDoc.readFromForm((EditForm) form, context);\n            String sectionContent = sectionDoc.getContent() + \"\\n\";\n            String content = doc.updateDocumentSection(sectionNumber, sectionContent);\n            tdoc.setContent(content);\n            tdoc.setTitle(title);\n            tdoc.setComment(sectionDoc.getComment());\n            tdoc.setMinorEdit(sectionDoc.isMinorEdit());\n        } else {\n            tdoc.readFromForm((EditForm) form, context);\n        }\n\n        // TODO: handle Author\n        String username = context.getUser();\n        tdoc.setAuthor(username);\n        if (tdoc.isNew()) {\n            tdoc.setCreator(username);\n        }\n\n        // Make sure we have at least the meta data dirty status\n        tdoc.setMetaDataDirty(true);\n\n        // Validate the document if we have xvalidate=1 in the request\n        if (\"1\".equals(request.getParameter(\"xvalidate\"))) {\n            boolean validationResult = tdoc.validate(context);\n            // if the validation fails we should show the inline action\n            if (validationResult == false) {\n                // Set display context to 'edit'\n                context.put(\"display\", \"edit\");\n                // Set the action to inline\n                context.setAction(\"inline\");\n                // Set the document in the context\n                VelocityContext vcontext = (VelocityContext) context.get(\"vcontext\");\n                context.put(\"doc\", doc);\n                context.put(\"cdoc\", tdoc);\n                context.put(\"tdoc\", tdoc);\n                Document vdoc = tdoc.newDocument(context);\n                vcontext.put(\"doc\", doc.newDocument(context));\n                vcontext.put(\"cdoc\", vdoc);\n                vcontext.put(\"tdoc\", vdoc);\n                return true;\n            }\n        }\n\n        // We get the comment to be used from the document\n        // It was read using readFromForm\n        xwiki.saveDocument(tdoc, tdoc.getComment(), tdoc.isMinorEdit(), context);\n        XWikiLock lock = tdoc.getLock(context);\n        if (lock != null) {\n            tdoc.removeLock(context);\n        }\n\n        return false;\n    }","commit_id":"73d5ba845f2a065e62c2f41a0cd9ef8a2f2876ff","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public String render(XWikiContext context) throws XWikiException\n    {\n        XWikiRequest request = context.getRequest();\n        String content = request.getParameter(\"content\");\n        XWikiDocument doc = context.getDoc();\n        XWikiForm form = context.getForm();\n        VelocityContext vcontext = (VelocityContext) context.get(\"vcontext\");\n\n        synchronized (doc) {\n            XWikiDocument tdoc = (XWikiDocument) context.get(\"tdoc\");\n            EditForm peform = (EditForm) form;\n            String parent = peform.getParent();\n            if (parent != null) {\n                doc.setParent(parent);\n            }\n            String creator = peform.getCreator();\n            if (creator != null) {\n                doc.setCreator(creator);\n            }\n            String defaultTemplate = peform.getDefaultTemplate();\n            if (defaultTemplate != null) {\n                doc.setDefaultTemplate(defaultTemplate);\n            }\n            String defaultLanguage = peform.getDefaultLanguage();\n            if ((defaultLanguage != null) && !defaultLanguage.equals(\"\")) {\n                doc.setDefaultLanguage(defaultLanguage);\n            }\n            if (doc.getDefaultLanguage().equals(\"\")) {\n                doc.setDefaultLanguage(context.getWiki().getLanguagePreference(context));\n            }\n\n            String language = context.getWiki().getLanguagePreference(context);\n            String languagefromrequest = context.getRequest().getParameter(\"language\");\n            String languagetoedit =\n                ((languagefromrequest == null) || (languagefromrequest.equals(\"\"))) ? language\n                    : languagefromrequest;\n\n            if ((languagetoedit == null) || (languagetoedit.equals(\"default\"))) {\n                languagetoedit = \"\";\n            }\n            if (doc.isNew() || (doc.getDefaultLanguage().equals(languagetoedit))) {\n                languagetoedit = \"\";\n            }\n\n            if (languagetoedit.equals(\"\")) {\n                // In this case the created document is going to be the default document\n                tdoc = doc;\n                context.put(\"tdoc\", doc);\n                vcontext.put(\"tdoc\", vcontext.get(\"doc\"));\n                if (doc.isNew()) {\n                    doc.setDefaultLanguage(language);\n                    doc.setLanguage(\"\");\n                }\n            } else {\n                // If the translated doc object is the same as the doc object\n                // this means the translated doc did not exists so we need to create it\n                if ((tdoc == doc)) {\n                    tdoc = new XWikiDocument(doc.getSpace(), doc.getName());\n                    tdoc.setLanguage(languagetoedit);\n                    tdoc.setContent(doc.getContent());\n                    tdoc.setSyntaxId(doc.getSyntaxId());\n                    tdoc.setAuthor(context.getUser());\n                    tdoc.setStore(doc.getStore());\n                    context.put(\"tdoc\", tdoc);\n                    vcontext.put(\"tdoc\", tdoc.newDocument(context));\n                }\n            }\n\n            XWikiDocument tdoc2 = (XWikiDocument) tdoc.clone();\n            if (content != null && !content.equals(\"\")) {\n                tdoc2.setContent(content);\n            }\n            context.put(\"tdoc\", tdoc2);\n            vcontext.put(\"tdoc\", tdoc2.newDocument(context));\n            try {\n                tdoc2.readFromTemplate(peform, context);\n            } catch (XWikiException e) {\n                if (e.getCode() == XWikiException.ERROR_XWIKI_APP_DOCUMENT_NOT_EMPTY) {\n                    context.put(\"exception\", e);\n                    return \"docalreadyexists\";\n                }\n            }\n\n            /* Setup a lock */\n            try {\n                XWikiLock lock = tdoc.getLock(context);\n                if ((lock == null) || (lock.getUserName().equals(context.getUser()))\n                    || (peform.isLockForce())) {\n                    tdoc.setLock(context.getUser(), context);\n                }\n            } catch (Exception e) {\n                e.printStackTrace();\n                // Lock should never make XWiki fail\n                // But we should log any related information\n                log.error(\"Exception while setting up lock\", e);\n            }\n        }\n\n        return \"admin\";\n    }","id":61585,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see com.xpn.xwiki.web.XWikiAction#render(com.xpn.xwiki.XWikiContext)\n     */\n    @Override\n    public String render(XWikiContext context) throws XWikiException\n    {\n        XWikiRequest request = context.getRequest();\n        String content = request.getParameter(\"content\");\n        XWikiDocument doc = context.getDoc();\n        XWikiForm form = context.getForm();\n        VelocityContext vcontext = (VelocityContext) context.get(\"vcontext\");\n\n        synchronized (doc) {\n            XWikiDocument tdoc = (XWikiDocument) context.get(\"tdoc\");\n            EditForm peform = (EditForm) form;\n            String parent = peform.getParent();\n            if (parent != null) {\n                doc.setParent(parent);\n            }\n            String creator = peform.getCreator();\n            if (creator != null) {\n                doc.setCreator(creator);\n            }\n            String defaultTemplate = peform.getDefaultTemplate();\n            if (defaultTemplate != null) {\n                doc.setDefaultTemplate(defaultTemplate);\n            }\n            String defaultLanguage = peform.getDefaultLanguage();\n            if ((defaultLanguage != null) && !defaultLanguage.equals(\"\")) {\n                doc.setDefaultLanguage(defaultLanguage);\n            }\n            if (doc.getDefaultLanguage().equals(\"\")) {\n                doc.setDefaultLanguage(context.getWiki().getLanguagePreference(context));\n            }\n\n            String language = context.getWiki().getLanguagePreference(context);\n            String languagefromrequest = context.getRequest().getParameter(\"language\");\n            String languagetoedit =\n                ((languagefromrequest == null) || (languagefromrequest.equals(\"\"))) ? language : languagefromrequest;\n\n            if ((languagetoedit == null) || (languagetoedit.equals(\"default\"))) {\n                languagetoedit = \"\";\n            }\n            if (doc.isNew() || (doc.getDefaultLanguage().equals(languagetoedit))) {\n                languagetoedit = \"\";\n            }\n\n            if (languagetoedit.equals(\"\")) {\n                // In this case the created document is going to be the default document\n                tdoc = doc;\n                context.put(\"tdoc\", doc);\n                vcontext.put(\"tdoc\", vcontext.get(\"doc\"));\n                if (doc.isNew()) {\n                    doc.setDefaultLanguage(language);\n                    doc.setLanguage(\"\");\n                }\n            } else {\n                // If the translated doc object is the same as the doc object\n                // this means the translated doc did not exists so we need to create it\n                if ((tdoc == doc)) {\n                    tdoc = new XWikiDocument(doc.getDocumentReference());\n                    tdoc.setLanguage(languagetoedit);\n                    tdoc.setContent(doc.getContent());\n                    tdoc.setSyntax(doc.getSyntax());\n                    tdoc.setAuthor(context.getUser());\n                    tdoc.setStore(doc.getStore());\n                    context.put(\"tdoc\", tdoc);\n                    vcontext.put(\"tdoc\", tdoc.newDocument(context));\n                }\n            }\n\n            XWikiDocument tdoc2 = tdoc.clone();\n            if (content != null && !content.equals(\"\")) {\n                tdoc2.setContent(content);\n            }\n            context.put(\"tdoc\", tdoc2);\n            vcontext.put(\"tdoc\", tdoc2.newDocument(context));\n            try {\n                tdoc2.readFromTemplate(peform, context);\n            } catch (XWikiException e) {\n                if (e.getCode() == XWikiException.ERROR_XWIKI_APP_DOCUMENT_NOT_EMPTY) {\n                    context.put(\"exception\", e);\n                    return \"docalreadyexists\";\n                }\n            }\n\n            /* Setup a lock */\n            try {\n                XWikiLock lock = tdoc.getLock(context);\n                if ((lock == null) || (lock.getUserName().equals(context.getUser())) || (peform.isLockForce())) {\n                    tdoc.setLock(context.getUser(), context);\n                }\n            } catch (Exception e) {\n                e.printStackTrace();\n                // Lock should never make XWiki fail\n                // But we should log any related information\n                LOG.error(\"Exception while setting up lock\", e);\n            }\n        }\n\n        return \"admin\";\n    }","commit_id":"51eaa28e1f9dc403beb2aec2d5cf4b75b5079ffa","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Override\n    public boolean action(XWikiContext context) throws XWikiException\n    {\n        XWikiRequest request = context.getRequest();\n        XWikiResponse response = context.getResponse();\n        XWikiDocument doc = context.getDoc();\n        XWikiAttachment attachment = null;\n        XWiki xwiki = context.getWiki();\n        String filename;\n\n        // Delete from the trash\n        if (request.getParameter(\"trashId\") != null) {\n            long trashId = NumberUtils.toLong(request.getParameter(\"trashId\"));\n            DeletedAttachment da = xwiki.getAttachmentRecycleBinStore().getDeletedAttachment(trashId, context, true);\n            // If the attachment hasn't been previously deleted (i.e. it's not in the deleted attachment store) then\n            // don't try to delete it and instead redirect to the attachment list.\n            if (da != null) {\n                com.xpn.xwiki.api.DeletedAttachment daapi = new com.xpn.xwiki.api.DeletedAttachment(da, context);\n                if (!daapi.canDelete()) {\n                    throw new XWikiException(XWikiException.MODULE_XWIKI_ACCESS,\n                        XWikiException.ERROR_XWIKI_ACCESS_DENIED,\n                        \"You are not allowed to delete an attachment from the trash \"\n                            + \"immediately after it has been deleted from the wiki\");\n                }\n                if (!da.getDocName().equals(doc.getFullName())) {\n                    throw new XWikiException(XWikiException.MODULE_XWIKI_APP,\n                        XWikiException.ERROR_XWIKI_APP_URL_EXCEPTION,\n                        \"The specified trash entry does not match the current document\");\n                }\n                // TODO: Add a confirmation check\n                xwiki.getAttachmentRecycleBinStore().deleteFromRecycleBin(trashId, context, true);\n            }\n            sendRedirect(response, Utils.getRedirect(\"attach\", context));\n            return false;\n        }\n\n        if (context.getMode() == XWikiContext.MODE_PORTLET) {\n            filename = request.getParameter(\"filename\");\n        } else {\n            // Note: We use getRequestURI() because the spec says the server doesn't decode it, as\n            // we want to use our own decoding.\n            String requestUri = request.getRequestURI();\n            filename = Util.decodeURI(requestUri.substring(requestUri.lastIndexOf(\"/\") + 1), context);\n        }\n\n        XWikiDocument newdoc = (XWikiDocument) doc.clone();\n\n        // An attachment can be indicated either using an id, or using the filename.\n        if (request.getParameter(\"id\") != null) {\n            int id = NumberUtils.toInt(request.getParameter(\"id\"));\n            attachment = newdoc.getAttachmentList().get(id);\n        } else {\n            attachment = newdoc.getAttachment(filename);\n        }\n\n        newdoc.setAuthor(context.getUser());\n\n        // Set \"deleted attachment\" as the version comment.\n        ArrayList<String> params = new ArrayList<String>();\n        params.add(filename);\n        if (attachment.isImage(context)) {\n            newdoc.setComment(context.getMessageTool().get(\"core.comment.deleteImageComment\", params));\n        } else {\n            newdoc.setComment(context.getMessageTool().get(\"core.comment.deleteAttachmentComment\", params));\n        }\n\n        newdoc.deleteAttachment(attachment, context);\n\n        // Also save the document and attachment metadata\n        context.getWiki().saveDocument(newdoc, context);\n\n        // forward to attach page\n        String redirect = Utils.getRedirect(\"attach\", context);\n        sendRedirect(response, redirect);\n\n        return false;\n    }","id":61586,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see com.xpn.xwiki.web.XWikiAction#action(com.xpn.xwiki.XWikiContext)\n     */\n    @Override\n    public boolean action(XWikiContext context) throws XWikiException\n    {\n        XWikiRequest request = context.getRequest();\n        XWikiResponse response = context.getResponse();\n        XWikiDocument doc = context.getDoc();\n        XWikiAttachment attachment = null;\n        XWiki xwiki = context.getWiki();\n        String filename;\n\n        // Delete from the trash\n        if (request.getParameter(\"trashId\") != null) {\n            long trashId = NumberUtils.toLong(request.getParameter(\"trashId\"));\n            DeletedAttachment da = xwiki.getAttachmentRecycleBinStore().getDeletedAttachment(trashId, context, true);\n            // If the attachment hasn't been previously deleted (i.e. it's not in the deleted attachment store) then\n            // don't try to delete it and instead redirect to the attachment list.\n            if (da != null) {\n                com.xpn.xwiki.api.DeletedAttachment daapi = new com.xpn.xwiki.api.DeletedAttachment(da, context);\n                if (!daapi.canDelete()) {\n                    throw new XWikiException(XWikiException.MODULE_XWIKI_ACCESS,\n                        XWikiException.ERROR_XWIKI_ACCESS_DENIED,\n                        \"You are not allowed to delete an attachment from the trash \"\n                            + \"immediately after it has been deleted from the wiki\");\n                }\n                if (!da.getDocName().equals(doc.getFullName())) {\n                    throw new XWikiException(XWikiException.MODULE_XWIKI_APP,\n                        XWikiException.ERROR_XWIKI_APP_URL_EXCEPTION,\n                        \"The specified trash entry does not match the current document\");\n                }\n                // TODO: Add a confirmation check\n                xwiki.getAttachmentRecycleBinStore().deleteFromRecycleBin(trashId, context, true);\n            }\n            sendRedirect(response, Utils.getRedirect(\"attach\", context));\n            return false;\n        }\n\n        if (context.getMode() == XWikiContext.MODE_PORTLET) {\n            filename = request.getParameter(\"filename\");\n        } else {\n            // Note: We use getRequestURI() because the spec says the server doesn't decode it, as\n            // we want to use our own decoding.\n            String requestUri = request.getRequestURI();\n            filename = Util.decodeURI(requestUri.substring(requestUri.lastIndexOf(\"/\") + 1), context);\n        }\n\n        XWikiDocument newdoc = doc.clone();\n\n        // An attachment can be indicated either using an id, or using the filename.\n        if (request.getParameter(\"id\") != null) {\n            int id = NumberUtils.toInt(request.getParameter(\"id\"));\n            attachment = newdoc.getAttachmentList().get(id);\n        } else {\n            attachment = newdoc.getAttachment(filename);\n        }\n\n        newdoc.setAuthor(context.getUser());\n\n        // Set \"deleted attachment\" as the version comment.\n        ArrayList<String> params = new ArrayList<String>();\n        params.add(filename);\n        if (attachment.isImage(context)) {\n            newdoc.setComment(context.getMessageTool().get(\"core.comment.deleteImageComment\", params));\n        } else {\n            newdoc.setComment(context.getMessageTool().get(\"core.comment.deleteAttachmentComment\", params));\n        }\n\n        newdoc.deleteAttachment(attachment, context);\n\n        // Also save the document and attachment metadata\n        context.getWiki().saveDocument(newdoc, context);\n\n        // forward to attach page\n        String redirect = Utils.getRedirect(\"attach\", context);\n        sendRedirect(response, redirect);\n\n        return false;\n    }","commit_id":"51eaa28e1f9dc403beb2aec2d5cf4b75b5079ffa","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public boolean action(XWikiContext context) throws XWikiException {\n        XWiki xwiki = context.getWiki();\n        XWikiRequest request = context.getRequest();\n        XWikiResponse response = context.getResponse();\n        XWikiDocument doc = context.getDoc();\n\n        String register = request.getParameter(\"register\");\n        if ((register!=null)&&(register.equals(\"1\"))) {\n            int useemail = xwiki.getXWikiPreferenceAsInt(\"use_email_verification\", 0, context);\n            int result;\n            if (useemail==1)\n             result = xwiki.createUser(true, \"edit\", context);\n            else\n             result = xwiki.createUser(context);\n            VelocityContext vcontext = (VelocityContext) context.get(\"vcontext\");\n            vcontext.put(\"reg\", new Integer(result));\n        }\n\n        String redirect = Utils.getRedirect(request, null);\n        if (redirect==null)\n            return true;\n        else {\n            sendRedirect(response, redirect);\n            return false;\n        }\n\t}","id":61587,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see com.xpn.xwiki.web.XWikiAction#action(com.xpn.xwiki.XWikiContext)\n     */\n    @Override\n    public boolean action(XWikiContext context) throws XWikiException\n    {\n        XWiki xwiki = context.getWiki();\n        XWikiRequest request = context.getRequest();\n        XWikiResponse response = context.getResponse();\n\n        String register = request.getParameter(REGISTER);\n        if (register != null && register.equals(\"1\")) {\n            int useemail = xwiki.getXWikiPreferenceAsInt(\"use_email_verification\", 0, context);\n            int result;\n            if (useemail == 1) {\n                result = xwiki.createUser(true, \"edit\", context);\n            } else {\n                result = xwiki.createUser(context);\n            }\n            VelocityContext vcontext = (VelocityContext) context.get(\"vcontext\");\n            vcontext.put(\"reg\", new Integer(result));\n        }\n\n        String redirect = Utils.getRedirect(request, null);\n        if (redirect == null) {\n            return true;\n        } else {\n            sendRedirect(response, redirect);\n            return false;\n        }\n    }","commit_id":"51eaa28e1f9dc403beb2aec2d5cf4b75b5079ffa","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public String render(XWikiContext context) throws XWikiException {\n        return \"register\";\n\t}","id":61588,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see com.xpn.xwiki.web.XWikiAction#render(com.xpn.xwiki.XWikiContext)\n     */\n    @Override\n    public String render(XWikiContext context) throws XWikiException\n    {\n        return REGISTER;\n    }","commit_id":"51eaa28e1f9dc403beb2aec2d5cf4b75b5079ffa","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Saves the current document, updated according to the parameters sent in the request.\n     * \n     * @param context The current request {@link XWikiContext context}.\n     * @return <code>true<\/code> if there was an error and the response needs to render an error page,\n     *         <code>false<\/code> if the document was correctly saved.\n     * @throws XWikiException If an error occured: cannot communicate with the storage module, or cannot update the\n     *             document because the request contains invalid parameters.\n     */\n    public boolean save(XWikiContext context) throws XWikiException\n    {\n        XWiki xwiki = context.getWiki();\n        XWikiRequest request = context.getRequest();\n        XWikiDocument doc = context.getDoc();\n        XWikiForm form = context.getForm();\n\n        // This is pretty useless, since contexts aren't shared between threads.\n        // It just slows down execution.\n        String title = doc.getTitle();\n        // Check save session\n        int sectionNumber = 0;\n        if (request.getParameter(\"section\") != null && xwiki.hasSectionEdit(context)) {\n            sectionNumber = Integer.parseInt(request.getParameter(\"section\"));\n        }\n\n        // We need to clone this document first, since a cached storage would return the same object for the\n        // following requests, so concurrent request might get a partially modified object, or worse, if an error\n        // occurs during the save, the cached object will not reflect the actual document at all.\n        doc = (XWikiDocument) doc.clone();\n\n        String language = ((EditForm) form).getLanguage();\n        // FIXME Which one should be used: doc.getDefaultLanguage or\n        // form.getDefaultLanguage()?\n        // String defaultLanguage = ((EditForm) form).getDefaultLanguage();\n        XWikiDocument tdoc;\n\n        if (doc.isNew() || (language == null) || (language.equals(\"\")) || (language.equals(\"default\"))\n            || (language.equals(doc.getDefaultLanguage())))\n        {\n            // Need to save parent and defaultLanguage if they have changed\n            tdoc = doc;\n        } else {\n            tdoc = doc.getTranslatedDocument(language, context);\n            if ((tdoc == doc) && xwiki.isMultiLingual(context)) {\n                tdoc = new XWikiDocument(doc.getSpace(), doc.getName());\n                tdoc.setLanguage(language);\n                tdoc.setStore(doc.getStore());\n            } else if (tdoc != doc) {\n                // Same as above, clone the object retrieved from the store cache.\n                tdoc = (XWikiDocument) tdoc.clone();\n            }\n            tdoc.setTranslation(1);\n        }\n\n        if (doc.isNew()) {\n            doc.setLanguage(\"\");\n            if ((doc.getDefaultLanguage() == null) || (doc.getDefaultLanguage().equals(\"\"))) {\n                doc.setDefaultLanguage(context.getWiki().getLanguagePreference(context));\n            }\n        }\n\n        try {\n            tdoc.readFromTemplate(((EditForm) form).getTemplate(), context);\n        } catch (XWikiException e) {\n            if (e.getCode() == XWikiException.ERROR_XWIKI_APP_DOCUMENT_NOT_EMPTY) {\n                context.put(\"exception\", e);\n                return true;\n            }\n        }\n\n        if (sectionNumber != 0) {\n            XWikiDocument sectionDoc = (XWikiDocument) tdoc.clone();\n            sectionDoc.readFromForm((EditForm) form, context);\n            String sectionContent = sectionDoc.getContent() + \"\\n\";\n            String content = doc.updateDocumentSection(sectionNumber, sectionContent);\n            tdoc.setContent(content);\n            tdoc.setTitle(title);\n            tdoc.setComment(sectionDoc.getComment());\n            tdoc.setMinorEdit(sectionDoc.isMinorEdit());\n        } else {\n            tdoc.readFromForm((EditForm) form, context);\n        }\n\n        // TODO: handle Author\n        String username = context.getUser();\n        tdoc.setAuthor(username);\n        if (tdoc.isNew()) {\n            tdoc.setCreator(username);\n        }\n\n        // Make sure we have at least the meta data dirty status\n        tdoc.setMetaDataDirty(true);\n\n        // Validate the document if we have xvalidate=1 in the request\n        if (\"1\".equals(request.getParameter(\"xvalidate\"))) {\n            boolean validationResult = tdoc.validate(context);\n            // if the validation fails we should show the inline action\n            if (validationResult == false) {\n                // Set display context to 'edit'\n                context.put(\"display\", \"edit\");\n                // Set the action to inline\n                context.setAction(\"inline\");\n                // Set the document in the context\n                VelocityContext vcontext = (VelocityContext) context.get(\"vcontext\");\n                context.put(\"doc\", doc);\n                context.put(\"cdoc\", tdoc);\n                context.put(\"tdoc\", tdoc);\n                Document vdoc = tdoc.newDocument(context);\n                vcontext.put(\"doc\", doc.newDocument(context));\n                vcontext.put(\"cdoc\", vdoc);\n                vcontext.put(\"tdoc\", vdoc);\n                return true;\n            }\n        }\n\n        // We get the comment to be used from the document\n        // It was read using readFromForm\n        xwiki.saveDocument(tdoc, tdoc.getComment(), tdoc.isMinorEdit(), context);\n        XWikiLock lock = tdoc.getLock(context);\n        if (lock != null) {\n            tdoc.removeLock(context);\n        }\n\n        return false;\n    }","id":61589,"modified_method":"/**\n     * Saves the current document, updated according to the parameters sent in the request.\n     * \n     * @param context The current request {@link XWikiContext context}.\n     * @return <code>true<\/code> if there was an error and the response needs to render an error page,\n     *         <code>false<\/code> if the document was correctly saved.\n     * @throws XWikiException If an error occured: cannot communicate with the storage module, or cannot update the\n     *             document because the request contains invalid parameters.\n     */\n    public boolean save(XWikiContext context) throws XWikiException\n    {\n        XWiki xwiki = context.getWiki();\n        XWikiRequest request = context.getRequest();\n        XWikiDocument doc = context.getDoc();\n        XWikiForm form = context.getForm();\n\n        // This is pretty useless, since contexts aren't shared between threads.\n        // It just slows down execution.\n        String title = doc.getTitle();\n        // Check save session\n        int sectionNumber = 0;\n        if (request.getParameter(\"section\") != null && xwiki.hasSectionEdit(context)) {\n            sectionNumber = Integer.parseInt(request.getParameter(\"section\"));\n        }\n\n        // We need to clone this document first, since a cached storage would return the same object for the\n        // following requests, so concurrent request might get a partially modified object, or worse, if an error\n        // occurs during the save, the cached object will not reflect the actual document at all.\n        doc = (XWikiDocument) doc.clone();\n\n        String language = ((EditForm) form).getLanguage();\n        // FIXME Which one should be used: doc.getDefaultLanguage or\n        // form.getDefaultLanguage()?\n        // String defaultLanguage = ((EditForm) form).getDefaultLanguage();\n        XWikiDocument tdoc;\n\n        if (doc.isNew() || (language == null) || (language.equals(\"\")) || (language.equals(\"default\"))\n            || (language.equals(doc.getDefaultLanguage())))\n        {\n            // Need to save parent and defaultLanguage if they have changed\n            tdoc = doc;\n        } else {\n            tdoc = doc.getTranslatedDocument(language, context);\n            if ((tdoc == doc) && xwiki.isMultiLingual(context)) {\n                tdoc = new XWikiDocument(doc.getDocumentReference());\n                tdoc.setLanguage(language);\n                tdoc.setStore(doc.getStore());\n            } else if (tdoc != doc) {\n                // Same as above, clone the object retrieved from the store cache.\n                tdoc = (XWikiDocument) tdoc.clone();\n            }\n            tdoc.setTranslation(1);\n        }\n\n        if (doc.isNew()) {\n            doc.setLanguage(\"\");\n            if ((doc.getDefaultLanguage() == null) || (doc.getDefaultLanguage().equals(\"\"))) {\n                doc.setDefaultLanguage(context.getWiki().getLanguagePreference(context));\n            }\n        }\n\n        try {\n            tdoc.readFromTemplate(((EditForm) form).getTemplate(), context);\n        } catch (XWikiException e) {\n            if (e.getCode() == XWikiException.ERROR_XWIKI_APP_DOCUMENT_NOT_EMPTY) {\n                context.put(\"exception\", e);\n                return true;\n            }\n        }\n\n        if (sectionNumber != 0) {\n            XWikiDocument sectionDoc = tdoc.clone();\n            sectionDoc.readFromForm((EditForm) form, context);\n            String sectionContent = sectionDoc.getContent() + \"\\n\";\n            String content = doc.updateDocumentSection(sectionNumber, sectionContent);\n            tdoc.setContent(content);\n            tdoc.setTitle(title);\n            tdoc.setComment(sectionDoc.getComment());\n            tdoc.setMinorEdit(sectionDoc.isMinorEdit());\n        } else {\n            tdoc.readFromForm((EditForm) form, context);\n        }\n\n        // TODO: handle Author\n        String username = context.getUser();\n        tdoc.setAuthor(username);\n        if (tdoc.isNew()) {\n            tdoc.setCreator(username);\n        }\n\n        // Make sure we have at least the meta data dirty status\n        tdoc.setMetaDataDirty(true);\n\n        // Validate the document if we have xvalidate=1 in the request\n        if (\"1\".equals(request.getParameter(\"xvalidate\"))) {\n            boolean validationResult = tdoc.validate(context);\n            // if the validation fails we should show the inline action\n            if (validationResult == false) {\n                // Set display context to 'edit'\n                context.put(\"display\", \"edit\");\n                // Set the action to inline\n                context.setAction(\"inline\");\n                // Set the document in the context\n                VelocityContext vcontext = (VelocityContext) context.get(\"vcontext\");\n                context.put(\"doc\", doc);\n                context.put(\"cdoc\", tdoc);\n                context.put(\"tdoc\", tdoc);\n                Document vdoc = tdoc.newDocument(context);\n                vcontext.put(\"doc\", doc.newDocument(context));\n                vcontext.put(\"cdoc\", vdoc);\n                vcontext.put(\"tdoc\", vdoc);\n                return true;\n            }\n        }\n\n        // We get the comment to be used from the document\n        // It was read using readFromForm\n        xwiki.saveDocument(tdoc, tdoc.getComment(), tdoc.isMinorEdit(), context);\n        XWikiLock lock = tdoc.getLock(context);\n        if (lock != null) {\n            tdoc.removeLock(context);\n        }\n\n        return false;\n    }","commit_id":"769914c1642e2b540fe515059ee4e4f11b398b3d","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public void readExternal(Element parentNode) throws InvalidDataException {\n    int savedVersion = getVersion(parentNode);\n    for (Iterator iterator = parentNode.getChildren().iterator(); iterator.hasNext();) {\n      final Element e = (Element)iterator.next();\n      if (\"filetypes\".equals(e.getName())) {\n        List children = e.getChildren(\"filetype\");\n        for (Iterator i = children.iterator(); i.hasNext();) {\n          Element element = (Element)i.next();\n          loadFileType(element, true);\n        }\n      }\n      else if (\"ignoreFiles\".equals(e.getName())) {\n        setIgnoredFilesListWithoutNotification(e.getAttributeValue(\"list\"));\n      }\n      else if (\"extensionMap\".equals(e.getName())) {\n        List mappings = e.getChildren(\"mapping\");\n        for (int i = 0; i < mappings.size(); i++) {\n          Element mapping = (Element)mappings.get(i);\n          String ext = mapping.getAttributeValue(\"ext\");\n          String name = mapping.getAttributeValue(\"type\");\n          FileType type = getFileTypeByName(name);\n          if (type != null) {\n            associateExtension(type, ext, false);\n          }\n        }\n        List removedMappings = e.getChildren(\"removed_mapping\");\n        for (int i = 0; i < removedMappings.size(); i++) {\n          Element mapping = (Element)removedMappings.get(i);\n          String ext = mapping.getAttributeValue(\"ext\");\n          String name = mapping.getAttributeValue(\"type\");\n          FileType type = getFileTypeByName(name);\n          if (type != null) {\n            removeAssociation(type, ext, false);\n          }\n        }\n      }\n    }\n\n    if (savedVersion == 0) {\n      if (!myIgnoredFileMasksSet.contains(\".svn\")) {\n        myIgnorePatterns.add(PatternUtil.fromMask(\".svn\"));\n        myIgnoredFileMasksSet.add(\".svn\");\n      }\n    }\n  }","id":61590,"modified_method":"public void readExternal(Element parentNode) throws InvalidDataException {\n    int savedVersion = getVersion(parentNode);\n    for (Iterator iterator = parentNode.getChildren().iterator(); iterator.hasNext();) {\n      final Element e = (Element)iterator.next();\n      if (\"filetypes\".equals(e.getName())) {\n        List children = e.getChildren(\"filetype\");\n        for (Iterator i = children.iterator(); i.hasNext();) {\n          Element element = (Element)i.next();\n          loadFileType(element, true);\n        }\n      }\n      else if (\"ignoreFiles\".equals(e.getName())) {\n        setIgnoredFilesListWithoutNotification(e.getAttributeValue(\"list\"));\n      }\n      else if (\"extensionMap\".equals(e.getName())) {\n        List mappings = e.getChildren(\"mapping\");\n        \n        for (int i = 0; i < mappings.size(); i++) {\n          Element mapping = (Element)mappings.get(i);\n          String ext = mapping.getAttributeValue(\"ext\");\n          String name = mapping.getAttributeValue(\"type\");\n          FileType type = getFileTypeByName(name);\n          \n          if (type != null) {\n            if (savedVersion < VERSION && \n                type == StdFileTypes.XML && \n                ( ext.equals(\"dtd\") || ext.equals(\"xhtml\"))) {\n              continue;\n            }\n            associateExtension(type, ext, false);\n          }\n        }\n        \n        List removedMappings = e.getChildren(\"removed_mapping\");\n        for (int i = 0; i < removedMappings.size(); i++) {\n          Element mapping = (Element)removedMappings.get(i);\n          String ext = mapping.getAttributeValue(\"ext\");\n          String name = mapping.getAttributeValue(\"type\");\n          FileType type = getFileTypeByName(name);\n          \n          if (type != null) {\n            if (savedVersion < VERSION) {\n              if((type == StdFileTypes.DTD && ext.equals(\"dtd\")) ||\n                (type == StdFileTypes.XHTML && ext.equals(\"xhtml\"))\n              ) {\n                continue;\n              }\n            }\n            removeAssociation(type, ext, false);\n          }\n        }\n      }\n    }\n\n    if (savedVersion == 0) {\n      if (!myIgnoredFileMasksSet.contains(\".svn\")) {\n        myIgnorePatterns.add(PatternUtil.fromMask(\".svn\"));\n        myIgnoredFileMasksSet.add(\".svn\");\n      }\n    }\n  }","commit_id":"375f75a6f9689e22341d16ee9a8f568d99a4de8f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private FileType loadFileType(Element typeElement, boolean isDefaults) {\n    String fileTypeName = typeElement.getAttributeValue(\"name\");\n    String fileTypeDescr = typeElement.getAttributeValue(\"description\");\n    String defaultExtension = typeElement.getAttributeValue(\"default_extension\");\n    String iconPath = typeElement.getAttributeValue(\"icon\");\n    boolean isBinary = Boolean.valueOf(typeElement.getAttributeValue(\"binary\")).booleanValue();\n    String extensionsStr = typeElement.getAttributeValue(\"extensions\");\n\n    SyntaxTable table = null;\n    Element element = typeElement.getChild(\"highlighting\");\n    if (element != null) {\n      table = readSyntaxTable(element);\n    }\n\n    FileType type = getFileTypeByName(fileTypeName);\n    String[] exts = parse(extensionsStr);\n    if (type != null) {\n      if (extensionsStr != null) {\n        removeAllAssociations(type);\n        for (int i = 0; i < exts.length; i++) {\n          associateExtension(type, exts[i], false);\n        }\n      }\n\n      if (table != null) {\n        ((CustomFileType)type).setSyntaxTable(table);\n      }\n    }\n    else {\n      if (table != null) {\n        type = new CustomFileType(table);\n        ((CustomFileType)type).initSupport();\n      }\n      else {\n        type = new UserBinaryFileType();\n      }\n      registerFileTypeWithoutNotification(type, exts);\n    }\n\n    if (type instanceof UserFileType) {\n      UserFileType ft = (UserFileType)type;\n      if (iconPath != null && !\"\".equals(iconPath.trim())) {\n        Icon icon = IconLoader.getIcon(iconPath);\n        if (icon != null) ft.setIcon(icon);\n      }\n\n      if (fileTypeDescr != null) ft.setDescription(fileTypeDescr);\n      if (fileTypeName != null) ft.setName(fileTypeName);\n    }\n\n    if (isDefaults) {                                                                     \n      myDefaultTypes.add(type);\n      if (table != null) {\n        myDefaultTables.put(type, table);\n      }\n    }\n\n    return type;\n  }","id":61591,"modified_method":"private FileType loadFileType(Element typeElement, boolean isDefaults) {\n    String fileTypeName = typeElement.getAttributeValue(\"name\");\n    String fileTypeDescr = typeElement.getAttributeValue(\"description\");\n    String iconPath = typeElement.getAttributeValue(\"icon\");\n    String extensionsStr = typeElement.getAttributeValue(\"extensions\");\n\n    SyntaxTable table = null;\n    Element element = typeElement.getChild(\"highlighting\");\n    if (element != null) {\n      table = readSyntaxTable(element);\n    }\n\n    FileType type = getFileTypeByName(fileTypeName);\n    \n    if (!isDefaults && type == StdFileTypes.XML) {\n      extensionsStr = removeExtension(extensionsStr,\"dtd\");\n      extensionsStr = removeExtension(extensionsStr,\"xhtml\");\n    }\n    \n    String[] exts = parse(extensionsStr);\n    if (type != null) {\n      if (extensionsStr != null) {\n        removeAllAssociations(type);\n        for (int i = 0; i < exts.length; i++) {\n          associateExtension(type, exts[i], false);\n        }\n      }\n\n      if (table != null) {\n        ((CustomFileType)type).setSyntaxTable(table);\n      }\n    }\n    else {\n      if (table != null) {\n        type = new CustomFileType(table);\n        ((CustomFileType)type).initSupport();\n      }\n      else {\n        type = new UserBinaryFileType();\n      }\n      registerFileTypeWithoutNotification(type, exts);\n    }\n\n    if (type instanceof UserFileType) {\n      UserFileType ft = (UserFileType)type;\n      if (iconPath != null && !\"\".equals(iconPath.trim())) {\n        Icon icon = IconLoader.getIcon(iconPath);\n        if (icon != null) ft.setIcon(icon);\n      }\n\n      if (fileTypeDescr != null) ft.setDescription(fileTypeDescr);\n      if (fileTypeName != null) ft.setName(fileTypeName);\n    }\n\n    if (isDefaults) {                                                                     \n      myDefaultTypes.add(type);\n      if (table != null) {\n        myDefaultTables.put(type, table);\n      }\n    }\n\n    return type;\n  }","commit_id":"375f75a6f9689e22341d16ee9a8f568d99a4de8f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void editPattern(@Nullable final String item) {\n    final FileType type = myRecognizedFileType.getSelectedFileType();\n    if (type == null) return;\n\n    final String title =\n      item == null\n      ? FileTypesBundle.message(\"filetype.edit.add.pattern.title\")\n      : FileTypesBundle.message(\"filetype.edit.edit.pattern.title\");\n\n    final Language oldLanguage = item == null ? null : myTempTemplateDataLanguages.findAssociatedFileType(item);\n    final FileTypePatternDialog dialog = new FileTypePatternDialog(item, type, oldLanguage);\n    final DialogBuilder builder = new DialogBuilder(myPatterns);\n    builder.setPreferredFocusComponent(dialog.getPatternField());\n    builder.setCenterPanel(dialog.getMainPanel());\n    builder.setTitle(title);\n    builder.showModal(true);\n    if (builder.getDialogWrapper().isOK()) {\n      final String pattern = dialog.getPatternField().getText();\n      if (StringUtil.isEmpty(pattern)) return;\n\n      final FileNameMatcher matcher = FileTypeManager.parseFromString(pattern);\n      FileType registeredFileType = findExistingFileType(matcher);\n      if (registeredFileType != null && registeredFileType != type) {\n        if (registeredFileType.isReadOnly()) {\n          Messages.showMessageDialog(myPatterns.myPatternsList,\n                                     FileTypesBundle.message(\"filetype.edit.add.pattern.exists.error\", registeredFileType.getDescription()),\n                                     title, Messages.getErrorIcon());\n          return;\n        }\n        else {\n          if (Messages.OK == Messages.showOkCancelDialog(myPatterns.myPatternsList, FileTypesBundle.message(\"filetype.edit.add.pattern.exists.message\",\n                                                                                               registeredFileType.getDescription()),\n                                               FileTypesBundle.message(\"filetype.edit.add.pattern.exists.title\"),\n                                               FileTypesBundle.message(\"filetype.edit.add.pattern.reassign.button\"),\n                                               CommonBundle.getCancelButtonText(), Messages.getQuestionIcon())) {\n            myTempPatternsTable.removeAssociation(matcher, registeredFileType);\n            myTempTemplateDataLanguages.removeAssociation(matcher, oldLanguage);\n            myReassigned.put(matcher, registeredFileType);\n          }\n          else {\n            return;\n          }\n        }\n      }\n\n      if (item != null) {\n        final FileNameMatcher oldMatcher = FileTypeManager.parseFromString(item);\n        myTempPatternsTable.removeAssociation(oldMatcher, type);\n        myTempTemplateDataLanguages.removeAssociation(oldMatcher, oldLanguage);\n      }\n      myTempPatternsTable.addAssociation(matcher, type);\n      myTempTemplateDataLanguages.addAssociation(matcher, dialog.getTemplateDataLanguage());\n\n      updateExtensionList();\n      final int index = myPatterns.getListModel().indexOf(matcher.getPresentableString());\n      if (index >= 0) {\n        ListScrollingUtil.selectItem(myPatterns.myPatternsList, index);\n      }\n      myPatterns.myPatternsList.requestFocus();\n    }\n  }","id":61592,"modified_method":"private void editPattern(@Nullable final String item) {\n    final FileType type = myRecognizedFileType.getSelectedFileType();\n    if (type == null) return;\n\n    final String title =\n      item == null\n      ? FileTypesBundle.message(\"filetype.edit.add.pattern.title\")\n      : FileTypesBundle.message(\"filetype.edit.edit.pattern.title\");\n\n    final Language oldLanguage = item == null ? null : myTempTemplateDataLanguages.findAssociatedFileType(item);\n    final FileTypePatternDialog dialog = new FileTypePatternDialog(item, type, oldLanguage);\n    final DialogBuilder builder = new DialogBuilder(myPatterns);\n    builder.setPreferredFocusComponent(dialog.getPatternField());\n    builder.setCenterPanel(dialog.getMainPanel());\n    builder.setTitle(title);\n    builder.showModal(true);\n    if (builder.getDialogWrapper().isOK()) {\n      final String pattern = dialog.getPatternField().getText();\n      if (StringUtil.isEmpty(pattern)) return;\n\n      final FileNameMatcher matcher = FileTypeManager.parseFromString(pattern);\n      FileType registeredFileType = findExistingFileType(matcher);\n      if (registeredFileType != null && registeredFileType != type) {\n        if (registeredFileType.isReadOnly()) {\n          Messages.showMessageDialog(myPatterns.myPatternsList,\n                                     FileTypesBundle.message(\"filetype.edit.add.pattern.exists.error\", registeredFileType.getDescription()),\n                                     title, Messages.getErrorIcon());\n          return;\n        }\n        else {\n          if (Messages.OK == Messages.showOkCancelDialog(myPatterns.myPatternsList, FileTypesBundle.message(\"filetype.edit.add.pattern.exists.message\",\n                                                                                               registeredFileType.getDescription()),\n                                               FileTypesBundle.message(\"filetype.edit.add.pattern.exists.title\"),\n                                               FileTypesBundle.message(\"filetype.edit.add.pattern.reassign.button\"),\n                                               CommonBundle.getCancelButtonText(), Messages.getQuestionIcon())) {\n            myTempPatternsTable.removeAssociation(matcher, registeredFileType);\n            if (oldLanguage != null) {\n              myTempTemplateDataLanguages.removeAssociation(matcher, oldLanguage);\n            }\n            myReassigned.put(matcher, registeredFileType);\n          }\n          else {\n            return;\n          }\n        }\n      }\n\n      if (item != null) {\n        final FileNameMatcher oldMatcher = FileTypeManager.parseFromString(item);\n        myTempPatternsTable.removeAssociation(oldMatcher, type);\n        if (oldLanguage != null) {\n          myTempTemplateDataLanguages.removeAssociation(oldMatcher, oldLanguage);\n        }\n      }\n      myTempPatternsTable.addAssociation(matcher, type);\n      myTempTemplateDataLanguages.addAssociation(matcher, dialog.getTemplateDataLanguage());\n\n      updateExtensionList();\n      final int index = myPatterns.getListModel().indexOf(matcher.getPresentableString());\n      if (index >= 0) {\n        ListScrollingUtil.selectItem(myPatterns.myPatternsList, index);\n      }\n      myPatterns.myPatternsList.requestFocus();\n    }\n  }","commit_id":"0b2c3013b7571d86bd2a0a68c5b93700cc5f8f4d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private String getMetadataKey(String type, byte[] rowKey) {\n    MDSKey.Splitter keySplitter = new MDSKey(rowKey).split();\n    // The rowkey is [targetType][targetId][metadata-type][key], so skip the first few strings.\n    keySplitter.skipString();\n    if (type.equals(Id.Program.class.getSimpleName())) {\n      keySplitter.skipString();\n      keySplitter.skipString();\n      keySplitter.skipString();\n      keySplitter.skipString();\n      keySplitter.skipString();\n    } else if (type.equals(Id.Application.class.getSimpleName())) {\n      keySplitter.skipString();\n      keySplitter.skipString();\n      keySplitter.skipString();\n    } else if (type.equals(Id.DatasetInstance.class.getSimpleName())) {\n      keySplitter.skipString();\n      keySplitter.skipString();\n      keySplitter.skipString();\n    } else if (type.equals(Id.Stream.class.getSimpleName())) {\n      keySplitter.skipString();\n      keySplitter.skipString();\n      keySplitter.skipString();\n    } else {\n      throw new IllegalArgumentException(\"Illegal Type \" + type + \" of metadata source.\");\n    }\n    return keySplitter.getString();\n  }","id":61593,"modified_method":"private String getMetadataKey(String type, byte[] rowKey) {\n    MDSKey.Splitter keySplitter = new MDSKey(rowKey).split();\n    // The rowkey is [targetType][targetId][metadata-type][key], so skip the first few strings.\n\n    // Skip targetType\n    keySplitter.skipString();\n\n    // Skip targetId\n    if (type.equals(Id.Program.class.getSimpleName())) {\n      keySplitter.skipString();\n      keySplitter.skipString();\n      keySplitter.skipString();\n      keySplitter.skipString();\n    } else if (type.equals(Id.Application.class.getSimpleName())) {\n      keySplitter.skipString();\n      keySplitter.skipString();\n    } else if (type.equals(Id.DatasetInstance.class.getSimpleName())) {\n      keySplitter.skipString();\n      keySplitter.skipString();\n    } else if (type.equals(Id.Stream.class.getSimpleName())) {\n      keySplitter.skipString();\n      keySplitter.skipString();\n    } else {\n      throw new IllegalArgumentException(\"Illegal Type \" + type + \" of metadata source.\");\n    }\n\n    // Skip metadata-type\n    keySplitter.skipString();\n\n    return keySplitter.getString();\n  }","commit_id":"0d08d77a0dfd9b411247896b34b9af4bb04bc7d2","url":"https://github.com/caskdata/cdap"},{"original_method":"private Id.NamespacedId getNamespaceIdFromKey(String type, MDSKey key) {\n    MDSKey.Splitter keySplitter = key.split();\n\n    // The rowkey is [targetType][targetId][metadata-type][key], so skip the first string.\n    keySplitter.skipString();\n    if (type.equals(Id.Program.class.getSimpleName())) {\n      String namespaceId = keySplitter.getString();\n      String appId = keySplitter.getString();\n      String programType = keySplitter.getString();\n      String programId = keySplitter.getString();\n      return Id.Program.from(namespaceId, appId, ProgramType.valueOf(programType), programId);\n    } else if (type.equals(Id.Application.class.getSimpleName())) {\n      String namespaceId = keySplitter.getString();\n      String appId = keySplitter.getString();\n      return Id.Application.from(namespaceId, appId);\n    } else if (type.equals(Id.DatasetInstance.class.getSimpleName())) {\n      String namespaceId = keySplitter.getString();\n      String instanceId  = keySplitter.getString();\n      return Id.DatasetInstance.from(namespaceId, instanceId);\n    } else if (type.equals(Id.Stream.class.getSimpleName())) {\n      String namespaceId = keySplitter.getString();\n      String instanceId  = keySplitter.getString();\n      return Id.DatasetInstance.from(namespaceId, instanceId);\n    }\n    throw new IllegalArgumentException(\"Illegal Type \" + type + \" of metadata source.\");\n  }","id":61594,"modified_method":"private Id.NamespacedId getNamespaceIdFromKey(String type, MDSKey key) {\n    MDSKey.Splitter keySplitter = key.split();\n\n    // The rowkey is [targetType][targetId][metadata-type][key], so skip the first string.\n    keySplitter.skipString();\n    if (type.equals(Id.Program.class.getSimpleName())) {\n      String namespaceId = keySplitter.getString();\n      String appId = keySplitter.getString();\n      String programType = keySplitter.getString();\n      String programId = keySplitter.getString();\n      return Id.Program.from(namespaceId, appId, ProgramType.valueOf(programType), programId);\n    } else if (type.equals(Id.Application.class.getSimpleName())) {\n      String namespaceId = keySplitter.getString();\n      String appId = keySplitter.getString();\n      return Id.Application.from(namespaceId, appId);\n    } else if (type.equals(Id.DatasetInstance.class.getSimpleName())) {\n      String namespaceId = keySplitter.getString();\n      String instanceId  = keySplitter.getString();\n      return Id.DatasetInstance.from(namespaceId, instanceId);\n    } else if (type.equals(Id.Stream.class.getSimpleName())) {\n      String namespaceId = keySplitter.getString();\n      String instanceId  = keySplitter.getString();\n      return Id.Stream.from(namespaceId, instanceId);\n    }\n    throw new IllegalArgumentException(\"Illegal Type \" + type + \" of metadata source.\");\n  }","commit_id":"0d08d77a0dfd9b411247896b34b9af4bb04bc7d2","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n    public Explanation explainScore(int docId, Explanation subQueryExpl) {\n        Explanation exp = new Explanation(boost * subQueryExpl.getValue(), \"static boost function: product of:\");\n        exp.addDetail(subQueryExpl);\n        exp.addDetail(new Explanation(boost, \"boostFactor\"));\n        return exp;\n    }","id":61595,"modified_method":"@Override\n    public Explanation explainScore(int docId, Explanation subQueryExpl) {\n        Explanation exp = new Explanation(boost, \"static boost factor\");\n        exp.addDetail(new Explanation(boost, \"boostFactor\"));\n        return exp;\n    }","commit_id":"b007af1f464f49849705356a2eea212ed68643ac","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public BoostScoreFunction(float boost) {\n        this.boost = boost;\n    }","id":61596,"modified_method":"public BoostScoreFunction(float boost) {\n        super(CombineFunction.MULT);\n        this.boost = boost;\n    }","commit_id":"b007af1f464f49849705356a2eea212ed68643ac","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n    public double score(int docId, float subQueryScore) {\n        return subQueryScore * boost;\n    }","id":61597,"modified_method":"@Override\n    public double score(int docId, float subQueryScore) {\n        return boost;\n    }","commit_id":"b007af1f464f49849705356a2eea212ed68643ac","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    public void testScoreExplainBug_2283() throws Exception {\n        client().admin().indices().prepareDelete().execute().actionGet();\n        client().admin().indices().prepareCreate(\"test\").setSettings(settingsBuilder().put(\"index.number_of_shards\", 1)).execute().actionGet();\n        ClusterHealthResponse healthResponse = client().admin().cluster().prepareHealth(\"test\").setWaitForYellowStatus().execute().actionGet();\n        assertThat(healthResponse.isTimedOut(), equalTo(false));\n\n        client().prepareIndex(\"test\", \"type\", \"1\").setSource(\"field\", \"value1\", \"color\", \"red\").execute().actionGet();\n        client().prepareIndex(\"test\", \"type\", \"2\").setSource(\"field\", \"value2\", \"color\", \"blue\").execute().actionGet();\n        client().prepareIndex(\"test\", \"type\", \"3\").setSource(\"field\", \"value3\", \"color\", \"red\").execute().actionGet();\n        client().prepareIndex(\"test\", \"type\", \"4\").setSource(\"field\", \"value4\", \"color\", \"blue\").execute().actionGet();\n\n        client().admin().indices().prepareRefresh().execute().actionGet();\n\n        SearchResponse searchResponse = client().prepareSearch(\"test\")\n                .setQuery(customFiltersScoreQuery(matchAllQuery())\n                        .add(termFilter(\"field\", \"value4\"), \"2\")\n                        .add(termFilter(\"field\", \"value2\"), \"3\")\n                        .scoreMode(\"first\"))\n                .setExplain(true)\n                .execute().actionGet();\n\n        assertNoFailures(searchResponse);\n\n        assertThat(searchResponse.getHits().totalHits(), equalTo(4l));\n        assertThat(searchResponse.getHits().getAt(0).id(), equalTo(\"2\"));\n        assertThat(searchResponse.getHits().getAt(0).score(), equalTo(3.0f));\n        logger.info(\"--> Hit[0] {} Explanation:\\n {}\", searchResponse.getHits().getAt(0).id(), searchResponse.getHits().getAt(0).explanation());\n        Explanation explanation = searchResponse.getHits().getAt(0).explanation();\n        assertNotNull(explanation);\n        assertThat(explanation.isMatch(), equalTo(true));\n        assertThat(explanation.getValue(), equalTo(3f));\n        assertThat(explanation.getDescription(), equalTo(\"function score, score mode [first]\"));\n\n        assertThat(explanation.getDetails().length, equalTo(2));\n        assertThat(explanation.getDetails()[0].isMatch(), equalTo(true));\n        assertThat(explanation.getDetails()[0].getValue(), equalTo(1f));\n        assertThat(explanation.getDetails()[0].getDetails().length, equalTo(2));\n        assertThat(explanation.getDetails()[1].isMatch(), equalTo(true));\n        assertThat(explanation.getDetails()[1].getValue(), equalTo(3f));\n        assertThat(explanation.getDetails()[1].getDetails().length, equalTo(3));\n\n        // Same query but with boost\n        searchResponse = client().prepareSearch(\"test\")\n                .setQuery(customFiltersScoreQuery(matchAllQuery())\n                        .add(termFilter(\"field\", \"value4\"), \"2\")\n                        .add(termFilter(\"field\", \"value2\"), \"3\")\n                        .boost(2)\n                        .scoreMode(\"first\"))\n                .setExplain(true)\n                .execute().actionGet();\n\n        assertNoFailures(searchResponse);\n\n        assertThat(searchResponse.getHits().totalHits(), equalTo(4l));\n        assertThat(searchResponse.getHits().getAt(0).id(), equalTo(\"2\"));\n        assertThat(searchResponse.getHits().getAt(0).score(), equalTo(6f));\n        logger.info(\"--> Hit[0] {} Explanation:\\n {}\", searchResponse.getHits().getAt(0).id(), searchResponse.getHits().getAt(0).explanation());\n        explanation = searchResponse.getHits().getAt(0).explanation();\n        assertNotNull(explanation);\n        assertThat(explanation.isMatch(), equalTo(true));\n        assertThat(explanation.getValue(), equalTo(6f));\n        assertThat(explanation.getDescription(), equalTo(\"function score, score mode [first]\"));\n\n        assertThat(explanation.getDetails().length, equalTo(2));\n        assertThat(explanation.getDetails()[0].isMatch(), equalTo(true));\n        assertThat(explanation.getDetails()[0].getValue(), equalTo(1f));\n        assertThat(explanation.getDetails()[0].getDetails().length, equalTo(2));\n        assertThat(explanation.getDetails()[1].isMatch(), equalTo(true));\n        assertThat(explanation.getDetails()[1].getValue(), equalTo(6f));\n        assertThat(explanation.getDetails()[1].getDetails().length, equalTo(3));\n        assertThat(explanation.getDetails()[1].getDetails()[2].getDescription(), equalTo(\"queryBoost\"));\n        assertThat(explanation.getDetails()[1].getDetails()[2].getValue(), equalTo(2f));\n    }","id":61598,"modified_method":"@Test\n    public void testScoreExplainBug_2283() throws Exception {\n        client().admin().indices().prepareDelete().execute().actionGet();\n        client().admin().indices().prepareCreate(\"test\").setSettings(settingsBuilder().put(\"index.number_of_shards\", 1)).execute().actionGet();\n        ClusterHealthResponse healthResponse = client().admin().cluster().prepareHealth(\"test\").setWaitForYellowStatus().execute().actionGet();\n        assertThat(healthResponse.isTimedOut(), equalTo(false));\n\n        client().prepareIndex(\"test\", \"type\", \"1\").setSource(\"field\", \"value1\", \"color\", \"red\").execute().actionGet();\n        client().prepareIndex(\"test\", \"type\", \"2\").setSource(\"field\", \"value2\", \"color\", \"blue\").execute().actionGet();\n        client().prepareIndex(\"test\", \"type\", \"3\").setSource(\"field\", \"value3\", \"color\", \"red\").execute().actionGet();\n        client().prepareIndex(\"test\", \"type\", \"4\").setSource(\"field\", \"value4\", \"color\", \"blue\").execute().actionGet();\n\n        client().admin().indices().prepareRefresh().execute().actionGet();\n\n        SearchResponse searchResponse = client().prepareSearch(\"test\")\n                .setQuery(customFiltersScoreQuery(matchAllQuery())\n                        .add(termFilter(\"field\", \"value4\"), \"2\")\n                        .add(termFilter(\"field\", \"value2\"), \"3\")\n                        .scoreMode(\"first\"))\n                .setExplain(true)\n                .execute().actionGet();\n\n        assertNoFailures(searchResponse);\n\n        assertThat(searchResponse.getHits().totalHits(), equalTo(4l));\n        assertThat(searchResponse.getHits().getAt(0).id(), equalTo(\"2\"));\n        assertThat(searchResponse.getHits().getAt(0).score(), equalTo(3.0f));\n        logger.info(\"--> Hit[0] {} Explanation:\\n {}\", searchResponse.getHits().getAt(0).id(), searchResponse.getHits().getAt(0).explanation());\n        Explanation explanation = searchResponse.getHits().getAt(0).explanation();\n        assertNotNull(explanation);\n        assertThat(explanation.isMatch(), equalTo(true));\n        assertThat(explanation.getValue(), equalTo(3f));\n        assertThat(explanation.getDescription(), equalTo(\"function score, product of:\"));\n\n        assertThat(explanation.getDetails().length, equalTo(3));\n        assertThat(explanation.getDetails()[0].isMatch(), equalTo(true));\n        assertThat(explanation.getDetails()[0].getValue(), equalTo(1f));\n        assertThat(explanation.getDetails()[0].getDetails().length, equalTo(2));\n        assertThat(explanation.getDetails()[1].isMatch(), equalTo(true));\n        assertThat(explanation.getDetails()[1].getValue(), equalTo(3f));\n        assertThat(explanation.getDetails()[1].getDetails().length, equalTo(2));\n\n        // Same query but with boost\n        searchResponse = client().prepareSearch(\"test\")\n                .setQuery(customFiltersScoreQuery(matchAllQuery())\n                        .add(termFilter(\"field\", \"value4\"), \"2\")\n                        .add(termFilter(\"field\", \"value2\"), \"3\")\n                        .boost(2)\n                        .scoreMode(\"first\"))\n                .setExplain(true)\n                .execute().actionGet();\n\n        assertNoFailures(searchResponse);\n\n        assertThat(searchResponse.getHits().totalHits(), equalTo(4l));\n        assertThat(searchResponse.getHits().getAt(0).id(), equalTo(\"2\"));\n        assertThat(searchResponse.getHits().getAt(0).score(), equalTo(6f));\n        logger.info(\"--> Hit[0] {} Explanation:\\n {}\", searchResponse.getHits().getAt(0).id(), searchResponse.getHits().getAt(0).explanation());\n        explanation = searchResponse.getHits().getAt(0).explanation();\n        assertNotNull(explanation);\n        assertThat(explanation.isMatch(), equalTo(true));\n        assertThat(explanation.getValue(), equalTo(6f));\n        assertThat(explanation.getDescription(), equalTo(\"function score, product of:\"));\n\n        assertThat(explanation.getDetails().length, equalTo(3));\n        assertThat(explanation.getDetails()[0].isMatch(), equalTo(true));\n        assertThat(explanation.getDetails()[0].getValue(), equalTo(1f));\n        assertThat(explanation.getDetails()[0].getDetails().length, equalTo(2));\n        assertThat(explanation.getDetails()[1].isMatch(), equalTo(true));\n        assertThat(explanation.getDetails()[1].getValue(), equalTo(3f));\n        assertThat(explanation.getDetails()[1].getDetails().length, equalTo(2));\n        assertThat(explanation.getDetails()[2].getDescription(), equalTo(\"queryBoost\"));\n        assertThat(explanation.getDetails()[2].getValue(), equalTo(2f));\n    }","commit_id":"b007af1f464f49849705356a2eea212ed68643ac","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    public void testScoreExplainBug_2283_withFunctionScore() throws Exception {\n        client().admin().indices().prepareDelete().execute().actionGet();\n        client().admin().indices().prepareCreate(\"test\").setSettings(settingsBuilder().put(\"index.number_of_shards\", 1)).execute().actionGet();\n        ClusterHealthResponse healthResponse = client().admin().cluster().prepareHealth(\"test\").setWaitForYellowStatus().execute().actionGet();\n        assertThat(healthResponse.isTimedOut(), equalTo(false));\n\n        client().prepareIndex(\"test\", \"type\", \"1\").setSource(\"field\", \"value1\", \"color\", \"red\").execute().actionGet();\n        client().prepareIndex(\"test\", \"type\", \"2\").setSource(\"field\", \"value2\", \"color\", \"blue\").execute().actionGet();\n        client().prepareIndex(\"test\", \"type\", \"3\").setSource(\"field\", \"value3\", \"color\", \"red\").execute().actionGet();\n        client().prepareIndex(\"test\", \"type\", \"4\").setSource(\"field\", \"value4\", \"color\", \"blue\").execute().actionGet();\n\n        client().admin().indices().prepareRefresh().execute().actionGet();\n\n        SearchResponse searchResponse = client().prepareSearch(\"test\")\n                .setQuery(functionScoreQuery(matchAllQuery()).scoreMode(\"first\").add(termFilter(\"field\", \"value4\"), new ScriptScoreFunctionBuilder().script(\"2\")).add(termFilter(\"field\", \"value2\"), new ScriptScoreFunctionBuilder().script(\"3\")))\n                .setExplain(true)\n                .execute().actionGet();\n\n        assertThat(Arrays.toString(searchResponse.getShardFailures()), searchResponse.getFailedShards(), equalTo(0));\n\n        assertThat(searchResponse.getHits().totalHits(), equalTo(4l));\n        assertThat(searchResponse.getHits().getAt(0).id(), equalTo(\"2\"));\n        assertThat(searchResponse.getHits().getAt(0).score(), equalTo(3.0f));\n        logger.info(\"--> Hit[0] {} Explanation:\\n {}\", searchResponse.getHits().getAt(0).id(), searchResponse.getHits().getAt(0).explanation());\n        Explanation explanation = searchResponse.getHits().getAt(0).explanation();\n        assertNotNull(explanation);\n        assertThat(explanation.isMatch(), equalTo(true));\n        assertThat(explanation.getValue(), equalTo(3f));\n        assertThat(explanation.getDescription(), equalTo(\"function score, score mode [first]\"));\n\n        assertThat(explanation.getDetails().length, equalTo(2));\n        assertThat(explanation.getDetails()[0].isMatch(), equalTo(true));\n        assertThat(explanation.getDetails()[0].getValue(), equalTo(1f));\n        assertThat(explanation.getDetails()[0].getDetails().length, equalTo(2));\n        assertThat(explanation.getDetails()[1].isMatch(), equalTo(true));\n        assertThat(explanation.getDetails()[1].getValue(), equalTo(3f));\n        assertThat(explanation.getDetails()[1].getDetails().length, equalTo(3));\n\n        // Same query but with boost\n        searchResponse = client().prepareSearch(\"test\")\n                .setQuery(functionScoreQuery(matchAllQuery()).scoreMode(\"first\").add(termFilter(\"field\", \"value4\"), new ScriptScoreFunctionBuilder().script(\"2\")).add(termFilter(\"field\", \"value2\"), new ScriptScoreFunctionBuilder().script(\"3\")).boost(2))\n                .setExplain(true)\n                .execute().actionGet();\n\n        assertThat(Arrays.toString(searchResponse.getShardFailures()), searchResponse.getFailedShards(), equalTo(0));\n\n        assertThat(searchResponse.getHits().totalHits(), equalTo(4l));\n        assertThat(searchResponse.getHits().getAt(0).id(), equalTo(\"2\"));\n        assertThat(searchResponse.getHits().getAt(0).score(), equalTo(6f));\n        logger.info(\"--> Hit[0] {} Explanation:\\n {}\", searchResponse.getHits().getAt(0).id(), searchResponse.getHits().getAt(0).explanation());\n        explanation = searchResponse.getHits().getAt(0).explanation();\n        assertNotNull(explanation);\n        assertThat(explanation.isMatch(), equalTo(true));\n        assertThat(explanation.getValue(), equalTo(6f));\n        assertThat(explanation.getDescription(), equalTo(\"function score, score mode [first]\"));\n\n        assertThat(explanation.getDetails().length, equalTo(2));\n        assertThat(explanation.getDetails()[0].isMatch(), equalTo(true));\n        assertThat(explanation.getDetails()[0].getValue(), equalTo(1f));\n        assertThat(explanation.getDetails()[0].getDetails().length, equalTo(2));\n        assertThat(explanation.getDetails()[1].isMatch(), equalTo(true));\n        assertThat(explanation.getDetails()[1].getValue(), equalTo(6f));\n        assertThat(explanation.getDetails()[1].getDetails().length, equalTo(3));\n        assertThat(explanation.getDetails()[1].getDetails()[2].getDescription(), equalTo(\"queryBoost\"));\n        assertThat(explanation.getDetails()[1].getDetails()[2].getValue(), equalTo(2f));\n    }","id":61599,"modified_method":"@Test\n    public void testScoreExplainBug_2283_withFunctionScore() throws Exception {\n        client().admin().indices().prepareDelete().execute().actionGet();\n        client().admin().indices().prepareCreate(\"test\").setSettings(settingsBuilder().put(\"index.number_of_shards\", 1)).execute().actionGet();\n        ClusterHealthResponse healthResponse = client().admin().cluster().prepareHealth(\"test\").setWaitForYellowStatus().execute().actionGet();\n        assertThat(healthResponse.isTimedOut(), equalTo(false));\n\n        client().prepareIndex(\"test\", \"type\", \"1\").setSource(\"field\", \"value1\", \"color\", \"red\").execute().actionGet();\n        client().prepareIndex(\"test\", \"type\", \"2\").setSource(\"field\", \"value2\", \"color\", \"blue\").execute().actionGet();\n        client().prepareIndex(\"test\", \"type\", \"3\").setSource(\"field\", \"value3\", \"color\", \"red\").execute().actionGet();\n        client().prepareIndex(\"test\", \"type\", \"4\").setSource(\"field\", \"value4\", \"color\", \"blue\").execute().actionGet();\n\n        client().admin().indices().prepareRefresh().execute().actionGet();\n\n        SearchResponse searchResponse = client().prepareSearch(\"test\")\n                .setQuery(functionScoreQuery(matchAllQuery()).scoreMode(\"first\").add(termFilter(\"field\", \"value4\"), new ScriptScoreFunctionBuilder().script(\"2\")).add(termFilter(\"field\", \"value2\"), new ScriptScoreFunctionBuilder().script(\"3\")))\n                .setExplain(true)\n                .execute().actionGet();\n\n        assertThat(Arrays.toString(searchResponse.getShardFailures()), searchResponse.getFailedShards(), equalTo(0));\n\n        assertThat(searchResponse.getHits().totalHits(), equalTo(4l));\n        assertThat(searchResponse.getHits().getAt(0).id(), equalTo(\"2\"));\n        assertThat(searchResponse.getHits().getAt(0).score(), equalTo(3.0f));\n        logger.info(\"--> Hit[0] {} Explanation:\\n {}\", searchResponse.getHits().getAt(0).id(), searchResponse.getHits().getAt(0).explanation());\n        Explanation explanation = searchResponse.getHits().getAt(0).explanation();\n        assertNotNull(explanation);\n        assertThat(explanation.isMatch(), equalTo(true));\n        assertThat(explanation.getValue(), equalTo(3f));\n        assertThat(explanation.getDescription(), equalTo(\"function score, product of:\"));\n        assertThat(explanation.getDetails().length, equalTo(3));\n        assertThat(explanation.getDetails()[0].isMatch(), equalTo(true));\n        assertThat(explanation.getDetails()[0].getValue(), equalTo(1f));\n        assertThat(explanation.getDetails()[0].getDetails().length, equalTo(2));\n        assertThat(explanation.getDetails()[1].isMatch(), equalTo(true));\n        assertThat(explanation.getDetails()[1].getValue(), equalTo(3f));\n        assertThat(explanation.getDetails()[1].getDetails().length, equalTo(2));\n\n        // Same query but with boost\n        searchResponse = client().prepareSearch(\"test\")\n                .setQuery(functionScoreQuery(matchAllQuery()).scoreMode(\"first\").add(termFilter(\"field\", \"value4\"), new ScriptScoreFunctionBuilder().script(\"2\")).add(termFilter(\"field\", \"value2\"), new ScriptScoreFunctionBuilder().script(\"3\")).boost(2))\n                .setExplain(true)\n                .execute().actionGet();\n\n        assertThat(Arrays.toString(searchResponse.getShardFailures()), searchResponse.getFailedShards(), equalTo(0));\n\n        assertThat(searchResponse.getHits().totalHits(), equalTo(4l));\n        assertThat(searchResponse.getHits().getAt(0).id(), equalTo(\"2\"));\n        assertThat(searchResponse.getHits().getAt(0).score(), equalTo(6f));\n        logger.info(\"--> Hit[0] {} Explanation:\\n {}\", searchResponse.getHits().getAt(0).id(), searchResponse.getHits().getAt(0).explanation());\n        explanation = searchResponse.getHits().getAt(0).explanation();\n        assertNotNull(explanation);\n        assertThat(explanation.isMatch(), equalTo(true));\n        assertThat(explanation.getValue(), equalTo(6f));\n        assertThat(explanation.getDescription(), equalTo(\"function score, product of:\"));\n\n        assertThat(explanation.getDetails().length, equalTo(3));\n        assertThat(explanation.getDetails()[0].isMatch(), equalTo(true));\n        assertThat(explanation.getDetails()[0].getValue(), equalTo(1f));\n        assertThat(explanation.getDetails()[0].getDetails().length, equalTo(2));\n        assertThat(explanation.getDetails()[1].isMatch(), equalTo(true));\n        assertThat(explanation.getDetails()[1].getValue(), equalTo(3f));\n        assertThat(explanation.getDetails()[1].getDetails().length, equalTo(2));\n        assertThat(explanation.getDetails()[2].getDescription(), equalTo(\"queryBoost\"));\n        assertThat(explanation.getDetails()[2].getValue(), equalTo(2f));\n    }","commit_id":"b007af1f464f49849705356a2eea212ed68643ac","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public AbstractDistanceScoreFunction(double userSuppiedScale, double userSuppliedScaleWeight, DecayFunction func) {\n            if (userSuppiedScale <= 0.0) {\n                throw new ElasticSearchIllegalArgumentException(FunctionScoreQueryParser.NAME + \" : scale must be > 0.0.\");\n            }\n            if (userSuppliedScaleWeight <= 0.0 || userSuppliedScaleWeight >= 1.0) {\n                throw new ElasticSearchIllegalArgumentException(FunctionScoreQueryParser.NAME\n                        + \" : scale_weight must be in the range [0..1].\");\n            }\n            this.scale = func.processScale(userSuppiedScale, userSuppliedScaleWeight);\n            this.func = func;\n        }","id":61600,"modified_method":"public AbstractDistanceScoreFunction(double userSuppiedScale, double userSuppliedScaleWeight, DecayFunction func) {\n            super(CombineFunction.MULT);\n            if (userSuppiedScale <= 0.0) {\n                throw new ElasticSearchIllegalArgumentException(FunctionScoreQueryParser.NAME + \" : scale must be > 0.0.\");\n            }\n            if (userSuppliedScaleWeight <= 0.0 || userSuppliedScaleWeight >= 1.0) {\n                throw new ElasticSearchIllegalArgumentException(FunctionScoreQueryParser.NAME\n                        + \" : scale_weight must be in the range [0..1].\");\n            }\n            this.scale = func.processScale(userSuppiedScale, userSuppliedScaleWeight);\n            this.func = func;\n        }","commit_id":"b007af1f464f49849705356a2eea212ed68643ac","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n        public Explanation explainScore(int docId, Explanation subQueryExpl) {\n            ComplexExplanation ce = new ComplexExplanation();\n            ce.setValue((float) score(docId, subQueryExpl.getValue()));\n            ce.setMatch(true);\n            ce.setDescription(\"subQueryScore * Function for field \" + getFieldName() + \":\");\n            ce.addDetail(func.explainFunction(getDistanceString(docId), distance(docId), scale));\n            return ce;\n        }","id":61601,"modified_method":"@Override\n        public Explanation explainScore(int docId, Explanation subQueryExpl) {\n            ComplexExplanation ce = new ComplexExplanation();\n            ce.setValue(CombineFunction.toFloat(score(docId, subQueryExpl.getValue())));\n            ce.setMatch(true);\n            ce.setDescription(\"Function for field \" + getFieldName() + \":\");\n            ce.addDetail(func.explainFunction(getDistanceString(docId), distance(docId), scale));\n            return ce;\n        }","commit_id":"b007af1f464f49849705356a2eea212ed68643ac","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n        public double score(int docId, float subQueryScore) {\n            return (subQueryScore * factor(docId));\n        }","id":61602,"modified_method":"@Override\n        public double score(int docId, float subQueryScore) {\n            double value = distance(docId);\n            return func.evaluate(value, scale);\n        }","commit_id":"b007af1f464f49849705356a2eea212ed68643ac","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n        public float score() throws IOException {\n            int docId = scorer.docID();\n            double factor = 1.0f;\n            if (scoreMode == ScoreMode.First) {\n                for (int i = 0; i < filterFunctions.length; i++) {\n                    if (docSets[i].get(docId)) {\n                        factor = filterFunctions[i].function.factor(docId);\n                        break;\n                    }\n                }\n            } else if (scoreMode == ScoreMode.Max) {\n                double maxFactor = Double.NEGATIVE_INFINITY;\n                for (int i = 0; i < filterFunctions.length; i++) {\n                    if (docSets[i].get(docId)) {\n                        maxFactor = Math.max(filterFunctions[i].function.factor(docId), maxFactor);\n                    }\n                }\n                if (maxFactor != Float.NEGATIVE_INFINITY) {\n                    factor = maxFactor;\n                }\n            } else if (scoreMode == ScoreMode.Min) {\n                double minFactor = Double.POSITIVE_INFINITY;\n                for (int i = 0; i < filterFunctions.length; i++) {\n                    if (docSets[i].get(docId)) {\n                        minFactor = Math.min(filterFunctions[i].function.factor(docId), minFactor);\n                    }\n                }\n                if (minFactor != Float.POSITIVE_INFINITY) {\n                    factor = minFactor;\n                }\n            } else if (scoreMode == ScoreMode.Multiply) {\n                for (int i = 0; i < filterFunctions.length; i++) {\n                    if (docSets[i].get(docId)) {\n                        factor *= filterFunctions[i].function.factor(docId);\n                    }\n                }\n            } else { // Avg / Total\n                double totalFactor = 0.0f;\n                int count = 0;\n                for (int i = 0; i < filterFunctions.length; i++) {\n                    if (docSets[i].get(docId)) {\n                        totalFactor += filterFunctions[i].function.factor(docId);\n                        count++;\n                    }\n                }\n                if (count != 0) {\n                    factor = totalFactor;\n                    if (scoreMode == ScoreMode.Avg) {\n                        factor /= count;\n                    }\n                }\n            }\n            if (factor > maxBoost) {\n                factor = maxBoost;\n            }\n            float score = scorer.score();\n            return FunctionScoreQuery.toFloat(subQueryBoost * score * factor);\n        }","id":61603,"modified_method":"@Override\n        public float score() throws IOException {\n            int docId = scorer.docID();\n            double factor = 1.0f;\n            float subQueryScore = scorer.score();\n            if (scoreMode == ScoreMode.First) {\n                for (int i = 0; i < filterFunctions.length; i++) {\n                    if (docSets[i].get(docId)) {\n                        factor = filterFunctions[i].function.score(docId, subQueryScore);\n                        break;\n                    }\n                }\n            } else if (scoreMode == ScoreMode.Max) {\n                double maxFactor = Double.NEGATIVE_INFINITY;\n                for (int i = 0; i < filterFunctions.length; i++) {\n                    if (docSets[i].get(docId)) {\n                        maxFactor = Math.max(filterFunctions[i].function.score(docId, subQueryScore), maxFactor);\n                    }\n                }\n                if (maxFactor != Float.NEGATIVE_INFINITY) {\n                    factor = maxFactor;\n                }\n            } else if (scoreMode == ScoreMode.Min) {\n                double minFactor = Double.POSITIVE_INFINITY;\n                for (int i = 0; i < filterFunctions.length; i++) {\n                    if (docSets[i].get(docId)) {\n                        minFactor = Math.min(filterFunctions[i].function.score(docId, subQueryScore), minFactor);\n                    }\n                }\n                if (minFactor != Float.POSITIVE_INFINITY) {\n                    factor = minFactor;\n                }\n            } else if (scoreMode == ScoreMode.Multiply) {\n                for (int i = 0; i < filterFunctions.length; i++) {\n                    if (docSets[i].get(docId)) {\n                        factor *= filterFunctions[i].function.score(docId, subQueryScore);\n                    }\n                }\n            } else { // Avg / Total\n                double totalFactor = 0.0f;\n                int count = 0;\n                for (int i = 0; i < filterFunctions.length; i++) {\n                    if (docSets[i].get(docId)) {\n                        totalFactor += filterFunctions[i].function.score(docId, subQueryScore);\n                        count++;\n                    }\n                }\n                if (count != 0) {\n                    factor = totalFactor;\n                    if (scoreMode == ScoreMode.Avg) {\n                        factor /= count;\n                    }\n                }\n            }\n            return scoreCombiner.combine(subQueryBoost, subQueryScore, factor, maxBoost);\n        }","commit_id":"b007af1f464f49849705356a2eea212ed68643ac","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public FiltersFunctionScoreQuery(Query subQuery, ScoreMode scoreMode, FilterFunction[] filterFunctions, float maxBoost) {\n        this.subQuery = subQuery;\n        this.scoreMode = scoreMode;\n        this.filterFunctions = filterFunctions;\n        this.maxBoost = maxBoost;\n    }","id":61604,"modified_method":"public FiltersFunctionScoreQuery(Query subQuery, ScoreMode scoreMode, FilterFunction[] filterFunctions, float maxBoost) {\n        this.subQuery = subQuery;\n        this.scoreMode = scoreMode;\n        this.filterFunctions = filterFunctions;\n        this.maxBoost = maxBoost;\n        combineFunction = CombineFunction.MULT;\n    }","commit_id":"b007af1f464f49849705356a2eea212ed68643ac","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n        public Explanation explain(AtomicReaderContext context, int doc) throws IOException {\n            Explanation subQueryExpl = subQueryWeight.explain(context, doc);\n            if (!subQueryExpl.isMatch()) {\n                return subQueryExpl;\n            }\n\n            if (scoreMode == ScoreMode.First) {\n                for (FilterFunction filterFunction : filterFunctions) {\n                    Bits docSet = DocIdSets.toSafeBits(context.reader(), filterFunction.filter.getDocIdSet(context, context.reader().getLiveDocs()));\n                    if (docSet.get(doc)) {\n                        filterFunction.function.setNextReader(context);\n                        Explanation functionExplanation = filterFunction.function.explainFactor(doc);\n                        double factor = functionExplanation.getValue();\n                        if (factor > maxBoost) {\n                            factor = maxBoost;\n                        }\n                        float sc = FunctionScoreQuery.toFloat(getBoost() * factor);\n                        Explanation filterExplanation = new ComplexExplanation(true, sc, \"function score, product of:\");\n                        filterExplanation.addDetail(new Explanation(1.0f, \"match filter: \" + filterFunction.filter.toString()));\n                        filterExplanation.addDetail(functionExplanation);\n                        filterExplanation.addDetail(new Explanation(getBoost(), \"queryBoost\"));\n\n                        // top level score = subquery.score * filter.score (this already has the query boost)\n                        float topLevelScore = subQueryExpl.getValue() * sc;\n                        Explanation topLevel = new ComplexExplanation(true, topLevelScore, \"function score, score mode [\" + scoreMode.toString().toLowerCase(Locale.ROOT) + \"]\");\n                        topLevel.addDetail(subQueryExpl);\n                        topLevel.addDetail(filterExplanation);\n                        return topLevel;\n                    }\n                }\n            } else {\n                int count = 0;\n                float total = 0;\n                float multiply = 1;\n                double max = Double.NEGATIVE_INFINITY;\n                double min = Double.POSITIVE_INFINITY;\n                ArrayList<Explanation> filtersExplanations = new ArrayList<Explanation>();\n                for (FilterFunction filterFunction : filterFunctions) {\n                    Bits docSet = DocIdSets.toSafeBits(context.reader(), filterFunction.filter.getDocIdSet(context, context.reader().getLiveDocs()));\n                    if (docSet.get(doc)) {\n                        filterFunction.function.setNextReader(context);\n                        Explanation functionExplanation = filterFunction.function.explainFactor(doc);\n                        double factor = functionExplanation.getValue();\n                        count++;\n                        total += factor;\n                        multiply *= factor;\n                        max = Math.max(factor, max);\n                        min = Math.min(factor, min);\n                        Explanation res = new ComplexExplanation(true, FunctionScoreQuery.toFloat(factor), \"function score, product of:\");\n                        res.addDetail(new Explanation(1.0f, \"match filter: \" + filterFunction.filter.toString()));\n                        res.addDetail(functionExplanation);\n                        res.addDetail(new Explanation(getBoost(), \"queryBoost\"));\n                        filtersExplanations.add(res);\n                    }\n                }\n                if (count > 0) {\n                    double factor = 0;\n                    switch (scoreMode) {\n                        case Avg:\n                            factor = total / count;\n                            break;\n                        case Max:\n                            factor = max;\n                            break;\n                        case Min:\n                            factor = min;\n                            break;\n                        case Total:\n                            factor = total;\n                            break;\n                        case Multiply:\n                            factor = multiply;\n                            break;\n                    }\n\n                    if (factor > maxBoost) {\n                        factor = maxBoost;\n                    }\n                    float sc = FunctionScoreQuery.toFloat(factor * subQueryExpl.getValue() * getBoost());\n                    Explanation res = new ComplexExplanation(true, sc, \"function score, score mode [\" + scoreMode.toString().toLowerCase(Locale.ROOT) + \"]\");\n                    res.addDetail(subQueryExpl);\n                    for (Explanation explanation : filtersExplanations) {\n                        res.addDetail(explanation);\n                    }\n                    return res;\n                }\n            }\n\n            float sc = getBoost() * subQueryExpl.getValue();\n            Explanation res = new ComplexExplanation(true, sc, \"custom score, no filter match, product of:\");\n            res.addDetail(subQueryExpl);\n            res.addDetail(new Explanation(getBoost(), \"queryBoost\"));\n            return res;\n        }","id":61605,"modified_method":"@Override\n        public Explanation explain(AtomicReaderContext context, int doc) throws IOException {\n\n            Explanation subQueryExpl = subQueryWeight.explain(context, doc);\n            if (!subQueryExpl.isMatch()) {\n                return subQueryExpl;\n            }\n            // First: Gather explanations for all filters\n            List<ComplexExplanation> filterExplanations = new ArrayList<ComplexExplanation>();\n            for (FilterFunction filterFunction : filterFunctions) {\n                Bits docSet = DocIdSets.toSafeBits(context.reader(),\n                        filterFunction.filter.getDocIdSet(context, context.reader().getLiveDocs()));\n                if (docSet.get(doc)) {\n                    filterFunction.function.setNextReader(context);\n                    Explanation functionExplanation = filterFunction.function.explainScore(doc, subQueryExpl);\n                    double factor = functionExplanation.getValue();\n                    float sc = CombineFunction.toFloat(factor);\n                    ComplexExplanation filterExplanation = new ComplexExplanation(true, sc, \"function score, product of:\");\n                    filterExplanation.addDetail(new Explanation(1.0f, \"match filter: \" + filterFunction.filter.toString()));\n                    filterExplanation.addDetail(functionExplanation);\n                    filterExplanations.add(filterExplanation);\n                }\n            }\n            if (filterExplanations.size() == 0) {\n                float sc = getBoost() * subQueryExpl.getValue();\n                Explanation res = new ComplexExplanation(true, sc, \"function score, no filter match, product of:\");\n                res.addDetail(subQueryExpl);\n                res.addDetail(new Explanation(getBoost(), \"queryBoost\"));\n                return res;\n            }\n\n            // Second: Compute the factor that would have been computed by the\n            // filters\n            double factor = 1.0;\n            switch (scoreMode) {\n            case First:\n\n                factor = filterExplanations.get(0).getValue();\n                break;\n            case Max:\n                double maxFactor = Double.NEGATIVE_INFINITY;\n                for (int i = 0; i < filterExplanations.size(); i++) {\n                    factor = Math.max(filterExplanations.get(i).getValue(), maxFactor);\n                }\n                break;\n            case Min:\n                double minFactor = Double.POSITIVE_INFINITY;\n                for (int i = 0; i < filterExplanations.size(); i++) {\n                    factor = Math.min(filterExplanations.get(i).getValue(), minFactor);\n                }\n                break;\n            case Multiply:\n                for (int i = 0; i < filterExplanations.size(); i++) {\n                    factor *= filterExplanations.get(i).getValue();\n                }\n                break;\n            default: // Avg / Total\n                double totalFactor = 0.0f;\n                int count = 0;\n                for (int i = 0; i < filterExplanations.size(); i++) {\n                    totalFactor += filterExplanations.get(i).getValue();\n                    count++;\n                }\n                if (count != 0) {\n                    factor = totalFactor;\n                    if (scoreMode == ScoreMode.Avg) {\n                        factor /= count;\n                    }\n                }\n            }\n            ComplexExplanation factorExplanaition = new ComplexExplanation(true, CombineFunction.toFloat(factor),\n                    \"function score, score mode [\" + scoreMode.toString().toLowerCase(Locale.ROOT) + \"]\");\n            for (int i = 0; i < filterExplanations.size(); i++) {\n                factorExplanaition.addDetail(filterExplanations.get(i));\n            }\n            return combineFunction.explain(getBoost(), subQueryExpl, factorExplanaition, maxBoost);\n        }","commit_id":"b007af1f464f49849705356a2eea212ed68643ac","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n        public Scorer scorer(AtomicReaderContext context, boolean scoreDocsInOrder, boolean topScorer, Bits acceptDocs) throws IOException {\n            Scorer subQueryScorer = subQueryWeight.scorer(context, scoreDocsInOrder, false, acceptDocs);\n            if (subQueryScorer == null) {\n                return null;\n            }\n            for (int i = 0; i < filterFunctions.length; i++) {\n                FilterFunction filterFunction = filterFunctions[i];\n                filterFunction.function.setNextReader(context);\n                docSets[i] = DocIdSets.toSafeBits(context.reader(), filterFunction.filter.getDocIdSet(context, acceptDocs));\n            }\n            return new CustomBoostFactorScorer(this, subQueryScorer, scoreMode, filterFunctions, maxBoost, docSets);\n        }","id":61606,"modified_method":"@Override\n        public Scorer scorer(AtomicReaderContext context, boolean scoreDocsInOrder, boolean topScorer, Bits acceptDocs) throws IOException {\n            Scorer subQueryScorer = subQueryWeight.scorer(context, scoreDocsInOrder, false, acceptDocs);\n            if (subQueryScorer == null) {\n                return null;\n            }\n            for (int i = 0; i < filterFunctions.length; i++) {\n                FilterFunction filterFunction = filterFunctions[i];\n                filterFunction.function.setNextReader(context);\n                docSets[i] = DocIdSets.toSafeBits(context.reader(), filterFunction.filter.getDocIdSet(context, acceptDocs));\n            }\n            return new CustomBoostFactorScorer(this, subQueryScorer, scoreMode, filterFunctions, maxBoost, docSets, combineFunction);\n        }","commit_id":"b007af1f464f49849705356a2eea212ed68643ac","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public String toString(String field) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"custom score (\").append(subQuery.toString(field)).append(\", functions: [\");\n        for (FilterFunction filterFunction : filterFunctions) {\n            sb.append(\"{filter(\").append(filterFunction.filter).append(\"), function [\").append(filterFunction.function).append(\"]}\");\n        }\n        sb.append(\"])\");\n        sb.append(ToStringUtils.boost(getBoost()));\n        return sb.toString();\n    }","id":61607,"modified_method":"public String toString(String field) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"function score (\").append(subQuery.toString(field)).append(\", functions: [\");\n        for (FilterFunction filterFunction : filterFunctions) {\n            sb.append(\"{filter(\").append(filterFunction.filter).append(\"), function [\").append(filterFunction.function).append(\"]}\");\n        }\n        sb.append(\"])\");\n        sb.append(ToStringUtils.boost(getBoost()));\n        return sb.toString();\n    }","commit_id":"b007af1f464f49849705356a2eea212ed68643ac","url":"https://github.com/elastic/elasticsearch"},{"original_method":"private CustomBoostFactorScorer(CustomBoostFactorWeight w, Scorer scorer, ScoreMode scoreMode,\n                                        FilterFunction[] filterFunctions, float maxBoost, Bits[] docSets) throws IOException {\n            super(w);\n            this.subQueryBoost = w.getQuery().getBoost();\n            this.scorer = scorer;\n            this.scoreMode = scoreMode;\n            this.filterFunctions = filterFunctions;\n            this.maxBoost = maxBoost;\n            this.docSets = docSets;\n        }","id":61608,"modified_method":"private CustomBoostFactorScorer(CustomBoostFactorWeight w, Scorer scorer, ScoreMode scoreMode, FilterFunction[] filterFunctions,\n                float maxBoost, Bits[] docSets, CombineFunction scoreCombiner) throws IOException {\n            super(w);\n            this.subQueryBoost = w.getQuery().getBoost();\n            this.scorer = scorer;\n            this.scoreMode = scoreMode;\n            this.filterFunctions = filterFunctions;\n            this.maxBoost = maxBoost;\n            this.docSets = docSets;\n            this.scoreCombiner = scoreCombiner;\n        }","commit_id":"b007af1f464f49849705356a2eea212ed68643ac","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public String toString(String field) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"custom score (\").append(subQuery.toString(field)).append(\",function=\").append(function).append(')');\n        sb.append(ToStringUtils.boost(getBoost()));\n        return sb.toString();\n    }","id":61609,"modified_method":"public String toString(String field) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"function score (\").append(subQuery.toString(field)).append(\",function=\").append(function).append(')');\n        sb.append(ToStringUtils.boost(getBoost()));\n        return sb.toString();\n    }","commit_id":"b007af1f464f49849705356a2eea212ed68643ac","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n        public float score() throws IOException {\n            double factor = function.score(scorer.docID(), scorer.score());\n            return toFloat(subQueryBoost * Math.min(maxBoost, factor));\n        }","id":61610,"modified_method":"@Override\n        public float score() throws IOException {\n            return scoreCombiner.combine(subQueryBoost, scorer.score(),\n                    function.score(scorer.docID(), scorer.score()), maxBoost);\n        }","commit_id":"b007af1f464f49849705356a2eea212ed68643ac","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n        public Scorer scorer(AtomicReaderContext context, boolean scoreDocsInOrder, boolean topScorer, Bits acceptDocs) throws IOException {\n            Scorer subQueryScorer = subQueryWeight.scorer(context, scoreDocsInOrder, false, acceptDocs);\n            if (subQueryScorer == null) {\n                return null;\n            }\n            function.setNextReader(context);\n            return new CustomBoostFactorScorer(this, subQueryScorer, function, maxBoost);\n        }","id":61611,"modified_method":"@Override\n        public Scorer scorer(AtomicReaderContext context, boolean scoreDocsInOrder, boolean topScorer, Bits acceptDocs) throws IOException {\n            Scorer subQueryScorer = subQueryWeight.scorer(context, scoreDocsInOrder, false, acceptDocs);\n            if (subQueryScorer == null) {\n                return null;\n            }\n            function.setNextReader(context);\n            return new CustomBoostFactorScorer(this, subQueryScorer, function, maxBoost, combineFunction);\n        }","commit_id":"b007af1f464f49849705356a2eea212ed68643ac","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public FunctionScoreQuery(Query subQuery, ScoreFunction function) {\n        this.subQuery = subQuery;\n        this.function = function;\n    }","id":61612,"modified_method":"public FunctionScoreQuery(Query subQuery, ScoreFunction function) {\n        this.subQuery = subQuery;\n        this.function = function;\n        this.combineFunction = function.getDefaultScoreCombiner();\n    }","commit_id":"b007af1f464f49849705356a2eea212ed68643ac","url":"https://github.com/elastic/elasticsearch"},{"original_method":"private CustomBoostFactorScorer(CustomBoostFactorWeight w, Scorer scorer, ScoreFunction function, float maxBoost)\n                throws IOException {\n            super(w);\n            this.subQueryBoost = w.getQuery().getBoost();\n            this.scorer = scorer;\n            this.function = function;\n            this.maxBoost = maxBoost;\n        }","id":61613,"modified_method":"private CustomBoostFactorScorer(CustomBoostFactorWeight w, Scorer scorer, ScoreFunction function, float maxBoost, CombineFunction scoreCombiner)\n                throws IOException {\n            super(w);\n            this.subQueryBoost = w.getQuery().getBoost();\n            this.scorer = scorer;\n            this.function = function;\n            this.maxBoost = maxBoost;\n            this.scoreCombiner = scoreCombiner;\n        }","commit_id":"b007af1f464f49849705356a2eea212ed68643ac","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n        public Explanation explain(AtomicReaderContext context, int doc) throws IOException {\n            Explanation subQueryExpl = subQueryWeight.explain(context, doc);\n            if (!subQueryExpl.isMatch()) {\n                return subQueryExpl;\n            }\n\n            function.setNextReader(context);\n            Explanation functionExplanation = function.explainScore(doc, subQueryExpl);\n            float sc = getBoost() * functionExplanation.getValue();\n            Explanation res = new ComplexExplanation(true, sc, \"function score, product of:\");\n            res.addDetail(functionExplanation);\n            res.addDetail(new Explanation(getBoost(), \"queryBoost\"));\n            return res;\n        }","id":61614,"modified_method":"@Override\n        public Explanation explain(AtomicReaderContext context, int doc) throws IOException {\n            Explanation subQueryExpl = subQueryWeight.explain(context, doc);\n            if (!subQueryExpl.isMatch()) {\n                return subQueryExpl;\n            }\n            function.setNextReader(context);\n            Explanation functionExplanation = function.explainScore(doc, subQueryExpl);\n            return combineFunction.explain(getBoost(), subQueryExpl, functionExplanation, maxBoost);\n        }","commit_id":"b007af1f464f49849705356a2eea212ed68643ac","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public RandomScoreFunction(long seed) {\n        this.prng = new PRNG(seed);\n    }","id":61615,"modified_method":"public RandomScoreFunction(long seed) {\n        super(CombineFunction.MULT);\n        this.prng = new PRNG(seed);\n    }","commit_id":"b007af1f464f49849705356a2eea212ed68643ac","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public ScriptScoreFunction(String sScript, Map<String, Object> params, SearchScript script) {\n        this.sScript = sScript;\n        this.params = params;\n        this.script = script;\n    }","id":61616,"modified_method":"public ScriptScoreFunction(String sScript, Map<String, Object> params, SearchScript script) {\n        super(CombineFunction.PLAIN);\n        this.sScript = sScript;\n        this.params = params;\n        this.script = script;\n    }","commit_id":"b007af1f464f49849705356a2eea212ed68643ac","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n    public Explanation explainScore(int docId, Explanation subQueryExpl) {\n        Explanation exp;\n        if (script instanceof ExplainableSearchScript) {\n            script.setNextDocId(docId);\n            script.setNextScore(subQueryExpl.getValue());\n            exp = ((ExplainableSearchScript) script).explain(subQueryExpl);\n        } else {\n            double score = score(docId, subQueryExpl.getValue());\n            exp = new Explanation((float)score, \"script score function: composed of:\");\n            exp.addDetail(subQueryExpl);\n        }\n        return exp;\n    }","id":61617,"modified_method":"@Override\n    public Explanation explainScore(int docId, Explanation subQueryExpl) {\n        Explanation exp;\n        if (script instanceof ExplainableSearchScript) {\n            script.setNextDocId(docId);\n            script.setNextScore(subQueryExpl.getValue());\n            exp = ((ExplainableSearchScript) script).explain(subQueryExpl);\n        } else {\n            double score = score(docId, subQueryExpl.getValue());\n            exp = new Explanation(CombineFunction.toFloat(score), \"script score function: composed of:\");\n            exp.addDetail(subQueryExpl);\n        }\n        return exp;\n    }","commit_id":"b007af1f464f49849705356a2eea212ed68643ac","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public void init()\n    {\n        registerBeanDefinitionParser(\"orphan\", new OrphanDefinitionParser(OrphanBean.class, true).withAlias(\"bar\", \"foo\"));\n        registerBeanDefinitionParser(\"child\", new ChildDefinitionParser(\"child\", ChildBean.class).withAlias(\"bar\", \"foo\"));\n        registerBeanDefinitionParser(\"kid\", new ChildDefinitionParser(\"kids\", ChildBean.class).withAlias(\"bar\", \"foo\").withCollection(\"parsers-test:kid\"));\n        registerBeanDefinitionParser(\"parent\", new ParentDefinitionParser().withAlias(\"bar\", \"foo\"));\n        registerBeanDefinitionParser(\"orphan1\", new NamedDefinitionParser(\"orphan1\").withAlias(\"bar\", \"foo\"));\n        registerBeanDefinitionParser(\"orphan2\", new NamedDefinitionParser(\"orphan2\").withAlias(\"bar\", \"foo\"));\n        registerBeanDefinitionParser(\"map-entry\", new ChildMapEntryDefinitionParser(\"map\", \"key\", \"value\"));\n        registerBeanDefinitionParser(\"list-entry\", new ChildListEntryDefinitionParser(\"list\"));\n    }","id":61618,"modified_method":"public void init()\n    {\n        registerBeanDefinitionParser(\"orphan\", new OrphanDefinitionParser(OrphanBean.class, true).withAlias(\"bar\", \"foo\").withIgnored(\"ignored\"));\n        registerBeanDefinitionParser(\"child\", new ChildDefinitionParser(\"child\", ChildBean.class).withAlias(\"bar\", \"foo\").withIgnored(\"ignored\"));\n        registerBeanDefinitionParser(\"kid\", new ChildDefinitionParser(\"kids\", ChildBean.class).withAlias(\"bar\", \"foo\").withIgnored(\"ignored\").withCollection(\"parsers-test:kid\"));\n        registerBeanDefinitionParser(\"parent\", new ParentDefinitionParser().withAlias(\"bar\", \"foo\").withIgnored(\"ignored\"));\n        registerBeanDefinitionParser(\"orphan1\", new NamedDefinitionParser(\"orphan1\").withAlias(\"bar\", \"foo\").withIgnored(\"ignored\"));\n        registerBeanDefinitionParser(\"orphan2\", new NamedDefinitionParser(\"orphan2\").withAlias(\"bar\", \"foo\").withIgnored(\"ignored\"));\n        registerBeanDefinitionParser(\"map-entry\", new ChildMapEntryDefinitionParser(\"map\", \"key\", \"value\"));\n        registerBeanDefinitionParser(\"list-entry\", new ChildListEntryDefinitionParser(\"list\"));\n    }","commit_id":"a4b327068105a706be348b9b23f89717be705f28","url":"https://github.com/mulesoft/mule"},{"original_method":"public void plus(Closure c) {\n        List<Node> list = this.parent().children();\n        int afterIndex = list.indexOf(this);\n        List<Node> leftOvers = new ArrayList<Node>(list.subList(afterIndex + 1, list.size()));\n        list.subList(afterIndex + 1, list.size()).clear();\n\n        NodeBuilder b = new NodeBuilder();\n        Node newNode = (Node) b.invokeMethod(\"dummyNode\", c);\n        List<Node> children = newNode.children();\n        for (Node child : children) {\n            parent.appendNode(child.name(), child.attributes(), child.value());\n        }\n\n        this.parent().children().addAll(leftOvers);\n    }","id":61619,"modified_method":"public void plus(Closure c) {\n        List list = this.parent().children();\n        int afterIndex = list.indexOf(this);\n        List leftOvers = new ArrayList(list.subList(afterIndex + 1, list.size()));\n        list.subList(afterIndex + 1, list.size()).clear();\n        NodeBuilder b = new NodeBuilder();\n        Node newNode = (Node) b.invokeMethod(\"dummyNode\", c);\n        List<Node> children = newNode.children();\n        for (Node child : children) {\n            parent.appendNode(child.name(), child.attributes(), child.value());\n        }\n        this.parent().children().addAll(leftOvers);\n    }","commit_id":"f37a383ff8014a0f5a765f4c351ce2a72a05a55f","url":"https://github.com/apache/groovy"},{"original_method":"public String text() {\n        if (value instanceof String) {\n            return (String) value;\n        } else if (value instanceof Collection) {\n            Collection coll = (Collection) value;\n            String previousText = null;\n            StringBuffer buffer = null;\n            for (Iterator iter = coll.iterator(); iter.hasNext();) {\n                Object child = iter.next();\n                if (child instanceof String) {\n                    String childText = (String) child;\n                    if (previousText == null) {\n                        previousText = childText;\n                    } else {\n                        if (buffer == null) {\n                            buffer = new StringBuffer();\n                            buffer.append(previousText);\n                        }\n                        buffer.append(childText);\n                    }\n                }\n            }\n            if (buffer != null) {\n                return buffer.toString();\n            } else {\n                if (previousText != null) {\n                    return previousText;\n                }\n            }\n        }\n        return \"\";\n    }","id":61620,"modified_method":"public String text() {\n        if (value instanceof String) {\n            return (String) value;\n        } else if (value instanceof Collection) {\n            Collection coll = (Collection) value;\n            String previousText = null;\n            StringBuffer buffer = null;\n            for (Object child : coll) {\n                if (child instanceof String) {\n                    String childText = (String) child;\n                    if (previousText == null) {\n                        previousText = childText;\n                    } else {\n                        if (buffer == null) {\n                            buffer = new StringBuffer();\n                            buffer.append(previousText);\n                        }\n                        buffer.append(childText);\n                    }\n                }\n            }\n            if (buffer != null) {\n                return buffer.toString();\n            } else {\n                if (previousText != null) {\n                    return previousText;\n                }\n            }\n        }\n        return \"\";\n    }","commit_id":"f37a383ff8014a0f5a765f4c351ce2a72a05a55f","url":"https://github.com/apache/groovy"},{"original_method":"/**\n     * Provides lookup of elements by QName.\n     *\n     * @param name the QName of interest\n     * @return the nodes matching name\n     */\n    public NodeList getAt(QName name) {\n        NodeList answer = new NodeList();\n        for (Iterator iter = children().iterator(); iter.hasNext();) {\n            Object child = iter.next();\n            if (child instanceof Node) {\n                Node childNode = (Node) child;\n                Object childNodeName = childNode.name();\n                if (name.matches(childNodeName)) {\n                    answer.add(childNode);\n                }\n            }\n        }\n        return answer;\n    }","id":61621,"modified_method":"/**\n     * Provides lookup of elements by QName.\n     *\n     * @param name the QName of interest\n     * @return the nodes matching name\n     */\n    public NodeList getAt(QName name) {\n        NodeList answer = new NodeList();\n        for (Object child : children()) {\n            if (child instanceof Node) {\n                Node childNode = (Node) child;\n                Object childNodeName = childNode.name();\n                if (name.matches(childNodeName)) {\n                    answer.add(childNode);\n                }\n            }\n        }\n        return answer;\n    }","commit_id":"f37a383ff8014a0f5a765f4c351ce2a72a05a55f","url":"https://github.com/apache/groovy"},{"original_method":"/**\n     * Provides lookup of elements by name.\n     *\n     * @param name the name of interest\n     * @return the nodes matching name\n     */\n    private NodeList getByName(String name) {\n        NodeList answer = new NodeList();\n        for (Iterator iter = children().iterator(); iter.hasNext();) {\n            Object child = iter.next();\n            if (child instanceof Node) {\n                Node childNode = (Node) child;\n                Object childNodeName = childNode.name();\n                if (childNodeName instanceof QName) {\n                    QName qn = (QName) childNodeName;\n                    if (qn.matches(name)) {\n                        answer.add(childNode);\n                    }\n                } else if (name.equals(childNodeName)) {\n                    answer.add(childNode);\n                }\n            }\n        }\n        return answer;\n    }","id":61622,"modified_method":"/**\n     * Provides lookup of elements by name.\n     *\n     * @param name the name of interest\n     * @return the nodes matching name\n     */\n    private NodeList getByName(String name) {\n        NodeList answer = new NodeList();\n        for (Object child : children()) {\n            if (child instanceof Node) {\n                Node childNode = (Node) child;\n                Object childNodeName = childNode.name();\n                if (childNodeName instanceof QName) {\n                    QName qn = (QName) childNodeName;\n                    if (qn.matches(name)) {\n                        answer.add(childNode);\n                    }\n                } else if (name.equals(childNodeName)) {\n                    answer.add(childNode);\n                }\n            }\n        }\n        return answer;\n    }","commit_id":"f37a383ff8014a0f5a765f4c351ce2a72a05a55f","url":"https://github.com/apache/groovy"},{"original_method":"private List breadthFirstRest() {\n        List answer = new NodeList();\n        List nextLevelChildren = getDirectChildren();\n        while (!nextLevelChildren.isEmpty()) {\n            List working = new NodeList(nextLevelChildren);\n            nextLevelChildren = new NodeList();\n            for (Iterator iter = working.iterator(); iter.hasNext();) {\n                Node childNode = (Node) iter.next();\n                answer.add(childNode);\n                List children = childNode.getDirectChildren();\n                nextLevelChildren.addAll(children);\n            }\n        }\n        return answer;\n    }","id":61623,"modified_method":"private List breadthFirstRest() {\n        List answer = new NodeList();\n        List nextLevelChildren = getDirectChildren();\n        while (!nextLevelChildren.isEmpty()) {\n            List<Node> working = new NodeList(nextLevelChildren);\n            nextLevelChildren = new NodeList();\n            for (Node childNode : working) {\n                answer.add(childNode);\n                List children = childNode.getDirectChildren();\n                nextLevelChildren.addAll(children);\n            }\n        }\n        return answer;\n    }","commit_id":"f37a383ff8014a0f5a765f4c351ce2a72a05a55f","url":"https://github.com/apache/groovy"},{"original_method":"/**\n   * Returns the root node.\n   * @return root node\n   */\n  public final ANode root() {\n    final ANode n = parent();\n    return n == null ? this : n.root();\n  }","id":61624,"modified_method":"/**\n   * Returns the root of a node (the topmost ancestor without parent node).\n   * @return root node\n   */\n  public final ANode root() {\n    final ANode p = parent();\n    return p == null ? this : p.root();\n  }","commit_id":"616500216f2530309372c62fdcef6d9b12649dd4","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\n  public BasicNodeIter iter(final QueryContext qc) throws QueryException {\n    final ANodeList list = new ANodeList().check();\n    add(ids(exprs[0].atomIter(qc, info)), list, checkRoot(toNode(arg(1, qc), qc)), false);\n    return list.iter();\n  }","id":61625,"modified_method":"@Override\n  public BasicNodeIter iter(final QueryContext qc) throws QueryException {\n    return ids(qc, false);\n  }","commit_id":"616500216f2530309372c62fdcef6d9b12649dd4","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\n  public BasicNodeIter iter(final QueryContext qc) throws QueryException {\n    final ANodeList list = new ANodeList().check();\n    add(ids(exprs[0].atomIter(qc, info)), list, checkRoot(toNode(arg(1, qc), qc)), false);\n    return list.iter();\n  }","id":61626,"modified_method":"@Override\n  public BasicNodeIter iter(final QueryContext qc) throws QueryException {\n    return ids(qc, false);\n  }","commit_id":"616500216f2530309372c62fdcef6d9b12649dd4","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\n  public BasicNodeIter iter(final QueryContext qc) throws QueryException {\n    final ANodeList list = new ANodeList().check();\n    add(ids(exprs[0].atomIter(qc, info)), list, checkRoot(toNode(arg(1, qc), qc)), true);\n    return list.iter();\n  }","id":61627,"modified_method":"@Override\n  public BasicNodeIter iter(final QueryContext qc) throws QueryException {\n    return ids(qc, true);\n  }","commit_id":"616500216f2530309372c62fdcef6d9b12649dd4","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Checks if the specified node has a document node as root.\n   * @param node input node\n   * @return specified node\n   * @throws QueryException query exception\n   */\n  ANode checkRoot(final ANode node) throws QueryException {\n    if(node instanceof FNode) {\n      ANode n = node;\n      while(n.type != NodeType.DOC) {\n        n = n.parent();\n        if(n == null) throw IDDOC.get(info);\n      }\n    }\n    return node;\n  }","id":61628,"modified_method":"/**\n   * Checks if the specified node has a document node as root.\n   * @param node input node\n   * @return root node\n   * @throws QueryException query exception\n   */\n  private ANode checkRoot(final ANode node) throws QueryException {\n    final ANode root = node.root();\n    if(root.type != NodeType.DOC) throw IDDOC.get(info);\n    return root;\n  }","commit_id":"616500216f2530309372c62fdcef6d9b12649dd4","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Extracts the ids from the specified iterator.\n   * @param iter iterator\n   * @return ids\n   * @throws QueryException query exception\n   */\n  final byte[][] ids(final Iter iter) throws QueryException {\n    final TokenList tl = new TokenList();\n    for(Item id; (id = iter.next()) != null;) {\n      for(final byte[] i : split(normalize(toToken(id)), ' ')) tl.add(i);\n    }\n    return tl.finish();\n  }","id":61629,"modified_method":"/**\n   * Extracts and returns all ids from the iterated strings.\n   * @param iter iterator\n   * @return id set\n   * @throws QueryException query exception\n   */\n  private TokenSet ids(final Iter iter) throws QueryException {\n    final TokenSet ts = new TokenSet();\n    for(Item ids; (ids = iter.next()) != null;) {\n      for(final byte[] id : split(normalize(toToken(ids)), ' ')) ts.put(id);\n    }\n    return ts;\n  }","commit_id":"616500216f2530309372c62fdcef6d9b12649dd4","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Adds nodes with the specified id.\n   * @param ids ids to be found\n   * @param idref idref flag\n   * @param list node cache\n   * @param node node\n   */\n  static void add(final byte[][] ids, final ANodeList list, final ANode node, final boolean idref) {\n    BasicNodeIter iter = node.attributes();\n    for(ANode at; (at = iter.next()) != null;) {\n      final byte[][] val = split(at.string(), ' ');\n      // [CG] XQuery: ID-IDREF Parsing\n      for(final byte[] id : ids) {\n        if(!eq(id, val)) continue;\n        final byte[] nm = lc(at.qname().string());\n        final boolean ii = contains(nm, ID), ir = contains(nm, IDREF);\n        if(idref ? ir : ii && !ir) list.add(idref ? at.finish() : node);\n      }\n    }\n    iter = node.children();\n    for(ANode att; (att = iter.next()) != null;) add(ids, list, att.finish(), idref);\n  }","id":61630,"modified_method":"/**\n   * Adds nodes with the specified id.\n   * @param ids ids to be found\n   * @param idref idref flag\n   * @param list node cache\n   * @param node current node\n   */\n  private static void add(final TokenSet ids, final ANodeList list, final ANode node,\n      final boolean idref) {\n\n    for(final ANode item : node.attributes()) {\n      final byte[] name = lc(item.name());\n      if(idref ? contains(name, IDREF) : contains(name, ID) && !contains(name, IDREF)) {\n        // id/idref found\n        for(final byte[] val : split(normalize(item.string()), ' ')) {\n          // correct value: add to results\n          if(ids.contains(val)) {\n            list.add(idref ? item.finish() : node);\n            break;\n          }\n        }\n      }\n    }\n    for(final ANode item : node.children()) {\n      add(ids, list, item.finish(), idref);\n    }\n  }","commit_id":"616500216f2530309372c62fdcef6d9b12649dd4","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n\t * Create the dialog\n\t * @param path \n\t */\n\tpublic ACLManager(String path) {\n\n\t\tsuper();\n\t\tthis.path = path;\n\t\t\n\t\t//window listener\n\t\tthis.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);\n\t\tchangedEntries = new ValuesChanged(false);\n\t\tthis.addWindowListener(new ChangedEntriesConfirm(this,changedEntries));\n\t\t\n\t\tlistsArray = new ArrayList<JList>();\n\t\t//listsArray.add(groupsList);\n\t\t\n\t\treadOnlyPrincipals = new SortedListModel();\n\t\treadWritePrincipals = new SortedListModel();\n\t\tuserPool = new SortedListModel();\n\t\t\n\t\treadOnlyPrincipalsDefault = new SortedListModel();\n\t\treadWritePrincipalsDefault = new SortedListModel();\n\t\tuserPoolDefault = new SortedListModel();\n\t\t\n\t\t//List Models for the List Objects\n\t\tuserPool.addAll(getUserList(path,null));\n\t\treadOnlyPrincipals.addAll(getUserList(path,\"read\"));\n\t\treadWritePrincipals.addAll(getUserList(path,\"write\"));\n\t\t\n\t\t//Default List Items\n\t\tuserPoolDefault.addAll(getUserList(path,null));\n\t\treadOnlyPrincipalsDefault.addAll(getUserList(path,\"read\"));\n\t\treadWritePrincipalsDefault.addAll(getUserList(path,\"write\"));\n\t\t\n\t\tsetBounds(100, 100, 615, 442);\n\t\tsetTitle(\"Manage Access Controls for \"+path);\n\t\tgetContentPane().setLayout(null);\n\t\t\t\t\n\t\tbuttonApply = new JButton();\n\t\tbuttonApply.addActionListener(this);\n\t\tbuttonApply.setBounds(73, 367, 141, 25);\n\t\tbuttonApply.setText(\"Apply Changes\");\n\t\tgetContentPane().add(buttonApply);\n\n\t\tbuttonDefault = new JButton();\n\t\tbuttonDefault.addActionListener(this);\n\t\tbuttonDefault.setBounds(261, 367, 123, 25);\n\t\tbuttonDefault.setText(\"Revert Default\");\n\t\tgetContentPane().add(buttonDefault);\n\n\t\tbuttonCancel = new JButton();\n\t\tbuttonCancel.addActionListener(this);\n\t\tbuttonCancel.setBounds(421, 367, 133, 25);\n\t\tbuttonCancel.setText(\"Cancel Changes\");\n\t\tgetContentPane().add(buttonCancel);\n\n\t\tfinal JScrollPane scrollPane_1 = new JScrollPane();\n\t\tscrollPane_1.setBounds(304, 209, 278, 106);\n\t\tgetContentPane().add(scrollPane_1);\n\t\t\n\t\treadWriteList = new JList(readWritePrincipals);\n\t\treadWriteList.setName(\"modifyList\");\n\t\tscrollPane_1.setViewportView(readWriteList);\n\t\treadWriteList.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);\n\t\treadWriteList.setBorder(new BevelBorder(BevelBorder.LOWERED));\n\t\t\n\t\tlistsArray.add(readWriteList);\n\t\t//readWriteList.setBounds(462, 70, 120, 240);\t\t\n\t\t//getContentPane().add(readWriteList);\n\n\t\t\n\t\tfinal JScrollPane scrollPane_2 = new JScrollPane();\n\t\tscrollPane_2.setBounds(8, 70, 169, 255);\n\t\tgetContentPane().add(scrollPane_2);\n\t\t\n\t\tuserList = new JList(userPool);\n\t\tuserList.setName(\"userList\");\n\t\tscrollPane_2.setViewportView(userList);\n\t\tuserList.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);\n\t\tuserList.setBorder(new BevelBorder(BevelBorder.LOWERED));\n\t\t\n\t\tlistsArray.add(userList);\n//\t\tuserList.setBounds(233, 70, 120, 240);\n//\t\tgetContentPane().add(userList);\n\n\t\tbuttonAssignReadOnly = new JButton();\n\t\tbuttonAssignReadOnly.addActionListener(this);\n\t\tbuttonAssignReadOnly.setMargin(new Insets(2, 2, 2, 2));\n\t\tbuttonAssignReadOnly.setIconTextGap(2);\n\t\tbuttonAssignReadOnly.setBounds(194, 69, 79, 25);\n\t\tbuttonAssignReadOnly.setText(\"assign ->\");\n\t\tgetContentPane().add(buttonAssignReadOnly);\n\n\t\tbuttonRemoveReadOnly = new JButton();\n\t\tbuttonRemoveReadOnly.addActionListener(this);\n\t\tbuttonRemoveReadOnly.setMargin(new Insets(2, 2, 2, 2));\n\t\tbuttonRemoveReadOnly.setBounds(194, 116, 79, 25);\n\t\tbuttonRemoveReadOnly.setText(\"<- remove\");\n\t\tgetContentPane().add(buttonRemoveReadOnly);\n\n\t\tbuttonAssingReadWrite = new JButton();\n\t\tbuttonAssingReadWrite.addActionListener(this);\n\t\tbuttonAssingReadWrite.setMargin(new Insets(2, 2, 2, 2));\n\t\tbuttonAssingReadWrite.setBounds(194, 225, 79, 25);\n\t\tbuttonAssingReadWrite.setText(\"assign ->\");\n\t\tgetContentPane().add(buttonAssingReadWrite);\n\n\t\tbuttonRemoveReadWrite = new JButton();\n\t\tbuttonRemoveReadWrite.addActionListener(this);\n\t\tbuttonRemoveReadWrite.setMargin(new Insets(2, 2, 2, 2));\n\t\tbuttonRemoveReadWrite.setBounds(194, 291, 79, 25);\n\t\tbuttonRemoveReadWrite.setText(\"<- remove\");\n\t\tgetContentPane().add(buttonRemoveReadWrite);\n\n\t\tfinal JLabel userAndGroupLabel = new JLabel();\n\t\tuserAndGroupLabel.setBounds(0, 0, 600, 15);\n\t\tuserAndGroupLabel.setText(\"User and Group Permissions for \" + path);\n\t\tgetContentPane().add(userAndGroupLabel);\n\n\t\tfinal JLabel usersLabel = new JLabel();\n\t\tusersLabel.setBounds(8, 44, 123, 20);\n\t\tusersLabel.setText(\"Users/Groups\");\n\t\tgetContentPane().add(usersLabel);\n\n\t\tfinal JLabel modifyPermissionsLabel = new JLabel();\n\t\tmodifyPermissionsLabel.setBounds(304, 321, 132, 20);\n\t\tmodifyPermissionsLabel.setText(\"Modify Permissions\");\n\t\tgetContentPane().add(modifyPermissionsLabel);\n\n\t\tfinal JSeparator separator_3 = new JSeparator();\n\t\tseparator_3.setBounds(0, 20, 576, 20);\n\t\tgetContentPane().add(separator_3);\n\n\t\tfinal JLabel viewPermissionsLabel = new JLabel();\n\t\tviewPermissionsLabel.setBounds(304, 44, 122, 20);\n\t\tviewPermissionsLabel.setText(\"View Permissions\");\n\t\tgetContentPane().add(viewPermissionsLabel);\n\t\t\n\t\tfinal JScrollPane scrollPane = new JScrollPane();\n\t\tscrollPane.setBounds(304, 70, 278, 106);\n\t\tgetContentPane().add(scrollPane);\n\n\t\treadOnlyList = new JList(readOnlyPrincipals);\n\t\treadOnlyList.setName(\"viewList\");\n\t\tscrollPane.setViewportView(readOnlyList);\n\t\treadOnlyList.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);\n\t\treadOnlyList.setBorder(new BevelBorder(BevelBorder.LOWERED));\n\n\t\tlistsArray.add(readOnlyList);\n\t\t\n\t\tbuttonModify2View = new JButton();\n\t\tbuttonModify2View.addActionListener(this);\n\t\tbuttonModify2View.setText(\"^\");\n\t\tbuttonModify2View.setBounds(349, 178, 55, 25);\n\t\tgetContentPane().add(buttonModify2View);\n\n\t\tbuttonView2Modify = new JButton();\n\t\tbuttonView2Modify.addActionListener(this);\n\t\tbuttonView2Modify.setText(\"v\");\n\t\tbuttonView2Modify.setBounds(479, 178, 49, 25);\n\t\tgetContentPane().add(buttonView2Modify);\n\t\t\n\t\treadOnlyList.addMouseListener(new ListMouseListener(listsArray));\n\t\treadWriteList.addMouseListener(new ListMouseListener(listsArray));\n\t\tuserList.addMouseListener(new ListMouseListener(listsArray));\n\t}","id":61631,"modified_method":"/**\n\t * Create the dialog\n\t * @param path \n\t */\n\tpublic ACLManager(String path) {\n\n\t\tsuper();\n\t\t//window listener\n\t\tthis.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);\n\t\tchangedEntries = new ValuesChanged(false);\n\t\tthis.addWindowListener(new ChangedEntriesConfirm(this,changedEntries));\n\t\t\n\t\tlistsArray = new ArrayList<JList>();\n\t\t//listsArray.add(groupsList);\n\t\t\n\t\treadOnlyPrincipals = new SortedListModel();\n\t\treadWritePrincipals = new SortedListModel();\n\t\tuserPool = new SortedListModel();\n\t\t\n\t\treadOnlyPrincipalsDefault = new SortedListModel();\n\t\treadWritePrincipalsDefault = new SortedListModel();\n\t\tuserPoolDefault = new SortedListModel();\n\t\t\n\t\t//List Models for the List Objects\n\t\tuserPool.addAll(getUserList(path,null));\n\t\treadOnlyPrincipals.addAll(getUserList(path,\"read\"));\n\t\treadWritePrincipals.addAll(getUserList(path,\"write\"));\n\t\t\n\t\t//Default List Items\n\t\tuserPoolDefault.addAll(getUserList(path,null));\n\t\treadOnlyPrincipalsDefault.addAll(getUserList(path,\"read\"));\n\t\treadWritePrincipalsDefault.addAll(getUserList(path,\"write\"));\n\t\t\n\t\tsetBounds(100, 100, 615, 442);\n\t\tsetTitle(\"Manage Access Controls for \"+path);\n\t\tgetContentPane().setLayout(null);\n\t\t\t\t\n\t\tbuttonApply = new JButton();\n\t\tbuttonApply.addActionListener(this);\n\t\tbuttonApply.setBounds(73, 367, 141, 25);\n\t\tbuttonApply.setText(\"Apply Changes\");\n\t\tgetContentPane().add(buttonApply);\n\n\t\tbuttonDefault = new JButton();\n\t\tbuttonDefault.addActionListener(this);\n\t\tbuttonDefault.setBounds(261, 367, 123, 25);\n\t\tbuttonDefault.setText(\"Revert Default\");\n\t\tgetContentPane().add(buttonDefault);\n\n\t\tbuttonCancel = new JButton();\n\t\tbuttonCancel.addActionListener(this);\n\t\tbuttonCancel.setBounds(421, 367, 133, 25);\n\t\tbuttonCancel.setText(\"Cancel Changes\");\n\t\tgetContentPane().add(buttonCancel);\n\n\t\tfinal JScrollPane scrollPane_1 = new JScrollPane();\n\t\tscrollPane_1.setBounds(304, 209, 278, 106);\n\t\tgetContentPane().add(scrollPane_1);\n\t\t\n\t\treadWriteList = new JList(readWritePrincipals);\n\t\treadWriteList.setName(\"modifyList\");\n\t\tscrollPane_1.setViewportView(readWriteList);\n\t\treadWriteList.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);\n\t\treadWriteList.setBorder(new BevelBorder(BevelBorder.LOWERED));\n\t\t\n\t\tlistsArray.add(readWriteList);\n\t\t//readWriteList.setBounds(462, 70, 120, 240);\t\t\n\t\t//getContentPane().add(readWriteList);\n\n\t\t\n\t\tfinal JScrollPane scrollPane_2 = new JScrollPane();\n\t\tscrollPane_2.setBounds(8, 70, 169, 255);\n\t\tgetContentPane().add(scrollPane_2);\n\t\t\n\t\tuserList = new JList(userPool);\n\t\tuserList.setName(\"userList\");\n\t\tscrollPane_2.setViewportView(userList);\n\t\tuserList.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);\n\t\tuserList.setBorder(new BevelBorder(BevelBorder.LOWERED));\n\t\t\n\t\tlistsArray.add(userList);\n//\t\tuserList.setBounds(233, 70, 120, 240);\n//\t\tgetContentPane().add(userList);\n\n\t\tbuttonAssignReadOnly = new JButton();\n\t\tbuttonAssignReadOnly.addActionListener(this);\n\t\tbuttonAssignReadOnly.setMargin(new Insets(2, 2, 2, 2));\n\t\tbuttonAssignReadOnly.setIconTextGap(2);\n\t\tbuttonAssignReadOnly.setBounds(194, 69, 79, 25);\n\t\tbuttonAssignReadOnly.setText(\"assign ->\");\n\t\tgetContentPane().add(buttonAssignReadOnly);\n\n\t\tbuttonRemoveReadOnly = new JButton();\n\t\tbuttonRemoveReadOnly.addActionListener(this);\n\t\tbuttonRemoveReadOnly.setMargin(new Insets(2, 2, 2, 2));\n\t\tbuttonRemoveReadOnly.setBounds(194, 116, 79, 25);\n\t\tbuttonRemoveReadOnly.setText(\"<- remove\");\n\t\tgetContentPane().add(buttonRemoveReadOnly);\n\n\t\tbuttonAssingReadWrite = new JButton();\n\t\tbuttonAssingReadWrite.addActionListener(this);\n\t\tbuttonAssingReadWrite.setMargin(new Insets(2, 2, 2, 2));\n\t\tbuttonAssingReadWrite.setBounds(194, 225, 79, 25);\n\t\tbuttonAssingReadWrite.setText(\"assign ->\");\n\t\tgetContentPane().add(buttonAssingReadWrite);\n\n\t\tbuttonRemoveReadWrite = new JButton();\n\t\tbuttonRemoveReadWrite.addActionListener(this);\n\t\tbuttonRemoveReadWrite.setMargin(new Insets(2, 2, 2, 2));\n\t\tbuttonRemoveReadWrite.setBounds(194, 291, 79, 25);\n\t\tbuttonRemoveReadWrite.setText(\"<- remove\");\n\t\tgetContentPane().add(buttonRemoveReadWrite);\n\n\t\tfinal JLabel userAndGroupLabel = new JLabel();\n\t\tuserAndGroupLabel.setBounds(0, 0, 600, 15);\n\t\tuserAndGroupLabel.setText(\"User and Group Permissions for \" + path);\n\t\tgetContentPane().add(userAndGroupLabel);\n\n\t\tfinal JLabel usersLabel = new JLabel();\n\t\tusersLabel.setBounds(8, 44, 123, 20);\n\t\tusersLabel.setText(\"Users/Groups\");\n\t\tgetContentPane().add(usersLabel);\n\n\t\tfinal JLabel modifyPermissionsLabel = new JLabel();\n\t\tmodifyPermissionsLabel.setBounds(304, 321, 132, 20);\n\t\tmodifyPermissionsLabel.setText(\"Modify Permissions\");\n\t\tgetContentPane().add(modifyPermissionsLabel);\n\n\t\tfinal JSeparator separator_3 = new JSeparator();\n\t\tseparator_3.setBounds(0, 20, 576, 20);\n\t\tgetContentPane().add(separator_3);\n\n\t\tfinal JLabel viewPermissionsLabel = new JLabel();\n\t\tviewPermissionsLabel.setBounds(304, 44, 122, 20);\n\t\tviewPermissionsLabel.setText(\"View Permissions\");\n\t\tgetContentPane().add(viewPermissionsLabel);\n\t\t\n\t\tfinal JScrollPane scrollPane = new JScrollPane();\n\t\tscrollPane.setBounds(304, 70, 278, 106);\n\t\tgetContentPane().add(scrollPane);\n\n\t\treadOnlyList = new JList(readOnlyPrincipals);\n\t\treadOnlyList.setName(\"viewList\");\n\t\tscrollPane.setViewportView(readOnlyList);\n\t\treadOnlyList.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);\n\t\treadOnlyList.setBorder(new BevelBorder(BevelBorder.LOWERED));\n\n\t\tlistsArray.add(readOnlyList);\n\t\t\n\t\tbuttonModify2View = new JButton();\n\t\tbuttonModify2View.addActionListener(this);\n\t\tbuttonModify2View.setText(\"^\");\n\t\tbuttonModify2View.setBounds(349, 178, 55, 25);\n\t\tgetContentPane().add(buttonModify2View);\n\n\t\tbuttonView2Modify = new JButton();\n\t\tbuttonView2Modify.addActionListener(this);\n\t\tbuttonView2Modify.setText(\"v\");\n\t\tbuttonView2Modify.setBounds(479, 178, 49, 25);\n\t\tgetContentPane().add(buttonView2Modify);\n\t\t\n\t\treadOnlyList.addMouseListener(new ListMouseListener(listsArray));\n\t\treadWriteList.addMouseListener(new ListMouseListener(listsArray));\n\t\tuserList.addMouseListener(new ListMouseListener(listsArray));\n\t}","commit_id":"25d4786c07f2dafed2fbf72b0e8c5a468e561125","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"private void addTreeNodes(ArrayList<ContentName> n, ContentName prefix) {\n\t\t// DefaultMutableTreeNode top = new DefaultMutableTreeNode(\n\t\t// new IconData(ICON_COMPUTER, null, \"parc.com/files\"));\n\n\t\tfinal DefaultMutableTreeNode parentNode = getTreeNode(prefix);\n\t\tif(parentNode == null){\n\t\t\tSystem.out.println(\"PARENT NODE IS NULL!!!\"+ prefix.toString());\n\t\t\tSystem.out.println(\"can't add anything to a null parent...  cancel prefix and return\");\n\t\t\t_nameEnumerator.cancelPrefix(prefix);\n\t\t\treturn;\n\t\t}\n\n\t\t\n\t\t// while we are getting things, wait for stuff to happen\n\t\tSystem.out.println(\"Getting Content Names\");\n\t\tDefaultMutableTreeNode temp = null;\n\t\tboolean addToParent = true;\n\t\tDefaultMutableTreeNode toRemove = null;\n\t\tfor (ContentName cn : n) {\n\t\t\taddToParent = true;\n\t\t\tif(parentNode.getChildCount()>0){\n\t\t\t\tfor(Enumeration e = parentNode.children(); e.hasMoreElements();){\n\t\t\t\t\t//check if this name is already in there!\n\t\t\t\t\ttemp = (DefaultMutableTreeNode)e.nextElement();\n\t\t\t\t\t\n\t\t\t\t\tif(temp.getUserObject() instanceof Boolean){\n\t\t\t\t\t\ttoRemove = temp;\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tif(temp.getUserObject() instanceof IconData){\n\t\t\t\t\t\t\tIconData id = (IconData)temp.getUserObject();\n\t\t\t\t\t\t\tSystem.out.println(\"check names: \"+((Name)(id.m_data)).toString()+\" \"+cn.toString().substring(1));\n\t\t\t\t\t\t\tif(((Name)(id.m_data)).toString().equals(cn.toString().substring(1))){\n\t\t\t\t\t\t\t//if(temp.toString().equals(cn.toString().substring(1))){\n\t\t\t\t\t\t\t\taddToParent = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(toRemove!=null){\n\t\t\t\t\tm_model.removeNodeFromParent(toRemove);\n\t\t\t\t\ttoRemove = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfinal DefaultMutableTreeNode node;\n\t\t\tif(addToParent){\n\t\t\t\t//name wasn't there, don't add again\n\t\t\t\tSystem.out.println(\"added as child: \"+cn.toString());\n\t\t\t\tif (((cn.toString()).split(\"\\\\.\")).length > 1) {\n\t\t\t\n\t\t\t\t\tnode = new DefaultMutableTreeNode(new IconData(ICON_DOCUMENT,\n\t\t\t\t\t\t\tnull, new Name(cn.toString().substring(1), prefix,false)));\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tnode = new DefaultMutableTreeNode(new IconData(ICON_FOLDER,\n\t\t\t\t\t\t\tnull, new Name(cn.toString().substring(1), prefix,true)));\n\t\t\t\t\t//This is the \"Retrieving Data\" node (gets rendered in IconCell Renderer\n\t\t\t\t\t//node.add(new DefaultMutableTreeNode(new Boolean(true)));\n\t\t\t\t}\n\t\t\t\t\n\t\t        javax.swing.SwingUtilities.invokeLater(new Runnable() {\n\t\t            public void run() {\n\t\t\t\t\t\tm_model.insertNodeInto(node, parentNode, parentNode.getChildCount());\t\t           \n\t\t            }\n\t\t        });\n\n\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(\"the parent node now has \"+parentNode.getChildCount()+\" children\");\n\t\tSystem.out.println(\"Done Getting Content Names\");\n\t}","id":61632,"modified_method":"@SuppressWarnings(\"unchecked\")\n\tprivate void addTreeNodes(ArrayList<ContentName> n, ContentName prefix) {\n\t\t// DefaultMutableTreeNode top = new DefaultMutableTreeNode(\n\t\t// new IconData(ICON_COMPUTER, null, \"parc.com/files\"));\n\n\t\tfinal DefaultMutableTreeNode parentNode = getTreeNode(prefix);\n\t\tif(parentNode == null){\n\t\t\tSystem.out.println(\"PARENT NODE IS NULL!!!\"+ prefix.toString());\n\t\t\tSystem.out.println(\"can't add anything to a null parent...  cancel prefix and return\");\n\t\t\t_nameEnumerator.cancelPrefix(prefix);\n\t\t\treturn;\n\t\t}\n\n\t\t\n\t\t// while we are getting things, wait for stuff to happen\n\t\tSystem.out.println(\"Getting Content Names\");\n\t\tboolean addToParent = true;\n\t\tDefaultMutableTreeNode toRemove = null;\n\t\tfor (ContentName cn : n) {\n\t\t\taddToParent = true;\n\t\t\tif(parentNode.getChildCount()>0){\n\t\t\t\tfor(DefaultMutableTreeNode temp : java.util.Collections.list((Enumeration<DefaultMutableTreeNode>)parentNode.children())){\n\t\t\t\t\t//check if this name is already in there!\n\t\t\t\t\tif(temp.getUserObject() instanceof Boolean){\n\t\t\t\t\t\ttoRemove = temp;\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tif(temp.getUserObject() instanceof IconData){\n\t\t\t\t\t\t\tIconData id = (IconData)temp.getUserObject();\n\t\t\t\t\t\t\tSystem.out.println(\"check names: \"+((Name)(id.m_data)).toString()+\" \"+cn.toString().substring(1));\n\t\t\t\t\t\t\tif(((Name)(id.m_data)).toString().equals(cn.toString().substring(1))){\n\t\t\t\t\t\t\t//if(temp.toString().equals(cn.toString().substring(1))){\n\t\t\t\t\t\t\t\taddToParent = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(toRemove!=null){\n\t\t\t\t\tm_model.removeNodeFromParent(toRemove);\n\t\t\t\t\ttoRemove = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfinal DefaultMutableTreeNode node;\n\t\t\tif(addToParent){\n\t\t\t\t//name wasn't there, don't add again\n\t\t\t\tSystem.out.println(\"added as child: \"+cn.toString());\n\t\t\t\tif (((cn.toString()).split(\"\\\\.\")).length > 1) {\n\t\t\t\n\t\t\t\t\tnode = new DefaultMutableTreeNode(new IconData(ICON_DOCUMENT,\n\t\t\t\t\t\t\tnull, new Name(cn.toString().substring(1), prefix,false)));\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tnode = new DefaultMutableTreeNode(new IconData(ICON_FOLDER,\n\t\t\t\t\t\t\tnull, new Name(cn.toString().substring(1), prefix,true)));\n\t\t\t\t\t//This is the \"Retrieving Data\" node (gets rendered in IconCell Renderer\n\t\t\t\t\t//node.add(new DefaultMutableTreeNode(new Boolean(true)));\n\t\t\t\t}\n\t\t\t\t\n\t\t        javax.swing.SwingUtilities.invokeLater(new Runnable() {\n\t\t            public void run() {\n\t\t\t\t\t\tm_model.insertNodeInto(node, parentNode, parentNode.getChildCount());\t\t           \n\t\t            }\n\t\t        });\n\n\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(\"the parent node now has \"+parentNode.getChildCount()+\" children\");\n\t\tSystem.out.println(\"Done Getting Content Names\");\n\t}","commit_id":"25d4786c07f2dafed2fbf72b0e8c5a468e561125","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"private DefaultMutableTreeNode find(TreePath parent, int depth, String[] names){\n\t\tDefaultMutableTreeNode node = (DefaultMutableTreeNode)parent.getLastPathComponent();\n\t\tString nodeName = node.toString();\n\t\tSystem.out.println(\"check nodeName: \"+nodeName);\n\t\tSystem.out.println(\"names[depth] \"+ names[depth]);\n\t\t\n\t\tif(names[depth].equals(nodeName)){\n\t\t\tSystem.out.println(\"we have a match!\");\n\t\t\tif(depth == names.length - 1){\n\t\t\t\tSystem.out.println(\"we are at the right depth! returning this node!\");\n\t\t\t\treturn node;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tSystem.out.println(\"need to keep digging...\");\n\t\t\t\tif(node.getChildCount() >= 0){\n\t\t\t\t\tfor(Enumeration e = node.children(); e.hasMoreElements();){\n\t\t\t\t\t\tDefaultMutableTreeNode n = (DefaultMutableTreeNode)e.nextElement();\n\t\t\t\t\t\tTreePath path = parent.pathByAddingChild(n);\n\t\t\t\t\t\tDefaultMutableTreeNode result = find(path, depth+1, names);\n\t\t\t\t\t\tif(result!=null)\n\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tSystem.out.println(\"result was null...  :(\");\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"not a match...\");\n\t\t}\n\t\t\n\t\t\n\t\treturn null;\n\t}","id":61633,"modified_method":"@SuppressWarnings(\"unchecked\")\n\tprivate DefaultMutableTreeNode find(TreePath parent, int depth, String[] names){\n\t\tDefaultMutableTreeNode node = (DefaultMutableTreeNode)parent.getLastPathComponent();\n\t\tString nodeName = node.toString();\n\t\tSystem.out.println(\"check nodeName: \"+nodeName);\n\t\tSystem.out.println(\"names[depth] \"+ names[depth]);\n\t\t\n\t\tif(names[depth].equals(nodeName)){\n\t\t\tSystem.out.println(\"we have a match!\");\n\t\t\tif(depth == names.length - 1){\n\t\t\t\tSystem.out.println(\"we are at the right depth! returning this node!\");\n\t\t\t\treturn node;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tSystem.out.println(\"need to keep digging...\");\n\t\t\t\tif(node.getChildCount() >= 0){\n\t\t\t\t\tfor(DefaultMutableTreeNode n : java.util.Collections.list((Enumeration<DefaultMutableTreeNode>)node.children()) ){\n\t\t\t\t\t\tTreePath path = parent.pathByAddingChild(n);\n\t\t\t\t\t\tDefaultMutableTreeNode result = find(path, depth+1, names);\n\t\t\t\t\t\tif(result!=null)\n\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tSystem.out.println(\"result was null...  :(\");\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tSystem.out.println(\"not a match...\");\n\t\t}\n\t\t\n\t\t\n\t\treturn null;\n\t}","commit_id":"25d4786c07f2dafed2fbf72b0e8c5a468e561125","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"DefaultMutableTreeNode getTreeNode(ContentName ccnContentName){\n\t\tDefaultMutableTreeNode node = null;\n\t\t\n\t\tSystem.out.println(\"handling returned names!!! prefix = \"+ccnContentName.toString());\n\t\tTreePath prefixPath = new TreePath(usableRoot);\n\t\t\n\t\tSystem.out.println(\"prefix path: \"+prefixPath.toString());\n\t\tArrayList<byte[]> nbytes = ccnContentName.components();\n\t\tString[] names = new String[nbytes.size()];\n\t\tint ind = 0;\n\t\tfor(byte[] n: nbytes){\n\t\t\tnames[ind] = new String(n);\n\t\t\tind++;\n\t\t}\n\t\tDefaultMutableTreeNode p = find(prefixPath, 1, names);\n\t\t\n\t\treturn p;\n\t}","id":61634,"modified_method":"DefaultMutableTreeNode getTreeNode(ContentName ccnContentName){\n\t\tSystem.out.println(\"handling returned names!!! prefix = \"+ccnContentName.toString());\n\t\tTreePath prefixPath = new TreePath(usableRoot);\n\t\t\n\t\tSystem.out.println(\"prefix path: \"+prefixPath.toString());\n\t\tArrayList<byte[]> nbytes = ccnContentName.components();\n\t\tString[] names = new String[nbytes.size()];\n\t\tint ind = 0;\n\t\tfor(byte[] n: nbytes){\n\t\t\tnames[ind] = new String(n);\n\t\t\tind++;\n\t\t}\n\t\tDefaultMutableTreeNode p = find(prefixPath, 1, names);\n\t\t\n\t\treturn p;\n\t}","commit_id":"25d4786c07f2dafed2fbf72b0e8c5a468e561125","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"public boolean expand(DefaultMutableTreeNode parent) {\n\t\tDefaultMutableTreeNode flag = (DefaultMutableTreeNode) parent\n\t\t\t\t.getFirstChild();\n\t\tif (flag == null) // No flag\n\t\t\treturn false;\n\t\tObject obj = flag.getUserObject();\n\t\tif (!(obj instanceof Boolean))\n\t\t\treturn false; // Already expanded\n\n\t\tparent.removeAllChildren(); // Remove Flag\n\n\t\tFile[] files = listFiles();\n\t\tif (files == null)\n\t\t\treturn true;\n\n\t\tVector v = new Vector();\n\n\t\tfor (int k = 0; k < files.length; k++) {\n\t\t\tFile f = files[k];\n\t\t\tif (!(f.isDirectory()))\n\t\t\t\tcontinue;\n\n\t\t\tFileNode newNode = new FileNode(f);\n\n\t\t\tboolean isAdded = false;\n\t\t\tfor (int i = 0; i < v.size(); i++) {\n\t\t\t\tFileNode nd = (FileNode) v.elementAt(i);\n\t\t\t\tif (newNode.compareTo(nd) < 0) {\n\t\t\t\t\tv.insertElementAt(newNode, i);\n\t\t\t\t\tisAdded = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!isAdded)\n\t\t\t\tv.addElement(newNode);\n\t\t}\n\n\t\tfor (int i = 0; i < v.size(); i++) {\n\t\t\tFileNode nd = (FileNode) v.elementAt(i);\n\t\t\tIconData idata = new IconData(ContainerGUI.ICON_FOLDER,\n\t\t\t\t\tContainerGUI.ICON_EXPANDEDFOLDER, nd);\n\t\t\tDefaultMutableTreeNode node = new DefaultMutableTreeNode(idata);\n\t\t\tparent.add(node);\n\n\t\t\tif (nd.hasSubDirs())\n\t\t\t\tnode.add(new DefaultMutableTreeNode(new Boolean(true)));\n\t\t}\n\n\t\treturn true;\n\t}","id":61635,"modified_method":"public boolean expand(DefaultMutableTreeNode parent) {\n\t\tDefaultMutableTreeNode flag = (DefaultMutableTreeNode) parent\n\t\t\t\t.getFirstChild();\n\t\tif (flag == null) // No flag\n\t\t\treturn false;\n\t\tObject obj = flag.getUserObject();\n\t\tif (!(obj instanceof Boolean))\n\t\t\treturn false; // Already expanded\n\n\t\tparent.removeAllChildren(); // Remove Flag\n\n\t\tFile[] files = listFiles();\n\t\tif (files == null)\n\t\t\treturn true;\n\n\t\tVector<FileNode> v = new Vector<FileNode>();\n\n\t\tfor (int k = 0; k < files.length; k++) {\n\t\t\tFile f = files[k];\n\t\t\tif (!(f.isDirectory()))\n\t\t\t\tcontinue;\n\n\t\t\tFileNode newNode = new FileNode(f);\n\n\t\t\tboolean isAdded = false;\n\t\t\tfor (int i = 0; i < v.size(); i++) {\n\t\t\t\tFileNode nd = (FileNode) v.elementAt(i);\n\t\t\t\tif (newNode.compareTo(nd) < 0) {\n\t\t\t\t\tv.insertElementAt(newNode, i);\n\t\t\t\t\tisAdded = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!isAdded)\n\t\t\t\tv.addElement(newNode);\n\t\t}\n\n\t\tfor (int i = 0; i < v.size(); i++) {\n\t\t\tFileNode nd = (FileNode) v.elementAt(i);\n\t\t\tIconData idata = new IconData(ContainerGUI.ICON_FOLDER,\n\t\t\t\t\tContainerGUI.ICON_EXPANDEDFOLDER, nd);\n\t\t\tDefaultMutableTreeNode node = new DefaultMutableTreeNode(idata);\n\t\t\tparent.add(node);\n\n\t\t\tif (nd.hasSubDirs())\n\t\t\t\tnode.add(new DefaultMutableTreeNode(new Boolean(true)));\n\t\t}\n\n\t\treturn true;\n\t}","commit_id":"25d4786c07f2dafed2fbf72b0e8c5a468e561125","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"/**\n\t * Create the dialog\n\t * @param frame \n\t * @param path \n\t */\n\tpublic GroupManager(String path) {\n\t\tsuper();\n\t\tthis.path = path;\n\t\t\n\t\t//window listener\n\t\tthis.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);\n\t\tchangedEntries = new ValuesChanged(false);\n\t\tthis.addWindowListener(new ChangedEntriesConfirm(this,changedEntries));\n\t\t\n\t\tgroupMembers = new Hashtable<String, String[]>();\n\t\tgroupMembersDefault = new Hashtable<String, String[]>();\n\t\t\t\t\n\t\tpopulateFakeData(path);\n\t\t\t\t\n\t\tlistsArray = new ArrayList<JList>();\n\n\t\tsetTitle(\"Manage Group Members\");\n\t\tgetContentPane().setLayout(null);\n\t\tsetBounds(100, 100, 523, 439);\n\n\t\tapplyChangesButton = new JButton();\n\t\tapplyChangesButton.addActionListener(this);\n\t\tapplyChangesButton.setMargin(new Insets(2, 2, 2, 2));\n\t\tapplyChangesButton.setBounds(47, 362, 112, 25);\n\t\tapplyChangesButton.setText(\"Apply Changes\");\n\t\tgetContentPane().add(applyChangesButton);\n\n\t\trevertChangesButton = new JButton();\n\t\trevertChangesButton.addActionListener(this);\n\t\trevertChangesButton.setMargin(new Insets(2, 2, 2, 2));\n\t\trevertChangesButton.setText(\"Revert Changes\");\n\t\trevertChangesButton.setBounds(218, 362, 112, 25);\n\t\tgetContentPane().add(revertChangesButton);\n\n\t\tcancelChangesButton = new JButton();\n\t\tcancelChangesButton.addActionListener(this);\n\t\tcancelChangesButton.setMargin(new Insets(2, 2, 2, 2));\n\t\tcancelChangesButton.setText(\"Cancel Changes\");\n\t\tcancelChangesButton.setBounds(363, 362, 112, 25);\n\t\tgetContentPane().add(cancelChangesButton);\n\n\t\taddButton = new JButton();\n\t\taddButton.addActionListener(this);\n\t\taddButton.setText(\"add ->\");\n\t\taddButton.setBounds(205, 146, 112, 25);\n\t\tgetContentPane().add(addButton);\n\n\t\tremoveButton = new JButton();\n\t\tremoveButton.addActionListener(this);\n\t\tremoveButton.setText(\"<- remove\");\n\t\tremoveButton.setBounds(205, 303, 112, 25);\n\t\tgetContentPane().add(removeButton);\n\n\t\tfinal JLabel groupMembersLabel = new JLabel();\n\t\tgroupMembersLabel.setAutoscrolls(true);\n\t\tgroupMembersLabel.setText(\"List of Users\");\n\t\tgroupMembersLabel.setBounds(47, 111, 98, 15);\n\t\tgetContentPane().add(groupMembersLabel);\n\n\t\tusersLabel = new JLabel();\n\t\tusersLabel.setAutoscrolls(true);\n\t\tusersLabel.setText(\"Group Members\");\n\t\tusersLabel.setBounds(342, 101, 153, 34);\n\t\tgetContentPane().add(usersLabel);\n\t\t\n\t\tfinal JScrollPane scrollPaneUsers = new JScrollPane();\n\t\tscrollPaneUsers.setBounds(45, 147, 120, 181);\n\t\tgetContentPane().add(scrollPaneUsers);\n\n\t\tscrollPaneGroupMembers = new JScrollPane();\n\t\tscrollPaneGroupMembers.setBounds(348, 147, 127, 181);\n\t\tgetContentPane().add(scrollPaneGroupMembers);\n\n\t\tfinal JScrollPane scrollPaneGroups = new JScrollPane();\n\t\tscrollPaneGroups.setBounds(76, 37, 388, 58);\n\t\tgetContentPane().add(scrollPaneGroups);\n\n\t\tusersList = new JList(userPool);\n\t\tusersList.setName(\"users\");\n\t\tscrollPaneUsers.setViewportView(usersList);\n\t\tusersList.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);\n\t\tusersList.setBorder(new BevelBorder(BevelBorder.LOWERED));\n\n\t\tlistsArray.add(usersList);\t\t\n\n\t\tgroupMembersList = new JList(groupsMembersModel);\n\t\tgroupMembersList.setName(\"groupMembers\");\n\t\tscrollPaneGroupMembers.setViewportView(groupMembersList);\n\t\tgroupMembersList.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);\n\t\tgroupMembersList.setBorder(new BevelBorder(BevelBorder.LOWERED));\n\t\t\n\t\t//initially we don't have any data in it, show the user it is empty\n\t\tgroupMembersList.setEnabled(false);\n\t\tgroupMembersList.setBackground(Color.gray);\n\t\tlistsArray.add(groupMembersList);\n\n\n\t\t//single group selection for now\n\t\tgroupsList = new JList(groupsModel);\n\t\tgroupsList.setName(\"groups\");\n\t\tscrollPaneGroups.setViewportView(groupsList);\n\t\tgroupsList.setBorder(new BevelBorder(BevelBorder.LOWERED));\n\t\t\n\n\t\tgroupsList.addListSelectionListener(new GroupListSelectionListener(groupMembersList,groupMembers,groupsMembersModel,usersLabel));\n\n\n\t\tgroupMembersList.addMouseListener(new ListMouseListener(listsArray));\n\t\tgroupsList.addMouseListener(new ListMouseListener(listsArray));\n\t\tusersList.addMouseListener(new ListMouseListener(listsArray));\n\t\t\n\t\tfinal JLabel groupsLabel = new JLabel();\n\t\tgroupsLabel.setText(\"Groups\");\n\t\tgroupsLabel.setBounds(76, 10, 69, 15);\n\t\tgetContentPane().add(groupsLabel);\n\n\t\t\t}","id":61636,"modified_method":"/**\n\t * Create the dialog\n\t * @param frame \n\t * @param path \n\t */\n\tpublic GroupManager(String path) {\n\t\tsuper();\n\t\t//window listener\n\t\tthis.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);\n\t\tchangedEntries = new ValuesChanged(false);\n\t\tthis.addWindowListener(new ChangedEntriesConfirm(this,changedEntries));\n\t\t\n\t\tgroupMembers = new Hashtable<String, String[]>();\n\t\tgroupMembersDefault = new Hashtable<String, String[]>();\n\t\t\t\t\n\t\tpopulateFakeData(path);\n\t\t\t\t\n\t\tlistsArray = new ArrayList<JList>();\n\n\t\tsetTitle(\"Manage Group Members\");\n\t\tgetContentPane().setLayout(null);\n\t\tsetBounds(100, 100, 523, 439);\n\n\t\tapplyChangesButton = new JButton();\n\t\tapplyChangesButton.addActionListener(this);\n\t\tapplyChangesButton.setMargin(new Insets(2, 2, 2, 2));\n\t\tapplyChangesButton.setBounds(47, 362, 112, 25);\n\t\tapplyChangesButton.setText(\"Apply Changes\");\n\t\tgetContentPane().add(applyChangesButton);\n\n\t\trevertChangesButton = new JButton();\n\t\trevertChangesButton.addActionListener(this);\n\t\trevertChangesButton.setMargin(new Insets(2, 2, 2, 2));\n\t\trevertChangesButton.setText(\"Revert Changes\");\n\t\trevertChangesButton.setBounds(218, 362, 112, 25);\n\t\tgetContentPane().add(revertChangesButton);\n\n\t\tcancelChangesButton = new JButton();\n\t\tcancelChangesButton.addActionListener(this);\n\t\tcancelChangesButton.setMargin(new Insets(2, 2, 2, 2));\n\t\tcancelChangesButton.setText(\"Cancel Changes\");\n\t\tcancelChangesButton.setBounds(363, 362, 112, 25);\n\t\tgetContentPane().add(cancelChangesButton);\n\n\t\taddButton = new JButton();\n\t\taddButton.addActionListener(this);\n\t\taddButton.setText(\"add ->\");\n\t\taddButton.setBounds(205, 146, 112, 25);\n\t\tgetContentPane().add(addButton);\n\n\t\tremoveButton = new JButton();\n\t\tremoveButton.addActionListener(this);\n\t\tremoveButton.setText(\"<- remove\");\n\t\tremoveButton.setBounds(205, 303, 112, 25);\n\t\tgetContentPane().add(removeButton);\n\n\t\tfinal JLabel groupMembersLabel = new JLabel();\n\t\tgroupMembersLabel.setAutoscrolls(true);\n\t\tgroupMembersLabel.setText(\"List of Users\");\n\t\tgroupMembersLabel.setBounds(47, 111, 98, 15);\n\t\tgetContentPane().add(groupMembersLabel);\n\n\t\tusersLabel = new JLabel();\n\t\tusersLabel.setAutoscrolls(true);\n\t\tusersLabel.setText(\"Group Members\");\n\t\tusersLabel.setBounds(342, 101, 153, 34);\n\t\tgetContentPane().add(usersLabel);\n\t\t\n\t\tfinal JScrollPane scrollPaneUsers = new JScrollPane();\n\t\tscrollPaneUsers.setBounds(45, 147, 120, 181);\n\t\tgetContentPane().add(scrollPaneUsers);\n\n\t\tscrollPaneGroupMembers = new JScrollPane();\n\t\tscrollPaneGroupMembers.setBounds(348, 147, 127, 181);\n\t\tgetContentPane().add(scrollPaneGroupMembers);\n\n\t\tfinal JScrollPane scrollPaneGroups = new JScrollPane();\n\t\tscrollPaneGroups.setBounds(76, 37, 388, 58);\n\t\tgetContentPane().add(scrollPaneGroups);\n\n\t\tusersList = new JList(userPool);\n\t\tusersList.setName(\"users\");\n\t\tscrollPaneUsers.setViewportView(usersList);\n\t\tusersList.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);\n\t\tusersList.setBorder(new BevelBorder(BevelBorder.LOWERED));\n\n\t\tlistsArray.add(usersList);\t\t\n\n\t\tgroupMembersList = new JList(groupsMembersModel);\n\t\tgroupMembersList.setName(\"groupMembers\");\n\t\tscrollPaneGroupMembers.setViewportView(groupMembersList);\n\t\tgroupMembersList.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);\n\t\tgroupMembersList.setBorder(new BevelBorder(BevelBorder.LOWERED));\n\t\t\n\t\t//initially we don't have any data in it, show the user it is empty\n\t\tgroupMembersList.setEnabled(false);\n\t\tgroupMembersList.setBackground(Color.gray);\n\t\tlistsArray.add(groupMembersList);\n\n\n\t\t//single group selection for now\n\t\tgroupsList = new JList(groupsModel);\n\t\tgroupsList.setName(\"groups\");\n\t\tscrollPaneGroups.setViewportView(groupsList);\n\t\tgroupsList.setBorder(new BevelBorder(BevelBorder.LOWERED));\n\t\t\n\n\t\tgroupsList.addListSelectionListener(new GroupListSelectionListener(groupMembersList,groupMembers,groupsMembersModel,usersLabel));\n\n\n\t\tgroupMembersList.addMouseListener(new ListMouseListener(listsArray));\n\t\tgroupsList.addMouseListener(new ListMouseListener(listsArray));\n\t\tusersList.addMouseListener(new ListMouseListener(listsArray));\n\t\t\n\t\tfinal JLabel groupsLabel = new JLabel();\n\t\tgroupsLabel.setText(\"Groups\");\n\t\tgroupsLabel.setBounds(76, 10, 69, 15);\n\t\tgetContentPane().add(groupsLabel);\n\n\t\t\t}","commit_id":"25d4786c07f2dafed2fbf72b0e8c5a468e561125","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"private static LineElemStyle createImpl(Environment env, boolean casing) {\n        Cascade c = env.mc.getCascade(env.layer);\n        Cascade c_def = env.mc.getCascade(\"default\");\n\n        String prefix = casing ? \"casing-\" : \"\";\n\n        Float width;\n        if (casing) {\n            Float widthOnDefault = getWidth(c_def, \"width\", null);\n            Float widthLine = getWidth(c, \"width\", widthOnDefault);\n            width = getWidth(c, \"casing-width\", widthLine);\n        } else {\n            Float widthOnDefault = getWidth(c_def, \"width\", null);\n            width = getWidth(c, \"width\", widthOnDefault);\n        }\n\n        if (width == null)\n            return null;\n\n        float realWidth = c.get(prefix + \"real-width\", 0f, Float.class);\n        if (realWidth > 0 && MapPaintSettings.INSTANCE.isUseRealWidth()) {\n\n            /* if we have a \"width\" tag, try use it */\n            String widthTag = env.osm.get(\"width\");\n            if(widthTag == null) {\n                widthTag = env.osm.get(\"est_width\");\n            }\n            if(widthTag != null) {\n                try {\n                    realWidth = new Float(Integer.parseInt(widthTag));\n                }\n                catch(NumberFormatException nfe) {\n                }\n            }\n        }\n\n        Color color = c.get(prefix + \"color\", null, Color.class);\n        if (!casing && color == null) {\n            color = c.get(\"fill-color\", null, Color.class);\n        }\n        if (color == null) {\n            color = PaintColors.UNTAGGED.get();\n        }\n\n        int alpha = 255;\n        Integer pAlpha = Utils.color_float2int(c.get(\"opacity\", null, Float.class));\n        if (pAlpha != null) {\n            alpha = pAlpha;\n        }\n        color = new Color(color.getRed(), color.getGreen(), color.getBlue(), alpha);\n\n        float[] dashes = c.get(prefix + \"dashes\", null, float[].class);\n        if (dashes != null) {\n            boolean hasPositive = false;\n            for (float f : dashes) {\n                if (f > 0) {\n                    hasPositive = true;\n                }\n                if (f < 0) {\n                    dashes = null;\n                    break;\n                }\n            }\n            if (!hasPositive || (dashes != null && dashes.length == 0)) {\n                dashes = null;\n            }\n        }\n        float dashesOffset = c.get(prefix + \"dashes-offset\", 0f, Float.class);\n        Color dashesBackground = c.get(prefix + \"dashes-background-color\", null, Color.class);\n        if (dashesBackground != null) {\n            pAlpha = Utils.color_float2int(c.get(prefix + \"dashes-background-opacity\", null, Float.class));\n            if (pAlpha != null) {\n                alpha = pAlpha;\n            }\n            dashesBackground = new Color(dashesBackground.getRed(), dashesBackground.getGreen(),\n                    dashesBackground.getBlue(), alpha);\n        }\n\n        Integer cap = null;\n        Keyword capKW = c.get(prefix + \"linecap\", null, Keyword.class);\n        if (capKW != null) {\n            if (equal(capKW.val, \"none\")) {\n                cap = BasicStroke.CAP_BUTT;\n            } else if (equal(capKW.val, \"round\")) {\n                cap = BasicStroke.CAP_ROUND;\n            } else if (equal(capKW.val, \"square\")) {\n                cap = BasicStroke.CAP_SQUARE;\n            }\n        }\n        if (cap == null) {\n            cap = dashes != null ? BasicStroke.CAP_BUTT : BasicStroke.CAP_ROUND;\n        }\n\n        Integer join = null;\n        Keyword joinKW = c.get(prefix + \"linejoin\", null, Keyword.class);\n        if (joinKW != null) {\n            if (equal(joinKW.val, \"round\")) {\n                join = BasicStroke.JOIN_ROUND;\n            } else if (equal(joinKW.val, \"miter\")) {\n                join = BasicStroke.JOIN_MITER;\n            } else if (equal(joinKW.val, \"bevel\")) {\n                join = BasicStroke.JOIN_BEVEL;\n            }\n        }\n        if (join == null) {\n            join = BasicStroke.JOIN_ROUND;\n        }\n\n        float miterlimit = c.get(prefix + \"miterlimit\", 10f, Float.class);\n        if (miterlimit < 1f) {\n            miterlimit = 10f;\n        }\n\n        BasicStroke line = new BasicStroke(width, cap, join, miterlimit, dashes, dashesOffset);\n        BasicStroke dashesLine = null;\n\n        if (dashes != null && dashesBackground != null) {\n            float[] dashes2 = new float[dashes.length];\n            System.arraycopy(dashes, 0, dashes2, 1, dashes.length - 1);\n            dashes2[0] = dashes[dashes.length-1];\n            dashesLine = new BasicStroke(width, cap, join, miterlimit, dashes2, dashes2[0] + dashesOffset);\n        }\n\n        return new LineElemStyle(c, line, color, dashesLine, dashesBackground, realWidth);\n    }","id":61637,"modified_method":"private static LineElemStyle createImpl(Environment env, boolean casing) {\n        Cascade c = env.mc.getCascade(env.layer);\n        Cascade c_def = env.mc.getCascade(\"default\");\n\n        String prefix = casing ? \"casing-\" : \"\";\n\n        Float width;\n        if (casing) {\n            Float widthOnDefault = getWidth(c_def, \"width\", null);\n            Float widthLine = getWidth(c, \"width\", widthOnDefault);\n            width = getWidth(c, \"casing-width\", widthLine);\n        } else {\n            Float widthOnDefault = getWidth(c_def, \"width\", null);\n            width = getWidth(c, \"width\", widthOnDefault);\n        }\n\n        if (width == null)\n            return null;\n\n        float realWidth = c.get(prefix + \"real-width\", 0f, Float.class);\n        if (realWidth > 0 && MapPaintSettings.INSTANCE.isUseRealWidth()) {\n\n            /* if we have a \"width\" tag, try use it */\n            String widthTag = env.osm.get(\"width\");\n            if(widthTag == null) {\n                widthTag = env.osm.get(\"est_width\");\n            }\n            if(widthTag != null) {\n                try {\n                    realWidth = Float.valueOf(widthTag);\n                }\n                catch(NumberFormatException nfe) {\n                }\n            }\n        }\n\n        Color color = c.get(prefix + \"color\", null, Color.class);\n        if (!casing && color == null) {\n            color = c.get(\"fill-color\", null, Color.class);\n        }\n        if (color == null) {\n            color = PaintColors.UNTAGGED.get();\n        }\n\n        int alpha = 255;\n        Integer pAlpha = Utils.color_float2int(c.get(\"opacity\", null, Float.class));\n        if (pAlpha != null) {\n            alpha = pAlpha;\n        }\n        color = new Color(color.getRed(), color.getGreen(), color.getBlue(), alpha);\n\n        float[] dashes = c.get(prefix + \"dashes\", null, float[].class);\n        if (dashes != null) {\n            boolean hasPositive = false;\n            for (float f : dashes) {\n                if (f > 0) {\n                    hasPositive = true;\n                }\n                if (f < 0) {\n                    dashes = null;\n                    break;\n                }\n            }\n            if (!hasPositive || (dashes != null && dashes.length == 0)) {\n                dashes = null;\n            }\n        }\n        float dashesOffset = c.get(prefix + \"dashes-offset\", 0f, Float.class);\n        Color dashesBackground = c.get(prefix + \"dashes-background-color\", null, Color.class);\n        if (dashesBackground != null) {\n            pAlpha = Utils.color_float2int(c.get(prefix + \"dashes-background-opacity\", null, Float.class));\n            if (pAlpha != null) {\n                alpha = pAlpha;\n            }\n            dashesBackground = new Color(dashesBackground.getRed(), dashesBackground.getGreen(),\n                    dashesBackground.getBlue(), alpha);\n        }\n\n        Integer cap = null;\n        Keyword capKW = c.get(prefix + \"linecap\", null, Keyword.class);\n        if (capKW != null) {\n            if (equal(capKW.val, \"none\")) {\n                cap = BasicStroke.CAP_BUTT;\n            } else if (equal(capKW.val, \"round\")) {\n                cap = BasicStroke.CAP_ROUND;\n            } else if (equal(capKW.val, \"square\")) {\n                cap = BasicStroke.CAP_SQUARE;\n            }\n        }\n        if (cap == null) {\n            cap = dashes != null ? BasicStroke.CAP_BUTT : BasicStroke.CAP_ROUND;\n        }\n\n        Integer join = null;\n        Keyword joinKW = c.get(prefix + \"linejoin\", null, Keyword.class);\n        if (joinKW != null) {\n            if (equal(joinKW.val, \"round\")) {\n                join = BasicStroke.JOIN_ROUND;\n            } else if (equal(joinKW.val, \"miter\")) {\n                join = BasicStroke.JOIN_MITER;\n            } else if (equal(joinKW.val, \"bevel\")) {\n                join = BasicStroke.JOIN_BEVEL;\n            }\n        }\n        if (join == null) {\n            join = BasicStroke.JOIN_ROUND;\n        }\n\n        float miterlimit = c.get(prefix + \"miterlimit\", 10f, Float.class);\n        if (miterlimit < 1f) {\n            miterlimit = 10f;\n        }\n\n        BasicStroke line = new BasicStroke(width, cap, join, miterlimit, dashes, dashesOffset);\n        BasicStroke dashesLine = null;\n\n        if (dashes != null && dashesBackground != null) {\n            float[] dashes2 = new float[dashes.length];\n            System.arraycopy(dashes, 0, dashes2, 1, dashes.length - 1);\n            dashes2[0] = dashes[dashes.length-1];\n            dashesLine = new BasicStroke(width, cap, join, miterlimit, dashes2, dashes2[0] + dashesOffset);\n        }\n\n        return new LineElemStyle(c, line, color, dashesLine, dashesBackground, realWidth);\n    }","commit_id":"7d89124d9cdcc05b19415f6297c2d7a44f9a64d4","url":"https://github.com/openstreetmap/josm"},{"original_method":"/**\n     * Updates the alarm data using the associated {@link AlarmDao} and {@link NodeDao} instances.\n     */\n    @Override\n    public void update() {\n        final CriteriaBuilder alarmCb = new CriteriaBuilder(OnmsAlarm.class);\n\n        int minimumSeverity = 4;\n        int boostSeverity = 6;\n        int alarmsPerPage = 6;\n\n        try {\n            alarmsPerPage = Math.max(1, Integer.parseInt(m_dashletSpec.getParameters().get(\"alarmsPerPage\")));\n            minimumSeverity = Math.min(7, Math.max(1, Integer.parseInt(m_dashletSpec.getParameters().get(\"minimumSeverity\"))));\n            boostSeverity = Math.min(7, Math.max(1, Integer.parseInt(m_dashletSpec.getParameters().get(\"boostSeverity\"))));\n        } catch (NumberFormatException numberFormatException) {\n            /**\n             * just ignore\n             */\n        }\n\n        alarmCb.fetch(\"firstEvent\", Fetch.FetchType.EAGER);\n        alarmCb.fetch(\"lastEvent\", Fetch.FetchType.EAGER);\n\n        alarmCb.isNull(\"alarmAckUser\");\n        alarmCb.ge(\"severity\", OnmsSeverity.get(minimumSeverity));\n\n        alarmCb.orderBy(\"lastEventTime\").desc();\n        alarmCb.limit(alarmsPerPage);\n\n        alarmCb.distinct();\n\n        List<OnmsAlarm> alarms = m_alarmDao.findMatching(alarmCb.toCriteria());\n        removeAllComponents();\n\n        injectStyles();\n\n        boosted = false;\n\n        if (alarms.size() == 0) {\n            Label label = new Label(\"No alarms found!\");\n            label.addStyleName(\"alert-details-noalarms-font\");\n            addComponent(label);\n        } else {\n            for (OnmsAlarm onmsAlarm : alarms) {\n                OnmsNode onmsNode = null;\n\n                if (onmsAlarm.getNodeId() != null) {\n                    CriteriaBuilder nodeCb = new CriteriaBuilder(OnmsNode.class);\n                    nodeCb.eq(\"id\", onmsAlarm.getNodeId());\n\n                    List<OnmsNode> nodes = m_nodeDao.findMatching(nodeCb.toCriteria());\n\n                    if (nodes.size() == 1) {\n                        onmsNode = nodes.get(0);\n                    }\n                }\n                addComponent(createAlarmComponent(onmsAlarm, onmsNode));\n\n                if (onmsAlarm.getSeverity().isGreaterThanOrEqual(OnmsSeverity.get(boostSeverity))) {\n                    boosted = true;\n                }\n            }\n        }\n    }","id":61638,"modified_method":"/**\n     * Updates the alarm data using the associated {@link AlarmDao} and {@link NodeDao} instances.\n     */\n    @Override\n    public void update() {\n        final CriteriaBuilder alarmCb = new CriteriaBuilder(OnmsAlarm.class);\n\n        alarmCb.alias(\"node\", \"node\");\n        alarmCb.alias(\"node.categories\", \"category\");\n        alarmCb.alias(\"lastEvent\", \"event\");\n\n        String criteria = m_dashletSpec.getParameters().get(\"criteria\");\n        OnmsSeverity boostSeverity = OnmsSeverity.valueOf(m_dashletSpec.getParameters().get(\"boostSeverity\"));\n\n        m_criteriaBuilderHelper.parseConfiguration(alarmCb, criteria);\n\n        alarmCb.fetch(\"firstEvent\", Fetch.FetchType.EAGER);\n        alarmCb.fetch(\"lastEvent\", Fetch.FetchType.EAGER);\n\n        alarmCb.distinct();\n\n        List<OnmsAlarm> alarms = m_alarmDao.findMatching(alarmCb.toCriteria());\n        removeAllComponents();\n\n        injectStyles();\n\n        boosted = false;\n\n        if (alarms.size() == 0) {\n            Label label = new Label(\"No alarms found!\");\n            label.addStyleName(\"alert-details-noalarms-font\");\n            addComponent(label);\n        } else {\n            for (OnmsAlarm onmsAlarm : alarms) {\n                OnmsNode onmsNode = null;\n\n                if (onmsAlarm.getNodeId() != null) {\n                    CriteriaBuilder nodeCb = new CriteriaBuilder(OnmsNode.class);\n                    nodeCb.eq(\"id\", onmsAlarm.getNodeId());\n\n                    List<OnmsNode> nodes = m_nodeDao.findMatching(nodeCb.toCriteria());\n\n                    if (nodes.size() == 1) {\n                        onmsNode = nodes.get(0);\n                    }\n                }\n                addComponent(createAlarmComponent(onmsAlarm, onmsNode));\n\n                if (onmsAlarm.getSeverity().isGreaterThanOrEqual(boostSeverity)) {\n                    boosted = true;\n                }\n            }\n        }\n    }","commit_id":"c49e6424736b31941b647d7f3fa7e3719388b423","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Updates the alarm data using the associated {@link AlarmDao} and {@link NodeDao} instances.\n     *\n     * @return true, if boosted, false otherwise\n     */\n    @Override\n    public void update() {\n        final CriteriaBuilder alarmCb = new CriteriaBuilder(OnmsAlarm.class);\n\n        int minimumSeverity = 4;\n        int boostSeverity = 6;\n        int alarmsPerPage = 12;\n\n        try {\n            alarmsPerPage = Math.max(1, Integer.parseInt(m_dashletSpec.getParameters().get(\"alarmsPerPage\")));\n            minimumSeverity = Math.min(7, Math.max(1, Integer.parseInt(m_dashletSpec.getParameters().get(\"minimumSeverity\"))));\n            boostSeverity = Math.min(7, Math.max(1, Integer.parseInt(m_dashletSpec.getParameters().get(\"boostSeverity\"))));\n        } catch (NumberFormatException numberFormatException) {\n            /**\n             * Just ignore\n             */\n        }\n\n        alarmCb.fetch(\"firstEvent\", Fetch.FetchType.EAGER);\n        alarmCb.fetch(\"lastEvent\", Fetch.FetchType.EAGER);\n\n        alarmCb.isNull(\"alarmAckUser\");\n        alarmCb.ge(\"severity\", OnmsSeverity.get(minimumSeverity));\n\n        alarmCb.orderBy(\"lastEventTime\").desc();\n        alarmCb.limit(alarmsPerPage);\n\n        alarmCb.distinct();\n\n        List<OnmsAlarm> alarms = m_alarmDao.findMatching(alarmCb.toCriteria());\n\n        removeAllComponents();\n\n        injectStyles();\n\n        boosted = false;\n\n        if (alarms.size() == 0) {\n            Label label = new Label(\"No alarms found!\");\n            label.addStyleName(\"alerts-noalarms-font\");\n            addComponent(label);\n        } else {\n            for (OnmsAlarm onmsAlarm : alarms) {\n                OnmsNode onmsNode = null;\n\n                if (onmsAlarm.getNodeId() != null) {\n                    CriteriaBuilder nodeCb = new CriteriaBuilder(OnmsNode.class);\n                    nodeCb.eq(\"id\", onmsAlarm.getNodeId());\n\n                    List<OnmsNode> nodes = m_nodeDao.findMatching(nodeCb.toCriteria());\n\n                    if (nodes.size() == 1) {\n                        onmsNode = nodes.get(0);\n                    }\n                }\n                addComponent(createAlarmComponent(onmsAlarm, onmsNode));\n\n                if (onmsAlarm.getSeverity().isGreaterThanOrEqual(OnmsSeverity.get(boostSeverity))) {\n                    boosted = true;\n                }\n            }\n        }\n    }","id":61639,"modified_method":"/**\n     * Updates the alarm data using the associated {@link AlarmDao} and {@link NodeDao} instances.\n     *\n     * @return true, if boosted, false otherwise\n     */\n    @Override\n    public void update() {\n        final CriteriaBuilder alarmCb = new CriteriaBuilder(OnmsAlarm.class);\n\n        alarmCb.alias(\"node\", \"node\");\n        alarmCb.alias(\"node.categories\", \"category\");\n        alarmCb.alias(\"lastEvent\", \"event\");\n\n        String criteria = m_dashletSpec.getParameters().get(\"criteria\");\n        OnmsSeverity boostSeverity = OnmsSeverity.valueOf(m_dashletSpec.getParameters().get(\"boostSeverity\"));\n\n        m_criteriaBuilderHelper.parseConfiguration(alarmCb, criteria);\n\n        alarmCb.fetch(\"firstEvent\", Fetch.FetchType.EAGER);\n        alarmCb.fetch(\"lastEvent\", Fetch.FetchType.EAGER);\n\n        alarmCb.distinct();\n\n        List<OnmsAlarm> alarms = m_alarmDao.findMatching(alarmCb.toCriteria());\n\n        removeAllComponents();\n\n        injectStyles();\n\n        boosted = false;\n\n        if (alarms.size() == 0) {\n            Label label = new Label(\"No alarms found!\");\n            label.addStyleName(\"alerts-noalarms-font\");\n            addComponent(label);\n        } else {\n            for (OnmsAlarm onmsAlarm : alarms) {\n                OnmsNode onmsNode = null;\n\n                if (onmsAlarm.getNodeId() != null) {\n                    CriteriaBuilder nodeCb = new CriteriaBuilder(OnmsNode.class);\n                    nodeCb.eq(\"id\", onmsAlarm.getNodeId());\n\n                    List<OnmsNode> nodes = m_nodeDao.findMatching(nodeCb.toCriteria());\n\n                    if (nodes.size() == 1) {\n                        onmsNode = nodes.get(0);\n                    }\n                }\n                addComponent(createAlarmComponent(onmsAlarm, onmsNode));\n\n                if (onmsAlarm.getSeverity().isGreaterThanOrEqual(boostSeverity)) {\n                    boosted = true;\n                }\n            }\n        }\n    }","commit_id":"c49e6424736b31941b647d7f3fa7e3719388b423","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Constructor for the DashletSpecEditor.\n     *\n     * @param wallboardEditor the {@link WallboardEditor} wallboard editor this editor belongs to\n     * @param dashletSelector the {@link DashletSelector} used to query available {@link DashletFactory} instances\n     * @param dashletSpec     the associated {@link DashletSpec} instance\n     */\n    public DashletSpecEditor(WallboardEditor wallboardEditor, DashletSelector dashletSelector, DashletSpec dashletSpec) {\n        /**\n         * Setting the member fields\n         */\n        this.m_wallboardEditor = wallboardEditor;\n        this.m_dashletSpec = dashletSpec;\n        this.m_dashletSelector = dashletSelector;\n\n        /**\n         * Setting up this component with size and layout\n         */\n        setWidth(100.0f, Unit.PERCENTAGE);\n\n        GridLayout gridLayout = new GridLayout();\n        gridLayout.setColumns(4);\n        gridLayout.setRows(1);\n\n        gridLayout.setMargin(true);\n\n        /**\n         * Setting up the dashlet selection\n         */\n\n        m_dashletSelect = new NativeSelect();\n\n        m_dashletSelect.setCaption(\"Dashlet\");\n\n        updateDashletSelection(dashletSelector.getDashletFactoryList());\n\n        m_dashletSelect.setImmediate(true);\n        m_dashletSelect.setNewItemsAllowed(false);\n        m_dashletSelect.setNullSelectionItemId(\"Undefined\");\n        m_dashletSelect.select(dashletSpec.getDashletName());\n\n        m_dashletSelect.addValueChangeListener(new Property.ValueChangeListener() {\n            public void valueChange(Property.ValueChangeEvent valueChangeEvent) {\n                if (m_savingDisabled) {\n                    return;\n                }\n\n                if (valueChangeEvent.getProperty().getValue() == null) {\n                    m_dashletSpec.setDashletName(\"Undefined\");\n                } else {\n                    m_dashletSpec.setDashletName(valueChangeEvent.getProperty().getValue().toString());\n                }\n\n                m_dashletSpec.getParameters().clear();\n\n                Map<String, String> requiredParameters = m_dashletSelector.getDashletFactoryForName(m_dashletSpec.getDashletName()).getRequiredParameters();\n\n                for (Map.Entry<String, String> entry : requiredParameters.entrySet()) {\n                    m_dashletSpec.getParameters().put(entry.getKey(), entry.getValue());\n                }\n\n                m_propertiesButton.setEnabled(requiredParameters.size() > 0);\n\n                WallboardProvider.getInstance().save();\n                ((WallboardConfigUI) getUI()).notifyMessage(\"Data saved\", \"Dashlet\");\n            }\n        });\n\n        FormLayout f1 = new FormLayout();\n        f1.addComponent(m_dashletSelect);\n\n        /**\n         * Priority field setup, layout and adding listener and validator\n         */\n        final TextField priorityField = new TextField();\n        priorityField.setValue(String.valueOf(dashletSpec.getPriority()));\n        priorityField.setImmediate(true);\n        priorityField.setCaption(\"Priority\");\n\n        priorityField.addValidator(new AbstractStringValidator(\"Only numbers allowed here\") {\n            @Override\n            protected boolean isValidValue(String s) {\n                try {\n                    Integer.parseInt(s);\n                } catch (NumberFormatException numberFormatException) {\n                    return false;\n                }\n                return true;\n            }\n        });\n\n        priorityField.addValueChangeListener(new Property.ValueChangeListener() {\n            public void valueChange(Property.ValueChangeEvent valueChangeEvent) {\n                if (priorityField.isValid()) {\n                    m_dashletSpec.setPriority(Integer.valueOf((String) valueChangeEvent.getProperty().getValue()));\n                    WallboardProvider.getInstance().save();\n                    ((WallboardConfigUI) getUI()).notifyMessage(\"Data saved\", \"Priority\");\n                }\n            }\n        });\n\n        /**\n         * Boost priority field setup, layout and adding listener and validator\n         */\n        final TextField boostPriorityField = new TextField();\n        boostPriorityField.setValue(String.valueOf(dashletSpec.getBoostPriority()));\n        boostPriorityField.setImmediate(true);\n        boostPriorityField.setCaption(\"Boost-Priority\");\n\n        boostPriorityField.addValidator(new AbstractStringValidator(\"Only numbers allowed here\") {\n            @Override\n            protected boolean isValidValue(String s) {\n                try {\n                    Integer.parseInt(s);\n                } catch (NumberFormatException numberFormatException) {\n                    return false;\n                }\n                return true;\n            }\n        });\n\n        boostPriorityField.addValueChangeListener(new Property.ValueChangeListener() {\n            public void valueChange(Property.ValueChangeEvent valueChangeEvent) {\n                if (boostPriorityField.isValid()) {\n                    m_dashletSpec.setBoostPriority(Integer.valueOf((String) valueChangeEvent.getProperty().getValue()));\n                    WallboardProvider.getInstance().save();\n                    ((WallboardConfigUI) getUI()).notifyMessage(\"Data saved\", \"Priority\");\n                }\n            }\n        });\n\n\n        /**\n         * Duration field setup, layout and adding listener and validator\n         */\n        final TextField durationField = new TextField();\n        durationField.setValue(String.valueOf(dashletSpec.getDuration()));\n        durationField.setImmediate(true);\n        durationField.setCaption(\"Duration\");\n\n        durationField.addValidator(new AbstractStringValidator(\"Only numbers allowed here\") {\n            @Override\n            protected boolean isValidValue(String s) {\n                try {\n                    Integer.parseInt(s);\n                } catch (NumberFormatException numberFormatException) {\n                    return false;\n                }\n                return true;\n            }\n        });\n\n        durationField.addValueChangeListener(new Property.ValueChangeListener() {\n            public void valueChange(Property.ValueChangeEvent valueChangeEvent) {\n                if (durationField.isValid()) {\n                    m_dashletSpec.setDuration(Integer.valueOf((String) valueChangeEvent.getProperty().getValue()));\n                    WallboardProvider.getInstance().save();\n                    ((WallboardConfigUI) getUI()).notifyMessage(\"Data saved\", \"Duration\");\n                }\n            }\n        });\n\n        /**\n         * Boost duration field setup, layout and adding listener and validator\n         */\n        final TextField boostDurationField = new TextField();\n        boostDurationField.setValue(String.valueOf(dashletSpec.getBoostDuration()));\n        boostDurationField.setImmediate(true);\n        boostDurationField.setCaption(\"Boost-Duration\");\n\n        boostDurationField.addValidator(new AbstractStringValidator(\"Only numbers allowed here\") {\n            @Override\n            protected boolean isValidValue(String s) {\n                try {\n                    Integer.parseInt(s);\n                } catch (NumberFormatException numberFormatException) {\n                    return false;\n                }\n                return true;\n            }\n        });\n\n        boostDurationField.addValueChangeListener(new Property.ValueChangeListener() {\n            public void valueChange(Property.ValueChangeEvent valueChangeEvent) {\n                if (boostDurationField.isValid()) {\n                    m_dashletSpec.setBoostDuration(Integer.valueOf((String) valueChangeEvent.getProperty().getValue()));\n                    WallboardProvider.getInstance().save();\n                    ((WallboardConfigUI) getUI()).notifyMessage(\"Data saved\", \"Duration\");\n                }\n            }\n        });\n\n        /**\n         * Adding the required input fields and buttons to several {@link FormLayout} instances for better layout.\n         */\n        FormLayout f2 = new FormLayout();\n        f2.addComponent(priorityField);\n        f2.addComponent(durationField);\n\n        FormLayout f3 = new FormLayout();\n        f3.addComponent(boostPriorityField);\n        f3.addComponent(boostDurationField);\n\n        /**\n         * Adding the properties button...\n         */\n        m_propertiesButton = new Button(\"Properties\");\n\n        m_propertiesButton.addClickListener(new Button.ClickListener() {\n            @Override\n            public void buttonClick(Button.ClickEvent clickEvent) {\n                getUI().addWindow(new PropertiesWindow(m_dashletSpec, m_dashletSelector));\n            }\n        });\n\n        m_propertiesButton.setEnabled(m_dashletSelector.getDashletFactoryForName(m_dashletSpec.getDashletName()).getRequiredParameters().size() > 0);\n\n        m_propertiesButton.setStyleName(\"small\");\n\n        /**\n         * ...and the remove button\n         */\n        Button removeButton = new Button(\"Remove\");\n\n        FormLayout f4 = new FormLayout();\n        f4.addComponent(m_propertiesButton);\n        f4.addComponent(removeButton);\n\n        removeButton.addClickListener(new Button.ClickListener() {\n            public void buttonClick(Button.ClickEvent clickEvent) {\n                m_wallboardEditor.removeDashletSpecEditor(DashletSpecEditor.this);\n            }\n        });\n\n        removeButton.setStyleName(\"small\");\n\n        /**\n         * Adding the different {@link FormLayout} instances to a {@link GridLayout}\n         */\n        gridLayout.addComponent(f1);\n        gridLayout.addComponent(f2);\n        gridLayout.addComponent(f3);\n        gridLayout.addComponent(f4);\n\n        setContent(gridLayout);\n    }","id":61640,"modified_method":"/**\n     * Constructor for the DashletSpecEditor.\n     *\n     * @param wallboardEditor the {@link WallboardEditor} wallboard editor this editor belongs to\n     * @param dashletSelector the {@link DashletSelector} used to query available {@link DashletFactory} instances\n     * @param dashletSpec     the associated {@link DashletSpec} instance\n     */\n    public DashletSpecEditor(WallboardEditor wallboardEditor, DashletSelector dashletSelector, DashletSpec dashletSpec) {\n        /**\n         * Setting the member fields\n         */\n        this.m_wallboardEditor = wallboardEditor;\n        this.m_dashletSpec = dashletSpec;\n        this.m_dashletSelector = dashletSelector;\n\n        /**\n         * Setting defaults\n         */\n\n        DashletFactory dashletFactory = dashletSelector.getDashletFactoryForName(dashletSpec.getDashletName());\n\n        final Map<String, String> requiredParameters = dashletFactory.getRequiredParameters();\n\n        for (Map.Entry<String, String> entry : requiredParameters.entrySet()) {\n            if (!dashletSpec.getParameters().containsKey(entry.getKey())) {\n                dashletSpec.getParameters().put(entry.getKey(), requiredParameters.get(entry.getKey()));\n            }\n        }\n\n        /**\n         * Setting up this component with size and layout\n         */\n        setWidth(100.0f, Unit.PERCENTAGE);\n\n        GridLayout gridLayout = new GridLayout();\n        gridLayout.setColumns(4);\n        gridLayout.setRows(1);\n\n        gridLayout.setMargin(true);\n\n        /**\n         * Setting up the dashlet selection\n         */\n\n        m_dashletSelect = new NativeSelect();\n\n        m_dashletSelect.setCaption(\"Dashlet\");\n\n        updateDashletSelection(dashletSelector.getDashletFactoryList());\n\n        m_dashletSelect.setImmediate(true);\n        m_dashletSelect.setNewItemsAllowed(false);\n        m_dashletSelect.setNullSelectionItemId(\"Undefined\");\n        m_dashletSelect.select(dashletSpec.getDashletName());\n\n        m_dashletSelect.addValueChangeListener(new Property.ValueChangeListener() {\n            public void valueChange(Property.ValueChangeEvent valueChangeEvent) {\n                if (m_savingDisabled) {\n                    return;\n                }\n\n                if (valueChangeEvent.getProperty().getValue() == null) {\n                    m_dashletSpec.setDashletName(\"Undefined\");\n                } else {\n                    m_dashletSpec.setDashletName(valueChangeEvent.getProperty().getValue().toString());\n                }\n\n                m_dashletSpec.getParameters().clear();\n\n                Map<String, String> requiredParameters = m_dashletSelector.getDashletFactoryForName(m_dashletSpec.getDashletName()).getRequiredParameters();\n\n                for (Map.Entry<String, String> entry : requiredParameters.entrySet()) {\n                    m_dashletSpec.getParameters().put(entry.getKey(), entry.getValue());\n                }\n\n                m_propertiesButton.setEnabled(requiredParameters.size() > 0);\n\n                WallboardProvider.getInstance().save();\n                ((WallboardConfigUI) getUI()).notifyMessage(\"Data saved\", \"Dashlet\");\n            }\n        });\n\n        FormLayout f1 = new FormLayout();\n        f1.addComponent(m_dashletSelect);\n\n        /**\n         * Priority field setup, layout and adding listener and validator\n         */\n        final TextField priorityField = new TextField();\n        priorityField.setValue(String.valueOf(dashletSpec.getPriority()));\n        priorityField.setImmediate(true);\n        priorityField.setCaption(\"Priority\");\n\n        priorityField.addValidator(new AbstractStringValidator(\"Only numbers allowed here\") {\n            @Override\n            protected boolean isValidValue(String s) {\n                try {\n                    Integer.parseInt(s);\n                } catch (NumberFormatException numberFormatException) {\n                    return false;\n                }\n                return true;\n            }\n        });\n\n        priorityField.addValueChangeListener(new Property.ValueChangeListener() {\n            public void valueChange(Property.ValueChangeEvent valueChangeEvent) {\n                if (priorityField.isValid()) {\n                    m_dashletSpec.setPriority(Integer.valueOf((String) valueChangeEvent.getProperty().getValue()));\n                    WallboardProvider.getInstance().save();\n                    ((WallboardConfigUI) getUI()).notifyMessage(\"Data saved\", \"Priority\");\n                }\n            }\n        });\n\n        /**\n         * Boost priority field setup, layout and adding listener and validator\n         */\n        final TextField boostPriorityField = new TextField();\n        boostPriorityField.setValue(String.valueOf(dashletSpec.getBoostPriority()));\n        boostPriorityField.setImmediate(true);\n        boostPriorityField.setCaption(\"Boost-Priority\");\n\n        boostPriorityField.addValidator(new AbstractStringValidator(\"Only numbers allowed here\") {\n            @Override\n            protected boolean isValidValue(String s) {\n                try {\n                    Integer.parseInt(s);\n                } catch (NumberFormatException numberFormatException) {\n                    return false;\n                }\n                return true;\n            }\n        });\n\n        boostPriorityField.addValueChangeListener(new Property.ValueChangeListener() {\n            public void valueChange(Property.ValueChangeEvent valueChangeEvent) {\n                if (boostPriorityField.isValid()) {\n                    m_dashletSpec.setBoostPriority(Integer.valueOf((String) valueChangeEvent.getProperty().getValue()));\n                    WallboardProvider.getInstance().save();\n                    ((WallboardConfigUI) getUI()).notifyMessage(\"Data saved\", \"Priority\");\n                }\n            }\n        });\n\n\n        /**\n         * Duration field setup, layout and adding listener and validator\n         */\n        final TextField durationField = new TextField();\n        durationField.setValue(String.valueOf(dashletSpec.getDuration()));\n        durationField.setImmediate(true);\n        durationField.setCaption(\"Duration\");\n\n        durationField.addValidator(new AbstractStringValidator(\"Only numbers allowed here\") {\n            @Override\n            protected boolean isValidValue(String s) {\n                try {\n                    Integer.parseInt(s);\n                } catch (NumberFormatException numberFormatException) {\n                    return false;\n                }\n                return true;\n            }\n        });\n\n        durationField.addValueChangeListener(new Property.ValueChangeListener() {\n            public void valueChange(Property.ValueChangeEvent valueChangeEvent) {\n                if (durationField.isValid()) {\n                    m_dashletSpec.setDuration(Integer.valueOf((String) valueChangeEvent.getProperty().getValue()));\n                    WallboardProvider.getInstance().save();\n                    ((WallboardConfigUI) getUI()).notifyMessage(\"Data saved\", \"Duration\");\n                }\n            }\n        });\n\n        /**\n         * Boost duration field setup, layout and adding listener and validator\n         */\n        final TextField boostDurationField = new TextField();\n        boostDurationField.setValue(String.valueOf(dashletSpec.getBoostDuration()));\n        boostDurationField.setImmediate(true);\n        boostDurationField.setCaption(\"Boost-Duration\");\n\n        boostDurationField.addValidator(new AbstractStringValidator(\"Only numbers allowed here\") {\n            @Override\n            protected boolean isValidValue(String s) {\n                try {\n                    Integer.parseInt(s);\n                } catch (NumberFormatException numberFormatException) {\n                    return false;\n                }\n                return true;\n            }\n        });\n\n        boostDurationField.addValueChangeListener(new Property.ValueChangeListener() {\n            public void valueChange(Property.ValueChangeEvent valueChangeEvent) {\n                if (boostDurationField.isValid()) {\n                    m_dashletSpec.setBoostDuration(Integer.valueOf((String) valueChangeEvent.getProperty().getValue()));\n                    WallboardProvider.getInstance().save();\n                    ((WallboardConfigUI) getUI()).notifyMessage(\"Data saved\", \"Duration\");\n                }\n            }\n        });\n\n        /**\n         * Adding the required input fields and buttons to several {@link FormLayout} instances for better layout.\n         */\n        FormLayout f2 = new FormLayout();\n        f2.addComponent(priorityField);\n        f2.addComponent(durationField);\n\n        FormLayout f3 = new FormLayout();\n        f3.addComponent(boostPriorityField);\n        f3.addComponent(boostDurationField);\n\n        /**\n         * Adding the properties button...\n         */\n        m_propertiesButton = new Button(\"Properties\");\n\n        m_propertiesButton.addClickListener(new Button.ClickListener() {\n            @Override\n            public void buttonClick(Button.ClickEvent clickEvent) {\n                DashletConfigurationWindow configurationWindow = m_dashletSelector.getDashletFactoryForName(m_dashletSpec.getDashletName()).configurationWindow(m_dashletSpec);\n                getUI().addWindow(configurationWindow);\n            }\n        });\n\n        m_propertiesButton.setEnabled(m_dashletSelector.getDashletFactoryForName(m_dashletSpec.getDashletName()).getRequiredParameters().size() > 0);\n\n        m_propertiesButton.setStyleName(\"small\");\n\n        /**\n         * ...and the remove button\n         */\n        Button removeButton = new Button(\"Remove\");\n\n        FormLayout f4 = new FormLayout();\n        f4.addComponent(m_propertiesButton);\n        f4.addComponent(removeButton);\n\n        removeButton.addClickListener(new Button.ClickListener() {\n            public void buttonClick(Button.ClickEvent clickEvent) {\n                m_wallboardEditor.removeDashletSpecEditor(DashletSpecEditor.this);\n            }\n        });\n\n        removeButton.setStyleName(\"small\");\n\n        /**\n         * Adding the different {@link FormLayout} instances to a {@link GridLayout}\n         */\n        gridLayout.addComponent(f1);\n        gridLayout.addComponent(f2);\n        gridLayout.addComponent(f3);\n        gridLayout.addComponent(f4);\n\n        setContent(gridLayout);\n    }","commit_id":"c49e6424736b31941b647d7f3fa7e3719388b423","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public HelpClickListener(Component component, DashletSelector dashletSelector) {\n        m_component = component;\n        m_dashletSelector = dashletSelector;\n    }","id":61641,"modified_method":"/**\n     * The constructor of this class.\n     *\n     * @param component       the 'parent' component\n     * @param dashletSelector the {@link DashletSelector} to be used\n     */\n    public HelpClickListener(Component component, DashletSelector dashletSelector) {\n        m_component = component;\n        m_dashletSelector = dashletSelector;\n    }","commit_id":"c49e6424736b31941b647d7f3fa7e3719388b423","url":"https://github.com/OpenNMS/opennms"},{"original_method":"private String getOverviewHelpHTML() {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"<div class='help-title'>Overview<\/div>\");\n        sb.append(\"\");\n        sb.append(\"<div class='help-content'>\");\n        sb.append(\"On this configuration page you can create, edit, preview or delete \");\n        sb.append(\"Wallboard configurations. Each Wallboard configuration consists of \");\n        sb.append(\"multiple Dashlet entries. Each Dashlet entry requires to set at least \");\n        sb.append(\"four parameters:<br/><br/>\");\n        sb.append(\"\");\n        sb.append(\"<table class='help-table'>\");\n        sb.append(\"  <tr>\");\n        sb.append(\"    <th>Name<\/th>\");\n        sb.append(\"    <th>Description<\/th>\");\n        sb.append(\"  <\/tr>\");\n        sb.append(\"  <tr><td class='help-table-cell'>duration<\/td><td class='help-table-cell'>Time in seconds the Dashlet will be displayed<\/td><\/tr>\");\n        sb.append(\"  <tr><td class='help-table-cell'>priority<\/td><td class='help-table-cell'>Lower priority means that the Dashlet will be displayed more often<\/td><\/tr>\");\n        sb.append(\"  <tr><td class='help-table-cell'>boostedDuration<\/td><td class='help-table-cell'>This value is added to the duration value if the Dashlet is \\\"boosted\\\"<\/td><\/tr>\");\n        sb.append(\"  <tr><td class='help-table-cell'>boostedPriority<\/td><td class='help-table-cell'>This value is subtracted from the Dashlet's priority then the Dashlet is \\\"boosted\\\"<\/td><\/tr>\");\n        sb.append(\"<\/table>\");\n        sb.append(\"<br/>\");\n        sb.append(\"The Dashlet itself computes whether it is \\\"boosted\\\" or not. So, a Dashlet \");\n        sb.append(\"displaying critical data will be displayed more often and for a longer duration. \");\n        sb.append(\"Please select a Dashlet entry on the left for a brief description of the Dashlet \");\n        sb.append(\"and its required parameters.\");\n        sb.append(\"<\/div>\");\n        sb.append(\"\");\n        return sb.toString();\n    }","id":61642,"modified_method":"/**\n     * Returns the Overview help HTML fragment.\n     *\n     * @return a string with HTML code\n     */\n    private String getOverviewHelpHTML() {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"<div class='help-title'>Overview<\/div>\");\n        sb.append(\"\");\n        sb.append(\"<div class='help-content'>\");\n        sb.append(\"On this configuration page you can create, edit, preview or delete \");\n        sb.append(\"Wallboard configurations. Each Wallboard configuration consists of \");\n        sb.append(\"multiple Dashlet entries. Each Dashlet entry requires to set at least \");\n        sb.append(\"four parameters:<br/><br/>\");\n        sb.append(\"\");\n        sb.append(\"<table class='help-table'>\");\n        sb.append(\"  <tr>\");\n        sb.append(\"    <th>Name<\/th>\");\n        sb.append(\"    <th>Description<\/th>\");\n        sb.append(\"  <\/tr>\");\n        sb.append(\"  <tr><td class='help-table-cell'>duration<\/td><td class='help-table-cell'>Time in seconds the Dashlet will be displayed<\/td><\/tr>\");\n        sb.append(\"  <tr><td class='help-table-cell'>priority<\/td><td class='help-table-cell'>Lower priority means that the Dashlet will be displayed more often<\/td><\/tr>\");\n        sb.append(\"  <tr><td class='help-table-cell'>boostedDuration<\/td><td class='help-table-cell'>This value is added to the duration value if the Dashlet is \\\"boosted\\\"<\/td><\/tr>\");\n        sb.append(\"  <tr><td class='help-table-cell'>boostedPriority<\/td><td class='help-table-cell'>This value is subtracted from the Dashlet's priority then the Dashlet is \\\"boosted\\\"<\/td><\/tr>\");\n        sb.append(\"<\/table>\");\n        sb.append(\"<br/>\");\n        sb.append(\"The Dashlet itself computes whether it is \\\"boosted\\\" or not. So, a Dashlet \");\n        sb.append(\"displaying critical data will be displayed more often and for a longer duration. \");\n        sb.append(\"Please select a Dashlet entry on the left for a brief description of the Dashlet \");\n        sb.append(\"and its required parameters.\");\n        sb.append(\"<\/div>\");\n        sb.append(\"\");\n        return sb.toString();\n    }","commit_id":"c49e6424736b31941b647d7f3fa7e3719388b423","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Constructor for instantiating a {@link PropertiesWindow} for a given {@link DashletSpec}.\n     *\n     * @param dashletSpec     the {@link DashletSpec} to edit\n     * @param dashletSelector the {@link DashletSelector} for querying the property data\n     */\n    public PropertiesWindow(final DashletSpec dashletSpec, final DashletSelector dashletSelector) {\n        super(\"Properties\");\n        /**\n         * Setting up this window instance\n         */\n        setModal(true);\n        setClosable(false);\n        setResizable(false);\n        setWidth(\"60%\");\n\n        /**\n         * Using a vertical layout for content\n         */\n        VerticalLayout verticalLayout = new VerticalLayout();\n        verticalLayout.setMargin(true);\n\n        /**\n         * Setting up the table object for displaying the parameters\n         */\n        final Table table = new Table();\n\n        table.setTableFieldFactory(new DefaultFieldFactory() {\n            @Override\n            public Field createField(Container container, Object itemId, Object propertyId, Component uiContext) {\n                Field field = super.createField(container, itemId, propertyId, uiContext);\n                if (propertyId.equals(\"Key\")) {\n                    field.setReadOnly(true);\n                } else {\n                    field.setSizeFull();\n                }\n                return field;\n            }\n        });\n\n        table.setEditable(true);\n        table.setSizeFull();\n        table.setImmediate(true);\n\n        table.addContainerProperty(\"Key\", String.class, \"\");\n        table.addContainerProperty(\"Value\", String.class, \"\");\n\n        /**\n         * Filling the date with parameter data\n         */\n        final Map<String, String> requiredParameters = dashletSelector.getDashletFactoryForName(dashletSpec.getDashletName()).getRequiredParameters();\n\n        for (Map.Entry<String, String> entry : requiredParameters.entrySet()) {\n            if (dashletSpec.getParameters().containsKey(entry.getKey())) {\n                table.addItem(new Object[]{entry.getKey(), dashletSpec.getParameters().get(entry.getKey())}, entry.getKey());\n            } else {\n                table.addItem(new Object[]{entry.getKey(), entry.getValue()}, entry.getKey());\n            }\n        }\n\n        table.setColumnWidth(\"Key\", 100);\n        table.setColumnWidth(\"Value\", -1);\n\n        verticalLayout.addComponent(table);\n\n        /**\n         * Using an additional {@link HorizontalLayout} for layouting the buttons\n         */\n        HorizontalLayout horizontalLayout = new HorizontalLayout();\n\n        horizontalLayout.setMargin(true);\n        horizontalLayout.setSpacing(true);\n        horizontalLayout.setWidth(\"100%\");\n\n        /**\n         * Adding the cancel button...\n         */\n        Button cancel = new Button(\"Cancel\");\n        cancel.addClickListener(new Button.ClickListener() {\n            @Override\n            public void buttonClick(Button.ClickEvent event) {\n                close();\n            }\n        });\n\n        cancel.setClickShortcut(ShortcutAction.KeyCode.ESCAPE, null);\n        horizontalLayout.addComponent(cancel);\n        horizontalLayout.setExpandRatio(cancel, 1);\n        horizontalLayout.setComponentAlignment(cancel, Alignment.TOP_RIGHT);\n\n        /**\n         * ...and the OK button\n         */\n        Button ok = new Button(\"Save\");\n\n        ok.addClickListener(new Button.ClickListener() {\n            @Override\n            public void buttonClick(Button.ClickEvent event) {\n                for (Map.Entry<String, String> entry : requiredParameters.entrySet()) {\n                    String newValue = table.getItem(entry.getKey()).getItemProperty(\"Value\").getValue().toString();\n                    dashletSpec.getParameters().put(entry.getKey(), newValue);\n                }\n\n                WallboardProvider.getInstance().save();\n                ((WallboardConfigUI) getUI()).notifyMessage(\"Data saved\", \"Duration\");\n\n                close();\n            }\n        });\n\n        ok.setClickShortcut(ShortcutAction.KeyCode.ENTER, null);\n        horizontalLayout.addComponent(ok);\n\n        /**\n         * Adding the layout and setting the content\n         */\n        verticalLayout.addComponent(horizontalLayout);\n        setContent(verticalLayout);\n    }","id":61643,"modified_method":"/**\n     * Constructor for instantiating a {@link PropertiesWindow} for a given {@link DashletSpec}.\n     *\n     * @param dashletSpec    the {@link DashletSpec} to edit\n     * @param dashletFactory the {@link DashletFactory} for querying the property data\n     */\n    public PropertiesWindow(final DashletSpec dashletSpec, final DashletFactory dashletFactory) {\n        /**\n         * Using a vertical layout for content\n         */\n        VerticalLayout verticalLayout = new VerticalLayout();\n        verticalLayout.setMargin(true);\n        //verticalLayout.addStyleName(\"debug\");\n        verticalLayout.setSizeFull();\n        verticalLayout.setHeight(100, Unit.PERCENTAGE);\n\n        /**\n         * Setting up the table object for displaying the parameters\n         */\n        final Table table = new Table();\n\n        table.setTableFieldFactory(new DefaultFieldFactory() {\n            @Override\n            public Field createField(Container container, Object itemId, Object propertyId, Component uiContext) {\n                Field field = super.createField(container, itemId, propertyId, uiContext);\n                if (propertyId.equals(\"Key\")) {\n                    field.setReadOnly(true);\n                } else {\n                    field.setSizeFull();\n                }\n                return field;\n            }\n        });\n\n        table.setEditable(true);\n        table.setSizeFull();\n        table.setImmediate(true);\n\n        table.addContainerProperty(\"Key\", String.class, \"\");\n        table.addContainerProperty(\"Value\", String.class, \"\");\n\n        /**\n         * Filling the date with parameter data\n         */\n        final Map<String, String> requiredParameters = dashletFactory.getRequiredParameters();\n\n        for (Map.Entry<String, String> entry : requiredParameters.entrySet()) {\n            table.addItem(new Object[]{entry.getKey(), dashletSpec.getParameters().get(entry.getKey())}, entry.getKey());\n        }\n\n        table.setColumnWidth(\"Key\", 100);\n        table.setColumnWidth(\"Value\", -1);\n        table.setSizeFull();\n        verticalLayout.addComponent(table);\n\n        /**\n         * Using an additional {@link HorizontalLayout} for layouting the buttons\n         */\n        HorizontalLayout horizontalLayout = new HorizontalLayout();\n\n        horizontalLayout.setMargin(true);\n        horizontalLayout.setSpacing(true);\n        horizontalLayout.setWidth(100, Unit.PERCENTAGE);\n\n        /**\n         * Adding the cancel button...\n         */\n        Button cancel = new Button(\"Cancel\");\n        cancel.addClickListener(new Button.ClickListener() {\n            @Override\n            public void buttonClick(Button.ClickEvent event) {\n                close();\n            }\n        });\n\n        cancel.setClickShortcut(ShortcutAction.KeyCode.ESCAPE, null);\n        horizontalLayout.addComponent(cancel);\n        horizontalLayout.setExpandRatio(cancel, 1);\n        horizontalLayout.setComponentAlignment(cancel, Alignment.TOP_RIGHT);\n\n        /**\n         * ...and the OK button\n         */\n        Button ok = new Button(\"Save\");\n\n        ok.addClickListener(new Button.ClickListener() {\n            @Override\n            public void buttonClick(Button.ClickEvent event) {\n                for (Map.Entry<String, String> entry : requiredParameters.entrySet()) {\n                    String newValue = table.getItem(entry.getKey()).getItemProperty(\"Value\").getValue().toString();\n                    dashletSpec.getParameters().put(entry.getKey(), newValue);\n                }\n\n                WallboardProvider.getInstance().save();\n                ((WallboardConfigUI) getUI()).notifyMessage(\"Data saved\", \"Properties\");\n\n                close();\n            }\n        });\n\n        ok.setClickShortcut(ShortcutAction.KeyCode.ENTER, null);\n        horizontalLayout.addComponent(ok);\n        //horizontalLayout.addStyleName(\"debug\");\n\n        /**\n         * Adding the layout and setting the content\n         */\n        verticalLayout.addComponent(horizontalLayout);\n\n        verticalLayout.setExpandRatio(table, 1.0f);\n\n        setContent(verticalLayout);\n    }","commit_id":"c49e6424736b31941b647d7f3fa7e3719388b423","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void testAddMicroblogsContentViewableByEveryone()\n\t\tthrows Exception {\n\t\tselenium.open(\"/user/joebloggs/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//nav/ul/li[1]/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Home\"),\n\t\t\tselenium.getText(\"//nav/ul/li[1]/a/span\"));\n\t\tselenium.clickAt(\"//div[2]/div[1]/ul/li[3]/a\",\n\t\t\tRuntimeVariables.replace(\"Microblogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Microblogs\"),\n\t\t\tselenium.getText(\"//h1/span[2]\"));\n\t\tassertTrue(selenium.isElementPresent(\"//textarea\"));\n\t\tassertEquals(RuntimeVariables.replace(\"You have no microblogs entry.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-info'])[1]\"));\n\t\tselenium.clickAt(\"//textarea\",\n\t\t\tRuntimeVariables.replace(\"Microblogs Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Everyone Friends Coworkers Followers\"),\n\t\t\tselenium.getText(\"//span/select\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Post']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"//textarea\",\n\t\t\tRuntimeVariables.replace(\"Microblogs Content\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//span/select\",\n\t\t\tRuntimeVariables.replace(\"label=Everyone\"));\n\t\tassertEquals(RuntimeVariables.replace(\"133\"),\n\t\t\tselenium.getText(\"//span[@class='microblogs-countdown']\"));\n\t\tselenium.clickAt(\"//input[@value='Post']\",\n\t\t\tRuntimeVariables.replace(\"Post\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='my-entry-bubble ']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//div/span/a/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs test@liferay.com\"),\n\t\t\tselenium.getText(\"//div[@class='user-name']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Microblogs Content\"),\n\t\t\tselenium.getText(\"//div[@class='content']\"));\n\t}","id":61644,"modified_method":"public void testAddMicroblogsContentViewableByEveryone()\n\t\tthrows Exception {\n\t\tselenium.open(\"/user/joebloggs/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//nav/ul/li[1]/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Home\"),\n\t\t\tselenium.getText(\"//nav/ul/li[1]/a/span\"));\n\t\tselenium.clickAt(\"//div/div/div/div[1]/ul/li[3]/a\",\n\t\t\tRuntimeVariables.replace(\"Microblogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Microblogs\"),\n\t\t\tselenium.getText(\"//div[2]/div/div/div/section/header/h1/span[2]\"));\n\t\tassertTrue(selenium.isElementPresent(\"//textarea\"));\n\t\tassertEquals(RuntimeVariables.replace(\"You have no microblogs entry.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-info'])[1]\"));\n\t\tselenium.clickAt(\"//textarea\",\n\t\t\tRuntimeVariables.replace(\"Microblogs Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Everyone Friends Coworkers Followers\"),\n\t\t\tselenium.getText(\"//span/select\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Post']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"//textarea\",\n\t\t\tRuntimeVariables.replace(\"Microblogs Content\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//span/select\",\n\t\t\tRuntimeVariables.replace(\"label=Everyone\"));\n\t\tassertEquals(RuntimeVariables.replace(\"133\"),\n\t\t\tselenium.getText(\"//span[@class='microblogs-countdown']\"));\n\t\tselenium.clickAt(\"//input[@value='Post']\",\n\t\t\tRuntimeVariables.replace(\"Post\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='my-entry-bubble ']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//div/span/a/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs (joebloggs)\"),\n\t\t\tselenium.getText(\"//div[@class='user-name']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Microblogs Content\"),\n\t\t\tselenium.getText(\"//div[@class='content']\"));\n\t}","commit_id":"5a486e6c3ece1e51fa8953de7aa18e7d0b0affaf","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddMicroblogsContentViewableByFollowers()\n\t\tthrows Exception {\n\t\tselenium.open(\"/user/joebloggs/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//nav/ul/li[1]/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Home\"),\n\t\t\tselenium.getText(\"//nav/ul/li[1]/a/span\"));\n\t\tselenium.clickAt(\"//div[2]/div[1]/ul/li[3]/a\",\n\t\t\tRuntimeVariables.replace(\"Microblogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Microblogs\"),\n\t\t\tselenium.getText(\"//h1/span[2]\"));\n\t\tassertTrue(selenium.isElementPresent(\"//textarea\"));\n\t\tassertEquals(RuntimeVariables.replace(\"You have no microblogs entry.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-info'])[1]\"));\n\t\tselenium.clickAt(\"//textarea\",\n\t\t\tRuntimeVariables.replace(\"Microblogs Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Everyone Friends Coworkers Followers\"),\n\t\t\tselenium.getText(\"//span/select\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Post']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"//textarea\",\n\t\t\tRuntimeVariables.replace(\"Microblogs Content\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//span/select\",\n\t\t\tRuntimeVariables.replace(\"label=Followers\"));\n\t\tassertEquals(RuntimeVariables.replace(\"133\"),\n\t\t\tselenium.getText(\"//span[@class='microblogs-countdown']\"));\n\t\tselenium.clickAt(\"//input[@value='Post']\",\n\t\t\tRuntimeVariables.replace(\"Post\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='my-entry-bubble ']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//div/span/a/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs test@liferay.com\"),\n\t\t\tselenium.getText(\"//div[@class='user-name']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Microblogs Content\"),\n\t\t\tselenium.getText(\"//div[@class='content']\"));\n\t\tassertFalse(selenium.isTextPresent(\"Reply\"));\n\t}","id":61645,"modified_method":"public void testAddMicroblogsContentViewableByFollowers()\n\t\tthrows Exception {\n\t\tselenium.open(\"/user/joebloggs/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//nav/ul/li[1]/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Home\"),\n\t\t\tselenium.getText(\"//nav/ul/li[1]/a/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Microblogs\"),\n\t\t\tselenium.getText(\"//div/div/div/div[1]/ul/li[3]/a\"));\n\t\tselenium.clickAt(\"//div/div/div/div[1]/ul/li[3]/a\",\n\t\t\tRuntimeVariables.replace(\"Microblogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Microblogs\"),\n\t\t\tselenium.getText(\"//div[2]/div/div/div/section/header/h1/span[2]\"));\n\t\tassertTrue(selenium.isElementPresent(\"//textarea\"));\n\t\tassertEquals(RuntimeVariables.replace(\"You have no microblogs entry.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-info'])[1]\"));\n\t\tselenium.clickAt(\"//textarea\",\n\t\t\tRuntimeVariables.replace(\"Microblogs Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Everyone Friends Coworkers Followers\"),\n\t\t\tselenium.getText(\"//span/select\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Post']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"//textarea\",\n\t\t\tRuntimeVariables.replace(\"Microblogs Content\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//span/select\",\n\t\t\tRuntimeVariables.replace(\"label=Followers\"));\n\t\tassertEquals(RuntimeVariables.replace(\"133\"),\n\t\t\tselenium.getText(\"//span[@class='microblogs-countdown']\"));\n\t\tselenium.clickAt(\"//input[@value='Post']\",\n\t\t\tRuntimeVariables.replace(\"Post\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='my-entry-bubble ']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//div/span/a/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs (joebloggs)\"),\n\t\t\tselenium.getText(\"//div[@class='user-name']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Microblogs Content\"),\n\t\t\tselenium.getText(\"//div[@class='content']\"));\n\t\tassertFalse(selenium.isTextPresent(\"Reply\"));\n\t}","commit_id":"5a486e6c3ece1e51fa8953de7aa18e7d0b0affaf","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddMicroblogsContentViewableByFriends()\n\t\tthrows Exception {\n\t\tselenium.open(\"/user/joebloggs/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//nav/ul/li[1]/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Home\"),\n\t\t\tselenium.getText(\"//nav/ul/li[1]/a/span\"));\n\t\tselenium.clickAt(\"//div[2]/div[1]/ul/li[3]/a\",\n\t\t\tRuntimeVariables.replace(\"Microblogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Microblogs\"),\n\t\t\tselenium.getText(\"//h1/span[2]\"));\n\t\tassertTrue(selenium.isElementPresent(\"//textarea\"));\n\t\tassertEquals(RuntimeVariables.replace(\"You have no microblogs entry.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-info'])[1]\"));\n\t\tselenium.clickAt(\"//textarea\",\n\t\t\tRuntimeVariables.replace(\"Microblogs Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Everyone Friends Coworkers Followers\"),\n\t\t\tselenium.getText(\"//span/select\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Post']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"//textarea\",\n\t\t\tRuntimeVariables.replace(\"Microblogs Content\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//span/select\",\n\t\t\tRuntimeVariables.replace(\"label=Friends\"));\n\t\tassertEquals(RuntimeVariables.replace(\"133\"),\n\t\t\tselenium.getText(\"//span[@class='microblogs-countdown']\"));\n\t\tselenium.clickAt(\"//input[@value='Post']\",\n\t\t\tRuntimeVariables.replace(\"Post\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='my-entry-bubble ']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//div/span/a/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs test@liferay.com\"),\n\t\t\tselenium.getText(\"//div[@class='user-name']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Microblogs Content\"),\n\t\t\tselenium.getText(\"//div[@class='content']\"));\n\t\tassertFalse(selenium.isTextPresent(\"Reply\"));\n\t}","id":61646,"modified_method":"public void testAddMicroblogsContentViewableByFriends()\n\t\tthrows Exception {\n\t\tselenium.open(\"/user/joebloggs/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//nav/ul/li[1]/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Home\"),\n\t\t\tselenium.getText(\"//nav/ul/li[1]/a/span\"));\n\t\tselenium.clickAt(\"//div/div/div/div[1]/ul/li[3]/a\",\n\t\t\tRuntimeVariables.replace(\"Microblogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Microblogs\"),\n\t\t\tselenium.getText(\"//div[2]/div/div/div/section/header/h1/span[2]\"));\n\t\tassertTrue(selenium.isElementPresent(\"//textarea\"));\n\t\tassertEquals(RuntimeVariables.replace(\"You have no microblogs entry.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-info'])[1]\"));\n\t\tselenium.clickAt(\"//textarea\",\n\t\t\tRuntimeVariables.replace(\"Microblogs Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Everyone Friends Coworkers Followers\"),\n\t\t\tselenium.getText(\"//span/select\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Post']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"//textarea\",\n\t\t\tRuntimeVariables.replace(\"Microblogs Content\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//span/select\",\n\t\t\tRuntimeVariables.replace(\"label=Friends\"));\n\t\tassertEquals(RuntimeVariables.replace(\"133\"),\n\t\t\tselenium.getText(\"//span[@class='microblogs-countdown']\"));\n\t\tselenium.clickAt(\"//input[@value='Post']\",\n\t\t\tRuntimeVariables.replace(\"Post\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='my-entry-bubble ']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//div/span/a/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs (joebloggs)\"),\n\t\t\tselenium.getText(\"//div[@class='user-name']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Microblogs Content\"),\n\t\t\tselenium.getText(\"//div[@class='content']\"));\n\t\tassertFalse(selenium.isTextPresent(\"Reply\"));\n\t}","commit_id":"5a486e6c3ece1e51fa8953de7aa18e7d0b0affaf","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfirmCCCoworkerRequest() throws Exception {\n\t\tselenium.open(\"/user/joebloggs/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//nav/ul/li[1]/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Home\"),\n\t\t\tselenium.getText(\"//nav/ul/li[1]/a/span\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div/div/div/div[1]/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div/div/div/div[1]/ul/li[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Contacts Center\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Contacts Center\"),\n\t\t\tselenium.getText(\"//div[2]/div/div/div/section/header/h1/span[2]\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[2]/div/div[1]/div/div[1]/div/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"You have a pending request.\"),\n\t\t\tselenium.getText(\"//div[2]/div/div[1]/div/div[1]/div/a\"));\n\t\tselenium.clickAt(\"//div[2]/div/div[1]/div/div[1]/div/a\",\n\t\t\tRuntimeVariables.replace(\"You have a pending request.\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//tr[3]/td\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//tr[3]/td\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"socialofficecoworkerfn socialofficecoworkermn socialofficecoworkerln\"),\n\t\t\tselenium.getText(\"//td/div[2]/div/a\"));\n\t\tassertTrue(selenium.isPartialText(\"//td/div[2]/div\",\n\t\t\t\t\"says you are a coworker.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Confirm\"),\n\t\t\tselenium.getText(\"//div[3]/span[1]/a\"));\n\t\tselenium.clickAt(\"//div[3]/span[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Confirm\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"You have no pending request.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tselenium.open(\"/user/joebloggs/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div/div/div/div[1]/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div/div/div/div[1]/ul/li[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Contacts Center\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//div[1]/a/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Manage 1 coworkers.\"),\n\t\t\tselenium.getText(\"//div[1]/div/div/div/div[2]/a\"));\n\t\tselenium.mouseOver(\"//div[1]/a/img\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"socialofficecoworkerfn socialofficecoworkermn socialofficecoworkerln\"),\n\t\t\tselenium.getText(\"//li/div[2]/div[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"socialofficecoworkerea@liferay.com\"),\n\t\t\tselenium.getText(\"//div[3]/span\"));\n\t}","id":61647,"modified_method":"public void testConfirmCCCoworkerRequest() throws Exception {\n\t\tselenium.open(\"/user/joebloggs/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div/div/div/div[1]/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div/div/div/div[1]/ul/li[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Contacts Center\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Contacts Center\"),\n\t\t\tselenium.getText(\"//div[2]/div/div/div/section/header/h1/span[2]\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[2]/div/div[1]/div/div[1]/div/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"You have a pending request.\"),\n\t\t\tselenium.getText(\"//div[2]/div/div[1]/div/div[1]/div/a\"));\n\t\tselenium.clickAt(\"//div[2]/div/div[1]/div/div[1]/div/a\",\n\t\t\tRuntimeVariables.replace(\"You have a pending request.\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//tr[3]/td\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//tr[3]/td\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"socialofficecoworkerfn socialofficecoworkermn socialofficecoworkerln\"),\n\t\t\tselenium.getText(\"//td/div[2]/div/a\"));\n\t\tassertTrue(selenium.isPartialText(\"//td/div[2]/div\",\n\t\t\t\t\"says you are a coworker.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Confirm\"),\n\t\t\tselenium.getText(\"//div[3]/span[1]/a\"));\n\t\tselenium.clickAt(\"//div[3]/span[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Confirm\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"You have no pending request.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tselenium.open(\"/user/joebloggs/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div/div/div/div[1]/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div/div/div/div[1]/ul/li[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Contacts Center\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//div[1]/a/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Manage 1 coworkers.\"),\n\t\t\tselenium.getText(\"//div[1]/div/div/div/div[2]/a\"));\n\t\tselenium.mouseOver(\"//div[1]/a/img\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"socialofficecoworkerfn socialofficecoworkermn socialofficecoworkerln\"),\n\t\t\tselenium.getText(\"//li/div[2]/div[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"socialofficecoworkerea@liferay.com\"),\n\t\t\tselenium.getText(\"//div[3]/span\"));\n\t}","commit_id":"5a486e6c3ece1e51fa8953de7aa18e7d0b0affaf","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfirmCCFriendRequest() throws Exception {\n\t\tselenium.open(\"/user/joebloggs/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//nav/ul/li[1]/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Home\"),\n\t\t\tselenium.getText(\"//nav/ul/li[1]/a/span\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[2]/div/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[2]/div/ul/li[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Contacts Center\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Contacts Center\"),\n\t\t\tselenium.getText(\"//h1/span[2]\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[2]/div/div[1]/div/div[1]/div/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"You have a pending request.\"),\n\t\t\tselenium.getText(\"//div[2]/div/div[1]/div/div[1]/div/a\"));\n\t\tselenium.clickAt(\"//div[2]/div/div[1]/div/div[1]/div/a\",\n\t\t\tRuntimeVariables.replace(\"You have a pending request.\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//tr[3]/td\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//tr[3]/td\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"socialofficefriendfn socialofficefriendmn socialofficefriendln\"),\n\t\t\tselenium.getText(\"//td/div[2]/div/a\"));\n\t\tassertTrue(selenium.isPartialText(\"//td/div[2]/div\",\n\t\t\t\t\"wants to be your friend.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Confirm\"),\n\t\t\tselenium.getText(\"//div[3]/span[1]/a\"));\n\t\tselenium.clickAt(\"//div[3]/span[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Confirm\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"You have no pending request.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tselenium.open(\"/user/joebloggs/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[2]/div/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[2]/div/ul/li[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Contacts Center\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//div[1]/a/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View 1 friends.\"),\n\t\t\tselenium.getText(\"//div[1]/div/div/div/div[2]/a\"));\n\t\tselenium.mouseOver(\"//div[1]/a/img\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"socialofficefriendfn socialofficefriendmn socialofficefriendln\"),\n\t\t\tselenium.getText(\"//li/div[2]/div[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"socialofficefriendea@liferay.com\"),\n\t\t\tselenium.getText(\"//div[3]/span\"));\n\t}","id":61648,"modified_method":"public void testConfirmCCFriendRequest() throws Exception {\n\t\tselenium.open(\"/user/joebloggs/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div/div/div/div[1]/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div/div/div/div[1]/ul/li[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Contacts Center\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Contacts Center\"),\n\t\t\tselenium.getText(\"//div[2]/div/div/div/section/header/h1/span[2]\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[2]/div/div[1]/div/div[1]/div/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"You have a pending request.\"),\n\t\t\tselenium.getText(\"//div[2]/div/div[1]/div/div[1]/div/a\"));\n\t\tselenium.clickAt(\"//div[2]/div/div[1]/div/div[1]/div/a\",\n\t\t\tRuntimeVariables.replace(\"You have a pending request.\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//tr[3]/td\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//tr[3]/td\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"socialofficefriendfn socialofficefriendmn socialofficefriendln\"),\n\t\t\tselenium.getText(\"//td/div[2]/div/a\"));\n\t\tassertTrue(selenium.isPartialText(\"//td/div[2]/div\",\n\t\t\t\t\"wants to be your friend.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Confirm\"),\n\t\t\tselenium.getText(\"//div[3]/span[1]/a\"));\n\t\tselenium.clickAt(\"//div[3]/span[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Confirm\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"You have no pending request.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tselenium.open(\"/user/joebloggs/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div/div/div/div[1]/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div/div/div/div[1]/ul/li[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Contacts Center\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//div[1]/a/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Manage 1 friends.\"),\n\t\t\tselenium.getText(\"//div[1]/div/div/div/div[2]/a\"));\n\t\tselenium.mouseOver(\"//div[1]/a/img\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"socialofficefriendfn socialofficefriendmn socialofficefriendln\"),\n\t\t\tselenium.getText(\"//li/div[2]/div[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"socialofficefriendea@liferay.com\"),\n\t\t\tselenium.getText(\"//div[3]/span\"));\n\t}","commit_id":"5a486e6c3ece1e51fa8953de7aa18e7d0b0affaf","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSOFo_AddAsFollowerCCActions() throws Exception {\n\t\tselenium.open(\"/user/socialofficefollowersn/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//nav/ul/li[1]/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[2]/div/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[2]/div/ul/li[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Contacts Center\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Find People\"),\n\t\t\tselenium.getText(\"//span[3]/a/span\"));\n\t\tselenium.clickAt(\"//span[3]/a/span\",\n\t\t\tRuntimeVariables.replace(\"Find People\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//div[1]/span[1]/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"test@liferay.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"xPath=(//input[@value='Search'])[3]\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//div[2]/div[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"test@liferay.com\"),\n\t\t\tselenium.getText(\"//div[3]/span\"));\n\t\tselenium.clickAt(\"//strong/a/img\", RuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//li[4]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Follow\"),\n\t\t\tselenium.getText(\"//li[4]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//li[4]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","id":61649,"modified_method":"public void testSOFo_AddAsFollowerCCActions() throws Exception {\n\t\tselenium.open(\"/user/socialofficefollowersn/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//nav/ul/li[1]/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div/div/div/div[1]/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div/div/div/div[1]/ul/li[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Contacts Center\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Find People\"),\n\t\t\tselenium.getText(\"//span[3]/a/span\"));\n\t\tselenium.clickAt(\"//span[3]/a/span\",\n\t\t\tRuntimeVariables.replace(\"Find People\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//form/span/span[1]/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"test@liferay.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//span[2]/span/input\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//div[2]/div[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"test@liferay.com\"),\n\t\t\tselenium.getText(\"//div[3]/span\"));\n\t\tselenium.clickAt(\"//strong/a/img\", RuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//li[4]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Follow\"),\n\t\t\tselenium.getText(\"//li[4]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//li[4]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","commit_id":"5a486e6c3ece1e51fa8953de7aa18e7d0b0affaf","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSOFo_ViewMicroblogsEntryActivityFollowing()\n\t\tthrows Exception {\n\t\tselenium.open(\"/user/socialofficefollowersn/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div/div[1]/div/div/div/ul[1]/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div/div[1]/div/div/div/ul[1]/li[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Home\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Activities\"),\n\t\t\tselenium.getText(\"//div[2]/section/header/h1/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Following\"),\n\t\t\tselenium.getText(\"//div/div/div/ul/li[3]/span/span/a\"));\n\t\tselenium.clickAt(\"//div/div/div/ul/li[3]/span/span/a\",\n\t\t\tRuntimeVariables.replace(\"Following\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//div[1]/span[1]/img\"));\n\t\tassertTrue(selenium.isVisible(\"//span[2]/span/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Microblogs Content\"),\n\t\t\tselenium.getText(\"//section/div/div/div/div/div/div[2]/div[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//div[2]/div[2]/a\"));\n\t}","id":61650,"modified_method":"public void testSOFo_ViewMicroblogsEntryActivityFollowing()\n\t\tthrows Exception {\n\t\tselenium.open(\"/user/socialofficefollowersn/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div/div/div/div[1]/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div/div/div/div[1]/ul/li[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Home\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Activities\"),\n\t\t\tselenium.getText(\"//div[2]/div/section/header/h1/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Following\"),\n\t\t\tselenium.getText(\"//div/ul/li[3]/span/a\"));\n\t\tselenium.clickAt(\"//div/ul/li[3]/span/a\",\n\t\t\tRuntimeVariables.replace(\"Following\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//div[1]/span[1]/img\"));\n\t\tassertTrue(selenium.isVisible(\"//span[2]/span/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Microblogs Content\"),\n\t\t\tselenium.getText(\"//section/div/div/div/div/div/div[2]/div[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//div[2]/div[2]/a\"));\n\t}","commit_id":"5a486e6c3ece1e51fa8953de7aa18e7d0b0affaf","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSOFr_AddAsFriendCCActions() throws Exception {\n\t\tselenium.open(\"/user/socialofficefriendsn/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//nav/ul/li[1]/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[2]/div/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[2]/div/ul/li[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Contacts Center\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Find People\"),\n\t\t\tselenium.getText(\"//span[3]/a/span\"));\n\t\tselenium.clickAt(\"//span[3]/a/span\",\n\t\t\tRuntimeVariables.replace(\"Find People\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//div[1]/span[1]/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"test@liferay.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"xPath=(//input[@value='Search'])[3]\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//div[2]/div[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"test@liferay.com\"),\n\t\t\tselenium.getText(\"//div[3]/span\"));\n\t\tselenium.clickAt(\"//strong/a/img\", RuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Add as Friend\"),\n\t\t\tselenium.getText(\"//li[2]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//li[2]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","id":61651,"modified_method":"public void testSOFr_AddAsFriendCCActions() throws Exception {\n\t\tselenium.open(\"/user/socialofficefriendsn/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//nav/ul/li[1]/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div/div/div/div[1]/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div/div/div/div[1]/ul/li[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Contacts Center\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Find People\"),\n\t\t\tselenium.getText(\"//span[3]/a/span\"));\n\t\tselenium.clickAt(\"//span[3]/a/span\",\n\t\t\tRuntimeVariables.replace(\"Find People\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//form/span/span[1]/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"test@liferay.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//span[2]/span/input\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//div[2]/div[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"test@liferay.com\"),\n\t\t\tselenium.getText(\"//div[3]/span\"));\n\t\tselenium.clickAt(\"//strong/a/img\", RuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Add as Friend\"),\n\t\t\tselenium.getText(\"//li[2]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//li[2]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","commit_id":"5a486e6c3ece1e51fa8953de7aa18e7d0b0affaf","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSOFr_ViewMicroblogsEntryActivityFriends()\n\t\tthrows Exception {\n\t\tselenium.open(\"/user/socialofficefriendsn/home\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div/div[1]/div/div/div/ul[1]/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div/div[1]/div/div/div/ul[1]/li[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Home\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Activities\"),\n\t\t\tselenium.getText(\"//div[2]/section/header/h1/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Friends\"),\n\t\t\tselenium.getText(\"//li[1]/span/span/a\"));\n\t\tselenium.clickAt(\"//li[1]/span/span/a\",\n\t\t\tRuntimeVariables.replace(\"Friends\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//div[1]/span[1]/img\"));\n\t\tassertTrue(selenium.isVisible(\"//span[2]/span/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Microblogs Content\"),\n\t\t\tselenium.getText(\"//section/div/div/div/div/div/div[2]/div[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//div[2]/div[2]/a\"));\n\t}","id":61652,"modified_method":"public void testSOFr_ViewMicroblogsEntryActivityFriends()\n\t\tthrows Exception {\n\t\tselenium.open(\"/user/socialofficefriendsn/home\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div/div/div/div[1]/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div/div/div/div[1]/ul/li[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Home\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Activities\"),\n\t\t\tselenium.getText(\"//div[2]/div/section/header/h1/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Friends\"),\n\t\t\tselenium.getText(\"//div/ul/li[1]/span/a\"));\n\t\tselenium.clickAt(\"//div/ul/li[1]/span/a\",\n\t\t\tRuntimeVariables.replace(\"Friends\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//div[1]/span[1]/img\"));\n\t\tassertTrue(selenium.isVisible(\"//span[2]/span/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Microblogs Content\"),\n\t\t\tselenium.getText(\"//section/div/div/div/div/div/div[2]/div[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//div[2]/div[2]/a\"));\n\t}","commit_id":"5a486e6c3ece1e51fa8953de7aa18e7d0b0affaf","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\n\t\ttestSuite.addTestSuite(AddUserSOFriendTest.class);\n\t\ttestSuite.addTestSuite(SignOutTest.class);\n\t\ttestSuite.addTestSuite(SOFr_NewPasswordTest.class);\n\t\ttestSuite.addTestSuite(SignOutTest.class);\n\t\ttestSuite.addTestSuite(SOFr_SignInTest.class);\n\t\ttestSuite.addTestSuite(SOFr_AddAsFriendCCActionsTest.class);\n\t\ttestSuite.addTestSuite(SignOutTest.class);\n\t\ttestSuite.addTestSuite(SOSignInTest.class);\n\t\ttestSuite.addTestSuite(ConfirmCCFriendRequestTest.class);\n\t\ttestSuite.addTestSuite(SignOutTest.class);\n\t\ttestSuite.addTestSuite(SOFr_SignInTest.class);\n\t\ttestSuite.addTestSuite(\n\t\t\tSOFr_ViewMicroblogsEntryActivityFriendsTest.class);\n\t\ttestSuite.addTestSuite(SignOutTest.class);\n\t\ttestSuite.addTestSuite(SOSignInTest.class);\n\t\ttestSuite.addTestSuite(TearDownWHEntryContentTest.class);\n\t\ttestSuite.addTestSuite(TearDownSOUserTest.class);\n\n\t\treturn testSuite;\n\t}","id":61653,"modified_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\n\t\ttestSuite.addTestSuite(AddUserSOFriendTest.class);\n\t\ttestSuite.addTestSuite(AddMicroblogsContentViewableByFriendsTest.class);\n\t\ttestSuite.addTestSuite(SignOutTest.class);\n\t\ttestSuite.addTestSuite(SOFr_NewPasswordTest.class);\n\t\ttestSuite.addTestSuite(SignOutTest.class);\n\t\ttestSuite.addTestSuite(SOFr_SignInTest.class);\n\t\ttestSuite.addTestSuite(SOFr_AddAsFriendCCActionsTest.class);\n\t\ttestSuite.addTestSuite(SignOutTest.class);\n\t\ttestSuite.addTestSuite(SOSignInTest.class);\n\t\ttestSuite.addTestSuite(ConfirmCCFriendRequestTest.class);\n\t\ttestSuite.addTestSuite(SignOutTest.class);\n\t\ttestSuite.addTestSuite(SOFr_SignInTest.class);\n\t\ttestSuite.addTestSuite(\n\t\t\tSOFr_ViewMicroblogsEntryActivityFriendsTest.class);\n\t\ttestSuite.addTestSuite(SignOutTest.class);\n\t\ttestSuite.addTestSuite(SOSignInTest.class);\n\t\ttestSuite.addTestSuite(TearDownWHEntryContentTest.class);\n\t\ttestSuite.addTestSuite(TearDownSOUserTest.class);\n\n\t\treturn testSuite;\n\t}","commit_id":"5a486e6c3ece1e51fa8953de7aa18e7d0b0affaf","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSOSignIn() throws Exception {\n\t\tselenium.setTimeout(\"180000\");\n\t\tselenium.open(\"/web/joebloggs/home\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Sign In\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sign In\", RuntimeVariables.replace(\"Sign In\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_58_login']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\tRuntimeVariables.replace(\"test@liferay.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\tRuntimeVariables.replace(\"test\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_58_rememberMeCheckbox']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(\"//input[@id='_58_rememberMeCheckbox']\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Sign In']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":61654,"modified_method":"public void testSOSignIn() throws Exception {\n\t\tselenium.setTimeout(\"180000\");\n\t\tselenium.open(\"/user/joebloggs/home\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Sign In\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sign In\", RuntimeVariables.replace(\"Sign In\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_58_login']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\tRuntimeVariables.replace(\"test@liferay.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\tRuntimeVariables.replace(\"test\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_58_rememberMeCheckbox']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(\"//input[@id='_58_rememberMeCheckbox']\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Sign In']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"5a486e6c3ece1e51fa8953de7aa18e7d0b0affaf","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownSOUser() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=View\", RuntimeVariables.replace(\"View\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"All Users\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean basic1Visible = selenium.isVisible(\"link=\\u00ab Basic\");\n\n\t\t\t\tif (!basic1Visible) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=\\u00ab Basic\",\n\t\t\t\t\tRuntimeVariables.replace(\"\\u00ab Basic\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.type(\"//input[@name='_125_keywords']\",\n\t\t\t\t\tRuntimeVariables.replace(\"socialoffice\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean user1Deactivated = selenium.isElementPresent(\n\t\t\t\t\t\t\"_125_rowIds\");\n\n\t\t\t\tif (!user1Deactivated) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_rowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Deactivate']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean user2Deactivated = selenium.isElementPresent(\n\t\t\t\t\t\t\"_125_rowIds\");\n\n\t\t\t\tif (!user2Deactivated) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_rowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Deactivate']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean user3Deactivated = selenium.isElementPresent(\n\t\t\t\t\t\t\"_125_rowIds\");\n\n\t\t\t\tif (!user3Deactivated) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_rowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Deactivate']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean user4Deactivated = selenium.isElementPresent(\n\t\t\t\t\t\t\"_125_rowIds\");\n\n\t\t\t\tif (!user4Deactivated) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_rowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Deactivate']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\n\t\t\t\tboolean user5Deactivated = selenium.isElementPresent(\n\t\t\t\t\t\t\"_125_rowIds\");\n\n\t\t\t\tif (!user5Deactivated) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_rowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Deactivate']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\t\t\t\tselenium.clickAt(\"link=View\", RuntimeVariables.replace(\"View\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"All Users\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Advanced \\u00bb\",\n\t\t\t\t\tRuntimeVariables.replace(\"Advanced \\u00bb\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//select[@id='_125_status']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.select(\"//select[@id='_125_status']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Inactive\"));\n\t\t\t\tselenium.clickAt(\"//div[2]/span[2]/span/input\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean user1Deleted = selenium.isElementPresent(\n\t\t\t\t\t\t\"xPath=(//input[@name='_125_rowIds'])[2]\");\n\n\t\t\t\tif (!user1Deleted) {\n\t\t\t\t\tlabel = 8;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"xPath=(//input[@name='_125_rowIds'])[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"xPath=(//input[@value='Delete'])[2]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 8:\n\n\t\t\t\tboolean user2Deleted = selenium.isElementPresent(\n\t\t\t\t\t\t\"xPath=(//input[@name='_125_rowIds'])[2]\");\n\n\t\t\t\tif (!user2Deleted) {\n\t\t\t\t\tlabel = 9;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"xPath=(//input[@name='_125_rowIds'])[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"xPath=(//input[@value='Delete'])[2]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 9:\n\n\t\t\t\tboolean user3Deleted = selenium.isElementPresent(\n\t\t\t\t\t\t\"xPath=(//input[@name='_125_rowIds'])[2]\");\n\n\t\t\t\tif (!user3Deleted) {\n\t\t\t\t\tlabel = 10;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"xPath=(//input[@name='_125_rowIds'])[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"xPath=(//input[@value='Delete'])[2]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 10:\n\n\t\t\t\tboolean user4Deleted = selenium.isElementPresent(\n\t\t\t\t\t\t\"xPath=(//input[@name='_125_rowIds'])[2]\");\n\n\t\t\t\tif (!user4Deleted) {\n\t\t\t\t\tlabel = 11;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"xPath=(//input[@name='_125_rowIds'])[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"xPath=(//input[@value='Delete'])[2]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 11:\n\n\t\t\t\tboolean user5Deleted = selenium.isElementPresent(\n\t\t\t\t\t\t\"xPath=(//input[@name='_125_rowIds'])[2]\");\n\n\t\t\t\tif (!user5Deleted) {\n\t\t\t\t\tlabel = 12;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"xPath=(//input[@name='_125_rowIds'])[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"xPath=(//input[@value='Delete'])[2]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 12:\n\t\t\t\tselenium.clickAt(\"link=View\", RuntimeVariables.replace(\"View\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"All Users\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean basicVisible = selenium.isVisible(\"link=\\u00ab Basic\");\n\n\t\t\t\tif (!basicVisible) {\n\t\t\t\t\tlabel = 13;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=\\u00ab Basic\",\n\t\t\t\t\tRuntimeVariables.replace(\"\\u00ab Basic\"));\n\n\t\t\tcase 13:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":61655,"modified_method":"public void testTearDownSOUser() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/user/joebloggs/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"View All Users\"),\n\t\t\t\t\tselenium.getText(\"//div[2]/div[1]/div/span/span/a\"));\n\t\t\t\tselenium.clickAt(\"//div[2]/div[1]/div/span/span/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"View All Users\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean basic1Visible = selenium.isVisible(\"link=\\u00ab Basic\");\n\n\t\t\t\tif (!basic1Visible) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=\\u00ab Basic\",\n\t\t\t\t\tRuntimeVariables.replace(\"\\u00ab Basic\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.type(\"//input[@name='_125_keywords']\",\n\t\t\t\t\tRuntimeVariables.replace(\"socialoffice\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean user1Deactivated = selenium.isElementPresent(\n\t\t\t\t\t\t\"_125_rowIds\");\n\n\t\t\t\tif (!user1Deactivated) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_rowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Checkbox\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Deactivate']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean user2Deactivated = selenium.isElementPresent(\n\t\t\t\t\t\t\"_125_rowIds\");\n\n\t\t\t\tif (!user2Deactivated) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_rowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Checkbox\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Deactivate']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean user3Deactivated = selenium.isElementPresent(\n\t\t\t\t\t\t\"_125_rowIds\");\n\n\t\t\t\tif (!user3Deactivated) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_rowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Checkbox\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Deactivate']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean user4Deactivated = selenium.isElementPresent(\n\t\t\t\t\t\t\"_125_rowIds\");\n\n\t\t\t\tif (!user4Deactivated) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_rowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Checkbox\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Deactivate']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\n\t\t\t\tboolean user5Deactivated = selenium.isElementPresent(\n\t\t\t\t\t\t\"_125_rowIds\");\n\n\t\t\t\tif (!user5Deactivated) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_rowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Checkbox\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Deactivate']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\t\t\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"View All Users\"),\n\t\t\t\t\tselenium.getText(\"//span/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"View All Users\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Advanced \\u00bb\",\n\t\t\t\t\tRuntimeVariables.replace(\"Advanced \\u00bb\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//select[@id='_125_status']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.select(\"//select[@id='_125_status']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Inactive\"));\n\t\t\t\tselenium.clickAt(\"//div[2]/span[2]/span/input\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean user1Deleted = selenium.isElementPresent(\n\t\t\t\t\t\t\"xPath=(//input[@name='_125_rowIds'])[1]\");\n\n\t\t\t\tif (!user1Deleted) {\n\t\t\t\t\tlabel = 8;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"xPath=(//input[@name='_125_rowIds'])[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"xPath=(//input[@value='Delete'])[1]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 8:\n\n\t\t\t\tboolean user2Deleted = selenium.isElementPresent(\n\t\t\t\t\t\t\"xPath=(//input[@name='_125_rowIds'])[1]\");\n\n\t\t\t\tif (!user2Deleted) {\n\t\t\t\t\tlabel = 9;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"xPath=(//input[@name='_125_rowIds'])[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"xPath=(//input[@value='Delete'])[1]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 9:\n\n\t\t\t\tboolean user3Deleted = selenium.isElementPresent(\n\t\t\t\t\t\t\"xPath=(//input[@name='_125_rowIds'])[1]\");\n\n\t\t\t\tif (!user3Deleted) {\n\t\t\t\t\tlabel = 10;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"xPath=(//input[@name='_125_rowIds'])[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"xPath=(//input[@value='Delete'])[1]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 10:\n\n\t\t\t\tboolean user4Deleted = selenium.isElementPresent(\n\t\t\t\t\t\t\"xPath=(//input[@name='_125_rowIds'])[1]\");\n\n\t\t\t\tif (!user4Deleted) {\n\t\t\t\t\tlabel = 11;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"xPath=(//input[@name='_125_rowIds'])[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"xPath=(//input[@value='Delete'])[1]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 11:\n\n\t\t\t\tboolean user5Deleted = selenium.isElementPresent(\n\t\t\t\t\t\t\"xPath=(//input[@name='_125_rowIds'])[2]\");\n\n\t\t\t\tif (!user5Deleted) {\n\t\t\t\t\tlabel = 12;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"xPath=(//input[@name='_125_rowIds'])[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"xPath=(//input[@value='Delete'])[1]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 12:\n\t\t\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"View All Users\"),\n\t\t\t\t\tselenium.getText(\"//span/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"View All Users\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean basicVisible = selenium.isVisible(\"link=\\u00ab Basic\");\n\n\t\t\t\tif (!basicVisible) {\n\t\t\t\t\tlabel = 13;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=\\u00ab Basic\",\n\t\t\t\t\tRuntimeVariables.replace(\"\\u00ab Basic\"));\n\n\t\t\tcase 13:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"5a486e6c3ece1e51fa8953de7aa18e7d0b0affaf","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownSOUser() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=View\", RuntimeVariables.replace(\"View\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"All Users\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean basic1Visible = selenium.isVisible(\"link=\\u00ab Basic\");\n\n\t\t\t\tif (!basic1Visible) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=\\u00ab Basic\",\n\t\t\t\t\tRuntimeVariables.replace(\"\\u00ab Basic\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.type(\"//input[@name='_125_keywords']\",\n\t\t\t\t\tRuntimeVariables.replace(\"socialoffice\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean user1Deactivated = selenium.isElementPresent(\n\t\t\t\t\t\t\"_125_rowIds\");\n\n\t\t\t\tif (!user1Deactivated) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_rowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Deactivate']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean user2Deactivated = selenium.isElementPresent(\n\t\t\t\t\t\t\"_125_rowIds\");\n\n\t\t\t\tif (!user2Deactivated) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_rowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Deactivate']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean user3Deactivated = selenium.isElementPresent(\n\t\t\t\t\t\t\"_125_rowIds\");\n\n\t\t\t\tif (!user3Deactivated) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_rowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Deactivate']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean user4Deactivated = selenium.isElementPresent(\n\t\t\t\t\t\t\"_125_rowIds\");\n\n\t\t\t\tif (!user4Deactivated) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_rowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Deactivate']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\n\t\t\t\tboolean user5Deactivated = selenium.isElementPresent(\n\t\t\t\t\t\t\"_125_rowIds\");\n\n\t\t\t\tif (!user5Deactivated) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_rowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Deactivate']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\t\t\t\tselenium.clickAt(\"link=View\", RuntimeVariables.replace(\"View\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"All Users\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Advanced \\u00bb\",\n\t\t\t\t\tRuntimeVariables.replace(\"Advanced \\u00bb\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//select[@id='_125_status']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.select(\"//select[@id='_125_status']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Inactive\"));\n\t\t\t\tselenium.clickAt(\"//div[2]/span[2]/span/input\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean user1Deleted = selenium.isElementPresent(\n\t\t\t\t\t\t\"xPath=(//input[@name='_125_rowIds'])[2]\");\n\n\t\t\t\tif (!user1Deleted) {\n\t\t\t\t\tlabel = 8;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"xPath=(//input[@name='_125_rowIds'])[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"xPath=(//input[@value='Delete'])[2]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 8:\n\n\t\t\t\tboolean user2Deleted = selenium.isElementPresent(\n\t\t\t\t\t\t\"xPath=(//input[@name='_125_rowIds'])[2]\");\n\n\t\t\t\tif (!user2Deleted) {\n\t\t\t\t\tlabel = 9;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"xPath=(//input[@name='_125_rowIds'])[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"xPath=(//input[@value='Delete'])[2]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 9:\n\n\t\t\t\tboolean user3Deleted = selenium.isElementPresent(\n\t\t\t\t\t\t\"xPath=(//input[@name='_125_rowIds'])[2]\");\n\n\t\t\t\tif (!user3Deleted) {\n\t\t\t\t\tlabel = 10;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"xPath=(//input[@name='_125_rowIds'])[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"xPath=(//input[@value='Delete'])[2]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 10:\n\n\t\t\t\tboolean user4Deleted = selenium.isElementPresent(\n\t\t\t\t\t\t\"xPath=(//input[@name='_125_rowIds'])[2]\");\n\n\t\t\t\tif (!user4Deleted) {\n\t\t\t\t\tlabel = 11;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"xPath=(//input[@name='_125_rowIds'])[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"xPath=(//input[@value='Delete'])[2]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 11:\n\n\t\t\t\tboolean user5Deleted = selenium.isElementPresent(\n\t\t\t\t\t\t\"xPath=(//input[@name='_125_rowIds'])[2]\");\n\n\t\t\t\tif (!user5Deleted) {\n\t\t\t\t\tlabel = 12;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"xPath=(//input[@name='_125_rowIds'])[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"xPath=(//input[@value='Delete'])[2]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 12:\n\t\t\t\tselenium.clickAt(\"link=View\", RuntimeVariables.replace(\"View\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"All Users\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean basicVisible = selenium.isVisible(\"link=\\u00ab Basic\");\n\n\t\t\t\tif (!basicVisible) {\n\t\t\t\t\tlabel = 13;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=\\u00ab Basic\",\n\t\t\t\t\tRuntimeVariables.replace(\"\\u00ab Basic\"));\n\n\t\t\tcase 13:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":61656,"modified_method":"public void testTearDownSOUser() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/user/joebloggs/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"View All Users\"),\n\t\t\t\t\tselenium.getText(\"//div[2]/div[1]/div/span/span/a\"));\n\t\t\t\tselenium.clickAt(\"//div[2]/div[1]/div/span/span/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"View All Users\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean basic1Visible = selenium.isVisible(\"link=\\u00ab Basic\");\n\n\t\t\t\tif (!basic1Visible) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=\\u00ab Basic\",\n\t\t\t\t\tRuntimeVariables.replace(\"\\u00ab Basic\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.type(\"//input[@name='_125_keywords']\",\n\t\t\t\t\tRuntimeVariables.replace(\"socialoffice\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean user1Deactivated = selenium.isElementPresent(\n\t\t\t\t\t\t\"_125_rowIds\");\n\n\t\t\t\tif (!user1Deactivated) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_rowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Checkbox\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Deactivate']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean user2Deactivated = selenium.isElementPresent(\n\t\t\t\t\t\t\"_125_rowIds\");\n\n\t\t\t\tif (!user2Deactivated) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_rowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Checkbox\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Deactivate']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean user3Deactivated = selenium.isElementPresent(\n\t\t\t\t\t\t\"_125_rowIds\");\n\n\t\t\t\tif (!user3Deactivated) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_rowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Checkbox\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Deactivate']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean user4Deactivated = selenium.isElementPresent(\n\t\t\t\t\t\t\"_125_rowIds\");\n\n\t\t\t\tif (!user4Deactivated) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_rowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Checkbox\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Deactivate']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\n\t\t\t\tboolean user5Deactivated = selenium.isElementPresent(\n\t\t\t\t\t\t\"_125_rowIds\");\n\n\t\t\t\tif (!user5Deactivated) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_rowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Checkbox\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Deactivate']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\t\t\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"View All Users\"),\n\t\t\t\t\tselenium.getText(\"//span/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"View All Users\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Advanced \\u00bb\",\n\t\t\t\t\tRuntimeVariables.replace(\"Advanced \\u00bb\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//select[@id='_125_status']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.select(\"//select[@id='_125_status']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Inactive\"));\n\t\t\t\tselenium.clickAt(\"//div[2]/span[2]/span/input\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean user1Deleted = selenium.isElementPresent(\n\t\t\t\t\t\t\"xPath=(//input[@name='_125_rowIds'])[1]\");\n\n\t\t\t\tif (!user1Deleted) {\n\t\t\t\t\tlabel = 8;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"xPath=(//input[@name='_125_rowIds'])[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"xPath=(//input[@value='Delete'])[1]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 8:\n\n\t\t\t\tboolean user2Deleted = selenium.isElementPresent(\n\t\t\t\t\t\t\"xPath=(//input[@name='_125_rowIds'])[1]\");\n\n\t\t\t\tif (!user2Deleted) {\n\t\t\t\t\tlabel = 9;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"xPath=(//input[@name='_125_rowIds'])[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"xPath=(//input[@value='Delete'])[1]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 9:\n\n\t\t\t\tboolean user3Deleted = selenium.isElementPresent(\n\t\t\t\t\t\t\"xPath=(//input[@name='_125_rowIds'])[1]\");\n\n\t\t\t\tif (!user3Deleted) {\n\t\t\t\t\tlabel = 10;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"xPath=(//input[@name='_125_rowIds'])[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"xPath=(//input[@value='Delete'])[1]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 10:\n\n\t\t\t\tboolean user4Deleted = selenium.isElementPresent(\n\t\t\t\t\t\t\"xPath=(//input[@name='_125_rowIds'])[1]\");\n\n\t\t\t\tif (!user4Deleted) {\n\t\t\t\t\tlabel = 11;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"xPath=(//input[@name='_125_rowIds'])[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"xPath=(//input[@value='Delete'])[1]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 11:\n\n\t\t\t\tboolean user5Deleted = selenium.isElementPresent(\n\t\t\t\t\t\t\"xPath=(//input[@name='_125_rowIds'])[2]\");\n\n\t\t\t\tif (!user5Deleted) {\n\t\t\t\t\tlabel = 12;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"xPath=(//input[@name='_125_rowIds'])[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"xPath=(//input[@value='Delete'])[1]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 12:\n\t\t\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"View All Users\"),\n\t\t\t\t\tselenium.getText(\"//span/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"View All Users\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean basicVisible = selenium.isVisible(\"link=\\u00ab Basic\");\n\n\t\t\t\tif (!basicVisible) {\n\t\t\t\t\tlabel = 13;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=\\u00ab Basic\",\n\t\t\t\t\tRuntimeVariables.replace(\"\\u00ab Basic\"));\n\n\t\t\tcase 13:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"5a486e6c3ece1e51fa8953de7aa18e7d0b0affaf","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownSOUser() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=View\", RuntimeVariables.replace(\"View\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"All Users\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean basic1Visible = selenium.isVisible(\"link=\\u00ab Basic\");\n\n\t\t\t\tif (!basic1Visible) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=\\u00ab Basic\",\n\t\t\t\t\tRuntimeVariables.replace(\"\\u00ab Basic\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.type(\"//input[@name='_125_keywords']\",\n\t\t\t\t\tRuntimeVariables.replace(\"socialoffice\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean user1Deactivated = selenium.isElementPresent(\n\t\t\t\t\t\t\"_125_rowIds\");\n\n\t\t\t\tif (!user1Deactivated) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_rowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Deactivate']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean user2Deactivated = selenium.isElementPresent(\n\t\t\t\t\t\t\"_125_rowIds\");\n\n\t\t\t\tif (!user2Deactivated) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_rowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Deactivate']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean user3Deactivated = selenium.isElementPresent(\n\t\t\t\t\t\t\"_125_rowIds\");\n\n\t\t\t\tif (!user3Deactivated) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_rowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Deactivate']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean user4Deactivated = selenium.isElementPresent(\n\t\t\t\t\t\t\"_125_rowIds\");\n\n\t\t\t\tif (!user4Deactivated) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_rowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Deactivate']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\n\t\t\t\tboolean user5Deactivated = selenium.isElementPresent(\n\t\t\t\t\t\t\"_125_rowIds\");\n\n\t\t\t\tif (!user5Deactivated) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_rowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Deactivate']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\t\t\t\tselenium.clickAt(\"link=View\", RuntimeVariables.replace(\"View\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"All Users\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Advanced \\u00bb\",\n\t\t\t\t\tRuntimeVariables.replace(\"Advanced \\u00bb\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//select[@id='_125_status']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.select(\"//select[@id='_125_status']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Inactive\"));\n\t\t\t\tselenium.clickAt(\"//div[2]/span[2]/span/input\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean user1Deleted = selenium.isElementPresent(\n\t\t\t\t\t\t\"xPath=(//input[@name='_125_rowIds'])[2]\");\n\n\t\t\t\tif (!user1Deleted) {\n\t\t\t\t\tlabel = 8;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"xPath=(//input[@name='_125_rowIds'])[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"xPath=(//input[@value='Delete'])[2]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 8:\n\n\t\t\t\tboolean user2Deleted = selenium.isElementPresent(\n\t\t\t\t\t\t\"xPath=(//input[@name='_125_rowIds'])[2]\");\n\n\t\t\t\tif (!user2Deleted) {\n\t\t\t\t\tlabel = 9;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"xPath=(//input[@name='_125_rowIds'])[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"xPath=(//input[@value='Delete'])[2]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 9:\n\n\t\t\t\tboolean user3Deleted = selenium.isElementPresent(\n\t\t\t\t\t\t\"xPath=(//input[@name='_125_rowIds'])[2]\");\n\n\t\t\t\tif (!user3Deleted) {\n\t\t\t\t\tlabel = 10;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"xPath=(//input[@name='_125_rowIds'])[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"xPath=(//input[@value='Delete'])[2]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 10:\n\n\t\t\t\tboolean user4Deleted = selenium.isElementPresent(\n\t\t\t\t\t\t\"xPath=(//input[@name='_125_rowIds'])[2]\");\n\n\t\t\t\tif (!user4Deleted) {\n\t\t\t\t\tlabel = 11;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"xPath=(//input[@name='_125_rowIds'])[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"xPath=(//input[@value='Delete'])[2]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 11:\n\n\t\t\t\tboolean user5Deleted = selenium.isElementPresent(\n\t\t\t\t\t\t\"xPath=(//input[@name='_125_rowIds'])[2]\");\n\n\t\t\t\tif (!user5Deleted) {\n\t\t\t\t\tlabel = 12;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"xPath=(//input[@name='_125_rowIds'])[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"xPath=(//input[@value='Delete'])[2]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 12:\n\t\t\t\tselenium.clickAt(\"link=View\", RuntimeVariables.replace(\"View\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"All Users\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean basicVisible = selenium.isVisible(\"link=\\u00ab Basic\");\n\n\t\t\t\tif (!basicVisible) {\n\t\t\t\t\tlabel = 13;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=\\u00ab Basic\",\n\t\t\t\t\tRuntimeVariables.replace(\"\\u00ab Basic\"));\n\n\t\t\tcase 13:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":61657,"modified_method":"public void testTearDownSOUser() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/user/joebloggs/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"View All Users\"),\n\t\t\t\t\tselenium.getText(\"//div[2]/div[1]/div/span/span/a\"));\n\t\t\t\tselenium.clickAt(\"//div[2]/div[1]/div/span/span/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"View All Users\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean basic1Visible = selenium.isVisible(\"link=\\u00ab Basic\");\n\n\t\t\t\tif (!basic1Visible) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=\\u00ab Basic\",\n\t\t\t\t\tRuntimeVariables.replace(\"\\u00ab Basic\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.type(\"//input[@name='_125_keywords']\",\n\t\t\t\t\tRuntimeVariables.replace(\"socialoffice\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean user1Deactivated = selenium.isElementPresent(\n\t\t\t\t\t\t\"_125_rowIds\");\n\n\t\t\t\tif (!user1Deactivated) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_rowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Checkbox\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Deactivate']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean user2Deactivated = selenium.isElementPresent(\n\t\t\t\t\t\t\"_125_rowIds\");\n\n\t\t\t\tif (!user2Deactivated) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_rowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Checkbox\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Deactivate']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean user3Deactivated = selenium.isElementPresent(\n\t\t\t\t\t\t\"_125_rowIds\");\n\n\t\t\t\tif (!user3Deactivated) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_rowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Checkbox\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Deactivate']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean user4Deactivated = selenium.isElementPresent(\n\t\t\t\t\t\t\"_125_rowIds\");\n\n\t\t\t\tif (!user4Deactivated) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_rowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Checkbox\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Deactivate']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\n\t\t\t\tboolean user5Deactivated = selenium.isElementPresent(\n\t\t\t\t\t\t\"_125_rowIds\");\n\n\t\t\t\tif (!user5Deactivated) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_rowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Checkbox\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Deactivate']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\t\t\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"View All Users\"),\n\t\t\t\t\tselenium.getText(\"//span/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"View All Users\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Advanced \\u00bb\",\n\t\t\t\t\tRuntimeVariables.replace(\"Advanced \\u00bb\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//select[@id='_125_status']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.select(\"//select[@id='_125_status']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Inactive\"));\n\t\t\t\tselenium.clickAt(\"//div[2]/span[2]/span/input\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean user1Deleted = selenium.isElementPresent(\n\t\t\t\t\t\t\"xPath=(//input[@name='_125_rowIds'])[1]\");\n\n\t\t\t\tif (!user1Deleted) {\n\t\t\t\t\tlabel = 8;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"xPath=(//input[@name='_125_rowIds'])[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"xPath=(//input[@value='Delete'])[1]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 8:\n\n\t\t\t\tboolean user2Deleted = selenium.isElementPresent(\n\t\t\t\t\t\t\"xPath=(//input[@name='_125_rowIds'])[1]\");\n\n\t\t\t\tif (!user2Deleted) {\n\t\t\t\t\tlabel = 9;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"xPath=(//input[@name='_125_rowIds'])[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"xPath=(//input[@value='Delete'])[1]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 9:\n\n\t\t\t\tboolean user3Deleted = selenium.isElementPresent(\n\t\t\t\t\t\t\"xPath=(//input[@name='_125_rowIds'])[1]\");\n\n\t\t\t\tif (!user3Deleted) {\n\t\t\t\t\tlabel = 10;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"xPath=(//input[@name='_125_rowIds'])[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"xPath=(//input[@value='Delete'])[1]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 10:\n\n\t\t\t\tboolean user4Deleted = selenium.isElementPresent(\n\t\t\t\t\t\t\"xPath=(//input[@name='_125_rowIds'])[1]\");\n\n\t\t\t\tif (!user4Deleted) {\n\t\t\t\t\tlabel = 11;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"xPath=(//input[@name='_125_rowIds'])[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"xPath=(//input[@value='Delete'])[1]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 11:\n\n\t\t\t\tboolean user5Deleted = selenium.isElementPresent(\n\t\t\t\t\t\t\"xPath=(//input[@name='_125_rowIds'])[2]\");\n\n\t\t\t\tif (!user5Deleted) {\n\t\t\t\t\tlabel = 12;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"xPath=(//input[@name='_125_rowIds'])[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"xPath=(//input[@value='Delete'])[1]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 12:\n\t\t\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"View All Users\"),\n\t\t\t\t\tselenium.getText(\"//span/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"View All Users\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean basicVisible = selenium.isVisible(\"link=\\u00ab Basic\");\n\n\t\t\t\tif (!basicVisible) {\n\t\t\t\t\tlabel = 13;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=\\u00ab Basic\",\n\t\t\t\t\tRuntimeVariables.replace(\"\\u00ab Basic\"));\n\n\t\t\tcase 13:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"5a486e6c3ece1e51fa8953de7aa18e7d0b0affaf","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownWHEntryContent() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/user/joebloggs/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//ul[2]/li[2]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//ul[2]/li[2]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Microblogs\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Microblogs\"),\n\t\t\t\t\tselenium.getText(\"//div[2]/div/div/section/header/h1\"));\n\t\t\t\tassertTrue(selenium.isPartialText(\"//div[2]/h1/span\",\n\t\t\t\t\t\t\"What's happening?\"));\n\n\t\t\t\tboolean whatsHappeningEntry1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\");\n\n\t\t\t\tif (!whatsHappeningEntry1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean whatsHappeningEntry2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\");\n\n\t\t\t\tif (!whatsHappeningEntry2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean whatsHappeningEntry3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\");\n\n\t\t\t\tif (!whatsHappeningEntry3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean whatsHappeningEntry4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\");\n\n\t\t\t\tif (!whatsHappeningEntry4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean whatsHappeningEntry5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\");\n\n\t\t\t\tif (!whatsHappeningEntry5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":61658,"modified_method":"public void testTearDownWHEntryContent() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/user/joebloggs/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div/div/div/div[1]/ul/li[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div/div/div/div[1]/ul/li[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Microblogs\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Microblogs\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[2]/div/div/div/section/header/h1/span[2]\"));\n\t\t\t\tassertTrue(selenium.isPartialText(\"//div[2]/h1/span\",\n\t\t\t\t\t\t\"What's happening?\"));\n\n\t\t\t\tboolean whatsHappeningEntry1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\");\n\n\t\t\t\tif (!whatsHappeningEntry1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean whatsHappeningEntry2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\");\n\n\t\t\t\tif (!whatsHappeningEntry2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean whatsHappeningEntry3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\");\n\n\t\t\t\tif (!whatsHappeningEntry3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean whatsHappeningEntry4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\");\n\n\t\t\t\tif (!whatsHappeningEntry4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean whatsHappeningEntry5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\");\n\n\t\t\t\tif (!whatsHappeningEntry5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"5a486e6c3ece1e51fa8953de7aa18e7d0b0affaf","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownWHEntryContent() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/user/joebloggs/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//ul[2]/li[2]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//ul[2]/li[2]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Microblogs\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Microblogs\"),\n\t\t\t\t\tselenium.getText(\"//div[2]/div/div/section/header/h1\"));\n\t\t\t\tassertTrue(selenium.isPartialText(\"//div[2]/h1/span\",\n\t\t\t\t\t\t\"What's happening?\"));\n\n\t\t\t\tboolean whatsHappeningEntry1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\");\n\n\t\t\t\tif (!whatsHappeningEntry1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean whatsHappeningEntry2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\");\n\n\t\t\t\tif (!whatsHappeningEntry2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean whatsHappeningEntry3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\");\n\n\t\t\t\tif (!whatsHappeningEntry3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean whatsHappeningEntry4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\");\n\n\t\t\t\tif (!whatsHappeningEntry4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean whatsHappeningEntry5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\");\n\n\t\t\t\tif (!whatsHappeningEntry5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":61659,"modified_method":"public void testTearDownWHEntryContent() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/user/joebloggs/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div/div/div/div[1]/ul/li[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div/div/div/div[1]/ul/li[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Microblogs\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Microblogs\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[2]/div/div/div/section/header/h1/span[2]\"));\n\t\t\t\tassertTrue(selenium.isPartialText(\"//div[2]/h1/span\",\n\t\t\t\t\t\t\"What's happening?\"));\n\n\t\t\t\tboolean whatsHappeningEntry1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\");\n\n\t\t\t\tif (!whatsHappeningEntry1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean whatsHappeningEntry2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\");\n\n\t\t\t\tif (!whatsHappeningEntry2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean whatsHappeningEntry3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\");\n\n\t\t\t\tif (!whatsHappeningEntry3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean whatsHappeningEntry4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\");\n\n\t\t\t\tif (!whatsHappeningEntry4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean whatsHappeningEntry5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\");\n\n\t\t\t\tif (!whatsHappeningEntry5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"5a486e6c3ece1e51fa8953de7aa18e7d0b0affaf","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownWHEntryContent() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/user/joebloggs/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//ul[2]/li[2]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//ul[2]/li[2]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Microblogs\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Microblogs\"),\n\t\t\t\t\tselenium.getText(\"//div[2]/div/div/section/header/h1\"));\n\t\t\t\tassertTrue(selenium.isPartialText(\"//div[2]/h1/span\",\n\t\t\t\t\t\t\"What's happening?\"));\n\n\t\t\t\tboolean whatsHappeningEntry1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\");\n\n\t\t\t\tif (!whatsHappeningEntry1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean whatsHappeningEntry2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\");\n\n\t\t\t\tif (!whatsHappeningEntry2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean whatsHappeningEntry3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\");\n\n\t\t\t\tif (!whatsHappeningEntry3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean whatsHappeningEntry4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\");\n\n\t\t\t\tif (!whatsHappeningEntry4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean whatsHappeningEntry5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\");\n\n\t\t\t\tif (!whatsHappeningEntry5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":61660,"modified_method":"public void testTearDownWHEntryContent() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/user/joebloggs/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div/div/div/div[1]/ul/li[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div/div/div/div[1]/ul/li[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Microblogs\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Microblogs\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[2]/div/div/div/section/header/h1/span[2]\"));\n\t\t\t\tassertTrue(selenium.isPartialText(\"//div[2]/h1/span\",\n\t\t\t\t\t\t\"What's happening?\"));\n\n\t\t\t\tboolean whatsHappeningEntry1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\");\n\n\t\t\t\tif (!whatsHappeningEntry1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean whatsHappeningEntry2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\");\n\n\t\t\t\tif (!whatsHappeningEntry2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean whatsHappeningEntry3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\");\n\n\t\t\t\tif (!whatsHappeningEntry3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean whatsHappeningEntry4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\");\n\n\t\t\t\tif (!whatsHappeningEntry4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean whatsHappeningEntry5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\");\n\n\t\t\t\tif (!whatsHappeningEntry5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"5a486e6c3ece1e51fa8953de7aa18e7d0b0affaf","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownWHEntryContent() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/user/joebloggs/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//ul[2]/li[2]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//ul[2]/li[2]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Microblogs\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Microblogs\"),\n\t\t\t\t\tselenium.getText(\"//div[2]/div/div/section/header/h1\"));\n\t\t\t\tassertTrue(selenium.isPartialText(\"//div[2]/h1/span\",\n\t\t\t\t\t\t\"What's happening?\"));\n\n\t\t\t\tboolean whatsHappeningEntry1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\");\n\n\t\t\t\tif (!whatsHappeningEntry1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean whatsHappeningEntry2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\");\n\n\t\t\t\tif (!whatsHappeningEntry2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean whatsHappeningEntry3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\");\n\n\t\t\t\tif (!whatsHappeningEntry3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean whatsHappeningEntry4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\");\n\n\t\t\t\tif (!whatsHappeningEntry4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean whatsHappeningEntry5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\");\n\n\t\t\t\tif (!whatsHappeningEntry5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":61661,"modified_method":"public void testTearDownWHEntryContent() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/user/joebloggs/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div/div/div/div[1]/ul/li[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div/div/div/div[1]/ul/li[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Microblogs\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Microblogs\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[2]/div/div/div/section/header/h1/span[2]\"));\n\t\t\t\tassertTrue(selenium.isPartialText(\"//div[2]/h1/span\",\n\t\t\t\t\t\t\"What's happening?\"));\n\n\t\t\t\tboolean whatsHappeningEntry1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\");\n\n\t\t\t\tif (!whatsHappeningEntry1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean whatsHappeningEntry2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\");\n\n\t\t\t\tif (!whatsHappeningEntry2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean whatsHappeningEntry3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\");\n\n\t\t\t\tif (!whatsHappeningEntry3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean whatsHappeningEntry4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\");\n\n\t\t\t\tif (!whatsHappeningEntry4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean whatsHappeningEntry5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\");\n\n\t\t\t\tif (!whatsHappeningEntry5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//span[.='Delete' and count(*)=0]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"5a486e6c3ece1e51fa8953de7aa18e7d0b0affaf","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewMicroblogsEntryActivityMe() throws Exception {\n\t\tselenium.open(\"/user/socialofficefriendsn/home\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div/div[1]/div/div/div/ul[1]/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div/div[1]/div/div/div/ul[1]/li[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Home\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Activities\"),\n\t\t\tselenium.getText(\"//div[2]/section/header/h1/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Me\"),\n\t\t\tselenium.getText(\"//li[5]/span/span/a\"));\n\t\tselenium.clickAt(\"//li[5]/span/span/a\", RuntimeVariables.replace(\"Me\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//div[1]/span[1]/img\"));\n\t\tassertTrue(selenium.isVisible(\"//span[2]/span/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Microblogs Content\"),\n\t\t\tselenium.getText(\"//section/div/div/div/div/div/div[2]/div[1]\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//section/div/div/div/div/div/div[2]/div[2]\", \"Joe\"));\n\t}","id":61662,"modified_method":"public void testViewMicroblogsEntryActivityMe() throws Exception {\n\t\tselenium.open(\"/user/joebloggs/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div/div/div/div[1]/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div/div/div/div[1]/ul/li[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Home\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Activities\"),\n\t\t\tselenium.getText(\"//div[2]/div/section/header/h1/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Me\"),\n\t\t\tselenium.getText(\"//section/div/div/div/ul/li[5]/span/a\"));\n\t\tselenium.clickAt(\"//section/div/div/div/ul/li[5]/span/a\",\n\t\t\tRuntimeVariables.replace(\"Me\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//div[1]/span[1]/img\"));\n\t\tassertTrue(selenium.isVisible(\"//span[2]/span/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Microblogs Content\"),\n\t\t\tselenium.getText(\"//section/div/div/div/div/div/div[2]/div[1]\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//section/div/div/div/div/div/div[2]/div[2]\", \"Joe\"));\n\t}","commit_id":"5a486e6c3ece1e51fa8953de7aa18e7d0b0affaf","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddNewDMFolderDocumentAPActions() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Add New\"),\n\t\t\tselenium.getText(\"//span[@title='Add New']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Add New']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Add New\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Document')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Basic Document\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Document')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Document')]\",\n\t\t\tRuntimeVariables.replace(\"Basic Document\"));\n\t\tselenium.waitForVisible(\"//iframe[contains(@id,'editAsset')]\");\n\t\tselenium.selectFrame(\"//iframe[contains(@id,'editAsset')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/search_container.js')]\");\n\t\tselenium.waitForVisible(\"//input[@value='Select']\");\n\t\tselenium.clickAt(\"//input[@value='Select']\",\n\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\tThread.sleep(1000);\n\t\tselenium.selectWindow(\"title=Documents and Media\");\n\t\tselenium.waitForVisible(\"//input[@value='Choose']\");\n\t\tselenium.click(\"//input[@value='Choose']\");\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.waitForVisible(\"//iframe[contains(@id,'editAsset')]\");\n\t\tselenium.selectFrame(\"//iframe[contains(@id,'editAsset')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/search_container.js')]\");\n\t\tselenium.waitForText(\"//a[@id='_20_folderName']\", \"DM Folder Name\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Name\"),\n\t\t\tselenium.getText(\"//a[@id='_20_folderName']\"));\n\t\tselenium.uploadCommonFile(\"//input[@id='_20_file']\",\n\t\t\tRuntimeVariables.replace(\"Document_1.txt\"));\n\t\tselenium.type(\"//input[@id='_20_title']\",\n\t\t\tRuntimeVariables.replace(\"DM Folder Document Title\"));\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"xPath=(//h3[@class='asset-title']/a)\",\n\t\t\t\"DM Folder Document Title\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"xPath=(//h3[@class='asset-title']/a)\"));\n\t}","id":61663,"modified_method":"public void testAddNewDMFolderDocumentAPActions() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Add New\"),\n\t\t\tselenium.getText(\"//span[@title='Add New']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Add New']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Add New\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Document')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Basic Document\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Document')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Document')]\",\n\t\t\tRuntimeVariables.replace(\"Basic Document\"));\n\t\tselenium.waitForVisible(\"//iframe[contains(@id,'editAsset')]\");\n\t\tselenium.selectFrame(\"//iframe[contains(@id,'editAsset')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/search_container.js')]\");\n\t\tselenium.waitForVisible(\"//input[@value='Select']\");\n\t\tselenium.clickAt(\"//input[@value='Select']\",\n\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.waitForVisible(\"//iframe[@name='_20_selectFolder']\");\n\t\tselenium.selectFrame(\"//iframe[@name='_20_selectFolder']\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/search_container.js')]\");\n\t\tselenium.waitForVisible(\"//input[@value='Choose']\");\n\t\tselenium.clickAt(\"//input[@value='Choose']\",\n\t\t\tRuntimeVariables.replace(\"Choose\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.waitForVisible(\"//iframe[contains(@id,'editAsset')]\");\n\t\tselenium.selectFrame(\"//iframe[contains(@id,'editAsset')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/search_container.js')]\");\n\t\tselenium.waitForText(\"//a[@id='_20_folderName']\", \"DM Folder Name\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Name\"),\n\t\t\tselenium.getText(\"//a[@id='_20_folderName']\"));\n\t\tselenium.uploadCommonFile(\"//input[@id='_20_file']\",\n\t\t\tRuntimeVariables.replace(\"Document_1.txt\"));\n\t\tselenium.type(\"//input[@id='_20_title']\",\n\t\t\tRuntimeVariables.replace(\"DM Folder Document Title\"));\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//h3[@class='asset-title']/a\",\n\t\t\t\"DM Folder Document Title\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t}","commit_id":"300a41dd97625518137a6c186994e1fce1d6cb69","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddNewDMFolderImageAPActions() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Add New\"),\n\t\t\tselenium.getText(\"//span[@title='Add New']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Add New']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Add New\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Document')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Basic Document\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Document')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Document')]\",\n\t\t\tRuntimeVariables.replace(\"Basic Document\"));\n\t\tselenium.waitForVisible(\"//iframe[contains(@id,'editAsset')]\");\n\t\tselenium.selectFrame(\"//iframe[contains(@id,'editAsset')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/search_container.js')]\");\n\t\tselenium.waitForVisible(\"//input[@value='Select']\");\n\t\tselenium.clickAt(\"//input[@value='Select']\",\n\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\tThread.sleep(1000);\n\t\tselenium.selectWindow(\"title=Documents and Media\");\n\t\tselenium.waitForVisible(\"//input[@value='Choose']\");\n\t\tselenium.click(\"//input[@value='Choose']\");\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.waitForVisible(\"//iframe[contains(@id,'editAsset')]\");\n\t\tselenium.selectFrame(\"//iframe[contains(@id,'editAsset')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/search_container.js')]\");\n\t\tselenium.waitForText(\"//a[@id='_20_folderName']\", \"DM Folder Name\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Name\"),\n\t\t\tselenium.getText(\"//a[@id='_20_folderName']\"));\n\t\tselenium.uploadCommonFile(\"//input[@id='_20_file']\",\n\t\t\tRuntimeVariables.replace(\"Document_1.jpg\"));\n\t\tselenium.type(\"//input[@id='_20_title']\",\n\t\t\tRuntimeVariables.replace(\"DM Folder Image Title\"));\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//h3[@class='asset-title']/a\",\n\t\t\t\"DM Folder Image Title\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tassertTrue(selenium.isVisible(\"//h3/a/img\"));\n\t}","id":61664,"modified_method":"public void testAddNewDMFolderImageAPActions() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Add New\"),\n\t\t\tselenium.getText(\"//span[@title='Add New']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Add New']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Add New\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Document')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Basic Document\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Document')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Document')]\",\n\t\t\tRuntimeVariables.replace(\"Basic Document\"));\n\t\tselenium.waitForVisible(\"//iframe[contains(@id,'editAsset')]\");\n\t\tselenium.selectFrame(\"//iframe[contains(@id,'editAsset')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/search_container.js')]\");\n\t\tselenium.waitForVisible(\"//input[@value='Select']\");\n\t\tselenium.clickAt(\"//input[@value='Select']\",\n\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.waitForVisible(\"//iframe[@name='_20_selectFolder']\");\n\t\tselenium.selectFrame(\"//iframe[@name='_20_selectFolder']\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/search_container.js')]\");\n\t\tselenium.waitForVisible(\"//input[@value='Choose']\");\n\t\tselenium.clickAt(\"//input[@value='Choose']\",\n\t\t\tRuntimeVariables.replace(\"Choose\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.waitForVisible(\"//iframe[contains(@id,'editAsset')]\");\n\t\tselenium.selectFrame(\"//iframe[contains(@id,'editAsset')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/search_container.js')]\");\n\t\tselenium.waitForText(\"//a[@id='_20_folderName']\", \"DM Folder Name\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Name\"),\n\t\t\tselenium.getText(\"//a[@id='_20_folderName']\"));\n\t\tselenium.uploadCommonFile(\"//input[@id='_20_file']\",\n\t\t\tRuntimeVariables.replace(\"Document_1.jpg\"));\n\t\tselenium.type(\"//input[@id='_20_title']\",\n\t\t\tRuntimeVariables.replace(\"DM Folder Image Title\"));\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//h3[@class='asset-title']/a\",\n\t\t\t\"DM Folder Image Title\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tassertTrue(selenium.isVisible(\"//h3/a/img\"));\n\t}","commit_id":"300a41dd97625518137a6c186994e1fce1d6cb69","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testBeTheFirstDMFolderDocumentCommentAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Be the first.\"),\n\t\t\tselenium.getText(\"//fieldset/div/a\"));\n\t\tselenium.clickAt(\"//fieldset/div/a\",\n\t\t\tRuntimeVariables.replace(\"Be the first.\"));\n\t\tselenium.waitForVisible(\"//textarea\");\n\t\tselenium.type(\"//textarea\",\n\t\t\tRuntimeVariables.replace(\"DM Folder Document Comment Body\"));\n\t\tselenium.clickAt(\"//input[@value='Reply']\",\n\t\t\tRuntimeVariables.replace(\"Reply\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-message-response portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-message-response portlet-msg-success']\"));\n\t\tselenium.waitForText(\"//span[@class='user-name']\", \"Joe Bloggs\");\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//span[@class='user-name']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//div[3]/h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Comment Body\"),\n\t\t\tselenium.getText(\"//div/div[3]/div/div[1]\"));\n\t}","id":61665,"modified_method":"public void testBeTheFirstDMFolderDocumentCommentAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Be the first.\"),\n\t\t\tselenium.getText(\"//fieldset/div/a\"));\n\t\tselenium.clickAt(\"//fieldset/div/a\",\n\t\t\tRuntimeVariables.replace(\"Be the first.\"));\n\t\tselenium.waitForVisible(\"//textarea\");\n\t\tselenium.type(\"//textarea\",\n\t\t\tRuntimeVariables.replace(\"DM Folder Document Comment Body\"));\n\t\tselenium.clickAt(\"//input[@value='Reply']\",\n\t\t\tRuntimeVariables.replace(\"Reply\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-message-response portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-message-response portlet-msg-success']\"));\n\t\tselenium.waitForText(\"//span[@class='user-name']\", \"Joe Bloggs\");\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//span[@class='user-name']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Comment Body\"),\n\t\t\tselenium.getText(\"//div[@class='lfr-discussion-message']\"));\n\t}","commit_id":"300a41dd97625518137a6c186994e1fce1d6cb69","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletShowMetadataViewCount()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//nav[@class='site-breadcrumbs aui-helper-hidden lfr-hudcrumbs']\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"link=Display Settings\");\n\t\tselenium.clickAt(\"link=Display Settings\",\n\t\t\tRuntimeVariables.replace(\"Display Settings\"));\n\t\tselenium.waitForVisible(\"//select[@id='_86_availableMetadataFields']\");\n\t\tselenium.addSelection(\"//select[@id='_86_availableMetadataFields']\",\n\t\t\tRuntimeVariables.replace(\"View Count\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"xPath=(//button[@title='Move selected items from Available to Current.'])/span\");\n\t\tselenium.clickAt(\"xPath=(//button[@title='Move selected items from Available to Current.'])/span\",\n\t\t\tRuntimeVariables.replace(\"Left Arrow\"));\n\t\tselenium.waitForPartialText(\"//select[@id='_86_currentMetadataFields']\",\n\t\t\t\"View Count\");\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//select[@id='_86_currentMetadataFields']\", \"View Count\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//select[@id='_86_currentMetadataFields']\", \"View Count\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":61666,"modified_method":"public void testConfigurePortletShowMetadataViewCount()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//nav[@class='site-breadcrumbs aui-helper-hidden lfr-hudcrumbs']\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"link=Display Settings\");\n\t\tselenium.clickAt(\"link=Display Settings\",\n\t\t\tRuntimeVariables.replace(\"Display Settings\"));\n\t\tselenium.waitForVisible(\"//select[@id='_86_availableMetadataFields']\");\n\t\tselenium.addSelection(\"//select[@id='_86_availableMetadataFields']\",\n\t\t\tRuntimeVariables.replace(\"View Count\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//button[@title='Move selected items from Available to Current.']/span\");\n\t\tselenium.clickAt(\"//button[@title='Move selected items from Available to Current.']/span\",\n\t\t\tRuntimeVariables.replace(\"Left Arrow\"));\n\t\tselenium.waitForPartialText(\"//select[@id='_86_currentMetadataFields']\",\n\t\t\t\"View Count\");\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//select[@id='_86_currentMetadataFields']\", \"View Count\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//select[@id='_86_currentMetadataFields']\", \"View Count\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"300a41dd97625518137a6c186994e1fce1d6cb69","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeleteDMFolderDocumentAP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\n\t\t\t\"xPath=(//table[@class='taglib-search-iterator']/tbody/tr[3]/td[2])[2]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Document\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"xPath=(//table[@class='taglib-search-iterator']/tbody/tr[3]/td[2])[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"xPath=(//table[@class='taglib-search-iterator']/tbody/tr[3]/td)[4]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//td[4]/span/a/img[@alt='Delete']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"No assets selected.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"DM Folder Document Title\"));\n\t}","id":61667,"modified_method":"public void testDeleteDMFolderDocumentAP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"xPath=(//table/tbody/tr[2]/td[2])[2]\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"xPath=(//table/tbody/tr[2]/td)[4]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Document\"),\n\t\t\tselenium.getText(\"xPath=(//table/tbody/tr[2]/td[2])[2]\"));\n\t\tassertTrue(selenium.isVisible(\"//td[4]/span/a/img[@alt='Delete']\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//td[4]/span/a/img[@alt='Delete']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"No assets selected.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"DM Folder Document Title\"));\n\t}","commit_id":"300a41dd97625518137a6c186994e1fce1d6cb69","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeleteDMFolderImageAP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='_86_ocerSearchContainer_col-type_row-1']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Document\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//td[@id='_86_ocerSearchContainer_col-type_row-1']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//td[@id='_86_ocerSearchContainer_col-title_row-1']\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"xpath=(//img[@alt='Delete'])[2]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"No assets selected.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertFalse(selenium.isTextPresent(\"DM Folder Image Title\"));\n\t}","id":61668,"modified_method":"public void testDeleteDMFolderImageAP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='_86_ocerSearchContainer_col-type_row-1']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Document\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//td[@id='_86_ocerSearchContainer_col-type_row-1']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//td[@id='_86_ocerSearchContainer_col-title_row-1']\"));\n\t\tselenium.clickAt(\"xPath=(//img[@alt='Delete'])[2]\",\n\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"No assets selected.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertFalse(selenium.isTextPresent(\"DM Folder Image Title\"));\n\t}","commit_id":"300a41dd97625518137a6c186994e1fce1d6cb69","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testRateDMFolderDocumentAP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\n\t\tString voteCount = selenium.getFirstNumberIncrement(\n\t\t\t\t\"xPath=(//div[@class='aui-rating-label-element'])[2]\");\n\t\tRuntimeVariables.setValue(\"voteCount\", voteCount);\n\t\tselenium.waitForVisible(\"//a[5]\");\n\t\tselenium.clickAt(\"//a[5]\", RuntimeVariables.replace(\"5 Stars\"));\n\t\tselenium.waitForPartialText(\"xPath=(//div[@class='aui-rating-label-element'])[2]\",\n\t\t\tRuntimeVariables.getValue(\"voteCount\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"xPath=(//div[@class='aui-rating-label-element'])[2]\",\n\t\t\t\tRuntimeVariables.getValue(\"voteCount\")));\n\t}","id":61669,"modified_method":"public void testRateDMFolderDocumentAP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\n\t\tString voteCount = selenium.getFirstNumberIncrement(\n\t\t\t\t\"xPath=(//div[@class='aui-rating-label-element'])[2]\");\n\t\tRuntimeVariables.setValue(\"voteCount\", voteCount);\n\t\tselenium.waitForVisible(\"//a[contains(@class,'aui-rating-element')][5]\");\n\t\tselenium.clickAt(\"//a[contains(@class,'aui-rating-element')][5]\",\n\t\t\tRuntimeVariables.replace(\"Rate this 5 stars out of 5.\"));\n\t\tselenium.waitForPartialText(\"xPath=(//div[@class='aui-rating-label-element'])[2]\",\n\t\t\tRuntimeVariables.getValue(\"voteCount\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"xPath=(//div[@class='aui-rating-label-element'])[2]\",\n\t\t\t\tRuntimeVariables.getValue(\"voteCount\")));\n\t}","commit_id":"300a41dd97625518137a6c186994e1fce1d6cb69","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectExistingDMFolderDocumentAPActions()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\n\t\t\t\"xPath=(//span[@title='Select']/ul/li/strong/a/span)[2]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Select\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"xPath=(//span[@title='Select']/ul/li/strong/a/span)[2]\"));\n\t\tselenium.clickAt(\"xPath=(//span[@title='Select']/ul/li/strong/a/span)[2]\",\n\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[8]/a[contains(.,'Document')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Document\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[8]/a[contains(.,'Document')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[8]/a[contains(.,'Document')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.waitForElementPresent(\"//iframe[contains(@id,'selectAsset')]\");\n\t\tselenium.selectFrame(\"//iframe[contains(@id,'selectAsset')]\");\n\t\tselenium.waitForVisible(\"//td[1]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"DM Folder Document Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//fieldset[3]/div/div/div/div/table/tbody/tr[3]/td[2]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Document\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//fieldset[3]/div/div/div/div/table/tbody/tr[3]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//fieldset[3]/div/div/div/div/table/tbody/tr[3]/td\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"xPath=(//h3[@class='asset-title']/a)\",\n\t\t\t\"DM Folder Document Title\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"xPath=(//h3[@class='asset-title']/a)\"));\n\t}","id":61670,"modified_method":"public void testSelectExistingDMFolderDocumentAPActions()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\n\t\t\t\"xPath=(//span[@title='Select']/ul/li/strong/a/span)[2]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Select\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"xPath=(//span[@title='Select']/ul/li/strong/a/span)[2]\"));\n\t\tselenium.clickAt(\"xPath=(//span[@title='Select']/ul/li/strong/a/span)[2]\",\n\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[8]/a[contains(.,'Document')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Document\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[8]/a[contains(.,'Document')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[8]/a[contains(.,'Document')]\",\n\t\t\tRuntimeVariables.replace(\"Document\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.waitForElementPresent(\"//iframe[contains(@id,'selectAsset')]\");\n\t\tselenium.selectFrame(\"//iframe[contains(@id,'selectAsset')]\");\n\t\tselenium.waitForVisible(\"//td[1]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"DM Folder Document Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"xPath=(//table/tbody/tr[2]/td)[4]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Document\"),\n\t\t\tselenium.getText(\"xPath=(//table/tbody/tr[2]/td[2])[2]\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"xPath=(//h3[@class='asset-title']/a)\",\n\t\t\t\"DM Folder Document Title\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"xPath=(//h3[@class='asset-title']/a)\"));\n\t}","commit_id":"300a41dd97625518137a6c186994e1fce1d6cb69","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectExistingDMFolderImageAPActions()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[3]/div/span[@title='Select']/ul/li/strong/a/span\");\n\t\tassertEquals(RuntimeVariables.replace(\"Select\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[3]/div/span[@title='Select']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//div[3]/div/span[@title='Select']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[8]/a[contains(.,'Document')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Document\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[8]/a[contains(.,'Document')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[8]/a[contains(.,'Document')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.waitForElementPresent(\"//iframe[contains(@id,'selectAsset')]\");\n\t\tselenium.selectFrame(\"//iframe[contains(@id,'selectAsset')]\");\n\t\tselenium.waitForVisible(\"//td[1]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"DM Folder Image Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//fieldset[3]/div/div/div/div/table/tbody/tr[3]/td[2]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Document\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//fieldset[3]/div/div/div/div/table/tbody/tr[3]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//fieldset[3]/div/div/div/div/table/tbody/tr[3]/td\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t}","id":61671,"modified_method":"public void testSelectExistingDMFolderImageAPActions()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\n\t\t\t\"xPath=(//span[@title='Select']/ul/li/strong/a/span)[2]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Select\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"xPath=(//span[@title='Select']/ul/li/strong/a/span)[2]\"));\n\t\tselenium.clickAt(\"xPath=(//span[@title='Select']/ul/li/strong/a/span)[2]\",\n\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[8]/a[contains(.,'Document')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Document\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[8]/a[contains(.,'Document')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[8]/a[contains(.,'Document')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.waitForElementPresent(\"//iframe[contains(@id,'selectAsset')]\");\n\t\tselenium.selectFrame(\"//iframe[contains(@id,'selectAsset')]\");\n\t\tselenium.waitForVisible(\"//td[1]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"DM Folder Image Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"xPath=(//table/tbody/tr[2]/td)[4]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Document\"),\n\t\t\tselenium.getText(\"xPath=(//table/tbody/tr[2]/td[2])[2]\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t}","commit_id":"300a41dd97625518137a6c186994e1fce1d6cb69","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewConfigurePortletAbstractsDMDocumentAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Read More About DM Folder Document Title \\u00bb\"),\n\t\t\tselenium.getText(\"//div[2]/div[2][@class='asset-more']/a\"));\n\t\tselenium.clickAt(\"//div[2]/div[2][@class='asset-more']/a\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Read More About DM Folder Document Title \\u00bb\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-twitter']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-facebook']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-plusone']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View in Context \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='asset-more']/a\"));\n\t\tselenium.clickAt(\"//div[@class='asset-more']/a\",\n\t\t\tRuntimeVariables.replace(\"View in Context \\u00bb\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t}","id":61672,"modified_method":"public void testViewConfigurePortletAbstractsDMDocumentAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add New\"),\n\t\t\tselenium.getText(\"//span[@title='Add New']/ul/li/strong/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"xPath=(//h3[@class='asset-title']/a)[1]\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-meta-actions asset-actions']/span/a/span\",\n\t\t\t\t\"Edit\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='asset-resource-info']/span/a/span\", \"Download\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='asset-resource-info']/span/a/span\", \"(0k)\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"xPath=(//div[@class='asset-more']/a)[1]\", \"Read More\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Name\"),\n\t\t\tselenium.getText(\"xPath=(//h3[@class='asset-title']/a)[2]\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"xPath=(//div[@class='asset-more']/a)[2]\", \"Read More\"));\n\t\tselenium.clickAt(\"xPath=(//div[@class='asset-more']/a)[1]\",\n\t\t\tRuntimeVariables.replace(\"Read More\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\\u00ab Back\"),\n\t\t\tselenium.getText(\"//span[@class='header-back-to']/a\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-meta-actions asset-actions']/span/a/span\",\n\t\t\t\t\"Edit\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Automatically Extracted Metadata\"),\n\t\t\tselenium.getText(\"//div[@class='lfr-panel-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Content Encoding ISO-8859-1\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-panel-content']/div/div[contains(.,'Content Encoding')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Content Type text/plain; charset=ISO-8859-1\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-panel-content']/div/div[contains(.,'Content Type')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-twitter']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-facebook']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-plusone']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View in Context \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='asset-more']\"));\n\t\tselenium.clickAt(\"//span[@class='header-back-to']/a\",\n\t\t\tRuntimeVariables.replace(\"\\u00ab Back\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"xPath=(//div[@class='asset-more']/a)[2]\",\n\t\t\tRuntimeVariables.replace(\"Read More\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Name\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-twitter']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-facebook']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-plusone']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View in Context \\u00c2\\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='asset-more']/a\"));\n\t\tselenium.clickAt(\"//div[@class='asset-more']/a\",\n\t\t\tRuntimeVariables.replace(\"View in Context \\u00c2\\u00bb\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t}","commit_id":"300a41dd97625518137a6c186994e1fce1d6cb69","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewConfigurePortletAbstractsDMImageAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Read More About DM Folder Image Title \\u00bb\"),\n\t\t\tselenium.getText(\"//div[2]/div[2][@class='asset-more']/a\"));\n\t\tassertTrue(selenium.isVisible(\"//div[4]/h3[@class='asset-title']/a/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Read More About DM Folder Image Title \\u00bb\"),\n\t\t\tselenium.getText(\"//div[2]/div[2][@class='asset-more']/a\"));\n\t\tselenium.clickAt(\"//div[2]/div[2][@class='asset-more']/a\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Read More About DM Folder Image Title \\u00bb\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='lfr-preview-file-image-container']/img\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-twitter']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-facebook']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-plusone']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View in Context \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='asset-more']/a\"));\n\t\tselenium.clickAt(\"//div[@class='asset-more']/a\",\n\t\t\tRuntimeVariables.replace(\"View in Context \\u00bb\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//img[@class='lfr-preview-file-image-current']\"));\n\t}","id":61673,"modified_method":"public void testViewConfigurePortletAbstractsDMImageAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add New\"),\n\t\t\tselenium.getText(\"//span[@title='Add New']/ul/li/strong/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"xPath=(//h3[@class='asset-title']/a)[1]\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-meta-actions asset-actions']/span/a/span\",\n\t\t\t\t\"Edit\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='asset-resource-info']/div/img\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"xPath=(//div[@class='asset-more']/a)[1]\", \"Read More\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Name\"),\n\t\t\tselenium.getText(\"xPath=(//h3[@class='asset-title']/a)[2]\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"xPath=(//div[@class='asset-more']/a)[2]\", \"Read More\"));\n\t\tselenium.clickAt(\"xPath=(//div[@class='asset-more']/a)[1]\",\n\t\t\tRuntimeVariables.replace(\"Read More\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\\u00ab Back\"),\n\t\t\tselenium.getText(\"//span[@class='header-back-to']/a\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='lfr-preview-file-image-container']/img\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-meta-actions asset-actions']/span/a/span\",\n\t\t\t\t\"Edit\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Automatically Extracted Metadata\"),\n\t\t\tselenium.getText(\"//div[@class='lfr-panel-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Content Type image/jpeg\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-panel-content']/div/div[contains(.,'Content Type')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Bits Per Sample 8\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-panel-content']/div/div[contains(.,'Bits Per Sample')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Image Length 92\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-panel-content']/div/div[contains(.,'Image Length')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Image Width 394\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-panel-content']/div/div[contains(.,'Image Width')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-twitter']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-facebook']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-plusone']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View in Context \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='asset-more']/a\"));\n\t\tselenium.clickAt(\"//div[@class='asset-more']/a\",\n\t\t\tRuntimeVariables.replace(\"View in Context \\u00bb\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//img[@class='lfr-preview-file-image-current']\"));\n\t}","commit_id":"300a41dd97625518137a6c186994e1fce1d6cb69","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewConfigurePortletAvailableDMDocumentAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"DM Folder Document Title\"));\n\t}","id":61674,"modified_method":"public void testViewConfigurePortletAvailableDMDocumentAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add New\"),\n\t\t\tselenium.getText(\"//span[@title='Add New']/ul/li/strong/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Name\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tassertTrue(selenium.isPartialText(\"//div[@class='asset-more']/a\",\n\t\t\t\t\"Read More\"));\n\t\tassertFalse(selenium.isTextPresent(\"DM Folder Document Title\"));\n\t}","commit_id":"300a41dd97625518137a6c186994e1fce1d6cb69","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewConfigurePortletAvailableDMImageAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"DM Folder Image Title\"));\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"//div[@class='asset-resource-info']/div/img\"));\n\t}","id":61675,"modified_method":"public void testViewConfigurePortletAvailableDMImageAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add New\"),\n\t\t\tselenium.getText(\"//span[@title='Add New']/ul/li/strong/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Name\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tassertTrue(selenium.isPartialText(\"//div[@class='asset-more']/a\",\n\t\t\t\t\"Read More\"));\n\t\tassertFalse(selenium.isTextPresent(\"DM Folder Image Title\"));\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"//div[@class='asset-resource-info']/div/img\"));\n\t}","commit_id":"300a41dd97625518137a6c186994e1fce1d6cb69","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewConfigurePortletCurrentDMDocumentAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t}","id":61676,"modified_method":"public void testViewConfigurePortletCurrentDMDocumentAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add New\"),\n\t\t\tselenium.getText(\"//span[@title='Add New']/ul/li/strong/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"xPath=(//h3[@class='asset-title']/a)[1]\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-meta-actions asset-actions']/span/a/span\",\n\t\t\t\t\"Edit\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='asset-resource-info']/span/a/span\", \"Download\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='asset-resource-info']/span/a/span\", \"(0k)\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"xPath=(//div[@class='asset-more']/a)[1]\", \"Read More\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Name\"),\n\t\t\tselenium.getText(\"xPath=(//h3[@class='asset-title']/a)[2]\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"xPath=(//div[@class='asset-more']/a)[2]\", \"Read More\"));\n\t\tselenium.clickAt(\"xPath=(//div[@class='asset-more']/a)[1]\",\n\t\t\tRuntimeVariables.replace(\"Read More\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\\u00ab Back\"),\n\t\t\tselenium.getText(\"//span[@class='header-back-to']/a\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-meta-actions asset-actions']/span/a/span\",\n\t\t\t\t\"Edit\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Automatically Extracted Metadata\"),\n\t\t\tselenium.getText(\"//div[@class='lfr-panel-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Content Encoding ISO-8859-1\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-panel-content']/div/div[contains(.,'Content Encoding')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Content Type text/plain; charset=ISO-8859-1\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-panel-content']/div/div[contains(.,'Content Type')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-twitter']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-facebook']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-plusone']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View in Context \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='asset-more']/a\"));\n\t\tselenium.clickAt(\"//span[@class='header-back-to']/a\",\n\t\t\tRuntimeVariables.replace(\"\\u00ab Back\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"xPath=(//div[@class='asset-more']/a)[2]\",\n\t\t\tRuntimeVariables.replace(\"Read More\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Name\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t}","commit_id":"300a41dd97625518137a6c186994e1fce1d6cb69","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewConfigurePortletCurrentDMImageAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tassertTrue(selenium.isVisible(\"//h3[@class='asset-title']/a/img\"));\n\t}","id":61677,"modified_method":"public void testViewConfigurePortletCurrentDMImageAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add New\"),\n\t\t\tselenium.getText(\"//span[@title='Add New']/ul/li/strong/a\"));\n\t\tassertTrue(selenium.isVisible(\"//h3[@class='asset-title']/a/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='asset-resource-info']/div/img\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"xPath=(//div[@class='asset-more']/a)[1]\", \"Read More\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Name\"),\n\t\t\tselenium.getText(\"xPath=(//h3[@class='asset-title']/a)[2]\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"xPath=(//div[@class='asset-more']/a)[2]\", \"Read More\"));\n\t\tselenium.clickAt(\"xPath=(//div[@class='asset-more']/a)[1]\",\n\t\t\tRuntimeVariables.replace(\"Read More\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\\u00ab Back\"),\n\t\t\tselenium.getText(\"//span[@class='header-back-to']/a\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='lfr-preview-file-image-container']/img\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-meta-actions asset-actions']/span/a/span\",\n\t\t\t\t\"Edit\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Automatically Extracted Metadata\"),\n\t\t\tselenium.getText(\"//div[@class='lfr-panel-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Content Type image/jpeg\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-panel-content']/div/div[contains(.,'Content Type')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Bits Per Sample 8\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-panel-content']/div/div[contains(.,'Bits Per Sample')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Image Length 92\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-panel-content']/div/div[contains(.,'Image Length')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Image Width 394\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-panel-content']/div/div[contains(.,'Image Width')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-twitter']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-facebook']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-plusone']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View in Context \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='asset-more']/a\"));\n\t\tselenium.clickAt(\"//div[@class='asset-more']/a\",\n\t\t\tRuntimeVariables.replace(\"View in Context \\u00bb\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//img[@class='lfr-preview-file-image-current']\"));\n\t}","commit_id":"300a41dd97625518137a6c186994e1fce1d6cb69","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewConfigurePortletFullContentDMDocumentAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//div[3]/h1[@class='header-title']/span\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-twitter']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-facebook']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-plusone']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View in Context \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='asset-more']/a\"));\n\t\tselenium.clickAt(\"//div[@class='asset-more']/a\",\n\t\t\tRuntimeVariables.replace(\"View in Context \\u00bb\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t}","id":61678,"modified_method":"public void testViewConfigurePortletFullContentDMDocumentAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add New\"),\n\t\t\tselenium.getText(\"//span[@title='Add New']/ul/li/strong/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//div[3]/h1[@class='header-title']/span\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-meta-actions asset-actions']/span/a/span\",\n\t\t\t\t\"Edit\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Automatically Extracted Metadata\"),\n\t\t\tselenium.getText(\"//div[@class='lfr-panel-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Content Encoding ISO-8859-1\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-panel-content']/div/div[contains(.,'Content Encoding')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Content Type text/plain; charset=ISO-8859-1\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-panel-content']/div/div[contains(.,'Content Type')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-twitter']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-facebook']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-plusone']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View in Context \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='asset-more']/a\"));\n\t\tselenium.clickAt(\"//div[@class='asset-more']/a\",\n\t\t\tRuntimeVariables.replace(\"View in Context \\u00bb\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t}","commit_id":"300a41dd97625518137a6c186994e1fce1d6cb69","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewConfigurePortletFullContentDMImageAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='lfr-preview-file-image-container']/img\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-twitter']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-facebook']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-plusone']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View in Context \\u00bb\"),\n\t\t\tselenium.getText(\"//div[2]/div[2][@class='asset-more']/a\"));\n\t\tselenium.clickAt(\"//div[2]/div[2][@class='asset-more']/a\",\n\t\t\tRuntimeVariables.replace(\"View in Context \\u00bb\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//img[@class='lfr-preview-file-image-current']\"));\n\t}","id":61679,"modified_method":"public void testViewConfigurePortletFullContentDMImageAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add New\"),\n\t\t\tselenium.getText(\"//span[@title='Add New']/ul/li/strong/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"xPath=(//h1[@class='header-title']/span)[1]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='lfr-preview-file-image-container']/img\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-meta-actions asset-actions']/span/a/span\",\n\t\t\t\t\"Edit\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Automatically Extracted Metadata\"),\n\t\t\tselenium.getText(\"//div[@class='lfr-panel-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Content Type image/jpeg\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-panel-content']/div/div[contains(.,'Content Type')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Bits Per Sample 8\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-panel-content']/div/div[contains(.,'Bits Per Sample')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Image Length 92\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-panel-content']/div/div[contains(.,'Image Length')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Image Width 394\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-panel-content']/div/div[contains(.,'Image Width')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"xPath=(//li[@class='taglib-social-bookmark-twitter'])[1]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"xPath=(//li[@class='taglib-social-bookmark-facebook'])[1]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"xPath=(//li[@class='taglib-social-bookmark-plusone'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View in Context \\u00bb\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='asset-more']/a)[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Name\"),\n\t\t\tselenium.getText(\"xPath=(//h1[@class='header-title']/span)[2]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"xPath=(//li[@class='taglib-social-bookmark-twitter'])[2]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"xPath=(//li[@class='taglib-social-bookmark-facebook'])[2]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"xPath=(//li[@class='taglib-social-bookmark-plusone'])[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View in Context \\u00bb\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='asset-more']/a)[2]\"));\n\t\tselenium.clickAt(\"xPath=(//div[@class='asset-more']/a)[1]\",\n\t\t\tRuntimeVariables.replace(\"View in Context \\u00bb\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//img[@class='lfr-preview-file-image-current']\"));\n\t}","commit_id":"300a41dd97625518137a6c186994e1fce1d6cb69","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewConfigurePortletTableDMDocumentAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Title\"),\n\t\t\tselenium.getText(\"//th[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//tr[2]/td/a\"));\n\t\tselenium.clickAt(\"//tr[2]/td/a\",\n\t\t\tRuntimeVariables.replace(\"DM Folder Document Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-twitter']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-facebook']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-plusone']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View in Context \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='asset-more']/a\"));\n\t\tselenium.clickAt(\"//div[@class='asset-more']/a\",\n\t\t\tRuntimeVariables.replace(\"View in Context \\u00bb\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//div[3]/div/h2[@class='document-title']\"));\n\t}","id":61680,"modified_method":"public void testViewConfigurePortletTableDMDocumentAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add New\"),\n\t\t\tselenium.getText(\"//span[@title='Add New']/ul/li/strong/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Title\"),\n\t\t\tselenium.getText(\"//th[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//tr[2]/td/a\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='lfr-meta-actions asset-actions']/span/a/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Name\"),\n\t\t\tselenium.getText(\"//tr[3]/td/a\"));\n\t\tselenium.clickAt(\"//tr[2]/td/a\",\n\t\t\tRuntimeVariables.replace(\"DM Folder Document Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\\u00ab Back\"),\n\t\t\tselenium.getText(\"//span[@class='header-back-to']/a\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-meta-actions asset-actions']/span/a/span\",\n\t\t\t\t\"Edit\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Automatically Extracted Metadata\"),\n\t\t\tselenium.getText(\"//div[@class='lfr-panel-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Content Encoding ISO-8859-1\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-panel-content']/div/div[contains(.,'Content Encoding')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Content Type text/plain; charset=ISO-8859-1\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-panel-content']/div/div[contains(.,'Content Type')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-twitter']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-facebook']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-plusone']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View in Context \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='asset-more']/a\"));\n\t\tselenium.clickAt(\"//div[@class='asset-more']/a\",\n\t\t\tRuntimeVariables.replace(\"View in Context \\u00bb\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//div[3]/div/h2[@class='document-title']\"));\n\t}","commit_id":"300a41dd97625518137a6c186994e1fce1d6cb69","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewConfigurePortletTableDMImageAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Title\"),\n\t\t\tselenium.getText(\"//th[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//tr[2]/td/a\"));\n\t\tselenium.clickAt(\"//tr[2]/td/a\",\n\t\t\tRuntimeVariables.replace(\"DM Folder Image Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='lfr-preview-file-image-container']/img\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-twitter']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-facebook']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-plusone']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View in Context \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='asset-more']/a\"));\n\t\tselenium.clickAt(\"//div[@class='asset-more']/a\",\n\t\t\tRuntimeVariables.replace(\"View in Context \\u00bb\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//img[@class='lfr-preview-file-image-current']\"));\n\t}","id":61681,"modified_method":"public void testViewConfigurePortletTableDMImageAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add New\"),\n\t\t\tselenium.getText(\"//span[@title='Add New']/ul/li/strong/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Title\"),\n\t\t\tselenium.getText(\"//th[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//tr[2]/td/a\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='lfr-meta-actions asset-actions']/span/a/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Name\"),\n\t\t\tselenium.getText(\"//tr[3]/td/a\"));\n\t\tselenium.clickAt(\"//tr[2]/td/a\",\n\t\t\tRuntimeVariables.replace(\"DM Folder Image Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\\u00ab Back\"),\n\t\t\tselenium.getText(\"//span[@class='header-back-to']/a\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-meta-actions asset-actions']/span/a/span\",\n\t\t\t\t\"Edit\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='lfr-preview-file-image-container']/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Automatically Extracted Metadata\"),\n\t\t\tselenium.getText(\"//div[@class='lfr-panel-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Content Type image/jpeg\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-panel-content']/div/div[contains(.,'Content Type')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Bits Per Sample 8\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-panel-content']/div/div[contains(.,'Bits Per Sample')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Image Length 92\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-panel-content']/div/div[contains(.,'Image Length')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Image Width 394\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-panel-content']/div/div[contains(.,'Image Width')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-twitter']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-facebook']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-plusone']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View in Context \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='asset-more']/a\"));\n\t\tselenium.clickAt(\"//div[@class='asset-more']/a\",\n\t\t\tRuntimeVariables.replace(\"View in Context \\u00bb\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//img[@class='lfr-preview-file-image-current']\"));\n\t}","commit_id":"300a41dd97625518137a6c186994e1fce1d6cb69","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewConfigurePortletTitleListDMDocumentAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//ul[@class='title-list']/li/span/a/span\"));\n\t\tselenium.clickAt(\"//ul[@class='title-list']/li/span/a/span\",\n\t\t\tRuntimeVariables.replace(\"DM Folder Document Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-twitter']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-facebook']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-plusone']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View in Context \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='asset-more']/a\"));\n\t\tselenium.clickAt(\"//div[@class='asset-more']/a\",\n\t\t\tRuntimeVariables.replace(\"View in Context \\u00bb\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t}","id":61682,"modified_method":"public void testViewConfigurePortletTitleListDMDocumentAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add New\"),\n\t\t\tselenium.getText(\"//span[@title='Add New']/ul/li/strong/a\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='title-list document']/span/a/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//li[@class='title-list document']/span/a/span\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='lfr-meta-actions asset-actions']/span/a/img\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='title-list folder']/span/a/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Name\"),\n\t\t\tselenium.getText(\"//li[@class='title-list folder']/span/a/span\"));\n\t\tselenium.clickAt(\"//li[@class='title-list document']/span/a/span\",\n\t\t\tRuntimeVariables.replace(\"DM Folder Document Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\\u00ab Back\"),\n\t\t\tselenium.getText(\"//span[@class='header-back-to']/a\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-meta-actions asset-actions']/span/a/span\",\n\t\t\t\t\"Edit\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Automatically Extracted Metadata\"),\n\t\t\tselenium.getText(\"//div[@class='lfr-panel-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Content Encoding ISO-8859-1\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-panel-content']/div/div[contains(.,'Content Encoding')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Content Type text/plain; charset=ISO-8859-1\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-panel-content']/div/div[contains(.,'Content Type')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-twitter']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-facebook']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-plusone']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View in Context \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='asset-more']/a\"));\n\t\tselenium.clickAt(\"//div[@class='asset-more']/a\",\n\t\t\tRuntimeVariables.replace(\"View in Context \\u00bb\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t}","commit_id":"300a41dd97625518137a6c186994e1fce1d6cb69","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewConfigurePortletTitleListDMImageAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Asset Publisher Test Page\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//li[@class='title-list document']/span/a/span\"));\n\t\tselenium.clickAt(\"//li[@class='title-list document']/span/a/span\",\n\t\t\tRuntimeVariables.replace(\"DM Folder Image Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='lfr-preview-file-image-container']/img\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-twitter']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-facebook']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-plusone']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View in Context \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='asset-more']/a\"));\n\t\tselenium.clickAt(\"//div[@class='asset-more']/a\",\n\t\t\tRuntimeVariables.replace(\"View in Context \\u00bb\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//img[@class='lfr-preview-file-image-current']\"));\n\t}","id":61683,"modified_method":"public void testViewConfigurePortletTitleListDMImageAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add New\"),\n\t\t\tselenium.getText(\"//span[@title='Add New']/ul/li/strong/a\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='title-list document']/span/a/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//li[@class='title-list document']/span/a/span\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='lfr-meta-actions asset-actions']/span/a/img\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='title-list folder']/span/a/img\"));\n\t\tselenium.clickAt(\"//li[@class='title-list document']/span/a/span\",\n\t\t\tRuntimeVariables.replace(\"DM Folder Image Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\\u00ab Back\"),\n\t\t\tselenium.getText(\"//span[@class='header-back-to']/a\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-meta-actions asset-actions']/span/a/span\",\n\t\t\t\t\"Edit\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='lfr-preview-file-image-container']/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Automatically Extracted Metadata\"),\n\t\t\tselenium.getText(\"//div[@class='lfr-panel-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Content Type image/jpeg\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-panel-content']/div/div[contains(.,'Content Type')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Bits Per Sample 8\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-panel-content']/div/div[contains(.,'Bits Per Sample')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Image Length 92\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-panel-content']/div/div[contains(.,'Image Length')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Image Width 394\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-panel-content']/div/div[contains(.,'Image Width')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-twitter']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-facebook']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-plusone']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View in Context \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='asset-more']/a\"));\n\t\tselenium.clickAt(\"//div[@class='asset-more']/a\",\n\t\t\tRuntimeVariables.replace(\"View in Context \\u00bb\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//img[@class='lfr-preview-file-image-current']\"));\n\t}","commit_id":"300a41dd97625518137a6c186994e1fce1d6cb69","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewDMFolderDocumentAP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//h3[@class='asset-title']/a\",\n\t\t\t\"DM Folder Document Title\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Documents and Media Test Page\",\n\t\t\tRuntimeVariables.replace(\"Documents and Media Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tselenium.waitForVisible(\"//button[@title='Icon View']\");\n\t\tselenium.clickAt(\"//button[@title='Icon View']\",\n\t\t\tRuntimeVariables.replace(\"Icon View\"));\n\t\tThread.sleep(1000);\n\t\tselenium.waitForVisible(\n\t\t\t\"//button[@title='Icon View' and contains(@class,'aui-state-active')]\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//button[@title='Icon View' and contains(@class,'aui-state-active')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Name\"),\n\t\t\tselenium.getText(\"//a[contains(@class,'entry-link')]/span\"));\n\t\tselenium.clickAt(\"//a[contains(@class,'entry-link')]/span\",\n\t\t\tRuntimeVariables.replace(\"DM Folder Name\"));\n\t\tselenium.waitForText(\"//li[@class='app-view-navigation-entry folder selected']/a/span[2]\",\n\t\t\t\"DM Folder Name\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Name\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//li[@class='app-view-navigation-entry folder selected']/a/span[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//a[contains(@class,'entry-link')]/span\"));\n\t\tselenium.clickAt(\"//a[contains(@class,'entry-link')]/span\",\n\t\t\tRuntimeVariables.replace(\"DM Folder Document Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//h2[@class='document-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Version 1.0\"),\n\t\t\tselenium.getText(\"//h3[@class='version ']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Status: Approved\"),\n\t\t\tselenium.getText(\"//span[@class='workflow-status']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Download (0k)\"),\n\t\t\tselenium.getText(\"//span[@class='download-document']/span/a/span\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@id='documentLibraryAssetMetadataPanel']/div/div/div[contains(.,'Content Encoding')]\",\n\t\t\t\t\"ISO-8859-1\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@id='documentLibraryAssetMetadataPanel']/div/div/div[contains(.,'Content Type')]\",\n\t\t\t\t\"text/plain\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.0\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[3]/td[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0k\"),\n\t\t\tselenium.getText(\"//tr[3]/td[4]\"));\n\t}","id":61684,"modified_method":"public void testViewDMFolderDocumentAP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add New\"),\n\t\t\tselenium.getText(\"//span[@title='Add New']/ul/li/strong/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"xPath=(//h3[@class='asset-title']/a)[1]\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-meta-actions asset-actions']/span/a/span\",\n\t\t\t\t\"Edit\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='asset-resource-info']/span/a/span\", \"Download\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='asset-resource-info']/span/a/span\", \"(0k)\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"xPath=(//div[@class='asset-more']/a)[1]\", \"Read More\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Name\"),\n\t\t\tselenium.getText(\"xPath=(//h3[@class='asset-title']/a)[2]\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"xPath=(//div[@class='asset-more']/a)[2]\", \"Read More\"));\n\t\tselenium.clickAt(\"xPath=(//div[@class='asset-more']/a)[1]\",\n\t\t\tRuntimeVariables.replace(\"Read More\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\\u00ab Back\"),\n\t\t\tselenium.getText(\"//span[@class='header-back-to']/a\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-meta-actions asset-actions']/span/a/span\",\n\t\t\t\t\"Edit\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Automatically Extracted Metadata\"),\n\t\t\tselenium.getText(\"//div[@class='lfr-panel-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Content Encoding ISO-8859-1\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-panel-content']/div/div[contains(.,'Content Encoding')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Content Type text/plain; charset=ISO-8859-1\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-panel-content']/div/div[contains(.,'Content Type')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-twitter']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-facebook']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-plusone']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View in Context \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='asset-more']/a\"));\n\t\tselenium.clickAt(\"//span[@class='header-back-to']/a\",\n\t\t\tRuntimeVariables.replace(\"\\u00ab Back\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"xPath=(//div[@class='asset-more']/a)[2]\",\n\t\t\tRuntimeVariables.replace(\"Read More\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Name\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Documents and Media Test Page\",\n\t\t\tRuntimeVariables.replace(\"Documents and Media Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tselenium.waitForVisible(\"//button[@title='Icon View']\");\n\t\tselenium.clickAt(\"//button[@title='Icon View']\",\n\t\t\tRuntimeVariables.replace(\"Icon View\"));\n\t\tThread.sleep(1000);\n\t\tselenium.waitForVisible(\n\t\t\t\"//button[@title='Icon View' and contains(@class,'aui-state-active')]\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//button[@title='Icon View' and contains(@class,'aui-state-active')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Name\"),\n\t\t\tselenium.getText(\"//a[contains(@class,'entry-link')]/span\"));\n\t\tselenium.clickAt(\"//a[contains(@class,'entry-link')]/span\",\n\t\t\tRuntimeVariables.replace(\"DM Folder Name\"));\n\t\tselenium.waitForText(\"//li[@class='app-view-navigation-entry folder selected']/a/span[2]\",\n\t\t\t\"DM Folder Name\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Name\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//li[@class='app-view-navigation-entry folder selected']/a/span[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//a[contains(@class,'entry-link')]/span\"));\n\t\tselenium.clickAt(\"//a[contains(@class,'entry-link')]/span\",\n\t\t\tRuntimeVariables.replace(\"DM Folder Document Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//h2[@class='document-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Version 1.0\"),\n\t\t\tselenium.getText(\"//h3[@class='version ']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Status: Approved\"),\n\t\t\tselenium.getText(\"//span[@class='workflow-status']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Download (0k)\"),\n\t\t\tselenium.getText(\"//span[@class='download-document']/span/a/span\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@id='documentLibraryAssetMetadataPanel']/div/div/div[contains(.,'Content Encoding')]\",\n\t\t\t\t\"ISO-8859-1\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@id='documentLibraryAssetMetadataPanel']/div/div/div[contains(.,'Content Type')]\",\n\t\t\t\t\"text/plain\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.0\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[3]/td[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0k\"),\n\t\t\tselenium.getText(\"//tr[3]/td[4]\"));\n\t}","commit_id":"300a41dd97625518137a6c186994e1fce1d6cb69","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewDMFolderImageAP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tassertTrue(selenium.isVisible(\"//h3/a/img\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Documents and Media Test Page\",\n\t\t\tRuntimeVariables.replace(\"Documents and Media Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tselenium.waitForVisible(\"//button[@title='Icon View']\");\n\t\tselenium.clickAt(\"//button[@title='Icon View']\",\n\t\t\tRuntimeVariables.replace(\"Icon View\"));\n\t\tThread.sleep(1000);\n\t\tselenium.waitForVisible(\n\t\t\t\"//button[contains(@class,'aui-state-active') and @title='Icon View']\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//button[contains(@class,'aui-state-active') and @title='Icon View']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Name\"),\n\t\t\tselenium.getText(\"//a[contains(@class,'entry-link')]/span\"));\n\t\tselenium.clickAt(\"//a[contains(@class,'entry-link')]/span\",\n\t\t\tRuntimeVariables.replace(\"DM Folder Name\"));\n\t\tselenium.waitForText(\"//li[@class='app-view-navigation-entry folder selected']/a/span[2]\",\n\t\t\t\"DM Folder Name\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Name\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//li[@class='app-view-navigation-entry folder selected']/a/span[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//a[contains(@class,'entry-link')]/span\"));\n\t\tselenium.clickAt(\"//a[contains(@class,'entry-link')]/span\",\n\t\t\tRuntimeVariables.replace(\"DM Folder Image Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//h2[@class='document-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Version 1.0\"),\n\t\t\tselenium.getText(\"//h3[@class='version ']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Status: Approved\"),\n\t\t\tselenium.getText(\"//span[@class='workflow-status']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Download (13k)\"),\n\t\t\tselenium.getText(\"//span[1]/span/a/span\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@id='documentLibraryAssetMetadataPanel']/div/div/div[contains(.,'Content Type')]\",\n\t\t\t\t\"image/jpeg\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@id='documentLibraryAssetMetadataPanel']/div/div/div[contains(.,'Bits Per Sample')]\",\n\t\t\t\t\"8\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@id='documentLibraryAssetMetadataPanel']/div/div/div[contains(.,'Image Length')]\",\n\t\t\t\t\"92\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@id='documentLibraryAssetMetadataPanel']/div/div/div[contains(.,'Image Width')]\",\n\t\t\t\t\"394\"));\n\t}","id":61685,"modified_method":"public void testViewDMFolderImageAP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add New\"),\n\t\t\tselenium.getText(\"//span[@title='Add New']/ul/li/strong/a\"));\n\t\tassertTrue(selenium.isVisible(\"//h3[@class='asset-title']/a/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='asset-resource-info']/div/img\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"xPath=(//div[@class='asset-more']/a)[1]\", \"Read More\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Name\"),\n\t\t\tselenium.getText(\"xPath=(//h3[@class='asset-title']/a)[2]\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"xPath=(//div[@class='asset-more']/a)[2]\", \"Read More\"));\n\t\tselenium.clickAt(\"xPath=(//div[@class='asset-more']/a)[1]\",\n\t\t\tRuntimeVariables.replace(\"Read More\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\\u00ab Back\"),\n\t\t\tselenium.getText(\"//span[@class='header-back-to']/a\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='lfr-preview-file-image-container']/img\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-meta-actions asset-actions']/span/a/span\",\n\t\t\t\t\"Edit\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Automatically Extracted Metadata\"),\n\t\t\tselenium.getText(\"//div[@class='lfr-panel-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Content Type image/jpeg\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-panel-content']/div/div[contains(.,'Content Type')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Bits Per Sample 8\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-panel-content']/div/div[contains(.,'Bits Per Sample')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Image Length 92\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-panel-content']/div/div[contains(.,'Image Length')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Image Width 394\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-panel-content']/div/div[contains(.,'Image Width')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-twitter']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-facebook']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-plusone']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View in Context \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='asset-more']/a\"));\n\t\tselenium.clickAt(\"//span[@class='header-back-to']/a\",\n\t\t\tRuntimeVariables.replace(\"\\u00ab Back\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"xPath=(//div[@class='asset-more']/a)[2]\",\n\t\t\tRuntimeVariables.replace(\"Read More\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Name\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Documents and Media Test Page\",\n\t\t\tRuntimeVariables.replace(\"Documents and Media Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tselenium.waitForVisible(\"//button[@title='Icon View']\");\n\t\tselenium.clickAt(\"//button[@title='Icon View']\",\n\t\t\tRuntimeVariables.replace(\"Icon View\"));\n\t\tThread.sleep(1000);\n\t\tselenium.waitForVisible(\n\t\t\t\"//button[contains(@class,'aui-state-active') and @title='Icon View']\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//button[contains(@class,'aui-state-active') and @title='Icon View']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Name\"),\n\t\t\tselenium.getText(\"//a[contains(@class,'entry-link')]/span\"));\n\t\tselenium.clickAt(\"//a[contains(@class,'entry-link')]/span\",\n\t\t\tRuntimeVariables.replace(\"DM Folder Name\"));\n\t\tselenium.waitForText(\"//li[@class='app-view-navigation-entry folder selected']/a/span[2]\",\n\t\t\t\"DM Folder Name\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Name\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//li[@class='app-view-navigation-entry folder selected']/a/span[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//a[contains(@class,'entry-link')]/span\"));\n\t\tselenium.clickAt(\"//a[contains(@class,'entry-link')]/span\",\n\t\t\tRuntimeVariables.replace(\"DM Folder Image Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//h2[@class='document-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Version 1.0\"),\n\t\t\tselenium.getText(\"//h3[@class='version ']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Status: Approved\"),\n\t\t\tselenium.getText(\"//span[@class='workflow-status']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Download (13k)\"),\n\t\t\tselenium.getText(\"//span[1]/span/a/span\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@id='documentLibraryAssetMetadataPanel']/div/div/div[contains(.,'Content Type')]\",\n\t\t\t\t\"image/jpeg\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@id='documentLibraryAssetMetadataPanel']/div/div/div[contains(.,'Bits Per Sample')]\",\n\t\t\t\t\"8\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@id='documentLibraryAssetMetadataPanel']/div/div/div[contains(.,'Image Length')]\",\n\t\t\t\t\"92\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@id='documentLibraryAssetMetadataPanel']/div/div/div[contains(.,'Image Width')]\",\n\t\t\t\t\"394\"));\n\t}","commit_id":"300a41dd97625518137a6c186994e1fce1d6cb69","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPageDL() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Document Library Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//button[@id='save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Document Library Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Test Page\",\n\t\t\tRuntimeVariables.replace(\"Document Library Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":61686,"modified_method":"public void testAddPageDL() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Documents and Media Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//button[@id='save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Documents and Media Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Documents and Media Test Page\",\n\t\t\tRuntimeVariables.replace(\"Documents and Media Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"9b8640eb8ec5e980d6fcea3e5c8558113f1f1169","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletDL() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Document Library Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Test Page\",\n\t\t\tRuntimeVariables.replace(\"Document Library Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@title='Document Library']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Document Library']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":61687,"modified_method":"public void testAddPortletDL() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Documents and Media Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Documents and Media Test Page\",\n\t\t\tRuntimeVariables.replace(\"Documents and Media Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@title='Documents and Media']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Documents and Media']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"9b8640eb8ec5e980d6fcea3e5c8558113f1f1169","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownDocument() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"link=Document Library Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Document Library Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean folderPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//a[2]/strong\");\n\n\t\t\t\tif (!folderPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//a[2]/strong\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean document1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[2]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!document1Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//span[2]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[6]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[6]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean document2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[2]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!document2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//span[2]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[6]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[6]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean document3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[2]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!document3Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//span[2]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[6]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[6]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean document4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[2]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!document4Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//span[2]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[6]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[6]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\n\t\t\t\tboolean document5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[2]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!document5Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//span[2]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[6]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[6]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":61688,"modified_method":"public void testTearDownDocument() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"link=Documents and Media Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Documents and Media Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Documents and Media Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean dmlDocumentPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[1]/a/span[1]/img\");\n\n\t\t\t\tif (!dmlDocumentPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_20_allRowIdsCheckbox']\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@id='_20_allRowIdsCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"All Entries Check Box\"));\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_20_allRowIdsCheckbox']\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected entries[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 2:\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"There are no documents in this folder.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"9b8640eb8ec5e980d6fcea3e5c8558113f1f1169","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewActionResponseExclusiveStateMisc()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Test Misc Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Test Misc Page\",\n\t\t\tRuntimeVariables.replace(\"Test Misc Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Portlet Response (ActionResponse, Exclusive State)\"),\n\t\t\tselenium.getText(\"//h3[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Download File\"),\n\t\t\tselenium.getText(\"//p[3]/a\"));\n\t\tselenium.clickAt(\"//p[3]/a\", RuntimeVariables.replace(\"Download File\"));\n\t\tselenium.downloadFile(\"Portlet_Response_Exclusive_State.png\");\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Document Library Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Test Page\",\n\t\t\tRuntimeVariables.replace(\"Document Library Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//span[3]/span/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[3]/span/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Basic Document\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.uploadFile(\"//input[@id='_20_file']\",\n\t\t\tRuntimeVariables.replace(\"Portlet_Response_Exclusive_State.png\"));\n\t\tselenium.type(\"//input[@id='_20_title']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Portlet Response (ActionResponse,Exclusive State)\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_20_description']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Portlet Response (ActionResponse,Exclusive State)\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"Your request completed successfully.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='portlet-msg-success']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.clickAt(\"//div[@id='_20_documentContainer']/div[2]/a/span[1]/img\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Portlet Response (ActionResponse,Exclusive State)\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Portlet Response (ActionResponse,Exclusive State)\"),\n\t\t\tselenium.getText(\"//div[1]/h2\"));\n\t\tassertEquals(RuntimeVariables.replace(\"2.0k\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t}","id":61689,"modified_method":"public void testViewActionResponseExclusiveStateMisc()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Test Misc Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Test Misc Page\",\n\t\t\tRuntimeVariables.replace(\"Test Misc Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Portlet Response (ActionResponse, Exclusive State)\"),\n\t\t\tselenium.getText(\"//h3[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Download File\"),\n\t\t\tselenium.getText(\"//p[3]/a\"));\n\t\tselenium.clickAt(\"//p[3]/a\", RuntimeVariables.replace(\"Download File\"));\n\t\tselenium.downloadFile(\"Portlet_Response_Exclusive_State.png\");\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Documents and Media Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Documents and Media Test Page\",\n\t\t\tRuntimeVariables.replace(\"Documents and Media Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//span[3]/span/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[3]/span/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Basic Document\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.uploadFile(\"//input[@id='_20_file']\",\n\t\t\tRuntimeVariables.replace(\"Portlet_Response_Exclusive_State.png\"));\n\t\tselenium.type(\"//input[@id='_20_title']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Portlet Response (ActionResponse,Exclusive State)\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_20_description']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Portlet Response (ActionResponse,Exclusive State)\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"Your request completed successfully.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='portlet-msg-success']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Portlet Response (ActionResponse,Exclusive State)\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"link=Portlet Response (ActionResponse,Exclusive State)\"));\n\t\tselenium.clickAt(\"link=Portlet Response (ActionResponse,Exclusive State)\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Portlet Response (ActionResponse,Exclusive State)\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Portlet Response (ActionResponse,Exclusive State)\"),\n\t\t\tselenium.getText(\"//h2[@class='document-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Download (2.0k)\"),\n\t\t\tselenium.getText(\"//span[@class='download-document']/span/a/span\"));\n\t}","commit_id":"9b8640eb8ec5e980d6fcea3e5c8558113f1f1169","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewActionResponseNormalStateMisc()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Test Misc Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Test Misc Page\",\n\t\t\tRuntimeVariables.replace(\"Test Misc Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Portlet Response (ActionResponse, Normal State)\"),\n\t\t\tselenium.getText(\"//h3[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Download File\"),\n\t\t\tselenium.getText(\"//p[2]/a\"));\n\t\tselenium.clickAt(\"//p[2]/a\", RuntimeVariables.replace(\"Download File\"));\n\t\tselenium.downloadFile(\"Portlet_Response_Normal_State.png\");\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Document Library Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Test Page\",\n\t\t\tRuntimeVariables.replace(\"Document Library Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//span[3]/span/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[3]/span/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Basic Document\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.uploadFile(\"//input[@id='_20_file']\",\n\t\t\tRuntimeVariables.replace(\"Portlet_Response_Normal_State.png\"));\n\t\tselenium.type(\"//input[@id='_20_title']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Portlet Response (ActionResponse,Normal State)\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_20_description']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Portlet Response (ActionResponse,Normal State)\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"Your request completed successfully.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='portlet-msg-success']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.clickAt(\"//div[@id='_20_documentContainer']/div/a/span[1]/img\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Portlet Response (ActionResponse,Normal State)\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Portlet Response (ActionResponse,Normal State)\"),\n\t\t\tselenium.getText(\"//div[1]/h2\"));\n\t\tassertEquals(RuntimeVariables.replace(\"2.0k\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t}","id":61690,"modified_method":"public void testViewActionResponseNormalStateMisc()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Test Misc Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Test Misc Page\",\n\t\t\tRuntimeVariables.replace(\"Test Misc Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Portlet Response (ActionResponse, Normal State)\"),\n\t\t\tselenium.getText(\"//h3[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Download File\"),\n\t\t\tselenium.getText(\"//p[2]/a\"));\n\t\tselenium.clickAt(\"//p[2]/a\", RuntimeVariables.replace(\"Download File\"));\n\t\tselenium.downloadFile(\"Portlet_Response_Normal_State.png\");\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Documents and Media Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Documents and Media Test Page\",\n\t\t\tRuntimeVariables.replace(\"Documents and Media Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//span[3]/span/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[3]/span/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Basic Document\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.uploadFile(\"//input[@id='_20_file']\",\n\t\t\tRuntimeVariables.replace(\"Portlet_Response_Normal_State.png\"));\n\t\tselenium.type(\"//input[@id='_20_title']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Portlet Response (ActionResponse,Normal State)\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_20_description']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Portlet Response (ActionResponse,Normal State)\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"Your request completed successfully.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='portlet-msg-success']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Portlet Response (ActionResponse,Normal State)\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"link=Portlet Response (ActionResponse,Normal State)\"));\n\t\tselenium.clickAt(\"link=Portlet Response (ActionResponse,Normal State)\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Portlet Response (ActionResponse,Normal State)\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Portlet Response (ActionResponse,Normal State)\"),\n\t\t\tselenium.getText(\"//h2[@class='document-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Download (2.0k)\"),\n\t\t\tselenium.getText(\"//span[@class='download-document']/span/a/span\"));\n\t}","commit_id":"9b8640eb8ec5e980d6fcea3e5c8558113f1f1169","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewResourceResponseMisc() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Test Misc Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Test Misc Page\",\n\t\t\tRuntimeVariables.replace(\"Test Misc Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Portlet Response (ResourceResponse)\"),\n\t\t\tselenium.getText(\"//h3[4]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Buffer Size\"),\n\t\t\tselenium.getText(\"//p[4]/a[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Download File\"),\n\t\t\tselenium.getText(\"//p[4]/a[2]\"));\n\t\tselenium.clickAt(\"//p[4]/a[2]\",\n\t\t\tRuntimeVariables.replace(\"Download File\"));\n\t\tselenium.downloadFile(\"Portlet_Response_Resource_Response.png\");\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Document Library Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Test Page\",\n\t\t\tRuntimeVariables.replace(\"Document Library Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//span[3]/span/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[3]/span/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Basic Document\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.uploadFile(\"//input[@id='_20_file']\",\n\t\t\tRuntimeVariables.replace(\"Portlet_Response_Resource_Response.png\"));\n\t\tselenium.type(\"//input[@id='_20_title']\",\n\t\t\tRuntimeVariables.replace(\"Portlet Response (ResourceResponse)\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_20_description']\",\n\t\t\tRuntimeVariables.replace(\"Portlet Response (ResourceResponse)\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"Your request completed successfully.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='portlet-msg-success']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.clickAt(\"//div[@id='_20_documentContainer']/div[3]/a/span[1]/img\",\n\t\t\tRuntimeVariables.replace(\"Portlet Response (ResourceResponse)\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Portlet Response (ResourceResponse)\"),\n\t\t\tselenium.getText(\"//div[1]/h2\"));\n\t\tassertEquals(RuntimeVariables.replace(\"2.0k\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t}","id":61691,"modified_method":"public void testViewResourceResponseMisc() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Test Misc Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Test Misc Page\",\n\t\t\tRuntimeVariables.replace(\"Test Misc Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Portlet Response (ResourceResponse)\"),\n\t\t\tselenium.getText(\"//h3[4]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Buffer Size\"),\n\t\t\tselenium.getText(\"//p[4]/a[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Download File\"),\n\t\t\tselenium.getText(\"//p[4]/a[2]\"));\n\t\tselenium.clickAt(\"//p[4]/a[2]\",\n\t\t\tRuntimeVariables.replace(\"Download File\"));\n\t\tselenium.downloadFile(\"Portlet_Response_Resource_Response.png\");\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Documents and Media Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Documents and Media Test Page\",\n\t\t\tRuntimeVariables.replace(\"Documents and Media Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//span[3]/span/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[3]/span/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Basic Document\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.uploadFile(\"//input[@id='_20_file']\",\n\t\t\tRuntimeVariables.replace(\"Portlet_Response_Resource_Response.png\"));\n\t\tselenium.type(\"//input[@id='_20_title']\",\n\t\t\tRuntimeVariables.replace(\"Portlet Response (ResourceResponse)\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_20_description']\",\n\t\t\tRuntimeVariables.replace(\"Portlet Response (ResourceResponse)\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"Your request completed successfully.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='portlet-msg-success']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Portlet Response (ResourceResponse)\"),\n\t\t\tselenium.getText(\"link=Portlet Response (ResourceResponse)\"));\n\t\tselenium.clickAt(\"link=Portlet Response (ResourceResponse)\",\n\t\t\tRuntimeVariables.replace(\"Portlet Response (ResourceResponse)\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Portlet Response (ResourceResponse)\"),\n\t\t\tselenium.getText(\"//h2[@class='document-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Download (2.0k)\"),\n\t\t\tselenium.getText(\"//span[@class='download-document']/span/a/span\"));\n\t}","commit_id":"9b8640eb8ec5e980d6fcea3e5c8558113f1f1169","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private void addBuild(final ProjectInternal project) {\n        project.getTasks().addPlaceholderAction(BUILD_TASK_NAME, new Runnable() {\n            @Override\n            public void run() {\n                Task buildTask = project.getTasks().maybeCreate(BUILD_TASK_NAME);\n                buildTask.setDescription(\"Assembles and tests this project.\");\n                buildTask.setGroup(BUILD_GROUP);\n                buildTask.dependsOn(ASSEMBLE_TASK_NAME);\n                buildTask.dependsOn(CHECK_TASK_NAME);\n            }\n        });\n    }","id":61692,"modified_method":"private void addBuild(final ProjectInternal project) {\n        project.getTasks().addPlaceholderAction(BUILD_TASK_NAME, new Runnable() {\n            @Override\n            public void run() {\n                DeprecationLogger.whileDisabled(new Runnable() {\n                    @Override\n                    public void run() {\n                        Task buildTask = project.getTasks().maybeCreate(BUILD_TASK_NAME);\n                        buildTask.setDescription(\"Assembles and tests this project.\");\n                        buildTask.setGroup(BUILD_GROUP);\n                        buildTask.dependsOn(ASSEMBLE_TASK_NAME);\n                        buildTask.dependsOn(CHECK_TASK_NAME);\n                    }\n                });\n            }\n        });\n    }","commit_id":"d41877a1c19f22f6b64682449e304f13854d4569","url":"https://github.com/gradle/gradle"},{"original_method":"public void apply(ProjectInternal project) {\n        addClean(project);\n        addCleanRule(project);\n        addAssemble(project);\n        addCheck(project);\n        addBuild(project);\n    }","id":61693,"modified_method":"public void apply(ProjectInternal project) {\n        addClean(project);\n        addCleanRule(project);\n        addAssemble(project);\n        addCheck(project);\n        addBuild(project);\n        addDeprecationWarningsAboutCustomLifecycleTasks(project);\n    }","commit_id":"d41877a1c19f22f6b64682449e304f13854d4569","url":"https://github.com/gradle/gradle"},{"original_method":"private void addCheck(final ProjectInternal project) {\n        project.getTasks().addPlaceholderAction(CHECK_TASK_NAME, new Runnable() {\n            @Override\n            public void run() {\n                Task checkTask = project.getTasks().maybeCreate(CHECK_TASK_NAME);\n                checkTask.setDescription(\"Runs all checks.\");\n                checkTask.setGroup(VERIFICATION_GROUP);\n            }\n        });\n    }","id":61694,"modified_method":"private void addCheck(final ProjectInternal project) {\n        project.getTasks().addPlaceholderAction(CHECK_TASK_NAME, new Runnable() {\n            @Override\n            public void run() {\n                DeprecationLogger.whileDisabled(new Runnable() {\n                    @Override\n                    public void run() {\n                        Task checkTask = project.getTasks().maybeCreate(CHECK_TASK_NAME);\n                        checkTask.setDescription(\"Runs all checks.\");\n                        checkTask.setGroup(VERIFICATION_GROUP);\n                    }\n                });\n            }\n        });\n    }","commit_id":"d41877a1c19f22f6b64682449e304f13854d4569","url":"https://github.com/gradle/gradle"},{"original_method":"private void maybeMaterializePlaceholder(String name) {\n        if (placeholders.containsKey(name)) {\n            if (super.findByName(name) == null) {\n                final Runnable placeholderAction = placeholders.remove(name);\n                placeholderAction.run();\n            }\n        }\n    }","id":61695,"modified_method":"private void maybeMaterializePlaceholder(String name) {\n        if (placeholders.containsKey(name)) {\n            if (super.findByName(name) == null) {\n                Runnable placeholderAction = placeholders.remove(name);\n                // Turn off deprecation logging because of checks imposed by LifecycleBasePlugin\n                DeprecationLogger.whileDisabled(placeholderAction);\n            }\n        }\n    }","commit_id":"eac98c7ad4be2c8dcb54a9150a838b644a04bd16","url":"https://github.com/gradle/gradle"},{"original_method":"private void addBuild(final ProjectInternal project) {\n        project.getTasks().addPlaceholderAction(BUILD_TASK_NAME, new Runnable() {\n            @Override\n            public void run() {\n                DeprecationLogger.whileDisabled(new Runnable() {\n                    @Override\n                    public void run() {\n                        Task buildTask = project.getTasks().maybeCreate(BUILD_TASK_NAME);\n                        buildTask.setDescription(\"Assembles and tests this project.\");\n                        buildTask.setGroup(BUILD_GROUP);\n                        buildTask.dependsOn(ASSEMBLE_TASK_NAME);\n                        buildTask.dependsOn(CHECK_TASK_NAME);\n                    }\n                });\n            }\n        });\n    }","id":61696,"modified_method":"private void addBuild(final ProjectInternal project) {\n        project.getTasks().addPlaceholderAction(BUILD_TASK_NAME, DefaultTask.class, new Action<DefaultTask>() {\n            @Override\n            public void execute(DefaultTask buildTask) {\n                buildTask.setDescription(\"Assembles and tests this project.\");\n                buildTask.setGroup(BUILD_GROUP);\n                buildTask.dependsOn(ASSEMBLE_TASK_NAME);\n                buildTask.dependsOn(CHECK_TASK_NAME);\n            }\n        });\n    }","commit_id":"eac98c7ad4be2c8dcb54a9150a838b644a04bd16","url":"https://github.com/gradle/gradle"},{"original_method":"private void addCheck(final ProjectInternal project) {\n        project.getTasks().addPlaceholderAction(CHECK_TASK_NAME, new Runnable() {\n            @Override\n            public void run() {\n                DeprecationLogger.whileDisabled(new Runnable() {\n                    @Override\n                    public void run() {\n                        Task checkTask = project.getTasks().maybeCreate(CHECK_TASK_NAME);\n                        checkTask.setDescription(\"Runs all checks.\");\n                        checkTask.setGroup(VERIFICATION_GROUP);\n                    }\n                });\n            }\n        });\n    }","id":61697,"modified_method":"private void addCheck(final ProjectInternal project) {\n        project.getTasks().addPlaceholderAction(CHECK_TASK_NAME, DefaultTask.class, new Action<TaskInternal>() {\n            @Override\n            public void execute(TaskInternal checkTask) {\n                checkTask.setDescription(\"Runs all checks.\");\n                checkTask.setGroup(VERIFICATION_GROUP);\n            }\n        });\n    }","commit_id":"eac98c7ad4be2c8dcb54a9150a838b644a04bd16","url":"https://github.com/gradle/gradle"},{"original_method":"public void apply(ProjectInternal project) {\n        addClean(project);\n        addCleanRule(project);\n        addAssemble(project);\n        addCheck(project);\n        addBuild(project);\n    }","id":61698,"modified_method":"public void apply(ProjectInternal project) {\n        addClean(project);\n        addCleanRule(project);\n        addAssemble(project);\n        addCheck(project);\n        addBuild(project);\n        addDeprecationWarningsAboutCustomLifecycleTasks(project);\n    }","commit_id":"b77c26feb0977455e2b67955495c375cf0d5b207","url":"https://github.com/gradle/gradle"},{"original_method":"private void addCheck(final ProjectInternal project) {\n        project.getTasks().addPlaceholderAction(CHECK_TASK_NAME, new Runnable() {\n            @Override\n            public void run() {\n                Task checkTask = project.getTasks().maybeCreate(CHECK_TASK_NAME);\n                checkTask.setDescription(\"Runs all checks.\");\n                checkTask.setGroup(VERIFICATION_GROUP);\n            }\n        });\n    }","id":61699,"modified_method":"private void addCheck(final ProjectInternal project) {\n        project.getTasks().addPlaceholderAction(CHECK_TASK_NAME, new Runnable() {\n            @Override\n            public void run() {\n                DeprecationLogger.whileDisabled(new Runnable() {\n                    @Override\n                    public void run() {\n                        Task checkTask = project.getTasks().maybeCreate(CHECK_TASK_NAME);\n                        checkTask.setDescription(\"Runs all checks.\");\n                        checkTask.setGroup(VERIFICATION_GROUP);\n                    }\n                });\n            }\n        });\n    }","commit_id":"b77c26feb0977455e2b67955495c375cf0d5b207","url":"https://github.com/gradle/gradle"},{"original_method":"private void addBuild(final ProjectInternal project) {\n        project.getTasks().addPlaceholderAction(BUILD_TASK_NAME, new Runnable() {\n            @Override\n            public void run() {\n                Task buildTask = project.getTasks().maybeCreate(BUILD_TASK_NAME);\n                buildTask.setDescription(\"Assembles and tests this project.\");\n                buildTask.setGroup(BUILD_GROUP);\n                buildTask.dependsOn(ASSEMBLE_TASK_NAME);\n                buildTask.dependsOn(CHECK_TASK_NAME);\n            }\n        });\n    }","id":61700,"modified_method":"private void addBuild(final ProjectInternal project) {\n        project.getTasks().addPlaceholderAction(BUILD_TASK_NAME, new Runnable() {\n            @Override\n            public void run() {\n                DeprecationLogger.whileDisabled(new Runnable() {\n                    @Override\n                    public void run() {\n                        Task buildTask = project.getTasks().maybeCreate(BUILD_TASK_NAME);\n                        buildTask.setDescription(\"Assembles and tests this project.\");\n                        buildTask.setGroup(BUILD_GROUP);\n                        buildTask.dependsOn(ASSEMBLE_TASK_NAME);\n                        buildTask.dependsOn(CHECK_TASK_NAME);\n                    }\n                });\n            }\n        });\n    }","commit_id":"b77c26feb0977455e2b67955495c375cf0d5b207","url":"https://github.com/gradle/gradle"},{"original_method":"private synchronized void saveContext(@Nullable String entryName, String zipPostfix, @Nullable String comment) {\n    try {\n      JBZipFile archive = getTasksArchive(zipPostfix);\n      if (entryName == null) {\n        int i = archive.getEntries().size();\n        do {\n          entryName = \"context\" + i++;\n        } while (archive.getEntry(\"/\" + entryName) != null);\n      }\n      JBZipEntry entry = archive.getOrCreateEntry(\"/\" + entryName);\n      if (comment != null) {\n        entry.setComment(comment);\n      }\n      Element element = new Element(\"context\");\n      saveContext(element);\n      String s = new XMLOutputter().outputString(element);\n      entry.setData(s.getBytes(\"UTF-8\"));\n      archive.close();\n    }\n    catch (IOException e) {\n      LOG.error(e);\n    }\n  }","id":61701,"modified_method":"private synchronized void saveContext(@Nullable String entryName, String zipPostfix, @Nullable String comment) {\n    JBZipFile archive = null;\n    try {\n      archive = getTasksArchive(zipPostfix);\n      if (entryName == null) {\n        int i = archive.getEntries().size();\n        do {\n          entryName = \"context\" + i++;\n        } while (archive.getEntry(\"/\" + entryName) != null);\n      }\n      JBZipEntry entry = archive.getOrCreateEntry(\"/\" + entryName);\n      if (comment != null) {\n        entry.setComment(comment);\n      }\n      Element element = new Element(\"context\");\n      saveContext(element);\n      String s = new XMLOutputter().outputString(element);\n      entry.setData(s.getBytes(\"UTF-8\"));\n    }\n    catch (IOException e) {\n      LOG.error(e);\n    }\n    finally {\n      closeArchive(archive);\n    }\n  }","commit_id":"fc5abf36669840ffd34046a46ea74cede0e7df1e","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private synchronized void pack(int max, int delta, String zipPostfix) {\n    try {\n      JBZipFile archive = getTasksArchive(zipPostfix);\n      List<JBZipEntry> entries = archive.getEntries();\n      if (entries.size() > max + delta) {\n        JBZipEntry[] array = entries.toArray(new JBZipEntry[entries.size()]);\n        Arrays.sort(array, ENTRY_COMPARATOR);\n        for (int i = array.length - 1; i >= max; i--) {\n          archive.eraseEntry(array[i]);\n        }\n      }\n      archive.close();\n    }\n    catch (IOException e) {\n      LOG.error(e);\n    }\n  }","id":61702,"modified_method":"private synchronized void pack(int max, int delta, String zipPostfix) {\n    JBZipFile archive = null;\n    try {\n      archive = getTasksArchive(zipPostfix);\n      List<JBZipEntry> entries = archive.getEntries();\n      if (entries.size() > max + delta) {\n        JBZipEntry[] array = entries.toArray(new JBZipEntry[entries.size()]);\n        Arrays.sort(array, ENTRY_COMPARATOR);\n        for (int i = array.length - 1; i >= max; i--) {\n          archive.eraseEntry(array[i]);\n        }\n      }\n    }\n    catch (IOException e) {\n      LOG.error(e);\n    }\n    finally {\n      closeArchive(archive);\n    }\n  }","commit_id":"7b76655283e8f09ef3052b9204244a23044bd3eb","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void removeContext(String name, String postfix) {\n    try {\n      JBZipFile archive = getTasksArchive(postfix);\n      JBZipEntry entry = archive.getEntry(name);\n      if (entry != null) {\n        archive.eraseEntry(entry);\n      }\n      archive.close();\n    }\n    catch (IOException e) {\n      LOG.error(e);\n    }\n  }","id":61703,"modified_method":"private void removeContext(String name, String postfix) {\n    JBZipFile archive = null;\n    try {\n      archive = getTasksArchive(postfix);\n      JBZipEntry entry = archive.getEntry(name);\n      if (entry != null) {\n        archive.eraseEntry(entry);\n      }\n    }\n    catch (IOException e) {\n      LOG.error(e);\n    }\n    finally {\n      closeArchive(archive);\n    }\n  }","commit_id":"7b76655283e8f09ef3052b9204244a23044bd3eb","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private synchronized boolean loadContext(String zipPostfix, String entryName) {\n    try {\n      JBZipFile archive = getTasksArchive(zipPostfix);\n      JBZipEntry entry = archive.getEntry(StringUtil.startsWithChar(entryName, '/') ? entryName : \"/\" + entryName);\n      if (entry != null) {\n        byte[] bytes = entry.getData();\n        Document document = JDOMUtil.loadDocument(new String(bytes));\n        Element rootElement = document.getRootElement();\n        loadContext(rootElement);\n        archive.close();\n        return true;\n      }\n    }\n    catch (Exception e) {\n      LOG.error(e);\n    }\n    return false;\n  }","id":61704,"modified_method":"private synchronized boolean loadContext(String zipPostfix, String entryName) {\n    JBZipFile archive = null;\n    try {\n      archive = getTasksArchive(zipPostfix);\n      JBZipEntry entry = archive.getEntry(StringUtil.startsWithChar(entryName, '/') ? entryName : \"/\" + entryName);\n      if (entry != null) {\n        byte[] bytes = entry.getData();\n        Document document = JDOMUtil.loadDocument(new String(bytes));\n        Element rootElement = document.getRootElement();\n        loadContext(rootElement);\n        return true;\n      }\n    }\n    catch (Exception e) {\n      LOG.error(e);\n    }\n    finally {\n      closeArchive(archive);\n    }\n    return false;\n  }","commit_id":"7b76655283e8f09ef3052b9204244a23044bd3eb","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private synchronized List<ContextInfo> getContextHistory(String zipPostfix) {\n    try {\n      JBZipFile archive = getTasksArchive(zipPostfix);\n      List<JBZipEntry> entries = archive.getEntries();\n      return ContainerUtil.mapNotNull(entries, new NullableFunction<JBZipEntry, ContextInfo>() {\n        public ContextInfo fun(JBZipEntry entry) {\n          return entry.getName().startsWith(\"/context\") ? new ContextInfo(entry.getName(), entry.getTime(), entry.getComment()) : null;\n        }\n      });\n    }\n    catch (IOException e) {\n      LOG.error(e);\n      return Collections.emptyList();\n    }\n  }","id":61705,"modified_method":"private synchronized List<ContextInfo> getContextHistory(String zipPostfix) {\n    JBZipFile archive = null;\n    try {\n      archive = getTasksArchive(zipPostfix);\n      List<JBZipEntry> entries = archive.getEntries();\n      return ContainerUtil.mapNotNull(entries, new NullableFunction<JBZipEntry, ContextInfo>() {\n        public ContextInfo fun(JBZipEntry entry) {\n          return entry.getName().startsWith(\"/context\") ? new ContextInfo(entry.getName(), entry.getTime(), entry.getComment()) : null;\n        }\n      });\n    }\n    catch (IOException e) {\n      LOG.error(e);\n      return Collections.emptyList();\n    }\n    finally {\n      closeArchive(archive);\n    }\n  }","commit_id":"7b76655283e8f09ef3052b9204244a23044bd3eb","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Configuration\n    public Option[] configuration() throws IOException, URISyntaxException {\n        return CoreOptions.options(\n                junitBundles(),\n                mavenBundle(\"org.apache.felix\", \"org.apache.felix.scr\", \"1.6.0\"),\n                mavenBundle( \"org.apache.felix\", \"org.apache.felix.configadmin\", \"1.4.0\" ),\n                mavenBundle( \"org.apache.felix\", \"org.apache.felix.fileinstall\", \"3.2.6\" ),\n                systemProperties(new SystemPropertyOption(\"felix.fileinstall.dir\").value(getConfigDir())),\n                jarBundle(\"jcr.jar\"),\n                jarBundle(\"guava.jar\"),\n                jarBundle(\"commons-codec.jar\"),\n                jarBundle(\"jackrabbit-api.jar\"),\n                jarBundle(\"jackrabbit-jcr-commons.jar\"),\n                jarBundle(\"oak-commons.jar\"),\n                jarBundle(\"oak-mk-api.jar\"),\n                jarBundle(\"oak-mk.jar\"),\n                jarBundle(\"oak-mk-remote.jar\"),\n                jarBundle(\"oak-core.jar\"),\n                jarBundle(\"oak-lucene.jar\"),\n                jarBundle(\"oak-jcr.jar\"),\n                jarBundle(\"tika-core.jar\"));\n    }","id":61706,"modified_method":"@Configuration\n    public Option[] configuration() throws IOException, URISyntaxException {\n        return CoreOptions.options(\n                junitBundles(),\n                mavenBundle(\"org.apache.felix\", \"org.apache.felix.scr\", \"1.6.0\"),\n                mavenBundle( \"org.apache.felix\", \"org.apache.felix.configadmin\", \"1.4.0\" ),\n                mavenBundle( \"org.apache.felix\", \"org.apache.felix.fileinstall\", \"3.2.6\" ),\n                systemProperties(new SystemPropertyOption(\"felix.fileinstall.dir\").value(getConfigDir())),\n                jarBundles());\n    }","commit_id":"b37330a4e9d538555813b9a09a804a8c0436b91d","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"@Configuration\n    public Option[] configuration() throws IOException, URISyntaxException {\n        File base = new File(TARGET, \"test-bundles\");\n        return CoreOptions.options(\n                junitBundles(),\n                mavenBundle(\"org.apache.felix\", \"org.apache.felix.scr\", \"1.6.0\"),\n                bundle(new File(base, \"jcr.jar\").toURI().toURL().toString()),\n                bundle(new File(base, \"guava.jar\").toURI().toURL().toString()),\n                bundle(new File(base, \"jackrabbit-api.jar\").toURI().toURL().toString()),\n                bundle(new File(base, \"jackrabbit-jcr-commons.jar\").toURI().toURL().toString()),\n                bundle(new File(base, \"oak-commons.jar\").toURI().toURL().toString()),\n                bundle(new File(base, \"oak-mk-api.jar\").toURI().toURL().toString()),\n                bundle(new File(base, \"oak-mk.jar\").toURI().toURL().toString()),\n                bundle(new File(base, \"oak-mk-remote.jar\").toURI().toURL().toString()),\n                bundle(new File(base, \"oak-core.jar\").toURI().toURL().toString()),\n                bundle(new File(base, \"oak-lucene.jar\").toURI().toURL().toString()),\n                bundle(new File(base, \"oak-jcr.jar\").toURI().toURL().toString()));\n    }","id":61707,"modified_method":"@Configuration\n    public Option[] configuration() throws IOException, URISyntaxException {\n        return CoreOptions.options(\n                junitBundles(),\n                mavenBundle(\"org.apache.felix\", \"org.apache.felix.scr\", \"1.6.0\"),\n                jarBundle(\"jcr.jar\"),\n                jarBundle(\"guava.jar\"),\n                jarBundle(\"jackrabbit-api.jar\"),\n                jarBundle(\"jackrabbit-jcr-commons.jar\"),\n                jarBundle(\"oak-commons.jar\"),\n                jarBundle(\"oak-mk-api.jar\"),\n                jarBundle(\"oak-mk.jar\"),\n                jarBundle(\"oak-mk-remote.jar\"),\n                jarBundle(\"oak-core.jar\"),\n                jarBundle(\"oak-lucene.jar\"),\n                jarBundle(\"oak-jcr.jar\"),\n                jarBundle(\"tika-core.jar\"));\n    }","commit_id":"3abdf7f9b9b688106af5332dfe614ed8b46de880","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"private boolean containsInteger() {\n    for ( StringEvaluationResult result : evaluationResults ) {\n      if ( result.getConversionMeta().isInteger() ) {\n        return true;\n      }\n    }\n    return false;\n  }","id":61708,"modified_method":"private boolean containsInteger() {\n    for ( StringEvaluationResult result : evaluationResults ) {\n      if ( result.getConversionMeta().isInteger() && result.getNrSuccesses() > 0 ) {\n        return true;\n      }\n    }\n    return false;\n  }","commit_id":"f0c1c308b96fe27362ac80cc51490fab09971ca4","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private void challengeConversions( String value ) {\n    List<StringEvaluationResult> all = new ArrayList<StringEvaluationResult>( evaluationResults );\n    ValueMetaInterface stringMetaClone = null;\n    for ( StringEvaluationResult cmm : all ) {\n      if ( cmm.getConversionMeta().isBoolean() ) {\n        // Boolean conversion never fails.\n        // If it's a Y, N, true, false it's a boolean otherwise it ain't.\n        //\n        String string;\n        if ( tryTrimming ) {\n          string = Const.trim( value );\n        } else {\n          string = value;\n        }\n        if ( !( \"Y\".equalsIgnoreCase( string )\n          || \"N\".equalsIgnoreCase( string ) || \"TRUE\".equalsIgnoreCase( string ) || \"FALSE\"\n          .equalsIgnoreCase( string ) ) ) {\n          evaluationResults.remove( cmm );\n        }\n      } else {\n        try {\n          if ( cmm.getConversionMeta().isNumeric() ) {\n            boolean stop = false;\n            int nrDots = 0;\n            int nrCommas = 0;\n            int pos = 0;\n            for ( char c : value.toCharArray() ) {\n\n              boolean currencySymbolMatch = !String.valueOf( c ).equals( cmm.getConversionMeta().getCurrencySymbol() )\n                && c != '('\n                && c != ')';\n\n              if ( !Character.isDigit( c )\n                && c != '.'\n                && c != ','\n                && !Character.isSpaceChar( c )\n                && currencySymbolMatch\n                && ( pos > 0 && ( c == '+' || c == '-' ) ) // allow + & - at the 1st position\n              ) {\n                evaluationResults.remove( cmm );\n                stop = true;\n                break;\n              }\n\n              // If the value contains a decimal or grouping symbol or some sort, it's not an integer\n              //\n              if ( ( c == '.' && cmm.getConversionMeta().isInteger() )\n                || ( c == ',' && cmm.getConversionMeta().isInteger() ) ) {\n                evaluationResults.remove( cmm );\n                stop = true;\n                break;\n              }\n              if ( c == '.' ) {\n                nrDots++;\n              }\n              if ( c == ',' ) {\n                nrCommas++;\n              }\n              pos++;\n            }\n\n            if ( nrDots > 1 && nrCommas > 1 ) {\n              evaluationResults.remove( cmm );\n              stop = true;\n            }\n\n            if ( stop ) {\n              continue;\n            }\n\n          }\n\n          if ( stringMetaClone == null ) {\n            // avoid cloning each time\n            stringMetaClone = stringMeta.clone();\n          }\n          stringMetaClone.setConversionMetadata( cmm.getConversionMeta() );\n          stringMetaClone.setTrimType( cmm.getConversionMeta().getTrimType() );\n          Object object = stringMetaClone.convertDataUsingConversionMetaData( value );\n\n          // Still here? Evaluate the data...\n          // Keep track of null values, min, max, etc.\n          //\n          if ( cmm.getConversionMeta().isNull( object ) ) {\n            cmm.incrementNrNull();\n          }\n\n          if ( cmm.getMin() == null || cmm.getConversionMeta().compare( cmm.getMin(), object ) > 0 ) {\n            cmm.setMin( object );\n          }\n          if ( cmm.getMax() == null || cmm.getConversionMeta().compare( cmm.getMax(), object ) < 0 ) {\n            cmm.setMax( object );\n          }\n\n        } catch ( KettleValueException e ) {\n          // This one doesn't work, remove it from the list!\n          //\n          evaluationResults.remove( cmm );\n        }\n      }\n    }\n  }","id":61709,"modified_method":"private void challengeConversions( String value ) {\n    List<StringEvaluationResult> all = new ArrayList<StringEvaluationResult>( evaluationResults );\n    ValueMetaInterface stringMetaClone = null;\n    for ( StringEvaluationResult cmm : all ) {\n      if ( cmm.getConversionMeta().isBoolean() ) {\n        // Boolean conversion never fails.\n        // If it's a Y, N, true, false it's a boolean otherwise it ain't.\n        //\n        String string;\n        if ( tryTrimming ) {\n          string = Const.trim( value );\n        } else {\n          string = value;\n        }\n        if ( StringUtils.isEmpty( value ) ) {\n          cmm.incrementNrNull();\n        } else if ( !( \"Y\".equalsIgnoreCase( string ) || \"N\".equalsIgnoreCase( string ) || \"TRUE\".equalsIgnoreCase(\n            string ) || \"FALSE\".equalsIgnoreCase( string ) ) ) {\n          evaluationResults.remove( cmm );\n        } else {\n          cmm.incrementSuccesses();\n        }\n      } else {\n        try {\n          if ( cmm.getConversionMeta().isNumeric() ) {\n            boolean stop = false;\n            int nrDots = 0;\n            int nrCommas = 0;\n            int pos = 0;\n            for ( char c : value.toCharArray() ) {\n\n              boolean currencySymbolMatch = !String.valueOf( c ).equals( cmm.getConversionMeta().getCurrencySymbol() )\n                && c != '('\n                && c != ')';\n\n              if ( !Character.isDigit( c )\n                && c != '.'\n                && c != ','\n                && !Character.isSpaceChar( c )\n                && currencySymbolMatch\n                && ( pos > 0 && ( c == '+' || c == '-' ) ) // allow + & - at the 1st position\n              ) {\n                evaluationResults.remove( cmm );\n                stop = true;\n                break;\n              }\n\n              // If the value contains a decimal or grouping symbol or some sort, it's not an integer\n              //\n              if ( ( c == '.' && cmm.getConversionMeta().isInteger() )\n                || ( c == ',' && cmm.getConversionMeta().isInteger() ) ) {\n                evaluationResults.remove( cmm );\n                stop = true;\n                break;\n              }\n              if ( c == '.' ) {\n                nrDots++;\n              }\n              if ( c == ',' ) {\n                nrCommas++;\n              }\n              pos++;\n            }\n\n            if ( nrDots > 1 && nrCommas > 1 ) {\n              evaluationResults.remove( cmm );\n              stop = true;\n            }\n\n            if ( stop ) {\n              continue;\n            }\n\n          }\n\n          if ( stringMetaClone == null ) {\n            // avoid cloning each time\n            stringMetaClone = stringMeta.clone();\n          }\n          stringMetaClone.setConversionMetadata( cmm.getConversionMeta() );\n          stringMetaClone.setTrimType( cmm.getConversionMeta().getTrimType() );\n          Object object = stringMetaClone.convertDataUsingConversionMetaData( value );\n\n          // Still here? Evaluate the data...\n          // Keep track of null values, min, max, etc.\n          //\n          if ( cmm.getConversionMeta().isNull( object ) ) {\n            cmm.incrementNrNull();\n          }\n\n          if ( cmm.getMin() == null || cmm.getConversionMeta().compare( cmm.getMin(), object ) > 0 ) {\n            cmm.setMin( object );\n          }\n          if ( cmm.getMax() == null || cmm.getConversionMeta().compare( cmm.getMax(), object ) < 0 ) {\n            cmm.setMax( object );\n          }\n\n          if ( !cmm.getConversionMeta().isNull( object ) ) {\n            cmm.incrementSuccesses();\n          }\n\n        } catch ( KettleValueException e ) {\n          // This one doesn't work, remove it from the list!\n          //\n          evaluationResults.remove( cmm );\n        }\n      }\n    }\n  }","commit_id":"f0c1c308b96fe27362ac80cc51490fab09971ca4","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private boolean containsDate() {\n    for ( StringEvaluationResult result : evaluationResults ) {\n      if ( result.getConversionMeta().isDate() ) {\n        return true;\n      }\n    }\n    return false;\n  }","id":61710,"modified_method":"private boolean containsDate() {\n    for ( StringEvaluationResult result : evaluationResults ) {\n      if ( result.getConversionMeta().isDate() && result.getNrSuccesses() > 0 ) {\n        return true;\n      }\n    }\n    return false;\n  }","commit_id":"f0c1c308b96fe27362ac80cc51490fab09971ca4","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private boolean containsNumber() {\n    for ( StringEvaluationResult result : evaluationResults ) {\n      if ( result.getConversionMeta().isNumber() ) {\n        return true;\n      }\n    }\n    return false;\n  }","id":61711,"modified_method":"private boolean containsNumber() {\n    for ( StringEvaluationResult result : evaluationResults ) {\n      if ( result.getConversionMeta().isNumber() && result.getNrSuccesses() > 0 ) {\n        return true;\n      }\n    }\n    return false;\n  }","commit_id":"f0c1c308b96fe27362ac80cc51490fab09971ca4","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"/**\n   * @return The list of string evaluation results\n   */\n  public List<StringEvaluationResult> getStringEvaluationResults() {\n    return evaluationResults;\n  }","id":61712,"modified_method":"/**\n   * PDI-7736: Only list of successful evaluations returned.\n   * \n   * @return The list of string evaluation results\n   */\n  public List<StringEvaluationResult> getStringEvaluationResults() {\n    List<StringEvaluationResult> result = new ArrayList<>();\n    for ( StringEvaluationResult ev : evaluationResults ) {\n      if ( ev.getNrSuccesses() > 0 ) {\n        result.add( ev );\n      }\n    }\n    return result;\n  }","commit_id":"f0c1c308b96fe27362ac80cc51490fab09971ca4","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private String doScan( IProgressMonitor monitor ) throws KettleException {\n    if ( samples > 0 ) {\n      monitor.beginTask( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Task.ScanningFile\" ), samples\n          + 1 );\n    } else {\n      monitor.beginTask( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Task.ScanningFile\" ), 2 );\n    }\n\n    String line = \"\";\n    long fileLineNumber = 0;\n\n    DecimalFormatSymbols dfs = new DecimalFormatSymbols();\n\n    int nrfields = meta.inputFiles.inputFields.length;\n\n    RowMetaInterface outputRowMeta = new RowMeta();\n    meta.getFields( outputRowMeta, null, null, null, transMeta, null, null );\n\n    // Remove the storage meta-data (don't go for lazy conversion during scan)\n    for ( ValueMetaInterface valueMeta : outputRowMeta.getValueMetaList() ) {\n      valueMeta.setStorageMetadata( null );\n      valueMeta.setStorageType( ValueMetaInterface.STORAGE_TYPE_NORMAL );\n    }\n\n    RowMetaInterface convertRowMeta = outputRowMeta.cloneToType( ValueMetaInterface.TYPE_STRING );\n\n    // How many null values?\n    int[] nrnull = new int[nrfields]; // How many times null value?\n\n    // String info\n    String[] minstr = new String[nrfields]; // min string\n    String[] maxstr = new String[nrfields]; // max string\n    boolean[] firststr = new boolean[nrfields]; // first occ. of string?\n\n    // Date info\n    boolean[] isDate = new boolean[nrfields]; // is the field perhaps a Date?\n    int[] dateFormatCount = new int[nrfields]; // How many date formats work?\n    boolean[][] dateFormat = new boolean[nrfields][Const.getDateFormats().length]; // What are the date formats that\n    // work?\n    Date[][] minDate = new Date[nrfields][Const.getDateFormats().length]; // min date value\n    Date[][] maxDate = new Date[nrfields][Const.getDateFormats().length]; // max date value\n\n    // Number info\n    boolean[] isNumber = new boolean[nrfields]; // is the field perhaps a Number?\n    int[] numberFormatCount = new int[nrfields]; // How many number formats work?\n    boolean[][] numberFormat = new boolean[nrfields][Const.getNumberFormats().length]; // What are the number format\n                                                                                       // that work?\n    double[][] minValue = new double[nrfields][Const.getDateFormats().length]; // min number value\n    double[][] maxValue = new double[nrfields][Const.getDateFormats().length]; // max number value\n    int[][] numberPrecision = new int[nrfields][Const.getNumberFormats().length]; // remember the precision?\n    int[][] numberLength = new int[nrfields][Const.getNumberFormats().length]; // remember the length?\n\n    for ( int i = 0; i < nrfields; i++ ) {\n      TextFileInputField field = meta.inputFiles.inputFields[i];\n\n      if ( log.isDebug() ) {\n        debug = \"init field #\" + i;\n      }\n\n      if ( replaceMeta ) { // Clear previous info...\n\n        field.setName( meta.inputFiles.inputFields[i].getName() );\n        field.setType( meta.inputFiles.inputFields[i].getType() );\n        field.setFormat( \"\" );\n        field.setLength( -1 );\n        field.setPrecision( -1 );\n        field.setCurrencySymbol( dfs.getCurrencySymbol() );\n        field.setDecimalSymbol( \"\" + dfs.getDecimalSeparator() );\n        field.setGroupSymbol( \"\" + dfs.getGroupingSeparator() );\n        field.setNullString( \"-\" );\n        field.setTrimType( ValueMetaInterface.TRIM_TYPE_NONE );\n      }\n\n      nrnull[i] = 0;\n      minstr[i] = \"\";\n      maxstr[i] = \"\";\n      firststr[i] = true;\n\n      // Init data guess\n      isDate[i] = true;\n      for ( int j = 0; j < Const.getDateFormats().length; j++ ) {\n        dateFormat[i][j] = true;\n        minDate[i][j] = Const.MAX_DATE;\n        maxDate[i][j] = Const.MIN_DATE;\n      }\n      dateFormatCount[i] = Const.getDateFormats().length;\n\n      // Init number guess\n      isNumber[i] = true;\n      for ( int j = 0; j < Const.getNumberFormats().length; j++ ) {\n        numberFormat[i][j] = true;\n        minValue[i][j] = Double.MAX_VALUE;\n        maxValue[i][j] = -Double.MAX_VALUE;\n        numberPrecision[i][j] = -1;\n        numberLength[i][j] = -1;\n      }\n      numberFormatCount[i] = Const.getNumberFormats().length;\n    }\n\n    TextFileInputMeta strinfo = (TextFileInputMeta) meta.clone();\n    for ( int i = 0; i < nrfields; i++ ) {\n      strinfo.inputFiles.inputFields[i].setType( ValueMetaInterface.TYPE_STRING );\n    }\n\n    // Sample <samples> rows...\n    debug = \"get first line\";\n\n    StringBuilder lineBuffer = new StringBuilder( 256 );\n    int fileFormatType = meta.getFileFormatTypeNr();\n\n    // If the file has a header we overwrite the first line\n    // However, if it doesn't have a header, take a new line\n    //\n\n    line = TextFileInputUtils.getLine( log, reader, encodingType, fileFormatType, lineBuffer );\n    fileLineNumber++;\n    int skipped = 1;\n\n    if ( meta.content.header ) {\n\n      while ( line != null && skipped < meta.content.nrHeaderLines ) {\n        line = TextFileInputUtils.getLine( log, reader, encodingType, fileFormatType, lineBuffer );\n        skipped++;\n        fileLineNumber++;\n      }\n    }\n    int linenr = 1;\n\n    List<StringEvaluator> evaluators = new ArrayList<StringEvaluator>();\n\n    // Allocate number and date parsers\n    DecimalFormat df2 = (DecimalFormat) NumberFormat.getInstance();\n    DecimalFormatSymbols dfs2 = new DecimalFormatSymbols();\n    SimpleDateFormat daf2 = new SimpleDateFormat();\n\n    boolean errorFound = false;\n    while ( !errorFound && line != null && ( linenr <= samples || samples == 0 ) && !monitor.isCanceled() ) {\n      monitor.subTask( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Task.ScanningLine\", \"\"\n          + linenr ) );\n      if ( samples > 0 ) {\n        monitor.worked( 1 );\n      }\n\n      if ( log.isDebug() ) {\n        debug = \"convert line #\" + linenr + \" to row\";\n      }\n      RowMetaInterface rowMeta = new RowMeta();\n      meta.getFields( rowMeta, \"stepname\", null, null, transMeta, null, null );\n      // Remove the storage meta-data (don't go for lazy conversion during scan)\n      for ( ValueMetaInterface valueMeta : rowMeta.getValueMetaList() ) {\n        valueMeta.setStorageMetadata( null );\n        valueMeta.setStorageType( ValueMetaInterface.STORAGE_TYPE_NORMAL );\n      }\n\n      String delimiter = transMeta.environmentSubstitute( meta.content.separator );\n      String enclosure = transMeta.environmentSubstitute( meta.content.enclosure );\n      String escapeCharacter = transMeta.environmentSubstitute( meta.content.escapeCharacter );\n      Object[] r =\n          TextFileInputUtils.convertLineToRow( log, new TextFileLine( line, fileLineNumber, null ), strinfo, null, 0,\n              outputRowMeta, convertRowMeta, meta.getFilePaths( transMeta )[0], rownumber, delimiter, enclosure,\n              escapeCharacter, null, new BaseFileInputStepMeta.AdditionalOutputFields(), null, null, false, null, null,\n              null, null, 0 );\n\n      if ( r == null ) {\n        errorFound = true;\n        continue;\n      }\n      rownumber++;\n      for ( int i = 0; i < nrfields && i < r.length; i++ ) {\n        StringEvaluator evaluator;\n        if ( i >= evaluators.size() ) {\n          evaluator = new StringEvaluator( true );\n          evaluators.add( evaluator );\n        } else {\n          evaluator = evaluators.get( i );\n        }\n\n        String string = rowMeta.getString( r, i );\n\n        if ( i == 0 ) {\n          System.out.println();\n        }\n        evaluator.evaluateString( string );\n      }\n\n      fileLineNumber++;\n      if ( r != null ) {\n        linenr++;\n      }\n\n      // Grab another line...\n      //\n      line = TextFileInputUtils.getLine( log, reader, encodingType, fileFormatType, lineBuffer );\n    }\n\n    monitor.worked( 1 );\n    monitor.setTaskName( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Task.AnalyzingResults\" ) );\n\n    // Show information on items using a dialog box\n    //\n    StringBuilder message = new StringBuilder();\n    message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.ResultAfterScanning\", \"\"\n        + ( linenr - 1 ) ) );\n    message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.HorizontalLine\" ) );\n\n    for ( int i = 0; i < nrfields; i++ ) {\n      TextFileInputField field = meta.inputFiles.inputFields[i];\n      StringEvaluator evaluator = evaluators.get( i );\n      List<StringEvaluationResult> evaluationResults = evaluator.getStringEvaluationResults();\n\n      // If we didn't find any matching result, it's a String...\n      //\n      StringEvaluationResult result = evaluator.getAdvicedResult();\n      if ( evaluationResults.isEmpty() ) {\n        field.setType( ValueMetaInterface.TYPE_STRING );\n        field.setLength( evaluator.getMaxLength() );\n      }\n      if ( result != null ) {\n        // Take the first option we find, list the others below...\n        //\n        ValueMetaInterface conversionMeta = result.getConversionMeta();\n        field.setType( conversionMeta.getType() );\n        field.setTrimType( conversionMeta.getTrimType() );\n        field.setFormat( conversionMeta.getConversionMask() );\n        field.setDecimalSymbol( conversionMeta.getDecimalSymbol() );\n        field.setGroupSymbol( conversionMeta.getGroupingSymbol() );\n        field.setLength( conversionMeta.getLength() );\n        field.setPrecision( conversionMeta.getPrecision() );\n\n        nrnull[i] = result.getNrNull();\n        minstr[i] = result.getMin() == null ? \"\" : result.getMin().toString();\n        maxstr[i] = result.getMax() == null ? \"\" : result.getMax().toString();\n      }\n\n      message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.FieldNumber\", \"\" + ( i\n          + 1 ) ) );\n\n      message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.FieldName\", field\n          .getName() ) );\n      message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.FieldType\", field\n          .getTypeDesc() ) );\n\n      switch ( field.getType() ) {\n        case ValueMetaInterface.TYPE_NUMBER:\n          message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.EstimatedLength\", ( field\n              .getLength() < 0 ? \"-\" : \"\" + field.getLength() ) ) );\n          message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.EstimatedPrecision\", field\n              .getPrecision() < 0 ? \"-\" : \"\" + field.getPrecision() ) );\n          message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.NumberFormat\", field\n              .getFormat() ) );\n\n          if ( !evaluationResults.isEmpty() ) {\n            if ( evaluationResults.size() > 1 ) {\n              message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.WarnNumberFormat\" ) );\n            }\n\n            for ( StringEvaluationResult seResult : evaluationResults ) {\n              String mask = seResult.getConversionMeta().getConversionMask();\n\n              message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.NumberFormat2\",\n                  mask ) );\n              message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.TrimType\", seResult\n                  .getConversionMeta().getTrimType() ) );\n              message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.NumberMinValue\",\n                  seResult.getMin() ) );\n              message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.NumberMaxValue\",\n                  seResult.getMax() ) );\n\n              try {\n                df2.applyPattern( mask );\n                df2.setDecimalFormatSymbols( dfs2 );\n                double mn = df2.parse( seResult.getMin().toString() ).doubleValue();\n                message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.NumberExample\", mask,\n                    seResult.getMin(), Double.toString( mn ) ) );\n              } catch ( Exception e ) {\n                if ( log.isDetailed() ) {\n                  log.logDetailed( \"This is unexpected: parsing [\" + seResult.getMin() + \"] with format [\" + mask\n                      + \"] did not work.\" );\n                }\n              }\n            }\n          }\n          message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.NumberNrNullValues\", \"\"\n              + nrnull[i] ) );\n          break;\n        case ValueMetaInterface.TYPE_STRING:\n          message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.StringMaxLength\", \"\"\n              + field.getLength() ) );\n          message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.StringMinValue\",\n              minstr[i] ) );\n          message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.StringMaxValue\",\n              maxstr[i] ) );\n          message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.StringNrNullValues\", \"\"\n              + nrnull[i] ) );\n          break;\n        case ValueMetaInterface.TYPE_DATE:\n          message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.DateMaxLength\", field\n              .getLength() < 0 ? \"-\" : \"\" + field.getLength() ) );\n          message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.DateFormat\", field\n              .getFormat() ) );\n          if ( dateFormatCount[i] > 1 ) {\n            message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.WarnDateFormat\" ) );\n          }\n          if ( !Const.isEmpty( minstr[i] ) ) {\n            for ( int x = 0; x < Const.getDateFormats().length; x++ ) {\n              if ( dateFormat[i][x] ) {\n                message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.DateFormat2\", Const\n                    .getDateFormats()[x] ) );\n                Date mindate = minDate[i][x];\n                Date maxdate = maxDate[i][x];\n                message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.DateMinValue\",\n                    mindate.toString() ) );\n                message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.DateMaxValue\",\n                    maxdate.toString() ) );\n\n                daf2.applyPattern( Const.getDateFormats()[x] );\n                try {\n                  Date md = daf2.parse( minstr[i] );\n                  message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.DateExample\", Const\n                      .getDateFormats()[x], minstr[i], md.toString() ) );\n                } catch ( Exception e ) {\n                  if ( log.isDetailed() ) {\n                    log.logDetailed( \"This is unexpected: parsing [\" + minstr[i] + \"] with format [\" + Const\n                        .getDateFormats()[x] + \"] did not work.\" );\n                  }\n                }\n              }\n            }\n          }\n          message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.DateNrNullValues\", \"\"\n              + nrnull[i] ) );\n          break;\n        default:\n          break;\n      }\n      if ( nrnull[i] == linenr - 1 ) {\n        message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.AllNullValues\" ) );\n      }\n      message.append( Const.CR );\n\n    }\n\n    monitor.worked( 1 );\n    monitor.done();\n\n    return message.toString();\n\n  }","id":61713,"modified_method":"private String doScan( IProgressMonitor monitor ) throws KettleException {\n    if ( samples > 0 ) {\n      monitor.beginTask( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Task.ScanningFile\" ), samples\n          + 1 );\n    } else {\n      monitor.beginTask( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Task.ScanningFile\" ), 2 );\n    }\n\n    String line = \"\";\n    long fileLineNumber = 0;\n\n    DecimalFormatSymbols dfs = new DecimalFormatSymbols();\n\n    int nrfields = meta.inputFiles.inputFields.length;\n\n    RowMetaInterface outputRowMeta = new RowMeta();\n    meta.getFields( outputRowMeta, null, null, null, transMeta, null, null );\n\n    // Remove the storage meta-data (don't go for lazy conversion during scan)\n    for ( ValueMetaInterface valueMeta : outputRowMeta.getValueMetaList() ) {\n      valueMeta.setStorageMetadata( null );\n      valueMeta.setStorageType( ValueMetaInterface.STORAGE_TYPE_NORMAL );\n    }\n\n    RowMetaInterface convertRowMeta = outputRowMeta.cloneToType( ValueMetaInterface.TYPE_STRING );\n\n    // How many null values?\n    int[] nrnull = new int[nrfields]; // How many times null value?\n\n    // String info\n    String[] minstr = new String[nrfields]; // min string\n    String[] maxstr = new String[nrfields]; // max string\n    boolean[] firststr = new boolean[nrfields]; // first occ. of string?\n\n    // Date info\n    boolean[] isDate = new boolean[nrfields]; // is the field perhaps a Date?\n    int[] dateFormatCount = new int[nrfields]; // How many date formats work?\n    boolean[][] dateFormat = new boolean[nrfields][Const.getDateFormats().length]; // What are the date formats that\n    // work?\n    Date[][] minDate = new Date[nrfields][Const.getDateFormats().length]; // min date value\n    Date[][] maxDate = new Date[nrfields][Const.getDateFormats().length]; // max date value\n\n    // Number info\n    boolean[] isNumber = new boolean[nrfields]; // is the field perhaps a Number?\n    int[] numberFormatCount = new int[nrfields]; // How many number formats work?\n    boolean[][] numberFormat = new boolean[nrfields][Const.getNumberFormats().length]; // What are the number format\n                                                                                       // that work?\n    double[][] minValue = new double[nrfields][Const.getDateFormats().length]; // min number value\n    double[][] maxValue = new double[nrfields][Const.getDateFormats().length]; // max number value\n    int[][] numberPrecision = new int[nrfields][Const.getNumberFormats().length]; // remember the precision?\n    int[][] numberLength = new int[nrfields][Const.getNumberFormats().length]; // remember the length?\n\n    for ( int i = 0; i < nrfields; i++ ) {\n      TextFileInputField field = meta.inputFiles.inputFields[i];\n\n      if ( log.isDebug() ) {\n        debug = \"init field #\" + i;\n      }\n\n      if ( replaceMeta ) { // Clear previous info...\n\n        field.setName( meta.inputFiles.inputFields[i].getName() );\n        field.setType( meta.inputFiles.inputFields[i].getType() );\n        field.setFormat( \"\" );\n        field.setLength( -1 );\n        field.setPrecision( -1 );\n        field.setCurrencySymbol( dfs.getCurrencySymbol() );\n        field.setDecimalSymbol( \"\" + dfs.getDecimalSeparator() );\n        field.setGroupSymbol( \"\" + dfs.getGroupingSeparator() );\n        field.setNullString( \"-\" );\n        field.setTrimType( ValueMetaInterface.TRIM_TYPE_NONE );\n      }\n\n      nrnull[i] = 0;\n      minstr[i] = \"\";\n      maxstr[i] = \"\";\n      firststr[i] = true;\n\n      // Init data guess\n      isDate[i] = true;\n      for ( int j = 0; j < Const.getDateFormats().length; j++ ) {\n        dateFormat[i][j] = true;\n        minDate[i][j] = Const.MAX_DATE;\n        maxDate[i][j] = Const.MIN_DATE;\n      }\n      dateFormatCount[i] = Const.getDateFormats().length;\n\n      // Init number guess\n      isNumber[i] = true;\n      for ( int j = 0; j < Const.getNumberFormats().length; j++ ) {\n        numberFormat[i][j] = true;\n        minValue[i][j] = Double.MAX_VALUE;\n        maxValue[i][j] = -Double.MAX_VALUE;\n        numberPrecision[i][j] = -1;\n        numberLength[i][j] = -1;\n      }\n      numberFormatCount[i] = Const.getNumberFormats().length;\n    }\n\n    TextFileInputMeta strinfo = (TextFileInputMeta) meta.clone();\n    for ( int i = 0; i < nrfields; i++ ) {\n      strinfo.inputFiles.inputFields[i].setType( ValueMetaInterface.TYPE_STRING );\n    }\n\n    // Sample <samples> rows...\n    debug = \"get first line\";\n\n    StringBuilder lineBuffer = new StringBuilder( 256 );\n    int fileFormatType = meta.getFileFormatTypeNr();\n\n    // If the file has a header we overwrite the first line\n    // However, if it doesn't have a header, take a new line\n    //\n\n    line = TextFileInputUtils.getLine( log, reader, encodingType, fileFormatType, lineBuffer );\n    fileLineNumber++;\n    int skipped = 1;\n\n    if ( meta.content.header ) {\n\n      while ( line != null && skipped < meta.content.nrHeaderLines ) {\n        line = TextFileInputUtils.getLine( log, reader, encodingType, fileFormatType, lineBuffer );\n        skipped++;\n        fileLineNumber++;\n      }\n    }\n    int linenr = 1;\n\n    List<StringEvaluator> evaluators = new ArrayList<StringEvaluator>();\n\n    // Allocate number and date parsers\n    DecimalFormat df2 = (DecimalFormat) NumberFormat.getInstance();\n    DecimalFormatSymbols dfs2 = new DecimalFormatSymbols();\n    SimpleDateFormat daf2 = new SimpleDateFormat();\n\n    boolean errorFound = false;\n    while ( !errorFound && line != null && ( linenr <= samples || samples == 0 ) && !monitor.isCanceled() ) {\n      monitor.subTask( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Task.ScanningLine\", \"\"\n          + linenr ) );\n      if ( samples > 0 ) {\n        monitor.worked( 1 );\n      }\n\n      if ( log.isDebug() ) {\n        debug = \"convert line #\" + linenr + \" to row\";\n      }\n      RowMetaInterface rowMeta = new RowMeta();\n      meta.getFields( rowMeta, \"stepname\", null, null, transMeta, null, null );\n      // Remove the storage meta-data (don't go for lazy conversion during scan)\n      for ( ValueMetaInterface valueMeta : rowMeta.getValueMetaList() ) {\n        valueMeta.setStorageMetadata( null );\n        valueMeta.setStorageType( ValueMetaInterface.STORAGE_TYPE_NORMAL );\n      }\n\n      String delimiter = transMeta.environmentSubstitute( meta.content.separator );\n      String enclosure = transMeta.environmentSubstitute( meta.content.enclosure );\n      String escapeCharacter = transMeta.environmentSubstitute( meta.content.escapeCharacter );\n      Object[] r =\n          TextFileInputUtils.convertLineToRow( log, new TextFileLine( line, fileLineNumber, null ), strinfo, null, 0,\n              outputRowMeta, convertRowMeta, meta.getFilePaths( transMeta )[0], rownumber, delimiter, enclosure,\n              escapeCharacter, null, new BaseFileInputStepMeta.AdditionalOutputFields(), null, null, false, null, null,\n              null, null, 0 );\n\n      if ( r == null ) {\n        errorFound = true;\n        continue;\n      }\n      rownumber++;\n      for ( int i = 0; i < nrfields && i < r.length; i++ ) {\n        StringEvaluator evaluator;\n        if ( i >= evaluators.size() ) {\n          evaluator = new StringEvaluator( true );\n          evaluators.add( evaluator );\n        } else {\n          evaluator = evaluators.get( i );\n        }\n\n        String string = rowMeta.getString( r, i );\n\n        if ( i == 0 ) {\n          System.out.println();\n        }\n        evaluator.evaluateString( string );\n      }\n\n      fileLineNumber++;\n      if ( r != null ) {\n        linenr++;\n      }\n\n      // Grab another line...\n      //\n      line = TextFileInputUtils.getLine( log, reader, encodingType, fileFormatType, lineBuffer );\n    }\n\n    monitor.worked( 1 );\n    monitor.setTaskName( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Task.AnalyzingResults\" ) );\n\n    // Show information on items using a dialog box\n    //\n    StringBuilder message = new StringBuilder();\n    message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.ResultAfterScanning\", \"\"\n        + ( linenr - 1 ) ) );\n    message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.HorizontalLine\" ) );\n\n    for ( int i = 0; i < nrfields; i++ ) {\n      TextFileInputField field = meta.inputFiles.inputFields[i];\n      StringEvaluator evaluator = evaluators.get( i );\n      List<StringEvaluationResult> evaluationResults = evaluator.getStringEvaluationResults();\n\n      // If we didn't find any matching result, it's a String...\n      //\n      if ( evaluationResults.isEmpty() ) {\n        field.setType( ValueMetaInterface.TYPE_STRING );\n        field.setLength( evaluator.getMaxLength() );\n      } else {\n        StringEvaluationResult result = evaluator.getAdvicedResult();\n        if ( result != null ) {\n          // Take the first option we find, list the others below...\n          //\n          ValueMetaInterface conversionMeta = result.getConversionMeta();\n          field.setType( conversionMeta.getType() );\n          field.setTrimType( conversionMeta.getTrimType() );\n          field.setFormat( conversionMeta.getConversionMask() );\n          field.setDecimalSymbol( conversionMeta.getDecimalSymbol() );\n          field.setGroupSymbol( conversionMeta.getGroupingSymbol() );\n          field.setLength( conversionMeta.getLength() );\n          field.setPrecision( conversionMeta.getPrecision() );\n\n          nrnull[i] = result.getNrNull();\n          minstr[i] = result.getMin() == null ? \"\" : result.getMin().toString();\n          maxstr[i] = result.getMax() == null ? \"\" : result.getMax().toString();\n        }\n      }\n\n      message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.FieldNumber\", \"\" + ( i\n          + 1 ) ) );\n\n      message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.FieldName\", field\n          .getName() ) );\n      message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.FieldType\", field\n          .getTypeDesc() ) );\n\n      switch ( field.getType() ) {\n        case ValueMetaInterface.TYPE_NUMBER:\n          message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.EstimatedLength\", ( field\n              .getLength() < 0 ? \"-\" : \"\" + field.getLength() ) ) );\n          message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.EstimatedPrecision\", field\n              .getPrecision() < 0 ? \"-\" : \"\" + field.getPrecision() ) );\n          message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.NumberFormat\", field\n              .getFormat() ) );\n\n          if ( !evaluationResults.isEmpty() ) {\n            if ( evaluationResults.size() > 1 ) {\n              message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.WarnNumberFormat\" ) );\n            }\n\n            for ( StringEvaluationResult seResult : evaluationResults ) {\n              String mask = seResult.getConversionMeta().getConversionMask();\n\n              message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.NumberFormat2\",\n                  mask ) );\n              message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.TrimType\", seResult\n                  .getConversionMeta().getTrimType() ) );\n              message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.NumberMinValue\",\n                  seResult.getMin() ) );\n              message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.NumberMaxValue\",\n                  seResult.getMax() ) );\n\n              try {\n                df2.applyPattern( mask );\n                df2.setDecimalFormatSymbols( dfs2 );\n                double mn = df2.parse( seResult.getMin().toString() ).doubleValue();\n                message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.NumberExample\", mask,\n                    seResult.getMin(), Double.toString( mn ) ) );\n              } catch ( Exception e ) {\n                if ( log.isDetailed() ) {\n                  log.logDetailed( \"This is unexpected: parsing [\" + seResult.getMin() + \"] with format [\" + mask\n                      + \"] did not work.\" );\n                }\n              }\n            }\n          }\n          message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.NumberNrNullValues\", \"\"\n              + nrnull[i] ) );\n          break;\n        case ValueMetaInterface.TYPE_STRING:\n          message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.StringMaxLength\", \"\"\n              + field.getLength() ) );\n          message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.StringMinValue\",\n              minstr[i] ) );\n          message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.StringMaxValue\",\n              maxstr[i] ) );\n          message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.StringNrNullValues\", \"\"\n              + nrnull[i] ) );\n          break;\n        case ValueMetaInterface.TYPE_DATE:\n          message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.DateMaxLength\", field\n              .getLength() < 0 ? \"-\" : \"\" + field.getLength() ) );\n          message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.DateFormat\", field\n              .getFormat() ) );\n          if ( dateFormatCount[i] > 1 ) {\n            message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.WarnDateFormat\" ) );\n          }\n          if ( !Const.isEmpty( minstr[i] ) ) {\n            for ( int x = 0; x < Const.getDateFormats().length; x++ ) {\n              if ( dateFormat[i][x] ) {\n                message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.DateFormat2\", Const\n                    .getDateFormats()[x] ) );\n                Date mindate = minDate[i][x];\n                Date maxdate = maxDate[i][x];\n                message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.DateMinValue\",\n                    mindate.toString() ) );\n                message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.DateMaxValue\",\n                    maxdate.toString() ) );\n\n                daf2.applyPattern( Const.getDateFormats()[x] );\n                try {\n                  Date md = daf2.parse( minstr[i] );\n                  message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.DateExample\", Const\n                      .getDateFormats()[x], minstr[i], md.toString() ) );\n                } catch ( Exception e ) {\n                  if ( log.isDetailed() ) {\n                    log.logDetailed( \"This is unexpected: parsing [\" + minstr[i] + \"] with format [\" + Const\n                        .getDateFormats()[x] + \"] did not work.\" );\n                  }\n                }\n              }\n            }\n          }\n          message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.DateNrNullValues\", \"\"\n              + nrnull[i] ) );\n          break;\n        default:\n          break;\n      }\n      if ( nrnull[i] == linenr - 1 ) {\n        message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.AllNullValues\" ) );\n      }\n      message.append( Const.CR );\n\n    }\n\n    monitor.worked( 1 );\n    monitor.done();\n\n    return message.toString();\n\n  }","commit_id":"f0c1c308b96fe27362ac80cc51490fab09971ca4","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private boolean containsNumber() {\n    for ( StringEvaluationResult result : evaluationResults ) {\n      if ( result.getConversionMeta().isNumber() ) {\n        return true;\n      }\n    }\n    return false;\n  }","id":61714,"modified_method":"private boolean containsNumber() {\n    for ( StringEvaluationResult result : evaluationResults ) {\n      if ( result.getConversionMeta().isNumber() && result.getNrSuccesses() > 0 ) {\n        return true;\n      }\n    }\n    return false;\n  }","commit_id":"db71806178d796b98c90515d61c6c05bfb03a3eb","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private boolean containsDate() {\n    for ( StringEvaluationResult result : evaluationResults ) {\n      if ( result.getConversionMeta().isDate() ) {\n        return true;\n      }\n    }\n    return false;\n  }","id":61715,"modified_method":"private boolean containsDate() {\n    for ( StringEvaluationResult result : evaluationResults ) {\n      if ( result.getConversionMeta().isDate() && result.getNrSuccesses() > 0 ) {\n        return true;\n      }\n    }\n    return false;\n  }","commit_id":"db71806178d796b98c90515d61c6c05bfb03a3eb","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private void challengeConversions( String value ) {\n    List<StringEvaluationResult> all = new ArrayList<StringEvaluationResult>( evaluationResults );\n    ValueMetaInterface stringMetaClone = null;\n    for ( StringEvaluationResult cmm : all ) {\n      if ( cmm.getConversionMeta().isBoolean() ) {\n        // Boolean conversion never fails.\n        // If it's a Y, N, true, false it's a boolean otherwise it ain't.\n        //\n        String string;\n        if ( tryTrimming ) {\n          string = Const.trim( value );\n        } else {\n          string = value;\n        }\n        if ( !( \"Y\".equalsIgnoreCase( string )\n          || \"N\".equalsIgnoreCase( string ) || \"TRUE\".equalsIgnoreCase( string ) || \"FALSE\"\n          .equalsIgnoreCase( string ) ) ) {\n          evaluationResults.remove( cmm );\n        }\n      } else {\n        try {\n          if ( cmm.getConversionMeta().isNumeric() ) {\n            boolean stop = false;\n            int nrDots = 0;\n            int nrCommas = 0;\n            int pos = 0;\n            for ( char c : value.toCharArray() ) {\n\n              boolean currencySymbolMatch = !String.valueOf( c ).equals( cmm.getConversionMeta().getCurrencySymbol() )\n                && c != '('\n                && c != ')';\n\n              if ( !Character.isDigit( c )\n                && c != '.'\n                && c != ','\n                && !Character.isSpaceChar( c )\n                && currencySymbolMatch\n                && ( pos > 0 && ( c == '+' || c == '-' ) ) // allow + & - at the 1st position\n              ) {\n                evaluationResults.remove( cmm );\n                stop = true;\n                break;\n              }\n\n              // If the value contains a decimal or grouping symbol or some sort, it's not an integer\n              //\n              if ( ( c == '.' && cmm.getConversionMeta().isInteger() )\n                || ( c == ',' && cmm.getConversionMeta().isInteger() ) ) {\n                evaluationResults.remove( cmm );\n                stop = true;\n                break;\n              }\n              if ( c == '.' ) {\n                nrDots++;\n              }\n              if ( c == ',' ) {\n                nrCommas++;\n              }\n              pos++;\n            }\n\n            if ( nrDots > 1 && nrCommas > 1 ) {\n              evaluationResults.remove( cmm );\n              stop = true;\n            }\n\n            if ( stop ) {\n              continue;\n            }\n\n          }\n\n          if ( stringMetaClone == null ) {\n            // avoid cloning each time\n            stringMetaClone = stringMeta.clone();\n          }\n          stringMetaClone.setConversionMetadata( cmm.getConversionMeta() );\n          stringMetaClone.setTrimType( cmm.getConversionMeta().getTrimType() );\n          Object object = stringMetaClone.convertDataUsingConversionMetaData( value );\n\n          // Still here? Evaluate the data...\n          // Keep track of null values, min, max, etc.\n          //\n          if ( cmm.getConversionMeta().isNull( object ) ) {\n            cmm.incrementNrNull();\n          }\n\n          if ( cmm.getMin() == null || cmm.getConversionMeta().compare( cmm.getMin(), object ) > 0 ) {\n            cmm.setMin( object );\n          }\n          if ( cmm.getMax() == null || cmm.getConversionMeta().compare( cmm.getMax(), object ) < 0 ) {\n            cmm.setMax( object );\n          }\n\n        } catch ( KettleValueException e ) {\n          // This one doesn't work, remove it from the list!\n          //\n          evaluationResults.remove( cmm );\n        }\n      }\n    }\n  }","id":61716,"modified_method":"private void challengeConversions( String value ) {\n    List<StringEvaluationResult> all = new ArrayList<StringEvaluationResult>( evaluationResults );\n    ValueMetaInterface stringMetaClone = null;\n    for ( StringEvaluationResult cmm : all ) {\n      if ( cmm.getConversionMeta().isBoolean() ) {\n        // Boolean conversion never fails.\n        // If it's a Y, N, true, false it's a boolean otherwise it ain't.\n        //\n        String string;\n        if ( tryTrimming ) {\n          string = Const.trim( value );\n        } else {\n          string = value;\n        }\n        if ( StringUtils.isEmpty( value ) ) {\n          cmm.incrementNrNull();\n        } else if ( !( \"Y\".equalsIgnoreCase( string ) || \"N\".equalsIgnoreCase( string ) || \"TRUE\".equalsIgnoreCase(\n            string ) || \"FALSE\".equalsIgnoreCase( string ) ) ) {\n          evaluationResults.remove( cmm );\n        } else {\n          cmm.incrementSuccesses();\n        }\n      } else {\n        try {\n          if ( cmm.getConversionMeta().isNumeric() ) {\n            boolean stop = false;\n            int nrDots = 0;\n            int nrCommas = 0;\n            int pos = 0;\n            for ( char c : value.toCharArray() ) {\n\n              boolean currencySymbolMatch = !String.valueOf( c ).equals( cmm.getConversionMeta().getCurrencySymbol() )\n                && c != '('\n                && c != ')';\n\n              if ( !Character.isDigit( c )\n                && c != '.'\n                && c != ','\n                && !Character.isSpaceChar( c )\n                && currencySymbolMatch\n                && ( pos > 0 && ( c == '+' || c == '-' ) ) // allow + & - at the 1st position\n              ) {\n                evaluationResults.remove( cmm );\n                stop = true;\n                break;\n              }\n\n              // If the value contains a decimal or grouping symbol or some sort, it's not an integer\n              //\n              if ( ( c == '.' && cmm.getConversionMeta().isInteger() )\n                || ( c == ',' && cmm.getConversionMeta().isInteger() ) ) {\n                evaluationResults.remove( cmm );\n                stop = true;\n                break;\n              }\n              if ( c == '.' ) {\n                nrDots++;\n              }\n              if ( c == ',' ) {\n                nrCommas++;\n              }\n              pos++;\n            }\n\n            if ( nrDots > 1 && nrCommas > 1 ) {\n              evaluationResults.remove( cmm );\n              stop = true;\n            }\n\n            if ( stop ) {\n              continue;\n            }\n\n          }\n\n          if ( stringMetaClone == null ) {\n            // avoid cloning each time\n            stringMetaClone = stringMeta.clone();\n          }\n          stringMetaClone.setConversionMetadata( cmm.getConversionMeta() );\n          stringMetaClone.setTrimType( cmm.getConversionMeta().getTrimType() );\n          Object object = stringMetaClone.convertDataUsingConversionMetaData( value );\n\n          // Still here? Evaluate the data...\n          // Keep track of null values, min, max, etc.\n          //\n          if ( cmm.getConversionMeta().isNull( object ) ) {\n            cmm.incrementNrNull();\n          }\n\n          if ( cmm.getMin() == null || cmm.getConversionMeta().compare( cmm.getMin(), object ) > 0 ) {\n            cmm.setMin( object );\n          }\n          if ( cmm.getMax() == null || cmm.getConversionMeta().compare( cmm.getMax(), object ) < 0 ) {\n            cmm.setMax( object );\n          }\n\n          if ( !cmm.getConversionMeta().isNull( object ) ) {\n            cmm.incrementSuccesses();\n          }\n\n        } catch ( KettleValueException e ) {\n          // This one doesn't work, remove it from the list!\n          //\n          evaluationResults.remove( cmm );\n        }\n      }\n    }\n  }","commit_id":"db71806178d796b98c90515d61c6c05bfb03a3eb","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"/**\n   * @return The list of string evaluation results\n   */\n  public List<StringEvaluationResult> getStringEvaluationResults() {\n    return evaluationResults;\n  }","id":61717,"modified_method":"/**\n   * PDI-7736: Only list of successful evaluations returned.\n   * \n   * @return The list of string evaluation results\n   */\n  public List<StringEvaluationResult> getStringEvaluationResults() {\n    List<StringEvaluationResult> result = new ArrayList<>();\n    for ( StringEvaluationResult ev : evaluationResults ) {\n      if ( ev.getNrSuccesses() > 0 ) {\n        result.add( ev );\n      }\n    }\n    return result;\n  }","commit_id":"db71806178d796b98c90515d61c6c05bfb03a3eb","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private boolean containsInteger() {\n    for ( StringEvaluationResult result : evaluationResults ) {\n      if ( result.getConversionMeta().isInteger() ) {\n        return true;\n      }\n    }\n    return false;\n  }","id":61718,"modified_method":"private boolean containsInteger() {\n    for ( StringEvaluationResult result : evaluationResults ) {\n      if ( result.getConversionMeta().isInteger() && result.getNrSuccesses() > 0 ) {\n        return true;\n      }\n    }\n    return false;\n  }","commit_id":"db71806178d796b98c90515d61c6c05bfb03a3eb","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private String doScan( IProgressMonitor monitor ) throws KettleException {\n    if ( samples > 0 ) {\n      monitor.beginTask(\n        BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Task.ScanningFile\" ), samples + 1 );\n    } else {\n      monitor.beginTask( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Task.ScanningFile\" ), 2 );\n    }\n\n    String line = \"\";\n    long fileLineNumber = 0;\n\n    DecimalFormatSymbols dfs = new DecimalFormatSymbols();\n\n    int nrfields = meta.inputFiles.inputFields.length;\n\n    RowMetaInterface outputRowMeta = new RowMeta();\n    meta.getFields( outputRowMeta, null, null, null, transMeta, null, null );\n\n    // Remove the storage meta-data (don't go for lazy conversion during scan)\n    for ( ValueMetaInterface valueMeta : outputRowMeta.getValueMetaList() ) {\n      valueMeta.setStorageMetadata( null );\n      valueMeta.setStorageType( ValueMetaInterface.STORAGE_TYPE_NORMAL );\n    }\n\n    RowMetaInterface convertRowMeta = outputRowMeta.cloneToType( ValueMetaInterface.TYPE_STRING );\n\n    // How many null values?\n    int[] nrnull = new int[nrfields]; // How many times null value?\n\n    // String info\n    String[] minstr = new String[nrfields]; // min string\n    String[] maxstr = new String[nrfields]; // max string\n    boolean[] firststr = new boolean[nrfields]; // first occ. of string?\n\n    // Date info\n    boolean[] isDate = new boolean[nrfields]; // is the field perhaps a Date?\n    int[] dateFormatCount = new int[nrfields]; // How many date formats work?\n    boolean[][] dateFormat = new boolean[nrfields][Const.getDateFormats().length]; // What are the date formats that\n    // work?\n    Date[][] minDate = new Date[nrfields][Const.getDateFormats().length]; // min date value\n    Date[][] maxDate = new Date[nrfields][Const.getDateFormats().length]; // max date value\n\n    // Number info\n    boolean[] isNumber = new boolean[nrfields]; // is the field perhaps a Number?\n    int[] numberFormatCount = new int[nrfields]; // How many number formats work?\n    boolean[][] numberFormat = new boolean[nrfields][Const.getNumberFormats().length]; // What are the number format\n                                                                                       // that work?\n    double[][] minValue = new double[nrfields][Const.getDateFormats().length]; // min number value\n    double[][] maxValue = new double[nrfields][Const.getDateFormats().length]; // max number value\n    int[][] numberPrecision = new int[nrfields][Const.getNumberFormats().length]; // remember the precision?\n    int[][] numberLength = new int[nrfields][Const.getNumberFormats().length]; // remember the length?\n\n    for ( int i = 0; i < nrfields; i++ ) {\n      TextFileInputField field = meta.inputFiles.inputFields[i];\n\n      if ( log.isDebug() ) {\n        debug = \"init field #\" + i;\n      }\n\n      if ( replaceMeta ) { // Clear previous info...\n\n        field.setName( meta.inputFiles.inputFields[i].getName() );\n        field.setType( meta.inputFiles.inputFields[i].getType() );\n        field.setFormat( \"\" );\n        field.setLength( -1 );\n        field.setPrecision( -1 );\n        field.setCurrencySymbol( dfs.getCurrencySymbol() );\n        field.setDecimalSymbol( \"\" + dfs.getDecimalSeparator() );\n        field.setGroupSymbol( \"\" + dfs.getGroupingSeparator() );\n        field.setNullString( \"-\" );\n        field.setTrimType( ValueMetaInterface.TRIM_TYPE_NONE );\n      }\n\n      nrnull[i] = 0;\n      minstr[i] = \"\";\n      maxstr[i] = \"\";\n      firststr[i] = true;\n\n      // Init data guess\n      isDate[i] = true;\n      for ( int j = 0; j < Const.getDateFormats().length; j++ ) {\n        dateFormat[i][j] = true;\n        minDate[i][j] = Const.MAX_DATE;\n        maxDate[i][j] = Const.MIN_DATE;\n      }\n      dateFormatCount[i] = Const.getDateFormats().length;\n\n      // Init number guess\n      isNumber[i] = true;\n      for ( int j = 0; j < Const.getNumberFormats().length; j++ ) {\n        numberFormat[i][j] = true;\n        minValue[i][j] = Double.MAX_VALUE;\n        maxValue[i][j] = -Double.MAX_VALUE;\n        numberPrecision[i][j] = -1;\n        numberLength[i][j] = -1;\n      }\n      numberFormatCount[i] = Const.getNumberFormats().length;\n    }\n\n    TextFileInputMeta strinfo = (TextFileInputMeta) meta.clone();\n    for ( int i = 0; i < nrfields; i++ ) {\n      strinfo.inputFiles.inputFields[i].setType( ValueMetaInterface.TYPE_STRING );\n    }\n\n    // Sample <samples> rows...\n    debug = \"get first line\";\n\n    StringBuilder lineBuffer = new StringBuilder( 256 );\n    int fileFormatType = meta.getFileFormatTypeNr();\n\n    // If the file has a header we overwrite the first line\n    // However, if it doesn't have a header, take a new line\n    //\n\n    line = TextFileInputUtils.getLine( log, reader, encodingType, fileFormatType, lineBuffer );\n    fileLineNumber++;\n    int skipped = 1;\n\n    if ( meta.content.header ) {\n\n      while ( line != null && skipped < meta.content.nrHeaderLines ) {\n        line = TextFileInputUtils.getLine( log, reader, encodingType, fileFormatType, lineBuffer );\n        skipped++;\n        fileLineNumber++;\n      }\n    }\n    int linenr = 1;\n\n    List<StringEvaluator> evaluators = new ArrayList<StringEvaluator>();\n\n    // Allocate number and date parsers\n    DecimalFormat df2 = (DecimalFormat) NumberFormat.getInstance();\n    DecimalFormatSymbols dfs2 = new DecimalFormatSymbols();\n    SimpleDateFormat daf2 = new SimpleDateFormat();\n\n    boolean errorFound = false;\n    while ( !errorFound && line != null && ( linenr <= samples || samples == 0 ) && !monitor.isCanceled() ) {\n      monitor.subTask( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Task.ScanningLine\", \"\"\n        + linenr ) );\n      if ( samples > 0 ) {\n        monitor.worked( 1 );\n      }\n\n      if ( log.isDebug() ) {\n        debug = \"convert line #\" + linenr + \" to row\";\n      }\n      RowMetaInterface rowMeta = new RowMeta();\n      meta.getFields( rowMeta, \"stepname\", null, null, transMeta, null, null );\n      // Remove the storage meta-data (don't go for lazy conversion during scan)\n      for ( ValueMetaInterface valueMeta : rowMeta.getValueMetaList() ) {\n        valueMeta.setStorageMetadata( null );\n        valueMeta.setStorageType( ValueMetaInterface.STORAGE_TYPE_NORMAL );\n      }\n\n      String delimiter = transMeta.environmentSubstitute( meta.content.separator );\n      String enclosure = transMeta.environmentSubstitute( meta.content.enclosure );\n      String escapeCharacter = transMeta.environmentSubstitute( meta.content.escapeCharacter );\n      Object[] r =\n          TextFileInputUtils.convertLineToRow( log, new TextFileLine( line, fileLineNumber, null ), strinfo, null, 0,\n              outputRowMeta, convertRowMeta, meta.getFilePaths( transMeta )[0], rownumber, delimiter, enclosure,\n              escapeCharacter, null, new BaseInputStepMeta.AdditionalOutputFields(), null, null, false, null, null,\n              null, null, 0 );\n\n      if ( r == null ) {\n        errorFound = true;\n        continue;\n      }\n      rownumber++;\n      for ( int i = 0; i < nrfields && i < r.length; i++ ) {\n        StringEvaluator evaluator;\n        if ( i >= evaluators.size() ) {\n          evaluator = new StringEvaluator( true );\n          evaluators.add( evaluator );\n        } else {\n          evaluator = evaluators.get( i );\n        }\n\n        String string = rowMeta.getString( r, i );\n\n        if ( i == 0 ) {\n          System.out.println();\n        }\n        evaluator.evaluateString( string );\n      }\n\n      fileLineNumber++;\n      if ( r != null ) {\n        linenr++;\n      }\n\n      // Grab another line...\n      //\n      line = TextFileInputUtils.getLine( log, reader, encodingType, fileFormatType, lineBuffer );\n    }\n\n    monitor.worked( 1 );\n    monitor.setTaskName( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Task.AnalyzingResults\" ) );\n\n    // Show information on items using a dialog box\n    //\n    StringBuilder message = new StringBuilder();\n    message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.ResultAfterScanning\", \"\"\n      + ( linenr - 1 ) ) );\n    message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.HorizontalLine\" ) );\n\n    for ( int i = 0; i < nrfields; i++ ) {\n      TextFileInputField field = meta.inputFiles.inputFields[i];\n      StringEvaluator evaluator = evaluators.get( i );\n      List<StringEvaluationResult> evaluationResults = evaluator.getStringEvaluationResults();\n\n      // If we didn't find any matching result, it's a String...\n      //\n      StringEvaluationResult result = evaluator.getAdvicedResult();\n      if ( evaluationResults.isEmpty() ) {\n        field.setType( ValueMetaInterface.TYPE_STRING );\n        field.setLength( evaluator.getMaxLength() );\n      }\n      if ( result != null ) {\n        // Take the first option we find, list the others below...\n        //\n        ValueMetaInterface conversionMeta = result.getConversionMeta();\n        field.setType( conversionMeta.getType() );\n        field.setTrimType( conversionMeta.getTrimType() );\n        field.setFormat( conversionMeta.getConversionMask() );\n        field.setDecimalSymbol( conversionMeta.getDecimalSymbol() );\n        field.setGroupSymbol( conversionMeta.getGroupingSymbol() );\n        field.setLength( conversionMeta.getLength() );\n        field.setPrecision( conversionMeta.getPrecision() );\n\n        nrnull[i] = result.getNrNull();\n        minstr[i] = result.getMin() == null ? \"\" : result.getMin().toString();\n        maxstr[i] = result.getMax() == null ? \"\" : result.getMax().toString();\n      }\n\n      message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.FieldNumber\", \"\"\n        + ( i + 1 ) ) );\n\n      message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.FieldName\", field\n        .getName() ) );\n      message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.FieldType\", field\n        .getTypeDesc() ) );\n\n      switch ( field.getType() ) {\n        case ValueMetaInterface.TYPE_NUMBER:\n          message.append( BaseMessages.getString(\n            PKG, \"TextFileCSVImportProgressDialog.Info.EstimatedLength\", ( field.getLength() < 0 ? \"-\" : \"\"\n              + field.getLength() ) ) );\n          message.append( BaseMessages.getString(\n            PKG, \"TextFileCSVImportProgressDialog.Info.EstimatedPrecision\", field.getPrecision() < 0 ? \"-\" : \"\"\n              + field.getPrecision() ) );\n          message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.NumberFormat\", field\n            .getFormat() ) );\n\n          if ( !evaluationResults.isEmpty() ) {\n            if ( evaluationResults.size() > 1 ) {\n              message.append( BaseMessages\n                .getString( PKG, \"TextFileCSVImportProgressDialog.Info.WarnNumberFormat\" ) );\n            }\n\n            for ( StringEvaluationResult seResult : evaluationResults ) {\n              String mask = seResult.getConversionMeta().getConversionMask();\n\n              message.append( BaseMessages.getString(\n                PKG, \"TextFileCSVImportProgressDialog.Info.NumberFormat2\", mask ) );\n              message.append( BaseMessages\n                .getString( PKG, \"TextFileCSVImportProgressDialog.Info.TrimType\", seResult\n                  .getConversionMeta().getTrimType() ) );\n              message.append( BaseMessages.getString(\n                PKG, \"TextFileCSVImportProgressDialog.Info.NumberMinValue\", seResult.getMin() ) );\n              message.append( BaseMessages.getString(\n                PKG, \"TextFileCSVImportProgressDialog.Info.NumberMaxValue\", seResult.getMax() ) );\n\n              try {\n                df2.applyPattern( mask );\n                df2.setDecimalFormatSymbols( dfs2 );\n                double mn = df2.parse( seResult.getMin().toString() ).doubleValue();\n                message.append( BaseMessages.getString(\n                  PKG, \"TextFileCSVImportProgressDialog.Info.NumberExample\", mask, seResult.getMin(), Double\n                    .toString( mn ) ) );\n              } catch ( Exception e ) {\n                if ( log.isDetailed() ) {\n                  log.logDetailed( \"This is unexpected: parsing [\"\n                    + seResult.getMin() + \"] with format [\" + mask + \"] did not work.\" );\n                }\n              }\n            }\n          }\n          message.append( BaseMessages.getString(\n            PKG, \"TextFileCSVImportProgressDialog.Info.NumberNrNullValues\", \"\" + nrnull[i] ) );\n          break;\n        case ValueMetaInterface.TYPE_STRING:\n          message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.StringMaxLength\", \"\"\n            + field.getLength() ) );\n          message.append( BaseMessages.getString(\n            PKG, \"TextFileCSVImportProgressDialog.Info.StringMinValue\", minstr[i] ) );\n          message.append( BaseMessages.getString(\n            PKG, \"TextFileCSVImportProgressDialog.Info.StringMaxValue\", maxstr[i] ) );\n          message.append( BaseMessages.getString(\n            PKG, \"TextFileCSVImportProgressDialog.Info.StringNrNullValues\", \"\" + nrnull[i] ) );\n          break;\n        case ValueMetaInterface.TYPE_DATE:\n          message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.DateMaxLength\", field\n            .getLength() < 0 ? \"-\" : \"\" + field.getLength() ) );\n          message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.DateFormat\", field\n            .getFormat() ) );\n          if ( dateFormatCount[i] > 1 ) {\n            message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.WarnDateFormat\" ) );\n          }\n          if ( !Const.isEmpty( minstr[i] ) ) {\n            for ( int x = 0; x < Const.getDateFormats().length; x++ ) {\n              if ( dateFormat[i][x] ) {\n                message.append( BaseMessages.getString(\n                  PKG, \"TextFileCSVImportProgressDialog.Info.DateFormat2\", Const.getDateFormats()[x] ) );\n                Date mindate = minDate[i][x];\n                Date maxdate = maxDate[i][x];\n                message.append( BaseMessages.getString(\n                  PKG, \"TextFileCSVImportProgressDialog.Info.DateMinValue\", mindate.toString() ) );\n                message.append( BaseMessages.getString(\n                  PKG, \"TextFileCSVImportProgressDialog.Info.DateMaxValue\", maxdate.toString() ) );\n\n                daf2.applyPattern( Const.getDateFormats()[x] );\n                try {\n                  Date md = daf2.parse( minstr[i] );\n                  message.append( BaseMessages.getString(\n                    PKG, \"TextFileCSVImportProgressDialog.Info.DateExample\", Const.getDateFormats()[x],\n                    minstr[i], md.toString() ) );\n                } catch ( Exception e ) {\n                  if ( log.isDetailed() ) {\n                    log.logDetailed( \"This is unexpected: parsing [\"\n                      + minstr[i] + \"] with format [\" + Const.getDateFormats()[x] + \"] did not work.\" );\n                  }\n                }\n              }\n            }\n          }\n          message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.DateNrNullValues\", \"\"\n            + nrnull[i] ) );\n          break;\n        default:\n          break;\n      }\n      if ( nrnull[i] == linenr - 1 ) {\n        message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.AllNullValues\" ) );\n      }\n      message.append( Const.CR );\n\n    }\n\n    monitor.worked( 1 );\n    monitor.done();\n\n    return message.toString();\n\n  }","id":61719,"modified_method":"private String doScan( IProgressMonitor monitor ) throws KettleException {\n    if ( samples > 0 ) {\n      monitor.beginTask(\n        BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Task.ScanningFile\" ), samples + 1 );\n    } else {\n      monitor.beginTask( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Task.ScanningFile\" ), 2 );\n    }\n\n    String line = \"\";\n    long fileLineNumber = 0;\n\n    DecimalFormatSymbols dfs = new DecimalFormatSymbols();\n\n    int nrfields = meta.inputFiles.inputFields.length;\n\n    RowMetaInterface outputRowMeta = new RowMeta();\n    meta.getFields( outputRowMeta, null, null, null, transMeta, null, null );\n\n    // Remove the storage meta-data (don't go for lazy conversion during scan)\n    for ( ValueMetaInterface valueMeta : outputRowMeta.getValueMetaList() ) {\n      valueMeta.setStorageMetadata( null );\n      valueMeta.setStorageType( ValueMetaInterface.STORAGE_TYPE_NORMAL );\n    }\n\n    RowMetaInterface convertRowMeta = outputRowMeta.cloneToType( ValueMetaInterface.TYPE_STRING );\n\n    // How many null values?\n    int[] nrnull = new int[nrfields]; // How many times null value?\n\n    // String info\n    String[] minstr = new String[nrfields]; // min string\n    String[] maxstr = new String[nrfields]; // max string\n    boolean[] firststr = new boolean[nrfields]; // first occ. of string?\n\n    // Date info\n    boolean[] isDate = new boolean[nrfields]; // is the field perhaps a Date?\n    int[] dateFormatCount = new int[nrfields]; // How many date formats work?\n    boolean[][] dateFormat = new boolean[nrfields][Const.getDateFormats().length]; // What are the date formats that\n    // work?\n    Date[][] minDate = new Date[nrfields][Const.getDateFormats().length]; // min date value\n    Date[][] maxDate = new Date[nrfields][Const.getDateFormats().length]; // max date value\n\n    // Number info\n    boolean[] isNumber = new boolean[nrfields]; // is the field perhaps a Number?\n    int[] numberFormatCount = new int[nrfields]; // How many number formats work?\n    boolean[][] numberFormat = new boolean[nrfields][Const.getNumberFormats().length]; // What are the number format\n                                                                                       // that work?\n    double[][] minValue = new double[nrfields][Const.getDateFormats().length]; // min number value\n    double[][] maxValue = new double[nrfields][Const.getDateFormats().length]; // max number value\n    int[][] numberPrecision = new int[nrfields][Const.getNumberFormats().length]; // remember the precision?\n    int[][] numberLength = new int[nrfields][Const.getNumberFormats().length]; // remember the length?\n\n    for ( int i = 0; i < nrfields; i++ ) {\n      TextFileInputField field = meta.inputFiles.inputFields[i];\n\n      if ( log.isDebug() ) {\n        debug = \"init field #\" + i;\n      }\n\n      if ( replaceMeta ) { // Clear previous info...\n\n        field.setName( meta.inputFiles.inputFields[i].getName() );\n        field.setType( meta.inputFiles.inputFields[i].getType() );\n        field.setFormat( \"\" );\n        field.setLength( -1 );\n        field.setPrecision( -1 );\n        field.setCurrencySymbol( dfs.getCurrencySymbol() );\n        field.setDecimalSymbol( \"\" + dfs.getDecimalSeparator() );\n        field.setGroupSymbol( \"\" + dfs.getGroupingSeparator() );\n        field.setNullString( \"-\" );\n        field.setTrimType( ValueMetaInterface.TRIM_TYPE_NONE );\n      }\n\n      nrnull[i] = 0;\n      minstr[i] = \"\";\n      maxstr[i] = \"\";\n      firststr[i] = true;\n\n      // Init data guess\n      isDate[i] = true;\n      for ( int j = 0; j < Const.getDateFormats().length; j++ ) {\n        dateFormat[i][j] = true;\n        minDate[i][j] = Const.MAX_DATE;\n        maxDate[i][j] = Const.MIN_DATE;\n      }\n      dateFormatCount[i] = Const.getDateFormats().length;\n\n      // Init number guess\n      isNumber[i] = true;\n      for ( int j = 0; j < Const.getNumberFormats().length; j++ ) {\n        numberFormat[i][j] = true;\n        minValue[i][j] = Double.MAX_VALUE;\n        maxValue[i][j] = -Double.MAX_VALUE;\n        numberPrecision[i][j] = -1;\n        numberLength[i][j] = -1;\n      }\n      numberFormatCount[i] = Const.getNumberFormats().length;\n    }\n\n    TextFileInputMeta strinfo = (TextFileInputMeta) meta.clone();\n    for ( int i = 0; i < nrfields; i++ ) {\n      strinfo.inputFiles.inputFields[i].setType( ValueMetaInterface.TYPE_STRING );\n    }\n\n    // Sample <samples> rows...\n    debug = \"get first line\";\n\n    StringBuilder lineBuffer = new StringBuilder( 256 );\n    int fileFormatType = meta.getFileFormatTypeNr();\n\n    // If the file has a header we overwrite the first line\n    // However, if it doesn't have a header, take a new line\n    //\n\n    line = TextFileInputUtils.getLine( log, reader, encodingType, fileFormatType, lineBuffer );\n    fileLineNumber++;\n    int skipped = 1;\n\n    if ( meta.content.header ) {\n\n      while ( line != null && skipped < meta.content.nrHeaderLines ) {\n        line = TextFileInputUtils.getLine( log, reader, encodingType, fileFormatType, lineBuffer );\n        skipped++;\n        fileLineNumber++;\n      }\n    }\n    int linenr = 1;\n\n    List<StringEvaluator> evaluators = new ArrayList<StringEvaluator>();\n\n    // Allocate number and date parsers\n    DecimalFormat df2 = (DecimalFormat) NumberFormat.getInstance();\n    DecimalFormatSymbols dfs2 = new DecimalFormatSymbols();\n    SimpleDateFormat daf2 = new SimpleDateFormat();\n\n    boolean errorFound = false;\n    while ( !errorFound && line != null && ( linenr <= samples || samples == 0 ) && !monitor.isCanceled() ) {\n      monitor.subTask( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Task.ScanningLine\", \"\"\n        + linenr ) );\n      if ( samples > 0 ) {\n        monitor.worked( 1 );\n      }\n\n      if ( log.isDebug() ) {\n        debug = \"convert line #\" + linenr + \" to row\";\n      }\n      RowMetaInterface rowMeta = new RowMeta();\n      meta.getFields( rowMeta, \"stepname\", null, null, transMeta, null, null );\n      // Remove the storage meta-data (don't go for lazy conversion during scan)\n      for ( ValueMetaInterface valueMeta : rowMeta.getValueMetaList() ) {\n        valueMeta.setStorageMetadata( null );\n        valueMeta.setStorageType( ValueMetaInterface.STORAGE_TYPE_NORMAL );\n      }\n\n      String delimiter = transMeta.environmentSubstitute( meta.content.separator );\n      String enclosure = transMeta.environmentSubstitute( meta.content.enclosure );\n      String escapeCharacter = transMeta.environmentSubstitute( meta.content.escapeCharacter );\n      Object[] r =\n          TextFileInputUtils.convertLineToRow( log, new TextFileLine( line, fileLineNumber, null ), strinfo, null, 0,\n              outputRowMeta, convertRowMeta, meta.getFilePaths( transMeta )[0], rownumber, delimiter, enclosure,\n              escapeCharacter, null, new BaseInputStepMeta.AdditionalOutputFields(), null, null, false, null, null,\n              null, null, 0 );\n\n      if ( r == null ) {\n        errorFound = true;\n        continue;\n      }\n      rownumber++;\n      for ( int i = 0; i < nrfields && i < r.length; i++ ) {\n        StringEvaluator evaluator;\n        if ( i >= evaluators.size() ) {\n          evaluator = new StringEvaluator( true );\n          evaluators.add( evaluator );\n        } else {\n          evaluator = evaluators.get( i );\n        }\n\n        String string = rowMeta.getString( r, i );\n\n        if ( i == 0 ) {\n          System.out.println();\n        }\n        evaluator.evaluateString( string );\n      }\n\n      fileLineNumber++;\n      if ( r != null ) {\n        linenr++;\n      }\n\n      // Grab another line...\n      //\n      line = TextFileInputUtils.getLine( log, reader, encodingType, fileFormatType, lineBuffer );\n    }\n\n    monitor.worked( 1 );\n    monitor.setTaskName( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Task.AnalyzingResults\" ) );\n\n    // Show information on items using a dialog box\n    //\n    StringBuilder message = new StringBuilder();\n    message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.ResultAfterScanning\", \"\"\n      + ( linenr - 1 ) ) );\n    message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.HorizontalLine\" ) );\n\n    for ( int i = 0; i < nrfields; i++ ) {\n      TextFileInputField field = meta.inputFiles.inputFields[i];\n      StringEvaluator evaluator = evaluators.get( i );\n      List<StringEvaluationResult> evaluationResults = evaluator.getStringEvaluationResults();\n\n      // If we didn't find any matching result, it's a String...\n      //\n      if ( evaluationResults.isEmpty() ) {\n        field.setType( ValueMetaInterface.TYPE_STRING );\n        field.setLength( evaluator.getMaxLength() );\n      } else {\n        StringEvaluationResult result = evaluator.getAdvicedResult();\n        if ( result != null ) {\n          // Take the first option we find, list the others below...\n          //\n          ValueMetaInterface conversionMeta = result.getConversionMeta();\n          field.setType( conversionMeta.getType() );\n          field.setTrimType( conversionMeta.getTrimType() );\n          field.setFormat( conversionMeta.getConversionMask() );\n          field.setDecimalSymbol( conversionMeta.getDecimalSymbol() );\n          field.setGroupSymbol( conversionMeta.getGroupingSymbol() );\n          field.setLength( conversionMeta.getLength() );\n          field.setPrecision( conversionMeta.getPrecision() );\n\n          nrnull[i] = result.getNrNull();\n          minstr[i] = result.getMin() == null ? \"\" : result.getMin().toString();\n          maxstr[i] = result.getMax() == null ? \"\" : result.getMax().toString();\n        }\n      }\n\n      message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.FieldNumber\", \"\"\n        + ( i + 1 ) ) );\n\n      message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.FieldName\", field\n        .getName() ) );\n      message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.FieldType\", field\n        .getTypeDesc() ) );\n\n      switch ( field.getType() ) {\n        case ValueMetaInterface.TYPE_NUMBER:\n          message.append( BaseMessages.getString(\n            PKG, \"TextFileCSVImportProgressDialog.Info.EstimatedLength\", ( field.getLength() < 0 ? \"-\" : \"\"\n              + field.getLength() ) ) );\n          message.append( BaseMessages.getString(\n            PKG, \"TextFileCSVImportProgressDialog.Info.EstimatedPrecision\", field.getPrecision() < 0 ? \"-\" : \"\"\n              + field.getPrecision() ) );\n          message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.NumberFormat\", field\n            .getFormat() ) );\n\n          if ( !evaluationResults.isEmpty() ) {\n            if ( evaluationResults.size() > 1 ) {\n              message.append( BaseMessages\n                .getString( PKG, \"TextFileCSVImportProgressDialog.Info.WarnNumberFormat\" ) );\n            }\n\n            for ( StringEvaluationResult seResult : evaluationResults ) {\n              String mask = seResult.getConversionMeta().getConversionMask();\n\n              message.append( BaseMessages.getString(\n                PKG, \"TextFileCSVImportProgressDialog.Info.NumberFormat2\", mask ) );\n              message.append( BaseMessages\n                .getString( PKG, \"TextFileCSVImportProgressDialog.Info.TrimType\", seResult\n                  .getConversionMeta().getTrimType() ) );\n              message.append( BaseMessages.getString(\n                PKG, \"TextFileCSVImportProgressDialog.Info.NumberMinValue\", seResult.getMin() ) );\n              message.append( BaseMessages.getString(\n                PKG, \"TextFileCSVImportProgressDialog.Info.NumberMaxValue\", seResult.getMax() ) );\n\n              try {\n                df2.applyPattern( mask );\n                df2.setDecimalFormatSymbols( dfs2 );\n                double mn = df2.parse( seResult.getMin().toString() ).doubleValue();\n                message.append( BaseMessages.getString(\n                  PKG, \"TextFileCSVImportProgressDialog.Info.NumberExample\", mask, seResult.getMin(), Double\n                    .toString( mn ) ) );\n              } catch ( Exception e ) {\n                if ( log.isDetailed() ) {\n                  log.logDetailed( \"This is unexpected: parsing [\"\n                    + seResult.getMin() + \"] with format [\" + mask + \"] did not work.\" );\n                }\n              }\n            }\n          }\n          message.append( BaseMessages.getString(\n            PKG, \"TextFileCSVImportProgressDialog.Info.NumberNrNullValues\", \"\" + nrnull[i] ) );\n          break;\n        case ValueMetaInterface.TYPE_STRING:\n          message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.StringMaxLength\", \"\"\n            + field.getLength() ) );\n          message.append( BaseMessages.getString(\n            PKG, \"TextFileCSVImportProgressDialog.Info.StringMinValue\", minstr[i] ) );\n          message.append( BaseMessages.getString(\n            PKG, \"TextFileCSVImportProgressDialog.Info.StringMaxValue\", maxstr[i] ) );\n          message.append( BaseMessages.getString(\n            PKG, \"TextFileCSVImportProgressDialog.Info.StringNrNullValues\", \"\" + nrnull[i] ) );\n          break;\n        case ValueMetaInterface.TYPE_DATE:\n          message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.DateMaxLength\", field\n            .getLength() < 0 ? \"-\" : \"\" + field.getLength() ) );\n          message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.DateFormat\", field\n            .getFormat() ) );\n          if ( dateFormatCount[i] > 1 ) {\n            message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.WarnDateFormat\" ) );\n          }\n          if ( !Const.isEmpty( minstr[i] ) ) {\n            for ( int x = 0; x < Const.getDateFormats().length; x++ ) {\n              if ( dateFormat[i][x] ) {\n                message.append( BaseMessages.getString(\n                  PKG, \"TextFileCSVImportProgressDialog.Info.DateFormat2\", Const.getDateFormats()[x] ) );\n                Date mindate = minDate[i][x];\n                Date maxdate = maxDate[i][x];\n                message.append( BaseMessages.getString(\n                  PKG, \"TextFileCSVImportProgressDialog.Info.DateMinValue\", mindate.toString() ) );\n                message.append( BaseMessages.getString(\n                  PKG, \"TextFileCSVImportProgressDialog.Info.DateMaxValue\", maxdate.toString() ) );\n\n                daf2.applyPattern( Const.getDateFormats()[x] );\n                try {\n                  Date md = daf2.parse( minstr[i] );\n                  message.append( BaseMessages.getString(\n                    PKG, \"TextFileCSVImportProgressDialog.Info.DateExample\", Const.getDateFormats()[x],\n                    minstr[i], md.toString() ) );\n                } catch ( Exception e ) {\n                  if ( log.isDetailed() ) {\n                    log.logDetailed( \"This is unexpected: parsing [\"\n                      + minstr[i] + \"] with format [\" + Const.getDateFormats()[x] + \"] did not work.\" );\n                  }\n                }\n              }\n            }\n          }\n          message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.DateNrNullValues\", \"\"\n            + nrnull[i] ) );\n          break;\n        default:\n          break;\n      }\n      if ( nrnull[i] == linenr - 1 ) {\n        message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.AllNullValues\" ) );\n      }\n      message.append( Const.CR );\n\n    }\n\n    monitor.worked( 1 );\n    monitor.done();\n\n    return message.toString();\n\n  }","commit_id":"db71806178d796b98c90515d61c6c05bfb03a3eb","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private boolean containsInteger() {\n    for ( StringEvaluationResult result : evaluationResults ) {\n      if ( result.getConversionMeta().isInteger() ) {\n        return true;\n      }\n    }\n    return false;\n  }","id":61720,"modified_method":"private boolean containsInteger() {\n    for ( StringEvaluationResult result : evaluationResults ) {\n      if ( result.getConversionMeta().isInteger() && result.getNrSuccesses() > 0 ) {\n        return true;\n      }\n    }\n    return false;\n  }","commit_id":"e13069d124f435c6e2e4ba255db2afa7854c1120","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private boolean containsDate() {\n    for ( StringEvaluationResult result : evaluationResults ) {\n      if ( result.getConversionMeta().isDate() ) {\n        return true;\n      }\n    }\n    return false;\n  }","id":61721,"modified_method":"private boolean containsDate() {\n    for ( StringEvaluationResult result : evaluationResults ) {\n      if ( result.getConversionMeta().isDate() && result.getNrSuccesses() > 0 ) {\n        return true;\n      }\n    }\n    return false;\n  }","commit_id":"e13069d124f435c6e2e4ba255db2afa7854c1120","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private void challengeConversions( String value ) {\n    List<StringEvaluationResult> all = new ArrayList<StringEvaluationResult>( evaluationResults );\n    ValueMetaInterface stringMetaClone = null;\n    for ( StringEvaluationResult cmm : all ) {\n      if ( cmm.getConversionMeta().isBoolean() ) {\n        // Boolean conversion never fails.\n        // If it's a Y, N, true, false it's a boolean otherwise it ain't.\n        //\n        String string;\n        if ( tryTrimming ) {\n          string = Const.trim( value );\n        } else {\n          string = value;\n        }\n        if ( !( \"Y\".equalsIgnoreCase( string )\n          || \"N\".equalsIgnoreCase( string ) || \"TRUE\".equalsIgnoreCase( string ) || \"FALSE\"\n          .equalsIgnoreCase( string ) ) ) {\n          evaluationResults.remove( cmm );\n        }\n      } else {\n        try {\n          if ( cmm.getConversionMeta().isNumeric() ) {\n            boolean stop = false;\n            int nrDots = 0;\n            int nrCommas = 0;\n            int pos = 0;\n            for ( char c : value.toCharArray() ) {\n\n              boolean currencySymbolMatch = !String.valueOf( c ).equals( cmm.getConversionMeta().getCurrencySymbol() )\n                && c != '('\n                && c != ')';\n\n              if ( !Character.isDigit( c )\n                && c != '.'\n                && c != ','\n                && !Character.isSpaceChar( c )\n                && currencySymbolMatch\n                && ( pos > 0 && ( c == '+' || c == '-' ) ) // allow + & - at the 1st position\n              ) {\n                evaluationResults.remove( cmm );\n                stop = true;\n                break;\n              }\n\n              // If the value contains a decimal or grouping symbol or some sort, it's not an integer\n              //\n              if ( ( c == '.' && cmm.getConversionMeta().isInteger() )\n                || ( c == ',' && cmm.getConversionMeta().isInteger() ) ) {\n                evaluationResults.remove( cmm );\n                stop = true;\n                break;\n              }\n              if ( c == '.' ) {\n                nrDots++;\n              }\n              if ( c == ',' ) {\n                nrCommas++;\n              }\n              pos++;\n            }\n\n            if ( nrDots > 1 && nrCommas > 1 ) {\n              evaluationResults.remove( cmm );\n              stop = true;\n            }\n\n            if ( stop ) {\n              continue;\n            }\n\n          }\n\n          if ( stringMetaClone == null ) {\n            // avoid cloning each time\n            stringMetaClone = stringMeta.clone();\n          }\n          stringMetaClone.setConversionMetadata( cmm.getConversionMeta() );\n          stringMetaClone.setTrimType( cmm.getConversionMeta().getTrimType() );\n          Object object = stringMetaClone.convertDataUsingConversionMetaData( value );\n\n          // Still here? Evaluate the data...\n          // Keep track of null values, min, max, etc.\n          //\n          if ( cmm.getConversionMeta().isNull( object ) ) {\n            cmm.incrementNrNull();\n          }\n\n          if ( cmm.getMin() == null || cmm.getConversionMeta().compare( cmm.getMin(), object ) > 0 ) {\n            cmm.setMin( object );\n          }\n          if ( cmm.getMax() == null || cmm.getConversionMeta().compare( cmm.getMax(), object ) < 0 ) {\n            cmm.setMax( object );\n          }\n\n        } catch ( KettleValueException e ) {\n          // This one doesn't work, remove it from the list!\n          //\n          evaluationResults.remove( cmm );\n        }\n      }\n    }\n  }","id":61722,"modified_method":"private void challengeConversions( String value ) {\n    List<StringEvaluationResult> all = new ArrayList<StringEvaluationResult>( evaluationResults );\n    ValueMetaInterface stringMetaClone = null;\n    for ( StringEvaluationResult cmm : all ) {\n      if ( cmm.getConversionMeta().isBoolean() ) {\n        // Boolean conversion never fails.\n        // If it's a Y, N, true, false it's a boolean otherwise it ain't.\n        //\n        String string;\n        if ( tryTrimming ) {\n          string = Const.trim( value );\n        } else {\n          string = value;\n        }\n        if ( StringUtils.isEmpty( value ) ) {\n          cmm.incrementNrNull();\n        } else if ( !( \"Y\".equalsIgnoreCase( string ) || \"N\".equalsIgnoreCase( string ) || \"TRUE\".equalsIgnoreCase(\n            string ) || \"FALSE\".equalsIgnoreCase( string ) ) ) {\n          evaluationResults.remove( cmm );\n        } else {\n          cmm.incrementSuccesses();\n        }\n      } else {\n        try {\n          if ( cmm.getConversionMeta().isNumeric() ) {\n            boolean stop = false;\n            int nrDots = 0;\n            int nrCommas = 0;\n            int pos = 0;\n            for ( char c : value.toCharArray() ) {\n\n              boolean currencySymbolMatch = !String.valueOf( c ).equals( cmm.getConversionMeta().getCurrencySymbol() )\n                && c != '('\n                && c != ')';\n\n              if ( !Character.isDigit( c )\n                && c != '.'\n                && c != ','\n                && !Character.isSpaceChar( c )\n                && currencySymbolMatch\n                && ( pos > 0 && ( c == '+' || c == '-' ) ) // allow + & - at the 1st position\n              ) {\n                evaluationResults.remove( cmm );\n                stop = true;\n                break;\n              }\n\n              // If the value contains a decimal or grouping symbol or some sort, it's not an integer\n              //\n              if ( ( c == '.' && cmm.getConversionMeta().isInteger() )\n                || ( c == ',' && cmm.getConversionMeta().isInteger() ) ) {\n                evaluationResults.remove( cmm );\n                stop = true;\n                break;\n              }\n              if ( c == '.' ) {\n                nrDots++;\n              }\n              if ( c == ',' ) {\n                nrCommas++;\n              }\n              pos++;\n            }\n\n            if ( nrDots > 1 && nrCommas > 1 ) {\n              evaluationResults.remove( cmm );\n              stop = true;\n            }\n\n            if ( stop ) {\n              continue;\n            }\n\n          }\n\n          if ( stringMetaClone == null ) {\n            // avoid cloning each time\n            stringMetaClone = stringMeta.clone();\n          }\n          stringMetaClone.setConversionMetadata( cmm.getConversionMeta() );\n          stringMetaClone.setTrimType( cmm.getConversionMeta().getTrimType() );\n          Object object = stringMetaClone.convertDataUsingConversionMetaData( value );\n\n          // Still here? Evaluate the data...\n          // Keep track of null values, min, max, etc.\n          //\n          if ( cmm.getConversionMeta().isNull( object ) ) {\n            cmm.incrementNrNull();\n          }\n\n          if ( cmm.getMin() == null || cmm.getConversionMeta().compare( cmm.getMin(), object ) > 0 ) {\n            cmm.setMin( object );\n          }\n          if ( cmm.getMax() == null || cmm.getConversionMeta().compare( cmm.getMax(), object ) < 0 ) {\n            cmm.setMax( object );\n          }\n\n          if ( !cmm.getConversionMeta().isNull( object ) ) {\n            cmm.incrementSuccesses();\n          }\n\n        } catch ( KettleValueException e ) {\n          // This one doesn't work, remove it from the list!\n          //\n          evaluationResults.remove( cmm );\n        }\n      }\n    }\n  }","commit_id":"e13069d124f435c6e2e4ba255db2afa7854c1120","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private boolean containsNumber() {\n    for ( StringEvaluationResult result : evaluationResults ) {\n      if ( result.getConversionMeta().isNumber() ) {\n        return true;\n      }\n    }\n    return false;\n  }","id":61723,"modified_method":"private boolean containsNumber() {\n    for ( StringEvaluationResult result : evaluationResults ) {\n      if ( result.getConversionMeta().isNumber() && result.getNrSuccesses() > 0 ) {\n        return true;\n      }\n    }\n    return false;\n  }","commit_id":"e13069d124f435c6e2e4ba255db2afa7854c1120","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"/**\n   * @return The list of string evaluation results\n   */\n  public List<StringEvaluationResult> getStringEvaluationResults() {\n    return evaluationResults;\n  }","id":61724,"modified_method":"/**\n   * PDI-7736: Only list of successful evaluations returned.\n   * \n   * @return The list of string evaluation results\n   */\n  public List<StringEvaluationResult> getStringEvaluationResults() {\n    List<StringEvaluationResult> result = new ArrayList<>();\n    for ( StringEvaluationResult ev : evaluationResults ) {\n      if ( ev.getNrSuccesses() > 0 ) {\n        result.add( ev );\n      }\n    }\n    return result;\n  }","commit_id":"e13069d124f435c6e2e4ba255db2afa7854c1120","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private String doScan( IProgressMonitor monitor ) throws KettleException {\n    if ( samples > 0 ) {\n      monitor.beginTask(\n        BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Task.ScanningFile\" ), samples + 1 );\n    } else {\n      monitor.beginTask( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Task.ScanningFile\" ), 2 );\n    }\n\n    String line = \"\";\n    long fileLineNumber = 0;\n\n    DecimalFormatSymbols dfs = new DecimalFormatSymbols();\n\n    int nrfields = meta.inputFiles.inputFields.length;\n\n    RowMetaInterface outputRowMeta = new RowMeta();\n    meta.getFields( outputRowMeta, null, null, null, transMeta, null, null );\n\n    // Remove the storage meta-data (don't go for lazy conversion during scan)\n    for ( ValueMetaInterface valueMeta : outputRowMeta.getValueMetaList() ) {\n      valueMeta.setStorageMetadata( null );\n      valueMeta.setStorageType( ValueMetaInterface.STORAGE_TYPE_NORMAL );\n    }\n\n    RowMetaInterface convertRowMeta = outputRowMeta.cloneToType( ValueMetaInterface.TYPE_STRING );\n\n    // How many null values?\n    int[] nrnull = new int[nrfields]; // How many times null value?\n\n    // String info\n    String[] minstr = new String[nrfields]; // min string\n    String[] maxstr = new String[nrfields]; // max string\n    boolean[] firststr = new boolean[nrfields]; // first occ. of string?\n\n    // Date info\n    boolean[] isDate = new boolean[nrfields]; // is the field perhaps a Date?\n    int[] dateFormatCount = new int[nrfields]; // How many date formats work?\n    boolean[][] dateFormat = new boolean[nrfields][Const.getDateFormats().length]; // What are the date formats that\n    // work?\n    Date[][] minDate = new Date[nrfields][Const.getDateFormats().length]; // min date value\n    Date[][] maxDate = new Date[nrfields][Const.getDateFormats().length]; // max date value\n\n    // Number info\n    boolean[] isNumber = new boolean[nrfields]; // is the field perhaps a Number?\n    int[] numberFormatCount = new int[nrfields]; // How many number formats work?\n    boolean[][] numberFormat = new boolean[nrfields][Const.getNumberFormats().length]; // What are the number format\n                                                                                       // that work?\n    double[][] minValue = new double[nrfields][Const.getDateFormats().length]; // min number value\n    double[][] maxValue = new double[nrfields][Const.getDateFormats().length]; // max number value\n    int[][] numberPrecision = new int[nrfields][Const.getNumberFormats().length]; // remember the precision?\n    int[][] numberLength = new int[nrfields][Const.getNumberFormats().length]; // remember the length?\n\n    for ( int i = 0; i < nrfields; i++ ) {\n      TextFileInputField field = meta.inputFiles.inputFields[i];\n\n      if ( log.isDebug() ) {\n        debug = \"init field #\" + i;\n      }\n\n      if ( replaceMeta ) { // Clear previous info...\n\n        field.setName( meta.inputFiles.inputFields[i].getName() );\n        field.setType( meta.inputFiles.inputFields[i].getType() );\n        field.setFormat( \"\" );\n        field.setLength( -1 );\n        field.setPrecision( -1 );\n        field.setCurrencySymbol( dfs.getCurrencySymbol() );\n        field.setDecimalSymbol( \"\" + dfs.getDecimalSeparator() );\n        field.setGroupSymbol( \"\" + dfs.getGroupingSeparator() );\n        field.setNullString( \"-\" );\n        field.setTrimType( ValueMetaInterface.TRIM_TYPE_NONE );\n      }\n\n      nrnull[i] = 0;\n      minstr[i] = \"\";\n      maxstr[i] = \"\";\n      firststr[i] = true;\n\n      // Init data guess\n      isDate[i] = true;\n      for ( int j = 0; j < Const.getDateFormats().length; j++ ) {\n        dateFormat[i][j] = true;\n        minDate[i][j] = Const.MAX_DATE;\n        maxDate[i][j] = Const.MIN_DATE;\n      }\n      dateFormatCount[i] = Const.getDateFormats().length;\n\n      // Init number guess\n      isNumber[i] = true;\n      for ( int j = 0; j < Const.getNumberFormats().length; j++ ) {\n        numberFormat[i][j] = true;\n        minValue[i][j] = Double.MAX_VALUE;\n        maxValue[i][j] = -Double.MAX_VALUE;\n        numberPrecision[i][j] = -1;\n        numberLength[i][j] = -1;\n      }\n      numberFormatCount[i] = Const.getNumberFormats().length;\n    }\n\n    TextFileInputMeta strinfo = (TextFileInputMeta) meta.clone();\n    for ( int i = 0; i < nrfields; i++ ) {\n      strinfo.inputFiles.inputFields[i].setType( ValueMetaInterface.TYPE_STRING );\n    }\n\n    // Sample <samples> rows...\n    debug = \"get first line\";\n\n    StringBuilder lineBuffer = new StringBuilder( 256 );\n    int fileFormatType = meta.getFileFormatTypeNr();\n\n    // If the file has a header we overwrite the first line\n    // However, if it doesn't have a header, take a new line\n    //\n\n    line = TextFileInputUtils.getLine( log, reader, encodingType, fileFormatType, lineBuffer );\n    fileLineNumber++;\n    int skipped = 1;\n\n    if ( meta.content.header ) {\n\n      while ( line != null && skipped < meta.content.nrHeaderLines ) {\n        line = TextFileInputUtils.getLine( log, reader, encodingType, fileFormatType, lineBuffer );\n        skipped++;\n        fileLineNumber++;\n      }\n    }\n    int linenr = 1;\n\n    List<StringEvaluator> evaluators = new ArrayList<StringEvaluator>();\n\n    // Allocate number and date parsers\n    DecimalFormat df2 = (DecimalFormat) NumberFormat.getInstance();\n    DecimalFormatSymbols dfs2 = new DecimalFormatSymbols();\n    SimpleDateFormat daf2 = new SimpleDateFormat();\n\n    boolean errorFound = false;\n    while ( !errorFound && line != null && ( linenr <= samples || samples == 0 ) && !monitor.isCanceled() ) {\n      monitor.subTask( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Task.ScanningLine\", \"\"\n        + linenr ) );\n      if ( samples > 0 ) {\n        monitor.worked( 1 );\n      }\n\n      if ( log.isDebug() ) {\n        debug = \"convert line #\" + linenr + \" to row\";\n      }\n      RowMetaInterface rowMeta = new RowMeta();\n      meta.getFields( rowMeta, \"stepname\", null, null, transMeta, null, null );\n      // Remove the storage meta-data (don't go for lazy conversion during scan)\n      for ( ValueMetaInterface valueMeta : rowMeta.getValueMetaList() ) {\n        valueMeta.setStorageMetadata( null );\n        valueMeta.setStorageType( ValueMetaInterface.STORAGE_TYPE_NORMAL );\n      }\n\n      String delimiter = transMeta.environmentSubstitute( meta.content.separator );\n      String enclosure = transMeta.environmentSubstitute( meta.content.enclosure );\n      String escapeCharacter = transMeta.environmentSubstitute( meta.content.escapeCharacter );\n      Object[] r =\n          TextFileInputUtils.convertLineToRow( log, new TextFileLine( line, fileLineNumber, null ), strinfo, null, 0,\n              outputRowMeta, convertRowMeta, meta.getFilePaths( transMeta )[0], rownumber, delimiter, enclosure,\n              escapeCharacter, null, new BaseInputStepMeta.AdditionalOutputFields(), null, null, false, null, null,\n              null, null, 0 );\n\n      if ( r == null ) {\n        errorFound = true;\n        continue;\n      }\n      rownumber++;\n      for ( int i = 0; i < nrfields && i < r.length; i++ ) {\n        StringEvaluator evaluator;\n        if ( i >= evaluators.size() ) {\n          evaluator = new StringEvaluator( true );\n          evaluators.add( evaluator );\n        } else {\n          evaluator = evaluators.get( i );\n        }\n\n        String string = rowMeta.getString( r, i );\n\n        if ( i == 0 ) {\n          System.out.println();\n        }\n        evaluator.evaluateString( string );\n      }\n\n      fileLineNumber++;\n      if ( r != null ) {\n        linenr++;\n      }\n\n      // Grab another line...\n      //\n      line = TextFileInputUtils.getLine( log, reader, encodingType, fileFormatType, lineBuffer );\n    }\n\n    monitor.worked( 1 );\n    monitor.setTaskName( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Task.AnalyzingResults\" ) );\n\n    // Show information on items using a dialog box\n    //\n    StringBuilder message = new StringBuilder();\n    message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.ResultAfterScanning\", \"\"\n      + ( linenr - 1 ) ) );\n    message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.HorizontalLine\" ) );\n\n    for ( int i = 0; i < nrfields; i++ ) {\n      TextFileInputField field = meta.inputFiles.inputFields[i];\n      StringEvaluator evaluator = evaluators.get( i );\n      List<StringEvaluationResult> evaluationResults = evaluator.getStringEvaluationResults();\n\n      // If we didn't find any matching result, it's a String...\n      //\n      StringEvaluationResult result = evaluator.getAdvicedResult();\n      if ( evaluationResults.isEmpty() ) {\n        field.setType( ValueMetaInterface.TYPE_STRING );\n        field.setLength( evaluator.getMaxLength() );\n      }\n      if ( result != null ) {\n        // Take the first option we find, list the others below...\n        //\n        ValueMetaInterface conversionMeta = result.getConversionMeta();\n        field.setType( conversionMeta.getType() );\n        field.setTrimType( conversionMeta.getTrimType() );\n        field.setFormat( conversionMeta.getConversionMask() );\n        field.setDecimalSymbol( conversionMeta.getDecimalSymbol() );\n        field.setGroupSymbol( conversionMeta.getGroupingSymbol() );\n        field.setLength( conversionMeta.getLength() );\n        field.setPrecision( conversionMeta.getPrecision() );\n\n        nrnull[i] = result.getNrNull();\n        minstr[i] = result.getMin() == null ? \"\" : result.getMin().toString();\n        maxstr[i] = result.getMax() == null ? \"\" : result.getMax().toString();\n      }\n\n      message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.FieldNumber\", \"\"\n        + ( i + 1 ) ) );\n\n      message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.FieldName\", field\n        .getName() ) );\n      message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.FieldType\", field\n        .getTypeDesc() ) );\n\n      switch ( field.getType() ) {\n        case ValueMetaInterface.TYPE_NUMBER:\n          message.append( BaseMessages.getString(\n            PKG, \"TextFileCSVImportProgressDialog.Info.EstimatedLength\", ( field.getLength() < 0 ? \"-\" : \"\"\n              + field.getLength() ) ) );\n          message.append( BaseMessages.getString(\n            PKG, \"TextFileCSVImportProgressDialog.Info.EstimatedPrecision\", field.getPrecision() < 0 ? \"-\" : \"\"\n              + field.getPrecision() ) );\n          message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.NumberFormat\", field\n            .getFormat() ) );\n\n          if ( !evaluationResults.isEmpty() ) {\n            if ( evaluationResults.size() > 1 ) {\n              message.append( BaseMessages\n                .getString( PKG, \"TextFileCSVImportProgressDialog.Info.WarnNumberFormat\" ) );\n            }\n\n            for ( StringEvaluationResult seResult : evaluationResults ) {\n              String mask = seResult.getConversionMeta().getConversionMask();\n\n              message.append( BaseMessages.getString(\n                PKG, \"TextFileCSVImportProgressDialog.Info.NumberFormat2\", mask ) );\n              message.append( BaseMessages\n                .getString( PKG, \"TextFileCSVImportProgressDialog.Info.TrimType\", seResult\n                  .getConversionMeta().getTrimType() ) );\n              message.append( BaseMessages.getString(\n                PKG, \"TextFileCSVImportProgressDialog.Info.NumberMinValue\", seResult.getMin() ) );\n              message.append( BaseMessages.getString(\n                PKG, \"TextFileCSVImportProgressDialog.Info.NumberMaxValue\", seResult.getMax() ) );\n\n              try {\n                df2.applyPattern( mask );\n                df2.setDecimalFormatSymbols( dfs2 );\n                double mn = df2.parse( seResult.getMin().toString() ).doubleValue();\n                message.append( BaseMessages.getString(\n                  PKG, \"TextFileCSVImportProgressDialog.Info.NumberExample\", mask, seResult.getMin(), Double\n                    .toString( mn ) ) );\n              } catch ( Exception e ) {\n                if ( log.isDetailed() ) {\n                  log.logDetailed( \"This is unexpected: parsing [\"\n                    + seResult.getMin() + \"] with format [\" + mask + \"] did not work.\" );\n                }\n              }\n            }\n          }\n          message.append( BaseMessages.getString(\n            PKG, \"TextFileCSVImportProgressDialog.Info.NumberNrNullValues\", \"\" + nrnull[i] ) );\n          break;\n        case ValueMetaInterface.TYPE_STRING:\n          message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.StringMaxLength\", \"\"\n            + field.getLength() ) );\n          message.append( BaseMessages.getString(\n            PKG, \"TextFileCSVImportProgressDialog.Info.StringMinValue\", minstr[i] ) );\n          message.append( BaseMessages.getString(\n            PKG, \"TextFileCSVImportProgressDialog.Info.StringMaxValue\", maxstr[i] ) );\n          message.append( BaseMessages.getString(\n            PKG, \"TextFileCSVImportProgressDialog.Info.StringNrNullValues\", \"\" + nrnull[i] ) );\n          break;\n        case ValueMetaInterface.TYPE_DATE:\n          message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.DateMaxLength\", field\n            .getLength() < 0 ? \"-\" : \"\" + field.getLength() ) );\n          message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.DateFormat\", field\n            .getFormat() ) );\n          if ( dateFormatCount[i] > 1 ) {\n            message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.WarnDateFormat\" ) );\n          }\n          if ( !Const.isEmpty( minstr[i] ) ) {\n            for ( int x = 0; x < Const.getDateFormats().length; x++ ) {\n              if ( dateFormat[i][x] ) {\n                message.append( BaseMessages.getString(\n                  PKG, \"TextFileCSVImportProgressDialog.Info.DateFormat2\", Const.getDateFormats()[x] ) );\n                Date mindate = minDate[i][x];\n                Date maxdate = maxDate[i][x];\n                message.append( BaseMessages.getString(\n                  PKG, \"TextFileCSVImportProgressDialog.Info.DateMinValue\", mindate.toString() ) );\n                message.append( BaseMessages.getString(\n                  PKG, \"TextFileCSVImportProgressDialog.Info.DateMaxValue\", maxdate.toString() ) );\n\n                daf2.applyPattern( Const.getDateFormats()[x] );\n                try {\n                  Date md = daf2.parse( minstr[i] );\n                  message.append( BaseMessages.getString(\n                    PKG, \"TextFileCSVImportProgressDialog.Info.DateExample\", Const.getDateFormats()[x],\n                    minstr[i], md.toString() ) );\n                } catch ( Exception e ) {\n                  if ( log.isDetailed() ) {\n                    log.logDetailed( \"This is unexpected: parsing [\"\n                      + minstr[i] + \"] with format [\" + Const.getDateFormats()[x] + \"] did not work.\" );\n                  }\n                }\n              }\n            }\n          }\n          message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.DateNrNullValues\", \"\"\n            + nrnull[i] ) );\n          break;\n        default:\n          break;\n      }\n      if ( nrnull[i] == linenr - 1 ) {\n        message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.AllNullValues\" ) );\n      }\n      message.append( Const.CR );\n\n    }\n\n    monitor.worked( 1 );\n    monitor.done();\n\n    return message.toString();\n\n  }","id":61725,"modified_method":"private String doScan( IProgressMonitor monitor ) throws KettleException {\n    if ( samples > 0 ) {\n      monitor.beginTask(\n        BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Task.ScanningFile\" ), samples + 1 );\n    } else {\n      monitor.beginTask( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Task.ScanningFile\" ), 2 );\n    }\n\n    String line = \"\";\n    long fileLineNumber = 0;\n\n    DecimalFormatSymbols dfs = new DecimalFormatSymbols();\n\n    int nrfields = meta.inputFiles.inputFields.length;\n\n    RowMetaInterface outputRowMeta = new RowMeta();\n    meta.getFields( outputRowMeta, null, null, null, transMeta, null, null );\n\n    // Remove the storage meta-data (don't go for lazy conversion during scan)\n    for ( ValueMetaInterface valueMeta : outputRowMeta.getValueMetaList() ) {\n      valueMeta.setStorageMetadata( null );\n      valueMeta.setStorageType( ValueMetaInterface.STORAGE_TYPE_NORMAL );\n    }\n\n    RowMetaInterface convertRowMeta = outputRowMeta.cloneToType( ValueMetaInterface.TYPE_STRING );\n\n    // How many null values?\n    int[] nrnull = new int[nrfields]; // How many times null value?\n\n    // String info\n    String[] minstr = new String[nrfields]; // min string\n    String[] maxstr = new String[nrfields]; // max string\n    boolean[] firststr = new boolean[nrfields]; // first occ. of string?\n\n    // Date info\n    boolean[] isDate = new boolean[nrfields]; // is the field perhaps a Date?\n    int[] dateFormatCount = new int[nrfields]; // How many date formats work?\n    boolean[][] dateFormat = new boolean[nrfields][Const.getDateFormats().length]; // What are the date formats that\n    // work?\n    Date[][] minDate = new Date[nrfields][Const.getDateFormats().length]; // min date value\n    Date[][] maxDate = new Date[nrfields][Const.getDateFormats().length]; // max date value\n\n    // Number info\n    boolean[] isNumber = new boolean[nrfields]; // is the field perhaps a Number?\n    int[] numberFormatCount = new int[nrfields]; // How many number formats work?\n    boolean[][] numberFormat = new boolean[nrfields][Const.getNumberFormats().length]; // What are the number format\n                                                                                       // that work?\n    double[][] minValue = new double[nrfields][Const.getDateFormats().length]; // min number value\n    double[][] maxValue = new double[nrfields][Const.getDateFormats().length]; // max number value\n    int[][] numberPrecision = new int[nrfields][Const.getNumberFormats().length]; // remember the precision?\n    int[][] numberLength = new int[nrfields][Const.getNumberFormats().length]; // remember the length?\n\n    for ( int i = 0; i < nrfields; i++ ) {\n      TextFileInputField field = meta.inputFiles.inputFields[i];\n\n      if ( log.isDebug() ) {\n        debug = \"init field #\" + i;\n      }\n\n      if ( replaceMeta ) { // Clear previous info...\n\n        field.setName( meta.inputFiles.inputFields[i].getName() );\n        field.setType( meta.inputFiles.inputFields[i].getType() );\n        field.setFormat( \"\" );\n        field.setLength( -1 );\n        field.setPrecision( -1 );\n        field.setCurrencySymbol( dfs.getCurrencySymbol() );\n        field.setDecimalSymbol( \"\" + dfs.getDecimalSeparator() );\n        field.setGroupSymbol( \"\" + dfs.getGroupingSeparator() );\n        field.setNullString( \"-\" );\n        field.setTrimType( ValueMetaInterface.TRIM_TYPE_NONE );\n      }\n\n      nrnull[i] = 0;\n      minstr[i] = \"\";\n      maxstr[i] = \"\";\n      firststr[i] = true;\n\n      // Init data guess\n      isDate[i] = true;\n      for ( int j = 0; j < Const.getDateFormats().length; j++ ) {\n        dateFormat[i][j] = true;\n        minDate[i][j] = Const.MAX_DATE;\n        maxDate[i][j] = Const.MIN_DATE;\n      }\n      dateFormatCount[i] = Const.getDateFormats().length;\n\n      // Init number guess\n      isNumber[i] = true;\n      for ( int j = 0; j < Const.getNumberFormats().length; j++ ) {\n        numberFormat[i][j] = true;\n        minValue[i][j] = Double.MAX_VALUE;\n        maxValue[i][j] = -Double.MAX_VALUE;\n        numberPrecision[i][j] = -1;\n        numberLength[i][j] = -1;\n      }\n      numberFormatCount[i] = Const.getNumberFormats().length;\n    }\n\n    TextFileInputMeta strinfo = (TextFileInputMeta) meta.clone();\n    for ( int i = 0; i < nrfields; i++ ) {\n      strinfo.inputFiles.inputFields[i].setType( ValueMetaInterface.TYPE_STRING );\n    }\n\n    // Sample <samples> rows...\n    debug = \"get first line\";\n\n    StringBuilder lineBuffer = new StringBuilder( 256 );\n    int fileFormatType = meta.getFileFormatTypeNr();\n\n    // If the file has a header we overwrite the first line\n    // However, if it doesn't have a header, take a new line\n    //\n\n    line = TextFileInputUtils.getLine( log, reader, encodingType, fileFormatType, lineBuffer );\n    fileLineNumber++;\n    int skipped = 1;\n\n    if ( meta.content.header ) {\n\n      while ( line != null && skipped < meta.content.nrHeaderLines ) {\n        line = TextFileInputUtils.getLine( log, reader, encodingType, fileFormatType, lineBuffer );\n        skipped++;\n        fileLineNumber++;\n      }\n    }\n    int linenr = 1;\n\n    List<StringEvaluator> evaluators = new ArrayList<StringEvaluator>();\n\n    // Allocate number and date parsers\n    DecimalFormat df2 = (DecimalFormat) NumberFormat.getInstance();\n    DecimalFormatSymbols dfs2 = new DecimalFormatSymbols();\n    SimpleDateFormat daf2 = new SimpleDateFormat();\n\n    boolean errorFound = false;\n    while ( !errorFound && line != null && ( linenr <= samples || samples == 0 ) && !monitor.isCanceled() ) {\n      monitor.subTask( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Task.ScanningLine\", \"\"\n        + linenr ) );\n      if ( samples > 0 ) {\n        monitor.worked( 1 );\n      }\n\n      if ( log.isDebug() ) {\n        debug = \"convert line #\" + linenr + \" to row\";\n      }\n      RowMetaInterface rowMeta = new RowMeta();\n      meta.getFields( rowMeta, \"stepname\", null, null, transMeta, null, null );\n      // Remove the storage meta-data (don't go for lazy conversion during scan)\n      for ( ValueMetaInterface valueMeta : rowMeta.getValueMetaList() ) {\n        valueMeta.setStorageMetadata( null );\n        valueMeta.setStorageType( ValueMetaInterface.STORAGE_TYPE_NORMAL );\n      }\n\n      String delimiter = transMeta.environmentSubstitute( meta.content.separator );\n      String enclosure = transMeta.environmentSubstitute( meta.content.enclosure );\n      String escapeCharacter = transMeta.environmentSubstitute( meta.content.escapeCharacter );\n      Object[] r =\n          TextFileInputUtils.convertLineToRow( log, new TextFileLine( line, fileLineNumber, null ), strinfo, null, 0,\n              outputRowMeta, convertRowMeta, meta.getFilePaths( transMeta )[0], rownumber, delimiter, enclosure,\n              escapeCharacter, null, new BaseInputStepMeta.AdditionalOutputFields(), null, null, false, null, null,\n              null, null, 0 );\n\n      if ( r == null ) {\n        errorFound = true;\n        continue;\n      }\n      rownumber++;\n      for ( int i = 0; i < nrfields && i < r.length; i++ ) {\n        StringEvaluator evaluator;\n        if ( i >= evaluators.size() ) {\n          evaluator = new StringEvaluator( true );\n          evaluators.add( evaluator );\n        } else {\n          evaluator = evaluators.get( i );\n        }\n\n        String string = rowMeta.getString( r, i );\n\n        if ( i == 0 ) {\n          System.out.println();\n        }\n        evaluator.evaluateString( string );\n      }\n\n      fileLineNumber++;\n      if ( r != null ) {\n        linenr++;\n      }\n\n      // Grab another line...\n      //\n      line = TextFileInputUtils.getLine( log, reader, encodingType, fileFormatType, lineBuffer );\n    }\n\n    monitor.worked( 1 );\n    monitor.setTaskName( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Task.AnalyzingResults\" ) );\n\n    // Show information on items using a dialog box\n    //\n    StringBuilder message = new StringBuilder();\n    message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.ResultAfterScanning\", \"\"\n      + ( linenr - 1 ) ) );\n    message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.HorizontalLine\" ) );\n\n    for ( int i = 0; i < nrfields; i++ ) {\n      TextFileInputField field = meta.inputFiles.inputFields[i];\n      StringEvaluator evaluator = evaluators.get( i );\n      List<StringEvaluationResult> evaluationResults = evaluator.getStringEvaluationResults();\n\n      // If we didn't find any matching result, it's a String...\n      //\n      if ( evaluationResults.isEmpty() ) {\n        field.setType( ValueMetaInterface.TYPE_STRING );\n        field.setLength( evaluator.getMaxLength() );\n      } else {\n        StringEvaluationResult result = evaluator.getAdvicedResult();\n        if ( result != null ) {\n          // Take the first option we find, list the others below...\n          //\n          ValueMetaInterface conversionMeta = result.getConversionMeta();\n          field.setType( conversionMeta.getType() );\n          field.setTrimType( conversionMeta.getTrimType() );\n          field.setFormat( conversionMeta.getConversionMask() );\n          field.setDecimalSymbol( conversionMeta.getDecimalSymbol() );\n          field.setGroupSymbol( conversionMeta.getGroupingSymbol() );\n          field.setLength( conversionMeta.getLength() );\n          field.setPrecision( conversionMeta.getPrecision() );\n\n          nrnull[i] = result.getNrNull();\n          minstr[i] = result.getMin() == null ? \"\" : result.getMin().toString();\n          maxstr[i] = result.getMax() == null ? \"\" : result.getMax().toString();\n        }\n      }\n\n      message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.FieldNumber\", \"\"\n        + ( i + 1 ) ) );\n\n      message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.FieldName\", field\n        .getName() ) );\n      message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.FieldType\", field\n        .getTypeDesc() ) );\n\n      switch ( field.getType() ) {\n        case ValueMetaInterface.TYPE_NUMBER:\n          message.append( BaseMessages.getString(\n            PKG, \"TextFileCSVImportProgressDialog.Info.EstimatedLength\", ( field.getLength() < 0 ? \"-\" : \"\"\n              + field.getLength() ) ) );\n          message.append( BaseMessages.getString(\n            PKG, \"TextFileCSVImportProgressDialog.Info.EstimatedPrecision\", field.getPrecision() < 0 ? \"-\" : \"\"\n              + field.getPrecision() ) );\n          message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.NumberFormat\", field\n            .getFormat() ) );\n\n          if ( !evaluationResults.isEmpty() ) {\n            if ( evaluationResults.size() > 1 ) {\n              message.append( BaseMessages\n                .getString( PKG, \"TextFileCSVImportProgressDialog.Info.WarnNumberFormat\" ) );\n            }\n\n            for ( StringEvaluationResult seResult : evaluationResults ) {\n              String mask = seResult.getConversionMeta().getConversionMask();\n\n              message.append( BaseMessages.getString(\n                PKG, \"TextFileCSVImportProgressDialog.Info.NumberFormat2\", mask ) );\n              message.append( BaseMessages\n                .getString( PKG, \"TextFileCSVImportProgressDialog.Info.TrimType\", seResult\n                  .getConversionMeta().getTrimType() ) );\n              message.append( BaseMessages.getString(\n                PKG, \"TextFileCSVImportProgressDialog.Info.NumberMinValue\", seResult.getMin() ) );\n              message.append( BaseMessages.getString(\n                PKG, \"TextFileCSVImportProgressDialog.Info.NumberMaxValue\", seResult.getMax() ) );\n\n              try {\n                df2.applyPattern( mask );\n                df2.setDecimalFormatSymbols( dfs2 );\n                double mn = df2.parse( seResult.getMin().toString() ).doubleValue();\n                message.append( BaseMessages.getString(\n                  PKG, \"TextFileCSVImportProgressDialog.Info.NumberExample\", mask, seResult.getMin(), Double\n                    .toString( mn ) ) );\n              } catch ( Exception e ) {\n                if ( log.isDetailed() ) {\n                  log.logDetailed( \"This is unexpected: parsing [\"\n                    + seResult.getMin() + \"] with format [\" + mask + \"] did not work.\" );\n                }\n              }\n            }\n          }\n          message.append( BaseMessages.getString(\n            PKG, \"TextFileCSVImportProgressDialog.Info.NumberNrNullValues\", \"\" + nrnull[i] ) );\n          break;\n        case ValueMetaInterface.TYPE_STRING:\n          message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.StringMaxLength\", \"\"\n            + field.getLength() ) );\n          message.append( BaseMessages.getString(\n            PKG, \"TextFileCSVImportProgressDialog.Info.StringMinValue\", minstr[i] ) );\n          message.append( BaseMessages.getString(\n            PKG, \"TextFileCSVImportProgressDialog.Info.StringMaxValue\", maxstr[i] ) );\n          message.append( BaseMessages.getString(\n            PKG, \"TextFileCSVImportProgressDialog.Info.StringNrNullValues\", \"\" + nrnull[i] ) );\n          break;\n        case ValueMetaInterface.TYPE_DATE:\n          message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.DateMaxLength\", field\n            .getLength() < 0 ? \"-\" : \"\" + field.getLength() ) );\n          message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.DateFormat\", field\n            .getFormat() ) );\n          if ( dateFormatCount[i] > 1 ) {\n            message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.WarnDateFormat\" ) );\n          }\n          if ( !Const.isEmpty( minstr[i] ) ) {\n            for ( int x = 0; x < Const.getDateFormats().length; x++ ) {\n              if ( dateFormat[i][x] ) {\n                message.append( BaseMessages.getString(\n                  PKG, \"TextFileCSVImportProgressDialog.Info.DateFormat2\", Const.getDateFormats()[x] ) );\n                Date mindate = minDate[i][x];\n                Date maxdate = maxDate[i][x];\n                message.append( BaseMessages.getString(\n                  PKG, \"TextFileCSVImportProgressDialog.Info.DateMinValue\", mindate.toString() ) );\n                message.append( BaseMessages.getString(\n                  PKG, \"TextFileCSVImportProgressDialog.Info.DateMaxValue\", maxdate.toString() ) );\n\n                daf2.applyPattern( Const.getDateFormats()[x] );\n                try {\n                  Date md = daf2.parse( minstr[i] );\n                  message.append( BaseMessages.getString(\n                    PKG, \"TextFileCSVImportProgressDialog.Info.DateExample\", Const.getDateFormats()[x],\n                    minstr[i], md.toString() ) );\n                } catch ( Exception e ) {\n                  if ( log.isDetailed() ) {\n                    log.logDetailed( \"This is unexpected: parsing [\"\n                      + minstr[i] + \"] with format [\" + Const.getDateFormats()[x] + \"] did not work.\" );\n                  }\n                }\n              }\n            }\n          }\n          message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.DateNrNullValues\", \"\"\n            + nrnull[i] ) );\n          break;\n        default:\n          break;\n      }\n      if ( nrnull[i] == linenr - 1 ) {\n        message.append( BaseMessages.getString( PKG, \"TextFileCSVImportProgressDialog.Info.AllNullValues\" ) );\n      }\n      message.append( Const.CR );\n\n    }\n\n    monitor.worked( 1 );\n    monitor.done();\n\n    return message.toString();\n\n  }","commit_id":"e13069d124f435c6e2e4ba255db2afa7854c1120","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private void processRemovedMethods(final DiffState state, final ClassRepr.Diff diff, final ClassRepr it) {\n      debug(\"Processing removed methods:\");\n      final TIntHashSet affectedFiles = new TIntHashSet(DEFAULT_SET_CAPACITY, DEFAULT_SET_LOAD_FACTOR);\n      for (final MethodRepr m : diff.methods().removed()) {\n        debug(\"Method \", m.name);\n\n        final Collection<Pair<MethodRepr, ClassRepr>> overridenMethods = myFuture.findOverriddenMethods(m, it);\n        final TIntHashSet propagated = myFuture.propagateMethodAccess(m.name, it.name);\n\n        if (overridenMethods.size() == 0) {\n          debug(\"No overridden methods found, affecting method usages\");\n          myFuture.affectMethodUsages(m, propagated, m.createUsage(myContext, it.name), state.myAffectedUsages, state.myDependants);\n        }\n        else {\n          boolean clear = true;\n\n          loop:\n          for (final Pair<MethodRepr, ClassRepr> overriden : overridenMethods) {\n            final MethodRepr mm = overriden.first;\n\n            if (mm == MOCK_METHOD || !mm.myType.equals(m.myType) || !isEmpty(mm.signature) || !isEmpty(m.signature)) {\n              clear = false;\n              break loop;\n            }\n          }\n\n          if (!clear) {\n            debug(\"No clearly overridden methods found, affecting method usages\");\n            myFuture.affectMethodUsages(m, propagated, m.createUsage(myContext, it.name), state.myAffectedUsages, state.myDependants);\n          }\n        }\n\n        final Collection<Pair<MethodRepr, ClassRepr>> overridingMethods = new HashSet<Pair<MethodRepr, ClassRepr>>();\n\n        myFuture.addOverridingMethods(m, it, MethodRepr.equalByJavaRules(m), overridingMethods);\n\n        for (final Pair<MethodRepr, ClassRepr> p : overridingMethods) {\n          final int fName = myClassToSourceFile.get(p.second.name);\n          affectedFiles.add(fName);\n          debug(\"Affecting file by overriding: \", fName);\n        }\n\n        if ((m.access & Opcodes.ACC_ABSTRACT) == 0) {\n          propagated.forEach(new TIntProcedure() {\n            @Override\n            public boolean execute(int p) {\n              if (p != it.name) {\n                final ClassRepr s = myFuture.reprByName(p);\n\n                if (s != null) {\n                  final Collection<Pair<MethodRepr, ClassRepr>> overridenInS = myFuture.findOverriddenMethods(m, s);\n\n                  overridenInS.addAll(overridenMethods);\n\n                  boolean allAbstract = true;\n                  boolean visited = false;\n\n                  for (final Pair<MethodRepr, ClassRepr> pp : overridenInS) {\n                    final ClassRepr cc = pp.second;\n\n                    if (cc == MOCK_CLASS) {\n                      visited = true;\n                      continue;\n                    }\n\n                    if (cc.name == it.name) {\n                      continue;\n                    }\n\n                    visited = true;\n                    allAbstract = ((pp.first.access & Opcodes.ACC_ABSTRACT) > 0) || ((cc.access & Opcodes.ACC_INTERFACE) > 0);\n\n                    if (!allAbstract) {\n                      break;\n                    }\n                  }\n\n                  if (allAbstract && visited) {\n                    final int source = myClassToSourceFile.get(p);\n\n                    if (source > 0) {\n                      affectedFiles.add(source);\n                      debug(\"Removed method is not abstract & overrides some abstract method which is not then over-overriden in subclass \", p);\n                      debug(\"Affecting subclass source file \", source);\n                    }\n                  }\n                }\n              }\n              return true;\n            }\n          });\n        }\n      }\n      affectedFiles.forEach(new TIntProcedure() {\n        @Override\n        public boolean execute(int file) {\n          final String f = myContext.getValue(file);\n          myAffectedFiles.add(new File(f));\n          return true;\n        }\n      });\n      debug(\"End of removed methods processing\");\n    }","id":61726,"modified_method":"private void processRemovedMethods(final DiffState state, final ClassRepr.Diff diff, final ClassRepr it) {\n      final Collection<MethodRepr> removed = diff.methods().removed();\n      if (removed.isEmpty()) {\n        return;\n      }\n      debug(\"Processing removed methods:\");\n      final TIntHashSet affectedFiles = new TIntHashSet(DEFAULT_SET_CAPACITY, DEFAULT_SET_LOAD_FACTOR);\n      for (final MethodRepr m : removed) {\n        debug(\"Method \", m.name);\n\n        final Collection<Pair<MethodRepr, ClassRepr>> overridenMethods = myFuture.findOverriddenMethods(m, it);\n        final TIntHashSet propagated = myFuture.propagateMethodAccess(m.name, it.name);\n\n        if (overridenMethods.size() == 0) {\n          debug(\"No overridden methods found, affecting method usages\");\n          myFuture.affectMethodUsages(m, propagated, m.createUsage(myContext, it.name), state.myAffectedUsages, state.myDependants);\n        }\n        else {\n          boolean clear = true;\n\n          loop:\n          for (final Pair<MethodRepr, ClassRepr> overriden : overridenMethods) {\n            final MethodRepr mm = overriden.first;\n\n            if (mm == MOCK_METHOD || !mm.myType.equals(m.myType) || !isEmpty(mm.signature) || !isEmpty(m.signature)) {\n              clear = false;\n              break loop;\n            }\n          }\n\n          if (!clear) {\n            debug(\"No clearly overridden methods found, affecting method usages\");\n            myFuture.affectMethodUsages(m, propagated, m.createUsage(myContext, it.name), state.myAffectedUsages, state.myDependants);\n          }\n        }\n\n        final Collection<Pair<MethodRepr, ClassRepr>> overridingMethods = new HashSet<Pair<MethodRepr, ClassRepr>>();\n\n        myFuture.addOverridingMethods(m, it, MethodRepr.equalByJavaRules(m), overridingMethods);\n\n        for (final Pair<MethodRepr, ClassRepr> p : overridingMethods) {\n          final int fName = myClassToSourceFile.get(p.second.name);\n          affectedFiles.add(fName);\n          debug(\"Affecting file by overriding: \", fName);\n        }\n\n        if ((m.access & Opcodes.ACC_ABSTRACT) == 0) {\n          propagated.forEach(new TIntProcedure() {\n            @Override\n            public boolean execute(int p) {\n              if (p != it.name) {\n                final ClassRepr s = myFuture.reprByName(p);\n\n                if (s != null) {\n                  final Collection<Pair<MethodRepr, ClassRepr>> overridenInS = myFuture.findOverriddenMethods(m, s);\n\n                  overridenInS.addAll(overridenMethods);\n\n                  boolean allAbstract = true;\n                  boolean visited = false;\n\n                  for (final Pair<MethodRepr, ClassRepr> pp : overridenInS) {\n                    final ClassRepr cc = pp.second;\n\n                    if (cc == MOCK_CLASS) {\n                      visited = true;\n                      continue;\n                    }\n\n                    if (cc.name == it.name) {\n                      continue;\n                    }\n\n                    visited = true;\n                    allAbstract = ((pp.first.access & Opcodes.ACC_ABSTRACT) > 0) || ((cc.access & Opcodes.ACC_INTERFACE) > 0);\n\n                    if (!allAbstract) {\n                      break;\n                    }\n                  }\n\n                  if (allAbstract && visited) {\n                    final int source = myClassToSourceFile.get(p);\n\n                    if (source > 0) {\n                      affectedFiles.add(source);\n                      debug(\"Removed method is not abstract & overrides some abstract method which is not then over-overriden in subclass \", p);\n                      debug(\"Affecting subclass source file \", source);\n                    }\n                  }\n                }\n              }\n              return true;\n            }\n          });\n        }\n      }\n      affectedFiles.forEach(new TIntProcedure() {\n        @Override\n        public boolean execute(int file) {\n          final String f = myContext.getValue(file);\n          myAffectedFiles.add(new File(f));\n          return true;\n        }\n      });\n      debug(\"End of removed methods processing\");\n    }","commit_id":"2ee2b1343ca0086dd38b87079061d87c2f2dba42","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private boolean processRemovedFields(final DiffState state, final ClassRepr.Diff diff, final ClassRepr it) {\n      debug(\"Processing removed fields:\");\n\n      for (final FieldRepr f : diff.fields().removed()) {\n        debug(\"Field: \", f.name);\n\n        if ((f.access & Opcodes.ACC_PRIVATE) == 0 && (f.access & DESPERATE_MASK) == DESPERATE_MASK && f.hasValue()) {\n          debug(\"Field had value and was (non-private) final static => a switch to non-incremental mode requested\");\n          if (myConstantSearch != null) {\n            myDelayedWorks.addConstantWork(it.name, f, true, false);\n          }\n          else {\n            if (!incrementalDecision(it.name, f, myAffectedFiles, myFilter)) {\n              debug(\"End of Differentiate, returning false\");\n              return false;\n            }\n          }\n        }\n\n        final TIntHashSet propagated = myFuture.propagateFieldAccess(f.name, it.name);\n        myFuture.affectFieldUsages(f, propagated, f.createUsage(myContext, it.name), state.myAffectedUsages, state.myDependants);\n      }\n      debug(\"End of removed fields processing\");\n\n      return true;\n    }","id":61727,"modified_method":"private boolean processRemovedFields(final DiffState state, final ClassRepr.Diff diff, final ClassRepr it) {\n      final Collection<FieldRepr> removed = diff.fields().removed();\n      if (removed.isEmpty()) {\n        return true;\n      }\n      debug(\"Processing removed fields:\");\n\n      for (final FieldRepr f : removed) {\n        debug(\"Field: \", f.name);\n\n        if ((f.access & Opcodes.ACC_PRIVATE) == 0 && (f.access & DESPERATE_MASK) == DESPERATE_MASK && f.hasValue()) {\n          debug(\"Field had value and was (non-private) final static => a switch to non-incremental mode requested\");\n          if (myConstantSearch != null) {\n            myDelayedWorks.addConstantWork(it.name, f, true, false);\n          }\n          else {\n            if (!incrementalDecision(it.name, f, myAffectedFiles, myFilter)) {\n              debug(\"End of Differentiate, returning false\");\n              return false;\n            }\n          }\n        }\n\n        final TIntHashSet propagated = myFuture.propagateFieldAccess(f.name, it.name);\n        myFuture.affectFieldUsages(f, propagated, f.createUsage(myContext, it.name), state.myAffectedUsages, state.myDependants);\n      }\n      debug(\"End of removed fields processing\");\n\n      return true;\n    }","commit_id":"2ee2b1343ca0086dd38b87079061d87c2f2dba42","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private boolean processChangedClasses(final DiffState state) {\n      debug(\"Processing changed classes:\");\n      for (final Pair<ClassRepr, Difference> changed : state.myClassDiff.changed()) {\n        final ClassRepr it = changed.first;\n        final ClassRepr.Diff diff = (ClassRepr.Diff)changed.second;\n\n        myDelta.addChangedClass(it.name);\n\n        debug(\"Changed: \", it.name);\n\n        final int addedModifiers = diff.addedModifiers();\n\n        final boolean superClassChanged = (diff.base() & Difference.SUPERCLASS) > 0;\n        final boolean interfacesChanged = !diff.interfaces().unchanged();\n        final boolean signatureChanged = (diff.base() & Difference.SIGNATURE) > 0;\n\n        if (superClassChanged) {\n          myDelta.registerRemovedSuperClass(it.name, ((TypeRepr.ClassType)it.getSuperClass()).myClassName);\n\n          final ClassRepr newClass = myDelta.getReprByName(it.name);\n\n          assert (newClass != null);\n\n          myDelta.registerAddedSuperClass(it.name, ((TypeRepr.ClassType)newClass.getSuperClass()).myClassName);\n        }\n\n        if (interfacesChanged) {\n          for (final TypeRepr.AbstractType typ : diff.interfaces().removed()) {\n            myDelta.registerRemovedSuperClass(it.name, ((TypeRepr.ClassType)typ).myClassName);\n          }\n\n          for (final TypeRepr.AbstractType typ : diff.interfaces().added()) {\n            myDelta.registerAddedSuperClass(it.name, ((TypeRepr.ClassType)typ).myClassName);\n          }\n        }\n\n        if (myEasyMode) {\n          continue;\n        }\n\n        myPresent.appendDependents(it, state.myDependants);\n\n        if (superClassChanged || interfacesChanged || signatureChanged) {\n          debug(\"Superclass changed: \", superClassChanged);\n          debug(\"Interfaces changed: \", interfacesChanged);\n          debug(\"Signature changed \", signatureChanged);\n\n          final boolean extendsChanged = superClassChanged && !diff.extendsAdded();\n          final boolean interfacesRemoved = interfacesChanged && !diff.interfaces().removed().isEmpty();\n\n          debug(\"Extends changed: \", extendsChanged);\n          debug(\"Interfaces removed: \", interfacesRemoved);\n\n          myFuture.affectSubclasses(it.name, myAffectedFiles, state.myAffectedUsages, state.myDependants,\n                                     extendsChanged || interfacesRemoved || signatureChanged);\n        }\n\n        if ((diff.addedModifiers() & Opcodes.ACC_INTERFACE) > 0 || (diff.removedModifiers() & Opcodes.ACC_INTERFACE) > 0) {\n          debug(\"Class-to-interface or interface-to-class conversion detected, added class usage to affected usages\");\n          state.myAffectedUsages.add(it.createUsage());\n        }\n\n        if (it.isAnnotation() && it.getRetentionPolicy() == RetentionPolicy.SOURCE) {\n          debug(\"Annotation, retention policy = SOURCE => a switch to non-incremental mode requested\");\n          if (!incrementalDecision(it.getOuterClassName(), it, myAffectedFiles, myFilter)) {\n            debug(\"End of Differentiate, returning false\");\n            return false;\n          }\n        }\n\n        if ((addedModifiers & Opcodes.ACC_PROTECTED) > 0) {\n          debug(\"Introduction of 'protected' modifier detected, adding class usage + inheritance constraint to affected usages\");\n          final UsageRepr.Usage usage = it.createUsage();\n\n          state.myAffectedUsages.add(usage);\n          state.myUsageConstraints.put(usage, myFuture.new InheritanceConstraint(it.name));\n        }\n\n        if (diff.packageLocalOn()) {\n          debug(\"Introduction of 'package local' access detected, adding class usage + package constraint to affected usages\");\n          final UsageRepr.Usage usage = it.createUsage();\n\n          state.myAffectedUsages.add(usage);\n          state.myUsageConstraints.put(usage, myFuture.new PackageConstraint(it.getPackageName()));\n        }\n\n        if ((addedModifiers & Opcodes.ACC_FINAL) > 0 || (addedModifiers & Opcodes.ACC_PRIVATE) > 0) {\n          debug(\"Introduction of 'private' or 'final' modifier(s) detected, adding class usage to affected usages\");\n          state.myAffectedUsages.add(it.createUsage());\n        }\n\n        if ((addedModifiers & Opcodes.ACC_ABSTRACT) > 0 || (addedModifiers & Opcodes.ACC_STATIC) > 0) {\n          debug(\"Introduction of 'abstract' or 'static' modifier(s) detected, adding class new usage to affected usages\");\n          state.myAffectedUsages.add(UsageRepr.createClassNewUsage(myContext, it.name));\n        }\n\n        if (it.isAnnotation()) {\n          debug(\"Class is annotation, performing annotation-specific analysis\");\n\n          if (diff.retentionChanged()) {\n            debug(\"Retention policy change detected, adding class usage to affected usages\");\n            state.myAffectedUsages.add(it.createUsage());\n          }\n          else {\n            final Collection<ElemType> removedtargets = diff.targets().removed();\n\n            if (removedtargets.contains(ElemType.LOCAL_VARIABLE)) {\n              debug(\"Removed target contains LOCAL_VARIABLE => a switch to non-incremental mode requested\");\n              if (!incrementalDecision(it.getOuterClassName(), it, myAffectedFiles, myFilter)) {\n                debug(\"End of Differentiate, returning false\");\n                return false;\n              }\n            }\n\n            if (!removedtargets.isEmpty()) {\n              debug(\"Removed some annotation targets, adding annotation query\");\n              final UsageRepr.AnnotationUsage annotationUsage = (UsageRepr.AnnotationUsage)UsageRepr\n                .createAnnotationUsage(myContext, TypeRepr.createClassType(myContext, it.name), null, EnumSet.copyOf(removedtargets));\n              state.myAnnotationQuery.add(annotationUsage);\n            }\n\n            for (final MethodRepr m : diff.methods().added()) {\n              if (!m.hasValue()) {\n                debug(\"Added method with no default value: \", m.name);\n                debug(\"Adding class usage to affected usages\");\n                state.myAffectedUsages.add(it.createUsage());\n              }\n            }\n          }\n\n          debug(\"End of annotation-specific analysis\");\n        }\n\n        processAddedMethods(state, diff, it);\n        processRemovedMethods(state, diff, it);\n        processChangedMethods(state, diff, it);\n\n        if (!processAddedFields(state, diff, it)) {\n          return false;\n        }\n\n        if (!processRemovedFields(state, diff, it)) {\n          return false;\n        }\n\n        if (!processChangedFields(state, diff, it)) {\n          return false;\n        }\n      }\n      debug(\"End of changed classes processing\");\n\n      return !myEasyMode;\n    }","id":61728,"modified_method":"private boolean processChangedClasses(final DiffState state) {\n      final Collection<Pair<ClassRepr, Difference>> changedClasses = state.myClassDiff.changed();\n      if (!changedClasses.isEmpty()) {\n        debug(\"Processing changed classes:\");\n\n        for (final Pair<ClassRepr, Difference> changed : changedClasses) {\n          final ClassRepr it = changed.first;\n          final ClassRepr.Diff diff = (ClassRepr.Diff)changed.second;\n\n          myDelta.addChangedClass(it.name);\n\n          debug(\"Changed: \", it.name);\n\n          final int addedModifiers = diff.addedModifiers();\n\n          final boolean superClassChanged = (diff.base() & Difference.SUPERCLASS) > 0;\n          final boolean interfacesChanged = !diff.interfaces().unchanged();\n          final boolean signatureChanged = (diff.base() & Difference.SIGNATURE) > 0;\n\n          if (superClassChanged) {\n            myDelta.registerRemovedSuperClass(it.name, ((TypeRepr.ClassType)it.getSuperClass()).myClassName);\n\n            final ClassRepr newClass = myDelta.getReprByName(it.name);\n\n            assert (newClass != null);\n\n            myDelta.registerAddedSuperClass(it.name, ((TypeRepr.ClassType)newClass.getSuperClass()).myClassName);\n          }\n\n          if (interfacesChanged) {\n            for (final TypeRepr.AbstractType typ : diff.interfaces().removed()) {\n              myDelta.registerRemovedSuperClass(it.name, ((TypeRepr.ClassType)typ).myClassName);\n            }\n\n            for (final TypeRepr.AbstractType typ : diff.interfaces().added()) {\n              myDelta.registerAddedSuperClass(it.name, ((TypeRepr.ClassType)typ).myClassName);\n            }\n          }\n\n          if (myEasyMode) {\n            continue;\n          }\n\n          myPresent.appendDependents(it, state.myDependants);\n\n          if (superClassChanged || interfacesChanged || signatureChanged) {\n            debug(\"Superclass changed: \", superClassChanged);\n            debug(\"Interfaces changed: \", interfacesChanged);\n            debug(\"Signature changed \", signatureChanged);\n\n            final boolean extendsChanged = superClassChanged && !diff.extendsAdded();\n            final boolean interfacesRemoved = interfacesChanged && !diff.interfaces().removed().isEmpty();\n\n            debug(\"Extends changed: \", extendsChanged);\n            debug(\"Interfaces removed: \", interfacesRemoved);\n\n            myFuture.affectSubclasses(it.name, myAffectedFiles, state.myAffectedUsages, state.myDependants,\n                                       extendsChanged || interfacesRemoved || signatureChanged);\n          }\n\n          if ((diff.addedModifiers() & Opcodes.ACC_INTERFACE) > 0 || (diff.removedModifiers() & Opcodes.ACC_INTERFACE) > 0) {\n            debug(\"Class-to-interface or interface-to-class conversion detected, added class usage to affected usages\");\n            state.myAffectedUsages.add(it.createUsage());\n          }\n\n          if (it.isAnnotation() && it.getRetentionPolicy() == RetentionPolicy.SOURCE) {\n            debug(\"Annotation, retention policy = SOURCE => a switch to non-incremental mode requested\");\n            if (!incrementalDecision(it.getOuterClassName(), it, myAffectedFiles, myFilter)) {\n              debug(\"End of Differentiate, returning false\");\n              return false;\n            }\n          }\n\n          if ((addedModifiers & Opcodes.ACC_PROTECTED) > 0) {\n            debug(\"Introduction of 'protected' modifier detected, adding class usage + inheritance constraint to affected usages\");\n            final UsageRepr.Usage usage = it.createUsage();\n\n            state.myAffectedUsages.add(usage);\n            state.myUsageConstraints.put(usage, myFuture.new InheritanceConstraint(it.name));\n          }\n\n          if (diff.packageLocalOn()) {\n            debug(\"Introduction of 'package local' access detected, adding class usage + package constraint to affected usages\");\n            final UsageRepr.Usage usage = it.createUsage();\n\n            state.myAffectedUsages.add(usage);\n            state.myUsageConstraints.put(usage, myFuture.new PackageConstraint(it.getPackageName()));\n          }\n\n          if ((addedModifiers & Opcodes.ACC_FINAL) > 0 || (addedModifiers & Opcodes.ACC_PRIVATE) > 0) {\n            debug(\"Introduction of 'private' or 'final' modifier(s) detected, adding class usage to affected usages\");\n            state.myAffectedUsages.add(it.createUsage());\n          }\n\n          if ((addedModifiers & Opcodes.ACC_ABSTRACT) > 0 || (addedModifiers & Opcodes.ACC_STATIC) > 0) {\n            debug(\"Introduction of 'abstract' or 'static' modifier(s) detected, adding class new usage to affected usages\");\n            state.myAffectedUsages.add(UsageRepr.createClassNewUsage(myContext, it.name));\n          }\n\n          if (it.isAnnotation()) {\n            debug(\"Class is annotation, performing annotation-specific analysis\");\n\n            if (diff.retentionChanged()) {\n              debug(\"Retention policy change detected, adding class usage to affected usages\");\n              state.myAffectedUsages.add(it.createUsage());\n            }\n            else {\n              final Collection<ElemType> removedtargets = diff.targets().removed();\n\n              if (removedtargets.contains(ElemType.LOCAL_VARIABLE)) {\n                debug(\"Removed target contains LOCAL_VARIABLE => a switch to non-incremental mode requested\");\n                if (!incrementalDecision(it.getOuterClassName(), it, myAffectedFiles, myFilter)) {\n                  debug(\"End of Differentiate, returning false\");\n                  return false;\n                }\n              }\n\n              if (!removedtargets.isEmpty()) {\n                debug(\"Removed some annotation targets, adding annotation query\");\n                final UsageRepr.AnnotationUsage annotationUsage = (UsageRepr.AnnotationUsage)UsageRepr\n                  .createAnnotationUsage(myContext, TypeRepr.createClassType(myContext, it.name), null, EnumSet.copyOf(removedtargets));\n                state.myAnnotationQuery.add(annotationUsage);\n              }\n\n              for (final MethodRepr m : diff.methods().added()) {\n                if (!m.hasValue()) {\n                  debug(\"Added method with no default value: \", m.name);\n                  debug(\"Adding class usage to affected usages\");\n                  state.myAffectedUsages.add(it.createUsage());\n                }\n              }\n            }\n\n            debug(\"End of annotation-specific analysis\");\n          }\n\n          processAddedMethods(state, diff, it);\n          processRemovedMethods(state, diff, it);\n          processChangedMethods(state, diff, it);\n\n          if (!processAddedFields(state, diff, it)) {\n            return false;\n          }\n\n          if (!processRemovedFields(state, diff, it)) {\n            return false;\n          }\n\n          if (!processChangedFields(state, diff, it)) {\n            return false;\n          }\n        }\n        debug(\"End of changed classes processing\");\n      }\n\n      return !myEasyMode;\n    }","commit_id":"2ee2b1343ca0086dd38b87079061d87c2f2dba42","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private boolean processChangedFields(final DiffState state, final ClassRepr.Diff diff, final ClassRepr it) {\n      debug(\"Processing changed fields:\");\n\n      for (final Pair<FieldRepr, Difference> f : diff.fields().changed()) {\n        final Difference d = f.second;\n        final FieldRepr field = f.first;\n\n        debug(\"Field: \", field.name);\n\n        if ((field.access & Opcodes.ACC_PRIVATE) == 0 && (field.access & DESPERATE_MASK) == DESPERATE_MASK) {\n          final int changedModifiers = d.addedModifiers() | d.removedModifiers();\n          final boolean harmful = (changedModifiers & (Opcodes.ACC_STATIC | Opcodes.ACC_FINAL)) > 0;\n          final boolean accessChanged = (changedModifiers & (Opcodes.ACC_PUBLIC | Opcodes.ACC_PRIVATE | Opcodes.ACC_PROTECTED)) > 0;\n          final boolean valueChanged = (d.base() & Difference.VALUE) > 0 && d.hadValue();\n\n          if (harmful || valueChanged || (accessChanged && !d.weakedAccess())) {\n            debug(\"Inline field changed it's access or value => a switch to non-incremental mode requested\");\n            if (myConstantSearch != null) {\n              myDelayedWorks.addConstantWork(it.name, field, false, accessChanged);\n            }\n            else {\n              if (!incrementalDecision(it.name, field, myAffectedFiles, myFilter)) {\n                debug(\"End of Differentiate, returning false\");\n                return false;\n              }\n            }\n          }\n        }\n\n        if (d.base() != Difference.NONE) {\n          final TIntHashSet propagated = myFuture.propagateFieldAccess(field.name, it.name);\n\n          if ((d.base() & Difference.TYPE) > 0 || (d.base() & Difference.SIGNATURE) > 0) {\n            debug(\"Type or signature changed --- affecting field usages\");\n            myFuture\n              .affectFieldUsages(field, propagated, field.createUsage(myContext, it.name), state.myAffectedUsages, state.myDependants);\n          }\n          else if ((d.base() & Difference.ACCESS) > 0) {\n            if ((d.addedModifiers() & Opcodes.ACC_STATIC) > 0 ||\n                (d.removedModifiers() & Opcodes.ACC_STATIC) > 0 ||\n                (d.addedModifiers() & Opcodes.ACC_PRIVATE) > 0 ||\n                (d.addedModifiers() & Opcodes.ACC_VOLATILE) > 0) {\n              debug(\"Added/removed static modifier or added private/volatile modifier --- affecting field usages\");\n              myFuture\n                .affectFieldUsages(field, propagated, field.createUsage(myContext, it.name), state.myAffectedUsages, state.myDependants);\n            }\n            else {\n              boolean affected = false;\n              final Set<UsageRepr.Usage> usages = new HashSet<UsageRepr.Usage>();\n\n              if ((d.addedModifiers() & Opcodes.ACC_FINAL) > 0) {\n                debug(\"Added final modifier --- affecting field assign usages\");\n                myFuture.affectFieldUsages(field, propagated, field.createAssignUsage(myContext, it.name), usages, state.myDependants);\n                state.myAffectedUsages.addAll(usages);\n                affected = true;\n              }\n\n              if ((d.removedModifiers() & Opcodes.ACC_PUBLIC) > 0) {\n                debug(\"Removed public modifier, affecting field usages with appropriate constraint\");\n                if (!affected) {\n                  myFuture.affectFieldUsages(field, propagated, field.createUsage(myContext, it.name), usages, state.myDependants);\n                  state.myAffectedUsages.addAll(usages);\n                }\n\n                for (final UsageRepr.Usage usage : usages) {\n                  if ((d.addedModifiers() & Opcodes.ACC_PROTECTED) > 0) {\n                    state.myUsageConstraints.put(usage, myFuture.new InheritanceConstraint(it.name));\n                  }\n                  else {\n                    state.myUsageConstraints.put(usage, myFuture.new PackageConstraint(it.getPackageName()));\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      debug(\"End of changed fields processing\");\n\n      return true;\n    }","id":61729,"modified_method":"private boolean processChangedFields(final DiffState state, final ClassRepr.Diff diff, final ClassRepr it) {\n      final Collection<Pair<FieldRepr, Difference>> changed = diff.fields().changed();\n      if (changed.isEmpty()) {\n        return true;\n      }\n      debug(\"Processing changed fields:\");\n\n      for (final Pair<FieldRepr, Difference> f : changed) {\n        final Difference d = f.second;\n        final FieldRepr field = f.first;\n\n        debug(\"Field: \", field.name);\n\n        if ((field.access & Opcodes.ACC_PRIVATE) == 0 && (field.access & DESPERATE_MASK) == DESPERATE_MASK) {\n          final int changedModifiers = d.addedModifiers() | d.removedModifiers();\n          final boolean harmful = (changedModifiers & (Opcodes.ACC_STATIC | Opcodes.ACC_FINAL)) > 0;\n          final boolean accessChanged = (changedModifiers & (Opcodes.ACC_PUBLIC | Opcodes.ACC_PRIVATE | Opcodes.ACC_PROTECTED)) > 0;\n          final boolean valueChanged = (d.base() & Difference.VALUE) > 0 && d.hadValue();\n\n          if (harmful || valueChanged || (accessChanged && !d.weakedAccess())) {\n            debug(\"Inline field changed it's access or value => a switch to non-incremental mode requested\");\n            if (myConstantSearch != null) {\n              myDelayedWorks.addConstantWork(it.name, field, false, accessChanged);\n            }\n            else {\n              if (!incrementalDecision(it.name, field, myAffectedFiles, myFilter)) {\n                debug(\"End of Differentiate, returning false\");\n                return false;\n              }\n            }\n          }\n        }\n\n        if (d.base() != Difference.NONE) {\n          final TIntHashSet propagated = myFuture.propagateFieldAccess(field.name, it.name);\n\n          if ((d.base() & Difference.TYPE) > 0 || (d.base() & Difference.SIGNATURE) > 0) {\n            debug(\"Type or signature changed --- affecting field usages\");\n            myFuture\n              .affectFieldUsages(field, propagated, field.createUsage(myContext, it.name), state.myAffectedUsages, state.myDependants);\n          }\n          else if ((d.base() & Difference.ACCESS) > 0) {\n            if ((d.addedModifiers() & Opcodes.ACC_STATIC) > 0 ||\n                (d.removedModifiers() & Opcodes.ACC_STATIC) > 0 ||\n                (d.addedModifiers() & Opcodes.ACC_PRIVATE) > 0 ||\n                (d.addedModifiers() & Opcodes.ACC_VOLATILE) > 0) {\n              debug(\"Added/removed static modifier or added private/volatile modifier --- affecting field usages\");\n              myFuture\n                .affectFieldUsages(field, propagated, field.createUsage(myContext, it.name), state.myAffectedUsages, state.myDependants);\n            }\n            else {\n              boolean affected = false;\n              final Set<UsageRepr.Usage> usages = new HashSet<UsageRepr.Usage>();\n\n              if ((d.addedModifiers() & Opcodes.ACC_FINAL) > 0) {\n                debug(\"Added final modifier --- affecting field assign usages\");\n                myFuture.affectFieldUsages(field, propagated, field.createAssignUsage(myContext, it.name), usages, state.myDependants);\n                state.myAffectedUsages.addAll(usages);\n                affected = true;\n              }\n\n              if ((d.removedModifiers() & Opcodes.ACC_PUBLIC) > 0) {\n                debug(\"Removed public modifier, affecting field usages with appropriate constraint\");\n                if (!affected) {\n                  myFuture.affectFieldUsages(field, propagated, field.createUsage(myContext, it.name), usages, state.myDependants);\n                  state.myAffectedUsages.addAll(usages);\n                }\n\n                for (final UsageRepr.Usage usage : usages) {\n                  if ((d.addedModifiers() & Opcodes.ACC_PROTECTED) > 0) {\n                    state.myUsageConstraints.put(usage, myFuture.new InheritanceConstraint(it.name));\n                  }\n                  else {\n                    state.myUsageConstraints.put(usage, myFuture.new PackageConstraint(it.getPackageName()));\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      debug(\"End of changed fields processing\");\n\n      return true;\n    }","commit_id":"2ee2b1343ca0086dd38b87079061d87c2f2dba42","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void processAddedClasses(final DiffState state) {\n      debug(\"Processing added classes:\");\n      for (final ClassRepr c : state.myClassDiff.added()) {\n        debug(\"Class name: \", c.name);\n        myDelta.addChangedClass(c.name);\n\n        for (final int sup : c.getSupers()) {\n          myDelta.registerAddedSuperClass(c.name, sup);\n        }\n\n        if (!myEasyMode) {\n          final TIntHashSet depClasses = myClassToClassDependency.get(c.name);\n\n          if (depClasses != null) {\n            final TIntHashSet fileNames = new TIntHashSet(DEFAULT_SET_CAPACITY, DEFAULT_SET_LOAD_FACTOR);\n            depClasses.forEach(new TIntProcedure() {\n              @Override\n              public boolean execute(int depClass) {\n                final int fName = myClassToSourceFile.get(depClass);\n                if (fName > 0) {\n                  fileNames.add(fName);\n                }\n                return true;\n              }\n            });\n            fileNames.forEach(new TIntProcedure() {\n              @Override\n              public boolean execute(int fName) {\n                final String f = myContext.getValue(fName);\n                final File theFile = new File(f);\n                if (myFilter == null || myFilter.accept(theFile)) {\n                  debug(\"Adding dependent file \", f);\n                  myAffectedFiles.add(theFile);\n                }\n                return true;\n              }\n            });\n          }\n        }\n      }\n\n      debug(\"End of added classes processing.\");\n    }","id":61730,"modified_method":"private void processAddedClasses(final DiffState state) {\n      final Collection<ClassRepr> addedClasses = state.myClassDiff.added();\n      if (addedClasses.isEmpty()) {\n        return;\n      }\n\n      debug(\"Processing added classes:\");\n      for (final ClassRepr c : addedClasses) {\n        debug(\"Class name: \", c.name);\n        myDelta.addChangedClass(c.name);\n\n        for (final int sup : c.getSupers()) {\n          myDelta.registerAddedSuperClass(c.name, sup);\n        }\n\n        if (!myEasyMode) {\n          final TIntHashSet depClasses = myClassToClassDependency.get(c.name);\n\n          if (depClasses != null) {\n            final TIntHashSet fileNames = new TIntHashSet(DEFAULT_SET_CAPACITY, DEFAULT_SET_LOAD_FACTOR);\n            depClasses.forEach(new TIntProcedure() {\n              @Override\n              public boolean execute(int depClass) {\n                final int fName = myClassToSourceFile.get(depClass);\n                if (fName > 0) {\n                  fileNames.add(fName);\n                }\n                return true;\n              }\n            });\n            fileNames.forEach(new TIntProcedure() {\n              @Override\n              public boolean execute(int fName) {\n                final String f = myContext.getValue(fName);\n                final File theFile = new File(f);\n                if (myFilter == null || myFilter.accept(theFile)) {\n                  debug(\"Adding dependent file \", f);\n                  myAffectedFiles.add(theFile);\n                }\n                return true;\n              }\n            });\n          }\n        }\n      }\n\n      debug(\"End of added classes processing.\");\n    }","commit_id":"2ee2b1343ca0086dd38b87079061d87c2f2dba42","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void processChangedMethods(final DiffState state, final ClassRepr.Diff diff, final ClassRepr it) {\n      debug(\"Processing changed methods:\");\n      for (final Pair<MethodRepr, Difference> mr : diff.methods().changed()) {\n        final MethodRepr m = mr.first;\n        final MethodRepr.Diff d = (MethodRepr.Diff)mr.second;\n        final boolean throwsChanged = (d.exceptions().added().size() > 0) || (d.exceptions().changed().size() > 0);\n\n        debug(\"Method: \", m.name);\n\n        if (it.isAnnotation()) {\n          if (d.defaultRemoved()) {\n            debug(\"Class is annotation, default value is removed => adding annotation query\");\n            final TIntHashSet l = new TIntHashSet(DEFAULT_SET_CAPACITY, DEFAULT_SET_LOAD_FACTOR);\n            l.add(m.name);\n            final UsageRepr.AnnotationUsage annotationUsage = (UsageRepr.AnnotationUsage)UsageRepr\n              .createAnnotationUsage(myContext, TypeRepr.createClassType(myContext, it.name), l, null);\n            state.myAnnotationQuery.add(annotationUsage);\n          }\n        }\n        else if (d.base() != Difference.NONE || throwsChanged) {\n          final TIntHashSet propagated = myFuture.propagateMethodAccess(m.name, it.name);\n\n          boolean affected = false;\n          boolean constrained = false;\n\n          final Set<UsageRepr.Usage> usages = new HashSet<UsageRepr.Usage>();\n\n          if (d.packageLocalOn()) {\n            debug(\"Method became package-local, affecting method usages outside the package\");\n            myFuture.affectMethodUsages(m, propagated, m.createUsage(myContext, it.name), usages, state.myDependants);\n\n            for (final UsageRepr.Usage usage : usages) {\n              state.myUsageConstraints.put(usage, myFuture.new InheritanceConstraint(it.name));\n            }\n\n            state.myAffectedUsages.addAll(usages);\n            affected = true;\n            constrained = true;\n          }\n\n          if ((d.base() & Difference.TYPE) > 0 || (d.base() & Difference.SIGNATURE) > 0 || throwsChanged) {\n            if (!affected) {\n              debug(\"Return type, throws list or signature changed --- affecting method usages\");\n              myFuture.affectMethodUsages(m, propagated, m.createUsage(myContext, it.name), usages, state.myDependants);\n\n              final List<Pair<MethodRepr, ClassRepr>> overridingMethods = new LinkedList<Pair<MethodRepr, ClassRepr>>();\n\n              myFuture.addOverridingMethods(m, it, MethodRepr.equalByJavaRules(m), overridingMethods);\n\n              for(final Pair<MethodRepr, ClassRepr> p : overridingMethods) {\n                final ClassRepr aClass = p.getSecond();\n\n                if (aClass != MOCK_CLASS) {\n                  final int fileName = myClassToSourceFile.get(aClass.name);\n\n                  if (fileName > 0) {\n                    myAffectedFiles.add(new File(myContext.getValue(fileName)));\n                  }\n                }\n              }\n\n              state.myAffectedUsages.addAll(usages);\n            }\n          }\n          else if ((d.base() & Difference.ACCESS) > 0) {\n            if ((d.addedModifiers() & Opcodes.ACC_STATIC) > 0 ||\n                (d.removedModifiers() & Opcodes.ACC_STATIC) > 0 ||\n                (d.addedModifiers() & Opcodes.ACC_PRIVATE) > 0) {\n              if (!affected) {\n                debug(\"Added static or private specifier or removed static specifier --- affecting method usages\");\n                myFuture.affectMethodUsages(m, propagated, m.createUsage(myContext, it.name), usages, state.myDependants);\n                state.myAffectedUsages.addAll(usages);\n              }\n\n              if ((d.addedModifiers() & Opcodes.ACC_STATIC) > 0) {\n                debug(\"Added static specifier --- affecting subclasses\");\n                myFuture.affectSubclasses(it.name, myAffectedFiles, state.myAffectedUsages, state.myDependants, false);\n              }\n            }\n            else {\n              if ((d.addedModifiers() & Opcodes.ACC_FINAL) > 0 ||\n                  (d.addedModifiers() & Opcodes.ACC_PUBLIC) > 0 ||\n                  (d.addedModifiers() & Opcodes.ACC_ABSTRACT) > 0) {\n                debug(\"Added final, public or abstract specifier --- affecting subclasses\");\n                myFuture.affectSubclasses(it.name, myAffectedFiles, state.myAffectedUsages, state.myDependants, false);\n              }\n\n              if ((d.addedModifiers() & Opcodes.ACC_PROTECTED) > 0 && !((d.removedModifiers() & Opcodes.ACC_PRIVATE) > 0)) {\n                if (!constrained) {\n                  debug(\"Added public or package-local method became protected --- affect method usages with protected constraint\");\n                  if (!affected) {\n                    myFuture.affectMethodUsages(m, propagated, m.createUsage(myContext, it.name), usages, state.myDependants);\n                    state.myAffectedUsages.addAll(usages);\n                  }\n\n                  for (final UsageRepr.Usage usage : usages) {\n                    state.myUsageConstraints.put(usage, myFuture.new InheritanceConstraint(it.name));\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      debug(\"End of changed methods processing\");\n    }","id":61731,"modified_method":"private void processChangedMethods(final DiffState state, final ClassRepr.Diff diff, final ClassRepr it) {\n      final Collection<Pair<MethodRepr, Difference>> changed = diff.methods().changed();\n      if (changed.isEmpty()) {\n        return;\n      }\n      debug(\"Processing changed methods:\");\n      for (final Pair<MethodRepr, Difference> mr : changed) {\n        final MethodRepr m = mr.first;\n        final MethodRepr.Diff d = (MethodRepr.Diff)mr.second;\n        final boolean throwsChanged = (d.exceptions().added().size() > 0) || (d.exceptions().changed().size() > 0);\n\n        debug(\"Method: \", m.name);\n\n        if (it.isAnnotation()) {\n          if (d.defaultRemoved()) {\n            debug(\"Class is annotation, default value is removed => adding annotation query\");\n            final TIntHashSet l = new TIntHashSet(DEFAULT_SET_CAPACITY, DEFAULT_SET_LOAD_FACTOR);\n            l.add(m.name);\n            final UsageRepr.AnnotationUsage annotationUsage = (UsageRepr.AnnotationUsage)UsageRepr\n              .createAnnotationUsage(myContext, TypeRepr.createClassType(myContext, it.name), l, null);\n            state.myAnnotationQuery.add(annotationUsage);\n          }\n        }\n        else if (d.base() != Difference.NONE || throwsChanged) {\n          final TIntHashSet propagated = myFuture.propagateMethodAccess(m.name, it.name);\n\n          boolean affected = false;\n          boolean constrained = false;\n\n          final Set<UsageRepr.Usage> usages = new HashSet<UsageRepr.Usage>();\n\n          if (d.packageLocalOn()) {\n            debug(\"Method became package-local, affecting method usages outside the package\");\n            myFuture.affectMethodUsages(m, propagated, m.createUsage(myContext, it.name), usages, state.myDependants);\n\n            for (final UsageRepr.Usage usage : usages) {\n              state.myUsageConstraints.put(usage, myFuture.new InheritanceConstraint(it.name));\n            }\n\n            state.myAffectedUsages.addAll(usages);\n            affected = true;\n            constrained = true;\n          }\n\n          if ((d.base() & Difference.TYPE) > 0 || (d.base() & Difference.SIGNATURE) > 0 || throwsChanged) {\n            if (!affected) {\n              debug(\"Return type, throws list or signature changed --- affecting method usages\");\n              myFuture.affectMethodUsages(m, propagated, m.createUsage(myContext, it.name), usages, state.myDependants);\n\n              final List<Pair<MethodRepr, ClassRepr>> overridingMethods = new LinkedList<Pair<MethodRepr, ClassRepr>>();\n\n              myFuture.addOverridingMethods(m, it, MethodRepr.equalByJavaRules(m), overridingMethods);\n\n              for(final Pair<MethodRepr, ClassRepr> p : overridingMethods) {\n                final ClassRepr aClass = p.getSecond();\n\n                if (aClass != MOCK_CLASS) {\n                  final int fileName = myClassToSourceFile.get(aClass.name);\n\n                  if (fileName > 0) {\n                    myAffectedFiles.add(new File(myContext.getValue(fileName)));\n                  }\n                }\n              }\n\n              state.myAffectedUsages.addAll(usages);\n            }\n          }\n          else if ((d.base() & Difference.ACCESS) > 0) {\n            if ((d.addedModifiers() & Opcodes.ACC_STATIC) > 0 ||\n                (d.removedModifiers() & Opcodes.ACC_STATIC) > 0 ||\n                (d.addedModifiers() & Opcodes.ACC_PRIVATE) > 0) {\n              if (!affected) {\n                debug(\"Added static or private specifier or removed static specifier --- affecting method usages\");\n                myFuture.affectMethodUsages(m, propagated, m.createUsage(myContext, it.name), usages, state.myDependants);\n                state.myAffectedUsages.addAll(usages);\n              }\n\n              if ((d.addedModifiers() & Opcodes.ACC_STATIC) > 0) {\n                debug(\"Added static specifier --- affecting subclasses\");\n                myFuture.affectSubclasses(it.name, myAffectedFiles, state.myAffectedUsages, state.myDependants, false);\n              }\n            }\n            else {\n              if ((d.addedModifiers() & Opcodes.ACC_FINAL) > 0 ||\n                  (d.addedModifiers() & Opcodes.ACC_PUBLIC) > 0 ||\n                  (d.addedModifiers() & Opcodes.ACC_ABSTRACT) > 0) {\n                debug(\"Added final, public or abstract specifier --- affecting subclasses\");\n                myFuture.affectSubclasses(it.name, myAffectedFiles, state.myAffectedUsages, state.myDependants, false);\n              }\n\n              if ((d.addedModifiers() & Opcodes.ACC_PROTECTED) > 0 && !((d.removedModifiers() & Opcodes.ACC_PRIVATE) > 0)) {\n                if (!constrained) {\n                  debug(\"Added public or package-local method became protected --- affect method usages with protected constraint\");\n                  if (!affected) {\n                    myFuture.affectMethodUsages(m, propagated, m.createUsage(myContext, it.name), usages, state.myDependants);\n                    state.myAffectedUsages.addAll(usages);\n                  }\n\n                  for (final UsageRepr.Usage usage : usages) {\n                    state.myUsageConstraints.put(usage, myFuture.new InheritanceConstraint(it.name));\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      debug(\"End of changed methods processing\");\n    }","commit_id":"2ee2b1343ca0086dd38b87079061d87c2f2dba42","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void processRemovedClases(final DiffState state) {\n      debug(\"Processing removed classes:\");\n      for (final ClassRepr c : state.myClassDiff.removed()) {\n        myDelta.addDeletedClass(c);\n\n        final int fileName = myClassToSourceFile.get(c.name);\n\n        if (fileName > 0) {\n          myDelta.myChangedFiles.add(fileName);\n        }\n\n        if (!myEasyMode) {\n          myPresent.appendDependents(c, state.myDependants);\n          debug(\"Adding usages of class \", c.name);\n          state.myAffectedUsages.add(c.createUsage());\n        }\n      }\n      debug(\"End of removed classes processing.\");\n    }","id":61732,"modified_method":"private void processRemovedClases(final DiffState state) {\n      final Collection<ClassRepr> removed = state.myClassDiff.removed();\n      if (removed.isEmpty()) {\n        return;\n      }\n      debug(\"Processing removed classes:\");\n      for (final ClassRepr c : removed) {\n        myDelta.addDeletedClass(c);\n\n        final int fileName = myClassToSourceFile.get(c.name);\n\n        if (fileName > 0) {\n          myDelta.myChangedFiles.add(fileName);\n        }\n\n        if (!myEasyMode) {\n          myPresent.appendDependents(c, state.myDependants);\n          debug(\"Adding usages of class \", c.name);\n          state.myAffectedUsages.add(c.createUsage());\n        }\n      }\n      debug(\"End of removed classes processing.\");\n    }","commit_id":"2ee2b1343ca0086dd38b87079061d87c2f2dba42","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void processAddedMethods(final DiffState state, final ClassRepr.Diff diff, final ClassRepr it) {\n      debug(\"Processing added methods: \");\n      if (it.isAnnotation()) {\n        debug(\"Class is annotation, skipping method analysis\");\n        return;\n      }\n      final TIntHashSet affectedFiles = new TIntHashSet(DEFAULT_SET_CAPACITY, DEFAULT_SET_LOAD_FACTOR);\n      Ref<ClassRepr> oldItRef = null;\n      for (final MethodRepr m : diff.methods().added()) {\n        debug(\"Method: \", m.name);\n        if ((it.access & Opcodes.ACC_INTERFACE) > 0 ||\n            (it.access & Opcodes.ACC_ABSTRACT) > 0 ||\n            (m.access & Opcodes.ACC_ABSTRACT) > 0) {\n          debug(\"Class is abstract, or is interface, or added method in abstract => affecting all subclasses\");\n          myFuture.affectSubclasses(it.name, myAffectedFiles, state.myAffectedUsages, state.myDependants, false);\n        }\n\n        TIntHashSet propagated = null;\n\n        if ((m.access & Opcodes.ACC_PRIVATE) == 0 && m.name != myInitName) {\n          if (oldItRef == null) {\n            oldItRef = new Ref<ClassRepr>(getReprByName(it.name)); // lazy init\n          }\n          final ClassRepr oldIt = oldItRef.get();\n\n          if (oldIt != null && myPresent.hasOverriddenMethods(oldIt, MethodRepr.equalByJavaRules(m))) {\n\n          }\n          else {\n            if (m.myArgumentTypes.length > 0) {\n              propagated = myFuture.propagateMethodAccess(m.name, it.name);\n              debug(\"Conservative case on overriding methods, affecting method usages\");\n              myFuture.affectMethodUsages(m, propagated, m.createMetaUsage(myContext, it.name), state.myAffectedUsages, state.myDependants);\n            }\n          }\n        }\n\n        if ((m.access & Opcodes.ACC_PRIVATE) == 0) {\n          final Collection<Pair<MethodRepr, ClassRepr>> affectedMethods = myFuture.findAllMethodsBySpecificity(m, it);\n          final MethodRepr.Predicate overrides = MethodRepr.equalByJavaRules(m);\n\n          if (propagated == null) {\n            propagated = myFuture.propagateMethodAccess(m.name, it.name);\n          }\n\n          final Collection<MethodRepr> lessSpecific = it.findMethods(myFuture.lessSpecific(m));\n\n          for (final MethodRepr mm : lessSpecific) {\n            if (!mm.equals(m)) {\n              debug(\"Found less specific method, affecting method usages\");\n              myFuture.affectMethodUsages(mm, propagated, mm.createUsage(myContext, it.name), state.myAffectedUsages, state.myDependants);\n            }\n          }\n\n          debug(\"Processing affected by specificity methods\");\n          for (final Pair<MethodRepr, ClassRepr> pair : affectedMethods) {\n            final MethodRepr method = pair.first;\n            final ClassRepr methodClass = pair.second;\n\n            if (methodClass == MOCK_CLASS) {\n              continue;\n            }\n            final Boolean inheritorOf = myPresent.isInheritorOf(methodClass.name, it.name);\n            final boolean isInheritor = inheritorOf != null && inheritorOf;\n\n            debug(\"Method: \", method.name);\n            debug(\"Class : \", methodClass.name);\n\n            if (overrides.satisfy(method) && isInheritor) {\n              debug(\"Current method overrides that found\");\n\n              final int file = myClassToSourceFile.get(methodClass.name);\n\n              if (file > 0) {\n                affectedFiles.add(file);\n                debug(\"Affecting file \", file);\n              }\n            }\n            else {\n              debug(\"Current method does not override that found\");\n\n              final TIntHashSet yetPropagated = myPresent.propagateMethodAccess(method.name, it.name);\n\n              if (isInheritor) {\n                final TIntHashSet deps = myClassToClassDependency.get(methodClass.name);\n\n                if (deps != null) {\n                  addAll(state.myDependants, deps);\n                }\n\n                myFuture.affectMethodUsages(method, yetPropagated, method.createUsage(myContext, methodClass.name), state.myAffectedUsages,\n                                             state.myDependants);\n              }\n\n              debug(\"Affecting method usages for that found\");\n              myFuture.affectMethodUsages(method, yetPropagated, method.createUsage(myContext, it.name), state.myAffectedUsages,\n                                           state.myDependants);\n            }\n          }\n\n          final TIntHashSet subClasses = getAllSubclasses(it.name);\n\n          if (subClasses != null) {\n            subClasses.forEach(new TIntProcedure() {\n              @Override\n              public boolean execute(int subClass) {\n                final ClassRepr r = myFuture.reprByName(subClass);\n                if (r != null) {\n                  final int sourceFileName = myClassToSourceFile.get(subClass);\n                  if (sourceFileName > 0) {\n                    final int outerClass = r.getOuterClassName();\n                    if (myFuture.isMethodVisible(outerClass, m)) {\n                      affectedFiles.add(sourceFileName);\n                      debug(\"Affecting file due to local overriding: \", sourceFileName);\n                    }\n                  }\n                }\n                return true;\n              }\n            });\n          }\n        }\n      }\n      affectedFiles.forEach(new TIntProcedure() {\n        @Override\n        public boolean execute(int file) {\n          myAffectedFiles.add(new File(myContext.getValue(file)));\n          return true;\n        }\n      });\n      debug(\"End of added methods processing\");\n    }","id":61733,"modified_method":"private void processAddedMethods(final DiffState state, final ClassRepr.Diff diff, final ClassRepr it) {\n      final Collection<MethodRepr> added = diff.methods().added();\n      if (added.isEmpty()) {\n        return;\n      }\n      debug(\"Processing added methods: \");\n      if (it.isAnnotation()) {\n        debug(\"Class is annotation, skipping method analysis\");\n        return;\n      }\n      final TIntHashSet affectedFiles = new TIntHashSet(DEFAULT_SET_CAPACITY, DEFAULT_SET_LOAD_FACTOR);\n      Ref<ClassRepr> oldItRef = null;\n      for (final MethodRepr m : added) {\n        debug(\"Method: \", m.name);\n        if ((it.access & Opcodes.ACC_INTERFACE) > 0 ||\n            (it.access & Opcodes.ACC_ABSTRACT) > 0 ||\n            (m.access & Opcodes.ACC_ABSTRACT) > 0) {\n          debug(\"Class is abstract, or is interface, or added method in abstract => affecting all subclasses\");\n          myFuture.affectSubclasses(it.name, myAffectedFiles, state.myAffectedUsages, state.myDependants, false);\n        }\n\n        TIntHashSet propagated = null;\n\n        if ((m.access & Opcodes.ACC_PRIVATE) == 0 && m.name != myInitName) {\n          if (oldItRef == null) {\n            oldItRef = new Ref<ClassRepr>(getReprByName(it.name)); // lazy init\n          }\n          final ClassRepr oldIt = oldItRef.get();\n\n          if (oldIt != null && myPresent.hasOverriddenMethods(oldIt, MethodRepr.equalByJavaRules(m))) {\n\n          }\n          else {\n            if (m.myArgumentTypes.length > 0) {\n              propagated = myFuture.propagateMethodAccess(m.name, it.name);\n              debug(\"Conservative case on overriding methods, affecting method usages\");\n              myFuture.affectMethodUsages(m, propagated, m.createMetaUsage(myContext, it.name), state.myAffectedUsages, state.myDependants);\n            }\n          }\n        }\n\n        if ((m.access & Opcodes.ACC_PRIVATE) == 0) {\n          final Collection<Pair<MethodRepr, ClassRepr>> affectedMethods = myFuture.findAllMethodsBySpecificity(m, it);\n          final MethodRepr.Predicate overrides = MethodRepr.equalByJavaRules(m);\n\n          if (propagated == null) {\n            propagated = myFuture.propagateMethodAccess(m.name, it.name);\n          }\n\n          final Collection<MethodRepr> lessSpecific = it.findMethods(myFuture.lessSpecific(m));\n\n          for (final MethodRepr mm : lessSpecific) {\n            if (!mm.equals(m)) {\n              debug(\"Found less specific method, affecting method usages\");\n              myFuture.affectMethodUsages(mm, propagated, mm.createUsage(myContext, it.name), state.myAffectedUsages, state.myDependants);\n            }\n          }\n\n          debug(\"Processing affected by specificity methods\");\n          for (final Pair<MethodRepr, ClassRepr> pair : affectedMethods) {\n            final MethodRepr method = pair.first;\n            final ClassRepr methodClass = pair.second;\n\n            if (methodClass == MOCK_CLASS) {\n              continue;\n            }\n            final Boolean inheritorOf = myPresent.isInheritorOf(methodClass.name, it.name);\n            final boolean isInheritor = inheritorOf != null && inheritorOf;\n\n            debug(\"Method: \", method.name);\n            debug(\"Class : \", methodClass.name);\n\n            if (overrides.satisfy(method) && isInheritor) {\n              debug(\"Current method overrides that found\");\n\n              final int file = myClassToSourceFile.get(methodClass.name);\n\n              if (file > 0) {\n                affectedFiles.add(file);\n                debug(\"Affecting file \", file);\n              }\n            }\n            else {\n              debug(\"Current method does not override that found\");\n\n              final TIntHashSet yetPropagated = myPresent.propagateMethodAccess(method.name, it.name);\n\n              if (isInheritor) {\n                final TIntHashSet deps = myClassToClassDependency.get(methodClass.name);\n\n                if (deps != null) {\n                  addAll(state.myDependants, deps);\n                }\n\n                myFuture.affectMethodUsages(method, yetPropagated, method.createUsage(myContext, methodClass.name), state.myAffectedUsages,\n                                             state.myDependants);\n              }\n\n              debug(\"Affecting method usages for that found\");\n              myFuture.affectMethodUsages(method, yetPropagated, method.createUsage(myContext, it.name), state.myAffectedUsages,\n                                           state.myDependants);\n            }\n          }\n\n          final TIntHashSet subClasses = getAllSubclasses(it.name);\n\n          if (subClasses != null) {\n            subClasses.forEach(new TIntProcedure() {\n              @Override\n              public boolean execute(int subClass) {\n                final ClassRepr r = myFuture.reprByName(subClass);\n                if (r != null) {\n                  final int sourceFileName = myClassToSourceFile.get(subClass);\n                  if (sourceFileName > 0) {\n                    final int outerClass = r.getOuterClassName();\n                    if (myFuture.isMethodVisible(outerClass, m)) {\n                      affectedFiles.add(sourceFileName);\n                      debug(\"Affecting file due to local overriding: \", sourceFileName);\n                    }\n                  }\n                }\n                return true;\n              }\n            });\n          }\n        }\n      }\n      affectedFiles.forEach(new TIntProcedure() {\n        @Override\n        public boolean execute(int file) {\n          myAffectedFiles.add(new File(myContext.getValue(file)));\n          return true;\n        }\n      });\n      debug(\"End of added methods processing\");\n    }","commit_id":"2ee2b1343ca0086dd38b87079061d87c2f2dba42","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private boolean processAddedFields(final DiffState state, final ClassRepr.Diff diff, final ClassRepr classRepr) {\n      debug(\"Processing added fields\");\n\n      for (final FieldRepr f : diff.fields().added()) {\n        debug(\"Field: \", f.name);\n\n        final boolean fPrivate = (f.access & Opcodes.ACC_PRIVATE) > 0;\n        final boolean fProtected = (f.access & Opcodes.ACC_PROTECTED) > 0;\n        final boolean fPublic = (f.access & Opcodes.ACC_PUBLIC) > 0;\n        final boolean fPLocal = !fPrivate && !fProtected && !fPublic;\n\n        if (!fPrivate) {\n          final TIntHashSet subClasses = getAllSubclasses(classRepr.name);\n          subClasses.forEach(new TIntProcedure() {\n            @Override\n            public boolean execute(int subClass) {\n              final ClassRepr r = myFuture.reprByName(subClass);\n              if (r != null) {\n                final int sourceFileName = myClassToSourceFile.get(subClass);\n                if (sourceFileName > 0) {\n                  if (r.isLocal()) {\n                    debug(\"Affecting local subclass (introduced field can potentially hide surrounding method parameters/local variables): \", sourceFileName);\n                    myAffectedFiles.add(new File(myContext.getValue(sourceFileName)));\n                  }\n                  else {\n                    final int outerClass = r.getOuterClassName();\n                    if (!isEmpty(outerClass) && myFuture.isFieldVisible(outerClass, f)) {\n                      debug(\"Affecting inner subclass (introduced field can potentially hide surrounding class fields): \", sourceFileName);\n                      myAffectedFiles.add(new File(myContext.getValue(sourceFileName)));\n                    }\n                  }\n                }\n              }\n\n              debug(\"Affecting field usages referenced from subclass \", subClass);\n              final TIntHashSet propagated = myFuture.propagateFieldAccess(f.name, subClass);\n              myFuture.affectFieldUsages(f, propagated, f.createUsage(myContext, subClass), state.myAffectedUsages, state.myDependants);\n\n              final TIntHashSet deps = myClassToClassDependency.get(subClass);\n\n              if (deps != null) {\n                addAll(state.myDependants, deps);\n              }\n              return true;\n            }\n          });\n        }\n\n        final Collection<Pair<FieldRepr, ClassRepr>> overriddenFields = new HashSet<Pair<FieldRepr, ClassRepr>>();\n        myFuture.addOverriddenFields(f, classRepr, overriddenFields);\n\n        for (final Pair<FieldRepr, ClassRepr> p : overriddenFields) {\n          final FieldRepr ff = p.first;\n          final ClassRepr cc = p.second;\n\n          final boolean ffPrivate = (ff.access & Opcodes.ACC_PRIVATE) > 0;\n          final boolean ffProtected = (ff.access & Opcodes.ACC_PROTECTED) > 0;\n          final boolean ffPublic = (ff.access & Opcodes.ACC_PUBLIC) > 0;\n          final boolean ffPLocal = Difference.isPackageLocal(ff.access);\n\n          if (!ffPrivate) {\n            final TIntHashSet propagated = myPresent.propagateFieldAccess(ff.name, cc.name);\n            final Set<UsageRepr.Usage> localUsages = new HashSet<UsageRepr.Usage>();\n\n            debug(\"Affecting usages of overridden field in class \", cc.name);\n            myFuture.affectFieldUsages(ff, propagated, ff.createUsage(myContext, cc.name), localUsages, state.myDependants);\n\n            if (fPrivate || (fPublic && (ffPublic || ffPLocal)) || (fProtected && ffProtected) || (fPLocal && ffPLocal)) {\n\n            }\n            else {\n              Util.UsageConstraint constaint;\n\n              if ((ffProtected && fPublic) || (fProtected && ffPublic) || (ffPLocal && fProtected)) {\n                constaint = myFuture.new NegationConstraint(myFuture.new InheritanceConstraint(cc.name));\n              }\n              else if (ffPublic && ffPLocal) {\n                constaint = myFuture.new NegationConstraint(myFuture.new PackageConstraint(cc.getPackageName()));\n              }\n              else {\n                constaint =\n                  myFuture.new IntersectionConstraint(myFuture.new NegationConstraint(myFuture.new InheritanceConstraint(cc.name)),\n                                                       myFuture.new NegationConstraint(\n                                                         myFuture.new PackageConstraint(cc.getPackageName())));\n              }\n\n              for (final UsageRepr.Usage usage : localUsages) {\n                state.myUsageConstraints.put(usage, constaint);\n              }\n            }\n\n            state.myAffectedUsages.addAll(localUsages);\n          }\n        }\n      }\n      debug(\"End of added fields processing\");\n\n      return true;\n    }","id":61734,"modified_method":"private boolean processAddedFields(final DiffState state, final ClassRepr.Diff diff, final ClassRepr classRepr) {\n      final Collection<FieldRepr> added = diff.fields().added();\n      if (added.isEmpty()) {\n        return true;\n      }\n      debug(\"Processing added fields\");\n\n      for (final FieldRepr f : added) {\n        debug(\"Field: \", f.name);\n\n        final boolean fPrivate = (f.access & Opcodes.ACC_PRIVATE) > 0;\n        final boolean fProtected = (f.access & Opcodes.ACC_PROTECTED) > 0;\n        final boolean fPublic = (f.access & Opcodes.ACC_PUBLIC) > 0;\n        final boolean fPLocal = !fPrivate && !fProtected && !fPublic;\n\n        if (!fPrivate) {\n          final TIntHashSet subClasses = getAllSubclasses(classRepr.name);\n          subClasses.forEach(new TIntProcedure() {\n            @Override\n            public boolean execute(int subClass) {\n              final ClassRepr r = myFuture.reprByName(subClass);\n              if (r != null) {\n                final int sourceFileName = myClassToSourceFile.get(subClass);\n                if (sourceFileName > 0) {\n                  if (r.isLocal()) {\n                    debug(\"Affecting local subclass (introduced field can potentially hide surrounding method parameters/local variables): \", sourceFileName);\n                    myAffectedFiles.add(new File(myContext.getValue(sourceFileName)));\n                  }\n                  else {\n                    final int outerClass = r.getOuterClassName();\n                    if (!isEmpty(outerClass) && myFuture.isFieldVisible(outerClass, f)) {\n                      debug(\"Affecting inner subclass (introduced field can potentially hide surrounding class fields): \", sourceFileName);\n                      myAffectedFiles.add(new File(myContext.getValue(sourceFileName)));\n                    }\n                  }\n                }\n              }\n\n              debug(\"Affecting field usages referenced from subclass \", subClass);\n              final TIntHashSet propagated = myFuture.propagateFieldAccess(f.name, subClass);\n              myFuture.affectFieldUsages(f, propagated, f.createUsage(myContext, subClass), state.myAffectedUsages, state.myDependants);\n\n              final TIntHashSet deps = myClassToClassDependency.get(subClass);\n\n              if (deps != null) {\n                addAll(state.myDependants, deps);\n              }\n              return true;\n            }\n          });\n        }\n\n        final Collection<Pair<FieldRepr, ClassRepr>> overriddenFields = new HashSet<Pair<FieldRepr, ClassRepr>>();\n        myFuture.addOverriddenFields(f, classRepr, overriddenFields);\n\n        for (final Pair<FieldRepr, ClassRepr> p : overriddenFields) {\n          final FieldRepr ff = p.first;\n          final ClassRepr cc = p.second;\n\n          final boolean ffPrivate = (ff.access & Opcodes.ACC_PRIVATE) > 0;\n          final boolean ffProtected = (ff.access & Opcodes.ACC_PROTECTED) > 0;\n          final boolean ffPublic = (ff.access & Opcodes.ACC_PUBLIC) > 0;\n          final boolean ffPLocal = Difference.isPackageLocal(ff.access);\n\n          if (!ffPrivate) {\n            final TIntHashSet propagated = myPresent.propagateFieldAccess(ff.name, cc.name);\n            final Set<UsageRepr.Usage> localUsages = new HashSet<UsageRepr.Usage>();\n\n            debug(\"Affecting usages of overridden field in class \", cc.name);\n            myFuture.affectFieldUsages(ff, propagated, ff.createUsage(myContext, cc.name), localUsages, state.myDependants);\n\n            if (fPrivate || (fPublic && (ffPublic || ffPLocal)) || (fProtected && ffProtected) || (fPLocal && ffPLocal)) {\n\n            }\n            else {\n              Util.UsageConstraint constaint;\n\n              if ((ffProtected && fPublic) || (fProtected && ffPublic) || (ffPLocal && fProtected)) {\n                constaint = myFuture.new NegationConstraint(myFuture.new InheritanceConstraint(cc.name));\n              }\n              else if (ffPublic && ffPLocal) {\n                constaint = myFuture.new NegationConstraint(myFuture.new PackageConstraint(cc.getPackageName()));\n              }\n              else {\n                constaint =\n                  myFuture.new IntersectionConstraint(myFuture.new NegationConstraint(myFuture.new InheritanceConstraint(cc.name)),\n                                                       myFuture.new NegationConstraint(\n                                                         myFuture.new PackageConstraint(cc.getPackageName())));\n              }\n\n              for (final UsageRepr.Usage usage : localUsages) {\n                state.myUsageConstraints.put(usage, constaint);\n              }\n            }\n\n            state.myAffectedUsages.addAll(localUsages);\n          }\n        }\n      }\n      debug(\"End of added fields processing\");\n\n      return true;\n    }","commit_id":"2ee2b1343ca0086dd38b87079061d87c2f2dba42","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static void extractFromStatements(@NotNull final Project project,\n                                           @NotNull final Editor editor,\n                                           @NotNull final PyCodeFragment fragment,\n                                           @NotNull final PsiElement statement1,\n                                           @NotNull final PsiElement statement2) {\n    if (!fragment.getOutputVariables().isEmpty() && fragment.isReturnInstructionInside()) {\n      CommonRefactoringUtil.showErrorHint(project, editor,\n                                          PyBundle.message(\"refactoring.extract.method.error.cannot.perform.refactoring.with.local\"),\n                                          RefactoringBundle.message(\"error.title\"), \"refactoring.extractMethod\");\n      return;\n    }\n\n    final PyFunction function = PsiTreeUtil.getParentOfType(statement1, PyFunction.class);\n    final PyUtil.MethodFlags flags = function == null ? null : PyUtil.MethodFlags.of(function);\n    final boolean isClassMethod = flags != null && flags.isClassMethod();\n    final boolean isStaticMethod = flags != null && flags.isStaticMethod();\n\n    // collect statements\n    final List<PsiElement> elementsRange = PyPsiUtils.collectElements(statement1, statement2);\n    if (elementsRange.isEmpty()) {\n      CommonRefactoringUtil.showErrorHint(project, editor,\n                                          \"Cannot perform refactoring from empty code fragment\",\n                                          RefactoringBundle.message(\"extract.method.title\"), \"refactoring.extractMethod\");\n      return;\n    }\n\n    final Pair<String, AbstractVariableData[]> data = getNameAndVariableData(project, fragment, statement1, isClassMethod, isStaticMethod);\n    if (data.first == null || data.second == null) {\n      return;\n    }\n\n    final String methodName = data.first;\n    final AbstractVariableData[] variableData = data.second;\n\n    final SimpleDuplicatesFinder finder = new SimpleDuplicatesFinder(statement1, statement2, variableData);\n\n    CommandProcessor.getInstance().executeCommand(project, new Runnable() {\n      public void run() {\n        ApplicationManager.getApplication().runWriteAction(new Runnable() {\n          public void run() {\n            final StringBuilder builder = new StringBuilder();\n            final List<PsiElement> newMethodElements = new ArrayList<PsiElement>(elementsRange);\n            final boolean hasOutputVariables = !fragment.getOutputVariables().isEmpty();\n\n            if (hasOutputVariables) {\n              // Generate return modified variables statements\n              for (String s : fragment.getOutputVariables()) {\n                if (builder.length() != 0) {\n                  builder.append(\", \");\n                }\n                builder.append(s);\n              }\n\n              final PsiElement returnStatement =\n                PyElementGenerator.getInstance(project).createFromText(LanguageLevel.forElement(statement1),\n                                                                       PyElement.class, \"return \" + builder.toString());\n              newMethodElements.add(returnStatement);\n            }\n\n            // Generate method\n            PyFunction generatedMethod = generateMethodFromElements(project, methodName, variableData, newMethodElements, flags);\n            generatedMethod = insertGeneratedMethod(statement1, generatedMethod);\n\n            // Process parameters\n            final PsiElement firstElement = elementsRange.get(0);\n            final boolean isMethod = PyPsiUtils.isMethodContext(firstElement);\n            processParameters(project, generatedMethod, variableData, isMethod, isClassMethod, isStaticMethod);\n            processGlobalWrites(generatedMethod, fragment);\n            processNonlocalWrites(generatedMethod, fragment);\n\n            // Generate call element\n            if (hasOutputVariables) {\n              builder.append(\" = \");\n            }\n            else if (fragment.isReturnInstructionInside()) {\n              builder.append(\"return \");\n            }\n            if (fragment.isYieldInside()) {\n              builder.append(\"yield from \");\n            }\n            if (isMethod){\n              appendSelf(firstElement, builder, isStaticMethod);\n            }\n            builder.append(methodName).append(\"(\");\n            builder.append(createCallArgsString(variableData)).append(\")\");\n            PsiElement callElement = PyElementGenerator.getInstance(project).createFromText(LanguageLevel.forElement(statement1),\n                                                                                            PyElement.class, builder.toString());\n\n            // replace statements with call\n            callElement = replaceElements(elementsRange, callElement);\n            callElement = CodeInsightUtilCore.forcePsiPostprocessAndRestoreElement(callElement);\n            if (callElement != null)\n              processDuplicates(callElement, generatedMethod, finder, editor);\n\n            // Set editor\n            setSelectionAndCaret(editor, callElement);\n          }\n        });\n      }\n    }, \"Extract method\", null);\n  }","id":61735,"modified_method":"public static void extractFromStatements(@NotNull final Project project,\n                                           @NotNull final Editor editor,\n                                           @NotNull final PyCodeFragment fragment,\n                                           @NotNull final PsiElement statement1,\n                                           @NotNull final PsiElement statement2) {\n    if (!fragment.getOutputVariables().isEmpty() && fragment.isReturnInstructionInside()) {\n      CommonRefactoringUtil.showErrorHint(project, editor,\n                                          PyBundle.message(\"refactoring.extract.method.error.cannot.perform.refactoring.with.local\"),\n                                          RefactoringBundle.message(\"error.title\"), \"refactoring.extractMethod\");\n      return;\n    }\n\n    final PyFunction function = PsiTreeUtil.getParentOfType(statement1, PyFunction.class);\n    final PyUtil.MethodFlags flags = function == null ? null : PyUtil.MethodFlags.of(function);\n    final boolean isClassMethod = flags != null && flags.isClassMethod();\n    final boolean isStaticMethod = flags != null && flags.isStaticMethod();\n\n    // collect statements\n    final List<PsiElement> elementsRange = PyPsiUtils.collectElements(statement1, statement2);\n    if (elementsRange.isEmpty()) {\n      CommonRefactoringUtil.showErrorHint(project, editor,\n                                          \"Cannot perform refactoring from empty code fragment\",\n                                          RefactoringBundle.message(\"extract.method.title\"), \"refactoring.extractMethod\");\n      return;\n    }\n\n    final Pair<String, AbstractVariableData[]> data = getNameAndVariableData(project, fragment, statement1, isClassMethod, isStaticMethod);\n    if (data.first == null || data.second == null) {\n      return;\n    }\n\n    final String methodName = data.first;\n    final AbstractVariableData[] variableData = data.second;\n\n    final SimpleDuplicatesFinder finder = new SimpleDuplicatesFinder(statement1, statement2, variableData, fragment.getOutputVariables());\n\n    CommandProcessor.getInstance().executeCommand(project, new Runnable() {\n      public void run() {\n        ApplicationManager.getApplication().runWriteAction(new Runnable() {\n          public void run() {\n            final StringBuilder builder = new StringBuilder();\n            final List<PsiElement> newMethodElements = new ArrayList<PsiElement>(elementsRange);\n            final boolean hasOutputVariables = !fragment.getOutputVariables().isEmpty();\n\n            if (hasOutputVariables) {\n              // Generate return modified variables statements\n              for (String s : fragment.getOutputVariables()) {\n                if (builder.length() != 0) {\n                  builder.append(\", \");\n                }\n                builder.append(s);\n              }\n\n              final PsiElement returnStatement =\n                PyElementGenerator.getInstance(project).createFromText(LanguageLevel.forElement(statement1),\n                                                                       PyElement.class, \"return \" + builder.toString());\n              newMethodElements.add(returnStatement);\n            }\n\n            // Generate method\n            PyFunction generatedMethod = generateMethodFromElements(project, methodName, variableData, newMethodElements, flags);\n            generatedMethod = insertGeneratedMethod(statement1, generatedMethod);\n\n            // Process parameters\n            final PsiElement firstElement = elementsRange.get(0);\n            final boolean isMethod = PyPsiUtils.isMethodContext(firstElement);\n            processParameters(project, generatedMethod, variableData, isMethod, isClassMethod, isStaticMethod);\n            processGlobalWrites(generatedMethod, fragment);\n            processNonlocalWrites(generatedMethod, fragment);\n\n            // Generate call element\n            if (hasOutputVariables) {\n              builder.append(\" = \");\n            }\n            else if (fragment.isReturnInstructionInside()) {\n              builder.append(\"return \");\n            }\n            if (fragment.isYieldInside()) {\n              builder.append(\"yield from \");\n            }\n            if (isMethod){\n              appendSelf(firstElement, builder, isStaticMethod);\n            }\n            builder.append(methodName).append(\"(\");\n            builder.append(createCallArgsString(variableData)).append(\")\");\n            PsiElement callElement = PyElementGenerator.getInstance(project).createFromText(LanguageLevel.forElement(statement1),\n                                                                                            PyElement.class, builder.toString());\n\n            // replace statements with call\n            callElement = replaceElements(elementsRange, callElement);\n            callElement = CodeInsightUtilCore.forcePsiPostprocessAndRestoreElement(callElement);\n            if (callElement != null)\n              processDuplicates(callElement, generatedMethod, finder, editor);\n\n            // Set editor\n            setSelectionAndCaret(editor, callElement);\n          }\n        });\n      }\n    }, \"Extract method\", null);\n  }","commit_id":"938f5c7ba612f6cba39b084b8205fd88cfdffc07","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static void extractFromExpression(@NotNull final Project project,\n                                           final Editor editor,\n                                           final PyCodeFragment fragment,\n                                           final PsiElement expression) {\n    if (!fragment.getOutputVariables().isEmpty()){\n      CommonRefactoringUtil.showErrorHint(project, editor,\n                                          \"Cannot perform refactoring from expression with local variables modifications inside code fragment\",\n                                          RefactoringBundle.message(\"error.title\"), \"refactoring.extractMethod\");\n      return;\n    }\n\n    if (fragment.isReturnInstructionInside()){\n      CommonRefactoringUtil.showErrorHint(project, editor,\n                                          \"Cannot extract method with return instructions inside code fragment\",\n                                          RefactoringBundle.message(\"error.title\"), \"refactoring.extractMethod\");\n      return;\n    }\n\n    PyFunction function = PsiTreeUtil.getParentOfType(expression, PyFunction.class);\n    final PyUtil.MethodFlags flags = function == null ? null : PyUtil.MethodFlags.of(function);\n    final boolean isClassMethod = flags != null && flags.isClassMethod();\n    final boolean isStaticMethod = flags != null && flags.isClassMethod();\n\n    final Pair<String, AbstractVariableData[]> data = getNameAndVariableData(project, fragment, expression, isClassMethod, isStaticMethod);\n    if (data.first == null || data.second == null) {\n      return;\n    }\n\n    final String methodName = data.first;\n    final AbstractVariableData[] variableData = data.second;\n\n    if (fragment.getOutputVariables().isEmpty()) {\n      CommandProcessor.getInstance().executeCommand(project, new Runnable() {\n        @Override\n        public void run() {\n          ApplicationManager.getApplication().runWriteAction(new Runnable() {\n            @Override\n            public void run() {\n              // Generate method\n              PyFunction generatedMethod = generateMethodFromExpression(project, methodName, variableData, expression, flags);\n              generatedMethod = insertGeneratedMethod(expression, generatedMethod);\n\n              // Process parameters\n              final boolean isMethod = PyPsiUtils.isMethodContext(expression);\n              processParameters(project, generatedMethod, variableData, isMethod, isClassMethod, isStaticMethod);\n\n              // Generating call element\n              final StringBuilder builder = new StringBuilder();\n              if (fragment.isYieldInside()) {\n                builder.append(\"yield from \");\n              } else {\n                builder.append(\"return \");\n              }\n              if (isMethod){\n                appendSelf(expression, builder, isStaticMethod);\n              }\n              builder.append(methodName);\n              builder.append(\"(\").append(createCallArgsString(variableData)).append(\")\");\n              final PyElementGenerator generator = PyElementGenerator.getInstance(project);\n              final PyElement generated = generator.createFromText(LanguageLevel.forElement(expression), PyElement.class, builder.toString());\n              PsiElement callElement = null;\n              if (generated instanceof PyReturnStatement) {\n                callElement = ((PyReturnStatement)generated).getExpression();\n              }\n              else if (generated instanceof PyExpressionStatement) {\n                callElement = ((PyExpressionStatement)generated).getExpression();\n              }\n\n              // replace statements with call\n              if (callElement != null) {\n                callElement = PyReplaceExpressionUtil.replaceExpression(expression, callElement);\n              }\n\n              // Set editor\n              setSelectionAndCaret(editor, callElement);\n            }\n          });\n        }\n      }, \"Extract method\", null);\n    }\n  }","id":61736,"modified_method":"public static void extractFromExpression(@NotNull final Project project,\n                                           final Editor editor,\n                                           final PyCodeFragment fragment,\n                                           @NotNull final PsiElement expression) {\n    if (!fragment.getOutputVariables().isEmpty()){\n      CommonRefactoringUtil.showErrorHint(project, editor,\n                                          \"Cannot perform refactoring from expression with local variables modifications inside code fragment\",\n                                          RefactoringBundle.message(\"error.title\"), \"refactoring.extractMethod\");\n      return;\n    }\n\n    if (fragment.isReturnInstructionInside()){\n      CommonRefactoringUtil.showErrorHint(project, editor,\n                                          \"Cannot extract method with return instructions inside code fragment\",\n                                          RefactoringBundle.message(\"error.title\"), \"refactoring.extractMethod\");\n      return;\n    }\n\n    PyFunction function = PsiTreeUtil.getParentOfType(expression, PyFunction.class);\n    final PyUtil.MethodFlags flags = function == null ? null : PyUtil.MethodFlags.of(function);\n    final boolean isClassMethod = flags != null && flags.isClassMethod();\n    final boolean isStaticMethod = flags != null && flags.isClassMethod();\n\n    final Pair<String, AbstractVariableData[]> data = getNameAndVariableData(project, fragment, expression, isClassMethod, isStaticMethod);\n    if (data.first == null || data.second == null) {\n      return;\n    }\n\n    final String methodName = data.first;\n    final AbstractVariableData[] variableData = data.second;\n\n    final SimpleDuplicatesFinder finder = new SimpleDuplicatesFinder(expression, expression, variableData, fragment.getOutputVariables());\n    if (fragment.getOutputVariables().isEmpty()) {\n      CommandProcessor.getInstance().executeCommand(project, new Runnable() {\n        @Override\n        public void run() {\n          ApplicationManager.getApplication().runWriteAction(new Runnable() {\n            @Override\n            public void run() {\n              // Generate method\n              PyFunction generatedMethod = generateMethodFromExpression(project, methodName, variableData, expression, flags);\n              generatedMethod = insertGeneratedMethod(expression, generatedMethod);\n\n              // Process parameters\n              final boolean isMethod = PyPsiUtils.isMethodContext(expression);\n              processParameters(project, generatedMethod, variableData, isMethod, isClassMethod, isStaticMethod);\n\n              // Generating call element\n              final StringBuilder builder = new StringBuilder();\n              if (fragment.isYieldInside()) {\n                builder.append(\"yield from \");\n              } else {\n                builder.append(\"return \");\n              }\n              if (isMethod){\n                appendSelf(expression, builder, isStaticMethod);\n              }\n              builder.append(methodName);\n              builder.append(\"(\").append(createCallArgsString(variableData)).append(\")\");\n              final PyElementGenerator generator = PyElementGenerator.getInstance(project);\n              final PyElement generated = generator.createFromText(LanguageLevel.forElement(expression), PyElement.class, builder.toString());\n              PsiElement callElement = null;\n              if (generated instanceof PyReturnStatement) {\n                callElement = ((PyReturnStatement)generated).getExpression();\n              }\n              else if (generated instanceof PyExpressionStatement) {\n                callElement = ((PyExpressionStatement)generated).getExpression();\n              }\n\n              // replace statements with call\n              if (callElement != null) {\n                callElement = PyReplaceExpressionUtil.replaceExpression(expression, callElement);\n              }\n              if (callElement != null)\n                processDuplicates(callElement, generatedMethod, finder, editor);\n              // Set editor\n              setSelectionAndCaret(editor, callElement);\n            }\n          });\n        }\n      }, \"Extract method\", null);\n    }\n  }","commit_id":"938f5c7ba612f6cba39b084b8205fd88cfdffc07","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static PsiElement replaceElements(@NotNull final SimpleMatch match, @NotNull final PsiElement callElement) {\n    final List<PsiElement> elementsRange = PyPsiUtils.collectElements(match.getStartElement(), match.getEndElement());\n    final Map<String, String> changedParameters = match.getChangedParameters();\n    if (callElement instanceof PyExpressionStatement) {\n      final PyExpression expression = ((PyExpressionStatement)callElement).getExpression();\n      if (expression instanceof PyCallExpression) {\n        final Set<String> keys = changedParameters.keySet();\n        final PyArgumentList argumentList = ((PyCallExpression)expression).getArgumentList();\n        if (argumentList != null) {\n          for (PyExpression arg : argumentList.getArguments()) {\n            final String argText = arg.getText();\n            if (argText != null && keys.contains(argText)) {\n              arg.replace(PyElementGenerator.getInstance(callElement.getProject()).createExpressionFromText(\n                LanguageLevel.forElement(callElement),\n                changedParameters.get(argText)));\n            }\n          }\n        }\n      }\n    }\n    return replaceElements(elementsRange, callElement);\n  }","id":61737,"modified_method":"private static PsiElement replaceElements(@NotNull final SimpleMatch match, @NotNull final PsiElement element) {\n    final List<PsiElement> elementsRange = PyPsiUtils.collectElements(match.getStartElement(), match.getEndElement());\n    final Map<String, String> changedParameters = match.getChangedParameters();\n    PsiElement callElement = element;\n    final PyElementGenerator generator = PyElementGenerator.getInstance(callElement.getProject());\n    if (element instanceof PyAssignmentStatement) {\n      final PyExpression value = ((PyAssignmentStatement)element).getAssignedValue();\n      if (value != null) callElement = value;\n      final PyExpression[] targets = ((PyAssignmentStatement)element).getTargets();\n      if (targets.length == 1) {\n        final String output = match.getChangedOutput();\n        final PyExpression text = generator.createFromText(LanguageLevel.forElement(callElement), PyAssignmentStatement.class,\n                                                           output + \" = 1\").getTargets()[0];\n        targets[0].replace(text);\n      }\n    }\n    if (element instanceof PyExpressionStatement) {\n      callElement = ((PyExpressionStatement)element).getExpression();\n    }\n    if (callElement instanceof PyCallExpression) {\n      final Set<String> keys = changedParameters.keySet();\n      final PyArgumentList argumentList = ((PyCallExpression)callElement).getArgumentList();\n      if (argumentList != null) {\n        for (PyExpression arg : argumentList.getArguments()) {\n          final String argText = arg.getText();\n          if (argText != null && keys.contains(argText)) {\n            arg.replace(generator.createExpressionFromText(\n              LanguageLevel.forElement(callElement),\n              changedParameters.get(argText)));\n          }\n        }\n      }\n    }\n    return replaceElements(elementsRange, element);\n  }","commit_id":"938f5c7ba612f6cba39b084b8205fd88cfdffc07","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private boolean attributeIsWritable(@NotNull PyClass qualifierClass,\n                                        @NotNull PyClass declaringClass,\n                                        @NotNull PyTargetExpression target) {\n      return attributeIsWritableInClass(qualifierClass, declaringClass, target) ||\n             qualifierClass\n               .getAncestorClasses(myTypeEvalContext)\n               .stream()\n               .filter(ancestorClass -> !PyUtil.isObjectClass(ancestorClass))\n               .anyMatch(ancestorClass -> attributeIsWritableInClass(ancestorClass, declaringClass, target));\n    }","id":61738,"modified_method":"private boolean attributeIsWritable(@NotNull PyClass qualifierClass, @NotNull PyClass declaringClass, @NotNull String targetName) {\n      return attributeIsWritableInClass(qualifierClass, declaringClass, targetName) ||\n             qualifierClass\n               .getAncestorClasses(myTypeEvalContext)\n               .stream()\n               .filter(ancestorClass -> !PyUtil.isObjectClass(ancestorClass))\n               .anyMatch(ancestorClass -> attributeIsWritableInClass(ancestorClass, declaringClass, targetName));\n    }","commit_id":"92d85947f3ca7e837cfa24a86523e43944f8c5d2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static boolean attributeIsWritableInClass(@NotNull PyClass cls,\n                                                      @NotNull PyClass declaringClass,\n                                                      @NotNull PyTargetExpression target) {\n      final List<String> ownSlots = cls.getOwnSlots();\n\n      return ownSlots == null ||\n             ownSlots.contains(PyNames.DICT) ||\n             (LanguageLevel.forElement(target).isPy3K() &&\n              cls.equals(declaringClass) &&\n              ownSlots.contains(target.getName()));\n    }","id":61739,"modified_method":"private boolean attributeIsWritableInClass(@NotNull PyClass cls, @NotNull PyClass declaringClass, @NotNull String targetName) {\n      final List<String> ownSlots = cls.getOwnSlots();\n\n      if (ownSlots == null || ownSlots.contains(PyNames.DICT)) {\n        return true;\n      }\n\n      if (!cls.equals(declaringClass) || !ownSlots.contains(targetName)) {\n        return false;\n      }\n\n      return LanguageLevel.forElement(declaringClass).isAtLeast(LanguageLevel.PYTHON30) ||\n             declaringClass.findClassAttribute(targetName, false, myTypeEvalContext) == null;\n    }","commit_id":"92d85947f3ca7e837cfa24a86523e43944f8c5d2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void checkAttributeExpression(@NotNull PyTargetExpression target) {\n      final String targetName = target.getName();\n      final PyExpression qualifier = target.getQualifier();\n\n      if (targetName == null || qualifier == null) {\n        return;\n      }\n\n      final PyType qualifierType = myTypeEvalContext.getType(qualifier);\n\n      if (qualifierType instanceof PyClassType) {\n        final PyClassType qualifierClassType = (PyClassType)qualifierType;\n\n        if (!qualifierClassType.isDefinition()) {\n          final PyClass qualifierClass = qualifierClassType.getPyClass();\n\n          PyUtil\n            .multiResolveTopPriority(target.getReference(PyResolveContext.noImplicits().withTypeEvalContext(myTypeEvalContext)))\n            .stream()\n            .filter(PyTargetExpression.class::isInstance)\n            .map(declaration -> ((PyTargetExpression)declaration).getContainingClass())\n            .filter(declaringClass -> declaringClass != null && !attributeIsWritable(qualifierClass, declaringClass, target))\n            .findFirst()\n            .ifPresent(\n              cls -> registerProblem(target, String.format(\"'%s' object attribute '%s' is read-only\", qualifierClass.getName(), targetName))\n            );\n        }\n      }\n    }","id":61740,"modified_method":"private void checkAttributeExpression(@NotNull PyTargetExpression target) {\n      final String targetName = target.getName();\n      final PyExpression qualifier = target.getQualifier();\n\n      if (targetName == null || qualifier == null) {\n        return;\n      }\n\n      final PyType qualifierType = myTypeEvalContext.getType(qualifier);\n\n      if (qualifierType instanceof PyClassType) {\n        final PyClassType qualifierClassType = (PyClassType)qualifierType;\n\n        if (!qualifierClassType.isDefinition()) {\n          final PyClass qualifierClass = qualifierClassType.getPyClass();\n\n          PyUtil\n            .multiResolveTopPriority(target.getReference(PyResolveContext.noImplicits().withTypeEvalContext(myTypeEvalContext)))\n            .stream()\n            .filter(PyTargetExpression.class::isInstance)\n            .map(declaration -> ((PyTargetExpression)declaration).getContainingClass())\n            .filter(declaringClass -> declaringClass != null && !attributeIsWritable(qualifierClass, declaringClass, targetName))\n            .findFirst()\n            .ifPresent(\n              cls -> registerProblem(target, String.format(\"'%s' object attribute '%s' is read-only\", qualifierClass.getName(), targetName))\n            );\n        }\n      }\n    }","commit_id":"92d85947f3ca7e837cfa24a86523e43944f8c5d2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private DiagnosticImpl(int severity, String message, EObject source, Integer feature) {\n\t\t\tsuper();\n\t\t\tthis.severity = severity;\n\t\t\tthis.message = message;\n\t\t\tthis.source = source;\n\t\t\tthis.feature = feature;\n\t\t}","id":61741,"modified_method":"private DiagnosticImpl(int severity, String message, EObject source, Integer feature, CheckType checkType) {\n\t\t\tsuper();\n\t\t\tthis.severity = severity;\n\t\t\tthis.message = message;\n\t\t\tthis.source = source;\n\t\t\tthis.feature = feature;\n\t\t\tthis.checkType = checkType;\n\t\t}","commit_id":"e0fb958892b87548d2ef0af18a7d6a9fd244a846","url":"https://github.com/eclipse/xtext"},{"original_method":"protected void error(String string, Integer feature) {\n\t\tthis.state.get().hasErrors = true;\n\t\tstate.get().chain.add(new DiagnosticImpl(Diagnostic.ERROR, string, state.get().currentObject, feature));\n\t}","id":61742,"modified_method":"protected void error(String string, Integer feature) {\n\t\tthis.state.get().hasErrors = true;\n\t\tstate.get().chain.add(new DiagnosticImpl(Diagnostic.ERROR, string, state.get().currentObject, feature, state.get().currentCheckType));\n\t}","commit_id":"e0fb958892b87548d2ef0af18a7d6a9fd244a846","url":"https://github.com/eclipse/xtext"},{"original_method":"public void invoke(State state) {\n\t\t\tif (instance.state.get() != null && instance.state.get() != state)\n\t\t\t\tthrow new IllegalStateException(\"State is already assigned.\");\n\t\t\tboolean wasNull = instance.state.get() == null;\n\t\t\tif (wasNull)\n\t\t\t\tinstance.state.set(state);\n\t\t\ttry {\n\t\t\t\tCheck annotation = method.getAnnotation(Check.class);\n\t\t\t\tif (!state.checkMode.shouldCheck(annotation.value()))\n\t\t\t\t\treturn;\n\t\t\t\ttry {\n\t\t\t\t\tstate.currentMethod = method;\n\t\t\t\t\tmethod.setAccessible(true);\n\t\t\t\t\tmethod.invoke(instance, state.currentObject);\n\t\t\t\t}\n\t\t\t\tcatch (IllegalArgumentException e) {\n\t\t\t\t\tlog.error(e.getMessage(), e);\n\t\t\t\t}\n\t\t\t\tcatch (IllegalAccessException e) {\n\t\t\t\t\tlog.error(e.getMessage(), e);\n\t\t\t\t}\n\t\t\t\tcatch (InvocationTargetException e) {\n\t\t\t\t\t// ignore GuardException, check is just not evaluated if\n\t\t\t\t\t// guard is false\n\t\t\t\t\t// ignore NullPointerException, as not having to check for\n\t\t\t\t\t// NPEs all the time is a convenience feature\n\t\t\t\t\tThrowable targetException = e.getTargetException();\n\t\t\t\t\tif (!(targetException instanceof GuardException)\n\t\t\t\t\t\t\t&& !(targetException instanceof NullPointerException))\n\t\t\t\t\t\tthrow new RuntimeException(targetException);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfinally {\n\t\t\t\tif (wasNull)\n\t\t\t\t\tinstance.state.set(null);\n\t\t\t}\n\t\t}","id":61743,"modified_method":"public void invoke(State state) {\n\t\t\tif (instance.state.get() != null && instance.state.get() != state)\n\t\t\t\tthrow new IllegalStateException(\"State is already assigned.\");\n\t\t\tboolean wasNull = instance.state.get() == null;\n\t\t\tif (wasNull)\n\t\t\t\tinstance.state.set(state);\n\t\t\ttry {\n\t\t\t\tCheck annotation = method.getAnnotation(Check.class);\n\t\t\t\tif (!state.checkMode.shouldCheck(annotation.value()))\n\t\t\t\t\treturn;\n\t\t\t\ttry {\n\t\t\t\t\tstate.currentMethod = method;\n\t\t\t\t\tstate.currentCheckType = annotation.value();\n\t\t\t\t\tmethod.setAccessible(true);\n\t\t\t\t\tmethod.invoke(instance, state.currentObject);\n\t\t\t\t}\n\t\t\t\tcatch (IllegalArgumentException e) {\n\t\t\t\t\tlog.error(e.getMessage(), e);\n\t\t\t\t}\n\t\t\t\tcatch (IllegalAccessException e) {\n\t\t\t\t\tlog.error(e.getMessage(), e);\n\t\t\t\t}\n\t\t\t\tcatch (InvocationTargetException e) {\n\t\t\t\t\t// ignore GuardException, check is just not evaluated if\n\t\t\t\t\t// guard is false\n\t\t\t\t\t// ignore NullPointerException, as not having to check for\n\t\t\t\t\t// NPEs all the time is a convenience feature\n\t\t\t\t\tThrowable targetException = e.getTargetException();\n\t\t\t\t\tif (!(targetException instanceof GuardException)\n\t\t\t\t\t\t\t&& !(targetException instanceof NullPointerException))\n\t\t\t\t\t\tthrow new RuntimeException(targetException);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfinally {\n\t\t\t\tif (wasNull)\n\t\t\t\t\tinstance.state.set(null);\n\t\t\t}\n\t\t}","commit_id":"e0fb958892b87548d2ef0af18a7d6a9fd244a846","url":"https://github.com/eclipse/xtext"},{"original_method":"protected void warning(String string, Integer feature) {\n\t\tstate.get().chain.add(new DiagnosticImpl(Diagnostic.WARNING, string, state.get().currentObject, feature));\n\t}","id":61744,"modified_method":"protected void warning(String string, Integer feature) {\n\t\tstate.get().chain.add(new DiagnosticImpl(Diagnostic.WARNING, string, state.get().currentObject, feature,  state.get().currentCheckType));\n\t}","commit_id":"e0fb958892b87548d2ef0af18a7d6a9fd244a846","url":"https://github.com/eclipse/xtext"},{"original_method":"public ValidationJob create(IStateAccess<XtextResource> xtextDocument, IFile iFile, CheckMode checkMode, String markerId, boolean deleteOldMarkers) {\n\t\treturn new ValidationJob(xtextResourceChecker, xtextDocument, iFile, checkMode, markerId, deleteOldMarkers);\n\t}","id":61745,"modified_method":"public ValidationJob create(IStateAccess<XtextResource> xtextDocument, IFile iFile, CheckMode checkMode, boolean deleteOldMarkers) {\n\t\treturn new ValidationJob(xtextResourceChecker, xtextDocument, iFile, checkMode, deleteOldMarkers);\n\t}","commit_id":"e0fb958892b87548d2ef0af18a7d6a9fd244a846","url":"https://github.com/eclipse/xtext"},{"original_method":"private Map<String, Object> markerFromEValidatorDiagnostic(Diagnostic diagnostic) {\n\t\tif (diagnostic.getSeverity() == Diagnostic.OK)\n\t\t\treturn null;\n\t\tMap<String, Object> map = new HashMap<String, Object>();\n\t\tint sever = IMarker.SEVERITY_ERROR;\n\t\tswitch (diagnostic.getSeverity()) {\n\t\t\tcase Diagnostic.WARNING:\n\t\t\t\tsever = IMarker.SEVERITY_WARNING;\n\t\t\t\tbreak;\n\t\t\tcase Diagnostic.INFO:\n\t\t\t\tsever = IMarker.SEVERITY_INFO;\n\t\t\t\tbreak;\n\t\t}\n\t\tmap.put(IMarker.SEVERITY, sever);\n\t\tIterator<?> data = diagnostic.getData().iterator();\n\t\t// causer is the first element see Diagnostician.getData\n\t\tObject causer = data.next();\n\t\tif (causer instanceof EObject) {\n\t\t\tEObject ele = (EObject) causer;\n\t\t\tNodeAdapter nodeAdapter = NodeUtil.getNodeAdapter(ele);\n\t\t\tif (nodeAdapter != null) {\n\t\t\t\tAbstractNode parserNode = nodeAdapter.getParserNode();\n\t\t\t\t// feature is the second element see Diagnostician.getData\n\t\t\t\tObject feature = data.hasNext() ? data.next() : null;\n\t\t\t\tEStructuralFeature structuralFeature = resolveStructuralFeature(ele, feature);\n\t\t\t\tif (structuralFeature != null) {\n\t\t\t\t\tList<AbstractNode> nodes = NodeUtil.findNodesForFeature(ele, structuralFeature);\n\t\t\t\t\tif (!nodes.isEmpty())\n\t\t\t\t\t\tparserNode = nodes.iterator().next();\n\t\t\t\t}\n\t\t\t\tmap.put(IMarker.LINE_NUMBER, Integer.valueOf(parserNode.getLine()));\n\t\t\t\tint offset = parserNode.getOffset();\n\t\t\t\tmap.put(IMarker.CHAR_START, Integer.valueOf(offset));\n\t\t\t\tmap.put(IMarker.CHAR_END, Integer.valueOf(offset + parserNode.getLength()));\n\t\t\t}\n\t\t}\n\t\tmap.put(IMarker.MESSAGE, diagnostic.getMessage());\n\t\tmap.put(IMarker.PRIORITY, Integer.valueOf(IMarker.PRIORITY_LOW));\n\t\treturn map;\n\t}","id":61746,"modified_method":"private Map<String, Object> markerFromEValidatorDiagnostic(Diagnostic diagnostic) {\n\t\tif (diagnostic.getSeverity() == Diagnostic.OK)\n\t\t\treturn null;\n\t\tMap<String, Object> map = new HashMap<String, Object>();\n\t\tint sever = IMarker.SEVERITY_ERROR;\n\t\tswitch (diagnostic.getSeverity()) {\n\t\t\tcase Diagnostic.WARNING:\n\t\t\t\tsever = IMarker.SEVERITY_WARNING;\n\t\t\t\tbreak;\n\t\t\tcase Diagnostic.INFO:\n\t\t\t\tsever = IMarker.SEVERITY_INFO;\n\t\t\t\tbreak;\n\t\t}\n\t\tmap.put(IMarker.SEVERITY, sever);\n\t\tIterator<?> data = diagnostic.getData().iterator();\n\t\t// causer is the first element see Diagnostician.getData\n\t\tObject causer = data.next();\n\t\tif (causer instanceof EObject) {\n\t\t\tEObject ele = (EObject) causer;\n\t\t\tNodeAdapter nodeAdapter = NodeUtil.getNodeAdapter(ele);\n\t\t\tif (nodeAdapter != null) {\n\t\t\t\tAbstractNode parserNode = nodeAdapter.getParserNode();\n\t\t\t\t// feature is the second element see Diagnostician.getData\n\t\t\t\tObject feature = data.hasNext() ? data.next() : null;\n\t\t\t\tEStructuralFeature structuralFeature = resolveStructuralFeature(ele, feature);\n\t\t\t\tif (structuralFeature != null) {\n\t\t\t\t\tList<AbstractNode> nodes = NodeUtil.findNodesForFeature(ele, structuralFeature);\n\t\t\t\t\tif (!nodes.isEmpty())\n\t\t\t\t\t\tparserNode = nodes.iterator().next();\n\t\t\t\t}\n\t\t\t\tmap.put(IMarker.LINE_NUMBER, Integer.valueOf(parserNode.getLine()));\n\t\t\t\tint offset = parserNode.getOffset();\n\t\t\t\tmap.put(IMarker.CHAR_START, Integer.valueOf(offset));\n\t\t\t\tmap.put(IMarker.CHAR_END, Integer.valueOf(offset + parserNode.getLength()));\n\t\t\t\tmap.put(DIAGNOSTIC_KEY, diagnostic);\n\t\t\t}\n\t\t}\n\t\tmap.put(IMarker.MESSAGE, diagnostic.getMessage());\n\t\tmap.put(IMarker.PRIORITY, Integer.valueOf(IMarker.PRIORITY_LOW));\n\t\treturn map;\n\t}","commit_id":"e0fb958892b87548d2ef0af18a7d6a9fd244a846","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n\t\tprotected void execute(final IProgressMonitor monitor) throws CoreException, InvocationTargetException,\n\t\t\t\tInterruptedException {\n\t\t\tif (!file.exists())\n\t\t\t\treturn;\n\t\t\tif (deleteMarkers)\n\t\t\t\tfile.deleteMarkers(markerId, true, IResource.DEPTH_ZERO);\n\t\t\tif (!issues.isEmpty()) {\n\t\t\t\t// update\n\t\t\t\tfor (Map<String, Object> map : issues) {\n\t\t\t\t\tif (monitor.isCanceled())\n\t\t\t\t\t\treturn;\n\t\t\t\t\tIMarker marker = file.createMarker(markerId);\n\t\t\t\t\tObject lNr = map.get(IMarker.LINE_NUMBER);\n\t\t\t\t\tString lineNR = \"\";\n\t\t\t\t\tif (lNr != null) {\n\t\t\t\t\t\tlineNR = \"line: \" + lNr + \" \";\n\t\t\t\t\t}\n\t\t\t\t\tmap.put(IMarker.LOCATION, lineNR + file.getFullPath().toString());\n\t\t\t\t\tmarker.setAttributes(map);\n\t\t\t\t}\n\t\t\t}\n\t\t}","id":61747,"modified_method":"@Override\n\t\tprotected void execute(final IProgressMonitor monitor) throws CoreException, InvocationTargetException,\n\t\t\t\tInterruptedException {\n\t\t\tif (!file.exists())\n\t\t\t\treturn;\n\t\t\tif (deleteMarkers)\n\t\t\t\tfor (String markerID : getMarkerIDs(checkMode)) {\n\t\t\t\t\tfile.deleteMarkers(markerID, true, IResource.DEPTH_INFINITE);\n\t\t\t\t}\n\t\t\tif (!issues.isEmpty()) {\n\t\t\t\t// update\n\t\t\t\tfor (Map<String, Object> map : issues) {\n\t\t\t\t\tif (monitor.isCanceled())\n\t\t\t\t\t\treturn;\n\t\t\t\t\tDiagnostic diagnostic = (Diagnostic) map.get(IXtextResourceChecker.DIAGNOSTIC_KEY);\n\t\t\t\t\tmap.remove(IXtextResourceChecker.DIAGNOSTIC_KEY);\n\t\t\t\t\tString markerID = getMarkerID(diagnostic);\n\t\t\t\t\tIMarker marker = file.createMarker(markerID);\n\t\t\t\t\tObject lNr = map.get(IMarker.LINE_NUMBER);\n\t\t\t\t\tString lineNR = \"\";\n\t\t\t\t\tif (lNr != null) {\n\t\t\t\t\t\tlineNR = \"line: \" + lNr + \" \";\n\t\t\t\t\t}\n\t\t\t\t\tmap.put(IMarker.LOCATION, lineNR + file.getFullPath().toString());\n\t\t\t\t\tmarker.setAttributes(map);\n\t\t\t\t}\n\t\t\t}\n\t\t}","commit_id":"e0fb958892b87548d2ef0af18a7d6a9fd244a846","url":"https://github.com/eclipse/xtext"},{"original_method":"public static void addMarkers(final IFile file, final List<Map<String, Object>> issues, String markerId, boolean deleteOldMarkers, IProgressMonitor monitor) {\n\t\ttry {\n\t\t\tnew AddMarkersOperation(ResourcesPlugin.getWorkspace().getRuleFactory().markerRule(file), issues, file, markerId, deleteOldMarkers)\n\t\t\t\t\t.run(monitor);\n\t\t} catch (InvocationTargetException e) {\n\t\t\tlog.error(\"Could not create marker.\", e);\n\t\t} catch (InterruptedException e) {\n\t\t\tlog.error(\"Could not create marker.\", e);\n\t\t}\n\t}","id":61748,"modified_method":"public static void addMarkers(final IFile file, final List<Map<String, Object>> issues, CheckMode checkMode, boolean deleteOldMarkers, IProgressMonitor monitor) {\n\t\ttry {\n\t\t\tnew AddMarkersOperation(ResourcesPlugin.getWorkspace().getRuleFactory().markerRule(file), issues, file, checkMode, deleteOldMarkers)\n\t\t\t\t\t.run(monitor);\n\t\t} catch (InvocationTargetException e) {\n\t\t\tlog.error(\"Could not create marker.\", e);\n\t\t} catch (InterruptedException e) {\n\t\t\tlog.error(\"Could not create marker.\", e);\n\t\t}\n\t}","commit_id":"e0fb958892b87548d2ef0af18a7d6a9fd244a846","url":"https://github.com/eclipse/xtext"},{"original_method":"public AddMarkersOperation(ISchedulingRule rule, List<Map<String, Object>> issues, IFile file, String markerId,\n\t\t\t\tboolean deleteMarkers) {\n\t\t\tsuper(rule);\n\t\t\tthis.issues = issues;\n\t\t\tthis.file = file;\n\t\t\tthis.markerId = markerId;\n\t\t\tthis.deleteMarkers = deleteMarkers;\n\t\t}","id":61749,"modified_method":"public AddMarkersOperation(ISchedulingRule rule, List<Map<String, Object>> issues, IFile file, CheckMode checkMode,\n\t\t\t\tboolean deleteMarkers) {\n\t\t\tsuper(rule);\n\t\t\tthis.issues = issues;\n\t\t\tthis.file = file;\n\t\t\tthis.checkMode = checkMode;\n\t\t\tthis.deleteMarkers = deleteMarkers;\n\t\t}","commit_id":"e0fb958892b87548d2ef0af18a7d6a9fd244a846","url":"https://github.com/eclipse/xtext"},{"original_method":"public Object execute(ExecutionEvent event) throws ExecutionException {\n\t\t// Due to an Handler ExtensionPoint declaration, we have an XtextEditor\n\t\t// as Active Editor so can just cast to an XtextEditor\n\t\tXtextEditor editor = (XtextEditor) HandlerUtil.getActiveEditor(event);\n\t\tvalidationJobFactory.create(editor.getDocument(), (IFile) editor.getResource(), CheckMode.ALL, EValidator.MARKER, true).schedule();\n\t\treturn this;\n\t}","id":61750,"modified_method":"public Object execute(ExecutionEvent event) throws ExecutionException {\n\t\t// Due to an Handler ExtensionPoint declaration, we have an XtextEditor\n\t\t// as Active Editor so can just cast to an XtextEditor\n\t\tXtextEditor editor = (XtextEditor) HandlerUtil.getActiveEditor(event);\n\t\tvalidationJobFactory.create(editor.getDocument(), (IFile) editor.getResource(), CheckMode.ALL, true).schedule();\n\t\treturn this;\n\t}","commit_id":"e0fb958892b87548d2ef0af18a7d6a9fd244a846","url":"https://github.com/eclipse/xtext"},{"original_method":"/**\n\t * Constructs a ValidationJob with a specified {@link CheckMode}\n\t * \n\t * @param xtextDocument\n\t * @param iFile\n\t * @param checkMode\n\t * @param deleteOldMarkers\n\t *            - whenever marker should be deleted or not\n\t */\n\tpublic ValidationJob(IXtextResourceChecker xtextResourceChecker,IStateAccess<XtextResource> xtextDocument, IFile iFile, CheckMode checkMode, String markerId, boolean deleteOldMarkers) {\n\t\tsuper(\"Xtext validation\");\n\n\t\tthis.markerId = markerId;\n\t\tthis.xtextDocument = xtextDocument;\n\t\tthis.iFile = iFile;\n\t\tthis.checkMode = checkMode;\n\t\tthis.deleteOldMarkers = deleteOldMarkers;\n\t\tthis.xtextResourceChecker = xtextResourceChecker;\n\t}","id":61751,"modified_method":"/**\n\t * Constructs a ValidationJob with a specified {@link CheckMode}\n\t * \n\t */\n\tpublic ValidationJob(IXtextResourceChecker xtextResourceChecker,IStateAccess<XtextResource> xtextDocument, IFile iFile, CheckMode checkMode, boolean deleteOldMarkers) {\n\t\tsuper(\"Xtext validation\");\n\n\t\tthis.xtextDocument = xtextDocument;\n\t\tthis.iFile = iFile;\n\t\tthis.checkMode = checkMode;\n\t\tthis.deleteOldMarkers = deleteOldMarkers;\n\t\tthis.xtextResourceChecker = xtextResourceChecker;\n\t}","commit_id":"e0fb958892b87548d2ef0af18a7d6a9fd244a846","url":"https://github.com/eclipse/xtext"},{"original_method":"ValidationJob create(IStateAccess<XtextResource> xtextDocument, IFile iFile, CheckMode checkMode, String markerId, boolean deleteOldMarkers);","id":61752,"modified_method":"ValidationJob create(IStateAccess<XtextResource> xtextDocument, IFile iFile, CheckMode checkMode, boolean deleteOldMarkers);","commit_id":"e0fb958892b87548d2ef0af18a7d6a9fd244a846","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n\tprotected IStatus run(final IProgressMonitor monitor) {\n\t\tif (monitor.isCanceled())\n\t\t\treturn Status.CANCEL_STATUS;\n\t\tlog.debug(\"Starting Xtext Validation with CheckMode: \" + checkMode);\n\t\tif (iFile == null) { // file may be null, if it was opend from an\n\t\t\t// IStorageEditorInput\n\t\t\tlog.debug(\"Aborting Xtext Validation with CheckMode: \" + checkMode + \" because file does not exist.\");\n\t\t\treturn Status.OK_STATUS;\n\t\t}\n\t\tfinal List<Map<String, Object>> issues = xtextDocument\n\t\t\t\t.readOnly(new IUnitOfWork<List<Map<String, Object>>, XtextResource>() {\n\t\t\t\t\tpublic List<Map<String, Object>> exec(XtextResource resource) throws Exception {\n\t\t\t\t\t\treturn xtextResourceChecker.check(resource, Collections.singletonMap(CheckMode.KEY, checkMode),\n\t\t\t\t\t\t\t\tmonitor);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\tif (monitor.isCanceled())\n\t\t\treturn Status.CANCEL_STATUS;\n\t\tMarkerUtil.addMarkers(iFile, issues, markerId, deleteOldMarkers, monitor);\n\t\tif (monitor.isCanceled())\n\t\t\treturn Status.CANCEL_STATUS;\n\t\treturn Status.OK_STATUS;\n\t}","id":61753,"modified_method":"@Override\n\tprotected IStatus run(final IProgressMonitor monitor) {\n\t\tif (monitor.isCanceled())\n\t\t\treturn Status.CANCEL_STATUS;\n\t\tlog.debug(\"Starting Xtext Validation with CheckMode: \" + checkMode);\n\t\tif (iFile == null) { // file may be null, if it was opend from an\n\t\t\t// IStorageEditorInput\n\t\t\tlog.debug(\"Aborting Xtext Validation with CheckMode: \" + checkMode + \" because file does not exist.\");\n\t\t\treturn Status.OK_STATUS;\n\t\t}\n\t\tfinal List<Map<String, Object>> issues = xtextDocument\n\t\t\t\t.readOnly(new IUnitOfWork<List<Map<String, Object>>, XtextResource>() {\n\t\t\t\t\tpublic List<Map<String, Object>> exec(XtextResource resource) throws Exception {\n\t\t\t\t\t\treturn xtextResourceChecker.check(resource, Collections.singletonMap(CheckMode.KEY, checkMode),\n\t\t\t\t\t\t\t\tmonitor);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\tif (monitor.isCanceled())\n\t\t\treturn Status.CANCEL_STATUS;\n\t\tMarkerUtil.addMarkers(iFile, issues, checkMode, deleteOldMarkers, monitor);\n\t\tif (monitor.isCanceled())\n\t\t\treturn Status.CANCEL_STATUS;\n\t\treturn Status.OK_STATUS;\n\t}","commit_id":"e0fb958892b87548d2ef0af18a7d6a9fd244a846","url":"https://github.com/eclipse/xtext"},{"original_method":"private void checkAndUpdateMarkers() {\n\t\tsynchronized (validationLock) {\n\t\t\tif (validationJob != null)\n\t\t\t\tvalidationJob.cancel();\n\t\t\tvalidationJob = validationJobFactory.create(this, file, CheckMode.FAST_ONLY, EValidator.MARKER, true);\n\t\t\tvalidationJob.schedule(250);\n\t\t}\n\t}","id":61754,"modified_method":"private void checkAndUpdateMarkers() {\n\t\tsynchronized (validationLock) {\n\t\t\tif (validationJob != null)\n\t\t\t\tvalidationJob.cancel();\n\t\t\tvalidationJob = validationJobFactory.create(this, file, CheckMode.FAST_ONLY, true);\n\t\t\tvalidationJob.schedule(250);\n\t\t}\n\t}","commit_id":"e0fb958892b87548d2ef0af18a7d6a9fd244a846","url":"https://github.com/eclipse/xtext"},{"original_method":"private void doOnSaveValidation() {\n\t\tif (validationJob == null)\n\t\t\tvalidationJob = validationJobFactory.create(this.getDocument(), (IFile) this.getResource(), CheckMode.NORMAL_AND_FAST, EValidator.MARKER, true);\n\t\tvalidationJob.cancel();\n\t\ttry {\n\t\t\tvalidationJob.join();\n\t\t}\n\t\tcatch (InterruptedException e) {\n\t\t\tlog.error(\"Error joining canceled ValidationJob\", e);\n\t\t}\n\t\tvalidationJob.schedule();\n\t}","id":61755,"modified_method":"private void doOnSaveValidation() {\n\t\tif (validationJob == null)\n\t\t\tvalidationJob = validationJobFactory.create(this.getDocument(), (IFile) this.getResource(), CheckMode.NORMAL_AND_FAST, true);\n\t\tvalidationJob.cancel();\n\t\ttry {\n\t\t\tvalidationJob.join();\n\t\t}\n\t\tcatch (InterruptedException e) {\n\t\t\tlog.error(\"Error joining canceled ValidationJob\", e);\n\t\t}\n\t\tvalidationJob.schedule();\n\t}","commit_id":"e0fb958892b87548d2ef0af18a7d6a9fd244a846","url":"https://github.com/eclipse/xtext"},{"original_method":"public AddMarkersOperation(IResource resource, List<Issue> issues, String markerId,\n\t\t\tboolean deleteMarkers, MarkerCreator markerCreator) {\n\t\tsuper(ResourcesPlugin.getWorkspace().getRuleFactory().markerRule(resource));\n\t\tthis.issues = issues;\n\t\tthis.markerId = markerId;\n\t\tthis.resource = resource;\n\t\tthis.deleteMarkers = deleteMarkers;\n\t\tthis.markerCreator = markerCreator;\n\t}","id":61756,"modified_method":"@Deprecated\n\tpublic AddMarkersOperation(IResource resource, List<Issue> issues, String markerId,\n\t\t\tboolean deleteMarkers, MarkerCreator markerCreator) {\n\t\tthis(resource, issues, Collections.singleton(markerId), deleteMarkers, markerCreator);\n\t}","commit_id":"7eb0ccf518ed55428fe220791ff2df2fd63966c6","url":"https://github.com/eclipse/xtext"},{"original_method":"public String getMarkerId() {\n\t\treturn markerId;\n\t}","id":61757,"modified_method":"/**\n\t * @return the first markerID if any. \n\t * @deprecated use {@link #getMarkerIds()} instead.\n\t */\n\t@Deprecated\n\tpublic String getMarkerId() {\n\t\tif (markerIds.isEmpty())\n\t\t\treturn null;\n\t\treturn markerIds.iterator().next();\n\t}","commit_id":"7eb0ccf518ed55428fe220791ff2df2fd63966c6","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n\tprotected void execute(final IProgressMonitor monitor) throws CoreException, InvocationTargetException,\n\t\t\tInterruptedException {\n\t\tif (!resource.exists())\n\t\t\treturn;\n\t\tif (deleteMarkers)\n\t\t\tresource.deleteMarkers(getMarkerId(), false, IResource.DEPTH_INFINITE);\n\t\tif (!issues.isEmpty()) {\n\t\t\t// update\n\t\t\tfor (Issue issue : issues) {\n\t\t\t\tif (monitor.isCanceled())\n\t\t\t\t\treturn;\n\t\t\t\tmarkerCreator.createMarker(issue,resource,getMarkerId());\n\t\t\t}\n\t\t}\n\t}","id":61758,"modified_method":"@Override\n\tprotected void execute(final IProgressMonitor monitor) throws CoreException, InvocationTargetException,\n\t\t\tInterruptedException {\n\t\tif (!resource.exists())\n\t\t\treturn;\n\t\tif (deleteMarkers) {\n\t\t\tfor(String markerId: getMarkerIds()) {\n\t\t\t\tresource.deleteMarkers(markerId, false, IResource.DEPTH_INFINITE);\t\n\t\t\t}\n\t\t}\n\t\tif (!issues.isEmpty()) {\n\t\t\t// update\n\t\t\tfor (Issue issue : issues) {\n\t\t\t\tif (monitor.isCanceled())\n\t\t\t\t\treturn;\n\t\t\t\tmarkerCreator.createMarker(issue, resource, MarkerTypes.forCheckType(issue.getType()));\n\t\t\t}\n\t\t}\n\t}","commit_id":"7eb0ccf518ed55428fe220791ff2df2fd63966c6","url":"https://github.com/eclipse/xtext"},{"original_method":"public void processIssues(List<Issue> issues, IProgressMonitor monitor) {\n\t\ttry {\n\t\t\tnew AddMarkersOperation(resource, issues, EValidator.MARKER, true, markerCreator).run(monitor);\n\t\t} catch (InvocationTargetException e) {\n\t\t\tlog.error(\"Could not create marker.\", e);\n\t\t} catch (InterruptedException e) {\n\t\t\tlog.error(\"Could not create marker.\", e);\n\t\t}\n\t}","id":61759,"modified_method":"public void processIssues(List<Issue> issues, IProgressMonitor monitor) {\n\t\ttry {\n\t\t\tnew AddMarkersOperation(resource, issues, \n\t\t\t\t\tImmutableSet.of(MarkerTypes.FAST_VALIDATION, MarkerTypes.NORMAL_VALIDATION), \n\t\t\t\t\ttrue, // delete existing markers \n\t\t\t\t\tmarkerCreator).run(monitor);\n\t\t} catch (InvocationTargetException e) {\n\t\t\tlog.error(\"Could not create marker.\", e);\n\t\t} catch (InterruptedException e) {\n\t\t\tlog.error(\"Could not create marker.\", e);\n\t\t}\n\t}","commit_id":"7eb0ccf518ed55428fe220791ff2df2fd63966c6","url":"https://github.com/eclipse/xtext"},{"original_method":"public ValidationJob create(IStateAccess<XtextResource> xtextDocument, IFile iFile, CheckMode checkMode, String markerId, boolean deleteOldMarkers) {\n\t\treturn new ValidationJob(xtextResourceChecker, xtextDocument, iFile, checkMode, markerId, deleteOldMarkers);\n\t}","id":61760,"modified_method":"public ValidationJob create(IStateAccess<XtextResource> xtextDocument, IFile iFile, CheckMode checkMode, boolean deleteOldMarkers) {\n\t\treturn new ValidationJob(xtextResourceChecker, xtextDocument, iFile, checkMode, deleteOldMarkers);\n\t}","commit_id":"4da9f25d45d70bbbe169a1a3add5ca7b2134b8ee","url":"https://github.com/eclipse/xtext"},{"original_method":"private Map<String, Object> markerFromEValidatorDiagnostic(Diagnostic diagnostic) {\n\t\tif (diagnostic.getSeverity() == Diagnostic.OK)\n\t\t\treturn null;\n\t\tMap<String, Object> map = new HashMap<String, Object>();\n\t\tint sever = IMarker.SEVERITY_ERROR;\n\t\tswitch (diagnostic.getSeverity()) {\n\t\t\tcase Diagnostic.WARNING:\n\t\t\t\tsever = IMarker.SEVERITY_WARNING;\n\t\t\t\tbreak;\n\t\t\tcase Diagnostic.INFO:\n\t\t\t\tsever = IMarker.SEVERITY_INFO;\n\t\t\t\tbreak;\n\t\t}\n\t\tmap.put(IMarker.SEVERITY, sever);\n\t\tIterator<?> data = diagnostic.getData().iterator();\n\t\t// causer is the first element see Diagnostician.getData\n\t\tObject causer = data.next();\n\t\tif (causer instanceof EObject) {\n\t\t\tEObject ele = (EObject) causer;\n\t\t\tNodeAdapter nodeAdapter = NodeUtil.getNodeAdapter(ele);\n\t\t\tif (nodeAdapter != null) {\n\t\t\t\tAbstractNode parserNode = nodeAdapter.getParserNode();\n\t\t\t\t// feature is the second element see Diagnostician.getData\n\t\t\t\tObject feature = data.hasNext() ? data.next() : null;\n\t\t\t\tEStructuralFeature structuralFeature = resolveStructuralFeature(ele, feature);\n\t\t\t\tif (structuralFeature != null) {\n\t\t\t\t\tList<AbstractNode> nodes = NodeUtil.findNodesForFeature(ele, structuralFeature);\n\t\t\t\t\tif (!nodes.isEmpty())\n\t\t\t\t\t\tparserNode = nodes.iterator().next();\n\t\t\t\t}\n\t\t\t\tmap.put(IMarker.LINE_NUMBER, Integer.valueOf(parserNode.getLine()));\n\t\t\t\tint offset = parserNode.getOffset();\n\t\t\t\tmap.put(IMarker.CHAR_START, Integer.valueOf(offset));\n\t\t\t\tmap.put(IMarker.CHAR_END, Integer.valueOf(offset + parserNode.getLength()));\n\t\t\t}\n\t\t}\n\t\tmap.put(IMarker.MESSAGE, diagnostic.getMessage());\n\t\tmap.put(IMarker.PRIORITY, Integer.valueOf(IMarker.PRIORITY_LOW));\n\t\treturn map;\n\t}","id":61761,"modified_method":"private Map<String, Object> markerFromEValidatorDiagnostic(Diagnostic diagnostic) {\n\t\tif (diagnostic.getSeverity() == Diagnostic.OK)\n\t\t\treturn null;\n\t\tMap<String, Object> map = new HashMap<String, Object>();\n\t\tint sever = IMarker.SEVERITY_ERROR;\n\t\tswitch (diagnostic.getSeverity()) {\n\t\t\tcase Diagnostic.WARNING:\n\t\t\t\tsever = IMarker.SEVERITY_WARNING;\n\t\t\t\tbreak;\n\t\t\tcase Diagnostic.INFO:\n\t\t\t\tsever = IMarker.SEVERITY_INFO;\n\t\t\t\tbreak;\n\t\t}\n\t\tmap.put(IMarker.SEVERITY, sever);\n\t\tIterator<?> data = diagnostic.getData().iterator();\n\t\t// causer is the first element see Diagnostician.getData\n\t\tObject causer = data.next();\n\t\tif (causer instanceof EObject) {\n\t\t\tEObject ele = (EObject) causer;\n\t\t\tNodeAdapter nodeAdapter = NodeUtil.getNodeAdapter(ele);\n\t\t\tif (nodeAdapter != null) {\n\t\t\t\tAbstractNode parserNode = nodeAdapter.getParserNode();\n\t\t\t\t// feature is the second element see Diagnostician.getData\n\t\t\t\tObject feature = data.hasNext() ? data.next() : null;\n\t\t\t\tEStructuralFeature structuralFeature = resolveStructuralFeature(ele, feature);\n\t\t\t\tif (structuralFeature != null) {\n\t\t\t\t\tList<AbstractNode> nodes = NodeUtil.findNodesForFeature(ele, structuralFeature);\n\t\t\t\t\tif (!nodes.isEmpty())\n\t\t\t\t\t\tparserNode = nodes.iterator().next();\n\t\t\t\t}\n\t\t\t\tmap.put(IMarker.LINE_NUMBER, Integer.valueOf(parserNode.getLine()));\n\t\t\t\tint offset = parserNode.getOffset();\n\t\t\t\tmap.put(IMarker.CHAR_START, Integer.valueOf(offset));\n\t\t\t\tmap.put(IMarker.CHAR_END, Integer.valueOf(offset + parserNode.getLength()));\n\t\t\t\tmap.put(DIAGNOSTIC_KEY, diagnostic);\n\t\t\t}\n\t\t}\n\t\tmap.put(IMarker.MESSAGE, diagnostic.getMessage());\n\t\tmap.put(IMarker.PRIORITY, Integer.valueOf(IMarker.PRIORITY_LOW));\n\t\treturn map;\n\t}","commit_id":"4da9f25d45d70bbbe169a1a3add5ca7b2134b8ee","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n\t\tprotected void execute(final IProgressMonitor monitor) throws CoreException, InvocationTargetException,\n\t\t\t\tInterruptedException {\n\t\t\tif (!file.exists())\n\t\t\t\treturn;\n\t\t\tif (deleteMarkers)\n\t\t\t\tfile.deleteMarkers(markerId, true, IResource.DEPTH_ZERO);\n\t\t\tif (!issues.isEmpty()) {\n\t\t\t\t// update\n\t\t\t\tfor (Map<String, Object> map : issues) {\n\t\t\t\t\tif (monitor.isCanceled())\n\t\t\t\t\t\treturn;\n\t\t\t\t\tIMarker marker = file.createMarker(markerId);\n\t\t\t\t\tObject lNr = map.get(IMarker.LINE_NUMBER);\n\t\t\t\t\tString lineNR = \"\";\n\t\t\t\t\tif (lNr != null) {\n\t\t\t\t\t\tlineNR = \"line: \" + lNr + \" \";\n\t\t\t\t\t}\n\t\t\t\t\tmap.put(IMarker.LOCATION, lineNR + file.getFullPath().toString());\n\t\t\t\t\tmarker.setAttributes(map);\n\t\t\t\t}\n\t\t\t}\n\t\t}","id":61762,"modified_method":"@Override\n\t\tprotected void execute(final IProgressMonitor monitor) throws CoreException, InvocationTargetException,\n\t\t\t\tInterruptedException {\n\t\t\tif (!file.exists())\n\t\t\t\treturn;\n\t\t\tif (deleteMarkers)\n\t\t\t\tfor (String markerID : getMarkerIDs(checkMode)) {\n\t\t\t\t\tfile.deleteMarkers(markerID, true, IResource.DEPTH_INFINITE);\n\t\t\t\t}\n\t\t\tif (!issues.isEmpty()) {\n\t\t\t\t// update\n\t\t\t\tfor (Map<String, Object> map : issues) {\n\t\t\t\t\tif (monitor.isCanceled())\n\t\t\t\t\t\treturn;\n\t\t\t\t\tDiagnostic diagnostic = (Diagnostic) map.get(IXtextResourceChecker.DIAGNOSTIC_KEY);\n\t\t\t\t\tmap.remove(IXtextResourceChecker.DIAGNOSTIC_KEY);\n\t\t\t\t\tString markerID = getMarkerID(diagnostic);\n\t\t\t\t\tIMarker marker = file.createMarker(markerID);\n\t\t\t\t\tObject lNr = map.get(IMarker.LINE_NUMBER);\n\t\t\t\t\tString lineNR = \"\";\n\t\t\t\t\tif (lNr != null) {\n\t\t\t\t\t\tlineNR = \"line: \" + lNr + \" \";\n\t\t\t\t\t}\n\t\t\t\t\tmap.put(IMarker.LOCATION, lineNR + file.getFullPath().toString());\n\t\t\t\t\tmarker.setAttributes(map);\n\t\t\t\t}\n\t\t\t}\n\t\t}","commit_id":"4da9f25d45d70bbbe169a1a3add5ca7b2134b8ee","url":"https://github.com/eclipse/xtext"},{"original_method":"public static void addMarkers(final IFile file, final List<Map<String, Object>> issues, String markerId, boolean deleteOldMarkers, IProgressMonitor monitor) {\n\t\ttry {\n\t\t\tnew AddMarkersOperation(ResourcesPlugin.getWorkspace().getRuleFactory().markerRule(file), issues, file, markerId, deleteOldMarkers)\n\t\t\t\t\t.run(monitor);\n\t\t} catch (InvocationTargetException e) {\n\t\t\tlog.error(\"Could not create marker.\", e);\n\t\t} catch (InterruptedException e) {\n\t\t\tlog.error(\"Could not create marker.\", e);\n\t\t}\n\t}","id":61763,"modified_method":"public static void addMarkers(final IFile file, final List<Map<String, Object>> issues, CheckMode checkMode, boolean deleteOldMarkers, IProgressMonitor monitor) {\n\t\ttry {\n\t\t\tnew AddMarkersOperation(ResourcesPlugin.getWorkspace().getRuleFactory().markerRule(file), issues, file, checkMode, deleteOldMarkers)\n\t\t\t\t\t.run(monitor);\n\t\t} catch (InvocationTargetException e) {\n\t\t\tlog.error(\"Could not create marker.\", e);\n\t\t} catch (InterruptedException e) {\n\t\t\tlog.error(\"Could not create marker.\", e);\n\t\t}\n\t}","commit_id":"4da9f25d45d70bbbe169a1a3add5ca7b2134b8ee","url":"https://github.com/eclipse/xtext"},{"original_method":"public AddMarkersOperation(ISchedulingRule rule, List<Map<String, Object>> issues, IFile file, String markerId,\n\t\t\t\tboolean deleteMarkers) {\n\t\t\tsuper(rule);\n\t\t\tthis.issues = issues;\n\t\t\tthis.file = file;\n\t\t\tthis.markerId = markerId;\n\t\t\tthis.deleteMarkers = deleteMarkers;\n\t\t}","id":61764,"modified_method":"public AddMarkersOperation(ISchedulingRule rule, List<Map<String, Object>> issues, IFile file, CheckMode checkMode,\n\t\t\t\tboolean deleteMarkers) {\n\t\t\tsuper(rule);\n\t\t\tthis.issues = issues;\n\t\t\tthis.file = file;\n\t\t\tthis.checkMode = checkMode;\n\t\t\tthis.deleteMarkers = deleteMarkers;\n\t\t}","commit_id":"4da9f25d45d70bbbe169a1a3add5ca7b2134b8ee","url":"https://github.com/eclipse/xtext"},{"original_method":"public Object execute(ExecutionEvent event) throws ExecutionException {\n\t\t// Due to an Handler ExtensionPoint declaration, we have an XtextEditor\n\t\t// as Active Editor so can just cast to an XtextEditor\n\t\tXtextEditor editor = (XtextEditor) HandlerUtil.getActiveEditor(event);\n\t\tvalidationJobFactory.create(editor.getDocument(), (IFile) editor.getResource(), CheckMode.ALL, EValidator.MARKER, true).schedule();\n\t\treturn this;\n\t}","id":61765,"modified_method":"public Object execute(ExecutionEvent event) throws ExecutionException {\n\t\t// Due to an Handler ExtensionPoint declaration, we have an XtextEditor\n\t\t// as Active Editor so can just cast to an XtextEditor\n\t\tXtextEditor editor = (XtextEditor) HandlerUtil.getActiveEditor(event);\n\t\tvalidationJobFactory.create(editor.getDocument(), (IFile) editor.getResource(), CheckMode.ALL, true).schedule();\n\t\treturn this;\n\t}","commit_id":"4da9f25d45d70bbbe169a1a3add5ca7b2134b8ee","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n\tprotected IStatus run(final IProgressMonitor monitor) {\n\t\tif (monitor.isCanceled())\n\t\t\treturn Status.CANCEL_STATUS;\n\t\tlog.debug(\"Starting Xtext Validation with CheckMode: \" + checkMode);\n\t\tif (iFile == null) { // file may be null, if it was opend from an\n\t\t\t// IStorageEditorInput\n\t\t\tlog.debug(\"Aborting Xtext Validation with CheckMode: \" + checkMode + \" because file does not exist.\");\n\t\t\treturn Status.OK_STATUS;\n\t\t}\n\t\tfinal List<Map<String, Object>> issues = xtextDocument\n\t\t\t\t.readOnly(new IUnitOfWork<List<Map<String, Object>>, XtextResource>() {\n\t\t\t\t\tpublic List<Map<String, Object>> exec(XtextResource resource) throws Exception {\n\t\t\t\t\t\treturn xtextResourceChecker.check(resource, Collections.singletonMap(CheckMode.KEY, checkMode),\n\t\t\t\t\t\t\t\tmonitor);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\tif (monitor.isCanceled())\n\t\t\treturn Status.CANCEL_STATUS;\n\t\tMarkerUtil.addMarkers(iFile, issues, markerId, deleteOldMarkers, monitor);\n\t\tif (monitor.isCanceled())\n\t\t\treturn Status.CANCEL_STATUS;\n\t\treturn Status.OK_STATUS;\n\t}","id":61766,"modified_method":"@Override\n\tprotected IStatus run(final IProgressMonitor monitor) {\n\t\tif (monitor.isCanceled())\n\t\t\treturn Status.CANCEL_STATUS;\n\t\tlog.debug(\"Starting Xtext Validation with CheckMode: \" + checkMode);\n\t\tif (iFile == null) { // file may be null, if it was opend from an\n\t\t\t// IStorageEditorInput\n\t\t\tlog.debug(\"Aborting Xtext Validation with CheckMode: \" + checkMode + \" because file does not exist.\");\n\t\t\treturn Status.OK_STATUS;\n\t\t}\n\t\tfinal List<Map<String, Object>> issues = xtextDocument\n\t\t\t\t.readOnly(new IUnitOfWork<List<Map<String, Object>>, XtextResource>() {\n\t\t\t\t\tpublic List<Map<String, Object>> exec(XtextResource resource) throws Exception {\n\t\t\t\t\t\treturn xtextResourceChecker.check(resource, Collections.singletonMap(CheckMode.KEY, checkMode),\n\t\t\t\t\t\t\t\tmonitor);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\tif (monitor.isCanceled())\n\t\t\treturn Status.CANCEL_STATUS;\n\t\tMarkerUtil.addMarkers(iFile, issues, checkMode, deleteOldMarkers, monitor);\n\t\tif (monitor.isCanceled())\n\t\t\treturn Status.CANCEL_STATUS;\n\t\treturn Status.OK_STATUS;\n\t}","commit_id":"4da9f25d45d70bbbe169a1a3add5ca7b2134b8ee","url":"https://github.com/eclipse/xtext"},{"original_method":"ValidationJob create(IStateAccess<XtextResource> xtextDocument, IFile iFile, CheckMode checkMode, String markerId, boolean deleteOldMarkers);","id":61767,"modified_method":"ValidationJob create(IStateAccess<XtextResource> xtextDocument, IFile iFile, CheckMode checkMode, boolean deleteOldMarkers);","commit_id":"4da9f25d45d70bbbe169a1a3add5ca7b2134b8ee","url":"https://github.com/eclipse/xtext"},{"original_method":"/**\n\t * Constructs a ValidationJob with a specified {@link CheckMode}\n\t * \n\t * @param xtextDocument\n\t * @param iFile\n\t * @param checkMode\n\t * @param deleteOldMarkers\n\t *            - whenever marker should be deleted or not\n\t */\n\tpublic ValidationJob(IXtextResourceChecker xtextResourceChecker,IStateAccess<XtextResource> xtextDocument, IFile iFile, CheckMode checkMode, String markerId, boolean deleteOldMarkers) {\n\t\tsuper(\"Xtext validation\");\n\n\t\tthis.markerId = markerId;\n\t\tthis.xtextDocument = xtextDocument;\n\t\tthis.iFile = iFile;\n\t\tthis.checkMode = checkMode;\n\t\tthis.deleteOldMarkers = deleteOldMarkers;\n\t\tthis.xtextResourceChecker = xtextResourceChecker;\n\t}","id":61768,"modified_method":"/**\n\t * Constructs a ValidationJob with a specified {@link CheckMode}\n\t * \n\t */\n\tpublic ValidationJob(IXtextResourceChecker xtextResourceChecker,IStateAccess<XtextResource> xtextDocument, IFile iFile, CheckMode checkMode, boolean deleteOldMarkers) {\n\t\tsuper(\"Xtext validation\");\n\n\t\tthis.xtextDocument = xtextDocument;\n\t\tthis.iFile = iFile;\n\t\tthis.checkMode = checkMode;\n\t\tthis.deleteOldMarkers = deleteOldMarkers;\n\t\tthis.xtextResourceChecker = xtextResourceChecker;\n\t}","commit_id":"4da9f25d45d70bbbe169a1a3add5ca7b2134b8ee","url":"https://github.com/eclipse/xtext"},{"original_method":"private void checkAndUpdateMarkers() {\n\t\tsynchronized (validationLock) {\n\t\t\tif (validationJob != null)\n\t\t\t\tvalidationJob.cancel();\n\t\t\tvalidationJob = validationJobFactory.create(this, file, CheckMode.FAST_ONLY, EValidator.MARKER, true);\n\t\t\tvalidationJob.schedule(250);\n\t\t}\n\t}","id":61769,"modified_method":"private void checkAndUpdateMarkers() {\n\t\tsynchronized (validationLock) {\n\t\t\tif (validationJob != null)\n\t\t\t\tvalidationJob.cancel();\n\t\t\tvalidationJob = validationJobFactory.create(this, file, CheckMode.FAST_ONLY, true);\n\t\t\tvalidationJob.schedule(250);\n\t\t}\n\t}","commit_id":"4da9f25d45d70bbbe169a1a3add5ca7b2134b8ee","url":"https://github.com/eclipse/xtext"},{"original_method":"private void doOnSaveValidation() {\n\t\tif (validationJob == null)\n\t\t\tvalidationJob = validationJobFactory.create(this.getDocument(), (IFile) this.getResource(), CheckMode.NORMAL_AND_FAST, EValidator.MARKER, true);\n\t\tvalidationJob.cancel();\n\t\ttry {\n\t\t\tvalidationJob.join();\n\t\t}\n\t\tcatch (InterruptedException e) {\n\t\t\tlog.error(\"Error joining canceled ValidationJob\", e);\n\t\t}\n\t\tvalidationJob.schedule();\n\t}","id":61770,"modified_method":"private void doOnSaveValidation() {\n\t\tif (validationJob == null)\n\t\t\tvalidationJob = validationJobFactory.create(this.getDocument(), (IFile) this.getResource(), CheckMode.NORMAL_AND_FAST, true);\n\t\tvalidationJob.cancel();\n\t\ttry {\n\t\t\tvalidationJob.join();\n\t\t}\n\t\tcatch (InterruptedException e) {\n\t\t\tlog.error(\"Error joining canceled ValidationJob\", e);\n\t\t}\n\t\tvalidationJob.schedule();\n\t}","commit_id":"4da9f25d45d70bbbe169a1a3add5ca7b2134b8ee","url":"https://github.com/eclipse/xtext"},{"original_method":"public File formatFileSetForAssembly( File archiveBaseDir, org.apache.maven.plugin.assembly.model.FileSet set )\n        throws AssemblyFormattingException, IOException\n    {\n        String lineEndingHint = set.getLineEnding();\n\n        String lineEnding = AssemblyFileUtils.getLineEndingCharacters( lineEndingHint );\n\n        if ( ( lineEnding != null ) || set.isFiltered() )\n        {\n\n            FileSet fileSet = new FileSet();\n            fileSet.setLineEnding( lineEnding );\n            fileSet.setDirectory( set.getDirectory() );\n            fileSet.setIncludes( set.getIncludes() );\n\n            fileSet.setExcludes( set.getExcludes() );\n            fileSet.setUseDefaultExcludes( true );\n\n            FileSetManager fsm = new FileSetManager( logger );\n            String[] files = fsm.getIncludedFiles( fileSet );\n\n            // if we don't have anything to process, let's just skip all of this mess.\n            if ( ( files == null ) || ( files.length == 0 ) )\n            {\n                logger.info( \"No files selected for line-ending conversion. Skipping: \" + fileSet.getDirectory() );\n            }\n            else\n            {\n                File formattedDir =\n                    FileUtils.createTempFile( \"fileSetFormatter.\", \".tmp\", configSource.getTemporaryRootDirectory() );\n\n                formattedDir.delete();\n                formattedDir.mkdirs();\n\n                FileFormatter fileFormatter = new FileFormatter( configSource, logger );\n                for ( int i = 0; i < files.length; i++ )\n                {\n                    String file = files[i];\n\n                    File targetFile = new File( formattedDir, file );\n\n                    targetFile.getParentFile().mkdirs();\n\n                    File sourceFile = new File( archiveBaseDir, file );\n                    try\n                    {\n                        sourceFile = fileFormatter.format( sourceFile, set.isFiltered(), lineEndingHint, formattedDir );\n                        AssemblyFileUtils.copyFile( sourceFile, targetFile );\n                    }\n                    catch ( AssemblyFormattingException e )\n                    {\n                        deleteDirectory( formattedDir );\n                        throw e;\n                    }\n                    catch ( IOException e )\n                    {\n                        deleteDirectory( formattedDir );\n                        throw e;\n                    }\n                }\n                return formattedDir;\n            }\n        }\n\n        return archiveBaseDir;\n    }","id":61771,"modified_method":"public File formatFileSetForAssembly( File archiveBaseDir, org.apache.maven.plugin.assembly.model.FileSet set )\n        throws AssemblyFormattingException, IOException\n    {\n        String lineEndingHint = set.getLineEnding();\n\n        String lineEnding = AssemblyFileUtils.getLineEndingCharacters( lineEndingHint );\n\n        if ( ( lineEnding != null ) || set.isFiltered() )\n        {\n\n            FileSet fileSet = new FileSet();\n            fileSet.setLineEnding( lineEnding );\n            \n            if(set.getDirectory() == null)\n            {\n            \tfileSet.setDirectory(archiveBaseDir.getAbsolutePath());\n            }\n            else\n            {\n            \tfileSet.setDirectory( set.getDirectory() );\n            }\n                        \n            fileSet.setIncludes( set.getIncludes() );\n\n            fileSet.setExcludes( set.getExcludes() );\n            fileSet.setUseDefaultExcludes( true );\n\n            FileSetManager fsm = new FileSetManager( logger );\n            String[] files = fsm.getIncludedFiles( fileSet );\n\n            // if we don't have anything to process, let's just skip all of this mess.\n            if ( ( files == null ) || ( files.length == 0 ) )\n            {\n                logger.info( \"No files selected for line-ending conversion. Skipping: \" + fileSet.getDirectory() );\n            }\n            else\n            {\n                File formattedDir =\n                    FileUtils.createTempFile( \"fileSetFormatter.\", \".tmp\", configSource.getTemporaryRootDirectory() );\n\n                formattedDir.delete();\n                formattedDir.mkdirs();\n\n                FileFormatter fileFormatter = new FileFormatter( configSource, logger );\n                for ( int i = 0; i < files.length; i++ )\n                {\n                    String file = files[i];\n\n                    File targetFile = new File( formattedDir, file );\n\n                    targetFile.getParentFile().mkdirs();\n\n                    File sourceFile = new File( archiveBaseDir, file );\n                    try\n                    {\n                        sourceFile = fileFormatter.format( sourceFile, set.isFiltered(), lineEndingHint, formattedDir );\n                        AssemblyFileUtils.copyFile( sourceFile, targetFile );\n                    }\n                    catch ( AssemblyFormattingException e )\n                    {\n                        deleteDirectory( formattedDir );\n                        throw e;\n                    }\n                    catch ( IOException e )\n                    {\n                        deleteDirectory( formattedDir );\n                        throw e;\n                    }\n                }\n                return formattedDir;\n            }\n        }\n\n        return archiveBaseDir;\n    }","commit_id":"6a28ad35a7edba6214ec7e4a83d20c038e19e1c0","url":"https://github.com/apache/maven-plugins"},{"original_method":"public List<WatchPattern> getWatchPatterns(List<String> patterns) {\n       List<WatchPattern> watchPatterns = new ArrayList<WatchPattern>();\n\n        for (String pattern : patterns) {\n            WatchPattern watchPattern = new WatchPattern();\n            watchPattern.setPattern(pattern);\n            if (pattern.startsWith(\"file:\")) {\n                pattern = pattern.substring(5);\n            }\n\n            if (pattern.contains(WILD_CARD)) {\n                watchPattern.setDirectory(new File(pattern.substring(0, pattern.indexOf(WILD_CARD))));\n                setExtension(pattern, watchPattern);\n                watchPatterns.add(watchPattern);\n            }\n            else {\n                setExtension(pattern, watchPattern);\n                watchPattern.setFile(new File(pattern));\n                watchPatterns.add(watchPattern);\n            }\n        }\n\n       return watchPatterns;\n    }","id":61772,"modified_method":"public List<WatchPattern> getWatchPatterns(List<String> patterns) {\n       List<WatchPattern> watchPatterns = new ArrayList<WatchPattern>();\n\n        for (String pattern : patterns) {\n            WatchPattern watchPattern = new WatchPattern();\n            watchPattern.setPattern(pattern);\n            boolean isClasspath = false;\n            if (pattern.startsWith(ResourceUtils.FILE_URL_PREFIX)) {\n                pattern = pattern.substring(ResourceUtils.FILE_URL_PREFIX.length());\n            }\n            else if (pattern.startsWith(ResourceUtils.CLASSPATH_URL_PREFIX)) {\n                pattern = pattern.substring(ResourceUtils.CLASSPATH_URL_PREFIX.length());\n                isClasspath = true;\n            }\n\n            if (pattern.contains(WILD_CARD)) {\n                String dirPath = pattern.substring(0, pattern.indexOf(WILD_CARD));\n                if(!GrailsStringUtils.isBlank(dirPath)) {\n                    watchPattern.setDirectory(new File(dirPath));\n                }\n                else if(isClasspath && BuildSettings.BASE_DIR != null) {\n                    watchPattern.setDirectory(new File(BuildSettings.BASE_DIR, \"src/main/resources\"));\n                }\n\n                setExtension(pattern, watchPattern);\n                watchPatterns.add(watchPattern);\n            }\n            else {\n                setExtension(pattern, watchPattern);\n                watchPattern.setFile(new File(pattern));\n                watchPatterns.add(watchPattern);\n            }\n        }\n\n       return watchPatterns;\n    }","commit_id":"4c33f266c689e430131b2231cb29cbf8245f04c5","url":"https://github.com/grails/grails-core"},{"original_method":"private void addMapping() {\n    Collection<AbstractVcs> activeVcses = getActiveVcses();\n    VcsMappingConfigurationDialog dlg = new VcsMappingConfigurationDialog(myProject, VcsBundle.message(\"directory.mapping.add.title\"));\n    dlg.show();\n    if (dlg.isOK()) {\n      VcsDirectoryMapping mapping = new VcsDirectoryMapping();\n      dlg.saveToMapping(mapping);\n      List<VcsDirectoryMapping> items = new ArrayList<VcsDirectoryMapping>(myModel.getItems());\n      items.add(mapping);\n      myModel.setItems(items);\n      checkNotifyListeners(activeVcses);\n    }\n  }","id":61773,"modified_method":"private void addMapping() {\n    Collection<AbstractVcs> activeVcses = getActiveVcses();\n    VcsMappingConfigurationDialog dlg = new VcsMappingConfigurationDialog(myProject, VcsBundle.message(\"directory.mapping.add.title\"));\n    // due to wonderful UI designer bug\n    dlg.initProjectMessage();\n    dlg.show();\n    if (dlg.isOK()) {\n      VcsDirectoryMapping mapping = new VcsDirectoryMapping();\n      dlg.saveToMapping(mapping);\n      List<VcsDirectoryMapping> items = new ArrayList<VcsDirectoryMapping>(myModel.getItems());\n      items.add(mapping);\n      myModel.setItems(items);\n      checkNotifyListeners(activeVcses);\n    }\n  }","commit_id":"2575fa48e52b340956f24b8fac863581ed38d002","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public VcsDirectoryConfigurationPanel(final Project project) {\n    myProject = project;\n    myIsDisabled = myProject.isDefault();\n    myVcsManager = ProjectLevelVcsManager.getInstance(project);\n    final VcsDescriptor[] vcsDescriptors = myVcsManager.getAllVcss();\n    myAllVcss = new HashMap<String, VcsDescriptor>();\n    for (VcsDescriptor vcsDescriptor : vcsDescriptors) {\n      myAllVcss.put(vcsDescriptor.getName(), vcsDescriptor);\n    }\n\n    myDirectoryMappingTable = new TableView<VcsDirectoryMapping>();\n    initPanel();\n    initializeModel();\n\n    final JComboBox comboBox = myVcsComboBox.getComboBox();\n    comboBox.setModel(buildVcsWrappersModel(myProject));\n    comboBox.setRenderer(new EditorComboBoxRenderer(comboBox.getEditor()));\n    comboBox.addItemListener(new ItemListener() {\n      public void itemStateChanged(final ItemEvent e) {\n        if (myDirectoryMappingTable != null && myDirectoryMappingTable.isEditing()) {\n          myDirectoryMappingTable.stopEditing();\n        }\n      }\n    });\n    myVcsComboBox.addActionListener(new ActionListener() {\n      public void actionPerformed(ActionEvent e) {\n        final VcsDescriptor vcsWrapper = ((VcsDescriptor)comboBox.getSelectedItem());\n        new VcsConfigurationsDialog(project, comboBox, vcsWrapper).show();\n      }\n    });\n\n    myDirectoryMappingTable.setRowHeight(myVcsComboBox.getPreferredSize().height);\n    myDirectoryMappingTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {\n      public void valueChanged(final ListSelectionEvent e) {\n        updateButtons();\n      }\n    });\n    updateButtons();\n    if (myIsDisabled) {\n      myDirectoryMappingTable.setEnabled(false);\n      myAddButton.setEnabled(false);\n    }\n  }","id":61774,"modified_method":"public VcsDirectoryConfigurationPanel(final Project project) {\n    myProject = project;\n    myIsDisabled = myProject.isDefault();\n    myVcsManager = ProjectLevelVcsManager.getInstance(project);\n    final VcsDescriptor[] vcsDescriptors = myVcsManager.getAllVcss();\n    myAllVcss = new HashMap<String, VcsDescriptor>();\n    for (VcsDescriptor vcsDescriptor : vcsDescriptors) {\n      myAllVcss.put(vcsDescriptor.getName(), vcsDescriptor);\n    }\n\n    myDirectoryMappingTable = new TableView<VcsDirectoryMapping>();\n    initPanel();\n    myDirectoryRenderer = new MyDirectoryRenderer(myProject);\n    DIRECTORY = new ColumnInfo<VcsDirectoryMapping, VcsDirectoryMapping>(VcsBundle.message(\"column.info.configure.vcses.directory\")) {\n      public VcsDirectoryMapping valueOf(final VcsDirectoryMapping mapping) {\n        return mapping;\n      }\n\n      @Override\n      public TableCellRenderer getRenderer(VcsDirectoryMapping vcsDirectoryMapping) {\n        return myDirectoryRenderer;\n      }\n    };\n    initializeModel();\n\n    final JComboBox comboBox = myVcsComboBox.getComboBox();\n    comboBox.setModel(buildVcsWrappersModel(myProject));\n    comboBox.setRenderer(new EditorComboBoxRenderer(comboBox.getEditor()));\n    comboBox.addItemListener(new ItemListener() {\n      public void itemStateChanged(final ItemEvent e) {\n        if (myDirectoryMappingTable != null && myDirectoryMappingTable.isEditing()) {\n          myDirectoryMappingTable.stopEditing();\n        }\n      }\n    });\n    myVcsComboBox.addActionListener(new ActionListener() {\n      public void actionPerformed(ActionEvent e) {\n        final VcsDescriptor vcsWrapper = ((VcsDescriptor)comboBox.getSelectedItem());\n        new VcsConfigurationsDialog(project, comboBox, vcsWrapper).show();\n      }\n    });\n\n    myDirectoryMappingTable.setRowHeight(myVcsComboBox.getPreferredSize().height);\n    myDirectoryMappingTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {\n      public void valueChanged(final ListSelectionEvent e) {\n        updateButtons();\n      }\n    });\n    updateButtons();\n    if (myIsDisabled) {\n      myDirectoryMappingTable.setEnabled(false);\n      myAddButton.setEnabled(false);\n    }\n  }","commit_id":"2575fa48e52b340956f24b8fac863581ed38d002","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void saveToMapping(VcsDirectoryMapping mapping) {\n    VcsDescriptor wrapper = (VcsDescriptor) myVCSComboBox.getSelectedItem();\n    mapping.setVcs((wrapper == null) || wrapper.isNone() ? \"\" : wrapper.getName());\n    mapping.setDirectory(FileUtil.toSystemIndependentName(myDirectoryTextField.getText()));\n    mapping.setRootSettings(myMappingCopy.getRootSettings());\n  }","id":61775,"modified_method":"public void saveToMapping(VcsDirectoryMapping mapping) {\n    VcsDescriptor wrapper = (VcsDescriptor) myVCSComboBox.getSelectedItem();\n    mapping.setVcs((wrapper == null) || wrapper.isNone() ? \"\" : wrapper.getName());\n    if (myProjectRadioButton.isSelected()) {\n      mapping.setDirectory(\"\");\n    } else {\n      mapping.setDirectory(FileUtil.toSystemIndependentName(myDirectoryTextField.getText()));\n    }\n    mapping.setRootSettings(myMappingCopy.getRootSettings());\n  }","commit_id":"2575fa48e52b340956f24b8fac863581ed38d002","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void setMapping(VcsDirectoryMapping mapping) {\n    myMappingCopy = new VcsDirectoryMapping(mapping.getDirectory(), mapping.getVcs(), mapping.getRootSettings());\n    myVCSComboBox.setSelectedItem(myVcses.get(mapping.getVcs()));\n    myDirectoryTextField.setText(FileUtil.toSystemDependentName(mapping.getDirectory()));\n    updateVcsConfigurable();\n  }","id":61776,"modified_method":"public void setMapping(VcsDirectoryMapping mapping) {\n    myMappingCopy = new VcsDirectoryMapping(mapping.getDirectory(), mapping.getVcs(), mapping.getRootSettings());\n    myProjectRadioButton.setSelected(myMappingCopy.isDefaultMapping());\n    myDirectoryRadioButton.setSelected(! myProjectRadioButton.isSelected());\n    if (myMappingCopy.isDefaultMapping()) {\n      myDirectoryTextField.setText(\"\");\n    } else {\n      myDirectoryTextField.setText(FileUtil.toSystemDependentName(mapping.getDirectory()));\n    }\n\n    myVCSComboBox.setSelectedItem(myVcses.get(mapping.getVcs()));\n    updateVcsConfigurable();\n    myDirectoryTextField.setEnabled(myDirectoryRadioButton.isSelected());\n\n    initProjectMessage();\n  }","commit_id":"2575fa48e52b340956f24b8fac863581ed38d002","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/** \n     * Function which is called when the drag process is stopped, either by cancelling or dropping.<p>\n     * \n     * @param handler the drag and drop handler \n     */\n    private void stopDrag(final CmsDNDHandler handler) {\n\n        removeDragOverlay();\n        CmsContainerpageEditor.getZIndexManager().stop();\n        for (I_CmsDropTarget target : m_dragInfos.keySet()) {\n            Style targetStyle = target.getElement().getStyle();\n            targetStyle.clearPosition();\n            targetStyle.clearMarginTop();\n            targetStyle.clearMarginBottom();\n            m_dragInfos.get(target).getDragHelper().removeFromParent();\n            if (target instanceof I_CmsDropContainer) {\n                ((I_CmsDropContainer)target).removeHighlighting();\n            }\n        }\n        m_currentTarget = null;\n        m_currentIndex = -1;\n        m_isNew = false;\n        m_controller.getHandler().deactivateMenuButton();\n        final List<I_CmsDropTarget> dragTargets = new ArrayList<I_CmsDropTarget>(m_dragInfos.keySet());\n        m_dragInfos.clear();\n        Scheduler.get().scheduleDeferred(new ScheduledCommand() {\n\n            /**\n             * @see com.google.gwt.user.client.Command#execute()\n             */\n            public void execute() {\n\n                handler.clearTargets();\n                m_controller.resetEditButtons();\n                // in case of group editing, this will refresh the container position and size\n                for (I_CmsDropTarget target : dragTargets) {\n                    if (target instanceof I_CmsDropContainer) {\n                        ((I_CmsDropContainer)target).refreshHighlighting();\n                    }\n                }\n            }\n        });\n        if (handler.getDraggable() instanceof CmsContainerPageElementPanel) {\n            ((CmsContainerPageElementPanel)(handler.getDraggable())).removeHighlighting();\n        }\n    }","id":61777,"modified_method":"/** \n     * Function which is called when the drag process is stopped, either by cancelling or dropping.<p>\n     * \n     * @param handler the drag and drop handler \n     */\n    private void stopDrag(final CmsDNDHandler handler) {\n\n        removeDragOverlay();\n        CmsContainerpageEditor.getZIndexManager().stop();\n        for (I_CmsDropTarget target : m_dragInfos.keySet()) {\n            Style targetStyle = target.getElement().getStyle();\n            if (!(target instanceof CmsGroupContainerElementPanel)) {\n                targetStyle.clearPosition();\n            }\n            targetStyle.clearMarginTop();\n            targetStyle.clearMarginBottom();\n            m_dragInfos.get(target).getDragHelper().removeFromParent();\n            if (target instanceof I_CmsDropContainer) {\n                ((I_CmsDropContainer)target).removeHighlighting();\n            }\n        }\n        m_currentTarget = null;\n        m_currentIndex = -1;\n        m_isNew = false;\n        m_controller.getHandler().deactivateMenuButton();\n        final List<I_CmsDropTarget> dragTargets = new ArrayList<I_CmsDropTarget>(m_dragInfos.keySet());\n        m_dragInfos.clear();\n        Scheduler.get().scheduleDeferred(new ScheduledCommand() {\n\n            /**\n             * @see com.google.gwt.user.client.Command#execute()\n             */\n            public void execute() {\n\n                handler.clearTargets();\n                m_controller.resetEditButtons();\n                // in case of group editing, this will refresh the container position and size\n                for (I_CmsDropTarget target : dragTargets) {\n                    if (target instanceof I_CmsDropContainer) {\n                        ((I_CmsDropContainer)target).refreshHighlighting();\n                    }\n                }\n            }\n        });\n        if (handler.getDraggable() instanceof CmsContainerPageElementPanel) {\n            ((CmsContainerPageElementPanel)(handler.getDraggable())).removeHighlighting();\n        }\n    }","commit_id":"cb358bb411dff985508d45a344dff7fccf0b4690","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * @see org.opencms.gwt.client.dnd.I_CmsDNDController#onTargetLeave(org.opencms.gwt.client.dnd.I_CmsDraggable, org.opencms.gwt.client.dnd.I_CmsDropTarget, org.opencms.gwt.client.dnd.CmsDNDHandler)\n     */\n    public void onTargetLeave(I_CmsDraggable draggable, I_CmsDropTarget target, CmsDNDHandler handler) {\n\n        DragInfo info = m_dragInfos.get(m_initialDropTarget);\n        if (info != null) {\n            hideCurrentHelpers(handler);\n            replaceCurrentHelpers(handler, info);\n            handler.getPlaceholder().getStyle().setDisplay(Display.NONE);\n            if ((target != m_initialDropTarget) && (target instanceof I_CmsDropContainer)) {\n                ((I_CmsDropContainer)target).checkMaxElementsOnLeave();\n            }\n        }\n        showOriginalPositionPlaceholder(draggable, false);\n        updateHighlighting();\n        if (target instanceof CmsContainerPageContainer) {\n            String id = ((CmsContainerPageContainer)target).getContainerId();\n            CmsContainerpageEditor.getZIndexManager().leave(id);\n        }\n\n    }","id":61778,"modified_method":"/**\n     * @see org.opencms.gwt.client.dnd.I_CmsDNDController#onTargetLeave(org.opencms.gwt.client.dnd.I_CmsDraggable, org.opencms.gwt.client.dnd.I_CmsDropTarget, org.opencms.gwt.client.dnd.CmsDNDHandler)\n     */\n    public void onTargetLeave(I_CmsDraggable draggable, I_CmsDropTarget target, CmsDNDHandler handler) {\n\n        m_currentTarget = null;\n        m_currentIndex = -1;\n        DragInfo info = m_dragInfos.get(m_initialDropTarget);\n        if (info != null) {\n            hideCurrentHelpers(handler);\n            replaceCurrentHelpers(handler, info);\n            handler.getPlaceholder().getStyle().setDisplay(Display.NONE);\n            if ((target != m_initialDropTarget) && (target instanceof I_CmsDropContainer)) {\n                ((I_CmsDropContainer)target).checkMaxElementsOnLeave();\n            }\n        }\n        showOriginalPositionPlaceholder(draggable, false);\n        updateHighlighting();\n        if (target instanceof CmsContainerPageContainer) {\n            String id = ((CmsContainerPageContainer)target).getContainerId();\n            CmsContainerpageEditor.getZIndexManager().leave(id);\n        }\n\n    }","commit_id":"cb358bb411dff985508d45a344dff7fccf0b4690","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * @see org.opencms.gwt.client.dnd.I_CmsDropTarget#repositionPlaceholder(int, int, Orientation)\n     */\n    public void repositionPlaceholder(int x, int y, Orientation orientation) {\n\n        switch (orientation) {\n            case HORIZONTAL:\n                m_placeholderIndex = CmsDomUtil.positionElementInside(\n                    m_placeholder,\n                    getElement(),\n                    m_placeholderIndex,\n                    x,\n                    -1);\n                break;\n            case VERTICAL:\n                m_placeholderIndex = CmsDomUtil.positionElementInside(\n                    m_placeholder,\n                    getElement(),\n                    m_placeholderIndex,\n                    -1,\n                    y);\n                break;\n            case ALL:\n            default:\n                m_placeholderIndex = CmsDomUtil.positionElementInside(\n                    m_placeholder,\n                    getElement(),\n                    m_placeholderIndex,\n                    x,\n                    y);\n                break;\n        }\n    }","id":61779,"modified_method":"/**\n     * @see org.opencms.gwt.client.dnd.I_CmsDropTarget#repositionPlaceholder(int, int, Orientation)\n     */\n    public void repositionPlaceholder(int x, int y, Orientation orientation) {\n\n        int oldIndex = m_placeholderIndex;\n        switch (orientation) {\n            case HORIZONTAL:\n                m_placeholderIndex = CmsDomUtil.positionElementInside(\n                    m_placeholder,\n                    getElement(),\n                    m_placeholderIndex,\n                    x,\n                    -1);\n                break;\n            case VERTICAL:\n                m_placeholderIndex = CmsDomUtil.positionElementInside(\n                    m_placeholder,\n                    getElement(),\n                    m_placeholderIndex,\n                    -1,\n                    y);\n                break;\n            case ALL:\n            default:\n                m_placeholderIndex = CmsDomUtil.positionElementInside(\n                    m_placeholder,\n                    getElement(),\n                    m_placeholderIndex,\n                    x,\n                    y);\n                break;\n        }\n        if (oldIndex != m_placeholderIndex) {\n            m_ownPosition = CmsPositionBean.getInnerDimensions(getElement(), 3, false);\n        }\n    }","commit_id":"cb358bb411dff985508d45a344dff7fccf0b4690","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * @see org.opencms.gwt.client.dnd.I_CmsDropTarget#insertPlaceholder(com.google.gwt.dom.client.Element, int, int, Orientation)\n     */\n    public void insertPlaceholder(Element placeholder, int x, int y, Orientation orientation) {\n\n        m_placeholder = placeholder;\n        repositionPlaceholder(x, y, orientation);\n    }","id":61780,"modified_method":"/**\n     * @see org.opencms.gwt.client.dnd.I_CmsDropTarget#insertPlaceholder(com.google.gwt.dom.client.Element, int, int, Orientation)\n     */\n    public void insertPlaceholder(Element placeholder, int x, int y, Orientation orientation) {\n\n        m_placeholderIndex = -1;\n        m_placeholder = placeholder;\n        repositionPlaceholder(x, y, orientation);\n    }","commit_id":"cb358bb411dff985508d45a344dff7fccf0b4690","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Puts a highlighting border around the container content.<p>\n     */\n    public void highlightContainer() {\n\n        getElement().addClassName(I_CmsLayoutBundle.INSTANCE.dragdropCss().dragging());\n\n        // adding the 'clearFix' style to all targets containing floated elements\n        // in some layouts this may lead to inappropriate clearing after the target, \n        // but it is still necessary as it forces the target to enclose it's floated content \n        if ((getWidgetCount() > 0)\n            && !CmsDomUtil.getCurrentStyle(getWidget(0).getElement(), CmsDomUtil.Style.floatCss).equals(\n                CmsDomUtil.StyleValue.none.toString())) {\n            getElement().addClassName(I_CmsLayoutBundle.INSTANCE.dragdropCss().clearFix());\n        }\n        CmsPositionBean position = CmsPositionBean.getInnerDimensions(getElement());\n        if (m_editingPlaceholder != null) {\n            m_editingPlaceholder.getStyle().setHeight(position.getHeight() + 10, Unit.PX);\n        }\n        if (m_editingMarker != null) {\n            m_editingMarker.getStyle().setHeight(position.getHeight() + 4, Unit.PX);\n            m_editingMarker.getStyle().setWidth(position.getWidth() + 4, Unit.PX);\n        }\n        m_highlighting = new CmsHighlightingBorder(position, CmsHighlightingBorder.BorderColor.red);\n        RootPanel.get().add(m_highlighting);\n    }","id":61781,"modified_method":"/**\n     * Puts a highlighting border around the container content.<p>\n     */\n    public void highlightContainer() {\n\n        getElement().addClassName(I_CmsLayoutBundle.INSTANCE.dragdropCss().dragging());\n        // remove any remaining highlighting\n        if (m_highlighting != null) {\n            m_highlighting.removeFromParent();\n        }\n        // adding the 'clearFix' style to all targets containing floated elements\n        // in some layouts this may lead to inappropriate clearing after the target, \n        // but it is still necessary as it forces the target to enclose it's floated content \n        if ((getWidgetCount() > 0)\n            && !CmsDomUtil.getCurrentStyle(getWidget(0).getElement(), CmsDomUtil.Style.floatCss).equals(\n                CmsDomUtil.StyleValue.none.toString())) {\n            getElement().addClassName(I_CmsLayoutBundle.INSTANCE.dragdropCss().clearFix());\n        }\n        // cache the position info, to be used during drag and drop\n        m_ownPosition = CmsPositionBean.getInnerDimensions(getElement(), 3, false);\n        if (m_editingPlaceholder != null) {\n            m_editingPlaceholder.getStyle().setHeight(m_ownPosition.getHeight() + 10, Unit.PX);\n        }\n        if (m_editingMarker != null) {\n            m_editingMarker.getStyle().setHeight(m_ownPosition.getHeight() + 4, Unit.PX);\n            m_editingMarker.getStyle().setWidth(m_ownPosition.getWidth() + 4, Unit.PX);\n        }\n        m_highlighting = new CmsHighlightingBorder(m_ownPosition, CmsHighlightingBorder.BorderColor.red);\n        RootPanel.get().add(m_highlighting);\n    }","commit_id":"cb358bb411dff985508d45a344dff7fccf0b4690","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * @see org.opencms.ade.containerpage.client.ui.I_CmsDropContainer#refreshHighlighting()\n     */\n    public void refreshHighlighting() {\n\n        CmsPositionBean position = CmsPositionBean.getInnerDimensions(getElement());\n        if (m_editingPlaceholder != null) {\n            m_editingPlaceholder.getStyle().setHeight(position.getHeight() + 10, Unit.PX);\n        }\n        if (m_editingMarker != null) {\n            m_editingMarker.getStyle().setHeight(position.getHeight() + 4, Unit.PX);\n            m_editingMarker.getStyle().setWidth(position.getWidth() + 4, Unit.PX);\n        }\n        if (m_highlighting != null) {\n            m_highlighting.setPosition(position);\n        }\n    }","id":61782,"modified_method":"/**\n     * @see org.opencms.ade.containerpage.client.ui.I_CmsDropContainer#refreshHighlighting()\n     */\n    public void refreshHighlighting() {\n\n        m_ownPosition = CmsPositionBean.getInnerDimensions(getElement(), 3, false);\n        if (m_editingPlaceholder != null) {\n            m_editingPlaceholder.getStyle().setHeight(m_ownPosition.getHeight() + 10, Unit.PX);\n        }\n        if (m_editingMarker != null) {\n            m_editingMarker.getStyle().setHeight(m_ownPosition.getHeight() + 4, Unit.PX);\n            m_editingMarker.getStyle().setWidth(m_ownPosition.getWidth() + 4, Unit.PX);\n        }\n        if (m_highlighting != null) {\n            m_highlighting.setPosition(m_ownPosition);\n        }\n    }","commit_id":"cb358bb411dff985508d45a344dff7fccf0b4690","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * @see org.opencms.gwt.client.dnd.I_CmsDropTarget#checkPosition(int, int, Orientation)\n     */\n    public boolean checkPosition(int x, int y, Orientation orientation) {\n\n        switch (orientation) {\n            case HORIZONTAL:\n                return CmsDomUtil.checkPositionInside(getElement(), x, -1);\n            case VERTICAL:\n                return CmsDomUtil.checkPositionInside(getElement(), -1, y);\n            case ALL:\n            default:\n                return CmsDomUtil.checkPositionInside(getElement(), x, y);\n        }\n    }","id":61783,"modified_method":"/**\n     * @see org.opencms.gwt.client.dnd.I_CmsDropTarget#checkPosition(int, int, Orientation)\n     */\n    public boolean checkPosition(int x, int y, Orientation orientation) {\n\n        // ignore orientation\n        int scrollTop = getElement().getOwnerDocument().getScrollTop();\n        // use cached position\n        int relativeTop = (y + scrollTop) - m_ownPosition.getTop();\n        if ((relativeTop > 0) && (m_ownPosition.getHeight() > relativeTop)) {\n            // cursor is inside the height of the element, check horizontal position\n            int scrollLeft = getElement().getOwnerDocument().getScrollLeft();\n            int relativeLeft = (x + scrollLeft) - m_ownPosition.getLeft();\n            return (relativeLeft > 0) && (m_ownPosition.getWidth() > relativeLeft);\n        }\n        return false;\n    }","commit_id":"cb358bb411dff985508d45a344dff7fccf0b4690","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Puts a highlighting border around the container content.<p>\n     */\n    public void highlightContainer() {\n\n        getElement().addClassName(I_CmsLayoutBundle.INSTANCE.dragdropCss().dragging());\n\n        // adding the 'clearFix' style to all targets containing floated elements\n        // in some layouts this may lead to inappropriate clearing after the target, \n        // but it is still necessary as it forces the target to enclose it's floated content \n        if ((getWidgetCount() > 0)\n            && !CmsDomUtil.getCurrentStyle(getWidget(0).getElement(), CmsDomUtil.Style.floatCss).equals(\n                CmsDomUtil.StyleValue.none.toString())) {\n            getElement().addClassName(I_CmsLayoutBundle.INSTANCE.dragdropCss().clearFix());\n        }\n        m_highlighting = new CmsHighlightingBorder(\n            CmsPositionBean.getInnerDimensions(getElement()),\n            CmsHighlightingBorder.BorderColor.red);\n        RootPanel.get().add(m_highlighting);\n    }","id":61784,"modified_method":"/**\n     * Puts a highlighting border around the container content.<p>\n     */\n    public void highlightContainer() {\n\n        getElement().addClassName(I_CmsLayoutBundle.INSTANCE.dragdropCss().dragging());\n\n        // adding the 'clearFix' style to all targets containing floated elements\n        // in some layouts this may lead to inappropriate clearing after the target, \n        // but it is still necessary as it forces the target to enclose it's floated content \n        if ((getWidgetCount() > 0)\n            && !CmsDomUtil.getCurrentStyle(getWidget(0).getElement(), CmsDomUtil.Style.floatCss).equals(\n                CmsDomUtil.StyleValue.none.toString())) {\n            getElement().addClassName(I_CmsLayoutBundle.INSTANCE.dragdropCss().clearFix());\n        }\n        // cache the position info, to be used during drag and drop\n        m_ownPosition = CmsPositionBean.getInnerDimensions(getElement(), 3, false);\n        m_highlighting = new CmsHighlightingBorder(m_ownPosition, CmsHighlightingBorder.BorderColor.red);\n        RootPanel.get().add(m_highlighting);\n    }","commit_id":"ef276647954f79eba1b05b37c560f7da8db78f25","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Refreshes position and dimension of the highlighting border. Call when anything changed during the drag process.<p>\n     */\n    public void refreshHighlighting() {\n\n        if (m_highlighting != null) {\n            m_highlighting.setPosition(CmsPositionBean.getInnerDimensions(getElement(), 3, false));\n        }\n    }","id":61785,"modified_method":"/**\n     * Refreshes position and dimension of the highlighting border. Call when anything changed during the drag process.<p>\n     */\n    public void refreshHighlighting() {\n\n        if (m_highlighting != null) {\n            // cache the position info, to be used during drag and drop\n            m_ownPosition = CmsPositionBean.getInnerDimensions(getElement(), 3, false);\n            m_highlighting.setPosition(m_ownPosition);\n        }\n    }","commit_id":"ef276647954f79eba1b05b37c560f7da8db78f25","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * @see org.opencms.gwt.client.dnd.I_CmsDropTarget#checkPosition(int, int, Orientation)\n     */\n    public boolean checkPosition(int x, int y, Orientation orientation) {\n\n        switch (orientation) {\n            case HORIZONTAL:\n                return CmsDomUtil.checkPositionInside(getElement(), x, -1);\n            case VERTICAL:\n                return CmsDomUtil.checkPositionInside(getElement(), -1, y);\n            case ALL:\n            default:\n                return CmsDomUtil.checkPositionInside(getElement(), x, y);\n        }\n    }","id":61786,"modified_method":"/**\n     * @see org.opencms.gwt.client.dnd.I_CmsDropTarget#checkPosition(int, int, Orientation)\n     */\n    public boolean checkPosition(int x, int y, Orientation orientation) {\n\n        // ignore orientation\n        int scrollTop = getElement().getOwnerDocument().getScrollTop();\n        // use cached position\n        int relativeTop = (y + scrollTop) - m_ownPosition.getTop();\n        if ((relativeTop > 0) && (m_ownPosition.getHeight() > relativeTop)) {\n            // cursor is inside the height of the element, check horizontal position\n            int scrollLeft = getElement().getOwnerDocument().getScrollLeft();\n            int relativeLeft = (x + scrollLeft) - m_ownPosition.getLeft();\n            return (relativeLeft > 0) && (m_ownPosition.getWidth() > relativeLeft);\n        }\n        return false;\n    }","commit_id":"ef276647954f79eba1b05b37c560f7da8db78f25","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Updates the element position cache during drag and drop.<p>\n     */\n    private void updatePositionsList() {\n\n        CmsDebugLog.getInstance().printLine(\"Updating positions\");\n        if (m_elementPositions != null) {\n            m_elementPositions.clear();\n        } else {\n            m_elementPositions = new ArrayList<ElementPositionInfo>();\n        }\n        for (int index = 0; index < getElement().getChildCount(); index++) {\n            Node node = getElement().getChild(index);\n            if (node.getNodeType() != Node.ELEMENT_NODE) {\n                continue;\n            }\n            m_elementPositions.add(new ElementPositionInfo((Element)node));\n        }\n        m_requiresPositionUpdate = false;\n    }","id":61787,"modified_method":"/**\n     * Updates the element position cache during drag and drop.<p>\n     */\n    private void updatePositionsList() {\n\n        CmsDebugLog.getInstance().printLine(\"Updating positions\");\n        if (m_elementPositions != null) {\n            m_elementPositions.clear();\n        } else {\n            m_elementPositions = new ArrayList<ElementPositionInfo>();\n        }\n        for (int index = 0; index < getElement().getChildCount(); index++) {\n            Node node = getElement().getChild(index);\n            if (node.getNodeType() != Node.ELEMENT_NODE) {\n                continue;\n            }\n            m_elementPositions.add(new ElementPositionInfo((Element)node));\n        }\n        m_requiresPositionUpdate = false;\n        m_ownPosition = CmsPositionBean.getInnerDimensions(getElement(), 3, false);\n    }","commit_id":"ef276647954f79eba1b05b37c560f7da8db78f25","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * @see org.apache.commons.httpclient.HttpMethod#getResponseBodyAsStream()\n     * @return\n     * @throws IOException\n     */\n    public InputStream getDataAsStream() throws IOException {\n        // count bytes for overall http-statistics\n        return new httpdByteCountInputStream(method.getResponseBodyAsStream(), incomingAccountingName);\n    }","id":61788,"modified_method":"/**\n     * @see org.apache.commons.httpclient.HttpMethod#getResponseBodyAsStream()\n     * @return\n     * @throws IOException\n     */\n    public InputStream getDataAsStream() throws IOException {\n        InputStream inStream = method.getResponseBodyAsStream();\n        if(getResponseHeader().gzip()) {\n            inStream = new GZIPInputStream(inStream);\n        }\n        // count bytes for overall http-statistics\n        return new httpdByteCountInputStream(inStream, incomingAccountingName);\n    }","commit_id":"8b2efb6f8c14df05db599192dd5e1a9bae44b8cb","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"/**\r\n     * Send an exported archive over to this slave server\r\n     * @param filename The archive to send\r\n     * @param type The type of file to add to the slave server (AddExportServlet.TYPE_*)\r\n     * @param load The filename to load in the archive (the .kjb or .ktr)\r\n     * @return the XML of the web result\r\n     * @throws Exception in case something goes awry\r\n     */\r\n    public String sendExport(String filename, String type, String load) throws Exception\r\n    {\r\n    \tString serviceUrl=AddExportServlet.CONTEXT_PATH;\r\n    \tif (type!=null && load!=null) {\r\n    \t\tserviceUrl = serviceUrl+= \"/?\"+AddExportServlet.PARAMETER_TYPE+\"=\"+type+\"&\"+AddExportServlet.PARAMETER_LOAD+\"=\"+URLEncoder.encode(load, \"UTF-8\");\r\n    \t}\r\n\r\n        String urlString = constructUrl(serviceUrl);\r\n        log.logDebug(BaseMessages.getString(PKG, \"SlaveServer.DEBUG_ConnectingTo\", urlString)); //$NON-NLS-1$\r\n\r\n        PutMethod putMethod = new PutMethod(urlString);\r\n        \r\n        // Request content will be retrieved directly from the input stream\r\n        // \r\n        FileObject fileObject = KettleVFS.getFileObject(filename);\r\n        InputStream fis = KettleVFS.getInputStream(fileObject);\r\n        try {\r\n          RequestEntity entity = new InputStreamRequestEntity(fis);\r\n          \r\n          putMethod.setRequestEntity(entity);\r\n          putMethod.setDoAuthentication(true);\r\n          putMethod.addRequestHeader(new Header(\"Content-Type\", \"binary/zip\"));\r\n      \t\r\n          // Get HTTP client\r\n          // \r\n          HttpClient client = new HttpClient();\r\n          addCredentials(client);\r\n          addProxy(client);\r\n          \r\n          // Execute request\r\n          // \r\n          try\r\n          {\r\n              int result = client.executeMethod(putMethod);\r\n              \r\n              // The status code\r\n              log.logDebug(BaseMessages.getString(PKG, \"SlaveServer.DEBUG_ResponseStatus\", Integer.toString(result))); //$NON-NLS-1$\r\n              \r\n              // the response\r\n              InputStream inputStream = new BufferedInputStream(putMethod.getResponseBodyAsStream(), 1000);\r\n              \r\n              StringBuffer bodyBuffer = new StringBuffer();\r\n              int c;\r\n              while ( (c=inputStream.read())!=-1) bodyBuffer.append((char)c);\r\n              inputStream.close();\r\n              String bodyTmp = bodyBuffer.toString();\r\n              \r\n              switch(result)\r\n              {\r\n              case 401: // Security problem: authentication required\r\n                // Non-internationalized message\r\n                  String message = \"Authentication failed\"+Const.DOSCR+Const.DOSCR+bodyTmp; //$NON-NLS-1$\r\n                  WebResult webResult = new WebResult(WebResult.STRING_ERROR, message);\r\n                  bodyBuffer.setLength(0);\r\n                  bodyBuffer.append(webResult.getXML());\r\n                  break;\r\n              }\r\n  \r\n              String body = bodyBuffer.toString();\r\n              \r\n  \r\n              // String body = post.getResponseBodyAsString(); \r\n              log.logDebug(BaseMessages.getString(PKG, \"SlaveServer.DEBUG_ResponseBody\",body)); //$NON-NLS-1$\r\n              \r\n              return body;\r\n          }\r\n          finally\r\n          {\r\n              // Release current connection to the connection pool once you are done\r\n              putMethod.releaseConnection();\r\n              log.logDetailed(BaseMessages.getString(PKG, \"SlaveServer.DETAILED_SentExportToService\", AddExportServlet.CONTEXT_PATH, environmentSubstitute(hostname))); //$NON-NLS-1$\r\n          }\r\n        } finally {\r\n          try {\r\n            fis.close();\r\n          } catch (IOException ignored) {\r\n            // nothing to do here...\r\n          }\r\n        }\r\n    }","id":61789,"modified_method":"/**\r\n     * Send an exported archive over to this slave server\r\n     * @param filename The archive to send\r\n     * @param type The type of file to add to the slave server (AddExportServlet.TYPE_*)\r\n     * @param load The filename to load in the archive (the .kjb or .ktr)\r\n     * @return the XML of the web result\r\n     * @throws Exception in case something goes awry\r\n     */\r\n    public String sendExport(String filename, String type, String load) throws Exception\r\n    {\r\n    \tString serviceUrl=AddExportServlet.CONTEXT_PATH;\r\n    \tif (type!=null && load!=null) {\r\n    \t\tserviceUrl = serviceUrl+= \"/?\"+AddExportServlet.PARAMETER_TYPE+\"=\"+type+\"&\"+AddExportServlet.PARAMETER_LOAD+\"=\"+URLEncoder.encode(load, \"UTF-8\");\r\n    \t}\r\n\r\n        String urlString = constructUrl(serviceUrl);\r\n        log.logDebug(BaseMessages.getString(PKG, \"SlaveServer.DEBUG_ConnectingTo\", urlString)); //$NON-NLS-1$\r\n\r\n        PutMethod putMethod = new PutMethod(urlString);\r\n        \r\n        // Request content will be retrieved directly from the input stream\r\n        // \r\n        FileObject fileObject = KettleVFS.getFileObject(filename);\r\n        InputStream fis = KettleVFS.getInputStream(fileObject);\r\n        try {\r\n          RequestEntity entity = new InputStreamRequestEntity(fis);\r\n          \r\n          putMethod.setRequestEntity(entity);\r\n          putMethod.setDoAuthentication(true);\r\n          putMethod.addRequestHeader(new Header(\"Content-Type\", \"binary/zip\"));\r\n      \t\r\n          // Get HTTP client\r\n          // \r\n          HttpClient client = SlaveConnectionManager.getInstance().createHttpClient();\r\n          addCredentials(client);\r\n          addProxy(client);\r\n          \r\n          // Execute request\r\n          // \r\n          InputStream inputStream=null;\r\n          BufferedInputStream bufferedInputStream=null;          \r\n\r\n          try\r\n          {\r\n              int result = client.executeMethod(putMethod);\r\n              \r\n              // The status code\r\n              log.logDebug(BaseMessages.getString(PKG, \"SlaveServer.DEBUG_ResponseStatus\", Integer.toString(result))); //$NON-NLS-1$\r\n              \r\n              // the response\r\n              inputStream = putMethod.getResponseBodyAsStream();\r\n              bufferedInputStream = new BufferedInputStream(inputStream, 1000);\r\n              \r\n              StringBuffer bodyBuffer = new StringBuffer();\r\n              int c;\r\n              while ( (c=bufferedInputStream.read())!=-1) bodyBuffer.append((char)c);\r\n              String bodyTmp = bodyBuffer.toString();\r\n              \r\n              switch(result)\r\n              {\r\n              case 401: // Security problem: authentication required\r\n                // Non-internationalized message\r\n                  String message = \"Authentication failed\"+Const.DOSCR+Const.DOSCR+bodyTmp; //$NON-NLS-1$\r\n                  WebResult webResult = new WebResult(WebResult.STRING_ERROR, message);\r\n                  bodyBuffer.setLength(0);\r\n                  bodyBuffer.append(webResult.getXML());\r\n                  break;\r\n              }\r\n  \r\n              String body = bodyBuffer.toString();\r\n              \r\n  \r\n              // String body = post.getResponseBodyAsString(); \r\n              log.logDebug(BaseMessages.getString(PKG, \"SlaveServer.DEBUG_ResponseBody\",body)); //$NON-NLS-1$\r\n              \r\n              return body;\r\n          }\r\n          finally\r\n          {\r\n            if (bufferedInputStream!=null) {\r\n              bufferedInputStream.close();\r\n            }\r\n            if (inputStream!=null) {\r\n              inputStream.close();\r\n            }\r\n\r\n              // Release current connection to the connection pool once you are done\r\n              putMethod.releaseConnection();\r\n              log.logDetailed(BaseMessages.getString(PKG, \"SlaveServer.DETAILED_SentExportToService\", AddExportServlet.CONTEXT_PATH, environmentSubstitute(hostname))); //$NON-NLS-1$\r\n          }\r\n        } finally {\r\n          try {\r\n            fis.close();\r\n          } catch (IOException ignored) {\r\n            // nothing to do here...\r\n          }\r\n        }\r\n    }","commit_id":"aeaf2015279aa6865659fb5ee1a7acc88e727181","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public String sendXML(String xml, String service) throws Exception\r\n    {\r\n    \tbyte[] content = xml.getBytes(Const.XML_ENCODING);\r\n    \tPostMethod post = getSendByteArrayMethod(content, service);\r\n    \t\r\n        // Get HTTP client\r\n        // \r\n        HttpClient client = new HttpClient();\r\n        addCredentials(client);\r\n        addProxy(client);\r\n        \r\n        // Execute request\r\n        // \r\n        try\r\n        {\r\n            int result = client.executeMethod(post);\r\n            \r\n            // The status code\r\n            log.logDebug(BaseMessages.getString(PKG, \"SlaveServer.DEBUG_ResponseStatus\", Integer.toString(result))); //$NON-NLS-1$\r\n            \r\n            // the response\r\n            InputStream inputStream = new BufferedInputStream(post.getResponseBodyAsStream(), 1000);\r\n            \r\n            StringBuffer bodyBuffer = new StringBuffer();\r\n            int c;\r\n            while ( (c=inputStream.read())!=-1) bodyBuffer.append((char)c);\r\n            inputStream.close();\r\n            String bodyTmp = bodyBuffer.toString();\r\n            \r\n            switch(result)\r\n            {\r\n            case 401: // Security problem: authentication required\r\n              // Non-internationalized message\r\n                String message = \"Authentication failed\"+Const.DOSCR+Const.DOSCR+bodyTmp; //$NON-NLS-1$\r\n                WebResult webResult = new WebResult(WebResult.STRING_ERROR, message);\r\n                bodyBuffer.setLength(0);\r\n                bodyBuffer.append(webResult.getXML());\r\n                break;\r\n            }\r\n\r\n            String body = bodyBuffer.toString();\r\n            \r\n\r\n            // String body = post.getResponseBodyAsString(); \r\n            log.logDebug(BaseMessages.getString(PKG, \"SlaveServer.DEBUG_ResponseBody\",body)); //$NON-NLS-1$\r\n            \r\n            return body;\r\n        } catch (Exception e) {\r\n        \tlog.logError(toString(), String.format(\"Exception sending message to service %s\", service), e);\r\n        \tthrow e;\r\n        }\r\n        finally\r\n        {\r\n            // Release current connection to the connection pool once you are done\r\n            post.releaseConnection();\r\n            log.logDetailed(BaseMessages.getString(PKG, \"SlaveServer.DETAILED_SentXmlToService\", service, environmentSubstitute(hostname))); //$NON-NLS-1$\r\n        }\r\n    }","id":61790,"modified_method":"public String sendXML(String xml, String service) throws Exception\r\n    {\r\n    \tbyte[] content = xml.getBytes(Const.XML_ENCODING);\r\n    \tPostMethod post = getSendByteArrayMethod(content, service);\r\n    \t\r\n        // Get HTTP client\r\n        // \r\n        HttpClient client = SlaveConnectionManager.getInstance().createHttpClient();\r\n        addCredentials(client);\r\n        addProxy(client);\r\n        \r\n        // Execute request\r\n        // \r\n        InputStream inputStream=null;\r\n        BufferedInputStream bufferedInputStream=null;\r\n        \r\n        try\r\n        {\r\n            int result = client.executeMethod(post);\r\n            \r\n            // The status code\r\n            log.logDebug(BaseMessages.getString(PKG, \"SlaveServer.DEBUG_ResponseStatus\", Integer.toString(result))); //$NON-NLS-1$\r\n            \r\n            // the response\r\n            //\r\n            inputStream = post.getResponseBodyAsStream();\r\n            bufferedInputStream = new BufferedInputStream(inputStream, 1000);\r\n            \r\n            StringBuffer bodyBuffer = new StringBuffer();\r\n            int c;\r\n            while ( (c=bufferedInputStream.read())!=-1) bodyBuffer.append((char)c);\r\n\r\n            String bodyTmp = bodyBuffer.toString();\r\n            \r\n            switch(result)\r\n            {\r\n            case 401: // Security problem: authentication required\r\n              // Non-internationalized message\r\n                String message = \"Authentication failed\"+Const.DOSCR+Const.DOSCR+bodyTmp; //$NON-NLS-1$\r\n                WebResult webResult = new WebResult(WebResult.STRING_ERROR, message);\r\n                bodyBuffer.setLength(0);\r\n                bodyBuffer.append(webResult.getXML());\r\n                break;\r\n            }\r\n\r\n            String body = bodyBuffer.toString();\r\n\r\n            // String body = post.getResponseBodyAsString(); \r\n            log.logDebug(BaseMessages.getString(PKG, \"SlaveServer.DEBUG_ResponseBody\",body)); //$NON-NLS-1$\r\n            \r\n            return body;\r\n        } catch (Exception e) {\r\n        \tlog.logError(toString(), String.format(\"Exception sending message to service %s\", service), e);\r\n        \tthrow e;\r\n        } finally\r\n        {\r\n          \r\n            if (bufferedInputStream!=null) {\r\n              bufferedInputStream.close();\r\n            }\r\n            if (inputStream!=null) {\r\n              inputStream.close();\r\n            }\r\n            \r\n            // Release current connection to the connection pool once you are done\r\n            post.releaseConnection();\r\n            log.logDetailed(BaseMessages.getString(PKG, \"SlaveServer.DETAILED_SentXmlToService\", service, environmentSubstitute(hostname))); //$NON-NLS-1$\r\n        }\r\n    }","commit_id":"aeaf2015279aa6865659fb5ee1a7acc88e727181","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public String execService(String service) throws Exception\r\n    {\r\n        // Prepare HTTP get\r\n        // \r\n        HttpClient client = new HttpClient();\r\n        addCredentials(client);\r\n        addProxy(client);\r\n        HttpMethod method = new GetMethod(constructUrl(service));\r\n        method.getParams().setSoTimeout(120000); // 2 min timeout\r\n        \r\n        // Execute request\r\n        // \r\n        try\r\n        {\r\n            int result = client.executeMethod(method);\r\n            \r\n            // The status code\r\n            log.logDebug(BaseMessages.getString(PKG, \"SlaveServer.DEBUG_ResponseStatus\", Integer.toString(result))); //$NON-NLS-1$\r\n            \r\n            String body = method.getResponseBodyAsString();\r\n            \r\n            log.logDetailed(BaseMessages.getString(PKG, \"SlaveServer.DETAILED_FinishedReading\", Integer.toString(body.getBytes().length))); //$NON-NLS-1$\r\n            log.logDebug(BaseMessages.getString(PKG, \"SlaveServer.DEBUG_ResponseBody\",body)); //$NON-NLS-1$\r\n            \r\n            return body;\r\n        }\r\n        finally\r\n        {\r\n            // Release current connection to the connection pool once you are done\r\n            method.releaseConnection();            \r\n            log.logDetailed(BaseMessages.getString(PKG, \"SlaveServer.DETAILED_ExecutedService\", service, hostname) ); //$NON-NLS-1$\r\n        }\r\n\r\n    }","id":61791,"modified_method":"public String execService(String service) throws Exception\r\n    {\r\n        // Prepare HTTP get\r\n        // \r\n        HttpClient client = SlaveConnectionManager.getInstance().createHttpClient();\r\n        addCredentials(client);\r\n        addProxy(client);\r\n        HttpMethod method = new GetMethod(constructUrl(service));\r\n        \r\n        // Execute request\r\n        // \r\n        InputStream inputStream=null;\r\n        BufferedInputStream bufferedInputStream=null;\r\n\r\n        try\r\n        {\r\n            int result = client.executeMethod(method);\r\n            \r\n            // The status code\r\n            log.logDebug(BaseMessages.getString(PKG, \"SlaveServer.DEBUG_ResponseStatus\", Integer.toString(result))); //$NON-NLS-1$\r\n\r\n            // the response\r\n            //\r\n            inputStream = method.getResponseBodyAsStream();\r\n            bufferedInputStream = new BufferedInputStream(inputStream, 1000);\r\n            \r\n            StringBuffer bodyBuffer = new StringBuffer();\r\n            int c;\r\n            while ( (c=bufferedInputStream.read())!=-1) bodyBuffer.append((char)c);\r\n\r\n            String body = bodyBuffer.toString();\r\n            \r\n            log.logDetailed(BaseMessages.getString(PKG, \"SlaveServer.DETAILED_FinishedReading\", Integer.toString(body.getBytes().length))); //$NON-NLS-1$\r\n            log.logDebug(BaseMessages.getString(PKG, \"SlaveServer.DEBUG_ResponseBody\",body)); //$NON-NLS-1$\r\n            \r\n            return body;\r\n        }\r\n        finally\r\n        {\r\n          if (bufferedInputStream!=null) {\r\n            bufferedInputStream.close();\r\n          }\r\n          if (inputStream!=null) {\r\n            inputStream.close();\r\n          }\r\n\r\n            // Release current connection to the connection pool once you are done\r\n            method.releaseConnection();            \r\n            log.logDetailed(BaseMessages.getString(PKG, \"SlaveServer.DETAILED_ExecutedService\", service, hostname) ); //$NON-NLS-1$\r\n        }\r\n\r\n    }","commit_id":"aeaf2015279aa6865659fb5ee1a7acc88e727181","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"@Test\n    @Ignore\n    public void threeNodes() throws Exception {\n        MemoryDocumentStore ds = new MemoryDocumentStore();\n        MemoryBlobStore bs = new MemoryBlobStore();\n        MongoMK.Builder builder;\n        \n        builder = new MongoMK.Builder();\n        builder.setDocumentStore(ds).setBlobStore(bs);\n        MongoMK mk1 = builder.setClusterId(1).open();\n        builder = new MongoMK.Builder();\n        builder.setDocumentStore(ds).setBlobStore(bs);\n        MongoMK mk2 = builder.setClusterId(2).open();\n        builder = new MongoMK.Builder();\n        builder.setDocumentStore(ds).setBlobStore(bs);\n        MongoMK mk3 = builder.setClusterId(3).open();\n\n        String r1 = mk1.commit(\"/\", \"+\\\"test\\\":{}\", null, null);\n\n        mk2.commit(\"/\", \"+\\\"a\\\":{}\", null, null);\n        mk3.commit(\"/\", \"+\\\"b\\\":{}\", null, null);\n        mk2.commit(\"/\", \"^\\\"test/x\\\":1\", null, null);\n        mk3.commit(\"/\", \"^\\\"test/y\\\":2\", null, null);\n\n        String r2 = mk1.commit(\"/\", \"^\\\"b/x\\\":1\", null, null);\n        String r3 = mk1.commit(\"/\", \"^\\\"a/x\\\":1\", null, null);\n        \n        String n1 = mk1.getNodes(\"/test\", r1, 0, 0, 10, null);\n        String n2 = mk1.getNodes(\"/test\", r2, 0, 0, 10, null);\n        String n3 = mk1.getNodes(\"/test\", r3, 0, 0, 10, null);\n\n        System.out.println(n1);\n        System.out.println(n2);\n        System.out.println(n3);\n        \n        mk1.dispose();\n        mk2.dispose();\n        mk3.dispose();\n    }","id":61792,"modified_method":"@Test\n    public void threeNodes() throws Exception {\n        MemoryDocumentStore ds = new MemoryDocumentStore();\n        MemoryBlobStore bs = new MemoryBlobStore();\n        MongoMK.Builder builder;\n        \n        builder = new MongoMK.Builder();\n        builder.setDocumentStore(ds).setBlobStore(bs).setAsyncDelay(0);\n        MongoMK mk1 = builder.setClusterId(1).open();\n        builder = new MongoMK.Builder();\n        builder.setDocumentStore(ds).setBlobStore(bs).setAsyncDelay(0);\n        MongoMK mk2 = builder.setClusterId(2).open();\n        builder = new MongoMK.Builder();\n        builder.setDocumentStore(ds).setBlobStore(bs).setAsyncDelay(0);\n        MongoMK mk3 = builder.setClusterId(3).open();\n\n        mk1.commit(\"/\", \"+\\\"test\\\":{}\", null, null);\n        mk2.commit(\"/\", \"+\\\"a\\\":{}\", null, null);\n        mk3.commit(\"/\", \"+\\\"b\\\":{}\", null, null);\n        mk2.backgroundWrite();\n        mk2.backgroundRead();\n        mk3.backgroundWrite();\n        mk3.backgroundRead();\n        mk1.backgroundWrite();\n        mk1.backgroundRead();\n        mk2.backgroundWrite();\n        mk2.backgroundRead();\n        mk3.backgroundWrite();\n        mk3.backgroundRead();\n        \n        mk2.commit(\"/\", \"^\\\"test/x\\\":1\", null, null);\n        String n3 = mk3.getNodes(\"/test\", mk3.getHeadRevision(), 0, 0, 10, null);\n        // mk3 didn't see the previous change yet; \n        // it is questionable if this should prevent any changes to this node\n        // (currently it does not)\n        assertEquals(\"{\\\":childNodeCount\\\":0}\", n3);\n        mk3.commit(\"/\", \"^\\\"test/y\\\":2\", null, null);\n\n        mk3.backgroundWrite();\n        mk3.backgroundRead();\n        mk1.backgroundWrite();\n        mk1.backgroundRead();\n\n        String r1 = mk1.getHeadRevision();\n        String n1 = mk1.getNodes(\"/test\", r1, 0, 0, 10, null);\n        // mk1 only sees the change of mk3 so far\n        assertEquals(\"{\\\"y\\\":2,\\\":childNodeCount\\\":0}\", n1);\n\n        mk2.backgroundWrite();\n        mk2.backgroundRead();\n        mk1.backgroundWrite();\n        mk1.backgroundRead();\n\n        String r1b = mk1.getHeadRevision();\n        String n1b = mk1.getNodes(\"/test\", r1b, 0, 0, 10, null);\n        // mk1 now sees both changes\n        assertEquals(\"{\\\"x\\\":1,\\\"y\\\":2,\\\":childNodeCount\\\":0}\", n1b);\n\n        mk1.dispose();\n        mk2.dispose();\n        mk3.dispose();\n    }","commit_id":"ec74c2dbdbd0798e0c01f3494f068584fcea1869","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"public void acceptType(JvmTypeReference ref) {\n\t\t\tacceptType(ref.getType());\n\t\t\tif (ref instanceof JvmParameterizedTypeReference) {\n\t\t\t\tEList<JvmTypeReference> list = ((JvmParameterizedTypeReference) ref).getArguments();\n\t\t\t\tfor (JvmTypeReference jvmTypeReference : list) {\n\t\t\t\t\tacceptType(jvmTypeReference);\n\t\t\t\t}\n\t\t\t} else if (ref instanceof JvmWildcardTypeReference) {\n\t\t\t\tEList<JvmTypeConstraint> constraints = ((JvmWildcardTypeReference) ref).getConstraints();\n\t\t\t\tfor (JvmTypeConstraint jvmTypeConstraint : constraints) {\n\t\t\t\t\tacceptType(jvmTypeConstraint.getTypeReference());\n\t\t\t\t}\n\t\t\t}\n\t\t}","id":61793,"modified_method":"public void acceptType(JvmTypeReference ref) {\n\t\t\tif (!(ref.eContainer() instanceof XFunctionTypeRef) && !(ref instanceof XFunctionTypeRef))\n\t\t\t\tacceptType(ref.getType());\n\t\t\tif (ref instanceof JvmParameterizedTypeReference) {\n\t\t\t\tEList<JvmTypeReference> list = ((JvmParameterizedTypeReference) ref).getArguments();\n\t\t\t\tfor (JvmTypeReference jvmTypeReference : list) {\n\t\t\t\t\tacceptType(jvmTypeReference);\n\t\t\t\t}\n\t\t\t} else if (ref instanceof JvmWildcardTypeReference) {\n\t\t\t\tEList<JvmTypeConstraint> constraints = ((JvmWildcardTypeReference) ref).getConstraints();\n\t\t\t\tfor (JvmTypeConstraint jvmTypeConstraint : constraints) {\n\t\t\t\t\tacceptType(jvmTypeConstraint.getTypeReference());\n\t\t\t\t}\n\t\t\t}\n\t\t}","commit_id":"87598b78a0bc7f7ff2a13590a30721b21a01eb1d","url":"https://github.com/eclipse/xtext"},{"original_method":"public void acceptType(JvmTypeReference ref) {\n\t\t\tif (!(ref.eContainer() instanceof XFunctionTypeRef) && !(ref instanceof XFunctionTypeRef))\n\t\t\t\tacceptType(ref.getType());\n\t\t\tif (ref instanceof JvmParameterizedTypeReference) {\n\t\t\t\tEList<JvmTypeReference> list = ((JvmParameterizedTypeReference) ref).getArguments();\n\t\t\t\tfor (JvmTypeReference jvmTypeReference : list) {\n\t\t\t\t\tacceptType(jvmTypeReference);\n\t\t\t\t}\n\t\t\t} else if (ref instanceof JvmWildcardTypeReference) {\n\t\t\t\tEList<JvmTypeConstraint> constraints = ((JvmWildcardTypeReference) ref).getConstraints();\n\t\t\t\tfor (JvmTypeConstraint jvmTypeConstraint : constraints) {\n\t\t\t\t\tacceptType(jvmTypeConstraint.getTypeReference());\n\t\t\t\t}\n\t\t\t}\n\t\t}","id":61794,"modified_method":"public void acceptType(JvmTypeReference ref) {\n\t\t\tif (ref instanceof XFunctionTypeRef)\n\t\t\t\treturn;\n\t\t\tif (ref.eContainer() instanceof XFunctionTypeRef && ref.eContainmentFeature() == TypesPackage.Literals.JVM_SPECIALIZED_TYPE_REFERENCE__EQUIVALENT)\n\t\t\t\treturn;\n\t\t\tacceptType(ref.getType());\n\t\t\tif (ref instanceof JvmParameterizedTypeReference) {\n\t\t\t\tEList<JvmTypeReference> list = ((JvmParameterizedTypeReference) ref).getArguments();\n\t\t\t\tfor (JvmTypeReference jvmTypeReference : list) {\n\t\t\t\t\tacceptType(jvmTypeReference);\n\t\t\t\t}\n\t\t\t} else if (ref instanceof JvmWildcardTypeReference) {\n\t\t\t\tEList<JvmTypeConstraint> constraints = ((JvmWildcardTypeReference) ref).getConstraints();\n\t\t\t\tfor (JvmTypeConstraint jvmTypeConstraint : constraints) {\n\t\t\t\t\tacceptType(jvmTypeConstraint.getTypeReference());\n\t\t\t\t}\n\t\t\t}\n\t\t}","commit_id":"5bbe79c74e9d21f98e0675ba7ac6b2c4dfae38fb","url":"https://github.com/eclipse/xtext"},{"original_method":"public void testFunctionTypes() throws Exception {\n\t\tString model = \n\t\t\t\t\"package foo.bar\\n\" +\n\t\t\t\t\t\t\"import java.util.Map$Entry\\n\" +\n\t\t\t\t\t\t\"class Foo {\\n\" +\n\t\t\t\t\t\t\"  def (Entry)=>void test() {\" +\n\t\t\t\t\t\t\"    return null\\n\" +\n\t\t\t\t\t\t\"  }\\n\" +\n\t\t\t\t\t\t\"}\\n\";\n\t\tXtendFile file = file(model, true);\n\t\tString section = organizeImports.getOrganizedImportSection((XtextResource) file.eResource());\n\t\t\n\t\tassertEquals(\n\t\t\t\t\"\\n\" +\n\t\t\t\t\t\t\"\\nimport java.util.Map$Entry\", section);\n\t}","id":61795,"modified_method":"public void testFunctionTypes_afterResolve() throws Exception {\n\t\tString model = \n\t\t\t\t\"package foo.bar\\n\" +\n\t\t\t\t\"import java.util.Map$Entry\\n\" +\n\t\t\t\t\"class Foo {\\n\" +\n\t\t\t\t\"  def (Entry)=>void test() {\" +\n\t\t\t\t\"    return null\\n\" +\n\t\t\t\t\"  }\\n\" +\n\t\t\t\t\"}\\n\";\n\t\tXtendFile file = file(model, true);\n\t\tString section = organizeImports.getOrganizedImportSection((XtextResource) file.eResource());\n\t\t\n\t\tassertEquals(\n\t\t\t\t\"\\n\" +\n\t\t\t\t\"\\nimport java.util.Map$Entry\", section);\n\t}","commit_id":"5bbe79c74e9d21f98e0675ba7ac6b2c4dfae38fb","url":"https://github.com/eclipse/xtext"},{"original_method":"public void acceptType(JvmTypeReference ref) {\n\t\t\tacceptType(ref.getType());\n\t\t\tif (ref instanceof JvmParameterizedTypeReference) {\n\t\t\t\tEList<JvmTypeReference> list = ((JvmParameterizedTypeReference) ref).getArguments();\n\t\t\t\tfor (JvmTypeReference jvmTypeReference : list) {\n\t\t\t\t\tacceptType(jvmTypeReference);\n\t\t\t\t}\n\t\t\t} else if (ref instanceof JvmWildcardTypeReference) {\n\t\t\t\tEList<JvmTypeConstraint> constraints = ((JvmWildcardTypeReference) ref).getConstraints();\n\t\t\t\tfor (JvmTypeConstraint jvmTypeConstraint : constraints) {\n\t\t\t\t\tacceptType(jvmTypeConstraint.getTypeReference());\n\t\t\t\t}\n\t\t\t}\n\t\t}","id":61796,"modified_method":"public void acceptType(JvmTypeReference ref) {\n\t\t\tif (!(ref.eContainer() instanceof XFunctionTypeRef) && !(ref instanceof XFunctionTypeRef))\n\t\t\t\tacceptType(ref.getType());\n\t\t\tif (ref instanceof JvmParameterizedTypeReference) {\n\t\t\t\tEList<JvmTypeReference> list = ((JvmParameterizedTypeReference) ref).getArguments();\n\t\t\t\tfor (JvmTypeReference jvmTypeReference : list) {\n\t\t\t\t\tacceptType(jvmTypeReference);\n\t\t\t\t}\n\t\t\t} else if (ref instanceof JvmWildcardTypeReference) {\n\t\t\t\tEList<JvmTypeConstraint> constraints = ((JvmWildcardTypeReference) ref).getConstraints();\n\t\t\t\tfor (JvmTypeConstraint jvmTypeConstraint : constraints) {\n\t\t\t\t\tacceptType(jvmTypeConstraint.getTypeReference());\n\t\t\t\t}\n\t\t\t}\n\t\t}","commit_id":"a397daad1dbe42a1a3840691a9d97edcbb26c5ec","url":"https://github.com/eclipse/xtext"},{"original_method":"public void acceptType(JvmTypeReference ref) {\n\t\t\tif (!(ref.eContainer() instanceof XFunctionTypeRef) && !(ref instanceof XFunctionTypeRef))\n\t\t\t\tacceptType(ref.getType());\n\t\t\tif (ref instanceof JvmParameterizedTypeReference) {\n\t\t\t\tEList<JvmTypeReference> list = ((JvmParameterizedTypeReference) ref).getArguments();\n\t\t\t\tfor (JvmTypeReference jvmTypeReference : list) {\n\t\t\t\t\tacceptType(jvmTypeReference);\n\t\t\t\t}\n\t\t\t} else if (ref instanceof JvmWildcardTypeReference) {\n\t\t\t\tEList<JvmTypeConstraint> constraints = ((JvmWildcardTypeReference) ref).getConstraints();\n\t\t\t\tfor (JvmTypeConstraint jvmTypeConstraint : constraints) {\n\t\t\t\t\tacceptType(jvmTypeConstraint.getTypeReference());\n\t\t\t\t}\n\t\t\t}\n\t\t}","id":61797,"modified_method":"public void acceptType(JvmTypeReference ref) {\n\t\t\tif (ref instanceof XFunctionTypeRef)\n\t\t\t\treturn;\n\t\t\tif (ref.eContainer() instanceof XFunctionTypeRef && ref.eContainmentFeature() == TypesPackage.Literals.JVM_SPECIALIZED_TYPE_REFERENCE__EQUIVALENT)\n\t\t\t\treturn;\n\t\t\tacceptType(ref.getType());\n\t\t\tif (ref instanceof JvmParameterizedTypeReference) {\n\t\t\t\tEList<JvmTypeReference> list = ((JvmParameterizedTypeReference) ref).getArguments();\n\t\t\t\tfor (JvmTypeReference jvmTypeReference : list) {\n\t\t\t\t\tacceptType(jvmTypeReference);\n\t\t\t\t}\n\t\t\t} else if (ref instanceof JvmWildcardTypeReference) {\n\t\t\t\tEList<JvmTypeConstraint> constraints = ((JvmWildcardTypeReference) ref).getConstraints();\n\t\t\t\tfor (JvmTypeConstraint jvmTypeConstraint : constraints) {\n\t\t\t\t\tacceptType(jvmTypeConstraint.getTypeReference());\n\t\t\t\t}\n\t\t\t}\n\t\t}","commit_id":"e8f6a000074c3eabf6e7aa086f9beb07701ca0f0","url":"https://github.com/eclipse/xtext"},{"original_method":"public void testFunctionTypes() throws Exception {\n\t\tString model = \n\t\t\t\t\"package foo.bar\\n\" +\n\t\t\t\t\t\t\"import java.util.Map$Entry\\n\" +\n\t\t\t\t\t\t\"class Foo {\\n\" +\n\t\t\t\t\t\t\"  def (Entry)=>void test() {\" +\n\t\t\t\t\t\t\"    return null\\n\" +\n\t\t\t\t\t\t\"  }\\n\" +\n\t\t\t\t\t\t\"}\\n\";\n\t\tXtendFile file = file(model, true);\n\t\tString section = organizeImports.getOrganizedImportSection((XtextResource) file.eResource());\n\t\t\n\t\tassertEquals(\n\t\t\t\t\"\\n\" +\n\t\t\t\t\t\t\"\\nimport java.util.Map$Entry\", section);\n\t}","id":61798,"modified_method":"public void testFunctionTypes_afterResolve() throws Exception {\n\t\tString model = \n\t\t\t\t\"package foo.bar\\n\" +\n\t\t\t\t\"import java.util.Map$Entry\\n\" +\n\t\t\t\t\"class Foo {\\n\" +\n\t\t\t\t\"  def (Entry)=>void test() {\" +\n\t\t\t\t\"    return null\\n\" +\n\t\t\t\t\"  }\\n\" +\n\t\t\t\t\"}\\n\";\n\t\tXtendFile file = file(model, true);\n\t\tString section = organizeImports.getOrganizedImportSection((XtextResource) file.eResource());\n\t\t\n\t\tassertEquals(\n\t\t\t\t\"\\n\" +\n\t\t\t\t\"\\nimport java.util.Map$Entry\", section);\n\t}","commit_id":"e8f6a000074c3eabf6e7aa086f9beb07701ca0f0","url":"https://github.com/eclipse/xtext"},{"original_method":"@Nullable\n  public static PsiCallExpression canBeMethodReferenceProblem(@Nullable final PsiElement body,\n                                                              final PsiParameter[] parameters,\n                                                              final PsiType functionalInterfaceType) {\n    return canBeMethodReferenceProblem(body, parameters, functionalInterfaceType, null);\n  }","id":61799,"modified_method":"@Nullable\n  public static PsiCallExpression canBeMethodReferenceProblem(@Nullable final PsiElement body,\n                                                              final PsiVariable[] parameters,\n                                                              final PsiType functionalInterfaceType) {\n    return canBeMethodReferenceProblem(body, parameters, functionalInterfaceType, null);\n  }","commit_id":"13d9f8d53a6b28d431ce3769f65dfa9f9e5fc633","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  public static String convertToMethodReference(@Nullable final PsiElement body,\n                                                final PsiParameter[] parameters,\n                                                final PsiType functionalInterfaceType,\n                                                @Nullable PsiElement context) {\n    final PsiCallExpression toConvertCall = canBeMethodReferenceProblem(body, parameters, functionalInterfaceType, context);\n    return createMethodReferenceText(toConvertCall, functionalInterfaceType, parameters);\n\n  }","id":61800,"modified_method":"@Nullable\n  public static String convertToMethodReference(@Nullable final PsiElement body,\n                                                final PsiVariable[] parameters,\n                                                final PsiType functionalInterfaceType,\n                                                @Nullable PsiElement context) {\n    final PsiCallExpression toConvertCall = canBeMethodReferenceProblem(body, parameters, functionalInterfaceType, context);\n    return createMethodReferenceText(toConvertCall, functionalInterfaceType, parameters);\n\n  }","commit_id":"13d9f8d53a6b28d431ce3769f65dfa9f9e5fc633","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static boolean isSimpleCall(final PsiParameter[] parameters, PsiCallExpression callExpression, PsiMethod psiMethod) {\n    final PsiExpressionList argumentList = callExpression.getArgumentList();\n    if (argumentList == null) {\n      return false;\n    }\n\n    final int calledParametersCount = psiMethod.getParameterList().getParametersCount();\n    final PsiExpression[] expressions = argumentList.getExpressions();\n\n    final PsiExpression qualifier;\n    if (callExpression instanceof PsiMethodCallExpression) {\n      qualifier = ((PsiMethodCallExpression)callExpression).getMethodExpression().getQualifierExpression();\n    }\n    else if (callExpression instanceof PsiNewExpression) {\n      qualifier = ((PsiNewExpression)callExpression).getQualifier();\n    }\n    else {\n      qualifier = null;\n    }\n\n    if (expressions.length == 0 && parameters.length == 0) {\n      return !(callExpression instanceof PsiNewExpression && qualifier != null);\n    }\n\n    final int offset = parameters.length - calledParametersCount;\n    if (expressions.length > calledParametersCount || offset < 0) {\n      return false;\n    }\n\n    for (int i = 0; i < expressions.length; i++) {\n      if (!resolvesToParameter(expressions[i], parameters[i + offset])) {\n        return false;\n      }\n    }\n\n    if (offset == 0) {\n      if (qualifier != null) {\n        final boolean[] parameterUsed = new boolean[] {false};\n        qualifier.accept(new JavaRecursiveElementWalkingVisitor() {\n          @Override\n          public void visitElement(PsiElement element) {\n            if (parameterUsed[0]) return;\n            super.visitElement(element);\n          }\n\n          @Override\n          public void visitReferenceExpression(PsiReferenceExpression expression) {\n            super.visitReferenceExpression(expression);\n            parameterUsed[0] |= ArrayUtil.find(parameters, expression.resolve()) >= 0;\n          }\n        });\n        return !parameterUsed[0];\n      }\n      return true;\n    }\n\n    return resolvesToParameter(qualifier, parameters[0]);\n  }","id":61801,"modified_method":"private static boolean isSimpleCall(final PsiVariable[] parameters, PsiCallExpression callExpression, PsiMethod psiMethod) {\n    final PsiExpressionList argumentList = callExpression.getArgumentList();\n    if (argumentList == null) {\n      return false;\n    }\n\n    final int calledParametersCount = psiMethod.getParameterList().getParametersCount();\n    final PsiExpression[] expressions = argumentList.getExpressions();\n\n    final PsiExpression qualifier;\n    if (callExpression instanceof PsiMethodCallExpression) {\n      qualifier = ((PsiMethodCallExpression)callExpression).getMethodExpression().getQualifierExpression();\n    }\n    else if (callExpression instanceof PsiNewExpression) {\n      qualifier = ((PsiNewExpression)callExpression).getQualifier();\n    }\n    else {\n      qualifier = null;\n    }\n\n    if (expressions.length == 0 && parameters.length == 0) {\n      return !(callExpression instanceof PsiNewExpression && qualifier != null);\n    }\n\n    final int offset = parameters.length - calledParametersCount;\n    if (expressions.length > calledParametersCount || offset < 0) {\n      return false;\n    }\n\n    for (int i = 0; i < expressions.length; i++) {\n      if (!resolvesToParameter(expressions[i], parameters[i + offset])) {\n        return false;\n      }\n    }\n\n    if (offset == 0) {\n      if (qualifier != null) {\n        final boolean[] parameterUsed = new boolean[] {false};\n        qualifier.accept(new JavaRecursiveElementWalkingVisitor() {\n          @Override\n          public void visitElement(PsiElement element) {\n            if (parameterUsed[0]) return;\n            super.visitElement(element);\n          }\n\n          @Override\n          public void visitReferenceExpression(PsiReferenceExpression expression) {\n            super.visitReferenceExpression(expression);\n            parameterUsed[0] |= ArrayUtil.find(parameters, expression.resolve()) >= 0;\n          }\n        });\n        return !parameterUsed[0];\n      }\n      return true;\n    }\n\n    return resolvesToParameter(qualifier, parameters[0]);\n  }","commit_id":"13d9f8d53a6b28d431ce3769f65dfa9f9e5fc633","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static boolean resolvesToParameter(PsiExpression expression, PsiParameter parameter) {\n    return expression instanceof PsiReferenceExpression && ((PsiReferenceExpression)expression).resolve() == parameter;\n  }","id":61802,"modified_method":"private static boolean resolvesToParameter(PsiExpression expression, PsiVariable parameter) {\n    return expression instanceof PsiReferenceExpression && ((PsiReferenceExpression)expression).resolve() == parameter;\n  }","commit_id":"13d9f8d53a6b28d431ce3769f65dfa9f9e5fc633","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  public static PsiCallExpression canBeMethodReferenceProblem(@Nullable final PsiElement body,\n                                                              final PsiParameter[] parameters,\n                                                              PsiType functionalInterfaceType, \n                                                              @Nullable PsiElement context) {\n    final PsiCallExpression callExpression = extractMethodCallFromBlock(body);\n    if (callExpression instanceof PsiNewExpression) {\n      final PsiNewExpression newExpression = (PsiNewExpression)callExpression;\n      if (newExpression.getAnonymousClass() != null || newExpression.getArrayInitializer() != null) {\n        return null;\n      }\n    }\n\n    final String methodReferenceText = createMethodReferenceText(callExpression, functionalInterfaceType, parameters);\n    if (methodReferenceText != null) {\n      LOG.assertTrue(callExpression != null);\n      final PsiMethod method = callExpression.resolveMethod();\n      if (method != null) {\n        if (!isSimpleCall(parameters, callExpression, method)) {\n          return null;\n        }\n      }\n      else {\n        LOG.assertTrue(callExpression instanceof PsiNewExpression);\n        if (((PsiNewExpression)callExpression).getQualifier() != null) {\n          return null;\n        }\n\n        final PsiExpression[] dims = ((PsiNewExpression)callExpression).getArrayDimensions();\n        if (dims.length == 1 && parameters.length == 1){\n          if (!resolvesToParameter(dims[0], parameters[0])) {\n            return null;\n          }\n        }\n        else if (dims.length > 0) {\n          return null;\n        }\n\n        if (callExpression.getTypeArguments().length > 0) {\n          return null;\n        }\n      }\n      final PsiElementFactory elementFactory = JavaPsiFacade.getElementFactory(callExpression.getProject());\n      PsiMethodReferenceExpression methodReferenceExpression;\n      try {\n        methodReferenceExpression = (PsiMethodReferenceExpression)elementFactory.createExpressionFromText(methodReferenceText, context != null ? context : callExpression);\n      }\n      catch (IncorrectOperationException e) {\n        LOG.error(callExpression.getText(), e);\n        return null;\n      }\n      final Map<PsiElement, PsiType> map = LambdaUtil.getFunctionalTypeMap();\n      try {\n        map.put(methodReferenceExpression, functionalInterfaceType);\n        final JavaResolveResult result = methodReferenceExpression.advancedResolve(false);\n        final PsiElement element = result.getElement();\n        if (element != null && result.isAccessible() &&\n            !(result instanceof MethodCandidateInfo && !((MethodCandidateInfo)result).isApplicable())) {\n          if (!(element instanceof PsiMethod)) {\n            return callExpression;\n          }\n\n          return method != null && MethodSignatureUtil.areSignaturesEqual((PsiMethod)element, method) ? callExpression : null;\n        }\n      }\n      finally {\n        map.remove(methodReferenceExpression);\n      }\n    }\n    return null;\n  }","id":61803,"modified_method":"@Nullable\n  public static PsiCallExpression canBeMethodReferenceProblem(@Nullable final PsiElement body,\n                                                              final PsiVariable[] parameters,\n                                                              PsiType functionalInterfaceType, \n                                                              @Nullable PsiElement context) {\n    final PsiCallExpression callExpression = extractMethodCallFromBlock(body);\n    if (callExpression instanceof PsiNewExpression) {\n      final PsiNewExpression newExpression = (PsiNewExpression)callExpression;\n      if (newExpression.getAnonymousClass() != null || newExpression.getArrayInitializer() != null) {\n        return null;\n      }\n    }\n\n    final String methodReferenceText = createMethodReferenceText(callExpression, functionalInterfaceType, parameters);\n    if (methodReferenceText != null) {\n      LOG.assertTrue(callExpression != null);\n      final PsiMethod method = callExpression.resolveMethod();\n      if (method != null) {\n        if (!isSimpleCall(parameters, callExpression, method)) {\n          return null;\n        }\n      }\n      else {\n        LOG.assertTrue(callExpression instanceof PsiNewExpression);\n        if (((PsiNewExpression)callExpression).getQualifier() != null) {\n          return null;\n        }\n\n        final PsiExpression[] dims = ((PsiNewExpression)callExpression).getArrayDimensions();\n        if (dims.length == 1 && parameters.length == 1){\n          if (!resolvesToParameter(dims[0], parameters[0])) {\n            return null;\n          }\n        }\n        else if (dims.length > 0) {\n          return null;\n        }\n\n        if (callExpression.getTypeArguments().length > 0) {\n          return null;\n        }\n      }\n      final PsiElementFactory elementFactory = JavaPsiFacade.getElementFactory(callExpression.getProject());\n      PsiMethodReferenceExpression methodReferenceExpression;\n      try {\n        methodReferenceExpression = (PsiMethodReferenceExpression)elementFactory.createExpressionFromText(methodReferenceText, context != null ? context : callExpression);\n      }\n      catch (IncorrectOperationException e) {\n        LOG.error(callExpression.getText(), e);\n        return null;\n      }\n      final Map<PsiElement, PsiType> map = LambdaUtil.getFunctionalTypeMap();\n      try {\n        map.put(methodReferenceExpression, functionalInterfaceType);\n        final JavaResolveResult result = methodReferenceExpression.advancedResolve(false);\n        final PsiElement element = result.getElement();\n        if (element != null && result.isAccessible() &&\n            !(result instanceof MethodCandidateInfo && !((MethodCandidateInfo)result).isApplicable())) {\n          if (!(element instanceof PsiMethod)) {\n            return callExpression;\n          }\n\n          return method != null && MethodSignatureUtil.areSignaturesEqual((PsiMethod)element, method) ? callExpression : null;\n        }\n      }\n      finally {\n        map.remove(methodReferenceExpression);\n      }\n    }\n    return null;\n  }","commit_id":"13d9f8d53a6b28d431ce3769f65dfa9f9e5fc633","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static boolean isPairedNoReceiver(PsiParameter[] parameters,\n                                            PsiType receiverType,\n                                            PsiMethod method) {\n    final PsiParameter[] nonReceiverCandidateParams = method.getParameterList().getParameters();\n    return nonReceiverCandidateParams.length == parameters.length &&\n           method.hasModifierProperty(PsiModifier.STATIC) &&\n           TypeConversionUtil.areTypesConvertible(nonReceiverCandidateParams[0].getType(), receiverType);\n  }","id":61804,"modified_method":"private static boolean isPairedNoReceiver(PsiVariable[] parameters,\n                                            PsiType receiverType,\n                                            PsiMethod method) {\n    final PsiParameter[] nonReceiverCandidateParams = method.getParameterList().getParameters();\n    return nonReceiverCandidateParams.length == parameters.length &&\n           method.hasModifierProperty(PsiModifier.STATIC) &&\n           TypeConversionUtil.areTypesConvertible(nonReceiverCandidateParams[0].getType(), receiverType);\n  }","commit_id":"13d9f8d53a6b28d431ce3769f65dfa9f9e5fc633","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  private static String composeReceiverQualifierText(PsiParameter[] parameters,\n                                                     PsiMethod psiMethod,\n                                                     PsiClass containingClass,\n                                                     @NotNull PsiExpression qualifierExpression) {\n    if (psiMethod.hasModifierProperty(PsiModifier.STATIC)) {\n      return null;\n    }\n\n    final PsiMethod nonAmbiguousMethod = getNonAmbiguousReceiver(parameters, psiMethod);\n    if (nonAmbiguousMethod == null) {\n      return null;\n    }\n\n    final PsiClass nonAmbiguousContainingClass = nonAmbiguousMethod.getContainingClass();\n    if (!containingClass.equals(nonAmbiguousContainingClass)) {\n      return getClassReferenceName(nonAmbiguousContainingClass);\n    }\n\n    if (containingClass.isPhysical() &&\n        qualifierExpression instanceof PsiReferenceExpression &&\n        !PsiTypesUtil.isGetClass(psiMethod) &&\n        ArrayUtil.find(parameters, ((PsiReferenceExpression)qualifierExpression).resolve()) > -1) {\n      return getClassReferenceName(containingClass);\n    }\n\n    final PsiType qualifierExpressionType = qualifierExpression.getType();\n    if (qualifierExpressionType != null && !FunctionalInterfaceParameterizationUtil.isWildcardParameterized(qualifierExpressionType)) {\n      try {\n        final String canonicalText = qualifierExpressionType.getCanonicalText();\n        JavaPsiFacade.getElementFactory(containingClass.getProject()).createExpressionFromText(canonicalText + \"::foo\", qualifierExpression);\n        return canonicalText;\n      }\n      catch (IncorrectOperationException ignore){}\n    }\n    return getClassReferenceName(containingClass);\n  }","id":61805,"modified_method":"@Nullable\n  private static String composeReceiverQualifierText(PsiVariable[] parameters,\n                                                     PsiMethod psiMethod,\n                                                     PsiClass containingClass,\n                                                     @NotNull PsiExpression qualifierExpression) {\n    if (psiMethod.hasModifierProperty(PsiModifier.STATIC)) {\n      return null;\n    }\n\n    final PsiMethod nonAmbiguousMethod = getNonAmbiguousReceiver(parameters, psiMethod);\n    if (nonAmbiguousMethod == null) {\n      return null;\n    }\n\n    final PsiClass nonAmbiguousContainingClass = nonAmbiguousMethod.getContainingClass();\n    if (!containingClass.equals(nonAmbiguousContainingClass)) {\n      return getClassReferenceName(nonAmbiguousContainingClass);\n    }\n\n    if (containingClass.isPhysical() &&\n        qualifierExpression instanceof PsiReferenceExpression &&\n        !PsiTypesUtil.isGetClass(psiMethod) &&\n        ArrayUtil.find(parameters, ((PsiReferenceExpression)qualifierExpression).resolve()) > -1) {\n      return getClassReferenceName(containingClass);\n    }\n\n    final PsiType qualifierExpressionType = qualifierExpression.getType();\n    if (qualifierExpressionType != null && !FunctionalInterfaceParameterizationUtil.isWildcardParameterized(qualifierExpressionType)) {\n      try {\n        final String canonicalText = qualifierExpressionType.getCanonicalText();\n        JavaPsiFacade.getElementFactory(containingClass.getProject()).createExpressionFromText(canonicalText + \"::foo\", qualifierExpression);\n        return canonicalText;\n      }\n      catch (IncorrectOperationException ignore){}\n    }\n    return getClassReferenceName(containingClass);\n  }","commit_id":"13d9f8d53a6b28d431ce3769f65dfa9f9e5fc633","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  public static String createMethodReferenceText(final PsiElement element,\n                                                 final PsiType functionalInterfaceType,\n                                                 final PsiParameter[] parameters) {\n    if (element instanceof PsiMethodCallExpression) {\n      final PsiMethodCallExpression methodCall = (PsiMethodCallExpression)element;\n\n      JavaResolveResult result = methodCall.resolveMethodGenerics();\n      final PsiMethod psiMethod = (PsiMethod)result.getElement();\n      if (psiMethod == null) {\n        return null;\n      }\n\n      final PsiReferenceExpression methodExpression = methodCall.getMethodExpression();\n      final String qualifierByMethodCall = getQualifierTextByMethodCall(methodCall, functionalInterfaceType, parameters, psiMethod, result.getSubstitutor());\n      if (qualifierByMethodCall != null) {\n        return qualifierByMethodCall + \"::\" + ((PsiMethodCallExpression)element).getTypeArgumentList().getText() + methodExpression.getReferenceName();\n      }\n    }\n    else if (element instanceof PsiNewExpression) {\n      final String qualifierByNew = getQualifierTextByNewExpression((PsiNewExpression)element);\n      if (qualifierByNew != null) {\n        return qualifierByNew + ((PsiNewExpression)element).getTypeArgumentList().getText() + \"::new\";\n      }\n    }\n    return null;\n  }","id":61806,"modified_method":"@Nullable\n  public static String createMethodReferenceText(final PsiElement element,\n                                                 final PsiType functionalInterfaceType,\n                                                 final PsiVariable[] parameters) {\n    if (element instanceof PsiMethodCallExpression) {\n      final PsiMethodCallExpression methodCall = (PsiMethodCallExpression)element;\n\n      JavaResolveResult result = methodCall.resolveMethodGenerics();\n      final PsiMethod psiMethod = (PsiMethod)result.getElement();\n      if (psiMethod == null) {\n        return null;\n      }\n\n      final PsiReferenceExpression methodExpression = methodCall.getMethodExpression();\n      final String qualifierByMethodCall = getQualifierTextByMethodCall(methodCall, functionalInterfaceType, parameters, psiMethod, result.getSubstitutor());\n      if (qualifierByMethodCall != null) {\n        return qualifierByMethodCall + \"::\" + ((PsiMethodCallExpression)element).getTypeArgumentList().getText() + methodExpression.getReferenceName();\n      }\n    }\n    else if (element instanceof PsiNewExpression) {\n      final String qualifierByNew = getQualifierTextByNewExpression((PsiNewExpression)element);\n      if (qualifierByNew != null) {\n        return qualifierByNew + ((PsiNewExpression)element).getTypeArgumentList().getText() + \"::new\";\n      }\n    }\n    return null;\n  }","commit_id":"13d9f8d53a6b28d431ce3769f65dfa9f9e5fc633","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  private static String getQualifierTextByMethodCall(final PsiMethodCallExpression methodCall,\n                                                     final PsiType functionalInterfaceType,\n                                                     final PsiParameter[] parameters,\n                                                     final PsiMethod psiMethod, \n                                                     final PsiSubstitutor substitutor) {\n\n    final PsiExpression qualifierExpression = methodCall.getMethodExpression().getQualifierExpression();\n\n    final PsiClass containingClass = psiMethod.getContainingClass();\n    LOG.assertTrue(containingClass != null);\n\n    if (qualifierExpression != null) {\n      boolean isReceiverType = false;\n      if (qualifierExpression instanceof PsiReferenceExpression && ArrayUtil.find(parameters, ((PsiReferenceExpression)qualifierExpression).resolve()) > -1) {\n        isReceiverType = PsiMethodReferenceUtil.isReceiverType(PsiMethodReferenceUtil.getFirstParameterType(functionalInterfaceType, qualifierExpression), containingClass, substitutor);\n      }\n      return isReceiverType ? composeReceiverQualifierText(parameters, psiMethod, containingClass, qualifierExpression)\n                            : qualifierExpression.getText();\n    }\n    else {\n      if (psiMethod.hasModifierProperty(PsiModifier.STATIC)) {\n        return getClassReferenceName(containingClass);\n      }\n      else {\n        PsiClass parentContainingClass = PsiTreeUtil.getParentOfType(methodCall, PsiClass.class);\n        if (parentContainingClass instanceof PsiAnonymousClass) {\n          parentContainingClass = PsiTreeUtil.getParentOfType(parentContainingClass, PsiClass.class, true);\n        }\n        PsiClass treeContainingClass = parentContainingClass;\n        while (treeContainingClass != null && !InheritanceUtil.isInheritorOrSelf(treeContainingClass, containingClass, true)) {\n          treeContainingClass = PsiTreeUtil.getParentOfType(treeContainingClass, PsiClass.class, true);\n        }\n        if (treeContainingClass != null && containingClass != parentContainingClass && treeContainingClass != parentContainingClass) {\n          final String treeContainingClassName = treeContainingClass.getName();\n          if (treeContainingClassName == null) {\n            return null;\n          }\n          return treeContainingClassName + \".this\";\n        }\n        else {\n          return \"this\";\n        }\n      }\n    }\n  }","id":61807,"modified_method":"@Nullable\n  private static String getQualifierTextByMethodCall(final PsiMethodCallExpression methodCall,\n                                                     final PsiType functionalInterfaceType,\n                                                     final PsiVariable[] parameters,\n                                                     final PsiMethod psiMethod, \n                                                     final PsiSubstitutor substitutor) {\n\n    final PsiExpression qualifierExpression = methodCall.getMethodExpression().getQualifierExpression();\n\n    final PsiClass containingClass = psiMethod.getContainingClass();\n    LOG.assertTrue(containingClass != null);\n\n    if (qualifierExpression != null) {\n      boolean isReceiverType = false;\n      if (qualifierExpression instanceof PsiReferenceExpression && ArrayUtil.find(parameters, ((PsiReferenceExpression)qualifierExpression).resolve()) > -1) {\n        isReceiverType = PsiMethodReferenceUtil.isReceiverType(PsiMethodReferenceUtil.getFirstParameterType(functionalInterfaceType, qualifierExpression), containingClass, substitutor);\n      }\n      return isReceiverType ? composeReceiverQualifierText(parameters, psiMethod, containingClass, qualifierExpression)\n                            : qualifierExpression.getText();\n    }\n    else {\n      if (psiMethod.hasModifierProperty(PsiModifier.STATIC)) {\n        return getClassReferenceName(containingClass);\n      }\n      else {\n        PsiClass parentContainingClass = PsiTreeUtil.getParentOfType(methodCall, PsiClass.class);\n        if (parentContainingClass instanceof PsiAnonymousClass) {\n          parentContainingClass = PsiTreeUtil.getParentOfType(parentContainingClass, PsiClass.class, true);\n        }\n        PsiClass treeContainingClass = parentContainingClass;\n        while (treeContainingClass != null && !InheritanceUtil.isInheritorOrSelf(treeContainingClass, containingClass, true)) {\n          treeContainingClass = PsiTreeUtil.getParentOfType(treeContainingClass, PsiClass.class, true);\n        }\n        if (treeContainingClass != null && containingClass != parentContainingClass && treeContainingClass != parentContainingClass) {\n          final String treeContainingClassName = treeContainingClass.getName();\n          if (treeContainingClassName == null) {\n            return null;\n          }\n          return treeContainingClassName + \".this\";\n        }\n        else {\n          return \"this\";\n        }\n      }\n    }\n  }","commit_id":"13d9f8d53a6b28d431ce3769f65dfa9f9e5fc633","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  private static PsiMethod getNonAmbiguousReceiver(PsiParameter[] parameters, @NotNull PsiMethod psiMethod) {\n    String methodName = psiMethod.getName();\n    PsiClass containingClass = psiMethod.getContainingClass();\n    if (containingClass == null) return null;\n\n    final PsiMethod[] psiMethods = containingClass.findMethodsByName(methodName, false);\n    if (psiMethods.length == 1) return psiMethod;\n\n    final PsiType receiverType = parameters[0].getType();\n    for (PsiMethod method : psiMethods) {\n      if (isPairedNoReceiver(parameters, receiverType, method)) {\n        final PsiMethod[] deepestSuperMethods = psiMethod.findDeepestSuperMethods();\n        if (deepestSuperMethods.length > 0) {\n          for (PsiMethod superMethod : deepestSuperMethods) {\n            PsiMethod validSuperMethod = getNonAmbiguousReceiver(parameters, superMethod);\n            if (validSuperMethod != null) return validSuperMethod;\n          }\n        }\n        return null;\n      }\n    }\n    return psiMethod;\n  }","id":61808,"modified_method":"@Nullable\n  private static PsiMethod getNonAmbiguousReceiver(PsiVariable[] parameters, @NotNull PsiMethod psiMethod) {\n    String methodName = psiMethod.getName();\n    PsiClass containingClass = psiMethod.getContainingClass();\n    if (containingClass == null) return null;\n\n    final PsiMethod[] psiMethods = containingClass.findMethodsByName(methodName, false);\n    if (psiMethods.length == 1) return psiMethod;\n\n    final PsiType receiverType = parameters[0].getType();\n    for (PsiMethod method : psiMethods) {\n      if (isPairedNoReceiver(parameters, receiverType, method)) {\n        final PsiMethod[] deepestSuperMethods = psiMethod.findDeepestSuperMethods();\n        if (deepestSuperMethods.length > 0) {\n          for (PsiMethod superMethod : deepestSuperMethods) {\n            PsiMethod validSuperMethod = getNonAmbiguousReceiver(parameters, superMethod);\n            if (validSuperMethod != null) return validSuperMethod;\n          }\n        }\n        return null;\n      }\n    }\n    return psiMethod;\n  }","commit_id":"13d9f8d53a6b28d431ce3769f65dfa9f9e5fc633","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void test(Map<String, String[]> map) {\n    List<String> result = map.entrySet().stream().filter(entry -> entry.getKey().startsWith(\"x\")).map(Map.Entry::getValue).flatMap(arr -> Arrays.stream(arr)).map(String::trim).collect(Collectors.toList());\n  }","id":61809,"modified_method":"public void test(Map<String, String[]> map) {\n    List<String> result = map.entrySet().stream().filter(entry -> entry.getKey().startsWith(\"x\")).map(Map.Entry::getValue).flatMap(Arrays::stream).map(String::trim).collect(Collectors.toList());\n  }","commit_id":"13d9f8d53a6b28d431ce3769f65dfa9f9e5fc633","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n     * Converts this TerminalBlock to PsiElement (either PsiStatement or PsiCodeBlock)\n     *\n     * @param factory factory to use to create new element if necessary\n     * @return the PsiElement\n     */\n    public PsiElement convertToElement(PsiElementFactory factory) {\n      if (myTo - myFrom == 1) {\n        return myStatements[myFrom];\n      }\n      PsiCodeBlock block = factory.createCodeBlock();\n      for (int i = myFrom; i < myTo; i++) {\n        block.add(myStatements[i]);\n      }\n      return block;\n    }","id":61810,"modified_method":"/**\n     * Converts this TerminalBlock to PsiElement (either PsiStatement or PsiCodeBlock)\n     *\n     * @param factory factory to use to create new element if necessary\n     * @return the PsiElement\n     */\n    public PsiElement convertToElement(PsiElementFactory factory) {\n      if (myStatements.length == 1) {\n        return myStatements[0];\n      }\n      PsiCodeBlock block = factory.createCodeBlock();\n      for (PsiStatement statement : myStatements) {\n        block.add(statement);\n      }\n      return block;\n    }","commit_id":"13d9f8d53a6b28d431ce3769f65dfa9f9e5fc633","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"PsiStatement getSingleStatement() {\n      return myTo - myFrom == 1 ? myStatements[myFrom] : null;\n    }","id":61811,"modified_method":"PsiStatement getSingleStatement() {\n      return myStatements.length == 1 ? myStatements[0] : null;\n    }","commit_id":"13d9f8d53a6b28d431ce3769f65dfa9f9e5fc633","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void replaceWith(PsiStatement statement) {\n      myStatements = new PsiStatement[] {statement};\n      myFrom = 0;\n      myTo = 1;\n      flatten();\n    }","id":61812,"modified_method":"private void replaceWith(PsiStatement statement) {\n      myStatements = new PsiStatement[] {statement};\n      flatten();\n    }","commit_id":"13d9f8d53a6b28d431ce3769f65dfa9f9e5fc633","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Contract(\"_, _ -> !null\")\n    static TerminalBlock from(PsiVariable variable, PsiStatement statement) {\n      PsiStatement[] statements = {statement};\n      return new TerminalBlock(variable, statements, 0, 1);\n    }","id":61813,"modified_method":"@Contract(\"_, _ -> !null\")\n    static TerminalBlock from(PsiVariable variable, PsiStatement statement) {\n      return new TerminalBlock(variable, new PsiStatement[] {statement});\n    }","commit_id":"13d9f8d53a6b28d431ce3769f65dfa9f9e5fc633","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n     * If possible, extract single intermediate stream operation from this\n     * {@code TerminalBlock} changing the TerminalBlock itself to exclude this operation\n     *\n     * @return extracted operation or null if extraction is not possible\n     */\n    @Nullable\n    Operation extractOperation() {\n      // extract filter\n      if(getSingleStatement() instanceof PsiIfStatement) {\n        PsiIfStatement ifStatement = (PsiIfStatement)getSingleStatement();\n        if(ifStatement.getElseBranch() != null || ifStatement.getCondition() == null)\n          return null;\n        replaceWith(ifStatement.getThenBranch());\n        return new FilterOp(ifStatement.getCondition(), myVariable);\n      }\n      // extract flatMap\n      if(getSingleStatement() instanceof PsiForeachStatement) {\n        PsiForeachStatement foreachStatement = (PsiForeachStatement)getSingleStatement();\n        final PsiExpression iteratedValue = foreachStatement.getIteratedValue();\n        final PsiStatement body = foreachStatement.getBody();\n        if (iteratedValue != null && body != null) {\n          final PsiType iteratedValueType = iteratedValue.getType();\n          Operation op = null;\n          if(iteratedValueType instanceof PsiArrayType) {\n            // do not handle flatMapToPrimitive\n            if (((PsiArrayType)iteratedValueType).getComponentType() instanceof PsiPrimitiveType)\n              return null;\n            op = new ArrayFlatMapOp(iteratedValue, myVariable);\n          } else {\n            final PsiClass iteratorClass = PsiUtil.resolveClassInClassTypeOnly(iteratedValueType);\n            final PsiClass collectionClass =\n              JavaPsiFacade.getInstance(body.getProject())\n                .findClass(CommonClassNames.JAVA_UTIL_COLLECTION, foreachStatement.getResolveScope());\n            if (collectionClass != null && InheritanceUtil.isInheritorOrSelf(iteratorClass, collectionClass, true)) {\n              op = new FlatMapOp(iteratedValue, myVariable);\n            }\n          }\n          if(op != null && ReferencesSearch.search(myVariable, new LocalSearchScope(body)).findFirst() == null) {\n            myVariable = foreachStatement.getIterationParameter();\n            myStatements = new PsiStatement[] {body};\n            myFrom = 0;\n            myTo = 1;\n            flatten();\n            return op;\n          }\n        }\n      }\n      // extract map\n      if(myTo > myFrom+1) {\n        PsiStatement first = myStatements[myFrom];\n        if(first instanceof PsiDeclarationStatement) {\n          PsiDeclarationStatement decl = (PsiDeclarationStatement)first;\n          PsiElement[] elements = decl.getDeclaredElements();\n          if(elements.length == 1) {\n            PsiElement element = elements[0];\n            if(element instanceof PsiLocalVariable) {\n              PsiLocalVariable declaredVar = (PsiLocalVariable)element;\n              // do not handle mapToPrimitive\n              if(!(declaredVar.getType() instanceof PsiPrimitiveType)) {\n                PsiExpression initializer = declaredVar.getInitializer();\n                if (initializer != null &&\n                    ReferencesSearch.search(myVariable, new LocalSearchScope(Arrays.copyOfRange(myStatements, myFrom + 1, myTo)))\n                      .findFirst() == null) {\n                  MapOp op = new MapOp(initializer, myVariable);\n                  myVariable = declaredVar;\n                  myFrom++;\n                  flatten();\n                  return op;\n                }\n              }\n            }\n          }\n        }\n      }\n      return null;\n    }","id":61814,"modified_method":"/**\n     * If possible, extract single intermediate stream operation from this\n     * {@code TerminalBlock} changing the TerminalBlock itself to exclude this operation\n     *\n     * @return extracted operation or null if extraction is not possible\n     */\n    @Nullable\n    Operation extractOperation() {\n      // extract filter\n      if(getSingleStatement() instanceof PsiIfStatement) {\n        PsiIfStatement ifStatement = (PsiIfStatement)getSingleStatement();\n        if(ifStatement.getElseBranch() != null || ifStatement.getCondition() == null)\n          return null;\n        replaceWith(ifStatement.getThenBranch());\n        return new FilterOp(ifStatement.getCondition(), myVariable);\n      }\n      // extract flatMap\n      if(getSingleStatement() instanceof PsiForeachStatement) {\n        PsiForeachStatement foreachStatement = (PsiForeachStatement)getSingleStatement();\n        final PsiExpression iteratedValue = foreachStatement.getIteratedValue();\n        final PsiStatement body = foreachStatement.getBody();\n        if (iteratedValue != null && body != null) {\n          final PsiType iteratedValueType = iteratedValue.getType();\n          Operation op = null;\n          if(iteratedValueType instanceof PsiArrayType) {\n            // do not handle flatMapToPrimitive\n            if (((PsiArrayType)iteratedValueType).getComponentType() instanceof PsiPrimitiveType)\n              return null;\n            op = new ArrayFlatMapOp(iteratedValue, myVariable);\n          } else {\n            final PsiClass iteratorClass = PsiUtil.resolveClassInClassTypeOnly(iteratedValueType);\n            final PsiClass collectionClass =\n              JavaPsiFacade.getInstance(body.getProject())\n                .findClass(CommonClassNames.JAVA_UTIL_COLLECTION, foreachStatement.getResolveScope());\n            if (collectionClass != null && InheritanceUtil.isInheritorOrSelf(iteratorClass, collectionClass, true)) {\n              op = new FlatMapOp(iteratedValue, myVariable);\n            }\n          }\n          if(op != null && ReferencesSearch.search(myVariable, new LocalSearchScope(body)).findFirst() == null) {\n            myVariable = foreachStatement.getIterationParameter();\n            replaceWith(body);\n            return op;\n          }\n        }\n      }\n      // extract map\n      if(myStatements.length > 1) {\n        PsiStatement first = myStatements[0];\n        if(first instanceof PsiDeclarationStatement) {\n          PsiDeclarationStatement decl = (PsiDeclarationStatement)first;\n          PsiElement[] elements = decl.getDeclaredElements();\n          if(elements.length == 1) {\n            PsiElement element = elements[0];\n            if(element instanceof PsiLocalVariable) {\n              PsiLocalVariable declaredVar = (PsiLocalVariable)element;\n              // do not handle mapToPrimitive\n              if(!(declaredVar.getType() instanceof PsiPrimitiveType)) {\n                PsiExpression initializer = declaredVar.getInitializer();\n                PsiStatement[] leftOver = Arrays.copyOfRange(myStatements, 1, myStatements.length);\n                if (initializer != null &&\n                    ReferencesSearch.search(myVariable, new LocalSearchScope(leftOver))\n                      .findFirst() == null) {\n                  MapOp op = new MapOp(initializer, myVariable);\n                  myVariable = declaredVar;\n                  myStatements = leftOver;\n                  flatten();\n                  return op;\n                }\n              }\n            }\n          }\n        }\n      }\n      return null;\n    }","commit_id":"13d9f8d53a6b28d431ce3769f65dfa9f9e5fc633","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static String compoundLambdaOrMethodReference(PsiVariable variable,\n                                                        PsiExpression expression,\n                                                        String samQualifiedName,\n                                                        PsiType[] samParamTypes) {\n    String result = \"\";\n    final Project project = variable.getProject();\n    final JavaPsiFacade psiFacade = JavaPsiFacade.getInstance(project);\n    final PsiClass functionClass = psiFacade.findClass(samQualifiedName, GlobalSearchScope.allScope(project));\n    for (int i = 0; i < samParamTypes.length; i++) {\n      if (samParamTypes[i] instanceof PsiPrimitiveType) {\n        samParamTypes[i] = ((PsiPrimitiveType)samParamTypes[i]).getBoxedType(expression);\n      }\n    }\n    final PsiClassType functionalInterfaceType = functionClass != null ? psiFacade.getElementFactory().createType(functionClass, samParamTypes) : null;\n    String methodReferenceText = null;\n    if(variable instanceof PsiParameter) {\n      final PsiParameter[] parameters = {(PsiParameter)variable};\n      methodReferenceText = LambdaCanBeMethodReferenceInspection.convertToMethodReference(expression, parameters, functionalInterfaceType, null);\n    }\n    if (methodReferenceText != null) {\n      LOG.assertTrue(functionalInterfaceType != null);\n      result += \"(\" + functionalInterfaceType.getCanonicalText() + \")\" + methodReferenceText;\n    } else {\n      result += variable.getName() + \" -> \" + expression.getText();\n    }\n    return result;\n  }","id":61815,"modified_method":"private static String compoundLambdaOrMethodReference(PsiVariable variable,\n                                                        PsiExpression expression,\n                                                        String samQualifiedName,\n                                                        PsiType[] samParamTypes) {\n    String result = \"\";\n    final Project project = variable.getProject();\n    final JavaPsiFacade psiFacade = JavaPsiFacade.getInstance(project);\n    final PsiClass functionClass = psiFacade.findClass(samQualifiedName, GlobalSearchScope.allScope(project));\n    for (int i = 0; i < samParamTypes.length; i++) {\n      if (samParamTypes[i] instanceof PsiPrimitiveType) {\n        samParamTypes[i] = ((PsiPrimitiveType)samParamTypes[i]).getBoxedType(expression);\n      }\n    }\n    final PsiClassType functionalInterfaceType = functionClass != null ? psiFacade.getElementFactory().createType(functionClass, samParamTypes) : null;\n    final PsiVariable[] parameters = {variable};\n    String methodReferenceText = LambdaCanBeMethodReferenceInspection.convertToMethodReference(expression, parameters, functionalInterfaceType, null);\n    if (methodReferenceText != null) {\n      LOG.assertTrue(functionalInterfaceType != null);\n      result += \"(\" + functionalInterfaceType.getCanonicalText() + \")\" + methodReferenceText;\n    } else {\n      result += variable.getName() + \" -> \" + expression.getText();\n    }\n    return result;\n  }","commit_id":"13d9f8d53a6b28d431ce3769f65dfa9f9e5fc633","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private TerminalBlock(PsiVariable variable, PsiStatement[] statements, int from, int to) {\n      myVariable = variable;\n      myStatements = statements;\n      myFrom = from;\n      myTo = to;\n      flatten();\n    }","id":61816,"modified_method":"private TerminalBlock(PsiVariable variable, PsiStatement[] statements) {\n      myVariable = variable;\n      myStatements = statements;\n      flatten();\n    }","commit_id":"13d9f8d53a6b28d431ce3769f65dfa9f9e5fc633","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void flatten() {\n      while(myTo - myFrom == 1 && myStatements[myFrom] instanceof PsiBlockStatement) {\n        myStatements = ((PsiBlockStatement)myStatements[myFrom]).getCodeBlock().getStatements();\n        myFrom = 0;\n        myTo = myStatements.length;\n      }\n    }","id":61817,"modified_method":"private void flatten() {\n      while(myStatements.length == 1 && myStatements[0] instanceof PsiBlockStatement) {\n        myStatements = ((PsiBlockStatement)myStatements[0]).getCodeBlock().getStatements();\n      }\n    }","commit_id":"13d9f8d53a6b28d431ce3769f65dfa9f9e5fc633","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static String createForEachFunctionalExpressionText(Project project, PsiElement block, PsiVariable variable) {\n      final PsiCallExpression callExpression = LambdaCanBeMethodReferenceInspection.extractMethodCallFromBlock(block);\n      if (callExpression != null) {\n        final PsiClassType functionalType = createDefaultConsumerType(project, variable);\n        String methodReferenceText = null;\n        if(variable instanceof PsiParameter) {\n          final PsiParameter[] parameters = {(PsiParameter)variable};\n          methodReferenceText =\n            LambdaCanBeMethodReferenceInspection.convertToMethodReference(block, parameters, functionalType, null);\n        }\n        if (methodReferenceText != null) {\n          return methodReferenceText;\n        }\n      }\n      return variable.getName() + \" -> \" + wrapInBlock(block);\n    }","id":61818,"modified_method":"private static String createForEachFunctionalExpressionText(Project project, PsiElement block, PsiVariable variable) {\n      final PsiCallExpression callExpression = LambdaCanBeMethodReferenceInspection.extractMethodCallFromBlock(block);\n      if (callExpression != null) {\n        final PsiClassType functionalType = createDefaultConsumerType(project, variable);\n        final PsiVariable[] parameters = {variable};\n        String methodReferenceText =\n          LambdaCanBeMethodReferenceInspection.convertToMethodReference(block, parameters, functionalType, null);\n        if (methodReferenceText != null) {\n          return methodReferenceText;\n        }\n      }\n      return variable.getName() + \" -> \" + wrapInBlock(block);\n    }","commit_id":"13d9f8d53a6b28d431ce3769f65dfa9f9e5fc633","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static void main(List<String> testTags) {\n    final List<String> resultJava7 = new ArrayList<>(testTags.size());\n      testTags.stream().filter(tag -> !foo(resultJava7)).forEach(tag -> {\n          resultJava7.add(tag.trim());\n      });\n\n  }","id":61819,"modified_method":"public static void main(List<String> testTags) {\n    final List<String> resultJava7 = new ArrayList<>(testTags.size());\n      testTags.stream().filter(tag -> !foo(resultJava7)).forEach(tag -> resultJava7.add(tag.trim()));\n\n  }","commit_id":"1a1290751c41fb4e0926db160ea2988bd85637c4","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"void main() {\n      this.stream().filter(tag -> !super.contains(tag)).forEach(tag -> {\n          add(tag.trim());\n      });\n  }","id":61820,"modified_method":"void main() {\n      this.stream().filter(tag -> !super.contains(tag)).forEach(tag -> add(tag.trim()));\n  }","commit_id":"1a1290751c41fb4e0926db160ea2988bd85637c4","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"void main() {\n      this.stream().filter(tag -> !contains(tag.trim())).forEach(tag -> {\n          add(tag.trim());\n      });\n  }","id":61821,"modified_method":"void main() {\n      this.stream().filter(tag -> !contains(tag.trim())).forEach(tag -> add(tag.trim()));\n  }","commit_id":"1a1290751c41fb4e0926db160ea2988bd85637c4","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static void main(List<String> testTags) {\n    final List<String> resultJava7 = new ArrayList<>(testTags.size());\n      testTags.stream().filter(tag -> !resultJava7.contains(tag.trim())).forEach(tag -> {\n          resultJava7.add(tag.trim());\n      });\n\n  }","id":61822,"modified_method":"public static void main(List<String> testTags) {\n    final List<String> resultJava7 = new ArrayList<>(testTags.size());\n      testTags.stream().filter(tag -> !resultJava7.contains(tag.trim())).forEach(tag -> resultJava7.add(tag.trim()));\n\n  }","commit_id":"1a1290751c41fb4e0926db160ea2988bd85637c4","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"void main() {\n      this.stream().filter(tag -> !foo(this)).forEach(tag -> {\n          add(tag.trim());\n      });\n  }","id":61823,"modified_method":"void main() {\n      this.stream().filter(tag -> !foo(this)).forEach(tag -> add(tag.trim()));\n  }","commit_id":"1a1290751c41fb4e0926db160ea2988bd85637c4","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void simplifyRedundantCast(PsiElement result) {\n    final PsiMethodReferenceExpression methodReferenceExpression = PsiTreeUtil.findChildOfType(result, PsiMethodReferenceExpression.class);\n    if (methodReferenceExpression != null) {\n      final PsiElement parent = methodReferenceExpression.getParent();\n      if (parent instanceof PsiTypeCastExpression) {\n        if (RedundantCastUtil.isCastRedundant((PsiTypeCastExpression)parent)) {\n          final PsiExpression operand = ((PsiTypeCastExpression)parent).getOperand();\n          LOG.assertTrue(operand != null);\n          parent.replace(operand);\n        }\n      }\n    }\n  }","id":61824,"modified_method":"private static void simplifyRedundantCast(PsiElement result) {\n    for (PsiMethodReferenceExpression methodReferenceExpression : PsiTreeUtil\n      .findChildrenOfType(result, PsiMethodReferenceExpression.class)) {\n      final PsiElement parent = methodReferenceExpression.getParent();\n      if (parent instanceof PsiTypeCastExpression) {\n        if (RedundantCastUtil.isCastRedundant((PsiTypeCastExpression)parent)) {\n          final PsiExpression operand = ((PsiTypeCastExpression)parent).getOperand();\n          LOG.assertTrue(operand != null);\n          parent.replace(operand);\n        }\n      }\n    }\n  }","commit_id":"1a1290751c41fb4e0926db160ea2988bd85637c4","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  @Override\n  public PsiElementVisitor buildVisitor(@NotNull final ProblemsHolder holder, boolean isOnTheFly) {\n    return new JavaElementVisitor() {\n      @Override\n      public void visitForeachStatement(PsiForeachStatement statement) {\n        super.visitForeachStatement(statement);\n        if (PsiUtil.getLanguageLevel(statement).isAtLeast(LanguageLevel.JDK_1_8)) {\n          final PsiExpression iteratedValue = statement.getIteratedValue();\n          final PsiStatement body = statement.getBody();\n          if (iteratedValue != null && body != null) {\n            final PsiType iteratedValueType = iteratedValue.getType();\n            final PsiClass iteratorClass = PsiUtil.resolveClassInClassTypeOnly(iteratedValueType);\n            final PsiClass collectionClass = JavaPsiFacade.getInstance(body.getProject()).findClass(CommonClassNames.JAVA_UTIL_COLLECTION, statement.getResolveScope());\n            if (collectionClass != null && InheritanceUtil.isInheritorOrSelf(iteratorClass, collectionClass, true)) {\n              try {\n                final ControlFlow controlFlow = ControlFlowFactory.getInstance(holder.getProject())\n                  .getControlFlow(body, LocalsOrMyInstanceFieldsControlFlowPolicy.getInstance());\n                int startOffset = controlFlow.getStartOffset(body);\n                int endOffset = controlFlow.getEndOffset(body);\n                final Collection<PsiStatement> exitPoints = ControlFlowUtil\n                  .findExitPointsAndStatements(controlFlow, startOffset, endOffset, new IntArrayList(), PsiContinueStatement.class,\n                                               PsiBreakStatement.class, PsiReturnStatement.class, PsiThrowStatement.class);\n                if (exitPoints.isEmpty()) {\n  \n                  final List<PsiVariable> usedVariables = ControlFlowUtil.getUsedVariables(controlFlow, startOffset, endOffset);\n                  for (PsiVariable variable : usedVariables) {\n                    if (!HighlightControlFlowUtil.isEffectivelyFinal(variable, body, null)) {\n                      return;\n                    }\n                  }\n\n                  if (ExceptionUtil.getThrownCheckedExceptions(new PsiElement[] {body}).isEmpty()) {\n                    if (!isRawSubstitution(iteratedValueType, collectionClass) && isCollectCall(body, statement.getIterationParameter())) {\n                      boolean addAll = isAddAllCall(statement, body);\n                      holder.registerProblem(iteratedValue, \"Can be replaced with \" + (addAll ? \"addAll call\" : \"collect call\"),\n                                             ProblemHighlightType.GENERIC_ERROR_OR_WARNING, \n                                             addAll ? new ReplaceWithAddAllFix() : new ReplaceWithCollectFix());\n                    }\n                    else if (REPLACE_TRIVIAL_FOREACH || !isTrivial(body, statement.getIterationParameter())) {\n                      final List<LocalQuickFix> fixes = new ArrayList<>();\n                      fixes.add(new ReplaceWithForeachCallFix(\"forEach\"));\n                      if (extractIfStatement(body) != null) {\n                        //for .stream() \n                        fixes.add(new ReplaceWithForeachCallFix(\"forEachOrdered\"));\n                      }\n                      holder.registerProblem(iteratedValue, \"Can be replaced with foreach call\",\n                                             ProblemHighlightType.GENERIC_ERROR_OR_WARNING,\n                                             fixes.toArray(new LocalQuickFix[fixes.size()]));\n                    }\n                  }\n                }\n              }\n              catch (AnalysisCanceledException ignored) {\n              }\n            }\n          }\n        }\n      }\n\n      private boolean isRawSubstitution(PsiType iteratedValueType, PsiClass collectionClass) {\n        return iteratedValueType instanceof PsiClassType && PsiUtil\n          .isRawSubstitutor(collectionClass, TypeConversionUtil.getSuperClassSubstitutor(collectionClass, (PsiClassType)iteratedValueType));\n      }\n    };\n  }","id":61825,"modified_method":"@NotNull\n  @Override\n  public PsiElementVisitor buildVisitor(@NotNull final ProblemsHolder holder, boolean isOnTheFly) {\n    return new JavaElementVisitor() {\n      @Override\n      public void visitForeachStatement(PsiForeachStatement statement) {\n        super.visitForeachStatement(statement);\n        if (PsiUtil.getLanguageLevel(statement).isAtLeast(LanguageLevel.JDK_1_8)) {\n          final PsiExpression iteratedValue = statement.getIteratedValue();\n          final PsiStatement body = statement.getBody();\n          if (iteratedValue != null && body != null) {\n            final PsiType iteratedValueType = iteratedValue.getType();\n            final PsiClass iteratorClass = PsiUtil.resolveClassInClassTypeOnly(iteratedValueType);\n            final PsiClass collectionClass = JavaPsiFacade.getInstance(body.getProject()).findClass(CommonClassNames.JAVA_UTIL_COLLECTION, statement.getResolveScope());\n            if (collectionClass != null && InheritanceUtil.isInheritorOrSelf(iteratorClass, collectionClass, true)) {\n              try {\n                final ControlFlow controlFlow = ControlFlowFactory.getInstance(holder.getProject())\n                  .getControlFlow(body, LocalsOrMyInstanceFieldsControlFlowPolicy.getInstance());\n                int startOffset = controlFlow.getStartOffset(body);\n                int endOffset = controlFlow.getEndOffset(body);\n                final Collection<PsiStatement> exitPoints = ControlFlowUtil\n                  .findExitPointsAndStatements(controlFlow, startOffset, endOffset, new IntArrayList(), PsiContinueStatement.class,\n                                               PsiBreakStatement.class, PsiReturnStatement.class, PsiThrowStatement.class);\n                if (exitPoints.isEmpty()) {\n  \n                  final List<PsiVariable> usedVariables = ControlFlowUtil.getUsedVariables(controlFlow, startOffset, endOffset);\n                  for (PsiVariable variable : usedVariables) {\n                    if (!HighlightControlFlowUtil.isEffectivelyFinal(variable, body, null)) {\n                      return;\n                    }\n                  }\n\n                  if (ExceptionUtil.getThrownCheckedExceptions(new PsiElement[] {body}).isEmpty()) {\n                    TerminalBlock tb = TerminalBlock.from(statement.getIterationParameter(), body);\n                    List<Operation> operations = tb.extractOperations();\n\n                    if (!isRawSubstitution(iteratedValueType, collectionClass) && isCollectCall(tb, operations)) {\n                      boolean addAll = operations.isEmpty() && isAddAllCall(tb);\n                      holder.registerProblem(iteratedValue, \"Can be replaced with \" + (addAll ? \"addAll call\" : \"collect call\"),\n                                             ProblemHighlightType.GENERIC_ERROR_OR_WARNING, \n                                             addAll ? new ReplaceWithAddAllFix() : new ReplaceWithCollectFix());\n                    }\n                    else if (REPLACE_TRIVIAL_FOREACH || !operations.isEmpty() || !isTrivial(body, statement.getIterationParameter())) {\n                      final List<LocalQuickFix> fixes = new ArrayList<>();\n                      fixes.add(new ReplaceWithForeachCallFix(\"forEach\"));\n                      if (!operations.isEmpty()) {\n                        //for .stream() \n                        fixes.add(new ReplaceWithForeachCallFix(\"forEachOrdered\"));\n                      }\n                      holder.registerProblem(iteratedValue, \"Can be replaced with foreach call\",\n                                             ProblemHighlightType.GENERIC_ERROR_OR_WARNING,\n                                             fixes.toArray(new LocalQuickFix[fixes.size()]));\n                    }\n                  }\n                }\n              }\n              catch (AnalysisCanceledException ignored) {\n              }\n            }\n          }\n        }\n      }\n\n      private boolean isRawSubstitution(PsiType iteratedValueType, PsiClass collectionClass) {\n        return iteratedValueType instanceof PsiClassType && PsiUtil\n          .isRawSubstitutor(collectionClass, TypeConversionUtil.getSuperClassSubstitutor(collectionClass, (PsiClassType)iteratedValueType));\n      }\n    };\n  }","commit_id":"1a1290751c41fb4e0926db160ea2988bd85637c4","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static boolean isConditionDependsOnUpdatedCollections(PsiExpression condition,\n                                                                PsiExpression qualifierExpression) {\n    final PsiElement collection = qualifierExpression instanceof PsiReferenceExpression\n                                  ? ((PsiReferenceExpression)qualifierExpression).resolve()\n                                  : null;\n    if (collection != null) {\n      return ReferencesSearch.search(collection, new LocalSearchScope(condition)).findFirst() != null;\n    }\n\n    final boolean[] dependsOnCollection = {false};\n    condition.accept(new JavaRecursiveElementWalkingVisitor() {\n      @Override\n      public void visitMethodCallExpression(PsiMethodCallExpression expression) {\n        super.visitMethodCallExpression(expression);\n        final PsiExpression callQualifier = expression.getMethodExpression().getQualifierExpression();\n        if (callQualifier == null ||\n            callQualifier instanceof PsiThisExpression && ((PsiThisExpression)callQualifier).getQualifier() == null ||\n            callQualifier instanceof PsiSuperExpression && ((PsiSuperExpression)callQualifier).getQualifier() == null) {\n          dependsOnCollection[0] = true;\n        }\n      }\n\n      @Override\n      public void visitThisExpression(PsiThisExpression expression) {\n        super.visitThisExpression(expression);\n        if (expression.getQualifier() == null && expression.getParent() instanceof PsiExpressionList) {\n          dependsOnCollection[0] = true;\n        }\n      }\n\n      @Override\n      public void visitClass(PsiClass aClass) {}\n\n      @Override\n      public void visitLambdaExpression(PsiLambdaExpression expression) {}\n    });\n\n    return dependsOnCollection[0];\n  }","id":61826,"modified_method":"private static boolean isExpressionDependsOnUpdatedCollections(PsiExpression condition,\n                                                                 PsiExpression qualifierExpression) {\n    final PsiElement collection = qualifierExpression instanceof PsiReferenceExpression\n                                  ? ((PsiReferenceExpression)qualifierExpression).resolve()\n                                  : null;\n    if (collection != null) {\n      return ReferencesSearch.search(collection, new LocalSearchScope(condition)).findFirst() != null;\n    }\n\n    final boolean[] dependsOnCollection = {false};\n    condition.accept(new JavaRecursiveElementWalkingVisitor() {\n      @Override\n      public void visitMethodCallExpression(PsiMethodCallExpression expression) {\n        super.visitMethodCallExpression(expression);\n        final PsiExpression callQualifier = expression.getMethodExpression().getQualifierExpression();\n        if (callQualifier == null ||\n            callQualifier instanceof PsiThisExpression && ((PsiThisExpression)callQualifier).getQualifier() == null ||\n            callQualifier instanceof PsiSuperExpression && ((PsiSuperExpression)callQualifier).getQualifier() == null) {\n          dependsOnCollection[0] = true;\n        }\n      }\n\n      @Override\n      public void visitThisExpression(PsiThisExpression expression) {\n        super.visitThisExpression(expression);\n        if (expression.getQualifier() == null && expression.getParent() instanceof PsiExpressionList) {\n          dependsOnCollection[0] = true;\n        }\n      }\n\n      @Override\n      public void visitClass(PsiClass aClass) {}\n\n      @Override\n      public void visitLambdaExpression(PsiLambdaExpression expression) {}\n    });\n\n    return dependsOnCollection[0];\n  }","commit_id":"1a1290751c41fb4e0926db160ea2988bd85637c4","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static String compoundLambdaOrMethodReference(PsiParameter parameter,\n                                                        PsiExpression expression,\n                                                        String samQualifiedName,\n                                                        PsiType[] samParamTypes) {\n    String result = \"\";\n    final Project project = parameter.getProject();\n    final JavaPsiFacade psiFacade = JavaPsiFacade.getInstance(project);\n    final PsiClass functionClass = psiFacade.findClass(samQualifiedName, GlobalSearchScope.allScope(project));\n    for (int i = 0; i < samParamTypes.length; i++) {\n      if (samParamTypes[i] instanceof PsiPrimitiveType) {\n        samParamTypes[i] = ((PsiPrimitiveType)samParamTypes[i]).getBoxedType(expression);\n      }\n    }\n    final PsiClassType functionalInterfaceType = functionClass != null ? psiFacade.getElementFactory().createType(functionClass, samParamTypes) : null;\n    final PsiParameter[] parameters = {parameter};\n    final String methodReferenceText = LambdaCanBeMethodReferenceInspection.convertToMethodReference(expression, parameters, functionalInterfaceType, null);\n    if (methodReferenceText != null) {\n      LOG.assertTrue(functionalInterfaceType != null);\n      result += \"(\" + functionalInterfaceType.getCanonicalText() + \")\" + methodReferenceText;\n    } else {\n      result += parameter.getName() + \" -> \" + expression.getText();\n    }\n    return result;\n  }","id":61827,"modified_method":"private static String compoundLambdaOrMethodReference(PsiVariable parameter,\n                                                        PsiExpression expression,\n                                                        String samQualifiedName,\n                                                        PsiType[] samParamTypes) {\n    String result = \"\";\n    final Project project = parameter.getProject();\n    final JavaPsiFacade psiFacade = JavaPsiFacade.getInstance(project);\n    final PsiClass functionClass = psiFacade.findClass(samQualifiedName, GlobalSearchScope.allScope(project));\n    for (int i = 0; i < samParamTypes.length; i++) {\n      if (samParamTypes[i] instanceof PsiPrimitiveType) {\n        samParamTypes[i] = ((PsiPrimitiveType)samParamTypes[i]).getBoxedType(expression);\n      }\n    }\n    final PsiClassType functionalInterfaceType = functionClass != null ? psiFacade.getElementFactory().createType(functionClass, samParamTypes) : null;\n    String methodReferenceText = null;\n    if(parameter instanceof PsiParameter) {\n      final PsiParameter[] parameters = {(PsiParameter)parameter};\n      methodReferenceText = LambdaCanBeMethodReferenceInspection.convertToMethodReference(expression, parameters, functionalInterfaceType, null);\n    }\n    if (methodReferenceText != null) {\n      LOG.assertTrue(functionalInterfaceType != null);\n      result += \"(\" + functionalInterfaceType.getCanonicalText() + \")\" + methodReferenceText;\n    } else {\n      result += parameter.getName() + \" -> \" + expression.getText();\n    }\n    return result;\n  }","commit_id":"1a1290751c41fb4e0926db160ea2988bd85637c4","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static PsiClassType createDefaultConsumerType(Project project, PsiParameter parameter) {\n    final JavaPsiFacade psiFacade = JavaPsiFacade.getInstance(project);\n    final PsiClass consumerClass = psiFacade.findClass(\"java.util.function.Consumer\", GlobalSearchScope.allScope(project));\n    return consumerClass != null ? psiFacade.getElementFactory().createType(consumerClass, parameter.getType()) : null;\n  }","id":61828,"modified_method":"private static PsiClassType createDefaultConsumerType(Project project, PsiVariable variable) {\n    final JavaPsiFacade psiFacade = JavaPsiFacade.getInstance(project);\n    final PsiClass consumerClass = psiFacade.findClass(\"java.util.function.Consumer\", GlobalSearchScope.allScope(project));\n    return consumerClass != null ? psiFacade.getElementFactory().createType(consumerClass, variable.getType()) : null;\n  }","commit_id":"1a1290751c41fb4e0926db160ea2988bd85637c4","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static String wrapInBlock(PsiStatement body) {\n\n      if (body instanceof PsiExpressionStatement) {\n        return ((PsiExpressionStatement)body).getExpression().getText();\n      }\n\n      final String bodyText = body.getText();\n      if (!(body instanceof PsiBlockStatement)) {\n        return \"{\" + bodyText + \"}\";\n      }\n      return bodyText;\n    }","id":61829,"modified_method":"private static String wrapInBlock(PsiElement block) {\n      if(block instanceof PsiExpressionStatement) {\n        return ((PsiExpressionStatement)block).getExpression().getText();\n      }\n      if(block instanceof PsiCodeBlock) {\n        return block.getText();\n      }\n      return \"{\" + block.getText() + \"}\";\n    }","commit_id":"1a1290751c41fb4e0926db160ea2988bd85637c4","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void applyFix(@NotNull Project project, @NotNull ProblemDescriptor descriptor) {\n      final PsiForeachStatement foreachStatement = PsiTreeUtil.getParentOfType(descriptor.getPsiElement(), PsiForeachStatement.class);\n      if (foreachStatement != null) {\n        if (!FileModificationService.getInstance().preparePsiElementForWrite(foreachStatement)) return;\n        PsiStatement body = foreachStatement.getBody();\n        final PsiExpression iteratedValue = foreachStatement.getIteratedValue();\n        if (body != null && iteratedValue != null) {\n          restoreComments(foreachStatement, body);\n\n          final PsiParameter parameter = foreachStatement.getIterationParameter();\n          final PsiIfStatement ifStmt = extractIfStatement(body);\n\n          StringBuilder buffer = new StringBuilder(getIteratedValueText(iteratedValue));\n          if (ifStmt != null) {\n            final PsiStatement thenBranch = ifStmt.getThenBranch();\n            LOG.assertTrue(thenBranch != null);\n            buffer.append(\".stream()\");\n            buffer.append(createFiltersChainText(body, parameter, ifStmt));\n            body = thenBranch;\n          }\n\n          buffer.append(\".\").append(myForEachMethodName).append(\"(\");\n\n          final String functionalExpressionText = createForEachFunctionalExpressionText(project, body, parameter);\n          final PsiElementFactory elementFactory = JavaPsiFacade.getElementFactory(project);\n          PsiExpressionStatement callStatement = (PsiExpressionStatement)elementFactory.createStatementFromText(buffer.toString() + functionalExpressionText + \");\", foreachStatement);\n          callStatement = (PsiExpressionStatement)foreachStatement.replace(callStatement);\n\n          final PsiExpressionList argumentList = ((PsiCallExpression)callStatement.getExpression()).getArgumentList();\n          LOG.assertTrue(argumentList != null, callStatement.getText());\n          final PsiExpression[] expressions = argumentList.getExpressions();\n          LOG.assertTrue(expressions.length == 1);\n\n          if (expressions[0] instanceof PsiFunctionalExpression && ((PsiFunctionalExpression)expressions[0]).getFunctionalInterfaceType() == null) {\n            callStatement =\n              (PsiExpressionStatement)callStatement.replace(elementFactory.createStatementFromText(buffer.toString() + \"(\" + parameter.getText() + \") -> \" + wrapInBlock(body) + \");\", callStatement));\n          }\n\n          simplifyRedundantCast(callStatement);\n\n          CodeStyleManager.getInstance(project).reformat(JavaCodeStyleManager.getInstance(project).shortenClassReferences(callStatement));\n        }\n      }\n    }","id":61830,"modified_method":"@Override\n    public void applyFix(@NotNull Project project, @NotNull ProblemDescriptor descriptor) {\n      final PsiForeachStatement foreachStatement = PsiTreeUtil.getParentOfType(descriptor.getPsiElement(), PsiForeachStatement.class);\n      if (foreachStatement != null) {\n        if (!FileModificationService.getInstance().preparePsiElementForWrite(foreachStatement)) return;\n        PsiStatement body = foreachStatement.getBody();\n        final PsiExpression iteratedValue = foreachStatement.getIteratedValue();\n        if (body != null && iteratedValue != null) {\n          restoreComments(foreachStatement, body);\n\n          final PsiParameter parameter = foreachStatement.getIterationParameter();\n          final PsiElementFactory elementFactory = JavaPsiFacade.getElementFactory(project);\n          TerminalBlock tb = TerminalBlock.from(parameter, body);\n          List<String> intermediateOps = tb.extractOperationReplacements(elementFactory);\n\n          StringBuilder buffer = new StringBuilder(getIteratedValueText(iteratedValue));\n          if (!intermediateOps.isEmpty()) {\n            buffer.append(\".stream()\");\n            intermediateOps.forEach(buffer::append);\n          }\n          PsiElement block = tb.convertToElement(elementFactory);\n\n          buffer.append(\".\").append(myForEachMethodName).append(\"(\");\n\n          final String functionalExpressionText = createForEachFunctionalExpressionText(project, block, tb.getVariable());\n          PsiExpressionStatement callStatement = (PsiExpressionStatement)elementFactory.createStatementFromText(buffer.toString() + functionalExpressionText + \");\", foreachStatement);\n          callStatement = (PsiExpressionStatement)foreachStatement.replace(callStatement);\n\n          final PsiExpressionList argumentList = ((PsiCallExpression)callStatement.getExpression()).getArgumentList();\n          LOG.assertTrue(argumentList != null, callStatement.getText());\n          final PsiExpression[] expressions = argumentList.getExpressions();\n          LOG.assertTrue(expressions.length == 1);\n\n          if (expressions[0] instanceof PsiFunctionalExpression && ((PsiFunctionalExpression)expressions[0]).getFunctionalInterfaceType() == null) {\n            callStatement =\n              (PsiExpressionStatement)callStatement.replace(elementFactory.createStatementFromText(\n                buffer.toString() + \"(\" + tb.getVariable().getText() + \") -> \" + wrapInBlock(block) + \");\", callStatement));\n          }\n\n          simplifyRedundantCast(callStatement);\n\n          CodeStyleManager.getInstance(project).reformat(JavaCodeStyleManager.getInstance(project).shortenClassReferences(callStatement));\n        }\n      }\n    }","commit_id":"1a1290751c41fb4e0926db160ea2988bd85637c4","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static String createForEachFunctionalExpressionText(Project project, PsiStatement body, PsiParameter parameter) {\n      final PsiCallExpression callExpression = LambdaCanBeMethodReferenceInspection.extractMethodCallFromBlock(body);\n      if (callExpression != null) {\n        final PsiClassType functionalType = createDefaultConsumerType(project, parameter);\n        final PsiParameter[] parameters = {parameter};\n        final PsiElement bodyBlock = body instanceof PsiBlockStatement ? ((PsiBlockStatement)body).getCodeBlock() : body;\n        final String methodReferenceText = LambdaCanBeMethodReferenceInspection.convertToMethodReference(bodyBlock, parameters, functionalType, null);\n        if (methodReferenceText != null) {\n          return methodReferenceText;\n        }\n      }\n      return parameter.getName() + \" -> \" + wrapInBlock(body);\n    }","id":61831,"modified_method":"private static String createForEachFunctionalExpressionText(Project project, PsiElement block, PsiVariable parameter) {\n      final PsiCallExpression callExpression = LambdaCanBeMethodReferenceInspection.extractMethodCallFromBlock(block);\n      if (callExpression != null) {\n        final PsiClassType functionalType = createDefaultConsumerType(project, parameter);\n        String methodReferenceText = null;\n        if(parameter instanceof PsiParameter) {\n          final PsiParameter[] parameters = {(PsiParameter)parameter};\n          methodReferenceText =\n            LambdaCanBeMethodReferenceInspection.convertToMethodReference(block, parameters, functionalType, null);\n        }\n        if (methodReferenceText != null) {\n          return methodReferenceText;\n        }\n      }\n      return parameter.getName() + \" -> \" + wrapInBlock(block);\n    }","commit_id":"1a1290751c41fb4e0926db160ea2988bd85637c4","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static boolean isTrivial(PsiStatement body, PsiParameter parameter) {\n    final PsiIfStatement ifStatement = extractIfStatement(body);\n    //filter\n    if (ifStatement != null) {\n      return false;\n    }\n    //method reference \n    final PsiCallExpression callExpression = LambdaCanBeMethodReferenceInspection\n      .canBeMethodReferenceProblem(body instanceof PsiBlockStatement ? ((PsiBlockStatement)body).getCodeBlock() : body,\n                                   new PsiParameter[]{parameter}, \n                                   createDefaultConsumerType(parameter.getProject(), parameter));\n    if (callExpression == null) {\n      return true;\n    }\n    final PsiMethod method = callExpression.resolveMethod();\n    return method != null && isThrowsCompatible(method);\n  }","id":61832,"modified_method":"private static boolean isTrivial(PsiStatement body, PsiParameter parameter) {\n    //method reference\n    final PsiCallExpression callExpression = LambdaCanBeMethodReferenceInspection\n      .canBeMethodReferenceProblem(body instanceof PsiBlockStatement ? ((PsiBlockStatement)body).getCodeBlock() : body,\n                                   new PsiParameter[]{parameter}, \n                                   createDefaultConsumerType(parameter.getProject(), parameter));\n    if (callExpression == null) {\n      return true;\n    }\n    final PsiMethod method = callExpression.resolveMethod();\n    return method != null && isThrowsCompatible(method);\n  }","commit_id":"1a1290751c41fb4e0926db160ea2988bd85637c4","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void applyFix(@NotNull Project project, @NotNull ProblemDescriptor descriptor) {\n      final PsiForeachStatement foreachStatement = PsiTreeUtil.getParentOfType(descriptor.getPsiElement(), PsiForeachStatement.class);\n      if (foreachStatement != null) {\n        if (!FileModificationService.getInstance().preparePsiElementForWrite(foreachStatement)) return;\n        final PsiElementFactory elementFactory = JavaPsiFacade.getElementFactory(project);\n        PsiStatement body = foreachStatement.getBody();\n        final PsiExpression iteratedValue = foreachStatement.getIteratedValue();\n        if (body != null && iteratedValue != null) {\n          final PsiParameter parameter = foreachStatement.getIterationParameter();\n          final PsiIfStatement ifStatement = extractIfStatement(body);\n          final PsiMethodCallExpression methodCallExpression = extractAddCall(body, ifStatement);\n\n          if (methodCallExpression == null) return;\n\n          if (isAddAllCall(foreachStatement, body)) {\n            restoreComments(foreachStatement, body);\n            final PsiExpression qualifierExpression = methodCallExpression.getMethodExpression().getQualifierExpression();\n            final String qualifierText = qualifierExpression != null ? qualifierExpression.getText() : \"\";\n            final String callText = StringUtil.getQualifiedName(qualifierText, \"addAll(\" + getIteratedValueText(iteratedValue) + \");\");\n            PsiElement result = foreachStatement.replace(elementFactory.createStatementFromText(callText, foreachStatement));\n            reformatWhenNeeded(project, result);\n            return;\n          }\n          final StringBuilder builder = new StringBuilder(getIteratedValueText(iteratedValue) + \".stream()\");\n\n          builder.append(createFiltersChainText(body, parameter, ifStatement));\n          builder.append(createMapperFunctionalExpressionText(parameter, methodCallExpression.getArgumentList().getExpressions()[0]));\n\n          builder.append(\".collect(java.util.stream.Collectors.\");\n          PsiElement result = null;\n          try {\n            final PsiExpression qualifierExpression = methodCallExpression.getMethodExpression().getQualifierExpression();\n            if (qualifierExpression instanceof PsiReferenceExpression) {\n              final PsiElement resolve = ((PsiReferenceExpression)qualifierExpression).resolve();\n              if (resolve instanceof PsiVariable) {\n                if (resolve instanceof PsiLocalVariable && foreachStatement.equals(PsiTreeUtil.skipSiblingsForward(resolve.getParent(), PsiWhiteSpace.class, PsiComment.class))) {\n                  final PsiExpression initializer = ((PsiVariable)resolve).getInitializer();\n                  if (initializer instanceof PsiNewExpression) {\n                    final PsiExpressionList argumentList = ((PsiNewExpression)initializer).getArgumentList();\n                    if (argumentList != null && argumentList.getExpressions().length == 0) {\n                      restoreComments(foreachStatement, body);\n                      final String callText = builder.toString() + createInitializerReplacementText(((PsiVariable)resolve).getType(), initializer) + \")\";\n                      result = initializer.replace(elementFactory.createExpressionFromText(callText, null));\n                      simplifyRedundantCast(result);\n                      foreachStatement.delete();\n                      return;\n                    }\n                  }\n                }\n              }\n            }\n            restoreComments(foreachStatement, body);\n            final String qualifierText = qualifierExpression != null ? qualifierExpression.getText() : \"\";\n            final String callText = StringUtil.getQualifiedName(qualifierText, \"addAll(\" + builder.toString() + \"toList()));\");\n            result = foreachStatement.replace(elementFactory.createStatementFromText(callText, foreachStatement));\n            simplifyRedundantCast(result);\n          }\n          finally {\n            reformatWhenNeeded(project, result);\n          }\n        }\n      }\n    }","id":61833,"modified_method":"@Override\n    public void applyFix(@NotNull Project project, @NotNull ProblemDescriptor descriptor) {\n      final PsiForeachStatement foreachStatement = PsiTreeUtil.getParentOfType(descriptor.getPsiElement(), PsiForeachStatement.class);\n      if (foreachStatement != null) {\n        if (!FileModificationService.getInstance().preparePsiElementForWrite(foreachStatement)) return;\n        final PsiElementFactory elementFactory = JavaPsiFacade.getElementFactory(project);\n        PsiStatement body = foreachStatement.getBody();\n        final PsiExpression iteratedValue = foreachStatement.getIteratedValue();\n        if (body != null && iteratedValue != null) {\n          final PsiParameter parameter = foreachStatement.getIterationParameter();\n          TerminalBlock tb = TerminalBlock.from(parameter, body);\n          List<String> intermediateOps = tb.extractOperationReplacements(elementFactory);\n          final PsiMethodCallExpression methodCallExpression = tb.getSingleMethodCall();\n\n          if (methodCallExpression == null) return;\n\n          if (intermediateOps.isEmpty() && isAddAllCall(tb)) {\n            restoreComments(foreachStatement, body);\n            final PsiExpression qualifierExpression = methodCallExpression.getMethodExpression().getQualifierExpression();\n            final String qualifierText = qualifierExpression != null ? qualifierExpression.getText() : \"\";\n            final String callText = StringUtil.getQualifiedName(qualifierText, \"addAll(\" + getIteratedValueText(iteratedValue) + \");\");\n            PsiElement result = foreachStatement.replace(elementFactory.createStatementFromText(callText, foreachStatement));\n            reformatWhenNeeded(project, result);\n            return;\n          }\n          final StringBuilder builder = new StringBuilder(getIteratedValueText(iteratedValue) + \".stream()\");\n\n          intermediateOps.forEach(builder::append);\n          builder.append(createMapperFunctionalExpressionText(tb.getVariable(), methodCallExpression.getArgumentList().getExpressions()[0]));\n\n          builder.append(\".collect(java.util.stream.Collectors.\");\n          PsiElement result = null;\n          try {\n            final PsiExpression qualifierExpression = methodCallExpression.getMethodExpression().getQualifierExpression();\n            if (qualifierExpression instanceof PsiReferenceExpression) {\n              final PsiElement resolve = ((PsiReferenceExpression)qualifierExpression).resolve();\n              if (resolve instanceof PsiVariable) {\n                if (resolve instanceof PsiLocalVariable && foreachStatement.equals(PsiTreeUtil.skipSiblingsForward(resolve.getParent(), PsiWhiteSpace.class, PsiComment.class))) {\n                  final PsiExpression initializer = ((PsiVariable)resolve).getInitializer();\n                  if (initializer instanceof PsiNewExpression) {\n                    final PsiExpressionList argumentList = ((PsiNewExpression)initializer).getArgumentList();\n                    if (argumentList != null && argumentList.getExpressions().length == 0) {\n                      restoreComments(foreachStatement, body);\n                      final String callText = builder.toString() + createInitializerReplacementText(((PsiVariable)resolve).getType(), initializer) + \")\";\n                      result = initializer.replace(elementFactory.createExpressionFromText(callText, null));\n                      simplifyRedundantCast(result);\n                      foreachStatement.delete();\n                      return;\n                    }\n                  }\n                }\n              }\n            }\n            restoreComments(foreachStatement, body);\n            final String qualifierText = qualifierExpression != null ? qualifierExpression.getText() : \"\";\n            final String callText = StringUtil.getQualifiedName(qualifierText, \"addAll(\" + builder.toString() + \"toList()));\");\n            result = foreachStatement.replace(elementFactory.createStatementFromText(callText, foreachStatement));\n            simplifyRedundantCast(result);\n          }\n          finally {\n            reformatWhenNeeded(project, result);\n          }\n        }\n      }\n    }","commit_id":"1a1290751c41fb4e0926db160ea2988bd85637c4","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static String createMapperFunctionalExpressionText(PsiParameter parameter, PsiExpression expression) {\n      String iteration = \"\";\n      if (!isIdentityMapping(parameter, expression)) {\n        iteration +=\".map(\";\n        iteration += compoundLambdaOrMethodReference(parameter, expression, \n                                                     \"java.util.function.Function\", \n                                                     new PsiType[]{parameter.getType(), expression.getType()});\n        iteration +=\")\";\n      }\n      return iteration;\n    }","id":61834,"modified_method":"private static String createMapperFunctionalExpressionText(PsiVariable variable, PsiExpression expression) {\n      if (!isIdentityMapping(variable, expression)) {\n        return new MapOp(expression, variable).createReplacement(null);\n      }\n      return \"\";\n    }","commit_id":"1a1290751c41fb4e0926db160ea2988bd85637c4","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static boolean isIdentityMapping(PsiParameter parameter, PsiExpression mapperCall) {\n    return mapperCall instanceof PsiReferenceExpression && ((PsiReferenceExpression)mapperCall).resolve() == parameter;\n  }","id":61835,"modified_method":"private static boolean isIdentityMapping(PsiVariable parameter, PsiExpression mapperCall) {\n    return mapperCall instanceof PsiReferenceExpression && ((PsiReferenceExpression)mapperCall).resolve() == parameter;\n  }","commit_id":"1a1290751c41fb4e0926db160ea2988bd85637c4","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void setDiffRequest(DiffRequest data) {\n    myDiffRequest = data;\n    if (data.getHints().contains(DiffTool.HINT_DO_NOT_IGNORE_WHITESPACES)) {\n      setComparisonPolicy(ComparisonPolicy.DEFAULT, false);\n    }\n    myDataProvider.putData(myDiffRequest.getGenericData());\n\n    IdeFocusManager fm = IdeFocusManager.getInstance(myProject);\n    boolean isEditor1Focused = getEditor1() != null\n                               && fm.getFocusedDescendantFor(getEditor1().getComponent()) != null;\n\n    boolean isEditor2Focused = myData.getContent2() != null\n                               && getEditor2() != null\n                               && fm.getFocusedDescendantFor(getEditor2().getComponent()) != null;\n\n    setContents(data.getContents()[0], data.getContents()[1]);\n    setTitle1(data.getContentTitles()[0]);\n    setTitle2(data.getContentTitles()[1]);\n    setWindowTitle(myOwnerWindow, data.getWindowTitle());\n    data.customizeToolbar(myPanel.resetToolbar());\n    myPanel.registerToolbarActions();\n\n    final JComponent oldBottomComponent = myPanel.getBottomComponent();\n    if (oldBottomComponent instanceof Disposable) {\n      Disposer.dispose(((Disposable)oldBottomComponent));\n    }\n    final JComponent newBottomComponent = data.getBottomComponent();\n    myPanel.setBottomComponent(newBottomComponent);\n\n\n    if (isEditor1Focused || isEditor2Focused) {\n      fm.requestFocus(isEditor2Focused ? getEditor2().getContentComponent() : getEditor1().getContentComponent(), true);\n    }\n\n    myPanel.requestScrollEditors();\n  }","id":61836,"modified_method":"public void setDiffRequest(DiffRequest data) {\n    myDiffRequest = data;\n    if (data.getHints().contains(DiffTool.HINT_DO_NOT_IGNORE_WHITESPACES)) {\n      setComparisonPolicy(ComparisonPolicy.DEFAULT, false);\n    }\n    myDataProvider.putData(myDiffRequest.getGenericData());\n\n    IdeFocusManager fm = IdeFocusManager.getInstance(myProject);\n    boolean isEditor1Focused = getEditor1() != null\n                               && fm.getFocusedDescendantFor(getEditor1().getComponent()) != null;\n\n    boolean isEditor2Focused = myData.getContent2() != null\n                               && getEditor2() != null\n                               && fm.getFocusedDescendantFor(getEditor2().getComponent()) != null;\n\n    setContents(data.getContents()[0], data.getContents()[1]);\n    setTitle1(data.getContentTitles()[0]);\n    setTitle2(data.getContentTitles()[1]);\n    setWindowTitle(myOwnerWindow, data.getWindowTitle());\n    data.customizeToolbar(myPanel.resetToolbar());\n    myPanel.registerToolbarActions();\n\n    final JComponent oldBottomComponent = myPanel.getBottomComponent();\n    if (oldBottomComponent instanceof Disposable) {\n      Disposer.dispose(((Disposable)oldBottomComponent));\n    }\n    final JComponent newBottomComponent = data.getBottomComponent();\n    myPanel.setBottomComponent(newBottomComponent);\n\n\n    if (myIsRequestFocus) {\n      if ((isEditor1Focused || isEditor2Focused)) {\n        fm.requestFocus(isEditor2Focused ? getEditor2().getContentComponent() : getEditor1().getContentComponent(), true);\n      }\n\n      myPanel.requestScrollEditors();\n    }\n  }","commit_id":"a950c37bde04c7f41b542a4b096ba19e45397b7d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void setContents(DiffContent content1, DiffContent content2) {\n    LOG.assertTrue(!myDisposed);\n    myData.setContents(content1, content2);\n    Project project = myData.getProject();\n    FileType[] types = DiffUtil.chooseContentTypes(new DiffContent[]{content1, content2});\n    VirtualFile baseFile = content1.getFile();\n    if (baseFile == null && myDiffRequest != null) {\n      String path = myDiffRequest.getWindowTitle();\n      if (path != null) baseFile = LocalFileSystem.getInstance().findFileByPath(path);\n    }\n    myLeftSide.setHighlighterFactory(createHighlighter(types[0], baseFile, project));\n    myRightSide.setHighlighterFactory(createHighlighter(types[1], baseFile, project));\n    rediff();\n    myPanel.requestScrollEditors();\n  }","id":61837,"modified_method":"public void setContents(DiffContent content1, DiffContent content2) {\n    LOG.assertTrue(!myDisposed);\n    myData.setContents(content1, content2);\n    Project project = myData.getProject();\n    FileType[] types = DiffUtil.chooseContentTypes(new DiffContent[]{content1, content2});\n    VirtualFile baseFile = content1.getFile();\n    if (baseFile == null && myDiffRequest != null) {\n      String path = myDiffRequest.getWindowTitle();\n      if (path != null) baseFile = LocalFileSystem.getInstance().findFileByPath(path);\n    }\n    myLeftSide.setHighlighterFactory(createHighlighter(types[0], baseFile, project));\n    myRightSide.setHighlighterFactory(createHighlighter(types[1], baseFile, project));\n    rediff();\n    if (myIsRequestFocus) {\n      myPanel.requestScrollEditors();\n    }\n  }","commit_id":"a950c37bde04c7f41b542a4b096ba19e45397b7d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public DiffPreviewPanel() {\n    myMergePanelComponent.setToolbarEnabled(false);\n    MergePanel2 mergePanel = getMergePanel();\n    mergePanel.setEditorProperty(MergePanel2.LINE_NUMBERS, Boolean.FALSE);\n    mergePanel.setEditorProperty(MergePanel2.LINE_MARKERS_AREA, Boolean.FALSE);\n    mergePanel.setEditorProperty(MergePanel2.ADDITIONAL_LINES, 1);\n    mergePanel.setEditorProperty(MergePanel2.ADDITIONAL_COLUMNS, 1);\n\n    for (int i = 0; i < MergePanel2.EDITORS_COUNT; i++) {\n      final EditorMouseListener motionListener = new EditorMouseListener(i);\n      final EditorClickListener clickListener = new EditorClickListener(i);\n      mergePanel.getEditorPlace(i).addListener(new EditorPlace.EditorListener() {\n        public void onEditorCreated(EditorPlace place) {\n          Editor editor = place.getEditor();\n          editor.addEditorMouseMotionListener(motionListener);\n          editor.addEditorMouseListener(clickListener);\n          editor.getCaretModel().addCaretListener(clickListener);\n        }\n\n        public void onEditorReleased(Editor releasedEditor) {\n          releasedEditor.removeEditorMouseMotionListener(motionListener);\n          releasedEditor.removeEditorMouseListener(clickListener);\n        }\n      });\n      Editor editor = mergePanel.getEditor(i);\n      if (editor != null) {\n        editor.addEditorMouseMotionListener(motionListener);\n        editor.addEditorMouseListener(clickListener);\n      }\n    }\n  }","id":61838,"modified_method":"public DiffPreviewPanel() {\n    myMergePanelComponent.setToolbarEnabled(false);\n    MergePanel2 mergePanel = getMergePanel();\n    mergePanel.setEditorProperty(MergePanel2.LINE_NUMBERS, Boolean.FALSE);\n    mergePanel.setEditorProperty(MergePanel2.LINE_MARKERS_AREA, Boolean.FALSE);\n    mergePanel.setEditorProperty(MergePanel2.ADDITIONAL_LINES, 1);\n    mergePanel.setEditorProperty(MergePanel2.ADDITIONAL_COLUMNS, 1);\n    mergePanel.setScrollToFirstDiff(false);\n\n    for (int i = 0; i < MergePanel2.EDITORS_COUNT; i++) {\n      final EditorMouseListener motionListener = new EditorMouseListener(i);\n      final EditorClickListener clickListener = new EditorClickListener(i);\n      mergePanel.getEditorPlace(i).addListener(new EditorPlace.EditorListener() {\n        public void onEditorCreated(EditorPlace place) {\n          Editor editor = place.getEditor();\n          editor.addEditorMouseMotionListener(motionListener);\n          editor.addEditorMouseListener(clickListener);\n          editor.getCaretModel().addCaretListener(clickListener);\n        }\n\n        public void onEditorReleased(Editor releasedEditor) {\n          releasedEditor.removeEditorMouseMotionListener(motionListener);\n          releasedEditor.removeEditorMouseListener(clickListener);\n        }\n      });\n      Editor editor = mergePanel.getEditor(i);\n      if (editor != null) {\n        editor.addEditorMouseMotionListener(motionListener);\n        editor.addEditorMouseListener(clickListener);\n      }\n    }\n  }","commit_id":"2b11d1f0cb90a8ddb51f1cdc3320e197ef5be79d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void tryInitView() {\n    if (!hasAllEditors()) return;\n    if (myMergeList != null) return;\n    myMergeList = MergeList.create(myData);\n    myMergeList.addListener(myDividersRepainter);\n    myStatusUpdater = StatusUpdater.install(myMergeList, myPanel);\n    Editor left = getEditor(0);\n    Editor base = getEditor(1);\n    Editor right = getEditor(2);\n    myMergeList.setMarkups(left, base, right);\n    EditingSides[] sides = new EditingSides[]{new MyEditingSides(FragmentSide.SIDE1),\n                                              new MyEditingSides(FragmentSide.SIDE2)};\n    myScrollSupport.install(sides);\n    for (int i = 0; i < myDividers.length; i++) {\n      myDividers[i].listenEditors(sides[i]);\n    }\n    myPanel.requestScrollEditors();\n  }","id":61839,"modified_method":"private void tryInitView() {\n    if (!hasAllEditors()) return;\n    if (myMergeList != null) return;\n    myMergeList = MergeList.create(myData);\n    myMergeList.addListener(myDividersRepainter);\n    myStatusUpdater = StatusUpdater.install(myMergeList, myPanel);\n    Editor left = getEditor(0);\n    Editor base = getEditor(1);\n    Editor right = getEditor(2);\n    myMergeList.setMarkups(left, base, right);\n    EditingSides[] sides = new EditingSides[]{new MyEditingSides(FragmentSide.SIDE1),\n                                              new MyEditingSides(FragmentSide.SIDE2)};\n    myScrollSupport.install(sides);\n    for (int i = 0; i < myDividers.length; i++) {\n      myDividers[i].listenEditors(sides[i]);\n    }\n    if (myScrollToFirstDiff) {\n      myPanel.requestScrollEditors();\n    }\n  }","commit_id":"2b11d1f0cb90a8ddb51f1cdc3320e197ef5be79d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void storeRefreshStatusToFiles() {\n    if (FileWatcher.isAvailable()) {\n      final String[] dirtyFiles;\n      synchronized (myDirtyFiles) {\n        dirtyFiles = myDirtyFiles.toArray(new String[myDirtyFiles.size()]);\n        myDirtyFiles.clear();\n      }\n      for (String dirtyFile : dirtyFiles) {\n        String path = dirtyFile.replace(File.separatorChar, '/');\n        VirtualFile file = findFileByPath(path, true, false);\n        if (file != null) {\n          synchronized (myRefreshStatusMap) {\n            if (myRefreshStatusMap.get(file) == null) {\n              myRefreshStatusMap.put(file, DIRTY_STATUS);\n            }\n          }\n        }\n      }\n\n      final String[] deletedFiles;\n      synchronized (myDeletedFiles) {\n        deletedFiles = myDeletedFiles.toArray(new String[myDeletedFiles.size()]);\n        myDeletedFiles.clear();\n      }\n      for (String deletedFile : deletedFiles) {\n        String path = deletedFile.replace(File.separatorChar, '/');\n        VirtualFile file = findFileByPath(path, false, false);\n        if (file != null) {\n          synchronized (myRefreshStatusMap) {\n            myRefreshStatusMap.put(file, DELETED_STATUS);\n          }\n          // when moving file in Explorer FILE_MODIFIED is not fired for the parent...\n          VirtualFile parent = file.getParent();\n          if (parent != null) {\n            synchronized (myRefreshStatusMap) {\n              if (myRefreshStatusMap.get(parent) == null) {\n                myRefreshStatusMap.put(parent, DIRTY_STATUS);\n              }\n            }\n          }\n        }\n      }\n    }\n  }","id":61840,"modified_method":"private void storeRefreshStatusToFiles() {\n    if (FileWatcher.isAvailable()) {\n      final String[] dirtyFiles;\n      synchronized (myDirtyFiles) {\n        dirtyFiles = myDirtyFiles.toArray(new String[myDirtyFiles.size()]);\n        myDirtyFiles.clear();\n      }\n      for (String dirtyFile : dirtyFiles) {\n        String path = dirtyFile.replace(File.separatorChar, '/');\n        VirtualFile file = findFileByPath(path, false, false);\n        if (file != null) {\n          synchronized (myRefreshStatusMap) {\n            if (myRefreshStatusMap.get(file) == null) {\n              myRefreshStatusMap.put(file, DIRTY_STATUS);\n            }\n          }\n        }\n      }\n\n      final String[] deletedFiles;\n      synchronized (myDeletedFiles) {\n        deletedFiles = myDeletedFiles.toArray(new String[myDeletedFiles.size()]);\n        myDeletedFiles.clear();\n      }\n      for (String deletedFile : deletedFiles) {\n        String path = deletedFile.replace(File.separatorChar, '/');\n        VirtualFile file = findFileByPath(path, false, false);\n        if (file != null) {\n          synchronized (myRefreshStatusMap) {\n            myRefreshStatusMap.put(file, DELETED_STATUS);\n          }\n          // when moving file in Explorer FILE_MODIFIED is not fired for the parent...\n          VirtualFile parent = file.getParent();\n          if (parent != null) {\n            synchronized (myRefreshStatusMap) {\n              if (myRefreshStatusMap.get(parent) == null) {\n                myRefreshStatusMap.put(parent, DIRTY_STATUS);\n              }\n            }\n          }\n        }\n      }\n    }\n  }","commit_id":"4c51c2b85ae6b5dd66c429e2ac1ea921e5cc22e7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private VirtualFile findFileByPath(String path, boolean createIfNoCache, final boolean refreshIfNotFound) {\n    if (SystemInfo.isWindows || SystemInfo.isOS2) {\n      if (path.endsWith(\":/\")) { // instead of getting canonical path - see below\n        path = Character.toUpperCase(path.charAt(0)) + path.substring(1);\n      }\n    }\n\n    initRoots();\n    for (VirtualFile root : myFSRootsToPaths.keySet()) {\n      String rootPath = root.getPath();\n      if (!FileUtil.startsWith(path, rootPath)) continue;\n      if (path.length() == rootPath.length()) return root;\n      String tail;\n      if (path.charAt(rootPath.length()) == '/') {\n        tail = path.substring(rootPath.length() + 1);\n      }\n      else if (StringUtil.endsWithChar(rootPath, '/')) {\n        tail = path.substring(rootPath.length());\n      }\n      else {\n        continue;\n      }\n      StringTokenizer tokenizer = new StringTokenizer(tail, \"/\");\n      while (tokenizer.hasMoreTokens()) {\n        final String name = tokenizer.nextToken();\n        if (\".\".equals(name)) continue;\n        if (\"..\".equals(name)) {\n          root = root.getParent();\n          if (root == null) return null;\n        }\n        else {\n          if (!((VirtualFileImpl)root).areChildrenCached()) {\n            if (!createIfNoCache) return null;\n            root = ((VirtualFileImpl)root).findSingleChild(name);\n            if (root == null) return null;\n          }\n          else {\n            VirtualFile child = root.findChild(name);\n            if (child == null) {\n              if (refreshIfNotFound) {\n                root.refresh(false, false);\n                child = root.findChild(name);\n                if (child == null) return null;\n              }\n              else {\n                return null;\n              }\n            }\n            root = child;\n          }\n        }\n      }\n\n      return root;\n    }\n\n    return null;\n  }","id":61841,"modified_method":"private VirtualFile findFileByPath(String path, boolean createIfNoCache, final boolean refreshIfNotFound) {\n    if (SystemInfo.isWindows || SystemInfo.isOS2) {\n      if (path.endsWith(\":/\")) { // instead of getting canonical path - see below\n        path = Character.toUpperCase(path.charAt(0)) + path.substring(1);\n      }\n    }\n\n    initRoots();\n    for (VirtualFile root : myFSRootsToPaths.keySet()) {\n      //noinspection NonConstantStringShouldBeStringBuffer\n      String runPath = root.getPath();\n      if (runPath.endsWith(\"/\")) runPath = runPath.substring(0, runPath.length() - 1);\n      if (!FileUtil.startsWith(path, runPath)) continue;\n      if (path.length() == runPath.length()) return root;\n      String tail;\n      if (path.charAt(runPath.length()) == '/') {\n        tail = path.substring(runPath.length() + 1);\n      }\n      else if (StringUtil.endsWithChar(runPath, '/')) {\n        tail = path.substring(runPath.length());\n      }\n      else {\n        continue;\n      }\n      StringTokenizer tokenizer = new StringTokenizer(tail, \"/\");\n      while (tokenizer.hasMoreTokens()) {\n        final String name = tokenizer.nextToken();\n        if (\".\".equals(name)) continue;\n        if (\"..\".equals(name)) {\n          runPath = runPath.substring(0, runPath.lastIndexOf(\"/\"));\n          root = root.getParent();\n          if (root == null) return null;\n        }\n        else {\n          runPath = runPath + \"/\" + name;\n          if (!((VirtualFileImpl)root).areChildrenCached()) {\n            VirtualFile child = myUnaccountedFiles.get(runPath);\n            if (child == null || !child.isValid()) {\n              if (!createIfNoCache) return null;\n              root = ((VirtualFileImpl)root).findSingleChild(name);\n              if (root == null) return null;\n            } else {\n              root = child;\n            }\n          }\n          else {\n            VirtualFile child = root.findChild(name);\n            if (child == null) {\n              if (refreshIfNotFound) {\n                root.refresh(false, false);\n                child = root.findChild(name);\n                if (child == null) return null;\n              }\n              else {\n                return null;\n              }\n            }\n            root = child;\n          }\n        }\n      }\n\n      return root;\n    }\n\n    return null;\n  }","commit_id":"4c51c2b85ae6b5dd66c429e2ac1ea921e5cc22e7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private int appendPath(char[] buffer, char separatorChar) {\n    int currentLength = myParent == null ? 0 : myParent.appendPath(buffer, separatorChar);\n\n    if (currentLength > 0 && buffer[currentLength - 1] != separatorChar) {\n      buffer[currentLength++] = separatorChar;\n    }\n\n    String name = myName;\n    final int nameLength = name.length();\n\n    name.getChars(0, nameLength, buffer, currentLength);\n    int newLength = currentLength + nameLength;\n    if (currentLength == 0 && separatorChar != '/') {\n      StringUtil.replaceChar(buffer, '/', separatorChar, currentLength, newLength); // root may contain '/' char\n    }\n    return newLength;\n  }","id":61842,"modified_method":"private int appendPath(char[] buffer, char separatorChar) {\n    int currentLength;\n    if (myParent != null) {\n      currentLength = myParent.appendPath(buffer, separatorChar);\n      buffer[currentLength++] = separatorChar;\n    } else {\n      currentLength = 0;\n    }\n\n    final int nameLength = myName.length();\n    myName.getChars(0, nameLength, buffer, currentLength);\n    return currentLength + nameLength;\n  }","commit_id":"4c51c2b85ae6b5dd66c429e2ac1ea921e5cc22e7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"VirtualFileImpl(String path) {\n    int lastSlash = path.lastIndexOf('/');\n    LOG.assertTrue(lastSlash >= 0);\n    if (lastSlash == path.length() - 1) { // 'c:/' or '/'\n      setName(path);\n      myDirectoryFlag = true;\n    }\n    else {\n      setName(path.substring(lastSlash + 1));\n      String systemPath = path.replace('/', File.separatorChar);\n      myDirectoryFlag = new IoFile(systemPath).isDirectory();\n    }\n    LOG.assertTrue(myName.length() > 0);\n  }","id":61843,"modified_method":"VirtualFileImpl(String path) {\n    int lastSlash = path.lastIndexOf('/');\n    LOG.assertTrue(lastSlash >= 0);\n    if (lastSlash == path.length() - 1) { // 'c:/' or '/'\n      setName(path.substring(0, lastSlash));\n      myDirectoryFlag = true;\n    }\n    else {\n      setName(path.substring(lastSlash + 1));\n      String systemPath = path.replace('/', File.separatorChar);\n      myDirectoryFlag = new IoFile(systemPath).isDirectory();\n    }\n    LOG.assertTrue(myName.length() > 0);\n  }","commit_id":"4c51c2b85ae6b5dd66c429e2ac1ea921e5cc22e7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void visitWhileStatement(@NotNull PsiWhileStatement statement) {\n            super.visitWhileStatement(statement);\n            final PsiStatement body = statement.getBody();\n            if (!statementIsEmpty(body)) {\n                return;\n            }\n            final PsiExpression condition = statement.getCondition();\n            if (!isSimpleFieldComparison(condition)) {\n                return;\n            }\n            registerStatementError(statement);\n        }","id":61844,"modified_method":"public void visitWhileStatement(@NotNull PsiWhileStatement statement) {\n            super.visitWhileStatement(statement);\n            final PsiStatement body = statement.getBody();\n            if (ignoreNonEmtpyLoops && !statementIsEmpty(body)) {\n                return;\n            }\n            final PsiExpression condition = statement.getCondition();\n            if (!isSimpleFieldComparison(condition)) {\n                return;\n            }\n            registerStatementError(statement);\n        }","commit_id":"12e3c2ef8d713515104d66f375124085f3915b5a","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static boolean isLiteral(PsiExpression expression) {\n            if (expression == null) {\n                return false;\n            }\n            if (expression instanceof PsiParenthesizedExpression) {\n                final PsiExpression operand =\n                        ((PsiParenthesizedExpression)expression).getExpression();\n                return isSimpleFieldAccess(operand);\n            }\n            return expression instanceof PsiLiteralExpression;\n        }","id":61845,"modified_method":"private boolean isLiteral(PsiExpression expression) {\n            expression = PsiUtil.deparenthesizeExpression(expression);\n            if (expression == null) {\n                return false;\n            }\n            return expression instanceof PsiLiteralExpression;\n        }","commit_id":"12e3c2ef8d713515104d66f375124085f3915b5a","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static boolean isSimpleFieldComparison(PsiExpression condition) {\n            if (condition == null) {\n                return false;\n            }\n            if (isSimpleFieldAccess(condition)) {\n                return true;\n            }\n            if (condition instanceof PsiPrefixExpression) {\n                final PsiExpression operand =\n                        ((PsiPrefixExpression)condition).getOperand();\n                return isSimpleFieldComparison(operand);\n            }\n            if (condition instanceof PsiPostfixExpression) {\n                final PsiExpression operand =\n                        ((PsiPostfixExpression)condition).getOperand();\n                return isSimpleFieldComparison(operand);\n            }\n            if (condition instanceof PsiParenthesizedExpression) {\n                final PsiExpression operand =\n                        ((PsiParenthesizedExpression)condition).getExpression();\n                return isSimpleFieldComparison(operand);\n            }\n\n            if (condition instanceof PsiBinaryExpression) {\n                final PsiBinaryExpression binaryExpression =\n                        (PsiBinaryExpression)condition;\n                final PsiExpression lOperand = binaryExpression.getLOperand();\n                final PsiExpression rOperand = binaryExpression.getROperand();\n                return isSimpleFieldComparison(lOperand) &&\n                        isLiteral(rOperand) ||\n                        (isSimpleFieldComparison(rOperand) && isLiteral(lOperand));\n            }\n            return false;\n        }","id":61846,"modified_method":"private boolean isSimpleFieldComparison(PsiExpression condition) {\n            condition = PsiUtil.deparenthesizeExpression(condition);\n            if (condition == null) {\n                return false;\n            }\n            if (isSimpleFieldAccess(condition)) {\n                return true;\n            }\n            if (condition instanceof PsiPrefixExpression) {\n                final PsiPrefixExpression prefixExpression =\n                        (PsiPrefixExpression) condition;\n                final PsiExpression operand =\n                        prefixExpression.getOperand();\n                return isSimpleFieldComparison(operand);\n            }\n            if (condition instanceof PsiPostfixExpression) {\n                final PsiPostfixExpression postfixExpression =\n                        (PsiPostfixExpression) condition;\n                final PsiExpression operand =\n                        postfixExpression.getOperand();\n                return isSimpleFieldComparison(operand);\n            }\n            if (condition instanceof PsiBinaryExpression) {\n                final PsiBinaryExpression binaryExpression =\n                        (PsiBinaryExpression)condition;\n                final PsiExpression lOperand = binaryExpression.getLOperand();\n                final PsiExpression rOperand = binaryExpression.getROperand();\n                if (isLiteral(rOperand)) {\n                    return isSimpleFieldComparison(lOperand);\n                } else if (isLiteral(lOperand)) {\n                    return isSimpleFieldComparison(rOperand);\n                } else {\n                    return false;\n                }\n            }\n            return false;\n        }","commit_id":"12e3c2ef8d713515104d66f375124085f3915b5a","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static boolean statementIsEmpty(PsiStatement statement) {\n            if (statement == null) {\n                return false;\n            }\n            if (statement instanceof PsiEmptyStatement) {\n                return true;\n            }\n            if (statement instanceof PsiBlockStatement) {\n                final PsiCodeBlock codeBlock =\n                        ((PsiBlockStatement)statement).getCodeBlock();\n                final PsiStatement[] statements = codeBlock.getStatements();\n                for (PsiStatement statement1 : statements) {\n                    if (!statementIsEmpty(statement1)) {\n                        return false;\n                    }\n                }\n                return true;\n            }\n            return false;\n        }","id":61847,"modified_method":"private boolean statementIsEmpty(PsiStatement statement) {\n            if (statement == null) {\n                return false;\n            }\n            if (statement instanceof PsiEmptyStatement) {\n                return true;\n            }\n            if (statement instanceof PsiBlockStatement) {\n                final PsiBlockStatement blockStatement =\n                        (PsiBlockStatement) statement;\n                final PsiCodeBlock codeBlock = blockStatement.getCodeBlock();\n                final PsiStatement[] codeBlockStatements = codeBlock.getStatements();\n                for (PsiStatement codeBlockStatement : codeBlockStatements) {\n                    if (!statementIsEmpty(codeBlockStatement)) {\n                        return false;\n                    }\n                }\n                return true;\n            }\n            return false;\n        }","commit_id":"12e3c2ef8d713515104d66f375124085f3915b5a","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static boolean isSimpleFieldAccess(PsiExpression expression) {\n            if (expression == null) {\n                return false;\n            }\n            if (expression instanceof PsiParenthesizedExpression) {\n                final PsiExpression operand =\n                        ((PsiParenthesizedExpression)expression).getExpression();\n                return isSimpleFieldAccess(operand);\n            }\n            if (!(expression instanceof PsiReferenceExpression)) {\n                return false;\n            }\n            final PsiElement referent = ((PsiReference)expression).resolve();\n            if (!(referent instanceof PsiField)) {\n                return false;\n            }\n            final PsiField field = (PsiField)referent;\n            return !field.hasModifierProperty(PsiModifier.VOLATILE);\n        }","id":61848,"modified_method":"private boolean isSimpleFieldAccess(PsiExpression expression) {\n            expression = PsiUtil.deparenthesizeExpression(expression);\n            if (expression == null) {\n                return false;\n            }\n            if (!(expression instanceof PsiReferenceExpression)) {\n                return false;\n            }\n            final PsiReference reference = (PsiReference) expression;\n            final PsiElement referent = reference.resolve();\n            if (!(referent instanceof PsiField)) {\n                return false;\n            }\n            final PsiField field = (PsiField)referent;\n            return !field.hasModifierProperty(PsiModifier.VOLATILE);\n        }","commit_id":"12e3c2ef8d713515104d66f375124085f3915b5a","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  PsiElement migrate(@NotNull Project project,\n               @NotNull ProblemDescriptor descriptor,\n               @NotNull PsiForeachStatement foreachStatement,\n               @NotNull PsiExpression iteratedValue,\n               @NotNull PsiStatement body,\n               @NotNull StreamApiMigrationInspection.TerminalBlock tb) {\n    PsiElementFactory elementFactory = JavaPsiFacade.getElementFactory(project);\n    if(tb.getSingleStatement() instanceof PsiReturnStatement) {\n      PsiReturnStatement returnStatement = (PsiReturnStatement)tb.getSingleStatement();\n      PsiExpression value = returnStatement.getReturnValue();\n      if (ExpressionUtils.isLiteral(value, Boolean.TRUE) || ExpressionUtils.isLiteral(value, Boolean.FALSE)) {\n        boolean foundResult = (boolean)((PsiLiteralExpression)value).getValue();\n        PsiReturnStatement nextReturnStatement = StreamApiMigrationInspection.getNextReturnStatement(foreachStatement);\n        if (nextReturnStatement != null && ExpressionUtils.isLiteral(nextReturnStatement.getReturnValue(), !foundResult)) {\n          String methodName = foundResult ? \"anyMatch\" : \"noneMatch\";\n          String streamText = generateStream(iteratedValue, tb.getLastOperation()).toString();\n          streamText = addTerminalOperation(streamText, methodName, foreachStatement, tb);\n          restoreComments(foreachStatement, body);\n          if (nextReturnStatement.getParent() == foreachStatement.getParent()) {\n            nextReturnStatement.delete();\n          }\n          return foreachStatement.replace(elementFactory.createStatementFromText(\"return \" + streamText + \";\", foreachStatement));\n        }\n      }\n    }\n    PsiStatement[] statements = tb.getStatements();\n    if (!(statements.length == 1 || (statements.length == 2 && ControlFlowUtils.statementBreaksLoop(statements[1], foreachStatement)))) {\n      return null;\n    }\n    restoreComments(foreachStatement, body);\n    String streamText = generateStream(iteratedValue, tb.getLastOperation()).toString();\n    streamText = addTerminalOperation(streamText, \"anyMatch\", foreachStatement, tb);\n    PsiStatement statement = statements[0];\n    PsiAssignmentExpression assignment = ExpressionUtils.getAssignment(statement);\n    if(assignment != null) {\n      PsiExpression lValue = assignment.getLExpression();\n      PsiExpression rValue = assignment.getRExpression();\n      if (!(lValue instanceof PsiReferenceExpression) || rValue == null) return null;\n      PsiElement maybeVar = ((PsiReferenceExpression)lValue).resolve();\n      if(maybeVar instanceof PsiVariable) {\n        // Simplify single assignments like this:\n        // boolean flag = false;\n        // for(....) if(...) {flag = true; break;}\n        PsiVariable var = (PsiVariable)maybeVar;\n        PsiExpression initializer = var.getInitializer();\n        InitializerUsageStatus status = StreamApiMigrationInspection.getInitializerUsageStatus(var, foreachStatement);\n        if(initializer != null && status != InitializerUsageStatus.UNKNOWN) {\n          String replacement;\n          if(ExpressionUtils.isLiteral(initializer, Boolean.FALSE) &&\n             ExpressionUtils.isLiteral(rValue, Boolean.TRUE)) {\n            replacement = streamText;\n          } else if(ExpressionUtils.isLiteral(initializer, Boolean.TRUE) &&\n                    ExpressionUtils.isLiteral(rValue, Boolean.FALSE)) {\n            replacement = \"!\"+streamText;\n          } else {\n            replacement = streamText + \"?\" + rValue.getText() + \":\" + initializer.getText();\n          }\n          return replaceInitializer(foreachStatement, var, initializer, replacement, status);\n        }\n      }\n    }\n    String replacement = \"if(\" + streamText + \"){\" + statement.getText() + \"}\";\n    return foreachStatement.replace(elementFactory.createStatementFromText(replacement, foreachStatement));\n  }","id":61849,"modified_method":"@Override\n  PsiElement migrate(@NotNull Project project,\n               @NotNull ProblemDescriptor descriptor,\n               @NotNull PsiForeachStatement foreachStatement,\n               @NotNull PsiExpression iteratedValue,\n               @NotNull PsiStatement body,\n               @NotNull StreamApiMigrationInspection.TerminalBlock tb) {\n    PsiElementFactory elementFactory = JavaPsiFacade.getElementFactory(project);\n    if(tb.getSingleStatement() instanceof PsiReturnStatement) {\n      PsiReturnStatement returnStatement = (PsiReturnStatement)tb.getSingleStatement();\n      PsiExpression value = returnStatement.getReturnValue();\n      if (ExpressionUtils.isLiteral(value, Boolean.TRUE) || ExpressionUtils.isLiteral(value, Boolean.FALSE)) {\n        boolean foundResult = (boolean)((PsiLiteralExpression)value).getValue();\n        PsiReturnStatement nextReturnStatement = StreamApiMigrationInspection.getNextReturnStatement(foreachStatement);\n        if (nextReturnStatement != null) {\n          PsiExpression returnValue = nextReturnStatement.getReturnValue();\n          if(returnValue == null) return null;\n          String methodName = foundResult ? \"anyMatch\" : \"noneMatch\";\n          String streamText = generateStream(iteratedValue, tb.getLastOperation()).toString();\n          streamText = addTerminalOperation(streamText, methodName, foreachStatement, tb);\n          restoreComments(foreachStatement, body);\n          if (nextReturnStatement.getParent() == foreachStatement.getParent()) {\n            if(!ExpressionUtils.isLiteral(returnValue, !foundResult)) {\n              streamText+= (foundResult ? \"||\" : \"&&\") + ParenthesesUtils.getText(returnValue, ParenthesesUtils.AND_PRECEDENCE);\n            }\n            removeLoop(foreachStatement);\n            return returnValue.replace(elementFactory.createExpressionFromText(streamText, nextReturnStatement));\n          }\n          return foreachStatement.replace(elementFactory.createStatementFromText(\"return \" + streamText + \";\", foreachStatement));\n        }\n      }\n    }\n    PsiStatement[] statements = tb.getStatements();\n    if (!(statements.length == 1 || (statements.length == 2 && ControlFlowUtils.statementBreaksLoop(statements[1], foreachStatement)))) {\n      return null;\n    }\n    restoreComments(foreachStatement, body);\n    String streamText = generateStream(iteratedValue, tb.getLastOperation()).toString();\n    streamText = addTerminalOperation(streamText, \"anyMatch\", foreachStatement, tb);\n    PsiStatement statement = statements[0];\n    PsiAssignmentExpression assignment = ExpressionUtils.getAssignment(statement);\n    if(assignment != null) {\n      PsiExpression lValue = assignment.getLExpression();\n      PsiExpression rValue = assignment.getRExpression();\n      if (!(lValue instanceof PsiReferenceExpression) || rValue == null) return null;\n      PsiElement maybeVar = ((PsiReferenceExpression)lValue).resolve();\n      if(maybeVar instanceof PsiVariable) {\n        // Simplify single assignments like this:\n        // boolean flag = false;\n        // for(....) if(...) {flag = true; break;}\n        PsiVariable var = (PsiVariable)maybeVar;\n        PsiExpression initializer = var.getInitializer();\n        InitializerUsageStatus status = StreamApiMigrationInspection.getInitializerUsageStatus(var, foreachStatement);\n        if(initializer != null && status != InitializerUsageStatus.UNKNOWN) {\n          String replacement;\n          if(ExpressionUtils.isLiteral(initializer, Boolean.FALSE) &&\n             ExpressionUtils.isLiteral(rValue, Boolean.TRUE)) {\n            replacement = streamText;\n          } else if(ExpressionUtils.isLiteral(initializer, Boolean.TRUE) &&\n                    ExpressionUtils.isLiteral(rValue, Boolean.FALSE)) {\n            replacement = \"!\"+streamText;\n          } else {\n            replacement = streamText + \"?\" + rValue.getText() + \":\" + initializer.getText();\n          }\n          return replaceInitializer(foreachStatement, var, initializer, replacement, status);\n        }\n      }\n    }\n    String replacement = \"if(\" + streamText + \"){\" + statement.getText() + \"}\";\n    return foreachStatement.replace(elementFactory.createStatementFromText(replacement, foreachStatement));\n  }","commit_id":"10c8616d19908b867692559987ea9e92cdea3cf8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"void handleSingleReturn(PsiForeachStatement statement, TerminalBlock tb) {\n      PsiReturnStatement returnStatement = (PsiReturnStatement)tb.getSingleStatement();\n      PsiExpression value = returnStatement.getReturnValue();\n      PsiReturnStatement nextReturnStatement = getNextReturnStatement(statement);\n      if (nextReturnStatement != null &&\n          (ExpressionUtils.isLiteral(value, Boolean.TRUE) || ExpressionUtils.isLiteral(value, Boolean.FALSE))) {\n        boolean foundResult = (boolean)((PsiLiteralExpression)value).getValue();\n        if(ExpressionUtils.isLiteral(nextReturnStatement.getReturnValue(), !foundResult)) {\n          String methodName;\n          if (foundResult) {\n            methodName = \"anyMatch\";\n          }\n          else {\n            methodName = \"noneMatch\";\n            Operation lastOp = tb.getLastOperation();\n            if(lastOp instanceof FilterOp && (((FilterOp)lastOp).isNegated() ^ BoolUtils.isNegation(lastOp.getExpression()))) {\n              methodName = \"allMatch\";\n            }\n          }\n          registerProblem(statement, methodName, new ReplaceWithMatchFix(methodName));\n          return;\n        }\n      }\n      if (!isVariableReferenced(tb.getVariable(), value)) {\n        Operation lastOp = tb.getLastOperation();\n        if(!REPLACE_TRIVIAL_FOREACH && lastOp == null || (lastOp instanceof FilterOp && lastOp.getPreviousOp() == null)) return;\n        registerProblem(statement, \"anyMatch\", new ReplaceWithMatchFix(\"anyMatch\"));\n      }\n      if(nextReturnStatement != null && ExpressionUtils.isSimpleExpression(nextReturnStatement.getReturnValue())\n         && (!(tb.getVariable().getType() instanceof PsiPrimitiveType) || isIdentityMapping(tb.getVariable(), value))) {\n        registerProblem(statement, \"findFirst\", new ReplaceWithFindFirstFix());\n      }\n    }","id":61850,"modified_method":"void handleSingleReturn(PsiForeachStatement statement, TerminalBlock tb) {\n      PsiReturnStatement returnStatement = (PsiReturnStatement)tb.getSingleStatement();\n      PsiExpression value = returnStatement.getReturnValue();\n      PsiReturnStatement nextReturnStatement = getNextReturnStatement(statement);\n      if (nextReturnStatement != null &&\n          (ExpressionUtils.isLiteral(value, Boolean.TRUE) || ExpressionUtils.isLiteral(value, Boolean.FALSE))) {\n        boolean foundResult = (boolean)((PsiLiteralExpression)value).getValue();\n        String methodName;\n        if (foundResult) {\n          methodName = \"anyMatch\";\n        }\n        else {\n          methodName = \"noneMatch\";\n          Operation lastOp = tb.getLastOperation();\n          if(lastOp instanceof FilterOp && (((FilterOp)lastOp).isNegated() ^ BoolUtils.isNegation(lastOp.getExpression()))) {\n            methodName = \"allMatch\";\n          }\n        }\n        if(nextReturnStatement.getParent() == statement.getParent() ||\n           ExpressionUtils.isLiteral(nextReturnStatement.getReturnValue(), !foundResult)) {\n          registerProblem(statement, methodName, new ReplaceWithMatchFix(methodName));\n          return;\n        }\n      }\n      if (!isVariableReferenced(tb.getVariable(), value)) {\n        Operation lastOp = tb.getLastOperation();\n        if(!REPLACE_TRIVIAL_FOREACH && lastOp == null || (lastOp instanceof FilterOp && lastOp.getPreviousOp() == null)) return;\n        registerProblem(statement, \"anyMatch\", new ReplaceWithMatchFix(\"anyMatch\"));\n      }\n      if(nextReturnStatement != null && ExpressionUtils.isSimpleExpression(nextReturnStatement.getReturnValue())\n         && (!(tb.getVariable().getType() instanceof PsiPrimitiveType) || isIdentityMapping(tb.getVariable(), value))) {\n        registerProblem(statement, \"findFirst\", new ReplaceWithFindFirstFix());\n      }\n    }","commit_id":"10c8616d19908b867692559987ea9e92cdea3cf8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n     * Find the resource with the given name, and return an input stream\n     * that can be used for reading it.  The search order is as described\n     * for <code>getResource()<\/code>, after checking to see if the resource\n     * data has been previously cached.  If the resource cannot be found,\n     * return <code>null<\/code>.\n     *\n     * @param name Name of the resource to return an input stream for\n     */\n    @Override\n    public InputStream getResourceAsStream(String name) {\n\n        if (log.isDebugEnabled())\n            log.debug(\"getResourceAsStream(\" + name + \")\");\n        InputStream stream = null;\n\n        // (0) Check for a cached copy of this resource\n        stream = findLoadedResource(name);\n        if (stream != null) {\n            if (log.isDebugEnabled())\n                log.debug(\"  --> Returning stream from cache\");\n            return (stream);\n        }\n\n        // (1) Delegate to parent if requested\n        if (delegate) {\n            if (log.isDebugEnabled())\n                log.debug(\"  Delegating to parent classloader \" + parent);\n            stream = parent.getResourceAsStream(name);\n            if (stream != null) {\n                // FIXME - cache???\n                if (log.isDebugEnabled())\n                    log.debug(\"  --> Returning stream from parent\");\n                return (stream);\n            }\n        }\n\n        // (2) Search local repositories\n        if (log.isDebugEnabled())\n            log.debug(\"  Searching local repositories\");\n        URL url = findResource(name);\n        if (url != null) {\n            // FIXME - cache???\n            if (log.isDebugEnabled())\n                log.debug(\"  --> Returning stream from local\");\n            stream = findLoadedResource(name);\n            try {\n                if (hasExternalRepositories && (stream == null))\n                    stream = url.openStream();\n            } catch (IOException e) {\n                // Ignore\n            }\n            if (stream != null)\n                return (stream);\n        }\n\n        // (3) Delegate to parent unconditionally\n        if (!delegate) {\n            if (log.isDebugEnabled())\n                log.debug(\"  Delegating to parent classloader unconditionally \" + parent);\n            stream = parent.getResourceAsStream(name);\n            if (stream != null) {\n                // FIXME - cache???\n                if (log.isDebugEnabled())\n                    log.debug(\"  --> Returning stream from parent\");\n                return (stream);\n            }\n        }\n\n        // (4) Resource was not found\n        if (log.isDebugEnabled())\n            log.debug(\"  --> Resource not found, returning null\");\n        return (null);\n\n    }","id":61851,"modified_method":"/**\n     * Find the resource with the given name, and return an input stream\n     * that can be used for reading it.  The search order is as described\n     * for <code>getResource()<\/code>, after checking to see if the resource\n     * data has been previously cached.  If the resource cannot be found,\n     * return <code>null<\/code>.\n     *\n     * @param name Name of the resource to return an input stream for\n     */\n    @Override\n    public InputStream getResourceAsStream(String name) {\n\n        if (log.isDebugEnabled())\n            log.debug(\"getResourceAsStream(\" + name + \")\");\n\n        checkStateForResourceLoading(name);\n\n        InputStream stream = null;\n\n        // (0) Check for a cached copy of this resource\n        stream = findLoadedResource(name);\n        if (stream != null) {\n            if (log.isDebugEnabled())\n                log.debug(\"  --> Returning stream from cache\");\n            return (stream);\n        }\n\n        // (1) Delegate to parent if requested\n        if (delegate) {\n            if (log.isDebugEnabled())\n                log.debug(\"  Delegating to parent classloader \" + parent);\n            stream = parent.getResourceAsStream(name);\n            if (stream != null) {\n                // FIXME - cache???\n                if (log.isDebugEnabled())\n                    log.debug(\"  --> Returning stream from parent\");\n                return (stream);\n            }\n        }\n\n        // (2) Search local repositories\n        if (log.isDebugEnabled())\n            log.debug(\"  Searching local repositories\");\n        URL url = findResource(name);\n        if (url != null) {\n            // FIXME - cache???\n            if (log.isDebugEnabled())\n                log.debug(\"  --> Returning stream from local\");\n            stream = findLoadedResource(name);\n            try {\n                if (hasExternalRepositories && (stream == null))\n                    stream = url.openStream();\n            } catch (IOException e) {\n                // Ignore\n            }\n            if (stream != null)\n                return (stream);\n        }\n\n        // (3) Delegate to parent unconditionally\n        if (!delegate) {\n            if (log.isDebugEnabled())\n                log.debug(\"  Delegating to parent classloader unconditionally \" + parent);\n            stream = parent.getResourceAsStream(name);\n            if (stream != null) {\n                // FIXME - cache???\n                if (log.isDebugEnabled())\n                    log.debug(\"  --> Returning stream from parent\");\n                return (stream);\n            }\n        }\n\n        // (4) Resource was not found\n        if (log.isDebugEnabled())\n            log.debug(\"  --> Resource not found, returning null\");\n        return (null);\n\n    }","commit_id":"0566905c784f81451c05ff5a68c70163b3339007","url":"https://github.com/apache/tomcat"},{"original_method":"/**\n     * Find the specified resource in our local repository, and return a\n     * <code>URL<\/code> referring to it, or <code>null<\/code> if this resource\n     * cannot be found.\n     *\n     * @param name Name of the resource to be found\n     */\n    @Override\n    public URL findResource(final String name) {\n\n        if (log.isDebugEnabled())\n            log.debug(\"    findResource(\" + name + \")\");\n\n        URL url = null;\n\n        String path = nameToPath(name);\n\n        ResourceEntry entry = resourceEntries.get(path);\n        if (entry == null) {\n            if (securityManager != null) {\n                PrivilegedAction<ResourceEntry> dp =\n                    new PrivilegedFindResourceByName(name, path);\n                entry = AccessController.doPrivileged(dp);\n            } else {\n                entry = findResourceInternal(name, path);\n            }\n        }\n        if (entry != null) {\n            url = entry.source;\n        }\n\n        if ((url == null) && hasExternalRepositories) {\n            url = super.findResource(name);\n        }\n\n        if (log.isDebugEnabled()) {\n            if (url != null)\n                log.debug(\"    --> Returning '\" + url.toString() + \"'\");\n            else\n                log.debug(\"    --> Resource not found, returning null\");\n        }\n        return (url);\n\n    }","id":61852,"modified_method":"/**\n     * Find the specified resource in our local repository, and return a\n     * <code>URL<\/code> referring to it, or <code>null<\/code> if this resource\n     * cannot be found.\n     *\n     * @param name Name of the resource to be found\n     */\n    @Override\n    public URL findResource(final String name) {\n\n        if (log.isDebugEnabled())\n            log.debug(\"    findResource(\" + name + \")\");\n\n        checkStateForResourceLoading(name);\n\n        URL url = null;\n\n        String path = nameToPath(name);\n\n        ResourceEntry entry = resourceEntries.get(path);\n        if (entry == null) {\n            if (securityManager != null) {\n                PrivilegedAction<ResourceEntry> dp =\n                    new PrivilegedFindResourceByName(name, path);\n                entry = AccessController.doPrivileged(dp);\n            } else {\n                entry = findResourceInternal(name, path);\n            }\n        }\n        if (entry != null) {\n            url = entry.source;\n        }\n\n        if ((url == null) && hasExternalRepositories) {\n            url = super.findResource(name);\n        }\n\n        if (log.isDebugEnabled()) {\n            if (url != null)\n                log.debug(\"    --> Returning '\" + url.toString() + \"'\");\n            else\n                log.debug(\"    --> Resource not found, returning null\");\n        }\n        return (url);\n\n    }","commit_id":"0566905c784f81451c05ff5a68c70163b3339007","url":"https://github.com/apache/tomcat"},{"original_method":"/**\n     * Find the resource with the given name.  A resource is some data\n     * (images, audio, text, etc.) that can be accessed by class code in a\n     * way that is independent of the location of the code.  The name of a\n     * resource is a \"/\"-separated path name that identifies the resource.\n     * If the resource cannot be found, return <code>null<\/code>.\n     * <p>\n     * This method searches according to the following algorithm, returning\n     * as soon as it finds the appropriate URL.  If the resource cannot be\n     * found, returns <code>null<\/code>.\n     * <ul>\n     * <li>If the <code>delegate<\/code> property is set to <code>true<\/code>,\n     *     call the <code>getResource()<\/code> method of the parent class\n     *     loader, if any.<\/li>\n     * <li>Call <code>findResource()<\/code> to find this resource in our\n     *     locally defined repositories.<\/li>\n     * <li>Call the <code>getResource()<\/code> method of the parent class\n     *     loader, if any.<\/li>\n     * <\/ul>\n     *\n     * @param name Name of the resource to return a URL for\n     */\n    @Override\n    public URL getResource(String name) {\n\n        if (log.isDebugEnabled())\n            log.debug(\"getResource(\" + name + \")\");\n        URL url = null;\n\n        // (1) Delegate to parent if requested\n        if (delegate) {\n            if (log.isDebugEnabled())\n                log.debug(\"  Delegating to parent classloader \" + parent);\n            url = parent.getResource(name);\n            if (url != null) {\n                if (log.isDebugEnabled())\n                    log.debug(\"  --> Returning '\" + url.toString() + \"'\");\n                return (url);\n            }\n        }\n\n        // (2) Search local repositories\n        url = findResource(name);\n        if (url != null) {\n            if (log.isDebugEnabled())\n                log.debug(\"  --> Returning '\" + url.toString() + \"'\");\n            return (url);\n        }\n\n        // (3) Delegate to parent unconditionally if not already attempted\n        if( !delegate ) {\n            url = parent.getResource(name);\n            if (url != null) {\n                if (log.isDebugEnabled())\n                    log.debug(\"  --> Returning '\" + url.toString() + \"'\");\n                return (url);\n            }\n        }\n\n        // (4) Resource was not found\n        if (log.isDebugEnabled())\n            log.debug(\"  --> Resource not found, returning null\");\n        return (null);\n\n    }","id":61853,"modified_method":"/**\n     * Find the resource with the given name.  A resource is some data\n     * (images, audio, text, etc.) that can be accessed by class code in a\n     * way that is independent of the location of the code.  The name of a\n     * resource is a \"/\"-separated path name that identifies the resource.\n     * If the resource cannot be found, return <code>null<\/code>.\n     * <p>\n     * This method searches according to the following algorithm, returning\n     * as soon as it finds the appropriate URL.  If the resource cannot be\n     * found, returns <code>null<\/code>.\n     * <ul>\n     * <li>If the <code>delegate<\/code> property is set to <code>true<\/code>,\n     *     call the <code>getResource()<\/code> method of the parent class\n     *     loader, if any.<\/li>\n     * <li>Call <code>findResource()<\/code> to find this resource in our\n     *     locally defined repositories.<\/li>\n     * <li>Call the <code>getResource()<\/code> method of the parent class\n     *     loader, if any.<\/li>\n     * <\/ul>\n     *\n     * @param name Name of the resource to return a URL for\n     */\n    @Override\n    public URL getResource(String name) {\n\n        if (log.isDebugEnabled())\n            log.debug(\"getResource(\" + name + \")\");\n\n        checkStateForResourceLoading(name);\n\n        URL url = null;\n\n        // (1) Delegate to parent if requested\n        if (delegate) {\n            if (log.isDebugEnabled())\n                log.debug(\"  Delegating to parent classloader \" + parent);\n            url = parent.getResource(name);\n            if (url != null) {\n                if (log.isDebugEnabled())\n                    log.debug(\"  --> Returning '\" + url.toString() + \"'\");\n                return (url);\n            }\n        }\n\n        // (2) Search local repositories\n        url = findResource(name);\n        if (url != null) {\n            if (log.isDebugEnabled())\n                log.debug(\"  --> Returning '\" + url.toString() + \"'\");\n            return (url);\n        }\n\n        // (3) Delegate to parent unconditionally if not already attempted\n        if( !delegate ) {\n            url = parent.getResource(name);\n            if (url != null) {\n                if (log.isDebugEnabled())\n                    log.debug(\"  --> Returning '\" + url.toString() + \"'\");\n                return (url);\n            }\n        }\n\n        // (4) Resource was not found\n        if (log.isDebugEnabled())\n            log.debug(\"  --> Resource not found, returning null\");\n        return (null);\n\n    }","commit_id":"0566905c784f81451c05ff5a68c70163b3339007","url":"https://github.com/apache/tomcat"},{"original_method":"protected void checkStateForClassLoading(String className) throws ClassNotFoundException {\n        // It is not permitted to load new classes once the web application has\n        // been stopped.\n        if (!state.isAvailable()) {\n            String msg = sm.getString(\"webappClassLoader.stopped\", className);\n            IllegalStateException cause = new IllegalStateException(msg);\n            ClassNotFoundException cnfe = new ClassNotFoundException();\n            cnfe.initCause(cause);\n            log.info(msg, cnfe);\n            throw cnfe;\n        }\n    }","id":61854,"modified_method":"protected void checkStateForClassLoading(String className) throws ClassNotFoundException {\n        // It is not permitted to load new classes once the web application has\n        // been stopped.\n        try {\n            checkStateForResourceLoading(className);\n        } catch (IllegalStateException ise) {\n            ClassNotFoundException cnfe = new ClassNotFoundException();\n            cnfe.initCause(ise);\n            throw cnfe;\n        }\n    }","commit_id":"0566905c784f81451c05ff5a68c70163b3339007","url":"https://github.com/apache/tomcat"},{"original_method":"/**\n     * Return an enumeration of <code>URLs<\/code> representing all of the\n     * resources with the given name.  If no resources with this name are\n     * found, return an empty enumeration.\n     *\n     * @param name Name of the resources to be found\n     *\n     * @exception IOException if an input/output error occurs\n     */\n    @Override\n    public Enumeration<URL> findResources(String name) throws IOException {\n\n        if (log.isDebugEnabled())\n            log.debug(\"    findResources(\" + name + \")\");\n\n        LinkedHashSet<URL> result = new LinkedHashSet<>();\n\n        String path = nameToPath(name);\n\n        WebResource[] webResources = resources.getClassLoaderResources(path);\n        for (WebResource webResource : webResources) {\n            if (webResource.exists()) {\n                result.add(webResource.getURL());\n            }\n        }\n\n        // Adding the results of a call to the superclass\n        if (hasExternalRepositories) {\n            Enumeration<URL> otherResourcePaths = super.findResources(name);\n            while (otherResourcePaths.hasMoreElements()) {\n                result.add(otherResourcePaths.nextElement());\n            }\n        }\n\n        return Collections.enumeration(result);\n    }","id":61855,"modified_method":"/**\n     * Return an enumeration of <code>URLs<\/code> representing all of the\n     * resources with the given name.  If no resources with this name are\n     * found, return an empty enumeration.\n     *\n     * @param name Name of the resources to be found\n     *\n     * @exception IOException if an input/output error occurs\n     */\n    @Override\n    public Enumeration<URL> findResources(String name) throws IOException {\n\n        if (log.isDebugEnabled())\n            log.debug(\"    findResources(\" + name + \")\");\n\n        checkStateForResourceLoading(name);\n\n        LinkedHashSet<URL> result = new LinkedHashSet<>();\n\n        String path = nameToPath(name);\n\n        WebResource[] webResources = resources.getClassLoaderResources(path);\n        for (WebResource webResource : webResources) {\n            if (webResource.exists()) {\n                result.add(webResource.getURL());\n            }\n        }\n\n        // Adding the results of a call to the superclass\n        if (hasExternalRepositories) {\n            Enumeration<URL> otherResourcePaths = super.findResources(name);\n            while (otherResourcePaths.hasMoreElements()) {\n                result.add(otherResourcePaths.nextElement());\n            }\n        }\n\n        return Collections.enumeration(result);\n    }","commit_id":"0566905c784f81451c05ff5a68c70163b3339007","url":"https://github.com/apache/tomcat"},{"original_method":"@Override\n\tprotected Object unmarshalDomNode(Node node) throws XmlMappingException {\n\t\tHierarchicalStreamReader streamReader;\n\t\tif (node instanceof Document) {\n\t\t\tstreamReader = new DomReader((Document) node);\n\t\t}\n\t\telse if (node instanceof Element) {\n\t\t\tstreamReader = new DomReader((Element) node);\n\t\t}\n\t\telse {\n\t\t\tthrow new IllegalArgumentException(\"DOMSource contains neither Document nor Element\");\n\t\t}\n\t\treturn unmarshal(streamReader);\n\t}","id":61856,"modified_method":"@Override\n\tprotected Object unmarshalDomNode(Node node) throws XmlMappingException {\n\t\ttry {\n\t\t\tHierarchicalStreamReader streamReader;\n\t\t\tif (node instanceof Document) {\n\t\t\t\tstreamReader = new DomReader((Document) node);\n\t\t\t}\n\t\t\telse if (node instanceof Element) {\n\t\t\t\tstreamReader = new DomReader((Element) node);\n\t\t\t}\n\t\t\telse {\n\t\t\tthrow new IllegalArgumentException(\"DOMSource contains neither Document nor Element\");\n\t\t\t}\n\t\t\treturn getXStream().unmarshal(streamReader);\n\t\t}\n\t\tcatch (Exception ex) {\n\t\t\tthrow convertXStreamException(ex, false);\n\t\t}\n\t}","commit_id":"4c29ad76e012c5157b5dfcc9bf63715e1c019086","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n\tprotected Object unmarshalReader(Reader reader) throws XmlMappingException, IOException {\n\t\tif (streamDriver != null) {\n\t\t\treturn unmarshal(streamDriver.createReader(reader));\n\t\t}\n\t\telse {\n\t\t\treturn unmarshal(new XppReader(reader));\n\t\t}\n\t}","id":61857,"modified_method":"@Override\n\tprotected Object unmarshalReader(Reader reader) throws XmlMappingException, IOException {\n\t\ttry {\n\t\t\tHierarchicalStreamReader streamReader;\n\t\t\tif (streamDriver != null) {\n\t\t\t\tstreamReader = streamDriver.createReader(reader);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tstreamReader = new XppReader(reader);\n\t\t\t}\n\t\t\treturn getXStream().unmarshal(streamReader);\n\t\t}\n\t\tcatch (Exception ex) {\n\t\t\tthrow convertXStreamException(ex, false);\n\t\t}\n\t}","commit_id":"4c29ad76e012c5157b5dfcc9bf63715e1c019086","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n\tprotected Object unmarshalXmlStreamReader(XMLStreamReader streamReader) throws XmlMappingException {\n\t\treturn unmarshal(new StaxReader(new QNameMap(), streamReader));\n\t}","id":61858,"modified_method":"@Override\n\tprotected Object unmarshalXmlStreamReader(XMLStreamReader streamReader) throws XmlMappingException {\n\t\ttry {\n\t\t\tHierarchicalStreamReader hierarchicalStreamReader =\n\t\t\t\t\tnew StaxReader(new QNameMap(),streamReader);\n\t\t\treturn getXStream().unmarshal(hierarchicalStreamReader);\n\t\t}\n\t\tcatch (Exception ex) {\n\t\t\tthrow convertXStreamException(ex, false);\n\t\t}\n\t}","commit_id":"4c29ad76e012c5157b5dfcc9bf63715e1c019086","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n\tprotected Object unmarshalInputStream(InputStream inputStream) throws XmlMappingException, IOException {\n\t\treturn unmarshalReader(new InputStreamReader(inputStream, this.encoding));\n\t}","id":61859,"modified_method":"@Override\n\tprotected Object unmarshalInputStream(InputStream inputStream) throws XmlMappingException, IOException {\n        if (this.streamDriver != null) {\n            return unmarshal(this.streamDriver.createReader(inputStream));\n        }\n        else {\n\t\t    return unmarshalReader(new InputStreamReader(inputStream, this.encoding));\n        }\n\t}","commit_id":"7187a2435e66d11298048eba63a15cc5ddf5a505","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n\tprotected Object unmarshalXmlStreamReader(XMLStreamReader streamReader) throws XmlMappingException {\n\t\ttry {\n\t\t\tHierarchicalStreamReader hierarchicalStreamReader =\n\t\t\t\t\tnew StaxReader(new QNameMap(),streamReader);\n\t\t\treturn getXStream().unmarshal(hierarchicalStreamReader);\n\t\t}\n\t\tcatch (Exception ex) {\n\t\t\tthrow convertXStreamException(ex, false);\n\t\t}\n\t}","id":61860,"modified_method":"@Override\n\tprotected Object unmarshalXmlStreamReader(XMLStreamReader streamReader) throws XmlMappingException {\n        return unmarshal(new StaxReader(new QNameMap(), streamReader));\n\t}","commit_id":"7187a2435e66d11298048eba63a15cc5ddf5a505","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n\tprotected Object unmarshalReader(Reader reader) throws XmlMappingException, IOException {\n\t\ttry {\n\t\t\tHierarchicalStreamReader streamReader;\n\t\t\tif (this.streamDriver != null) {\n\t\t\t\tstreamReader = this.streamDriver.createReader(reader);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tstreamReader = new XppReader(reader);\n\t\t\t}\n\t\t\treturn getXStream().unmarshal(streamReader);\n\t\t}\n\t\tcatch (Exception ex) {\n\t\t\tthrow convertXStreamException(ex, false);\n\t\t}\n\t}","id":61861,"modified_method":"@Override\n\tprotected Object unmarshalReader(Reader reader) throws XmlMappingException, IOException {\n        if (this.streamDriver != null) {\n            return unmarshal(this.streamDriver.createReader(reader));\n        }\n        else {\n            return unmarshal(new XppReader(reader));\n        }\n\t}","commit_id":"7187a2435e66d11298048eba63a15cc5ddf5a505","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n\tprotected void marshalOutputStream(Object graph, OutputStream outputStream) throws XmlMappingException, IOException {\n\t\tmarshalWriter(graph, new OutputStreamWriter(outputStream, this.encoding));\n\t}","id":61862,"modified_method":"@Override\n\tprotected void marshalOutputStream(Object graph, OutputStream outputStream) throws XmlMappingException, IOException {\n        if (this.streamDriver != null) {\n            marshal(graph, this.streamDriver.createWriter(outputStream));\n        }\n        else {\n\t\t    marshalWriter(graph, new OutputStreamWriter(outputStream, this.encoding));\n        }\n\t}","commit_id":"7187a2435e66d11298048eba63a15cc5ddf5a505","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n\tprotected Object unmarshalDomNode(Node node) throws XmlMappingException {\n\t\tHierarchicalStreamReader streamReader;\n\t\tif (node instanceof Document) {\n\t\t\tstreamReader = new DomReader((Document) node);\n\t\t}\n\t\telse if (node instanceof Element) {\n\t\t\tstreamReader = new DomReader((Element) node);\n\t\t}\n\t\telse {\n\t\t\tthrow new IllegalArgumentException(\"DOMSource contains neither Document nor Element\");\n\t\t}\n\t\ttry {\n\t\t\treturn getXStream().unmarshal(streamReader);\n\t\t}\n\t\tcatch (Exception ex) {\n\t\t\tthrow convertXStreamException(ex, false);\n\t\t}\n\t}","id":61863,"modified_method":"@Override\n\tprotected Object unmarshalDomNode(Node node) throws XmlMappingException {\n\t\tHierarchicalStreamReader streamReader;\n\t\tif (node instanceof Document) {\n\t\t\tstreamReader = new DomReader((Document) node);\n\t\t}\n\t\telse if (node instanceof Element) {\n\t\t\tstreamReader = new DomReader((Element) node);\n\t\t}\n\t\telse {\n\t\t\tthrow new IllegalArgumentException(\"DOMSource contains neither Document nor Element\");\n\t\t}\n        return unmarshal(streamReader);\n\t}","commit_id":"7187a2435e66d11298048eba63a15cc5ddf5a505","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"private void refreshReaders(){\n        indexSearcher = new IndexSearcher(createReader());\n        log.debug(\"Refreshed reader for index [{}]\", definition);\n    }","id":61864,"modified_method":"private void refreshReaders(){\n        List<LuceneIndexReader> newNRTReaders = getNRTReaders();\n        //The list reference would differ if index got updated\n        //so if they are same no need to reinitialize the searcher\n        if (newNRTReaders != nrtReaders) {\n            nrtReaders = newNRTReaders;\n            indexSearcher = new IndexSearcher(createReader(nrtReaders));\n            log.debug(\"Refreshed reader for index [{}]\", definition);\n        }\n    }","commit_id":"08cd7166cc28519e2a153a5b131364aee0811f14","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"IndexNode(String name, IndexDefinition definition, List<LuceneIndexReader> readers, @Nullable NRTIndex nrtIndex)\n            throws IOException {\n        checkArgument(!readers.isEmpty());\n        this.name = name;\n        this.definition = definition;\n        this.readers = readers;\n        this.nrtIndex = nrtIndex;\n        this.indexSearcher = new IndexSearcher(createReader());\n        this.refreshPolicy = nrtIndex != null ? nrtIndex.getRefreshPolicy() : ReaderRefreshPolicy.NEVER;\n    }","id":61865,"modified_method":"IndexNode(String name, IndexDefinition definition, List<LuceneIndexReader> readers, @Nullable NRTIndex nrtIndex)\n            throws IOException {\n        checkArgument(!readers.isEmpty());\n        this.name = name;\n        this.definition = definition;\n        this.readers = readers;\n        this.nrtIndex = nrtIndex;\n        this.nrtReaders = getNRTReaders();\n        this.indexSearcher = new IndexSearcher(createReader(nrtReaders));\n        this.refreshPolicy = nrtIndex != null ? nrtIndex.getRefreshPolicy() : ReaderRefreshPolicy.NEVER;\n    }","commit_id":"08cd7166cc28519e2a153a5b131364aee0811f14","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"public NRTReader(IndexReader indexReader) {\n            this.indexReader = indexReader;\n        }","id":61866,"modified_method":"public NRTReader(IndexReader indexReader) {\n            this.indexReader = checkNotNull(indexReader);\n        }","commit_id":"08cd7166cc28519e2a153a5b131364aee0811f14","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"@CheckForNull\n    LuceneIndexReader getPrimaryReader() {\n        return createReader();\n    }","id":61867,"modified_method":"@CheckForNull\n    LuceneIndexReader getPrimaryReader() {\n        DirectoryReader reader = createReader();\n        return reader != null ? new NRTReader(reader) : null;\n    }","commit_id":"08cd7166cc28519e2a153a5b131364aee0811f14","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"public NRTIndex(IndexDefinition definition, IndexCopier indexCopier,\n                    TimedRefreshPolicy refreshPolicy, @Nullable NRTIndex previous) {\n        this.definition = definition;\n        this.indexCopier = indexCopier;\n        this.refreshPolicy = refreshPolicy;\n        this.previousReader = previous != null ? previous.getPrimaryReader() : null;\n    }","id":61868,"modified_method":"public NRTIndex(IndexDefinition definition, IndexCopier indexCopier,\n                    IndexUpdateListener refreshPolicy, @Nullable NRTIndex previous) {\n        this.definition = definition;\n        this.indexCopier = indexCopier;\n        this.refreshPolicy = refreshPolicy;\n        this.previousReader = previous != null ? previous.getPrimaryReader() : null;\n    }","commit_id":"08cd7166cc28519e2a153a5b131364aee0811f14","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"@CheckForNull\n    private LuceneIndexReader createReader() {\n        checkState(!closed);\n        //Its possible that readers are obtained\n        //before anything gets indexed\n        if (indexWriter == null) {\n            return null;\n        }\n        try {\n            //applyDeletes is false as layers above would take care of\n            //stale result\n            return new NRTReader(DirectoryReader.open(indexWriter, false));\n        } catch (IOException e) {\n            log.warn(\"Error opening index [{}]\", e);\n        }\n        return null;\n    }","id":61869,"modified_method":"/**\n     * If index was updated then a new reader would be returned otherwise\n     * existing reader would be returned\n     */\n    @CheckForNull\n    private synchronized DirectoryReader createReader() {\n        checkState(!closed);\n        //Its possible that readers are obtained\n        //before anything gets indexed\n        if (indexWriter == null) {\n            return null;\n        }\n        DirectoryReader result = dirReader;\n        try {\n            //applyDeletes is false as layers above would take care of\n            //stale result\n            if (dirReader == null) {\n                result = DirectoryReader.open(indexWriter, false);\n            } else {\n                DirectoryReader newReader = DirectoryReader.openIfChanged(dirReader, indexWriter, false);\n                if (newReader != null) {\n                    result = newReader;\n                }\n            }\n            return result;\n        } catch (IOException e) {\n            log.warn(\"Error opening index [{}]\", e);\n        }\n        return null;\n    }","commit_id":"08cd7166cc28519e2a153a5b131364aee0811f14","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"public List<LuceneIndexReader> getReaders() {\n        checkState(!closed);\n        List<LuceneIndexReader> readers = Lists.newArrayListWithCapacity(2);\n        LuceneIndexReader latestReader = createReader();\n        if (latestReader != null) {\n            readers.add(latestReader);\n        }\n\n        //Old reader should be added later\n        if (previousReader != null) {\n            readers.add(previousReader);\n        }\n        return readers;\n    }","id":61870,"modified_method":"/**\n     * Returns the list of LuceneIndexReader. If the writer has not received\n     * any updates between 2 calls to this method then same list would be\n     * returned.\n     */\n    public synchronized List<LuceneIndexReader> getReaders() {\n        checkState(!closed);\n        DirectoryReader latestReader = createReader();\n        //reader not changed i.e. no change in index\n        //reuse old readers\n        if (latestReader == dirReader && readers != null){\n            return readers;\n        }\n        List<LuceneIndexReader> newReaders = Lists.newArrayListWithCapacity(2);\n        if (latestReader != null) {\n            newReaders.add(new NRTReader(latestReader));\n        }\n\n        //Old reader should be added later\n        if (previousReader != null) {\n            newReaders.add(previousReader);\n        }\n        dirReader = latestReader;\n        readers = ImmutableList.copyOf(newReaders);\n        return readers;\n    }","commit_id":"08cd7166cc28519e2a153a5b131364aee0811f14","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"private TimedRefreshPolicy getRefreshPolicy(IndexDefinition definition) {\n        return new TimedRefreshPolicy(definition.isSyncIndexingEnabled(), clock, TimeUnit.SECONDS, refreshDeltaInSecs);\n    }","id":61871,"modified_method":"private IndexUpdateListener getRefreshPolicy(IndexDefinition definition) {\n        if (definition.isSyncIndexingEnabled()){\n            return new RefreshOnWritePolicy();\n            //return new RefreshOnReadPolicy(clock, TimeUnit.SECONDS, refreshDeltaInSecs);\n        }\n        return new TimedRefreshPolicy(clock, TimeUnit.SECONDS, refreshDeltaInSecs);\n    }","commit_id":"08cd7166cc28519e2a153a5b131364aee0811f14","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"@Override\n    public void refreshOnReadIfRequired(Runnable refreshCallback) {\n        if (syncIndexingMode) {\n            //As writer itself refreshes the index. No refresh done\n            //on read\n            return;\n        }\n        refreshIfRequired(refreshCallback);\n    }","id":61872,"modified_method":"@Override\n    public void refreshOnReadIfRequired(Runnable refreshCallback) {\n        refreshIfRequired(refreshCallback);\n    }","commit_id":"08cd7166cc28519e2a153a5b131364aee0811f14","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"public TimedRefreshPolicy(boolean syncIndexingMode, Clock clock, TimeUnit unit, long refreshDelta) {\n        this.syncIndexingMode = syncIndexingMode;\n        this.clock = clock;\n        this.refreshDelta = unit.toMillis(refreshDelta);\n    }","id":61873,"modified_method":"public TimedRefreshPolicy(Clock clock, TimeUnit unit, long refreshDelta) {\n        this.clock = clock;\n        this.refreshDelta = unit.toMillis(refreshDelta);\n    }","commit_id":"08cd7166cc28519e2a153a5b131364aee0811f14","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"@Override\n    public void refreshOnWriteIfRequired(Runnable refreshCallback) {\n        if (syncIndexingMode) {\n            //For sync indexing mode we refresh the reader immediately\n            //on the writer thread. So that any read call later sees upto date index\n\n            //Another possibility is to refresh the readers upon first query post index update\n            //but that would mean that if multiple queries get invoked simultaneously then\n            //others would get blocked. So here we take hit on write side. If that proves to\n            //be problematic query side refresh can be looked into\n            if (dirty.get()) {\n                refreshCallback.run();\n                dirty.set(false);\n            }\n        } else {\n            refreshIfRequired(refreshCallback);\n        }\n    }","id":61874,"modified_method":"@Override\n    public void refreshOnWriteIfRequired(Runnable refreshCallback) {\n        refreshIfRequired(refreshCallback);\n    }","commit_id":"08cd7166cc28519e2a153a5b131364aee0811f14","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"@Test\n    public void dirtyAndFirstCheck() throws Exception{\n        clock.waitUntil(System.currentTimeMillis());\n        TimedRefreshPolicy policy = new TimedRefreshPolicy(false, clock, TimeUnit.SECONDS, 1);\n        policy.refreshOnWriteIfRequired(refreshCallback);\n        refreshCallback.assertNotInvokedAndRest();\n\n        policy.updated();\n\n        policy.refreshOnWriteIfRequired(refreshCallback);\n        refreshCallback.assertInvokedAndReset();\n\n        policy.refreshOnWriteIfRequired(refreshCallback);\n        refreshCallback.assertNotInvokedAndRest();\n    }","id":61875,"modified_method":"@Test\n    public void dirtyAndFirstCheck() throws Exception{\n        clock.waitUntil(System.currentTimeMillis());\n        TimedRefreshPolicy policy = new TimedRefreshPolicy(clock, TimeUnit.SECONDS, 1);\n        policy.refreshOnWriteIfRequired(refreshCallback);\n        refreshCallback.assertNotInvokedAndReset();\n\n        policy.updated();\n\n        policy.refreshOnWriteIfRequired(refreshCallback);\n        refreshCallback.assertInvokedAndReset();\n\n        policy.refreshOnWriteIfRequired(refreshCallback);\n        refreshCallback.assertNotInvokedAndReset();\n    }","commit_id":"08cd7166cc28519e2a153a5b131364aee0811f14","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"@Test\n    public void dirtyAndElapsedTime() throws Exception{\n        clock.waitUntil(System.currentTimeMillis());\n        TimedRefreshPolicy policy = new TimedRefreshPolicy(false, clock, TimeUnit.SECONDS, 1);\n\n        policy.updated();\n        policy.refreshOnWriteIfRequired(refreshCallback);\n        refreshCallback.assertInvokedAndReset();\n\n        policy.refreshOnWriteIfRequired(refreshCallback);\n        refreshCallback.assertNotInvokedAndRest();\n\n        policy.updated();\n        //Given time has not elapsed it should still be false\n        //in both reader and writer mode\n        policy.refreshOnWriteIfRequired(refreshCallback);\n        refreshCallback.assertNotInvokedAndRest();\n\n        policy.refreshOnWriteIfRequired(refreshCallback);\n        refreshCallback.assertNotInvokedAndRest();\n\n        //Let the refresh delta time elapse\n        long refreshDelta = TimeUnit.SECONDS.toMillis(1) + 1;\n        clock.waitUntil(System.currentTimeMillis() + refreshDelta);\n\n        policy.refreshOnWriteIfRequired(refreshCallback);\n        refreshCallback.assertInvokedAndReset();\n\n        policy.refreshOnWriteIfRequired(refreshCallback);\n        refreshCallback.assertNotInvokedAndRest();\n\n        policy.updated();\n        //Do similar check for read\n        clock.waitUntil(clock.getTime() + refreshDelta);\n\n        policy.refreshOnReadIfRequired(refreshCallback);\n        refreshCallback.assertInvokedAndReset();\n\n        policy.refreshOnReadIfRequired(refreshCallback);\n        refreshCallback.assertNotInvokedAndRest();\n    }","id":61876,"modified_method":"@Test\n    public void dirtyAndElapsedTime() throws Exception{\n        clock.waitUntil(System.currentTimeMillis());\n        TimedRefreshPolicy policy = new TimedRefreshPolicy(clock, TimeUnit.SECONDS, 1);\n\n        policy.updated();\n        policy.refreshOnWriteIfRequired(refreshCallback);\n        refreshCallback.assertInvokedAndReset();\n\n        policy.refreshOnWriteIfRequired(refreshCallback);\n        refreshCallback.assertNotInvokedAndReset();\n\n        policy.updated();\n        //Given time has not elapsed it should still be false\n        //in both reader and writer mode\n        policy.refreshOnWriteIfRequired(refreshCallback);\n        refreshCallback.assertNotInvokedAndReset();\n\n        policy.refreshOnWriteIfRequired(refreshCallback);\n        refreshCallback.assertNotInvokedAndReset();\n\n        //Let the refresh delta time elapse\n        long refreshDelta = TimeUnit.SECONDS.toMillis(1) + 1;\n        clock.waitUntil(System.currentTimeMillis() + refreshDelta);\n\n        policy.refreshOnWriteIfRequired(refreshCallback);\n        refreshCallback.assertInvokedAndReset();\n\n        policy.refreshOnWriteIfRequired(refreshCallback);\n        refreshCallback.assertNotInvokedAndReset();\n\n        policy.updated();\n        //Do similar check for read\n        clock.waitUntil(clock.getTime() + refreshDelta);\n\n        policy.refreshOnReadIfRequired(refreshCallback);\n        refreshCallback.assertInvokedAndReset();\n\n        policy.refreshOnReadIfRequired(refreshCallback);\n        refreshCallback.assertNotInvokedAndReset();\n    }","commit_id":"08cd7166cc28519e2a153a5b131364aee0811f14","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"@Test\n    public void dirtyAndNotElapsedTimed() throws Exception{\n        clock.waitUntil(System.currentTimeMillis());\n        TimedRefreshPolicy policy = new TimedRefreshPolicy(false, clock, TimeUnit.SECONDS, 1);\n\n        policy.updated();\n        policy.refreshOnWriteIfRequired(refreshCallback);\n        refreshCallback.assertInvokedAndReset();\n\n        policy.refreshOnWriteIfRequired(refreshCallback);\n        refreshCallback.assertNotInvokedAndRest();\n\n        policy.updated();\n        //Given time has not elapsed it should still be false\n        policy.refreshOnWriteIfRequired(refreshCallback);\n        refreshCallback.assertNotInvokedAndRest();\n    }","id":61877,"modified_method":"@Test\n    public void dirtyAndNotElapsedTimed() throws Exception{\n        clock.waitUntil(System.currentTimeMillis());\n        TimedRefreshPolicy policy = new TimedRefreshPolicy(clock, TimeUnit.SECONDS, 1);\n\n        policy.updated();\n        policy.refreshOnWriteIfRequired(refreshCallback);\n        refreshCallback.assertInvokedAndReset();\n\n        policy.refreshOnWriteIfRequired(refreshCallback);\n        refreshCallback.assertNotInvokedAndReset();\n\n        policy.updated();\n        //Given time has not elapsed it should still be false\n        policy.refreshOnWriteIfRequired(refreshCallback);\n        refreshCallback.assertNotInvokedAndReset();\n    }","commit_id":"08cd7166cc28519e2a153a5b131364aee0811f14","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"private static LWMap unmarshallMap(final java.net.URL url, Mapping mapping, String charsetEncoding, boolean allowOldFormat, String savingVersion)\n        throws java.io.IOException\n    {\n        LWMap map = null;\n\n        if (DEBUG.CASTOR || DEBUG.IO) System.out.println(\"UNMARSHALLING: \" + url + \" charset=\" + charsetEncoding);\n        \n        BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream(), charsetEncoding));\n\n        // Skip over comments to get to start of XML\n\n        for (;;) {\n            reader.mark(2048); // a single comment line can't be longer than this...\n            String line = reader.readLine();\n            if (line == null) {\n                System.err.println(\"Unexpected end-of-stream in [\" + url + \"]\");\n                throw new java.io.IOException(\"end of stream in \" + url);\n            }\n            if (line.startsWith(\"<!--\") == false) {\n                // we should have just hit thie \"<?xml ...\" line -- done with comments\n                break;\n            }\n            if (DEBUG.CASTOR || DEBUG.IO) System.out.println(\"Skipping[\" + line + \"]\");\n        }\n\n        // Reset the reader to the start of the last line read, which should be the <?xml line,\n        // which is what castor needs to see at start (it can't handle ignoring comments...)\n        reader.reset();\n\n        final String sourceName = url.toString();\n\n        try {\n            Unmarshaller unmarshaller = getDefaultUnmarshaller(mapping, sourceName);\n\n            // unmarshall the map:\n            \n            try {\n                map = (LWMap) unmarshaller.unmarshal(new InputSource(reader));\n            } catch (org.exolab.castor.xml.MarshalException me) {\n                if (allowOldFormat && me.getMessage().endsWith(\"tufts.vue.Resource\")) {\n                    System.err.println(\"ActionUtil.unmarshallMap: \" + me);\n                    System.err.println(\"Attempting specialized MapResource mapping for old format.\");\n                    // NOTE: delicate recursion here: won't loop as long as we pass in a non-null mapping.\n                    return unmarshallMap(url, getMapping(XML_MAPPING_OLD_RESOURCES), charsetEncoding, false, savingVersion);\n                } else\n                    throw me;\n            }\n            \n            reader.close();\n\n            final File file = new File(url.getFile());\n            final String fileName = file.getName();\n            \n            if (map.getModelVersion() > LWMap.CurrentModelVersion) {\n                VueUtil.alert(String.format(\"The file %s was saved in a newer version of VUE than is currently running.\\n\"\n                                            + \"\\nThe data model in this file is #%d, and this version of VUE only understands up to model #%d.\\n\",\n                                            file, map.getModelVersion(), LWMap.CurrentModelVersion)\n                              + \"\\nVersion of VUE that saved this file:\\n        \" + savingVersion\n                              + \"\\nCurrent running version of VUE:\\n        \" + \"VUE: built \" + tufts.vue.Version.AllInfo\n                                + \" (public v\" + VueResources.getString(\"vue.version\") + \")\"\n                              + \"\\n\"\n                              + \"\\nThis version of VUE may not display this map properly.  Saving\"\n                              + \"\\nthis map in this version of VUE may result in a corrupted map.\"\n                              ,\n                              String.format(\"Version Warning: %s\", fileName));\n\n                map.setLabel(fileName + \" (as available)\");\n                // Skip setting the file: this will force save-as if they try to save.\n            } else {\n                // This setFile also sets the label name, so it appears as a modification in the map.\n                // So be sure to do completeXMLRestore last, as it will reset the modification count.\n                map.setFile(file);\n            }\n\n            map.completeXMLRestore();\n        }\n        catch (Exception e) \n        {\n            System.err.println(\"ActionUtil.unmarshallMap: url=\" + url);\n            System.err.println(\"\\texception: \" + e.getClass());\n            System.err.println(\"\\tcause: \" + e.getCause());\n            System.err.println(\"\\t\" + e);\n            //System.err.println(\"\\tmessage=\" + e.getLocalizedMessage());\n            e.printStackTrace();\n            map = null;\n        }\n        \n        return map;\n    }","id":61878,"modified_method":"private static LWMap unmarshallMap(final java.net.URL url, Mapping mapping, String charsetEncoding, boolean allowOldFormat, String savingVersion)\n      //throws IOException, org.exolab.castor.mapping.MappingException, org.exolab.castor.xml.ValidationException\n        throws IOException\n    {\n        LWMap map = null;\n\n        if (DEBUG.CASTOR || DEBUG.IO) System.out.println(\"UNMARSHALLING: \" + url + \" charset=\" + charsetEncoding);\n        \n        BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream(), charsetEncoding));\n\n        // Skip over comments to get to start of XML\n\n        for (;;) {\n            reader.mark(2048); // a single comment line can't be longer than this...\n            String line = reader.readLine();\n            if (line == null) {\n                System.err.println(\"Unexpected end-of-stream in [\" + url + \"]\");\n                throw new java.io.IOException(\"end of stream in \" + url);\n            }\n            if (line.startsWith(\"<!--\") == false) {\n                // we should have just hit thie \"<?xml ...\" line -- done with comments\n                break;\n            }\n            if (DEBUG.CASTOR || DEBUG.IO) System.out.println(\"Skipping[\" + line + \"]\");\n        }\n\n        // Reset the reader to the start of the last line read, which should be the <?xml line,\n        // which is what castor needs to see at start (it can't handle ignoring comments...)\n        reader.reset();\n\n        final String sourceName = url.toString();\n\n        try {\n            Unmarshaller unmarshaller = getDefaultUnmarshaller(mapping, sourceName);\n\n            // unmarshall the map:\n            \n            try {\n                map = (LWMap) unmarshaller.unmarshal(new InputSource(reader));\n            } catch (org.exolab.castor.xml.MarshalException me) {\n                if (allowOldFormat && me.getMessage().endsWith(\"tufts.vue.Resource\")) {\n                    System.err.println(\"ActionUtil.unmarshallMap: \" + me);\n                    System.err.println(\"Attempting specialized MapResource mapping for old format.\");\n                    // NOTE: delicate recursion here: won't loop as long as we pass in a non-null mapping.\n                    return unmarshallMap(url, getMapping(XML_MAPPING_OLD_RESOURCES), charsetEncoding, false, savingVersion);\n                } else\n                    throw me;\n            }\n            \n            reader.close();\n\n            final File file = new File(url.getFile());\n            final String fileName = file.getName();\n            \n            if (map.getModelVersion() > LWMap.CurrentModelVersion) {\n                VueUtil.alert(String.format(\"The file %s was saved in a newer version of VUE than is currently running.\\n\"\n                                            + \"\\nThe data model in this file is #%d, and this version of VUE only understands up to model #%d.\\n\",\n                                            file, map.getModelVersion(), LWMap.CurrentModelVersion)\n                              + \"\\nVersion of VUE that saved this file:\\n        \" + savingVersion\n                              + \"\\nCurrent running version of VUE:\\n        \" + \"VUE: built \" + tufts.vue.Version.AllInfo\n                                + \" (public v\" + VueResources.getString(\"vue.version\") + \")\"\n                              + \"\\n\"\n                              + \"\\nThis version of VUE may not display this map properly.  Saving\"\n                              + \"\\nthis map in this version of VUE may result in a corrupted map.\"\n                              ,\n                              String.format(\"Version Warning: %s\", fileName));\n\n                map.setLabel(fileName + \" (as available)\");\n                // Skip setting the file: this will force save-as if they try to save.\n            } else {\n                // This setFile also sets the label name, so it appears as a modification in the map.\n                // So be sure to do completeXMLRestore last, as it will reset the modification count.\n                map.setFile(file);\n            }\n\n            map.completeXMLRestore();\n        }\n        catch (Exception e) {\n            tufts.Util.printStackTrace(e, \"Exception restoring map from [\" + url + \"]: \" + e.getClass().getName());\n            map = null;\n            throw new Error(\"Exception restoring map from [\" + url + \"]\", e);\n        }\n        \n        return map;\n    }","commit_id":"149a9c4b272d064bf157509b3270be8beab649dc","url":"https://github.com/VUE/VUE"},{"original_method":"/**\n     * If we already have open a map tied to the given file, display it.\n     * Otherwise, open it anew and display it.\n     */\n    public static void displayMap(File file) {\n        if (DEBUG.INIT || DEBUG.IO) out(\"displayMap \" + file);\n\n        if (file == null)\n            return;\n\n        for (int i = 0; i < mMapTabsLeft.getTabCount(); i++) {\n            LWMap map = mMapTabsLeft.getMapAt(i);\n            if (map == null)\n                continue;\n            File existingFile = map.getFile();\n            if (existingFile != null && existingFile.equals(file)) {\n                if (DEBUG.Enabled) out(\"displayMap found existing open map \" + map + \" matching file \" + file);\n                if (isActiveViewerOnLeft())\n                    mMapTabsLeft.setSelectedIndex(i);\n                else\n                    mMapTabsRight.setSelectedIndex(i);\n                return;\n            }\n        }\n        \n//         for (LWMap map : ActiveMapHandler.getAllInstances()) {\n//             File existingFile = map.getFile();\n//             if (existingFile != null && existingFile.equals(file)) {\n//                 if (DEBUG.Enabled) out(\"displayMap found existing open map \" + map + \" matching file \" + file);\n//                 ActiveMapHandler.setActive(file, map);\n//                 // TODO: sanity check this... (oh, and I supposed we can use the tab panes again... don't need active instances tracking!)\n//                 //mMapTabsLeft.setSelectedIndex(i);\n//                 return;\n//             }\n//         }\n\n        final RecentlyOpenedFilesManager rofm = RecentlyOpenedFilesManager.getInstance();\n        rofm.updateRecentlyOpenedFiles(file.getAbsolutePath());\n        VUE.activateWaitCursor();\n        try {\n            LWMap loadedMap = OpenAction.loadMap(file.getAbsolutePath());\n            VUE.displayMap(loadedMap);\n        } finally {\n            VUE.clearWaitCursor();\n        }\n    }","id":61879,"modified_method":"/**\n     * If we already have open a map tied to the given file, display it.\n     * Otherwise, open it anew and display it.\n     */\n    public static void displayMap(File file) {\n        if (DEBUG.INIT || DEBUG.IO) out(\"displayMap \" + file);\n\n        if (file == null)\n            return;\n\n        for (int i = 0; i < mMapTabsLeft.getTabCount(); i++) {\n            LWMap map = mMapTabsLeft.getMapAt(i);\n            if (map == null)\n                continue;\n            File existingFile = map.getFile();\n            if (existingFile != null && existingFile.equals(file)) {\n                if (DEBUG.Enabled) out(\"displayMap found existing open map \" + map + \" matching file \" + file);\n                if (isActiveViewerOnLeft())\n                    mMapTabsLeft.setSelectedIndex(i);\n                else\n                    mMapTabsRight.setSelectedIndex(i);\n                return;\n            }\n        }\n        \n//         for (LWMap map : ActiveMapHandler.getAllInstances()) {\n//             File existingFile = map.getFile();\n//             if (existingFile != null && existingFile.equals(file)) {\n//                 if (DEBUG.Enabled) out(\"displayMap found existing open map \" + map + \" matching file \" + file);\n//                 ActiveMapHandler.setActive(file, map);\n//                 // TODO: sanity check this... (oh, and I supposed we can use the tab panes again... don't need active instances tracking!)\n//                 //mMapTabsLeft.setSelectedIndex(i);\n//                 return;\n//             }\n//         }\n\n        final RecentlyOpenedFilesManager rofm = RecentlyOpenedFilesManager.getInstance();\n        rofm.updateRecentlyOpenedFiles(file.getAbsolutePath());\n        VUE.activateWaitCursor();\n        LWMap loadedMap = null;\n        boolean alerted = false;\n        try {\n            loadedMap = OpenAction.loadMap(file.getAbsolutePath());\n            if (loadedMap != null)\n                VUE.displayMap(loadedMap);\n        } catch (Throwable t) {\n            VUE.clearWaitCursor();\n            alerted = true;\n            VueUtil.alert(\"Failed to load map: \" + file + \"  \\n\"\n                          + (t.getCause() == null ? t : t.getCause()),\n                          \"Map error: \" + file);\n        } finally {\n            VUE.clearWaitCursor();\n        }\n        if (loadedMap == null && !alerted)\n            VueUtil.alert(\"Failed to load map: \" + file + \"  \\n\", \"Map error: \" + file);\n        \n    }","commit_id":"149a9c4b272d064bf157509b3270be8beab649dc","url":"https://github.com/VUE/VUE"},{"original_method":"public void actionPerformed(ActionEvent e) {\n        synchronized (LOCK) {\n            if (openUnderway)\n                return;\n            openUnderway = true;\n        }\n        try {\n            VUE.activateWaitCursor();\n            VueFileChooser chooser = VueFileChooser.getVueFileChooser();\n            chooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);\n            int option = chooser.showOpenDialog(VUE.getDialogParent());\n            final File file =     chooser.getSelectedFile();\n            DatasetLoader dsl = new DatasetLoader();\n            Dataset ds = dsl.load(file);\n            LWMap loadedMap = ds.createMap();\n            VUE.displayMap(loadedMap);\n            VUE.clearWaitCursor();\n            System.out.println(\"Action[\"+e.getActionCommand()+\"] completed.\");\n        } catch(Exception ex) {\n            ex.printStackTrace();\n        } finally {\n            openUnderway = false;\n        }\n    }","id":61880,"modified_method":"public void actionPerformed(ActionEvent e) {\n        synchronized (LOCK) {\n            if (openUnderway)\n                return;\n            openUnderway = true;\n        }\n        try {\n            VUE.activateWaitCursor();\n            javax.swing.UIManager.put(\"FileChooser.openDialogTitleText\", VueResources.getString(\"FileChooser.openDatasetTitleText\"));   // wrong!!\n    \t\t\n            VueFileChooser chooser = VueFileChooser.getVueFileChooser();\n            chooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);\n             \n            int option = chooser.showOpenDialog(VUE.getDialogParent());\n            final File file =     chooser.getSelectedFile();\n            File picked = null;\n            picked = chooser.getSelectedFile();\n            if(picked!=null) {\n\t\t        DatasetLoader dsl = new DatasetLoader(); \n\t\t        Dataset ds = dsl.load(file);\n\t\t        LWMap loadedMap = ds.createMap();\n\t\t        VUE.displayMap(loadedMap);\n\t\t        javax.swing.UIManager.put(\"FileChooser.openDialogTitleText\", VueResources.getString(\"FileChooser.openDialogTitleText\"));   // wrong!!\n            }\n\t        VUE.clearWaitCursor();\n            System.out.println(\"Action[\"+e.getActionCommand()+\"] completed.\");\n        } catch(Exception ex) {\n            ex.printStackTrace();\n        } finally {\n            openUnderway = false;\n        }\n    }","commit_id":"abdf607262f01cbda6961c586a4b5c58804feddd","url":"https://github.com/VUE/VUE"},{"original_method":"private static void initApplication(String[] args)\n    {\n        /*\n        if (VUE.TUFTS)\n            Log.debug(\"TUFTS features only (no MIT/development)\");\n        else\n            Log.debug(\"MIT/development features enabled\");\n        */\n\n        final Window splashScreen;\n\n        if (SKIP_DR || SKIP_SPLASH) {\n            splashScreen = null;\n            DEBUG.Enabled = true;\n        } else\n            splashScreen = new SplashScreen();\n        \n        buildApplicationInterface();\n\n        if (splashScreen != null)\n            splashScreen.setVisible(false);\n\n        VUE.activateWaitCursor();\n\n        boolean gotMapFromCommandLine = false;\n\n        if (args.length > 0) {\n            try {\n                for (int i = 0; i < args.length; i++) {\n                    if (args[i] == null || args[i].length() < 1 || args[i].charAt(0) == '-')\n                        continue;\n                    LWMap map = OpenAction.loadMap(args[i]);\n                    if (map != null) {\n                        displayMap(map);\n                        gotMapFromCommandLine = true;\n                    }\n                }\n            } finally {\n                //VUE.clearWaitCursor();                \n            }\n        }\n        \n        if (SKIP_DR && gotMapFromCommandLine == false) {\n            //-------------------------------------------------------\n            // create example map(s)\n            //-------------------------------------------------------\n            //LWMap map1 = new LWMap(\"Map 1\");\n            LWMap map2 = new LWMap(\"Map 2\");\n            \n            //installExampleNodes(map1);\n            installExampleMap(map2);\n            \n            //map1.setFillColor(new Color(255, 255, 192));\n            \n            //displayMap(map1);\n            displayMap(map2);\n            //toolPanel.add(new JLabel(\"Empty Label\"), BorderLayout.CENTER);\n        }\n\n        if (DEBUG.INIT) out(\"map loaded\");\n        /*\n        if (drBrowser != null) {\n            drBrowser.loadDataSourceViewer();\n            //if (VUE.TUFTS) // leave collapsed if NarraVision\n            //splitPane.resetToPreferredSizes();\n        }\n        */\n\n        VUE.clearWaitCursor();\n        \n        Log.debug(\"loading disk cache...\");\n        Images.loadDiskCache();\n        Log.debug(\"loading disk cache: done\");\n\n        \n        Log.debug(\"loading fonts...\");\n        FontEditorPanel.getFontNames();\n        \n        if (SKIP_DR == false) {\n            Log.debug(\"caching tool panels...\");\n            NodeTool.getNodeToolPanel();\n            LinkTool.getLinkToolPanel();\n       }\n        \n        // Start the loading of the data source viewer\n        if (SKIP_DR == false && DR_BROWSER != null)\n            DR_BROWSER.loadDataSourceViewer();\n            /*\n            DR_BROWSER.loadDataSourceViewer(DR_BROWSER_DOCK,\n                                            searchDock,\n                                            browseDock,\n                                            savedResourcesDock,\n                                            previewDock);\n            */\n        \n        //Preferences p = Preferences.userNodeForPackage(VUE.class);\n        //p.put(\"DRBROWSER.RUN\", \"yes, it has\");\n\n        //if (VueUtil.isMacPlatform())\n        //    installMacOSXApplicationEventHandlers();\n\n        // MAC v.s. PC WINDOW PARENTAGE & FOCUS BEHAVIOUR:\n        //\n        // Window's that are shown before their parent's are shown do NOT adopt a\n        // stay-on-top-of-parent behaviour! (at least on mac).  FURTHERMORE: if you\n        // iconfiy the parent and de-iconify it, the keep-on-top is also lost\n        // permanently!  (Even if you hide/show the child window after that) None of\n        // this happens on the PC, only Mac OS X.  Iconifying also hides the child\n        // windows on the PC, but not on Mac.  On the PC, there's also no automatic way\n        // to install the action behaviours to take effect (the ones in the menu bar)\n        // when a tool window has focus.  Actually, mac appears to do something smart\n        // also: if parent get's MAXIMIZED, it will return to the keep on top behaviour,\n        // but you have to manually hide/show it to get it back on top.\n        //\n        // Also: for some odd reason, if we use an intermediate root window as the\n        // master parent, the MapPanner display doesn't repaint itself when dragging it\n        // or it's map!\n        //\n        // Addendum: keep-on-top now appears to survive iconification on mac.\n        //\n        // [ Assuming this is java 1.4 -- 1.5? ]\n        \n        // is done in buildApplicationInterface\n        //getRootWindow().setVisible(true);\n\n        //out(\"ACTIONTMAP \" + java.util.Arrays.asList(frame.getRootPane().getActionMap().allKeys()));\n        //out(\"INPUTMAP \" + java.util.Arrays.asList(frame.getRootPane().getInputMap().allKeys()));\n        //out(\"\\n\\nACTIONTMAP \" + java.util.Arrays.asList(frame.getActionMap().allKeys()));\n        //out(\"ACTIONTMAP \" + Arrays.asList(VUE.getActiveViewer().getActionMap().allKeys()));\n        //out(\"INPUTMAP \" + Arrays.asList(VUE.getActiveViewer().getInputMap().keys()));\n        //out(\"INPUTMAP \" + Arrays.asList(getInputMap().keys()));\n\n        //VUE.clearWaitCursor();\n\n        \n        Log.debug(\"initApplication completed.\");\n    }","id":61881,"modified_method":"private static void initApplication()\n    {\n        /*\n        if (VUE.TUFTS)\n            Log.debug(\"TUFTS features only (no MIT/development)\");\n        else\n            Log.debug(\"MIT/development features enabled\");\n        */\n\n        final Window splashScreen;\n\n        if (SKIP_DR || SKIP_SPLASH) {\n            splashScreen = null;\n            DEBUG.Enabled = true;\n        } else\n            splashScreen = new SplashScreen();\n        \n        buildApplicationInterface();\n\n        if (splashScreen != null)\n            splashScreen.setVisible(false);\n\n        boolean openedUserMap = false;\n\n        Log.debug(\"loading disk cache...\");\n        Images.loadDiskCache();\n        Log.debug(\"loading disk cache: done\");\n\n        if (FilesToOpen.size() > 0) {\n            try {\n                Iterator i = FilesToOpen.iterator();\n                while (i.hasNext()) {\n                    String fileName = (String) i.next();\n                    VUE.activateWaitCursor();\n                    LWMap map = OpenAction.loadMap(fileName);\n                    if (DEBUG.INIT) out(\"opening map during startup \" + map);\n                    if (map != null) {\n                        displayMap(map);\n                        openedUserMap = true;\n                    }\n                }\n            } finally {\n                VUE.clearWaitCursor();                \n            }\n        }\n\n        if (DEBUG.Enabled && !openedUserMap) {\n        \n            //if (SKIP_DR && FilesToOpen.size() == 0) {\n            //-------------------------------------------------------\n            // create example map(s)\n            //-------------------------------------------------------\n            //LWMap map1 = new LWMap(\"Map 1\");\n            LWMap map2 = new LWMap(\"Map 2\");\n            \n            //installExampleNodes(map1);\n            installExampleMap(map2);\n            \n            //map1.setFillColor(new Color(255, 255, 192));\n            \n            //displayMap(map1);\n            displayMap(map2);\n            //toolPanel.add(new JLabel(\"Empty Label\"), BorderLayout.CENTER);\n        }\n\n        /*\n        if (drBrowser != null) {\n            drBrowser.loadDataSourceViewer();\n            //if (VUE.TUFTS) // leave collapsed if NarraVision\n            //splitPane.resetToPreferredSizes();\n        }\n        */\n\n        //VUE.clearWaitCursor();\n\n        \n        Log.debug(\"loading fonts...\");\n        FontEditorPanel.getFontNames();\n        \n        if (SKIP_DR == false) {\n            Log.debug(\"caching tool panels...\");\n            NodeTool.getNodeToolPanel();\n            LinkTool.getLinkToolPanel();\n       }\n        \n        // Start the loading of the data source viewer\n        if (SKIP_DR == false && DR_BROWSER != null)\n            DR_BROWSER.loadDataSourceViewer();\n            /*\n            DR_BROWSER.loadDataSourceViewer(DR_BROWSER_DOCK,\n                                            searchDock,\n                                            browseDock,\n                                            savedResourcesDock,\n                                            previewDock);\n            */\n        \n        //Preferences p = Preferences.userNodeForPackage(VUE.class);\n        //p.put(\"DRBROWSER.RUN\", \"yes, it has\");\n\n        // MAC v.s. PC WINDOW PARENTAGE & FOCUS BEHAVIOUR:\n        //\n        // Window's that are shown before their parent's are shown do NOT adopt a\n        // stay-on-top-of-parent behaviour! (at least on mac).  FURTHERMORE: if you\n        // iconfiy the parent and de-iconify it, the keep-on-top is also lost\n        // permanently!  (Even if you hide/show the child window after that) None of\n        // this happens on the PC, only Mac OS X.  Iconifying also hides the child\n        // windows on the PC, but not on Mac.  On the PC, there's also no automatic way\n        // to install the action behaviours to take effect (the ones in the menu bar)\n        // when a tool window has focus.  Actually, mac appears to do something smart\n        // also: if parent get's MAXIMIZED, it will return to the keep on top behaviour,\n        // but you have to manually hide/show it to get it back on top.\n        //\n        // Also: for some odd reason, if we use an intermediate root window as the\n        // master parent, the MapPanner display doesn't repaint itself when dragging it\n        // or it's map!\n        //\n        // Addendum: keep-on-top now appears to survive iconification on mac.\n        //\n        // [ Assuming this is java 1.4 -- 1.5? ]\n        \n        // is done in buildApplicationInterface\n        //getRootWindow().setVisible(true);\n\n        //out(\"ACTIONTMAP \" + java.util.Arrays.asList(frame.getRootPane().getActionMap().allKeys()));\n        //out(\"INPUTMAP \" + java.util.Arrays.asList(frame.getRootPane().getInputMap().allKeys()));\n        //out(\"\\n\\nACTIONTMAP \" + java.util.Arrays.asList(frame.getActionMap().allKeys()));\n        //out(\"ACTIONTMAP \" + Arrays.asList(VUE.getActiveViewer().getActionMap().allKeys()));\n        //out(\"INPUTMAP \" + Arrays.asList(VUE.getActiveViewer().getInputMap().keys()));\n        //out(\"INPUTMAP \" + Arrays.asList(getInputMap().keys()));\n\n        //VUE.clearWaitCursor();\n\n        \n        Log.debug(\"initApplication completed.\");\n    }","commit_id":"08baa95753addc8236129ae840bde117f41e144f","url":"https://github.com/VUE/VUE"},{"original_method":"private static void buildApplicationInterface() {\n\n        //-------------------------------------------------------\n        // Create the tabbed panes for the viewers\n        //-------------------------------------------------------\n        \n        mMapTabsLeft = new MapTabbedPane(\"*left\");\n        mMapTabsRight = new MapTabbedPane(\"right\");\n        \n        //-------------------------------------------------------\n        // Create the split pane\n        //-------------------------------------------------------\n\n        mViewerSplit = buildSplitPane(mMapTabsLeft, mMapTabsRight);\n        \n        //-------------------------------------------------------\n        // create a an application frame and layout components\n        //-------------------------------------------------------\n        \n        if (DEBUG.INIT) out(\"creating VueFrame...\");\n\n        VUE.ApplicationFrame = new VueFrame();\n\n        if (DEBUG.INIT) out(\"created VueFrame\");\n        \n        //-----------------------------------------------------------------------------\n        // Man VUE Toolbar (map editing tool)\n        //-----------------------------------------------------------------------------\n        \n        // The real tool palette window withtools and contextual tools\n        VueToolbarController tbc = VueToolbarController.getController();\n        ModelSelection.addListener(tbc);\n\n        DockWindow toolbarDock = null;\n\n        final JComponent toolbar;\n        \n        if (VueToolPanel.IS_CONTEXTUAL_TOOLBAR_ENABLED)\n            toolbar = tbc.getToolbar();\n        else\n            toolbar = tbc.getToolbar().getMainToolbar();\n\n\n        if (ToolbarAtTopScreen) {\n            toolbarDock = GUI.createToolbar(\"Toolbar\", toolbar);\n        } else {\n            ApplicationFrame.addComp(toolbar, BorderLayout.NORTH);\n        }\n        \n        if (DEBUG.INIT) out(\"created ToolBar\");\n\n        \n        //=============================================================================\n        //\n        // Create all the DockWindow's\n        //\n        //=============================================================================\n\n        //-----------------------------------------------------------------------------\n        // Pathways panel\n        //-----------------------------------------------------------------------------\n        \n        final DockWindow pathwayDock = GUI.createDockWindow(\"Pathways\",\n                                                            new PathwayPanel(VUE.getDialogParentAsFrame()));\n\n        //-----------------------------------------------------------------------------\n        // Formatting\n        //-----------------------------------------------------------------------------\n\n        final DockWindow formatDock = null;\n        //final DockWindow formatDock = GUI.createDockWindow(\"Format\", new FormatPanel());\n\n        \n        //-----------------------------------------------------------------------------\n        // Panner\n        //-----------------------------------------------------------------------------\n\n        final DockWindow pannerDock = GUI.createDockWindow(\"Panner\", new MapPanner());\n        //pannerDock.getWidgetPanel().setBorder(new javax.swing.border.MatteBorder(5,5,5,5, Color.green));\n        //pannerDock.getContentPanel().setBorder(new EmptyBorder(1,2,2,2));\n        //pannerDock.setSize(120,120);\n        //pannerDock.setSize(112,120);\n        //pannerDock.setUpperRightCorner(GUI.GScreenWidth, 150);\n\n        if (Util.isMacPlatform()) {\n            // Can't do this on PC as 'x' close button is on right\n            pannerDock.setMenuActions(new Action[] {\n                    Actions.ZoomFit,\n                    Actions.ZoomActual\n                });\n        }\n\n\n        //-----------------------------------------------------------------------------\n        // Resources Stack (Libraries / DRBrowser)\n        // DRBrowser class initializes the DockWindow itself.\n        //-----------------------------------------------------------------------------\n        \n        DR_BROWSER_DOCK = GUI.createDockWindow(\"Content\");\n        //DockWindow searchDock = GUI.createDockWindow(\"Search\");\n        DockWindow searchDock = null;\n        DR_BROWSER = new DRBrowser(true, DR_BROWSER_DOCK, searchDock);\n        DR_BROWSER_DOCK.setSize(300, (int) (GUI.GScreenHeight * 0.75));\n\t\t\n        //-----------------------------------------------------------------------------\n        // Map Inspector\n        //-----------------------------------------------------------------------------\n\n        DockWindow MapInspector = GUI.createDockWindow(VueResources.getString(\"mapInspectorTitle\"));\n        MapInspector.setContent(new MapInspectorPanel());\n        \n        //-----------------------------------------------------------------------------\n        // Object Inspector / Resource Inspector\n        //-----------------------------------------------------------------------------\n\n        //final DockWindow resourceDock = GUI.createDockWindow(\"Resource Inspector\", new ResourcePanel());\n        inspectorPane = new tufts.vue.ui.InspectorPane();\n        DockWindow ObjectInspector = GUI.createDockWindow(\"Info\",inspectorPane);\n        ObjectInspector.setMenuName(\"Info / Preview\");\n        ObjectInspector.setHeight(575);\n        \n        //-----------------------------------------------------------------------------\n        // Object Inspector\n        //-----------------------------------------------------------------------------\n\n        //GUI.createDockWindow(\"Test OI\", new ObjectInspectorPanel()).setVisible(true);\n        /*\n        ObjectInspector = GUI.createDockWindow(VueResources.getString(\"objectInspectorTitle\"));\n        ObjectInspectorPanel = new ObjectInspectorPanel();\n        ModelSelection.addListener(ObjectInspectorPanel);\n        ObjectInspector.setContent(ObjectInspectorPanel);\n        */\n        \n        //-----------------------------------------------------------------------------\n        // Pathway Panel\n        //-----------------------------------------------------------------------------\n\n        // todo\n        \n        //-----------------------------------------------------------------------------\n        // Outline View\n        //-----------------------------------------------------------------------------\n\n        OutlineViewTree outlineTree = new OutlineViewTree();\n        JScrollPane outlineScroller = new JScrollPane(outlineTree);\n        VUE.getSelection().addListener(outlineTree);\n        VUE.addActiveMapListener(outlineTree);\n        outlineScroller.setPreferredSize(new Dimension(500, 300));\n        //outlineScroller.setBorder(null); // so DockWindow will add 1 pixel to bottom\n        DockWindow outlineDock =  GUI.createDockWindow(\"Outline\", outlineScroller);\n        \n        //-----------------------------------------------------------------------------\n\n\n        // GUI.createDockWindow(\"Font\").add(new FontEditorPanel()); // just add automatically?\n\n        //final DockWindow fontDock = GUI.createToolbar(\"Font\", new FontPropertyPanel());\n        //final DockWindow linkDock = GUI.createToolbar(\"Link\", new LinkPropertyPanel());\n        //final DockWindow actionDock = GUI.createToolbar(\"Actions\", new VueActionBar());\n        final DockWindow fontDock = null;\n        final DockWindow linkDock = null;\n        final DockWindow actionDock = null;\n\n        //fontDock.setResizeEnabled(false);\n        //linkDock.setResizeEnabled(false);\n        \n        //pannerDock.setChild(linkDock);\n        \n        //fontDock.setChild(linkDock);\n\n        //fontDock.setLowerRightCorner(GUI.GScreenWidth, GUI.GScreenHeight);\n        \n        //=============================================================================\n        //\n        // Now that we have all the DockWindow's created the VueMenuBar, which needs the\n        // list of Windows for the Window's menu.  The order they appear in this list is\n        // the order they appear in the Window's menu.\n        //\n        //=============================================================================\n        \n        VUE.ToolWindows = new Object[] {\n            DR_BROWSER_DOCK,\n            searchDock,\n            ObjectInspector,\n            MapInspector,\n            //resourceDock,\n            formatDock,\n            pannerDock,\n            //htWindow,\n            pathwayDock,\n            outlineDock,\n            actionDock,\n            //fontDock,\n            //linkDock,\n            toolbarDock,\n            \n        };\n\n        // adding the menus and toolbars\n        if (DEBUG.INIT) out(\"setting JMenuBar...\");\n        ApplicationFrame.setJMenuBar(VueMenuBar.RootMenuBar = new VueMenuBar(VUE.ToolWindows));\n        if (DEBUG.INIT) out(\"VueMenuBar installed.\");;\n\n        if (true)\n            ApplicationFrame.addComp(mViewerSplit, BorderLayout.CENTER);\n        else\n            ApplicationFrame.addComp(mMapTabsLeft, BorderLayout.CENTER);\n        \n        try {\n            ApplicationFrame.pack();\n        } catch (ArrayIndexOutOfBoundsException e) {\n            Log.error(\"OSX TIGER JAVA BUG at frame.pack()\", e);\n        }\n        \n        /*\n        if (SKIP_DR) {\n            ApplicationFrame.setSize(750,450);\n        } else {\n            ApplicationFrame.setSize(800,600);\n            // todo: make % of screen, make sure tool windows below don't go off screen!\n        }\n        */\n        \n        //if (DEBUG.INIT) out(\"validating frame...\");\n        ApplicationFrame.validate();\n        //if (DEBUG.INIT) out(\"frame validated\");\n\n        int appWidth = (int) (GUI.GScreenWidth * 0.75);\n        int appHeight = (int) (GUI.GScreenHeight * 0.75);\n\n        // If you've got a wide screen, leave at least 600\n        // pixels at the right for two full 300pix DockWindow's\n        if (GUI.GScreenWidth >= 1600) { \n            int maxWidth = GUI.GScreenWidth - (GUI.GInsets.left + DockWindow.DefaultWidth * 2);\n            if (appWidth > maxWidth)\n                appWidth = maxWidth;\n        }\n                              \n\n        ApplicationFrame.setSize(appWidth, appHeight);\n\n        ApplicationFrame.setLocation(GUI.GInsets.left,\n                                     GUI.GInsets.top\n                                     + (ToolbarAtTopScreen ? DockWindow.ToolbarHeight : 0));\n\n        // MAC NOTE WITH MAXIMIZING: if Frame's current location y value\n        // is less than whatever's it's maximized value is set to, maximizing\n        // it will use the y value, not the max value.  True even if set\n        // y value after setting to maximized but before it's put on screen.\n        \n        //GUI.centerOnScreen(ApplicationFrame);\n\n        final boolean loadTopDock = false;\n\n        if (loadTopDock && DockWindow.getMainDock() != null) {\n            // leave room for dock at top\n            Rectangle maxBounds = GUI.getMaximumWindowBounds();\n            int adj = DockWindow.getCollapsedHeight();\n            maxBounds.y += adj;\n            maxBounds.height -= adj;\n            ApplicationFrame.setMaximizedBounds(maxBounds);\n        }\n            \n        if (false)\n            ApplicationFrame.setExtendedState(Frame.MAXIMIZED_BOTH);\n\n        /*\n        if (!SKIP_DR) {\n            LWMap startupMap = null;\n            try {\n                final java.net.URL startupURL;\n                startupURL = VueResources.getURL(\"resource.startmap\");\n                startupMap = OpenAction.loadMap(startupURL);\n                startupMap.setFile(null); // dissassociate startup map from it's file so we don't write over it\n                startupMap.setLabel(\"Welcome\");\n                startupMap.markAsSaved();\n            } catch (Exception ex) {\n                ex.printStackTrace();\n                VueUtil.alert(null, \"Cannot load the Start-up map\", \"Start Up Map Error\");\n            }\n\n            try {\n                if (startupMap != null)\n                    displayMap(startupMap);\n            } catch (Exception ex) {\n                ex.printStackTrace();\n                VueUtil.alert(null, \"Failed to display Start-up Map\", \"Internal Error\");\n            }\n            \n        } else {\n            //pannerTool.setVisible(true);\n        }\n        */\n\n        VUE.displayMap(new LWMap(\"New Map\"));\n\n        // Generally, we need to wait until java 1.5 JSplitPane's have been validated to\n        // use the % set divider location.  Unfortunately there's a bug in at MacOS java\n        // 1.5 BasicSplitPaneUI (it's not in the 1.4 version), where setKeepHidden isn't\n        // being called when the divider goes to the wall via setDividerLocation, only when\n        // the one-touch buttons are manually clicked.  So, for example, if the user\n        // de-maximizes the frame, suddenly a hidden split-pane will pop out!  So, we've\n        // hacked into the UI code, grabbed the damn right-one-touch button, grabbed\n        // it's action listener, and here just call it directly...\n        // \n        // See javax.swing.plaf.basic.BasicSplitPaneDivider.OneTouchActionHandler.\n        //\n        // It appears on Windows we need to actually wait till the frame is shown also...\n\n        // show before split adjust on pc\n        if (!Util.isMacPlatform())\n            ApplicationFrame.setVisible(true);\n        \n        if (SplitPaneRightButtonOneTouchActionHandler != null) {\n            if (DEBUG.INIT) Util.printStackTrace(\"\\\"pressing\\\": \" + SplitPaneRightButtonOneTouchActionHandler);\n\n            // Not reliable on PC unless we invokeLater\n            GUI.invokeAfterAWT(new Runnable() { public void run() {\n                SplitPaneRightButtonOneTouchActionHandler.actionPerformed(null);                  \n            }});\n        \n            // this is also eventually getting eaten in java 1.5: no matter where\n            // we put this call during init: will have to patch w/more hacking\n            // or live with it.  Actually, it get's eaten eventually in java 1.4.2\n            // also.\n\n            // Maybe because we maximized the frame before it was shown?\n            // [ not making a difference]\n\n            // Well. this is working at least the first time now by\n            // doing it BEFORE the peers are created.\n            //mViewerSplit.setResizeWeight(0.5d);\n            \n        } else {\n            // for java 1.4.2\n            mViewerSplit.setDividerLocation(1.0);\n        }\n\n        // can show after split adjust on mac (turns out: only on older, slower macs)\n        if (Util.isMacPlatform()) {\n            ApplicationFrame.setVisible(true);\n\n            if (SplitPaneRightButtonOneTouchActionHandler != null) {\n                // This is backup: hit it one more time just in case, as on the\n                // newer, faster intel Mac's, the timing is changed and the\n                // above is no longer catching it.\n                GUI.invokeAfterAWT(new Runnable() { public void run() {\n                    SplitPaneRightButtonOneTouchActionHandler.actionPerformed(null);                  \n                }});\n            }\n        }\n        \n\n        if (toolbarDock != null) {\n            toolbarDock.suggestLocation(0,0);\n            toolbarDock.setWidth(GUI.GScreenWidth);\n            toolbarDock.setVisible(true);\n        }\n\n        //-----------------------------------------------------------------------------\n        //\n        // Set locations for the inspector windows and make some of them visible\n        //\n        //-----------------------------------------------------------------------------\n\n\n        // order the windows left to right for the top dock\n        final DockWindow[] acrossTop = new DockWindow[] {\n            MapInspector,\n            //GUI.isSmallScreen() ? null : fontDock,\n            pathwayDock,\n            //formatDock,\n            DR_BROWSER_DOCK,\n            ObjectInspector,\n            //resourceDock,\n        };\n            \n        outlineDock.setLowerLeftCorner(0,\n                                       GUI.GScreenHeight - GUI.GInsets.bottom);\n        pannerDock.setLowerRightCorner(GUI.GScreenWidth - GUI.GInsets.right,\n                                       GUI.GScreenHeight - GUI.GInsets.bottom);\n        if (DockWindow.getTopDock() != null)\n            prepareForTopDockDisplay(acrossTop);\n        \n        // Run after AWT to ensure all peers to have been created & shown\n        GUI.invokeAfterAWT(new Runnable() { public void run() {\n            positionForDocking(acrossTop);\n        }});\n        \n        \n        if (false) {\n            // old positioning code\n            int inspectorx = ApplicationFrame.getX() + ApplicationFrame.getWidth();\n            MapInspector.suggestLocation(inspectorx, ApplicationFrame.getY());\n            ObjectInspector.suggestLocation(inspectorx, ApplicationFrame.getY() + MapInspector.getHeight() );\n            pannerDock.suggestLocation(ApplicationFrame.getX() - pannerDock.getWidth(), ApplicationFrame.getY());\n        }\n        \n        if (!SKIP_DR)\n            DR_BROWSER_DOCK.setVisible(true);\n\n\n        /*\n        GUI.invokeAfterAWT(new Runnable() { public void run() {\n            //pannerDock.setVisible(true);\n            if (DEBUG.Enabled) linkDock.setVisible(true);\n            if (DEBUG.Enabled) fontDock.setVisible(true);\n        }});\n        */\n\n\n    }","id":61882,"modified_method":"private static void buildApplicationInterface() {\n\n        //-------------------------------------------------------\n        // Create the tabbed panes for the viewers\n        //-------------------------------------------------------\n        \n        mMapTabsLeft = new MapTabbedPane(\"*left\");\n        mMapTabsRight = new MapTabbedPane(\"right\");\n        \n        //-------------------------------------------------------\n        // Create the split pane\n        //-------------------------------------------------------\n\n        mViewerSplit = buildSplitPane(mMapTabsLeft, mMapTabsRight);\n        \n        //-------------------------------------------------------\n        // create a an application frame and layout components\n        //-------------------------------------------------------\n        \n        if (DEBUG.INIT) out(\"creating VueFrame...\");\n\n        VUE.ApplicationFrame = new VueFrame();\n\n        if (DEBUG.INIT) out(\"created VueFrame\");\n        \n        //-----------------------------------------------------------------------------\n        // Man VUE Toolbar (map editing tool)\n        //-----------------------------------------------------------------------------\n        \n        // The real tool palette window withtools and contextual tools\n        VueToolbarController tbc = VueToolbarController.getController();\n        ModelSelection.addListener(tbc);\n\n        DockWindow toolbarDock = null;\n\n        final JComponent toolbar;\n        \n        if (VueToolPanel.IS_CONTEXTUAL_TOOLBAR_ENABLED)\n            toolbar = tbc.getToolbar();\n        else\n            toolbar = tbc.getToolbar().getMainToolbar();\n\n\n        if (ToolbarAtTopScreen) {\n            toolbarDock = GUI.createToolbar(\"Toolbar\", toolbar);\n        } else {\n            ApplicationFrame.addComp(toolbar, BorderLayout.NORTH);\n        }\n        \n        if (DEBUG.INIT) out(\"created ToolBar\");\n\n        \n        //=============================================================================\n        //\n        // Create all the DockWindow's\n        //\n        //=============================================================================\n\n        //-----------------------------------------------------------------------------\n        // Pathways panel\n        //-----------------------------------------------------------------------------\n        \n        final DockWindow pathwayDock = GUI.createDockWindow(\"Pathways\",\n                                                            new PathwayPanel(VUE.getDialogParentAsFrame()));\n\n        //-----------------------------------------------------------------------------\n        // Formatting\n        //-----------------------------------------------------------------------------\n\n        final DockWindow formatDock = null;\n        //final DockWindow formatDock = GUI.createDockWindow(\"Format\", new FormatPanel());\n\n        \n        //-----------------------------------------------------------------------------\n        // Panner\n        //-----------------------------------------------------------------------------\n\n        final DockWindow pannerDock = GUI.createDockWindow(\"Panner\", new MapPanner());\n        //pannerDock.getWidgetPanel().setBorder(new javax.swing.border.MatteBorder(5,5,5,5, Color.green));\n        //pannerDock.getContentPanel().setBorder(new EmptyBorder(1,2,2,2));\n        //pannerDock.setSize(120,120);\n        //pannerDock.setSize(112,120);\n        //pannerDock.setUpperRightCorner(GUI.GScreenWidth, 150);\n\n        if (Util.isMacPlatform()) {\n            // Can't do this on PC as 'x' close button is on right\n            pannerDock.setMenuActions(new Action[] {\n                    Actions.ZoomFit,\n                    Actions.ZoomActual\n                });\n        }\n\n\n        //-----------------------------------------------------------------------------\n        // Resources Stack (Libraries / DRBrowser)\n        // DRBrowser class initializes the DockWindow itself.\n        //-----------------------------------------------------------------------------\n        \n        DR_BROWSER_DOCK = GUI.createDockWindow(\"Content\");\n        //DockWindow searchDock = GUI.createDockWindow(\"Search\");\n        DockWindow searchDock = null;\n        DR_BROWSER = new DRBrowser(true, DR_BROWSER_DOCK, searchDock);\n        DR_BROWSER_DOCK.setSize(300, (int) (GUI.GScreenHeight * 0.75));\n\t\t\n        //-----------------------------------------------------------------------------\n        // Map Inspector\n        //-----------------------------------------------------------------------------\n\n        DockWindow MapInspector = GUI.createDockWindow(VueResources.getString(\"mapInspectorTitle\"));\n        MapInspector.setContent(new MapInspectorPanel());\n        \n        //-----------------------------------------------------------------------------\n        // Object Inspector / Resource Inspector\n        //-----------------------------------------------------------------------------\n\n        //final DockWindow resourceDock = GUI.createDockWindow(\"Resource Inspector\", new ResourcePanel());\n        inspectorPane = new tufts.vue.ui.InspectorPane();\n        DockWindow ObjectInspector = GUI.createDockWindow(\"Info\",inspectorPane);\n        ObjectInspector.setMenuName(\"Info / Preview\");\n        ObjectInspector.setHeight(575);\n\n        /*\n\n        final DockWindow slideDock = GUI.createDockWindow(new tufts.vue.ui.SlideViewer(null));\n        slideDock.setLocation(100,100);\n        VueAction defSize;\n        slideDock.setMenuActions(new Action[] {\n                Actions.ZoomFit,\n                Actions.ZoomActual,\n                defSize = new VueAction(\"1/8 Screen\") {\n                    public void act() {\n                        GraphicsConfiguration gc = GUI.getDeviceConfigForWindow(slideDock);\n                        Rectangle screen = gc.getBounds();\n                        slideDock.setSize(screen.width / 4, screen.height / 4);\n                        //GUI.refreshGraphicsInfo();\n                        //slideDock.setSize(GUI.GScreenWidth / 4, GUI.GScreenHeight / 4);\n                    }\n                },\n                new VueAction(\"1/4 Screen\") {\n                    public void act() {\n                        GraphicsConfiguration gc = GUI.getDeviceConfigForWindow(slideDock);\n                        Rectangle screen = gc.getBounds();\n                        slideDock.setSize(screen.width / 2, screen.height / 2);\n                        //GUI.refreshGraphicsInfo();\n                        //slideDock.setSize(GUI.GScreenWidth / 2, GUI.GScreenHeight / 2);\n                    }\n                },\n                new VueAction(\"Maximize\") {\n                    public void act() {\n                        slideDock.setBounds(GUI.getMaximumWindowBounds(slideDock));\n                    }\n                },\n                \n            });\n        defSize.act();\n\n        */\n        \n        \n        \n        //-----------------------------------------------------------------------------\n        // Object Inspector\n        //-----------------------------------------------------------------------------\n\n        //GUI.createDockWindow(\"Test OI\", new ObjectInspectorPanel()).setVisible(true);\n        /*\n        ObjectInspector = GUI.createDockWindow(VueResources.getString(\"objectInspectorTitle\"));\n        ObjectInspectorPanel = new ObjectInspectorPanel();\n        ModelSelection.addListener(ObjectInspectorPanel);\n        ObjectInspector.setContent(ObjectInspectorPanel);\n        */\n        \n        //-----------------------------------------------------------------------------\n        // Pathway Panel\n        //-----------------------------------------------------------------------------\n\n        // todo\n        \n        //-----------------------------------------------------------------------------\n        // Outline View\n        //-----------------------------------------------------------------------------\n\n        OutlineViewTree outlineTree = new OutlineViewTree();\n        JScrollPane outlineScroller = new JScrollPane(outlineTree);\n        VUE.getSelection().addListener(outlineTree);\n        VUE.addActiveMapListener(outlineTree);\n        outlineScroller.setPreferredSize(new Dimension(500, 300));\n        //outlineScroller.setBorder(null); // so DockWindow will add 1 pixel to bottom\n        DockWindow outlineDock =  GUI.createDockWindow(\"Outline\", outlineScroller);\n        \n        //-----------------------------------------------------------------------------\n\n\n        // GUI.createDockWindow(\"Font\").add(new FontEditorPanel()); // just add automatically?\n\n        //final DockWindow fontDock = GUI.createToolbar(\"Font\", new FontPropertyPanel());\n        //final DockWindow linkDock = GUI.createToolbar(\"Link\", new LinkPropertyPanel());\n        //final DockWindow actionDock = GUI.createToolbar(\"Actions\", new VueActionBar());\n        final DockWindow fontDock = null;\n        final DockWindow linkDock = null;\n        final DockWindow actionDock = null;\n\n        //fontDock.setResizeEnabled(false);\n        //linkDock.setResizeEnabled(false);\n        \n        //pannerDock.setChild(linkDock);\n        \n        //fontDock.setChild(linkDock);\n\n        //fontDock.setLowerRightCorner(GUI.GScreenWidth, GUI.GScreenHeight);\n        \n        //=============================================================================\n        //\n        // Now that we have all the DockWindow's created the VueMenuBar, which needs the\n        // list of Windows for the Window's menu.  The order they appear in this list is\n        // the order they appear in the Window's menu.\n        //\n        //=============================================================================\n        \n        VUE.ToolWindows = new Object[] {\n            DR_BROWSER_DOCK,\n            searchDock,\n            ObjectInspector,\n            MapInspector,\n            //resourceDock,\n            formatDock,\n            pannerDock,\n            //htWindow,\n            pathwayDock,\n            outlineDock,\n            actionDock,\n            //fontDock,\n            //linkDock,\n            toolbarDock,\n            //slideDock,\n            \n        };\n\n        // adding the menus and toolbars\n        if (DEBUG.INIT) out(\"setting JMenuBar...\");\n        ApplicationFrame.setJMenuBar(VueMenuBar.RootMenuBar = new VueMenuBar(VUE.ToolWindows));\n        if (DEBUG.INIT) out(\"VueMenuBar installed.\");;\n\n        if (true)\n            ApplicationFrame.addComp(mViewerSplit, BorderLayout.CENTER);\n        else\n            ApplicationFrame.addComp(mMapTabsLeft, BorderLayout.CENTER);\n        \n        try {\n            ApplicationFrame.pack();\n        } catch (ArrayIndexOutOfBoundsException e) {\n            Log.error(\"OSX TIGER JAVA BUG at frame.pack()\", e);\n        }\n        \n        /*\n        if (SKIP_DR) {\n            ApplicationFrame.setSize(750,450);\n        } else {\n            ApplicationFrame.setSize(800,600);\n            // todo: make % of screen, make sure tool windows below don't go off screen!\n        }\n        */\n        \n        //if (DEBUG.INIT) out(\"validating frame...\");\n        ApplicationFrame.validate();\n        //if (DEBUG.INIT) out(\"frame validated\");\n\n        int appWidth = (int) (GUI.GScreenWidth * 0.75);\n        int appHeight = (int) (GUI.GScreenHeight * 0.75);\n\n        // If you've got a wide screen, leave at least 600\n        // pixels at the right for two full 300pix DockWindow's\n        if (GUI.GScreenWidth >= 1600) { \n            int maxWidth = GUI.GScreenWidth - (GUI.GInsets.left + DockWindow.DefaultWidth * 2);\n            if (appWidth > maxWidth)\n                appWidth = maxWidth;\n        }\n                              \n\n        ApplicationFrame.setSize(appWidth, appHeight);\n\n        ApplicationFrame.setLocation(GUI.GInsets.left,\n                                     GUI.GInsets.top\n                                     + (ToolbarAtTopScreen ? DockWindow.ToolbarHeight : 0));\n\n        // MAC NOTE WITH MAXIMIZING: if Frame's current location y value\n        // is less than whatever's it's maximized value is set to, maximizing\n        // it will use the y value, not the max value.  True even if set\n        // y value after setting to maximized but before it's put on screen.\n        \n        //GUI.centerOnScreen(ApplicationFrame);\n\n        final boolean loadTopDock = false;\n\n        if (loadTopDock && DockWindow.getMainDock() != null) {\n            // leave room for dock at top\n            Rectangle maxBounds = GUI.getMaximumWindowBounds();\n            int adj = DockWindow.getCollapsedHeight();\n            maxBounds.y += adj;\n            maxBounds.height -= adj;\n            ApplicationFrame.setMaximizedBounds(maxBounds);\n        }\n            \n        if (false)\n            ApplicationFrame.setExtendedState(Frame.MAXIMIZED_BOTH);\n\n        /*\n        if (!SKIP_DR) {\n            LWMap startupMap = null;\n            try {\n                final java.net.URL startupURL;\n                startupURL = VueResources.getURL(\"resource.startmap\");\n                startupMap = OpenAction.loadMap(startupURL);\n                startupMap.setFile(null); // dissassociate startup map from it's file so we don't write over it\n                startupMap.setLabel(\"Welcome\");\n                startupMap.markAsSaved();\n            } catch (Exception ex) {\n                ex.printStackTrace();\n                VueUtil.alert(null, \"Cannot load the Start-up map\", \"Start Up Map Error\");\n            }\n\n            try {\n                if (startupMap != null)\n                    displayMap(startupMap);\n            } catch (Exception ex) {\n                ex.printStackTrace();\n                VueUtil.alert(null, \"Failed to display Start-up Map\", \"Internal Error\");\n            }\n            \n        } else {\n            //pannerTool.setVisible(true);\n        }\n        */\n\n        if (FilesToOpen.size() == 0)\n            VUE.displayMap(new LWMap(\"New Map\"));\n\n        // Generally, we need to wait until java 1.5 JSplitPane's have been validated to\n        // use the % set divider location.  Unfortunately there's a bug in at MacOS java\n        // 1.5 BasicSplitPaneUI (it's not in the 1.4 version), where setKeepHidden isn't\n        // being called when the divider goes to the wall via setDividerLocation, only when\n        // the one-touch buttons are manually clicked.  So, for example, if the user\n        // de-maximizes the frame, suddenly a hidden split-pane will pop out!  So, we've\n        // hacked into the UI code, grabbed the damn right-one-touch button, grabbed\n        // it's action listener, and here just call it directly...\n        // \n        // See javax.swing.plaf.basic.BasicSplitPaneDivider.OneTouchActionHandler.\n        //\n        // It appears on Windows we need to actually wait till the frame is shown also...\n\n        // show before split adjust on pc\n        if (!Util.isMacPlatform())\n            ApplicationFrame.setVisible(true);\n        \n        if (SplitPaneRightButtonOneTouchActionHandler != null) {\n            if (DEBUG.INIT) Util.printStackTrace(\"\\\"pressing\\\": \" + SplitPaneRightButtonOneTouchActionHandler);\n\n            // Not reliable on PC unless we invokeLater\n            GUI.invokeAfterAWT(new Runnable() { public void run() {\n                SplitPaneRightButtonOneTouchActionHandler.actionPerformed(null);                  \n            }});\n        \n            // this is also eventually getting eaten in java 1.5: no matter where\n            // we put this call during init: will have to patch w/more hacking\n            // or live with it.  Actually, it get's eaten eventually in java 1.4.2\n            // also.\n\n            // Maybe because we maximized the frame before it was shown?\n            // [ not making a difference]\n\n            // Well. this is working at least the first time now by\n            // doing it BEFORE the peers are created.\n            //mViewerSplit.setResizeWeight(0.5d);\n            \n        } else {\n            // for java 1.4.2\n            mViewerSplit.setDividerLocation(1.0);\n        }\n\n        // can show after split adjust on mac (turns out: only on older, slower macs)\n        if (Util.isMacPlatform()) {\n            ApplicationFrame.setVisible(true);\n\n            if (SplitPaneRightButtonOneTouchActionHandler != null) {\n                // This is backup: hit it one more time just in case, as on the\n                // newer, faster intel Mac's, the timing is changed and the\n                // above is no longer catching it.\n                GUI.invokeAfterAWT(new Runnable() { public void run() {\n                    SplitPaneRightButtonOneTouchActionHandler.actionPerformed(null);                  \n                }});\n            }\n        }\n        \n\n        if (toolbarDock != null) {\n            toolbarDock.suggestLocation(0,0);\n            toolbarDock.setWidth(GUI.GScreenWidth);\n            toolbarDock.setVisible(true);\n        }\n\n        //-----------------------------------------------------------------------------\n        //\n        // Set locations for the inspector windows and make some of them visible\n        //\n        //-----------------------------------------------------------------------------\n\n\n        // order the windows left to right for the top dock\n        final DockWindow[] acrossTop = new DockWindow[] {\n            MapInspector,\n            //GUI.isSmallScreen() ? null : fontDock,\n            pathwayDock,\n            //formatDock,\n            DR_BROWSER_DOCK,\n            ObjectInspector,\n            //resourceDock,\n        };\n            \n        outlineDock.setLowerLeftCorner(0,\n                                       GUI.GScreenHeight - GUI.GInsets.bottom);\n        pannerDock.setLowerRightCorner(GUI.GScreenWidth - GUI.GInsets.right,\n                                       GUI.GScreenHeight - GUI.GInsets.bottom);\n        if (DockWindow.getTopDock() != null)\n            prepareForTopDockDisplay(acrossTop);\n        \n        // Run after AWT to ensure all peers to have been created & shown\n        GUI.invokeAfterAWT(new Runnable() { public void run() {\n            positionForDocking(acrossTop);\n        }});\n        \n        \n        if (false) {\n            // old positioning code\n            int inspectorx = ApplicationFrame.getX() + ApplicationFrame.getWidth();\n            MapInspector.suggestLocation(inspectorx, ApplicationFrame.getY());\n            ObjectInspector.suggestLocation(inspectorx, ApplicationFrame.getY() + MapInspector.getHeight() );\n            pannerDock.suggestLocation(ApplicationFrame.getX() - pannerDock.getWidth(), ApplicationFrame.getY());\n        }\n        \n        if (!SKIP_DR)\n            DR_BROWSER_DOCK.setVisible(true);\n\n\n        /*\n        GUI.invokeAfterAWT(new Runnable() { public void run() {\n            //pannerDock.setVisible(true);\n            if (DEBUG.Enabled) linkDock.setVisible(true);\n            if (DEBUG.Enabled) fontDock.setVisible(true);\n        }});\n        */\n\n\n    }","commit_id":"08baa95753addc8236129ae840bde117f41e144f","url":"https://github.com/VUE/VUE"},{"original_method":"private static void installMacOSXApplicationEventHandlers()\n    {\n        if (!VueUtil.isMacPlatform())\n            throw new RuntimeException(\"can only install OSX event handlers on Mac OS X\");\n        \n        MRJAdapter.addQuitApplicationListener(new ExitAction());\n        MRJAdapter.addAboutListener(new AboutAction());\n        MRJAdapter.addOpenApplicationListener(new ActionListener() {\n                public void actionPerformed(ActionEvent e) {\n                    Log.info(\"OpenApplication \" + e);\n                }\n            });\n        MRJAdapter.addReopenApplicationListener(new ActionListener() {\n                public void actionPerformed(ActionEvent e){\n                    Log.info(\"REopenDocument \" + e);\n                }\n            });\n        MRJAdapter.addOpenDocumentListener(new ActionListener() {\n                public void actionPerformed(ActionEvent e) {\n                    Log.info(\"OpenDocument \" + e);\n                    ApplicationEvent ae = (ApplicationEvent) e;\n                    VUE.displayMap(ae.getFile());\n                }\n            });\n        \n        // this was working for double-click launch AND open of a .vue file --\n        // above MRJAdapater callbacks aren't getting the open call after launch...\n        // from com.apple.mrj.* -- deprecated old api.  Consider using an\n        // OSXAdapter styled impl instead of net.roydesign stuff, due to the above failure\n        // with opening the app on double-click.  (Create our own pass-thru class\n        // that get's compiled only the on the mac, and bundled as a lib for the main\n        // build for other platforms).\n        //\n        // Note that attempting to combine the below with the above forces one of them to always break.\n        \n        /*\n        MRJApplicationUtils.registerOpenDocumentHandler(new MRJOpenDocumentHandler() {\n                public void handleOpenFile(File file) {\n                    System.out.println(\"VUE: MRJOpenDocumentHandler: \" + file);\n                    VUE.displayMap(file);\n                }\n            });\n        */\n    }","id":61883,"modified_method":"private static void installMacOSXApplicationEventHandlers()\n    {\n        if (!VueUtil.isMacPlatform())\n            throw new RuntimeException(\"can only install OSX event handlers on Mac OS X\");\n\n        VUE.Log.debug(\"INSTALLING MAC OSX APPLICATION HANDLER\");\n\n        tufts.macosx.MacOSX.registerApplicationListener(new tufts.macosx.MacOSX.ApplicationListener() {\n                public boolean handleOpenFile(String filename) {\n                    VUE.Log.info(\"OSX OPEN FILE \" + filename);\n                    if (VUE.isStartupUnderway)\n                        VUE.FilesToOpen.add(filename);\n                    else\n                        VUE.displayMap(new File(filename));\n                    return true;\n                }\n                public boolean handleQuit() {\n                    VUE.Log.debug(\"OSX QUIT\");\n                    ExitAction.exitVue();\n                    // Always return false.  If we claim this is \"handled\",\n                    // OSX  will do the quit for us, and even if the ExitAction\n                    // was aborted, we'd exit anyway...\n                    return false;\n                }\n                public boolean handleAbout() {\n                    VUE.Log.debug(\"OSX ABOUT\");\n                    new AboutAction().act();\n                    return true;\n                }\n                \n            });\n    }","commit_id":"08baa95753addc8236129ae840bde117f41e144f","url":"https://github.com/VUE/VUE"},{"original_method":"public static void main(String[] args)\n    {\n        //if (VueUtil.isMacPlatform())\n        //installMacOSXApplicationEventHandlers();\n\n        Log.debug(\"VUE: main entered\");\n        \n        VUE.isStartupUnderway = true;\n\n        parseArgs(args);\n        \n        Log.info(\"Startup; build: \" + tufts.vue.Version.AllInfo);\n        Log.info(\"Running in Java VM: \" + getSystemProperty(\"java.runtime.version\")\n                 + \"; MaxMemory(-Xmx)=\" + VueUtil.abbrevBytes(Runtime.getRuntime().maxMemory())\n                 + \", CurMemory(-Xms)=\" + VueUtil.abbrevBytes(Runtime.getRuntime().totalMemory())\n                 );\n\n        Log.info(\"VUE version: \" + VueResources.getString(\"vue.version\"));\n        Log.info(\"Current Working Directory: \" + getSystemProperty(\"user.dir\"));\n        \n        if (DEBUG.Enabled)\n            Log.setLevel(Level.DEBUG);\n\n        try {\n\n            initUI();\n            initApplication(args);\n            \n        } catch (Throwable t) {\n            Util.printStackTrace(t, \"VUE init failed\");\n            VueUtil.alert(\"VUE init failed\", t);\n            /*\n            StringWriter buf = new StringWriter();\n            t.printStackTrace(new java.io.PrintWriter(buf));\n            JComponent msg = new JTextArea(\"VUE init failed:\\n\" + buf);\n            msg.setBorder(new EmptyBorder(22,22,22,22));\n            tufts.Util.displayComponent(msg);\n            */\n        }\n\n        VUE.isStartupUnderway = false;\n        \n        Log.info(\"startup completed.\");\n        \n        if (exitAfterInit) {\n            out(\"init completed: exiting\");\n            System.exit(0);\n        }\n    }","id":61884,"modified_method":"public static void main(String[] args)\n    {\n        Log.debug(\"VUE: main entered\");\n        \n        VUE.isStartupUnderway = true;\n\n        parseArgs(args);\n        \n        Log.info(\"Startup; build: \" + tufts.vue.Version.AllInfo);\n        Log.info(\"Running in Java VM: \" + getSystemProperty(\"java.runtime.version\")\n                 + \"; MaxMemory(-Xmx)=\" + VueUtil.abbrevBytes(Runtime.getRuntime().maxMemory())\n                 + \", CurMemory(-Xms)=\" + VueUtil.abbrevBytes(Runtime.getRuntime().totalMemory())\n                 );\n\n        Log.info(\"VUE version: \" + VueResources.getString(\"vue.version\"));\n        Log.info(\"Current Working Directory: \" + getSystemProperty(\"user.dir\"));\n        \n        if (DEBUG.Enabled)\n            Log.setLevel(Level.DEBUG);\n\n        if (VueUtil.isMacPlatform())\n            installMacOSXApplicationEventHandlers();\n            \n        for (int i = 0; i < args.length; i++) {\n            if (args[i] == null || args[i].length() < 1 || args[i].charAt(0) == '-')\n                continue;\n            if (DEBUG.INIT) out(\"command-line file to open \" + args[i]);\n            VUE.FilesToOpen.add(args[i]);\n        }\n        \n        try {\n\n            initUI();\n            initApplication();\n            \n        } catch (Throwable t) {\n            Util.printStackTrace(t, \"VUE init failed\");\n            VueUtil.alert(\"VUE init failed\", t);\n            /*\n            StringWriter buf = new StringWriter();\n            t.printStackTrace(new java.io.PrintWriter(buf));\n            JComponent msg = new JTextArea(\"VUE init failed:\\n\" + buf);\n            msg.setBorder(new EmptyBorder(22,22,22,22));\n            tufts.Util.displayComponent(msg);\n            */\n        }\n\n\n        VUE.isStartupUnderway = false;\n        \n        Log.info(\"startup completed.\");\n        \n        if (exitAfterInit) {\n            out(\"init completed: exiting\");\n            System.exit(0);\n        }\n    }","commit_id":"08baa95753addc8236129ae840bde117f41e144f","url":"https://github.com/VUE/VUE"},{"original_method":"public String getFilename(UMOMessageAdapter adapter, String pattern)\n    {\n        if (pattern == null)\n        {\n            return UUID.getUUID() + \".dat\";\n        }\n        else\n        {\n            String result;\n            if (pattern.indexOf('{') > -1)\n            {\n                result = getFilename(adapter, pattern, antParser);\n            }\n            else\n            {\n                result = getFilename(adapter, pattern, squareParser);\n            }\n\n            return result;\n        }\n    }","id":61885,"modified_method":"public String getFilename(UMOMessageAdapter adapter, String pattern)\n    {\n        if (pattern == null)\n        {\n            return UUID.getUUID() + \".dat\";\n        }\n        else\n        {\n            if (pattern.indexOf('{') > -1)\n            {\n                return getFilename(adapter, pattern, antParser);\n            }\n            else\n            {\n                return getFilename(adapter, pattern, squareParser);\n            }\n        }\n    }","commit_id":"ba2375ddd42c8e3be84abe679c90e77253717357","url":"https://github.com/mulesoft/mule"},{"original_method":"protected String getFilename(final UMOMessageAdapter adapter, String pattern, TemplateParser parser)\n    {\n        return parser.parse(new TemplateParser.TemplateCallback()\n        {\n            public Object match(String token)\n            {\n                if (token.equals(\"DATE\"))\n                {\n                    return DateUtils.getTimeStamp(DEFAULT_DATE_FORMAT);\n                }\n                else if (token.startsWith(\"DATE:\"))\n                {\n                    token = token.substring(5);\n                    return DateUtils.getTimeStamp(token);\n                }\n                else if (token.startsWith(\"UUID\"))\n                {\n                    return UUID.getUUID();\n                }\n                else if (token.startsWith(\"SYSTIME\"))\n                {\n                    return String.valueOf(System.currentTimeMillis());\n                }\n                else if (token.startsWith(\"COUNT\"))\n                {\n                    return String.valueOf(count.getAndIncrement());\n                }\n                else if (adapter != null)\n                {\n                    if (token.startsWith(\"ORIGINALNAME\"))\n                    {\n                        return adapter.getStringProperty(FileConnector.PROPERTY_FILENAME, null);\n                    }\n                    else\n                    {\n                        return adapter.getStringProperty(token, null);\n                    }\n                }\n                return null;\n\n            }\n        }, pattern);\n    }","id":61886,"modified_method":"protected String getFilename(final UMOMessageAdapter adapter, String pattern, TemplateParser parser)\n    {\n        return parser.parse(new TemplateParser.TemplateCallback()\n        {\n            public Object match(String token)\n            {\n                if (token.equals(\"DATE\"))\n                {\n                    return DateUtils.getTimeStamp(DEFAULT_DATE_FORMAT);\n                }\n                else if (token.startsWith(\"DATE:\"))\n                {\n                    token = token.substring(5);\n                    return DateUtils.getTimeStamp(token);\n                }\n                else if (token.startsWith(\"UUID\"))\n                {\n                    return UUID.getUUID();\n                }\n                else if (token.startsWith(\"SYSTIME\"))\n                {\n                    return String.valueOf(System.currentTimeMillis());\n                }\n                else if (token.startsWith(\"COUNT\"))\n                {\n                    return String.valueOf(count.getAndIncrement());\n                }\n                else if (adapter != null)\n                {\n                    if (token.startsWith(\"ORIGINALNAME\"))\n                    {\n                        return adapter.getStringProperty(FileConnector.PROPERTY_ORIGINAL_FILENAME, null);\n                    }\n                    else\n                    {\n                        return adapter.getStringProperty(token, null);\n                    }\n                }\n                return null;\n\n            }\n        }, pattern);\n    }","commit_id":"ba2375ddd42c8e3be84abe679c90e77253717357","url":"https://github.com/mulesoft/mule"},{"original_method":"public void testSquareStyleParsing()\n    {\n        SimpleFilenameParser parser = new SimpleFilenameParser();\n        DefaultMessageAdapter adapter = new DefaultMessageAdapter(\"hello\");\n        adapter.setProperty(\"foo\", \"bar\");\n        adapter.setProperty(FileConnector.PROPERTY_FILENAME, \"blah\");\n        String result = parser.getFilename(adapter, \"Test1_[COUNT].txt\");\n        assertEquals(\"Test1_0.txt\", result);\n\n        result = parser.getFilename(adapter, \"Test2_[DATE:yyMMdd].txt\");\n        assertEquals(\"got result: \" + result, 16, result.length());\n\n        result = parser.getFilename(adapter, \"Test3_[DATE].txt\");\n        assertEquals(\"got result: '\" + result, 31, result.length());\n\n        result = parser.getFilename(adapter, \"Test4_[SYSTIME].txt\");\n        assertFalse(result.equals(\"Test4_[SYSTIME].txt\"));\n\n        result = parser.getFilename(adapter, \"Test5_[UUID].txt\");\n        assertFalse(result.equals(\"Test5_[UUID].txt\"));\n\n        result = parser.getFilename(adapter, \"Test6_[COUNT].txt\");\n        assertEquals(\"Test6_1.txt\", result);\n\n        result = parser.getFilename(adapter, \"Test7_[ORIGINALNAME].txt\");\n        assertEquals(\"Test7_blah.txt\", result);\n\n        result = parser.getFilename(adapter, \"Test8_[foo].txt\");\n        assertEquals(\"Test8_bar.txt\", result);\n\n        result = parser.getFilename(adapter, \"Test9_[xxx].txt\");\n        assertEquals(\"Test9_[xxx].txt\", result);\n    }","id":61887,"modified_method":"public void testSquareStyleParsing()\n    {\n        String result = parser.getFilename(adapter, \"Test1_[COUNT].txt\");\n        assertEquals(\"Test1_0.txt\", result);\n\n        result = parser.getFilename(adapter, \"Test2_[DATE:yyMMdd].txt\");\n        assertEquals(\"got result: \" + result, 16, result.length());\n\n        result = parser.getFilename(adapter, \"Test3_[DATE].txt\");\n        assertEquals(\"got result: '\" + result, 31, result.length());\n\n        result = parser.getFilename(adapter, \"Test4_[SYSTIME].txt\");\n        assertFalse(result.equals(\"Test4_[SYSTIME].txt\"));\n\n        result = parser.getFilename(adapter, \"Test5_[UUID].txt\");\n        assertFalse(result.equals(\"Test5_[UUID].txt\"));\n\n        result = parser.getFilename(adapter, \"Test6_[COUNT].txt\");\n        assertEquals(\"Test6_1.txt\", result);\n\n        result = parser.getFilename(adapter, \"Test7_[ORIGINALNAME].txt\");\n        assertEquals(\"Test7_originalName.txt\", result);\n\n        result = parser.getFilename(adapter, \"Test8_[foo].txt\");\n        assertEquals(\"Test8_bar.txt\", result);\n\n        result = parser.getFilename(adapter, \"Test9_[xxx].txt\");\n        assertEquals(\"Test9_[xxx].txt\", result);\n    }","commit_id":"ba2375ddd42c8e3be84abe679c90e77253717357","url":"https://github.com/mulesoft/mule"},{"original_method":"public void testAntStyleParsing()\n    {\n        SimpleFilenameParser parser = new SimpleFilenameParser();\n        DefaultMessageAdapter adapter = new DefaultMessageAdapter(\"hello\");\n        adapter.setProperty(\"foo\", \"bar\");\n        adapter.setProperty(FileConnector.PROPERTY_FILENAME, \"blah\");\n        String result = parser.getFilename(adapter, \"Test1_${COUNT}.txt\");\n        assertEquals(\"Test1_0.txt\", result);\n\n        result = parser.getFilename(adapter, \"Test2_${DATE:yyMMdd}.txt\");\n        assertEquals(16, result.length());\n\n        result = parser.getFilename(adapter, \"Test3_${DATE}.txt\");\n        assertEquals(31, result.length());\n\n        result = parser.getFilename(adapter, \"Test4_${SYSTIME}.txt\");\n        assertFalse(result.equals(\"Test4_${SYSTIME}.txt\"));\n\n        result = parser.getFilename(adapter, \"Test5_${UUID}.txt\");\n        assertFalse(result.equals(\"Test5_${UUID}.txt\"));\n\n        result = parser.getFilename(adapter, \"Test6_${COUNT}.txt\");\n        assertEquals(\"Test6_1.txt\", result);\n\n        result = parser.getFilename(adapter, \"Test7_${ORIGINALNAME}.txt\");\n        assertEquals(\"Test7_blah.txt\", result);\n\n        result = parser.getFilename(adapter, \"Test8_${foo}.txt\");\n        assertEquals(\"Test8_bar.txt\", result);\n\n        result = parser.getFilename(adapter, \"Test9_${xxx}.txt\");\n        assertEquals(\"Test9_${xxx}.txt\", result);\n\n    }","id":61888,"modified_method":"public void testAntStyleParsing()\n    {\n        String result = parser.getFilename(adapter, \"Test1_${COUNT}.txt\");\n        assertEquals(\"Test1_0.txt\", result);\n\n        result = parser.getFilename(adapter, \"Test2_${DATE:yyMMdd}.txt\");\n        assertEquals(16, result.length());\n\n        result = parser.getFilename(adapter, \"Test3_${DATE}.txt\");\n        assertEquals(31, result.length());\n\n        result = parser.getFilename(adapter, \"Test4_${SYSTIME}.txt\");\n        assertFalse(result.equals(\"Test4_${SYSTIME}.txt\"));\n\n        result = parser.getFilename(adapter, \"Test5_${UUID}.txt\");\n        assertFalse(result.equals(\"Test5_${UUID}.txt\"));\n\n        result = parser.getFilename(adapter, \"Test6_${COUNT}.txt\");\n        assertEquals(\"Test6_1.txt\", result);\n\n        result = parser.getFilename(adapter, \"Test7_${ORIGINALNAME}.txt\");\n        assertEquals(\"Test7_originalName.txt\", result);\n\n        result = parser.getFilename(adapter, \"Test8_${foo}.txt\");\n        assertEquals(\"Test8_bar.txt\", result);\n\n        result = parser.getFilename(adapter, \"Test9_${xxx}.txt\");\n        assertEquals(\"Test9_${xxx}.txt\", result);\n\n    }","commit_id":"ba2375ddd42c8e3be84abe679c90e77253717357","url":"https://github.com/mulesoft/mule"},{"original_method":"/**\n\t * Return the filename of the given multipart part. This value will be used for the\n\t * {@code Content-Disposition} header.\n\t * <p>The default implementation returns {@link Resource#getFilename()} if the part is a\n\t * {@code Resource}, and {@code null} in other cases. Can be overridden in subclasses.\n\t * @param part the part to determine the file name for\n\t * @return the filename, or {@code null} if not known\n\t */\n\tprotected String getFilename(Object part) {\n\t\tif (part instanceof Resource) {\n\t\t\tResource resource = (Resource) part;\n\t\t\treturn resource.getFilename();\n\t\t}\n\t\telse {\n\t\t\treturn null;\n\t\t}\n\t}","id":61889,"modified_method":"/**\n\t * Return the filename of the given multipart part. This value will be used for the\n\t * {@code Content-Disposition} header.\n\t * <p>The default implementation returns {@link Resource#getFilename()} if the part is a\n\t * {@code Resource}, and {@code null} in other cases. Can be overridden in subclasses.\n\t * @param part the part to determine the file name for\n\t * @return the filename, or {@code null} if not known\n\t */\n\tprotected String getFilename(Object part) {\n\t\tif (part instanceof Resource) {\n\t\t\tResource resource = (Resource) part;\n\t\t\tString filename = resource.getFilename();\n\t\t\tif (multipartCharset != null) {\n\t\t\t\ttry {\n\t\t\t\t\tfilename = MimeUtility.encodeText(filename, multipartCharset.name(), null);\n\t\t\t\t}\n\t\t\t\tcatch (UnsupportedEncodingException e) {\n\t\t\t\t\t// should not happen\n\t\t\t\t\tthrow new IllegalStateException(e);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn filename;\n\t\t}\n\t\telse {\n\t\t\treturn null;\n\t\t}\n\t}","commit_id":"9be0cf21e5d3537d2415fea5eaea152e7407d45b","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Test\n\tpublic void writeMultipart() throws Exception {\n\t\tMultiValueMap<String, Object> parts = new LinkedMultiValueMap<String, Object>();\n\t\tparts.add(\"name 1\", \"value 1\");\n\t\tparts.add(\"name 2\", \"value 2+1\");\n\t\tparts.add(\"name 2\", \"value 2+2\");\n\t\tparts.add(\"name 3\", null);\n\n\t\tResource logo = new ClassPathResource(\"/org/springframework/http/converter/logo.jpg\");\n\t\tparts.add(\"logo\", logo);\n\t\tSource xml = new StreamSource(new StringReader(\"<root><child/><\/root>\"));\n\t\tHttpHeaders entityHeaders = new HttpHeaders();\n\t\tentityHeaders.setContentType(MediaType.TEXT_XML);\n\t\tHttpEntity<Source> entity = new HttpEntity<Source>(xml, entityHeaders);\n\t\tparts.add(\"xml\", entity);\n\n\t\tMockHttpOutputMessage outputMessage = new MockHttpOutputMessage();\n\t\tconverter.write(parts, MediaType.MULTIPART_FORM_DATA, outputMessage);\n\n\t\tfinal MediaType contentType = outputMessage.getHeaders().getContentType();\n\t\tassertNotNull(\"No boundary found\", contentType.getParameter(\"boundary\"));\n\n\t\t// see if Commons FileUpload can read what we wrote\n\t\tFileItemFactory fileItemFactory = new DiskFileItemFactory();\n\t\tFileUpload fileUpload = new FileUpload(fileItemFactory);\n\t\tList<FileItem> items = fileUpload.parseRequest(new MockHttpOutputMessageRequestContext(outputMessage));\n\t\tassertEquals(5, items.size());\n\t\tFileItem item = items.get(0);\n\t\tassertTrue(item.isFormField());\n\t\tassertEquals(\"name 1\", item.getFieldName());\n\t\tassertEquals(\"value 1\", item.getString());\n\n\t\titem = items.get(1);\n\t\tassertTrue(item.isFormField());\n\t\tassertEquals(\"name 2\", item.getFieldName());\n\t\tassertEquals(\"value 2+1\", item.getString());\n\n\t\titem = items.get(2);\n\t\tassertTrue(item.isFormField());\n\t\tassertEquals(\"name 2\", item.getFieldName());\n\t\tassertEquals(\"value 2+2\", item.getString());\n\n\t\titem = items.get(3);\n\t\tassertFalse(item.isFormField());\n\t\tassertEquals(\"logo\", item.getFieldName());\n\t\tassertEquals(\"logo.jpg\", item.getName());\n\t\tassertEquals(\"image/jpeg\", item.getContentType());\n\t\tassertEquals(logo.getFile().length(), item.getSize());\n\n\t\titem = items.get(4);\n\t\tassertEquals(\"xml\", item.getFieldName());\n\t\tassertEquals(\"text/xml\", item.getContentType());\n\t\tverify(outputMessage.getBody(), never()).close();\n\t}","id":61890,"modified_method":"@Test\n\tpublic void writeMultipart() throws Exception {\n\t\tMultiValueMap<String, Object> parts = new LinkedMultiValueMap<String, Object>();\n\t\tparts.add(\"name 1\", \"value 1\");\n\t\tparts.add(\"name 2\", \"value 2+1\");\n\t\tparts.add(\"name 2\", \"value 2+2\");\n\t\tparts.add(\"name 3\", null);\n\n\t\tResource logo = new ClassPathResource(\"/org/springframework/http/converter/logo.jpg\");\n\t\tparts.add(\"logo\", logo);\n\n\t\t// SPR-12108\n\n\t\tResource utf8 = new ClassPathResource(\"/org/springframework/http/converter/logo.jpg\") {\n\t\t\t@Override\n\t\t\tpublic String getFilename() {\n\t\t\t\treturn \"Hall\\u00F6le.jpg\";\n\t\t\t}\n\t\t};\n\t\tparts.add(\"utf8\", utf8);\n\n\t\tSource xml = new StreamSource(new StringReader(\"<root><child/><\/root>\"));\n\t\tHttpHeaders entityHeaders = new HttpHeaders();\n\t\tentityHeaders.setContentType(MediaType.TEXT_XML);\n\t\tHttpEntity<Source> entity = new HttpEntity<Source>(xml, entityHeaders);\n\t\tparts.add(\"xml\", entity);\n\n\t\tMockHttpOutputMessage outputMessage = new MockHttpOutputMessage();\n\t\tconverter.setMultipartCharset(Charset.forName(\"UTF-8\"));\n\t\tconverter.write(parts, MediaType.MULTIPART_FORM_DATA, outputMessage);\n\n\t\tfinal MediaType contentType = outputMessage.getHeaders().getContentType();\n\t\tassertNotNull(\"No boundary found\", contentType.getParameter(\"boundary\"));\n\n\t\t// see if Commons FileUpload can read what we wrote\n\t\tFileItemFactory fileItemFactory = new DiskFileItemFactory();\n\t\tFileUpload fileUpload = new FileUpload(fileItemFactory);\n\t\tList<FileItem> items = fileUpload.parseRequest(new MockHttpOutputMessageRequestContext(outputMessage));\n\t\tassertEquals(6, items.size());\n\t\tFileItem item = items.get(0);\n\t\tassertTrue(item.isFormField());\n\t\tassertEquals(\"name 1\", item.getFieldName());\n\t\tassertEquals(\"value 1\", item.getString());\n\n\t\titem = items.get(1);\n\t\tassertTrue(item.isFormField());\n\t\tassertEquals(\"name 2\", item.getFieldName());\n\t\tassertEquals(\"value 2+1\", item.getString());\n\n\t\titem = items.get(2);\n\t\tassertTrue(item.isFormField());\n\t\tassertEquals(\"name 2\", item.getFieldName());\n\t\tassertEquals(\"value 2+2\", item.getString());\n\n\t\titem = items.get(3);\n\t\tassertFalse(item.isFormField());\n\t\tassertEquals(\"logo\", item.getFieldName());\n\t\tassertEquals(\"logo.jpg\", item.getName());\n\t\tassertEquals(\"image/jpeg\", item.getContentType());\n\t\tassertEquals(logo.getFile().length(), item.getSize());\n\n\t\titem = items.get(4);\n\t\tassertFalse(item.isFormField());\n\t\tassertEquals(\"utf8\", item.getFieldName());\n\t\tassertEquals(\"Hall\\u00F6le.jpg\", item.getName());\n\t\tassertEquals(\"image/jpeg\", item.getContentType());\n\t\tassertEquals(logo.getFile().length(), item.getSize());\n\n\t\titem = items.get(5);\n\t\tassertEquals(\"xml\", item.getFieldName());\n\t\tassertEquals(\"text/xml\", item.getContentType());\n\t\tverify(outputMessage.getBody(), never()).close();\n\t}","commit_id":"9be0cf21e5d3537d2415fea5eaea152e7407d45b","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"/**\n   * Checks whether the plan of a cascading evictor is valid.\n   *\n   * A cascading evictor will try to free space by recursively moving blocks to next 1 tier and\n   * evict blocks only in the bottom tier.\n   *\n   * The plan is invalid when the requested space can not be satisfied or lower level of tiers do\n   * not have enough space to hold blocks moved from higher level of tiers.\n   *\n   * @param bytesToBeAvailable requested bytes to be available after eviction\n   * @param plan the eviction plan, should not be empty\n   * @param metaManager the meta data manager\n   * @return true if the above requirements are satisfied, otherwise false\n   * @throws NotFoundException if a block for which metadata cannot be found is encountered\n   */\n  // TODO: unit test this method\n  public static boolean validCascadingPlan(long bytesToBeAvailable, EvictionPlan plan,\n      BlockMetadataManager metaManager) throws NotFoundException {\n    // reassure the plan is feasible: enough free space to satisfy bytesToBeAvailable, and enough\n    // space in lower tier to move blocks in upper tier there\n\n    // Map from dir to a pair of bytes to be available in this dir and bytes to move into this dir\n    // after the plan taking action\n    Map<StorageDir, Pair<Long, Long>> spaceInfoInDir = new HashMap<StorageDir, Pair<Long, Long>>();\n\n    for (long blockId : plan.toEvict()) {\n      BlockMeta block = metaManager.getBlockMeta(blockId);\n      StorageDir dir = block.getParentDir();\n      if (spaceInfoInDir.containsKey(dir)) {\n        Pair<Long, Long> spaceInfo = spaceInfoInDir.get(dir);\n        spaceInfo.setFirst(spaceInfo.getFirst() + block.getBlockSize());\n      } else {\n        spaceInfoInDir.put(dir, new Pair<Long, Long>(\n            dir.getAvailableBytes() + block.getBlockSize(), 0L));\n      }\n    }\n\n    for (Pair<Long, BlockStoreLocation> move : plan.toMove()) {\n      long blockId = move.getFirst();\n      BlockMeta block = metaManager.getBlockMeta(blockId);\n      long blockSize = block.getBlockSize();\n      StorageDir srcDir = block.getParentDir();\n      StorageDir destDir = metaManager.getDir(move.getSecond());\n\n      if (spaceInfoInDir.containsKey(srcDir)) {\n        Pair<Long, Long> spaceInfo = spaceInfoInDir.get(srcDir);\n        spaceInfo.setFirst(spaceInfo.getFirst() + blockSize);\n      } else {\n        spaceInfoInDir\n            .put(srcDir, new Pair<Long, Long>(srcDir.getAvailableBytes() + blockSize, 0L));\n      }\n\n      if (spaceInfoInDir.containsKey(destDir)) {\n        Pair<Long, Long> spaceInfo = spaceInfoInDir.get(destDir);\n        spaceInfo.setSecond(spaceInfo.getSecond() + blockSize);\n      } else {\n        spaceInfoInDir.put(destDir, new Pair<Long, Long>(destDir.getAvailableBytes(), blockSize));\n      }\n    }\n\n    // the top tier among all tiers where blocks in the plan reside in\n    int topTierAlias = Integer.MAX_VALUE;\n    for (StorageDir dir : spaceInfoInDir.keySet()) {\n      topTierAlias = Math.min(topTierAlias, dir.getParentTier().getTierAlias());\n    }\n    long maxSpace = Long.MIN_VALUE; // maximum bytes to be available in a dir in the top tier\n    for (StorageDir dir : spaceInfoInDir.keySet()) {\n      if (dir.getParentTier().getTierAlias() == topTierAlias) {\n        Pair<Long, Long> space = spaceInfoInDir.get(dir);\n        maxSpace = Math.max(maxSpace, space.getFirst() - space.getSecond());\n      }\n    }\n    if (maxSpace < bytesToBeAvailable) {\n      // plan is invalid because requested space can not be satisfied in the top tier\n      return false;\n    }\n\n    for (StorageDir dir : spaceInfoInDir.keySet()) {\n      Pair<Long, Long> spaceInfo = spaceInfoInDir.get(dir);\n      if (spaceInfo.getFirst() < spaceInfo.getSecond()) {\n        // plan is invalid because there is not enough space in this dir to hold the blocks waiting\n        // to be moved into this dir\n        return false;\n      }\n    }\n\n    return true;\n  }","id":61891,"modified_method":"/**\n   * Checks whether the plan of a cascading evictor is valid.\n   *\n   * A cascading evictor will try to free space by recursively moving blocks to next 1 tier and\n   * evict blocks only in the bottom tier.\n   *\n   * The plan is invalid when the requested space can not be satisfied or lower level of tiers do\n   * not have enough space to hold blocks moved from higher level of tiers.\n   *\n   * @param bytesToBeAvailable requested bytes to be available after eviction\n   * @param plan the eviction plan, should not be empty\n   * @param metaManager the meta data manager\n   * @return true if the above requirements are satisfied, otherwise false\n   * @throws NotFoundException if a block for which metadata cannot be found is encountered\n   */\n  // TODO: unit test this method\n  public static boolean validCascadingPlan(long bytesToBeAvailable, EvictionPlan plan,\n      BlockMetadataManager metaManager) throws NotFoundException {\n    // reassure the plan is feasible: enough free space to satisfy bytesToBeAvailable, and enough\n    // space in lower tier to move blocks in upper tier there\n\n    // Map from dir to a pair of bytes to be available in this dir and bytes to move into this dir\n    // after the plan taking action\n    Map<StorageDir, Pair<Long, Long>> spaceInfoInDir = new HashMap<StorageDir, Pair<Long, Long>>();\n\n    for (Pair<Long, BlockStoreLocation> blockInfo : plan.toEvict()) {\n      BlockMeta block = metaManager.getBlockMeta(blockInfo.getFirst());\n      StorageDir dir = block.getParentDir();\n      if (spaceInfoInDir.containsKey(dir)) {\n        Pair<Long, Long> spaceInfo = spaceInfoInDir.get(dir);\n        spaceInfo.setFirst(spaceInfo.getFirst() + block.getBlockSize());\n      } else {\n        spaceInfoInDir.put(dir, new Pair<Long, Long>(\n            dir.getAvailableBytes() + block.getBlockSize(), 0L));\n      }\n    }\n\n    for (Pair<Long, Pair<BlockStoreLocation, BlockStoreLocation>> move : plan.toMove()) {\n      long blockId = move.getFirst();\n      BlockMeta block = metaManager.getBlockMeta(blockId);\n      long blockSize = block.getBlockSize();\n      StorageDir srcDir = block.getParentDir();\n      StorageDir destDir = metaManager.getDir(move.getSecond().getSecond());\n\n      if (spaceInfoInDir.containsKey(srcDir)) {\n        Pair<Long, Long> spaceInfo = spaceInfoInDir.get(srcDir);\n        spaceInfo.setFirst(spaceInfo.getFirst() + blockSize);\n      } else {\n        spaceInfoInDir\n            .put(srcDir, new Pair<Long, Long>(srcDir.getAvailableBytes() + blockSize, 0L));\n      }\n\n      if (spaceInfoInDir.containsKey(destDir)) {\n        Pair<Long, Long> spaceInfo = spaceInfoInDir.get(destDir);\n        spaceInfo.setSecond(spaceInfo.getSecond() + blockSize);\n      } else {\n        spaceInfoInDir.put(destDir, new Pair<Long, Long>(destDir.getAvailableBytes(), blockSize));\n      }\n    }\n\n    // the top tier among all tiers where blocks in the plan reside in\n    int topTierAlias = Integer.MAX_VALUE;\n    for (StorageDir dir : spaceInfoInDir.keySet()) {\n      topTierAlias = Math.min(topTierAlias, dir.getParentTier().getTierAlias());\n    }\n    long maxSpace = Long.MIN_VALUE; // maximum bytes to be available in a dir in the top tier\n    for (StorageDir dir : spaceInfoInDir.keySet()) {\n      if (dir.getParentTier().getTierAlias() == topTierAlias) {\n        Pair<Long, Long> space = spaceInfoInDir.get(dir);\n        maxSpace = Math.max(maxSpace, space.getFirst() - space.getSecond());\n      }\n    }\n    if (maxSpace < bytesToBeAvailable) {\n      // plan is invalid because requested space can not be satisfied in the top tier\n      return false;\n    }\n\n    for (StorageDir dir : spaceInfoInDir.keySet()) {\n      Pair<Long, Long> spaceInfo = spaceInfoInDir.get(dir);\n      if (spaceInfo.getFirst() < spaceInfo.getSecond()) {\n        // plan is invalid because there is not enough space in this dir to hold the blocks waiting\n        // to be moved into this dir\n        return false;\n      }\n    }\n\n    return true;\n  }","commit_id":"e76a2675dfbb697f1fa46aba08862c756fe5cba3","url":"https://github.com/amplab/tachyon"},{"original_method":"/**\n   * Whether the plan can satisfy the requested free bytes to be available, assume all blocks in the\n   * plan are in the same dir.\n   *\n   * @param bytesToBeAvailable the requested bytes to be available\n   * @param plan the eviction plan, should not be null\n   * @param meta the metadata manager\n   * @return true if the request can be satisfied otherwise false\n   * @throws tachyon.exception.NotFoundException if can not get meta data of a block\n   */\n  public static boolean requestSpaceSatisfied(long bytesToBeAvailable, EvictionPlan plan,\n      BlockMetadataManager meta) throws NotFoundException {\n    Preconditions.checkNotNull(plan);\n\n    List<Long> blockIds = new ArrayList<Long>();\n    blockIds.addAll(plan.toEvict());\n    for (Pair<Long, BlockStoreLocation> move : plan.toMove()) {\n      blockIds.add(move.getFirst());\n    }\n\n    long evictedOrMovedBytes = 0;\n    for (long blockId : blockIds) {\n      evictedOrMovedBytes += meta.getBlockMeta(blockId).getBlockSize();\n    }\n\n    BlockStoreLocation location =\n        meta.getBlockMeta(blockIds.get(0)).getParentDir().toBlockStoreLocation();\n    return (meta.getAvailableBytes(location) + evictedOrMovedBytes) >= bytesToBeAvailable;\n  }","id":61892,"modified_method":"/**\n   * Whether the plan can satisfy the requested free bytes to be available, assume all blocks in the\n   * plan are in the same dir.\n   *\n   * @param bytesToBeAvailable the requested bytes to be available\n   * @param plan the eviction plan, should not be null\n   * @param meta the metadata manager\n   * @return true if the request can be satisfied otherwise false\n   * @throws tachyon.exception.NotFoundException if can not get meta data of a block\n   */\n  public static boolean requestSpaceSatisfied(long bytesToBeAvailable, EvictionPlan plan,\n      BlockMetadataManager meta) throws NotFoundException {\n    Preconditions.checkNotNull(plan);\n\n    List<Long> blockIds = new ArrayList<Long>();\n    for (Pair<Long, BlockStoreLocation> evict : plan.toEvict()) {\n      blockIds.add(evict.getFirst());\n    }\n    for (Pair<Long, Pair<BlockStoreLocation, BlockStoreLocation>> move : plan.toMove()) {\n      blockIds.add(move.getFirst());\n    }\n\n    long evictedOrMovedBytes = 0;\n    for (long blockId : blockIds) {\n      evictedOrMovedBytes += meta.getBlockMeta(blockId).getBlockSize();\n    }\n\n    BlockStoreLocation location =\n        meta.getBlockMeta(blockIds.get(0)).getParentDir().toBlockStoreLocation();\n    return (meta.getAvailableBytes(location) + evictedOrMovedBytes) >= bytesToBeAvailable;\n  }","commit_id":"e76a2675dfbb697f1fa46aba08862c756fe5cba3","url":"https://github.com/amplab/tachyon"},{"original_method":"/**\n   * Whether blocks in the EvictionPlan are in the same StorageDir.\n   *\n   * @param plan the eviction plan\n   * @param meta the meta data manager\n   * @return true if blocks are in the same dir otherwise false\n   * @throws NotFoundException if fail to get meta data of a block\n   */\n  public static boolean blocksInTheSameDir(EvictionPlan plan, BlockMetadataManager meta)\n      throws NotFoundException {\n    Preconditions.checkNotNull(plan);\n\n    StorageDir dir = null;\n    List<Long> blockIds = new ArrayList<Long>();\n    blockIds.addAll(plan.toEvict());\n    for (Pair<Long, BlockStoreLocation> move : plan.toMove()) {\n      blockIds.add(move.getFirst());\n    }\n\n    for (long blockId : blockIds) {\n      StorageDir blockDir = meta.getBlockMeta(blockId).getParentDir();\n      if (dir == null) {\n        dir = blockDir;\n      } else if (dir != blockDir) {\n        return false;\n      }\n    }\n    return true;\n  }","id":61893,"modified_method":"/**\n   * Whether blocks in the EvictionPlan are in the same StorageDir.\n   *\n   * @param plan the eviction plan\n   * @param meta the meta data manager\n   * @return true if blocks are in the same dir otherwise false\n   * @throws NotFoundException if fail to get meta data of a block\n   */\n  public static boolean blocksInTheSameDir(EvictionPlan plan, BlockMetadataManager meta)\n      throws NotFoundException {\n    Preconditions.checkNotNull(plan);\n\n    StorageDir dir = null;\n    List<Long> blockIds = new ArrayList<Long>();\n    for (Pair<Long, BlockStoreLocation> evict : plan.toEvict()) {\n      blockIds.add(evict.getFirst());\n    }\n    for (Pair<Long, Pair<BlockStoreLocation, BlockStoreLocation>> move : plan.toMove()) {\n      blockIds.add(move.getFirst());\n    }\n\n    for (long blockId : blockIds) {\n      StorageDir blockDir = meta.getBlockMeta(blockId).getParentDir();\n      if (dir == null) {\n        dir = blockDir;\n      } else if (dir != blockDir) {\n        return false;\n      }\n    }\n    return true;\n  }","commit_id":"e76a2675dfbb697f1fa46aba08862c756fe5cba3","url":"https://github.com/amplab/tachyon"},{"original_method":"@Test\n  public void cascadingEvictionTest2() throws Exception {\n    // Two tiers, the second tier has more dirs than the first tier and each dir in the second tier\n    // has more space than any dir in the first tier. Fill in all dirs and request space from the\n    // first tier, blocks should be moved from the first to the second tier, and some blocks in the\n    // second tier should be evicted to hold blocks moved from the first tier.\n    long blockId = BLOCK_ID;\n    long totalBlocks = 0;\n    for (int tierLevel : TieredBlockStoreTestUtils.TIER_LEVEL) {\n      totalBlocks += TieredBlockStoreTestUtils.TIER_CAPACITY_BYTES[tierLevel].length;\n    }\n    Map<Long, Double> blockIdToCRF = new HashMap<Long, Double>();\n    for (int tierLevel : TieredBlockStoreTestUtils.TIER_LEVEL) {\n      long[] tierCapacity = TieredBlockStoreTestUtils.TIER_CAPACITY_BYTES[tierLevel];\n      for (int dirIdx = 0; dirIdx < tierCapacity.length; dirIdx ++) {\n        cache(SESSION_ID, blockId, tierCapacity[dirIdx], tierLevel, dirIdx);\n        // update CRF of blocks when blocks are committed\n        blockIdToCRF.put(blockId, calculateAccessWeight(totalBlocks - 1 - (blockId - BLOCK_ID)));\n        blockId ++;\n      }\n    }\n\n    // access blocks in the order: 10, 10, 11, 10, 11, 12, 10, 11, 12, 13, 10, 11, 12, 13, 14\n    // Update CRF of all blocks during each access\n    for (int i = 0; i < totalBlocks; i ++) {\n      for (int j = 0; j <= i; j ++) {\n        access(BLOCK_ID + j);\n        for (int k = 0; k < totalBlocks; k ++) {\n          if (k == j) {\n            blockIdToCRF.put(BLOCK_ID + k,\n                blockIdToCRF.get(BLOCK_ID + k) * calculateAccessWeight(1L) + 1.0);\n          } else {\n            blockIdToCRF.put(BLOCK_ID + k,\n                blockIdToCRF.get(BLOCK_ID + k) * calculateAccessWeight(1L));\n          }\n        }\n      }\n    }\n\n    List<Map.Entry<Long, Double>> blockCRF = getSortedCRF(blockIdToCRF);\n    // sorted blocks in the first tier\n    List<Long> blocksInFirstTier = new ArrayList<Long>();\n    // sorted blocks in the second tier\n    List<Long> blocksInSecondTier = new ArrayList<Long>();\n    for (int i = 0; i < blockCRF.size(); i ++) {\n      long block = blockCRF.get(i).getKey();\n      if (block - BLOCK_ID < TieredBlockStoreTestUtils.TIER_CAPACITY_BYTES[0].length) {\n        blocksInFirstTier.add(block);\n      } else if (block - BLOCK_ID < TieredBlockStoreTestUtils.TIER_CAPACITY_BYTES[0].length\n          + TieredBlockStoreTestUtils.TIER_CAPACITY_BYTES[1].length) {\n        blocksInSecondTier.add(block);\n      }\n    }\n    BlockStoreLocation anyDirInFirstTier =\n        BlockStoreLocation.anyDirInTier(TieredBlockStoreTestUtils.TIER_LEVEL[0] + 1);\n    int nDirInFirstTier = TieredBlockStoreTestUtils.TIER_CAPACITY_BYTES[0].length;\n    long smallestCapacity = TieredBlockStoreTestUtils.TIER_CAPACITY_BYTES[0][0];\n    for (int i = 0; i < nDirInFirstTier; i ++) {\n      EvictionPlan plan =\n          mEvictor.freeSpaceWithView(smallestCapacity, anyDirInFirstTier, mManagerView);\n      Assert.assertTrue(EvictorTestUtils.validCascadingPlan(smallestCapacity, plan, mMetaManager));\n      // block with minimum CRF in the first tier needs to be moved to the second tier\n      Assert.assertEquals(1, plan.toMove().size());\n      long blockIdMovedInFirstTier = plan.toMove().get(0).getFirst();\n      long objectBlockIdInFirstTier = blocksInFirstTier.get(i);\n      Assert.assertEquals(objectBlockIdInFirstTier, blockIdMovedInFirstTier);\n      // cached block with minimum CRF in the second tier will be evicted to hold blocks moved\n      // from first tier\n      Assert.assertEquals(1, plan.toEvict().size());\n      long blockIdEvictedInSecondTier = plan.toEvict().get(0);\n      long objectBlockIdInSecondTier = blocksInSecondTier.get(i);\n      Assert.assertEquals(objectBlockIdInSecondTier, blockIdEvictedInSecondTier);\n      // update CRF of the chosen blocks in case that they are chosen again\n      for (int j = 0; j < totalBlocks; j ++) {\n        access(blockIdMovedInFirstTier);\n      }\n      for (int j = 0; j < totalBlocks; j ++) {\n        access(blockIdEvictedInSecondTier);\n      }\n    }\n  }","id":61894,"modified_method":"@Test\n  public void cascadingEvictionTest2() throws Exception {\n    // Two tiers, the second tier has more dirs than the first tier and each dir in the second tier\n    // has more space than any dir in the first tier. Fill in all dirs and request space from the\n    // first tier, blocks should be moved from the first to the second tier, and some blocks in the\n    // second tier should be evicted to hold blocks moved from the first tier.\n    long blockId = BLOCK_ID;\n    long totalBlocks = 0;\n    for (int tierLevel : TieredBlockStoreTestUtils.TIER_LEVEL) {\n      totalBlocks += TieredBlockStoreTestUtils.TIER_CAPACITY_BYTES[tierLevel].length;\n    }\n    Map<Long, Double> blockIdToCRF = new HashMap<Long, Double>();\n    for (int tierLevel : TieredBlockStoreTestUtils.TIER_LEVEL) {\n      long[] tierCapacity = TieredBlockStoreTestUtils.TIER_CAPACITY_BYTES[tierLevel];\n      for (int dirIdx = 0; dirIdx < tierCapacity.length; dirIdx ++) {\n        cache(SESSION_ID, blockId, tierCapacity[dirIdx], tierLevel, dirIdx);\n        // update CRF of blocks when blocks are committed\n        blockIdToCRF.put(blockId, calculateAccessWeight(totalBlocks - 1 - (blockId - BLOCK_ID)));\n        blockId ++;\n      }\n    }\n\n    // access blocks in the order: 10, 10, 11, 10, 11, 12, 10, 11, 12, 13, 10, 11, 12, 13, 14\n    // Update CRF of all blocks during each access\n    for (int i = 0; i < totalBlocks; i ++) {\n      for (int j = 0; j <= i; j ++) {\n        access(BLOCK_ID + j);\n        for (int k = 0; k < totalBlocks; k ++) {\n          if (k == j) {\n            blockIdToCRF.put(BLOCK_ID + k,\n                blockIdToCRF.get(BLOCK_ID + k) * calculateAccessWeight(1L) + 1.0);\n          } else {\n            blockIdToCRF.put(BLOCK_ID + k,\n                blockIdToCRF.get(BLOCK_ID + k) * calculateAccessWeight(1L));\n          }\n        }\n      }\n    }\n\n    List<Map.Entry<Long, Double>> blockCRF = getSortedCRF(blockIdToCRF);\n    // sorted blocks in the first tier\n    List<Long> blocksInFirstTier = new ArrayList<Long>();\n    // sorted blocks in the second tier\n    List<Long> blocksInSecondTier = new ArrayList<Long>();\n    for (int i = 0; i < blockCRF.size(); i ++) {\n      long block = blockCRF.get(i).getKey();\n      if (block - BLOCK_ID < TieredBlockStoreTestUtils.TIER_CAPACITY_BYTES[0].length) {\n        blocksInFirstTier.add(block);\n      } else if (block - BLOCK_ID < TieredBlockStoreTestUtils.TIER_CAPACITY_BYTES[0].length\n          + TieredBlockStoreTestUtils.TIER_CAPACITY_BYTES[1].length) {\n        blocksInSecondTier.add(block);\n      }\n    }\n    BlockStoreLocation anyDirInFirstTier =\n        BlockStoreLocation.anyDirInTier(TieredBlockStoreTestUtils.TIER_LEVEL[0] + 1);\n    int nDirInFirstTier = TieredBlockStoreTestUtils.TIER_CAPACITY_BYTES[0].length;\n    long smallestCapacity = TieredBlockStoreTestUtils.TIER_CAPACITY_BYTES[0][0];\n    for (int i = 0; i < nDirInFirstTier; i ++) {\n      EvictionPlan plan =\n          mEvictor.freeSpaceWithView(smallestCapacity, anyDirInFirstTier, mManagerView);\n      Assert.assertTrue(EvictorTestUtils.validCascadingPlan(smallestCapacity, plan, mMetaManager));\n      // block with minimum CRF in the first tier needs to be moved to the second tier\n      Assert.assertEquals(1, plan.toMove().size());\n      long blockIdMovedInFirstTier = plan.toMove().get(0).getFirst();\n      long objectBlockIdInFirstTier = blocksInFirstTier.get(i);\n      Assert.assertEquals(objectBlockIdInFirstTier, blockIdMovedInFirstTier);\n      // cached block with minimum CRF in the second tier will be evicted to hold blocks moved\n      // from first tier\n      Assert.assertEquals(1, plan.toEvict().size());\n      long blockIdEvictedInSecondTier = plan.toEvict().get(0).getFirst();\n      long objectBlockIdInSecondTier = blocksInSecondTier.get(i);\n      Assert.assertEquals(objectBlockIdInSecondTier, blockIdEvictedInSecondTier);\n      // update CRF of the chosen blocks in case that they are chosen again\n      for (int j = 0; j < totalBlocks; j ++) {\n        access(blockIdMovedInFirstTier);\n      }\n      for (int j = 0; j < totalBlocks; j ++) {\n        access(blockIdEvictedInSecondTier);\n      }\n    }\n  }","commit_id":"e76a2675dfbb697f1fa46aba08862c756fe5cba3","url":"https://github.com/amplab/tachyon"},{"original_method":"@Test\n  public void evictInBottomTierTest() throws Exception {\n    int bottomTierLevel = TieredBlockStoreTestUtils\n        .TIER_LEVEL[TieredBlockStoreTestUtils.TIER_LEVEL.length - 1];\n    Map<Long, Double> blockIdToCRF = new HashMap<Long, Double>();\n    // capacity increases with index\n    long[] bottomTierDirCapacity = TieredBlockStoreTestUtils.TIER_CAPACITY_BYTES[bottomTierLevel];\n    int nDir = bottomTierDirCapacity.length;\n    // fill in dirs from larger to smaller capacity with blockId equal to BLOCK_ID plus dir index\n    for (int i = 0; i < nDir; i ++) {\n      cache(SESSION_ID, BLOCK_ID + i, bottomTierDirCapacity[i], bottomTierLevel, i);\n      // update CRF of blocks when blocks are committed\n      blockIdToCRF.put(BLOCK_ID + i, calculateAccessWeight(nDir - 1 - i));\n    }\n    // access blocks in the order: 10, 10, 11, 10, 11, 12. Update CRF of all blocks\n    // during each access\n    for (int i = 0; i < nDir; i ++) {\n      for (int j = 0; j <= i; j ++) {\n        access(BLOCK_ID + j);\n        for (int k = 0; k < nDir; k ++) {\n          if (k == j) {\n            blockIdToCRF.put(BLOCK_ID + k,\n                blockIdToCRF.get(BLOCK_ID + k) * calculateAccessWeight(1L) + 1.0);\n          } else {\n            blockIdToCRF.put(BLOCK_ID + k,\n                blockIdToCRF.get(BLOCK_ID + k) * calculateAccessWeight(1L));\n          }\n        }\n      }\n    }\n    // sort blocks in ascending order of CRF\n    List<Map.Entry<Long, Double>> blockCRF = getSortedCRF(blockIdToCRF);\n    BlockStoreLocation anyDirInBottomTier = BlockStoreLocation.anyDirInTier(bottomTierLevel + 1);\n    // request smallest capacity and update access time on the evicted block for nDir times, the dir\n    // to evict blocks from should be in the same order as sorted blockCRF\n    for (int i = 0; i < nDir; i ++) {\n      EvictionPlan plan =\n          mEvictor.freeSpaceWithView(bottomTierDirCapacity[0], anyDirInBottomTier, mManagerView);\n      Assert.assertNotNull(plan);\n      Assert.assertTrue(plan.toMove().isEmpty());\n      Assert.assertEquals(1, plan.toEvict().size());\n      long toEvictBlockId = plan.toEvict().get(0);\n      long objectBlockId = blockCRF.get(i).getKey();\n      Assert.assertEquals(objectBlockId + \" \" + toEvictBlockId, objectBlockId, toEvictBlockId);\n      // update CRF of the chosen block in case that it is chosen again\n      for (int j = 0; j < nDir; j ++) {\n        access(toEvictBlockId);\n      }\n    }\n  }","id":61895,"modified_method":"@Test\n  public void evictInBottomTierTest() throws Exception {\n    int bottomTierLevel = TieredBlockStoreTestUtils\n        .TIER_LEVEL[TieredBlockStoreTestUtils.TIER_LEVEL.length - 1];\n    Map<Long, Double> blockIdToCRF = new HashMap<Long, Double>();\n    // capacity increases with index\n    long[] bottomTierDirCapacity = TieredBlockStoreTestUtils.TIER_CAPACITY_BYTES[bottomTierLevel];\n    int nDir = bottomTierDirCapacity.length;\n    // fill in dirs from larger to smaller capacity with blockId equal to BLOCK_ID plus dir index\n    for (int i = 0; i < nDir; i ++) {\n      cache(SESSION_ID, BLOCK_ID + i, bottomTierDirCapacity[i], bottomTierLevel, i);\n      // update CRF of blocks when blocks are committed\n      blockIdToCRF.put(BLOCK_ID + i, calculateAccessWeight(nDir - 1 - i));\n    }\n    // access blocks in the order: 10, 10, 11, 10, 11, 12. Update CRF of all blocks\n    // during each access\n    for (int i = 0; i < nDir; i ++) {\n      for (int j = 0; j <= i; j ++) {\n        access(BLOCK_ID + j);\n        for (int k = 0; k < nDir; k ++) {\n          if (k == j) {\n            blockIdToCRF.put(BLOCK_ID + k,\n                blockIdToCRF.get(BLOCK_ID + k) * calculateAccessWeight(1L) + 1.0);\n          } else {\n            blockIdToCRF.put(BLOCK_ID + k,\n                blockIdToCRF.get(BLOCK_ID + k) * calculateAccessWeight(1L));\n          }\n        }\n      }\n    }\n    // sort blocks in ascending order of CRF\n    List<Map.Entry<Long, Double>> blockCRF = getSortedCRF(blockIdToCRF);\n    BlockStoreLocation anyDirInBottomTier = BlockStoreLocation.anyDirInTier(bottomTierLevel + 1);\n    // request smallest capacity and update access time on the evicted block for nDir times, the dir\n    // to evict blocks from should be in the same order as sorted blockCRF\n    for (int i = 0; i < nDir; i ++) {\n      EvictionPlan plan =\n          mEvictor.freeSpaceWithView(bottomTierDirCapacity[0], anyDirInBottomTier, mManagerView);\n      Assert.assertNotNull(plan);\n      Assert.assertTrue(plan.toMove().isEmpty());\n      Assert.assertEquals(1, plan.toEvict().size());\n      long toEvictBlockId = plan.toEvict().get(0).getFirst();\n      long objectBlockId = blockCRF.get(i).getKey();\n      Assert.assertEquals(objectBlockId + \" \" + toEvictBlockId, objectBlockId, toEvictBlockId);\n      // update CRF of the chosen block in case that it is chosen again\n      for (int j = 0; j < nDir; j ++) {\n        access(toEvictBlockId);\n      }\n    }\n  }","commit_id":"e76a2675dfbb697f1fa46aba08862c756fe5cba3","url":"https://github.com/amplab/tachyon"},{"original_method":"@Test\n  public void cascadingEvictionTest3() throws Exception {\n    // First Tier 2000, 3000\n    // Second Tier 10000, 20000, 30000\n    int blockSize = 1000;\n    cache(SESSION_ID, 101, blockSize, 0, 0);\n    cache(SESSION_ID, 102, blockSize, 0, 0);\n    cache(SESSION_ID, 103, blockSize, 0, 1);\n    cache(SESSION_ID, 104, blockSize, 0, 1);\n    cache(SESSION_ID, 105, blockSize, 0, 1);\n    cache(SESSION_ID, 106, 9500, 1, 2);\n\n    // After caching blocks, the free space looks like\n    // First Tier 0, 0\n    // Second Tier 10000, 20000, 200500\n    BlockStoreLocation anyDirInFirstTier = BlockStoreLocation.anyDirInTier(1);\n    BlockStoreLocation firstDirSecondTier = new BlockStoreLocation(2, 1, 0);\n    BlockStoreLocation secondDirSecondTier = new BlockStoreLocation(2, 1, 1);\n    BlockStoreLocation thirdDirSecondTier = new BlockStoreLocation(2, 1, 2);\n\n    EvictionPlan plan = mEvictor.freeSpaceWithView(blockSize * 2, anyDirInFirstTier, mManagerView);\n    Assert.assertNotNull(plan);\n    Assert.assertEquals(0, plan.toEvict().size());\n    Assert.assertEquals(2, plan.toMove().size());\n\n    // 2 blocks to move. The first one should be moved the 3rd dir as it has max free space.\n    long blockId = plan.toMove().get(0).getFirst();\n    Assert.assertEquals(101, blockId);\n    BlockStoreLocation dstLocation = plan.toMove().get(0).getSecond();\n    Assert.assertEquals(thirdDirSecondTier, dstLocation);\n\n    // The second one should be moved the 2nd dir because after the first move the second dir\n    // has the max free space.\n    blockId = plan.toMove().get(1).getFirst();\n    Assert.assertEquals(102, blockId);\n    dstLocation = plan.toMove().get(1).getSecond();\n    Assert.assertEquals(secondDirSecondTier, dstLocation);\n\n    cache(SESSION_ID, 107, 10000, 1, 0);\n    cache(SESSION_ID, 108, 20000, 1, 1);\n    cache(SESSION_ID, 109, 19000, 1, 2);\n    access(106);\n\n    // After caching more blocks, the free space looks like\n    // First Tier 0, 0\n    // Second Tier 0, 0, 1500\n    plan = mEvictor.freeSpaceWithView(blockSize * 3, anyDirInFirstTier, mManagerView);\n    Assert.assertNotNull(plan);\n    Assert.assertEquals(1, plan.toEvict().size());\n    Assert.assertEquals(3, plan.toMove().size());\n\n    blockId = plan.toEvict().get(0);\n    Assert.assertEquals(107, blockId);\n\n    // 3 blocks to move. The first one should be moved the 3rd dir as it has max free space.\n    blockId = plan.toMove().get(0).getFirst();\n    Assert.assertEquals(103, blockId);\n    dstLocation = plan.toMove().get(0).getSecond();\n    Assert.assertEquals(thirdDirSecondTier, dstLocation);\n\n    // The other two should be moved the 1st dir because the 1st dir has the max free space\n    // after evicting block 107.\n    blockId = plan.toMove().get(1).getFirst();\n    Assert.assertEquals(104, blockId);\n    dstLocation = plan.toMove().get(1).getSecond();\n    Assert.assertEquals(firstDirSecondTier, dstLocation);\n\n    blockId = plan.toMove().get(2).getFirst();\n    Assert.assertEquals(105, blockId);\n    dstLocation = plan.toMove().get(1).getSecond();\n    Assert.assertEquals(firstDirSecondTier, dstLocation);\n  }","id":61896,"modified_method":"@Test\n  public void cascadingEvictionTest3() throws Exception {\n    // First Tier 2000, 3000\n    // Second Tier 10000, 20000, 30000\n    int blockSize = 1000;\n    cache(SESSION_ID, 101, blockSize, 0, 0);\n    cache(SESSION_ID, 102, blockSize, 0, 0);\n    cache(SESSION_ID, 103, blockSize, 0, 1);\n    cache(SESSION_ID, 104, blockSize, 0, 1);\n    cache(SESSION_ID, 105, blockSize, 0, 1);\n    cache(SESSION_ID, 106, 9500, 1, 2);\n\n    // After caching blocks, the free space looks like\n    // First Tier 0, 0\n    // Second Tier 10000, 20000, 200500\n    BlockStoreLocation anyDirInFirstTier = BlockStoreLocation.anyDirInTier(1);\n    BlockStoreLocation firstDirSecondTier = new BlockStoreLocation(2, 1, 0);\n    BlockStoreLocation secondDirSecondTier = new BlockStoreLocation(2, 1, 1);\n    BlockStoreLocation thirdDirSecondTier = new BlockStoreLocation(2, 1, 2);\n\n    EvictionPlan plan = mEvictor.freeSpaceWithView(blockSize * 2, anyDirInFirstTier, mManagerView);\n    Assert.assertNotNull(plan);\n    Assert.assertEquals(0, plan.toEvict().size());\n    Assert.assertEquals(2, plan.toMove().size());\n\n    // 2 blocks to move. The first one should be moved the 3rd dir as it has max free space.\n    long blockId = plan.toMove().get(0).getFirst();\n    Assert.assertEquals(101, blockId);\n    BlockStoreLocation dstLocation = plan.toMove().get(0).getSecond().getSecond();\n    Assert.assertEquals(thirdDirSecondTier, dstLocation);\n\n    // The second one should be moved the 2nd dir because after the first move the second dir\n    // has the max free space.\n    blockId = plan.toMove().get(1).getFirst();\n    Assert.assertEquals(102, blockId);\n    dstLocation = plan.toMove().get(1).getSecond().getSecond();\n    Assert.assertEquals(secondDirSecondTier, dstLocation);\n\n    cache(SESSION_ID, 107, 10000, 1, 0);\n    cache(SESSION_ID, 108, 20000, 1, 1);\n    cache(SESSION_ID, 109, 19000, 1, 2);\n    access(106);\n\n    // After caching more blocks, the free space looks like\n    // First Tier 0, 0\n    // Second Tier 0, 0, 1500\n    plan = mEvictor.freeSpaceWithView(blockSize * 3, anyDirInFirstTier, mManagerView);\n    Assert.assertNotNull(plan);\n    Assert.assertEquals(1, plan.toEvict().size());\n    Assert.assertEquals(3, plan.toMove().size());\n\n    blockId = plan.toEvict().get(0).getFirst();\n    Assert.assertEquals(107, blockId);\n\n    // 3 blocks to move. The first one should be moved the 3rd dir as it has max free space.\n    blockId = plan.toMove().get(0).getFirst();\n    Assert.assertEquals(103, blockId);\n    dstLocation = plan.toMove().get(0).getSecond().getSecond();\n    Assert.assertEquals(thirdDirSecondTier, dstLocation);\n\n    // The other two should be moved the 1st dir because the 1st dir has the max free space\n    // after evicting block 107.\n    blockId = plan.toMove().get(1).getFirst();\n    Assert.assertEquals(104, blockId);\n    dstLocation = plan.toMove().get(1).getSecond().getSecond();\n    Assert.assertEquals(firstDirSecondTier, dstLocation);\n\n    blockId = plan.toMove().get(2).getFirst();\n    Assert.assertEquals(105, blockId);\n    dstLocation = plan.toMove().get(1).getSecond().getSecond();\n    Assert.assertEquals(firstDirSecondTier, dstLocation);\n  }","commit_id":"e76a2675dfbb697f1fa46aba08862c756fe5cba3","url":"https://github.com/amplab/tachyon"},{"original_method":"@Test\n  public void cascadingEvictionTest2() throws Exception {\n    // Two tiers, the second tier has more dirs than the first tier and each dir in the second tier\n    // has more space than any dir in the first tier. Fill in all dirs and request space from the\n    // first tier, blocks should be moved from the first to the second tier, and some blocks in the\n    // second tier should be evicted to hold blocks moved from the first tier.\n    long blockId = BLOCK_ID;\n    for (int tierLevel : TieredBlockStoreTestUtils.TIER_LEVEL) {\n      long[] tierCapacity = TieredBlockStoreTestUtils.TIER_CAPACITY_BYTES[tierLevel];\n      for (int dirIdx = 0; dirIdx < tierCapacity.length; dirIdx ++) {\n        cache(SESSION_ID, blockId, tierCapacity[dirIdx], tierLevel, dirIdx);\n        blockId ++;\n      }\n    }\n\n    BlockStoreLocation anyDirInFirstTier =\n        BlockStoreLocation.anyDirInTier(TieredBlockStoreTestUtils.TIER_LEVEL[0] + 1);\n    int nDirInFirstTier = TieredBlockStoreTestUtils.TIER_CAPACITY_BYTES[0].length;\n    long smallestCapacity = TieredBlockStoreTestUtils.TIER_CAPACITY_BYTES[0][0];\n    for (int i = 0; i < nDirInFirstTier; i ++) {\n      EvictionPlan plan =\n          mEvictor.freeSpaceWithView(smallestCapacity, anyDirInFirstTier, mManagerView);\n      Assert.assertTrue(EvictorTestUtils.validCascadingPlan(smallestCapacity, plan, mMetaManager));\n      // least recently used block in the first tier needs to be moved to the second tier\n      Assert.assertEquals(1, plan.toMove().size());\n      long blockIdMovedInFirstTier = plan.toMove().get(0).getFirst();\n      Assert.assertEquals(BLOCK_ID + i, blockIdMovedInFirstTier);\n      // least recently used cached block in the second tier will be evicted to hold blocks moved\n      // from first tier\n      Assert.assertEquals(1, plan.toEvict().size());\n      long blockIdEvictedInSecondTier = plan.toEvict().get(0);\n      Assert.assertEquals(BLOCK_ID + nDirInFirstTier + i, blockIdEvictedInSecondTier);\n\n      access(blockIdMovedInFirstTier);\n      access(blockIdEvictedInSecondTier);\n    }\n  }","id":61897,"modified_method":"@Test\n  public void cascadingEvictionTest2() throws Exception {\n    // Two tiers, the second tier has more dirs than the first tier and each dir in the second tier\n    // has more space than any dir in the first tier. Fill in all dirs and request space from the\n    // first tier, blocks should be moved from the first to the second tier, and some blocks in the\n    // second tier should be evicted to hold blocks moved from the first tier.\n    long blockId = BLOCK_ID;\n    for (int tierLevel : TieredBlockStoreTestUtils.TIER_LEVEL) {\n      long[] tierCapacity = TieredBlockStoreTestUtils.TIER_CAPACITY_BYTES[tierLevel];\n      for (int dirIdx = 0; dirIdx < tierCapacity.length; dirIdx ++) {\n        cache(SESSION_ID, blockId, tierCapacity[dirIdx], tierLevel, dirIdx);\n        blockId ++;\n      }\n    }\n\n    BlockStoreLocation anyDirInFirstTier =\n        BlockStoreLocation.anyDirInTier(TieredBlockStoreTestUtils.TIER_LEVEL[0] + 1);\n    int nDirInFirstTier = TieredBlockStoreTestUtils.TIER_CAPACITY_BYTES[0].length;\n    long smallestCapacity = TieredBlockStoreTestUtils.TIER_CAPACITY_BYTES[0][0];\n    for (int i = 0; i < nDirInFirstTier; i ++) {\n      EvictionPlan plan =\n          mEvictor.freeSpaceWithView(smallestCapacity, anyDirInFirstTier, mManagerView);\n      Assert.assertTrue(EvictorTestUtils.validCascadingPlan(smallestCapacity, plan, mMetaManager));\n      // least recently used block in the first tier needs to be moved to the second tier\n      Assert.assertEquals(1, plan.toMove().size());\n      long blockIdMovedInFirstTier = plan.toMove().get(0).getFirst();\n      Assert.assertEquals(BLOCK_ID + i, blockIdMovedInFirstTier);\n      // least recently used cached block in the second tier will be evicted to hold blocks moved\n      // from first tier\n      Assert.assertEquals(1, plan.toEvict().size());\n      long blockIdEvictedInSecondTier = plan.toEvict().get(0).getFirst();\n      Assert.assertEquals(BLOCK_ID + nDirInFirstTier + i, blockIdEvictedInSecondTier);\n\n      access(blockIdMovedInFirstTier);\n      access(blockIdEvictedInSecondTier);\n    }\n  }","commit_id":"e76a2675dfbb697f1fa46aba08862c756fe5cba3","url":"https://github.com/amplab/tachyon"},{"original_method":"@Test\n  public void evictInBottomTierTest() throws Exception {\n    int bottomTierLevel =\n        TieredBlockStoreTestUtils.TIER_LEVEL[TieredBlockStoreTestUtils.TIER_LEVEL.length - 1];\n    // capacity increases with index\n    long[] bottomTierDirCapacity = TieredBlockStoreTestUtils.TIER_CAPACITY_BYTES[bottomTierLevel];\n    int nDir = bottomTierDirCapacity.length;\n    // fill in dirs from larger to smaller capacity with blockId equal to BLOCK_ID plus dir index\n    for (int i = nDir - 1; i >= 0; i --) {\n      cache(SESSION_ID, BLOCK_ID + i, bottomTierDirCapacity[i], bottomTierLevel, i);\n    }\n    BlockStoreLocation anyDirInBottomTier = BlockStoreLocation.anyDirInTier(bottomTierLevel + 1);\n    // request smallest capacity and update access time on the evicted block for nDir times, the dir\n    // to evict blocks from should be in the same order as caching\n    for (int i = nDir - 1; i >= 0; i --) {\n      EvictionPlan plan =\n          mEvictor.freeSpaceWithView(bottomTierDirCapacity[0], anyDirInBottomTier, mManagerView);\n      Assert.assertNotNull(plan);\n      Assert.assertTrue(plan.toMove().isEmpty());\n      Assert.assertEquals(1, plan.toEvict().size());\n      long toEvictBlockId = plan.toEvict().get(0);\n      Assert.assertEquals(BLOCK_ID + i, toEvictBlockId);\n\n      access(toEvictBlockId);\n    }\n  }","id":61898,"modified_method":"@Test\n  public void evictInBottomTierTest() throws Exception {\n    int bottomTierLevel =\n        TieredBlockStoreTestUtils.TIER_LEVEL[TieredBlockStoreTestUtils.TIER_LEVEL.length - 1];\n    // capacity increases with index\n    long[] bottomTierDirCapacity = TieredBlockStoreTestUtils.TIER_CAPACITY_BYTES[bottomTierLevel];\n    int nDir = bottomTierDirCapacity.length;\n    // fill in dirs from larger to smaller capacity with blockId equal to BLOCK_ID plus dir index\n    for (int i = nDir - 1; i >= 0; i --) {\n      cache(SESSION_ID, BLOCK_ID + i, bottomTierDirCapacity[i], bottomTierLevel, i);\n    }\n    BlockStoreLocation anyDirInBottomTier = BlockStoreLocation.anyDirInTier(bottomTierLevel + 1);\n    // request smallest capacity and update access time on the evicted block for nDir times, the dir\n    // to evict blocks from should be in the same order as caching\n    for (int i = nDir - 1; i >= 0; i --) {\n      EvictionPlan plan =\n          mEvictor.freeSpaceWithView(bottomTierDirCapacity[0], anyDirInBottomTier, mManagerView);\n      Assert.assertNotNull(plan);\n      Assert.assertTrue(plan.toMove().isEmpty());\n      Assert.assertEquals(1, plan.toEvict().size());\n      long toEvictBlockId = plan.toEvict().get(0).getFirst();\n      Assert.assertEquals(BLOCK_ID + i, toEvictBlockId);\n\n      access(toEvictBlockId);\n    }\n  }","commit_id":"e76a2675dfbb697f1fa46aba08862c756fe5cba3","url":"https://github.com/amplab/tachyon"},{"original_method":"@Test\n  public void cascadingEvictionTest2() throws Exception {\n    // Two tiers, the second tier has more dirs than the first tier and each dir in the second tier\n    // has more space than any dir in the first tier. Fill in all dirs and request space from the\n    // first tier, blocks should be moved from the first to the second tier, and some blocks in the\n    // second tier should be evicted to hold blocks moved from the first tier.\n    BlockStoreLocation anyDirInFirstTier =\n        BlockStoreLocation.anyDirInTier(TieredBlockStoreTestUtils.TIER_LEVEL[0] + 1);\n    int nDirInFirstTier = TieredBlockStoreTestUtils.TIER_CAPACITY_BYTES[0].length;\n    int nDirInSecondTier = TieredBlockStoreTestUtils.TIER_CAPACITY_BYTES[1].length;\n    long smallestCapacity = TieredBlockStoreTestUtils.TIER_CAPACITY_BYTES[0][0];\n    long delta = smallestCapacity / 10;\n    long blockId = BLOCK_ID;\n\n    for (int tierLevel : TieredBlockStoreTestUtils.TIER_LEVEL) {\n      long[] tierCapacity = TieredBlockStoreTestUtils.TIER_CAPACITY_BYTES[tierLevel];\n      for (int dirIdx = 0; dirIdx < tierCapacity.length; dirIdx ++) {\n        cache(SESSION_ID, blockId, tierCapacity[dirIdx] - dirIdx * delta, tierLevel, dirIdx);\n        blockId ++;\n      }\n    }\n\n    EvictionPlan plan =\n        mEvictor.freeSpaceWithView(smallestCapacity, anyDirInFirstTier, mManagerView);\n    Assert.assertTrue(EvictorTestUtils.validCascadingPlan(smallestCapacity, plan, mMetaManager));\n    // block in StorageDir with max free space in the first tier needs to be moved to the second\n    // tier\n    Assert.assertEquals(1, plan.toMove().size());\n    long blockIdMovedInFirstTier = plan.toMove().get(0).getFirst();\n    Assert.assertEquals(BLOCK_ID + nDirInFirstTier - 1, blockIdMovedInFirstTier);\n    // block in StorageDir with max free space in the second tier will be evicted to hold blocks\n    // moved from first tier\n    Assert.assertEquals(1, plan.toEvict().size());\n    long blockIdEvictedInSecondTier = plan.toEvict().get(0);\n    Assert.assertEquals(BLOCK_ID + nDirInFirstTier + nDirInSecondTier - 1,\n        blockIdEvictedInSecondTier);\n  }","id":61899,"modified_method":"@Test\n  public void cascadingEvictionTest2() throws Exception {\n    // Two tiers, the second tier has more dirs than the first tier and each dir in the second tier\n    // has more space than any dir in the first tier. Fill in all dirs and request space from the\n    // first tier, blocks should be moved from the first to the second tier, and some blocks in the\n    // second tier should be evicted to hold blocks moved from the first tier.\n    BlockStoreLocation anyDirInFirstTier =\n        BlockStoreLocation.anyDirInTier(TieredBlockStoreTestUtils.TIER_LEVEL[0] + 1);\n    int nDirInFirstTier = TieredBlockStoreTestUtils.TIER_CAPACITY_BYTES[0].length;\n    int nDirInSecondTier = TieredBlockStoreTestUtils.TIER_CAPACITY_BYTES[1].length;\n    long smallestCapacity = TieredBlockStoreTestUtils.TIER_CAPACITY_BYTES[0][0];\n    long delta = smallestCapacity / 10;\n    long blockId = BLOCK_ID;\n\n    for (int tierLevel : TieredBlockStoreTestUtils.TIER_LEVEL) {\n      long[] tierCapacity = TieredBlockStoreTestUtils.TIER_CAPACITY_BYTES[tierLevel];\n      for (int dirIdx = 0; dirIdx < tierCapacity.length; dirIdx ++) {\n        cache(SESSION_ID, blockId, tierCapacity[dirIdx] - dirIdx * delta, tierLevel, dirIdx);\n        blockId ++;\n      }\n    }\n\n    EvictionPlan plan =\n        mEvictor.freeSpaceWithView(smallestCapacity, anyDirInFirstTier, mManagerView);\n    Assert.assertTrue(EvictorTestUtils.validCascadingPlan(smallestCapacity, plan, mMetaManager));\n    // block in StorageDir with max free space in the first tier needs to be moved to the second\n    // tier\n    Assert.assertEquals(1, plan.toMove().size());\n    long blockIdMovedInFirstTier = plan.toMove().get(0).getFirst();\n    Assert.assertEquals(BLOCK_ID + nDirInFirstTier - 1, blockIdMovedInFirstTier);\n    // block in StorageDir with max free space in the second tier will be evicted to hold blocks\n    // moved from first tier\n    Assert.assertEquals(1, plan.toEvict().size());\n    long blockIdEvictedInSecondTier = plan.toEvict().get(0).getFirst();\n    Assert.assertEquals(BLOCK_ID + nDirInFirstTier + nDirInSecondTier - 1,\n        blockIdEvictedInSecondTier);\n  }","commit_id":"e76a2675dfbb697f1fa46aba08862c756fe5cba3","url":"https://github.com/amplab/tachyon"},{"original_method":"@Test\n  public void evictInBottomTierTest() throws Exception {\n    int bottomTierLevel =\n        TieredBlockStoreTestUtils.TIER_LEVEL[TieredBlockStoreTestUtils.TIER_LEVEL.length - 1];\n    // capacity increases with index\n    long[] bottomTierDirCapacity = TieredBlockStoreTestUtils.TIER_CAPACITY_BYTES[bottomTierLevel];\n    long smallestCapacity = bottomTierDirCapacity[0];\n    long delta = smallestCapacity / 10;\n    int nDir = bottomTierDirCapacity.length;\n    // free space of StorageDir increases with Dir index\n    for (int i = 0; i < nDir; i ++) {\n      cache(SESSION_ID, BLOCK_ID + i, bottomTierDirCapacity[i] - i * delta, bottomTierLevel, i);\n    }\n\n    BlockStoreLocation anyDirInBottomTier = BlockStoreLocation.anyDirInTier(bottomTierLevel + 1);\n    // free the StorageDir with max free space\n    EvictionPlan plan =\n        mEvictor.freeSpaceWithView(smallestCapacity, anyDirInBottomTier, mManagerView);\n    Assert.assertNotNull(plan);\n    Assert.assertTrue(plan.toMove().isEmpty());\n    Assert.assertEquals(1, plan.toEvict().size());\n    long toEvictBlockId = plan.toEvict().get(0);\n    Assert.assertEquals(BLOCK_ID + nDir - 1, toEvictBlockId);\n  }","id":61900,"modified_method":"@Test\n  public void evictInBottomTierTest() throws Exception {\n    int bottomTierLevel =\n        TieredBlockStoreTestUtils.TIER_LEVEL[TieredBlockStoreTestUtils.TIER_LEVEL.length - 1];\n    // capacity increases with index\n    long[] bottomTierDirCapacity = TieredBlockStoreTestUtils.TIER_CAPACITY_BYTES[bottomTierLevel];\n    long smallestCapacity = bottomTierDirCapacity[0];\n    long delta = smallestCapacity / 10;\n    int nDir = bottomTierDirCapacity.length;\n    // free space of StorageDir increases with Dir index\n    for (int i = 0; i < nDir; i ++) {\n      cache(SESSION_ID, BLOCK_ID + i, bottomTierDirCapacity[i] - i * delta, bottomTierLevel, i);\n    }\n\n    BlockStoreLocation anyDirInBottomTier = BlockStoreLocation.anyDirInTier(bottomTierLevel + 1);\n    // free the StorageDir with max free space\n    EvictionPlan plan =\n        mEvictor.freeSpaceWithView(smallestCapacity, anyDirInBottomTier, mManagerView);\n    Assert.assertNotNull(plan);\n    Assert.assertTrue(plan.toMove().isEmpty());\n    Assert.assertEquals(1, plan.toEvict().size());\n    long toEvictBlockId = plan.toEvict().get(0).getFirst();\n    Assert.assertEquals(BLOCK_ID + nDir - 1, toEvictBlockId);\n  }","commit_id":"e76a2675dfbb697f1fa46aba08862c756fe5cba3","url":"https://github.com/amplab/tachyon"},{"original_method":"/**\n   * Removes a block.\n   *\n   * @param sessionId session Id\n   * @param blockId block Id\n   * @throws InvalidStateException if the block to remove is a temp block\n   * @throws NotFoundException if this block can not be found\n   * @throws IOException if I/O errors occur when removing this block file\n   */\n  private void removeBlockInternal(long sessionId, long blockId, BlockStoreLocation location)\n      throws InvalidStateException, NotFoundException, IOException {\n    long lockId = mLockManager.lockBlock(sessionId, blockId, BlockLockType.WRITE);\n    try {\n      String filePath;\n      BlockMeta blockMeta;\n      mMetadataReadLock.lock();\n      try {\n        if (mMetaManager.hasTempBlockMeta(blockId)) {\n          throw new InvalidStateException(ExceptionMessage.REMOVE_UNCOMMITTED_BLOCK, blockId);\n        }\n        blockMeta = mMetaManager.getBlockMeta(blockId);\n        filePath = blockMeta.getPath();\n      } finally {\n        mMetadataReadLock.unlock();\n      }\n\n      if (!location.equals(blockMeta.getBlockLocation())\n          && !location.equals(BlockStoreLocation.anyTier())) {\n        return;\n      }\n      // Heavy IO is guarded by block lock but not metadata lock. This may throw IOException.\n      FileUtils.delete(filePath);\n\n      mMetadataWriteLock.lock();\n      try {\n        mMetaManager.removeBlockMeta(blockMeta);\n      } catch (NotFoundException nfe) {\n        throw Throwables.propagate(nfe); // we shall never reach here\n      } finally {\n        mMetadataWriteLock.unlock();\n      }\n    } finally {\n      mLockManager.unlockBlock(lockId);\n    }\n  }","id":61901,"modified_method":"/**\n   * Removes a block.\n   *\n   * @param sessionId session Id\n   * @param blockId block Id\n   * @param location the source location of the block\n   * @throws InvalidStateException if the block to remove is a temp block\n   * @throws NotFoundException if this block can not be found\n   * @throws IOException if I/O errors occur when removing this block file\n   */\n  private void removeBlockInternal(long sessionId, long blockId, BlockStoreLocation location)\n      throws InvalidStateException, NotFoundException, IOException {\n    long lockId = mLockManager.lockBlock(sessionId, blockId, BlockLockType.WRITE);\n    try {\n      String filePath;\n      BlockMeta blockMeta;\n      mMetadataReadLock.lock();\n      try {\n        if (mMetaManager.hasTempBlockMeta(blockId)) {\n          throw new InvalidStateException(ExceptionMessage.REMOVE_UNCOMMITTED_BLOCK, blockId);\n        }\n        blockMeta = mMetaManager.getBlockMeta(blockId);\n        filePath = blockMeta.getPath();\n      } finally {\n        mMetadataReadLock.unlock();\n      }\n\n      if (!location.equals(blockMeta.getBlockLocation())\n          && !location.equals(BlockStoreLocation.anyTier())) {\n        return;\n      }\n      // Heavy IO is guarded by block lock but not metadata lock. This may throw IOException.\n      FileUtils.delete(filePath);\n\n      mMetadataWriteLock.lock();\n      try {\n        mMetaManager.removeBlockMeta(blockMeta);\n      } catch (NotFoundException nfe) {\n        throw Throwables.propagate(nfe); // we shall never reach here\n      } finally {\n        mMetadataWriteLock.unlock();\n      }\n    } finally {\n      mLockManager.unlockBlock(lockId);\n    }\n  }","commit_id":"e76a2675dfbb697f1fa46aba08862c756fe5cba3","url":"https://github.com/amplab/tachyon"},{"original_method":"/**\n   * Moves a block to new location only if allocator finds available space in newLocation. This\n   * method will not trigger any eviction. Returns MoveBlockResult.\n   *\n   * @param sessionId session Id\n   * @param blockId block Id\n   * @param newLocation new location to move this block\n   * @return the resulting information about the move operation\n   * @throws NotFoundException if block is not found\n   * @throws AlreadyExistsException if a block with same Id already exists in new location\n   * @throws InvalidStateException if the block to move is a temp block\n   * @throws IOException if I/O errors occur when moving block file\n   */\n  private MoveBlockResult moveBlockInternal(long sessionId, long blockId,\n      BlockStoreLocation oldLocation, BlockStoreLocation newLocation) throws NotFoundException,\n      AlreadyExistsException, InvalidStateException, IOException {\n    long lockId = mLockManager.lockBlock(sessionId, blockId, BlockLockType.WRITE);\n    try {\n      long blockSize;\n      String srcFilePath;\n      String dstFilePath;\n      BlockMeta srcBlockMeta;\n      BlockStoreLocation srcLocation;\n      BlockStoreLocation dstLocation;\n\n      mMetadataReadLock.lock();\n      try {\n        if (mMetaManager.hasTempBlockMeta(blockId)) {\n          throw new InvalidStateException(ExceptionMessage.MOVE_UNCOMMITTED_BLOCK, blockId);\n        }\n        srcBlockMeta = mMetaManager.getBlockMeta(blockId);\n        srcLocation = srcBlockMeta.getBlockLocation();\n        srcFilePath = srcBlockMeta.getPath();\n        blockSize = srcBlockMeta.getBlockSize();\n      } finally {\n        mMetadataReadLock.unlock();\n      }\n\n      if (!oldLocation.equals(srcLocation) && !oldLocation.equals(BlockStoreLocation.anyTier())) {\n        return new MoveBlockResult(false, blockSize, oldLocation, newLocation);\n      }\n      TempBlockMeta dstTempBlock =\n          createBlockMetaInternal(sessionId, blockId, newLocation, blockSize, false);\n      if (dstTempBlock == null) {\n        return new MoveBlockResult(false, blockSize, null, null);\n      }\n      dstLocation = dstTempBlock.getBlockLocation();\n      dstFilePath = dstTempBlock.getCommitPath();\n\n      // Heavy IO is guarded by block lock but not metadata lock. This may throw IOException.\n      FileUtils.move(srcFilePath, dstFilePath);\n\n      mMetadataWriteLock.lock();\n      try {\n        // If this metadata update fails, we panic for now.\n        // TODO: implement rollback scheme to recover from IO failures\n        mMetaManager.moveBlockMeta(srcBlockMeta, dstTempBlock);\n      } catch (AlreadyExistsException aee) {\n        throw Throwables.propagate(aee); // we shall never reach here\n      } catch (NotFoundException nfe) {\n        throw Throwables.propagate(nfe); // we shall never reach here\n      } catch (OutOfSpaceException ose) {\n        // Only possible if sessionId gets cleaned between createBlockMetaInternal and\n        // moveBlockMeta.\n        throw Throwables.propagate(ose);\n      } finally {\n        mMetadataWriteLock.unlock();\n      }\n\n      return new MoveBlockResult(true, blockSize, srcLocation, dstLocation);\n    } finally {\n      mLockManager.unlockBlock(lockId);\n    }\n  }","id":61902,"modified_method":"/**\n   * Moves a block to new location only if allocator finds available space in newLocation. This\n   * method will not trigger any eviction. Returns MoveBlockResult.\n   *\n   * @param sessionId session Id\n   * @param blockId block Id\n   * @param oldLocation the source location of the block\n   * @param newLocation new location to move this block\n   * @return the resulting information about the move operation\n   * @throws NotFoundException if block is not found\n   * @throws AlreadyExistsException if a block with same Id already exists in new location\n   * @throws InvalidStateException if the block to move is a temp block\n   * @throws IOException if I/O errors occur when moving block file\n   */\n  private MoveBlockResult moveBlockInternal(long sessionId, long blockId,\n      BlockStoreLocation oldLocation, BlockStoreLocation newLocation) throws NotFoundException,\n      AlreadyExistsException, InvalidStateException, IOException {\n    long lockId = mLockManager.lockBlock(sessionId, blockId, BlockLockType.WRITE);\n    try {\n      long blockSize;\n      String srcFilePath;\n      String dstFilePath;\n      BlockMeta srcBlockMeta;\n      BlockStoreLocation srcLocation;\n      BlockStoreLocation dstLocation;\n\n      mMetadataReadLock.lock();\n      try {\n        if (mMetaManager.hasTempBlockMeta(blockId)) {\n          throw new InvalidStateException(ExceptionMessage.MOVE_UNCOMMITTED_BLOCK, blockId);\n        }\n        srcBlockMeta = mMetaManager.getBlockMeta(blockId);\n        srcLocation = srcBlockMeta.getBlockLocation();\n        srcFilePath = srcBlockMeta.getPath();\n        blockSize = srcBlockMeta.getBlockSize();\n      } finally {\n        mMetadataReadLock.unlock();\n      }\n\n      if (!oldLocation.equals(srcLocation) && !oldLocation.equals(BlockStoreLocation.anyTier())) {\n        return new MoveBlockResult(false, blockSize, oldLocation, newLocation);\n      }\n      TempBlockMeta dstTempBlock =\n          createBlockMetaInternal(sessionId, blockId, newLocation, blockSize, false);\n      if (dstTempBlock == null) {\n        return new MoveBlockResult(false, blockSize, null, null);\n      }\n      dstLocation = dstTempBlock.getBlockLocation();\n      dstFilePath = dstTempBlock.getCommitPath();\n\n      // Heavy IO is guarded by block lock but not metadata lock. This may throw IOException.\n      FileUtils.move(srcFilePath, dstFilePath);\n\n      mMetadataWriteLock.lock();\n      try {\n        // If this metadata update fails, we panic for now.\n        // TODO: implement rollback scheme to recover from IO failures\n        mMetaManager.moveBlockMeta(srcBlockMeta, dstTempBlock);\n      } catch (AlreadyExistsException aee) {\n        throw Throwables.propagate(aee); // we shall never reach here\n      } catch (NotFoundException nfe) {\n        throw Throwables.propagate(nfe); // we shall never reach here\n      } catch (OutOfSpaceException ose) {\n        // Only possible if sessionId gets cleaned between createBlockMetaInternal and\n        // moveBlockMeta.\n        throw Throwables.propagate(ose);\n      } finally {\n        mMetadataWriteLock.unlock();\n      }\n\n      return new MoveBlockResult(true, blockSize, srcLocation, dstLocation);\n    } finally {\n      mLockManager.unlockBlock(lockId);\n    }\n  }","commit_id":"e76a2675dfbb697f1fa46aba08862c756fe5cba3","url":"https://github.com/amplab/tachyon"},{"original_method":"public Boolean call() {\n    try {\n      if (mDstLocation == null) {\n        mBlockStore.removeBlock(mUserId, mBlockId);\n      } else {\n        mBlockStore.moveBlock(mUserId, mBlockId, mDstLocation);\n      }\n      return true;\n    } catch (Exception e) {\n      LOG.error(\"Failed to migrate block {} to {}\", mBlockId, mDstLocation, e);\n      return false;\n    }\n  }","id":61903,"modified_method":"public Boolean call() {\n    String errorInfo = null;\n    try {\n      if (null == mDstLocation) {\n        mBlockStore.removeBlock(mUserId, mBlockId, mSrcLocation);\n        errorInfo = \"Failed to remove block \" + mBlockId + \" at location: \" + mSrcLocation;\n      } else {\n        mBlockStore.moveBlock(mUserId, mBlockId, mSrcLocation, mDstLocation);\n        errorInfo = \"Failed to move block\" + mBlockId + \" from \" + mSrcLocation + \" to \"\n            + mDstLocation;\n      }\n      return true;\n    } catch (Exception e) {\n      LOG.error(errorInfo, e);\n      return false;\n    }\n  }","commit_id":"87a4937bb55750fe99e90986424f46edcee96d2c","url":"https://github.com/amplab/tachyon"},{"original_method":"public BlockMover(BlockStore blockStore, long userId, long blockId,\n      BlockStoreLocation dstLocation) {\n    mUserId = userId;\n    mBlockStore = blockStore;\n    mBlockId = blockId;\n    mDstLocation = dstLocation;\n  }","id":61904,"modified_method":"public BlockMover(BlockStore blockStore, long userId, long blockId,\n      BlockStoreLocation srcLocation, BlockStoreLocation dstLocation) {\n    mUserId = userId;\n    mBlockStore = blockStore;\n    mBlockId = blockId;\n    mSrcLocation = srcLocation;\n    mDstLocation = dstLocation;\n  }","commit_id":"87a4937bb55750fe99e90986424f46edcee96d2c","url":"https://github.com/amplab/tachyon"},{"original_method":"@Override\n    public void run() {\n      try {\n        while (true) {\n          mSemaphore.acquire();\n          for (int tierIdx = mReservedBytesOnTiers.size() - 1; tierIdx >= 0 ; tierIdx --) {\n            Pair<Integer, Long> bytesReservedOnTier = mReservedBytesOnTiers.get(tierIdx);\n            int tierAlias = bytesReservedOnTier.getFirst();\n            if (!areMoversDoneOnTier(tierAlias)) {\n              continue;\n            }\n            long bytesReserved = bytesReservedOnTier.getSecond();\n            BlockStoreLocation location = BlockStoreLocation.anyDirInTier(tierAlias);\n            EvictionPlan plan = getEvictionPlanOnTier(bytesReserved, location);\n            if (null == plan) {\n              continue;\n            }\n            for (Pair<Long, BlockStoreLocation> toMoveBlock : plan.toMove()) {\n              Future<Boolean> res = mExecutorService.submit(new BlockMover(TieredBlockStore.this,\n                  Users.MIGRATE_DATA_USER_ID, toMoveBlock.getFirst(), toMoveBlock.getSecond()));\n              mMoverResOnTiers.put(tierAlias, res);\n            }\n            for (long toEvictBlock : plan.toEvict()) {\n              Future<Boolean> res = mExecutorService.submit(new BlockMover(TieredBlockStore.this,\n                  Users.MIGRATE_DATA_USER_ID, toEvictBlock, null));\n              mMoverResOnTiers.put(tierAlias, res);\n            }\n          }\n        }\n      } catch (InterruptedException e) {\n        LOG.info(\"Asynchronous evictor exits!\");\n      }\n    }","id":61905,"modified_method":"@Override\n    public void run() {\n      try {\n        while (true) {\n          mSemaphore.acquire();\n          for (int tierIdx = mReservedBytesOnTiers.size() - 1; tierIdx >= 0 ; tierIdx --) {\n            Pair<Integer, Long> bytesReservedOnTier = mReservedBytesOnTiers.get(tierIdx);\n            int tierAlias = bytesReservedOnTier.getFirst();\n            if (!areMoversDoneOnTier(tierAlias)) {\n              continue;\n            }\n            long bytesReserved = bytesReservedOnTier.getSecond();\n            BlockStoreLocation location = BlockStoreLocation.anyDirInTier(tierAlias);\n            EvictionPlan plan = getEvictionPlanOnTier(bytesReserved, location);\n            if (null == plan) {\n              continue;\n            }\n            for (BlockTransferInfo move : plan.toMove()) {\n              Future<Boolean> res = mExecutorService.submit(new BlockMover(TieredBlockStore.this,\n                  Sessions.MIGRATE_DATA_SESSION_ID, move.getBlockId(), move.getSrcLocation(),\n                  move.getDstLocation()));\n              mMoverResOnTiers.put(tierAlias, res);\n            }\n            for (Pair<Long, BlockStoreLocation> evict : plan.toEvict()) {\n              Future<Boolean> res = mExecutorService.submit(new BlockMover(TieredBlockStore.this,\n                  Sessions.MIGRATE_DATA_SESSION_ID, evict.getFirst(), evict.getSecond(), null));\n              mMoverResOnTiers.put(tierAlias, res);\n            }\n          }\n        }\n      } catch (InterruptedException e) {\n        LOG.info(\"Asynchronous evictor exits!\");\n      }\n    }","commit_id":"87a4937bb55750fe99e90986424f46edcee96d2c","url":"https://github.com/amplab/tachyon"},{"original_method":"@Before\n  public void before() throws Exception {\n    File tempFolder = mTestFolder.newFolder();\n    TieredBlockStoreTestUtils.setupTachyonConfDefault(tempFolder.getAbsolutePath());\n    ExecutorService executorService = Executors.newFixedThreadPool(\n        testConf.getInt(Constants.WORKER_SHARED_EXECUTOR_CORES),\n        ThreadFactoryUtils.build(\"Shared-executor-%d\", false));\n    mBlockStore = new TieredBlockStore(executorService);\n\n    // TODO(bin): Avoid using reflection to get private members.\n    Field field = mBlockStore.getClass().getDeclaredField(\"mMetaManager\");\n    field.setAccessible(true);\n    mMetaManager = (BlockMetadataManager) field.get(mBlockStore);\n    field = mBlockStore.getClass().getDeclaredField(\"mLockManager\");\n    field.setAccessible(true);\n    mLockManager = (BlockLockManager) field.get(mBlockStore);\n    field = mBlockStore.getClass().getDeclaredField(\"mEvictor\");\n    field.setAccessible(true);\n    mEvictor = (Evictor) field.get(mBlockStore);\n\n    mTestDir1 = mMetaManager.getTier(FIRST_TIER_ALIAS.getValue()).getDir(0);\n    mTestDir2 = mMetaManager.getTier(FIRST_TIER_ALIAS.getValue()).getDir(1);\n    mTestDir3 = mMetaManager.getTier(SECOND_TIER_ALIAS.getValue()).getDir(1);\n  }","id":61906,"modified_method":"@Before\n  public void before() throws Exception {\n    File tempFolder = mTestFolder.newFolder();\n    TieredBlockStoreTestUtils.setupTachyonConfDefault(tempFolder.getAbsolutePath());\n    ExecutorService executorService = Executors.newFixedThreadPool(\n        WorkerContext.getConf().getInt(Constants.WORKER_SHARED_EXECUTOR_CORES),\n        ThreadFactoryUtils.build(\"Shared-executor-%d\", false));\n    mBlockStore = new TieredBlockStore(executorService);\n\n    // TODO(bin): Avoid using reflection to get private members.\n    Field field = mBlockStore.getClass().getDeclaredField(\"mMetaManager\");\n    field.setAccessible(true);\n    mMetaManager = (BlockMetadataManager) field.get(mBlockStore);\n    field = mBlockStore.getClass().getDeclaredField(\"mLockManager\");\n    field.setAccessible(true);\n    mLockManager = (BlockLockManager) field.get(mBlockStore);\n    field = mBlockStore.getClass().getDeclaredField(\"mEvictor\");\n    field.setAccessible(true);\n    mEvictor = (Evictor) field.get(mBlockStore);\n\n    mTestDir1 = mMetaManager.getTier(FIRST_TIER_ALIAS.getValue()).getDir(0);\n    mTestDir2 = mMetaManager.getTier(FIRST_TIER_ALIAS.getValue()).getDir(1);\n    mTestDir3 = mMetaManager.getTier(SECOND_TIER_ALIAS.getValue()).getDir(1);\n  }","commit_id":"87a4937bb55750fe99e90986424f46edcee96d2c","url":"https://github.com/amplab/tachyon"},{"original_method":"private IndexProvider indexes()\n    {\n        IndexProvider result = indexProvider;\n        if ( result == null )\n        {\n            result = indexProvider = new LuceneIndexProvider( getServer().getDb() );\n        }\n        return result;\n    }","id":61907,"modified_method":"private IndexProvider indexes()\n    {\n        IndexProvider result = indexProvider;\n        if ( result == null )\n        {\n            result = indexProvider = startProvider( getServer().getDb() );\n        }\n        return result;\n    }","commit_id":"ae0910b87d73d4e190daf018c6eb4e6ebeea62d9","url":"https://github.com/neo4j/neo4j"},{"original_method":"private IndexProvider indexes()\n    {\n        IndexProvider result = indexProvider;\n        if ( result == null )\n        {\n            result = indexProvider = new LuceneIndexProvider( getServer().getDb() );\n        }\n        return result;\n    }","id":61908,"modified_method":"private IndexProvider indexes()\n    {\n        IndexProvider result = indexProvider;\n        if ( result == null )\n        {\n            result = indexProvider = startProvider( getServer().getDb() );\n        }\n        return result;\n    }","commit_id":"7c8711b9d7b3adcbba5d9dc527cea648ad31f32d","url":"https://github.com/neo4j/neo4j"},{"original_method":"private IndexProvider indexes()\n    {\n        IndexProvider result = indexProvider;\n        if ( result == null )\n        {\n            result = indexProvider = new LuceneIndexProvider( getServer().getDb() );\n        }\n        return result;\n    }","id":61909,"modified_method":"private IndexProvider indexes()\n    {\n        IndexProvider result = indexProvider;\n        if ( result == null )\n        {\n            result = indexProvider = startProvider( getServer().getDb() );\n        }\n        return result;\n    }","commit_id":"2d6f5d26fedd66a3415eb747356f6b179e871c74","url":"https://github.com/neo4j/neo4j"},{"original_method":"/**\n     * Try to shut everything down so they system is ready to call\n     * initialize again.\n     * @param mainSiteThread The thread that m_inititalized the VoltDB or\n     * null if called from that thread.\n     */\n    @Override\n    public boolean shutdown(Thread mainSiteThread) throws InterruptedException {\n        synchronized(m_startAndStopLock) {\n            boolean did_it = false;\n            if (m_mode != OperationMode.SHUTTINGDOWN) {\n                did_it = true;\n                m_mode = OperationMode.SHUTTINGDOWN;\n                m_snapshotCompletionMonitor.shutdown();\n                m_periodicWorkThread.shutdown();\n                m_periodicPriorityWorkThread.shutdown();\n\n                if (m_elasticJoinService != null) {\n                    m_elasticJoinService.shutdown();\n                }\n\n                if (m_leaderAppointer != null) {\n                    m_leaderAppointer.shutdown();\n                }\n                m_globalServiceElector.shutdown();\n\n                if (m_hasStartedSampler.get()) {\n                    m_sampler.setShouldStop();\n                    m_sampler.join();\n                }\n\n                // shutdown the web monitoring / json\n                if (m_adminListener != null)\n                    m_adminListener.stop();\n\n                // shut down the client interface\n                if (m_clientInterface != null) {\n                    m_clientInterface.shutdown();\n                    m_clientInterface = null;\n                }\n\n                // tell the iv2 sites to stop their runloop\n                if (m_iv2Initiators != null) {\n                    for (Initiator init : m_iv2Initiators)\n                        init.shutdown();\n                }\n\n                if (m_cartographer != null) {\n                    m_cartographer.shutdown();\n                }\n\n                if (m_configLogger != null) {\n                    m_configLogger.join();\n                }\n\n                // shut down Export and its connectors.\n                ExportManager.instance().shutdown();\n\n                // After sites are terminated, shutdown the InvocationBufferServer.\n                // The IBS is shared by all sites; don't kill it while any site is active.\n                if (m_nodeDRGateway != null) {\n                    try {\n                        m_nodeDRGateway.shutdown();\n                    } catch (InterruptedException e) {\n                        hostLog.warn(\"Interrupted shutting down invocation buffer server\", e);\n                    }\n                }\n\n                // shut down the network/messaging stuff\n                // Close the host messenger first, which should close down all of\n                // the ForeignHost sockets cleanly\n                if (m_messenger != null)\n                {\n                    m_messenger.shutdown();\n                }\n                m_messenger = null;\n\n                //Also for test code that expects a fresh stats agent\n                if (m_opsRegistrar != null) {\n                    try {\n                        m_opsRegistrar.shutdown();\n                    }\n                    finally {\n                        m_opsRegistrar = null;\n                    }\n                }\n\n                if (m_asyncCompilerAgent != null) {\n                    m_asyncCompilerAgent.shutdown();\n                    m_asyncCompilerAgent = null;\n                }\n\n                ExportManager.instance().shutdown();\n                m_computationService.shutdown();\n                m_computationService.awaitTermination(1, TimeUnit.DAYS);\n                m_computationService = null;\n                m_catalogContext = null;\n                m_initiatorStats = null;\n                m_latencyStats = null;\n\n                AdHocCompilerCache.clearVersionCache();\n                org.voltdb.iv2.InitiatorMailbox.m_allInitiatorMailboxes.clear();\n\n                // probably unnecessary\n                System.gc();\n                m_isRunning = false;\n            }\n            return did_it;\n        }\n    }","id":61910,"modified_method":"/**\n     * Try to shut everything down so they system is ready to call\n     * initialize again.\n     * @param mainSiteThread The thread that m_inititalized the VoltDB or\n     * null if called from that thread.\n     */\n    @Override\n    public boolean shutdown(Thread mainSiteThread) throws InterruptedException {\n        synchronized(m_startAndStopLock) {\n            boolean did_it = false;\n            if (m_mode != OperationMode.SHUTTINGDOWN) {\n                did_it = true;\n                m_mode = OperationMode.SHUTTINGDOWN;\n\n                /*\n                 * Various scheduled tasks get crashy in unit tests if they happen to run\n                 * while other stuff is being shut down\n                 */\n                for (ScheduledFuture<?> sc : m_periodicWorks) {\n                    sc.cancel(false);\n                    try {\n                        sc.get();\n                    } catch (Throwable t) {}\n                }\n                m_periodicWorks.clear();\n                m_snapshotCompletionMonitor.shutdown();\n                m_periodicWorkThread.shutdown();\n                m_periodicWorkThread.awaitTermination(356, TimeUnit.DAYS);\n                m_periodicPriorityWorkThread.shutdown();\n                m_periodicPriorityWorkThread.awaitTermination(356, TimeUnit.DAYS);\n\n                if (m_elasticJoinService != null) {\n                    m_elasticJoinService.shutdown();\n                }\n\n                if (m_leaderAppointer != null) {\n                    m_leaderAppointer.shutdown();\n                }\n                m_globalServiceElector.shutdown();\n\n                if (m_hasStartedSampler.get()) {\n                    m_sampler.setShouldStop();\n                    m_sampler.join();\n                }\n\n                // shutdown the web monitoring / json\n                if (m_adminListener != null)\n                    m_adminListener.stop();\n\n                // shut down the client interface\n                if (m_clientInterface != null) {\n                    m_clientInterface.shutdown();\n                    m_clientInterface = null;\n                }\n\n                // tell the iv2 sites to stop their runloop\n                if (m_iv2Initiators != null) {\n                    for (Initiator init : m_iv2Initiators)\n                        init.shutdown();\n                }\n\n                if (m_cartographer != null) {\n                    m_cartographer.shutdown();\n                }\n\n                if (m_configLogger != null) {\n                    m_configLogger.join();\n                }\n\n                // shut down Export and its connectors.\n                ExportManager.instance().shutdown();\n\n                // After sites are terminated, shutdown the InvocationBufferServer.\n                // The IBS is shared by all sites; don't kill it while any site is active.\n                if (m_nodeDRGateway != null) {\n                    try {\n                        m_nodeDRGateway.shutdown();\n                    } catch (InterruptedException e) {\n                        hostLog.warn(\"Interrupted shutting down invocation buffer server\", e);\n                    }\n                }\n\n                // shut down the network/messaging stuff\n                // Close the host messenger first, which should close down all of\n                // the ForeignHost sockets cleanly\n                if (m_messenger != null)\n                {\n                    m_messenger.shutdown();\n                }\n                m_messenger = null;\n\n                //Also for test code that expects a fresh stats agent\n                if (m_opsRegistrar != null) {\n                    try {\n                        m_opsRegistrar.shutdown();\n                    }\n                    finally {\n                        m_opsRegistrar = null;\n                    }\n                }\n\n                if (m_asyncCompilerAgent != null) {\n                    m_asyncCompilerAgent.shutdown();\n                    m_asyncCompilerAgent = null;\n                }\n\n                ExportManager.instance().shutdown();\n                m_computationService.shutdown();\n                m_computationService.awaitTermination(1, TimeUnit.DAYS);\n                m_computationService = null;\n                m_catalogContext = null;\n                m_initiatorStats = null;\n                m_latencyStats = null;\n\n                AdHocCompilerCache.clearVersionCache();\n                org.voltdb.iv2.InitiatorMailbox.m_allInitiatorMailboxes.clear();\n\n                // probably unnecessary\n                System.gc();\n                m_isRunning = false;\n            }\n            return did_it;\n        }\n    }","commit_id":"8b8dd0fcd915320b766333eea29ac8d136ca8540","url":"https://github.com/VoltDB/voltdb"},{"original_method":"/**\n     * Schedule all the periodic works\n     */\n    private void schedulePeriodicWorks() {\n        // JMX stats broadcast\n        scheduleWork(new Runnable() {\n            @Override\n            public void run() {\n                // A null here was causing a steady stream of annoying but apparently inconsequential\n                // NPEs during a debug session of an unrelated unit test.\n                if (m_statsManager != null) {\n                    m_statsManager.sendNotification();\n                }\n            }\n        }, 0, StatsManager.POLL_INTERVAL, TimeUnit.MILLISECONDS);\n\n        // small stats samples\n        scheduleWork(new Runnable() {\n            @Override\n            public void run() {\n                SystemStatsCollector.asyncSampleSystemNow(false, false);\n            }\n        }, 0, 5, TimeUnit.SECONDS);\n\n        // medium stats samples\n        scheduleWork(new Runnable() {\n            @Override\n            public void run() {\n                SystemStatsCollector.asyncSampleSystemNow(true, false);\n            }\n        }, 0, 1, TimeUnit.MINUTES);\n\n        // large stats samples\n        scheduleWork(new Runnable() {\n            @Override\n            public void run() {\n                SystemStatsCollector.asyncSampleSystemNow(true, true);\n            }\n        }, 0, 6, TimeUnit.MINUTES);\n        GCInspector.instance.start(m_periodicPriorityWorkThread);\n    }","id":61911,"modified_method":"/**\n     * Schedule all the periodic works\n     */\n    private void schedulePeriodicWorks() {\n        // JMX stats broadcast\n        m_periodicWorks.add(scheduleWork(new Runnable() {\n            @Override\n            public void run() {\n                // A null here was causing a steady stream of annoying but apparently inconsequential\n                // NPEs during a debug session of an unrelated unit test.\n                if (m_statsManager != null) {\n                    m_statsManager.sendNotification();\n                }\n            }\n        }, 0, StatsManager.POLL_INTERVAL, TimeUnit.MILLISECONDS));\n\n        // small stats samples\n        m_periodicWorks.add(scheduleWork(new Runnable() {\n            @Override\n            public void run() {\n                SystemStatsCollector.asyncSampleSystemNow(false, false);\n            }\n        }, 0, 5, TimeUnit.SECONDS));\n\n        // medium stats samples\n        m_periodicWorks.add(scheduleWork(new Runnable() {\n            @Override\n            public void run() {\n                SystemStatsCollector.asyncSampleSystemNow(true, false);\n            }\n        }, 0, 1, TimeUnit.MINUTES));\n\n        // large stats samples\n        m_periodicWorks.add(scheduleWork(new Runnable() {\n            @Override\n            public void run() {\n                SystemStatsCollector.asyncSampleSystemNow(true, true);\n            }\n        }, 0, 6, TimeUnit.MINUTES));\n        GCInspector.instance.start(m_periodicPriorityWorkThread);\n    }","commit_id":"8b8dd0fcd915320b766333eea29ac8d136ca8540","url":"https://github.com/VoltDB/voltdb"},{"original_method":"@Override\r\n    public boolean checkTrigger(GameEvent event, Game game) {\r\n        if (event.getType() == GameEvent.EventType.DAMAGED_CREATURE && event.getPlayerId().equals(controllerId)) {\r\n            if (((DamagedCreatureEvent) event).isCombatDamage()) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }","id":61912,"modified_method":"@Override\r\n    public boolean checkTrigger(GameEvent event, Game game) {\r\n        if (event.getType() == GameEvent.EventType.DAMAGED_CREATURE) {\r\n            if (((DamagedCreatureEvent) event).isCombatDamage()) {\r\n                Permanent permanent = game.getPermanent(event.getSourceId());\r\n                if (permanent == null) {\r\n                    permanent = (Permanent) game.getLastKnownInformation(event.getSourceId(), Zone.BATTLEFIELD);\r\n                }\r\n                if (permanent != null && permanent.getCardType().contains(CardType.CREATURE) && permanent.getControllerId().equals(this.getControllerId())) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }","commit_id":"d520d63e2cd490684385279f8e989f0fbaffb585","url":"https://github.com/magefree/mage"},{"original_method":"public PreventAllCombatDamageEffect(final PreventAllCombatDamageEffect effect) {\n\t\tsuper(effect);\n\t}","id":61913,"modified_method":"public PreventAllCombatDamageEffect(final PreventAllCombatDamageEffect effect) {\n\t\tsuper(effect);\n        this.filter = effect.filter.copy();\n\t}","commit_id":"d63919d8e352ea2e99a622ce2704b619b83d9218","url":"https://github.com/magefree/mage"},{"original_method":"@Override\n\tpublic boolean applies(GameEvent event, Ability source, Game game) {\n        if (super.applies(event, source, game) && event instanceof DamageEvent) {\n            DamageEvent damageEvent = (DamageEvent) event;\n            return damageEvent.isCombatDamage();\n        }\n\t\treturn false;\n\t}","id":61914,"modified_method":"@Override\n\tpublic boolean applies(GameEvent event, Ability source, Game game) {\n        if (super.applies(event, source, game) && event instanceof DamageEvent) {\n            DamageEvent damageEvent = (DamageEvent) event;\n            if (damageEvent.isCombatDamage()) {\n                if (filter == null)\n                    return true;\n                Permanent permanent = game.getPermanent(damageEvent.getSourceId());\n                if (permanent != null && filter.match(permanent))\n                    return true;\n            }\n        }\n\t\treturn false;\n\t}","commit_id":"d63919d8e352ea2e99a622ce2704b619b83d9218","url":"https://github.com/magefree/mage"},{"original_method":"@Override\r\n    public String getRule() {\r\n        return \"At end of combat, \" + modes.getText();\r\n    }","id":61915,"modified_method":"@Override\r\n    public String getRule() {\r\n        String ruleText = modes.getText();\r\n        if (ruleText.contains(\"at end of combat\")) {\r\n            return ruleText;\r\n        }\r\n        return \"At end of combat, \" + ruleText;\r\n    }","commit_id":"019f6722a7076f50637aaebc8c94f1ef00b29ecd","url":"https://github.com/magefree/mage"},{"original_method":"@Override\n    public boolean checkTrigger(GameEvent event, Game game) {\n        if (event instanceof DamagedPlayerEvent) {\n            DamagedPlayerEvent damageEvent = (DamagedPlayerEvent)event;\n            Permanent p = game.getPermanent(event.getSourceId());\n            if (damageEvent.getPlayerId().equals(controllerId) && damageEvent.isCombatDamage() && p != null && p.getCardType().contains(CardType.CREATURE)) {\n                game.getState().setValue(sourceId.toString(), p.getControllerId());\n                return true;\n            }\n        }\n        return false;\n    }","id":61916,"modified_method":"@Override\n    public boolean checkTrigger(GameEvent event, Game game) {\n        DamagedPlayerEvent damageEvent = (DamagedPlayerEvent)event;\n        if (damageEvent.isCombatDamage()) {\n            Permanent permanent = game.getPermanent(event.getSourceId());\n            if (damageEvent.getPlayerId().equals(getControllerId()) && permanent != null && permanent.getCardType().contains(CardType.CREATURE)) {\n                game.getState().setValue(getSourceId().toString(), permanent.getControllerId());\n                return true;\n            }\n        }\n        return false;\n    }","commit_id":"019f6722a7076f50637aaebc8c94f1ef00b29ecd","url":"https://github.com/magefree/mage"},{"original_method":"@Override\r\n    public boolean apply(Game game, Ability source) {\r\n        DelayedTriggeredAbility delayedAbility = ability.copy();\r\n        delayedAbility.setSourceId(source.getSourceId());\r\n        delayedAbility.setControllerId(source.getControllerId());\r\n        delayedAbility.setSourceObject(source.getSourceObject(game));\r\n        if (this.copyTargets) {\r\n            delayedAbility.getTargets().addAll(source.getTargets());\r\n            for(Effect effect : delayedAbility.getEffects()) {\r\n                effect.getTargetPointer().init(game, source);\r\n            }\r\n        }\r\n        game.addDelayedTriggeredAbility(delayedAbility);\r\n        return true;\r\n    }","id":61917,"modified_method":"@Override\r\n    public boolean apply(Game game, Ability source) {\r\n        DelayedTriggeredAbility delayedAbility = ability.copy();\r\n        delayedAbility.setSourceId(source.getSourceId());\r\n        delayedAbility.setControllerId(source.getControllerId());\r\n        delayedAbility.setSourceObject(source.getSourceObject(game));\r\n        if (this.copyTargets) {\r\n            if (source.getTargets().isEmpty()) {\r\n                for(Effect effect : delayedAbility.getEffects()) {\r\n                    effect.setTargetPointer(targetPointer);\r\n                }\r\n            } else {\r\n                delayedAbility.getTargets().addAll(source.getTargets());\r\n                for(Effect effect : delayedAbility.getEffects()) {\r\n                    effect.getTargetPointer().init(game, source);\r\n                }\r\n            }\r\n        }\r\n        game.addDelayedTriggeredAbility(delayedAbility);\r\n        return true;\r\n    }","commit_id":"019f6722a7076f50637aaebc8c94f1ef00b29ecd","url":"https://github.com/magefree/mage"},{"original_method":"public ExileFromGraveCost(TargetCardInYourGraveyard target) {\n        this.addTarget(target);\n        if (target.getMaxNumberOfTargets() > 1) {\n            this.text = \"Exile \" + CardUtil.numberToText(target.getMaxNumberOfTargets()) + \" \" + target.getTargetName();\n        }\n        else {\n            this.text = \"Exile \" + target.getTargetName();\n        }\n        if (!this.text.endsWith(\" from your graveyard\")) {\n            this.text = this.text + \" from your graveyard\";\n        }        \n    }","id":61918,"modified_method":"public ExileFromGraveCost(TargetCardInYourGraveyard target) {\n        this.addTarget(target);\n        if (target.getMaxNumberOfTargets() > 1) {\n            this.text = \"Exile \" + \n                    (target.getNumberOfTargets() < target.getMaxNumberOfTargets() ? \"up to \":\"\") +\n                    CardUtil.numberToText(target.getMaxNumberOfTargets()) +\n                    \" \" +\n                    target.getTargetName();\n        }\n        else {\n            this.text = \"Exile \" + target.getTargetName();\n        }\n        if (!this.text.endsWith(\" from your graveyard\")) {\n            this.text = this.text + \" from your graveyard\";\n        }        \n    }","commit_id":"019f6722a7076f50637aaebc8c94f1ef00b29ecd","url":"https://github.com/magefree/mage"},{"original_method":"public ExileFromGraveCost(final ExileFromGraveCost cost) {\n        super(cost);\n    }","id":61919,"modified_method":"public ExileFromGraveCost(final ExileFromGraveCost cost) {\n        super(cost);\n        this.exiledCards.addAll(cost.getExiledCards());\n    }","commit_id":"019f6722a7076f50637aaebc8c94f1ef00b29ecd","url":"https://github.com/magefree/mage"},{"original_method":"@Override\n    public boolean pay(Ability ability, Game game, UUID sourceId, UUID controllerId, boolean noMana) {\n        Player controller = game.getPlayer(controllerId);\n        if (controller != null) {\n            if (targets.choose(Outcome.Exile, controllerId, sourceId, game)) {\n                for (UUID targetId: targets.get(0).getTargets()) {\n                    Card card = game.getCard(targetId);\n                    if (card == null || !game.getState().getZone(targetId).equals(Zone.GRAVEYARD)) {\n                        return false;\n                    }\n                    paid |= controller.moveCardToExileWithInfo(card, null, null, sourceId, game, Zone.GRAVEYARD);\n                }\n            }\n\n        }\n        return paid;\n    }","id":61920,"modified_method":"@Override\n    public boolean pay(Ability ability, Game game, UUID sourceId, UUID controllerId, boolean noMana) {\n        Player controller = game.getPlayer(controllerId);\n        if (controller != null) {\n            if (targets.choose(Outcome.Exile, controllerId, sourceId, game)) {\n                for (UUID targetId: targets.get(0).getTargets()) {\n                    Card card = game.getCard(targetId);\n                    if (card == null || !game.getState().getZone(targetId).equals(Zone.GRAVEYARD)) {\n                        return false;\n                    }\n                    exiledCards.add(card);\n                    paid |= controller.moveCardToExileWithInfo(card, null, null, sourceId, game, Zone.GRAVEYARD);\n                }\n            }\n\n        }\n        return paid;\n    }","commit_id":"019f6722a7076f50637aaebc8c94f1ef00b29ecd","url":"https://github.com/magefree/mage"},{"original_method":"private static LinkedHashMap<UUID, ManaAbility> getManaAbilitiesUsingManaSymbols(LinkedHashMap<UUID, ManaAbility> useableAbilities, ManaSymbols symbols, Mana unpaidMana) {\n        Set<ManaSymbol> countColored = new HashSet<>();\n\n        ManaAbility chosenManaAbility = null;\n        ManaAbility chosenManaAbilityForHybrid;\n        for (ManaAbility ability : useableAbilities.values()) {\n            chosenManaAbility = getManaAbility(symbols, countColored, chosenManaAbility, ability);\n\n            chosenManaAbilityForHybrid = checkRedMana(symbols, countColored, ability);\n            chosenManaAbility = chosenManaAbilityForHybrid != null ? chosenManaAbilityForHybrid : chosenManaAbility;\n            chosenManaAbilityForHybrid = checkBlackMana(symbols, countColored, ability);\n            chosenManaAbility = chosenManaAbilityForHybrid != null ? chosenManaAbilityForHybrid : chosenManaAbility;\n            chosenManaAbilityForHybrid = checkBlueMana(symbols, countColored, ability);\n            chosenManaAbility = chosenManaAbilityForHybrid != null ? chosenManaAbilityForHybrid : chosenManaAbility;\n            chosenManaAbilityForHybrid = checkWhiteMana(symbols, countColored, ability);\n            chosenManaAbility = chosenManaAbilityForHybrid != null ? chosenManaAbilityForHybrid : chosenManaAbility;\n            chosenManaAbilityForHybrid = checkGreenMana(symbols, countColored, ability);\n            chosenManaAbility = chosenManaAbilityForHybrid != null ? chosenManaAbilityForHybrid : chosenManaAbility;\n        }\n\n        if (countColored.size() == 0) { // seems there is no colorful mana we can pay for\n            // try to pay {1}\n            if (unpaidMana.getColorless() > 0) {\n                // use any (lets choose first)\n                return replace(useableAbilities, useableAbilities.values().iterator().next());\n            }\n\n            // return map as-is without any modification\n            return useableAbilities;\n        }\n\n        if (countColored.size() > 1) {\n            // we may try to pay for hybrid mana symbol\n            Set<ManaSymbol> temp = new HashSet<>();\n            temp.addAll(countColored);\n            for (ManaSymbol manaSymbol : countColored) {\n                // idea: if we have {W/R} symbol then we can remove it if symbols contain {W} or {R}\n                // but only if it doesn't contain both of them\n                if (manaSymbol.isHybrid()) {\n                    boolean found1 = countColored.contains(manaSymbol.getManaSymbol1());\n                    boolean found2 = countColored.contains(manaSymbol.getManaSymbol2());\n                    if (found1 && !found2) {\n                        temp.remove(manaSymbol);\n                    } else if (!found1 && found2) {\n                        temp.remove(manaSymbol);\n                    }\n                }\n            }\n\n            // we got another chance for auto pay\n            if (temp.size() == 1) {\n                for (ManaAbility ability : useableAbilities.values()) {\n                    chosenManaAbility = getManaAbility(symbols, countColored, chosenManaAbility, ability);\n                }\n                return replace(useableAbilities, chosenManaAbility);\n            }\n\n            // we can't auto choose as there are variants of mana payment\n            // return map as-is without any modification\n            return useableAbilities;\n        }\n\n        return replace(useableAbilities, chosenManaAbility);\n    }","id":61921,"modified_method":"private static LinkedHashMap<UUID, ManaAbility> getManaAbilitiesUsingManaSymbols(LinkedHashMap<UUID, ManaAbility> useableAbilities, ManaSymbols symbols, Mana unpaidMana) {\n        Set<ManaSymbol> countColored = new HashSet<>();\n\n        ManaAbility chosenManaAbility = null;\n        ManaAbility chosenManaAbilityForHybrid;\n        for (ManaAbility ability : useableAbilities.values()) {\n            chosenManaAbility = getManaAbility(symbols, countColored, chosenManaAbility, ability);\n\n            chosenManaAbilityForHybrid = checkRedMana(symbols, countColored, ability);\n            chosenManaAbility = chosenManaAbilityForHybrid != null ? chosenManaAbilityForHybrid : chosenManaAbility;\n            chosenManaAbilityForHybrid = checkBlackMana(symbols, countColored, ability);\n            chosenManaAbility = chosenManaAbilityForHybrid != null ? chosenManaAbilityForHybrid : chosenManaAbility;\n            chosenManaAbilityForHybrid = checkBlueMana(symbols, countColored, ability);\n            chosenManaAbility = chosenManaAbilityForHybrid != null ? chosenManaAbilityForHybrid : chosenManaAbility;\n            chosenManaAbilityForHybrid = checkWhiteMana(symbols, countColored, ability);\n            chosenManaAbility = chosenManaAbilityForHybrid != null ? chosenManaAbilityForHybrid : chosenManaAbility;\n            chosenManaAbilityForHybrid = checkGreenMana(symbols, countColored, ability);\n            chosenManaAbility = chosenManaAbilityForHybrid != null ? chosenManaAbilityForHybrid : chosenManaAbility;\n        }\n\n        if (countColored.isEmpty()) { // seems there is no colorful mana we can pay for\n            // try to pay {1}\n            if (unpaidMana.getColorless() > 0) {\n                // use any (lets choose first)\n                return replace(useableAbilities, useableAbilities.values().iterator().next());\n            }\n\n            // return map as-is without any modification\n            return useableAbilities;\n        }\n\n        if (countColored.size() > 1) {\n            // we may try to pay for hybrid mana symbol\n            Set<ManaSymbol> temp = new HashSet<>();\n            temp.addAll(countColored);\n            for (ManaSymbol manaSymbol : countColored) {\n                // idea: if we have {W/R} symbol then we can remove it if symbols contain {W} or {R}\n                // but only if it doesn't contain both of them\n                if (manaSymbol.isHybrid()) {\n                    boolean found1 = countColored.contains(manaSymbol.getManaSymbol1());\n                    boolean found2 = countColored.contains(manaSymbol.getManaSymbol2());\n                    if (found1 && !found2) {\n                        temp.remove(manaSymbol);\n                    } else if (!found1 && found2) {\n                        temp.remove(manaSymbol);\n                    }\n                }\n            }\n\n            // we got another chance for auto pay\n            if (temp.size() == 1) {\n                for (ManaAbility ability : useableAbilities.values()) {\n                    chosenManaAbility = getManaAbility(symbols, countColored, chosenManaAbility, ability);\n                }\n                return replace(useableAbilities, chosenManaAbility);\n            }\n\n            // we can't auto choose as there are variants of mana payment\n            // return map as-is without any modification\n            return useableAbilities;\n        }\n\n        return replace(useableAbilities, chosenManaAbility);\n    }","commit_id":"019f6722a7076f50637aaebc8c94f1ef00b29ecd","url":"https://github.com/magefree/mage"},{"original_method":"public OhranViper(UUID ownerId) {\n        super(ownerId, 57, \"Ohran Viper\", Rarity.RARE, new CardType[]{CardType.CREATURE}, \"{1}{G}{G}\");\n        this.expansionSetCode = \"DDM\";\n        this.supertype.add(\"Snow\");\n        this.subtype.add(\"Snake\");\n\n        this.color.setGreen(true);\n        this.power = new MageInt(1);\n        this.toughness = new MageInt(3);\n\n        // Whenever Ohran Viper deals combat damage to a creature, destroy that creature at end of combat.\n        this.addAbility(new DealsCombatDamageToACreatureTriggeredAbility(new OhranViperDestroyEffect(), false, true));\n        // Whenever Ohran Viper deals combat damage to a player, you may draw a card.\n        this.addAbility(new DealsCombatDamageToAPlayerTriggeredAbility(new DrawCardSourceControllerEffect(1), true));\n    }","id":61922,"modified_method":"public OhranViper(UUID ownerId) {\n        super(ownerId, 57, \"Ohran Viper\", Rarity.RARE, new CardType[]{CardType.CREATURE}, \"{1}{G}{G}\");\n        this.expansionSetCode = \"DDM\";\n        this.supertype.add(\"Snow\");\n        this.subtype.add(\"Snake\");\n\n        this.power = new MageInt(1);\n        this.toughness = new MageInt(3);\n\n        // Whenever Ohran Viper deals combat damage to a creature, destroy that creature at end of combat.\n        this.addAbility(new DealsCombatDamageToACreatureTriggeredAbility(\n                new CreateDelayedTriggeredAbilityEffect(\n                        new AtTheEndOfCombatDelayedTriggeredAbility(new DestroyTargetEffect(\"destroy that creature at end of combat\")), true),\n                false, \n                true));\n\n        // Whenever Ohran Viper deals combat damage to a player, you may draw a card.\n        this.addAbility(new DealsCombatDamageToAPlayerTriggeredAbility(new DrawCardSourceControllerEffect(1), true));\n    }","commit_id":"019f6722a7076f50637aaebc8c94f1ef00b29ecd","url":"https://github.com/magefree/mage"},{"original_method":"public QuenchableFire(UUID ownerId) {\n        super(ownerId, 70, \"Quenchable Fire\", Rarity.COMMON, new CardType[]{CardType.SORCERY}, \"{3}{R}\");\n        this.expansionSetCode = \"CON\";\n        this.color.setRed(true);\n        this.getSpellAbility().addTarget(new TargetPlayer());\n        this.getSpellAbility().addEffect(new DamageTargetEffect(3));\n        this.getSpellAbility().addEffect(new QuenchableFireEffect());\n    }","id":61923,"modified_method":"public QuenchableFire(UUID ownerId) {\n        super(ownerId, 70, \"Quenchable Fire\", Rarity.COMMON, new CardType[]{CardType.SORCERY}, \"{3}{R}\");\n        this.expansionSetCode = \"CON\";\n\n        // Quenchable Fire deals 3 damage to target player.\n        // It deals an additional 3 damage to that player at the beginning of your next upkeep step unless he or she pays {U} before that step.\n        this.getSpellAbility().addTarget(new TargetPlayer());\n        this.getSpellAbility().addEffect(new DamageTargetEffect(3));\n        this.getSpellAbility().addEffect(new QuenchableFireEffect());\n    }","commit_id":"019f6722a7076f50637aaebc8c94f1ef00b29ecd","url":"https://github.com/magefree/mage"},{"original_method":"public static Cast getLegalCast(final Definition definition,\n                                    final String location, final Type actual, final Type expected, final boolean explicit) {\n        final Cast cast = new Cast(actual, expected);\n\n        if (actual.equals(expected)) {\n            return null;\n        }\n\n        if (actual.sort == Sort.DEF && expected.sort != Sort.VOID || actual.sort != Sort.VOID && expected.sort == Sort.DEF) {\n            final Transform transform = definition.transformsMap.get(cast);\n\n            if (transform != null) {\n                return transform;\n            }\n\n            return cast;\n        }\n\n        switch (actual.sort) {\n            case BOOL:\n                switch (expected.sort) {\n                    case OBJECT:\n                    case BOOL_OBJ:\n                        return checkTransform(definition, location, cast);\n                }\n\n                break;\n            case BYTE:\n                switch (expected.sort) {\n                    case SHORT:\n                    case INT:\n                    case LONG:\n                    case FLOAT:\n                    case DOUBLE:\n                        return cast;\n                    case CHAR:\n                        if (explicit)\n                            return cast;\n\n                        break;\n                    case OBJECT:\n                    case NUMBER:\n                    case BYTE_OBJ:\n                    case SHORT_OBJ:\n                    case INT_OBJ:\n                    case LONG_OBJ:\n                    case FLOAT_OBJ:\n                    case DOUBLE_OBJ:\n                        return checkTransform(definition, location, cast);\n                    case CHAR_OBJ:\n                        if (explicit)\n                            return checkTransform(definition, location, cast);\n\n                        break;\n                }\n\n                break;\n            case SHORT:\n                switch (expected.sort) {\n                    case INT:\n                    case LONG:\n                    case FLOAT:\n                    case DOUBLE:\n                        return cast;\n                    case BYTE:\n                    case CHAR:\n                        if (explicit)\n                            return cast;\n\n                        break;\n                    case OBJECT:\n                    case NUMBER:\n                    case SHORT_OBJ:\n                    case INT_OBJ:\n                    case LONG_OBJ:\n                    case FLOAT_OBJ:\n                    case DOUBLE_OBJ:\n                        return checkTransform(definition, location, cast);\n                    case BYTE_OBJ:\n                    case CHAR_OBJ:\n                        if (explicit)\n                            return checkTransform(definition, location, cast);\n\n                        break;\n                }\n\n                break;\n            case CHAR:\n                switch (expected.sort) {\n                    case INT:\n                    case LONG:\n                    case FLOAT:\n                    case DOUBLE:\n                        return cast;\n                    case BYTE:\n                    case SHORT:\n                        if (explicit)\n                            return cast;\n\n                        break;\n                    case OBJECT:\n                    case NUMBER:\n                    case CHAR_OBJ:\n                    case INT_OBJ:\n                    case LONG_OBJ:\n                    case FLOAT_OBJ:\n                    case DOUBLE_OBJ:\n                        return checkTransform(definition, location, cast);\n                    case BYTE_OBJ:\n                    case SHORT_OBJ:\n                    case STRING:\n                        if (explicit)\n                            return checkTransform(definition, location, cast);\n\n                        break;\n                }\n\n                break;\n            case INT:\n                switch (expected.sort) {\n                    case LONG:\n                    case FLOAT:\n                    case DOUBLE:\n                        return cast;\n                    case BYTE:\n                    case SHORT:\n                    case CHAR:\n                        if (explicit)\n                            return cast;\n\n                        break;\n                    case OBJECT:\n                    case NUMBER:\n                    case INT_OBJ:\n                    case LONG_OBJ:\n                    case FLOAT_OBJ:\n                    case DOUBLE_OBJ:\n                        return checkTransform(definition, location, cast);\n                    case BYTE_OBJ:\n                    case SHORT_OBJ:\n                    case CHAR_OBJ:\n                        if (explicit)\n                            return checkTransform(definition, location, cast);\n\n                        break;\n                }\n\n                break;\n            case LONG:\n                switch (expected.sort) {\n                    case FLOAT:\n                    case DOUBLE:\n                        return cast;\n                    case BYTE:\n                    case SHORT:\n                    case CHAR:\n                    case INT:\n                        if (explicit)\n                            return cast;\n\n                        break;\n                    case OBJECT:\n                    case NUMBER:\n                    case LONG_OBJ:\n                    case FLOAT_OBJ:\n                    case DOUBLE_OBJ:\n                        return checkTransform(definition, location, cast);\n                    case BYTE_OBJ:\n                    case SHORT_OBJ:\n                    case CHAR_OBJ:\n                    case INT_OBJ:\n                        if (explicit)\n                            return checkTransform(definition, location, cast);\n\n                        break;\n                }\n\n                break;\n            case FLOAT:\n                switch (expected.sort) {\n                    case DOUBLE:\n                        return cast;\n                    case BYTE:\n                    case SHORT:\n                    case CHAR:\n                    case INT:\n                    case LONG:\n                        if (explicit)\n                            return cast;\n\n                        break;\n                    case OBJECT:\n                    case NUMBER:\n                    case FLOAT_OBJ:\n                    case DOUBLE_OBJ:\n                        return checkTransform(definition, location, cast);\n                    case BYTE_OBJ:\n                    case SHORT_OBJ:\n                    case CHAR_OBJ:\n                    case INT_OBJ:\n                    case LONG_OBJ:\n                        if (explicit)\n                            return checkTransform(definition, location, cast);\n\n                        break;\n                }\n\n                break;\n            case DOUBLE:\n                switch (expected.sort) {\n                    case BYTE:\n                    case SHORT:\n                    case CHAR:\n                    case INT:\n                    case LONG:\n                    case FLOAT:\n                        if (explicit)\n                            return cast;\n\n                        break;\n                    case OBJECT:\n                    case NUMBER:\n                    case DOUBLE_OBJ:\n                        return checkTransform(definition, location, cast);\n                    case BYTE_OBJ:\n                    case SHORT_OBJ:\n                    case CHAR_OBJ:\n                    case INT_OBJ:\n                    case LONG_OBJ:\n                    case FLOAT_OBJ:\n                        if (explicit)\n                            return checkTransform(definition, location, cast);\n\n                        break;\n                }\n\n                break;\n            case OBJECT:\n            case NUMBER:\n                switch (expected.sort) {\n                    case BYTE:\n                    case SHORT:\n                    case CHAR:\n                    case INT:\n                    case LONG:\n                    case FLOAT:\n                    case DOUBLE:\n                        if (explicit)\n                            return checkTransform(definition, location, cast);\n\n                        break;\n                }\n\n                break;\n            case BOOL_OBJ:\n                switch (expected.sort) {\n                    case BOOL:\n                        return checkTransform(definition, location, cast);\n                }\n\n                break;\n            case BYTE_OBJ:\n                switch (expected.sort) {\n                    case BYTE:\n                    case SHORT:\n                    case INT:\n                    case LONG:\n                    case FLOAT:\n                    case DOUBLE:\n                    case SHORT_OBJ:\n                    case INT_OBJ:\n                    case LONG_OBJ:\n                    case FLOAT_OBJ:\n                    case DOUBLE_OBJ:\n                        return checkTransform(definition, location, cast);\n                    case CHAR:\n                    case CHAR_OBJ:\n                        if (explicit)\n                            return checkTransform(definition, location, cast);\n\n                        break;\n                }\n\n                break;\n            case SHORT_OBJ:\n                switch (expected.sort) {\n                    case SHORT:\n                    case INT:\n                    case LONG:\n                    case FLOAT:\n                    case DOUBLE:\n                    case INT_OBJ:\n                    case LONG_OBJ:\n                    case FLOAT_OBJ:\n                    case DOUBLE_OBJ:\n                        return checkTransform(definition, location, cast);\n                    case BYTE:\n                    case CHAR:\n                    case BYTE_OBJ:\n                    case CHAR_OBJ:\n                        if (explicit)\n                            return checkTransform(definition, location, cast);\n\n                        break;\n                }\n\n                break;\n            case CHAR_OBJ:\n                switch (expected.sort) {\n                    case CHAR:\n                    case INT:\n                    case LONG:\n                    case FLOAT:\n                    case DOUBLE:\n                    case INT_OBJ:\n                    case LONG_OBJ:\n                    case FLOAT_OBJ:\n                    case DOUBLE_OBJ:\n                        return checkTransform(definition, location, cast);\n                    case BYTE:\n                    case SHORT:\n                    case BYTE_OBJ:\n                    case SHORT_OBJ:\n                    case STRING:\n                        if (explicit)\n                            return checkTransform(definition, location, cast);\n\n                        break;\n                }\n\n                break;\n            case INT_OBJ:\n                switch (expected.sort) {\n                    case INT:\n                    case LONG:\n                    case FLOAT:\n                    case DOUBLE:\n                    case LONG_OBJ:\n                    case FLOAT_OBJ:\n                    case DOUBLE_OBJ:\n                        return checkTransform(definition, location, cast);\n                    case BYTE:\n                    case SHORT:\n                    case CHAR:\n                    case BYTE_OBJ:\n                    case SHORT_OBJ:\n                    case CHAR_OBJ:\n                        if (explicit)\n                            return checkTransform(definition, location, cast);\n\n                        break;\n                }\n\n                break;\n            case LONG_OBJ:\n                switch (expected.sort) {\n                    case LONG:\n                    case FLOAT:\n                    case DOUBLE:\n                    case FLOAT_OBJ:\n                    case DOUBLE_OBJ:\n                        return checkTransform(definition, location, cast);\n                    case BYTE:\n                    case SHORT:\n                    case CHAR:\n                    case INT:\n                    case BYTE_OBJ:\n                    case SHORT_OBJ:\n                    case CHAR_OBJ:\n                    case INT_OBJ:\n                        if (explicit)\n                            return checkTransform(definition, location, cast);\n\n                        break;\n                }\n\n                break;\n            case FLOAT_OBJ:\n                switch (expected.sort) {\n                    case FLOAT:\n                    case DOUBLE:\n                    case DOUBLE_OBJ:\n                        return checkTransform(definition, location, cast);\n                    case BYTE:\n                    case SHORT:\n                    case CHAR:\n                    case INT:\n                    case LONG:\n                    case BYTE_OBJ:\n                    case SHORT_OBJ:\n                    case CHAR_OBJ:\n                    case INT_OBJ:\n                    case LONG_OBJ:\n                        if (explicit)\n                            return checkTransform(definition, location, cast);\n\n                        break;\n                }\n\n                break;\n            case DOUBLE_OBJ:\n                switch (expected.sort) {\n                    case DOUBLE:\n                        return checkTransform(definition, location, cast);\n                    case BYTE:\n                    case SHORT:\n                    case CHAR:\n                    case INT:\n                    case LONG:\n                    case FLOAT:\n                    case BYTE_OBJ:\n                    case SHORT_OBJ:\n                    case CHAR_OBJ:\n                    case INT_OBJ:\n                    case LONG_OBJ:\n                    case FLOAT_OBJ:\n                        if (explicit)\n                            return checkTransform(definition, location, cast);\n\n                        break;\n                }\n\n                break;\n            case STRING:\n                switch (expected.sort) {\n                    case CHAR:\n                    case CHAR_OBJ:\n                        if (explicit)\n                            return checkTransform(definition, location, cast);\n\n                        break;\n                }\n        }\n\n        try {\n            actual.clazz.asSubclass(expected.clazz);\n\n            return cast;\n        } catch (final ClassCastException cce0) {\n            try {\n                if (explicit) {\n                    expected.clazz.asSubclass(actual.clazz);\n\n                    return cast;\n                } else {\n                    throw new ClassCastException(\n                        \"Error\" + location + \": Cannot cast from [\" + actual.name + \"] to [\" + expected.name + \"].\");\n                }\n            } catch (final ClassCastException cce1) {\n                throw new ClassCastException(\"Error\" + location + \": Cannot cast from [\" + actual.name + \"] to [\" + expected.name + \"].\");\n            }\n        }\n    }","id":61924,"modified_method":"public static Cast getLegalCast(final Definition definition,\n                                    final String location, final Type actual, final Type expected, final boolean explicit) {\n        final Cast cast = new Cast(actual, expected);\n\n        if (actual.equals(expected)) {\n            return null;\n        }\n\n        if (actual.sort == Sort.DEF && expected.sort != Sort.VOID || actual.sort != Sort.VOID && expected.sort == Sort.DEF) {\n            final Transform transform = definition.transformsMap.get(cast);\n\n            if (transform != null) {\n                return transform;\n            }\n\n            return cast;\n        }\n\n        switch (actual.sort) {\n            case BOOL:\n                switch (expected.sort) {\n                    case OBJECT:\n                    case BOOL_OBJ:\n                        return checkTransform(definition, location, cast);\n                }\n\n                break;\n            case BYTE:\n                switch (expected.sort) {\n                    case SHORT:\n                    case INT:\n                    case LONG:\n                    case FLOAT:\n                    case DOUBLE:\n                        return cast;\n                    case CHAR:\n                        if (explicit)\n                            return cast;\n\n                        break;\n                    case OBJECT:\n                    case NUMBER:\n                    case BYTE_OBJ:\n                    case SHORT_OBJ:\n                    case INT_OBJ:\n                    case LONG_OBJ:\n                    case FLOAT_OBJ:\n                    case DOUBLE_OBJ:\n                        return checkTransform(definition, location, cast);\n                    case CHAR_OBJ:\n                        if (explicit)\n                            return checkTransform(definition, location, cast);\n\n                        break;\n                }\n\n                break;\n            case SHORT:\n                switch (expected.sort) {\n                    case INT:\n                    case LONG:\n                    case FLOAT:\n                    case DOUBLE:\n                        return cast;\n                    case BYTE:\n                    case CHAR:\n                        if (explicit)\n                            return cast;\n\n                        break;\n                    case OBJECT:\n                    case NUMBER:\n                    case SHORT_OBJ:\n                    case INT_OBJ:\n                    case LONG_OBJ:\n                    case FLOAT_OBJ:\n                    case DOUBLE_OBJ:\n                        return checkTransform(definition, location, cast);\n                    case BYTE_OBJ:\n                    case CHAR_OBJ:\n                        if (explicit)\n                            return checkTransform(definition, location, cast);\n\n                        break;\n                }\n\n                break;\n            case CHAR:\n                switch (expected.sort) {\n                    case INT:\n                    case LONG:\n                    case FLOAT:\n                    case DOUBLE:\n                        return cast;\n                    case BYTE:\n                    case SHORT:\n                        if (explicit)\n                            return cast;\n\n                        break;\n                    case OBJECT:\n                    case NUMBER:\n                    case CHAR_OBJ:\n                    case INT_OBJ:\n                    case LONG_OBJ:\n                    case FLOAT_OBJ:\n                    case DOUBLE_OBJ:\n                        return checkTransform(definition, location, cast);\n                    case BYTE_OBJ:\n                    case SHORT_OBJ:\n                    case STRING:\n                        if (explicit)\n                            return checkTransform(definition, location, cast);\n\n                        break;\n                }\n\n                break;\n            case INT:\n                switch (expected.sort) {\n                    case LONG:\n                    case FLOAT:\n                    case DOUBLE:\n                        return cast;\n                    case BYTE:\n                    case SHORT:\n                    case CHAR:\n                        if (explicit)\n                            return cast;\n\n                        break;\n                    case OBJECT:\n                    case NUMBER:\n                    case INT_OBJ:\n                    case LONG_OBJ:\n                    case FLOAT_OBJ:\n                    case DOUBLE_OBJ:\n                        return checkTransform(definition, location, cast);\n                    case BYTE_OBJ:\n                    case SHORT_OBJ:\n                    case CHAR_OBJ:\n                        if (explicit)\n                            return checkTransform(definition, location, cast);\n\n                        break;\n                }\n\n                break;\n            case LONG:\n                switch (expected.sort) {\n                    case FLOAT:\n                    case DOUBLE:\n                        return cast;\n                    case BYTE:\n                    case SHORT:\n                    case CHAR:\n                    case INT:\n                        if (explicit)\n                            return cast;\n\n                        break;\n                    case OBJECT:\n                    case NUMBER:\n                    case LONG_OBJ:\n                    case FLOAT_OBJ:\n                    case DOUBLE_OBJ:\n                        return checkTransform(definition, location, cast);\n                    case BYTE_OBJ:\n                    case SHORT_OBJ:\n                    case CHAR_OBJ:\n                    case INT_OBJ:\n                        if (explicit)\n                            return checkTransform(definition, location, cast);\n\n                        break;\n                }\n\n                break;\n            case FLOAT:\n                switch (expected.sort) {\n                    case DOUBLE:\n                        return cast;\n                    case BYTE:\n                    case SHORT:\n                    case CHAR:\n                    case INT:\n                    case LONG:\n                        if (explicit)\n                            return cast;\n\n                        break;\n                    case OBJECT:\n                    case NUMBER:\n                    case FLOAT_OBJ:\n                    case DOUBLE_OBJ:\n                        return checkTransform(definition, location, cast);\n                    case BYTE_OBJ:\n                    case SHORT_OBJ:\n                    case CHAR_OBJ:\n                    case INT_OBJ:\n                    case LONG_OBJ:\n                        if (explicit)\n                            return checkTransform(definition, location, cast);\n\n                        break;\n                }\n\n                break;\n            case DOUBLE:\n                switch (expected.sort) {\n                    case BYTE:\n                    case SHORT:\n                    case CHAR:\n                    case INT:\n                    case LONG:\n                    case FLOAT:\n                        if (explicit)\n                            return cast;\n\n                        break;\n                    case OBJECT:\n                    case NUMBER:\n                    case DOUBLE_OBJ:\n                        return checkTransform(definition, location, cast);\n                    case BYTE_OBJ:\n                    case SHORT_OBJ:\n                    case CHAR_OBJ:\n                    case INT_OBJ:\n                    case LONG_OBJ:\n                    case FLOAT_OBJ:\n                        if (explicit)\n                            return checkTransform(definition, location, cast);\n\n                        break;\n                }\n\n                break;\n            case OBJECT:\n            case NUMBER:\n                switch (expected.sort) {\n                    case BYTE:\n                    case SHORT:\n                    case CHAR:\n                    case INT:\n                    case LONG:\n                    case FLOAT:\n                    case DOUBLE:\n                        if (explicit)\n                            return checkTransform(definition, location, cast);\n\n                        break;\n                }\n\n                break;\n            case BOOL_OBJ:\n                switch (expected.sort) {\n                    case BOOL:\n                        return checkTransform(definition, location, cast);\n                }\n\n                break;\n            case BYTE_OBJ:\n                switch (expected.sort) {\n                    case BYTE:\n                    case SHORT:\n                    case INT:\n                    case LONG:\n                    case FLOAT:\n                    case DOUBLE:\n                    case SHORT_OBJ:\n                    case INT_OBJ:\n                    case LONG_OBJ:\n                    case FLOAT_OBJ:\n                    case DOUBLE_OBJ:\n                        return checkTransform(definition, location, cast);\n                    case CHAR:\n                    case CHAR_OBJ:\n                        if (explicit)\n                            return checkTransform(definition, location, cast);\n\n                        break;\n                }\n\n                break;\n            case SHORT_OBJ:\n                switch (expected.sort) {\n                    case SHORT:\n                    case INT:\n                    case LONG:\n                    case FLOAT:\n                    case DOUBLE:\n                    case INT_OBJ:\n                    case LONG_OBJ:\n                    case FLOAT_OBJ:\n                    case DOUBLE_OBJ:\n                        return checkTransform(definition, location, cast);\n                    case BYTE:\n                    case CHAR:\n                    case BYTE_OBJ:\n                    case CHAR_OBJ:\n                        if (explicit)\n                            return checkTransform(definition, location, cast);\n\n                        break;\n                }\n\n                break;\n            case CHAR_OBJ:\n                switch (expected.sort) {\n                    case CHAR:\n                    case INT:\n                    case LONG:\n                    case FLOAT:\n                    case DOUBLE:\n                    case INT_OBJ:\n                    case LONG_OBJ:\n                    case FLOAT_OBJ:\n                    case DOUBLE_OBJ:\n                        return checkTransform(definition, location, cast);\n                    case BYTE:\n                    case SHORT:\n                    case BYTE_OBJ:\n                    case SHORT_OBJ:\n                    case STRING:\n                        if (explicit)\n                            return checkTransform(definition, location, cast);\n\n                        break;\n                }\n\n                break;\n            case INT_OBJ:\n                switch (expected.sort) {\n                    case INT:\n                    case LONG:\n                    case FLOAT:\n                    case DOUBLE:\n                    case LONG_OBJ:\n                    case FLOAT_OBJ:\n                    case DOUBLE_OBJ:\n                        return checkTransform(definition, location, cast);\n                    case BYTE:\n                    case SHORT:\n                    case CHAR:\n                    case BYTE_OBJ:\n                    case SHORT_OBJ:\n                    case CHAR_OBJ:\n                        if (explicit)\n                            return checkTransform(definition, location, cast);\n\n                        break;\n                }\n\n                break;\n            case LONG_OBJ:\n                switch (expected.sort) {\n                    case LONG:\n                    case FLOAT:\n                    case DOUBLE:\n                    case FLOAT_OBJ:\n                    case DOUBLE_OBJ:\n                        return checkTransform(definition, location, cast);\n                    case BYTE:\n                    case SHORT:\n                    case CHAR:\n                    case INT:\n                    case BYTE_OBJ:\n                    case SHORT_OBJ:\n                    case CHAR_OBJ:\n                    case INT_OBJ:\n                        if (explicit)\n                            return checkTransform(definition, location, cast);\n\n                        break;\n                }\n\n                break;\n            case FLOAT_OBJ:\n                switch (expected.sort) {\n                    case FLOAT:\n                    case DOUBLE:\n                    case DOUBLE_OBJ:\n                        return checkTransform(definition, location, cast);\n                    case BYTE:\n                    case SHORT:\n                    case CHAR:\n                    case INT:\n                    case LONG:\n                    case BYTE_OBJ:\n                    case SHORT_OBJ:\n                    case CHAR_OBJ:\n                    case INT_OBJ:\n                    case LONG_OBJ:\n                        if (explicit)\n                            return checkTransform(definition, location, cast);\n\n                        break;\n                }\n\n                break;\n            case DOUBLE_OBJ:\n                switch (expected.sort) {\n                    case DOUBLE:\n                        return checkTransform(definition, location, cast);\n                    case BYTE:\n                    case SHORT:\n                    case CHAR:\n                    case INT:\n                    case LONG:\n                    case FLOAT:\n                    case BYTE_OBJ:\n                    case SHORT_OBJ:\n                    case CHAR_OBJ:\n                    case INT_OBJ:\n                    case LONG_OBJ:\n                    case FLOAT_OBJ:\n                        if (explicit)\n                            return checkTransform(definition, location, cast);\n\n                        break;\n                }\n\n                break;\n            case STRING:\n                switch (expected.sort) {\n                    case CHAR:\n                    case CHAR_OBJ:\n                        if (explicit)\n                            return checkTransform(definition, location, cast);\n\n                        break;\n                }\n        }\n\n        if (expected.clazz.isAssignableFrom(actual.clazz) || (explicit && actual.clazz.isAssignableFrom(expected.clazz))) {\n            return cast;\n        } else {\n            throw new ClassCastException(\"Error\" + location + \": Cannot cast from [\" + actual.name + \"] to [\" + expected.name + \"].\");\n        }\n    }","commit_id":"8195ef9e7a574a8b2e62d1fda3c0fe6a3249d21d","url":"https://github.com/elastic/elasticsearch"},{"original_method":"private final void addConstructor(final String struct, final String name, final Type[] args, final Type[] genargs) {\n        final Struct owner = structsMap.get(struct);\n\n        if (owner == null) {\n            throw new IllegalArgumentException(\n                \"Owner struct [\" + struct + \"] not defined for constructor [\" + name + \"].\");\n        }\n\n        if (!name.matches(\"^[_a-zA-Z][_a-zA-Z0-9]*$\")) {\n            throw new IllegalArgumentException(\n                \"Invalid constructor name [\" + name + \"] with the struct [\" + owner.name + \"].\");\n        }\n\n        if (owner.constructors.containsKey(name)) {\n            throw new IllegalArgumentException(\n                \"Duplicate constructor name [\" + name + \"] found within the struct [\" + owner.name + \"].\");\n        }\n\n        if (owner.statics.containsKey(name)) {\n            throw new IllegalArgumentException(\"Constructors and functions may not have the same name\" +\n                \" [\" + name + \"] within the same struct [\" + owner.name + \"].\");\n        }\n\n        if (owner.methods.containsKey(name)) {\n            throw new IllegalArgumentException(\"Constructors and methods may not have the same name\" +\n                \" [\" + name + \"] within the same struct [\" + owner.name + \"].\");\n        }\n\n        final Class<?>[] classes = new Class<?>[args.length];\n\n        for (int count = 0; count < classes.length; ++count) {\n            if (genargs != null) {\n                try {\n                    genargs[count].clazz.asSubclass(args[count].clazz);\n                } catch (final ClassCastException exception) {\n                    throw new ClassCastException(\"Generic argument [\" + genargs[count].name + \"]\" +\n                        \" is not a sub class of [\" + args[count].name + \"] in the constructor\" +\n                        \" [\" + name + \" ] from the struct [\" + owner.name + \"].\");\n                }\n            }\n\n            classes[count] = args[count].clazz;\n        }\n\n        final java.lang.reflect.Constructor<?> reflect;\n\n        try {\n            reflect = owner.clazz.getConstructor(classes);\n        } catch (final NoSuchMethodException exception) {\n            throw new IllegalArgumentException(\"Constructor [\" + name + \"] not found for class\" +\n                \" [\" + owner.clazz.getName() + \"] with arguments \" + Arrays.toString(classes) + \".\");\n        }\n\n        final org.objectweb.asm.commons.Method asm = org.objectweb.asm.commons.Method.getMethod(reflect);\n        final Constructor constructor =\n            new Constructor(name, owner, Arrays.asList(genargs != null ? genargs : args), asm, reflect);\n\n        owner.constructors.put(name, constructor);\n    }","id":61925,"modified_method":"private final void addConstructor(final String struct, final String name, final Type[] args, final Type[] genargs) {\n        final Struct owner = structsMap.get(struct);\n\n        if (owner == null) {\n            throw new IllegalArgumentException(\n                \"Owner struct [\" + struct + \"] not defined for constructor [\" + name + \"].\");\n        }\n\n        if (!name.matches(\"^[_a-zA-Z][_a-zA-Z0-9]*$\")) {\n            throw new IllegalArgumentException(\n                \"Invalid constructor name [\" + name + \"] with the struct [\" + owner.name + \"].\");\n        }\n\n        if (owner.constructors.containsKey(name)) {\n            throw new IllegalArgumentException(\n                \"Duplicate constructor name [\" + name + \"] found within the struct [\" + owner.name + \"].\");\n        }\n\n        if (owner.statics.containsKey(name)) {\n            throw new IllegalArgumentException(\"Constructors and functions may not have the same name\" +\n                \" [\" + name + \"] within the same struct [\" + owner.name + \"].\");\n        }\n\n        if (owner.methods.containsKey(name)) {\n            throw new IllegalArgumentException(\"Constructors and methods may not have the same name\" +\n                \" [\" + name + \"] within the same struct [\" + owner.name + \"].\");\n        }\n\n        final Class<?>[] classes = new Class<?>[args.length];\n\n        for (int count = 0; count < classes.length; ++count) {\n            if (genargs != null) {\n                if (!args[count].clazz.isAssignableFrom(genargs[count].clazz)) {\n                    throw new ClassCastException(\"Generic argument [\" + genargs[count].name + \"]\" +\n                        \" is not a sub class of [\" + args[count].name + \"] in the constructor\" +\n                        \" [\" + name + \" ] from the struct [\" + owner.name + \"].\");\n                }\n            }\n\n            classes[count] = args[count].clazz;\n        }\n\n        final java.lang.reflect.Constructor<?> reflect;\n\n        try {\n            reflect = owner.clazz.getConstructor(classes);\n        } catch (final NoSuchMethodException exception) {\n            throw new IllegalArgumentException(\"Constructor [\" + name + \"] not found for class\" +\n                \" [\" + owner.clazz.getName() + \"] with arguments \" + Arrays.toString(classes) + \".\");\n        }\n\n        final org.objectweb.asm.commons.Method asm = org.objectweb.asm.commons.Method.getMethod(reflect);\n        final Constructor constructor =\n            new Constructor(name, owner, Arrays.asList(genargs != null ? genargs : args), asm, reflect);\n\n        owner.constructors.put(name, constructor);\n    }","commit_id":"8195ef9e7a574a8b2e62d1fda3c0fe6a3249d21d","url":"https://github.com/elastic/elasticsearch"},{"original_method":"private final void addMethod(final String struct, final String name, final String alias, final boolean statik,\n                                final Type rtn, final Type[] args, final Type genrtn, final Type[] genargs) {\n        final Struct owner = structsMap.get(struct);\n\n        if (owner == null) {\n            throw new IllegalArgumentException(\"Owner struct [\" + struct + \"] not defined\" +\n                \" for \" + (statik ? \"function\" : \"method\") + \" [\" + name + \"].\");\n        }\n\n        if (!name.matches(\"^[_a-zA-Z][_a-zA-Z0-9]*$\")) {\n            throw new IllegalArgumentException(\"Invalid \" + (statik ? \"function\" : \"method\") +\n                \" name [\" + name + \"] with the struct [\" + owner.name + \"].\");\n        }\n\n        if (owner.constructors.containsKey(name)) {\n            throw new IllegalArgumentException(\"Constructors and \" + (statik ? \"functions\" : \"methods\") +\n                \" may not have the same name [\" + name + \"] within the same struct\" +\n                \" [\" + owner.name + \"].\");\n        }\n\n        if (owner.statics.containsKey(name)) {\n            if (statik) {\n                throw new IllegalArgumentException(\n                    \"Duplicate function name [\" + name + \"] found within the struct [\" + owner.name + \"].\");\n            } else {\n                throw new IllegalArgumentException(\"Functions and methods may not have the same name\" +\n                    \" [\" + name + \"] within the same struct [\" + owner.name + \"].\");\n            }\n        }\n\n        if (owner.methods.containsKey(name)) {\n            if (statik) {\n                throw new IllegalArgumentException(\"Functions and methods may not have the same name\" +\n                    \" [\" + name + \"] within the same struct [\" + owner.name + \"].\");\n            } else {\n                throw new IllegalArgumentException(\"Duplicate method name [\" + name + \"]\" +\n                    \" found within the struct [\" + owner.name + \"].\");\n            }\n        }\n\n        if (genrtn != null) {\n            try {\n                genrtn.clazz.asSubclass(rtn.clazz);\n            } catch (final ClassCastException exception) {\n                throw new ClassCastException(\"Generic return [\" + genrtn.clazz.getCanonicalName() + \"]\" +\n                    \" is not a sub class of [\" + rtn.clazz.getCanonicalName() + \"] in the method\" +\n                    \" [\" + name + \" ] from the struct [\" + owner.name + \"].\");\n            }\n        }\n\n        if (genargs != null && genargs.length != args.length) {\n            throw new IllegalArgumentException(\"Generic arguments arity [\" +  genargs.length + \"] is not the same as \" +\n                (statik ? \"function\" : \"method\") + \" [\" + name + \"] arguments arity\" +\n                \" [\" + args.length + \"] within the struct [\" + owner.name + \"].\");\n        }\n\n        final Class<?>[] classes = new Class<?>[args.length];\n\n        for (int count = 0; count < classes.length; ++count) {\n            if (genargs != null) {\n                try {\n                    genargs[count].clazz.asSubclass(args[count].clazz);\n                } catch (final ClassCastException exception) {\n                    throw new ClassCastException(\"Generic argument [\" + genargs[count].name + \"] is not a sub class\" +\n                        \" of [\" + args[count].name + \"] in the \" + (statik ? \"function\" : \"method\") +\n                        \" [\" + name + \" ] from the struct [\" + owner.name + \"].\");\n                }\n            }\n\n            classes[count] = args[count].clazz;\n        }\n\n        final java.lang.reflect.Method reflect;\n\n        try {\n            reflect = owner.clazz.getMethod(alias == null ? name : alias, classes);\n        } catch (final NoSuchMethodException exception) {\n            throw new IllegalArgumentException((statik ? \"Function\" : \"Method\") +\n                \" [\" + (alias == null ? name : alias) + \"] not found for class [\" + owner.clazz.getName() + \"]\" +\n                \" with arguments \" + Arrays.toString(classes) + \".\");\n        }\n\n        if (!reflect.getReturnType().equals(rtn.clazz)) {\n            throw new IllegalArgumentException(\"Specified return type class [\" + rtn.clazz + \"]\" +\n                \" does not match the found return type class [\" + reflect.getReturnType() + \"] for the \" +\n                (statik ? \"function\" : \"method\") + \" [\" + name + \"]\" +\n                \" within the struct [\" + owner.name + \"].\");\n        }\n\n        final org.objectweb.asm.commons.Method asm = org.objectweb.asm.commons.Method.getMethod(reflect);\n\n        MethodHandle handle;\n\n        try {\n            handle = MethodHandles.publicLookup().in(owner.clazz).unreflect(reflect);\n        } catch (final IllegalAccessException exception) {\n            throw new IllegalArgumentException(\"Method [\" + (alias == null ? name : alias) + \"]\" +\n                \" not found for class [\" + owner.clazz.getName() + \"]\" +\n                \" with arguments \" + Arrays.toString(classes) + \".\");\n        }\n\n        final Method method = new Method(name, owner, genrtn != null ? genrtn : rtn,\n            Arrays.asList(genargs != null ? genargs : args), asm, reflect, handle);\n        final int modifiers = reflect.getModifiers();\n\n        if (statik) {\n            if (!java.lang.reflect.Modifier.isStatic(modifiers)) {\n                throw new IllegalArgumentException(\"Function [\" + name + \"]\" +\n                    \" within the struct [\" + owner.name + \"] is not linked to a static Java method.\");\n            }\n\n            owner.functions.put(name, method);\n        } else {\n            if (java.lang.reflect.Modifier.isStatic(modifiers)) {\n                throw new IllegalArgumentException(\"Method [\" + name + \"]\" +\n                    \" within the struct [\" + owner.name + \"] is not linked to a non-static Java method.\");\n            }\n\n            owner.methods.put(name, method);\n        }\n    }","id":61926,"modified_method":"private final void addMethod(final String struct, final String name, final String alias, final boolean statik,\n                                final Type rtn, final Type[] args, final Type genrtn, final Type[] genargs) {\n        final Struct owner = structsMap.get(struct);\n\n        if (owner == null) {\n            throw new IllegalArgumentException(\"Owner struct [\" + struct + \"] not defined\" +\n                \" for \" + (statik ? \"function\" : \"method\") + \" [\" + name + \"].\");\n        }\n\n        if (!name.matches(\"^[_a-zA-Z][_a-zA-Z0-9]*$\")) {\n            throw new IllegalArgumentException(\"Invalid \" + (statik ? \"function\" : \"method\") +\n                \" name [\" + name + \"] with the struct [\" + owner.name + \"].\");\n        }\n\n        if (owner.constructors.containsKey(name)) {\n            throw new IllegalArgumentException(\"Constructors and \" + (statik ? \"functions\" : \"methods\") +\n                \" may not have the same name [\" + name + \"] within the same struct\" +\n                \" [\" + owner.name + \"].\");\n        }\n\n        if (owner.statics.containsKey(name)) {\n            if (statik) {\n                throw new IllegalArgumentException(\n                    \"Duplicate function name [\" + name + \"] found within the struct [\" + owner.name + \"].\");\n            } else {\n                throw new IllegalArgumentException(\"Functions and methods may not have the same name\" +\n                    \" [\" + name + \"] within the same struct [\" + owner.name + \"].\");\n            }\n        }\n\n        if (owner.methods.containsKey(name)) {\n            if (statik) {\n                throw new IllegalArgumentException(\"Functions and methods may not have the same name\" +\n                    \" [\" + name + \"] within the same struct [\" + owner.name + \"].\");\n            } else {\n                throw new IllegalArgumentException(\"Duplicate method name [\" + name + \"]\" +\n                    \" found within the struct [\" + owner.name + \"].\");\n            }\n        }\n\n        if (genrtn != null) {\n            if (!rtn.clazz.isAssignableFrom(genrtn.clazz)) {\n                throw new ClassCastException(\"Generic return [\" + genrtn.clazz.getCanonicalName() + \"]\" +\n                    \" is not a sub class of [\" + rtn.clazz.getCanonicalName() + \"] in the method\" +\n                    \" [\" + name + \" ] from the struct [\" + owner.name + \"].\");\n            }\n        }\n\n        if (genargs != null && genargs.length != args.length) {\n            throw new IllegalArgumentException(\"Generic arguments arity [\" +  genargs.length + \"] is not the same as \" +\n                (statik ? \"function\" : \"method\") + \" [\" + name + \"] arguments arity\" +\n                \" [\" + args.length + \"] within the struct [\" + owner.name + \"].\");\n        }\n\n        final Class<?>[] classes = new Class<?>[args.length];\n\n        for (int count = 0; count < classes.length; ++count) {\n            if (genargs != null) {\n                if (!args[count].clazz.isAssignableFrom(genargs[count].clazz)) {\n                    throw new ClassCastException(\"Generic argument [\" + genargs[count].name + \"] is not a sub class\" +\n                        \" of [\" + args[count].name + \"] in the \" + (statik ? \"function\" : \"method\") +\n                        \" [\" + name + \" ] from the struct [\" + owner.name + \"].\");\n                }\n            }\n\n            classes[count] = args[count].clazz;\n        }\n\n        final java.lang.reflect.Method reflect;\n\n        try {\n            reflect = owner.clazz.getMethod(alias == null ? name : alias, classes);\n        } catch (final NoSuchMethodException exception) {\n            throw new IllegalArgumentException((statik ? \"Function\" : \"Method\") +\n                \" [\" + (alias == null ? name : alias) + \"] not found for class [\" + owner.clazz.getName() + \"]\" +\n                \" with arguments \" + Arrays.toString(classes) + \".\");\n        }\n\n        if (!reflect.getReturnType().equals(rtn.clazz)) {\n            throw new IllegalArgumentException(\"Specified return type class [\" + rtn.clazz + \"]\" +\n                \" does not match the found return type class [\" + reflect.getReturnType() + \"] for the \" +\n                (statik ? \"function\" : \"method\") + \" [\" + name + \"]\" +\n                \" within the struct [\" + owner.name + \"].\");\n        }\n\n        final org.objectweb.asm.commons.Method asm = org.objectweb.asm.commons.Method.getMethod(reflect);\n\n        MethodHandle handle;\n\n        try {\n            handle = MethodHandles.publicLookup().in(owner.clazz).unreflect(reflect);\n        } catch (final IllegalAccessException exception) {\n            throw new IllegalArgumentException(\"Method [\" + (alias == null ? name : alias) + \"]\" +\n                \" not found for class [\" + owner.clazz.getName() + \"]\" +\n                \" with arguments \" + Arrays.toString(classes) + \".\");\n        }\n\n        final Method method = new Method(name, owner, genrtn != null ? genrtn : rtn,\n            Arrays.asList(genargs != null ? genargs : args), asm, reflect, handle);\n        final int modifiers = reflect.getModifiers();\n\n        if (statik) {\n            if (!java.lang.reflect.Modifier.isStatic(modifiers)) {\n                throw new IllegalArgumentException(\"Function [\" + name + \"]\" +\n                    \" within the struct [\" + owner.name + \"] is not linked to a static Java method.\");\n            }\n\n            owner.functions.put(name, method);\n        } else {\n            if (java.lang.reflect.Modifier.isStatic(modifiers)) {\n                throw new IllegalArgumentException(\"Method [\" + name + \"]\" +\n                    \" within the struct [\" + owner.name + \"] is not linked to a non-static Java method.\");\n            }\n\n            owner.methods.put(name, method);\n        }\n    }","commit_id":"8195ef9e7a574a8b2e62d1fda3c0fe6a3249d21d","url":"https://github.com/elastic/elasticsearch"},{"original_method":"private final void addTransform(final Type from, final Type to, final String struct,\n                                   final String name, final boolean statik) {\n        final Struct owner = structsMap.get(struct);\n\n        if (owner == null) {\n            throw new IllegalArgumentException(\"Owner struct [\" + struct + \"] not defined for\" +\n                \" transform with cast type from [\" + from.name + \"] and cast type to [\" + to.name + \"].\");\n        }\n\n        if (from.equals(to)) {\n            throw new IllegalArgumentException(\"Transform with owner struct [\" + owner.name + \"] cannot\" +\n                \" have cast type from [\" + from.name + \"] be the same as cast type to [\" + to.name + \"].\");\n        }\n\n        final Cast cast = new Cast(from, to);\n\n        if (transformsMap.containsKey(cast)) {\n            throw new IllegalArgumentException(\"Transform with owner struct [\" + owner.name + \"]\" +\n                \" and cast type from [\" + from.name + \"] to cast type to [\" + to.name + \"] already defined.\");\n        }\n\n        Method method;\n        Type upcast = null;\n        Type downcast = null;\n\n        if (statik) {\n            method = owner.functions.get(name);\n\n            if (method == null) {\n                throw new IllegalArgumentException(\"Transform with owner struct [\" + owner.name + \"]\" +\n                    \" and cast type from [\" + from.name + \"] to cast type to [\" + to.name +\n                    \"] using a function [\" + name + \"] that is not defined.\");\n            }\n\n            if (method.arguments.size() != 1) {\n                throw new IllegalArgumentException(\"Transform with owner struct [\" + owner.name + \"]\" +\n                    \" and cast type from [\" + from.name + \"] to cast type to [\" + to.name +\n                    \"] using function [\" + name + \"] does not have a single type argument.\");\n            }\n\n            Type argument = method.arguments.get(0);\n\n            try {\n                from.clazz.asSubclass(argument.clazz);\n            } catch (final ClassCastException cce0) {\n                try {\n                    argument.clazz.asSubclass(from.clazz);\n                    upcast = argument;\n                } catch (final ClassCastException cce1) {\n                    throw new ClassCastException(\"Transform with owner struct [\" + owner.name + \"]\" +\n                        \" and cast type from [\" + from.name + \"] to cast type to [\" + to.name + \"] using\" +\n                        \" function [\" + name + \"] cannot cast from type to the function input argument type.\");\n                }\n            }\n\n            final Type rtn = method.rtn;\n\n            try {\n                rtn.clazz.asSubclass(to.clazz);\n            } catch (final ClassCastException cce0) {\n                try {\n                    to.clazz.asSubclass(rtn.clazz);\n                    downcast = to;\n                } catch (final ClassCastException cce1) {\n                    throw new ClassCastException(\"Transform with owner struct [\" + owner.name + \"]\" +\n                        \" and cast type from [\" + from.name + \"] to cast type to [\" + to.name + \"] using\" +\n                        \" function [\" + name + \"] cannot cast to type to the function return argument type.\");\n                }\n            }\n        } else {\n            method = owner.methods.get(name);\n\n            if (method == null) {\n                throw new IllegalArgumentException(\"Transform with owner struct [\" + owner.name + \"]\" +\n                    \" and cast type from [\" + from.name + \"] to cast type to [\" + to.name +\n                    \"] using a method [\" + name + \"] that is not defined.\");\n            }\n\n            if (!method.arguments.isEmpty()) {\n                throw new IllegalArgumentException(\"Transform with owner struct [\" + owner.name + \"]\" +\n                    \" and cast type from [\" + from.name + \"] to cast type to [\" + to.name +\n                    \"] using method [\" + name + \"] does not have a single type argument.\");\n            }\n\n            try {\n                from.clazz.asSubclass(owner.clazz);\n            } catch (final ClassCastException cce0) {\n                try {\n                    owner.clazz.asSubclass(from.clazz);\n                    upcast = getType(owner.name);\n                } catch (final ClassCastException cce1) {\n                    throw new ClassCastException(\"Transform with owner struct [\" + owner.name + \"]\" +\n                        \" and cast type from [\" + from.name + \"] to cast type to [\" + to.name + \"] using\" +\n                        \" method [\" + name + \"] cannot cast from type to the method input argument type.\");\n                }\n            }\n\n            final Type rtn = method.rtn;\n\n            try {\n                rtn.clazz.asSubclass(to.clazz);\n            } catch (final ClassCastException cce0) {\n                try {\n                    to.clazz.asSubclass(rtn.clazz);\n                    downcast = to;\n                } catch (final ClassCastException cce1) {\n                    throw new ClassCastException(\"Transform with owner struct [\" + owner.name + \"]\" +\n                        \" and cast type from [\" + from.name + \"] to cast type to [\" + to.name + \"]\" +\n                        \" using method [\" + name + \"] cannot cast to type to the method return argument type.\");\n                }\n            }\n        }\n\n        final Transform transform = new Transform(cast, method, upcast, downcast);\n        transformsMap.put(cast, transform);\n    }","id":61927,"modified_method":"private final void addTransform(final Type from, final Type to, final String struct,\n                                   final String name, final boolean statik) {\n        final Struct owner = structsMap.get(struct);\n\n        if (owner == null) {\n            throw new IllegalArgumentException(\"Owner struct [\" + struct + \"] not defined for\" +\n                \" transform with cast type from [\" + from.name + \"] and cast type to [\" + to.name + \"].\");\n        }\n\n        if (from.equals(to)) {\n            throw new IllegalArgumentException(\"Transform with owner struct [\" + owner.name + \"] cannot\" +\n                \" have cast type from [\" + from.name + \"] be the same as cast type to [\" + to.name + \"].\");\n        }\n\n        final Cast cast = new Cast(from, to);\n\n        if (transformsMap.containsKey(cast)) {\n            throw new IllegalArgumentException(\"Transform with owner struct [\" + owner.name + \"]\" +\n                \" and cast type from [\" + from.name + \"] to cast type to [\" + to.name + \"] already defined.\");\n        }\n\n        Method method;\n        Type upcast = null;\n        Type downcast = null;\n\n        if (statik) {\n            method = owner.functions.get(name);\n\n            if (method == null) {\n                throw new IllegalArgumentException(\"Transform with owner struct [\" + owner.name + \"]\" +\n                    \" and cast type from [\" + from.name + \"] to cast type to [\" + to.name +\n                    \"] using a function [\" + name + \"] that is not defined.\");\n            }\n\n            if (method.arguments.size() != 1) {\n                throw new IllegalArgumentException(\"Transform with owner struct [\" + owner.name + \"]\" +\n                    \" and cast type from [\" + from.name + \"] to cast type to [\" + to.name +\n                    \"] using function [\" + name + \"] does not have a single type argument.\");\n            }\n\n            Type argument = method.arguments.get(0);\n\n            if (!argument.clazz.isAssignableFrom(from.clazz)) {\n                if (from.clazz.isAssignableFrom(argument.clazz)) {\n                    upcast = argument;\n                } else {\n                    throw new ClassCastException(\"Transform with owner struct [\" + owner.name + \"]\" +\n                        \" and cast type from [\" + from.name + \"] to cast type to [\" + to.name + \"] using\" +\n                        \" function [\" + name + \"] cannot cast from type to the function input argument type.\");\n                }\n            }\n\n            final Type rtn = method.rtn;\n\n            if (!to.clazz.isAssignableFrom(rtn.clazz)) {\n                if (rtn.clazz.isAssignableFrom(to.clazz)) {\n                    downcast = to;\n                } else {\n                    throw new ClassCastException(\"Transform with owner struct [\" + owner.name + \"]\" +\n                        \" and cast type from [\" + from.name + \"] to cast type to [\" + to.name + \"] using\" +\n                        \" function [\" + name + \"] cannot cast to type to the function return argument type.\");\n                }\n            }\n        } else {\n            method = owner.methods.get(name);\n\n            if (method == null) {\n                throw new IllegalArgumentException(\"Transform with owner struct [\" + owner.name + \"]\" +\n                    \" and cast type from [\" + from.name + \"] to cast type to [\" + to.name +\n                    \"] using a method [\" + name + \"] that is not defined.\");\n            }\n\n            if (!method.arguments.isEmpty()) {\n                throw new IllegalArgumentException(\"Transform with owner struct [\" + owner.name + \"]\" +\n                    \" and cast type from [\" + from.name + \"] to cast type to [\" + to.name +\n                    \"] using method [\" + name + \"] does not have a single type argument.\");\n            }\n\n            if (!owner.clazz.isAssignableFrom(from.clazz)) {\n                if (from.clazz.isAssignableFrom(owner.clazz)) {\n                    upcast = getType(owner.name);\n                } else {\n                    throw new ClassCastException(\"Transform with owner struct [\" + owner.name + \"]\" +\n                        \" and cast type from [\" + from.name + \"] to cast type to [\" + to.name + \"] using\" +\n                        \" method [\" + name + \"] cannot cast from type to the method input argument type.\");\n                }\n            }\n\n            final Type rtn = method.rtn;\n\n            if (!to.clazz.isAssignableFrom(rtn.clazz)) {\n                if (rtn.clazz.isAssignableFrom(to.clazz)) {\n                    downcast = to;\n                } else {\n                    throw new ClassCastException(\"Transform with owner struct [\" + owner.name + \"]\" +\n                        \" and cast type from [\" + from.name + \"] to cast type to [\" + to.name + \"]\" +\n                        \" using method [\" + name + \"] cannot cast to type to the method return argument type.\");\n                }\n            }\n        }\n\n        final Transform transform = new Transform(cast, method, upcast, downcast);\n        transformsMap.put(cast, transform);\n    }","commit_id":"8195ef9e7a574a8b2e62d1fda3c0fe6a3249d21d","url":"https://github.com/elastic/elasticsearch"},{"original_method":"private final void addField(final String struct, final String name, final String alias,\n                               final boolean statik, final Type type, final Type generic) {\n        final Struct owner = structsMap.get(struct);\n\n        if (owner == null) {\n            throw new IllegalArgumentException(\"Owner struct [\" + struct + \"] not defined for \" +\n                (statik ? \"static\" : \"member\") + \" [\" + name + \"].\");\n        }\n\n        if (!name.matches(\"^[_a-zA-Z][_a-zA-Z0-9]*$\")) {\n            throw new IllegalArgumentException(\"Invalid \" + (statik ? \"static\" : \"member\") +\n                \" name [\" + name + \"] with the struct [\" + owner.name + \"].\");\n        }\n\n        if (owner.statics.containsKey(name)) {\n            if (statik) {\n                throw new IllegalArgumentException(\"Duplicate static name [\" + name + \"]\" +\n                    \" found within the struct [\" + owner.name + \"].\");\n            } else {\n                throw new IllegalArgumentException(\"Statics and members may not have the same name \" +\n                    \"[\" + name + \"] within the same struct [\" + owner.name + \"].\");\n            }\n        }\n\n        if (owner.members.containsKey(name)) {\n            if (statik) {\n                throw new IllegalArgumentException(\"Statics and members may not have the same name \" +\n                    \"[\" + name + \"] within the same struct [\" + owner.name + \"].\");\n            } else {\n                throw new IllegalArgumentException(\"Duplicate member name [\" + name + \"]\" +\n                    \" found within the struct [\" + owner.name + \"].\");\n            }\n        }\n\n        if (generic != null) {\n            try {\n                generic.clazz.asSubclass(type.clazz);\n            } catch (final ClassCastException exception) {\n                throw new ClassCastException(\"Generic type [\" + generic.clazz.getCanonicalName() + \"]\" +\n                    \" is not a sub class of [\" + type.clazz.getCanonicalName() + \"] for the field\" +\n                    \" [\" + name + \" ] from the struct [\" + owner.name + \"].\");\n            }\n        }\n\n        java.lang.reflect.Field reflect;\n\n        try {\n            reflect = owner.clazz.getField(alias == null ? name : alias);\n        } catch (final NoSuchFieldException exception) {\n            throw new IllegalArgumentException(\"Field [\" + (alias == null ? name : alias) + \"]\" +\n                \" not found for class [\" + owner.clazz.getName() + \"].\");\n        }\n\n        MethodHandle getter = null;\n        MethodHandle setter = null;\n\n        try {\n            if (!statik) {\n                getter = MethodHandles.publicLookup().unreflectGetter(reflect);\n                setter = MethodHandles.publicLookup().unreflectSetter(reflect);\n            }\n        } catch (final IllegalAccessException exception) {\n            throw new IllegalArgumentException(\"Getter/Setter [\" + (alias == null ? name : alias) + \"]\" +\n                \" not found for class [\" + owner.clazz.getName() + \"].\");\n        }\n\n        final Field field = new Field(name, owner, generic == null ? type : generic, type, reflect, getter, setter);\n        final int modifiers = reflect.getModifiers();\n\n        if (statik) {\n            if (!java.lang.reflect.Modifier.isStatic(modifiers)) {\n                throw new IllegalArgumentException();\n            }\n\n            if (!java.lang.reflect.Modifier.isFinal(modifiers)) {\n                throw new IllegalArgumentException(\"Static [\" + name + \"]\" +\n                    \" within the struct [\" + owner.name + \"] is not linked to static Java field.\");\n            }\n\n            owner.statics.put(alias == null ? name : alias, field);\n        } else {\n            if (java.lang.reflect.Modifier.isStatic(modifiers)) {\n                throw new IllegalArgumentException(\"Member [\" + name + \"]\" +\n                    \" within the struct [\" + owner.name + \"] is not linked to non-static Java field.\");\n            }\n\n            owner.members.put(alias == null ? name : alias, field);\n        }\n    }","id":61928,"modified_method":"private final void addField(final String struct, final String name, final String alias,\n                               final boolean statik, final Type type, final Type generic) {\n        final Struct owner = structsMap.get(struct);\n\n        if (owner == null) {\n            throw new IllegalArgumentException(\"Owner struct [\" + struct + \"] not defined for \" +\n                (statik ? \"static\" : \"member\") + \" [\" + name + \"].\");\n        }\n\n        if (!name.matches(\"^[_a-zA-Z][_a-zA-Z0-9]*$\")) {\n            throw new IllegalArgumentException(\"Invalid \" + (statik ? \"static\" : \"member\") +\n                \" name [\" + name + \"] with the struct [\" + owner.name + \"].\");\n        }\n\n        if (owner.statics.containsKey(name)) {\n            if (statik) {\n                throw new IllegalArgumentException(\"Duplicate static name [\" + name + \"]\" +\n                    \" found within the struct [\" + owner.name + \"].\");\n            } else {\n                throw new IllegalArgumentException(\"Statics and members may not have the same name \" +\n                    \"[\" + name + \"] within the same struct [\" + owner.name + \"].\");\n            }\n        }\n\n        if (owner.members.containsKey(name)) {\n            if (statik) {\n                throw new IllegalArgumentException(\"Statics and members may not have the same name \" +\n                    \"[\" + name + \"] within the same struct [\" + owner.name + \"].\");\n            } else {\n                throw new IllegalArgumentException(\"Duplicate member name [\" + name + \"]\" +\n                    \" found within the struct [\" + owner.name + \"].\");\n            }\n        }\n\n        if (generic != null) {\n            if (!type.clazz.isAssignableFrom(generic.clazz)) {\n                throw new ClassCastException(\"Generic type [\" + generic.clazz.getCanonicalName() + \"]\" +\n                    \" is not a sub class of [\" + type.clazz.getCanonicalName() + \"] for the field\" +\n                    \" [\" + name + \" ] from the struct [\" + owner.name + \"].\");\n            }\n        }\n\n        java.lang.reflect.Field reflect;\n\n        try {\n            reflect = owner.clazz.getField(alias == null ? name : alias);\n        } catch (final NoSuchFieldException exception) {\n            throw new IllegalArgumentException(\"Field [\" + (alias == null ? name : alias) + \"]\" +\n                \" not found for class [\" + owner.clazz.getName() + \"].\");\n        }\n\n        MethodHandle getter = null;\n        MethodHandle setter = null;\n\n        try {\n            if (!statik) {\n                getter = MethodHandles.publicLookup().unreflectGetter(reflect);\n                setter = MethodHandles.publicLookup().unreflectSetter(reflect);\n            }\n        } catch (final IllegalAccessException exception) {\n            throw new IllegalArgumentException(\"Getter/Setter [\" + (alias == null ? name : alias) + \"]\" +\n                \" not found for class [\" + owner.clazz.getName() + \"].\");\n        }\n\n        final Field field = new Field(name, owner, generic == null ? type : generic, type, reflect, getter, setter);\n        final int modifiers = reflect.getModifiers();\n\n        if (statik) {\n            if (!java.lang.reflect.Modifier.isStatic(modifiers)) {\n                throw new IllegalArgumentException();\n            }\n\n            if (!java.lang.reflect.Modifier.isFinal(modifiers)) {\n                throw new IllegalArgumentException(\"Static [\" + name + \"]\" +\n                    \" within the struct [\" + owner.name + \"] is not linked to static Java field.\");\n            }\n\n            owner.statics.put(alias == null ? name : alias, field);\n        } else {\n            if (java.lang.reflect.Modifier.isStatic(modifiers)) {\n                throw new IllegalArgumentException(\"Member [\" + name + \"]\" +\n                    \" within the struct [\" + owner.name + \"] is not linked to non-static Java field.\");\n            }\n\n            owner.members.put(alias == null ? name : alias, field);\n        }\n    }","commit_id":"8195ef9e7a574a8b2e62d1fda3c0fe6a3249d21d","url":"https://github.com/elastic/elasticsearch"},{"original_method":"private final void copyStruct(final String struct, final String... children) {\n        final Struct owner = structsMap.get(struct);\n\n        if (owner == null) {\n            throw new IllegalArgumentException(\"Owner struct [\" + struct + \"] not defined for copy.\");\n        }\n\n        for (int count = 0; count < children.length; ++count) {\n            final Struct child = structsMap.get(children[count]);\n\n            if (struct == null) {\n                throw new IllegalArgumentException(\"Child struct [\" + children[count] + \"]\" +\n                    \" not defined for copy to owner struct [\" + owner.name + \"].\");\n            }\n\n            try {\n                owner.clazz.asSubclass(child.clazz);\n            } catch (final ClassCastException exception) {\n                throw new ClassCastException(\"Child struct [\" + child.name + \"]\" +\n                    \" is not a super type of owner struct [\" + owner.name + \"] in copy.\");\n            }\n\n            final boolean object = child.clazz.equals(Object.class) &&\n                java.lang.reflect.Modifier.isInterface(owner.clazz.getModifiers());\n\n            for (final Method method : child.methods.values()) {\n                if (owner.methods.get(method.name) == null) {\n                    final Class<?> clazz = object ? Object.class : owner.clazz;\n\n                    java.lang.reflect.Method reflect;\n                    MethodHandle handle;\n\n                    try {\n                        reflect = clazz.getMethod(method.method.getName(), method.reflect.getParameterTypes());\n                    } catch (final NoSuchMethodException exception) {\n                        throw new IllegalArgumentException(\"Method [\" + method.method.getName() + \"] not found for\" +\n                            \" class [\" + owner.clazz.getName() + \"] with arguments \" +\n                            Arrays.toString(method.reflect.getParameterTypes()) + \".\");\n                    }\n\n                    try {\n                        handle = MethodHandles.publicLookup().in(owner.clazz).unreflect(reflect);\n                    } catch (final IllegalAccessException exception) {\n                        throw new IllegalArgumentException(\"Method [\" + method.method.getName() + \"] not found for\" +\n                            \" class [\" + owner.clazz.getName() + \"] with arguments \" +\n                            Arrays.toString(method.reflect.getParameterTypes()) + \".\");\n                    }\n\n                    owner.methods.put(method.name,\n                        new Method(method.name, owner, method.rtn, method.arguments, method.method, reflect, handle));\n                }\n            }\n\n            for (final Field field : child.members.values()) {\n                if (owner.members.get(field.name) == null) {\n                    java.lang.reflect.Field reflect;\n                    MethodHandle getter;\n                    MethodHandle setter;\n\n                    try {\n                        reflect = owner.clazz.getField(field.reflect.getName());\n                    } catch (final NoSuchFieldException exception) {\n                        throw new IllegalArgumentException(\"Field [\" + field.reflect.getName() + \"]\" +\n                            \" not found for class [\" + owner.clazz.getName() + \"].\");\n                    }\n\n                    try {\n                        getter = MethodHandles.publicLookup().unreflectGetter(reflect);\n                        setter = MethodHandles.publicLookup().unreflectSetter(reflect);\n                    } catch (final IllegalAccessException exception) {\n                        throw new IllegalArgumentException(\"Getter/Setter [\" + field.name + \"]\" +\n                            \" not found for class [\" + owner.clazz.getName() + \"].\");\n                    }\n\n                    owner.members.put(field.name,\n                        new Field(field.name, owner, field.type, field.generic, reflect, getter, setter));\n                }\n            }\n        }\n    }","id":61929,"modified_method":"private final void copyStruct(final String struct, final String... children) {\n        final Struct owner = structsMap.get(struct);\n\n        if (owner == null) {\n            throw new IllegalArgumentException(\"Owner struct [\" + struct + \"] not defined for copy.\");\n        }\n\n        for (int count = 0; count < children.length; ++count) {\n            final Struct child = structsMap.get(children[count]);\n\n            if (struct == null) {\n                throw new IllegalArgumentException(\"Child struct [\" + children[count] + \"]\" +\n                    \" not defined for copy to owner struct [\" + owner.name + \"].\");\n            }\n\n            if (!child.clazz.isAssignableFrom(owner.clazz)) {\n                throw new ClassCastException(\"Child struct [\" + child.name + \"]\" +\n                    \" is not a super type of owner struct [\" + owner.name + \"] in copy.\");\n            }\n\n            final boolean object = child.clazz.equals(Object.class) &&\n                java.lang.reflect.Modifier.isInterface(owner.clazz.getModifiers());\n\n            for (final Method method : child.methods.values()) {\n                if (owner.methods.get(method.name) == null) {\n                    final Class<?> clazz = object ? Object.class : owner.clazz;\n\n                    java.lang.reflect.Method reflect;\n                    MethodHandle handle;\n\n                    try {\n                        reflect = clazz.getMethod(method.method.getName(), method.reflect.getParameterTypes());\n                    } catch (final NoSuchMethodException exception) {\n                        throw new IllegalArgumentException(\"Method [\" + method.method.getName() + \"] not found for\" +\n                            \" class [\" + owner.clazz.getName() + \"] with arguments \" +\n                            Arrays.toString(method.reflect.getParameterTypes()) + \".\");\n                    }\n\n                    try {\n                        handle = MethodHandles.publicLookup().in(owner.clazz).unreflect(reflect);\n                    } catch (final IllegalAccessException exception) {\n                        throw new IllegalArgumentException(\"Method [\" + method.method.getName() + \"] not found for\" +\n                            \" class [\" + owner.clazz.getName() + \"] with arguments \" +\n                            Arrays.toString(method.reflect.getParameterTypes()) + \".\");\n                    }\n\n                    owner.methods.put(method.name,\n                        new Method(method.name, owner, method.rtn, method.arguments, method.method, reflect, handle));\n                }\n            }\n\n            for (final Field field : child.members.values()) {\n                if (owner.members.get(field.name) == null) {\n                    java.lang.reflect.Field reflect;\n                    MethodHandle getter;\n                    MethodHandle setter;\n\n                    try {\n                        reflect = owner.clazz.getField(field.reflect.getName());\n                    } catch (final NoSuchFieldException exception) {\n                        throw new IllegalArgumentException(\"Field [\" + field.reflect.getName() + \"]\" +\n                            \" not found for class [\" + owner.clazz.getName() + \"].\");\n                    }\n\n                    try {\n                        getter = MethodHandles.publicLookup().unreflectGetter(reflect);\n                        setter = MethodHandles.publicLookup().unreflectSetter(reflect);\n                    } catch (final IllegalAccessException exception) {\n                        throw new IllegalArgumentException(\"Getter/Setter [\" + field.name + \"]\" +\n                            \" not found for class [\" + owner.clazz.getName() + \"].\");\n                    }\n\n                    owner.members.put(field.name,\n                        new Field(field.name, owner, field.type, field.generic, reflect, getter, setter));\n                }\n            }\n        }\n    }","commit_id":"8195ef9e7a574a8b2e62d1fda3c0fe6a3249d21d","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n    ALink analyze(final CompilerSettings settings, final Definition definition, final Variables variables) {\n        if (before == null) {\n            throw new IllegalStateException(error(\"Illegal tree structure.\"));\n        }\n\n        final Sort sort = before.sort;\n\n        if (sort == Sort.ARRAY) {\n            index.expected = definition.intType;\n            index.analyze(settings, definition, variables);\n            index = index.cast(settings, definition, variables);\n\n            after = definition.getType(before.struct, before.dimensions - 1);\n\n            return this;\n        } else if (sort == Sort.DEF) {\n            return new LDefArray(line, location, index).copy(this).analyze(settings, definition, variables);\n        } else {\n            if (Map.class.isAssignableFrom(before.clazz)) {\n                return new LMapShortcut(line, location, index).copy(this).analyze(settings, definition, variables);\n            }\n            \n            if (List.class.isAssignableFrom(before.clazz)) {\n                return new LListShortcut(line, location, index).copy(this).analyze(settings, definition, variables);\n            }\n        }\n\n        throw new IllegalArgumentException(error(\"Illegal array access on type [\" + before.name + \"].\"));\n    }","id":61930,"modified_method":"@Override\n    ALink analyze(final CompilerSettings settings, final Definition definition, final Variables variables) {\n        if (before == null) {\n            throw new IllegalStateException(error(\"Illegal tree structure.\"));\n        }\n\n        final Sort sort = before.sort;\n\n        if (sort == Sort.ARRAY) {\n            index.expected = definition.intType;\n            index.analyze(settings, definition, variables);\n            index = index.cast(settings, definition, variables);\n\n            after = definition.getType(before.struct, before.dimensions - 1);\n\n            return this;\n        } else if (sort == Sort.DEF) {\n            return new LDefArray(line, location, index).copy(this).analyze(settings, definition, variables);\n        } else if (Map.class.isAssignableFrom(before.clazz)) {\n            return new LMapShortcut(line, location, index).copy(this).analyze(settings, definition, variables);\n        } else if (List.class.isAssignableFrom(before.clazz)) {\n            return new LListShortcut(line, location, index).copy(this).analyze(settings, definition, variables);\n        }\n\n        throw new IllegalArgumentException(error(\"Illegal array access on type [\" + before.name + \"].\"));\n    }","commit_id":"8195ef9e7a574a8b2e62d1fda3c0fe6a3249d21d","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public static void writeCast(final GeneratorAdapter adapter, final Cast cast) {\n        if (cast instanceof Transform) {\n            final Transform transform = (Transform)cast;\n\n            if (transform.upcast != null) {\n                adapter.checkCast(transform.upcast.type);\n            }\n\n            if (java.lang.reflect.Modifier.isStatic(transform.method.reflect.getModifiers())) {\n                adapter.invokeStatic(transform.method.owner.type, transform.method.method);\n            } else if (java.lang.reflect.Modifier.isInterface(transform.method.owner.clazz.getModifiers())) {\n                adapter.invokeInterface(transform.method.owner.type, transform.method.method);\n            } else {\n                adapter.invokeVirtual(transform.method.owner.type, transform.method.method);\n            }\n\n            if (transform.downcast != null) {\n                adapter.checkCast(transform.downcast.type);\n            }\n        } else if (cast != null) {\n            final Type from = cast.from;\n            final Type to = cast.to;\n\n            if (from.equals(to)) {\n                return;\n            }\n\n            if (from.sort.numeric && from.sort.primitive && to.sort.numeric && to.sort.primitive) {\n                adapter.cast(from.type, to.type);\n            } else {\n                try {\n                    from.clazz.asSubclass(to.clazz);\n                } catch (ClassCastException exception) {\n                    adapter.checkCast(to.type);\n                }\n            }\n        }\n    }","id":61931,"modified_method":"public static void writeCast(final GeneratorAdapter adapter, final Cast cast) {\n        if (cast instanceof Transform) {\n            final Transform transform = (Transform)cast;\n\n            if (transform.upcast != null) {\n                adapter.checkCast(transform.upcast.type);\n            }\n\n            if (java.lang.reflect.Modifier.isStatic(transform.method.reflect.getModifiers())) {\n                adapter.invokeStatic(transform.method.owner.type, transform.method.method);\n            } else if (java.lang.reflect.Modifier.isInterface(transform.method.owner.clazz.getModifiers())) {\n                adapter.invokeInterface(transform.method.owner.type, transform.method.method);\n            } else {\n                adapter.invokeVirtual(transform.method.owner.type, transform.method.method);\n            }\n\n            if (transform.downcast != null) {\n                adapter.checkCast(transform.downcast.type);\n            }\n        } else if (cast != null) {\n            final Type from = cast.from;\n            final Type to = cast.to;\n\n            if (from.equals(to)) {\n                return;\n            }\n\n            if (from.sort.numeric && from.sort.primitive && to.sort.numeric && to.sort.primitive) {\n                adapter.cast(from.type, to.type);\n            } else {\n                if (!to.clazz.isAssignableFrom(from.clazz)) {\n                    adapter.checkCast(to.type);\n                }\n            }\n        }\n    }","commit_id":"8195ef9e7a574a8b2e62d1fda3c0fe6a3249d21d","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    public void shardsCleanup() throws Exception {\n        try {\n            client1.admin().indices().prepareDelete(\"test\").execute().actionGet();\n        } catch (Exception ex) {\n            // Ignore\n        }\n\n        logger.info(\"--> creating index [test] with one shard and on replica\");\n        client1.admin().indices().create(createIndexRequest(\"test\")\n                .setSettings(settingsBuilder().put(\"index.numberOfReplicas\", 1).put(\"index.numberOfShards\", 1))).actionGet();\n\n        logger.info(\"--> running cluster_health\");\n        ClusterHealthResponse clusterHealth = client1.admin().cluster().health(clusterHealthRequest().setWaitForGreenStatus()).actionGet();\n        logger.info(\"--> done cluster_health, status \" + clusterHealth.getStatus());\n\n\n        logger.info(\"--> making sure that shard and it's replica are allocated on server1 and server2\");\n        assertThat(shardDirectory(\"server1\", \"test\", 0).exists(), equalTo(true));\n        assertThat(shardDirectory(\"server2\", \"test\", 0).exists(), equalTo(true));\n\n        logger.info(\"--> starting node server3\");\n        startNode(\"server3\");\n\n        logger.info(\"--> making sure that shard is not allocated on server3\");\n        assertThat(waitForShardDeletion(TimeValue.timeValueSeconds(1), \"server3\", \"test\", 0), equalTo(false));\n\n        File server2Shard = shardDirectory(\"server2\", \"test\", 0);\n        logger.info(\"--> stopping node server2\");\n        closeNode(\"server2\");\n        assertThat(server2Shard.exists(), equalTo(true));\n\n        logger.info(\"--> running cluster_health\");\n        clusterHealth = client1.admin().cluster().health(clusterHealthRequest().setWaitForGreenStatus()).actionGet();\n        logger.info(\"--> done cluster_health, status \" + clusterHealth.getStatus());\n\n        logger.info(\"--> making sure that shard and it's replica exist on server1, server2 and server3\");\n        assertThat(shardDirectory(\"server1\", \"test\", 0).exists(), equalTo(true));\n        assertThat(server2Shard.exists(), equalTo(true));\n        assertThat(shardDirectory(\"server3\", \"test\", 0).exists(), equalTo(true));\n\n        logger.info(\"--> starting node server2\");\n        startNode(\"server2\");\n\n        logger.info(\"--> running cluster_health\");\n        clusterHealth = client(\"server2\").admin().cluster().health(clusterHealthRequest().setWaitForGreenStatus()).actionGet();\n        logger.info(\"--> done cluster_health, status \" + clusterHealth.getStatus());\n\n        logger.info(\"--> making sure that shard and it's replica are allocated on server1 and server3 but not on server2\");\n        assertThat(shardDirectory(\"server1\", \"test\", 0).exists(), equalTo(true));\n        assertThat(shardDirectory(\"server3\", \"test\", 0).exists(), equalTo(true));\n        assertThat(waitForShardDeletion(TimeValue.timeValueSeconds(1), \"server2\", \"test\", 0), equalTo(false));\n    }","id":61932,"modified_method":"@Test\n    public void shardsCleanup() throws Exception {\n        try {\n            client1.admin().indices().prepareDelete(\"test\").execute().actionGet();\n        } catch (Exception ex) {\n            // Ignore\n        }\n\n        logger.info(\"--> creating index [test] with one shard and on replica\");\n        client1.admin().indices().create(createIndexRequest(\"test\")\n                .setSettings(settingsBuilder().put(\"index.numberOfReplicas\", 1).put(\"index.numberOfShards\", 1))).actionGet();\n\n        logger.info(\"--> running cluster_health\");\n        ClusterHealthResponse clusterHealth = client1.admin().cluster().health(clusterHealthRequest().setWaitForGreenStatus()).actionGet();\n        logger.info(\"--> done cluster_health, status \" + clusterHealth.getStatus());\n\n\n        logger.info(\"--> making sure that shard and it's replica are allocated on server1 and server2\");\n        assertThat(shardDirectory(\"server1\", \"test\", 0).exists(), equalTo(true));\n        assertThat(shardDirectory(\"server2\", \"test\", 0).exists(), equalTo(true));\n\n        logger.info(\"--> starting node server3\");\n        startNode(\"server3\");\n\n        logger.info(\"--> making sure that shard is not allocated on server3\");\n        assertThat(waitForShardDeletion(TimeValue.timeValueSeconds(1), \"server3\", \"test\", 0), equalTo(false));\n\n        File server2Shard = shardDirectory(\"server2\", \"test\", 0);\n        logger.info(\"--> stopping node server2\");\n        closeNode(\"server2\");\n        assertThat(server2Shard.exists(), equalTo(true));\n\n        logger.info(\"--> running cluster_health\");\n        clusterHealth = client1.admin().cluster().health(clusterHealthRequest().setWaitForGreenStatus().setWaitForNodes(\"2\")).actionGet();\n        logger.info(\"--> done cluster_health, status \" + clusterHealth.getStatus());\n\n        logger.info(\"--> making sure that shard and it's replica exist on server1, server2 and server3\");\n        assertThat(shardDirectory(\"server1\", \"test\", 0).exists(), equalTo(true));\n        assertThat(server2Shard.exists(), equalTo(true));\n        assertThat(shardDirectory(\"server3\", \"test\", 0).exists(), equalTo(true));\n\n        logger.info(\"--> starting node server2\");\n        startNode(\"server2\");\n\n        logger.info(\"--> running cluster_health\");\n        clusterHealth = client(\"server2\").admin().cluster().health(clusterHealthRequest().setWaitForGreenStatus()).actionGet();\n        logger.info(\"--> done cluster_health, status \" + clusterHealth.getStatus());\n\n        logger.info(\"--> making sure that shard and it's replica are allocated on server1 and server3 but not on server2\");\n        assertThat(shardDirectory(\"server1\", \"test\", 0).exists(), equalTo(true));\n        assertThat(shardDirectory(\"server3\", \"test\", 0).exists(), equalTo(true));\n        assertThat(waitForShardDeletion(TimeValue.timeValueSeconds(1), \"server2\", \"test\", 0), equalTo(false));\n    }","commit_id":"5746c50ef9f2a9988ef7e5b36e5dd238edca4f47","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    public void testAutoExpandNumberOfReplicas0ToData() {\n        logger.info(\"--> creating index test with auto expand replicas\");\n        client1.admin().indices().prepareCreate(\"test\").setSettings(settingsBuilder().put(\"index.number_of_shards\", 2).put(\"auto_expand_replicas\", \"0-all\")).execute().actionGet();\n\n        logger.info(\"--> running cluster health\");\n        ClusterHealthResponse clusterHealth = client1.admin().cluster().prepareHealth().setWaitForGreenStatus().setWaitForActiveShards(4).execute().actionGet();\n        logger.info(\"--> done cluster health, status \" + clusterHealth.getStatus());\n        assertThat(clusterHealth.isTimedOut(), equalTo(false));\n        assertThat(clusterHealth.getStatus(), equalTo(ClusterHealthStatus.GREEN));\n        assertThat(clusterHealth.getIndices().get(\"test\").getActivePrimaryShards(), equalTo(2));\n        assertThat(clusterHealth.getIndices().get(\"test\").getNumberOfReplicas(), equalTo(1));\n        assertThat(clusterHealth.getIndices().get(\"test\").getActiveShards(), equalTo(4));\n\n        logger.info(\"--> add another node, should increase the number of replicas\");\n        startNode(\"node3\");\n\n        logger.info(\"--> running cluster health\");\n        clusterHealth = client1.admin().cluster().prepareHealth().setWaitForGreenStatus().setWaitForActiveShards(6).execute().actionGet();\n        logger.info(\"--> done cluster health, status \" + clusterHealth.getStatus());\n        assertThat(clusterHealth.isTimedOut(), equalTo(false));\n        assertThat(clusterHealth.getStatus(), equalTo(ClusterHealthStatus.GREEN));\n        assertThat(clusterHealth.getIndices().get(\"test\").getActivePrimaryShards(), equalTo(2));\n        assertThat(clusterHealth.getIndices().get(\"test\").getNumberOfReplicas(), equalTo(2));\n        assertThat(clusterHealth.getIndices().get(\"test\").getActiveShards(), equalTo(6));\n\n        logger.info(\"--> closing one node\");\n        closeNode(\"node3\");\n\n        logger.info(\"--> running cluster health\");\n        clusterHealth = client1.admin().cluster().prepareHealth().setWaitForGreenStatus().setWaitForActiveShards(4).execute().actionGet();\n        logger.info(\"--> done cluster health, status \" + clusterHealth.getStatus());\n        assertThat(clusterHealth.isTimedOut(), equalTo(false));\n        assertThat(clusterHealth.getStatus(), equalTo(ClusterHealthStatus.GREEN));\n        assertThat(clusterHealth.getIndices().get(\"test\").getActivePrimaryShards(), equalTo(2));\n        assertThat(clusterHealth.getIndices().get(\"test\").getNumberOfReplicas(), equalTo(1));\n        assertThat(clusterHealth.getIndices().get(\"test\").getActiveShards(), equalTo(4));\n\n        logger.info(\"--> closing another node\");\n        closeNode(\"node2\");\n\n        logger.info(\"--> running cluster health\");\n        clusterHealth = client1.admin().cluster().prepareHealth().setWaitForGreenStatus().setWaitForActiveShards(2).execute().actionGet();\n        logger.info(\"--> done cluster health, status \" + clusterHealth.getStatus());\n        assertThat(clusterHealth.isTimedOut(), equalTo(false));\n        assertThat(clusterHealth.getStatus(), equalTo(ClusterHealthStatus.GREEN));\n        assertThat(clusterHealth.getIndices().get(\"test\").getActivePrimaryShards(), equalTo(2));\n        assertThat(clusterHealth.getIndices().get(\"test\").getNumberOfReplicas(), equalTo(0));\n        assertThat(clusterHealth.getIndices().get(\"test\").getActiveShards(), equalTo(2));\n    }","id":61933,"modified_method":"@Test\n    public void testAutoExpandNumberOfReplicas0ToData() {\n        logger.info(\"--> creating index test with auto expand replicas\");\n        client1.admin().indices().prepareCreate(\"test\").setSettings(settingsBuilder().put(\"index.number_of_shards\", 2).put(\"auto_expand_replicas\", \"0-all\")).execute().actionGet();\n\n        logger.info(\"--> running cluster health\");\n        ClusterHealthResponse clusterHealth = client1.admin().cluster().prepareHealth().setWaitForGreenStatus().setWaitForActiveShards(4).execute().actionGet();\n        logger.info(\"--> done cluster health, status \" + clusterHealth.getStatus());\n        assertThat(clusterHealth.isTimedOut(), equalTo(false));\n        assertThat(clusterHealth.getStatus(), equalTo(ClusterHealthStatus.GREEN));\n        assertThat(clusterHealth.getIndices().get(\"test\").getActivePrimaryShards(), equalTo(2));\n        assertThat(clusterHealth.getIndices().get(\"test\").getNumberOfReplicas(), equalTo(1));\n        assertThat(clusterHealth.getIndices().get(\"test\").getActiveShards(), equalTo(4));\n\n        logger.info(\"--> add another node, should increase the number of replicas\");\n        startNode(\"node3\");\n\n        logger.info(\"--> running cluster health\");\n        clusterHealth = client1.admin().cluster().prepareHealth().setWaitForGreenStatus().setWaitForActiveShards(6).execute().actionGet();\n        logger.info(\"--> done cluster health, status \" + clusterHealth.getStatus());\n        assertThat(clusterHealth.isTimedOut(), equalTo(false));\n        assertThat(clusterHealth.getStatus(), equalTo(ClusterHealthStatus.GREEN));\n        assertThat(clusterHealth.getIndices().get(\"test\").getActivePrimaryShards(), equalTo(2));\n        assertThat(clusterHealth.getIndices().get(\"test\").getNumberOfReplicas(), equalTo(2));\n        assertThat(clusterHealth.getIndices().get(\"test\").getActiveShards(), equalTo(6));\n\n        logger.info(\"--> closing one node\");\n        closeNode(\"node3\");\n\n        logger.info(\"--> running cluster health\");\n        clusterHealth = client1.admin().cluster().prepareHealth().setWaitForGreenStatus().setWaitForNodes(\"2\").setWaitForActiveShards(4).execute().actionGet();\n        logger.info(\"--> done cluster health, status \" + clusterHealth.getStatus());\n        assertThat(clusterHealth.isTimedOut(), equalTo(false));\n        assertThat(clusterHealth.getStatus(), equalTo(ClusterHealthStatus.GREEN));\n        assertThat(clusterHealth.getIndices().get(\"test\").getActivePrimaryShards(), equalTo(2));\n        assertThat(clusterHealth.getIndices().get(\"test\").getNumberOfReplicas(), equalTo(1));\n        assertThat(clusterHealth.getIndices().get(\"test\").getActiveShards(), equalTo(4));\n\n        logger.info(\"--> closing another node\");\n        closeNode(\"node2\");\n\n        logger.info(\"--> running cluster health\");\n        clusterHealth = client1.admin().cluster().prepareHealth().setWaitForGreenStatus().setWaitForNodes(\"1\").setWaitForActiveShards(2).execute().actionGet();\n        logger.info(\"--> done cluster health, status \" + clusterHealth.getStatus());\n        assertThat(clusterHealth.isTimedOut(), equalTo(false));\n        assertThat(clusterHealth.getStatus(), equalTo(ClusterHealthStatus.GREEN));\n        assertThat(clusterHealth.getIndices().get(\"test\").getActivePrimaryShards(), equalTo(2));\n        assertThat(clusterHealth.getIndices().get(\"test\").getNumberOfReplicas(), equalTo(0));\n        assertThat(clusterHealth.getIndices().get(\"test\").getActiveShards(), equalTo(2));\n    }","commit_id":"cfaa859bb229a153fab32ddec0651814e04c597c","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    public void testAutoExpandNumberReplicas1ToData() {\n        logger.info(\"--> creating index test with auto expand replicas\");\n        client1.admin().indices().prepareCreate(\"test\").setSettings(settingsBuilder().put(\"index.number_of_shards\", 2).put(\"auto_expand_replicas\", \"1-all\")).execute().actionGet();\n\n        logger.info(\"--> running cluster health\");\n        ClusterHealthResponse clusterHealth = client1.admin().cluster().prepareHealth().setWaitForGreenStatus().setWaitForActiveShards(4).execute().actionGet();\n        logger.info(\"--> done cluster health, status \" + clusterHealth.getStatus());\n        assertThat(clusterHealth.isTimedOut(), equalTo(false));\n        assertThat(clusterHealth.getStatus(), equalTo(ClusterHealthStatus.GREEN));\n        assertThat(clusterHealth.getIndices().get(\"test\").getActivePrimaryShards(), equalTo(2));\n        assertThat(clusterHealth.getIndices().get(\"test\").getNumberOfReplicas(), equalTo(1));\n        assertThat(clusterHealth.getIndices().get(\"test\").getActiveShards(), equalTo(4));\n\n        logger.info(\"--> add another node, should increase the number of replicas\");\n        startNode(\"node3\");\n\n        logger.info(\"--> running cluster health\");\n        clusterHealth = client1.admin().cluster().prepareHealth().setWaitForGreenStatus().setWaitForActiveShards(6).execute().actionGet();\n        logger.info(\"--> done cluster health, status \" + clusterHealth.getStatus());\n        assertThat(clusterHealth.isTimedOut(), equalTo(false));\n        assertThat(clusterHealth.getStatus(), equalTo(ClusterHealthStatus.GREEN));\n        assertThat(clusterHealth.getIndices().get(\"test\").getActivePrimaryShards(), equalTo(2));\n        assertThat(clusterHealth.getIndices().get(\"test\").getNumberOfReplicas(), equalTo(2));\n        assertThat(clusterHealth.getIndices().get(\"test\").getActiveShards(), equalTo(6));\n\n        logger.info(\"--> closing one node\");\n        closeNode(\"node3\");\n\n        logger.info(\"--> running cluster health\");\n        clusterHealth = client1.admin().cluster().prepareHealth().setWaitForGreenStatus().setWaitForActiveShards(4).execute().actionGet();\n        logger.info(\"--> done cluster health, status \" + clusterHealth.getStatus());\n        assertThat(clusterHealth.isTimedOut(), equalTo(false));\n        assertThat(clusterHealth.getStatus(), equalTo(ClusterHealthStatus.GREEN));\n        assertThat(clusterHealth.getIndices().get(\"test\").getActivePrimaryShards(), equalTo(2));\n        assertThat(clusterHealth.getIndices().get(\"test\").getNumberOfReplicas(), equalTo(1));\n        assertThat(clusterHealth.getIndices().get(\"test\").getActiveShards(), equalTo(4));\n\n        logger.info(\"--> closing another node\");\n        closeNode(\"node2\");\n\n        logger.info(\"--> running cluster health\");\n        clusterHealth = client1.admin().cluster().prepareHealth().setWaitForYellowStatus().setWaitForActiveShards(2).execute().actionGet();\n        logger.info(\"--> done cluster health, status \" + clusterHealth.getStatus());\n        assertThat(clusterHealth.isTimedOut(), equalTo(false));\n        assertThat(clusterHealth.getStatus(), equalTo(ClusterHealthStatus.YELLOW));\n        assertThat(clusterHealth.getIndices().get(\"test\").getActivePrimaryShards(), equalTo(2));\n        assertThat(clusterHealth.getIndices().get(\"test\").getNumberOfReplicas(), equalTo(1));\n        assertThat(clusterHealth.getIndices().get(\"test\").getActiveShards(), equalTo(2));\n    }","id":61934,"modified_method":"@Test\n    public void testAutoExpandNumberReplicas1ToData() {\n        logger.info(\"--> creating index test with auto expand replicas\");\n        client1.admin().indices().prepareCreate(\"test\").setSettings(settingsBuilder().put(\"index.number_of_shards\", 2).put(\"auto_expand_replicas\", \"1-all\")).execute().actionGet();\n\n        logger.info(\"--> running cluster health\");\n        ClusterHealthResponse clusterHealth = client1.admin().cluster().prepareHealth().setWaitForGreenStatus().setWaitForActiveShards(4).execute().actionGet();\n        logger.info(\"--> done cluster health, status \" + clusterHealth.getStatus());\n        assertThat(clusterHealth.isTimedOut(), equalTo(false));\n        assertThat(clusterHealth.getStatus(), equalTo(ClusterHealthStatus.GREEN));\n        assertThat(clusterHealth.getIndices().get(\"test\").getActivePrimaryShards(), equalTo(2));\n        assertThat(clusterHealth.getIndices().get(\"test\").getNumberOfReplicas(), equalTo(1));\n        assertThat(clusterHealth.getIndices().get(\"test\").getActiveShards(), equalTo(4));\n\n        logger.info(\"--> add another node, should increase the number of replicas\");\n        startNode(\"node3\");\n\n        logger.info(\"--> running cluster health\");\n        clusterHealth = client1.admin().cluster().prepareHealth().setWaitForGreenStatus().setWaitForActiveShards(6).execute().actionGet();\n        logger.info(\"--> done cluster health, status \" + clusterHealth.getStatus());\n        assertThat(clusterHealth.isTimedOut(), equalTo(false));\n        assertThat(clusterHealth.getStatus(), equalTo(ClusterHealthStatus.GREEN));\n        assertThat(clusterHealth.getIndices().get(\"test\").getActivePrimaryShards(), equalTo(2));\n        assertThat(clusterHealth.getIndices().get(\"test\").getNumberOfReplicas(), equalTo(2));\n        assertThat(clusterHealth.getIndices().get(\"test\").getActiveShards(), equalTo(6));\n\n        logger.info(\"--> closing one node\");\n        closeNode(\"node3\");\n\n        logger.info(\"--> running cluster health\");\n        clusterHealth = client1.admin().cluster().prepareHealth().setWaitForGreenStatus().setWaitForNodes(\"2\").setWaitForActiveShards(4).execute().actionGet();\n        logger.info(\"--> done cluster health, status \" + clusterHealth.getStatus());\n        assertThat(clusterHealth.isTimedOut(), equalTo(false));\n        assertThat(clusterHealth.getStatus(), equalTo(ClusterHealthStatus.GREEN));\n        assertThat(clusterHealth.getIndices().get(\"test\").getActivePrimaryShards(), equalTo(2));\n        assertThat(clusterHealth.getIndices().get(\"test\").getNumberOfReplicas(), equalTo(1));\n        assertThat(clusterHealth.getIndices().get(\"test\").getActiveShards(), equalTo(4));\n\n        logger.info(\"--> closing another node\");\n        closeNode(\"node2\");\n\n        logger.info(\"--> running cluster health\");\n        clusterHealth = client1.admin().cluster().prepareHealth().setWaitForYellowStatus().setWaitForNodes(\"1\").setWaitForActiveShards(2).execute().actionGet();\n        logger.info(\"--> done cluster health, status \" + clusterHealth.getStatus());\n        assertThat(clusterHealth.isTimedOut(), equalTo(false));\n        assertThat(clusterHealth.getStatus(), equalTo(ClusterHealthStatus.YELLOW));\n        assertThat(clusterHealth.getIndices().get(\"test\").getActivePrimaryShards(), equalTo(2));\n        assertThat(clusterHealth.getIndices().get(\"test\").getNumberOfReplicas(), equalTo(1));\n        assertThat(clusterHealth.getIndices().get(\"test\").getActiveShards(), equalTo(2));\n    }","commit_id":"cfaa859bb229a153fab32ddec0651814e04c597c","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n  @Nullable\n  public String getUnderlyingFrameworkId() {\n    FacetTypeId<?> typeId = myFacetType.getUnderlyingFacetType();\n    if (typeId == null) return null;\n\n    FacetType<?,?> type = FacetTypeRegistry.getInstance().findFacetType(typeId);\n    return type != null ? getProviderId(type) : null;\n\n  }","id":61935,"modified_method":"@Override\n  @Nullable\n  public String getUnderlyingFrameworkId() {\n    FacetTypeId<?> typeId = myFacetType.getUnderlyingFacetType();\n    if (typeId == null) return null;\n\n    return getProviderId(FacetTypeRegistry.getInstance().findFacetType(typeId));\n\n  }","commit_id":"d544d0329c0c555b712df1dd24e858e414a892f5","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n   * Returns internal ID.\n   *\n   * @param typeId Facet type ID.\n   * @return ID.\n   * @see #getPrecedingFrameworkProviderIds()\n   */\n  public static String getProviderId(final FacetTypeId<?> typeId) {\n    FacetType<?,?> type = FacetTypeRegistry.getInstance().findFacetType(typeId);\n    LOG.assertTrue(type != null, typeId);\n    return getProviderId(type);\n  }","id":61936,"modified_method":"/**\n   * Returns internal ID.\n   *\n   * @param typeId Facet type ID.\n   * @return ID.\n   * @see #getPrecedingFrameworkProviderIds()\n   */\n  public static String getProviderId(final FacetTypeId<?> typeId) {\n    return getProviderId(FacetTypeRegistry.getInstance().findFacetType(typeId));\n  }","commit_id":"d544d0329c0c555b712df1dd24e858e414a892f5","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    protected Icon getItemIcon(F item) {\n      return FacetBasedPackagingElementType.this.getIcon(item);\n    }","id":61937,"modified_method":"@Override\n    protected Icon getItemIcon(F item) {\n      return FacetTypeRegistry.getInstance().findFacetType(myFacetType).getIcon();\n    }","commit_id":"d544d0329c0c555b712df1dd24e858e414a892f5","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  public FacetType<F, ?> getFacetType() {\n    FacetType type = FacetTypeRegistry.getInstance().findFacetType(myFacetTypeId);\n    if (type == null) {\n      type = findJavaeeFacetType(myFacetTypeId);\n    }\n    //noinspection unchecked\n    return type;\n  }","id":61938,"modified_method":"@Nullable\n  public FacetType<F, ?> getFacetType() {\n    //noinspection unchecked\n    return FacetTypeRegistry.getInstance().findFacetType(myFacetTypeId);\n  }","commit_id":"7777af78a0b4eb923e889a25ae4cad012a41f2f6","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void fetchVersions(@NotNull final FileSetVersionsCallback<FS> callback) {\n    ApplicationManager.getApplication().executeOnPooledThread(new Runnable() {\n      @Override\n      public void run() {\n        final Artifact[] versions;\n        if (myGroupId != null) {\n          versions = LibrariesDownloadAssistant.getVersions(myGroupId, myLocalUrls);\n        }\n        else {\n          versions = LibrariesDownloadAssistant.getVersions(myLocalUrls);\n        }\n        final List<FS> result = new ArrayList<FS>();\n        for (Artifact version : versions) {\n          final ArtifactItem[] items = version.getItems();\n          final List<F> files = new ArrayList<F>();\n          for (ArtifactItem item : items) {\n            String url = item.getUrl();\n            final String prefix = version.getUrlPrefix();\n            if (url == null) {\n              if (prefix != null) {\n                url = prefix + item.getName();\n              }\n            } else {\n              url = prependPrefix(url, prefix);\n            }\n            assert url != null;\n\n            files.add(createFileDescription(item, url, prefix));\n          }\n          result.add(createVersion(version, files));\n        }\n        Collections.sort(result, VERSIONS_COMPARATOR);\n        callback.onSuccess(result);\n      }\n    });\n  }","id":61939,"modified_method":"@Override\n  public void fetchVersions(@NotNull final FileSetVersionsCallback<FS> callback) {\n    ApplicationManager.getApplication().executeOnPooledThread(new Runnable() {\n      @Override\n      public void run() {\n        callback.onSuccess(fetchVersions());\n      }\n    });\n  }","commit_id":"1467565fed30774cce141fb1471593ac76785c79","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void reset(PhoneGapSettings.State state) {\n      PhoneGapUtil.setExecutablePath(myExecutablePath, state.getExecutablePath());\n      myRepositoryStore.reset(state.repositoriesList);\n    }","id":61940,"modified_method":"public void reset(PhoneGapSettings.State state) {\n      PhoneGapUtil.setFieldWithHistoryPath(myExecutablePath, state.getExecutablePath());\n      myRepositoryStore.reset(state.repositoriesList);\n    }","commit_id":"d7a429150bbc107c5721e2d8ddb90b5bb28a36ee","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"public void setUpListener() {\n    final JTextField textField = myExecutablePath.getChildComponent().getTextEditor();\n    final Ref<String> prevExecutablePathRef = Ref.create(StringUtil.notNullize(textField.getText()));\n    textField.getDocument().addDocumentListener(new DocumentAdapter() {\n      @Override\n      protected void textChanged(DocumentEvent e) {\n        String executablePath = StringUtil.notNullize(textField.getText());\n        String prevExecutablePath = prevExecutablePathRef.get();\n        if (!prevExecutablePath.equals(executablePath)) {\n          phoneGapPluginsView.setupService(myExecutablePath.getText(), myRepositoryStore, getVersionCallback());\n          prevExecutablePathRef.set(executablePath);\n        }\n      }\n    });\n  }","id":61941,"modified_method":"private void setUpListeners() {\n    setUpListener(myExecutablePath.getChildComponent().getTextEditor());\n    setUpListener(myWorkingDirectory.getChildComponent().getTextEditor());\n  }","commit_id":"d7a429150bbc107c5721e2d8ddb90b5bb28a36ee","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"@Override\n  public void apply() throws ConfigurationException {\n    mySettings.loadState(myUIController.getState());\n  }","id":61942,"modified_method":"@Override\n  public void apply() throws ConfigurationException {\n    mySettings.loadState(myUIController.getState());\n    mySettings.setWorkingDirectory(myProject, myUIController.getWorkingDirectory());\n  }","commit_id":"d7a429150bbc107c5721e2d8ddb90b5bb28a36ee","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"@Nullable\n  @Override\n  public JComponent createComponent() {\n\n    if (myWrapper == null) {\n      myExecutablePath = PhoneGapUtil.createPhoneGapExecutableTextField(myProject);\n      myVersion = new JBLabel();\n      myUIController = new UIController();\n      myRepositoryStore = new RepositoryStore();\n      myUIController.reset(mySettings.getState());\n      phoneGapPluginsView = new PhoneGapPluginsView(myProject);\n      JPanel panel = FormBuilder.createFormBuilder()\n        .addLabeledComponent(\"PhoneGap/Cordova executable path:\", myExecutablePath)\n        .addLabeledComponent(\"PhoneGap/Cordova version:\", myVersion)\n        .addComponent(phoneGapPluginsView.getPanel()).getPanel();\n      myWrapper = new JPanel(new BorderLayout());\n      myWrapper.add(panel, BorderLayout.NORTH);\n      setUpListener();\n      if (!StringUtil.isEmpty(myExecutablePath.getText())) {\n        phoneGapPluginsView.setupService(myExecutablePath.getText(), myRepositoryStore, getVersionCallback());\n      }\n    }\n\n    return myWrapper;\n  }","id":61943,"modified_method":"@Nullable\n  @Override\n  public JComponent createComponent() {\n\n    if (myWrapper == null) {\n      myExecutablePath = PhoneGapUtil.createPhoneGapExecutableTextField(myProject);\n      myWorkingDirectory = PhoneGapUtil.createPhoneGapWorkingDirectoryField(myProject);\n      myVersion = new JBLabel();\n      myUIController = new UIController();\n      myRepositoryStore = new RepositoryStore();\n      myUIController.reset(mySettings.getState());\n      phoneGapPluginsView = new PhoneGapPluginsView(myProject);\n      JPanel panel = FormBuilder.createFormBuilder()\n        .addLabeledComponent(PhoneGapBundle.message(\"phonegap.conf.executable.name\"), myExecutablePath)\n        .addLabeledComponent(PhoneGapBundle.message(\"phonegap.conf.version.name\"), myVersion)\n        .addLabeledComponent(PhoneGapBundle.message(\"phonegap.conf.work.dir.name\"), myWorkingDirectory)\n        .addComponent(phoneGapPluginsView.getPanel()).getPanel();\n      myWrapper = new JPanel(new BorderLayout());\n      myWrapper.add(panel, BorderLayout.NORTH);\n      setUpListeners();\n      if (!StringUtil.isEmpty(myExecutablePath.getText())) {\n        phoneGapPluginsView.setupService(myExecutablePath.getText(), myWorkingDirectory.getText(), myRepositoryStore, getVersionCallback());\n      }\n    }\n\n    return myWrapper;\n  }","commit_id":"d7a429150bbc107c5721e2d8ddb90b5bb28a36ee","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"public boolean isModified() {\n      return !getState().equals(mySettings.getState());\n    }","id":61944,"modified_method":"public boolean isModified() {\n      return !getState().equals(mySettings.getState()) ||\n             !StringUtil.equals(getWorkingDirectory(), mySettings.getWorkingDirectory(myProject));\n    }","commit_id":"d7a429150bbc107c5721e2d8ddb90b5bb28a36ee","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"public void setupService(@Nullable final String path,\n                           @NotNull final PhoneGapConfigurable.RepositoryStore repositoryStore,\n                           @NotNull final VersionCallback callback) {\n    packagesNotificationPanel.removeAllLinkHandlers();\n    packagesNotificationPanel.hide();\n    callback.forVersion(\"\");\n    if (StringUtil.isEmpty(path)) {\n      return;\n    }\n\n    ApplicationManager.getApplication().executeOnPooledThread(new Runnable() {\n      @Override\n      public void run() {\n        final Ref<PhoneGapPackageManagementService> service = new Ref<PhoneGapPackageManagementService>();\n        final Ref<String> error = new Ref<String>();\n        final Ref<String> warning = new Ref<String>();\n        final Ref<String> version = new Ref<String>();\n        try {\n          PhoneGapCommandLine commandLine = new PhoneGapCommandLine(path, myProject.getBasePath());\n\n          if (commandLine.isCorrectExecutable()) {\n            version.set(commandLine.version());\n            ProcessOutput output = commandLine.pluginListRaw();\n            if (StringUtil.isEmpty(output.getStderr())) {\n              service.set(new PhoneGapPackageManagementService(commandLine, repositoryStore));\n\n              if (commandLine.isOld()) {\n                warning.set(PhoneGapBundle.message(\"phonegap.plugins.executable.version.error\"));\n              }\n            }\n\n            else {\n              error.set(\"Project root directory is not \" + commandLine.getPlatformName() + \" project\");\n            }\n          }\n          else {\n            error.set(PhoneGapBundle.message(\"phonegap.plugins.executable.error\"));\n          }\n        }\n        catch (Exception e) {\n          error.set(PhoneGapBundle.message(\"phonegap.plugins.executable.error\"));\n        }\n\n        UIUtil.invokeLaterIfNeeded(new Runnable() {\n          @Override\n          public void run() {\n            myPanel.updatePackages(service.get());\n            if (error.get() != null) {\n              packagesNotificationPanel.showError(error.get(), null, null);\n            }\n\n            if (warning.get() != null) {\n              packagesNotificationPanel.showWarning(warning.get());\n            }\n\n            callback.forVersion(version.get());\n          }\n        });\n      }\n    });\n  }","id":61945,"modified_method":"public synchronized void setupService(@Nullable final String path,\n                           @NotNull final String workDir,\n                           @NotNull final PhoneGapConfigurable.RepositoryStore repositoryStore,\n                           @NotNull final VersionCallback callback) {\n    packagesNotificationPanel.removeAllLinkHandlers();\n    packagesNotificationPanel.hide();\n    callback.forVersion(\"\");\n    if (StringUtil.isEmpty(path) || StringUtil.isEmpty(workDir)) {\n      return;\n    }\n\n    ApplicationManager.getApplication().executeOnPooledThread(new Runnable() {\n      @Override\n      public void run() {\n        runOnPooledThread(path, workDir, repositoryStore, callback);\n      }\n    });\n  }","commit_id":"d7a429150bbc107c5721e2d8ddb90b5bb28a36ee","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"public PhoneGapCommandLine getCommandLine() {\n    PhoneGapCommandLine current = myCommandLine;\n    String executable = getExecutable();\n    if (current != null && StringUtil.equals(current.getPath(), executable)) {\n      return current;\n    }\n    assert executable != null;\n    current = new PhoneGapCommandLine(executable, getProject().getBasePath());\n    myCommandLine = current;\n\n    return current;\n  }","id":61946,"modified_method":"public PhoneGapCommandLine getCommandLine() {\n    PhoneGapCommandLine current = myCommandLine;\n    String executable = getExecutable();\n    String workDir = getWorkDir();\n    if (current != null && StringUtil.equals(current.getPath(), executable) && StringUtil.equals(current.getWorkDir(), workDir)) {\n      return current;\n    }\n    assert executable != null;\n    assert workDir != null;\n\n    current = new PhoneGapCommandLine(executable, workDir);\n    myCommandLine = current;\n\n    return current;\n  }","commit_id":"d7a429150bbc107c5721e2d8ddb90b5bb28a36ee","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"@NotNull\n  @Override\n  protected JComponent createEditor() {\n    myExecutablePathField = PhoneGapUtil.createPhoneGapExecutableTextField(myProject);\n    myPlatformField = new ComboBox();\n    myCommand = new ComboBox();\n\n    addPlatformItems(myPlatformField);\n    addCommandItems(myCommand);\n\n    return FormBuilder.createFormBuilder()\n      .addLabeledComponent(\"PhoneGap/Cordova executable path:\", myExecutablePathField)\n      .addLabeledComponent(\"Command:\", myCommand)\n      .addLabeledComponent(\"Platform:\", myPlatformField)\n      .getPanel();\n  }","id":61947,"modified_method":"@NotNull\n  @Override\n  protected JComponent createEditor() {\n    myExecutablePathField = PhoneGapUtil.createPhoneGapExecutableTextField(myProject);\n    myWorkDirField = PhoneGapUtil.createPhoneGapWorkingDirectoryField(myProject);\n\n\n    myPlatformField = new ComboBox();\n    myCommand = new ComboBox();\n\n    addPlatformItems(myPlatformField);\n    addCommandItems(myCommand);\n\n    JBLabel label = new JBLabel(\"edit\");\n    label.addMouseListener(new MouseAdapter() {\n      @Override\n      public void mouseClicked(MouseEvent e) {\n        ShowSettingsUtil.getInstance().editConfigurable(myProject, new PhoneGapConfigurable(myProject));\n      }\n    });\n\n    return FormBuilder.createFormBuilder()\n      .addLabeledComponent(PhoneGapBundle.message(\"phonegap.conf.executable.name\"), myExecutablePathField)\n      .addLabeledComponent(PhoneGapBundle.message(\"phonegap.conf.work.dir.name\"), myWorkDirField)\n      .addLabeledComponent(\"Command:\", myCommand)\n      .addLabeledComponent(\"Platform:\", myPlatformField)\n      .addComponent(label)\n      .getPanel();\n  }","commit_id":"d7a429150bbc107c5721e2d8ddb90b5bb28a36ee","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"@Override\n  protected void resetEditorFrom(PhoneGapRunConfiguration s) {\n\n    String executable = s.getExecutable();\n    PhoneGapUtil.setExecutablePath(myExecutablePathField,\n                                   !StringUtil.isEmpty(executable) ? executable : PhoneGapSettings.getInstance().getExecutablePath());\n    String item = getPlatformsMap().get(s.getPlatform());\n    if (item != null) {\n      myPlatformField.setSelectedItem(item);\n    }\n    String command = s.getCommand();\n    if (command != null && COMMANDS_LIST.contains(command)) {\n      myCommand.setSelectedItem(command);\n    }\n\n  }","id":61948,"modified_method":"@Override\n  protected void resetEditorFrom(PhoneGapRunConfiguration s) {\n\n    String executable = s.getExecutable();\n    PhoneGapUtil.setFieldWithHistoryPath(myExecutablePathField,\n                                         !StringUtil.isEmpty(executable) ? executable : PhoneGapSettings.getInstance().getExecutablePath());\n    String item = getPlatformsMap().get(s.getPlatform());\n    if (item != null) {\n      myPlatformField.setSelectedItem(item);\n    }\n    String command = s.getCommand();\n    if (command != null && COMMANDS_LIST.contains(command)) {\n      myCommand.setSelectedItem(command);\n    }\n\n    String workDir = s.getWorkDir();\n    PhoneGapUtil.setFieldWithHistoryPath(myWorkDirField,\n                                         !StringUtil.isEmpty(workDir)\n                                         ? workDir\n                                         : PhoneGapSettings.getInstance().getWorkingDirectory(myProject));\n  }","commit_id":"d7a429150bbc107c5721e2d8ddb90b5bb28a36ee","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"@Override\n  protected void applyEditorTo(PhoneGapRunConfiguration s) throws ConfigurationException {\n    s.setExecutable(myExecutablePathField.getText());\n    String item = (String)myPlatformField.getSelectedItem();\n    s.setPlatform(ContainerUtil.getFirstItem(getPlatformsMap().getKeysByValue(item)));\n    s.setCommand((String)myCommand.getSelectedItem());\n  }","id":61949,"modified_method":"@Override\n  protected void applyEditorTo(PhoneGapRunConfiguration s) throws ConfigurationException {\n    s.setExecutable(myExecutablePathField.getText());\n    String item = (String)myPlatformField.getSelectedItem();\n    s.setPlatform(ContainerUtil.getFirstItem(getPlatformsMap().getKeysByValue(item)));\n    s.setCommand((String)myCommand.getSelectedItem());\n    s.setWorkDir(myWorkDirField.getText());\n  }","commit_id":"d7a429150bbc107c5721e2d8ddb90b5bb28a36ee","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"@Nullable\n  private static String detectDefaultPath() {\n    return ContainerUtil.getFirstItem(getDefaultPaths());\n  }","id":61950,"modified_method":"@Nullable\n  private static String detectDefaultPath() {\n    return ContainerUtil.getFirstItem(PhoneGapUtil.getDefaultExecutablePaths());\n  }","commit_id":"d7a429150bbc107c5721e2d8ddb90b5bb28a36ee","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"@NotNull\n  public static TextFieldWithHistoryWithBrowseButton createPhoneGapExecutableTextField(@Nullable Project project) {\n    TextFieldWithHistoryWithBrowseButton field = SwingHelper.createTextFieldWithHistoryWithBrowseButton(\n      project, \"PhoneGap/Cordova executable\",\n      FileChooserDescriptorFactory.createSingleFileNoJarsDescriptor(), new NotNullProducer<List<String>>() {\n        @NotNull\n        @Override\n        public List<String> produce() {\n          return PhoneGapSettings\n            .getDefaultPaths();\n        }\n      });\n    final TextFieldWithHistory textFieldWithHistory = field.getChildComponent();\n\n    String executablePath = PhoneGapSettings.getInstance().getExecutablePath();\n    if (StringUtil.isNotEmpty(executablePath)) {\n      textFieldWithHistory.setText(executablePath);\n      textFieldWithHistory.addCurrentTextToHistory();\n    }\n\n    return field;\n  }","id":61951,"modified_method":"@NotNull\n  public static TextFieldWithHistoryWithBrowseButton createPhoneGapExecutableTextField(@Nullable Project project) {\n    TextFieldWithHistoryWithBrowseButton field = SwingHelper.createTextFieldWithHistoryWithBrowseButton(\n      project, PhoneGapBundle.message(\"phonegap.conf.executable.name\"),\n      FileChooserDescriptorFactory.createSingleFileNoJarsDescriptor(), new NotNullProducer<List<String>>() {\n        @NotNull\n        @Override\n        public List<String> produce() {\n          return\n            getDefaultExecutablePaths();\n        }\n      });\n    final TextFieldWithHistory textFieldWithHistory = field.getChildComponent();\n\n    String executablePath = PhoneGapSettings.getInstance().getExecutablePath();\n    if (StringUtil.isNotEmpty(executablePath)) {\n      textFieldWithHistory.setText(executablePath);\n      textFieldWithHistory.addCurrentTextToHistory();\n    }\n\n    return field;\n  }","commit_id":"d7a429150bbc107c5721e2d8ddb90b5bb28a36ee","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"public static void setExecutablePath(TextFieldWithHistoryWithBrowseButton field, String executablePath) {\n    TextFieldWithHistory component = field.getChildComponent();\n    component.setText(executablePath);\n    if (!StringUtil.isEmpty(executablePath)) {\n      component.addCurrentTextToHistory();\n    }\n  }","id":61952,"modified_method":"public static void setFieldWithHistoryPath(TextFieldWithHistoryWithBrowseButton field, String executablePath) {\n    TextFieldWithHistory component = field.getChildComponent();\n    component.setText(executablePath);\n    if (!StringUtil.isEmpty(executablePath)) {\n      component.addCurrentTextToHistory();\n    }\n  }","commit_id":"d7a429150bbc107c5721e2d8ddb90b5bb28a36ee","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"@CalledInAwt\n  public void execute(@NotNull final Convertor<ProgressIndicator, Runnable> backgroundTask,\n                      @Nullable final Runnable onSlowAction,\n                      final int waitMillis,\n                      final boolean forceEDT) {\n    abort();\n\n    myModificationStamp++;\n    final int modificationStamp = myModificationStamp;\n\n    myProgressIndicator = new EmptyProgressIndicator();\n    final ProgressIndicator indicator = myProgressIndicator;\n\n    final Semaphore semaphore = new Semaphore(0);\n    final AtomicReference<Runnable> resultRef = new AtomicReference<Runnable>();\n\n    if (forceEDT) {\n      Runnable result = backgroundTask.convert(indicator);\n      finish(result, modificationStamp, indicator);\n    }\n    else {\n      ApplicationManager.getApplication().executeOnPooledThread(new Runnable() {\n        @Override\n        public void run() {\n          final Runnable result = backgroundTask.convert(indicator);\n\n          if (indicator.isCanceled()) {\n            semaphore.release();\n            return;\n          }\n\n          if (!resultRef.compareAndSet(null, result)) {\n            ApplicationManager.getApplication().invokeLater(new Runnable() {\n              @Override\n              public void run() {\n                finish(result, modificationStamp, indicator);\n              }\n            }, ModalityState.any());\n          }\n          semaphore.release();\n        }\n      });\n\n      try {\n        semaphore.tryAcquire(waitMillis, TimeUnit.MILLISECONDS);\n      }\n      catch (InterruptedException ignore) {\n      }\n      if (!resultRef.compareAndSet(null, TOO_SLOW_OPERATION)) {\n        // update presentation in the same thread to reduce blinking, caused by 'invokeLater' and fast background operation\n        finish(resultRef.get(), modificationStamp, indicator);\n      }\n      else {\n        if (onSlowAction != null) onSlowAction.run();\n      }\n    }\n  }","id":61953,"modified_method":"@CalledInAwt\n  public void execute(@NotNull final Convertor<ProgressIndicator, Runnable> backgroundTask,\n                      @Nullable final Runnable onSlowAction,\n                      final int waitMillis,\n                      final boolean forceEDT) {\n    abort();\n\n    myModificationStamp++;\n    final int modificationStamp = myModificationStamp;\n\n    final ModalityState modality = ModalityState.current();\n    myProgressIndicator = new EmptyProgressIndicator() {\n      @NotNull\n      @Override\n      public ModalityState getModalityState() {\n        return modality;\n      }\n    };\n    final ProgressIndicator indicator = myProgressIndicator;\n\n    final Semaphore semaphore = new Semaphore(0);\n    final AtomicReference<Runnable> resultRef = new AtomicReference<Runnable>();\n\n    if (forceEDT) {\n      Runnable result = backgroundTask.convert(indicator);\n      finish(result, modificationStamp, indicator);\n    }\n    else {\n      ApplicationManager.getApplication().executeOnPooledThread(new Runnable() {\n        @Override\n        public void run() {\n          ProgressManager.getInstance().executeProcessUnderProgress(new Runnable() {\n            @Override\n            public void run() {\n              final Runnable result = backgroundTask.convert(indicator);\n\n              if (indicator.isCanceled()) {\n                semaphore.release();\n                return;\n              }\n\n              if (!resultRef.compareAndSet(null, result)) {\n                ApplicationManager.getApplication().invokeLater(new Runnable() {\n                  @Override\n                  public void run() {\n                    finish(result, modificationStamp, indicator);\n                  }\n                }, modality);\n              }\n              semaphore.release();\n            }\n          }, indicator);\n        }\n      });\n\n      try {\n        semaphore.tryAcquire(waitMillis, TimeUnit.MILLISECONDS);\n      }\n      catch (InterruptedException ignore) {\n      }\n      if (!resultRef.compareAndSet(null, TOO_SLOW_OPERATION)) {\n        // update presentation in the same thread to reduce blinking, caused by 'invokeLater' and fast background operation\n        finish(resultRef.get(), modificationStamp, indicator);\n      }\n      else {\n        if (onSlowAction != null) onSlowAction.run();\n      }\n    }\n  }","commit_id":"01ba55f7c74c70dc8219816b9928dd20dc1fa1fd","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void reloadModel(final boolean userForcedRefresh) {\n    myUpdating.set(true);\n    myTable.getEmptyText().setText(StatusText.DEFAULT_EMPTY_TEXT);\n    final JBLoadingPanel loadingPanel = getLoadingPanel();\n    loadingPanel.startLoading();\n    ApplicationManager.getApplication().executeOnPooledThread(new Runnable() {\n      public void run() {\n        try {\n          if (myDisposed) return;\n          myUpdater = new Updater(loadingPanel, 100);\n          myUpdater.start();\n          myTree = new DTree(null, \"\", true);\n          mySrc.refresh(userForcedRefresh);\n          myTrg.refresh(userForcedRefresh);\n          scan(mySrc, myTree, true);\n          scan(myTrg, myTree, false);\n        }\n        catch (final IOException e) {\n          LOG.warn(e);\n          reportException(VcsBundle.message(\"refresh.failed.message\", StringUtil.decapitalize(e.getLocalizedMessage())));\n        }\n        finally {\n          if (myTree != null) {\n            myTree.setSource(mySrc);\n            myTree.setTarget(myTrg);\n            myTree.update(mySettings);\n            applySettings();\n          }\n        }\n      }\n    });\n  }","id":61954,"modified_method":"public void reloadModel(final boolean userForcedRefresh) {\n    myUpdating.set(true);\n    myTable.getEmptyText().setText(StatusText.DEFAULT_EMPTY_TEXT);\n    final JBLoadingPanel loadingPanel = getLoadingPanel();\n    loadingPanel.startLoading();\n\n    final ModalityState modalityState = ModalityState.current();\n\n    ApplicationManager.getApplication().executeOnPooledThread(new Runnable() {\n      public void run() {\n        EmptyProgressIndicator indicator = new EmptyProgressIndicator() {\n          @NotNull\n          @Override\n          public ModalityState getModalityState() {\n            return modalityState;\n          }\n        };\n        ProgressManager.getInstance().executeProcessUnderProgress(new Runnable() {\n          @Override\n          public void run() {\n            try {\n              if (myDisposed) return;\n              myUpdater = new Updater(loadingPanel, 100);\n              myUpdater.start();\n              text.set(\"Loading...\");\n              myTree = new DTree(null, \"\", true);\n              mySrc.refresh(userForcedRefresh);\n              myTrg.refresh(userForcedRefresh);\n              scan(mySrc, myTree, true);\n              scan(myTrg, myTree, false);\n            }\n            catch (final IOException e) {\n              LOG.warn(e);\n              reportException(VcsBundle.message(\"refresh.failed.message\", StringUtil.decapitalize(e.getLocalizedMessage())));\n            }\n            finally {\n              if (myTree != null) {\n                myTree.setSource(mySrc);\n                myTree.setTarget(myTrg);\n                myTree.update(mySettings);\n                applySettings();\n              }\n            }\n          }\n        }, indicator);\n      }\n    });\n  }","commit_id":"da1579ba2ef11253f56330e6994984cdbc327072","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static void refreshFile(boolean userInitiated, VirtualFile virtualFile) {\n    if (userInitiated) {\n      final List<Document> docsToSave = new ArrayList<Document>();\n      final FileDocumentManager manager = FileDocumentManager.getInstance();\n      for (Document document : manager.getUnsavedDocuments()) {\n        VirtualFile file = manager.getFile(document);\n        if (file != null && VfsUtilCore.isAncestor(virtualFile, file, false)) {\n          docsToSave.add(document);\n        }\n      }\n\n      if (!docsToSave.isEmpty()) {\n        new WriteAction() {\n          @Override\n          protected void run(@NotNull Result result) throws Throwable {\n            for (Document document : docsToSave) {\n              manager.saveDocument(document);\n            }\n          }\n        }.execute();\n      }\n\n      VfsUtil.markDirtyAndRefresh(true, true, true, virtualFile);\n    }\n  }","id":61955,"modified_method":"public static void refreshFile(boolean userInitiated, VirtualFile virtualFile) {\n    if (userInitiated) {\n      final List<Document> docsToSave = new ArrayList<Document>();\n      final FileDocumentManager manager = FileDocumentManager.getInstance();\n      for (Document document : manager.getUnsavedDocuments()) {\n        VirtualFile file = manager.getFile(document);\n        if (file != null && VfsUtilCore.isAncestor(virtualFile, file, false)) {\n          docsToSave.add(document);\n        }\n      }\n\n      if (!docsToSave.isEmpty()) {\n        new WriteAction() {\n          @Override\n          protected void run(@NotNull Result result) throws Throwable {\n            for (Document document : docsToSave) {\n              manager.saveDocument(document);\n            }\n          }\n        }.execute();\n      }\n\n      ModalityState modalityState = ProgressManager.getInstance().getProgressIndicator().getModalityState();\n\n      VfsUtil.markDirty(true, true, virtualFile);\n      RefreshQueue.getInstance().refresh(false, true, null, modalityState, virtualFile);\n    }\n  }","commit_id":"da1579ba2ef11253f56330e6994984cdbc327072","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static void updateQuickDocAsync(@NotNull final PsiElement element, @NotNull final Producer<String> docProducer) {\n    final Project project = element.getProject();\n    ApplicationManager.getApplication().executeOnPooledThread(new Runnable() {\n      @Override\n      public void run() {\n        final String documentation = docProducer.produce();\n        if (StringUtil.isEmpty(documentation)) return;\n        // modal dialogs with fragment editors fix: can't guess proper modality state here\n        //noinspection SSBasedInspection\n        SwingUtilities.invokeLater(new Runnable() {\n          @Override\n          public void run() {\n            DocumentationManager documentationManager = DocumentationManager.getInstance(project);\n            DocumentationComponent component;\n            JBPopup hint = documentationManager.getDocInfoHint();\n            if (hint != null) {\n              component = (DocumentationComponent)((AbstractPopup)hint).getComponent();\n            }\n            else if (documentationManager.hasActiveDockedDocWindow()) {\n              ToolWindow toolWindow = ToolWindowManager.getInstance(project).getToolWindow(ToolWindowId.DOCUMENTATION);\n              Content selectedContent = toolWindow == null ? null : toolWindow.getContentManager().getSelectedContent();\n              component = selectedContent == null ? null : (DocumentationComponent)selectedContent.getComponent();\n            }\n            else {\n              component = null;\n            }\n            if (component != null) {\n              component.replaceText(documentation, element);\n            }\n          }\n        });\n      }\n    });\n  }","id":61956,"modified_method":"public static void updateQuickDocAsync(@NotNull final PsiElement element, @NotNull final Producer<String> docProducer) {\n    final Project project = element.getProject();\n    ApplicationManager.getApplication().executeOnPooledThread(new Runnable() {\n      @Override\n      public void run() {\n        updateQuickDoc(project, element, docProducer.produce());\n      }\n    });\n  }","commit_id":"af021a7a18f17270c811966cf5807b4b052bec20","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void execute(BrowseMode browseMode) {\n      myBrowseMode = browseMode;\n\n      Document document = myEditor.getDocument();\n      final PsiFile file = PsiDocumentManager.getInstance(myProject).getPsiFile(document);\n      if (file == null) return;\n      PsiDocumentManager.getInstance(myProject).commitAllDocuments();\n\n      if (EditorUtil.inVirtualSpace(myEditor, myPosition)) {\n        return;\n      }\n\n      final int offset = myEditor.logicalPositionToOffset(myPosition);\n\n      int selStart = myEditor.getSelectionModel().getSelectionStart();\n      int selEnd = myEditor.getSelectionModel().getSelectionEnd();\n\n      if (offset >= selStart && offset < selEnd) return;\n\n      ApplicationManager.getApplication().executeOnPooledThread(new Runnable() {\n        public void run() {\n          final ProgressIndicator progressIndicator = new ProgressIndicatorBase();\n          final ApplicationAdapter listener = new ApplicationAdapter() {\n            @Override\n            public void beforeWriteActionStart(Object action) {\n              progressIndicator.cancel();\n            }\n          };\n          final Application application = ApplicationManager.getApplication();\n          try {\n            application.addApplicationListener(listener);\n            ProgressManager.getInstance().runProcess(new Runnable(){\n                @Override\n                public void run() {\n                  // This read action can possibe last for a long time, we want it to stop immediately on the first write access.\n                  // For this purpose we launch it under empty progress and invoke progressIndicator#cancel on write access to avoid possible write lock delays.\n                  application.runReadAction(new Runnable() {\n                    public void run() {\n                      doExecute(file, offset);\n                    }\n                  });\n                }\n              }, progressIndicator);\n          }\n          finally {\n            application.removeApplicationListener(listener);\n          }\n        }\n      });\n    }","id":61957,"modified_method":"public void execute(BrowseMode browseMode) {\n      myBrowseMode = browseMode;\n\n      Document document = myEditor.getDocument();\n      final PsiFile file = PsiDocumentManager.getInstance(myProject).getPsiFile(document);\n      if (file == null) return;\n      PsiDocumentManager.getInstance(myProject).commitAllDocuments();\n\n      if (EditorUtil.inVirtualSpace(myEditor, myPosition)) {\n        return;\n      }\n\n      final int offset = myEditor.logicalPositionToOffset(myPosition);\n\n      int selStart = myEditor.getSelectionModel().getSelectionStart();\n      int selEnd = myEditor.getSelectionModel().getSelectionEnd();\n\n      if (offset >= selStart && offset < selEnd) return;\n\n      ApplicationManager.getApplication().executeOnPooledThread(new Runnable() {\n        public void run() {\n          ProgressIndicatorUtils.runWithWriteActionPriority(new Runnable() {\n            public void run() {\n              doExecute(file, offset);\n            }\n          });\n        }\n      });\n    }","commit_id":"a850c64608e0810016a6305c726be6267d076d69","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void runActivity(@NotNull final Project project) {\n    ApplicationManager.getApplication().executeOnPooledThread(new Runnable() {\n      @Override\n      public void run() {\n        AccessToken accessToken = ApplicationManager.getApplication().acquireReadActionLock();\n\n        try {\n          if (JavaPsiFacade.getInstance(project).findClass(CommonClassNames.JAVA_LANG_OBJECT, GlobalSearchScope.allScope(project)) == null) {\n            return; // If indexes is corrupted JavaPsiFacade.findClass() can't find classes during StartupActivity (may be it's a bug).\n                    // So we can't determine whether exists Grails library or not.\n          }\n\n          Pair<Module, MvcFramework> pair = findModuleWithoutLibrary(project);\n\n          if (pair != null) {\n            final MvcFramework framework = pair.second;\n            final Module module = pair.first;\n\n            new Notification(framework.getFrameworkName() + \".Configure\",\n                             framework.getFrameworkName() + \" SDK not found.\",\n                             \"<html><body>Module '\" +\n                             module.getName() +\n                             \"' has no \" +\n                             framework.getFrameworkName() +\n                             \" SDK. <a href='create'>Configure SDK<\/a><\/body><\/html>\", NotificationType.INFORMATION,\n                             new NotificationListener.Adapter() {\n                               @Override\n                               protected void hyperlinkActivated(@NotNull Notification notification, @NotNull HyperlinkEvent e) {\n                                 MvcConfigureNotification.configure(framework, module);\n                               }\n                             }).notify(project);\n          }\n        }\n        finally {\n          accessToken.finish();\n        }\n      }\n    });\n  }","id":61958,"modified_method":"@Override\n  public void runActivity(@NotNull final Project project) {\n    ApplicationManager.getApplication().executeOnPooledThread(new Runnable() {\n      @Override\n      public void run() {\n        ApplicationManager.getApplication().runReadAction(new Runnable() {\n          @Override\n          public void run() {\n            if (project.isDisposed() || JavaPsiFacade.getInstance(project).findClass(CommonClassNames.JAVA_LANG_OBJECT, GlobalSearchScope.allScope(project)) == null) {\n              return; // If indexes is corrupted JavaPsiFacade.findClass() can't find classes during StartupActivity (may be it's a bug).\n              // So we can't determine whether exists Grails library or not.\n            }\n\n            Pair<Module, MvcFramework> pair = findModuleWithoutLibrary(project);\n\n            if (pair != null) {\n              final MvcFramework framework = pair.second;\n              final Module module = pair.first;\n\n              new Notification(framework.getFrameworkName() + \".Configure\",\n                               framework.getFrameworkName() + \" SDK not found.\",\n                               \"<html><body>Module '\" +\n                               module.getName() +\n                               \"' has no \" +\n                               framework.getFrameworkName() +\n                               \" SDK. <a href='create'>Configure SDK<\/a><\/body><\/html>\", NotificationType.INFORMATION,\n                               new NotificationListener.Adapter() {\n                                 @Override\n                                 protected void hyperlinkActivated(@NotNull Notification notification, @NotNull HyperlinkEvent e) {\n                                   MvcConfigureNotification.configure(framework, module);\n                                 }\n                               }\n              ).notify(project);\n            }\n          }\n        });\n      }\n    });\n  }","commit_id":"f1a1706698699fb310f6ee2dadc1b5ac0a9fd85b","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void execute(BrowseMode browseMode) {\n      myBrowseMode = browseMode;\n\n      Document document = myEditor.getDocument();\n      final PsiFile file = PsiDocumentManager.getInstance(myProject).getPsiFile(document);\n      if (file == null) return;\n      PsiDocumentManager.getInstance(myProject).commitAllDocuments();\n\n      if (TargetElementUtilBase.inVirtualSpace(myEditor, myPosition)) {\n        return;\n      }\n\n      final int offset = myEditor.logicalPositionToOffset(myPosition);\n\n      int selStart = myEditor.getSelectionModel().getSelectionStart();\n      int selEnd = myEditor.getSelectionModel().getSelectionEnd();\n\n      if (offset >= selStart && offset < selEnd) return;\n\n      ApplicationManager.getApplication().executeOnPooledThread(new Runnable() {\n        public void run() {\n          ApplicationManager.getApplication().runReadAction(new Runnable() {\n            public void run() {\n              doExecute(file, offset);\n            }\n          });\n        }\n      });\n    }","id":61959,"modified_method":"public void execute(BrowseMode browseMode) {\n      myBrowseMode = browseMode;\n\n      Document document = myEditor.getDocument();\n      final PsiFile file = PsiDocumentManager.getInstance(myProject).getPsiFile(document);\n      if (file == null) return;\n      PsiDocumentManager.getInstance(myProject).commitAllDocuments();\n\n      if (TargetElementUtilBase.inVirtualSpace(myEditor, myPosition)) {\n        return;\n      }\n\n      final int offset = myEditor.logicalPositionToOffset(myPosition);\n\n      int selStart = myEditor.getSelectionModel().getSelectionStart();\n      int selEnd = myEditor.getSelectionModel().getSelectionEnd();\n\n      if (offset >= selStart && offset < selEnd) return;\n\n      ApplicationManager.getApplication().executeOnPooledThread(new Runnable() {\n        public void run() {\n          final ProgressIndicator progressIndicator = new ProgressIndicatorBase();\n          final ApplicationAdapter listener = new ApplicationAdapter() {\n            @Override\n            public void beforeWriteActionStart(Object action) {\n              progressIndicator.cancel();\n            }\n          };\n          final Application application = ApplicationManager.getApplication();\n          try {\n            application.addApplicationListener(listener);\n            ProgressManager.getInstance().runProcess(new Runnable(){\n                @Override\n                public void run() {\n                  // This read action can possibe last for a long time, we want it to stop immediately on the first write access.\n                  // For this purpose we launch it under empty progress and invoke progressIndicator#cancel on write access to avoid possible write lock delays.\n                  application.runReadAction(new Runnable() {\n                    public void run() {\n                      doExecute(file, offset);\n                    }\n                  });\n                }\n              }, progressIndicator);\n          }\n          finally {\n            application.removeApplicationListener(listener);\n          }\n        }\n      });\n    }","commit_id":"0ff9adb79042b050108f2ddde41e93d445312b7e","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private boolean createProjectByAndroidTool(final VirtualFile contentRoot,\n                                             final VirtualFile sourceRoot,\n                                             final AndroidFacet facet) {\n    final Module module = facet.getModule();\n    AndroidPlatform platform = AndroidPlatform.parse(mySdk);\n\n    if (platform == null) {\n      Messages.showErrorDialog(module.getProject(), \"Cannot parse Android SDK\", CommonBundle.getErrorTitle());\n      return true;\n    }\n\n    final IAndroidTarget target = platform.getTarget();\n\n    final String androidToolPath =\n      platform.getSdkData().getLocation() + File.separator + AndroidCommonUtils.toolPath(SdkConstants.androidCmdName());\n\n    if (!new File(androidToolPath).exists()) {\n      return false;\n    }\n\n    final GeneralCommandLine commandLine = new GeneralCommandLine();\n    commandLine.setExePath(FileUtil.toSystemDependentName(androidToolPath));\n\n    commandLine.addParameter(\"create\");\n\n    switch (myProjectType) {\n      case APPLICATION:\n        commandLine.addParameter(\"project\");\n        break;\n      case LIBRARY:\n        commandLine.addParameter(\"lib-project\");\n        break;\n      case TEST:\n        commandLine.addParameter(\"test-project\");\n        break;\n    }\n\n    commandLine.addParameters(\"--name\");\n    commandLine.addParameter(getAntProjectName(module.getName()));\n\n    commandLine.addParameters(\"--path\");\n\n    File tempContentRoot;\n    try {\n      tempContentRoot = FileUtil.createTempDirectory(\"android_temp_content_root\", \"tmp\");\n    }\n    catch (IOException e) {\n      LOG.error(e);\n      return false;\n    }\n    final String targetDirectoryPath = tempContentRoot.getPath();\n    commandLine.addParameter(FileUtil.toSystemDependentName(targetDirectoryPath));\n\n    if (myProjectType == ProjectType.APPLICATION || myProjectType == ProjectType.LIBRARY) {\n      String apiLevel = target.hashString();\n      commandLine.addParameter(\"--target\");\n      commandLine.addParameter(apiLevel);\n      commandLine.addParameter(\"--package\");\n      commandLine.addParameter(myPackageName);\n    }\n\n    if (myProjectType == ProjectType.APPLICATION) {\n      commandLine.addParameter(\"--activity\");\n      commandLine.addParameter(myActivityName);\n    }\n    else if (myProjectType == ProjectType.TEST) {\n      String moduleDirPath = AndroidRootUtil.getModuleDirPath(myTestedModule);\n      assert moduleDirPath != null;\n      commandLine.addParameter(\"--main\");\n      commandLine.addParameter(FileUtil.toSystemDependentName(moduleDirPath));\n    }\n\n    final File finalTempContentRoot = tempContentRoot;\n\n    ApplicationManager.getApplication().executeOnPooledThread(new Runnable() {\n      @Override\n      public void run() {\n        final Project project = module.getProject();\n        try {\n          AndroidUtils.runExternalTool(commandLine, project);\n          copyGeneratedAndroidProject(finalTempContentRoot, contentRoot, sourceRoot);\n        }\n        finally {\n          FileUtil.delete(finalTempContentRoot);\n        }\n\n        StartupManager.getInstance(project).runWhenProjectIsInitialized(new Runnable() {\n          public void run() {\n            FileDocumentManager.getInstance().saveAllDocuments();\n          }\n        });\n        contentRoot.refresh(false, true);\n\n        ApplicationManager.getApplication().invokeLater(new Runnable() {\n          @Override\n          public void run() {\n\n            if (contentRoot.findChild(SdkConstants.FN_ANDROID_MANIFEST_XML) == null) {\n              AndroidUtils.printMessageToConsole(project, \"The project wasn't generated by 'android' tool.\",\n                                                 ConsoleViewContentType.ERROR_OUTPUT);\n              return;\n            }\n\n            ApplicationManager.getApplication().runWriteAction(new Runnable() {\n              @Override\n              public void run() {\n                try {\n                  if (project.isDisposed()) {\n                    return;\n                  }\n                  if (myProjectType == ProjectType.APPLICATION) {\n                    assignApplicationName(facet);\n                    configureManifest(facet, target);\n                    createChildDirectoryIfNotExist(project, contentRoot, SdkConstants.FD_ASSETS);\n                    createChildDirectoryIfNotExist(project, contentRoot, SdkConstants.FD_NATIVE_LIBS);\n                  }\n                  else if (myProjectType == ProjectType.LIBRARY && myPackageName != null) {\n                    final String[] dirs = myPackageName.split(\"\\\\.\");\n                    VirtualFile file = sourceRoot;\n\n                    for (String dir : dirs) {\n                      if (file == null || dir.length() == 0) {\n                        break;\n                      }\n                      final VirtualFile childDir = file.findChild(dir);\n                      file = childDir != null\n                             ? childDir\n                             : file.createChildDirectory(project, dir);\n                    }\n                  }\n                }\n                catch (IOException e) {\n                  LOG.error(e);\n                }\n              }\n            });\n\n            ApplicationManager.getApplication().runReadAction(new Runnable() {\n              @Override\n              public void run() {\n                if (project.isDisposed() || facet.getModule().isDisposed()) {\n                  return;\n                }\n\n                if (myTargetSelectionMode != null) {\n                  if (myProjectType == ProjectType.APPLICATION) {\n                    addRunConfiguration(facet, myTargetSelectionMode, myPreferredAvd);\n                  }\n                  else if (myProjectType == ProjectType.TEST) {\n                    addTestRunConfiguration(facet, myTargetSelectionMode, myPreferredAvd);\n                  }\n                }\n              }\n            });\n\n            new ReformatCodeProcessor(project, module, false).run();\n          }\n        });\n      }\n    });\n    return true;\n  }","id":61960,"modified_method":"private boolean createProjectByAndroidTool(final VirtualFile contentRoot,\n                                             final VirtualFile sourceRoot,\n                                             final AndroidFacet facet) {\n    final Module module = facet.getModule();\n    AndroidPlatform platform = AndroidPlatform.parse(mySdk);\n\n    if (platform == null) {\n      Messages.showErrorDialog(module.getProject(), \"Cannot parse Android SDK\", CommonBundle.getErrorTitle());\n      return true;\n    }\n\n    final IAndroidTarget target = platform.getTarget();\n\n    final String androidToolPath =\n      platform.getSdkData().getLocation() + File.separator + AndroidCommonUtils.toolPath(SdkConstants.androidCmdName());\n\n    if (!new File(androidToolPath).exists()) {\n      return false;\n    }\n\n    final GeneralCommandLine commandLine = new GeneralCommandLine();\n    commandLine.setExePath(FileUtil.toSystemDependentName(androidToolPath));\n\n    commandLine.addParameter(\"create\");\n\n    switch (myProjectType) {\n      case APPLICATION:\n        commandLine.addParameter(\"project\");\n        break;\n      case LIBRARY:\n        commandLine.addParameter(\"lib-project\");\n        break;\n      case TEST:\n        commandLine.addParameter(\"test-project\");\n        break;\n    }\n\n    commandLine.addParameters(\"--name\");\n    commandLine.addParameter(getAntProjectName(module.getName()));\n\n    commandLine.addParameters(\"--path\");\n\n    File tempContentRoot;\n    try {\n      tempContentRoot = FileUtil.createTempDirectory(\"android_temp_content_root\", \"tmp\");\n    }\n    catch (IOException e) {\n      LOG.error(e);\n      return false;\n    }\n    final String targetDirectoryPath = tempContentRoot.getPath();\n    commandLine.addParameter(FileUtil.toSystemDependentName(targetDirectoryPath));\n\n    if (myProjectType == ProjectType.APPLICATION || myProjectType == ProjectType.LIBRARY) {\n      String apiLevel = target.hashString();\n      commandLine.addParameter(\"--target\");\n      commandLine.addParameter(apiLevel);\n      commandLine.addParameter(\"--package\");\n      commandLine.addParameter(myPackageName);\n    }\n\n    if (myProjectType == ProjectType.APPLICATION) {\n      commandLine.addParameter(\"--activity\");\n      commandLine.addParameter(myActivityName);\n    }\n    else if (myProjectType == ProjectType.TEST) {\n      String moduleDirPath = AndroidRootUtil.getModuleDirPath(myTestedModule);\n      assert moduleDirPath != null;\n      commandLine.addParameter(\"--main\");\n      commandLine.addParameter(FileUtil.toSystemDependentName(moduleDirPath));\n    }\n\n    final File finalTempContentRoot = tempContentRoot;\n\n    ApplicationManager.getApplication().executeOnPooledThread(new Runnable() {\n      @Override\n      public void run() {\n        final Project project = module.getProject();\n        final String androidToolOutput;\n        final boolean androidToolSuccess;\n        try {\n          final Pair<String, Boolean> pair = runAndroidTool(commandLine, project);\n          androidToolOutput = pair.getFirst();\n          androidToolSuccess = pair.getSecond();\n          copyGeneratedAndroidProject(finalTempContentRoot, contentRoot, sourceRoot);\n        }\n        finally {\n          FileUtil.delete(finalTempContentRoot);\n        }\n\n        StartupManager.getInstance(project).runWhenProjectIsInitialized(new Runnable() {\n          public void run() {\n            FileDocumentManager.getInstance().saveAllDocuments();\n          }\n        });\n        contentRoot.refresh(false, true);\n\n        ApplicationManager.getApplication().invokeLater(new Runnable() {\n          @Override\n          public void run() {\n            final boolean manifestGenerated = contentRoot.findChild(SdkConstants.FN_ANDROID_MANIFEST_XML) != null;\n            final String projectNotGeneratedError = \"The project wasn't generated by 'android' tool.\";\n\n            if (androidToolOutput != null &&\n                androidToolOutput.length() > 0 &&\n                (!manifestGenerated ||\n                 !androidToolSuccess ||\n                 androidToolOutput.trim().toLowerCase().startsWith(\"error:\"))) {\n              final ConsoleViewContentType contentType = androidToolSuccess\n                                                         ? ConsoleViewContentType.NORMAL_OUTPUT\n                                                         : ConsoleViewContentType.ERROR_OUTPUT;\n              AndroidUtils.activateConsoleToolWindow(project, new Runnable() {\n                @Override\n                public void run() {\n                  if (!manifestGenerated) {\n                    AndroidUtils.printMessageToConsole(project, projectNotGeneratedError, ConsoleViewContentType.ERROR_OUTPUT);\n                  }\n                  AndroidUtils.printMessageToConsole(project, androidToolOutput, contentType);\n                }\n              });\n            }\n            else if (!manifestGenerated) {\n              AndroidUtils.activateConsoleToolWindow(project, new Runnable() {\n                @Override\n                public void run() {\n                  AndroidUtils.printMessageToConsole(project, projectNotGeneratedError, ConsoleViewContentType.ERROR_OUTPUT);\n                }\n              });\n              return;\n            }\n\n            ApplicationManager.getApplication().runWriteAction(new Runnable() {\n              @Override\n              public void run() {\n                try {\n                  if (project.isDisposed()) {\n                    return;\n                  }\n                  if (myProjectType == ProjectType.APPLICATION) {\n                    assignApplicationName(facet);\n                    configureManifest(facet, target);\n                    createChildDirectoryIfNotExist(project, contentRoot, SdkConstants.FD_ASSETS);\n                    createChildDirectoryIfNotExist(project, contentRoot, SdkConstants.FD_NATIVE_LIBS);\n                  }\n                  else if (myProjectType == ProjectType.LIBRARY && myPackageName != null) {\n                    final String[] dirs = myPackageName.split(\"\\\\.\");\n                    VirtualFile file = sourceRoot;\n\n                    for (String dir : dirs) {\n                      if (file == null || dir.length() == 0) {\n                        break;\n                      }\n                      final VirtualFile childDir = file.findChild(dir);\n                      file = childDir != null\n                             ? childDir\n                             : file.createChildDirectory(project, dir);\n                    }\n                  }\n                }\n                catch (IOException e) {\n                  LOG.error(e);\n                }\n              }\n            });\n\n            ApplicationManager.getApplication().runReadAction(new Runnable() {\n              @Override\n              public void run() {\n                if (project.isDisposed() || facet.getModule().isDisposed()) {\n                  return;\n                }\n\n                if (myTargetSelectionMode != null) {\n                  if (myProjectType == ProjectType.APPLICATION) {\n                    addRunConfiguration(facet, myTargetSelectionMode, myPreferredAvd);\n                  }\n                  else if (myProjectType == ProjectType.TEST) {\n                    addTestRunConfiguration(facet, myTargetSelectionMode, myPreferredAvd);\n                  }\n                }\n              }\n            });\n\n            new ReformatCodeProcessor(project, module, false).run();\n          }\n        });\n      }\n    });\n    return true;\n  }","commit_id":"ee368d7b6e93303b169370ca6758481643b764a2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static void printMessageToConsole(@NotNull final Project project,\n                                           @NotNull final String s,\n                                           @NotNull final ConsoleViewContentType contentType) {\n    activateConsoleToolWindow(project, new Runnable() {\n      @Override\n      public void run() {\n        final ConsoleView consoleView = project.getUserData(CONSOLE_VIEW_KEY);\n\n        if (consoleView != null) {\n          consoleView.print(s + '\\n', contentType);\n        }\n      }\n    });\n  }","id":61961,"modified_method":"public static void printMessageToConsole(@NotNull Project project, @NotNull String s, @NotNull ConsoleViewContentType contentType) {\n    final ConsoleView consoleView = project.getUserData(CONSOLE_VIEW_KEY);\n\n    if (consoleView != null) {\n      consoleView.print(s + '\\n', contentType);\n    }\n  }","commit_id":"ee368d7b6e93303b169370ca6758481643b764a2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void activateConsoleToolWindow(@NotNull Project project, @NotNull final Runnable runAfterActivation) {\n    final ToolWindowManager manager = ToolWindowManager.getInstance(project);\n    final String toolWindowId = AndroidBundle.message(\"android.console.tool.window.title\");\n\n    ToolWindow toolWindow = manager.getToolWindow(toolWindowId);\n    if (toolWindow != null) {\n      runAfterActivation.run();\n      return;\n    }\n\n    toolWindow = manager.registerToolWindow(toolWindowId, true, ToolWindowAnchor.BOTTOM);\n    final ConsoleView console = new ConsoleViewImpl(project, false);\n    project.putUserData(CONSOLE_VIEW_KEY, console);\n    toolWindow.getContentManager().addContent(new ContentImpl(console.getComponent(), \"\", false));\n\n    final ToolWindowManagerListener listener = new ToolWindowManagerListener() {\n      @Override\n      public void toolWindowRegistered(@NotNull String id) {\n      }\n\n      @Override\n      public void stateChanged() {\n        ToolWindow window = manager.getToolWindow(toolWindowId);\n        if (window != null && !window.isVisible()) {\n          ((ToolWindowManagerEx)manager).removeToolWindowManagerListener(this);\n\n          ApplicationManager.getApplication().invokeLater(new Runnable() {\n            @Override\n            public void run() {\n              manager.unregisterToolWindow(toolWindowId);\n            }\n          });\n        }\n      }\n    };\n\n    toolWindow.show(new Runnable() {\n      @Override\n      public void run() {\n        runAfterActivation.run();\n        ((ToolWindowManagerEx)manager).addToolWindowManagerListener(listener);\n      }\n    });\n  }","id":61962,"modified_method":"public static void activateConsoleToolWindow(@NotNull Project project, @NotNull final Runnable runAfterActivation) {\n    final ToolWindowManager manager = ToolWindowManager.getInstance(project);\n    final String toolWindowId = AndroidBundle.message(\"android.console.tool.window.title\");\n\n    ToolWindow toolWindow = manager.getToolWindow(toolWindowId);\n    if (toolWindow != null) {\n      runAfterActivation.run();\n      return;\n    }\n\n    toolWindow = manager.registerToolWindow(toolWindowId, true, ToolWindowAnchor.BOTTOM);\n    final ConsoleView console = new ConsoleViewImpl(project, false);\n    project.putUserData(CONSOLE_VIEW_KEY, console);\n    toolWindow.getContentManager().addContent(new ContentImpl(console.getComponent(), \"\", false));\n\n    final ToolWindowManagerListener listener = new ToolWindowManagerListener() {\n      @Override\n      public void toolWindowRegistered(@NotNull String id) {\n      }\n\n      @Override\n      public void stateChanged() {\n        ToolWindow window = manager.getToolWindow(toolWindowId);\n        if (window != null && !window.isVisible()) {\n          ((ToolWindowManagerEx)manager).removeToolWindowManagerListener(this);\n\n          ApplicationManager.getApplication().invokeLater(new Runnable() {\n            @Override\n            public void run() {\n              manager.unregisterToolWindow(toolWindowId);\n            }\n          });\n        }\n      }\n    };\n\n    toolWindow.show(new Runnable() {\n      @Override\n      public void run() {\n        runAfterActivation.run();\n        ((ToolWindowManagerEx)manager).addToolWindowManagerListener(listener);\n      }\n    });\n  }","commit_id":"ee368d7b6e93303b169370ca6758481643b764a2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private List<Task> getIssuesFromRepositories(@Nullable String request, int max, long since, boolean forceRequest) {\n    List<Task> issues = new ArrayList<Task>();\n    for (final TaskRepository repository : getAllRepositories()) {\n      if (!repository.isConfigured() || (!forceRequest && myBadRepositories.contains(repository))) {\n        continue;\n      }\n      try {\n        Task[] tasks = repository.getIssues(request, max, since);\n        myBadRepositories.remove(repository);\n        ContainerUtil.addAll(issues, tasks);\n      }\n      catch (Exception e) {\n        myBadRepositories.add(repository);\n        Notifications.Bus.register(TASKS_NOTIFICATION_GROUP, NotificationDisplayType.BALLOON);\n        Notifications.Bus.notify(new Notification(TASKS_NOTIFICATION_GROUP, \"Cannot connect to \" + repository.getUrl(),\n                                                  \"<p><a href=\\\"\\\">Configure server...<\/a><\/p>\", NotificationType.WARNING,\n                                                  new NotificationListener() {\n                                                    public void hyperlinkUpdate(@NotNull Notification notification,\n                                                                                @NotNull HyperlinkEvent event) {\n                                                      TaskRepositoriesConfigurable configurable =\n                                                        new TaskRepositoriesConfigurable(myProject);\n                                                      ShowSettingsUtil.getInstance().editConfigurable(myProject, configurable);\n                                                      if (!ArrayUtil.contains(repository, getAllRepositories())) {\n                                                        notification.expire();\n                                                      }\n                                                    }\n                                                  }), myProject);\n      }\n    }\n    return issues;\n  }","id":61963,"modified_method":"private List<Task> getIssuesFromRepositories(@Nullable String request, int max, long since, boolean forceRequest) {\n    List<Task> issues = new ArrayList<Task>();\n    for (final TaskRepository repository : getAllRepositories()) {\n      if (!repository.isConfigured() || (!forceRequest && myBadRepositories.contains(repository))) {\n        continue;\n      }\n      try {\n        Task[] tasks = repository.getIssues(request, max, since);\n        myBadRepositories.remove(repository);\n        ContainerUtil.addAll(issues, tasks);\n      }\n      catch (Exception e) {\n        myBadRepositories.add(repository);\n        if (forceRequest) {\n          notifyAboutConnectionFailure(repository);\n        }\n      }\n    }\n    return issues;\n  }","commit_id":"5fecee12df4a2649a21b779d48e260215a9d4efc","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void updateIssues(final @Nullable Runnable onComplete) {\n    TaskRepository first = ContainerUtil.find(getAllRepositories(), new Condition<TaskRepository>() {\n      public boolean value(TaskRepository repository) {\n        return repository.isConfigured();\n      }\n    });\n    if (first == null) {\n      myIssueCache.clear();\n      if (onComplete != null) {\n        onComplete.run();\n      }\n      return;\n    }\n    myUpdating = true;\n    ApplicationManager.getApplication().executeOnPooledThread(new Runnable() {\n      public void run() {\n        try {\n          List<Task> issues = getIssuesFromRepositories(null, myConfig.updateIssuesCount, 0, false);\n\n          synchronized (myIssueCache) {\n            myIssueCache.clear();\n            for (Task issue : issues) {\n              myIssueCache.put(issue.getId(), issue);\n            }\n          }\n          // update local tasks\n           synchronized (myTasks) {\n             for (Iterator<Map.Entry<String,LocalTaskImpl>> it = myTasks.entrySet().iterator(); it.hasNext();) {\n               Map.Entry<String,LocalTaskImpl> entry = it.next();\n               Task issue = myIssueCache.get(entry.getKey());\n               if (issue != null) {\n                 if (issue.isClosed()) {\n                   it.remove();\n                 } else {\n                   entry.getValue().updateFromIssue(issue);\n                 }\n               }\n             }\n           }\n        }\n        finally {\n          if (onComplete != null) {\n            onComplete.run();\n          }\n          myUpdating = false;\n        }\n      }\n    });\n  }","id":61964,"modified_method":"public void updateIssues(final @Nullable Runnable onComplete) {\n    TaskRepository first = ContainerUtil.find(getAllRepositories(), new Condition<TaskRepository>() {\n      public boolean value(TaskRepository repository) {\n        return repository.isConfigured();\n      }\n    });\n    if (first == null) {\n      myIssueCache.clear();\n      if (onComplete != null) {\n        onComplete.run();\n      }\n      return;\n    }\n    myUpdating = true;\n    if (ApplicationManager.getApplication().isUnitTestMode()) {\n      doUpdate(onComplete);\n    }\n    else {\n      ApplicationManager.getApplication().executeOnPooledThread(new Runnable() {\n        public void run() {\n          doUpdate(onComplete);\n        }\n      });\n    }\n  }","commit_id":"5fecee12df4a2649a21b779d48e260215a9d4efc","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    myManager = TaskManager.getManager(getProject());\n  }","id":61965,"modified_method":"@Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    myManager = (TaskManagerImpl)TaskManager.getManager(getProject());\n  }","commit_id":"5fecee12df4a2649a21b779d48e260215a9d4efc","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n   * The server calls this constructor to listen on the given port for incoming\n   * connections. Protocol version handshake is performed when the connection\n   * is established. This constructor blocks until a client connects.\n   * @param args arguments\n   */\n  private BaseXServer(final String[] args) {\n    Prop.server = true;\n\n    if(!parseArguments(args)) return;\n\n    // this thread cleans the process stack\n    new Thread() {\n      @Override\n      public void run() {\n        while(running) {\n          Performance.sleep(2500L);\n          clean();\n        }\n      }\n    }.start();\n\n    try {\n      final ServerSocket server = new ServerSocket(Prop.port);\n      BaseX.outln(SERVERSTART);\n      while(running) serve(server);\n      BaseX.outln(SERVERSTOPPED);\n\n      context.close();\n    } catch(final Exception ex) {\n      BaseX.debug(ex);\n      if(ex instanceof BindException) {\n        BaseX.errln(SERVERBIND);\n      } else if(ex instanceof IOException) {\n        BaseX.errln(SERVERERR);\n      } else {\n        BaseX.errln(ex.getMessage());\n      }\n    }\n  }","id":61966,"modified_method":"/**\n   * The server calls this constructor to listen on the given port for incoming\n   * connections. Protocol version handshake is performed when the connection\n   * is established. This constructor blocks until a client connects.\n   * @param args arguments\n   */\n  private BaseXServer(final String[] args) {\n    Prop.server = true;\n\n    if(!parseArguments(args)) return;\n\n    // this thread cleans the process stack\n    new Thread() {\n      @Override\n      public void run() {\n        while(running) {\n          Performance.sleep(2500L);\n          clean();\n        }\n      }\n    }.start();\n\n    try {\n      final ServerSocket server = new ServerSocket(Prop.port);\n      BaseX.outln(SERVERSTART);\n      while(running) serve(server);\n      context.close();\n    } catch(final Exception ex) {\n      BaseX.debug(ex);\n      if(ex instanceof BindException) {\n        BaseX.errln(SERVERBIND);\n      } else if(ex instanceof IOException) {\n        BaseX.errln(SERVERERR);\n      } else {\n        BaseX.errln(ex.getMessage());\n      }\n    }\n  }","commit_id":"7a45d88ab253ce534b977e74443265e595901b84","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\r\n  public void close() {\r\n    super.close();\r\n\r\n    final String in = input != null ? input.getText() :\r\n      Token.string(input3.getText());\r\n\r\n    if(kind == Data.ELEM || kind == Data.DOC) {\r\n      if(in.length() == 0 || in.equals(old1)) return;\r\n      result = new String[] { in };\r\n    } else if(kind == Data.TEXT || kind == Data.COMM) {\r\n      if(in.equals(old2)) return;\r\n      result = new String[] { in };\r\n    } else {\r\n      final String in2 = Token.string(input2.getText());\r\n      if(in.length() == 0 || in.equals(old1) && in2.equals(old2)) return;\r\n      result = new String[] { in, in2 };\r\n    }\r\n  }","id":61967,"modified_method":"@Override\r\n  public void close() {\r\n    super.close();\r\n\r\n    final String in = input != null ? input.getText() :\r\n      string(input3.getText());\r\n\r\n    if(kind == Data.ELEM || kind == Data.DOC) {\r\n      if(in.length() == 0 || in.equals(old1)) return;\r\n      result = new String[] { in };\r\n    } else if(kind == Data.TEXT || kind == Data.COMM) {\r\n      if(in.equals(old2)) return;\r\n      result = new String[] { in };\r\n    } else if(kind == Data.ATTR) {\r\n      final String in2 = input2.getText();\r\n      if(in.length() == 0 || in.equals(old1) && in2.equals(old2)) return;\r\n      result = new String[] { in, in2 };\r\n    } else {\r\n      final String in2 = string(input3.getText());\r\n      if(in.length() == 0 || in.equals(old1) && in2.equals(old2)) return;\r\n      result = new String[] { in, in2 };\r\n    }\r\n  }","commit_id":"7a45d88ab253ce534b977e74443265e595901b84","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n   * Default Constructor.\r\n   * @param main reference to main frame\r\n   * @param p pre value\r\n   */\r\n  public DialogEdit(final GUI main, final int p) {\r\n    super(main, EDITTITLE);\r\n    pre = p;\r\n\r\n    // create checkboxes\r\n    final BaseXBack pp = new BaseXBack();\r\n    pp.setLayout(new BorderLayout());\r\n\r\n    final Context context = gui.context;\r\n    final Data data = context.data();\r\n    kind = data.kind(pre);\r\n\r\n    final String title = BaseX.info(EDITTEXT, EDITKIND[kind]);\r\n    final BaseXLabel label = new BaseXLabel(title, true, true);\r\n    pp.add(label, BorderLayout.NORTH);\r\n\r\n    if(kind == Data.ELEM || kind == Data.DOC) {\r\n      final byte[] txt = kind == Data.ELEM ? data.tag(pre) : data.text(pre);\r\n      input = new BaseXTextField(Token.string(txt), null, this);\r\n      old1 = input.getText();\r\n      pp.add(input, BorderLayout.CENTER);\r\n    } else if(kind == Data.TEXT || kind == Data.COMM) {\r\n      setResizable(true);\r\n      input3 = new BaseXText(gui, null, true, this);\r\n      input3.setText(data.text(pre));\r\n      input3.setPreferredSize(new Dimension(400, 200));\r\n      old1 = Token.string(input3.getText());\r\n      pp.add(input3, BorderLayout.CENTER);\r\n    } else {\r\n      byte[][] atts = new byte[2][];\r\n      if(kind == Data.ATTR) {\r\n        atts[0] = data.attName(pre);\r\n        atts[1] = data.attValue(pre);\r\n      } else {\r\n        atts[0] = data.text(pre);\r\n        atts[1] = Token.EMPTY;\r\n        if(Token.contains(atts[0], ' ')) atts = Token.split(atts[0], ' ');\r\n      }\r\n      final BaseXBack b = new BaseXBack();\r\n      b.setLayout(new TableLayout(2, 1, 0, 8));\r\n      input = new BaseXTextField(Token.string(atts[0]), null, this);\r\n      old1 = input.getText();\r\n      b.add(input);\r\n      input2 = new BaseXText(gui, null);\r\n      input2.setText(atts[1]);\r\n      old2 = Token.string(atts[1]);\r\n      b.add(input2);\r\n      pp.add(b, BorderLayout.CENTER);\r\n    }\r\n    if(input != null) input.selectAll();\r\n    else input3.selectAll();\r\n    set(pp, BorderLayout.CENTER);\r\n\r\n    // create buttons\r\n    buttons = BaseXLayout.okCancel(this);\r\n    set(buttons, BorderLayout.SOUTH);\r\n    finish();\r\n  }","id":61968,"modified_method":"/**\r\n   * Default Constructor.\r\n   * @param main reference to main frame\r\n   * @param p pre value\r\n   */\r\n  public DialogEdit(final GUI main, final int p) {\r\n    super(main, EDITTITLE);\r\n    pre = p;\r\n\r\n    // create checkboxes\r\n    final BaseXBack pp = new BaseXBack();\r\n    pp.setLayout(new BorderLayout());\r\n\r\n    final Context context = gui.context;\r\n    final Data data = context.data();\r\n    kind = data.kind(pre);\r\n\r\n    final String title = BaseX.info(EDITTEXT, EDITKIND[kind]);\r\n    final BaseXLabel label = new BaseXLabel(title, true, true);\r\n    pp.add(label, BorderLayout.NORTH);\r\n\r\n    if(kind == Data.ELEM || kind == Data.DOC) {\r\n      final byte[] txt = kind == Data.ELEM ? data.tag(pre) : data.text(pre);\r\n      input = new BaseXTextField(string(txt), null, this);\r\n      old1 = input.getText();\r\n      pp.add(input, BorderLayout.CENTER);\r\n    } else if(kind == Data.TEXT || kind == Data.COMM) {\r\n      setResizable(true);\r\n      input3 = new BaseXText(gui, null, true, this);\r\n      input3.setText(data.text(pre));\r\n      input3.setPreferredSize(new Dimension(400, 200));\r\n      old1 = string(input3.getText());\r\n      pp.add(input3, BorderLayout.CENTER);\r\n    } else {\r\n      if(kind == Data.ATTR) {\r\n        old1 = string(data.attName(pre));\r\n        old2 = string(data.attValue(pre));\r\n      } else {\r\n        old1 = string(data.text(pre));\r\n        old2 = \"\";\r\n        final int i = old1.indexOf(' ');\r\n        if(i != -1) {\r\n          old2 = old1.substring(i + 1);\r\n          old1 = old1.substring(0, i);\r\n        }\r\n      }\r\n      final BaseXBack b = new BaseXBack();\r\n      b.setLayout(new TableLayout(2, 1, 0, 8));\r\n      input = new BaseXTextField(old1, null, this);\r\n      b.add(input);\r\n      if(kind == Data.ATTR) {\r\n        input2 = new BaseXTextField(old2, null, this);\r\n        b.add(input2);\r\n      } else {\r\n        input3 = new BaseXText(gui, null, true, this);\r\n        input3.setText(token(old2));\r\n        input3.setPreferredSize(new Dimension(400, 200));\r\n        b.add(input3);\r\n      }\r\n      pp.add(b, BorderLayout.CENTER);\r\n    }\r\n    if(input != null) input.selectAll();\r\n    else input3.selectAll();\r\n    set(pp, BorderLayout.CENTER);\r\n\r\n    // create buttons\r\n    buttons = BaseXLayout.okCancel(this);\r\n    set(buttons, BorderLayout.SOUTH);\r\n    finish();\r\n  }","commit_id":"7a45d88ab253ce534b977e74443265e595901b84","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\r\n  public FTExpr indexEquivalent(final QueryContext ctx, final IndexContext ic)\r\n    throws QueryException {\r\n\r\n    return new FTPosIndex(expr[0].indexEquivalent(ctx, ic), this);\r\n  }","id":61969,"modified_method":"@Override\r\n  public FTExpr indexEquivalent(final QueryContext ctx, final IndexContext ic)\r\n      throws QueryException {\r\n\r\n    expr[0] = expr[0].indexEquivalent(ctx, ic);\r\n    return new FTPosIndex(this);\r\n  }","commit_id":"7a45d88ab253ce534b977e74443265e595901b84","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\r\n  public String toString() {\r\n    return expr[0].toString();\r\n  }","id":61970,"modified_method":"@Override\r\n  public String toString() {\r\n    return pos.toString();\r\n  }","commit_id":"7a45d88ab253ce534b977e74443265e595901b84","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\r\n  public FTNodeIter iter(final QueryContext ctx) {\r\n    final FTPos tmp = ctx.ftpos;\r\n\r\n    return new FTNodeIter() {\r\n      @Override\r\n      public FTNodeItem next() throws QueryException {\r\n        ctx.ftpos = pos;\r\n        pos.init(ctx.ftitem);\r\n        FTNodeItem it = expr[0].iter(ctx).next();\r\n        if (ctx.ftpos != null) {\r\n          if (it.ftn.size > 0) {\r\n            init(it);\r\n            while(!pos.filter(ctx)) {\r\n              it = expr[0].iter(ctx).next();\r\n              if(it.ftn.size == 0) {\r\n                ctx.ftpos = tmp;\r\n                return it;\r\n              }\r\n              init(it);\r\n            } \r\n          }    \r\n        }\r\n        // calculate weight\r\n        if(pos.weight != null) {\r\n          final double d = checkDbl(pos.weight, ctx);\r\n          if(d < 0 || d > 1000) Err.or(FTWEIGHT, d);\r\n          if (d != -1) it.score(it.score() * d);\r\n        }\r\n\r\n        ctx.ftpos = tmp;\r\n        return it;\r\n      }\r\n\r\n      /**\r\n       * Init FTPos for next seqEval with index use.\r\n       * @param it current FTNode \r\n       */\r\n      void init(final FTNodeItem it) {\r\n        pos.setPos(it.ftn.convertPos(), it.ftn.p.list[0]);\r\n        if (it.ftn.getToken() != null) {\r\n          pos.ft.init(it.data.text(it.ftn.getPre()));\r\n          pos.term = pos.ft.getTokenList();\r\n        }\r\n      }\r\n    };\r\n  }","id":61971,"modified_method":"@Override\r\n  public FTNodeIter iter(final QueryContext ctx) {\r\n    final FTPos tmp = ctx.ftpos;\r\n    final FTExpr e = pos.expr[0];\r\n\r\n    return new FTNodeIter() {\r\n      @Override\r\n      public FTNodeItem next() throws QueryException {\r\n        ctx.ftpos = pos;\r\n        pos.init(ctx.ftitem);\r\n        FTNodeItem it = e.iter(ctx).next();\r\n        if (ctx.ftpos != null) {\r\n          if (it.ftn.size > 0) {\r\n            init(it);\r\n            while(!pos.filter(ctx)) {\r\n              it = e.iter(ctx).next();\r\n              if(it.ftn.size == 0) {\r\n                ctx.ftpos = tmp;\r\n                return it;\r\n              }\r\n              init(it);\r\n            } \r\n          }    \r\n        }\r\n        // calculate weight\r\n        if(pos.weight != null) {\r\n          final double d = checkDbl(pos.weight, ctx);\r\n          if(d < 0 || d > 1000) Err.or(FTWEIGHT, d);\r\n          if (d != -1) it.score(it.score() * d);\r\n        }\r\n\r\n        ctx.ftpos = tmp;\r\n        return it;\r\n      }\r\n\r\n      /**\r\n       * Init FTPos for next seqEval with index use.\r\n       * @param it current FTNode \r\n       */\r\n      void init(final FTNodeItem it) {\r\n        pos.setPos(it.ftn.convertPos(), it.ftn.p.list[0]);\r\n        if (it.ftn.getToken() != null) {\r\n          pos.ft.init(it.data.text(it.ftn.getPre()));\r\n          pos.term = pos.ft.getTokenList();\r\n        }\r\n      }\r\n    };\r\n  }","commit_id":"7a45d88ab253ce534b977e74443265e595901b84","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n   * Constructor.\r\n   * @param e expression\r\n   * @param p fulltext selections\r\n   */\r\n  public FTPosIndex(final FTExpr e, final FTPos p) {\r\n    super(e);\r\n    pos = p;\r\n  }","id":61972,"modified_method":"/**\r\n   * Constructor.\r\n   * @param p fulltext selections\r\n   */\r\n  public FTPosIndex(final FTPos p) {\r\n    super();\r\n    pos = p;\r\n  }","commit_id":"7a45d88ab253ce534b977e74443265e595901b84","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\r\n  public void plan(final Serializer ser) throws IOException {\r\n    ser.openElement(this);\r\n    pos.plan(ser);\r\n    expr[0].plan(ser);\r\n    ser.closeElement();\r\n  }","id":61973,"modified_method":"@Override\r\n  public void plan(final Serializer ser) throws IOException {\r\n    ser.openElement(this);\r\n    pos.plan(ser);\r\n    ser.closeElement();\r\n  }","commit_id":"7a45d88ab253ce534b977e74443265e595901b84","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n   * Evaluates the iterators.\r\n   * @param iter iterators\r\n   * @param ftd ft position data\r\n   * @return resulting iterator\r\n   * @throws QueryException query exception\r\n   */\r\n  private NodIter eval(final Iter[] iter, final FTPosData ftd)\r\n      throws QueryException {\r\n\r\n    NodIter seq = new NodIter(true);\r\n\r\n    Item it;\r\n    while((it = iter[0].next()) != null) {\r\n      if(!it.node()) Err.nodes(this);\r\n      seq.add((Nod) it);\r\n    }\r\n    \r\n    for(int e = 1; e != expr.length; e++) {\r\n      final NodIter res = new NodIter(true);\r\n      final Iter ir = iter[e];\r\n      while((it = ir.next()) != null) {\r\n        if(!it.node()) Err.nodes(this);\r\n        final Nod node = (Nod) it;\r\n        for(int s = 0; s < seq.size(); s++) {\r\n          if(seq.list[s].is(node)) {\r\n            res.add(node);\r\n            break;\r\n          } \r\n        }\r\n      }\r\n      seq = res;\r\n    }\r\n    \r\n    // update visualization data\r\n    if(ftd != null) {\r\n      final IntList il = new IntList();\r\n      for(int i = 0; i < seq.size(); i++) {\r\n        it = seq.list[i];\r\n        // [CG] not sure if we could get incorrect results this way\r\n        if(it instanceof DBNode) {\r\n          NodeMore ci = ((DBNode) it).child();\r\n          while(ci.more()) {\r\n            Item child = ci.next();\r\n            if (child instanceof DBNode) {\r\n              final DBNode dbn = (DBNode) child;\r\n              if (dbn.type == Type.TXT) il.add(dbn.pre); \r\n            }\r\n          }\r\n        }\r\n      }\r\n      if(il.size == 0) ftd.init();\r\n      else ftd.keep(il.finish());\r\n    }\r\n\r\n    return seq;\r\n  }","id":61974,"modified_method":"/**\r\n   * Evaluates the iterators.\r\n   * @param iter iterators\r\n   * @return resulting iterator\r\n   * @throws QueryException query exception\r\n   */\r\n  private NodIter eval(final Iter[] iter) throws QueryException {\r\n    NodIter seq = new NodIter(true);\r\n\r\n    Item it;\r\n    while((it = iter[0].next()) != null) {\r\n      if(!it.node()) Err.nodes(this);\r\n      seq.add((Nod) it);\r\n    }\r\n    \r\n    for(int e = 1; e != expr.length; e++) {\r\n      final NodIter res = new NodIter(true);\r\n      final Iter ir = iter[e];\r\n      while((it = ir.next()) != null) {\r\n        if(!it.node()) Err.nodes(this);\r\n        final Nod node = (Nod) it;\r\n        for(int s = 0; s < seq.size(); s++) {\r\n          if(seq.list[s].is(node)) {\r\n            res.add(node);\r\n            break;\r\n          } \r\n        }\r\n      }\r\n      seq = res;\r\n    }\r\n    \r\n    /* Intersection of fulltext data for visualization.\r\n     * Problem: ftcontains context not known anymore at this stage\r\n     * Example: //a[b/text() ftcontains 'c' and d/text() ftcontains 'e']\r\n     * \r\n    if(ftd != null) {\r\n      final IntList il = new IntList();\r\n      for(int i = 0; i < seq.size(); i++) {\r\n        it = seq.list[i];\r\n        if(it instanceof DBNode) {\r\n          NodeMore ci = ((DBNode) it).child();\r\n          while(ci.more()) {\r\n            Item child = ci.next();\r\n            if (child instanceof DBNode) {\r\n              final DBNode dbn = (DBNode) child;\r\n              if (dbn.type == Type.TXT) il.add(dbn.pre); \r\n            }\r\n          }\r\n        }\r\n      }\r\n      if(il.size == 0) ftd.init();\r\n      else ftd.keep(il.finish());\r\n    }*/\r\n\r\n    return seq;\r\n  }","commit_id":"7a45d88ab253ce534b977e74443265e595901b84","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\r\n  public Iter iter(final QueryContext ctx) throws QueryException {\r\n    final Iter[] iter = new Iter[expr.length];\r\n    for(int e = 0; e != expr.length; e++) iter[e] = ctx.iter(expr[e]);\r\n    return eval(iter, ctx.ftdata);\r\n  }","id":61975,"modified_method":"@Override\r\n  public Iter iter(final QueryContext ctx) throws QueryException {\r\n    final Iter[] iter = new Iter[expr.length];\r\n    for(int e = 0; e != expr.length; e++) iter[e] = ctx.iter(expr[e]);\r\n    return eval(iter);\r\n  }","commit_id":"7a45d88ab253ce534b977e74443265e595901b84","url":"https://github.com/BaseXdb/basex"},{"original_method":"public WorkResult execute(AssembleSpec spec) {\n        boolean didWork = false;\n        CommandLineTool commandLineAssembler = commandLineTool.inWorkDirectory(spec.getObjectFileDir());\n        for (File sourceFile : spec.getSourceFiles()) {\n            CommandLineToolInvocation invocation = new CommandLineToolInvocation();\n            invocation.args = new AssemblerArgsTransformer(sourceFile).transform(spec);\n            WorkResult result = commandLineAssembler.execute(invocation);\n            didWork = didWork || result.getDidWork();\n        }\n        return new SimpleWorkResult(didWork);\n    }","id":61976,"modified_method":"public WorkResult execute(AssembleSpec spec) {\n        boolean didWork = false;\n        for (File sourceFile : spec.getSourceFiles()) {\n            CommandLineToolInvocation invocation = new CommandLineToolInvocation();\n            invocation.args = new AssemblerArgsTransformer(sourceFile).transform(spec);\n            invocation.workDirectory = spec.getObjectFileDir();\n            WorkResult result = commandLineTool.execute(invocation);\n            didWork = didWork || result.getDidWork();\n        }\n        return new SimpleWorkResult(didWork);\n    }","commit_id":"37d6e2495b3543fcf01d22504d893ab154984753","url":"https://github.com/gradle/gradle"},{"original_method":"public WorkResult execute(AssembleSpec spec) {\n        boolean didWork = false;\n        CommandLineTool commandLineAssembler = commandLineTool.inWorkDirectory(spec.getObjectFileDir());\n        for (File sourceFile : spec.getSourceFiles()) {\n            ArgsTransformer<AssembleSpec> arguments = new AssembleSpecToArgsList(sourceFile, spec.getObjectFileDir(), outputFileSuffix);\n            arguments = new PostTransformActionArgsTransformer<AssembleSpec>(arguments, argsAction);\n            CommandLineToolInvocation invocation = new CommandLineToolInvocation();\n            invocation.args = arguments.transform(spec);\n            WorkResult result = commandLineAssembler.execute(invocation);\n            didWork = didWork || result.getDidWork();\n        }\n        return new SimpleWorkResult(didWork);\n    }","id":61977,"modified_method":"public WorkResult execute(AssembleSpec spec) {\n        boolean didWork = false;\n        for (File sourceFile : spec.getSourceFiles()) {\n            ArgsTransformer<AssembleSpec> arguments = new AssembleSpecToArgsList(sourceFile, spec.getObjectFileDir(), outputFileSuffix);\n            arguments = new PostTransformActionArgsTransformer<AssembleSpec>(arguments, argsAction);\n            CommandLineToolInvocation invocation = new CommandLineToolInvocation();\n            invocation.args = arguments.transform(spec);\n            invocation.workDirectory = spec.getObjectFileDir();\n            WorkResult result = commandLineTool.execute(invocation);\n            didWork = didWork || result.getDidWork();\n        }\n        return new SimpleWorkResult(didWork);\n    }","commit_id":"37d6e2495b3543fcf01d22504d893ab154984753","url":"https://github.com/gradle/gradle"},{"original_method":"public WorkResult execute(CommandLineToolInvocation invocation) {\n        ExecAction compiler = execActionFactory.newExecAction();\n        compiler.executable(executable);\n        if (workDir != null) {\n            compiler.workingDir(workDir);\n        }\n\n        compiler.args(invocation.args);\n\n        if (!path.isEmpty()) {\n            String pathVar = OperatingSystem.current().getPathVar();\n            String compilerPath = Joiner.on(File.pathSeparator).join(path);\n            compilerPath = compilerPath + File.pathSeparator + System.getenv(pathVar);\n            compiler.environment(pathVar, compilerPath);\n        }\n\n        compiler.environment(environment);\n\n        try {\n            compiler.execute();\n        } catch (ExecException e) {\n            throw new GradleException(String.format(\"%s failed; see the error output for details.\", action), e);\n        }\n        return new SimpleWorkResult(true);\n    }","id":61978,"modified_method":"public WorkResult execute(CommandLineToolInvocation invocation) {\n        ExecAction compiler = execActionFactory.newExecAction();\n        compiler.executable(executable);\n        if (invocation.workDirectory != null) {\n            GFileUtils.mkdirs(invocation.workDirectory);\n            compiler.workingDir(invocation.workDirectory);\n        }\n\n        compiler.args(invocation.args);\n\n        if (!path.isEmpty()) {\n            String pathVar = OperatingSystem.current().getPathVar();\n            String compilerPath = Joiner.on(File.pathSeparator).join(path);\n            compilerPath = compilerPath + File.pathSeparator + System.getenv(pathVar);\n            compiler.environment(pathVar, compilerPath);\n        }\n\n        compiler.environment(environment);\n\n        try {\n            compiler.execute();\n        } catch (ExecException e) {\n            throw new GradleException(String.format(\"%s failed; see the error output for details.\", action), e);\n        }\n        return new SimpleWorkResult(true);\n    }","commit_id":"37d6e2495b3543fcf01d22504d893ab154984753","url":"https://github.com/gradle/gradle"},{"original_method":"public WorkResult execute(T spec) {\n        boolean didWork = false;\n        boolean windowsPathLimitation = OperatingSystem.current().isWindows();\n\n        String objectFileExtension = OperatingSystem.current().isWindows() ? \".obj\" : \".o\";\n        for (File sourceFile : spec.getSourceFiles()) {\n            String objectFileName = FilenameUtils.removeExtension(sourceFile.getName()) + objectFileExtension;\n            CommandLineToolInvocation invocation = new CommandLineToolInvocation();\n            SingleSourceCompileArgTransformer<T> argTransformer = new SingleSourceCompileArgTransformer<T>(sourceFile,\n                    objectFileName,\n                    new ShortCircuitArgsTransformer(argsTransfomer),\n                    windowsPathLimitation,\n                    false);\n            invocation.args = argTransformer.transform(spec);\n            WorkResult result = commandLineTool.inWorkDirectory(spec.getObjectFileDir())\n                    .execute(invocation);\n            didWork = didWork || result.getDidWork();\n        }\n        return new SimpleWorkResult(didWork);\n    }","id":61979,"modified_method":"public WorkResult execute(T spec) {\n        boolean didWork = false;\n        boolean windowsPathLimitation = OperatingSystem.current().isWindows();\n\n        String objectFileExtension = OperatingSystem.current().isWindows() ? \".obj\" : \".o\";\n        for (File sourceFile : spec.getSourceFiles()) {\n            String objectFileName = FilenameUtils.removeExtension(sourceFile.getName()) + objectFileExtension;\n            CommandLineToolInvocation invocation = new CommandLineToolInvocation();\n            SingleSourceCompileArgTransformer<T> argTransformer = new SingleSourceCompileArgTransformer<T>(sourceFile,\n                    objectFileName,\n                    new ShortCircuitArgsTransformer(argsTransfomer),\n                    windowsPathLimitation,\n                    false);\n            invocation.args = argTransformer.transform(spec);\n            invocation.workDirectory = spec.getObjectFileDir();\n            WorkResult result = commandLineTool.execute(invocation);\n            didWork = didWork || result.getDidWork();\n        }\n        return new SimpleWorkResult(didWork);\n    }","commit_id":"37d6e2495b3543fcf01d22504d893ab154984753","url":"https://github.com/gradle/gradle"},{"original_method":"public WorkResult execute(T spec) {\n        boolean didWork = false;\n        for (File sourceFile : spec.getSourceFiles()) {\n            String objectFileName = FilenameUtils.removeExtension(sourceFile.getName()) + \".obj\";\n            SingleSourceCompileArgTransformer<T> argTransformer = new SingleSourceCompileArgTransformer<T>(sourceFile,\n                    objectFileName,\n                    new ShortCircuitArgsTransformer<T>(argsTransFormer),\n                    true,\n                    true);\n            CommandLineToolInvocation invocation = new CommandLineToolInvocation();\n            invocation.args = argTransformer.transform(specTransformer.transform(spec));\n            WorkResult result = commandLineTool.inWorkDirectory(spec.getObjectFileDir()).execute(invocation);\n            didWork = didWork || result.getDidWork();\n        }\n        return new SimpleWorkResult(didWork);\n    }","id":61980,"modified_method":"public WorkResult execute(T spec) {\n        boolean didWork = false;\n        for (File sourceFile : spec.getSourceFiles()) {\n            String objectFileName = FilenameUtils.removeExtension(sourceFile.getName()) + \".obj\";\n            SingleSourceCompileArgTransformer<T> argTransformer = new SingleSourceCompileArgTransformer<T>(sourceFile,\n                    objectFileName,\n                    new ShortCircuitArgsTransformer<T>(argsTransFormer),\n                    true,\n                    true);\n            CommandLineToolInvocation invocation = new CommandLineToolInvocation();\n            invocation.args = argTransformer.transform(specTransformer.transform(spec));\n            invocation.workDirectory = spec.getObjectFileDir();\n            WorkResult result = commandLineTool.execute(invocation);\n            didWork = didWork || result.getDidWork();\n        }\n        return new SimpleWorkResult(didWork);\n    }","commit_id":"37d6e2495b3543fcf01d22504d893ab154984753","url":"https://github.com/gradle/gradle"},{"original_method":"public WorkResult execute(WindowsResourceCompileSpec spec) {\n        boolean didWork = false;\n        boolean windowsPathLimitation = OperatingSystem.current().isWindows();\n        spec = specTransformer.transform(spec);\n        CommandLineTool commandLineAssembler = commandLineTool.inWorkDirectory(spec.getObjectFileDir());\n        for (File sourceFile : spec.getSourceFiles()) {\n            RcCompilerArgsTransformer argsTransformer = new RcCompilerArgsTransformer(sourceFile, windowsPathLimitation);\n            CommandLineToolInvocation invocation = new CommandLineToolInvocation();\n            invocation.args = argsTransformer.transform(spec);\n            WorkResult result = commandLineAssembler.execute(invocation);\n            didWork |= result.getDidWork();\n        }\n        return new SimpleWorkResult(didWork);\n    }","id":61981,"modified_method":"public WorkResult execute(WindowsResourceCompileSpec spec) {\n        boolean didWork = false;\n        boolean windowsPathLimitation = OperatingSystem.current().isWindows();\n        spec = specTransformer.transform(spec);\n        for (File sourceFile : spec.getSourceFiles()) {\n            RcCompilerArgsTransformer argsTransformer = new RcCompilerArgsTransformer(sourceFile, windowsPathLimitation);\n            CommandLineToolInvocation invocation = new CommandLineToolInvocation();\n            invocation.args = argsTransformer.transform(spec);\n            invocation.workDirectory = spec.getObjectFileDir();\n            WorkResult result = commandLineTool.execute(invocation);\n            didWork |= result.getDidWork();\n        }\n        return new SimpleWorkResult(didWork);\n    }","commit_id":"37d6e2495b3543fcf01d22504d893ab154984753","url":"https://github.com/gradle/gradle"},{"original_method":"/**\n     * Send a Gremlin Script, as JSON payload and additional parameters\n     */\n    @Test\n    @Title(\"Send a Gremlin Script with variables in a JSON Map\")\n    @Documented\n    @Graph( value = { \"I know you\" } )\n    public void testGremlinPostWithVariablesAsJson() throws UnsupportedEncodingException\n    {\n        final String script = \"g.v(me).out\";\n        final String params = \"{ \\\"me\\\" : \"+data.get().get(\"I\").getId()+\" }\";\n        final String payload = String.format(\"{ \\\"script\\\" : \\\"%s\\\", \\\"params\\\" : %s }\", script, params);\n        String response = gen.get()\n        .description( formatGroovy( script ) )\n        .expectedStatus( Status.OK.getStatusCode() )\n                .payload( JSONPrettifier.parse( payload ) )\n        .payloadType( MediaType.APPLICATION_JSON_TYPE )\n        .post( ENDPOINT )\n        .entity();\n        assertTrue(response.contains( \"you\" ));\n    }","id":61982,"modified_method":"/**\n     * Send a Gremlin Script, as JSON payload and additional parameters\n     */\n    @Test\n    @Title(\"Send a Gremlin Script with variables in a JSON Map\")\n    @Documented\n    @Graph( value = { \"I know you\" } )\n    public void testGremlinPostWithVariablesAsJson() throws UnsupportedEncodingException\n    {\n        final String script = \"g.v(me).out\";\n        final String params = \"{ \\\"me\\\" : \"+data.get().get(\"I\").getId()+\" }\";\n        final String payload = String.format(\"{ \\\"script\\\" : \\\"%s\\\", \\\"params\\\" : %s }\", script, params);\n        gen().description( formatGroovy( script ) );\n        String response = gen()\n        .expectedStatus( Status.OK.getStatusCode() )\n                .payload( JSONPrettifier.parse( payload ) )\n        .payloadType( MediaType.APPLICATION_JSON_TYPE )\n        .post( ENDPOINT )\n        .entity();\n        assertTrue(response.contains( \"you\" ));\n    }","commit_id":"8f38d8e16bc7320f7db4a0c16ee8d95f8016afa1","url":"https://github.com/neo4j/neo4j"},{"original_method":"/**\n     * Scripts can be sent as URL-encoded\n     */\n    @Test\n    @Title(\"Send a Gremlin Script - URL encoded\")\n    @Documented\n    @Graph( value = { \"I know you\" } )\n    public void testGremlinPostURLEncoded() throws UnsupportedEncodingException\n    {\n        String script = \"i = g.v(\"+data.get().get( \"I\" ).getId() +\");i.out\";\n        String response = gen.get()\n        .expectedStatus( Status.OK.getStatusCode() )\n        .description( formatGroovy( script ) )\n        .payload( \"script=\" + URLEncoder.encode( script, \"UTF-8\") )\n        .payloadType( MediaType.APPLICATION_FORM_URLENCODED_TYPE )\n        .post( ENDPOINT )\n        .entity();\n        assertTrue(response.contains( \"you\" ));\n    }","id":61983,"modified_method":"/**\n     * Scripts can be sent as URL-encoded\n     */\n    @Test\n    @Title(\"Send a Gremlin Script - URL encoded\")\n    @Documented\n    @Graph( value = { \"I know you\" } )\n    public void testGremlinPostURLEncoded() throws UnsupportedEncodingException\n    {\n        String script = \"i = g.v(\"+data.get().get( \"I\" ).getId() +\");i.out\";\n        gen()\n        .expectedStatus( Status.OK.getStatusCode() )\n        .description( formatGroovy( script ) );\n        String response = gen().payload( \"script=\" + URLEncoder.encode( script, \"UTF-8\") )\n        .payloadType( MediaType.APPLICATION_FORM_URLENCODED_TYPE )\n        .post( ENDPOINT )\n        .entity();\n        assertTrue(response.contains( \"you\" ));\n    }","commit_id":"8f38d8e16bc7320f7db4a0c16ee8d95f8016afa1","url":"https://github.com/neo4j/neo4j"},{"original_method":"/**\n     * To send a Script JSON encoded, set the payload Content-Type Header.\n     * In this example, find all the things that my friends like,\n     * and return a table listing my friends by their name,\n     * and the names of the things they like in a table with two columns,\n     * ignoring the third named step variable +I+.\n     * Remember that everything in Gremlin is an iterator - in order\n     * to populate the result table +t+, iterate through the pipes with\n     * +>> -1+.\n     */\n    @Test\n    @Title(\"Send a Gremlin Script - JSON encoded with table results\")\n    @Documented\n    @Graph( value = { \"I know Joe\", \"I like cats\", \"Joe like cats\", \"Joe like dogs\" } )\n    public void testGremlinPostJSONWithTableResult()\n    {\n        String script = \"i = g.v(\"\n            + data.get()\n            .get( \"I\" )\n            .getId()\n            + \");\"\n            + \"t= new Table();\"\n            + \"i.as('I').out('know').as('friend').out('like').as('likes').table(t,['friend','likes']){it.name}{it.name} >> -1;t;\";\n        String payload = \"{\\\"script\\\":\\\"\"+script +\"\\\"}\";\n        String response = gen.get()\n        .expectedStatus( Status.OK.getStatusCode() )\n                .payload( JSONPrettifier.parse( payload ) )\n        .payloadType( MediaType.APPLICATION_JSON_TYPE )\n        .description( formatGroovy( script ) )\n        .post( ENDPOINT )\n        \n        .entity();\n        assertTrue(response.contains( \"cats\" ));\n    }","id":61984,"modified_method":"/**\n     * To send a Script JSON encoded, set the payload Content-Type Header.\n     * In this example, find all the things that my friends like,\n     * and return a table listing my friends by their name,\n     * and the names of the things they like in a table with two columns,\n     * ignoring the third named step variable +I+.\n     * Remember that everything in Gremlin is an iterator - in order\n     * to populate the result table +t+, iterate through the pipes with\n     * +>> -1+.\n     */\n    @Test\n    @Title(\"Send a Gremlin Script - JSON encoded with table results\")\n    @Documented\n    @Graph( value = { \"I know Joe\", \"I like cats\", \"Joe like cats\", \"Joe like dogs\" } )\n    public void testGremlinPostJSONWithTableResult()\n    {\n        String script = \"i = g.v(\"\n            + data.get()\n            .get( \"I\" )\n            .getId()\n            + \");\"\n            + \"t= new Table();\"\n            + \"i.as('I').out('know').as('friend').out('like').as('likes').table(t,['friend','likes']){it.name}{it.name} >> -1;t;\";\n        String payload = \"{\\\"script\\\":\\\"\"+script +\"\\\"}\";\n        String response = gen.get()\n        .expectedStatus( Status.OK.getStatusCode() )\n                .payload( JSONPrettifier.parse( payload ) )\n        .payloadType( MediaType.APPLICATION_JSON_TYPE )\n        .post( ENDPOINT )\n        \n        .entity();\n        description( formatGroovy( script ) );\n        assertTrue(response.contains( \"cats\" ));\n    }","commit_id":"8f38d8e16bc7320f7db4a0c16ee8d95f8016afa1","url":"https://github.com/neo4j/neo4j"},{"original_method":"/**\n     * Imagine a user being part of different groups.\n     * A group can have different roles, and a user can\n     * be part of different groups. He also can\n     * have different roles in different groups apart\n     * from the membership.\n     * The association of a User, a Group and a Role can\n     * be referred to as a _HyperEdge_. However, it can be easily modeled\n     * in a property graph as a node that captures this n-ary\n     * relationship, as depicted below in the +U1G2R1+ node.\n     * \n     * To find out in what roles a user is for a particular\n     * groups (here 'Group2'), \n     * the following script can traverse this HyperEdge node\n     * and provide answers.\n     */\n    @Test\n    @Title(\"HyperEdges - find user roles in groups\")\n    @Documented\n    @Graph( value = {  \n            \"User1 in Group1\", \n            \"User1 in Group2\",\n            \"Group2 canHave Role2\", \n            \"Group2 canHave Role1\", \n            \"Group1 canHave Role1\", \n            \"Group1 canHave Role2\", \n            \"Group1 isA Group\", \n            \"Group2 isA Group\", \n            \"Role1 isA Role\", \n            \"Role2 isA Role\",\n            \"User1 hasRoleInGroup U1G2R1\",\n            \"U1G2R1 hasRole Role1\",\n            \"U1G2R1 hasGroup Group2\",\n            \"User1 hasRoleInGroup U1G1R2\",\n            \"U1G1R2 hasRole Role2\",\n            \"U1G1R2 hasGroup Group1\"} )\n    public void findGroups()\n    {\n        String script = \"\" +\n                \"g.v(\" +data.get().get( \"User1\" ).getId() + \")\" +\n                \t\t\".out('hasRoleInGroup').as('hyperedge').\" +\n                \t\t\"out('hasGroup').filter{it.name=='Group2'}.\" +\n                \t\t\"back('hyperedge').out('hasRole').name\";\n        String payload = \"{\\\"script\\\":\\\"\"+script+\"\\\"}\";\n        data.get();\n        String response = gen.get()\n        .expectedStatus( Status.OK.getStatusCode() )\n                .payload( JSONPrettifier.parse( payload ) )\n        .payloadType( MediaType.APPLICATION_JSON_TYPE )\n        .description( formatGroovy(script) )\n        .post( ENDPOINT )\n        .entity();\n        assertTrue(response.contains( \"Role1\" ));\n        assertFalse(response.contains( \"Role2\" ));\n        \n    }","id":61985,"modified_method":"/**\n     * Imagine a user being part of different groups.\n     * A group can have different roles, and a user can\n     * be part of different groups. He also can\n     * have different roles in different groups apart\n     * from the membership.\n     * The association of a User, a Group and a Role can\n     * be referred to as a _HyperEdge_. However, it can be easily modeled\n     * in a property graph as a node that captures this n-ary\n     * relationship, as depicted below in the +U1G2R1+ node.\n     * \n     * To find out in what roles a user is for a particular\n     * groups (here 'Group2'), \n     * the following script can traverse this HyperEdge node\n     * and provide answers.\n     */\n    @Test\n    @Title(\"HyperEdges - find user roles in groups\")\n    @Documented\n    @Graph( value = {  \n            \"User1 in Group1\", \n            \"User1 in Group2\",\n            \"Group2 canHave Role2\", \n            \"Group2 canHave Role1\", \n            \"Group1 canHave Role1\", \n            \"Group1 canHave Role2\", \n            \"Group1 isA Group\", \n            \"Group2 isA Group\", \n            \"Role1 isA Role\", \n            \"Role2 isA Role\",\n            \"User1 hasRoleInGroup U1G2R1\",\n            \"U1G2R1 hasRole Role1\",\n            \"U1G2R1 hasGroup Group2\",\n            \"User1 hasRoleInGroup U1G1R2\",\n            \"U1G1R2 hasRole Role2\",\n            \"U1G1R2 hasGroup Group1\"} )\n    public void findGroups()\n    {\n        String script = \"\" +\n                \"g.v(\" +data.get().get( \"User1\" ).getId() + \")\" +\n                \t\t\".out('hasRoleInGroup').as('hyperedge').\" +\n                \t\t\"out('hasGroup').filter{it.name=='Group2'}.\" +\n                \t\t\"back('hyperedge').out('hasRole').name\";\n        String payload = \"{\\\"script\\\":\\\"\"+script+\"\\\"}\";\n        data.get();\n        String response = gen.get()\n        .expectedStatus( Status.OK.getStatusCode() )\n                .payload( JSONPrettifier.parse( payload ) )\n        .payloadType( MediaType.APPLICATION_JSON_TYPE )\n        .post( ENDPOINT )\n        .entity();\n        description( formatGroovy(script) );\n        assertTrue(response.contains( \"Role1\" ));\n        assertFalse(response.contains( \"Role2\" ));\n        \n    }","commit_id":"8f38d8e16bc7320f7db4a0c16ee8d95f8016afa1","url":"https://github.com/neo4j/neo4j"},{"original_method":"/**\n     * Send a Gremlin Script, URL-encoded with UTF-8 encoding,\n     * with additional parameters.\n     */\n    @Title(\"Send a Gremlin Script with variables in a JSON Map - URL encoded\")\n    @Documented\n    @Graph( value = { \"I know you\" } )\n    public void testGremlinPostWithVariablesURLEncoded() throws UnsupportedEncodingException\n    {\n        final String script = \"g.v(me).out;\";\n        final String params = \"{ \\\"me\\\" : \"+data.get().get(\"I\").getId()+\" }\";\n        String response = gen.get()\n        .description( formatGroovy( script ) )\n        .expectedStatus(Status.OK.getStatusCode())\n        .payload( \"script=\" + URLEncoder.encode(script, \"UTF-8\")+\n                \"&params=\" + URLEncoder.encode(params, \"UTF-8\")\n        )\n\n        .payloadType( MediaType.APPLICATION_FORM_URLENCODED_TYPE )\n        .post( ENDPOINT )\n        .entity();\n        assertTrue(response.contains( \"you\" ));\n    }","id":61986,"modified_method":"/**\n     * Send a Gremlin Script, URL-encoded with UTF-8 encoding,\n     * with additional parameters.\n     */\n    @Title(\"Send a Gremlin Script with variables in a JSON Map - URL encoded\")\n    @Documented\n    @Graph( value = { \"I know you\" } )\n    public void testGremlinPostWithVariablesURLEncoded() throws UnsupportedEncodingException\n    {\n        final String script = \"g.v(me).out;\";\n        final String params = \"{ \\\"me\\\" : \"+data.get().get(\"I\").getId()+\" }\";\n        gen().description( formatGroovy( script ) );\n        String response = gen()\n        .expectedStatus(Status.OK.getStatusCode())\n        .payload( \"script=\" + URLEncoder.encode(script, \"UTF-8\")+\n                \"&params=\" + URLEncoder.encode(params, \"UTF-8\")\n        )\n\n        .payloadType( MediaType.APPLICATION_FORM_URLENCODED_TYPE )\n        .post( ENDPOINT )\n        .entity();\n        assertTrue(response.contains( \"you\" ));\n    }","commit_id":"8f38d8e16bc7320f7db4a0c16ee8d95f8016afa1","url":"https://github.com/neo4j/neo4j"},{"original_method":"/**\n     * Send an arbitrary Groovy script - Lucene sorting.\n     * \n     * This example demonstrates that you via the Groovy runtime\n     * embedded with the server have full access to all of the servers\n     * Java APIs.\n     * The below example \n     * creates Nodes in the database both via the Blueprints and the Neo4j API\n     * indexes the nodes via the native Neo4j Indexing API\n     * constructs a custom Lucene sorting and searching\n     * returns a Neo4j IndexHits result iterator.\n     */\n    @Test\n    @Documented\n    @Graph( value = { \"I know Joe\", \"I like cats\", \"Joe like cats\", \"Joe like dogs\" } )\n    public void sendArbtiraryGroovy()\n    {\n        String script = \"\" +\n                \"import org.neo4j.graphdb.index.*;\" +\n                \"import org.neo4j.index.lucene.*;\" +\n                \"import org.apache.lucene.search.*;\" +\n                \"neo4j = g.getRawGraph();\" +\n                \"tx = neo4j.beginTx();\" +\n                \"meVertex = g.addVertex([name:'me']);\" +\n                \"meNode = meVertex.getRawVertex();\" +\n                \"youNode = neo4j.createNode();\" +\n                \"youNode.setProperty('name','you');\" +\n                \"idxManager = neo4j.index();\" +\n                \"personIndex = idxManager.forNodes('persons');\" +\n                \"personIndex.add(meNode,'name',meVertex.name);\" +\n                \"personIndex.add(youNode,'name',youNode.getProperty('name'));\" +\n                \"tx.success();\" +\n                \"tx.finish();\" +\n                \"query = new QueryContext( 'name:*' ).sort( new Sort(new SortField( 'name',SortField.STRING, true ) ) );\" +\n                \"results = personIndex.query( query );\";\n        String payload = \"{\\\"script\\\":\\\"\"+script+\"\\\"}\";\n        String response = gen.get()\n        .expectedStatus( Status.OK.getStatusCode() )\n                .payload( JSONPrettifier.parse( payload ) )\n        .payloadType( MediaType.APPLICATION_JSON_TYPE )\n        .description( formatGroovy(script) )\n        .post( ENDPOINT )\n        .entity();\n        assertTrue(response.contains( \"me\" ));\n        \n    }","id":61987,"modified_method":"/**\n     * Send an arbitrary Groovy script - Lucene sorting.\n     * \n     * This example demonstrates that you via the Groovy runtime\n     * embedded with the server have full access to all of the servers\n     * Java APIs.\n     * The below example \n     * creates Nodes in the database both via the Blueprints and the Neo4j API\n     * indexes the nodes via the native Neo4j Indexing API\n     * constructs a custom Lucene sorting and searching\n     * returns a Neo4j IndexHits result iterator.\n     */\n    @Test\n    @Documented\n    @Graph( value = { \"I know Joe\", \"I like cats\", \"Joe like cats\", \"Joe like dogs\" } )\n    public void sendArbtiraryGroovy()\n    {\n        String script = \"\" +\n                \"import org.neo4j.graphdb.index.*;\" +\n                \"import org.neo4j.index.lucene.*;\" +\n                \"import org.apache.lucene.search.*;\" +\n                \"neo4j = g.getRawGraph();\" +\n                \"tx = neo4j.beginTx();\" +\n                \"meVertex = g.addVertex([name:'me']);\" +\n                \"meNode = meVertex.getRawVertex();\" +\n                \"youNode = neo4j.createNode();\" +\n                \"youNode.setProperty('name','you');\" +\n                \"idxManager = neo4j.index();\" +\n                \"personIndex = idxManager.forNodes('persons');\" +\n                \"personIndex.add(meNode,'name',meVertex.name);\" +\n                \"personIndex.add(youNode,'name',youNode.getProperty('name'));\" +\n                \"tx.success();\" +\n                \"tx.finish();\" +\n                \"query = new QueryContext( 'name:*' ).sort( new Sort(new SortField( 'name',SortField.STRING, true ) ) );\" +\n                \"results = personIndex.query( query );\";\n        String payload = \"{\\\"script\\\":\\\"\"+script+\"\\\"}\";\n        String response = gen.get()\n        .expectedStatus( Status.OK.getStatusCode() )\n                .payload( JSONPrettifier.parse( payload ) )\n        .payloadType( MediaType.APPLICATION_JSON_TYPE )\n        .post( ENDPOINT )\n        .entity();\n        description( formatGroovy(script) );\n        assertTrue(response.contains( \"me\" ));\n        \n    }","commit_id":"8f38d8e16bc7320f7db4a0c16ee8d95f8016afa1","url":"https://github.com/neo4j/neo4j"},{"original_method":"/**\n     * To set variables in the bindings for the Gremlin Script\n     * Engine on the server, you can include a +params+ parameter\n     * with a String representing a JSON map of variables to set\n     * to initial values. These can then be accessed as normal\n     * variables within the script.\n     */\n    @Test\n    @Documented\n    @Title(\"Set script variables\")\n    public void setVariables() throws UnsupportedEncodingException\n    {\n        String payload = \"{\\\"script\\\":\\\"meaning_of_life\\\",\"\n            + \"\\\"params\\\":{\\\"meaning_of_life\\\" : 42.0}}\";\n        String response = gen.get()\n        .expectedStatus( Status.OK.getStatusCode() )\n                .payload( JSONPrettifier.parse( payload ) )\n        .payloadType( MediaType.APPLICATION_JSON_TYPE )\n        .post( ENDPOINT )\n        .entity();\n        assertTrue(response.contains( \"42.0\" ));\n    }","id":61988,"modified_method":"/**\n     * To set variables in the bindings for the Gremlin Script\n     * Engine on the server, you can include a +params+ parameter\n     * with a String representing a JSON map of variables to set\n     * to initial values. These can then be accessed as normal\n     * variables within the script.\n     */\n    @Test\n    @Documented\n    @Title(\"Set script variables\")\n    public void setVariables() throws UnsupportedEncodingException\n    {\n        String payload = \"{\\\"script\\\":\\\"meaning_of_life\\\",\"\n            + \"\\\"params\\\":{\\\"meaning_of_life\\\" : 42.0}}\";\n        String response = gen()\n        .expectedStatus( Status.OK.getStatusCode() )\n                .payload( JSONPrettifier.parse( payload ) )\n        .payloadType( MediaType.APPLICATION_JSON_TYPE )\n        .post( ENDPOINT )\n        .entity();\n        assertTrue(response.contains( \"42.0\" ));\n    }","commit_id":"8f38d8e16bc7320f7db4a0c16ee8d95f8016afa1","url":"https://github.com/neo4j/neo4j"},{"original_method":"/**\n     * Exporting a graph can be done by simple emitting the appropriate\n     * String.\n     */\n    @Test\n    @Documented\n    @Title( \"Emit a sample graph\" )\n    @Graph( value = { \"I know you\", \"I know him\" } )\n    public void emitGraph() throws UnsupportedEncodingException\n    {\n        data.get();\n        String script = \"writer = new GraphMLWriter(g);\" +\n        \t\t\"out = new java.io.ByteArrayOutputStream();\" +\n        \t\t\"writer.outputGraph(out);\" +\n        \t\t\"result = out.toString();\";\n        String payload = \"{\\\"script\\\":\\\"\" +\n        script  +\"\\\"}\";\n        String response = gen.get()\n        .description( formatGroovy( script ) )\n        .expectedStatus( Status.OK.getStatusCode() )\n                .payload( JSONPrettifier.parse( payload ) )\n        .payloadType( MediaType.APPLICATION_JSON_TYPE )\n        .post( ENDPOINT )\n        .entity();\n        System.out.println(response);\n        assertTrue(response.contains( \"graphml\" ));\n        assertTrue(response.contains( \"you\" ));\n    }","id":61989,"modified_method":"/**\n     * Exporting a graph can be done by simple emitting the appropriate\n     * String.\n     */\n    @Test\n    @Documented\n    @Title( \"Emit a sample graph\" )\n    @Graph( value = { \"I know you\", \"I know him\" } )\n    public void emitGraph() throws UnsupportedEncodingException\n    {\n        data.get();\n        String script = \"writer = new GraphMLWriter(g);\" +\n        \t\t\"out = new java.io.ByteArrayOutputStream();\" +\n        \t\t\"writer.outputGraph(out);\" +\n        \t\t\"result = out.toString();\";\n        String payload = \"{\\\"script\\\":\\\"\" +\n        script  +\"\\\"}\";\n        description( formatGroovy( script ) );\n        String response = gen.get()\n        .expectedStatus( Status.OK.getStatusCode() )\n                .payload( JSONPrettifier.parse( payload ) )\n        .payloadType( MediaType.APPLICATION_JSON_TYPE )\n        .post( ENDPOINT )\n        .entity();\n        System.out.println(response);\n        assertTrue(response.contains( \"graphml\" ));\n        assertTrue(response.contains( \"you\" ));\n    }","commit_id":"8f38d8e16bc7320f7db4a0c16ee8d95f8016afa1","url":"https://github.com/neo4j/neo4j"},{"original_method":"/**\n     * The following script returns a sorted list\n     * of all nodes connected via outgoing relationships\n     * to node 1, sorted by their `name`-property.\n     */\n    @Test\n    @Documented\n    @Title(\"Sort a result using raw Groovy operations\")\n    @Graph( value = { \"I know you\", \"I know him\" } )\n    public void testSortResults() throws UnsupportedEncodingException\n    {\n        String script = \"g.v(\" + data.get()\n        .get( \"I\" )\n        .getId() + \").out.sort{it.name}.toList()\";\n        String payload = \"{\\\"script\\\":\\\"\"+script +\"\\\"}\";\n        String response = gen.get()\n        .description( formatGroovy( script ) )\n        .expectedStatus( Status.OK.getStatusCode() )\n        .payload( JSONPrettifier.parse( payload ) )\n        .payloadType( MediaType.APPLICATION_JSON_TYPE )\n        .post( ENDPOINT )\n        .entity();\n        assertTrue(response.contains( \"you\" ));\n        assertTrue(response.contains( \"him\" ));\n        assertTrue(response.indexOf( \"you\" ) > response.indexOf( \"him\" ));\n    }","id":61990,"modified_method":"/**\n     * The following script returns a sorted list\n     * of all nodes connected via outgoing relationships\n     * to node 1, sorted by their `name`-property.\n     */\n    @Test\n    @Documented\n    @Title(\"Sort a result using raw Groovy operations\")\n    @Graph( value = { \"I know you\", \"I know him\" } )\n    public void testSortResults() throws UnsupportedEncodingException\n    {\n        String script = \"g.v(\" + data.get()\n        .get( \"I\" )\n        .getId() + \").out.sort{it.name}.toList()\";\n        String payload = \"{\\\"script\\\":\\\"\"+script +\"\\\"}\";\n        description( formatGroovy( script ) );\n        String response = gen()\n        .expectedStatus( Status.OK.getStatusCode() )\n        .payload( JSONPrettifier.parse( payload ) )\n        .payloadType( MediaType.APPLICATION_JSON_TYPE )\n        .post( ENDPOINT )\n        .entity();\n        assertTrue(response.contains( \"you\" ));\n        assertTrue(response.contains( \"him\" ));\n        assertTrue(response.indexOf( \"you\" ) > response.indexOf( \"him\" ));\n    }","commit_id":"8f38d8e16bc7320f7db4a0c16ee8d95f8016afa1","url":"https://github.com/neo4j/neo4j"},{"original_method":"/**\n     * Import a graph form a http://graphml.graphdrawing.org/[GraphML] file\n     * can be achieved through the Gremlin GraphMLReader.\n     * The following script imports a small GraphML file from an URL into Neo4j, resulting\n     * in the depicted graph. It then\n     *  returns a list of all nodes in the graph.\n     */\n    @Test\n    @Documented\n    @Title( \"Load a sample graph\" )\n    public void testGremlinImportGraph() throws UnsupportedEncodingException\n    {\n        String script = \"g.loadGraphML('https://raw.github.com/neo4j/gremlin-plugin/master/src/data/graphml1.xml');\" +\n                \"g.V;\";\n        String payload = \"{\\\"script\\\":\\\"\" +\n        script  +\"\\\"}\";\n        String response = gen.get()\n        .description( formatGroovy( script ) )\n        .expectedStatus( Status.OK.getStatusCode() )\n                .payload( JSONPrettifier.parse( payload ) )\n        .payloadType( MediaType.APPLICATION_JSON_TYPE )\n        .post( ENDPOINT )\n        .entity();\n        assertTrue(response.contains( \"you\" ));\n        assertTrue(response.contains( \"him\" ));\n    }","id":61991,"modified_method":"/**\n     * Import a graph form a http://graphml.graphdrawing.org/[GraphML] file\n     * can be achieved through the Gremlin GraphMLReader.\n     * The following script imports a small GraphML file from an URL into Neo4j, resulting\n     * in the depicted graph. It then\n     *  returns a list of all nodes in the graph.\n     */\n    @Test\n    @Documented\n    @Title( \"Load a sample graph\" )\n    public void testGremlinImportGraph() throws UnsupportedEncodingException\n    {\n        String script = \"g.loadGraphML('https://raw.github.com/neo4j/gremlin-plugin/master/src/data/graphml1.xml');\" +\n                \"g.V;\";\n        String payload = \"{\\\"script\\\":\\\"\" +\n        script  +\"\\\"}\";\n        description( formatGroovy( script ) );\n        String response = gen()\n        .expectedStatus( Status.OK.getStatusCode() )\n                .payload( JSONPrettifier.parse( payload ) )\n        .payloadType( MediaType.APPLICATION_JSON_TYPE )\n        .post( ENDPOINT )\n        .entity();\n        assertTrue(response.contains( \"you\" ));\n        assertTrue(response.contains( \"him\" ));\n    }","commit_id":"8f38d8e16bc7320f7db4a0c16ee8d95f8016afa1","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n        public T next()\n        {\n            T ret = peek();\n            content_index++;\n            /*if (debug) {\n                out(\"iteration[\"+iterated_over+\"] \" + content_index + \" leaf: \" + current_node);\n            }*/\n            iterated_over++;\n            if (ret == null) {\n                /*if (debug) {\n                    out(this + \" no next node, but iterated over so far: \" + iterated_over);\n                }*/\n            }\n            return ret;\n        }","id":61992,"modified_method":"@Override\n        public T next() {\n            T ret = peek();\n            content_index++;\n            iterated_over++;\n            return ret;\n        }","commit_id":"fc8037fe417cb9dbad8d6cde08c0cf6e1c0800bd","url":"https://github.com/openstreetmap/josm"},{"original_method":"void __split() {\n            /*if (debug) {\n                out(\"splitting \"+this.bbox()+\" level \"+level+\" with \"\n                        + content.size() + \" entries (my dimensions: \"\n                        + this.bbox().width()+\", \"+this.bbox().height()+\")\");\n            }*/\n            List<T> tmpcontent = content;\n            content = null;\n\n            for (T o: tmpcontent) {\n                int index = get_index(o.getBBox(), level);\n                if (index == -1) {\n                    __add_content(o);\n                } else {\n                    getChild(index).doAdd(o);\n                }\n            }\n            isLeaf = false; // It's not enough to check children because all items could end up in this level (index == -1)\n        }","id":61993,"modified_method":"void __split() {\n            List<T> tmpcontent = content;\n            content = null;\n\n            for (T o: tmpcontent) {\n                int index = o.getBBox().getIndex(level);\n                if (index == -1) {\n                    __add_content(o);\n                } else {\n                    getChild(index).doAdd(o);\n                }\n            }\n            isLeaf = false; // It's not enough to check children because all items could end up in this level (index == -1)\n        }","commit_id":"fc8037fe417cb9dbad8d6cde08c0cf6e1c0800bd","url":"https://github.com/openstreetmap/josm"},{"original_method":"public List<T> search(BBox search_bbox) {\n        /*if (debug) {\n            out(\"qb root search at \" + search_bbox);\n            out(\"root bbox: \" + root.bbox());\n        }*/\n        List<T> ret = new ArrayList<T>();\n        // Doing this cuts down search cost on a real-life data\n        // set by about 25%\n        boolean cache_searches = true;\n        if (cache_searches) {\n            if (search_cache == null) {\n                search_cache = root;\n            }\n            // Walk back up the tree when the last\n            // search spot can not cover the current\n            // search\n            while (search_cache != null && !search_cache.bbox().bounds(search_bbox)) {\n                /*if (debug) {\n                    out(\"bbox: \" + search_bbox);\n                    out(\"search_cache: \" + search_cache + \" level: \" + search_cache.level);\n                    out(\"search_cache.bbox(): \" + search_cache.bbox());\n                }*/\n                search_cache = search_cache.parent;\n                /*if (debug) {\n                    out(\"new search_cache: \" + search_cache);\n                }*/\n            }\n\n            if (search_cache == null) {\n                search_cache = root;\n                out(\"bbox: \" + search_bbox + \" is out of the world\");\n            }\n        } else {\n            search_cache = root;\n        }\n\n        // Save parent because search_cache might change during search call\n        QBLevel tmp = search_cache.parent;\n\n        search_cache.search(search_bbox, ret);\n\n        // A way that spans this bucket may be stored in one\n        // of the nodes which is a parent of the search cache\n        while (tmp != null) {\n            tmp.search_contents(search_bbox, ret);\n            tmp = tmp.parent;\n        }\n        /*if (debug) {\n            out(\"search of QuadBuckets for \" + search_bbox + \" ret len: \" + ret.size());\n        }*/\n        return ret;\n    }","id":61994,"modified_method":"public List<T> search(BBox search_bbox) {\n        List<T> ret = new ArrayList<T>();\n        // Doing this cuts down search cost on a real-life data set by about 25%\n        boolean cache_searches = true;\n        if (cache_searches) {\n            if (search_cache == null) {\n                search_cache = root;\n            }\n            // Walk back up the tree when the last search spot can not cover the current search\n            while (search_cache != null && !search_cache.bbox().bounds(search_bbox)) {\n                search_cache = search_cache.parent;\n            }\n\n            if (search_cache == null) {\n                search_cache = root;\n                Main.info(\"bbox: \" + search_bbox + \" is out of the world\");\n            }\n        } else {\n            search_cache = root;\n        }\n\n        // Save parent because search_cache might change during search call\n        QBLevel tmp = search_cache.parent;\n\n        search_cache.search(search_bbox, ret);\n\n        // A way that spans this bucket may be stored in one\n        // of the nodes which is a parent of the search cache\n        while (tmp != null) {\n            tmp.search_contents(search_bbox, ret);\n            tmp = tmp.parent;\n        }\n        return ret;\n    }","commit_id":"fc8037fe417cb9dbad8d6cde08c0cf6e1c0800bd","url":"https://github.com/openstreetmap/josm"},{"original_method":"QBLevel findBucket(BBox bbox) {\n            if (!hasChildren())\n                return this;\n            else {\n                int index = get_index(bbox, level);\n                if (index == -1)\n                    return this;\n                return getChild(index).findBucket(bbox);\n            }\n        }","id":61995,"modified_method":"QBLevel findBucket(BBox bbox) {\n            if (!hasChildren())\n                return this;\n            else {\n                int index = bbox.getIndex(level);\n                if (index == -1)\n                    return this;\n                return getChild(index).findBucket(bbox);\n            }\n        }","commit_id":"fc8037fe417cb9dbad8d6cde08c0cf6e1c0800bd","url":"https://github.com/openstreetmap/josm"},{"original_method":"void doAdd(T o) {\n            if (consistency_testing) {\n                if (!matches(o, this.bbox())) {\n                    /*out(\"-----------------------------\");\n                    debug = true;*/\n                    get_index(o.getBBox(), level);\n                    get_index(o.getBBox(), level-1);\n                    int nr = 0;\n                    /*for (QBLevel sibling : parent.getChildren()) {\n                        out(\"sibling[\"+ (nr++) +\"]: \" + sibling.bbox() + \" this: \" + (this==sibling));\n                    }*/\n                    abort(\"\\nobject \" + o + \" does not belong in node at level: \" + level + \" bbox: \" + this.bbox());\n                }\n            }\n            __add_content(o);\n            if (isLeaf() && content.size() > MAX_OBJECTS_PER_LEVEL && level < QuadTiling.NR_LEVELS) {\n                __split();\n            }\n        }","id":61996,"modified_method":"void doAdd(T o) {\n            if (consistency_testing) {\n                if (!matches(o, this.bbox())) {\n                    o.getBBox().getIndex(level);\n                    o.getBBox().getIndex(level-1);\n                    int nr = 0;\n                    abort(\"\\nobject \" + o + \" does not belong in node at level: \" + level + \" bbox: \" + this.bbox());\n                }\n            }\n            __add_content(o);\n            if (isLeaf() && content.size() > MAX_OBJECTS_PER_LEVEL && level < QuadTiling.NR_LEVELS) {\n                __split();\n            }\n        }","commit_id":"fc8037fe417cb9dbad8d6cde08c0cf6e1c0800bd","url":"https://github.com/openstreetmap/josm"},{"original_method":"public QuadBuckets()\n    {\n        clear();\n    }","id":61997,"modified_method":"/**\n     * Constructs a new {@code QuadBuckets}.\n     */\n    public QuadBuckets() {\n        clear();\n    }","commit_id":"fc8037fe417cb9dbad8d6cde08c0cf6e1c0800bd","url":"https://github.com/openstreetmap/josm"},{"original_method":"QBLevel next_sibling()\n        {\n            boolean found_me = false;\n            if (parent == null)\n                return null;\n            int __nr = 0;\n            for (QBLevel sibling : parent.getChildren()) {\n                __nr++;\n                int nr = __nr-1;\n                if (sibling == null) {\n                    /*if (debug) {\n                        out(\"[\" + this.level + \"] null child nr: \" + nr);\n                    }*/\n                    continue;\n                }\n                // We're looking for the *next* child\n                // after us.\n                if (sibling == this) {\n                    /*if (debug) {\n                        out(\"[\" + this.level + \"] I was child nr: \" + nr);\n                    }*/\n                    found_me = true;\n                    continue;\n                }\n                if (found_me)\n                    /*if (debug) {\n                        out(\"[\" + this.level + \"] next sibling was child nr: \" + nr);\n                    }*/\n                    return sibling;\n            }\n            return null;\n        }","id":61998,"modified_method":"QBLevel next_sibling() {\n            boolean found_me = false;\n            if (parent == null)\n                return null;\n            for (QBLevel sibling : parent.getChildren()) {\n                if (sibling == null) {\n                    continue;\n                }\n                // We're looking for the *next* child after us.\n                if (sibling == this) {\n                    found_me = true;\n                    continue;\n                }\n                if (found_me)\n                    return sibling;\n            }\n            return null;\n        }","commit_id":"fc8037fe417cb9dbad8d6cde08c0cf6e1c0800bd","url":"https://github.com/openstreetmap/josm"},{"original_method":"static public int index(LatLon coor, int level) {\n        // The nodes that don't return coordinates will all get\n        // stuck in a single tile.  Hopefully there are not too\n        // many of them\n        if (coor == null)\n            return 0;\n\n        long x = lon2x(coor.lon());\n        long y = lat2y(coor.lat());\n        int shift = NR_LEVELS-level-1;\n        return (int)((x >> shift & 1) * 2 + (y >> shift & 1));\n    }","id":61999,"modified_method":"/**\n     * Returns quad tiling index for given coordinates and level.\n     *\n     * @param coor coordinates\n     * @param level level\n     *\n     * @return quad tiling index for given coordinates and level.\n     * @since 2263\n     */\n    public static int index(LatLon coor, int level) {\n        // The nodes that don't return coordinates will all get stuck in a single tile. \n        // Hopefully there are not too many of them\n        if (coor == null)\n            return 0;\n\n        return index(coor.lat(), coor.lon(), level);\n    }","commit_id":"fc8037fe417cb9dbad8d6cde08c0cf6e1c0800bd","url":"https://github.com/openstreetmap/josm"}]