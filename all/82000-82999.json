[{"original_method":"@Override\n\tpublic String getTrashContainedModelName() {\n\t\treturn \"Child Pages\";\n\t}","id":82000,"modified_method":"@Override\n\tpublic String getTrashContainerModelName() {\n\t\treturn \"children-pages\";\n\t}","commit_id":"3df1493c678982606cfd98267bab612f296552d6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic String getContainerModelClassName() {\n\t\treturn WikiNode.class.getName();\n\t}","id":82001,"modified_method":"@Override\n\tpublic String getRootContainerModelName() {\n\t\treturn \"wiki-node\";\n\t}","commit_id":"3df1493c678982606cfd98267bab612f296552d6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic int getTrashContainerModelsCount(long classPK)\n\t\tthrows PortalException {\n\n\t\tWikiPage page = WikiPageLocalServiceUtil.getPage(classPK);\n\n\t\tList<WikiPage> childPages = WikiPageLocalServiceUtil.getTrashedChildren(\n\t\t\tpage.getNodeId(), true, page.getTitle());\n\n\t\treturn childPages.size();\n\t}","id":82002,"modified_method":"@Override\n\tpublic int getTrashContainerModelsCount(long classPK)\n\t\tthrows PortalException {\n\n\t\tWikiPage page = WikiPageLocalServiceUtil.getPage(classPK);\n\n\t\treturn WikiPageLocalServiceUtil.getChildrenCount(\n\t\t\tpage.getNodeId(), true, page.getTitle(),\n\t\t\tWorkflowConstants.STATUS_IN_TRASH);\n\t}","commit_id":"3df1493c678982606cfd98267bab612f296552d6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic List<ContainerModel> getContainerModels(\n\t\t\tlong classPK, long containerModelId, int start, int end)\n\t\tthrows PortalException {\n\n\t\tList<ContainerModel> containerModels = new ArrayList<ContainerModel>();\n\n\t\tWikiPage page = WikiPageLocalServiceUtil.getPage(classPK);\n\n\t\tList<WikiPage> pages = WikiPageLocalServiceUtil.getPages(\n\t\t\tpage.getNodeId(), true, start, end);\n\n\t\tfor (WikiPage curPage : pages) {\n\t\t\tcontainerModels.add(curPage);\n\t\t}\n\n\t\treturn containerModels;\n\t}","id":82003,"modified_method":"@Override\n\tpublic List<ContainerModel> getContainerModels(\n\t\t\tlong classPK, long containerModelId, int start, int end)\n\t\tthrows PortalException {\n\n\t\tList<ContainerModel> containerModels = new ArrayList<ContainerModel>();\n\n\t\tWikiPage page = null;\n\n\t\tString parentTitle = StringPool.BLANK;\n\n\t\tif (containerModelId > 0) {\n\t\t\tpage = WikiPageLocalServiceUtil.getPage(containerModelId);\n\n\t\t\tparentTitle = page.getTitle();\n\t\t}\n\t\telse {\n\t\t\tpage = WikiPageLocalServiceUtil.getPage(classPK);\n\t\t}\n\n\t\tList<WikiPage> pages = WikiPageLocalServiceUtil.getChildren(\n\t\t\tpage.getNodeId(), true, parentTitle, start, end);\n\n\t\tfor (WikiPage curPage : pages) {\n\t\t\tcontainerModels.add(curPage);\n\t\t}\n\n\t\treturn containerModels;\n\t}","commit_id":"3df1493c678982606cfd98267bab612f296552d6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic boolean hasTrashPermission(\n\t\t\tPermissionChecker permissionChecker, long groupId, long classPK,\n\t\t\tString trashActionId)\n\t\tthrows PortalException {\n\n\t\tif (trashActionId.equals(TrashActionKeys.MOVE)) {\n\t\t\tWikiPage page = WikiPageLocalServiceUtil.fetchLatestPage(\n\t\t\t\tclassPK, WorkflowConstants.STATUS_ANY, true);\n\n\t\t\tif (page != null) {\n\t\t\t\tWikiPagePermission.check(\n\t\t\t\t\tpermissionChecker, page.getNodeId(), page.getTitle(),\n\t\t\t\t\tActionKeys.DELETE);\n\n\t\t\t\treturn WikiNodePermission.contains(\n\t\t\t\t\tpermissionChecker, page.getNodeId(), ActionKeys.ADD_PAGE);\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn WikiNodePermission.contains(\n\t\t\t\t\tpermissionChecker, classPK, ActionKeys.ADD_PAGE);\n\t\t\t}\n\t\t}\n\n\t\treturn super.hasTrashPermission(\n\t\t\tpermissionChecker, groupId, classPK, trashActionId);\n\t}","id":82004,"modified_method":"@Override\n\tpublic boolean hasTrashPermission(\n\t\t\tPermissionChecker permissionChecker, long groupId, long classPK,\n\t\t\tString trashActionId)\n\t\tthrows PortalException {\n\n\t\tif (trashActionId.equals(TrashActionKeys.MOVE)) {\n\t\t\tWikiPage page = WikiPageLocalServiceUtil.fetchLatestPage(\n\t\t\t\tclassPK, WorkflowConstants.STATUS_ANY, true);\n\n\t\t\tif (page != null) {\n\t\t\t\tWikiPagePermission.check(\n\t\t\t\t\tpermissionChecker, page.getNodeId(), page.getTitle(),\n\t\t\t\t\tActionKeys.DELETE);\n\n\t\t\t\tclassPK = page.getNodeId();\n\t\t\t}\n\n\t\t\treturn WikiNodePermission.contains(\n\t\t\t\tpermissionChecker, classPK, ActionKeys.ADD_PAGE);\n\t\t}\n\n\t\treturn super.hasTrashPermission(\n\t\t\tpermissionChecker, groupId, classPK, trashActionId);\n\t}","commit_id":"3df1493c678982606cfd98267bab612f296552d6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic String getContainerModelName() {\n\t\treturn \"wiki-node\";\n\t}","id":82005,"modified_method":"@Override\n\tpublic String getContainerModelName() {\n\t\treturn \"wiki-page\";\n\t}","commit_id":"3df1493c678982606cfd98267bab612f296552d6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic String getContainerModelName(long classPK) throws PortalException {\n\t\ttry {\n\t\t\tWikiPage page = WikiPageLocalServiceUtil.getPage(classPK);\n\n\t\t\tif (Validator.isNotNull(page.getParentTitle())) {\n\t\t\t\treturn \"wiki-page\";\n\t\t\t}\n\t\t}\n\t\tcatch (NoSuchPageException nspe) {\n\t\t}\n\n\t\treturn getContainerModelName();\n\t}","id":82006,"modified_method":"@Override\n\tpublic ContainerModel getContainerModel(long containerModelId)\n\t\tthrows PortalException {\n\n\t\treturn WikiPageLocalServiceUtil.getPage(containerModelId);\n\t}","commit_id":"3df1493c678982606cfd98267bab612f296552d6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic String getContainerModelClassName(long classPK)\n\t\tthrows PortalException {\n\n\t\tWikiPage page = null;\n\n\t\ttry {\n\t\t\tpage = WikiPageLocalServiceUtil.getPage(classPK);\n\t\t}\n\t\tcatch (NoSuchPageResourceException nspre) {\n\t\t\tpage = WikiPageLocalServiceUtil.getPageByPageId(classPK);\n\t\t}\n\n\t\twhile (page.isInTrashImplicitly() &&\n\t\t\t   Validator.isNotNull(page.getParentTitle())) {\n\n\t\t\tpage = page.getParentPage();\n\t\t}\n\n\t\tif (page.isInTrashExplicitly()) {\n\t\t\treturn WikiPage.class.getName();\n\t\t}\n\n\t\treturn WikiNode.class.getName();\n\t}","id":82007,"modified_method":"@Override\n\tpublic String getContainerModelClassName(long classPK) {\n\t\tWikiPage page = null;\n\n\t\ttry {\n\t\t\tpage = WikiPageLocalServiceUtil.getPage(classPK);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tpage = WikiPageLocalServiceUtil.fetchWikiPage(classPK);\n\t\t}\n\n\t\ttry {\n\t\t\tWikiPage parentPage = page.getParentPage();\n\n\t\t\twhile (parentPage != null) {\n\t\t\t\tif (parentPage.isInTrashExplicitly()) {\n\t\t\t\t\treturn WikiPage.class.getName();\n\t\t\t\t}\n\n\t\t\t\tparentPage = parentPage.getParentPage();\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t}\n\n\t\treturn WikiNode.class.getName();\n\t}","commit_id":"3df1493c678982606cfd98267bab612f296552d6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic int getContainerModelsCount(long classPK, long containerModelId)\n\t\tthrows PortalException {\n\n\t\tWikiPage page = WikiPageLocalServiceUtil.getPage(classPK);\n\n\t\treturn WikiPageLocalServiceUtil.getPagesCount(page.getNodeId(), true);\n\t}","id":82008,"modified_method":"@Override\n\tpublic int getContainerModelsCount(long classPK, long containerModelId)\n\t\tthrows PortalException {\n\n\t\tWikiPage page = null;\n\n\t\tString parentTitle = StringPool.BLANK;\n\n\t\tif (containerModelId > 0) {\n\t\t\tpage = WikiPageLocalServiceUtil.getPage(containerModelId);\n\n\t\t\tparentTitle = page.getTitle();\n\t\t}\n\t\telse {\n\t\t\tpage = WikiPageLocalServiceUtil.getPage(classPK);\n\t\t}\n\n\t\treturn WikiPageLocalServiceUtil.getChildrenCount(\n\t\t\tpage.getNodeId(), true, parentTitle);\n\t}","commit_id":"3df1493c678982606cfd98267bab612f296552d6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static List<WikiPage> getEntries(Hits hits) {\n\t\tList<WikiPage> pages = new ArrayList<WikiPage>();\n\n\t\tfor (Document document : hits.getDocs()) {\n\t\t\tlong entryClassPK = GetterUtil.getLong(\n\t\t\t\tdocument.get(Field.ENTRY_CLASS_PK));\n\t\t\tlong nodeId = GetterUtil.getLong(document.get(Field.NODE_ID));\n\n\t\t\ttry {\n\t\t\t\tWikiNodeLocalServiceUtil.getNode(nodeId);\n\n\t\t\t\tWikiPage page = WikiPageLocalServiceUtil.getPage(entryClassPK);\n\n\t\t\t\tpages.add(page);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t\t_log.warn(\"Wiki search index is stale\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn pages;\n\t}","id":82009,"modified_method":"public static List<Object> getEntries(Hits hits) {\n\t\tList<Object> entries = new ArrayList<Object>();\n\n\t\tfor (Document document : hits.getDocs()) {\n\t\t\tString entryClassName = GetterUtil.getString(\n\t\t\t\tdocument.get(Field.ENTRY_CLASS_NAME));\n\t\t\tlong entryClassPK = GetterUtil.getLong(\n\t\t\t\tdocument.get(Field.ENTRY_CLASS_PK));\n\n\t\t\ttry {\n\t\t\t\tObject obj = null;\n\n\t\t\t\tif (entryClassName.equals(MBMessage.class.getName())) {\n\t\t\t\t\tlong classPK = GetterUtil.getLong(\n\t\t\t\t\t\tdocument.get(Field.CLASS_PK));\n\n\t\t\t\t\tWikiPageLocalServiceUtil.getPage(classPK);\n\n\t\t\t\t\tobj = MBMessageLocalServiceUtil.getMessage(entryClassPK);\n\t\t\t\t}\n\t\t\t\telse if (entryClassName.equals(WikiPage.class.getName())) {\n\t\t\t\t\tobj = WikiPageLocalServiceUtil.getPage(entryClassPK);\n\t\t\t\t}\n\n\t\t\t\tentries.add(obj);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t\t_log.warn(\"Wiki search index is stale\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn entries;\n\t}","commit_id":"547a9c3e333d20347055e321a6a0c948407e83dc","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n\t * Returns the initial name components after the first marker of this command marker, \n\t * up to the operation (if any). Terminating \".\" is stripped. If there is only one initial \n\t * string component, the operation is interpreted as empty, and that component is returned \n\t * as the namespace. We assume we don't have any arguments in our byte array.\n\t * @return\n\t */\n\tpublic String getNamespace() {\n\t\tint occurcount = DataUtils.occurcount(_byteCommandMarker, COMMAND_PREFIX.length, COMMAND_SEPARATOR_BYTE);\n\t\tif (occurcount == 0) {\n\t\t\t// only one component\n\t\t\treturn new String(_byteCommandMarker, COMMAND_PREFIX.length, _byteCommandMarker.length-COMMAND_PREFIX.length);\n\t\t}\n\t\tint lastDot = DataUtils.byterindex(_byteCommandMarker, COMMAND_PREFIX.length, COMMAND_SEPARATOR_BYTE);\n\t\treturn new String(_byteCommandMarker, COMMAND_PREFIX.length, lastDot-1-COMMAND_PREFIX.length);\n\t}","id":82010,"modified_method":"/**\n\t * Returns the initial name components after the first marker of this command marker, \n\t * up to the operation (if any). Terminating \".\" is stripped. If there is only one initial \n\t * string component, the operation is interpreted as empty, and that component is returned \n\t * as the namespace. We assume we don't have any arguments in our byte array.\n\t * @return\n\t */\n\tpublic String getNamespace() {\n\t\tint occurcount = DataUtils.occurcount(_byteCommandMarker, COMMAND_PREFIX.length, COMMAND_SEPARATOR_BYTE);\n\t\tif (occurcount == 0) {\n\t\t\t// only one component\n\t\t\treturn new String(_byteCommandMarker, COMMAND_PREFIX.length, _byteCommandMarker.length-COMMAND_PREFIX.length);\n\t\t}\n\t\tint lastDot = DataUtils.byterindex(_byteCommandMarker, _byteCommandMarker.length-1, COMMAND_SEPARATOR_BYTE);\n\t\treturn new String(_byteCommandMarker, COMMAND_PREFIX.length, lastDot-1-COMMAND_PREFIX.length);\n\t}","commit_id":"f3c471813072cf93ee1a2bf652d0759b0714a6b5","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"public static String getLocalServiceName(ContentName nameWithServicePrefix) {\n\t\t\n\t\t// /localhost/SVC/<servicename>\n\t\tif (nameWithServicePrefix.count() < 3) {\n\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.FINER)) {\n\t\t\t\tLog.finer(Log.FAC_KEYS, \"Cannot get local service name, {0} does not have enough components.\",\n\t\t\t\t\t\tnameWithServicePrefix);\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (!ContextualNamesProfile.LOCALHOST_SCOPE.isPrefixOf(nameWithServicePrefix)) {\n\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.FINER)) {\n\t\t\t\tLog.finer(Log.FAC_KEYS, \"Cannot get local service name, {0} does not begin with local service prefix {1}.\",\n\t\t\t\t\t\tnameWithServicePrefix, ContextualNamesProfile.LOCALHOST_SCOPE);\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\t\n\t\tif (!SERVICE_NAME_COMPONENT_MARKER.isMarker(nameWithServicePrefix.component(ContextualNamesProfile.LOCALHOST_SCOPE.count()))) {\n\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.FINER)) {\n\t\t\t\tLog.finer(Log.FAC_KEYS, \"Cannot get local service name, {0} does not contain a service name component {1}.\",\n\t\t\t\t\t\tnameWithServicePrefix, ContentName.componentPrintURI(nameWithServicePrefix.component(ContextualNamesProfile.LOCALHOST_SCOPE.count())));\n\t\t\t}\n\t\t\treturn null;\t\t\t\n\t\t}\n\t\t\n\t\tbyte [] serviceNameComponent = nameWithServicePrefix.component(ContextualNamesProfile.LOCALHOST_SCOPE.count() + 1);\n\t\treturn ContentName.componentPrintNative(serviceNameComponent);\n\t}","id":82011,"modified_method":"public static String getLocalServiceName(ContentName nameWithServicePrefix) {\n\t\t\n\t\t// /localhost/SVC/<servicename>\n\t\tif (nameWithServicePrefix.count() < 3) {\n\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.FINER)) {\n\t\t\t\tLog.finer(Log.FAC_KEYS, \"Cannot get local service name, {0} does not have enough components.\",\n\t\t\t\t\t\tnameWithServicePrefix);\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (!ServiceDiscoveryProfile.LOCALHOST_SCOPE.isMarker(nameWithServicePrefix.component(SCOPE_COMPONENT))) {\n\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.FINER)) {\n\t\t\t\tLog.finer(Log.FAC_KEYS, \"Cannot get local service name, {0} does not begin with local service prefix {1}.\",\n\t\t\t\t\t\tnameWithServicePrefix, ServiceDiscoveryProfile.LOCALHOST_SCOPE);\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\t\n\t\tif (!SERVICE_NAME_COMPONENT_MARKER.isMarker(\n\t\t\t\t\tnameWithServicePrefix.component(SERVICE_MARKER_COMPONENT))) {\n\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.FINER)) {\n\t\t\t\tLog.finer(Log.FAC_KEYS, \"Cannot get local service name, {0} does not contain a service name component {1}.\",\n\t\t\t\t\t\tnameWithServicePrefix, \n\t\t\t\t\t\tContentName.componentPrintURI(nameWithServicePrefix.component(SERVICE_MARKER_COMPONENT)));\n\t\t\t}\n\t\t\treturn null;\t\t\t\n\t\t}\n\t\t\n\t\tbyte [] serviceNameComponent = \n\t\t\tnameWithServicePrefix.component(SERVICE_NAME_COMPONENT);\n\t\treturn ContentName.componentPrintNative(serviceNameComponent);\n\t}","commit_id":"f3c471813072cf93ee1a2bf652d0759b0714a6b5","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"public static ContentName localServiceName(String service) {\n\t\treturn new ContentName(ContextualNamesProfile.LOCALHOST_SCOPE, SERVICE_NAME_COMPONENT_MARKER.getBytes(), \n\t\t\t\tContentName.componentParseNative(service));\n\t}","id":82012,"modified_method":"public static ContentName localServiceName(String service) {\n\t\treturn new ContentName(\n\t\t\tnew byte [][]{ServiceDiscoveryProfile.LOCALHOST_SCOPE.getBytes(), \n\t\t\t\t\t\t  SERVICE_NAME_COMPONENT_MARKER.getBytes(), \n\t\t\t\t\t\t  ContentName.componentParseNative(service)});\n\t}","commit_id":"f3c471813072cf93ee1a2bf652d0759b0714a6b5","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"/**\n\t * \n\t *\n\t * @param lines \n\t * @param methodElementsMap \n\t * @param javaMethod \n\t */\n\tprivate String _getJavaMethodComment(\n\t\tString[] lines, Map<String, Element> methodElementsMap,\n\t\tJavaMethod javaMethod) {\n\n\t\tString methodKey = _getMethodKey(javaMethod);\n\n\t\tElement methodElement = methodElementsMap.get(methodKey);\n\n\t\tif (methodElement == null) {\n\t\t\treturn null;\n\t\t}\n\n\t\tString line = lines[javaMethod.getLineNumber() - 1];\n\n\t\tString indent = StringPool.BLANK;\n\n\t\tfor (char c : line.toCharArray()) {\n\t\t\tif (Character.isWhitespace(c)) {\n\t\t\t\tindent += c;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tStringBuilder sb = new StringBuilder();\n\n\t\tsb.append(indent);\n\t\tsb.append(\"/**\\n\");\n\n\t\tString comment = methodElement.elementText(\"comment\");\n\n\t\tif (_initializeMissingJavadocs || Validator.isNotNull(comment)) {\n\t\t\tsb.append(_wrapText(comment, indent));\n\t\t\tsb.append(\"\\n\");\n\t\t}\n\n\t\tString docletTags = _addDocletTags(\n\t\t\tmethodElement,\n\t\t\tnew String[] {\n\t\t\t\t\"version\", \"param\", \"return\", \"throws\", \"see\", \"since\",\n\t\t\t\t\"deprecated\"\n\t\t\t},\n\t\t\tindent);\n\n\t\tif (docletTags.length() > 0) {\n\t\t\tif (_initializeMissingJavadocs || Validator.isNotNull(comment)) {\n\t\t\t\tsb.append(indent);\n\t\t\t\tsb.append(\" *\\n\");\n\t\t\t}\n\n\t\t\tsb.append(docletTags);\n\t\t}\n\n\t\tsb.append(indent);\n\t\tsb.append(\" */\\n\");\n\n\t\tif (!_initializeMissingJavadocs && Validator.isNull(comment) &&\n\t\t\tValidator.isNull(docletTags)) {\n\n\t\t\treturn null;\n\t\t}\n\n\t\treturn sb.toString();\n\t}","id":82013,"modified_method":"private String _getJavaMethodComment(\n\t\tString[] lines, Map<String, Element> methodElementsMap,\n\t\tJavaMethod javaMethod) {\n\n\t\tString methodKey = _getMethodKey(javaMethod);\n\n\t\tElement methodElement = methodElementsMap.get(methodKey);\n\n\t\tif (methodElement == null) {\n\t\t\treturn null;\n\t\t}\n\n\t\tString line = lines[javaMethod.getLineNumber() - 1];\n\n\t\tString indent = StringPool.BLANK;\n\n\t\tfor (char c : line.toCharArray()) {\n\t\t\tif (Character.isWhitespace(c)) {\n\t\t\t\tindent += c;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tStringBuilder sb = new StringBuilder();\n\n\t\tsb.append(indent);\n\t\tsb.append(\"/**\\n\");\n\n\t\tString comment = methodElement.elementText(\"comment\");\n\n\t\tif (_initializeMissingJavadocs || Validator.isNotNull(comment)) {\n\t\t\tsb.append(_wrapText(comment, indent));\n\t\t\tsb.append(\"\\n\");\n\t\t}\n\n\t\tString docletTags = _addDocletTags(\n\t\t\tmethodElement,\n\t\t\tnew String[] {\n\t\t\t\t\"version\", \"param\", \"return\", \"throws\", \"see\", \"since\",\n\t\t\t\t\"deprecated\"\n\t\t\t},\n\t\t\tindent);\n\n\t\tif (docletTags.length() > 0) {\n\t\t\tif (_initializeMissingJavadocs || Validator.isNotNull(comment)) {\n\t\t\t\tsb.append(indent);\n\t\t\t\tsb.append(\" *\\n\");\n\t\t\t}\n\n\t\t\tsb.append(docletTags);\n\t\t}\n\n\t\tsb.append(indent);\n\t\tsb.append(\" */\\n\");\n\n\t\tif (!_initializeMissingJavadocs && Validator.isNull(comment) &&\n\t\t\tValidator.isNull(docletTags)) {\n\n\t\t\treturn null;\n\t\t}\n\n\t\treturn sb.toString();\n\t}","commit_id":"332685390feb339b580a531f713b0f2a72d6e465","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n\t * \n\t *\n\t * @param methodElement \n\t */\n\tprivate String _getMethodKey(Element methodElement) {\n\t\tStringBuilder sb = new StringBuilder();\n\n\t\tsb.append(methodElement.elementText(\"name\"));\n\t\tsb.append(\"(\");\n\n\t\tList<Element> paramElements = methodElement.elements(\"param\");\n\n\t\tfor (Element paramElement : paramElements) {\n\t\t\tsb.append(paramElement.elementText(\"name\"));\n\t\t\tsb.append(\"|\");\n\t\t\tsb.append(paramElement.elementText(\"type\"));\n\t\t\tsb.append(\",\");\n\t\t}\n\n\t\tsb.append(\")\");\n\n\t\treturn sb.toString();\n\t}","id":82014,"modified_method":"private String _getMethodKey(Element methodElement) {\n\t\tStringBuilder sb = new StringBuilder();\n\n\t\tsb.append(methodElement.elementText(\"name\"));\n\t\tsb.append(\"(\");\n\n\t\tList<Element> paramElements = methodElement.elements(\"param\");\n\n\t\tfor (Element paramElement : paramElements) {\n\t\t\tsb.append(paramElement.elementText(\"name\"));\n\t\t\tsb.append(\"|\");\n\t\t\tsb.append(paramElement.elementText(\"type\"));\n\t\t\tsb.append(\",\");\n\t\t}\n\n\t\tsb.append(\")\");\n\n\t\treturn sb.toString();\n\t}","commit_id":"332685390feb339b580a531f713b0f2a72d6e465","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n\t * \n\t *\n\t * @param methodElement \n\t * @param javaMethod \n\t */\n\tprivate void _addThrowsElements(\n\t\tElement methodElement, JavaMethod javaMethod) {\n\n\t\tType[] exceptions = javaMethod.getExceptions();\n\n\t\tDocletTag[] throwsDocletTags = javaMethod.getTagsByName(\"throws\");\n\n\t\tfor (Type exception : exceptions) {\n\t\t\t_addThrowsElement(methodElement, exception, throwsDocletTags);\n\t\t}\n\t}","id":82015,"modified_method":"private void _addThrowsElements(\n\t\tElement methodElement, JavaMethod javaMethod) {\n\n\t\tType[] exceptions = javaMethod.getExceptions();\n\n\t\tDocletTag[] throwsDocletTags = javaMethod.getTagsByName(\"throws\");\n\n\t\tfor (Type exception : exceptions) {\n\t\t\t_addThrowsElement(methodElement, exception, throwsDocletTags);\n\t\t}\n\t}","commit_id":"332685390feb339b580a531f713b0f2a72d6e465","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n\t * \n\t *\n\t * @param javaClass \n\t * @throws Exception \n\t */\n\tprivate Document _getJavadocDocument(JavaClass javaClass) throws Exception {\n\t\tElement rootElement = _saxReaderUtil.createElement(\"javadoc\");\n\n\t\tDocument document = _saxReaderUtil.createDocument(rootElement);\n\n\t\tDocUtil.add(rootElement, \"name\", javaClass.getName());\n\t\tDocUtil.add(rootElement, \"type\", javaClass.getFullyQualifiedName());\n\n\t\t_addClassCommentElement(rootElement, javaClass);\n\t\t_addDocletElements(rootElement, javaClass, \"author\");\n\t\t_addDocletElements(rootElement, javaClass, \"version\");\n\t\t_addDocletElements(rootElement, javaClass, \"see\");\n\t\t_addDocletElements(rootElement, javaClass, \"since\");\n\t\t_addDocletElements(rootElement, javaClass, \"serial\");\n\t\t_addDocletElements(rootElement, javaClass, \"deprecated\");\n\n\t\tJavaMethod[] javaMethods = javaClass.getMethods();\n\n\t\tfor (JavaMethod javaMethod : javaMethods) {\n\t\t\t_addMethodElement(rootElement, javaMethod);\n\t\t}\n\n\t\tJavaField[] javaFields = javaClass.getFields();\n\n\t\tfor (JavaField javaField : javaFields) {\n\t\t\t_addFieldElement(rootElement, javaField);\n\t\t}\n\n\t\treturn document;\n\t}","id":82016,"modified_method":"private Document _getJavadocDocument(JavaClass javaClass) throws Exception {\n\t\tElement rootElement = _saxReaderUtil.createElement(\"javadoc\");\n\n\t\tDocument document = _saxReaderUtil.createDocument(rootElement);\n\n\t\tDocUtil.add(rootElement, \"name\", javaClass.getName());\n\t\tDocUtil.add(rootElement, \"type\", javaClass.getFullyQualifiedName());\n\n\t\t_addClassCommentElement(rootElement, javaClass);\n\t\t_addDocletElements(rootElement, javaClass, \"author\");\n\t\t_addDocletElements(rootElement, javaClass, \"version\");\n\t\t_addDocletElements(rootElement, javaClass, \"see\");\n\t\t_addDocletElements(rootElement, javaClass, \"since\");\n\t\t_addDocletElements(rootElement, javaClass, \"serial\");\n\t\t_addDocletElements(rootElement, javaClass, \"deprecated\");\n\n\t\tJavaMethod[] javaMethods = javaClass.getMethods();\n\n\t\tfor (JavaMethod javaMethod : javaMethods) {\n\t\t\t_addMethodElement(rootElement, javaMethod);\n\t\t}\n\n\t\tJavaField[] javaFields = javaClass.getFields();\n\n\t\tfor (JavaField javaField : javaFields) {\n\t\t\t_addFieldElement(rootElement, javaField);\n\t\t}\n\n\t\treturn document;\n\t}","commit_id":"332685390feb339b580a531f713b0f2a72d6e465","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n\t * \n\t *\n\t * @param text \n\t * @param indent \n\t */\n\tprivate String _wrapText(String text, String indent) {\n\t\tint indentLength = _getIndentLength(indent);\n\n\t\ttext = StringUtil.wrap(text, 80 - indentLength - 3, \"\\n\");\n\n\t\ttext = \"\\n\" + text.trim();\n\n\t\ttext = StringUtil.replace(text, \"\\n\", \"\\n\" + indent + \" * \");\n\n\t\twhile (text.contains(\" \\n\")) {\n\t\t\ttext = StringUtil.replace(text, \" \\n\", \"\\n\");\n\t\t}\n\n\t\twhile (text.startsWith(\"\\n\")) {\n\t\t\ttext = text.substring(1, text.length());\n\t\t}\n\n\t\treturn text;\n\t}","id":82017,"modified_method":"private String _wrapText(String text, String indent) {\n\t\tint indentLength = _getIndentLength(indent);\n\n\t\ttext = StringUtil.wrap(text, 80 - indentLength - 3, \"\\n\");\n\n\t\ttext = \"\\n\" + text.trim();\n\n\t\ttext = StringUtil.replace(text, \"\\n\", \"\\n\" + indent + \" * \");\n\n\t\twhile (text.contains(\" \\n\")) {\n\t\t\ttext = StringUtil.replace(text, \" \\n\", \"\\n\");\n\t\t}\n\n\t\twhile (text.startsWith(\"\\n\")) {\n\t\t\ttext = text.substring(1, text.length());\n\t\t}\n\n\t\treturn text;\n\t}","commit_id":"332685390feb339b580a531f713b0f2a72d6e465","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n\t * \n\t *\n\t * @param fileName \n\t * @throws Exception \n\t */\n\tprivate void _format(String fileName) throws Exception {\n\t\tString originalContent = _fileUtil.read(\n\t\t\tnew File(_basedir + fileName));\n\n\t\tif (_isGenerated(originalContent)) {\n\t\t\treturn;\n\t\t}\n\n\t\tJavaClass javaClass = _getJavaClass(\n\t\t\tfileName, new StringReader(originalContent));\n\n\t\tString javadocLessContent = _removeJavadocFromJava(\n\t\t\tjavaClass, originalContent);\n\n\t\tDocument document = _getJavadocDocument(javaClass);\n\n\t\t_updateJavaFromDocument(\n\t\t\tfileName, originalContent, javadocLessContent, document);\n\t}","id":82018,"modified_method":"private void _format(String fileName) throws Exception {\n\t\tFileInputStream fis = new FileInputStream(\n\t\t\tnew File(_basedir + fileName));\n\n\t\tbyte[] bytes = new byte[fis.available()];\n\n\t\tfis.read(bytes);\n\n\t\tfis.close();\n\n\t\tString originalContent = new String(bytes);\n\n\t\tif (!fileName.endsWith(\"JavadocFormatter.java\") &&\n\t\t\t_isGenerated(originalContent)) {\n\n\t\t\treturn;\n\t\t}\n\n\t\tJavaClass javaClass = _getJavaClass(\n\t\t\tfileName, new StringReader(originalContent));\n\n\t\tString javadocLessContent = _removeJavadocFromJava(\n\t\t\tjavaClass, originalContent);\n\n\t\tDocument document = _getJavadocDocument(javaClass);\n\n\t\t_updateJavaFromDocument(\n\t\t\tfileName, originalContent, javadocLessContent, document);\n\t}","commit_id":"332685390feb339b580a531f713b0f2a72d6e465","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n\t * \n\t *\n\t * @param fileName \n\t * @param reader \n\t * @throws Exception \n\t */\n\tprivate JavaClass _getJavaClass(String fileName, Reader reader)\n\t\tthrows Exception {\n\n\t\tint pos = fileName.indexOf(\"src/\");\n\n\t\tif (pos == -1) {\n\t\t\tpos = fileName.indexOf(\"test/\");\n\t\t}\n\n\t\tif (pos == -1) {\n\t\t\tthrow new RuntimeException(fileName);\n\t\t}\n\n\t\tpos = fileName.indexOf(\"/\", pos);\n\n\t\tString srcFile = fileName.substring(pos + 1, fileName.length());\n\t\tString className = StringUtil.replace(\n\t\t\tsrcFile.substring(0, srcFile.length() - 5), \"/\", \".\");\n\n\t\tJavaDocBuilder builder = new JavaDocBuilder();\n\n\t\tif (reader == null) {\n\t\t\tFile file = new File(fileName);\n\n\t\t\tif (!file.exists()) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tbuilder.addSource(file);\n\t\t}\n\t\telse {\n\t\t\tbuilder.addSource(reader);\n\t\t}\n\n\t\treturn builder.getClassByName(className);\n\t}","id":82019,"modified_method":"private JavaClass _getJavaClass(String fileName, Reader reader)\n\t\tthrows Exception {\n\n\t\tint pos = fileName.indexOf(\"src/\");\n\n\t\tif (pos == -1) {\n\t\t\tpos = fileName.indexOf(\"test/\");\n\t\t}\n\n\t\tif (pos == -1) {\n\t\t\tthrow new RuntimeException(fileName);\n\t\t}\n\n\t\tpos = fileName.indexOf(\"/\", pos);\n\n\t\tString srcFile = fileName.substring(pos + 1, fileName.length());\n\t\tString className = StringUtil.replace(\n\t\t\tsrcFile.substring(0, srcFile.length() - 5), \"/\", \".\");\n\n\t\tJavaDocBuilder builder = new JavaDocBuilder();\n\n\t\tif (reader == null) {\n\t\t\tFile file = new File(fileName);\n\n\t\t\tif (!file.exists()) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tbuilder.addSource(file);\n\t\t}\n\t\telse {\n\t\t\tbuilder.addSource(reader);\n\t\t}\n\n\t\treturn builder.getClassByName(className);\n\t}","commit_id":"332685390feb339b580a531f713b0f2a72d6e465","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n\t * \n\t *\n\t * @param rootElement \n\t * @param javaClass \n\t */\n\tprivate String _getJavaClassComment(\n\t\tElement rootElement, JavaClass javaClass) {\n\n\t\tStringBuilder sb = new StringBuilder();\n\n\t\tString indent = StringPool.BLANK;\n\n\t\tsb.append(\"/**\\n\");\n\n\t\tString viewSourceHREF =\n\t\t\t\" * <a href=\\\"\" + javaClass.getName() +\n\t\t\t\t\".java.html\\\"><b><i>View Source<\/i><\/b><\/a>\";\n\n\t\tif (viewSourceHREF.length() > 80) {\n\t\t\tint x = viewSourceHREF.lastIndexOf(\"<\", 80);\n\t\t\tint y = viewSourceHREF.lastIndexOf(\" \", 80);\n\n\t\t\tint start = x;\n\t\t\tint end = x;\n\n\t\t\tif (x < y) {\n\t\t\t\tstart = y;\n\t\t\t\tend = y + 1;\n\t\t\t}\n\n\t\t\tviewSourceHREF =\n\t\t\t\tviewSourceHREF.substring(0, start) + \"\\n * \" +\n\t\t\t\t\tviewSourceHREF.substring(end);\n\t\t}\n\n\t\tsb.append(viewSourceHREF);\n\t\tsb.append(\"\\n\");\n\n\t\tString comment = rootElement.elementText(\"comment\");\n\n\t\tif (_initializeMissingJavadocs || Validator.isNotNull(comment)) {\n\t\t\tsb.append(\" *\\n\");\n\t\t\tsb.append(_wrapText(comment, indent));\n\t\t\tsb.append(\"\\n\");\n\t\t}\n\n\t\tString docletTags = _addDocletTags(\n\t\t\trootElement,\n\t\t\tnew String[] {\n\t\t\t\t\"author\", \"verversionsion\", \"see\", \"since\", \"serial\",\n\t\t\t\t\"deprecated\"\n\t\t\t},\n\t\t\tindent);\n\n\t\tif (docletTags.length() > 0) {\n\t\t\t//if (_initializeMissingJavadocs || Validator.isNotNull(comment)) {\n\t\t\t\tsb.append(\" *\\n\");\n\t\t\t//}\n\n\t\t\tsb.append(docletTags);\n\t\t}\n\n\t\tsb.append(\" */\\n\");\n\n\t\treturn sb.toString();\n\t}","id":82020,"modified_method":"private String _getJavaClassComment(\n\t\tElement rootElement, JavaClass javaClass) {\n\n\t\tStringBuilder sb = new StringBuilder();\n\n\t\tString indent = StringPool.BLANK;\n\n\t\tsb.append(\"/**\\n\");\n\n\t\tString viewSourceHREF =\n\t\t\t\" * <a href=\\\"\" + javaClass.getName() +\n\t\t\t\t\".java.html\\\"><b><i>View Source<\/i><\/b><\/a>\";\n\n\t\tif (viewSourceHREF.length() > 80) {\n\t\t\tint x = viewSourceHREF.lastIndexOf(\"<\", 80);\n\t\t\tint y = viewSourceHREF.lastIndexOf(\" \", 80);\n\n\t\t\tint start = x;\n\t\t\tint end = x;\n\n\t\t\tif (x < y) {\n\t\t\t\tstart = y;\n\t\t\t\tend = y + 1;\n\t\t\t}\n\n\t\t\tviewSourceHREF =\n\t\t\t\tviewSourceHREF.substring(0, start) + \"\\n * \" +\n\t\t\t\t\tviewSourceHREF.substring(end);\n\t\t}\n\n\t\tsb.append(viewSourceHREF);\n\t\tsb.append(\"\\n\");\n\n\t\tString comment = rootElement.elementText(\"comment\");\n\n\t\tif (_initializeMissingJavadocs || Validator.isNotNull(comment)) {\n\t\t\tsb.append(\" *\\n\");\n\t\t\tsb.append(_wrapText(comment, indent));\n\t\t\tsb.append(\"\\n\");\n\t\t}\n\n\t\tString docletTags = _addDocletTags(\n\t\t\trootElement,\n\t\t\tnew String[] {\n\t\t\t\t\"author\", \"version\", \"see\", \"since\", \"serial\", \"deprecated\"\n\t\t\t},\n\t\t\tindent);\n\n\t\tif (docletTags.length() > 0) {\n\t\t\t//if (_initializeMissingJavadocs || Validator.isNotNull(comment)) {\n\t\t\t\tsb.append(\" *\\n\");\n\t\t\t//}\n\n\t\t\tsb.append(docletTags);\n\t\t}\n\n\t\tsb.append(\" */\\n\");\n\n\t\treturn sb.toString();\n\t}","commit_id":"332685390feb339b580a531f713b0f2a72d6e465","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n\t * \n\t *\n\t * @param methodElement \n\t * @param javaParameter \n\t * @param paramDocletTags \n\t */\n\tprivate void _addParamElement(\n\t\tElement methodElement, JavaParameter javaParameter,\n\t\tDocletTag[] paramDocletTags) {\n\n\t\tString name = javaParameter.getName();\n\t\tString type = javaParameter.getType().getValue();\n\t\tString value = null;\n\n\t\tfor (DocletTag paramDocletTag : paramDocletTags) {\n\t\t\tString curValue = paramDocletTag.getValue();\n\n\t\t\tif (!curValue.startsWith(name)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcurValue = value;\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tElement paramElement = methodElement.addElement(\"param\");\n\n\t\tDocUtil.add(paramElement, \"name\", name);\n\t\tDocUtil.add(paramElement, \"type\", type);\n\n\t\tif (value != null) {\n\t\t\tvalue = value.substring(name.length());\n\t\t}\n\n\t\tElement commentElement = paramElement.addElement(\"comment\");\n\n\t\tcommentElement.addCDATA(_getCDATA(value));\n\t}","id":82021,"modified_method":"private void _addParamElement(\n\t\tElement methodElement, JavaParameter javaParameter,\n\t\tDocletTag[] paramDocletTags) {\n\n\t\tString name = javaParameter.getName();\n\t\tString type = javaParameter.getType().getValue();\n\t\tString value = null;\n\n\t\tfor (DocletTag paramDocletTag : paramDocletTags) {\n\t\t\tString curValue = paramDocletTag.getValue();\n\n\t\t\tif (!curValue.startsWith(name)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcurValue = value;\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tElement paramElement = methodElement.addElement(\"param\");\n\n\t\tDocUtil.add(paramElement, \"name\", name);\n\t\tDocUtil.add(paramElement, \"type\", type);\n\n\t\tif (value != null) {\n\t\t\tvalue = value.substring(name.length());\n\t\t}\n\n\t\tElement commentElement = paramElement.addElement(\"comment\");\n\n\t\tcommentElement.addCDATA(_getCDATA(value));\n\t}","commit_id":"332685390feb339b580a531f713b0f2a72d6e465","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n\t * \n\t *\n\t * @param rootElement \n\t * @param javaField \n\t */\n\tprivate void _addFieldElement(Element rootElement, JavaField javaField) {\n\t\tElement fieldElement = rootElement.addElement(\"field\");\n\n\t\tDocUtil.add(fieldElement, \"name\", javaField.getName());\n\n\t\tElement commentElement = fieldElement.addElement(\"comment\");\n\n\t\tcommentElement.addCDATA(_getCDATA(javaField));\n\n\t\t_addDocletElements(fieldElement, javaField, \"version\");\n\t\t_addDocletElements(fieldElement, javaField, \"see\");\n\t\t_addDocletElements(fieldElement, javaField, \"since\");\n\t\t_addDocletElements(fieldElement, javaField, \"deprecated\");\n\t}","id":82022,"modified_method":"private void _addFieldElement(Element rootElement, JavaField javaField)\n\t\tthrows Exception {\n\n\t\tElement fieldElement = rootElement.addElement(\"field\");\n\n\t\tDocUtil.add(fieldElement, \"name\", javaField.getName());\n\n\t\tElement commentElement = fieldElement.addElement(\"comment\");\n\n\t\tcommentElement.addCDATA(_getCDATA(javaField));\n\n\t\t_addDocletElements(fieldElement, javaField, \"version\");\n\t\t_addDocletElements(fieldElement, javaField, \"see\");\n\t\t_addDocletElements(fieldElement, javaField, \"since\");\n\t\t_addDocletElements(fieldElement, javaField, \"deprecated\");\n\t}","commit_id":"332685390feb339b580a531f713b0f2a72d6e465","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n\t * \n\t *\n\t * @param args \n\t * @throws Exception \n\t */\n\tpublic JavadocFormatter(String[] args) throws Exception {\n\t\tCmdLineParser cmdLineParser = new CmdLineParser();\n\n\t\tCmdLineParser.Option limitOption = cmdLineParser.addStringOption(\n\t\t\t\"limit\");\n\t\tCmdLineParser.Option initOption = cmdLineParser.addStringOption(\n\t\t\t\"init\");\n\n\t\tcmdLineParser.parse(args);\n\n\t\tString limit = (String)cmdLineParser.getOptionValue(limitOption);\n\t\tString init = (String)cmdLineParser.getOptionValue(initOption);\n\n\t\tif (!init.startsWith(\"$\")) {\n\t\t\t_initializeMissingJavadocs = GetterUtil.getBoolean(init);\n\t\t}\n\n\t\tDirectoryScanner ds = new DirectoryScanner();\n\n\t\tds.setBasedir(_basedir);\n\t\tds.setExcludes(\n\t\t\tnew String[] {\n\t\t\t\t\"**\\\\classes\\\\**\", \"**\\\\portal-client\\\\**\"\n\t\t\t});\n\n\t\tList<String> includes = new ArrayList<String>();\n\n\t\tif (Validator.isNotNull(limit) && !limit.startsWith(\"$\")) {\n\t\t\tString[] limitArray = StringUtil.split(limit, \"/\");\n\n\t\t\tfor (String curLimit : limitArray) {\n\t\t\t\tincludes.add(\n\t\t\t\t\t\"**\\\\\" + StringUtil.replace(curLimit, \".\", \"\\\\\") +\n\t\t\t\t\t\t\"\\\\**\\\\*.java\");\n\t\t\t\tincludes.add(\"**\\\\\" + curLimit + \".java\");\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tincludes.add(\"**\\\\*.java\");\n\t\t}\n\n\t\tds.setIncludes(includes.toArray(new String[includes.size()]));\n\n\t\tds.scan();\n\n\t\tString[] fileNames = ds.getIncludedFiles();\n\n\t\tfor (String fileName : fileNames) {\n\t\t\tfileName = StringUtil.replace(fileName, \"\\\\\", \"/\");\n\n\t\t\t_format(fileName);\n\t\t}\n\t}","id":82023,"modified_method":"public JavadocFormatter(String[] args) throws Exception {\n\t\tCmdLineParser cmdLineParser = new CmdLineParser();\n\n\t\tCmdLineParser.Option limitOption = cmdLineParser.addStringOption(\n\t\t\t\"limit\");\n\t\tCmdLineParser.Option initOption = cmdLineParser.addStringOption(\n\t\t\t\"init\");\n\n\t\tcmdLineParser.parse(args);\n\n\t\tString limit = (String)cmdLineParser.getOptionValue(limitOption);\n\t\tString init = (String)cmdLineParser.getOptionValue(initOption);\n\n\t\tif (!init.startsWith(\"$\")) {\n\t\t\t_initializeMissingJavadocs = GetterUtil.getBoolean(init);\n\t\t}\n\n\t\tDirectoryScanner ds = new DirectoryScanner();\n\n\t\tds.setBasedir(_basedir);\n\t\tds.setExcludes(\n\t\t\tnew String[] {\n\t\t\t\t\"**\\\\classes\\\\**\", \"**\\\\portal-client\\\\**\"\n\t\t\t});\n\n\t\tList<String> includes = new ArrayList<String>();\n\n\t\tif (Validator.isNotNull(limit) && !limit.startsWith(\"$\")) {\n\t\t\tString[] limitArray = StringUtil.split(limit, \"/\");\n\n\t\t\tfor (String curLimit : limitArray) {\n\t\t\t\tincludes.add(\n\t\t\t\t\t\"**\\\\\" + StringUtil.replace(curLimit, \".\", \"\\\\\") +\n\t\t\t\t\t\t\"\\\\**\\\\*.java\");\n\t\t\t\tincludes.add(\"**\\\\\" + curLimit + \".java\");\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tincludes.add(\"**\\\\*.java\");\n\t\t}\n\n\t\tds.setIncludes(includes.toArray(new String[includes.size()]));\n\n\t\tds.scan();\n\n\t\tString[] fileNames = ds.getIncludedFiles();\n\n\t\tfor (String fileName : fileNames) {\n\t\t\tfileName = StringUtil.replace(fileName, \"\\\\\", \"/\");\n\n\t\t\t_format(fileName);\n\t\t}\n\t}","commit_id":"332685390feb339b580a531f713b0f2a72d6e465","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n\t * \n\t *\n\t * @param methodElement \n\t * @param javaMethod \n\t */\n\tprivate void _addParamElements(\n\t\tElement methodElement, JavaMethod javaMethod) {\n\n\t\tJavaParameter[] javaParameters = javaMethod.getParameters();\n\n\t\tDocletTag[] paramDocletTags = javaMethod.getTagsByName(\"param\");\n\n\t\tfor (JavaParameter javaParameter : javaParameters) {\n\t\t\t_addParamElement(methodElement, javaParameter, paramDocletTags);\n\t\t}\n\t}","id":82024,"modified_method":"private void _addParamElements(\n\t\tElement methodElement, JavaMethod javaMethod) {\n\n\t\tJavaParameter[] javaParameters = javaMethod.getParameters();\n\n\t\tDocletTag[] paramDocletTags = javaMethod.getTagsByName(\"param\");\n\n\t\tfor (JavaParameter javaParameter : javaParameters) {\n\t\t\t_addParamElement(methodElement, javaParameter, paramDocletTags);\n\t\t}\n\t}","commit_id":"332685390feb339b580a531f713b0f2a72d6e465","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n\t * \n\t *\n\t * @param cdata \n\t */\n\tprivate String _getCDATA(String cdata) {\n\t\tif (cdata == null) {\n\t\t\treturn StringPool.BLANK;\n\t\t}\n\n\t\tcdata = StringUtil.replace(\n\t\t\tcdata,\n\t\t\tnew String[] {\"\\n\", \"<p>\", \"<\/p>\"},\n\t\t\tnew String[] {\" \", \" \\n<p>\\n\", \"\\n<\/p>\\n\"});\n\n\t\twhile (cdata.contains(\"\\n \")) {\n\t\t\tcdata = StringUtil.replace(cdata, \"\\n \", \"\\n\");\n\t\t}\n\n\t\twhile (cdata.contains(\"  \")) {\n\t\t\tcdata = StringUtil.replace(cdata, \"  \", \" \");\n\t\t}\n\n\t\tcdata = StringUtil.replace(cdata, \"<\/p>\\n<p>\", \"<\/p>\\n\\n<p>\");\n\n\t\treturn cdata.trim();\n\t}","id":82025,"modified_method":"private String _getCDATA(String cdata) {\n\t\tif (cdata == null) {\n\t\t\treturn StringPool.BLANK;\n\t\t}\n\n\t\tcdata = StringUtil.replace(\n\t\t\tcdata,\n\t\t\tnew String[] {\"\\n\", \"<p>\", \"<\/p>\"},\n\t\t\tnew String[] {\" \", \" \\n<p>\\n\", \"\\n<\/p>\\n\"});\n\n\t\twhile (cdata.contains(\"\\n \")) {\n\t\t\tcdata = StringUtil.replace(cdata, \"\\n \", \"\\n\");\n\t\t}\n\n\t\twhile (cdata.contains(\"  \")) {\n\t\t\tcdata = StringUtil.replace(cdata, \"  \", \" \");\n\t\t}\n\n\t\tcdata = StringUtil.replace(cdata, \"<\/p>\\n<p>\", \"<\/p>\\n\\n<p>\");\n\n\t\treturn cdata.trim();\n\t}","commit_id":"332685390feb339b580a531f713b0f2a72d6e465","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n\t * \n\t *\n\t * @param fieldElement \n\t */\n\tprivate String _getFieldKey(Element fieldElement) {\n\t\treturn fieldElement.elementText(\"name\");\n\t}","id":82026,"modified_method":"private String _getFieldKey(Element fieldElement) {\n\t\treturn fieldElement.elementText(\"name\");\n\t}","commit_id":"332685390feb339b580a531f713b0f2a72d6e465","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n\t * \n\t *\n\t * @param args \n\t */\n\tpublic static void main(String[] args) {\n\t\ttry {\n\t\t\tnew JavadocFormatter(args);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}","id":82027,"modified_method":"public static void main(String[] args) {\n\t\ttry {\n\t\t\tnew JavadocFormatter(args);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}","commit_id":"332685390feb339b580a531f713b0f2a72d6e465","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n\t * \n\t *\n\t * @param parentElement \n\t * @param names \n\t * @param indent \n\t */\n\tprivate String _addDocletTags(\n\t\tElement parentElement, String[] names, String indent) {\n\n\t\tStringBuilder sb = new StringBuilder();\n\n\t\tint maxNameLength = 0;\n\n\t\tfor (String name : names) {\n\t\t\tif (name.length() < maxNameLength) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tList<Element> elements = parentElement.elements(name);\n\n\t\t\tfor (Element element : elements) {\n\t\t\t\tElement commentElement = element.element(\"comment\");\n\n\t\t\t\tString comment = null;\n\n\t\t\t\tif (commentElement != null) {\n\t\t\t\t\tcomment = commentElement.getText();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcomment = element.getText();\n\t\t\t\t}\n\n\t\t\t\tif (!_initializeMissingJavadocs && Validator.isNull(comment)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tmaxNameLength = name.length();\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tint indentLength =_getIndentLength(indent) + maxNameLength;\n\n\t\tString maxNameIndent = \"\\t \";\n\n\t\tfor (int i = 0; i < maxNameLength; i++) {\n\t\t\tmaxNameIndent += \" \";\n\t\t}\n\n\t\tmaxNameIndent = StringUtil.replace(\n\t\t\tmaxNameIndent, StringPool.FOUR_SPACES, \"\\t\");\n\n\t\tfor (String name : names) {\n\t\t\tList<Element> elements = parentElement.elements(name);\n\n\t\t\tfor (Element element : elements) {\n\t\t\t\tElement commentElement = element.element(\"comment\");\n\n\t\t\t\tString comment = null;\n\n\t\t\t\tif (commentElement != null) {\n\t\t\t\t\tcomment = commentElement.getText();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcomment = element.getText();\n\t\t\t\t}\n\n\t\t\t\tif (!_initializeMissingJavadocs && Validator.isNull(comment)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tsb.append(indent);\n\t\t\t\tsb.append(\" * @\");\n\t\t\t\tsb.append(name);\n\t\t\t\tsb.append(\" \");\n\n\t\t\t\tfor (int i = 0; i < maxNameLength - name.length(); i++) {\n\t\t\t\t\tsb.append(\" \");\n\t\t\t\t}\n\n\t\t\t\tif (commentElement != null) {\n\t\t\t\t\tcomment = element.elementText(\"name\") + \" \" + comment;\n\t\t\t\t}\n\n\t\t\t\tcomment = StringUtil.wrap(comment, 80 - indentLength - 5, \"\\n\");\n\n\t\t\t\tcomment = comment.trim();\n\n\t\t\t\tcomment = StringUtil.replace(\n\t\t\t\t\tcomment, \"\\n\", \"\\n\" + indent + \" *\" + maxNameIndent);\n\n\t\t\t\twhile (comment.contains(\" \\n\")) {\n\t\t\t\t\tcomment = StringUtil.replace(comment, \" \\n\", \"\\n\");\n\t\t\t\t}\n\n\t\t\t\twhile (comment.startsWith(\"\\n\")) {\n\t\t\t\t\tcomment = comment.substring(1, comment.length());\n\t\t\t\t}\n\n\t\t\t\tsb.append(comment);\n\t\t\t\tsb.append(\"\\n\");\n\t\t\t}\n\t\t}\n\n\t\treturn sb.toString();\n\t}","id":82028,"modified_method":"private String _addDocletTags(\n\t\tElement parentElement, String[] names, String indent) {\n\n\t\tStringBuilder sb = new StringBuilder();\n\n\t\tint maxNameLength = 0;\n\n\t\tfor (String name : names) {\n\t\t\tif (name.length() < maxNameLength) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tList<Element> elements = parentElement.elements(name);\n\n\t\t\tfor (Element element : elements) {\n\t\t\t\tElement commentElement = element.element(\"comment\");\n\n\t\t\t\tString comment = null;\n\n\t\t\t\tif (commentElement != null) {\n\t\t\t\t\tcomment = commentElement.getText();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcomment = element.getText();\n\t\t\t\t}\n\n\t\t\t\tif (!_initializeMissingJavadocs && Validator.isNull(comment)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tmaxNameLength = name.length();\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tint indentLength =_getIndentLength(indent) + maxNameLength;\n\n\t\tString maxNameIndent = \"\\t \";\n\n\t\tfor (int i = 0; i < maxNameLength; i++) {\n\t\t\tmaxNameIndent += \" \";\n\t\t}\n\n\t\tmaxNameIndent = StringUtil.replace(\n\t\t\tmaxNameIndent, StringPool.FOUR_SPACES, \"\\t\");\n\n\t\tfor (String name : names) {\n\t\t\tString curNameIndent = \" \";\n\n\t\t\tif (name.length() < maxNameLength) {\n\t\t\t\tint firstTab = 4 - (name.length() % 4);\n\n\t\t\t\tint delta = (maxNameLength + 1) - (name.length() + firstTab);\n\n\t\t\t\tif (delta == 0) {\n\t\t\t\t\tcurNameIndent = \"\\t\";\n\t\t\t\t}\n\t\t\t\telse if (delta < 0) {\n\t\t\t\t\tfor (int i = 0; i < (maxNameLength - name.length()); i++) {\n\t\t\t\t\t\tcurNameIndent += \" \";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (delta > 0) {\n\t\t\t\t\tcurNameIndent = \"\\t\";\n\n\t\t\t\t\tint numberOfTabs = delta / 4;\n\n\t\t\t\t\tif (numberOfTabs > 0) {\n\t\t\t\t\t\tfor (int i = 0; i < numberOfTabs; i++) {\n\t\t\t\t\t\t\tcurNameIndent += \"\\t\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tint numberOfSpaces = delta % 4;\n\n\t\t\t\t\tif (numberOfSpaces > 0) {\n\t\t\t\t\t\tfor (int i = 0; i < numberOfSpaces; i++) {\n\t\t\t\t\t\t\tcurNameIndent += \" \";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tList<Element> elements = parentElement.elements(name);\n\n\t\t\tfor (Element element : elements) {\n\t\t\t\tElement commentElement = element.element(\"comment\");\n\n\t\t\t\tString comment = null;\n\n\t\t\t\tif (commentElement != null) {\n\t\t\t\t\tcomment = commentElement.getText();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcomment = element.getText();\n\t\t\t\t}\n\n\t\t\t\tif (!_initializeMissingJavadocs && Validator.isNull(comment)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tsb.append(indent);\n\t\t\t\tsb.append(\" * @\");\n\t\t\t\tsb.append(name);\n\t\t\t\tsb.append(curNameIndent);\n\n\t\t\t\tif (commentElement != null) {\n\t\t\t\t\tcomment = element.elementText(\"name\") + \" \" + comment;\n\t\t\t\t}\n\n\t\t\t\tcomment = StringUtil.wrap(comment, 80 - indentLength - 5, \"\\n\");\n\n\t\t\t\tcomment = comment.trim();\n\n\t\t\t\tcomment = StringUtil.replace(\n\t\t\t\t\tcomment, \"\\n\", \"\\n\" + indent + \" *\" + maxNameIndent);\n\n\t\t\t\twhile (comment.contains(\" \\n\")) {\n\t\t\t\t\tcomment = StringUtil.replace(comment, \" \\n\", \"\\n\");\n\t\t\t\t}\n\n\t\t\t\twhile (comment.startsWith(\"\\n\")) {\n\t\t\t\t\tcomment = comment.substring(1, comment.length());\n\t\t\t\t}\n\n\t\t\t\tsb.append(comment);\n\t\t\t\tsb.append(\"\\n\");\n\t\t\t}\n\t\t}\n\n\t\treturn sb.toString();\n\t}","commit_id":"332685390feb339b580a531f713b0f2a72d6e465","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n\t * \n\t *\n\t * @param javaClass \n\t * @param content \n\t */\n\tprivate String _removeJavadocFromJava(\n\t\tJavaClass javaClass, String content) {\n\n\t\tSet<Integer> lineNumbers = new HashSet<Integer>();\n\n\t\tlineNumbers.add(javaClass.getLineNumber());\n\n\t\tJavaMethod[] javaMethods = javaClass.getMethods();\n\n\t\tfor (JavaMethod javaMethod : javaMethods) {\n\t\t\tlineNumbers.add(javaMethod.getLineNumber());\n\t\t}\n\n\t\tJavaField[] javaFields = javaClass.getFields();\n\n\t\tfor (JavaField javaField : javaFields) {\n\t\t\tlineNumbers.add(javaField.getLineNumber());\n\t\t}\n\n\t\tString[] lines = StringUtil.split(content, \"\\n\");\n\n\t\tfor (int lineNumber : lineNumbers) {\n\t\t\tint pos = lineNumber - 2;\n\n\t\t\tString line = lines[pos].trim();\n\n\t\t\tif (line.endsWith(\"*/\")) {\n\t\t\t\twhile (true) {\n\t\t\t\t\tlines[pos] = null;\n\n\t\t\t\t\tif (line.startsWith(\"/**\")) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tline = lines[--pos].trim();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tStringBuilder sb = new StringBuilder(content.length());\n\n\t\tfor (String line : lines) {\n\t\t\tif (line != null) {\n\t\t\t\tsb.append(line);\n\t\t\t\tsb.append(\"\\n\");\n\t\t\t}\n\t\t}\n\n\t\treturn sb.toString().trim();\n\t}","id":82029,"modified_method":"private String _removeJavadocFromJava(\n\t\tJavaClass javaClass, String content) {\n\n\t\tSet<Integer> lineNumbers = new HashSet<Integer>();\n\n\t\tlineNumbers.add(javaClass.getLineNumber());\n\n\t\tJavaMethod[] javaMethods = javaClass.getMethods();\n\n\t\tfor (JavaMethod javaMethod : javaMethods) {\n\t\t\tlineNumbers.add(javaMethod.getLineNumber());\n\t\t}\n\n\t\tJavaField[] javaFields = javaClass.getFields();\n\n\t\tfor (JavaField javaField : javaFields) {\n\t\t\tlineNumbers.add(javaField.getLineNumber());\n\t\t}\n\n\t\tString[] lines = StringUtil.split(content, \"\\n\");\n\n\t\tfor (int lineNumber : lineNumbers) {\n\t\t\tint pos = lineNumber - 2;\n\n\t\t\tString line = lines[pos].trim();\n\n\t\t\tif (line.endsWith(\"*/\")) {\n\t\t\t\twhile (true) {\n\t\t\t\t\tlines[pos] = null;\n\n\t\t\t\t\tif (line.startsWith(\"/**\")) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tline = lines[--pos].trim();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tStringBuilder sb = new StringBuilder(content.length());\n\n\t\tfor (String line : lines) {\n\t\t\tif (line != null) {\n\t\t\t\tsb.append(line);\n\t\t\t\tsb.append(\"\\n\");\n\t\t\t}\n\t\t}\n\n\t\treturn sb.toString().trim();\n\t}","commit_id":"332685390feb339b580a531f713b0f2a72d6e465","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n\t * \n\t *\n\t * @param javaMethod \n\t */\n\tprivate String _getMethodKey(JavaMethod javaMethod) {\n\t\tStringBuilder sb = new StringBuilder();\n\n\t\tsb.append(javaMethod.getName());\n\t\tsb.append(\"(\");\n\n\t\tJavaParameter[] javaParameters = javaMethod.getParameters();\n\n\t\tfor (JavaParameter javaParameter : javaParameters) {\n\t\t\tsb.append(javaParameter.getName());\n\t\t\tsb.append(\"|\");\n\t\t\tsb.append(javaParameter.getType().getValue());\n\t\t\tsb.append(\",\");\n\t\t}\n\n\t\tsb.append(\")\");\n\n\t\treturn sb.toString();\n\t}","id":82030,"modified_method":"private String _getMethodKey(JavaMethod javaMethod) {\n\t\tStringBuilder sb = new StringBuilder();\n\n\t\tsb.append(javaMethod.getName());\n\t\tsb.append(\"(\");\n\n\t\tJavaParameter[] javaParameters = javaMethod.getParameters();\n\n\t\tfor (JavaParameter javaParameter : javaParameters) {\n\t\t\tsb.append(javaParameter.getName());\n\t\t\tsb.append(\"|\");\n\t\t\tsb.append(javaParameter.getType().getValue());\n\t\t\tsb.append(\",\");\n\t\t}\n\n\t\tsb.append(\")\");\n\n\t\treturn sb.toString();\n\t}","commit_id":"332685390feb339b580a531f713b0f2a72d6e465","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n\t * \n\t *\n\t * @param javaField \n\t */\n\tprivate String _getFieldKey(JavaField javaField) {\n\t\treturn javaField.getName();\n\t}","id":82031,"modified_method":"private String _getFieldKey(JavaField javaField) {\n\t\treturn javaField.getName();\n\t}","commit_id":"332685390feb339b580a531f713b0f2a72d6e465","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n\t * \n\t *\n\t * @param indent \n\t */\n\tprivate int _getIndentLength(String indent) {\n\t\tint indentLength = 0;\n\n\t\tfor (char c : indent.toCharArray()) {\n\t\t\tif (c == '\\t') {\n\t\t\t\tindentLength = indentLength + 4;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tindentLength++;\n\t\t\t}\n\t\t}\n\n\t\treturn indentLength;\n\t}","id":82032,"modified_method":"private int _getIndentLength(String indent) {\n\t\tint indentLength = 0;\n\n\t\tfor (char c : indent.toCharArray()) {\n\t\t\tif (c == '\\t') {\n\t\t\t\tindentLength = indentLength + 4;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tindentLength++;\n\t\t\t}\n\t\t}\n\n\t\treturn indentLength;\n\t}","commit_id":"332685390feb339b580a531f713b0f2a72d6e465","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n\t * \n\t *\n\t * @param rootElement \n\t * @param javaClass \n\t */\n\tprivate void _addClassCommentElement(\n\t\tElement rootElement, JavaClass javaClass) {\n\n\t\tElement commentElement = rootElement.addElement(\"comment\");\n\n\t\tString comment = _getCDATA(javaClass);\n\n\t\tif (comment.startsWith(\"Copyright (c) 2000-2009 Liferay, Inc.\")) {\n\t\t\tcomment = StringPool.BLANK;\n\t\t}\n\n\t\tif (comment.startsWith(\n\t\t\t\t\"<a href=\\\"\" + javaClass.getName() + \".java.html\\\">\")) {\n\n\t\t\tint pos = comment.indexOf(\"<\/a>\");\n\n\t\t\tcomment = comment.substring(pos + 4).trim();\n\t\t}\n\n\t\tcommentElement.addCDATA(comment);\n\t}","id":82033,"modified_method":"private void _addClassCommentElement(\n\t\tElement rootElement, JavaClass javaClass) {\n\n\t\tElement commentElement = rootElement.addElement(\"comment\");\n\n\t\tString comment = _getCDATA(javaClass);\n\n\t\tif (comment.startsWith(\"Copyright (c) 2000-2009 Liferay, Inc.\")) {\n\t\t\tcomment = StringPool.BLANK;\n\t\t}\n\n\t\tif (comment.startsWith(\n\t\t\t\t\"<a href=\\\"\" + javaClass.getName() + \".java.html\\\">\")) {\n\n\t\t\tint pos = comment.indexOf(\"<\/a>\");\n\n\t\t\tcomment = comment.substring(pos + 4).trim();\n\t\t}\n\n\t\tcommentElement.addCDATA(comment);\n\t}","commit_id":"332685390feb339b580a531f713b0f2a72d6e465","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n\t * \n\t *\n\t * @param abstractJavaEntity \n\t */\n\tprivate String _getCDATA(AbstractJavaEntity abstractJavaEntity) {\n\t\treturn _getCDATA(abstractJavaEntity.getComment());\n\t}","id":82034,"modified_method":"private String _getCDATA(AbstractJavaEntity abstractJavaEntity) {\n\t\treturn _getCDATA(abstractJavaEntity.getComment());\n\t}","commit_id":"332685390feb339b580a531f713b0f2a72d6e465","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n\t * \n\t *\n\t * @param fileName \n\t * @param originalContent \n\t * @param javadocLessContent \n\t * @param document \n\t * @throws Exception \n\t */\n\tprivate void _updateJavaFromDocument(\n\t\t\tString fileName, String originalContent, String javadocLessContent,\n\t\t\tDocument document)\n\t\tthrows Exception {\n\n\t\tString[] lines = StringUtil.split(javadocLessContent, \"\\n\");\n\n\t\tJavaClass javaClass = _getJavaClass(\n\t\t\tfileName, new StringReader(javadocLessContent));\n\n\t\tElement rootElement = document.getRootElement();\n\n\t\tMap<Integer, String> commentsMap = new TreeMap<Integer, String>();\n\n\t\tcommentsMap.put(\n\t\t\tjavaClass.getLineNumber(),\n\t\t\t_getJavaClassComment(rootElement, javaClass));\n\n\t\tMap<String, Element> methodElementsMap = new HashMap<String, Element>();\n\n\t\tList<Element> methodElements = rootElement.elements(\"method\");\n\n\t\tfor (Element methodElement : methodElements) {\n\t\t\tString methodKey = _getMethodKey(methodElement);\n\n\t\t\tmethodElementsMap.put(methodKey, methodElement);\n\t\t}\n\n\t\tJavaMethod[] javaMethods = javaClass.getMethods();\n\n\t\tfor (JavaMethod javaMethod : javaMethods) {\n\t\t\tif (commentsMap.containsKey(javaMethod.getLineNumber())) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tcommentsMap.put(\n\t\t\t\tjavaMethod.getLineNumber(),\n\t\t\t\t_getJavaMethodComment(lines, methodElementsMap, javaMethod));\n\t\t}\n\n\t\tMap<String, Element> fieldElementsMap = new HashMap<String, Element>();\n\n\t\tList<Element> fieldElements = rootElement.elements(\"field\");\n\n\t\tfor (Element fieldElement : fieldElements) {\n\t\t\tString fieldKey = _getFieldKey(fieldElement);\n\n\t\t\tfieldElementsMap.put(fieldKey, fieldElement);\n\t\t}\n\n\t\tJavaField[] javaFields = javaClass.getFields();\n\n\t\tfor (JavaField javaField : javaFields) {\n\t\t\tif (commentsMap.containsKey(javaField.getLineNumber())) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tcommentsMap.put(\n\t\t\t\tjavaField.getLineNumber(),\n\t\t\t\t_getJavaFieldComment(lines, fieldElementsMap, javaField));\n\t\t}\n\n\t\tStringBuilder sb = new StringBuilder(javadocLessContent.length());\n\n\t\tfor (int lineNumber = 1; lineNumber <= lines.length; lineNumber++) {\n\t\t\tString line = lines[lineNumber - 1];\n\n\t\t\tString comments = commentsMap.get(lineNumber);\n\n\t\t\tif (comments != null) {\n\t\t\t\tsb.append(comments);\n\t\t\t}\n\n\t\t\tsb.append(line);\n\t\t\tsb.append(\"\\n\");\n\t\t}\n\n\t\tString formattedContent = sb.toString().trim();\n\n\t\tformattedContent = new String(\n\t\t\tformattedContent.getBytes(), StringPool.UTF8);\n\n\t\tif (!originalContent.equals(formattedContent)) {\n\t\t\tFile file = new File(_basedir + fileName);\n\n\t\t\t_fileUtil.write(file, formattedContent);\n\n\t\t\tSystem.out.println(\"Writing \" + file);\n\t\t}\n\t}","id":82035,"modified_method":"private void _updateJavaFromDocument(\n\t\t\tString fileName, String originalContent, String javadocLessContent,\n\t\t\tDocument document)\n\t\tthrows Exception {\n\n\t\tString[] lines = StringUtil.split(javadocLessContent, \"\\n\");\n\n\t\tJavaClass javaClass = _getJavaClass(\n\t\t\tfileName, new StringReader(javadocLessContent));\n\n\t\tElement rootElement = document.getRootElement();\n\n\t\tMap<Integer, String> commentsMap = new TreeMap<Integer, String>();\n\n\t\tcommentsMap.put(\n\t\t\tjavaClass.getLineNumber(),\n\t\t\t_getJavaClassComment(rootElement, javaClass));\n\n\t\tMap<String, Element> methodElementsMap = new HashMap<String, Element>();\n\n\t\tList<Element> methodElements = rootElement.elements(\"method\");\n\n\t\tfor (Element methodElement : methodElements) {\n\t\t\tString methodKey = _getMethodKey(methodElement);\n\n\t\t\tmethodElementsMap.put(methodKey, methodElement);\n\t\t}\n\n\t\tJavaMethod[] javaMethods = javaClass.getMethods();\n\n\t\tfor (JavaMethod javaMethod : javaMethods) {\n\t\t\tif (commentsMap.containsKey(javaMethod.getLineNumber())) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tcommentsMap.put(\n\t\t\t\tjavaMethod.getLineNumber(),\n\t\t\t\t_getJavaMethodComment(lines, methodElementsMap, javaMethod));\n\t\t}\n\n\t\tMap<String, Element> fieldElementsMap = new HashMap<String, Element>();\n\n\t\tList<Element> fieldElements = rootElement.elements(\"field\");\n\n\t\tfor (Element fieldElement : fieldElements) {\n\t\t\tString fieldKey = _getFieldKey(fieldElement);\n\n\t\t\tfieldElementsMap.put(fieldKey, fieldElement);\n\t\t}\n\n\t\tJavaField[] javaFields = javaClass.getFields();\n\n\t\tfor (JavaField javaField : javaFields) {\n\t\t\tif (commentsMap.containsKey(javaField.getLineNumber())) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tcommentsMap.put(\n\t\t\t\tjavaField.getLineNumber(),\n\t\t\t\t_getJavaFieldComment(lines, fieldElementsMap, javaField));\n\t\t}\n\n\t\tStringBuilder sb = new StringBuilder(javadocLessContent.length());\n\n\t\tfor (int lineNumber = 1; lineNumber <= lines.length; lineNumber++) {\n\t\t\tString line = lines[lineNumber - 1];\n\n\t\t\tString comments = commentsMap.get(lineNumber);\n\n\t\t\tif (comments != null) {\n\t\t\t\tsb.append(comments);\n\t\t\t}\n\n\t\t\tsb.append(line);\n\t\t\tsb.append(\"\\n\");\n\t\t}\n\n\t\tString formattedContent = sb.toString().trim();\n\n\t\tif (!originalContent.equals(formattedContent)) {\n\t\t\tFile file = new File(_basedir + fileName);\n\n\t\t\t_fileUtil.write(file, formattedContent.getBytes());\n\n\t\t\tSystem.out.println(\"Writing \" + file);\n\t\t}\n\t}","commit_id":"332685390feb339b580a531f713b0f2a72d6e465","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n\t * \n\t *\n\t * @param methodElement \n\t * @param exception \n\t * @param throwsDocletTags \n\t */\n\tprivate void _addThrowsElement(\n\t\tElement methodElement, Type exception, DocletTag[] throwsDocletTags) {\n\n\t\tString name = exception.getJavaClass().getName();\n\t\tString value = null;\n\n\t\tfor (DocletTag throwsDocletTag : throwsDocletTags) {\n\t\t\tString curValue = throwsDocletTag.getValue();\n\n\t\t\tif (!curValue.startsWith(name)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcurValue = value;\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tElement throwsElement = methodElement.addElement(\"throws\");\n\n\t\tDocUtil.add(throwsElement, \"name\", name);\n\t\tDocUtil.add(throwsElement, \"type\", exception.getValue());\n\n\t\tif (value != null) {\n\t\t\tvalue = value.substring(name.length());\n\t\t}\n\n\t\tElement commentElement = throwsElement.addElement(\"comment\");\n\n\t\tcommentElement.addCDATA(_getCDATA(value));\n\n\t}","id":82036,"modified_method":"private void _addThrowsElement(\n\t\tElement methodElement, Type exception, DocletTag[] throwsDocletTags) {\n\n\t\tString name = exception.getJavaClass().getName();\n\t\tString value = null;\n\n\t\tfor (DocletTag throwsDocletTag : throwsDocletTags) {\n\t\t\tString curValue = throwsDocletTag.getValue();\n\n\t\t\tif (!curValue.startsWith(name)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcurValue = value;\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tElement throwsElement = methodElement.addElement(\"throws\");\n\n\t\tDocUtil.add(throwsElement, \"name\", name);\n\t\tDocUtil.add(throwsElement, \"type\", exception.getValue());\n\n\t\tif (value != null) {\n\t\t\tvalue = value.substring(name.length());\n\t\t}\n\n\t\tElement commentElement = throwsElement.addElement(\"comment\");\n\n\t\tcommentElement.addCDATA(_getCDATA(value));\n\n\t}","commit_id":"332685390feb339b580a531f713b0f2a72d6e465","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n\t * \n\t *\n\t * @param parentElement \n\t * @param abstractJavaEntity \n\t * @param name \n\t */\n\tprivate void _addDocletElements(\n\t\tElement parentElement, AbstractJavaEntity abstractJavaEntity,\n\t\tString name) {\n\n\t\tDocletTag[] docletTags = abstractJavaEntity.getTagsByName(name);\n\n\t\tfor (DocletTag docletTag : docletTags) {\n\t\t\tString value = docletTag.getValue();\n\n\t\t\tif (name.equals(\"author\") || name.equals(\"see\") ||\n\t\t\t\tname.equals(\"since\") || name.equals(\"version\")) {\n\n\t\t\t\tif (value.startsWith(\"Raymond Aug\")) {\n\t\t\t\t\tvalue = \"Raymond Augé\";\n\t\t\t\t}\n\n\t\t\t\tDocUtil.add(parentElement, name, value);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tElement element = parentElement.addElement(name);\n\n\t\t\t\telement.addCDATA(value);\n\t\t\t}\n\t\t}\n\n\t\tif ((docletTags.length == 0) && name.equals(\"author\")) {\n\t\t\tDocUtil.add(parentElement, name, ServiceBuilder.AUTHOR);\n\t\t}\n\t}","id":82037,"modified_method":"private void _addDocletElements(\n\t\t\tElement parentElement, AbstractJavaEntity abstractJavaEntity,\n\t\t\tString name)\n\t\tthrows Exception {\n\n\t\tDocletTag[] docletTags = abstractJavaEntity.getTagsByName(name);\n\n\t\tfor (DocletTag docletTag : docletTags) {\n\t\t\tString value = docletTag.getValue();\n\n\t\t\tif (name.equals(\"author\") || name.equals(\"see\") ||\n\t\t\t\tname.equals(\"since\") || name.equals(\"version\")) {\n\n\t\t\t\tif (value.startsWith(\"Raymond Aug\")) {\n\t\t\t\t\tvalue = new String(\n\t\t\t\t\t\t\"Raymond Augé\".getBytes(), StringPool.UTF8);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tElement element = parentElement.addElement(name);\n\n\t\t\telement.addCDATA(value);\n\t\t}\n\n\t\tif ((docletTags.length == 0) && name.equals(\"author\")) {\n\t\t\tElement element = parentElement.addElement(name);\n\n\t\t\telement.addCDATA(ServiceBuilder.AUTHOR);\n\t\t}\n\t}","commit_id":"332685390feb339b580a531f713b0f2a72d6e465","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n\t * \n\t *\n\t * @param lines \n\t * @param fieldElementsMap \n\t * @param javaField \n\t */\n\tprivate String _getJavaFieldComment(\n\t\tString[] lines, Map<String, Element> fieldElementsMap,\n\t\tJavaField javaField) {\n\n\t\tString fieldKey = _getFieldKey(javaField);\n\n\t\tElement fieldElement = fieldElementsMap.get(fieldKey);\n\n\t\tif (fieldElement == null) {\n\t\t\treturn null;\n\t\t}\n\n\t\tString line = lines[javaField.getLineNumber() - 1];\n\n\t\tString indent = StringPool.BLANK;\n\n\t\tfor (char c : line.toCharArray()) {\n\t\t\tif (Character.isWhitespace(c)) {\n\t\t\t\tindent += c;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tStringBuilder sb = new StringBuilder();\n\n\t\tsb.append(indent);\n\t\tsb.append(\"/**\\n\");\n\n\t\tString comment = fieldElement.elementText(\"comment\");\n\n\t\tif (_initializeMissingJavadocs || Validator.isNotNull(comment)) {\n\t\t\tsb.append(_wrapText(comment, indent));\n\t\t\tsb.append(\"\\n\");\n\t\t}\n\n\t\tString docletTags = _addDocletTags(\n\t\t\tfieldElement,\n\t\t\tnew String[] {\"version\", \"see\", \"since\", \"deprecated\"}, indent);\n\n\t\tif (docletTags.length() > 0) {\n\t\t\tif (_initializeMissingJavadocs || Validator.isNotNull(comment)) {\n\t\t\t\tsb.append(indent);\n\t\t\t\tsb.append(\" *\\n\");\n\t\t\t}\n\n\t\t\tsb.append(docletTags);\n\t\t}\n\n\t\tsb.append(indent);\n\t\tsb.append(\" */\\n\");\n\n\t\tif (!_initializeMissingJavadocs && Validator.isNull(comment) &&\n\t\t\tValidator.isNull(docletTags)) {\n\n\t\t\treturn null;\n\t\t}\n\n\t\treturn sb.toString();\n\t}","id":82038,"modified_method":"private String _getJavaFieldComment(\n\t\tString[] lines, Map<String, Element> fieldElementsMap,\n\t\tJavaField javaField) {\n\n\t\tString fieldKey = _getFieldKey(javaField);\n\n\t\tElement fieldElement = fieldElementsMap.get(fieldKey);\n\n\t\tif (fieldElement == null) {\n\t\t\treturn null;\n\t\t}\n\n\t\tString line = lines[javaField.getLineNumber() - 1];\n\n\t\tString indent = StringPool.BLANK;\n\n\t\tfor (char c : line.toCharArray()) {\n\t\t\tif (Character.isWhitespace(c)) {\n\t\t\t\tindent += c;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tStringBuilder sb = new StringBuilder();\n\n\t\tsb.append(indent);\n\t\tsb.append(\"/**\\n\");\n\n\t\tString comment = fieldElement.elementText(\"comment\");\n\n\t\tif (_initializeMissingJavadocs || Validator.isNotNull(comment)) {\n\t\t\tsb.append(_wrapText(comment, indent));\n\t\t\tsb.append(\"\\n\");\n\t\t}\n\n\t\tString docletTags = _addDocletTags(\n\t\t\tfieldElement,\n\t\t\tnew String[] {\"version\", \"see\", \"since\", \"deprecated\"}, indent);\n\n\t\tif (docletTags.length() > 0) {\n\t\t\tif (_initializeMissingJavadocs || Validator.isNotNull(comment)) {\n\t\t\t\tsb.append(indent);\n\t\t\t\tsb.append(\" *\\n\");\n\t\t\t}\n\n\t\t\tsb.append(docletTags);\n\t\t}\n\n\t\tsb.append(indent);\n\t\tsb.append(\" */\\n\");\n\n\t\tif (!_initializeMissingJavadocs && Validator.isNull(comment) &&\n\t\t\tValidator.isNull(docletTags)) {\n\n\t\t\treturn null;\n\t\t}\n\n\t\treturn sb.toString();\n\t}","commit_id":"332685390feb339b580a531f713b0f2a72d6e465","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n\t * \n\t *\n\t * @param content \n\t */\n\tprivate boolean _isGenerated(String content) {\n\t\tif (content.contains(\"* @generated\")) {\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\treturn false;\n\t\t}\n\t}","id":82039,"modified_method":"private boolean _isGenerated(String content) {\n\t\tif (content.contains(\"* @generated\")) {\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\treturn false;\n\t\t}\n\t}","commit_id":"332685390feb339b580a531f713b0f2a72d6e465","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n\t * \n\t *\n\t * @param methodElement \n\t * @param javaMethod \n\t */\n\tprivate void _addReturnElement(\n\t\tElement methodElement, JavaMethod javaMethod) {\n\n\t\tType returns = javaMethod.getReturns();\n\n\t\tif ((returns == null) || returns.getValue().equals(\"void\")) {\n\t\t\treturn;\n\t\t}\n\n\t\t_addDocletElements(methodElement, javaMethod, \"return\");\n\t}","id":82040,"modified_method":"private void _addReturnElement(\n\t\t\tElement methodElement, JavaMethod javaMethod)\n\t\tthrows Exception {\n\n\t\tType returns = javaMethod.getReturns();\n\n\t\tif ((returns == null) || returns.getValue().equals(\"void\")) {\n\t\t\treturn;\n\t\t}\n\n\t\t_addDocletElements(methodElement, javaMethod, \"return\");\n\t}","commit_id":"332685390feb339b580a531f713b0f2a72d6e465","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n\t * \n\t *\n\t * @param rootElement \n\t * @param javaMethod \n\t */\n\tprivate void _addMethodElement(Element rootElement, JavaMethod javaMethod) {\n\t\tElement methodElement = rootElement.addElement(\"method\");\n\n\t\tDocUtil.add(methodElement, \"name\", javaMethod.getName());\n\n\t\tElement commentElement = methodElement.addElement(\"comment\");\n\n\t\tcommentElement.addCDATA(_getCDATA(javaMethod));\n\n\t\t_addDocletElements(methodElement, javaMethod, \"version\");\n\t\t_addParamElements(methodElement, javaMethod);\n\t\t_addReturnElement(methodElement, javaMethod);\n\t\t_addThrowsElements(methodElement, javaMethod);\n\t\t_addDocletElements(methodElement, javaMethod, \"see\");\n\t\t_addDocletElements(methodElement, javaMethod, \"since\");\n\t\t_addDocletElements(methodElement, javaMethod, \"deprecated\");\n\t}","id":82041,"modified_method":"private void _addMethodElement(Element rootElement, JavaMethod javaMethod)\n\t\tthrows Exception {\n\n\t\tElement methodElement = rootElement.addElement(\"method\");\n\n\t\tDocUtil.add(methodElement, \"name\", javaMethod.getName());\n\n\t\tElement commentElement = methodElement.addElement(\"comment\");\n\n\t\tcommentElement.addCDATA(_getCDATA(javaMethod));\n\n\t\t_addDocletElements(methodElement, javaMethod, \"version\");\n\t\t_addParamElements(methodElement, javaMethod);\n\t\t_addReturnElement(methodElement, javaMethod);\n\t\t_addThrowsElements(methodElement, javaMethod);\n\t\t_addDocletElements(methodElement, javaMethod, \"see\");\n\t\t_addDocletElements(methodElement, javaMethod, \"since\");\n\t\t_addDocletElements(methodElement, javaMethod, \"deprecated\");\n\t}","commit_id":"332685390feb339b580a531f713b0f2a72d6e465","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n\t * Returns the initial name components after the first marker of this command marker, \n\t * up to the operation (if any). Terminating \".\" is stripped. If there is only one initial \n\t * string component, the operation is interpreted as empty, and that component is returned \n\t * as the namespace. We assume we don't have any arguments in our byte array.\n\t * @return\n\t */\n\tpublic String getNamespace() {\n\t\tint occurcount = DataUtils.occurcount(_byteCommandMarker, COMMAND_PREFIX.length, COMMAND_SEPARATOR_BYTE);\n\t\tif (occurcount == 0) {\n\t\t\t// only one component\n\t\t\treturn new String(_byteCommandMarker, COMMAND_PREFIX.length, _byteCommandMarker.length-COMMAND_PREFIX.length);\n\t\t}\n\t\tint lastDot = DataUtils.byterindex(_byteCommandMarker, COMMAND_PREFIX.length, COMMAND_SEPARATOR_BYTE);\n\t\treturn new String(_byteCommandMarker, COMMAND_PREFIX.length, lastDot-1-COMMAND_PREFIX.length);\n\t}","id":82042,"modified_method":"/**\n\t * Returns the initial name components after the first marker of this command marker, \n\t * up to the operation (if any). Terminating \".\" is stripped. If there is only one initial \n\t * string component, the operation is interpreted as empty, and that component is returned \n\t * as the namespace. We assume we don't have any arguments in our byte array.\n\t * @return\n\t */\n\tpublic String getNamespace() {\n\t\tint occurcount = DataUtils.occurcount(_byteCommandMarker, COMMAND_PREFIX.length, COMMAND_SEPARATOR_BYTE);\n\t\tif (occurcount == 0) {\n\t\t\t// only one component\n\t\t\treturn new String(_byteCommandMarker, COMMAND_PREFIX.length, _byteCommandMarker.length-COMMAND_PREFIX.length);\n\t\t}\n\t\tint lastDot = DataUtils.byterindex(_byteCommandMarker, _byteCommandMarker.length-1, COMMAND_SEPARATOR_BYTE);\n\t\treturn new String(_byteCommandMarker, COMMAND_PREFIX.length, lastDot-1-COMMAND_PREFIX.length);\n\t}","commit_id":"95ff6d8b1bfe11c2ed99b9e4f1222a76dffa4158","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"public static String getLocalServiceName(ContentName nameWithServicePrefix) {\n\t\t\n\t\t// /localhost/SVC/<servicename>\n\t\tif (nameWithServicePrefix.count() < 3) {\n\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.FINER)) {\n\t\t\t\tLog.finer(Log.FAC_KEYS, \"Cannot get local service name, {0} does not have enough components.\",\n\t\t\t\t\t\tnameWithServicePrefix);\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (!ContextualNamesProfile.LOCALHOST_SCOPE.isPrefixOf(nameWithServicePrefix)) {\n\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.FINER)) {\n\t\t\t\tLog.finer(Log.FAC_KEYS, \"Cannot get local service name, {0} does not begin with local service prefix {1}.\",\n\t\t\t\t\t\tnameWithServicePrefix, ContextualNamesProfile.LOCALHOST_SCOPE);\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\t\n\t\tif (!SERVICE_NAME_COMPONENT_MARKER.isMarker(nameWithServicePrefix.component(ContextualNamesProfile.LOCALHOST_SCOPE.count()))) {\n\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.FINER)) {\n\t\t\t\tLog.finer(Log.FAC_KEYS, \"Cannot get local service name, {0} does not contain a service name component {1}.\",\n\t\t\t\t\t\tnameWithServicePrefix, ContentName.componentPrintURI(nameWithServicePrefix.component(ContextualNamesProfile.LOCALHOST_SCOPE.count())));\n\t\t\t}\n\t\t\treturn null;\t\t\t\n\t\t}\n\t\t\n\t\tbyte [] serviceNameComponent = nameWithServicePrefix.component(ContextualNamesProfile.LOCALHOST_SCOPE.count() + 1);\n\t\treturn ContentName.componentPrintNative(serviceNameComponent);\n\t}","id":82043,"modified_method":"public static String getLocalServiceName(ContentName nameWithServicePrefix) {\n\t\t\n\t\t// /localhost/SVC/<servicename>\n\t\tif (nameWithServicePrefix.count() < 3) {\n\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.FINER)) {\n\t\t\t\tLog.finer(Log.FAC_KEYS, \"Cannot get local service name, {0} does not have enough components.\",\n\t\t\t\t\t\tnameWithServicePrefix);\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (!ServiceDiscoveryProfile.LOCALHOST_SCOPE.isMarker(nameWithServicePrefix.component(SCOPE_COMPONENT))) {\n\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.FINER)) {\n\t\t\t\tLog.finer(Log.FAC_KEYS, \"Cannot get local service name, {0} does not begin with local service prefix {1}.\",\n\t\t\t\t\t\tnameWithServicePrefix, ServiceDiscoveryProfile.LOCALHOST_SCOPE);\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\t\n\t\tif (!SERVICE_NAME_COMPONENT_MARKER.isMarker(\n\t\t\t\t\tnameWithServicePrefix.component(SERVICE_MARKER_COMPONENT))) {\n\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.FINER)) {\n\t\t\t\tLog.finer(Log.FAC_KEYS, \"Cannot get local service name, {0} does not contain a service name component {1}.\",\n\t\t\t\t\t\tnameWithServicePrefix, \n\t\t\t\t\t\tContentName.componentPrintURI(nameWithServicePrefix.component(SERVICE_MARKER_COMPONENT)));\n\t\t\t}\n\t\t\treturn null;\t\t\t\n\t\t}\n\t\t\n\t\tbyte [] serviceNameComponent = \n\t\t\tnameWithServicePrefix.component(SERVICE_NAME_COMPONENT);\n\t\treturn ContentName.componentPrintNative(serviceNameComponent);\n\t}","commit_id":"95ff6d8b1bfe11c2ed99b9e4f1222a76dffa4158","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"public static ContentName localServiceName(String service) {\n\t\treturn new ContentName(ContextualNamesProfile.LOCALHOST_SCOPE, SERVICE_NAME_COMPONENT_MARKER.getBytes(), \n\t\t\t\tContentName.componentParseNative(service));\n\t}","id":82044,"modified_method":"public static ContentName localServiceName(String service) {\n\t\treturn new ContentName(\n\t\t\tnew byte [][]{ServiceDiscoveryProfile.LOCALHOST_SCOPE.getBytes(), \n\t\t\t\t\t\t  SERVICE_NAME_COMPONENT_MARKER.getBytes(), \n\t\t\t\t\t\t  ContentName.componentParseNative(service)});\n\t}","commit_id":"95ff6d8b1bfe11c2ed99b9e4f1222a76dffa4158","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"/**\n     * Get a JwtClaims object.\n     */\n    public JwtClaims getJwtClaims(JWTClaimsProviderParameters jwtClaimsProviderParameters) {\n        \n        JwtClaims claims = new JwtClaims();\n        claims.setSubject(getSubjectName(jwtClaimsProviderParameters));\n        claims.setTokenId(UUID.randomUUID().toString());\n        claims.setIssuer(\"DoubleItSTSIssuer\");\n        \n        Date currentDate = new Date();\n        claims.setIssuedAt(currentDate.getTime() / 1000L);\n        long currentTime = currentDate.getTime() + 300L * 1000L;\n        currentDate.setTime(currentTime);\n        claims.setExpiryTime(currentDate.getTime() / 1000L);\n        \n        return claims;\n    }","id":82045,"modified_method":"/**\n     * Get a JwtClaims object.\n     */\n    public JwtClaims getJwtClaims(JWTClaimsProviderParameters jwtClaimsProviderParameters) {\n        \n        JwtClaims claims = new JwtClaims();\n        claims.setSubject(getSubjectName(jwtClaimsProviderParameters));\n        claims.setTokenId(UUID.randomUUID().toString());\n        \n        // Set the Issuer\n        String issuer = jwtClaimsProviderParameters.getIssuer();\n        if (issuer == null) {\n            STSPropertiesMBean stsProperties = jwtClaimsProviderParameters.getProviderParameters().getStsProperties();\n            claims.setIssuer(stsProperties.getIssuer());\n        } else {\n            claims.setIssuer(issuer);\n        }\n        \n        Date currentDate = new Date();\n        claims.setIssuedAt(currentDate.getTime() / 1000L);\n        long currentTime = currentDate.getTime() + 300L * 1000L;\n        currentDate.setTime(currentTime);\n        claims.setExpiryTime(currentDate.getTime() / 1000L);\n        \n        return claims;\n    }","commit_id":"9f5675074059afd4c6d0ef48003f884fc0a0e860","url":"https://github.com/apache/cxf"},{"original_method":"/**\n     * Create a token given a TokenProviderParameters\n     */\n    public TokenProviderResponse createToken(TokenProviderParameters tokenParameters) {\n        //KeyRequirements keyRequirements = tokenParameters.getKeyRequirements();\n        TokenRequirements tokenRequirements = tokenParameters.getTokenRequirements();\n        if (LOG.isLoggable(Level.FINE)) {\n            LOG.fine(\"Handling token of type: \" + tokenRequirements.getTokenType());\n        }\n        \n        // Get the claims\n        JWTClaimsProviderParameters jwtClaimsProviderParameters = new JWTClaimsProviderParameters();\n        jwtClaimsProviderParameters.setProviderParameters(tokenParameters);\n        \n        JwtClaims claims = jwtClaimsProvider.getJwtClaims(jwtClaimsProviderParameters);\n        \n        try {\n            /*\n            Document doc = DOMUtils.createDocument();\n            SamlAssertionWrapper assertion = createSamlToken(tokenParameters, secret, doc);\n            Element token = assertion.toDOM(doc);\n            \n            // set the token in cache (only if the token is signed)\n            byte[] signatureValue = assertion.getSignatureValue();\n            if (tokenParameters.getTokenStore() != null && signatureValue != null\n                && signatureValue.length > 0) {\n                DateTime validTill = null;\n                if (assertion.getSamlVersion().equals(SAMLVersion.VERSION_20)) {\n                    validTill = assertion.getSaml2().getConditions().getNotOnOrAfter();\n                } else {\n                    validTill = assertion.getSaml1().getConditions().getNotOnOrAfter();\n                }\n                \n                SecurityToken securityToken = \n                    CacheUtils.createSecurityTokenForStorage(token, assertion.getId(), \n                        validTill.toDate(), tokenParameters.getPrincipal(), tokenParameters.getRealm(),\n                        tokenParameters.getTokenRequirements().getRenewing());\n                CacheUtils.storeTokenInCache(\n                    securityToken, tokenParameters.getTokenStore(), signatureValue);\n            }\n            */\n            \n            JwtToken token = new JwtToken(claims);\n            \n            String tokenData = signToken(token, null, tokenParameters.getStsProperties(), \n                      tokenParameters.getTokenRequirements());\n            \n            TokenProviderResponse response = new TokenProviderResponse();\n            response.setToken(tokenData);\n            \n            response.setTokenId(claims.getTokenId());\n            \n            if (claims.getIssuedAt() > 0) {\n                response.setCreated(new Date(claims.getIssuedAt() * 1000L));\n            }\n            if (claims.getExpiryTime() > 0) {\n                response.setExpires(new Date(claims.getExpiryTime() * 1000L));\n            }\n            \n            LOG.fine(\"JWT Token successfully created\");\n            return response;\n        } catch (Exception e) {\n            e.printStackTrace();\n            LOG.log(Level.WARNING, \"\", e);\n            throw new STSException(\"Can't serialize JWT token\", e, STSException.REQUEST_FAILED);\n        }\n    }","id":82046,"modified_method":"/**\n     * Create a token given a TokenProviderParameters\n     */\n    public TokenProviderResponse createToken(TokenProviderParameters tokenParameters) {\n        //KeyRequirements keyRequirements = tokenParameters.getKeyRequirements();\n        TokenRequirements tokenRequirements = tokenParameters.getTokenRequirements();\n        if (LOG.isLoggable(Level.FINE)) {\n            LOG.fine(\"Handling token of type: \" + tokenRequirements.getTokenType());\n        }\n        \n        String realm = tokenParameters.getRealm();\n        RealmProperties jwtRealm = null;\n        if (realm != null && realmMap.containsKey(realm)) {\n            jwtRealm = realmMap.get(realm);\n        }\n        \n        // Get the claims\n        JWTClaimsProviderParameters jwtClaimsProviderParameters = new JWTClaimsProviderParameters();\n        jwtClaimsProviderParameters.setProviderParameters(tokenParameters);\n        if (jwtRealm != null) {\n            jwtClaimsProviderParameters.setIssuer(jwtRealm.getIssuer());\n        }\n        \n        JwtClaims claims = jwtClaimsProvider.getJwtClaims(jwtClaimsProviderParameters);\n        \n        try {\n            /*\n            Document doc = DOMUtils.createDocument();\n            SamlAssertionWrapper assertion = createSamlToken(tokenParameters, secret, doc);\n            Element token = assertion.toDOM(doc);\n            \n            // set the token in cache (only if the token is signed)\n            byte[] signatureValue = assertion.getSignatureValue();\n            if (tokenParameters.getTokenStore() != null && signatureValue != null\n                && signatureValue.length > 0) {\n                DateTime validTill = null;\n                if (assertion.getSamlVersion().equals(SAMLVersion.VERSION_20)) {\n                    validTill = assertion.getSaml2().getConditions().getNotOnOrAfter();\n                } else {\n                    validTill = assertion.getSaml1().getConditions().getNotOnOrAfter();\n                }\n                \n                SecurityToken securityToken = \n                    CacheUtils.createSecurityTokenForStorage(token, assertion.getId(), \n                        validTill.toDate(), tokenParameters.getPrincipal(), tokenParameters.getRealm(),\n                        tokenParameters.getTokenRequirements().getRenewing());\n                CacheUtils.storeTokenInCache(\n                    securityToken, tokenParameters.getTokenStore(), signatureValue);\n            }\n            */\n            \n            JwtToken token = new JwtToken(claims);\n            \n            String tokenData = signToken(token, jwtRealm, tokenParameters.getStsProperties(), \n                      tokenParameters.getTokenRequirements());\n            \n            TokenProviderResponse response = new TokenProviderResponse();\n            response.setToken(tokenData);\n            \n            response.setTokenId(claims.getTokenId());\n            \n            if (claims.getIssuedAt() > 0) {\n                response.setCreated(new Date(claims.getIssuedAt() * 1000L));\n            }\n            if (claims.getExpiryTime() > 0) {\n                response.setExpires(new Date(claims.getExpiryTime() * 1000L));\n            }\n            \n            LOG.fine(\"JWT Token successfully created\");\n            return response;\n        } catch (Exception e) {\n            e.printStackTrace();\n            LOG.log(Level.WARNING, \"\", e);\n            throw new STSException(\"Can't serialize JWT token\", e, STSException.REQUEST_FAILED);\n        }\n    }","commit_id":"9f5675074059afd4c6d0ef48003f884fc0a0e860","url":"https://github.com/apache/cxf"},{"original_method":"private String signToken(\n        JwtToken token, \n        RealmProperties jwtRealm,\n        STSPropertiesMBean stsProperties,\n        TokenRequirements tokenRequirements\n    ) throws Exception {\n        \n        Properties signingProperties = new Properties();\n        \n        if (signToken) {\n            // Initialise signature objects with defaults of STSPropertiesMBean\n            Crypto signatureCrypto = stsProperties.getSignatureCrypto();\n            CallbackHandler callbackHandler = stsProperties.getCallbackHandler();\n            SignatureProperties signatureProperties = stsProperties.getSignatureProperties();\n            String alias = stsProperties.getSignatureUsername();\n\n            if (jwtRealm != null) {\n                // If SignatureCrypto configured in realm then\n                // callbackhandler and alias of STSPropertiesMBean is ignored\n                if (jwtRealm.getSignatureCrypto() != null) {\n                    LOG.fine(\"SAMLRealm signature keystore used\");\n                    signatureCrypto = jwtRealm.getSignatureCrypto();\n                    callbackHandler = jwtRealm.getCallbackHandler();\n                    alias = jwtRealm.getSignatureAlias();\n                }\n                // SignatureProperties can be defined independently of SignatureCrypto\n                if (jwtRealm.getSignatureProperties() != null) {\n                    signatureProperties = jwtRealm.getSignatureProperties();\n                }\n            }\n\n            // Get the signature algorithm to use - for now we don't allow the client to ask\n            // for a particular signature algorithm, as with SAML\n            String signatureAlgorithm = signatureProperties.getSignatureAlgorithm();\n            try {\n                SignatureAlgorithm.getAlgorithm(signatureAlgorithm);\n            } catch (IllegalArgumentException ex) {\n                signatureAlgorithm = SignatureAlgorithm.RS256.name();\n            }\n\n            // If alias not defined, get the default of the SignatureCrypto\n            if ((alias == null || \"\".equals(alias)) && (signatureCrypto != null)) {\n                alias = signatureCrypto.getDefaultX509Identifier();\n                if (LOG.isLoggable(Level.FINE)) {\n                    LOG.fine(\"Signature alias is null so using default alias: \" + alias);\n                }\n            }\n            // Get the password\n            WSPasswordCallback[] cb = {new WSPasswordCallback(alias, WSPasswordCallback.SIGNATURE)};\n            callbackHandler.handle(cb);\n            String password = cb[0].getPassword();\n\n            signingProperties.put(JoseConstants.RSSEC_SIGNATURE_ALGORITHM, signatureAlgorithm);\n            signingProperties.put(JoseConstants.RSSEC_KEY_STORE_ALIAS, alias);\n            signingProperties.put(JoseConstants.RSSEC_KEY_PSWD, password);\n            \n            if (!(signatureCrypto instanceof Merlin)) {\n                throw new STSException(\"Can't get the keystore\", STSException.REQUEST_FAILED);\n            }\n            KeyStore keystore = ((Merlin)signatureCrypto).getKeyStore();\n            signingProperties.put(JoseConstants.RSSEC_KEY_STORE, keystore);\n            \n            JwsJwtCompactProducer jws = new JwsJwtCompactProducer(token);\n            jws.setSignatureProperties(signingProperties);\n            \n            Message m = PhaseInterceptorChain.getCurrentMessage();\n            JwsSignatureProvider sigProvider = \n                JwsUtils.loadSignatureProvider(m, signingProperties, token.getJwsHeaders(), false);\n            token.getJwsHeaders().setSignatureAlgorithm(sigProvider.getAlgorithm());\n            \n            return jws.signWith(sigProvider);\n        } else {\n            signingProperties.put(JoseConstants.RSSEC_SIGNATURE_ALGORITHM, \"none\");\n            \n            JwsJwtCompactProducer jws = new JwsJwtCompactProducer(token);\n            jws.setSignatureProperties(signingProperties);\n            return jws.getSignedEncodedJws();\n        }\n        \n    }","id":82047,"modified_method":"private String signToken(\n        JwtToken token, \n        RealmProperties jwtRealm,\n        STSPropertiesMBean stsProperties,\n        TokenRequirements tokenRequirements\n    ) throws Exception {\n        \n        Properties signingProperties = new Properties();\n        \n        if (signToken) {\n            // Initialise signature objects with defaults of STSPropertiesMBean\n            Crypto signatureCrypto = stsProperties.getSignatureCrypto();\n            CallbackHandler callbackHandler = stsProperties.getCallbackHandler();\n            SignatureProperties signatureProperties = stsProperties.getSignatureProperties();\n            String alias = stsProperties.getSignatureUsername();\n\n            if (jwtRealm != null) {\n                // If SignatureCrypto configured in realm then\n                // callbackhandler and alias of STSPropertiesMBean is ignored\n                if (jwtRealm.getSignatureCrypto() != null) {\n                    LOG.fine(\"SAMLRealm signature keystore used\");\n                    signatureCrypto = jwtRealm.getSignatureCrypto();\n                    callbackHandler = jwtRealm.getCallbackHandler();\n                    alias = jwtRealm.getSignatureAlias();\n                }\n                // SignatureProperties can be defined independently of SignatureCrypto\n                if (jwtRealm.getSignatureProperties() != null) {\n                    signatureProperties = jwtRealm.getSignatureProperties();\n                }\n            }\n\n            // Get the signature algorithm to use - for now we don't allow the client to ask\n            // for a particular signature algorithm, as with SAML\n            String signatureAlgorithm = signatureProperties.getSignatureAlgorithm();\n            try {\n                SignatureAlgorithm.getAlgorithm(signatureAlgorithm);\n            } catch (IllegalArgumentException ex) {\n                signatureAlgorithm = SignatureAlgorithm.RS256.name();\n            }\n\n            // If alias not defined, get the default of the SignatureCrypto\n            if ((alias == null || \"\".equals(alias)) && (signatureCrypto != null)) {\n                alias = signatureCrypto.getDefaultX509Identifier();\n                if (LOG.isLoggable(Level.FINE)) {\n                    LOG.fine(\"Signature alias is null so using default alias: \" + alias);\n                }\n            }\n            // Get the password\n            WSPasswordCallback[] cb = {new WSPasswordCallback(alias, WSPasswordCallback.SIGNATURE)};\n            callbackHandler.handle(cb);\n            String password = cb[0].getPassword();\n\n            signingProperties.put(JoseConstants.RSSEC_SIGNATURE_ALGORITHM, signatureAlgorithm);\n            if (alias != null) {\n                signingProperties.put(JoseConstants.RSSEC_KEY_STORE_ALIAS, alias);\n            }\n            if (password != null) {\n                signingProperties.put(JoseConstants.RSSEC_KEY_PSWD, password);\n            } else {\n                throw new STSException(\"Can't get the password\", STSException.REQUEST_FAILED);\n            }\n            \n            if (!(signatureCrypto instanceof Merlin)) {\n                throw new STSException(\"Can't get the keystore\", STSException.REQUEST_FAILED);\n            }\n            KeyStore keystore = ((Merlin)signatureCrypto).getKeyStore();\n            signingProperties.put(JoseConstants.RSSEC_KEY_STORE, keystore);\n            \n            JwsJwtCompactProducer jws = new JwsJwtCompactProducer(token);\n            jws.setSignatureProperties(signingProperties);\n            \n            Message m = PhaseInterceptorChain.getCurrentMessage();\n            JwsSignatureProvider sigProvider = \n                JwsUtils.loadSignatureProvider(m, signingProperties, token.getJwsHeaders(), false);\n            token.getJwsHeaders().setSignatureAlgorithm(sigProvider.getAlgorithm());\n            \n            return jws.signWith(sigProvider);\n        } else {\n            signingProperties.put(JoseConstants.RSSEC_SIGNATURE_ALGORITHM, \"none\");\n            \n            JwsJwtCompactProducer jws = new JwsJwtCompactProducer(token);\n            jws.setSignatureProperties(signingProperties);\n            return jws.getSignedEncodedJws();\n        }\n        \n    }","commit_id":"9f5675074059afd4c6d0ef48003f884fc0a0e860","url":"https://github.com/apache/cxf"},{"original_method":"protected SecurePart addIssuedToken(IssuedToken token, SecurityToken secToken, \n                                  boolean signed, boolean endorsing) {\n        if (isTokenRequired(token.getIncludeTokenType())) {\n            final Element el = secToken.getToken();\n            \n            String samlAction = ConfigurationConstants.SAML_TOKEN_UNSIGNED;\n            if (signed || endorsing) {\n                samlAction = ConfigurationConstants.SAML_TOKEN_SIGNED;\n            }\n            Map<String, Object> config = getProperties();\n            if (config.containsKey(ConfigurationConstants.ACTION)) {\n                String action = (String)config.get(ConfigurationConstants.ACTION);\n                config.put(ConfigurationConstants.ACTION, action + \" \" + samlAction);\n            } else {\n                config.put(ConfigurationConstants.ACTION, samlAction);\n            }\n            \n            // Mock up a Subject so that the SAMLTokenOutProcessor can get access to the certificate\n            final SubjectBean subjectBean;\n            if (signed || endorsing) {\n                KeyInfoBean keyInfo = new KeyInfoBean();\n                keyInfo.setCertificate(secToken.getX509Certificate());\n                keyInfo.setEphemeralKey(secToken.getSecret());\n                subjectBean = new SubjectBean(\"\", \"\", \"\");\n                subjectBean.setKeyInfo(keyInfo);\n            } else {\n                subjectBean = null;\n            }\n            \n            CallbackHandler callbackHandler = new CallbackHandler() {\n\n                @Override\n                public void handle(Callback[] callbacks) {\n                    for (Callback callback : callbacks) {\n                        if (callback instanceof SAMLCallback) {\n                            SAMLCallback samlCallback = (SAMLCallback)callback;\n                            samlCallback.setAssertionElement(el);\n                            samlCallback.setSubject(subjectBean);\n                            \n                            if (WSConstants.SAML_NS.equals(el.getNamespaceURI())) {\n                                samlCallback.setSamlVersion(SAMLVersion.VERSION_11);\n                            } else {\n                                samlCallback.setSamlVersion(SAMLVersion.VERSION_20);\n                            }\n                        }\n                    }\n                }\n                \n            };\n            config.put(ConfigurationConstants.SAML_CALLBACK_REF, callbackHandler);\n            \n            QName qname = WSSConstants.TAG_saml2_Assertion;\n            if (WSConstants.SAML_NS.equals(el.getNamespaceURI())) {\n                qname = WSSConstants.TAG_saml_Assertion;\n            }\n            \n            return new SecurePart(qname, Modifier.Element);\n        }\n        \n        return null;\n    }","id":82048,"modified_method":"protected SecurePart addIssuedToken(IssuedToken token, SecurityToken secToken, \n                                  boolean signed, boolean endorsing) {\n        if (isTokenRequired(token.getIncludeTokenType())) {\n            final Element el = secToken.getToken();\n            \n            if (el != null && \"Assertion\".equals(el.getLocalName())\n                && (WSSConstants.NS_SAML.equals(el.getNamespaceURI())\n                || WSSConstants.NS_SAML2.equals(el.getNamespaceURI()))) {\n                String samlAction = ConfigurationConstants.SAML_TOKEN_UNSIGNED;\n                if (signed || endorsing) {\n                    samlAction = ConfigurationConstants.SAML_TOKEN_SIGNED;\n                }\n                Map<String, Object> config = getProperties();\n                if (config.containsKey(ConfigurationConstants.ACTION)) {\n                    String action = (String)config.get(ConfigurationConstants.ACTION);\n                    config.put(ConfigurationConstants.ACTION, action + \" \" + samlAction);\n                } else {\n                    config.put(ConfigurationConstants.ACTION, samlAction);\n                }\n                \n                // Mock up a Subject so that the SAMLTokenOutProcessor can get access to the certificate\n                final SubjectBean subjectBean;\n                if (signed || endorsing) {\n                    KeyInfoBean keyInfo = new KeyInfoBean();\n                    keyInfo.setCertificate(secToken.getX509Certificate());\n                    keyInfo.setEphemeralKey(secToken.getSecret());\n                    subjectBean = new SubjectBean(\"\", \"\", \"\");\n                    subjectBean.setKeyInfo(keyInfo);\n                } else {\n                    subjectBean = null;\n                }\n                \n                CallbackHandler callbackHandler = new CallbackHandler() {\n    \n                    @Override\n                    public void handle(Callback[] callbacks) {\n                        for (Callback callback : callbacks) {\n                            if (callback instanceof SAMLCallback) {\n                                SAMLCallback samlCallback = (SAMLCallback)callback;\n                                samlCallback.setAssertionElement(el);\n                                samlCallback.setSubject(subjectBean);\n                                \n                                if (WSConstants.SAML_NS.equals(el.getNamespaceURI())) {\n                                    samlCallback.setSamlVersion(SAMLVersion.VERSION_11);\n                                } else {\n                                    samlCallback.setSamlVersion(SAMLVersion.VERSION_20);\n                                }\n                            }\n                        }\n                    }\n                    \n                };\n                config.put(ConfigurationConstants.SAML_CALLBACK_REF, callbackHandler);\n                \n                QName qname = WSSConstants.TAG_saml2_Assertion;\n                if (WSConstants.SAML_NS.equals(el.getNamespaceURI())) {\n                    qname = WSSConstants.TAG_saml_Assertion;\n                }\n                \n                return new SecurePart(qname, Modifier.Element);\n            } else if (isRequestor()) {\n                // An Encrypted Token...just include it as is\n                Map<String, Object> config = getProperties();\n                String actionToPerform = ConfigurationConstants.CUSTOM_TOKEN;\n                if (config.containsKey(ConfigurationConstants.ACTION)) {\n                    String action = (String)config.get(ConfigurationConstants.ACTION);\n                    config.put(ConfigurationConstants.ACTION, action + \" \" + actionToPerform);\n                } else {\n                    config.put(ConfigurationConstants.ACTION, actionToPerform);\n                }\n            }\n        }\n        \n        return null;\n    }","commit_id":"cb20bf3263f8afc3248c479634a40f4579901186","url":"https://github.com/apache/cxf"},{"original_method":"private void doResults(SoapMessage msg, List<SecurityEvent> incomingSecurityEventList) throws WSSecurityException {\n        for (SecurityEvent event : incomingSecurityEventList) {\n            SubjectAndPrincipalSecurityToken token = getSubjectPrincipalToken(event);\n            if (token != null) {\n                Principal p = token.getPrincipal();\n                Subject subject = token.getSubject();\n                \n                if (subject != null) {\n                    String roleClassifier = \n                        (String)msg.getContextualProperty(SecurityConstants.SUBJECT_ROLE_CLASSIFIER);\n                    if (roleClassifier != null && !\"\".equals(roleClassifier)) {\n                        String roleClassifierType = \n                            (String)msg.getContextualProperty(SecurityConstants.SUBJECT_ROLE_CLASSIFIER_TYPE);\n                        if (roleClassifierType == null || \"\".equals(roleClassifierType)) {\n                            roleClassifierType = \"prefix\";\n                        }\n                        msg.put(\n                            SecurityContext.class, \n                            new RolePrefixSecurityContextImpl(subject, roleClassifier, roleClassifierType)\n                        );\n                    } else {\n                        msg.put(SecurityContext.class, new DefaultSecurityContext(subject));\n                    }\n                    break;\n                } else if (p != null && isSecurityContextPrincipal(p, incomingSecurityEventList)) {\n\n                    Object receivedAssertion = null;\n                    \n                    List<String> roles = null;\n                    if (event.getSecurityEventType() == WSSecurityEventConstants.SamlToken) {\n                        String roleAttributeName = (String)msg.getContextualProperty(\n                                SecurityConstants.SAML_ROLE_ATTRIBUTENAME);\n                        if (roleAttributeName == null || roleAttributeName.length() == 0) {\n                            roleAttributeName = SAML_ROLE_ATTRIBUTENAME_DEFAULT;\n                        }\n                        \n                        SamlTokenSecurityEvent samlEvent = (SamlTokenSecurityEvent)event;\n                        receivedAssertion = samlEvent.getSamlAssertionWrapper();\n                        roles = SAMLUtils.parseRolesInAssertion(receivedAssertion, roleAttributeName);\n                        SAMLSecurityContext context = createSecurityContext(p, roles);\n                        context.setIssuer(SAMLUtils.getIssuer(receivedAssertion));\n                        context.setAssertionElement(SAMLUtils.getAssertionElement(receivedAssertion));\n                        msg.put(SecurityContext.class, context);\n                    } else {\n                        msg.put(SecurityContext.class, createSecurityContext(p));\n                    }\n                    break;\n                }\n            }\n        }\n    }","id":82049,"modified_method":"private void doResults(SoapMessage msg, List<SecurityEvent> incomingSecurityEventList) throws WSSecurityException {\n        for (SecurityEvent event : incomingSecurityEventList) {\n            SubjectAndPrincipalSecurityToken token = getSubjectPrincipalToken(event);\n            if (token != null) {\n                Principal p = token.getPrincipal();\n                Subject subject = token.getSubject();\n                \n                if (subject != null) {\n                    String roleClassifier = \n                        (String)msg.getContextualProperty(SecurityConstants.SUBJECT_ROLE_CLASSIFIER);\n                    if (roleClassifier != null && !\"\".equals(roleClassifier)) {\n                        String roleClassifierType = \n                            (String)msg.getContextualProperty(SecurityConstants.SUBJECT_ROLE_CLASSIFIER_TYPE);\n                        if (roleClassifierType == null || \"\".equals(roleClassifierType)) {\n                            roleClassifierType = \"prefix\";\n                        }\n                        msg.put(\n                            SecurityContext.class, \n                            new RolePrefixSecurityContextImpl(subject, roleClassifier, roleClassifierType)\n                        );\n                    } else {\n                        msg.put(SecurityContext.class, new DefaultSecurityContext(subject));\n                    }\n                    break;\n                } else if (p != null && isSecurityContextPrincipal(p, incomingSecurityEventList)) {\n\n                    Object receivedAssertion = null;\n                    \n                    List<String> roles = null;\n                    if (event.getSecurityEventType() == WSSecurityEventConstants.SamlToken) {\n                        String roleAttributeName = (String)msg.getContextualProperty(\n                                SecurityConstants.SAML_ROLE_ATTRIBUTENAME);\n                        if (roleAttributeName == null || roleAttributeName.length() == 0) {\n                            roleAttributeName = SAML_ROLE_ATTRIBUTENAME_DEFAULT;\n                        }\n                        \n                        SamlTokenSecurityEvent samlEvent = (SamlTokenSecurityEvent)event;\n                        receivedAssertion = samlEvent.getSamlAssertionWrapper();\n                        if (receivedAssertion != null) {\n                            roles = SAMLUtils.parseRolesInAssertion(receivedAssertion, roleAttributeName);\n                            SAMLSecurityContext context = createSecurityContext(p, roles);\n                            context.setIssuer(SAMLUtils.getIssuer(receivedAssertion));\n                            context.setAssertionElement(SAMLUtils.getAssertionElement(receivedAssertion));\n                            msg.put(SecurityContext.class, context);\n                        }\n                    } else {\n                        msg.put(SecurityContext.class, createSecurityContext(p));\n                    }\n                    break;\n                }\n            }\n        }\n    }","commit_id":"cb20bf3263f8afc3248c479634a40f4579901186","url":"https://github.com/apache/cxf"},{"original_method":"protected void processCodeResponse(ContainerRequestContext rc, \n                                       UriInfo ui,\n                                       MultivaluedMap<String, String> requestParams) {\n        \n        MultivaluedMap<String, String> state = null;\n        if (clientStateManager != null) {\n            state = clientStateManager.fromRedirectState(mc, requestParams);\n        }\n        \n        String codeParam = requestParams.getFirst(OAuthConstants.AUTHORIZATION_CODE_VALUE);\n        ClientAccessToken at = null;\n        if (codeParam != null) {\n            AuthorizationCodeGrant grant = new AuthorizationCodeGrant(codeParam, getAbsoluteRedirectUri(ui));\n            grant.setCodeVerifier(state.getFirst(OAuthConstants.AUTHORIZATION_CODE_VERIFIER));\n            at = OAuthClientUtils.getAccessToken(accessTokenServiceClient, consumer, grant);\n        }\n        ClientTokenContext tokenContext = initializeClientTokenContext(rc, at, state);\n        if (at != null && clientTokenContextManager != null) {\n            clientTokenContextManager.setClientTokenContext(mc, tokenContext);\n        }\n        setClientCodeRequest(tokenContext);\n    }","id":82050,"modified_method":"protected void processCodeResponse(ContainerRequestContext rc, \n                                       UriInfo ui,\n                                       MultivaluedMap<String, String> requestParams) {\n        \n        MultivaluedMap<String, String> state = null;\n        if (clientStateManager != null) {\n            state = clientStateManager.fromRedirectState(mc, requestParams);\n        }\n        \n        String codeParam = requestParams.getFirst(OAuthConstants.AUTHORIZATION_CODE_VALUE);\n        ClientAccessToken at = null;\n        if (codeParam != null) {\n            AuthorizationCodeGrant grant = prepareCodeGrant(codeParam, getAbsoluteRedirectUri(ui));\n            grant.setCodeVerifier(state.getFirst(OAuthConstants.AUTHORIZATION_CODE_VERIFIER));\n            at = OAuthClientUtils.getAccessToken(accessTokenServiceClient, consumer, grant);\n        }\n        ClientTokenContext tokenContext = initializeClientTokenContext(rc, at, state);\n        if (at != null && clientTokenContextManager != null) {\n            clientTokenContextManager.setClientTokenContext(mc, tokenContext);\n        }\n        setClientCodeRequest(tokenContext);\n    }","commit_id":"487ef19c310848d61e69e21f9890012885efae6a","url":"https://github.com/apache/cxf"},{"original_method":"public String getRequest() {\n        MultivaluedMap<String, String> map = super.toMap();\n        JwtClaims claims = new JwtClaims();\n        claims.setIssuer(issuer);\n        for (String key : map.keySet()) {\n            claims.setClaim(key, map.getFirst(key));\n        }\n        JwsJwtCompactProducer producer = new JwsJwtCompactProducer(claims);\n        JwsSignatureProvider theSigProvider = getInitializedSigProvider();\n        String request = producer.signWith(theSigProvider);\n        \n        JweEncryptionProvider theEncryptionProvider = getInitializedEncryptionProvider();\n        if (theEncryptionProvider != null) {\n            request = theEncryptionProvider.encrypt(StringUtils.toBytesUTF8(request), null);\n        }\n        return request;\n    }","id":82051,"modified_method":"public String getRequest() {\n        MultivaluedMap<String, String> map = super.toMap();\n        JwtClaims claims = new JwtClaims();\n        if (issuer != null) {\n            claims.setIssuer(issuer);\n        }\n        for (String key : map.keySet()) {\n            claims.setClaim(key, map.getFirst(key));\n        }\n        return joseProducer.processJwt(new JwtToken(claims), clientSecret);\n    }","commit_id":"487ef19c310848d61e69e21f9890012885efae6a","url":"https://github.com/apache/cxf"},{"original_method":"@Nullable\n  public String getLocation() {\n    if (myScheme == StorageScheme.DEFAULT) {\n      return getProjectFilePath();\n    }\n    else {\n      final VirtualFile baseDir = getProjectBaseDir();\n      return baseDir == null ? null : baseDir.getPath();\n    }\n  }","id":82052,"modified_method":"@Nullable\n  public String getLocation() {\n    if (myCachedLocation == null) {\n      if (myScheme == StorageScheme.DEFAULT) {\n        myCachedLocation = getProjectFilePath();\n      }\n      else {\n        final VirtualFile baseDir = getProjectBaseDir();\n        myCachedLocation = baseDir == null ? null : baseDir.getPath();\n      }\n    }\n\n    return myCachedLocation;\n  }","commit_id":"4b7ca8df860540f8a0b6deba8308fb93c0093722","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void setProjectFilePath(final String filePath) {\n    if (filePath == null) {\n      return;\n    }\n    final IFile iFile = FileSystem.FILE_SYSTEM.createFile(filePath);\n    final IFile dir_store =\n      iFile.isDirectory() ? iFile.getChild(Project.DIRECTORY_STORE_FOLDER) : iFile.getParentFile().getChild(Project.DIRECTORY_STORE_FOLDER);\n\n    final StateStorageManager stateStorageManager = getStateStorageManager();\n    if (dir_store.exists() && iFile.isDirectory()) {\n      FileBasedStorage.syncRefreshPathRecursively(dir_store.getPath(), null);\n\n      myScheme = StorageScheme.DIRECTORY_BASED;\n\n      stateStorageManager.addMacro(PROJECT_FILE_MACRO, dir_store.getChild(\"misc.xml\").getPath());\n      final IFile ws = dir_store.getChild(\"workspace.xml\");\n      stateStorageManager.addMacro(WS_FILE_MACRO, ws.getPath());\n\n      if (!ws.exists() && !iFile.isDirectory()) {\n        useOldWsContent(filePath, ws);\n      }\n\n      stateStorageManager.addMacro(PROJECT_CONFIG_DIR, dir_store.getPath());\n    }\n    else {\n      myScheme = StorageScheme.DEFAULT;\n      stateStorageManager.addMacro(PROJECT_FILE_MACRO, filePath);\n\n      LocalFileSystem.getInstance().refreshAndFindFileByPath(filePath);\n\n      int lastDot = filePath.lastIndexOf(\".\");\n      final String filePathWithoutExt = lastDot > 0 ? filePath.substring(0, lastDot) : filePath;\n      String workspacePath = filePathWithoutExt + WorkspaceFileType.DOT_DEFAULT_EXTENSION;\n\n      LocalFileSystem.getInstance().refreshAndFindFileByPath(workspacePath);\n      stateStorageManager.addMacro(WS_FILE_MACRO, workspacePath);\n    }\n  }","id":82053,"modified_method":"public void setProjectFilePath(final String filePath) {\n    if (filePath == null) {\n      return;\n    }\n    final IFile iFile = FileSystem.FILE_SYSTEM.createFile(filePath);\n    final IFile dir_store =\n      iFile.isDirectory() ? iFile.getChild(Project.DIRECTORY_STORE_FOLDER) : iFile.getParentFile().getChild(Project.DIRECTORY_STORE_FOLDER);\n\n    final StateStorageManager stateStorageManager = getStateStorageManager();\n    if (dir_store.exists() && iFile.isDirectory()) {\n      FileBasedStorage.syncRefreshPathRecursively(dir_store.getPath(), null);\n\n      myScheme = StorageScheme.DIRECTORY_BASED;\n\n      stateStorageManager.addMacro(PROJECT_FILE_MACRO, dir_store.getChild(\"misc.xml\").getPath());\n      final IFile ws = dir_store.getChild(\"workspace.xml\");\n      stateStorageManager.addMacro(WS_FILE_MACRO, ws.getPath());\n\n      if (!ws.exists() && !iFile.isDirectory()) {\n        useOldWsContent(filePath, ws);\n      }\n\n      stateStorageManager.addMacro(PROJECT_CONFIG_DIR, dir_store.getPath());\n    }\n    else {\n      myScheme = StorageScheme.DEFAULT;\n      stateStorageManager.addMacro(PROJECT_FILE_MACRO, filePath);\n\n      LocalFileSystem.getInstance().refreshAndFindFileByPath(filePath);\n\n      int lastDot = filePath.lastIndexOf(\".\");\n      final String filePathWithoutExt = lastDot > 0 ? filePath.substring(0, lastDot) : filePath;\n      String workspacePath = filePathWithoutExt + WorkspaceFileType.DOT_DEFAULT_EXTENSION;\n\n      LocalFileSystem.getInstance().refreshAndFindFileByPath(workspacePath);\n      stateStorageManager.addMacro(WS_FILE_MACRO, workspacePath);\n    }\n\n    myCachedLocation = null;\n  }","commit_id":"4b7ca8df860540f8a0b6deba8308fb93c0093722","url":"https://github.com/JetBrains/MPS"},{"original_method":"@NotNull\n  @Patch\n  public String getProjectName() {\n    if (myScheme == StorageScheme.DIRECTORY_BASED) {\n      final VirtualFile baseDir = getProjectBaseDir();\n      assert baseDir != null;\n      return baseDir.getName().replace(\":\", \"\");\n    }\n\n    String temp = getProjectFileName();\n    // MPS patch: add automatical removing \".mpr\" from project name\n    if (temp.endsWith(MPSExtentions.DOT_MPS_PROJECT)) {\n      temp = temp.substring(0, temp.length() - MPSExtentions.DOT_MPS_PROJECT.length());\n    }\n    // MPS patch end\n    if (temp.endsWith(ProjectFileType.DOT_DEFAULT_EXTENSION)) {\n      temp = temp.substring(0, temp.length() - ProjectFileType.DOT_DEFAULT_EXTENSION.length());\n    }\n    final int i = temp.lastIndexOf(File.separatorChar);\n    if (i >= 0) {\n      temp = temp.substring(i + 1, temp.length() - i + 1);\n    }\n    return temp;\n  }","id":82054,"modified_method":"@NotNull\n  @Patch\n  public String getProjectName() {\n    if (myScheme == StorageScheme.DIRECTORY_BASED) {\n      final VirtualFile baseDir = getProjectBaseDir();\n      assert baseDir != null : \"project file: \" + (getProjectFile() == null ? \"[NULL]\" : getProjectFile().getPath());\n      return baseDir.getName().replace(\":\", \"\");\n    }\n\n    String temp = getProjectFileName();\n    // MPS patch: add automatical removing \".mpr\" from project name\n    if (temp.endsWith(MPSExtentions.DOT_MPS_PROJECT)) {\n      temp = temp.substring(0, temp.length() - MPSExtentions.DOT_MPS_PROJECT.length());\n    }\n    // MPS patch end\n    if (temp.endsWith(ProjectFileType.DOT_DEFAULT_EXTENSION)) {\n      temp = temp.substring(0, temp.length() - ProjectFileType.DOT_DEFAULT_EXTENSION.length());\n    }\n    final int i = temp.lastIndexOf(File.separatorChar);\n    if (i >= 0) {\n      temp = temp.substring(i + 1, temp.length() - i + 1);\n    }\n    return temp;\n  }","commit_id":"4b7ca8df860540f8a0b6deba8308fb93c0093722","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void setProjectFilePath(final String filePath) {\n    if (filePath == null) {\n      return;\n    }\n    final IFile iFile = FileSystem.FILE_SYSTEM.createFile(filePath);\n    final IFile dir_store =\n      iFile.isDirectory() ? iFile.getChild(Project.DIRECTORY_STORE_FOLDER) : iFile.getParentFile().getChild(Project.DIRECTORY_STORE_FOLDER);\n\n    final StateStorageManager stateStorageManager = getStateStorageManager();\n    if (dir_store.exists() && iFile.isDirectory()) {\n      FileBasedStorage.syncRefreshPathRecursively(dir_store.getPath(), null);\n\n      myScheme = StorageScheme.DIRECTORY_BASED;\n\n      stateStorageManager.addMacro(PROJECT_FILE_MACRO, dir_store.getChild(\"misc.xml\").getPath());\n      final IFile ws = dir_store.getChild(\"workspace.xml\");\n      stateStorageManager.addMacro(WS_FILE_MACRO, ws.getPath());\n\n      if (!ws.exists() && !iFile.isDirectory()) {\n        useOldWsContent(filePath, ws);\n      }\n\n      stateStorageManager.addMacro(PROJECT_CONFIG_DIR, dir_store.getPath());\n    }\n    else {\n      myScheme = StorageScheme.DEFAULT;\n      stateStorageManager.addMacro(PROJECT_FILE_MACRO, filePath);\n\n      LocalFileSystem.getInstance().refreshAndFindFileByPath(filePath);\n\n      int lastDot = filePath.lastIndexOf(\".\");\n      final String filePathWithoutExt = lastDot > 0 ? filePath.substring(0, lastDot) : filePath;\n      String workspacePath = filePathWithoutExt + WorkspaceFileType.DOT_DEFAULT_EXTENSION;\n\n      LocalFileSystem.getInstance().refreshAndFindFileByPath(workspacePath);\n      stateStorageManager.addMacro(WS_FILE_MACRO, workspacePath);\n    }\n  }","id":82055,"modified_method":"public void setProjectFilePath(final String filePath) {\n    if (filePath == null) {\n      return;\n    }\n    final IFile iFile = FileSystem.FILE_SYSTEM.createFile(filePath);\n    final IFile dir_store =\n      iFile.isDirectory() ? iFile.getChild(Project.DIRECTORY_STORE_FOLDER) : iFile.getParentFile().getChild(Project.DIRECTORY_STORE_FOLDER);\n\n    final StateStorageManager stateStorageManager = getStateStorageManager();\n    if (dir_store.exists() && iFile.isDirectory()) {\n      FileBasedStorage.syncRefreshPathRecursively(dir_store.getPath(), null);\n\n      myScheme = StorageScheme.DIRECTORY_BASED;\n\n      stateStorageManager.addMacro(PROJECT_FILE_MACRO, dir_store.getChild(\"misc.xml\").getPath());\n      final IFile ws = dir_store.getChild(\"workspace.xml\");\n      stateStorageManager.addMacro(WS_FILE_MACRO, ws.getPath());\n\n      if (!ws.exists() && !iFile.isDirectory()) {\n        useOldWsContent(filePath, ws);\n      }\n\n      stateStorageManager.addMacro(PROJECT_CONFIG_DIR, dir_store.getPath());\n    }\n    else {\n      myScheme = StorageScheme.DEFAULT;\n      stateStorageManager.addMacro(PROJECT_FILE_MACRO, filePath);\n\n      LocalFileSystem.getInstance().refreshAndFindFileByPath(filePath);\n\n      int lastDot = filePath.lastIndexOf(\".\");\n      final String filePathWithoutExt = lastDot > 0 ? filePath.substring(0, lastDot) : filePath;\n      String workspacePath = filePathWithoutExt + WorkspaceFileType.DOT_DEFAULT_EXTENSION;\n\n      LocalFileSystem.getInstance().refreshAndFindFileByPath(workspacePath);\n      stateStorageManager.addMacro(WS_FILE_MACRO, workspacePath);\n    }\n\n    myCachedLocation = null;\n  }","commit_id":"4d2d14711609cd4ce62121fe9cd42dc536b5d1c0","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  public String getLocation() {\n    if (myScheme == StorageScheme.DEFAULT) {\n      return getProjectFilePath();\n    }\n    else {\n      final VirtualFile baseDir = getProjectBaseDir();\n      return baseDir == null ? null : baseDir.getPath();\n    }\n  }","id":82056,"modified_method":"@Nullable\n  public String getLocation() {\n    if (myCachedLocation == null) {\n      if (myScheme == StorageScheme.DEFAULT) {\n        myCachedLocation = getProjectFilePath();\n      }\n      else {\n        final VirtualFile baseDir = getProjectBaseDir();\n        myCachedLocation = baseDir == null ? null : baseDir.getPath();\n      }\n    }\n\n    return myCachedLocation;\n  }","commit_id":"4d2d14711609cd4ce62121fe9cd42dc536b5d1c0","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private AutocompletionContext getAutocompletionContext()\n   {\n      AutocompletionContext context = new AutocompletionContext();\n      \n      String firstLine = input_.getText();\n      int row = input_.getCursorPosition().getRow();\n      \n      // trim to cursor position\n      firstLine = firstLine.substring(0, input_.getCursorPosition().getColumn());\n      \n      // If we're in Markdown mode and have an appropriate string, try to get\n      // file completions\n      if (DocumentMode.isCursorInMarkdownMode(docDisplay_) &&\n            firstLine.matches(\".*\\\\[.*\\\\]\\\\(.*\"))\n         return getAutocompletionContextForFileMarkdownLink(firstLine);\n      \n      // Get the token at the cursor position\n      String token = firstLine.replaceAll(\".*[^a-zA-Z0-9._:$@'\\\"`-]\", \"\");\n      \n      // If we're completing an object within a string, assume it's a\n      // file-system completion. Note that we may need other contextual information\n      // to decide if e.g. we only want directories.\n      String firstLineStripped = StringUtil.stripBalancedQuotes(\n            StringUtil.stripRComment(firstLine));\n      \n      boolean isFileCompletion = false;\n      if (firstLineStripped.indexOf('\\'') != -1 || \n          firstLineStripped.indexOf('\"') != -1)\n      {\n         isFileCompletion = true;\n         addAutocompletionContextForFile(context, firstLine);\n      }\n      \n      // If this line starts with '```{', then we're completing chunk options\n      // pass the whole line as a token\n      if (firstLine.startsWith(\"```{\") || firstLine.startsWith(\"<<\"))\n         return new AutocompletionContext(firstLine, AutocompletionContext.TYPE_CHUNK);\n      \n      // If this line starts with a '?', assume it's a help query\n      if (firstLine.matches(\"^\\\\s*[?].*\"))\n         return new AutocompletionContext(token, AutocompletionContext.TYPE_HELP);\n      \n      // escape early for roxygen\n      if (firstLine.matches(\"\\\\s*#+'.*\"))\n         return new AutocompletionContext(\n               token, AutocompletionContext.TYPE_ROXYGEN);\n      \n      // If the token has '$' or '@', add in the autocompletion context --\n      // note that we still need parent contexts to give more information\n      // about the appropriate completion\n      if (token.contains(\"$\") || token.contains(\"@\"))\n         addAutocompletionContextForDollar(context);\n      \n      // If the token has '::' or ':::', add that context. Note that\n      // we still need outer contexts (so that e.g., if we try\n      // 'debug(stats::rnorm)' we know not to auto-insert parens)\n      if (token.contains(\"::\"))\n         addAutocompletionContextForNamespace(token, context);\n      \n      // If this is not a file completion, we need to further strip and\n      // then set the token. Note that the token will have already been\n      // set if this is a file completion.\n      token = token.replaceAll(\".*[$@:]\", \"\");\n      if (!isFileCompletion)\n         context.setToken(token);\n      \n      // access to the R Code model\n      AceEditor editor = (AceEditor) docDisplay_;\n      if (editor == null)\n         return context;\n      \n      CodeModel codeModel = editor.getSession().getMode().getRCodeModel();\n      \n      // We might need to grab content from further up in the document than\n      // the current cursor position -- so tokenize ahead.\n      codeModel.tokenizeUpToRow(row + 100);\n      \n      // Make a token cursor and place it at the first token previous\n      // to the cursor.\n      TokenCursor tokenCursor = codeModel.getTokenCursor();\n      if (!tokenCursor.moveToPosition(input_.getCursorPosition()))\n         return context;\n      \n      // Check to see if the token following the cursor is a `::` or `:::`.\n      // If that's the case, then we probably only want to complete package\n      // names.\n      if (tokenCursor.moveToNextToken())\n      {\n         if (tokenCursor.currentValue() == \":\" ||\n             tokenCursor.currentValue() == \"::\" ||\n             tokenCursor.currentValue() == \":::\")\n         {\n            return new AutocompletionContext(\n                  token,\n                  AutocompletionContext.TYPE_PACKAGE);\n         }\n         tokenCursor.moveToPreviousToken();\n      }\n      \n      TokenCursor startCursor = tokenCursor.cloneCursor();\n      \n      // Find an opening '(' or '[' -- this provides the function or object\n      // for completion.\n      int initialNumCommas = 0;\n      if (tokenCursor.currentValue() != \"(\" && tokenCursor.currentValue() != \"[\")\n      {\n         int commaCount = tokenCursor.findOpeningBracketCountCommas(\n               new String[]{ \"[\", \"(\" }, true);\n         \n         // commaCount == -1 implies we failed to find an opening bracket\n         if (commaCount == -1)\n         {\n            commaCount = tokenCursor.findOpeningBracketCountCommas(\"[\", false);\n            if (commaCount == -1)\n               return context;\n            else\n               initialNumCommas = commaCount;\n         }\n         else\n         {\n            initialNumCommas = commaCount;\n         }\n      }\n      \n      // Figure out whether we're looking at '(', '[', or '[[',\n      // and place the token cursor on the first token preceding.\n      TokenCursor endOfDecl = tokenCursor.cloneCursor();\n      int initialDataType = AutocompletionContext.TYPE_UNKNOWN;\n      if (tokenCursor.currentValue() == \"(\")\n      {\n         initialDataType = AutocompletionContext.TYPE_FUNCTION;\n         if (!tokenCursor.moveToPreviousToken())\n            return context;\n      }\n      else if (tokenCursor.currentValue() == \"[\")\n      {\n         if (!tokenCursor.moveToPreviousToken())\n            return context;\n         \n         if (tokenCursor.currentValue() == \"[\")\n         {\n            if (!endOfDecl.moveToPreviousToken())\n               return context;\n            \n            initialDataType = AutocompletionContext.TYPE_DOUBLE_BRACKET;\n            if (!tokenCursor.moveToPreviousToken())\n               return context;\n         }\n         else\n         {\n            initialDataType = AutocompletionContext.TYPE_SINGLE_BRACKET;\n         }\n      }\n      \n      // Get the string marking the function or data\n      if (!tokenCursor.findStartOfEvaluationContext())\n         return context;\n      \n      // Try to get the function call string -- either there's\n      // an associated closing paren we can use, or we should just go up\n      // to the current cursor position.\n      \n      // First, attempt to determine where the closing paren is located. If\n      // this fails, we'll just use the start cursor's position (and later\n      // attempt to finish the expression to make it parsable)\n      Position endPos = startCursor.currentPosition();\n      endPos.setColumn(endPos.getColumn() + startCursor.currentValue().length());\n      \n      // try to look forward for closing paren\n      if (endOfDecl.currentValue() == \"(\")\n      {\n         TokenCursor closingParenCursor = endOfDecl.cloneCursor();\n         if (closingParenCursor.fwdToMatchingToken())\n         {\n            endPos = closingParenCursor.currentPosition();\n            endPos.setColumn(endPos.getColumn() + 1);\n         }\n      }\n      \n      // We can now set the function call string.\n      //\n      // We strip out the current statement under the cursor, so that\n      // match.call() can later properly resolve the current argument.\n      //\n      // Attempt to find the start of the current statement.\n      TokenCursor clone = startCursor.cloneCursor();\n      do\n      {\n         String value = clone.currentValue();\n         if (value.indexOf(\",\") != -1 || value.equals(\"(\"))\n            break;\n         \n         if (clone.bwdToMatchingToken())\n            continue;\n         \n      } while (clone.moveToPreviousToken());\n      Position startPosition = clone.currentPosition();\n      \n      // Include the opening paren if that's what we found\n      if (clone.currentValue().equals(\"(\"))\n         startPosition.setColumn(startPosition.getColumn() + 1);\n      \n      String beforeText = editor.getTextForRange(Range.fromPoints(\n            tokenCursor.currentPosition(),\n            startPosition));\n      \n      // Now, attempt to find the end of the current statement.\n      // Look for the ',' or ')' that ends the statement for the \n      // currently active argument.\n      boolean lookupSucceeded = false;\n      while (clone.moveToNextToken())\n      {\n         String value = clone.currentValue();\n         if (value.indexOf(\",\") != -1 || value.equals(\")\"))\n         {\n            lookupSucceeded = true;\n            break;\n         }\n         \n         // Bail if we find a closing paren (we should walk over matched\n         // pairs properly, so finding one implies that we have a parse error).\n         if (value.equals(\"]\") || value.equals(\"]]\") || value.equals(\"}\"))\n         {\n            break;\n         }\n         \n         if (clone.fwdToMatchingToken())\n            continue;\n      }\n      \n      String afterText = \"\";\n      if (lookupSucceeded)\n      {\n         afterText = editor.getTextForRange(Range.fromPoints(\n               clone.currentPosition(),\n               endPos));\n      }\n      \n      context.setFunctionCallString(\n            (beforeText + afterText).trim());\n      \n      // If this is an argument, return auto-completions tuned to that argument\n      TokenCursor argsCursor = startCursor.cloneCursor();\n      if (argsCursor.currentType() == \"identifier\")\n         argsCursor.moveToPreviousToken();\n      \n      if (argsCursor.currentValue() == \"=\")\n      {\n         if (argsCursor.moveToPreviousToken())\n         {\n            context.setToken(token);\n            \n            ArrayList<String> argData = new ArrayList<String>();\n            argData.add(argsCursor.currentValue());\n            context.setAssocData(argData);\n            \n            ArrayList<Integer> dataType = new ArrayList<Integer>();\n            dataType.add(AutocompletionContext.TYPE_ARGUMENT);\n            context.setDataType(dataType);\n            \n            ArrayList<Integer> numCommas = new ArrayList<Integer>();\n            numCommas.add(0);\n            context.setNumCommas(numCommas);\n            \n            return context;\n         }\n      }\n      \n      String initialData =\n            docDisplay_.getTextForRange(Range.fromPoints(\n                  tokenCursor.currentPosition(),\n                  endOfDecl.currentPosition())).trim();\n      \n      // And the first context\n      context.add(initialData, initialDataType, initialNumCommas);\n\n      // Get the rest of the single-bracket contexts for completions as well\n      String assocData;\n      int dataType;\n      int numCommas;\n      while (true)\n      {\n         int commaCount = tokenCursor.findOpeningBracketCountCommas(\"[\", false);\n         if (commaCount == -1)\n            break;\n         \n         numCommas = commaCount;\n         \n         TokenCursor declEnd = tokenCursor.cloneCursor();\n         if (!tokenCursor.moveToPreviousToken())\n            return context;\n         \n         if (tokenCursor.currentValue() == \"[\")\n         {\n            if (!declEnd.moveToPreviousToken())\n               return context;\n            \n            dataType = AutocompletionContext.TYPE_DOUBLE_BRACKET;\n            if (!tokenCursor.moveToPreviousToken())\n               return context;\n         }\n         else\n         {\n            dataType = AutocompletionContext.TYPE_SINGLE_BRACKET;\n         }\n         \n         tokenCursor.findStartOfEvaluationContext();\n         \n         assocData =\n            docDisplay_.getTextForRange(Range.fromPoints(\n                  tokenCursor.currentPosition(),\n                  declEnd.currentPosition())).trim();\n         \n         context.add(assocData, dataType, numCommas);\n      }\n      \n      return context;\n      \n   }","id":82057,"modified_method":"private AutocompletionContext getAutocompletionContext()\n   {\n      AutocompletionContext context = new AutocompletionContext();\n      \n      String firstLine = input_.getText();\n      int row = input_.getCursorPosition().getRow();\n      \n      // trim to cursor position\n      firstLine = firstLine.substring(0, input_.getCursorPosition().getColumn());\n      \n      // If we're in Markdown mode and have an appropriate string, try to get\n      // file completions\n      if (DocumentMode.isCursorInMarkdownMode(docDisplay_) &&\n            firstLine.matches(\".*\\\\[.*\\\\]\\\\(.*\"))\n         return getAutocompletionContextForFileMarkdownLink(firstLine);\n      \n      // Get the token at the cursor position\n      String token = firstLine.replaceAll(\".*[^a-zA-Z0-9._:$@'\\\"`-]\", \"\");\n      \n      // If we're completing an object within a string, assume it's a\n      // file-system completion. Note that we may need other contextual information\n      // to decide if e.g. we only want directories.\n      String firstLineStripped = StringUtil.stripBalancedQuotes(\n            StringUtil.stripRComment(firstLine));\n      \n      boolean isFileCompletion = false;\n      if (firstLineStripped.indexOf('\\'') != -1 || \n          firstLineStripped.indexOf('\"') != -1)\n      {\n         isFileCompletion = true;\n         addAutocompletionContextForFile(context, firstLine);\n      }\n      \n      // If this line starts with '```{', then we're completing chunk options\n      // pass the whole line as a token\n      if (firstLine.startsWith(\"```{\") || firstLine.startsWith(\"<<\"))\n         return new AutocompletionContext(firstLine, AutocompletionContext.TYPE_CHUNK);\n      \n      // If this line starts with a '?', assume it's a help query\n      if (firstLine.matches(\"^\\\\s*[?].*\"))\n         return new AutocompletionContext(token, AutocompletionContext.TYPE_HELP);\n      \n      // escape early for roxygen\n      if (firstLine.matches(\"\\\\s*#+'.*\"))\n         return new AutocompletionContext(\n               token, AutocompletionContext.TYPE_ROXYGEN);\n      \n      // If the token has '$' or '@', add in the autocompletion context --\n      // note that we still need parent contexts to give more information\n      // about the appropriate completion\n      if (token.contains(\"$\") || token.contains(\"@\"))\n         addAutocompletionContextForDollar(context);\n      \n      // If the token has '::' or ':::', add that context. Note that\n      // we still need outer contexts (so that e.g., if we try\n      // 'debug(stats::rnorm)' we know not to auto-insert parens)\n      if (token.contains(\"::\"))\n         addAutocompletionContextForNamespace(token, context);\n      \n      // If this is not a file completion, we need to further strip and\n      // then set the token. Note that the token will have already been\n      // set if this is a file completion.\n      token = token.replaceAll(\".*[$@:]\", \"\");\n      if (!isFileCompletion)\n         context.setToken(token);\n      \n      // access to the R Code model\n      AceEditor editor = (AceEditor) docDisplay_;\n      if (editor == null)\n         return context;\n      \n      CodeModel codeModel = editor.getSession().getMode().getRCodeModel();\n      \n      // We might need to grab content from further up in the document than\n      // the current cursor position -- so tokenize ahead.\n      codeModel.tokenizeUpToRow(row + 100);\n      \n      // Make a token cursor and place it at the first token previous\n      // to the cursor.\n      TokenCursor tokenCursor = codeModel.getTokenCursor();\n      if (!tokenCursor.moveToPosition(input_.getCursorPosition()))\n         return context;\n      \n      // Check to see if the token following the cursor is a `::` or `:::`.\n      // If that's the case, then we probably only want to complete package\n      // names.\n      if (tokenCursor.moveToNextToken())\n      {\n         if (tokenCursor.currentValue() == \":\" ||\n             tokenCursor.currentValue() == \"::\" ||\n             tokenCursor.currentValue() == \":::\")\n         {\n            return new AutocompletionContext(\n                  token,\n                  AutocompletionContext.TYPE_PACKAGE);\n         }\n         tokenCursor.moveToPreviousToken();\n      }\n      \n      TokenCursor startCursor = tokenCursor.cloneCursor();\n      \n      // Find an opening '(' or '[' -- this provides the function or object\n      // for completion.\n      int initialNumCommas = 0;\n      if (tokenCursor.currentValue() != \"(\" && tokenCursor.currentValue() != \"[\")\n      {\n         int commaCount = tokenCursor.findOpeningBracketCountCommas(\n               new String[]{ \"[\", \"(\" }, true);\n         \n         // commaCount == -1 implies we failed to find an opening bracket\n         if (commaCount == -1)\n         {\n            commaCount = tokenCursor.findOpeningBracketCountCommas(\"[\", false);\n            if (commaCount == -1)\n               return context;\n            else\n               initialNumCommas = commaCount;\n         }\n         else\n         {\n            initialNumCommas = commaCount;\n         }\n      }\n      \n      // Figure out whether we're looking at '(', '[', or '[[',\n      // and place the token cursor on the first token preceding.\n      TokenCursor endOfDecl = tokenCursor.cloneCursor();\n      int initialDataType = AutocompletionContext.TYPE_UNKNOWN;\n      if (tokenCursor.currentValue() == \"(\")\n      {\n         initialDataType = AutocompletionContext.TYPE_FUNCTION;\n         if (!tokenCursor.moveToPreviousToken())\n            return context;\n      }\n      else if (tokenCursor.currentValue() == \"[\")\n      {\n         if (!tokenCursor.moveToPreviousToken())\n            return context;\n         \n         if (tokenCursor.currentValue() == \"[\")\n         {\n            if (!endOfDecl.moveToPreviousToken())\n               return context;\n            \n            initialDataType = AutocompletionContext.TYPE_DOUBLE_BRACKET;\n            if (!tokenCursor.moveToPreviousToken())\n               return context;\n         }\n         else\n         {\n            initialDataType = AutocompletionContext.TYPE_SINGLE_BRACKET;\n         }\n      }\n      \n      // Get the string marking the function or data\n      if (!tokenCursor.findStartOfEvaluationContext())\n         return context;\n      \n      // Try to get the function call string -- either there's\n      // an associated closing paren we can use, or we should just go up\n      // to the current cursor position.\n      \n      // First, attempt to determine where the closing paren is located. If\n      // this fails, we'll just use the start cursor's position (and later\n      // attempt to finish the expression to make it parsable)\n      Position endPos = startCursor.currentPosition();\n      endPos.setColumn(endPos.getColumn() + startCursor.currentValue().length());\n      \n      // try to look forward for closing paren\n      if (endOfDecl.currentValue() == \"(\")\n      {\n         TokenCursor closingParenCursor = endOfDecl.cloneCursor();\n         if (closingParenCursor.fwdToMatchingToken())\n         {\n            endPos = closingParenCursor.currentPosition();\n            endPos.setColumn(endPos.getColumn() + 1);\n         }\n      }\n      \n      // We can now set the function call string.\n      //\n      // We strip out the current statement under the cursor, so that\n      // match.call() can later properly resolve the current argument.\n      //\n      // Attempt to find the start of the current statement.\n      TokenCursor clone = startCursor.cloneCursor();\n      do\n      {\n         String value = clone.currentValue();\n         if (value.indexOf(\",\") != -1 || value.equals(\"(\"))\n            break;\n         \n         if (clone.bwdToMatchingToken())\n            continue;\n         \n      } while (clone.moveToPreviousToken());\n      Position startPosition = clone.currentPosition();\n      \n      // Include the opening paren if that's what we found\n      if (clone.currentValue().equals(\"(\"))\n         startPosition.setColumn(startPosition.getColumn() + 1);\n      \n      String beforeText = editor.getTextForRange(Range.fromPoints(\n            tokenCursor.currentPosition(),\n            startPosition));\n      \n      // Now, attempt to find the end of the current statement.\n      // Look for the ',' or ')' that ends the statement for the \n      // currently active argument.\n      boolean lookupSucceeded = false;\n      while (clone.moveToNextToken())\n      {\n         String value = clone.currentValue();\n         if (value.indexOf(\",\") != -1 || value.equals(\")\"))\n         {\n            lookupSucceeded = true;\n            break;\n         }\n         \n         // Bail if we find a closing paren (we should walk over matched\n         // pairs properly, so finding one implies that we have a parse error).\n         if (value.equals(\"]\") || value.equals(\"]]\") || value.equals(\"}\"))\n         {\n            break;\n         }\n         \n         if (clone.fwdToMatchingToken())\n            continue;\n      }\n      \n      String afterText = \"\";\n      if (lookupSucceeded)\n      {\n         afterText = editor.getTextForRange(Range.fromPoints(\n               clone.currentPosition(),\n               endPos));\n      }\n      \n      context.setFunctionCallString(\n            (beforeText + afterText).trim());\n      \n      // Try to identify whether we're producing autocompletions for\n      // a _named_ function argument; if so, produce completions tuned to\n      // that argument.\n      TokenCursor argsCursor = startCursor.cloneCursor();\n      do\n      {\n         String argsValue = argsCursor.currentValue();\n         \n         // Bail if we encounter tokens that we don't expect as part\n         // of the current expression -- this implies we're not really\n         // within a named argument, although this isn't perfect.\n         if (argsValue.equals(\",\") ||\n             argsValue.equals(\"(\"))\n         {\n            break;\n         }\n         \n         // If we encounter an '=', we assume that this is\n         // a function argument.\n         if (argsValue.equals(\"=\") && argsCursor.moveToPreviousToken())\n         {\n            context.setToken(token);\n            \n            ArrayList<String> argData = new ArrayList<String>();\n            argData.add(argsCursor.currentValue());\n            context.setAssocData(argData);\n            \n            ArrayList<Integer> dataType = new ArrayList<Integer>();\n            dataType.add(AutocompletionContext.TYPE_ARGUMENT);\n            context.setDataType(dataType);\n            \n            ArrayList<Integer> numCommas = new ArrayList<Integer>();\n            numCommas.add(0);\n            context.setNumCommas(numCommas);\n            \n            return context;\n         }\n         \n      } while (argsCursor.moveToPreviousToken());\n      \n      String initialData =\n            docDisplay_.getTextForRange(Range.fromPoints(\n                  tokenCursor.currentPosition(),\n                  endOfDecl.currentPosition())).trim();\n      \n      // And the first context\n      context.add(initialData, initialDataType, initialNumCommas);\n\n      // Get the rest of the single-bracket contexts for completions as well\n      String assocData;\n      int dataType;\n      int numCommas;\n      while (true)\n      {\n         int commaCount = tokenCursor.findOpeningBracketCountCommas(\"[\", false);\n         if (commaCount == -1)\n            break;\n         \n         numCommas = commaCount;\n         \n         TokenCursor declEnd = tokenCursor.cloneCursor();\n         if (!tokenCursor.moveToPreviousToken())\n            return context;\n         \n         if (tokenCursor.currentValue() == \"[\")\n         {\n            if (!declEnd.moveToPreviousToken())\n               return context;\n            \n            dataType = AutocompletionContext.TYPE_DOUBLE_BRACKET;\n            if (!tokenCursor.moveToPreviousToken())\n               return context;\n         }\n         else\n         {\n            dataType = AutocompletionContext.TYPE_SINGLE_BRACKET;\n         }\n         \n         tokenCursor.findStartOfEvaluationContext();\n         \n         assocData =\n            docDisplay_.getTextForRange(Range.fromPoints(\n                  tokenCursor.currentPosition(),\n                  declEnd.currentPosition())).trim();\n         \n         context.add(assocData, dataType, numCommas);\n      }\n      \n      return context;\n      \n   }","commit_id":"1a7eb415068a306aed1bfb3bc4596308d2bde530","url":"https://github.com/rstudio/rstudio"},{"original_method":"public App(Installation installation) throws Exception {\n    this.installation = installation;\n\n    Thread shutdownHook = new Thread(new Runnable() {\n      @Override\n      public void run() {\n        terminate();\n      }\n    });\n    Runtime.getRuntime().addShutdownHook(shutdownHook);\n\n    MBeanServer mbeanServer = ManagementFactory.getPlatformMBeanServer();\n    try {\n      mbeanServer.registerMBean(this, Process.objectNameFor(PROCESS_NAME));\n    } catch (InstanceAlreadyExistsException e) {\n      throw new IllegalStateException(\"Process already exists in current JVM\", e);\n    } catch (MBeanRegistrationException e) {\n      throw new IllegalStateException(\"Could not register process as MBean\", e);\n    } catch (NotCompliantMBeanException e) {\n      throw new IllegalStateException(\"Process is not a compliant MBean\", e);\n    }\n\n    monitor = new Monitor();\n  }","id":82058,"modified_method":"public App(Installation installation) throws Exception {\n    this.installation = installation;\n    JmxUtils.registerMBean(this, \"SonarQube\");\n    ProcessUtils.addSelfShutdownHook(this);\n  }","commit_id":"26bfa823f22237d7d40cb927f84c840a2d72b37e","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n  public void terminate() {\n    Logger logger = LoggerFactory.getLogger(getClass());\n\n    if (monitor != null) {\n      monitor.interrupt();\n      monitor = null;\n      if (elasticsearch != null) {\n        elasticsearch.terminate();\n      }\n      if (server != null) {\n        server.terminate();\n      }\n      logger.info(\"Stopping SonarQube main process\");\n    }\n  }","id":82059,"modified_method":"@Override\n  public void terminate() {\n    monitor.terminate();\n    monitor.interrupt();\n    if (server != null) {\n      server.terminate();\n    }\n    if (elasticsearch != null) {\n      elasticsearch.terminate();\n    }\n  }","commit_id":"26bfa823f22237d7d40cb927f84c840a2d72b37e","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public void start() {\n\n    Logger logger = LoggerFactory.getLogger(getClass());\n\n    logger.info(\"Starting search server\");\n    elasticsearch = new ProcessWrapper(SONAR_SEARCH_PROCESS)\n      .setWorkDir(installation.homeDir())\n      .setJmxPort(Integer.parseInt(installation.prop(DefaultSettings.ES_JMX_PORT_KEY)))\n      .addJavaOpts(installation.prop(DefaultSettings.ES_JAVA_OPTS_KEY))\n      .addJavaOpts(String.format(\"-Djava.io.tmpdir=%s\", installation.tempDir().getAbsolutePath()))\n      .addJavaOpts(String.format(\"-D%s=%s\", DefaultSettings.PATH_LOGS_KEY, installation.logsDir().getAbsolutePath()))\n      .setClassName(\"org.sonar.search.ElasticSearch\")\n      .setProperties(installation.props().encryptedProperties())\n      .addClasspath(installation.starPath(\"lib/common\"))\n      .addClasspath(installation.starPath(\"lib/search\"))\n      .execute();\n    monitor.registerProcess(elasticsearch);\n    logger.info(\"Search server is ready\");\n\n    logger.info(\"Starting web server\");\n    server = new ProcessWrapper(SONAR_WEB_PROCESS)\n      .setWorkDir(installation.homeDir())\n      .setJmxPort(Integer.parseInt(installation.prop(DefaultSettings.WEB_JMX_PORT_KEY)))\n      .addJavaOpts(installation.prop(DefaultSettings.WEB_JAVA_OPTS_KEY))\n      .addJavaOpts(DefaultSettings.WEB_JAVA_OPTS_APPENDED_VAL)\n      .addJavaOpts(String.format(\"-Djava.io.tmpdir=%s\", installation.tempDir().getAbsolutePath()))\n      .addJavaOpts(String.format(\"-D%s=%s\", DefaultSettings.PATH_LOGS_KEY, installation.logsDir().getAbsolutePath()))\n      .setClassName(\"org.sonar.server.app.ServerProcess\")\n      .setProperties(installation.props().encryptedProperties())\n      .addClasspath(installation.starPath(\"extensions/jdbc-driver/mysql\"))\n      .addClasspath(installation.starPath(\"extensions/jdbc-driver/mssql\"))\n      .addClasspath(installation.starPath(\"extensions/jdbc-driver/oracle\"))\n      .addClasspath(installation.starPath(\"extensions/jdbc-driver/postgresql\"))\n      .addClasspath(installation.starPath(\"lib/common\"))\n      .addClasspath(installation.starPath(\"lib/server\"))\n      .execute();\n    monitor.registerProcess(server);\n    logger.info(\"Web server is ready\");\n\n    monitor.start();\n\n    try {\n      monitor.join();\n    } catch (InterruptedException e) {\n      // TODO ignore ?\n\n    } finally {\n      logger.debug(\"Closing App because monitor is gone.\");\n      terminate();\n    }\n  }","id":82060,"modified_method":"public void start() throws InterruptedException {\n    try {\n      Logger logger = LoggerFactory.getLogger(getClass());\n      monitor.start();\n\n      elasticsearch = new ProcessWrapper(SONAR_SEARCH_PROCESS)\n        .setWorkDir(installation.homeDir())\n        .setJmxPort(Integer.parseInt(installation.prop(DefaultSettings.ES_JMX_PORT_KEY)))\n        .addJavaOpts(installation.prop(DefaultSettings.ES_JAVA_OPTS_KEY))\n        .addJavaOpts(String.format(\"-Djava.io.tmpdir=%s\", installation.tempDir().getAbsolutePath()))\n        .addJavaOpts(String.format(\"-Dsonar.path.logs=%s\", installation.logsDir().getAbsolutePath()))\n        .setClassName(\"org.sonar.search.SearchServer\")\n        .setProperties(installation.props().encryptedProperties())\n        .addClasspath(installation.starPath(\"lib/common\"))\n        .addClasspath(installation.starPath(\"lib/search\"));\n      if (elasticsearch.execute()) {\n        monitor.registerProcess(elasticsearch);\n        if (elasticsearch.waitForReady()) {\n          logger.info(\"Search server is ready\");\n\n          server = new ProcessWrapper(SONAR_WEB_PROCESS)\n            .setWorkDir(installation.homeDir())\n            .setJmxPort(Integer.parseInt(installation.prop(DefaultSettings.WEB_JMX_PORT_KEY)))\n            .addJavaOpts(installation.prop(DefaultSettings.WEB_JAVA_OPTS_KEY))\n            .addJavaOpts(DefaultSettings.WEB_JAVA_OPTS_APPENDED_VAL)\n            .addJavaOpts(String.format(\"-Djava.io.tmpdir=%s\", installation.tempDir().getAbsolutePath()))\n            .setClassName(\"org.sonar.server.app.WebServer\")\n            .setProperties(installation.props().encryptedProperties())\n            .addClasspath(installation.starPath(\"extensions/jdbc-driver/mysql\"))\n            .addClasspath(installation.starPath(\"extensions/jdbc-driver/mssql\"))\n            .addClasspath(installation.starPath(\"extensions/jdbc-driver/oracle\"))\n            .addClasspath(installation.starPath(\"extensions/jdbc-driver/postgresql\"))\n            .addClasspath(installation.starPath(\"lib/common\"))\n            .addClasspath(installation.starPath(\"lib/server\"));\n          if (server.execute()) {\n            monitor.registerProcess(server);\n            if (server.waitForReady()) {\n              logger.info(\"Web server is ready\");\n              monitor.join();\n            }\n          }\n        }\n      }\n    } finally {\n      terminate();\n    }\n  }","commit_id":"26bfa823f22237d7d40cb927f84c840a2d72b37e","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"void start() {\n    if (tomcat != null || hook != null) {\n      throw new IllegalStateException(\"Server is already started\");\n    }\n\n    try {\n      // '%2F' (slash /) and '%5C' (backslash \\) are permitted as path delimiters in URLs\n      // See Ruby on Rails url_for\n      System.setProperty(\"org.apache.tomcat.util.buf.UDecoder.ALLOW_ENCODED_SLASH\", \"true\");\n\n      System.setProperty(\"org.apache.catalina.startup.EXIT_ON_INIT_FAILURE\", \"true\");\n\n      tomcat = new Tomcat();\n\n      // Initialize directories\n      File tomcatDir = tomcatBasedir();\n      String basedir = tomcatDir.getAbsolutePath();\n      tomcat.setBaseDir(basedir);\n      tomcat.getHost().setAppBase(basedir);\n      tomcat.getHost().setAutoDeploy(false);\n      tomcat.getHost().setCreateDirs(false);\n      tomcat.getHost().setDeployOnStartup(true);\n\n      Logging.configure(tomcat, props);\n      Connectors.configure(tomcat, props);\n      Webapp.configure(tomcat, props);\n      tomcat.start();\n      addShutdownHook();\n      ready = true;\n      tomcat.getServer().await();\n    } catch (Exception e) {\n      throw new IllegalStateException(\"Fail to start web server\", e);\n    }\n    stop();\n  }","id":82061,"modified_method":"void start() {\n    if (tomcat != null || hook != null) {\n      throw new IllegalStateException(\"Server is already started\");\n    }\n\n    try {\n      // '%2F' (slash /) and '%5C' (backslash \\) are permitted as path delimiters in URLs\n      // See Ruby on Rails url_for\n      System.setProperty(\"org.apache.tomcat.util.buf.UDecoder.ALLOW_ENCODED_SLASH\", \"true\");\n\n      System.setProperty(\"org.apache.catalina.startup.EXIT_ON_INIT_FAILURE\", \"true\");\n\n      tomcat = new Tomcat();\n\n      // Initialize directories\n      File tomcatDir = tomcatBasedir();\n      String basedir = tomcatDir.getAbsolutePath();\n      tomcat.setBaseDir(basedir);\n      tomcat.getHost().setAppBase(basedir);\n      tomcat.getHost().setAutoDeploy(false);\n      tomcat.getHost().setCreateDirs(false);\n      tomcat.getHost().setDeployOnStartup(true);\n\n      Logging.configure(tomcat, props);\n      Connectors.configure(tomcat, props);\n      Webapp.configure(tomcat, props);\n      ProcessUtils.addSelfShutdownHook(this);\n      tomcat.start();\n      ready = true;\n      tomcat.getServer().await();\n    } catch (Exception e) {\n      throw new IllegalStateException(\"Fail to start web server\", e);\n    } finally {\n      // Failed to start or received a shutdown command (should never occur as shutdown port is disabled)\n      terminate();\n    }\n  }","commit_id":"26bfa823f22237d7d40cb927f84c840a2d72b37e","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public void run() {\n      for (ProcessWrapper process : processes) {\n        try {\n          if (process.getProcessMXBean() != null) {\n            long time = process.getProcessMXBean().ping();\n            LOGGER.debug(\"PINGED '{}'\", process.getName());\n            pings.put(process.getName(), time);\n          }\n        } catch (Exception e) {\n          LOGGER.error(\"Error while pinging {}\", process.getName(), e);\n          terminate();\n        }\n      }\n    }","id":82062,"modified_method":"@Override\n    public void run() {\n      for (ProcessWrapper process : processes) {\n        try {\n          ProcessMXBean mBean = process.getProcessMXBean();\n          if (mBean != null) {\n            long time = mBean.ping();\n            pings.put(process.getName(), time);\n          }\n        } catch (Exception e) {\n          // fail to ping, do nothing\n        }\n      }\n    }","commit_id":"26bfa823f22237d7d40cb927f84c840a2d72b37e","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public Monitor() {\n    processes = new ArrayList<ProcessWrapper>();\n    pings = new HashMap<String, Long>();\n    monitor = Executors.newScheduledThreadPool(1);\n    processWatch = new ProcessWatch();\n    watch = monitor.scheduleWithFixedDelay(processWatch, 0, 3, TimeUnit.SECONDS);\n  }","id":82063,"modified_method":"/**\n   * Starts another thread to send ping to all registered processes\n   */\n  public Monitor() {\n    super(\"Process Monitor\");\n    processes = new ArrayList<ProcessWrapper>();\n    pings = new HashMap<String, Long>();\n    monitor = Executors.newScheduledThreadPool(1);\n    watch = monitor.scheduleWithFixedDelay(new ProcessWatch(), 0L, PING_DELAY_MS, TimeUnit.MILLISECONDS);\n  }","commit_id":"26bfa823f22237d7d40cb927f84c840a2d72b37e","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public void registerProcess(ProcessWrapper processWrapper) {\n    processes.add(processWrapper);\n    pings.put(processWrapper.getName(), System.currentTimeMillis());\n    for (int i = 0; i < 10; i++) {\n      if (processWrapper.getProcessMXBean() == null || !processWrapper.getProcessMXBean().isReady()) {\n        try {\n          Thread.sleep(500L);\n        } catch (InterruptedException e) {\n          throw new IllegalStateException(\"Could not register process in Monitor\", e);\n        }\n      }\n    }\n    processWrapper.start();\n  }","id":82064,"modified_method":"/**\n   * Registers and monitors process. Note that process is probably not ready yet.\n   */\n  public void registerProcess(ProcessWrapper process) throws InterruptedException {\n    processes.add(process);\n    pings.put(process.getName(), System.currentTimeMillis());\n    // starts a monitoring thread\n    process.start();\n  }","commit_id":"26bfa823f22237d7d40cb927f84c840a2d72b37e","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public void run() {\n    try {\n      while (true) {\n        for (ProcessWrapper process : processes) {\n          if (!processIsValid(process)) {\n            LOGGER.warn(\"Monitor::run() -- Process '{}' is not valid. Exiting monitor\", process.getName());\n            this.interrupt();\n          }\n        }\n        Thread.sleep(3000L);\n      }\n    } catch (InterruptedException e) {\n      LOGGER.debug(\"Monitoring thread is interrupted.\");\n    } finally {\n      terminate();\n    }\n  }","id":82065,"modified_method":"/**\n   * Check continuously that registered processes are still up. If any process is down or does not answer to pings\n   * during the max allowed period, then thread exits. \n   */\n  @Override\n  public void run() {\n    try {\n      while (true) {\n        for (ProcessWrapper process : processes) {\n          if (!processIsValid(process)) {\n            LOGGER.warn(\"Monitor::run() -- Process '{}' is not valid. Exiting monitor\", process.getName());\n            interrupt();\n          }\n        }\n        Thread.sleep(PING_DELAY_MS);\n      }\n    } catch (InterruptedException e) {\n      LOGGER.debug(\"Monitoring thread is interrupted\");\n    } finally {\n      terminate();\n    }\n  }","commit_id":"26bfa823f22237d7d40cb927f84c840a2d72b37e","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public void terminate() {\n    if (monitor != null) {\n      monitor.shutdownNow();\n      watch.cancel(true);\n      watch = null;\n      processWatch = null;\n    }\n  }","id":82066,"modified_method":"@Override\n  public void terminate() {\n    processes.clear();\n    if (!monitor.isShutdown()) {\n      monitor.shutdownNow();\n    }\n    if (!watch.isCancelled()) {\n      watch.cancel(true);\n    }\n  }","commit_id":"26bfa823f22237d7d40cb927f84c840a2d72b37e","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private boolean processIsValid(ProcessWrapper process) {\n    long now = System.currentTimeMillis();\n    return (now - pings.get(process.getName())) < MAX_TIME;\n  }","id":82067,"modified_method":"private boolean processIsValid(ProcessWrapper processWrapper) {\n    if (ProcessUtils.isAlive(processWrapper.process())) {\n      long now = System.currentTimeMillis();\n      return now - pings.get(processWrapper.getName()) < TIMEOUT_MS;\n    }\n    return false;\n  }","commit_id":"26bfa823f22237d7d40cb927f84c840a2d72b37e","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private File buildPropertiesFile() {\n    try {\n      propertiesFile = File.createTempFile(\"sq-conf\", \"properties\");\n      Properties props = new Properties();\n      props.putAll(properties);\n      props.put(Process.NAME_PROPERTY, processName);\n      props.put(Process.PORT_PROPERTY, String.valueOf(jmxPort));\n      OutputStream out = new FileOutputStream(propertiesFile);\n      props.store(out, \"Temporary properties file for Process [\" + getName() + \"]\");\n      out.close();\n      return propertiesFile;\n    } catch (IOException e) {\n      throw new IllegalStateException(\"Cannot write temporary settings to \" + propertiesFile, e);\n    }\n  }","id":82068,"modified_method":"private File buildPropertiesFile() {\n    try {\n      propertiesFile = File.createTempFile(\"sq-conf\", \"properties\");\n      Properties props = new Properties();\n      props.putAll(properties);\n      props.put(MonitoredProcess.NAME_PROPERTY, processName);\n      OutputStream out = new FileOutputStream(propertiesFile);\n      props.store(out, \"Temporary properties file for Process [\" + getName() + \"]\");\n      out.close();\n      return propertiesFile;\n    } catch (IOException e) {\n      throw new IllegalStateException(\"Cannot write temporary settings to \" + propertiesFile, e);\n    }\n  }","commit_id":"26bfa823f22237d7d40cb927f84c840a2d72b37e","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private ProcessMXBean waitForJMX() {\n    Exception exception = null;\n    for (int i = 0; i < 5; i++) {\n      try {\n        Thread.sleep(1000);\n      } catch (InterruptedException e) {\n        throw new IllegalStateException(\"Could not connect to JMX server\", e);\n      }\n      LOGGER.debug(\"Try #{} to connect to JMX server for process '{}'\", i, processName);\n      try {\n        String protocol = \"rmi\";\n        String path = \"/jndi/rmi://\" + InetAddress.getLocalHost().getHostName() + \":\" + jmxPort + \"/jmxrmi\";\n        JMXServiceURL jmxUrl = new JMXServiceURL(protocol, InetAddress.getLocalHost().getHostAddress(), jmxPort, path);\n        JMXConnector jmxConnector = JMXConnectorFactory.connect(jmxUrl, null);\n        MBeanServerConnection mBeanServer = jmxConnector.getMBeanServerConnection();\n        ProcessMXBean bean = JMX.newMBeanProxy(mBeanServer, Process.objectNameFor(processName), ProcessMXBean.class);\n        LOGGER.info(\"{} process up and running, listening to its state with url: '{}'\", getName(), jmxUrl.toString());\n        return bean;\n      } catch (MalformedURLException e) {\n        throw new IllegalStateException(\"JMXUrl is not valid\", e);\n      } catch (UnknownHostException e) {\n        throw new IllegalStateException(\"Could not get hostname\", e);\n      } catch (IOException e) {\n        exception = e;\n      }\n    }\n    throw new IllegalStateException(\"Could not connect to JMX service\", exception);\n  }","id":82069,"modified_method":"/**\n   * Wait for JMX RMI to be ready. Return <code>null<\/code>\n   */\n  @CheckForNull\n  private ProcessMXBean waitForJMX() throws UnknownHostException, MalformedURLException {\n    String path = \"/jndi/rmi://\" + InetAddress.getLocalHost().getHostName() + \":\" + jmxPort + \"/jmxrmi\";\n    JMXServiceURL jmxUrl = new JMXServiceURL(\"rmi\", InetAddress.getLocalHost().getHostAddress(), jmxPort, path);\n\n    for (int i = 0; i < 5; i++) {\n      try {\n        Thread.sleep(1000L);\n        LOGGER.debug(\"Try #{} to connect to JMX server for process '{}'\", i, processName);\n        JMXConnector jmxConnector = JMXConnectorFactory.connect(jmxUrl, null);\n        MBeanServerConnection mBeanServer = jmxConnector.getMBeanServerConnection();\n        ProcessMXBean bean = JMX.newMBeanProxy(mBeanServer, JmxUtils.objectName(processName), ProcessMXBean.class);\n        return bean;\n      } catch (Exception ignored) {\n        // ignored\n      }\n    }\n    // failed to connect\n    return null;\n  }","commit_id":"26bfa823f22237d7d40cb927f84c840a2d72b37e","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public void terminate() {\n    if (processMXBean != null) {\n      LOGGER.info(\"Stopping {} process\", getName());\n      processMXBean.terminate();\n      try {\n        this.join();\n      } catch (InterruptedException e) {\n        // ignore\n      }\n      processMXBean = null;\n      LOGGER.info(\"{} process stopped\", getName());\n    }\n  }","id":82070,"modified_method":"@Override\n  public void terminate() {\n    if (processMXBean != null) {\n      // Send the terminate command to process in order to gracefully shutdown.\n      // Then hardly kill it if it didn't terminate in 30 seconds\n      ScheduledExecutorService killer = Executors.newScheduledThreadPool(1);\n      try {\n        Runnable killerTask = new Runnable() {\n          @Override\n          public void run() {\n            ProcessUtils.destroyQuietly(process);\n          }\n        };\n\n        ScheduledFuture killerFuture = killer.schedule(killerTask, 30, TimeUnit.SECONDS);\n        LOGGER.info(\"Stopping {} process\", getName());\n        processMXBean.terminate();\n        killerFuture.cancel(true);\n        processMXBean = null;\n        LOGGER.info(\"{} process stopped\", getName());\n\n      } catch (Exception e) {\n        LOGGER.warn(\"Failed to terminate \" + getName(), e);\n      } finally {\n        killer.shutdownNow();\n      }\n    } else {\n      // process is not monitored through JMX, but killing it though\n      ProcessUtils.destroyQuietly(process);\n    }\n  }","commit_id":"26bfa823f22237d7d40cb927f84c840a2d72b37e","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public ProcessWrapper execute() {\n    List<String> command = new ArrayList<String>();\n    command.add(buildJavaCommand());\n    command.addAll(javaOpts);\n    command.addAll(buildJMXOptions());\n    command.addAll(buildClasspath());\n    command.add(className);\n    command.add(buildPropertiesFile().getAbsolutePath());\n\n    ProcessBuilder processBuilder = new ProcessBuilder();\n    processBuilder.command(command);\n    processBuilder.directory(workDir);\n    processBuilder.environment().putAll(envProperties);\n\n    try {\n      LOGGER.info(\"Starting {} process with command line: {}\", getName(), StringUtils.join(command, \" \"));\n      process = processBuilder.start();\n      errorGobbler = new StreamGobbler(process.getErrorStream(), this.getName() + \"-ERROR\");\n      outputGobbler = new StreamGobbler(process.getInputStream(), this.getName());\n      outputGobbler.start();\n      errorGobbler.start();\n      processMXBean = waitForJMX();\n      return this;\n    } catch (IOException e) {\n      throw new IllegalStateException(\"Fail to start command: \" + StringUtils.join(command, \" \"), e);\n    }\n  }","id":82071,"modified_method":"/**\n   * Execute command-line and connects to JMX RMI.\n   * @return true on success, false if bad command-line or process failed to start JMX RMI\n   */\n  public boolean execute() {\n    List<String> command = new ArrayList<String>();\n    command.add(buildJavaCommand());\n    command.addAll(javaOpts);\n    command.addAll(buildJMXOptions());\n    command.addAll(buildClasspath());\n    command.add(className);\n    command.add(buildPropertiesFile().getAbsolutePath());\n\n    ProcessBuilder processBuilder = new ProcessBuilder();\n    processBuilder.command(command);\n    processBuilder.directory(workDir);\n    processBuilder.environment().putAll(envProperties);\n\n    try {\n      LOGGER.info(\"Starting {} process with command line: {}\", getName(), StringUtils.join(command, \" \"));\n      process = processBuilder.start();\n      errorGobbler = new StreamGobbler(process.getErrorStream(), this.getName() + \"-ERROR\");\n      outputGobbler = new StreamGobbler(process.getInputStream(), this.getName());\n      outputGobbler.start();\n      errorGobbler.start();\n      processMXBean = waitForJMX();\n      if (processMXBean == null) {\n        terminate();\n        return false;\n      }\n      return true;\n    } catch (IOException e) {\n      throw new IllegalStateException(\"Fail to start command: \" + StringUtils.join(command, \" \"), e);\n    }\n  }","commit_id":"26bfa823f22237d7d40cb927f84c840a2d72b37e","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n    public void run() {\n      InputStreamReader isr = new InputStreamReader(is);\n      BufferedReader br = new BufferedReader(isr);\n      try {\n        String line;\n        while ((line = br.readLine()) != null) {\n          LOGGER.info(pName + \" > \" + line);\n        }\n      } catch (IOException ioe) {\n        exception = ioe;\n\n      } finally {\n        IOUtils.closeQuietly(br);\n        IOUtils.closeQuietly(isr);\n      }\n    }","id":82072,"modified_method":"@Override\n    public void run() {\n      InputStreamReader isr = new InputStreamReader(is);\n      BufferedReader br = new BufferedReader(isr);\n      try {\n        String line;\n        while ((line = br.readLine()) != null) {\n          LOGGER.info(pName + \" > \" + line);\n        }\n      } catch (IOException ignored) {\n        // ignored\n\n      } finally {\n        IOUtils.closeQuietly(br);\n        IOUtils.closeQuietly(isr);\n      }\n    }","commit_id":"26bfa823f22237d7d40cb927f84c840a2d72b37e","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n  public void run() {\n    try {\n      process.waitFor();\n    } catch (InterruptedException e) {\n      LOGGER.info(\"ProcessThread has been interrupted. Killing process.\");\n    } finally {\n      waitUntilFinish(outputGobbler);\n      waitUntilFinish(errorGobbler);\n      closeStreams(process);\n      FileUtils.deleteQuietly(propertiesFile);\n      processMXBean = null;\n    }\n    LOGGER.trace(\"ProcessWrapper::run() END\");\n  }","id":82073,"modified_method":"@Override\n  public void run() {\n    try {\n      if (ProcessUtils.isAlive(process)) {\n        process.waitFor();\n      }\n    } catch (Exception e) {\n      LOGGER.info(\"ProcessThread has been interrupted. Killing process.\");\n    } finally {\n      waitUntilFinish(outputGobbler);\n      waitUntilFinish(errorGobbler);\n      ProcessUtils.closeStreams(process);\n      FileUtils.deleteQuietly(propertiesFile);\n      processMXBean = null;\n    }\n    LOGGER.trace(\"ProcessWrapper::run() END\");\n  }","commit_id":"26bfa823f22237d7d40cb927f84c840a2d72b37e","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n  public void start() {\n    LOGGER.info(\"SonarQube home: \" + homeDir.getAbsolutePath());\n    if (!homeDir.isDirectory() || !homeDir.exists()) {\n      throw new IllegalStateException(\"SonarQube home directory does not exist\");\n    }\n\n    try {\n      if (getDeployDir() == null) {\n        throw new IllegalArgumentException(\"Web app directory does not exist: \" + getDeployDir());\n      }\n\n      LOGGER.info(\"Deploy dir: \" + getDeployDir().getAbsolutePath());\n      FileUtils.forceMkdir(getDeployDir());\n      for (File subDirectory : getDeployDir().listFiles((FileFilter) FileFilterUtils.directoryFileFilter())) {\n        FileUtils.cleanDirectory(subDirectory);\n      }\n\n    } catch (IOException e) {\n      throw new IllegalStateException(\"The following directory can not be created: \" + getDeployDir().getAbsolutePath(), e);\n    }\n\n    File deprecated = getDeprecatedPluginsDir();\n    try {\n      FileUtils.forceMkdir(deprecated);\n      FileUtils.cleanDirectory(deprecated);\n\n    } catch (IOException e) {\n      throw new IllegalStateException(\"The following directory can not be created: \" + deprecated.getAbsolutePath(), e);\n    }\n  }","id":82074,"modified_method":"@Override\n  public void start() {\n    LOGGER.info(\"SonarQube home: \" + homeDir.getAbsolutePath());\n    try {\n      if (getDeployDir() == null) {\n        throw new IllegalArgumentException(\"Web app directory does not exist: \" + getDeployDir());\n      }\n      FileUtils.forceMkdir(getDeployDir());\n      for (File subDirectory : getDeployDir().listFiles((FileFilter) FileFilterUtils.directoryFileFilter())) {\n        FileUtils.cleanDirectory(subDirectory);\n      }\n\n    } catch (IOException e) {\n      throw new IllegalStateException(\"The following directory can not be created: \" + getDeployDir().getAbsolutePath(), e);\n    }\n\n    File deprecated = getDeprecatedPluginsDir();\n    try {\n      FileUtils.forceMkdir(deprecated);\n      FileUtils.cleanDirectory(deprecated);\n\n    } catch (IOException e) {\n      throw new IllegalStateException(\"The following directory can not be created: \" + deprecated.getAbsolutePath(), e);\n    }\n  }","commit_id":"0c9d03f3aa048ebb6e147eb1d3fd341d0602bba7","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n  public void onStart() {\n    String dataDir = props.of(\"sonar.path.data\");\n    Integer port = props.intOf(ES_PORT_PROPERTY);\n    String clusterName = props.of(ES_CLUSTER_PROPERTY, DEFAULT_CLUSTER_NAME);\n\n    LoggerFactory.getLogger(ElasticSearch.class).info(\"Starting ES[{}] on port: {}\", clusterName, port);\n\n    ImmutableSettings.Builder esSettings = ImmutableSettings.settingsBuilder()\n      .put(\"es.foreground\", \"yes\")\n\n      .put(\"discovery.zen.ping.multicast.enabled\", \"false\")\n\n      .put(\"index.merge.policy.max_merge_at_once\", \"200\")\n      .put(\"index.merge.policy.segments_per_tier\", \"200\")\n      .put(\"index.number_of_shards\", \"1\")\n      .put(\"index.number_of_replicas\", \"0\")\n      .put(\"index.store.type\", \"mmapfs\")\n      .put(\"indices.store.throttle.type\", \"merge\")\n      .put(\"indices.store.throttle.max_bytes_per_sec\", \"200mb\")\n\n      .put(\"script.default_lang\", \"native\")\n      .put(\"script.native.\" + ListUpdate.NAME + \".type\", ListUpdate.UpdateListScriptFactory.class.getName())\n\n      .put(\"cluster.name\", clusterName)\n      .put(\"node.name\", \"sonarqube-\" + System.currentTimeMillis())\n      .put(\"node.data\", true)\n      .put(\"node.local\", false)\n      .put(\"transport.tcp.port\", port)\n      .put(\"path.data\", new File(dataDir, \"es\").getAbsolutePath());\n\n    initAnalysis(esSettings);\n\n    if (props.booleanOf(ES_DEBUG_PROPERTY, false)) {\n      esSettings\n        .put(\"http.enabled\", true)\n        .put(\"http.port\", 9200);\n    } else {\n      esSettings.put(\"http.enabled\", false);\n    }\n\n    node = NodeBuilder.nodeBuilder()\n      .settings(esSettings)\n      .build().start();\n\n    while (node != null && !node.isClosed()) {\n      try {\n        Thread.sleep(100);\n      } catch (InterruptedException e) {\n        node.close();\n      }\n    }\n    terminate();\n  }","id":82075,"modified_method":"@Override\n  public void onStart() {\n    String dataDir = props.of(\"sonar.path.data\");\n    Integer port = props.intOf(ES_PORT_PROPERTY);\n    String clusterName = props.of(ES_CLUSTER_PROPERTY);\n\n    LoggerFactory.getLogger(ElasticSearch.class).info(\"Starting ES[{}] on port: {}\", clusterName, port);\n\n    ImmutableSettings.Builder esSettings = ImmutableSettings.settingsBuilder()\n      .put(\"es.foreground\", \"yes\")\n\n      .put(\"discovery.zen.ping.multicast.enabled\", \"false\")\n\n      .put(\"index.merge.policy.max_merge_at_once\", \"200\")\n      .put(\"index.merge.policy.segments_per_tier\", \"200\")\n      .put(\"index.number_of_shards\", \"1\")\n      .put(\"index.number_of_replicas\", \"0\")\n      .put(\"index.store.type\", \"mmapfs\")\n      .put(\"indices.store.throttle.type\", \"merge\")\n      .put(\"indices.store.throttle.max_bytes_per_sec\", \"200mb\")\n\n      .put(\"script.default_lang\", \"native\")\n      .put(\"script.native.\" + ListUpdate.NAME + \".type\", ListUpdate.UpdateListScriptFactory.class.getName())\n\n      .put(\"cluster.name\", clusterName)\n      .put(\"node.name\", \"sonarqube-\" + System.currentTimeMillis())\n      .put(\"node.data\", true)\n      .put(\"node.local\", false)\n      .put(\"transport.tcp.port\", port)\n      .put(\"path.data\", new File(dataDir, \"es\").getAbsolutePath());\n\n    initAnalysis(esSettings);\n\n    if (props.booleanOf(ES_DEBUG_PROPERTY, false)) {\n      esSettings\n        .put(\"http.enabled\", true)\n        .put(\"http.port\", 9200);\n    } else {\n      esSettings.put(\"http.enabled\", false);\n    }\n\n    node = NodeBuilder.nodeBuilder()\n      .settings(esSettings)\n      .build().start();\n\n    while (node != null && !node.isClosed()) {\n      try {\n        Thread.sleep(100);\n      } catch (InterruptedException e) {\n        node.close();\n      }\n    }\n    terminate();\n  }","commit_id":"0c9d03f3aa048ebb6e147eb1d3fd341d0602bba7","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"Installation() throws URISyntaxException, IOException {\n    // TODO make it configurable with sonar.path.home ?\n    // lib/sonar-application.jar\n    File appJar = new File(getClass().getProtectionDomain().getCodeSource().getLocation().toURI());\n    homeDir = appJar.getParentFile().getParentFile();\n\n    Properties p = new Properties();\n    File propsFile = new File(homeDir, \"conf/sonar.properties\");\n    if (propsFile.exists()) {\n      FileReader reader = new FileReader(propsFile);\n      try {\n        p.load(reader);\n      } finally {\n        IOUtils.closeQuietly(reader);\n      }\n    }\n    p.putAll(System.getenv());\n    p.putAll(System.getProperties());\n    p = ConfigurationUtils.interpolateEnvVariables(p);\n    for (Map.Entry<Object, Object> entry : p.entrySet()) {\n      Object val = entry.getValue();\n      if (val != null) {\n        this.props.put(entry.getKey().toString(), val.toString());\n      }\n    }\n\n    props.put(\"sonar.path.home\", homeDir.getAbsolutePath());\n    this.dataDir = existingDir(\"sonar.path.data\", \"data\");\n    this.tempDir = freshDir(\"sonar.path.temp\", \"temp\");\n    this.logsDir = existingDir(\"sonar.path.logs\", \"logs\");\n    this.webDir = existingDir(\"sonar.path.web\", \"web\");\n  }","id":82076,"modified_method":"Installation() throws URISyntaxException, IOException {\n    // lib/sonar-application.jar\n    File appJar = new File(getClass().getProtectionDomain().getCodeSource().getLocation().toURI());\n    homeDir = appJar.getParentFile().getParentFile();\n\n    props = initProps(homeDir);\n\n    // init file system\n    props.put(\"sonar.path.home\", homeDir.getAbsolutePath());\n    this.dataDir = existingDir(\"sonar.path.data\", \"data\");\n    this.tempDir = freshDir(\"sonar.path.temp\", \"temp\");\n    this.logsDir = existingDir(\"sonar.path.logs\", \"logs\");\n    this.webDir = existingDir(\"sonar.path.web\", \"web\");\n\n    initElasticsearch();\n  }","commit_id":"0c9d03f3aa048ebb6e147eb1d3fd341d0602bba7","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"/**\n   * Configure Logback from classpath, with configuration from sonar.properties\n   */\n  private void configureLogback(ServletContextEvent event) {\n    String configProfilingLevel = defaultIfEmpty(\n      event.getServletContext().getInitParameter(Profiling.CONFIG_PROFILING_LEVEL),\n      System.getProperty(Profiling.CONFIG_PROFILING_LEVEL));\n    Profiling.Level profilingLevel = Profiling.Level.fromConfigString(configProfilingLevel);\n    String consoleEnabled = defaultIfEmpty(defaultIfEmpty(\n        event.getServletContext().getInitParameter(CONFIG_LOG_CONSOLE),\n        System.getProperty(CONFIG_LOG_CONSOLE)),\n      // Line below used in last resort\n      \"false\");\n    Map<String, String> variables = ImmutableMap.of(\n      \"RAILS_LOGGER_LEVEL\", profilingLevel == Profiling.Level.FULL ? \"DEBUG\" : \"WARN\",\n      \"LOGFILE_LOGGING_FORMAT\", profilingLevel == Profiling.Level.FULL ? LOGFILE_FULL_LOGGING_FORMAT : LOGFILE_STANDARD_LOGGING_FORMAT,\n      \"CONSOLE_LOGGING_FORMAT\", profilingLevel == Profiling.Level.FULL ? CONSOLE_FULL_LOGGING_FORMAT : CONSOLE_STANDARD_LOGGING_FORMAT,\n      \"CONSOLE_ENABLED\", consoleEnabled);\n    Logback.configure(\"/org/sonar/server/platform/logback.xml\", variables);\n  }","id":82077,"modified_method":"/**\n   * Configure Logback from classpath, with configuration from sonar.properties\n   */\n  private void configureLogback(ServletContextEvent event) {\n    String configProfilingLevel = defaultIfEmpty(\n      event.getServletContext().getInitParameter(Profiling.CONFIG_PROFILING_LEVEL),\n      System.getProperty(Profiling.CONFIG_PROFILING_LEVEL));\n    Profiling.Level profilingLevel = Profiling.Level.fromConfigString(configProfilingLevel);\n    String consoleEnabled = defaultIfEmpty(defaultIfEmpty(\n        event.getServletContext().getInitParameter(CONFIG_LOG_CONSOLE),\n        System.getProperty(CONFIG_LOG_CONSOLE)),\n      // Line below used in last resort\n      \"false\");\n    Map<String, String> variables = ImmutableMap.of(\n      \"LOGFILE_LOGGING_FORMAT\", profilingLevel == Profiling.Level.FULL ? LOGFILE_FULL_LOGGING_FORMAT : LOGFILE_STANDARD_LOGGING_FORMAT,\n      \"CONSOLE_LOGGING_FORMAT\", profilingLevel == Profiling.Level.FULL ? CONSOLE_FULL_LOGGING_FORMAT : CONSOLE_STANDARD_LOGGING_FORMAT,\n      \"CONSOLE_ENABLED\", consoleEnabled);\n    Logback.configure(\"/org/sonar/server/platform/logback.xml\", variables);\n  }","commit_id":"0c9d03f3aa048ebb6e147eb1d3fd341d0602bba7","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public ProcessWrapper setArguments(Map<String, String> args) {\n    arguments.clear();\n    arguments.putAll(args);\n    return this;\n  }","id":82078,"modified_method":"public ProcessWrapper setProperties(Map<String, String> args) {\n    properties.clear();\n    properties.putAll(args);\n    return this;\n  }","commit_id":"0c9d03f3aa048ebb6e147eb1d3fd341d0602bba7","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private File buildPropertiesFile() {\n    try {\n      propertiesFile = File.createTempFile(\"sq-conf\", \"properties\");\n      Properties props = new Properties();\n      props.putAll(arguments);\n      props.put(Process.NAME_PROPERTY, processName);\n      props.put(Process.PORT_PROPERTY, String.valueOf(jmxPort));\n      OutputStream out = new FileOutputStream(propertiesFile);\n      props.store(out, \"Temporary properties file for Process [\" + getName() + \"]\");\n      out.close();\n      return propertiesFile;\n    } catch (IOException e) {\n      throw new IllegalStateException(\"Cannot write temporary settings to \" + propertiesFile, e);\n    }\n  }","id":82079,"modified_method":"private File buildPropertiesFile() {\n    try {\n      propertiesFile = File.createTempFile(\"sq-conf\", \"properties\");\n      Properties props = new Properties();\n      props.putAll(properties);\n      props.put(Process.NAME_PROPERTY, processName);\n      props.put(Process.PORT_PROPERTY, String.valueOf(jmxPort));\n      OutputStream out = new FileOutputStream(propertiesFile);\n      props.store(out, \"Temporary properties file for Process [\" + getName() + \"]\");\n      out.close();\n      return propertiesFile;\n    } catch (IOException e) {\n      throw new IllegalStateException(\"Cannot write temporary settings to \" + propertiesFile, e);\n    }\n  }","commit_id":"0c9d03f3aa048ebb6e147eb1d3fd341d0602bba7","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public void execute() {\n    List<String> command = new ArrayList<String>();\n    command.add(buildJavaCommand());\n    command.addAll(javaOpts);\n    command.addAll(buildJMXOptions());\n    command.addAll(buildClasspath());\n    command.add(className);\n    command.add(buildPropertiesFile().getAbsolutePath());\n\n    ProcessBuilder processBuilder = new ProcessBuilder();\n    processBuilder.command(command);\n    processBuilder.directory(workDir);\n\n    try {\n      LOGGER.debug(\"ProcessWrapper::executeProcess() -- Starting process with command '{}'\", StringUtils.join(command, \" \"));\n      process = processBuilder.start();\n      LOGGER.debug(\"ProcessWrapper::executeProcess() -- Process started: {}\", process.toString());\n      errorGobbler = new StreamGobbler(process.getErrorStream(), this.getName() + \"-ERROR\");\n      outputGobbler = new StreamGobbler(process.getInputStream(), this.getName());\n      outputGobbler.start();\n      errorGobbler.start();\n      processMXBean = waitForJMX();\n\n    } catch (IOException e) {\n      throw new IllegalStateException(\"Fail to start process: \" + StringUtils.join(command, \" \"), e);\n    }\n  }","id":82080,"modified_method":"public ProcessWrapper execute() {\n    List<String> command = new ArrayList<String>();\n    command.add(buildJavaCommand());\n    command.addAll(javaOpts);\n    command.addAll(buildJMXOptions());\n    command.addAll(buildClasspath());\n    command.add(className);\n    command.add(buildPropertiesFile().getAbsolutePath());\n\n    ProcessBuilder processBuilder = new ProcessBuilder();\n    processBuilder.command(command);\n    processBuilder.directory(workDir);\n    processBuilder.environment().putAll(envProperties);\n\n    try {\n      LOGGER.debug(\"ProcessWrapper::executeProcess() -- Starting process with command '{}'\", StringUtils.join(command, \" \"));\n      process = processBuilder.start();\n      LOGGER.debug(\"ProcessWrapper::executeProcess() -- Process started: {}\", process.toString());\n      errorGobbler = new StreamGobbler(process.getErrorStream(), this.getName() + \"-ERROR\");\n      outputGobbler = new StreamGobbler(process.getInputStream(), this.getName());\n      outputGobbler.start();\n      errorGobbler.start();\n      processMXBean = waitForJMX();\n      return this;\n\n    } catch (IOException e) {\n      throw new IllegalStateException(\"Fail to start process: \" + StringUtils.join(command, \" \"), e);\n    }\n  }","commit_id":"0c9d03f3aa048ebb6e147eb1d3fd341d0602bba7","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private List<String> buildClasspath() {\n    return Arrays.asList(\"-cp\", StringUtils.join(classpath, \";\"));\n  }","id":82081,"modified_method":"private List<String> buildClasspath() {\n    return Arrays.asList(\"-cp\", StringUtils.join(classpath, System.getProperty(\"path.separator\")));\n  }","commit_id":"0c9d03f3aa048ebb6e147eb1d3fd341d0602bba7","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public StartServer() throws Exception {\n    Installation installation = new Installation();\n\n    String esPort = installation.prop(\"sonar.es.node.port\", null);\n    if (esPort == null) {\n      esPort = String.valueOf(NetworkUtils.freePort());\n    }\n    String esCluster = installation.prop(\"sonar.es.cluster.name\", null);\n    if (esCluster == null) {\n      installation.setProp(\"sonar.es.cluster.name\", \"sonarqube\");\n    }\n\n    shutdownHook = new Thread(new Runnable() {\n      @Override\n      public void run() {\n        stop();\n      }\n    });\n\n    Runtime.getRuntime().addShutdownHook(shutdownHook);\n\n    monitor = new Monitor();\n\n    String opts = installation.prop(\"sonar.es.javaOpts\", \"-server -Xmx256m -Xms128m -Xss256k -XX:+UseParNewGC -XX:+UseConcMarkSweepGC -XX:CMSInitiatingOccupancyFraction=75 -XX:+UseCMSInitiatingOccupancyOnly\");\n    elasticsearch = new ProcessWrapper(\"ES\")\n      .setWorkDir(installation.homeDir())\n      .addJavaOpts(opts)\n      .setClassName(\"org.sonar.search.ElasticSearch\")\n      .setArguments(installation.props())\n      .setArgument(\"sonar.es.node.port\", esPort)\n      .addClasspath(installation.starPath(\"lib/common\"))\n      .addClasspath(installation.starPath(\"lib/search\"));\n    monitor.registerProcess(elasticsearch);\n\n\n    opts = installation.prop(\"sonar.web.javaOpts\", \"-Xmx768m -server -XX:MaxPermSize=160m -Djava.awt.headless=true -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8 -Djruby.management.enabled=false\");\n    server = new ProcessWrapper(\"SQ\")\n      .setWorkDir(installation.homeDir())\n      .addJavaOpts(opts)\n      .setClassName(\"org.sonar.server.app.ServerProcess\")\n      .setEnvProperty(\"SONAR_HOME\", installation.homeDir().getAbsolutePath())\n      .setArguments(installation.props())\n      .setArgument(\"sonar.es.type\", \"TRANSPORT\")\n      .addClasspath(installation.starPath(\"extensions/jdbc-driver/mysql\"))\n      .addClasspath(installation.starPath(\"extensions/jdbc-driver/mssql\"))\n      .addClasspath(installation.starPath(\"extensions/jdbc-driver/oracle\"))\n      .addClasspath(installation.starPath(\"extensions/jdbc-driver/postgresql\"))\n      .addClasspath(installation.starPath(\"lib/common\"))\n      .addClasspath(installation.starPath(\"lib/server\"));\n    monitor.registerProcess(server);\n\n    monitor.start();\n    try {\n      monitor.join();\n    } finally {\n      stop();\n    }\n  }","id":82082,"modified_method":"public StartServer() throws Exception {\n    Installation installation = new Installation();\n\n    shutdownHook = new Thread(new Runnable() {\n      @Override\n      public void run() {\n        stop();\n      }\n    });\n\n    Runtime.getRuntime().addShutdownHook(shutdownHook);\n\n    monitor = new Monitor();\n\n    String opts = installation.prop(\"sonar.es.javaOpts\", \"-server -Xmx256m -Xms128m -Xss256k -XX:+UseParNewGC -XX:+UseConcMarkSweepGC -XX:CMSInitiatingOccupancyFraction=75 -XX:+UseCMSInitiatingOccupancyOnly\");\n    elasticsearch = new ProcessWrapper(\"ES\")\n      .setWorkDir(installation.homeDir())\n      .setJmxPort(NetworkUtils.freePort())\n      .addJavaOpts(opts)\n      .addJavaOpts(\"-Djava.io.tmpdir=\" + installation.tempDir().getAbsolutePath())\n      .setEnvProperty(\"SONAR_HOME\", installation.homeDir().getAbsolutePath())\n      .setClassName(\"org.sonar.search.ElasticSearch\")\n      .setProperties(installation.props())\n      .addClasspath(installation.starPath(\"lib/common\"))\n      .addClasspath(installation.starPath(\"lib/search\"))\n      .execute();\n    monitor.registerProcess(elasticsearch);\n\n\n    opts = installation.prop(\"sonar.web.javaOpts\", \"-Xmx768m -server -XX:MaxPermSize=160m -XX:+HeapDumpOnOutOfMemoryError\");\n    server = new ProcessWrapper(\"SQ\")\n      .setWorkDir(installation.homeDir())\n      .setJmxPort(NetworkUtils.freePort())\n      .addJavaOpts(opts)\n      .addJavaOpts(\"-Djava.awt.headless=true -Dfile.encoding=UTF-8 -Djruby.management.enabled=false\")\n      .addJavaOpts(\"-Djava.io.tmpdir=\" + installation.tempDir().getAbsolutePath())\n      .setClassName(\"org.sonar.server.app.ServerProcess\")\n      .setEnvProperty(\"SONAR_HOME\", installation.homeDir().getAbsolutePath())\n      .setProperties(installation.props())\n      .addClasspath(installation.starPath(\"extensions/jdbc-driver/mysql\"))\n      .addClasspath(installation.starPath(\"extensions/jdbc-driver/mssql\"))\n      .addClasspath(installation.starPath(\"extensions/jdbc-driver/oracle\"))\n      .addClasspath(installation.starPath(\"extensions/jdbc-driver/postgresql\"))\n      .addClasspath(installation.starPath(\"lib/common\"))\n      .addClasspath(installation.starPath(\"lib/server\"))\n      .execute();\n    monitor.registerProcess(server);\n\n    monitor.start();\n    try {\n      monitor.join();\n    } finally {\n      stop();\n    }\n  }","commit_id":"0c9d03f3aa048ebb6e147eb1d3fd341d0602bba7","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private void setupCredentialMessages( ) {\n    try{\n      final User owner = Accounts.lookupUserById(this.allocInfo.getOwnerFullName().getUserId());\n      if(! owner.isSystemAdmin())\n        return;\n    }catch(final AuthException ex){\n      return;\n    }\n    // determine if credential setup is requested\n    if(allocInfo.getUserData()==null || \n        allocInfo.getUserData().length< VmInstances.VmSpecialUserData.EUCAKEY_CRED_SETUP.toString().length())\n      return;\n    String userData = new String(allocInfo.getUserData(), 0, \n        VmInstances.VmSpecialUserData.EUCAKEY_CRED_SETUP.toString().length());\n    if(!userData.startsWith(VmInstances.VmSpecialUserData.EUCAKEY_CRED_SETUP.toString()))\n      return;\n    userData = new String(allocInfo.getUserData());\n    String payload = null;\n    if(userData.length()> VmInstances.VmSpecialUserData.EUCAKEY_CRED_SETUP.toString().length()) {\n        payload=userData.substring(VmInstances.VmSpecialUserData.EUCAKEY_CRED_SETUP.toString().length()).trim();\n    }\n    this.allocInfo.setUserData(payload);\n    // create rsa keypair\n    try{\n      final KeyPair kp = Certs.generateKeyPair();\n      final X509Certificate kpCert = Certs.generateCertificate(kp, \n          String.format(\"Certificate-for-%s/%s\", this.allocInfo.getOwnerFullName().getAccountName(),  \n              this.allocInfo.getOwnerFullName().getUserName()));\n      \n      // call iam:signCertificate with the pub key\n      final String b64PubKey =  PEMFiles.fromCertificate(kpCert);\n      final ServiceConfiguration euare = Topology.lookup(Euare.class);\n      final SignCertificateType req = new SignCertificateType();\n      req.setCertificate(b64PubKey);\n      \n      final SignCertificateResponseType resp= AsyncRequests.sendSync( euare, req );\n      final String token = resp.getSignCertificateResult().getSignature(); //in Base64\n      \n      // use NODECERT to encrypt the pk\n      // generate symmetric key\n      final MessageDigest digest = Digest.SHA256.get();\n      final byte[] salt = new byte[32];\n      Crypto.getSecureRandomSupplier().get().nextBytes(salt);\n      digest.update( salt );\n      final SecretKey symmKey = new SecretKeySpec( digest.digest(), \"AES\" );\n      \n      // encrypt the server pk\n      Cipher cipher = Ciphers.AES_GCM.get();\n      final byte[] iv = new byte[12];\n      Crypto.getSecureRandomSupplier().get().nextBytes(iv);\n      cipher.init( Cipher.ENCRYPT_MODE, symmKey, new IvParameterSpec( iv ) );\n      final byte[] cipherText = cipher.doFinal(Base64.encode(PEMFiles.getBytes(kp.getPrivate())));\n      final String encPrivKey = new String(Base64.encode(Arrays.concatenate(iv, cipherText)));\n      \n      // encrypt the token from EUARE\n      cipher = Ciphers.AES_GCM.get();\n      cipher.init( Cipher.ENCRYPT_MODE, symmKey, new IvParameterSpec( iv ) );\n      final byte[] byteToken = cipher.doFinal(token.getBytes());\n      final String encToken = new String(Base64.encode(Arrays.concatenate(iv, byteToken)));\n      \n      // encrypt the symmetric key\n      X509Certificate nodeCert = this.allocInfo.getPartition().getNodeCertificate();\n      cipher = Ciphers.RSA_PKCS1.get();\n      cipher.init(Cipher.ENCRYPT_MODE, nodeCert.getPublicKey());\n      byte[] symmkey = cipher.doFinal(symmKey.getEncoded());\n      final String encSymmKey = new String(Base64.encode(symmkey));\n      \n      X509Certificate euareCert = SystemCredentials.lookup(Euare.class).getCertificate();\n      final String b64EuarePubkey = PEMFiles.fromCertificate(euareCert);\n    \n      // EUARE's pubkey, VM's pubkey, token from EUARE(ENCRYPTED), SYM_KEY(ENCRYPTED), VM_KEY(ENCRYPTED)\n      // each field all in B64\n      final String credential = String.format(\"%s\\n%s\\n%s\\n%s\\n%s\",\n          b64EuarePubkey,\n          b64PubKey, \n          encToken, // iam token\n          encSymmKey, \n          encPrivKey);\n      this.allocInfo.setCredential(credential);\n    }catch(final Exception ex){\n      LOG.error(\"failed to setup instance credential\", ex);\n    }\n  }","id":82083,"modified_method":"private void setupCredentialMessages( ) {\n    try{\n      final User owner = Accounts.lookupUserById(this.allocInfo.getOwnerFullName().getUserId());\n      if(! owner.isSystemAdmin())\n        return;\n    }catch(final AuthException ex){\n      return;\n    }\n    // determine if credential setup is requested\n    if(allocInfo.getUserData()==null || \n        allocInfo.getUserData().length< VmInstances.VmSpecialUserData.EUCAKEY_CRED_SETUP.toString().length())\n      return;\n    String userData = new String(allocInfo.getUserData(), 0, \n        VmInstances.VmSpecialUserData.EUCAKEY_CRED_SETUP.toString().length());\n    if(!userData.startsWith(VmInstances.VmSpecialUserData.EUCAKEY_CRED_SETUP.toString()))\n      return;\n    userData = new String(allocInfo.getUserData());\n    String payload = null;\n    if(userData.length()> VmInstances.VmSpecialUserData.EUCAKEY_CRED_SETUP.toString().length()) {\n        payload=userData.substring(VmInstances.VmSpecialUserData.EUCAKEY_CRED_SETUP.toString().length()).trim();\n    }\n    this.allocInfo.setUserData(payload);\n    // create rsa keypair\n    try{\n      final KeyPair kp = Certs.generateKeyPair();\n      final X509Certificate kpCert = Certs.generateCertificate(kp, \n          String.format(\"Certificate-for-%s/%s\", this.allocInfo.getOwnerFullName().getAccountName(),  \n              this.allocInfo.getOwnerFullName().getUserName()));\n      \n      // call iam:signCertificate with the pub key\n      final String b64PubKey = B64.standard.encString( PEMFiles.getBytes( kpCert ) );\n      final ServiceConfiguration euare = Topology.lookup(Euare.class);\n      final SignCertificateType req = new SignCertificateType();\n      req.setCertificate(b64PubKey);\n      \n      final SignCertificateResponseType resp= AsyncRequests.sendSync( euare, req );\n      final String token = resp.getSignCertificateResult().getSignature(); //in Base64\n      \n      // use NODECERT to encrypt the pk\n      // generate symmetric key\n      final MessageDigest digest = Digest.SHA256.get();\n      final byte[] salt = new byte[32];\n      Crypto.getSecureRandomSupplier().get().nextBytes(salt);\n      digest.update( salt );\n      final SecretKey symmKey = new SecretKeySpec( digest.digest(), \"AES\" );\n      \n      // encrypt the server pk\n      Cipher cipher = Ciphers.AES_GCM.get();\n      final byte[] iv = new byte[12];\n      Crypto.getSecureRandomSupplier().get().nextBytes(iv);\n      cipher.init( Cipher.ENCRYPT_MODE, symmKey, new IvParameterSpec( iv ) );\n      final byte[] cipherText = cipher.doFinal(Base64.encode(PEMFiles.getBytes(kp.getPrivate())));\n      final String encPrivKey = new String(Base64.encode(Arrays.concatenate(iv, cipherText)));\n      \n      // encrypt the token from EUARE\n      cipher = Ciphers.AES_GCM.get();\n      cipher.init( Cipher.ENCRYPT_MODE, symmKey, new IvParameterSpec( iv ) );\n      final byte[] byteToken = cipher.doFinal(token.getBytes());\n      final String encToken = new String(Base64.encode(Arrays.concatenate(iv, byteToken)));\n      \n      // encrypt the symmetric key\n      X509Certificate nodeCert = this.allocInfo.getPartition().getNodeCertificate();\n      cipher = Ciphers.RSA_PKCS1.get();\n      cipher.init(Cipher.ENCRYPT_MODE, nodeCert.getPublicKey());\n      byte[] symmkey = cipher.doFinal(symmKey.getEncoded());\n      final String encSymmKey = new String(Base64.encode(symmkey));\n      \n      X509Certificate euareCert = SystemCredentials.lookup(Euare.class).getCertificate();\n      final String b64EuarePubkey = B64.standard.encString( PEMFiles.getBytes( euareCert ) );\n    \n      // EUARE's pubkey, VM's pubkey, token from EUARE(ENCRYPTED), SYM_KEY(ENCRYPTED), VM_KEY(ENCRYPTED)\n      // each field all in B64\n      final String credential = String.format(\"%s\\n%s\\n%s\\n%s\\n%s\",\n          b64EuarePubkey,\n          b64PubKey, \n          encToken, // iam token\n          encSymmKey, \n          encPrivKey);\n      this.allocInfo.setCredential(credential);\n    }catch(final Exception ex){\n      LOG.error(\"failed to setup instance credential\", ex);\n    }\n  }","commit_id":"3435c45969da40a3d5e13ba5249568c6c993cc3b","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public static boolean verifySignature(final String certPem, final String msg, final String sigB64){\n    try{\n      final Signature sig = Signature.getInstance(\"SHA256withRSA\");\n      final X509Certificate cert = PEMFiles.toCertificate(certPem);\n      sig.initVerify( cert );\n      sig.update(msg.getBytes());\n      return sig.verify(B64.standard.dec(sigB64.getBytes()));\n    }catch(final Exception ex){\n      throw Exceptions.toUndeclared(ex);\n    }\n  }","id":82084,"modified_method":"public static boolean verifySignature(final String certPem, final String msg, final String sigB64){\n    try{\n      final Signature sig = Signature.getInstance(\"SHA256withRSA\");\n      final X509Certificate cert = PEMFiles.getCert( B64.standard.dec( certPem ) );\n      sig.initVerify( cert );\n      sig.update(msg.getBytes());\n      return sig.verify(B64.standard.dec(sigB64.getBytes()));\n    }catch(final Exception ex){\n      throw Exceptions.toUndeclared(ex);\n    }\n  }","commit_id":"3435c45969da40a3d5e13ba5249568c6c993cc3b","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public static String getEncryptedKey(final String certArn, final String certPem) throws AuthException {\n    final ServerCertificate targetCert = lookupServerCertificate(certArn); \n    // generate symmetric key\n    final MessageDigest digest = Digest.SHA256.get();\n    final byte[] salt = new byte[32];\n    Crypto.getSecureRandomSupplier().get().nextBytes(salt);\n    digest.update( salt );\n    final SecretKey symmKey = new SecretKeySpec( digest.digest(), \"AES\" );\n    \n    try{\n      // encrypt the server pk using symm key\n      Cipher cipher = Ciphers.AES_CBC.get();\n      final byte[] iv = new byte[16];\n      Crypto.getSecureRandomSupplier().get().nextBytes(iv);\n      cipher.init( Cipher.ENCRYPT_MODE, symmKey, new IvParameterSpec( iv ) );\n      final byte[] cipherText = cipher.doFinal(Base64.encode( targetCert.getPrivateKey().getBytes() ));\n      final String encPrivKey = new String(Base64.encode(Arrays.concatenate(iv, cipherText)));\n\n      // encrypt the symmetric key using the certPem\n      X509Certificate x509Cert = PEMFiles.toCertificate(certPem);\n      cipher = Ciphers.RSA_PKCS1.get();\n      cipher.init(Cipher.ENCRYPT_MODE, x509Cert.getPublicKey());\n      byte[] symmkey = cipher.doFinal(symmKey.getEncoded());\n      final String b64SymKey = new String(Base64.encode(symmkey));\n      \n      return String.format(\"%s\\n%s\", b64SymKey, encPrivKey);\n    }catch(final Exception ex){\n      throw Exceptions.toUndeclared(ex);\n    }\n  }","id":82085,"modified_method":"public static String getEncryptedKey(final String certArn, final String certPem) throws AuthException {\n    final ServerCertificate targetCert = lookupServerCertificate(certArn); \n    // generate symmetric key\n    final MessageDigest digest = Digest.SHA256.get();\n    final byte[] salt = new byte[32];\n    Crypto.getSecureRandomSupplier().get().nextBytes(salt);\n    digest.update( salt );\n    final SecretKey symmKey = new SecretKeySpec( digest.digest(), \"AES\" );\n    \n    try{\n      // encrypt the server pk using symm key\n      Cipher cipher = Ciphers.AES_CBC.get();\n      final byte[] iv = new byte[16];\n      Crypto.getSecureRandomSupplier().get().nextBytes(iv);\n      cipher.init( Cipher.ENCRYPT_MODE, symmKey, new IvParameterSpec( iv ) );\n      final byte[] cipherText = cipher.doFinal(Base64.encode( targetCert.getPrivateKey().getBytes() ));\n      final String encPrivKey = new String(Base64.encode(Arrays.concatenate(iv, cipherText)));\n\n      // encrypt the symmetric key using the certPem\n      X509Certificate x509Cert = PEMFiles.getCert( B64.standard.dec( certPem ) );\n      cipher = Ciphers.RSA_PKCS1.get();\n      cipher.init(Cipher.ENCRYPT_MODE, x509Cert.getPublicKey());\n      byte[] symmkey = cipher.doFinal(symmKey.getEncoded());\n      final String b64SymKey = new String(Base64.encode(symmkey));\n      \n      return String.format(\"%s\\n%s\", b64SymKey, encPrivKey);\n    }catch(final Exception ex){\n      throw Exceptions.toUndeclared(ex);\n    }\n  }","commit_id":"3435c45969da40a3d5e13ba5249568c6c993cc3b","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public static boolean verifySignatureWithEuare(final String msg, final String sigB64){\n    final String euareCert = PEMFiles.fromCertificate(SystemCredentials.lookup( Euare.class ).getCertificate());\n    return verifySignature(euareCert, msg, sigB64);\n  }","id":82086,"modified_method":"public static boolean verifySignatureWithEuare(final String msg, final String sigB64){\n    final String euareCert = \n        B64.standard.encString( PEMFiles.getBytes( SystemCredentials.lookup( Euare.class ).getCertificate() ) );\n    return verifySignature(euareCert, msg, sigB64);\n  }","commit_id":"3435c45969da40a3d5e13ba5249568c6c993cc3b","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public static X509Certificate toCertificate( String x509PemString ) {\n    return PEMFiles.getCert( B64.standard.dec( x509PemString ) );\n  }","id":82087,"modified_method":"public static X509Certificate toCertificate( String x509PemString ) {\n    return PEMFiles.getCert( B64.url.dec( x509PemString ) );\n  }","commit_id":"3435c45969da40a3d5e13ba5249568c6c993cc3b","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public static String fromCertificate( X509Certificate x509 ) {\n    return B64.standard.encString( PEMFiles.getBytes( x509 ) );\n  }","id":82088,"modified_method":"public static String fromCertificate( X509Certificate x509 ) {\n    return B64.url.encString( PEMFiles.getBytes( x509 ) );\n  }","commit_id":"3435c45969da40a3d5e13ba5249568c6c993cc3b","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public static String fromKeyPair( KeyPair keyPair ) {\n    return B64.standard.encString( PEMFiles.getBytes( keyPair ) );\n  }","id":82089,"modified_method":"public static String fromKeyPair( KeyPair keyPair ) {\n    return B64.url.encString( PEMFiles.getBytes( keyPair ) );\n  }","commit_id":"3435c45969da40a3d5e13ba5249568c6c993cc3b","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public static KeyPair toKeyPair( String keyPairB64PemString ) {\n    return PEMFiles.getKeyPair( B64.standard.dec( keyPairB64PemString ) );\n  }","id":82090,"modified_method":"public static KeyPair toKeyPair( String keyPairB64PemString ) {\n    return PEMFiles.getKeyPair( B64.url.dec( keyPairB64PemString ) );\n  }","commit_id":"3435c45969da40a3d5e13ba5249568c6c993cc3b","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public final PsiClass findClass(String name, @Nullable final GlobalSearchScope searchScope) {\n    if (name == null) return null;\n    final XmlFile file = getFile();\n    if (name.indexOf('$')>=0) name = name.replace('$', '.');\n\n    final GlobalSearchScope scope;\n    if (searchScope == null) {\n      final Module module = getModule();\n      if (module != null) {\n        scope = GlobalSearchScope.moduleWithDependenciesAndLibrariesScope(module);\n      }\n      else {\n        scope = file.getResolveScope();\n      }\n    }\n    else {\n      scope = searchScope;\n    }\n    final PsiClass aClass = getPsiManager().findClass(name, scope);\n    if (aClass != null) {\n      assert aClass.isValid() : name;\n    }\n    return aClass;\n  }","id":82091,"modified_method":"public final PsiClass findClass(@Nullable String name, @Nullable final GlobalSearchScope searchScope) {\n    return findClass(name, getFile(), getModule(), searchScope);\n  }","commit_id":"380e860251d097f0b23c922b17b03fd984d91ac7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"void initModule(final Module module) {\n    super.initModule(module);\n\n    final ModuleRootManager moduleRootManager = ModuleRootManager.getInstance(module);\n\n    if (myMockJdkLevel == MockJdkLevel.jdk15) {\n      moduleRootManager.setLanguageLevel(LanguageLevel.JDK_1_5);\n    }\n\n    final ModifiableRootModel model = moduleRootManager.getModifiableModel();\n    final LibraryTable libraryTable = model.getModuleLibraryTable();\n\n    for (Lib lib : myLibraries) {\n      String libraryName = lib.getName();\n\n      final Library library = libraryTable.createLibrary(libraryName);\n\n      final Library.ModifiableModel libraryModel = library.getModifiableModel();\n\n      for (OrderRootType rootType : OrderRootType.ALL_TYPES) {\n        final String[] roots = lib.getRoots(rootType);\n        for (String root : roots) {\n          final VirtualFile vRoot = OrderRootType.CLASSES.equals(rootType)\n                                    ? JarFileSystem.getInstance().refreshAndFindFileByPath(root + \"!/\")\n                                    : LocalFileSystem.getInstance().refreshAndFindFileByPath(root);\n          if (vRoot != null) {\n            libraryModel.addRoot(vRoot, rootType);\n          }\n        }\n      }\n      libraryModel.commit();\n    }\n\n    if (myJdk != null) {\n      model.setJdk(JavaSdkImpl.getInstance().createJdk(module.getName() + \"_jdk\", myJdk, false));\n    } else {\n      final ProjectJdk projectJdk;\n      switch (myMockJdkLevel) {\n        default:\n          projectJdk = JavaSdkImpl.getMockJdk(\"java 1.4\");\n          break;\n        case jdk15:\n          projectJdk = JavaSdkImpl.getMockJdk15(\"java 1.5\");\n          break;\n      }\n      model.setJdk(projectJdk);\n    }\n    model.commit();\n  }","id":82092,"modified_method":"void initModule(final Module module) {\n    super.initModule(module);\n\n    final ModuleRootManager moduleRootManager = ModuleRootManager.getInstance(module);\n\n    if (myMockJdkLevel == MockJdkLevel.jdk15) {\n      moduleRootManager.setLanguageLevel(LanguageLevel.JDK_1_5);\n    }\n\n    final ModifiableRootModel model = moduleRootManager.getModifiableModel();\n    final LibraryTable libraryTable = model.getModuleLibraryTable();\n\n    for (Lib lib : myLibraries) {\n      String libraryName = lib.getName();\n\n      final Library library = libraryTable.createLibrary(libraryName);\n\n      final Library.ModifiableModel libraryModel = library.getModifiableModel();\n\n      for (OrderRootType rootType : OrderRootType.ALL_TYPES) {\n        final String[] roots = lib.getRoots(rootType);\n        for (String root : roots) {\n          VirtualFile vRoot = LocalFileSystem.getInstance().refreshAndFindFileByPath(root);\n          if (vRoot != null && OrderRootType.CLASSES.equals(rootType) && !vRoot.isDirectory()) {\n            final VirtualFile jar = JarFileSystem.getInstance().refreshAndFindFileByPath(root + \"!/\");\n            if (jar != null) vRoot = jar;\n          }\n          if (vRoot != null) {\n            libraryModel.addRoot(vRoot, rootType);\n          }\n        }\n      }\n      libraryModel.commit();\n    }\n\n    if (myJdk != null) {\n      model.setJdk(JavaSdkImpl.getInstance().createJdk(module.getName() + \"_jdk\", myJdk, false));\n    } else {\n      final ProjectJdk projectJdk;\n      switch (myMockJdkLevel) {\n        default:\n          projectJdk = JavaSdkImpl.getMockJdk(\"java 1.4\");\n          break;\n        case jdk15:\n          projectJdk = JavaSdkImpl.getMockJdk15(\"java 1.5\");\n          break;\n      }\n      model.setJdk(projectJdk);\n    }\n    model.commit();\n  }","commit_id":"380e860251d097f0b23c922b17b03fd984d91ac7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  private static XmlFile findExternalAnnotationsFile(PsiModifierListOwner listOwner) {\n    final Project project = listOwner.getProject();\n    final PsiManager psiManager = PsiManager.getInstance(project);\n    final PsiFile containingFile = listOwner.getContainingFile();\n    if (containingFile instanceof PsiJavaFile) {\n      final PsiJavaFile javaFile = (PsiJavaFile)containingFile;\n      final PsiPackage psiPackage = psiManager.findPackage(javaFile.getPackageName());\n      if (psiPackage != null) {\n        final PsiDirectory[] dirsWithExternalAnnotations = psiPackage.getDirectories();\n        for (final PsiDirectory directory : dirsWithExternalAnnotations) {\n          final PsiFile psiFile = directory.findFile(ANNOTATIONS_XML);\n          if (psiFile instanceof XmlFile) {\n            return (XmlFile)psiFile;\n          }\n        }\n        final VirtualFile virtualFile = containingFile.getVirtualFile();\n        if (virtualFile != null) {\n          final List<OrderEntry> entries = ProjectRootManager.getInstance(project).getFileIndex().getOrderEntriesForFile(virtualFile);\n          for (OrderEntry entry : entries) {\n            final VirtualFile[] externalFiles = entry.getFiles(OrderRootType.ANNOTATIONS);\n            for (VirtualFile file : externalFiles) {\n              final VirtualFile ext = file.getFileSystem()\n                .findFileByPath(file.getPath() + \"/\" + psiPackage.getQualifiedName().replace(\".\", \"/\") + \"/\" + ANNOTATIONS_XML);\n              if (ext != null) {\n                final PsiFile psiFile = psiManager.findFile(ext);\n                if (psiFile instanceof XmlFile) {\n                  return (XmlFile)psiFile;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    /*final VirtualFile virtualFile = containingFile.getVirtualFile(); //for java files only\n    if (virtualFile != null) {\n      final VirtualFile parent = virtualFile.getParent();\n      if (parent != null) {\n        final VirtualFile extFile = parent.findChild(ANNOTATIONS_XML);\n        if (extFile != null) {\n          return (XmlFile)psiManager.findFile(extFile);\n        }\n      }\n    }*/\n\n    return null;\n  }","id":82093,"modified_method":"@Nullable\n  private static XmlFile findExternalAnnotationsFile(PsiModifierListOwner listOwner) {\n    final Project project = listOwner.getProject();\n    final PsiManager psiManager = PsiManager.getInstance(project);\n    final PsiFile containingFile = listOwner.getContainingFile();\n    if (containingFile instanceof PsiJavaFile) {\n      final PsiJavaFile javaFile = (PsiJavaFile)containingFile;\n      final String packageName = javaFile.getPackageName();\n      final PsiPackage psiPackage = psiManager.findPackage(packageName);\n      if (psiPackage != null) {\n        final PsiDirectory[] dirsWithExternalAnnotations = psiPackage.getDirectories();\n        for (final PsiDirectory directory : dirsWithExternalAnnotations) {\n          final PsiFile psiFile = directory.findFile(ANNOTATIONS_XML);\n          if (psiFile instanceof XmlFile) {\n            return (XmlFile)psiFile;\n          }\n        }\n      }\n      final VirtualFile virtualFile = containingFile.getVirtualFile();\n      if (virtualFile != null) {\n        final List<OrderEntry> entries = ProjectRootManager.getInstance(project).getFileIndex().getOrderEntriesForFile(virtualFile);\n        for (OrderEntry entry : entries) {\n          final VirtualFile[] externalFiles = entry.getFiles(OrderRootType.ANNOTATIONS);\n          for (VirtualFile file : externalFiles) {\n            final VirtualFile ext = file.getFileSystem().findFileByPath(file.getPath() + \"/\" + packageName.replace(\".\", \"/\") + \"/\" + ANNOTATIONS_XML);\n            if (ext != null) {\n              final PsiFile psiFile = psiManager.findFile(ext);\n              if (psiFile instanceof XmlFile) {\n                return (XmlFile)psiFile;\n              }\n            }\n          }\n        }\n      }\n    }\n    /*final VirtualFile virtualFile = containingFile.getVirtualFile(); //for java files only\n    if (virtualFile != null) {\n      final VirtualFile parent = virtualFile.getParent();\n      if (parent != null) {\n        final VirtualFile extFile = parent.findChild(ANNOTATIONS_XML);\n        if (extFile != null) {\n          return (XmlFile)psiManager.findFile(extFile);\n        }\n      }\n    }*/\n\n    return null;\n  }","commit_id":"0a11e367122ca92ab52ea7fadbb9dfb53e50ce13","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public JavaModuleFixtureBuilder addLibrary(String libraryName, String... classPath) {\n    myLibraries.add(new Pair<String, String[]>(libraryName, classPath));\n    return this;\n  }","id":82094,"modified_method":"public JavaModuleFixtureBuilder addLibrary(String libraryName, String... classPath) {\n    final HashMap<OrderRootType, String[]> map = new HashMap<OrderRootType, String[]>();\n    map.put(OrderRootType.CLASSES, classPath);\n    myLibraries.add(new Lib(libraryName, map));\n    return this;\n  }","commit_id":"0a11e367122ca92ab52ea7fadbb9dfb53e50ce13","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"void initModule(final Module module) {\n    super.initModule(module);\n\n    final ModuleRootManager moduleRootManager = ModuleRootManager.getInstance(module);\n\n    if (myMockJdkLevel == MockJdkLevel.jdk15) {\n      moduleRootManager.setLanguageLevel(LanguageLevel.JDK_1_5);\n    }\n\n    final ModifiableRootModel model = moduleRootManager.getModifiableModel();\n    final LibraryTable libraryTable = model.getModuleLibraryTable();\n\n    for (Pair<String, String[]> pair : myLibraries) {\n      String libraryName = pair.first;\n      String[] libs = pair.second;\n\n      final Library library = libraryTable.createLibrary(libraryName);\n\n      final Library.ModifiableModel libraryModel = library.getModifiableModel();\n      for (String libraryPath : libs) {\n        final VirtualFile root = JarFileSystem.getInstance().refreshAndFindFileByPath(libraryPath + \"!/\");\n        assert root != null : libraryPath + \" not found\";\n        libraryModel.addRoot(root, OrderRootType.CLASSES);\n      }\n\n      libraryModel.commit();\n    }\n\n    if (myJdk != null) {\n      model.setJdk(JavaSdkImpl.getInstance().createJdk(module.getName() + \"_jdk\", myJdk, false));\n    } else {\n      final ProjectJdk projectJdk;\n      switch (myMockJdkLevel) {\n        default:\n          projectJdk = JavaSdkImpl.getMockJdk(\"java 1.4\");\n          break;\n        case jdk15:\n          projectJdk = JavaSdkImpl.getMockJdk15(\"java 1.5\");\n          break;\n      }\n      model.setJdk(projectJdk);\n    }\n    model.commit();\n  }","id":82095,"modified_method":"void initModule(final Module module) {\n    super.initModule(module);\n\n    final ModuleRootManager moduleRootManager = ModuleRootManager.getInstance(module);\n\n    if (myMockJdkLevel == MockJdkLevel.jdk15) {\n      moduleRootManager.setLanguageLevel(LanguageLevel.JDK_1_5);\n    }\n\n    final ModifiableRootModel model = moduleRootManager.getModifiableModel();\n    final LibraryTable libraryTable = model.getModuleLibraryTable();\n\n    for (Lib lib : myLibraries) {\n      String libraryName = lib.getName();\n\n      final Library library = libraryTable.createLibrary(libraryName);\n\n      final Library.ModifiableModel libraryModel = library.getModifiableModel();\n\n      for (OrderRootType rootType : OrderRootType.ALL_TYPES) {\n        final String[] roots = lib.getRoots(rootType);\n        for (String root : roots) {\n          final VirtualFile vRoot = OrderRootType.CLASSES.equals(rootType)\n                                    ? JarFileSystem.getInstance().refreshAndFindFileByPath(root + \"!/\")\n                                    : LocalFileSystem.getInstance().refreshAndFindFileByPath(root);\n          if (vRoot != null) {\n            libraryModel.addRoot(vRoot, rootType);\n          }\n        }\n      }\n      libraryModel.commit();\n    }\n\n    if (myJdk != null) {\n      model.setJdk(JavaSdkImpl.getInstance().createJdk(module.getName() + \"_jdk\", myJdk, false));\n    } else {\n      final ProjectJdk projectJdk;\n      switch (myMockJdkLevel) {\n        default:\n          projectJdk = JavaSdkImpl.getMockJdk(\"java 1.4\");\n          break;\n        case jdk15:\n          projectJdk = JavaSdkImpl.getMockJdk15(\"java 1.5\");\n          break;\n      }\n      model.setJdk(projectJdk);\n    }\n    model.commit();\n  }","commit_id":"0a11e367122ca92ab52ea7fadbb9dfb53e50ce13","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static void setupSdkPaths(SdkModificator sdkModificator, ProgressIndicator indicator) {\n    Application application = ApplicationManager.getApplication();\n    boolean not_in_unit_test_mode = (application != null && !application.isUnitTestMode());\n\n    String bin_path = getInterpreterPath(sdkModificator.getHomePath());\n    assert bin_path != null;\n    String working_dir = new File(bin_path).getParent();\n    final String sep = File.separator;\n    @NonNls final String stubs_path = PathManager.getSystemPath() + sep + SKELETON_DIR_NAME + sep + working_dir.hashCode() + sep;\n    // we have a number of lib dirs, those listed in python's sys.path\n    if (indicator != null) {\n      indicator.setText(\"Adding library roots\");\n    }\n    // Add folders from sys.path\n    final List<String> paths = getSysPath(working_dir, bin_path);\n    if ((paths != null) && paths.size() > 0) {\n      // add every path as root.\n      for (String path : paths) {\n        if (path.indexOf(sep) < 0) continue; // TODO: interpret possible 'special' paths reasonably\n        if (indicator != null) {\n          indicator.setText2(path);\n        }\n        VirtualFile child = LocalFileSystem.getInstance().findFileByPath(path);\n        if (child != null) {\n          @NonNls String suffix = child.getExtension();\n          if (suffix != null) suffix = suffix.toLowerCase(); // Why on earth empty suffix is null and not \"\"?\n          if ((!child.isDirectory()) && (\"zip\".equals(suffix) || \"egg\".equals(suffix))) {\n            // a .zip / .egg file must have its root extracted first\n            child = JarFileSystem.getInstance().getJarRootForLocalFile(child);\n          }\n          if (child != null) {\n            sdkModificator.addRoot(child, OrderRootType.SOURCES);\n            sdkModificator.addRoot(child, OrderRootType.CLASSES);\n          }\n        }\n        else LOG.info(\"Bogus sys.path entry \" + path);\n      }\n      if (indicator != null) {\n        indicator.setText(\"Generating skeletons of __builtins__\");\n        indicator.setText2(\"\");\n      }\n      if (not_in_unit_test_mode) generateBuiltinStubs(bin_path, stubs_path);\n      sdkModificator.addRoot(LocalFileSystem.getInstance().refreshAndFindFileByPath(stubs_path), BUILTIN_ROOT_TYPE);\n    }\n    // Add python-django installed as package in Linux\n    if (SystemInfo.isLinux){\n      final VirtualFile file = LocalFileSystem.getInstance().findFileByPath(\"/usr/lib/python-django\");\n      if (file != null){\n        sdkModificator.addRoot(file, OrderRootType.SOURCES);\n        sdkModificator.addRoot(file, OrderRootType.CLASSES);\n      }\n    }\n\n    if (not_in_unit_test_mode) {\n      // regenerate stubs, existing or not\n      final File stubs_dir = new File(stubs_path);\n      if (!stubs_dir.exists()) stubs_dir.mkdirs();\n      generateBinaryStubs(bin_path, stubs_path, indicator);\n    }\n  }","id":82096,"modified_method":"public static void setupSdkPaths(SdkModificator sdkModificator, ProgressIndicator indicator) {\n    Application application = ApplicationManager.getApplication();\n    boolean not_in_unit_test_mode = (application != null && !application.isUnitTestMode());\n\n    String bin_path = getInterpreterPath(sdkModificator.getHomePath());\n    assert bin_path != null;\n    String working_dir = new File(bin_path).getParent();\n    final String sep = File.separator;\n    @NonNls final String stubs_path = PathManager.getSystemPath() + sep + SKELETON_DIR_NAME + sep + working_dir.hashCode() + sep;\n    // we have a number of lib dirs, those listed in python's sys.path\n    if (indicator != null) {\n      indicator.setText(\"Adding library roots\");\n    }\n    // Add folders from sys.path\n    final List<String> paths = getSysPath(working_dir, bin_path);\n    if ((paths != null) && paths.size() > 0) {\n      // add every path as root.\n      for (String path : paths) {\n        if (path.indexOf(sep) < 0) continue; // TODO: interpret possible 'special' paths reasonably\n        if (indicator != null) {\n          indicator.setText2(path);\n        }\n        VirtualFile child = LocalFileSystem.getInstance().findFileByPath(path);\n        if (child != null) {\n          @NonNls String suffix = child.getExtension();\n          if (suffix != null) suffix = suffix.toLowerCase(); // Why on earth empty suffix is null and not \"\"?\n          if ((!child.isDirectory()) && (\"zip\".equals(suffix) || \"egg\".equals(suffix))) {\n            // a .zip / .egg file must have its root extracted first\n            child = JarFileSystem.getInstance().getJarRootForLocalFile(child);\n          }\n          if (child != null) {\n            sdkModificator.addRoot(child, OrderRootType.SOURCES);\n            sdkModificator.addRoot(child, OrderRootType.CLASSES);\n          }\n        }\n        else LOG.info(\"Bogus sys.path entry \" + path);\n      }\n      if (indicator != null) {\n        indicator.setText(\"Generating skeletons of __builtins__\");\n        indicator.setText2(\"\");\n      }\n      if (not_in_unit_test_mode) generateBuiltinStubs(bin_path, stubs_path);\n      VirtualFile stubsPath = LocalFileSystem.getInstance().refreshAndFindFileByPath(stubs_path);\n      if (!not_in_unit_test_mode && stubsPath == null) {\n        throw new RuntimeException(\"Failed to configure SDK: stubs path \" + stubs_path + \" not found\");\n      }\n      sdkModificator.addRoot(stubsPath, BUILTIN_ROOT_TYPE);\n    }\n    // Add python-django installed as package in Linux\n    if (SystemInfo.isLinux){\n      final VirtualFile file = LocalFileSystem.getInstance().findFileByPath(\"/usr/lib/python-django\");\n      if (file != null){\n        sdkModificator.addRoot(file, OrderRootType.SOURCES);\n        sdkModificator.addRoot(file, OrderRootType.CLASSES);\n      }\n    }\n\n    if (not_in_unit_test_mode) {\n      // regenerate stubs, existing or not\n      final File stubs_dir = new File(stubs_path);\n      if (!stubs_dir.exists()) stubs_dir.mkdirs();\n      generateBinaryStubs(bin_path, stubs_path, indicator);\n    }\n  }","commit_id":"e4dc8aa060c9407eaf74e8b2db8d91fe79fcc3b8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n     * Renames a job.\n     * \n     * <p>\n     * This method is defined on {@link Job} but really only applicable for\n     * {@link Job}s that are top-level items.\n     */\n    public void renameTo(String newName) throws IOException {\n        // always synchronize from bigger objects first\n        final Hudson parent = Hudson.getInstance();\n        assert this instanceof TopLevelItem;\n        synchronized (parent) {\n            synchronized (this) {\n                // sanity check\n                if (newName == null)\n                    throw new IllegalArgumentException(\"New name is not given\");\n                if (parent.getItem(newName) != null)\n                    throw new IllegalArgumentException(\"Job \" + newName\n                            + \" already exists\");\n\n                // noop?\n                if (this.name.equals(newName))\n                    return;\n\n                String oldName = this.name;\n                File oldRoot = this.getRootDir();\n\n                doSetName(newName);\n                File newRoot = this.getRootDir();\n\n                boolean success = false;\n\n                try {// rename data files\n                    boolean interrupted = false;\n                    boolean renamed = false;\n\n                    // try to rename the job directory.\n                    // this may fail on Windows due to some other processes\n                    // accessing a file.\n                    // so retry few times before we fall back to copy.\n                    for (int retry = 0; retry < 5; retry++) {\n                        if (oldRoot.renameTo(newRoot)) {\n                            renamed = true;\n                            break; // succeeded\n                        }\n                        try {\n                            Thread.sleep(500);\n                        } catch (InterruptedException e) {\n                            // process the interruption later\n                            interrupted = true;\n                        }\n                    }\n\n                    if (interrupted)\n                        Thread.currentThread().interrupt();\n\n                    if (!renamed) {\n                        // failed to rename. it must be that some lengthy\n                        // process is going on\n                        // to prevent a rename operation. So do a copy. Ideally\n                        // we'd like to\n                        // later delete the old copy, but we can't reliably do\n                        // so, as before the VM\n                        // shuts down there might be a new job created under the\n                        // old name.\n                        Copy cp = new Copy();\n                        cp.setProject(new org.apache.tools.ant.Project());\n                        cp.setTodir(newRoot);\n                        FileSet src = new FileSet();\n                        src.setDir(getRootDir());\n                        cp.addFileset(src);\n                        cp.setOverwrite(true);\n                        cp.setPreserveLastModified(true);\n                        cp.setFailOnError(false); // keep going even if\n                                                    // there's an error\n                        cp.execute();\n\n                        // try to delete as much as possible\n                        try {\n                            Util.deleteRecursive(oldRoot);\n                        } catch (IOException e) {\n                            // but ignore the error, since we expect that\n                            e.printStackTrace();\n                        }\n                    }\n\n                    success = true;\n                } finally {\n                    // if failed, back out the rename.\n                    if (!success)\n                        doSetName(oldName);\n                }\n\n                parent.onRenamed((TopLevelItem) this, oldName, newName);\n\n                for (ItemListener l : Hudson.getInstance().getJobListeners())\n                    l.onRenamed(this, oldName, newName);\n            }\n        }\n    }","id":82097,"modified_method":"/**\n     * Renames a job.\n     * \n     * <p>\n     * This method is defined on {@link Job} but really only applicable for\n     * {@link Job}s that are top-level items.\n     */\n    public void renameTo(String newName) throws IOException {\n        // always synchronize from bigger objects first\n        final Hudson parent = Hudson.getInstance();\n        assert this instanceof TopLevelItem;\n        synchronized (parent) {\n            synchronized (this) {\n                // sanity check\n                if (newName == null)\n                    throw new IllegalArgumentException(\"New name is not given\");\n                TopLevelItem existing = parent.getItem(newName);\n                if (existing != null && existing!=this)\n                    // the look up is case insensitive, so we need \"existing!=this\"\n                    // to allow people to rename \"Foo\" to \"foo\", for example.\n                    // see http://www.nabble.com/error-on-renaming-project-tt18061629.html\n                    throw new IllegalArgumentException(\"Job \" + newName\n                            + \" already exists\");\n\n                // noop?\n                if (this.name.equals(newName))\n                    return;\n\n                String oldName = this.name;\n                File oldRoot = this.getRootDir();\n\n                doSetName(newName);\n                File newRoot = this.getRootDir();\n\n                boolean success = false;\n\n                try {// rename data files\n                    boolean interrupted = false;\n                    boolean renamed = false;\n\n                    // try to rename the job directory.\n                    // this may fail on Windows due to some other processes\n                    // accessing a file.\n                    // so retry few times before we fall back to copy.\n                    for (int retry = 0; retry < 5; retry++) {\n                        if (oldRoot.renameTo(newRoot)) {\n                            renamed = true;\n                            break; // succeeded\n                        }\n                        try {\n                            Thread.sleep(500);\n                        } catch (InterruptedException e) {\n                            // process the interruption later\n                            interrupted = true;\n                        }\n                    }\n\n                    if (interrupted)\n                        Thread.currentThread().interrupt();\n\n                    if (!renamed) {\n                        // failed to rename. it must be that some lengthy\n                        // process is going on\n                        // to prevent a rename operation. So do a copy. Ideally\n                        // we'd like to\n                        // later delete the old copy, but we can't reliably do\n                        // so, as before the VM\n                        // shuts down there might be a new job created under the\n                        // old name.\n                        Copy cp = new Copy();\n                        cp.setProject(new org.apache.tools.ant.Project());\n                        cp.setTodir(newRoot);\n                        FileSet src = new FileSet();\n                        src.setDir(getRootDir());\n                        cp.addFileset(src);\n                        cp.setOverwrite(true);\n                        cp.setPreserveLastModified(true);\n                        cp.setFailOnError(false); // keep going even if\n                                                    // there's an error\n                        cp.execute();\n\n                        // try to delete as much as possible\n                        try {\n                            Util.deleteRecursive(oldRoot);\n                        } catch (IOException e) {\n                            // but ignore the error, since we expect that\n                            e.printStackTrace();\n                        }\n                    }\n\n                    success = true;\n                } finally {\n                    // if failed, back out the rename.\n                    if (!success)\n                        doSetName(oldName);\n                }\n\n                parent.onRenamed((TopLevelItem) this, oldName, newName);\n\n                for (ItemListener l : Hudson.getInstance().getJobListeners())\n                    l.onRenamed(this, oldName, newName);\n            }\n        }\n    }","commit_id":"50295317091c52dfc7443ad6ad7657cfc252fa96","url":"https://github.com/kohsuke/hudson"},{"original_method":"/**\n     * Returns a read-only view of all {@link Job}s in this view.\n     *\n     * <p>\n     * This method returns a separate copy each time to avoid\n     * concurrent modification issue.\n     */\n    public synchronized List<TopLevelItem> getItems() {\n        Set<String> names = (Set<String>) ((TreeSet<String>) jobNames).clone();\n        \n        if (includeRegex != null) {\n            try {\n                if (includePattern == null) {\n                    includePattern = Pattern.compile(includeRegex);\n                }\n\n                for (TopLevelItem item : owner.getItems()) {\n                \tString itemName = item.getName();\n\t\t\t\t\tif (includePattern.matcher(itemName).matches()) {\n                        names.add(itemName);\n                    }\n                }\n            } catch (PatternSyntaxException pse) {\n            }\n        }\n        \n        TopLevelItem[] items = new TopLevelItem[names.size()];\n        int i=0;\n        for (String name : names)\n            items[i++] = owner.getItem(name);\n        return Arrays.asList(items);\n    }","id":82098,"modified_method":"/**\n     * Returns a read-only view of all {@link Job}s in this view.\n     *\n     * <p>\n     * This method returns a separate copy each time to avoid\n     * concurrent modification issue.\n     */\n    public synchronized List<TopLevelItem> getItems() {\n        Set<String> names = (Set<String>) ((TreeSet<String>) jobNames).clone();\n\n        if (includeRegex != null) {\n            try {\n                if (includePattern == null) {\n                    includePattern = Pattern.compile(includeRegex);\n                }\n\n                for (TopLevelItem item : owner.getItems()) {\n                    String itemName = item.getName();\n                    if (includePattern.matcher(itemName).matches()) {\n                        names.add(itemName);\n                    }\n                }\n            } catch (PatternSyntaxException pse) {\n            }\n        }\n\n        List<TopLevelItem> items = new ArrayList<TopLevelItem>(names.size());\n        for (String name : names) {\n            TopLevelItem item = owner.getItem(name);\n            if(item!=null)\n                items.add(item);\n        }\n        return items;\n    }","commit_id":"736b0258c6f9eed36011e9a8f42135636b17f1da","url":"https://github.com/kohsuke/hudson"},{"original_method":"/** {@inheritDoc} */\n        @Override public void cancelEdit() {\n            if (cancelling)\n                super.cancelEdit();\n            else\n                try {\n                    cancelling = true;\n\n                    if (hardCancel || curTxt.trim().isEmpty())\n                        super.cancelEdit();\n                    else\n                        commitEdit(curTxt);\n                }\n                finally {\n                    cancelling = false;\n                }\n        }","id":82099,"modified_method":"/** {@inheritDoc} */\n        @Override public void cancelEdit() {\n            if (cancelling)\n                super.cancelEdit();\n            else\n                try {\n                    cancelling = true;\n\n                    if (hardCancel || curTxt.trim().isEmpty())\n                        super.cancelEdit();\n                    else if (validator.valid(getTableView().getSelectionModel().getSelectedItem(), curTxt))\n                        commitEdit(curTxt);\n                    else\n                        super.cancelEdit();\n                }\n                finally {\n                    cancelling = false;\n                }\n        }","commit_id":"69feb3925b971e281ebd164cfc504d77ba20a138","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * Create editable text table column.\n     *\n     * @param colName Column name to display.\n     * @param propName Property name column is bound to.\n     * @param tip Column tooltip text.\n     * @return New {@code TableColumn} instance.\n     */\n    public static <S> TableColumn<S, String> textColumn(String colName, String propName, String tip) {\n        TableColumn<S, String> col = tableColumn(colName, propName, tip, 100, 0, true);\n\n        col.setCellFactory(TextFieldTableCellEx.<S>cellFactory());\n\n        return col;\n    }","id":82100,"modified_method":"/**\n     * Create editable text table column.\n     *\n     * @param colName Column name to display.\n     * @param propName Property name column is bound to.\n     * @param tip Column tooltip text.\n     * @return New {@code TableColumn} instance.\n     */\n    public static <S> TableColumn<S, String> textColumn(String colName, String propName, String tip,\n        TextColumnValidator<S> validator) {\n        TableColumn<S, String> col = tableColumn(colName, propName, tip, 100, 0, true);\n\n        col.setCellFactory(TextFieldTableCellEx.cellFactory(validator));\n\n        return col;\n    }","commit_id":"69feb3925b971e281ebd164cfc504d77ba20a138","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n        @Override public void startEdit() {\n            if (getItem().isEmpty())\n                return;\n\n            super.startEdit();\n\n            Node g = getGraphic();\n\n            if (g != null) {\n                final TextField tf = (TextField)g;\n\n                tf.textProperty().addListener(new ChangeListener<String>() {\n                    @Override public void changed(ObservableValue<? extends String> val, String oldVal, String newVal) {\n                        curTxt = newVal;\n                    }\n                });\n\n                tf.setOnKeyReleased(new EventHandler<KeyEvent>() {\n                    /** {@inheritDoc} */\n                    @Override public void handle(KeyEvent evt) {\n                        if (KeyCode.ENTER == evt.getCode())\n                            cancelEdit();\n                        else if (KeyCode.ESCAPE == evt.getCode()) {\n                            hardCancel = true;\n\n                            cancelEdit();\n                        }\n                    }\n                });\n            }\n        }","id":82101,"modified_method":"/** {@inheritDoc} */\n        @Override public void startEdit() {\n            String item = getItem();\n\n            if (item == null || item.isEmpty())\n                return;\n\n            super.startEdit();\n\n            curTxt = \"\";\n\n            hardCancel = false;\n\n            Node g = getGraphic();\n\n            if (g != null) {\n                final TextField tf = (TextField)g;\n\n                tf.textProperty().addListener(new ChangeListener<String>() {\n                    @Override public void changed(ObservableValue<? extends String> val, String oldVal, String newVal) {\n                        curTxt = newVal;\n                    }\n                });\n\n                tf.setOnKeyReleased(new EventHandler<KeyEvent>() {\n                    @Override public void handle(KeyEvent evt) {\n                        if (KeyCode.ENTER == evt.getCode())\n                            cancelEdit();\n                        else if (KeyCode.ESCAPE == evt.getCode()) {\n                            hardCancel = true;\n\n                            cancelEdit();\n                        }\n                    }\n                });\n\n                // Special hack for editable TextFieldTableCell.\n                // Cancel edit when focus lost from text field, but do not cancel if focus lost to VirtualFlow.\n                tf.focusedProperty().addListener(new ChangeListener<Boolean>() {\n                    @Override public void changed(ObservableValue<? extends Boolean> val, Boolean oldVal, Boolean newVal) {\n                        Node fo = getScene().getFocusOwner();\n\n                        if (!newVal) {\n                            if (fo instanceof VirtualFlow) {\n                                if (fo.getParent().getParent() != getTableView())\n                                    cancelEdit();\n                            }\n                            else\n                                cancelEdit();\n                        }\n                    }\n                });\n\n                Platform.runLater(new Runnable() {\n                    @Override public void run() {\n                        tf.requestFocus();\n                    }\n                });\n            }\n        }","commit_id":"69feb3925b971e281ebd164cfc504d77ba20a138","url":"https://github.com/apache/ignite"},{"original_method":"/** Creates a ComboBox cell factory for use in TableColumn controls. */\n        public static <S> Callback<TableColumn<S, Boolean>, TableCell<S, Boolean>> cellFactory() {\n            return new Callback<TableColumn<S, Boolean>, TableCell<S, Boolean>>() {\n                /** {@inheritDoc} */\n                @Override public TableCell<S, Boolean> call(TableColumn<S, Boolean> col) {\n                    return new CheckBoxTableCellEx<>();\n                }\n            };\n        }","id":82102,"modified_method":"/** Creates a ComboBox cell factory for use in TableColumn controls. */\n        public static <S> Callback<TableColumn<S, Boolean>, TableCell<S, Boolean>> cellFactory() {\n            return new Callback<TableColumn<S, Boolean>, TableCell<S, Boolean>>() {\n                @Override public TableCell<S, Boolean> call(TableColumn<S, Boolean> col) {\n                    return new CheckBoxTableCellEx<>();\n                }\n            };\n        }","commit_id":"69feb3925b971e281ebd164cfc504d77ba20a138","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * Generate java class code.\n     *\n     * @param pkg Package name.\n     * @param type Type name.\n     * @param descs Type descriptors.\n     * @param constructor If {@code true} then generate empty and full constructors.\n     * @param askOverwrite Callback to ask user to confirm file overwrite.\n     * @throws IOException If failed to write generated code into file.\n     */\n    private static void generateCode(String pkg, String type, Collection<GridCacheQueryTypeDescriptor> descs,\n        File pkgFolder, boolean constructor, ConfirmCallable askOverwrite) throws IOException {\n        File out = new File(pkgFolder, type + \".java\");\n\n        if (out.exists()) {\n            MessageBox.Result choice = askOverwrite.confirm(out.getName());\n\n            if (CANCEL == choice)\n                throw new IllegalStateException(\"POJO generation was canceled!\");\n\n            if (NO == choice || NO_TO_ALL == choice)\n                return;\n        }\n\n        Collection<String> src = new ArrayList<>(256);\n\n        add0(src, \"/*\");\n        add0(src, \" * Licensed to the Apache Software Foundation (ASF) under one or more\");\n        add0(src, \" * contributor license agreements.  See the NOTICE file distributed with\");\n        add0(src, \" * this work for additional information regarding copyright ownership.\");\n        add0(src, \" * The ASF licenses this file to You under the Apache License, Version 2.0\");\n        add0(src, \" * (the \\\"License\\\"); you may not use this file except in compliance with\");\n        add0(src, \" * the License.  You may obtain a copy of the License at\");\n        add0(src, \" *\");\n        add0(src, \" *      http://www.apache.org/licenses/LICENSE-2.0\");\n        add0(src, \" *\");\n        add0(src, \" * Unless required by applicable law or agreed to in writing, software\");\n        add0(src, \" * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\");\n        add0(src, \" * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\");\n        add0(src, \" * See the License for the specific language governing permissions and\");\n        add0(src, \" * limitations under the License.\");\n        add0(src, \" */\");\n\n        add0(src, \"\");\n\n        add0(src, \"package \" + pkg + \";\");\n\n        add0(src, \"\");\n\n        add0(src, \"import java.io.*;\");\n\n        add0(src, \"\");\n\n        add0(src, \"/**\");\n        add0(src, \" * \" + type + \" definition.\");\n        add0(src, \" *\");\n        add0(src, \" * Code generated by Apache Ignite Schema Load utility.\");\n        add0(src, \" */\");\n        add0(src, \"public class \" + type + \" implements Serializable {\");\n\n        add1(src, \"/** */\");\n        add1(src, \"private static final long serialVersionUID = 0L;\");\n\n        add0(src, \"\");\n\n        // Fields.\n        for (GridCacheQueryTypeDescriptor desc : descs) {\n            String fldName = desc.getJavaName();\n\n            add1(src, \"/** Value for \" + fldName + \". */\");\n            add1(src, \"private \" + desc.getJavaType().getSimpleName() + \" \" + fldName + \";\");\n            add0(src, \"\");\n        }\n\n        // Constructors.\n        if (constructor) {\n            add1(src, \"/**\");\n            add1(src, \" * Empty constructor.\");\n            add1(src, \" */\");\n            add1(src, \"public \" + type + \"() {\");\n            add2(src, \"// No-op.\");\n            add1(src, \"}\");\n\n            add0(src, \"\");\n\n            add1(src, \"/**\");\n            add1(src, \" * Full constructor.\");\n            add1(src, \" */\");\n            add1(src, \"public \" + type + \"(\");\n\n            Iterator<GridCacheQueryTypeDescriptor> it = descs.iterator();\n\n            while (it.hasNext()) {\n                GridCacheQueryTypeDescriptor desc = it.next();\n\n                add2(src, desc.getJavaType().getSimpleName() + \" \" + desc.getJavaName() + (it.hasNext() ? \",\" : \"\"));\n            }\n            add1(src, \") {\");\n\n            for (GridCacheQueryTypeDescriptor desc : descs)\n                add2(src, String.format(\"this.%1$s = %1$s;\", desc.getJavaName()));\n\n            add1(src, \"}\");\n\n            add0(src, \"\");\n        }\n\n        // Methods.\n        for (GridCacheQueryTypeDescriptor desc : descs) {\n            String fldName = desc.getJavaName();\n\n            String fldType = desc.getJavaType().getSimpleName();\n\n            String mtdName = capitalizeFirst(fldName);\n\n            add1(src, \"/**\");\n            add1(src, \" * Gets \" + fldName + \".\");\n            add1(src, \" *\");\n            add1(src, \" * @return Value for \" + fldName + \".\");\n            add1(src, \" */\");\n            add1(src, \"public \" + fldType + \" get\" + mtdName + \"() {\");\n            add2(src, \"return \" + fldName + \";\");\n            add1(src, \"}\");\n\n            add0(src, \"\");\n\n            add1(src, \"/**\");\n            add1(src, \" * Sets \" + fldName + \".\");\n            add1(src, \" *\");\n            add1(src, \" * @param \" + fldName + \" New value for \" + fldName + \".\");\n            add1(src, \" */\");\n            add1(src, \"public void set\" + mtdName + \"(\" + fldType + \" \" + fldName + \") {\");\n            add2(src, \"this.\" + fldName + \" = \" + fldName + \";\");\n            add1(src, \"}\");\n\n            add0(src, \"\");\n        }\n\n        add1(src, \"/** {@inheritDoc} */\");\n        add1(src, \"@Override public boolean equals(Object o) {\");\n        add2(src, \"if (this == o)\");\n        add3(src, \"return true;\");\n\n        add0(src, \"\");\n\n        add2(src, \"if (!(o instanceof \" + type + \"))\");\n        add3(src, \"return false;\");\n\n        add0(src, \"\");\n\n        add2(src, String.format(\"%1$s that = (%1$s)o;\", type));\n\n        for (GridCacheQueryTypeDescriptor desc : descs) {\n            add0(src, \"\");\n            add2(src, String.format(\"if (%1$s != null ? !%1$s.equals(that.%1$s) : that.%1$s != null)\",\n                desc.getJavaName()));\n            add3(src, \"return false;\");\n        }\n\n        add0(src, \"\");\n        add2(src, \"return true;\");\n        add1(src, \"}\");\n\n        add0(src, \"\");\n\n        add1(src, \"/** {@inheritDoc} */\");\n        add1(src, \"@Override public int hashCode() {\");\n\n        Iterator<GridCacheQueryTypeDescriptor> it = descs.iterator();\n\n        add2(src, String.format(\"int res = %1$s != null ? %1$s.hashCode() : 0;\", it.next().getJavaName()));\n\n        if (it.hasNext()) {\n            add0(src, \"\");\n\n            while (it.hasNext())\n                add2(src, String.format(\"res = 31 * res + (%1$s != null ? %1$s.hashCode() : 0);\",\n                    it.next().getJavaName()));\n        }\n\n        add0(src, \"\");\n        add2(src, \"return res;\");\n        add1(src, \"}\");\n\n        add0(src, \"\");\n\n        add1(src, \"/** {@inheritDoc} */\");\n        add1(src, \"@Override public String toString() {\");\n\n        it = descs.iterator();\n\n        add2(src, String.format(\"return \\\"%1$s [%2$s=\\\" + %2$s +\", type, it.next().getJavaName()));\n\n        while (it.hasNext())\n            add3(src, String.format(\"\\\", %1$s=\\\" + %1$s +\", it.next().getJavaName()));\n\n        add3(src, \"\\\"]\\\";\");\n        add1(src, \"}\");\n\n        add0(src, \"}\");\n\n        try (Writer writer = new BufferedWriter(new FileWriter(out))) {\n            for (String line : src)\n                writer.write(line + '\\n');\n        }\n    }","id":82103,"modified_method":"/**\n     * Generate java class code.\n     *\n     * @param pkg Package name.\n     * @param type Type name.\n     * @param fields POJO fields.\n     * @param constructor If {@code true} then generate empty and full constructors.\n     * @param askOverwrite Callback to ask user to confirm file overwrite.\n     * @throws IOException If failed to write generated code into file.\n     */\n    private static void generateCode(String pkg, String type, Collection<PojoField> fields,\n        File pkgFolder, boolean constructor, ConfirmCallable askOverwrite) throws IOException {\n        File out = new File(pkgFolder, type + \".java\");\n\n        if (out.exists()) {\n            MessageBox.Result choice = askOverwrite.confirm(out.getName());\n\n            if (CANCEL == choice)\n                throw new IllegalStateException(\"POJO generation was canceled!\");\n\n            if (NO == choice || NO_TO_ALL == choice)\n                return;\n        }\n\n        Collection<String> src = new ArrayList<>(256);\n\n        add0(src, \"/*\");\n        add0(src, \" * Licensed to the Apache Software Foundation (ASF) under one or more\");\n        add0(src, \" * contributor license agreements.  See the NOTICE file distributed with\");\n        add0(src, \" * this work for additional information regarding copyright ownership.\");\n        add0(src, \" * The ASF licenses this file to You under the Apache License, Version 2.0\");\n        add0(src, \" * (the \\\"License\\\"); you may not use this file except in compliance with\");\n        add0(src, \" * the License.  You may obtain a copy of the License at\");\n        add0(src, \" *\");\n        add0(src, \" *      http://www.apache.org/licenses/LICENSE-2.0\");\n        add0(src, \" *\");\n        add0(src, \" * Unless required by applicable law or agreed to in writing, software\");\n        add0(src, \" * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\");\n        add0(src, \" * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\");\n        add0(src, \" * See the License for the specific language governing permissions and\");\n        add0(src, \" * limitations under the License.\");\n        add0(src, \" */\");\n\n        add0(src, \"\");\n\n        add0(src, \"package \" + pkg + \";\");\n\n        add0(src, \"\");\n\n        add0(src, \"import java.io.*;\");\n\n        add0(src, \"\");\n\n        add0(src, \"/**\");\n        add0(src, \" * \" + type + \" definition.\");\n        add0(src, \" *\");\n        add0(src, \" * Code generated by Apache Ignite Schema Load utility: \" + new SimpleDateFormat(\"MM/DD/YYYY\").format(new Date()) + \".\");\n        add0(src, \" */\");\n        add0(src, \"public class \" + type + \" implements Serializable {\");\n\n        add1(src, \"/** */\");\n        add1(src, \"private static final long serialVersionUID = 0L;\");\n\n        add0(src, \"\");\n\n        // Fields.\n        for (PojoField field : fields) {\n            String fldName = field.javaName();\n\n            add1(src, \"/** Value for \" + fldName + \". */\");\n            add1(src, \"private \" + javaTypeName(field) + \" \" + fldName + \";\");\n            add0(src, \"\");\n        }\n\n        // Constructors.\n        if (constructor) {\n            add1(src, \"/**\");\n            add1(src, \" * Empty constructor.\");\n            add1(src, \" */\");\n            add1(src, \"public \" + type + \"() {\");\n            add2(src, \"// No-op.\");\n            add1(src, \"}\");\n\n            add0(src, \"\");\n\n            add1(src, \"/**\");\n            add1(src, \" * Full constructor.\");\n            add1(src, \" */\");\n            add1(src, \"public \" + type + \"(\");\n\n            Iterator<PojoField> it = fields.iterator();\n\n            while (it.hasNext()) {\n                PojoField field = it.next();\n\n                add2(src, javaTypeName(field) + \" \" + field.javaName() + (it.hasNext() ? \",\" : \"\"));\n            }\n            add1(src, \") {\");\n\n            for (PojoField field : fields)\n                add2(src, String.format(\"this.%1$s = %1$s;\", field.javaName()));\n\n            add1(src, \"}\");\n\n            add0(src, \"\");\n        }\n\n        // Methods.\n        for (PojoField field : fields) {\n            String fldName = field.javaName();\n\n            String fldType = javaTypeName(field);\n\n            String mtdName = capitalizeFirst(fldName);\n\n            add1(src, \"/**\");\n            add1(src, \" * Gets \" + fldName + \".\");\n            add1(src, \" *\");\n            add1(src, \" * @return Value for \" + fldName + \".\");\n            add1(src, \" */\");\n            add1(src, \"public \" + fldType + \" get\" + mtdName + \"() {\");\n            add2(src, \"return \" + fldName + \";\");\n            add1(src, \"}\");\n\n            add0(src, \"\");\n\n            add1(src, \"/**\");\n            add1(src, \" * Sets \" + fldName + \".\");\n            add1(src, \" *\");\n            add1(src, \" * @param \" + fldName + \" New value for \" + fldName + \".\");\n            add1(src, \" */\");\n            add1(src, \"public void set\" + mtdName + \"(\" + fldType + \" \" + fldName + \") {\");\n            add2(src, \"this.\" + fldName + \" = \" + fldName + \";\");\n            add1(src, \"}\");\n\n            add0(src, \"\");\n        }\n\n        add1(src, \"/** {@inheritDoc} */\");\n        add1(src, \"@Override public boolean equals(Object o) {\");\n        add2(src, \"if (this == o)\");\n        add3(src, \"return true;\");\n\n        add0(src, \"\");\n\n        add2(src, \"if (!(o instanceof \" + type + \"))\");\n        add3(src, \"return false;\");\n\n        add0(src, \"\");\n\n        add2(src, String.format(\"%1$s that = (%1$s)o;\", type));\n\n        for (PojoField field : fields) {\n            add0(src, \"\");\n            add2(src, String.format(\"if (%1$s != null ? !%1$s.equals(that.%1$s) : that.%1$s != null)\",\n                field.javaName()));\n            add3(src, \"return false;\");\n        }\n\n        add0(src, \"\");\n        add2(src, \"return true;\");\n        add1(src, \"}\");\n\n        add0(src, \"\");\n\n        add1(src, \"/** {@inheritDoc} */\");\n        add1(src, \"@Override public int hashCode() {\");\n\n        Iterator<PojoField> it = fields.iterator();\n\n        add2(src, String.format(\"int res = %1$s != null ? %1$s.hashCode() : 0;\", it.next().javaName()));\n\n        if (it.hasNext()) {\n            add0(src, \"\");\n\n            while (it.hasNext())\n                add2(src, String.format(\"res = 31 * res + (%1$s != null ? %1$s.hashCode() : 0);\",\n                    it.next().javaName()));\n        }\n\n        add0(src, \"\");\n        add2(src, \"return res;\");\n        add1(src, \"}\");\n\n        add0(src, \"\");\n\n        add1(src, \"/** {@inheritDoc} */\");\n        add1(src, \"@Override public String toString() {\");\n\n        it = fields.iterator();\n\n        add2(src, String.format(\"return \\\"%1$s [%2$s=\\\" + %2$s +\", type, it.next().javaName()));\n\n        while (it.hasNext())\n            add3(src, String.format(\"\\\", %1$s=\\\" + %1$s +\", it.next().javaName()));\n\n        add3(src, \"\\\"]\\\";\");\n        add1(src, \"}\");\n\n        add0(src, \"}\");\n\n        try (Writer writer = new BufferedWriter(new FileWriter(out))) {\n            for (String line : src)\n                writer.write(line + '\\n');\n        }\n    }","commit_id":"69feb3925b971e281ebd164cfc504d77ba20a138","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * Generate source code for type by its metadata.\n     *\n     * @param meta Type metadata.\n     * @param outFolder Output folder.\n     * @param pkg Types package.\n     * @param constructor If {@code true} then generate empty and full constructors.\n     * @param askOverwrite Callback to ask user to confirm file overwrite.\n     * @throws IOException If failed to write generated code into file.\n     */\n    public static void generate(GridCacheQueryTypeMetadata meta, String outFolder, String pkg, boolean constructor,\n        ConfirmCallable askOverwrite)\n        throws IOException {\n        File pkgFolder = new File(outFolder, pkg.replace('.', File.separatorChar));\n\n        if (!pkgFolder.exists() && !pkgFolder.mkdirs())\n            throw new IOException(\"Failed to create folders for package: \" + pkg);\n\n        generateCode(pkg, meta.getKeyType(), meta.getKeyDescriptors(), pkgFolder, constructor, askOverwrite);\n\n        generateCode(pkg, meta.getType(), meta.getValueDescriptors(), pkgFolder, constructor, askOverwrite);\n    }","id":82104,"modified_method":"/**\n     * Generate source code for type by its metadata.\n     *\n     * @param pojo Type metadata.\n     * @param outFolder Output folder.\n     * @param pkg Types package.\n     * @param constructor If {@code true} then generate empty and full constructors.\n     * @param askOverwrite Callback to ask user to confirm file overwrite.\n     * @throws IOException If failed to write generated code into file.\n     */\n    public static void generate(PojoDescriptor pojo, String outFolder, String pkg, boolean constructor,\n        boolean includeKeys, ConfirmCallable askOverwrite)\n        throws IOException {\n        File pkgFolder = new File(outFolder, pkg.replace('.', File.separatorChar));\n\n        if (!pkgFolder.exists() && !pkgFolder.mkdirs())\n            throw new IOException(\"Failed to create folders for package: \" + pkg);\n\n        generateCode(pkg, pojo.keyClassName(), pojo.keyFields(), pkgFolder, constructor, askOverwrite);\n\n        generateCode(pkg, pojo.valueClassName(), pojo.valueFields(includeKeys), pkgFolder, constructor, askOverwrite);\n    }","commit_id":"69feb3925b971e281ebd164cfc504d77ba20a138","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * Create generate pane with controls.\n     */\n    private void createGeneratePane() {\n        genPnl = paneEx(10, 10, 0, 10);\n\n        genPnl.addColumn();\n        genPnl.addColumn(100, 100, Double.MAX_VALUE, Priority.ALWAYS);\n        genPnl.addColumn(35, 35, 35, Priority.NEVER);\n\n        genPnl.addRow(100, 100, Double.MAX_VALUE, Priority.ALWAYS);\n        genPnl.addRows(7);\n\n        TableColumn<PojoDescriptor, Boolean> useCol = customColumn(\"Schema / Table\", \"use\",\n            \"If checked then this table will be used for XML and POJOs generation\", SchemaCell.cellFactory());\n\n        TableColumn<PojoDescriptor, String> keyClsCol = textColumn(\"Key Class\", \"keyClass\", \"Key class name\");\n\n        keyClsCol.setOnEditCommit(new EventHandler<TableColumn.CellEditEvent<PojoDescriptor, String>>() {\n            @Override public void handle(TableColumn.CellEditEvent<PojoDescriptor, String> evt) {\n                System.out.println(\"committed: \" + evt.getNewValue());\n\n                evt.getRowValue().keyClsName.set(evt.getNewValue() + \"boom\");\n            }\n        });\n\n        TableColumn<PojoDescriptor, String> valClsCol = textColumn(\"Value Class\", \"valueClass\", \"Value class name\");\n\n        pojosTbl = tableView(\"Tables not found in database\", useCol, keyClsCol, valClsCol);\n\n        TableColumn<PojoField, Boolean> keyCol = booleanColumn(\"Key\", \"key\",\n            \"If checked then this field will be part of key object\");\n\n        TableColumn<PojoField, String> dbNameCol = tableColumn(\"DB Name\", \"dbName\", \"Field name in database\");\n\n        TableColumn<PojoField, String> dbTypeNameCol = tableColumn(\"DB Type\", \"dbTypeName\", \"Field type in database\");\n\n        TableColumn<PojoField, String> javaNameCol = textColumn(\"Ignite Name\", \"javaName\", \"Field name in POJO class\");\n\n        TableColumn<PojoField, String> javaTypeNameCol = customColumn(\"Java Type\", \"javaTypeName\",\n            \"Field java type in POJO class\", JavaTypeCell.cellFactory());\n\n        final TableView<PojoField> fieldsTbl = tableView(\"Select table to see table columns\",\n            keyCol, dbNameCol, dbTypeNameCol, javaNameCol, javaTypeNameCol);\n\n        final Button upBtn = button(imageView(\"navigate_up\", 24), \"Move selected row up\",\n            new EventHandler<ActionEvent>() {\n                @Override public void handle(ActionEvent evt) {\n                    TableView.TableViewSelectionModel<PojoField> selMdl = fieldsTbl.getSelectionModel();\n\n                    int selIdx = selMdl.getSelectedIndex();\n\n                    if (selIdx > 0) {\n                        ObservableList<PojoField> items = fieldsTbl.getItems();\n\n                        int newId = selIdx - 1;\n\n                        items.add(newId, items.remove(selIdx));\n\n                        if (newId == 0)\n                            fieldsTbl.requestFocus();\n\n                        selMdl.select(newId);\n                    }\n                }\n            });\n\n        upBtn.setDisable(true);\n\n        final Button downBtn = button(imageView(\"navigate_down\", 24), \"Move selected row down\",\n            new EventHandler<ActionEvent>() {\n                @Override public void handle(ActionEvent evt) {\n                    TableView.TableViewSelectionModel<PojoField> selMdl = fieldsTbl.getSelectionModel();\n\n                    int selIdx = selMdl.getSelectedIndex();\n\n                    ObservableList<PojoField> items = fieldsTbl.getItems();\n\n                    int maxIdx = items.size() - 1;\n\n                    if (selIdx < maxIdx) {\n                        int newId = selIdx + 1;\n\n                        items.add(newId, items.remove(selIdx));\n\n                        if (newId == maxIdx)\n                            fieldsTbl.requestFocus();\n\n                        selMdl.select(newId);\n\n                    }\n                }\n            });\n\n        downBtn.setDisable(true);\n\n        fieldsTbl.getSelectionModel().selectedIndexProperty().addListener(new ChangeListener<Number>() {\n            @Override public void changed(ObservableValue<? extends Number> observable, Number oldVal, Number newVal) {\n                upBtn.setDisable(newVal == null || newVal.intValue() == 0);\n                downBtn.setDisable(newVal == null || newVal.intValue() == fieldsTbl.getItems().size() - 1);\n            }\n        });\n\n        genPnl.add(splitPane(pojosTbl, borderPane(null, fieldsTbl, null, null, vBox(10, upBtn, downBtn)), 0.6), 3);\n\n        final GridPaneEx keyValPnl = paneEx(0, 0, 0, 0);\n        keyValPnl.addColumn(100, 100, Double.MAX_VALUE, Priority.ALWAYS);\n        keyValPnl.addColumn();\n        keyValPnl.addColumn(100, 100, Double.MAX_VALUE, Priority.ALWAYS);\n        keyValPnl.addColumn();\n\n//        keyValPnl.add(button(\"Apply\", \"Change key and value class names\", new EventHandler<ActionEvent>() {\n//            @Override public void handle(ActionEvent evt) {\n//                if (checkInput(keyClsTf, true, \"Key class name must not be empty!\") ||\n//                    checkInput(valClsTf, true, \"Value class name must not be empty!\"))\n//                    return;\n//\n//                String keyCls = keyClsTf.getText().trim();\n//\n//                String valCls = valClsTf.getText().trim();\n//\n//                if (keyCls.equals(valCls)) {\n//                    MessageBox.warningDialog(owner, \"Key class name must be different from value class name!\");\n//\n//                    keyClsTf.requestFocus();\n//\n//                    return;\n//                }\n//\n//                for (PojoDescriptor pojo : pojos)\n//                    if (pojo != curPojo) {\n//                        String pojoKeyCls = pojo.keyClassName();\n//\n//                        String pojoValCls = pojo.valueClassName();\n//\n//                        if (keyCls.equals(pojoKeyCls) || keyCls.equals(pojoValCls)) {\n//                            MessageBox.warningDialog(owner, \"Key class name must be unique!\");\n//\n//                            keyClsTf.requestFocus();\n//\n//                            return;\n//                        }\n//\n//                        if (valCls.equals(pojoKeyCls) || valCls.equals(pojoValCls)) {\n//                            MessageBox.warningDialog(owner, \"Value class name must be unique!\");\n//\n//                            valClsTf.requestFocus();\n//\n//                            return;\n//                        }\n//                    }\n//\n//                curPojo.keyClassName(keyCls);\n//                curPojo.valueClassName(valCls);\n//            }\n//        }));\n//\n//        keyValPnl.setDisable(true);\n//\n//        genPnl.add(keyValPnl, 2);\n\n        pkgTf = genPnl.addLabeled(\"Package:\", textField(\"Package that will be used for POJOs generation\"), 2);\n\n        outFolderTf = genPnl.addLabeled(\"Output Folder:\", textField(\"Output folder for XML and POJOs files\"));\n\n        genPnl.add(button(\"...\", \"Select output folder\", new EventHandler<ActionEvent>() {\n            /** {@inheritDoc} */\n            @Override public void handle(ActionEvent evt) {\n                DirectoryChooser dc = new DirectoryChooser();\n\n                File folder = dc.showDialog(owner);\n\n                if (folder != null)\n                    outFolderTf.setText(folder.getAbsolutePath());\n            }\n        }));\n\n        pojoIncludeKeysCh = genPnl.add(checkBox(\"Include key fields into value POJOs\",\n            \"If selected then include key fields into value object\", true), 3);\n\n        pojoConstructorCh = genPnl.add(checkBox(\"Generate constructors for POJOs\",\n            \"If selected then generate empty and full constructors for POJOs\", false), 3);\n\n        xmlSingleFileCh = genPnl.add(checkBox(\"Write all configurations to a single XML file\",\n            \"If selected then all configurations will be saved into the file 'Ignite.xml'\", true), 3);\n\n        openFolderCh = genPnl.add(checkBox(\"Reveal output folder\",\n            \"Open output folder in system file manager after generation complete\", true), 3);\n\n        GridPaneEx regexPnl = paneEx(0, 0, 0, 0);\n        regexPnl.addColumn();\n        regexPnl.addColumn(100, 100, Double.MAX_VALUE, Priority.ALWAYS);\n        regexPnl.addColumn();\n        regexPnl.addColumn(100, 100, Double.MAX_VALUE, Priority.ALWAYS);\n\n        regexPnl.add(new Label(\"Replace Ignite name for selected or all tables:\"), 4);\n        regexTf = regexPnl.addLabeled(\"  Regexp:\", textField(\"Regular expression. For example: (\\\\w+)\"));\n        replaceTf = regexPnl.addLabeled(\"  Replace with:\", textField(\"Replace text. For example: $1_Suffix\"));\n\n        final Button renBtn = button(\"Rename\", \"Replace Ignite names by provided regular expression for current table\",\n            new EventHandler<ActionEvent>() {\n                /** {@inheritDoc} */\n                @Override public void handle(ActionEvent evt) {\n                    if (curPojo == null) {\n                        MessageBox.warningDialog(owner, \"Please select table to rename Ignite names!\");\n\n                        return;\n                    }\n\n                    if (checkInput(regexTf, false, \"Regular expression should not be empty!\"))\n                        return;\n\n                    String regex = regexTf.getText();\n\n                    String replace = replaceTf.getText();\n\n                    try {\n                        for (PojoField field : curPojo.fields())\n                            field.javaName(field.javaName().replaceAll(regex, replace));\n                    }\n                    catch (Exception e) {\n                        MessageBox.errorDialog(owner, \"Failed to rename Ignite names!\", e);\n                    }\n                }\n            });\n        renBtn.setDisable(true);\n\n        final Button revertBtn = button(\"Revert\", \"Revert changes to Ignite names for current table\", new EventHandler<ActionEvent>() {\n            /** {@inheritDoc} */\n            @Override public void handle(ActionEvent evt) {\n                if (curPojo != null)\n                    curPojo.revertJavaNames();\n                else\n                    MessageBox.warningDialog(owner, \"Please select table to revert changes to Ignite names!\");\n            }\n        });\n        revertBtn.setDisable(true);\n\n        regexPnl.add(buttonsPane(Pos.BOTTOM_RIGHT, false,\n            renBtn,\n            button(\"Rename All\", \"Replace Ignite names by provided regular expression for all selected tables\",\n                new EventHandler<ActionEvent>() {\n                    /** {@inheritDoc} */\n                    @Override public void handle(ActionEvent evt) {\n                        if (checkInput(regexTf, false, \"Regular expression should not be empty!\"))\n                            return;\n\n                        Collection<PojoDescriptor> selItems = selectedItems();\n\n                        if (selItems.isEmpty()) {\n                            MessageBox.warningDialog(owner, \"Please select tables to rename Ignite names!\");\n\n                            return;\n                        }\n\n                        if (!MessageBox.confirmDialog(owner,\n                            \"Are you sure you want to rename Ignite names in all selected tables?\"))\n                            return;\n\n                        String regex = regexTf.getText();\n\n                        String replace = replaceTf.getText();\n\n                        try {\n                            for (PojoDescriptor pojo : selItems)\n                                for (PojoField field : pojo.fields())\n                                    field.javaName(field.javaName().replaceAll(regex, replace));\n                        }\n                        catch (Exception e) {\n                            MessageBox.errorDialog(owner, \"Failed to rename Ignite names!\", e);\n                        }\n                    }\n                }),\n            revertBtn,\n            button(\"Revert All\", \"Revert changes to Ignite names for all selected tables\", new EventHandler<ActionEvent>() {\n                /** {@inheritDoc} */\n                @Override public void handle(ActionEvent evt) {\n                    Collection<PojoDescriptor> selItems = selectedItems();\n\n                    if (selItems.isEmpty()) {\n                        MessageBox.warningDialog(owner, \"Please select tables to revert Ignite names!\");\n\n                        return;\n                    }\n\n                    if (!MessageBox.confirmDialog(owner,\n                        \"Are you sure you want to revert Ignite names for all selected tables?\"))\n                        return;\n\n                    for (PojoDescriptor pojo : selItems)\n                        pojo.revertJavaNames();\n                }\n            })\n        ), 4);\n\n        pojosTbl.getSelectionModel().selectedItemProperty().addListener(new ChangeListener<PojoDescriptor>() {\n            @Override public void changed(ObservableValue<? extends PojoDescriptor> val,\n                PojoDescriptor oldVal, PojoDescriptor newItem) {\n                if (newItem != null && newItem.parent != null) {\n                    curPojo = newItem;\n\n                    fieldsTbl.setItems(curPojo.fields());\n                    fieldsTbl.getSelectionModel().select(0);\n\n                    keyValPnl.setDisable(false);\n\n                    renBtn.setDisable(false);\n                    revertBtn.setDisable(false);\n                }\n                else {\n                    curPojo = null;\n                    fieldsTbl.setItems(NO_FIELDS);\n\n                    keyValPnl.setDisable(true);\n\n                    renBtn.setDisable(true);\n                    revertBtn.setDisable(true);\n                    upBtn.setDisable(true);\n                    downBtn.setDisable(true);\n                }\n            }\n        });\n\n        genPnl.add(regexPnl, 3);\n\n        genLayerPnl = stackPane(genPnl);\n    }","id":82105,"modified_method":"/**\n     * Create generate pane with controls.\n     */\n    private void createGeneratePane() {\n        genPnl = paneEx(10, 10, 0, 10);\n\n        genPnl.addColumn();\n        genPnl.addColumn(100, 100, Double.MAX_VALUE, Priority.ALWAYS);\n        genPnl.addColumn(35, 35, 35, Priority.NEVER);\n\n        genPnl.addRow(100, 100, Double.MAX_VALUE, Priority.ALWAYS);\n        genPnl.addRows(7);\n\n        TableColumn<PojoDescriptor, Boolean> useCol = customColumn(\"Schema / Table\", \"use\",\n            \"If checked then this table will be used for XML and POJOs generation\", PojoDescriptorCell.cellFactory());\n\n        TableColumn<PojoDescriptor, String> keyClsCol = textColumn(\"Key Class\", \"keyClassName\", \"Key class name\",\n            new TextColumnValidator<PojoDescriptor>() {\n                @Override public boolean valid(PojoDescriptor rowVal, String newVal) {\n                    return checkClassName(rowVal, newVal, true);\n                }\n            });\n\n        TableColumn<PojoDescriptor, String> valClsCol = textColumn(\"Value Class\", \"valueClassName\", \"Value class name\",\n            new TextColumnValidator<PojoDescriptor>() {\n                @Override public boolean valid(PojoDescriptor rowVal, String newVal) {\n                    return checkClassName(rowVal, newVal, false);\n                }\n            });\n\n        pojosTbl = tableView(\"Tables not found in database\", useCol, keyClsCol, valClsCol);\n\n        TableColumn<PojoField, Boolean> keyCol = booleanColumn(\"Key\", \"key\",\n            \"If checked then this field will be part of key object\");\n\n        TableColumn<PojoField, String> dbNameCol = tableColumn(\"DB Name\", \"dbName\", \"Field name in database\");\n\n        TableColumn<PojoField, String> dbTypeNameCol = tableColumn(\"DB Type\", \"dbTypeName\", \"Field type in database\");\n\n        TableColumn<PojoField, String> javaNameCol = textColumn(\"Ignite Name\", \"javaName\", \"Field name in POJO class\",\n            new TextColumnValidator<PojoField>() {\n                @Override public boolean valid(PojoField rowVal, String newVal) {\n                    for (PojoField field : curPojo.fields())\n                        if (rowVal != field && newVal.equals(field.javaName())) {\n                            MessageBox.warningDialog(owner, \"Ignite name must be unique!\");\n\n                            return false;\n                        }\n\n                    return true;\n                }\n            });\n\n        TableColumn<PojoField, String> javaTypeNameCol = customColumn(\"Java Type\", \"javaTypeName\",\n            \"Field java type in POJO class\", JavaTypeCell.cellFactory());\n\n        final TableView<PojoField> fieldsTbl = tableView(\"Select table to see table columns\",\n            keyCol, dbNameCol, dbTypeNameCol, javaNameCol, javaTypeNameCol);\n\n        genPnl.add(splitPane(pojosTbl, fieldsTbl, 0.6), 3);\n\n        final GridPaneEx keyValPnl = paneEx(0, 0, 0, 0);\n        keyValPnl.addColumn(100, 100, Double.MAX_VALUE, Priority.ALWAYS);\n        keyValPnl.addColumn();\n        keyValPnl.addColumn(100, 100, Double.MAX_VALUE, Priority.ALWAYS);\n        keyValPnl.addColumn();\n\n        pkgTf = genPnl.addLabeled(\"Package:\", textField(\"Package that will be used for POJOs generation\"), 2);\n\n        outFolderTf = genPnl.addLabeled(\"Output Folder:\", textField(\"Output folder for XML and POJOs files\"));\n\n        genPnl.add(button(\"...\", \"Select output folder\", new EventHandler<ActionEvent>() {\n            @Override public void handle(ActionEvent evt) {\n                DirectoryChooser dc = new DirectoryChooser();\n\n                File folder = dc.showDialog(owner);\n\n                if (folder != null)\n                    outFolderTf.setText(folder.getAbsolutePath());\n            }\n        }));\n\n        pojoIncludeKeysCh = genPnl.add(checkBox(\"Include key fields into value POJOs\",\n            \"If selected then include key fields into value object\", true), 3);\n\n        pojoConstructorCh = genPnl.add(checkBox(\"Generate constructors for POJOs\",\n            \"If selected then generate empty and full constructors for POJOs\", false), 3);\n\n        xmlSingleFileCh = genPnl.add(checkBox(\"Write all configurations to a single XML file\",\n            \"If selected then all configurations will be saved into the file 'Ignite.xml'\", true), 3);\n\n        openFolderCh = genPnl.add(checkBox(\"Reveal output folder\",\n            \"Open output folder in system file manager after generation complete\", true), 3);\n\n        GridPaneEx regexPnl = paneEx(0, 0, 0, 0);\n        regexPnl.addColumn();\n        regexPnl.addColumn(100, 100, Double.MAX_VALUE, Priority.ALWAYS);\n        regexPnl.addColumn();\n        regexPnl.addColumn(100, 100, Double.MAX_VALUE, Priority.ALWAYS);\n\n        regexPnl.add(new Label(\"Replace Ignite name for selected or all tables:\"), 4);\n        regexTf = regexPnl.addLabeled(\"  Regexp:\", textField(\"Regular expression. For example: (\\\\w+)\"));\n        replaceTf = regexPnl.addLabeled(\"  Replace with:\", textField(\"Replace text. For example: $1_Suffix\"));\n\n        final Button renBtn = button(\"Rename\", \"Replace Ignite names by provided regular expression for current table\",\n            new EventHandler<ActionEvent>() {\n                @Override public void handle(ActionEvent evt) {\n                    if (curPojo == null) {\n                        MessageBox.warningDialog(owner, \"Please select table to rename Ignite names!\");\n\n                        return;\n                    }\n\n                    if (checkInput(regexTf, false, \"Regular expression should not be empty!\"))\n                        return;\n\n                    String regex = regexTf.getText();\n\n                    String replace = replaceTf.getText();\n\n                    try {\n                        for (PojoField field : curPojo.fields())\n                            field.javaName(field.javaName().replaceAll(regex, replace));\n                    }\n                    catch (Exception e) {\n                        MessageBox.errorDialog(owner, \"Failed to rename Ignite names!\", e);\n                    }\n                }\n            });\n        renBtn.setDisable(true);\n\n        final Button revertBtn = button(\"Revert\", \"Revert changes to Ignite names for current table\", new EventHandler<ActionEvent>() {\n            @Override public void handle(ActionEvent evt) {\n                if (curPojo != null)\n                    curPojo.revertJavaNames();\n                else\n                    MessageBox.warningDialog(owner, \"Please select table to revert changes to Ignite names!\");\n            }\n        });\n        revertBtn.setDisable(true);\n\n        regexPnl.add(buttonsPane(Pos.BOTTOM_RIGHT, false,\n            renBtn,\n            button(\"Rename All\", \"Replace Ignite names by provided regular expression for all selected tables\",\n                new EventHandler<ActionEvent>() {\n                    @Override public void handle(ActionEvent evt) {\n                        if (checkInput(regexTf, false, \"Regular expression should not be empty!\"))\n                            return;\n\n                        Collection<PojoDescriptor> selItems = selectedItems();\n\n                        if (selItems.isEmpty()) {\n                            MessageBox.warningDialog(owner, \"Please select tables to rename Ignite names!\");\n\n                            return;\n                        }\n\n                        if (!MessageBox.confirmDialog(owner,\n                            \"Are you sure you want to rename Ignite names in all selected tables?\"))\n                            return;\n\n                        String regex = regexTf.getText();\n\n                        String replace = replaceTf.getText();\n\n                        try {\n                            for (PojoDescriptor pojo : selItems)\n                                for (PojoField field : pojo.fields())\n                                    field.javaName(field.javaName().replaceAll(regex, replace));\n                        }\n                        catch (Exception e) {\n                            MessageBox.errorDialog(owner, \"Failed to rename Ignite names!\", e);\n                        }\n                    }\n                }),\n            revertBtn,\n            button(\"Revert All\", \"Revert changes to Ignite names for all selected tables\", new EventHandler<ActionEvent>() {\n                @Override public void handle(ActionEvent evt) {\n                    Collection<PojoDescriptor> selItems = selectedItems();\n\n                    if (selItems.isEmpty()) {\n                        MessageBox.warningDialog(owner, \"Please select tables to revert Ignite names!\");\n\n                        return;\n                    }\n\n                    if (!MessageBox.confirmDialog(owner,\n                        \"Are you sure you want to revert Ignite names for all selected tables?\"))\n                        return;\n\n                    for (PojoDescriptor pojo : selItems)\n                        pojo.revertJavaNames();\n                }\n            })\n        ), 4);\n\n        pojosTbl.getSelectionModel().selectedItemProperty().addListener(new ChangeListener<PojoDescriptor>() {\n            @Override public void changed(ObservableValue<? extends PojoDescriptor> val,\n                PojoDescriptor oldVal, PojoDescriptor newItem) {\n                if (newItem != null && newItem.parent() != null) {\n                    curPojo = newItem;\n\n                    fieldsTbl.setItems(curPojo.fields());\n                    fieldsTbl.getSelectionModel().select(0);\n\n                    keyValPnl.setDisable(false);\n\n                    renBtn.setDisable(false);\n                    revertBtn.setDisable(false);\n                }\n                else {\n                    curPojo = null;\n                    fieldsTbl.setItems(NO_FIELDS);\n\n                    keyValPnl.setDisable(true);\n\n                    renBtn.setDisable(true);\n                    revertBtn.setDisable(true);\n                }\n            }\n        });\n\n        genPnl.add(regexPnl, 3);\n\n        genLayerPnl = stackPane(genPnl);\n    }","commit_id":"69feb3925b971e281ebd164cfc504d77ba20a138","url":"https://github.com/apache/ignite"},{"original_method":"/** Creates a ComboBox cell factory for use in TableColumn controls. */\n        public static Callback<TableColumn<PojoField, String>, TableCell<PojoField, String>> cellFactory() {\n            return new Callback<TableColumn<PojoField, String>, TableCell<PojoField, String>>() {\n                /** {@inheritDoc} */\n                @Override public TableCell<PojoField, String> call(TableColumn<PojoField, String> col) {\n                    return new JavaTypeCell();\n                }\n            };\n        }","id":82106,"modified_method":"/** Creates a ComboBox cell factory for use in TableColumn controls. */\n        public static Callback<TableColumn<PojoField, String>, TableCell<PojoField, String>> cellFactory() {\n            return new Callback<TableColumn<PojoField, String>, TableCell<PojoField, String>>() {\n                @Override public TableCell<PojoField, String> call(TableColumn<PojoField, String> col) {\n                    return new JavaTypeCell();\n                }\n            };\n        }","commit_id":"69feb3925b971e281ebd164cfc504d77ba20a138","url":"https://github.com/apache/ignite"},{"original_method":"/**\n         * Default constructor.\n         */\n        private JavaTypeCell() {\n            comboBox = new ComboBox<>(FXCollections.<String>emptyObservableList());\n\n            comboBox.valueProperty().addListener(new ChangeListener<String>() {\n                /** {@inheritDoc} */\n                @Override public void changed(ObservableValue<? extends String> val, String oldVal, String newVal) {\n                    if (isEditing())\n                        commitEdit(newVal);\n                }\n            });\n\n            getStyleClass().add(\"combo-box-table-cell\");\n        }","id":82107,"modified_method":"/**\n         * Default constructor.\n         */\n        private JavaTypeCell() {\n            comboBox = new ComboBox<>(FXCollections.<String>emptyObservableList());\n\n            comboBox.valueProperty().addListener(new ChangeListener<String>() {\n                @Override public void changed(ObservableValue<? extends String> val, String oldVal, String newVal) {\n                    if (isEditing())\n                        commitEdit(newVal);\n                }\n            });\n\n            getStyleClass().add(\"combo-box-table-cell\");\n        }","commit_id":"69feb3925b971e281ebd164cfc504d77ba20a138","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * Fill tree with database metadata.\n     */\n    private void fill() {\n        lockUI(connLayerPnl, connPnl, nextBtn);\n\n        Runnable task = new Task<Void>() {\n            /** {@inheritDoc} */\n            @Override protected Void call() throws Exception {\n                long started = System.currentTimeMillis();\n\n                try (Connection conn = connect()) {\n                    pojos = parse(conn);\n                }\n\n                perceptualDelay(started);\n\n                return null;\n            }\n\n            private CheckBoxTreeItem<String> addCheckBoxTreeItem(CheckBoxTreeItem<String> parent, String text) {\n                CheckBoxTreeItem<String> item = new CheckBoxTreeItem<>(text);\n\n                item.setSelected(true);\n                item.setExpanded(true);\n\n                parent.getChildren().add(item);\n\n                return item;\n            }\n\n            /** {@inheritDoc} */\n            @Override protected void succeeded() {\n                super.succeeded();\n\n                pojosTbl.setItems(pojos);\n\n                unlockUI(connLayerPnl, connPnl, nextBtn);\n\n                titleLb.setText(\"Generate XML And POJOs\");\n                titleLb.setGraphic(imageView(\"text_tree\", 48));\n\n                rootPane.setCenter(genLayerPnl);\n\n                prevBtn.setDisable(false);\n                nextBtn.setText(\"Generate\");\n                tooltip(nextBtn, \"Generate XML and POJO files\");\n            }\n\n            /** {@inheritDoc} */\n            @Override protected void cancelled() {\n                super.cancelled();\n\n                unlockUI(connLayerPnl, connPnl, nextBtn);\n            }\n\n            /** {@inheritDoc} */\n            @Override protected void failed() {\n                super.succeeded();\n\n                unlockUI(connLayerPnl, connPnl, nextBtn);\n\n                MessageBox.errorDialog(owner, \"Failed to get tables list from database.\", getException());\n            }\n        };\n\n        exec.submit(task);\n    }","id":82108,"modified_method":"/**\n     * Fill tree with database metadata.\n     */\n    private void fill() {\n        lockUI(connLayerPnl, connPnl, nextBtn);\n\n        Runnable task = new Task<Void>() {\n            /** {@inheritDoc} */\n            @Override protected Void call() throws Exception {\n                long started = System.currentTimeMillis();\n\n                try (Connection conn = connect()) {\n                    pojos = DatabaseMetadataParser.parse(conn);\n                }\n\n                perceptualDelay(started);\n\n                return null;\n            }\n\n            private CheckBoxTreeItem<String> addCheckBoxTreeItem(CheckBoxTreeItem<String> parent, String text) {\n                CheckBoxTreeItem<String> item = new CheckBoxTreeItem<>(text);\n\n                item.setSelected(true);\n                item.setExpanded(true);\n\n                parent.getChildren().add(item);\n\n                return item;\n            }\n\n            /** {@inheritDoc} */\n            @Override protected void succeeded() {\n                super.succeeded();\n\n                pojosTbl.setItems(pojos);\n\n                unlockUI(connLayerPnl, connPnl, nextBtn);\n\n                titleLb.setText(\"Generate XML And POJOs\");\n                titleLb.setGraphic(imageView(\"text_tree\", 48));\n\n                rootPane.setCenter(genLayerPnl);\n\n                prevBtn.setDisable(false);\n                nextBtn.setText(\"Generate\");\n                tooltip(nextBtn, \"Generate XML and POJO files\");\n            }\n\n            /** {@inheritDoc} */\n            @Override protected void cancelled() {\n                super.cancelled();\n\n                unlockUI(connLayerPnl, connPnl, nextBtn);\n            }\n\n            /** {@inheritDoc} */\n            @Override protected void failed() {\n                super.succeeded();\n\n                unlockUI(connLayerPnl, connPnl, nextBtn);\n\n                MessageBox.errorDialog(owner, \"Failed to get tables list from database.\", getException());\n            }\n        };\n\n        exec.submit(task);\n    }","commit_id":"69feb3925b971e281ebd164cfc504d77ba20a138","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * Create connection pane with controls.\n     */\n    private Pane createConnectionPane() {\n        connPnl = paneEx(10, 10, 0, 10);\n\n        connPnl.addColumn();\n        connPnl.addColumn(100, 100, Double.MAX_VALUE, Priority.ALWAYS);\n        connPnl.addColumn(35, 35, 35, Priority.NEVER);\n\n        jdbcDrvJarTf = connPnl.addLabeled(\"Driver JAR:\", textField(\"Path to driver jar\"));\n\n        connPnl.add(button(\"...\", \"Select JDBC driver jar or zip\", new EventHandler<ActionEvent>() {\n            /** {@inheritDoc} */\n            @Override public void handle(ActionEvent evt) {\n                FileChooser fc = new FileChooser();\n\n                fc.getExtensionFilters().addAll(\n                    new FileChooser.ExtensionFilter(\"JDBC Drivers (*.jar)\", \"*.jar\"),\n                    new FileChooser.ExtensionFilter(\"ZIP archives (*.zip)\", \"*.zip\"));\n\n                File drvJar = fc.showOpenDialog(owner);\n\n                if (drvJar != null)\n                    jdbcDrvJarTf.setText(drvJar.getAbsolutePath());\n            }\n        }));\n\n        jdbcDrvClsTf = connPnl.addLabeled(\"JDBC Driver:\", textField(\"Class name for JDBC driver\"), 2);\n\n        jdbcUrlTf = connPnl.addLabeled(\"JDBC URL:\", textField(\"JDBC URL of the database connection string\"), 2);\n\n        userTf = connPnl.addLabeled(\"User:\", textField(\"User name\"), 2);\n\n        pwdTf = connPnl.addLabeled(\"Password:\", passwordField(\"User password\"), 2);\n\n        connLayerPnl = stackPane(connPnl);\n\n        return connLayerPnl;\n    }","id":82109,"modified_method":"/**\n     * Create connection pane with controls.\n     */\n    private Pane createConnectionPane() {\n        connPnl = paneEx(10, 10, 0, 10);\n\n        connPnl.addColumn();\n        connPnl.addColumn(100, 100, Double.MAX_VALUE, Priority.ALWAYS);\n        connPnl.addColumn(35, 35, 35, Priority.NEVER);\n\n        connPnl.add(text(\"This utility is designed to automatically generate configuration XML files and\" +\n            \" POGO classes from database schema information.\", 550), 3);\n\n        connPnl.wrap();\n\n        jdbcDrvJarTf = connPnl.addLabeled(\"Driver JAR:\", textField(\"Path to driver jar\"));\n\n        connPnl.add(button(\"...\", \"Select JDBC driver jar or zip\", new EventHandler<ActionEvent>() {\n            /** {@inheritDoc} */\n            @Override public void handle(ActionEvent evt) {\n                FileChooser fc = new FileChooser();\n\n                fc.getExtensionFilters().addAll(\n                    new FileChooser.ExtensionFilter(\"JDBC Drivers (*.jar)\", \"*.jar\"),\n                    new FileChooser.ExtensionFilter(\"ZIP archives (*.zip)\", \"*.zip\"));\n\n                File drvJar = fc.showOpenDialog(owner);\n\n                if (drvJar != null)\n                    jdbcDrvJarTf.setText(drvJar.getAbsolutePath());\n            }\n        }));\n\n        jdbcDrvClsTf = connPnl.addLabeled(\"JDBC Driver:\", textField(\"Class name for JDBC driver\"), 2);\n\n        jdbcUrlTf = connPnl.addLabeled(\"JDBC URL:\", textField(\"JDBC URL of the database connection string\"), 2);\n\n        userTf = connPnl.addLabeled(\"User:\", textField(\"User name\"), 2);\n\n        pwdTf = connPnl.addLabeled(\"Password:\", passwordField(\"User password\"), 2);\n\n        connLayerPnl = stackPane(connPnl);\n\n        return connLayerPnl;\n    }","commit_id":"69feb3925b971e281ebd164cfc504d77ba20a138","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * Generate XML and POJOs.\n     */\n    private void generate() {\n        Collection<PojoDescriptor> selItems = selectedItems();\n\n        if (selItems.isEmpty()) {\n            MessageBox.warningDialog(owner, \"Please select tables to generate XML and POJOs files!\");\n\n            return;\n        }\n\n        lockUI(genLayerPnl, genPnl, prevBtn, nextBtn);\n\n        final String outFolder = outFolderTf.getText();\n\n        final String pkg = pkgTf.getText();\n\n        final File destFolder = new File(outFolder);\n\n        Runnable task = new Task<Void>() {\n            private void checkEmpty(Collection<GridCacheQueryTypeDescriptor> items,\n                final PojoDescriptor pojo, String msg) {\n                if (items.isEmpty()) {\n                    Platform.runLater(new Runnable() {\n                        /** {@inheritDoc} */\n                        @Override public void run() {\n                            pojosTbl.getSelectionModel().select(pojo);\n                        }\n                    });\n\n                    throw new IllegalStateException(msg + pojo.table());\n                }\n            }\n\n            /** {@inheritDoc} */\n            @Override protected Void call() throws Exception {\n                long started = System.currentTimeMillis();\n\n                if (!destFolder.exists() && !destFolder.mkdirs())\n                    throw new IOException(\"Failed to create output folder: \" + destFolder);\n\n                Collection<GridCacheQueryTypeMetadata> all = new ArrayList<>();\n\n                boolean constructor = pojoConstructorCh.isSelected();\n                boolean include = pojoIncludeKeysCh.isSelected();\n                boolean singleXml = xmlSingleFileCh.isSelected();\n\n                ConfirmCallable askOverwrite = new ConfirmCallable(owner, \"File already exists: %s\\nOverwrite?\");\n\n                // Generate XML and POJO.\n                for (PojoDescriptor pojo : pojos) {\n                    if (pojo.selected()) {\n                        GridCacheQueryTypeMetadata meta = pojo.metadata();\n\n                        Collection<GridCacheQueryTypeDescriptor> keys = new ArrayList<>();\n\n                        Collection<GridCacheQueryTypeDescriptor> vals = new ArrayList<>();\n\n                        // Fill list with key and value type descriptors.\n                        for (PojoField fld : pojo.fields()) {\n                            GridCacheQueryTypeDescriptor desc = fld.descriptor();\n\n                            if (fld.key()) {\n                                keys.add(desc);\n\n                                if (include)\n                                    vals.add(desc);\n                            }\n                            else\n                                vals.add(desc);\n                        }\n\n                        checkEmpty(keys, pojo, \"No key fields specified for type: \");\n\n                        checkEmpty(vals, pojo, \"No value fields specified for type: \");\n\n                        meta.setKeyDescriptors(keys);\n\n                        meta.setValueDescriptors(vals);\n\n                        all.add(meta);\n\n                        if (!singleXml)\n                            XmlGenerator.generate(pkg, meta, new File(destFolder, meta.getType() + \".xml\"),\n                                askOverwrite);\n\n                        PojoGenerator.generate(meta, outFolder, pkg, constructor, askOverwrite);\n                    }\n                }\n\n                if (all.isEmpty())\n                    throw new IllegalStateException(\"Nothing selected!\");\n                else if (singleXml)\n                    XmlGenerator.generate(pkg, all, new File(outFolder, \"Ignite.xml\"), askOverwrite);\n\n                perceptualDelay(started);\n\n                return null;\n            }\n\n            /** {@inheritDoc} */\n            @Override protected void succeeded() {\n                super.succeeded();\n\n                unlockUI(genLayerPnl, genPnl, prevBtn, nextBtn);\n\n                MessageBox.informationDialog(owner, \"Generation complete!\");\n\n                if (openFolderCh.isSelected())\n                    try {\n                        java.awt.Desktop.getDesktop().open(destFolder);\n                    }\n                    catch (IOException e) {\n                        MessageBox.errorDialog(owner, \"Failed to open folder with results.\", e);\n                    }\n            }\n\n            /** {@inheritDoc} */\n            @Override protected void cancelled() {\n                super.cancelled();\n\n                unlockUI(genLayerPnl, genPnl, prevBtn, nextBtn);\n\n                MessageBox.warningDialog(owner, \"Generation canceled.\");\n            }\n\n            /** {@inheritDoc} */\n            @Override protected void failed() {\n                super.succeeded();\n\n                unlockUI(genLayerPnl, genPnl, prevBtn, nextBtn);\n\n                MessageBox.errorDialog(owner, \"Generation failed.\", getException());\n            }\n        };\n\n        exec.submit(task);\n    }","id":82110,"modified_method":"/**\n     * Generate XML and POJOs.\n     */\n    private void generate() {\n        final Collection<PojoDescriptor> selPojos = selectedItems();\n\n        if (selPojos.isEmpty()) {\n            MessageBox.warningDialog(owner, \"Please select tables to generate XML and POJOs files!\");\n\n            return;\n        }\n\n        lockUI(genLayerPnl, genPnl, prevBtn, nextBtn);\n\n        final String outFolder = outFolderTf.getText();\n\n        final String pkg = pkgTf.getText();\n\n        final File destFolder = new File(outFolder);\n\n        Runnable task = new Task<Void>() {\n            private void checkEmpty(final PojoDescriptor pojo, Collection<GridCacheQueryTypeDescriptor> descs,\n                String msg) {\n                if (descs.isEmpty()) {\n                    Platform.runLater(new Runnable() {\n                        @Override public void run() {\n                            pojosTbl.getSelectionModel().select(pojo);\n                        }\n                    });\n\n                    throw new IllegalStateException(msg + pojo.table());\n                }\n            }\n\n            /** {@inheritDoc} */\n            @Override protected Void call() throws Exception {\n                long started = System.currentTimeMillis();\n\n                if (!destFolder.exists() && !destFolder.mkdirs())\n                    throw new IOException(\"Failed to create output folder: \" + destFolder);\n\n                Collection<GridCacheQueryTypeMetadata> all = new ArrayList<>();\n\n                boolean constructor = pojoConstructorCh.isSelected();\n                boolean includeKeys = pojoIncludeKeysCh.isSelected();\n                boolean singleXml = xmlSingleFileCh.isSelected();\n\n                ConfirmCallable askOverwrite = new ConfirmCallable(owner, \"File already exists: %s\\nOverwrite?\");\n\n                // Generate XML and POJO.\n                for (PojoDescriptor pojo : selPojos) {\n                    if (pojo.selected()) {\n                        GridCacheQueryTypeMetadata meta = pojo.metadata(includeKeys);\n\n                        checkEmpty(pojo, meta.getKeyDescriptors(), \"No key fields specified for type: \");\n\n                        checkEmpty(pojo, meta.getValueDescriptors(), \"No value fields specified for type: \");\n\n                        all.add(meta);\n\n                        if (!singleXml)\n                            XmlGenerator.generate(pkg, meta, new File(destFolder, meta.getType() + \".xml\"),\n                                askOverwrite);\n\n                        PojoGenerator.generate(pojo, outFolder, pkg, constructor, includeKeys, askOverwrite);\n                    }\n                }\n\n                if (singleXml)\n                    XmlGenerator.generate(pkg, all, new File(outFolder, \"Ignite.xml\"), askOverwrite);\n\n                perceptualDelay(started);\n\n                return null;\n            }\n\n            /** {@inheritDoc} */\n            @Override protected void succeeded() {\n                super.succeeded();\n\n                unlockUI(genLayerPnl, genPnl, prevBtn, nextBtn);\n\n                MessageBox.informationDialog(owner, \"Generation complete!\");\n\n                if (openFolderCh.isSelected())\n                    try {\n                        java.awt.Desktop.getDesktop().open(destFolder);\n                    }\n                    catch (IOException e) {\n                        MessageBox.errorDialog(owner, \"Failed to open folder with results.\", e);\n                    }\n            }\n\n            /** {@inheritDoc} */\n            @Override protected void cancelled() {\n                super.cancelled();\n\n                unlockUI(genLayerPnl, genPnl, prevBtn, nextBtn);\n\n                MessageBox.warningDialog(owner, \"Generation canceled.\");\n            }\n\n            /** {@inheritDoc} */\n            @Override protected void failed() {\n                super.succeeded();\n\n                unlockUI(genLayerPnl, genPnl, prevBtn, nextBtn);\n\n                MessageBox.errorDialog(owner, \"Generation failed.\", getException());\n            }\n        };\n\n        exec.submit(task);\n    }","commit_id":"69feb3925b971e281ebd164cfc504d77ba20a138","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * Transform metadata into xml.\n     *\n     * @param pkg Package fo types.\n     * @param meta Metadata to generate.\n     * @param out File to output result.\n     * @param askOverwrite Callback to ask user to confirm file overwrite.\n     */\n    public static void generate(String pkg, Collection<GridCacheQueryTypeMetadata> meta, File out,\n        ConfirmCallable askOverwrite) {\n        try {\n            if (out.exists()) {\n                MessageBox.Result choice = askOverwrite.confirm(out.getName());\n\n                if (CANCEL == choice)\n                    throw new IllegalStateException(\"XML generation was canceled!\");\n\n                if (NO == choice || NO_TO_ALL == choice)\n                    return;\n            }\n\n            DocumentBuilderFactory docFactory = DocumentBuilderFactory.newInstance();\n\n            DocumentBuilder docBuilder = docFactory.newDocumentBuilder();\n\n            Document doc = docBuilder.newDocument();\n            doc.setXmlStandalone(true);\n\n            Element beans = addElement(doc, doc, \"beans\");\n            beans.setAttribute(\"xmlns\", \"http://www.springframework.org/schema/beans\");\n            beans.setAttribute(\"xmlns:xsi\", \"http://www.w3.org/2001/XMLSchema-instance\");\n            beans.setAttribute(\"xmlns:util\", \"http://www.springframework.org/schema/util\");\n            beans.setAttribute(\"xsi:schemaLocation\",\n                \"http://www.springframework.org/schema/beans \" +\n                    \"http://www.springframework.org/schema/beans/spring-beans.xsd \" +\n                    \"http://www.springframework.org/schema/util \" +\n                    \"http://www.springframework.org/schema/util/spring-util.xsd\");\n\n            for (GridCacheQueryTypeMetadata item : meta)\n                addTypeMetadata(doc, beans, pkg, item);\n\n            TransformerFactory transformerFactory = TransformerFactory.newInstance();\n\n            Transformer transformer = transformerFactory.newTransformer();\n\n            transformer.setOutputProperty(OutputKeys.INDENT, \"yes\");\n            transformer.setOutputProperty(\"{http://xml.apache.org/xslt}indent-amount\", \"4\");\n\n            transformer.transform(new DOMSource(doc), new StreamResult(out));\n        }\n        catch (ParserConfigurationException | TransformerException e) {\n            throw new IllegalStateException(e);\n        }\n    }","id":82111,"modified_method":"/**\n     * Transform metadata into xml.\n     *\n     * @param pkg Package fo types.\n     * @param meta Metadata to generate.\n     * @param out File to output result.\n     * @param askOverwrite Callback to ask user to confirm file overwrite.\n     */\n    public static void generate(String pkg, Collection<GridCacheQueryTypeMetadata> meta, File out,\n        ConfirmCallable askOverwrite) {\n\n        try {\n            if (out.exists()) {\n                MessageBox.Result choice = askOverwrite.confirm(out.getName());\n\n                if (CANCEL == choice)\n                    throw new IllegalStateException(\"XML generation was canceled!\");\n\n                if (NO == choice || NO_TO_ALL == choice)\n                    return;\n            }\n\n            DocumentBuilderFactory docFactory = DocumentBuilderFactory.newInstance();\n\n            DocumentBuilder docBuilder = docFactory.newDocumentBuilder();\n\n            Document doc = docBuilder.newDocument();\n            doc.setXmlStandalone(true);\n\n            addComment(doc);\n\n            Element beans = addElement(doc, doc, \"beans\");\n            beans.setAttribute(\"xmlns\", \"http://www.springframework.org/schema/beans\");\n            beans.setAttribute(\"xmlns:xsi\", \"http://www.w3.org/2001/XMLSchema-instance\");\n            beans.setAttribute(\"xmlns:util\", \"http://www.springframework.org/schema/util\");\n            beans.setAttribute(\"xsi:schemaLocation\",\n                \"http://www.springframework.org/schema/beans \" +\n                    \"http://www.springframework.org/schema/beans/spring-beans.xsd \" +\n                    \"http://www.springframework.org/schema/util \" +\n                    \"http://www.springframework.org/schema/util/spring-util.xsd\");\n\n            for (GridCacheQueryTypeMetadata item : meta)\n                addTypeMetadata(doc, beans, pkg, item);\n\n            TransformerFactory transformerFactory = TransformerFactory.newInstance();\n\n            Transformer transformer = transformerFactory.newTransformer();\n\n            transformer.setOutputProperty(OutputKeys.INDENT, \"yes\");\n            transformer.setOutputProperty(\"{http://xml.apache.org/xslt}indent-amount\", \"4\");\n\n            ByteArrayOutputStream baos = new ByteArrayOutputStream(65536);\n\n            transformer.transform(new DOMSource(doc), new StreamResult(baos));\n\n            // Custom pretty-print of generated XML.\n            Files.write(out.toPath(), baos.toString()\n                .replaceAll(\"><\", \">\\n<\")\n                .replaceAll(\"\\\" xmlns\", \"\\\"\\n       xmlns\")\n                .replaceAll(\"\\\" xsi\", \"\\\"\\n       xsi\")\n                .replaceAll(\" http://www.springframework\", \" \\n                           http://www.springframewor\")\n                .getBytes());\n        }\n        catch (ParserConfigurationException | TransformerException | IOException e) {\n            throw new IllegalStateException(e);\n        }\n    }","commit_id":"69feb3925b971e281ebd164cfc504d77ba20a138","url":"https://github.com/apache/ignite"},{"original_method":"@Override\n  public XExpression getExpression() {\n    ComboPopup popup = myComboBox.getPopup();\n    if (popup != null && popup.isVisible()) {\n      Object value = popup.getList().getSelectedValue();\n      if (value != null) {\n        return (XExpression)value;\n      }\n    }\n    return getEditorsProvider().createExpression(getProject(), (Document)myEditor.getItem(), myExpression.getLanguage(), EvaluationMode.EXPRESSION);\n  }","id":82112,"modified_method":"@Override\n  public XExpression getExpression() {\n    ComboPopup popup = myComboBox.getPopup();\n    if (popup != null && popup.isVisible()) {\n      Object value = popup.getList().getSelectedValue();\n      if (value != null) {\n        return (XExpression)value;\n      }\n    }\n    Object document = myEditor.getItem();\n    if (document != null) { //sometimes happens on Mac\n      return getEditorsProvider().createExpression(getProject(), (Document)document, myExpression.getLanguage(), EvaluationMode.EXPRESSION);\n    }\n    return myExpression;\n  }","commit_id":"6a413c23f5f2ed72577765f5cdc6743ca18e7180","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void moveSelection(boolean up, boolean extend)\n   {\n      if (getVisibleItemCount() == 0)\n         return;\n\n      int min = getVisibleItemCount();\n      int max = -1;\n\n      for (int i = 0; i < getVisibleItemCount(); i++)\n      {\n         if (getSelectionModel().isSelected(getVisibleItem(i)))\n         {\n            max = i;\n            if (min > i)\n               min = i;\n         }\n      }\n\n      if (up)\n      {\n         int row = Math.max(0, min - 1);\n         if (!canSelectVisibleRow(row))\n            row = min;\n\n         if (!extend)\n            clearSelection();\n         getSelectionModel().setSelected(getVisibleItem(row), true);\n         ensureRowVisible(row);\n      }\n      else\n      {\n         int row = Math.min(getVisibleItemCount()-1, max + 1);\n         if (!canSelectVisibleRow(row))\n            row = max;\n\n         if (!extend)\n            clearSelection();\n         getSelectionModel().setSelected(getVisibleItem(row), true);\n         ensureRowVisible(row);\n      }\n   }","id":82113,"modified_method":"public void moveSelection(boolean up, boolean extend)\n   {\n      if (getVisibleItemCount() == 0)\n         return;\n\n      int min = getVisibleItemCount();\n      int max = -1;\n\n      for (int i = 0; i < getVisibleItemCount(); i++)\n      {\n         if (getSelectionModel().isSelected(getVisibleItem(i)))\n         {\n            max = i;\n            if (min > i)\n               min = i;\n         }\n      }\n\n      if (up)\n      {\n         int row = Math.max(0, min - 1);\n         if (!canSelectVisibleRow(row))\n            row = min;\n\n         if (!extend)\n            clearSelection();\n         getSelectionModel().setSelected(getVisibleItem(row), true);\n         ensureRowVisible(row, true);\n      }\n      else\n      {\n         int row = Math.min(getVisibleItemCount()-1, max + 1);\n         if (!canSelectVisibleRow(row))\n            row = max;\n\n         if (!extend)\n            clearSelection();\n         getSelectionModel().setSelected(getVisibleItem(row), true);\n         ensureRowVisible(row, false);\n      }\n   }","commit_id":"6c3ea19586cb34471958120f59c468a672e4a13e","url":"https://github.com/rstudio/rstudio"},{"original_method":"private void ensureRowVisible(int row)\n   {\n      if (row == 0)\n         (getElement().<TableElement>cast()).getRows().getItem(0).scrollIntoView();\n      else\n         getRowElement(row).scrollIntoView();\n   }","id":82114,"modified_method":"private void ensureRowVisible(int row, boolean alignWithTop)\n   {\n      Element el;\n      if (row == 0 && alignWithTop)\n         el = (getElement().<TableElement>cast()).getRows().getItem(0);\n      else\n         el = getRowElement(row);\n\n      if (el != null)\n         DomUtils.scrollIntoViewVert(el);\n   }","commit_id":"6c3ea19586cb34471958120f59c468a672e4a13e","url":"https://github.com/rstudio/rstudio"},{"original_method":"public void itemSelected(LookupEvent event) {\n      final TemplateImpl template = (TemplateImpl)event.getItem().getObject();\n      final String argument = myTemplate2Argument != null ? myTemplate2Argument.get(template) : null;\n      new WriteCommandAction(myProject) {\n        protected void run(Result result) throws Throwable {\n          ((TemplateManagerImpl)TemplateManager.getInstance(myProject)).startTemplateWithPrefix(myEditor, template, null, argument);\n        }\n      }.execute();\n    }","id":82115,"modified_method":"public void itemSelected(LookupEvent event) {\n      LookupElement item = event.getItem();\n      if (item != null) {\n        final TemplateImpl template = (TemplateImpl)item.getObject();\n        final String argument = myTemplate2Argument != null ? myTemplate2Argument.get(template) : null;\n        new WriteCommandAction(myProject) {\n          protected void run(Result result) throws Throwable {\n            ((TemplateManagerImpl)TemplateManager.getInstance(myProject)).startTemplateWithPrefix(myEditor, template, null, argument);\n          }\n        }.execute();\n      }\n    }","commit_id":"fc023d4248203f3e5e3ce7fa529f66547942a5b4","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public String getModel() {\n\t\tCapability capability = _capabilities.get(WURFLConstants.MODEL_NAME);\n\n\t\treturn capability.getValue();\n\t}","id":82116,"modified_method":"public String getModel() {\n\t\treturn getValue(WURFLConstants.MODEL_NAME);\n\t}","commit_id":"7241b46b842e1f983f7c6f377164b10c6048ae3e","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public String getOS() {\n\t\tCapability capability = _capabilities.get(WURFLConstants.DEVICE_OS);\n\n\t\treturn capability.getValue();\n\t}","id":82117,"modified_method":"public String getOS() {\n\t\treturn getValue(WURFLConstants.DEVICE_OS);\n\t}","commit_id":"7241b46b842e1f983f7c6f377164b10c6048ae3e","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public String getOSVersion() {\n\t\tCapability capability = _capabilities.get(\n\t\t\tWURFLConstants.DEVICE_OS_VERSION);\n\n\t\treturn capability.getValue();\n\t}","id":82118,"modified_method":"public String getOSVersion() {\n\t\treturn getValue(WURFLConstants.DEVICE_OS_VERSION);\n\t}","commit_id":"7241b46b842e1f983f7c6f377164b10c6048ae3e","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public String getCapability(String name) {\n\t\tCapability capability = _capabilities.get(name);\n\n\t\treturn capability.getValue();\n\t}","id":82119,"modified_method":"public String getCapability(String name) {\n\t\tCapability capability = _capabilities.get(name);\n\n\t\tif (capability == null) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn capability.getValue();\n\t}","commit_id":"7241b46b842e1f983f7c6f377164b10c6048ae3e","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public String getBrowser() {\n\t\tCapability capability = _capabilities.get(\n\t\t\tWURFLConstants.MOBILE_BROWSER);\n\n\t\treturn capability.getValue();\n\t}","id":82120,"modified_method":"public String getBrowser() {\n\t\treturn getValue(WURFLConstants.MOBILE_BROWSER);\n\t}","commit_id":"7241b46b842e1f983f7c6f377164b10c6048ae3e","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public String getBrowserVersion() {\n\t\tCapability capability = _capabilities.get(\n\t\t\tWURFLConstants.MOBILE_BROWSER_VERSION);\n\n\t\treturn capability.getValue();\n\t}","id":82121,"modified_method":"public String getBrowserVersion() {\n\t\treturn getValue(WURFLConstants.MOBILE_BROWSER_VERSION);\n\t}","commit_id":"7241b46b842e1f983f7c6f377164b10c6048ae3e","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public String getBrand() {\n\t\tCapability capability = _capabilities.get(WURFLConstants.BRAND_NAME);\n\n\t\treturn capability.getValue();\n\t}","id":82122,"modified_method":"public String getBrand() {\n\t\treturn getValue(WURFLConstants.BRAND_NAME);\n\t}","commit_id":"7241b46b842e1f983f7c6f377164b10c6048ae3e","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public boolean hasQwertyKeyboard() {\n\t\tCapability capability = _capabilities.get(\n\t\t\tWURFLConstants.HAS_QWERTY_KEYBOARD);\n\n\t\treturn GetterUtil.getBoolean(capability.getValue(), false);\n\t}","id":82123,"modified_method":"public boolean hasQwertyKeyboard() {\n\t\tCapability capability = _capabilities.get(\n\t\t\tWURFLConstants.HAS_QWERTY_KEYBOARD);\n\n\t\tif (capability == null) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn GetterUtil.getBoolean(capability.getValue(), false);\n\t}","commit_id":"7241b46b842e1f983f7c6f377164b10c6048ae3e","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public boolean isTablet() {\n\t\tCapability capability = _capabilities.get(WURFLConstants.IS_TABLET);\n\n\t\treturn GetterUtil.getBoolean(capability.getValue(), false);\n\t}","id":82124,"modified_method":"public boolean isTablet() {\n\t\tCapability capability = _capabilities.get(WURFLConstants.IS_TABLET);\n\n\t\tif (capability == null) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn GetterUtil.getBoolean(capability.getValue(), false);\n\t}","commit_id":"7241b46b842e1f983f7c6f377164b10c6048ae3e","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public String getPointingMethod() {\n\t\tCapability capability = _capabilities.get(\n\t\t\tWURFLConstants.POINTING_METHOD);\n\n\t\treturn capability.getValue();\n\t}","id":82125,"modified_method":"public String getPointingMethod() {\n\t\treturn getValue(WURFLConstants.POINTING_METHOD);\n\t}","commit_id":"7241b46b842e1f983f7c6f377164b10c6048ae3e","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public Dimensions getScreenSize() {\n\t\tCapability heightCapability = _capabilities.get(\n\t\t\tWURFLConstants.RESOLUTION_HEIGHT);\n\n\t\tfloat height = GetterUtil.getFloat(heightCapability.getValue());\n\n\t\tCapability widthCapability = _capabilities.get(\n\t\t\tWURFLConstants.RESOLUTION_WIDTH);\n\n\t\tfloat width = GetterUtil.getFloat(widthCapability.getValue());\n\n\t\treturn new Dimensions(height, width);\n\t}","id":82126,"modified_method":"public Dimensions getScreenSize() {\n\t\tCapability heightCapability = _capabilities.get(\n\t\t\tWURFLConstants.RESOLUTION_HEIGHT);\n\t\tCapability widthCapability = _capabilities.get(\n\t\t\tWURFLConstants.RESOLUTION_WIDTH);\n\n\t\tif ((heightCapability == null) || (widthCapability == null)) {\n\t\t\treturn Dimensions.UNKNOWN;\n\t\t}\n\n\t\tfloat height = GetterUtil.getFloat(heightCapability.getValue());\n\t\tfloat width = GetterUtil.getFloat(widthCapability.getValue());\n\n\t\treturn new Dimensions(height, width);\n\t}","commit_id":"7241b46b842e1f983f7c6f377164b10c6048ae3e","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"/**\n     * Import attached application XAR into current wiki and do all actions needed to installation\n     * an application. See {@link #reloadApplication(XWikiApplication, String, XWikiContext)} for\n     * more.\n     * \n     * @param packageDoc the document where package to import is attached.\n     * @param packageName the name of the attached XAR file to import.\n     * @param comment a comment used update XWiki.XWikiPreferences.\n     * @param context the XWiki context.\n     * @throws XWikiException error when :\n     *             <ul>\n     *             <li>getting attached package file.<\/li>\n     *             <li>or load package in memory.<\/li>\n     *             <li>or installing loaded document in database<\/li>\n     *             <li>or apply application initialization for each application descriptor\n     *             document.<\/li>\n     *             <\/ul>\n     */\n    public void importApplication(XWikiDocument packageDoc, String packageName, String comment,\n        XWikiContext context) throws XWikiException\n    {\n        XWikiAttachment packFile = packageDoc.getAttachment(packageName);\n\n        if (packFile == null) {\n            throw new ApplicationManagerException(XWikiException.ERROR_XWIKI_UNKNOWN, \"Package \"\n                + packageName + \" does not exists.\");\n        }\n\n        // Import\n        PackageAPI importer =\n            ((PackageAPI) context.getWiki().getPluginApi(PACKAGEPLUGIN_NAME, context));\n\n        try {\n            importer.Import(packFile.getContent(context));\n        } catch (IOException e) {\n            throw new ApplicationManagerException(XWikiException.ERROR_XWIKI_UNKNOWN,\n                \"Fail to import package \" + packageName,\n                e);\n        }\n\n        if (importer.install() == DocumentInfo.INSTALL_IMPOSSIBLE) {\n            throw new ApplicationManagerException(XWikiException.ERROR_XWIKI_UNKNOWN,\n                \"Fail to install package \" + packageName);\n        }\n\n        // Apply applications installation\n        for (Iterator it = importer.getFiles().iterator(); it.hasNext();) {\n            DocumentInfoAPI docinfo = (DocumentInfoAPI) it.next();\n            XWikiDocument doc = docinfo.getDocInfo().getDoc();\n\n            if (XWikiApplicationClass.getInstance(context).isInstance(doc)) {\n                reloadApplication((XWikiApplication) XWikiApplicationClass.getInstance(context)\n                    .newXObjectDocument(doc, 0, context), comment, context);\n            }\n        }\n    }","id":82127,"modified_method":"/**\n     * Import attached application XAR into current wiki and do all actions needed to installation\n     * an application. See {@link #reloadApplication(XWikiApplication, String, XWikiContext)} for\n     * more.\n     * \n     * @param packageDoc the document where package to import is attached.\n     * @param packageName the name of the attached XAR file to import.\n     * @param comment a comment used update XWiki.XWikiPreferences.\n     * @param context the XWiki context.\n     * @throws XWikiException error when :\n     *             <ul>\n     *             <li>getting attached package file.<\/li>\n     *             <li>or load package in memory.<\/li>\n     *             <li>or installing loaded document in database<\/li>\n     *             <li>or apply application initialization for each application descriptor\n     *             document.<\/li>\n     *             <\/ul>\n     */\n    public void importApplication(XWikiDocument packageDoc, String packageName, String comment,\n        XWikiContext context) throws XWikiException\n    {\n        XWikiAttachment packFile = packageDoc.getAttachment(packageName);\n\n        if (packFile == null) {\n            throw new ApplicationManagerException(XWikiException.ERROR_XWIKI_UNKNOWN,\n                getMessageTool(context).get(\n                    ApplicationManagerMessageTool.ERROR_IMORT_PKGDOESNOTEXISTS, packageName));\n        }\n\n        // Import\n        PackageAPI importer =\n            ((PackageAPI) context.getWiki().getPluginApi(PACKAGEPLUGIN_NAME, context));\n\n        try {\n            importer.Import(packFile.getContent(context));\n        } catch (IOException e) {\n            throw new ApplicationManagerException(XWikiException.ERROR_XWIKI_UNKNOWN,\n                getMessageTool(context).get(ApplicationManagerMessageTool.ERROR_IMORT_IMPORT,\n                    packageName), e);\n        }\n\n        if (importer.install() == DocumentInfo.INSTALL_IMPOSSIBLE) {\n            throw new ApplicationManagerException(XWikiException.ERROR_XWIKI_UNKNOWN,\n                getMessageTool(context).get(ApplicationManagerMessageTool.ERROR_IMORT_INSTALL,\n                    packageName));\n        }\n\n        // Apply applications installation\n        for (Iterator it = importer.getFiles().iterator(); it.hasNext();) {\n            DocumentInfoAPI docinfo = (DocumentInfoAPI) it.next();\n            XWikiDocument doc = docinfo.getDocInfo().getDoc();\n\n            if (XWikiApplicationClass.getInstance(context).isInstance(doc)) {\n                reloadApplication((XWikiApplication) XWikiApplicationClass.getInstance(context)\n                    .newXObjectDocument(doc, 0, context), comment, context);\n            }\n        }\n    }","commit_id":"75858d07dc0752b526050db876d3e83eb055e5b5","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Create a new application descriptor base on provided application descriptor.\n     * \n     * @param userAppSuperDoc appXObjectDocument the user application descriptor from which new\n     *            descriptor will be created.\n     * @param failOnExist if true fail if the application descriptor to create already exists.\n     * @param comment a comment used when saving application descriptor document.\n     * @param context the XWiki Context.\n     * @throws XWikiException error when calling for {@link XWiki#getDocument(String, XWikiContext)}\n     */\n    public void createApplication(XWikiApplication userAppSuperDoc, boolean failOnExist,\n        String comment, XWikiContext context) throws XWikiException\n    {\n        XWiki xwiki = context.getWiki();\n        XWikiApplicationClass appClass = XWikiApplicationClass.getInstance(context);\n\n        // Verify is server page already exist\n        XWikiDocument docToSave =\n            xwiki.getDocument(appClass.getItemDocumentDefaultFullName(userAppSuperDoc\n                .getAppName(), context), context);\n\n        if (!docToSave.isNew() && appClass.isInstance(docToSave)) {\n            // If we are not allowed to continue if server page already exists\n            if (failOnExist) {\n                if (LOG.isErrorEnabled()) {\n                    LOG.error(\"Wiki creation (\" + userAppSuperDoc\n                        + \") failed: wiki server page already exists\");\n                }\n\n                throw new ApplicationManagerException(\n                    ApplicationManagerException.ERROR_AM_APPDOCALREADYEXISTS,\n                    \"Application \\\"\" + userAppSuperDoc.getAppName() + \"\\\" document already exist\");\n            } else if (LOG.isWarnEnabled()) {\n                LOG.warn(\"Application creation (\" + userAppSuperDoc\n                    + \") failed: application page already exists\");\n            }\n\n        }\n\n        XWikiApplication appSuperDocToSave =\n            (XWikiApplication) XWikiApplicationClass.getInstance(context).newXObjectDocument(\n                docToSave, 0, context);\n\n        appSuperDocToSave.mergeObject(userAppSuperDoc);\n\n        appSuperDocToSave.save(comment);\n\n        // Update user document with the new document name\n        userAppSuperDoc.setFullName(appSuperDocToSave.getFullName());\n    }","id":82128,"modified_method":"/**\n     * Create a new application descriptor base on provided application descriptor.\n     * \n     * @param userAppSuperDoc appXObjectDocument the user application descriptor from which new\n     *            descriptor will be created.\n     * @param failOnExist if true fail if the application descriptor to create already exists.\n     * @param comment a comment used when saving application descriptor document.\n     * @param context the XWiki Context.\n     * @throws XWikiException error when calling for {@link XWiki#getDocument(String, XWikiContext)}\n     */\n    public void createApplication(XWikiApplication userAppSuperDoc, boolean failOnExist,\n        String comment, XWikiContext context) throws XWikiException\n    {\n        XWiki xwiki = context.getWiki();\n        XWikiApplicationClass appClass = XWikiApplicationClass.getInstance(context);\n\n        // Verify is server page already exist\n        XWikiDocument docToSave =\n            xwiki.getDocument(appClass.getItemDocumentDefaultFullName(userAppSuperDoc\n                .getAppName(), context), context);\n\n        if (!docToSave.isNew() && appClass.isInstance(docToSave)) {\n            // If we are not allowed to continue if server page already exists\n            if (failOnExist) {\n                if (LOG.isErrorEnabled()) {\n                    LOG.error(getMessageTool(context).get(\n                        ApplicationManagerMessageTool.ERROR_APPPAGEALREADYEXISTS,\n                        userAppSuperDoc.getAppName()));\n                }\n\n                throw new ApplicationManagerException(\n                    ApplicationManagerException.ERROR_AM_APPDOCALREADYEXISTS, getMessageTool(\n                        context).get(ApplicationManagerMessageTool.ERROR_APPPAGEALREADYEXISTS,\n                            userAppSuperDoc.getAppName()));\n            } else if (LOG.isWarnEnabled()) {\n                LOG.warn(getMessageTool(context).get(\n                    ApplicationManagerMessageTool.ERROR_APPPAGEALREADYEXISTS,\n                    userAppSuperDoc.getAppName()));\n            }\n\n        }\n\n        XWikiApplication appSuperDocToSave =\n            (XWikiApplication) XWikiApplicationClass.getInstance(context).newXObjectDocument(\n                docToSave, 0, context);\n\n        appSuperDocToSave.mergeObject(userAppSuperDoc);\n\n        appSuperDocToSave.save(comment);\n\n        // Update user document with the new document name\n        userAppSuperDoc.setFullName(appSuperDocToSave.getFullName());\n    }","commit_id":"75858d07dc0752b526050db876d3e83eb055e5b5","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * {@inheritDoc}\n     * \n     * @see com.xpn.xwiki.notify.XWikiDocChangeNotificationInterface#notify(com.xpn.xwiki.notify.XWikiNotificationRule,\n     *      com.xpn.xwiki.doc.XWikiDocument, com.xpn.xwiki.doc.XWikiDocument, int,\n     *      com.xpn.xwiki.XWikiContext)\n     */\n    public void notify(XWikiNotificationRule rule, XWikiDocument newdoc, XWikiDocument olddoc,\n        int event, XWikiContext context)\n    {\n        try {\n            if (newdoc != null && XWikiApplicationClass.getInstance(context).isInstance(newdoc)) {\n\n                List appList =\n                    XWikiApplicationClass.getInstance(context).newXObjectDocumentList(newdoc,\n                        context);\n                updateApplicationsTranslation(appList,\n                    \"Auto update translations informations from applications in \"\n                        + newdoc.getFullName(), context);\n            }\n        } catch (XWikiException e) {\n            LOG.error(\"Error when updating translations informations from applications in \"\n                + newdoc.getFullName(), e);\n        }\n    }","id":82129,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see com.xpn.xwiki.notify.XWikiDocChangeNotificationInterface#notify(com.xpn.xwiki.notify.XWikiNotificationRule,\n     *      com.xpn.xwiki.doc.XWikiDocument, com.xpn.xwiki.doc.XWikiDocument, int,\n     *      com.xpn.xwiki.XWikiContext)\n     */\n    public void notify(XWikiNotificationRule rule, XWikiDocument newdoc, XWikiDocument olddoc,\n        int event, XWikiContext context)\n    {\n        try {\n            if (newdoc != null && XWikiApplicationClass.getInstance(context).isInstance(newdoc)) {\n\n                List appList =\n                    XWikiApplicationClass.getInstance(context).newXObjectDocumentList(newdoc,\n                        context);\n                updateApplicationsTranslation(appList, getMessageTool(context).get(\n                    ApplicationManagerMessageTool.COMMENT_AUTOUPDATETRANSLATIONS,\n                    newdoc.getFullName()), context);\n            }\n        } catch (XWikiException e) {\n            LOG.error(getMessageTool(context).get(\n                ApplicationManagerMessageTool.LOG_AUTOUPDATETRANSLATIONS, newdoc.getFullName()),\n                e);\n        }\n    }","commit_id":"75858d07dc0752b526050db876d3e83eb055e5b5","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * {@inheritDoc}\n     * \n     * @see com.xpn.xwiki.plugin.XWikiDefaultPlugin#init(com.xpn.xwiki.XWikiContext)\n     */\n    public void init(XWikiContext context)\n    {\n        if (docChangeRule == null) {\n            docChangeRule = new DocChangeRule(ApplicationManager.getInstance());\n        }\n\n        context.getWiki().getNotificationManager().addGeneralRule(docChangeRule);\n\n        String database = context.getDatabase();\n        try {\n            XWikiURLFactory urlf =\n                context.getWiki().getURLFactoryService().createURLFactory(context.getMode(),\n                    context);\n            context.setURLFactory(urlf);\n            context.setDatabase(context.getMainXWiki());\n            ApplicationManager.getInstance().updateAllApplicationTranslation(\n                \"Referesh applications translations informations\", context);\n        } catch (XWikiException e) {\n            LOG.error(\"Error when updating all applications translations informations\", e);\n        } finally {\n            context.setDatabase(database);\n        }\n    }","id":82130,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see com.xpn.xwiki.plugin.XWikiDefaultPlugin#init(com.xpn.xwiki.XWikiContext)\n     */\n    public void init(XWikiContext context)\n    {\n        if (docChangeRule == null) {\n            docChangeRule = new DocChangeRule(ApplicationManager.getInstance());\n        }\n\n        context.getWiki().getNotificationManager().addGeneralRule(docChangeRule);\n\n        String database = context.getDatabase();\n        try {\n            XWikiURLFactory urlf =\n                context.getWiki().getURLFactoryService().createURLFactory(context.getMode(),\n                    context);\n            context.setURLFactory(urlf);\n            context.setDatabase(context.getMainXWiki());\n            ApplicationManager.getInstance().updateAllApplicationTranslation(\n                ApplicationManagerMessageTool.getDefault(context).get(\n                    ApplicationManagerMessageTool.COMMENT_REFRESHALLTRANSLATIONS), context);\n        } catch (XWikiException e) {\n            LOG.error(ApplicationManagerMessageTool.getDefault(context).get(\n                ApplicationManagerMessageTool.LOG_REFRESHALLTRANSLATIONS), e);\n        } finally {\n            context.setDatabase(database);\n        }\n    }","commit_id":"75858d07dc0752b526050db876d3e83eb055e5b5","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Reload all xwiki applications. It means : - update XWikiPreferences with each application\n     * translation documents\n     * \n     * @return error code.\n     *         <ul>\n     *         <li> {@link XWikiExceptionApi#ERROR_NOERROR} : action finished with no error.\n     *         <li> {@link XWikiException#ERROR_XWIKI_ACCESS_DENIED} : context's user don't have\n     *         rights to do this action.\n     *         <\/ul>\n     * @throws XWikiException all error that does not caused by user of this method.\n     */\n    public int reloadAllApplications() throws XWikiException\n    {\n        if (!hasAdminRights()) {\n            return XWikiException.ERROR_XWIKI_ACCESS_DENIED;\n        }\n\n        int returncode = XWikiExceptionApi.ERROR_NOERROR;\n\n        try {\n            ApplicationManager.getInstance().reloadAllApplications(\n                this.messageTool.get(\"applicationmanager.plugin.reloadallapplications.comment\"),\n                context);\n        } catch (ApplicationManagerException e) {\n            LOG.error(\"Try to reload all applications\", e);\n\n            context.put(CONTEXT_LASTERRORCODE, new Integer(e.getCode()));\n            context.put(CONTEXT_LASTEXCEPTION, new XWikiExceptionApi(e, context));\n\n            returncode = e.getCode();\n        }\n\n        return returncode;\n    }","id":82131,"modified_method":"/**\n     * Reload all xwiki applications. It means : - update XWikiPreferences with each application\n     * translation documents\n     * \n     * @return error code.\n     *         <ul>\n     *         <li> {@link XWikiExceptionApi#ERROR_NOERROR} : action finished with no error.\n     *         <li> {@link XWikiException#ERROR_XWIKI_ACCESS_DENIED} : context's user don't have\n     *         rights to do this action.\n     *         <\/ul>\n     * @throws XWikiException all error that does not caused by user of this method.\n     */\n    public int reloadAllApplications() throws XWikiException\n    {\n        if (!hasAdminRights()) {\n            return XWikiException.ERROR_XWIKI_ACCESS_DENIED;\n        }\n\n        int returncode = XWikiExceptionApi.ERROR_NOERROR;\n\n        try {\n            ApplicationManager.getInstance()\n                .reloadAllApplications(\n                    this.messageTool\n                        .get(ApplicationManagerMessageTool.COMMENT_RELOADALLAPPLICATIONS),\n                    context);\n        } catch (ApplicationManagerException e) {\n            LOG.error(this.messageTool.get(ApplicationManagerMessageTool.LOG_REALOADALLAPPS), e);\n\n            context.put(CONTEXT_LASTERRORCODE, new Integer(e.getCode()));\n            context.put(CONTEXT_LASTEXCEPTION, new XWikiExceptionApi(e, context));\n\n            returncode = e.getCode();\n        }\n\n        return returncode;\n    }","commit_id":"75858d07dc0752b526050db876d3e83eb055e5b5","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Get the application descriptor document of the provided application name.\n     * \n     * @param appName the name of the application.\n     * @return the application descriptor document. If there is error, it add error code in context\n     *         {@link #CONTEXT_LASTERRORCODE} field and exception in context's\n     *         {@link #CONTEXT_LASTEXCEPTION} field. Error codes can be :\n     *         <ul>\n     *         <li> {@link ApplicationManagerException#ERROR_AM_DOESNOTEXIST} : provided application\n     *         does not exist.\n     *         <\/ul>\n     * @throws XWikiException all error that does not caused by user of this method.\n     */\n    public XWikiApplication getApplicationDocument(String appName) throws XWikiException\n    {\n        XWikiApplication app = null;\n\n        try {\n            app = ApplicationManager.getInstance().getApplication(appName, context, true);\n        } catch (ApplicationManagerException e) {\n            LOG.error(\"Try to get application document from application name\", e);\n\n            context.put(CONTEXT_LASTERRORCODE, new Integer(e.getCode()));\n            context.put(CONTEXT_LASTEXCEPTION, new XWikiExceptionApi(e, context));\n        }\n\n        return app;\n    }","id":82132,"modified_method":"/**\n     * Get the application descriptor document of the provided application name.\n     * \n     * @param appName the name of the application.\n     * @return the application descriptor document. If there is error, it add error code in context\n     *         {@link #CONTEXT_LASTERRORCODE} field and exception in context's\n     *         {@link #CONTEXT_LASTEXCEPTION} field. Error codes can be :\n     *         <ul>\n     *         <li> {@link ApplicationManagerException#ERROR_AM_DOESNOTEXIST} : provided application\n     *         does not exist.\n     *         <\/ul>\n     * @throws XWikiException all error that does not caused by user of this method.\n     */\n    public XWikiApplication getApplicationDocument(String appName) throws XWikiException\n    {\n        XWikiApplication app = null;\n\n        try {\n            app = ApplicationManager.getInstance().getApplication(appName, context, true);\n        } catch (ApplicationManagerException e) {\n            LOG.error(this.messageTool.get(ApplicationManagerMessageTool.LOG_GETAPP, appName), e);\n\n            context.put(CONTEXT_LASTERRORCODE, new Integer(e.getCode()));\n            context.put(CONTEXT_LASTEXCEPTION, new XWikiExceptionApi(e, context));\n        }\n\n        return app;\n    }","commit_id":"75858d07dc0752b526050db876d3e83eb055e5b5","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Create an instance of the Application Manager plugin user api.\n     * \n     * @param plugin the entry point of the Application Manager plugin.\n     * @param context the XWiki context.\n     */\n    public ApplicationManagerPluginApi(ApplicationManagerPlugin plugin, XWikiContext context)\n    {\n        super(plugin, context);\n\n        // Default Exception\n        defaultException =\n            new XWikiExceptionApi(ApplicationManagerException.getDefaultException(), context);\n\n        // Message Tool\n        Locale locale = (Locale) context.get(\"locale\");\n        this.messageTool = new XWikiPluginMessageTool(locale, plugin, context);\n        context.put(ApplicationManager.MESSAGETOOL_CONTEXT_KEY, this.messageTool);\n    }","id":82133,"modified_method":"/**\n     * Create an instance of the Application Manager plugin user api.\n     * \n     * @param plugin the entry point of the Application Manager plugin.\n     * @param context the XWiki context.\n     */\n    public ApplicationManagerPluginApi(ApplicationManagerPlugin plugin, XWikiContext context)\n    {\n        super(plugin, context);\n\n        // Default Exception\n        defaultException =\n            new XWikiExceptionApi(ApplicationManagerException.getDefaultException(), context);\n\n        // Message Tool\n        Locale locale = (Locale) context.get(\"locale\");\n        this.messageTool = new ApplicationManagerMessageTool(locale, plugin, context);\n        context.put(ApplicationManagerMessageTool.MESSAGETOOL_CONTEXT_KEY, this.messageTool);\n    }","commit_id":"75858d07dc0752b526050db876d3e83eb055e5b5","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Create a new application descriptor base on provided application descriptor.\n     * \n     * @param appXObjectDocument the user application descriptor from which new descriptor will be\n     *            created.\n     * @param failOnExist if true fail if the application descriptor to create already exists.\n     * @return error code . If there is error, it add error code in context\n     *         {@link #CONTEXT_LASTERRORCODE} field and exception in context's\n     *         {@link #CONTEXT_LASTEXCEPTION} field.\n     *         <p>\n     *         Error codes can be :\n     *         <ul>\n     *         <li> {@link XWikiExceptionApi#ERROR_NOERROR} : method succeed with no error.<\/li>\n     *         <li> {@link XWikiException#ERROR_XWIKI_ACCESS_DENIED} : context's user don't have\n     *         rights to do this action.<\/li>\n     *         <li> {@link ApplicationManagerException#ERROR_AM_APPDOCALREADYEXISTS} : application\n     *         descriptor already exists.<\/li>\n     *         <\/ul>\n     * @throws XWikiException all error that does not caused by user of this method.\n     */\n    public int createApplication(XWikiApplication appXObjectDocument, boolean failOnExist)\n        throws XWikiException\n    {\n        int returncode = XWikiExceptionApi.ERROR_NOERROR;\n\n        // TODO : check rights\n\n        try {\n            ApplicationManager.getInstance().createApplication(\n                appXObjectDocument,\n                failOnExist,\n                this.messageTool.get(\"applicationmanager.plugin.createapplication.comment\",\n                    appXObjectDocument.toString()), context);\n        } catch (ApplicationManagerException e) {\n            LOG.error(MessageFormat.format(\"Try to create application [{0}]\",\n                new Object[] {appXObjectDocument}), e);\n\n            context.put(CONTEXT_LASTERRORCODE, new Integer(e.getCode()));\n            context.put(CONTEXT_LASTEXCEPTION, new XWikiExceptionApi(e, context));\n\n            returncode = e.getCode();\n        }\n\n        return returncode;\n    }","id":82134,"modified_method":"/**\n     * Create a new application descriptor base on provided application descriptor.\n     * \n     * @param appXObjectDocument the user application descriptor from which new descriptor will be\n     *            created.\n     * @param failOnExist if true fail if the application descriptor to create already exists.\n     * @return error code . If there is error, it add error code in context\n     *         {@link #CONTEXT_LASTERRORCODE} field and exception in context's\n     *         {@link #CONTEXT_LASTEXCEPTION} field.\n     *         <p>\n     *         Error codes can be :\n     *         <ul>\n     *         <li> {@link XWikiExceptionApi#ERROR_NOERROR} : method succeed with no error.<\/li>\n     *         <li> {@link XWikiException#ERROR_XWIKI_ACCESS_DENIED} : context's user don't have\n     *         rights to do this action.<\/li>\n     *         <li> {@link ApplicationManagerException#ERROR_AM_APPDOCALREADYEXISTS} : application\n     *         descriptor already exists.<\/li>\n     *         <\/ul>\n     * @throws XWikiException all error that does not caused by user of this method.\n     */\n    public int createApplication(XWikiApplication appXObjectDocument, boolean failOnExist)\n        throws XWikiException\n    {\n        int returncode = XWikiExceptionApi.ERROR_NOERROR;\n\n        // TODO : check rights\n\n        try {\n            ApplicationManager.getInstance().createApplication(\n                appXObjectDocument,\n                failOnExist,\n                this.messageTool.get(ApplicationManagerMessageTool.COMMENT_CREATEAPPLICATION,\n                    appXObjectDocument.toString()), context);\n        } catch (ApplicationManagerException e) {\n            LOG.error(this.messageTool.get(ApplicationManagerMessageTool.LOG_CREATEAPP,\n                appXObjectDocument.toString()), e);\n\n            context.put(CONTEXT_LASTERRORCODE, new Integer(e.getCode()));\n            context.put(CONTEXT_LASTEXCEPTION, new XWikiExceptionApi(e, context));\n\n            returncode = e.getCode();\n        }\n\n        return returncode;\n    }","commit_id":"75858d07dc0752b526050db876d3e83eb055e5b5","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Export an application into XAR using Packaging plugin.\n     * \n     * @param appName the name of the application.\n     * @param recurse if true include all dependencies applications into XAR.\n     * @param withDocHistory if true export with documents history.\n     * @return error code . If there is error, it add error code in context\n     *         {@link #CONTEXT_LASTERRORCODE} field and exception in context's\n     *         {@link #CONTEXT_LASTEXCEPTION} field.\n     *         <p>\n     *         Error codes can be :\n     *         <ul>\n     *         <li> {@link XWikiExceptionApi#ERROR_NOERROR} : action finished with no error.\n     *         <li> {@link ApplicationManagerException#ERROR_AM_DOESNOTEXIST} : provided application\n     *         does not exist.\n     *         <\/ul>\n     * @throws XWikiException all error that does not caused by user of this method.\n     * @throws IOException all error that does not caused by user of this method.\n     */\n    public int exportApplicationXAR(String appName, boolean recurse, boolean withDocHistory)\n        throws XWikiException, IOException\n    {\n        int returncode = XWikiExceptionApi.ERROR_NOERROR;\n\n        try {\n            ApplicationManager.getInstance().exportApplicationXAR(appName, recurse,\n                withDocHistory, context);\n        } catch (ApplicationManagerException e) {\n            LOG.error(\"Try to export application in a XAR package\", e);\n\n            context.put(CONTEXT_LASTERRORCODE, new Integer(e.getCode()));\n            context.put(CONTEXT_LASTEXCEPTION, new XWikiExceptionApi(e, context));\n\n            returncode = e.getCode();\n        }\n\n        return returncode;\n    }","id":82135,"modified_method":"/**\n     * Export an application into XAR using Packaging plugin.\n     * \n     * @param appName the name of the application.\n     * @param recurse if true include all dependencies applications into XAR.\n     * @param withDocHistory if true export with documents history.\n     * @return error code . If there is error, it add error code in context\n     *         {@link #CONTEXT_LASTERRORCODE} field and exception in context's\n     *         {@link #CONTEXT_LASTEXCEPTION} field.\n     *         <p>\n     *         Error codes can be :\n     *         <ul>\n     *         <li> {@link XWikiExceptionApi#ERROR_NOERROR} : action finished with no error.\n     *         <li> {@link ApplicationManagerException#ERROR_AM_DOESNOTEXIST} : provided application\n     *         does not exist.\n     *         <\/ul>\n     * @throws XWikiException all error that does not caused by user of this method.\n     * @throws IOException all error that does not caused by user of this method.\n     */\n    public int exportApplicationXAR(String appName, boolean recurse, boolean withDocHistory)\n        throws XWikiException, IOException\n    {\n        int returncode = XWikiExceptionApi.ERROR_NOERROR;\n\n        try {\n            ApplicationManager.getInstance().exportApplicationXAR(appName, recurse,\n                withDocHistory, context);\n        } catch (ApplicationManagerException e) {\n            LOG.error(this.messageTool.get(ApplicationManagerMessageTool.LOG_EXPORTAPP, appName),\n                e);\n\n            context.put(CONTEXT_LASTERRORCODE, new Integer(e.getCode()));\n            context.put(CONTEXT_LASTEXCEPTION, new XWikiExceptionApi(e, context));\n\n            returncode = e.getCode();\n        }\n\n        return returncode;\n    }","commit_id":"75858d07dc0752b526050db876d3e83eb055e5b5","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Get the current wiki root application.\n     * \n     * @return the root application descriptor document. If can't find root application return null.\n     * @throws XWikiException all error that does not caused by user of this method.\n     */\n    public XWikiApplication getRootApplication() throws XWikiException\n    {\n        XWikiApplication app = null;\n\n        try {\n            app = ApplicationManager.getInstance().getRootApplication(context);\n        } catch (ApplicationManagerException e) {\n            LOG.error(\"Try to get root application document\", e);\n\n            context.put(CONTEXT_LASTERRORCODE, new Integer(e.getCode()));\n            context.put(CONTEXT_LASTEXCEPTION, new XWikiExceptionApi(e, context));\n        }\n\n        return app;\n    }","id":82136,"modified_method":"/**\n     * Get the current wiki root application.\n     * \n     * @return the root application descriptor document. If can't find root application return null.\n     * @throws XWikiException all error that does not caused by user of this method.\n     */\n    public XWikiApplication getRootApplication() throws XWikiException\n    {\n        XWikiApplication app = null;\n\n        try {\n            app = ApplicationManager.getInstance().getRootApplication(context);\n        } catch (ApplicationManagerException e) {\n            LOG.error(this.messageTool.get(ApplicationManagerMessageTool.LOG_GETROOTAPP), e);\n\n            context.put(CONTEXT_LASTERRORCODE, new Integer(e.getCode()));\n            context.put(CONTEXT_LASTEXCEPTION, new XWikiExceptionApi(e, context));\n        }\n\n        return app;\n    }","commit_id":"75858d07dc0752b526050db876d3e83eb055e5b5","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Delete an application descriptor document.\n     * \n     * @param appName the name of the application.\n     * @return error code . If there is error, it add error code in context\n     *         {@link #CONTEXT_LASTERRORCODE} field and exception in context's\n     *         {@link #CONTEXT_LASTEXCEPTION} field.\n     *         <p>\n     *         Error codes can be :\n     *         <ul>\n     *         <li> {@link XWikiExceptionApi#ERROR_NOERROR} : action finished with no error.\n     *         <li> {@link XWikiException#ERROR_XWIKI_ACCESS_DENIED} : context's user don't have\n     *         rights to do this action.\n     *         <li> {@link ApplicationManagerException#ERROR_AM_DOESNOTEXIST} : provided application\n     *         does not exist.\n     *         <\/ul>\n     * @throws XWikiException all error that does not caused by user of this method.\n     */\n    public int deleteApplication(String appName) throws XWikiException\n    {\n        int returncode = XWikiExceptionApi.ERROR_NOERROR;\n\n        // TODO : check rights\n\n        try {\n            ApplicationManager.getInstance().deleteApplication(appName, context);\n        } catch (ApplicationManagerException e) {\n            LOG.error(MessageFormat.format(\"Try to delete application [{0}]\",\n                new Object[] {appName}), e);\n\n            context.put(CONTEXT_LASTERRORCODE, new Integer(e.getCode()));\n            context.put(CONTEXT_LASTEXCEPTION, new XWikiExceptionApi(e, context));\n\n            returncode = e.getCode();\n        }\n\n        return returncode;\n    }","id":82137,"modified_method":"/**\n     * Delete an application descriptor document.\n     * \n     * @param appName the name of the application.\n     * @return error code . If there is error, it add error code in context\n     *         {@link #CONTEXT_LASTERRORCODE} field and exception in context's\n     *         {@link #CONTEXT_LASTEXCEPTION} field.\n     *         <p>\n     *         Error codes can be :\n     *         <ul>\n     *         <li> {@link XWikiExceptionApi#ERROR_NOERROR} : action finished with no error.\n     *         <li> {@link XWikiException#ERROR_XWIKI_ACCESS_DENIED} : context's user don't have\n     *         rights to do this action.\n     *         <li> {@link ApplicationManagerException#ERROR_AM_DOESNOTEXIST} : provided application\n     *         does not exist.\n     *         <\/ul>\n     * @throws XWikiException all error that does not caused by user of this method.\n     */\n    public int deleteApplication(String appName) throws XWikiException\n    {\n        int returncode = XWikiExceptionApi.ERROR_NOERROR;\n\n        // TODO : check rights\n\n        try {\n            ApplicationManager.getInstance().deleteApplication(appName, context);\n        } catch (ApplicationManagerException e) {\n            LOG.error(this.messageTool.get(ApplicationManagerMessageTool.LOG_DELETEAPP, appName),\n                e);\n\n            context.put(CONTEXT_LASTERRORCODE, new Integer(e.getCode()));\n            context.put(CONTEXT_LASTEXCEPTION, new XWikiExceptionApi(e, context));\n\n            returncode = e.getCode();\n        }\n\n        return returncode;\n    }","commit_id":"75858d07dc0752b526050db876d3e83eb055e5b5","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Reload xwiki application. It means :\n     * <ul>\n     * <li> update XWikiPreferences with application translation documents.\n     * <\/ul>\n     * \n     * @param appName the name of the application to reload.\n     * @return error code . If there is error, it add error code in context\n     *         {@link #CONTEXT_LASTERRORCODE} field and exception in context's\n     *         {@link #CONTEXT_LASTEXCEPTION} field.\n     *         <p>\n     *         Error codes can be :\n     *         <ul>\n     *         <li> {@link XWikiExceptionApi#ERROR_NOERROR} : action finished with no error.\n     *         <li> {@link XWikiException#ERROR_XWIKI_ACCESS_DENIED} : context's user don't have\n     *         rights to do this action.\n     *         <li> {@link ApplicationManagerException#ERROR_AM_DOESNOTEXIST} : provided application\n     *         does not exist.\n     *         <\/ul>\n     * @throws XWikiException all error that does not caused by user of this method.\n     */\n    public int reloadApplication(String appName) throws XWikiException\n    {\n        if (!hasAdminRights()) {\n            return XWikiException.ERROR_XWIKI_ACCESS_DENIED;\n        }\n\n        int returncode = XWikiExceptionApi.ERROR_NOERROR;\n\n        try {\n            XWikiApplication app =\n                ApplicationManager.getInstance().getApplication(appName, context, true);\n            ApplicationManager.getInstance().reloadApplication(\n                app,\n                this.messageTool.get(\"applicationmanager.plugin.reloadapplication.comment\", app\n                    .getAppName()), context);\n        } catch (ApplicationManagerException e) {\n            LOG.error(\"Try to reload application\", e);\n\n            context.put(CONTEXT_LASTERRORCODE, new Integer(e.getCode()));\n            context.put(CONTEXT_LASTEXCEPTION, new XWikiExceptionApi(e, context));\n\n            returncode = e.getCode();\n        }\n\n        return returncode;\n    }","id":82138,"modified_method":"/**\n     * Reload xwiki application. It means :\n     * <ul>\n     * <li> update XWikiPreferences with application translation documents.\n     * <\/ul>\n     * \n     * @param appName the name of the application to reload.\n     * @return error code . If there is error, it add error code in context\n     *         {@link #CONTEXT_LASTERRORCODE} field and exception in context's\n     *         {@link #CONTEXT_LASTEXCEPTION} field.\n     *         <p>\n     *         Error codes can be :\n     *         <ul>\n     *         <li> {@link XWikiExceptionApi#ERROR_NOERROR} : action finished with no error.\n     *         <li> {@link XWikiException#ERROR_XWIKI_ACCESS_DENIED} : context's user don't have\n     *         rights to do this action.\n     *         <li> {@link ApplicationManagerException#ERROR_AM_DOESNOTEXIST} : provided application\n     *         does not exist.\n     *         <\/ul>\n     * @throws XWikiException all error that does not caused by user of this method.\n     */\n    public int reloadApplication(String appName) throws XWikiException\n    {\n        if (!hasAdminRights()) {\n            return XWikiException.ERROR_XWIKI_ACCESS_DENIED;\n        }\n\n        int returncode = XWikiExceptionApi.ERROR_NOERROR;\n\n        try {\n            XWikiApplication app =\n                ApplicationManager.getInstance().getApplication(appName, context, true);\n            ApplicationManager.getInstance().reloadApplication(\n                app,\n                this.messageTool.get(ApplicationManagerMessageTool.COMMENT_RELOADAPPLICATION, app\n                    .getAppName()), context);\n        } catch (ApplicationManagerException e) {\n            LOG.error(this.messageTool.get(ApplicationManagerMessageTool.LOG_RELOADAPP, appName),\n                e);\n\n            context.put(CONTEXT_LASTERRORCODE, new Integer(e.getCode()));\n            context.put(CONTEXT_LASTEXCEPTION, new XWikiExceptionApi(e, context));\n\n            returncode = e.getCode();\n        }\n\n        return returncode;\n    }","commit_id":"75858d07dc0752b526050db876d3e83eb055e5b5","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Import attached application XAR into current wiki and do all actions needed to installation\n     * an application. See {@link #reloadApplication(String)} for more.\n     * \n     * @param packageName the name of the attached XAR file to import.\n     * @return error code . If there is error, it add error code in context\n     *         {@link #CONTEXT_LASTERRORCODE} field and exception in context's\n     *         {@link #CONTEXT_LASTEXCEPTION} field.\n     *         <p>\n     *         Error codes can be :\n     *         <ul>\n     *         <li> {@link XWikiExceptionApi#ERROR_NOERROR} : action finished with no error.\n     *         <li> {@link XWikiException#ERROR_XWIKI_ACCESS_DENIED} : context's user don't have\n     *         rights to do this action.\n     *         <li> {@link ApplicationManagerException#ERROR_AM_DOESNOTEXIST} : provided application\n     *         does not exist.\n     *         <\/ul>\n     * @throws XWikiException all error that does not caused by user of this method.\n     */\n    public int importApplication(String packageName) throws XWikiException\n    {\n        if (!hasAdminRights()) {\n            return XWikiException.ERROR_XWIKI_ACCESS_DENIED;\n        }\n\n        int returncode = XWikiExceptionApi.ERROR_NOERROR;\n\n        try {\n            ApplicationManager.getInstance().importApplication(\n                context.getDoc(),\n                packageName,\n                this.messageTool.get(\"applicationmanager.plugin.importapplication.comment\",\n                    packageName), context);\n        } catch (ApplicationManagerException e) {\n            LOG.error(\"Try to import applications from XAR package\", e);\n\n            context.put(CONTEXT_LASTERRORCODE, new Integer(e.getCode()));\n            context.put(CONTEXT_LASTEXCEPTION, new XWikiExceptionApi(e, context));\n\n            returncode = e.getCode();\n        }\n\n        return returncode;\n    }","id":82139,"modified_method":"/**\n     * Import attached application XAR into current wiki and do all actions needed to installation\n     * an application. See {@link #reloadApplication(String)} for more.\n     * \n     * @param packageName the name of the attached XAR file to import.\n     * @return error code . If there is error, it add error code in context\n     *         {@link #CONTEXT_LASTERRORCODE} field and exception in context's\n     *         {@link #CONTEXT_LASTEXCEPTION} field.\n     *         <p>\n     *         Error codes can be :\n     *         <ul>\n     *         <li> {@link XWikiExceptionApi#ERROR_NOERROR} : action finished with no error.\n     *         <li> {@link XWikiException#ERROR_XWIKI_ACCESS_DENIED} : context's user don't have\n     *         rights to do this action.\n     *         <li> {@link ApplicationManagerException#ERROR_AM_DOESNOTEXIST} : provided application\n     *         does not exist.\n     *         <\/ul>\n     * @throws XWikiException all error that does not caused by user of this method.\n     */\n    public int importApplication(String packageName) throws XWikiException\n    {\n        if (!hasAdminRights()) {\n            return XWikiException.ERROR_XWIKI_ACCESS_DENIED;\n        }\n\n        int returncode = XWikiExceptionApi.ERROR_NOERROR;\n\n        try {\n            ApplicationManager.getInstance().importApplication(\n                context.getDoc(),\n                packageName,\n                this.messageTool.get(ApplicationManagerMessageTool.COMMENT_IMPORTAPPLICATION,\n                    packageName), context);\n        } catch (ApplicationManagerException e) {\n            LOG.error(this.messageTool.get(ApplicationManagerMessageTool.LOG_IMPORTAPP,\n                packageName), e);\n\n            context.put(CONTEXT_LASTERRORCODE, new Integer(e.getCode()));\n            context.put(CONTEXT_LASTEXCEPTION, new XWikiExceptionApi(e, context));\n\n            returncode = e.getCode();\n        }\n\n        return returncode;\n    }","commit_id":"75858d07dc0752b526050db876d3e83eb055e5b5","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Get all applications descriptors documents.\n     * \n     * @return a list of XWikiApplication.\n     * @throws XWikiException all error that does not caused by user of this method.\n     */\n    public List getApplicationDocumentList() throws XWikiException\n    {\n        List listDocument = Collections.EMPTY_LIST;\n\n        try {\n            listDocument = ApplicationManager.getInstance().getApplicationList(this.context);\n        } catch (ApplicationManagerException e) {\n            LOG.error(\"Try to get all applications documents\", e);\n\n            context.put(CONTEXT_LASTERRORCODE, new Integer(e.getCode()));\n            context.put(CONTEXT_LASTEXCEPTION, new XWikiExceptionApi(e, context));\n        }\n\n        return listDocument;\n    }","id":82140,"modified_method":"/**\n     * Get all applications descriptors documents.\n     * \n     * @return a list of XWikiApplication.\n     * @throws XWikiException all error that does not caused by user of this method.\n     */\n    public List getApplicationDocumentList() throws XWikiException\n    {\n        List listDocument = Collections.EMPTY_LIST;\n\n        try {\n            listDocument = ApplicationManager.getInstance().getApplicationList(this.context);\n        } catch (ApplicationManagerException e) {\n            LOG.error(this.messageTool.get(ApplicationManagerMessageTool.LOG_GETALLAPPS), e);\n\n            context.put(CONTEXT_LASTERRORCODE, new Integer(e.getCode()));\n            context.put(CONTEXT_LASTEXCEPTION, new XWikiExceptionApi(e, context));\n        }\n\n        return listDocument;\n    }","commit_id":"75858d07dc0752b526050db876d3e83eb055e5b5","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\r\n     * Get the XWiki document descriptor of containing XAppClasses.XWikiApplication XWiki object\r\n     * with \"appname\" field equals to <code>appName<\/code>.\r\n     * \r\n     * @param appName the name of the application.\r\n     * @param context the XWiki context.\r\n     * @param validate indicate if it return new {@link XWikiDocument} or throw exception if\r\n     *            application descriptor does not exist.\r\n     * @return the {@link XWikiDocument} representing application descriptor.\r\n     * @throws XWikiException error when searching for application descriptor document.\r\n     * @see #getApplication(String, XWikiContext, boolean)\r\n     */\r\n    protected XWikiDocument getApplicationDocument(String appName, XWikiContext context,\r\n        boolean validate) throws XWikiException\r\n    {\r\n        XWiki xwiki = context.getWiki();\r\n\r\n        String[][] fieldDescriptors =\r\n            new String[][] {{FIELD_APPNAME, StringProperty.class.getSimpleName(), appName}};\r\n        List parameterValues = new ArrayList();\r\n        String where = createWhereClause(fieldDescriptors, parameterValues);\r\n\r\n        List listApp =\r\n            context.getWiki().getStore().searchDocuments(where, parameterValues, context);\r\n\r\n        if (listApp.isEmpty()) {\r\n            if (validate) {\r\n                throw new ApplicationManagerException(\r\n                    ApplicationManagerException.ERROR_AM_DOESNOTEXIST,\r\n                    appName + \" application does not exist\");\r\n            } else {\r\n                return xwiki.getDocument(getItemDocumentDefaultFullName(appName, context),\r\n                    context);\r\n            }\r\n        }\r\n\r\n        return (XWikiDocument) listApp.get(0);\r\n    }","id":82141,"modified_method":"/**\r\n     * Get the XWiki document descriptor of containing XAppClasses.XWikiApplication XWiki object\r\n     * with \"appname\" field equals to <code>appName<\/code>.\r\n     * \r\n     * @param appName the name of the application.\r\n     * @param context the XWiki context.\r\n     * @param validate indicate if it return new {@link XWikiDocument} or throw exception if\r\n     *            application descriptor does not exist.\r\n     * @return the {@link XWikiDocument} representing application descriptor.\r\n     * @throws XWikiException error when searching for application descriptor document.\r\n     * @see #getApplication(String, XWikiContext, boolean)\r\n     */\r\n    protected XWikiDocument getApplicationDocument(String appName, XWikiContext context,\r\n        boolean validate) throws XWikiException\r\n    {\r\n        XWiki xwiki = context.getWiki();\r\n\r\n        String[][] fieldDescriptors =\r\n            new String[][] {{FIELD_APPNAME, StringProperty.class.getSimpleName(), appName}};\r\n        List parameterValues = new ArrayList();\r\n        String where = createWhereClause(fieldDescriptors, parameterValues);\r\n\r\n        List listApp =\r\n            context.getWiki().getStore().searchDocuments(where, parameterValues, context);\r\n\r\n        if (listApp.isEmpty()) {\r\n            if (validate) {\r\n                throw new ApplicationManagerException(\r\n                    ApplicationManagerException.ERROR_AM_DOESNOTEXIST,\r\n                    ApplicationManagerMessageTool.getDefault(context).get(\r\n                        ApplicationManagerMessageTool.ERROR_APPDOESNOTEXISTS, appName));\r\n            } else {\r\n                return xwiki.getDocument(getItemDocumentDefaultFullName(appName, context),\r\n                    context);\r\n            }\r\n        }\r\n\r\n        return (XWikiDocument) listApp.get(0);\r\n    }","commit_id":"75858d07dc0752b526050db876d3e83eb055e5b5","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"protected abstract boolean validate(T input);","id":82142,"modified_method":"protected boolean validate(T input) \n   {\n      return true;\n   }","commit_id":"229d1b60c03a3f8375451c68a6911660a3993777","url":"https://github.com/rstudio/rstudio"},{"original_method":"protected void validateAndGo(T input, Command executeOnSuccess)\n   {\n      if (validate(input))\n         executeOnSuccess.execute();\n   }","id":82143,"modified_method":"protected void validateAndGo(T input, final Command executeOnSuccess)\n   {\n      validateAsync(input, new OperationWithInput<Boolean>()\n      {\n         @Override\n         public void execute(Boolean valid)\n         {\n            if (valid)\n            {\n               executeOnSuccess.execute();\n            }\n         }\n      });\n   }","commit_id":"229d1b60c03a3f8375451c68a6911660a3993777","url":"https://github.com/rstudio/rstudio"},{"original_method":"@Override\n   protected boolean validate(RSConnectPublishResult input)\n   {\n      return contents_.isResultValid();\n   }","id":82144,"modified_method":"@Override\n   protected void validateAsync(RSConnectPublishResult input,\n         OperationWithInput<Boolean> onValidated)\n   {\n      contents_.validateResult(onValidated);\n   }","commit_id":"229d1b60c03a3f8375451c68a6911660a3993777","url":"https://github.com/rstudio/rstudio"},{"original_method":"public void fireRSConnectPublishEvent(final RSConnectPublishResult result,\n         final boolean launchBrowser)\n   {\n      // we arrive here both when publishing via dialog and via wizard, so \n      // do any last-minute shared validation\n      if (result.isUpdate())\n      {\n         // the user indicated they wanted to update an existing app\n         fireValidatedRSconnectPublish(result, launchBrowser);\n      }\n      else\n      {\n         // the user didn't indicate an update, so make sure they're not \n         // unintentionally replacing existing content\n         checkForExistingApp(result.getAccount(), \n               result.getAppName(), \n               new OperationWithInput<Boolean>()\n               {\n                  @Override\n                  public void execute(Boolean input)\n                  {\n                     if (input)\n                     {\n                        fireValidatedRSconnectPublish(result, launchBrowser);\n                     }\n                  }\n               });\n      }\n   }","id":82145,"modified_method":"public void fireRSConnectPublishEvent(RSConnectPublishResult result,\n         boolean launchBrowser)\n   {\n      if (satellite_.isCurrentWindowSatellite())\n      {\n         // in a satellite window, call back to the main window to do a \n         // deployment\n         RSConnect.deployFromSatellite(\n               result.getSource().getSourceFile(), \n               result.getSource().getDeployDir(), \n               result.getSource().getDeployFile(), \n               result.getSource().getDescription(),\n               JsArrayUtil.toJsArrayString(\n                     result.getSettings().getDeployFiles()),\n               JsArrayUtil.toJsArrayString(\n                     result.getSettings().getAdditionalFiles()),\n               JsArrayUtil.toJsArrayString(\n                     result.getSettings().getIgnoredFiles()),\n               result.getSource().isSelfContained(),\n               result.getSettings().getAsMultiple(),\n               result.getSettings().getAsStatic(),\n               launchBrowser, \n               RSConnectDeploymentRecord.create(result.getAppName(), \n                     result.getAccount(), \"\"));\n\n         // we can't raise the main window if we aren't in desktop mode, so show\n         // a dialog to guide the user there\n         if (!Desktop.isDesktop())\n         {\n            display_.showMessage(GlobalDisplay.MSG_INFO, \"Deployment Started\",\n                  \"RStudio is deploying \" + result.getAppName() + \". \" + \n                  \"Check the Deploy console tab in the main window for \" + \n                  \"status updates. \");\n         }\n      }\n      else\n      {\n         // in the main window, initiate the deployment directly\n         events_.fireEvent(new RSConnectDeployInitiatedEvent(\n               result.getSource(),\n               result.getSettings(),\n               launchBrowser,\n               RSConnectDeploymentRecord.create(result.getAppName(), \n                     result.getAccount(), \"\")));\n      }\n   }","commit_id":"229d1b60c03a3f8375451c68a6911660a3993777","url":"https://github.com/rstudio/rstudio"},{"original_method":"public RSConnectPublishResult getResult() \n   {\n      // compose the list of files that have been manually added; we want to\n      // include all the ones the user added but didn't later uncheck, so\n      // cross-reference the list we kept with the one returned by the dialog\n      ArrayList<String> deployFiles = getFileList();\n      ArrayList<String> additionalFiles = new ArrayList<String>();\n      for (String filePath: filesAddedManually_)\n      {\n         if (deployFiles.contains(filePath))\n         {\n            additionalFiles.add(filePath);\n         }\n      }\n      \n      // if we're redeploying to the same account, use the previous app name;\n      // otherwise, read the new name the user's entered\n      boolean isUpdate = fromPrevious_ != null && \n            getSelectedAccount().equals(fromPrevious_.getAccount());\n      String appName = isUpdate ?\n            fromPrevious_.getName() : getNewAppName();\n            \n      // if this was new content, set this account as the default to use for \n      // new content\n      if (fromPrevious_ == null && \n          !getSelectedAccount().equals(\n                prefs_.preferredPublishAccount().getGlobalValue()))\n      {\n         prefs_.preferredPublishAccount().setGlobalValue(getSelectedAccount());\n         prefs_.writeUIPrefs();\n      }\n            \n      return new RSConnectPublishResult(\n            appName, \n            getSelectedAccount(), \n            source_,\n            new RSConnectPublishSettings(deployFiles, \n               additionalFiles, \n               getIgnoredFileList(),\n               asMultipleRmd_,\n               asStatic_),\n            isUpdate);\n   }","id":82146,"modified_method":"public RSConnectPublishResult getResult() \n   {\n      // compose the list of files that have been manually added; we want to\n      // include all the ones the user added but didn't later uncheck, so\n      // cross-reference the list we kept with the one returned by the dialog\n      ArrayList<String> deployFiles = getFileList();\n      ArrayList<String> additionalFiles = new ArrayList<String>();\n      for (String filePath: filesAddedManually_)\n      {\n         if (deployFiles.contains(filePath))\n         {\n            additionalFiles.add(filePath);\n         }\n      }\n      \n      // if we're redeploying to the same account, use the previous app name;\n      // otherwise, read the new name the user's entered\n      String appName = isUpdate() ?\n            fromPrevious_.getName() : getNewAppName();\n            \n      // if this was new content, set this account as the default to use for \n      // new content\n      if (fromPrevious_ == null && \n          !getSelectedAccount().equals(\n                prefs_.preferredPublishAccount().getGlobalValue()))\n      {\n         prefs_.preferredPublishAccount().setGlobalValue(getSelectedAccount());\n         prefs_.writeUIPrefs();\n      }\n            \n      return new RSConnectPublishResult(\n            appName, \n            getSelectedAccount(), \n            source_,\n            new RSConnectPublishSettings(deployFiles, \n               additionalFiles, \n               getIgnoredFileList(),\n               asMultipleRmd_,\n               asStatic_),\n            isUpdate());\n   }","commit_id":"229d1b60c03a3f8375451c68a6911660a3993777","url":"https://github.com/rstudio/rstudio"},{"original_method":"public Wizard(String caption, \n                 String okCaption,\n                 I initialData,\n                 WizardPage<I, T> firstPage,\n                 final ProgressOperationWithInput<T> operation)\n   {\n      super(caption, operation);\n      initialData_ = initialData;\n      okCaption_ = okCaption;\n      firstPage_ = firstPage;\n      activePage_ = firstPage;\n      \n      resetOkButtonCaption();\n      setOkButtonVisible(false);\n      \n      addCloseHandler(new CloseHandler<PopupPanel>()\n      {\n         @Override\n         public void onClose(CloseEvent<PopupPanel> arg0)\n         {\n            cleanupPage(firstPage_);\n         }\n      });\n\n      // add next button\n      nextButton_ = new ThemedButton(\"Next\", new ClickHandler()\n      {\n         @Override\n         public void onClick(ClickEvent arg0)\n         {\n            if (activePage_ instanceof WizardIntermediatePage<?,?>) \n            {\n               final WizardIntermediatePage<I, T> page = \n                     (WizardIntermediatePage<I, T>) activePage_;\n               \n               // collect input from this page asynchronously and advance when\n               // we have input\n               page.collectIntermediateInput(getProgressIndicator(), \n                     new OperationWithInput<T>()\n                     {\n                        @Override\n                        public void execute(T input)\n                        {\n                           if (page.validate(input))\n                           {\n                              intermediateResult_ = input;\n                              page.advance();\n                           }\n                        }\n                     });\n            }\n         }\n      });\n      nextButton_.setVisible(false);\n      addActionButton(nextButton_);\n   }","id":82147,"modified_method":"public Wizard(String caption, \n                 String okCaption,\n                 I initialData,\n                 WizardPage<I, T> firstPage,\n                 final ProgressOperationWithInput<T> operation)\n   {\n      super(caption, operation);\n      initialData_ = initialData;\n      okCaption_ = okCaption;\n      firstPage_ = firstPage;\n      activePage_ = firstPage;\n      \n      resetOkButtonCaption();\n      setOkButtonVisible(false);\n      \n      addCloseHandler(new CloseHandler<PopupPanel>()\n      {\n         @Override\n         public void onClose(CloseEvent<PopupPanel> arg0)\n         {\n            cleanupPage(firstPage_);\n         }\n      });\n\n      // add next button\n      nextButton_ = new ThemedButton(\"Next\", new ClickHandler()\n      {\n         @Override\n         public void onClick(ClickEvent arg0)\n         {\n            if (activePage_ instanceof WizardIntermediatePage<?,?>) \n            {\n               final WizardIntermediatePage<I, T> page = \n                     (WizardIntermediatePage<I, T>) activePage_;\n               \n               // collect input from this page asynchronously and advance when\n               // we have input\n               page.collectIntermediateInput(getProgressIndicator(), \n                     new OperationWithInput<T>()\n                     {\n                        @Override\n                        public void execute(final T input)\n                        {\n                           page.validateAsync(input, \n                                 new OperationWithInput<Boolean>()\n                           {\n                              \n                              @Override\n                              public void execute(Boolean valid)\n                              {\n                                 if (valid)\n                                 {\n                                    intermediateResult_ = input;\n                                    page.advance();\n                                 }\n                              }\n                           });\n                        }\n                     });\n            }\n         }\n      });\n      nextButton_.setVisible(false);\n      addActionButton(nextButton_);\n   }","commit_id":"229d1b60c03a3f8375451c68a6911660a3993777","url":"https://github.com/rstudio/rstudio"},{"original_method":"abstract protected boolean validate(T input);","id":82148,"modified_method":"protected boolean validate(T input)\n   {\n      return true;\n   }","commit_id":"229d1b60c03a3f8375451c68a6911660a3993777","url":"https://github.com/rstudio/rstudio"},{"original_method":"/**\n     * {@inheritDoc}\n     * \n     * @see com.xpn.xwiki.notify.XWikiDocChangeNotificationInterface#notify(com.xpn.xwiki.notify.XWikiNotificationRule,\n     *      com.xpn.xwiki.doc.XWikiDocument, com.xpn.xwiki.doc.XWikiDocument, int,\n     *      com.xpn.xwiki.XWikiContext)\n     */\n    public void notify(XWikiNotificationRule rule, XWikiDocument newdoc, XWikiDocument olddoc,\n        int event, XWikiContext context)\n    {\n        try {\n            if (newdoc != null && XWikiApplicationClass.getInstance(context).isInstance(newdoc)) {\n\n                List appList =\n                    XWikiApplicationClass.getInstance(context).newXObjectDocumentList(newdoc,\n                        context);\n                updateApplicationsTranslation(appList,\n                    \"Auto update translations informations from applications in \"\n                        + newdoc.getFullName(), context);\n            }\n        } catch (XWikiException e) {\n            LOG.error(\"Error when updating translations informations from applications in \"\n                + newdoc.getFullName(), e);\n        }\n    }","id":82149,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see com.xpn.xwiki.notify.XWikiDocChangeNotificationInterface#notify(com.xpn.xwiki.notify.XWikiNotificationRule,\n     *      com.xpn.xwiki.doc.XWikiDocument, com.xpn.xwiki.doc.XWikiDocument, int,\n     *      com.xpn.xwiki.XWikiContext)\n     */\n    public void notify(XWikiNotificationRule rule, XWikiDocument newdoc, XWikiDocument olddoc,\n        int event, XWikiContext context)\n    {\n        try {\n            if (newdoc != null && XWikiApplicationClass.getInstance(context).isInstance(newdoc)) {\n\n                List appList =\n                    XWikiApplicationClass.getInstance(context).newXObjectDocumentList(newdoc,\n                        context);\n                updateApplicationsTranslation(appList, getMessageTool(context).get(\n                    ApplicationManagerMessageTool.COMMENT_AUTOUPDATETRANSLATIONS,\n                    newdoc.getFullName()), context);\n            }\n        } catch (XWikiException e) {\n            LOG.error(getMessageTool(context).get(\n                ApplicationManagerMessageTool.LOG_AUTOUPDATETRANSLATIONS, newdoc.getFullName()),\n                e);\n        }\n    }","commit_id":"788af33ab2a405892dab2a10c0e31601a173f0fc","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Import attached application XAR into current wiki and do all actions needed to installation\n     * an application. See {@link #reloadApplication(XWikiApplication, String, XWikiContext)} for\n     * more.\n     * \n     * @param packageDoc the document where package to import is attached.\n     * @param packageName the name of the attached XAR file to import.\n     * @param comment a comment used update XWiki.XWikiPreferences.\n     * @param context the XWiki context.\n     * @throws XWikiException error when :\n     *             <ul>\n     *             <li>getting attached package file.<\/li>\n     *             <li>or load package in memory.<\/li>\n     *             <li>or installing loaded document in database<\/li>\n     *             <li>or apply application initialization for each application descriptor\n     *             document.<\/li>\n     *             <\/ul>\n     */\n    public void importApplication(XWikiDocument packageDoc, String packageName, String comment,\n        XWikiContext context) throws XWikiException\n    {\n        XWikiAttachment packFile = packageDoc.getAttachment(packageName);\n\n        if (packFile == null) {\n            throw new ApplicationManagerException(XWikiException.ERROR_XWIKI_UNKNOWN, \"Package \"\n                + packageName + \" does not exists.\");\n        }\n\n        // Import\n        PackageAPI importer =\n            ((PackageAPI) context.getWiki().getPluginApi(PACKAGEPLUGIN_NAME, context));\n\n        try {\n            importer.Import(packFile.getContent(context));\n        } catch (IOException e) {\n            throw new ApplicationManagerException(XWikiException.ERROR_XWIKI_UNKNOWN,\n                \"Fail to import package \" + packageName,\n                e);\n        }\n\n        if (importer.install() == DocumentInfo.INSTALL_IMPOSSIBLE) {\n            throw new ApplicationManagerException(XWikiException.ERROR_XWIKI_UNKNOWN,\n                \"Fail to install package \" + packageName);\n        }\n\n        // Apply applications installation\n        for (Iterator it = importer.getFiles().iterator(); it.hasNext();) {\n            DocumentInfoAPI docinfo = (DocumentInfoAPI) it.next();\n            XWikiDocument doc = docinfo.getDocInfo().getDoc();\n\n            if (XWikiApplicationClass.getInstance(context).isInstance(doc)) {\n                reloadApplication((XWikiApplication) XWikiApplicationClass.getInstance(context)\n                    .newXObjectDocument(doc, 0, context), comment, context);\n            }\n        }\n    }","id":82150,"modified_method":"/**\n     * Import attached application XAR into current wiki and do all actions needed to installation\n     * an application. See {@link #reloadApplication(XWikiApplication, String, XWikiContext)} for\n     * more.\n     * \n     * @param packageDoc the document where package to import is attached.\n     * @param packageName the name of the attached XAR file to import.\n     * @param comment a comment used update XWiki.XWikiPreferences.\n     * @param context the XWiki context.\n     * @throws XWikiException error when :\n     *             <ul>\n     *             <li>getting attached package file.<\/li>\n     *             <li>or load package in memory.<\/li>\n     *             <li>or installing loaded document in database<\/li>\n     *             <li>or apply application initialization for each application descriptor\n     *             document.<\/li>\n     *             <\/ul>\n     */\n    public void importApplication(XWikiDocument packageDoc, String packageName, String comment,\n        XWikiContext context) throws XWikiException\n    {\n        XWikiAttachment packFile = packageDoc.getAttachment(packageName);\n\n        if (packFile == null) {\n            throw new ApplicationManagerException(XWikiException.ERROR_XWIKI_UNKNOWN,\n                getMessageTool(context).get(\n                    ApplicationManagerMessageTool.ERROR_IMORT_PKGDOESNOTEXISTS, packageName));\n        }\n\n        // Import\n        PackageAPI importer =\n            ((PackageAPI) context.getWiki().getPluginApi(PACKAGEPLUGIN_NAME, context));\n\n        try {\n            importer.Import(packFile.getContent(context));\n        } catch (IOException e) {\n            throw new ApplicationManagerException(XWikiException.ERROR_XWIKI_UNKNOWN,\n                getMessageTool(context).get(ApplicationManagerMessageTool.ERROR_IMORT_IMPORT,\n                    packageName), e);\n        }\n\n        if (importer.install() == DocumentInfo.INSTALL_IMPOSSIBLE) {\n            throw new ApplicationManagerException(XWikiException.ERROR_XWIKI_UNKNOWN,\n                getMessageTool(context).get(ApplicationManagerMessageTool.ERROR_IMORT_INSTALL,\n                    packageName));\n        }\n\n        // Apply applications installation\n        for (Iterator it = importer.getFiles().iterator(); it.hasNext();) {\n            DocumentInfoAPI docinfo = (DocumentInfoAPI) it.next();\n            XWikiDocument doc = docinfo.getDocInfo().getDoc();\n\n            if (XWikiApplicationClass.getInstance(context).isInstance(doc)) {\n                reloadApplication((XWikiApplication) XWikiApplicationClass.getInstance(context)\n                    .newXObjectDocument(doc, 0, context), comment, context);\n            }\n        }\n    }","commit_id":"788af33ab2a405892dab2a10c0e31601a173f0fc","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Create a new application descriptor base on provided application descriptor.\n     * \n     * @param userAppSuperDoc appXObjectDocument the user application descriptor from which new\n     *            descriptor will be created.\n     * @param failOnExist if true fail if the application descriptor to create already exists.\n     * @param comment a comment used when saving application descriptor document.\n     * @param context the XWiki Context.\n     * @throws XWikiException error when calling for {@link XWiki#getDocument(String, XWikiContext)}\n     */\n    public void createApplication(XWikiApplication userAppSuperDoc, boolean failOnExist,\n        String comment, XWikiContext context) throws XWikiException\n    {\n        XWiki xwiki = context.getWiki();\n        XWikiApplicationClass appClass = XWikiApplicationClass.getInstance(context);\n\n        // Verify is server page already exist\n        XWikiDocument docToSave =\n            xwiki.getDocument(appClass.getItemDocumentDefaultFullName(userAppSuperDoc\n                .getAppName(), context), context);\n\n        if (!docToSave.isNew() && appClass.isInstance(docToSave)) {\n            // If we are not allowed to continue if server page already exists\n            if (failOnExist) {\n                if (LOG.isErrorEnabled()) {\n                    LOG.error(\"Wiki creation (\" + userAppSuperDoc\n                        + \") failed: wiki server page already exists\");\n                }\n\n                throw new ApplicationManagerException(\n                    ApplicationManagerException.ERROR_AM_APPDOCALREADYEXISTS,\n                    \"Application \\\"\" + userAppSuperDoc.getAppName() + \"\\\" document already exist\");\n            } else if (LOG.isWarnEnabled()) {\n                LOG.warn(\"Application creation (\" + userAppSuperDoc\n                    + \") failed: application page already exists\");\n            }\n\n        }\n\n        XWikiApplication appSuperDocToSave =\n            (XWikiApplication) XWikiApplicationClass.getInstance(context).newXObjectDocument(\n                docToSave, 0, context);\n\n        appSuperDocToSave.mergeObject(userAppSuperDoc);\n\n        appSuperDocToSave.save(comment);\n\n        // Update user document with the new document name\n        userAppSuperDoc.setFullName(appSuperDocToSave.getFullName());\n    }","id":82151,"modified_method":"/**\n     * Create a new application descriptor base on provided application descriptor.\n     * \n     * @param userAppSuperDoc appXObjectDocument the user application descriptor from which new\n     *            descriptor will be created.\n     * @param failOnExist if true fail if the application descriptor to create already exists.\n     * @param comment a comment used when saving application descriptor document.\n     * @param context the XWiki Context.\n     * @throws XWikiException error when calling for {@link XWiki#getDocument(String, XWikiContext)}\n     */\n    public void createApplication(XWikiApplication userAppSuperDoc, boolean failOnExist,\n        String comment, XWikiContext context) throws XWikiException\n    {\n        XWiki xwiki = context.getWiki();\n        XWikiApplicationClass appClass = XWikiApplicationClass.getInstance(context);\n\n        // Verify is server page already exist\n        XWikiDocument docToSave =\n            xwiki.getDocument(appClass.getItemDocumentDefaultFullName(userAppSuperDoc\n                .getAppName(), context), context);\n\n        if (!docToSave.isNew() && appClass.isInstance(docToSave)) {\n            // If we are not allowed to continue if server page already exists\n            if (failOnExist) {\n                if (LOG.isErrorEnabled()) {\n                    LOG.error(getMessageTool(context).get(\n                        ApplicationManagerMessageTool.ERROR_APPPAGEALREADYEXISTS,\n                        userAppSuperDoc.getAppName()));\n                }\n\n                throw new ApplicationManagerException(\n                    ApplicationManagerException.ERROR_AM_APPDOCALREADYEXISTS, getMessageTool(\n                        context).get(ApplicationManagerMessageTool.ERROR_APPPAGEALREADYEXISTS,\n                            userAppSuperDoc.getAppName()));\n            } else if (LOG.isWarnEnabled()) {\n                LOG.warn(getMessageTool(context).get(\n                    ApplicationManagerMessageTool.ERROR_APPPAGEALREADYEXISTS,\n                    userAppSuperDoc.getAppName()));\n            }\n\n        }\n\n        XWikiApplication appSuperDocToSave =\n            (XWikiApplication) XWikiApplicationClass.getInstance(context).newXObjectDocument(\n                docToSave, 0, context);\n\n        appSuperDocToSave.mergeObject(userAppSuperDoc);\n\n        appSuperDocToSave.save(comment);\n\n        // Update user document with the new document name\n        userAppSuperDoc.setFullName(appSuperDocToSave.getFullName());\n    }","commit_id":"788af33ab2a405892dab2a10c0e31601a173f0fc","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * {@inheritDoc}\n     * \n     * @see com.xpn.xwiki.plugin.XWikiDefaultPlugin#init(com.xpn.xwiki.XWikiContext)\n     */\n    public void init(XWikiContext context)\n    {\n        if (docChangeRule == null) {\n            docChangeRule = new DocChangeRule(ApplicationManager.getInstance());\n        }\n\n        context.getWiki().getNotificationManager().addGeneralRule(docChangeRule);\n\n        String database = context.getDatabase();\n        try {\n            XWikiURLFactory urlf =\n                context.getWiki().getURLFactoryService().createURLFactory(context.getMode(),\n                    context);\n            context.setURLFactory(urlf);\n            context.setDatabase(context.getMainXWiki());\n            ApplicationManager.getInstance().updateAllApplicationTranslation(\n                \"Referesh applications translations informations\", context);\n        } catch (XWikiException e) {\n            LOG.error(\"Error when updating all applications translations informations\", e);\n        } finally {\n            context.setDatabase(database);\n        }\n    }","id":82152,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see com.xpn.xwiki.plugin.XWikiDefaultPlugin#init(com.xpn.xwiki.XWikiContext)\n     */\n    public void init(XWikiContext context)\n    {\n        if (docChangeRule == null) {\n            docChangeRule = new DocChangeRule(ApplicationManager.getInstance());\n        }\n\n        context.getWiki().getNotificationManager().addGeneralRule(docChangeRule);\n\n        String database = context.getDatabase();\n        try {\n            XWikiURLFactory urlf =\n                context.getWiki().getURLFactoryService().createURLFactory(context.getMode(),\n                    context);\n            context.setURLFactory(urlf);\n            context.setDatabase(context.getMainXWiki());\n            ApplicationManager.getInstance().updateAllApplicationTranslation(\n                ApplicationManagerMessageTool.getDefault(context).get(\n                    ApplicationManagerMessageTool.COMMENT_REFRESHALLTRANSLATIONS), context);\n        } catch (XWikiException e) {\n            LOG.error(ApplicationManagerMessageTool.getDefault(context).get(\n                ApplicationManagerMessageTool.LOG_REFRESHALLTRANSLATIONS), e);\n        } finally {\n            context.setDatabase(database);\n        }\n    }","commit_id":"788af33ab2a405892dab2a10c0e31601a173f0fc","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Reload xwiki application. It means :\n     * <ul>\n     * <li> update XWikiPreferences with application translation documents.\n     * <\/ul>\n     * \n     * @param appName the name of the application to reload.\n     * @return error code . If there is error, it add error code in context\n     *         {@link #CONTEXT_LASTERRORCODE} field and exception in context's\n     *         {@link #CONTEXT_LASTEXCEPTION} field.\n     *         <p>\n     *         Error codes can be :\n     *         <ul>\n     *         <li> {@link XWikiExceptionApi#ERROR_NOERROR} : action finished with no error.\n     *         <li> {@link XWikiException#ERROR_XWIKI_ACCESS_DENIED} : context's user don't have\n     *         rights to do this action.\n     *         <li> {@link ApplicationManagerException#ERROR_AM_DOESNOTEXIST} : provided application\n     *         does not exist.\n     *         <\/ul>\n     * @throws XWikiException all error that does not caused by user of this method.\n     */\n    public int reloadApplication(String appName) throws XWikiException\n    {\n        if (!hasAdminRights()) {\n            return XWikiException.ERROR_XWIKI_ACCESS_DENIED;\n        }\n\n        int returncode = XWikiExceptionApi.ERROR_NOERROR;\n\n        try {\n            XWikiApplication app =\n                ApplicationManager.getInstance().getApplication(appName, context, true);\n            ApplicationManager.getInstance().reloadApplication(\n                app,\n                this.messageTool.get(\"applicationmanager.plugin.reloadapplication.comment\", app\n                    .getAppName()), context);\n        } catch (ApplicationManagerException e) {\n            LOG.error(\"Try to reload application\", e);\n\n            context.put(CONTEXT_LASTERRORCODE, new Integer(e.getCode()));\n            context.put(CONTEXT_LASTEXCEPTION, new XWikiExceptionApi(e, context));\n\n            returncode = e.getCode();\n        }\n\n        return returncode;\n    }","id":82153,"modified_method":"/**\n     * Reload xwiki application. It means :\n     * <ul>\n     * <li> update XWikiPreferences with application translation documents.\n     * <\/ul>\n     * \n     * @param appName the name of the application to reload.\n     * @return error code . If there is error, it add error code in context\n     *         {@link #CONTEXT_LASTERRORCODE} field and exception in context's\n     *         {@link #CONTEXT_LASTEXCEPTION} field.\n     *         <p>\n     *         Error codes can be :\n     *         <ul>\n     *         <li> {@link XWikiExceptionApi#ERROR_NOERROR} : action finished with no error.\n     *         <li> {@link XWikiException#ERROR_XWIKI_ACCESS_DENIED} : context's user don't have\n     *         rights to do this action.\n     *         <li> {@link ApplicationManagerException#ERROR_AM_DOESNOTEXIST} : provided application\n     *         does not exist.\n     *         <\/ul>\n     * @throws XWikiException all error that does not caused by user of this method.\n     */\n    public int reloadApplication(String appName) throws XWikiException\n    {\n        if (!hasAdminRights()) {\n            return XWikiException.ERROR_XWIKI_ACCESS_DENIED;\n        }\n\n        int returncode = XWikiExceptionApi.ERROR_NOERROR;\n\n        try {\n            XWikiApplication app =\n                ApplicationManager.getInstance().getApplication(appName, context, true);\n            ApplicationManager.getInstance().reloadApplication(\n                app,\n                this.messageTool.get(ApplicationManagerMessageTool.COMMENT_RELOADAPPLICATION, app\n                    .getAppName()), context);\n        } catch (ApplicationManagerException e) {\n            LOG.error(this.messageTool.get(ApplicationManagerMessageTool.LOG_RELOADAPP, appName),\n                e);\n\n            context.put(CONTEXT_LASTERRORCODE, new Integer(e.getCode()));\n            context.put(CONTEXT_LASTEXCEPTION, new XWikiExceptionApi(e, context));\n\n            returncode = e.getCode();\n        }\n\n        return returncode;\n    }","commit_id":"788af33ab2a405892dab2a10c0e31601a173f0fc","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Delete an application descriptor document.\n     * \n     * @param appName the name of the application.\n     * @return error code . If there is error, it add error code in context\n     *         {@link #CONTEXT_LASTERRORCODE} field and exception in context's\n     *         {@link #CONTEXT_LASTEXCEPTION} field.\n     *         <p>\n     *         Error codes can be :\n     *         <ul>\n     *         <li> {@link XWikiExceptionApi#ERROR_NOERROR} : action finished with no error.\n     *         <li> {@link XWikiException#ERROR_XWIKI_ACCESS_DENIED} : context's user don't have\n     *         rights to do this action.\n     *         <li> {@link ApplicationManagerException#ERROR_AM_DOESNOTEXIST} : provided application\n     *         does not exist.\n     *         <\/ul>\n     * @throws XWikiException all error that does not caused by user of this method.\n     */\n    public int deleteApplication(String appName) throws XWikiException\n    {\n        int returncode = XWikiExceptionApi.ERROR_NOERROR;\n\n        // TODO : check rights\n\n        try {\n            ApplicationManager.getInstance().deleteApplication(appName, context);\n        } catch (ApplicationManagerException e) {\n            LOG.error(MessageFormat.format(\"Try to delete application [{0}]\",\n                new Object[] {appName}), e);\n\n            context.put(CONTEXT_LASTERRORCODE, new Integer(e.getCode()));\n            context.put(CONTEXT_LASTEXCEPTION, new XWikiExceptionApi(e, context));\n\n            returncode = e.getCode();\n        }\n\n        return returncode;\n    }","id":82154,"modified_method":"/**\n     * Delete an application descriptor document.\n     * \n     * @param appName the name of the application.\n     * @return error code . If there is error, it add error code in context\n     *         {@link #CONTEXT_LASTERRORCODE} field and exception in context's\n     *         {@link #CONTEXT_LASTEXCEPTION} field.\n     *         <p>\n     *         Error codes can be :\n     *         <ul>\n     *         <li> {@link XWikiExceptionApi#ERROR_NOERROR} : action finished with no error.\n     *         <li> {@link XWikiException#ERROR_XWIKI_ACCESS_DENIED} : context's user don't have\n     *         rights to do this action.\n     *         <li> {@link ApplicationManagerException#ERROR_AM_DOESNOTEXIST} : provided application\n     *         does not exist.\n     *         <\/ul>\n     * @throws XWikiException all error that does not caused by user of this method.\n     */\n    public int deleteApplication(String appName) throws XWikiException\n    {\n        int returncode = XWikiExceptionApi.ERROR_NOERROR;\n\n        // TODO : check rights\n\n        try {\n            ApplicationManager.getInstance().deleteApplication(appName, context);\n        } catch (ApplicationManagerException e) {\n            LOG.error(this.messageTool.get(ApplicationManagerMessageTool.LOG_DELETEAPP, appName),\n                e);\n\n            context.put(CONTEXT_LASTERRORCODE, new Integer(e.getCode()));\n            context.put(CONTEXT_LASTEXCEPTION, new XWikiExceptionApi(e, context));\n\n            returncode = e.getCode();\n        }\n\n        return returncode;\n    }","commit_id":"788af33ab2a405892dab2a10c0e31601a173f0fc","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Export an application into XAR using Packaging plugin.\n     * \n     * @param appName the name of the application.\n     * @param recurse if true include all dependencies applications into XAR.\n     * @param withDocHistory if true export with documents history.\n     * @return error code . If there is error, it add error code in context\n     *         {@link #CONTEXT_LASTERRORCODE} field and exception in context's\n     *         {@link #CONTEXT_LASTEXCEPTION} field.\n     *         <p>\n     *         Error codes can be :\n     *         <ul>\n     *         <li> {@link XWikiExceptionApi#ERROR_NOERROR} : action finished with no error.\n     *         <li> {@link ApplicationManagerException#ERROR_AM_DOESNOTEXIST} : provided application\n     *         does not exist.\n     *         <\/ul>\n     * @throws XWikiException all error that does not caused by user of this method.\n     * @throws IOException all error that does not caused by user of this method.\n     */\n    public int exportApplicationXAR(String appName, boolean recurse, boolean withDocHistory)\n        throws XWikiException, IOException\n    {\n        int returncode = XWikiExceptionApi.ERROR_NOERROR;\n\n        try {\n            ApplicationManager.getInstance().exportApplicationXAR(appName, recurse,\n                withDocHistory, context);\n        } catch (ApplicationManagerException e) {\n            LOG.error(\"Try to export application in a XAR package\", e);\n\n            context.put(CONTEXT_LASTERRORCODE, new Integer(e.getCode()));\n            context.put(CONTEXT_LASTEXCEPTION, new XWikiExceptionApi(e, context));\n\n            returncode = e.getCode();\n        }\n\n        return returncode;\n    }","id":82155,"modified_method":"/**\n     * Export an application into XAR using Packaging plugin.\n     * \n     * @param appName the name of the application.\n     * @param recurse if true include all dependencies applications into XAR.\n     * @param withDocHistory if true export with documents history.\n     * @return error code . If there is error, it add error code in context\n     *         {@link #CONTEXT_LASTERRORCODE} field and exception in context's\n     *         {@link #CONTEXT_LASTEXCEPTION} field.\n     *         <p>\n     *         Error codes can be :\n     *         <ul>\n     *         <li> {@link XWikiExceptionApi#ERROR_NOERROR} : action finished with no error.\n     *         <li> {@link ApplicationManagerException#ERROR_AM_DOESNOTEXIST} : provided application\n     *         does not exist.\n     *         <\/ul>\n     * @throws XWikiException all error that does not caused by user of this method.\n     * @throws IOException all error that does not caused by user of this method.\n     */\n    public int exportApplicationXAR(String appName, boolean recurse, boolean withDocHistory)\n        throws XWikiException, IOException\n    {\n        int returncode = XWikiExceptionApi.ERROR_NOERROR;\n\n        try {\n            ApplicationManager.getInstance().exportApplicationXAR(appName, recurse,\n                withDocHistory, context);\n        } catch (ApplicationManagerException e) {\n            LOG.error(this.messageTool.get(ApplicationManagerMessageTool.LOG_EXPORTAPP, appName),\n                e);\n\n            context.put(CONTEXT_LASTERRORCODE, new Integer(e.getCode()));\n            context.put(CONTEXT_LASTEXCEPTION, new XWikiExceptionApi(e, context));\n\n            returncode = e.getCode();\n        }\n\n        return returncode;\n    }","commit_id":"788af33ab2a405892dab2a10c0e31601a173f0fc","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Create a new application descriptor base on provided application descriptor.\n     * \n     * @param appXObjectDocument the user application descriptor from which new descriptor will be\n     *            created.\n     * @param failOnExist if true fail if the application descriptor to create already exists.\n     * @return error code . If there is error, it add error code in context\n     *         {@link #CONTEXT_LASTERRORCODE} field and exception in context's\n     *         {@link #CONTEXT_LASTEXCEPTION} field.\n     *         <p>\n     *         Error codes can be :\n     *         <ul>\n     *         <li> {@link XWikiExceptionApi#ERROR_NOERROR} : method succeed with no error.<\/li>\n     *         <li> {@link XWikiException#ERROR_XWIKI_ACCESS_DENIED} : context's user don't have\n     *         rights to do this action.<\/li>\n     *         <li> {@link ApplicationManagerException#ERROR_AM_APPDOCALREADYEXISTS} : application\n     *         descriptor already exists.<\/li>\n     *         <\/ul>\n     * @throws XWikiException all error that does not caused by user of this method.\n     */\n    public int createApplication(XWikiApplication appXObjectDocument, boolean failOnExist)\n        throws XWikiException\n    {\n        int returncode = XWikiExceptionApi.ERROR_NOERROR;\n\n        // TODO : check rights\n\n        try {\n            ApplicationManager.getInstance().createApplication(\n                appXObjectDocument,\n                failOnExist,\n                this.messageTool.get(\"applicationmanager.plugin.createapplication.comment\",\n                    appXObjectDocument.toString()), context);\n        } catch (ApplicationManagerException e) {\n            LOG.error(MessageFormat.format(\"Try to create application [{0}]\",\n                new Object[] {appXObjectDocument}), e);\n\n            context.put(CONTEXT_LASTERRORCODE, new Integer(e.getCode()));\n            context.put(CONTEXT_LASTEXCEPTION, new XWikiExceptionApi(e, context));\n\n            returncode = e.getCode();\n        }\n\n        return returncode;\n    }","id":82156,"modified_method":"/**\n     * Create a new application descriptor base on provided application descriptor.\n     * \n     * @param appXObjectDocument the user application descriptor from which new descriptor will be\n     *            created.\n     * @param failOnExist if true fail if the application descriptor to create already exists.\n     * @return error code . If there is error, it add error code in context\n     *         {@link #CONTEXT_LASTERRORCODE} field and exception in context's\n     *         {@link #CONTEXT_LASTEXCEPTION} field.\n     *         <p>\n     *         Error codes can be :\n     *         <ul>\n     *         <li> {@link XWikiExceptionApi#ERROR_NOERROR} : method succeed with no error.<\/li>\n     *         <li> {@link XWikiException#ERROR_XWIKI_ACCESS_DENIED} : context's user don't have\n     *         rights to do this action.<\/li>\n     *         <li> {@link ApplicationManagerException#ERROR_AM_APPDOCALREADYEXISTS} : application\n     *         descriptor already exists.<\/li>\n     *         <\/ul>\n     * @throws XWikiException all error that does not caused by user of this method.\n     */\n    public int createApplication(XWikiApplication appXObjectDocument, boolean failOnExist)\n        throws XWikiException\n    {\n        int returncode = XWikiExceptionApi.ERROR_NOERROR;\n\n        // TODO : check rights\n\n        try {\n            ApplicationManager.getInstance().createApplication(\n                appXObjectDocument,\n                failOnExist,\n                this.messageTool.get(ApplicationManagerMessageTool.COMMENT_CREATEAPPLICATION,\n                    appXObjectDocument.toString()), context);\n        } catch (ApplicationManagerException e) {\n            LOG.error(this.messageTool.get(ApplicationManagerMessageTool.LOG_CREATEAPP,\n                appXObjectDocument.toString()), e);\n\n            context.put(CONTEXT_LASTERRORCODE, new Integer(e.getCode()));\n            context.put(CONTEXT_LASTEXCEPTION, new XWikiExceptionApi(e, context));\n\n            returncode = e.getCode();\n        }\n\n        return returncode;\n    }","commit_id":"788af33ab2a405892dab2a10c0e31601a173f0fc","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Get the current wiki root application.\n     * \n     * @return the root application descriptor document. If can't find root application return null.\n     * @throws XWikiException all error that does not caused by user of this method.\n     */\n    public XWikiApplication getRootApplication() throws XWikiException\n    {\n        XWikiApplication app = null;\n\n        try {\n            app = ApplicationManager.getInstance().getRootApplication(context);\n        } catch (ApplicationManagerException e) {\n            LOG.error(\"Try to get root application document\", e);\n\n            context.put(CONTEXT_LASTERRORCODE, new Integer(e.getCode()));\n            context.put(CONTEXT_LASTEXCEPTION, new XWikiExceptionApi(e, context));\n        }\n\n        return app;\n    }","id":82157,"modified_method":"/**\n     * Get the current wiki root application.\n     * \n     * @return the root application descriptor document. If can't find root application return null.\n     * @throws XWikiException all error that does not caused by user of this method.\n     */\n    public XWikiApplication getRootApplication() throws XWikiException\n    {\n        XWikiApplication app = null;\n\n        try {\n            app = ApplicationManager.getInstance().getRootApplication(context);\n        } catch (ApplicationManagerException e) {\n            LOG.error(this.messageTool.get(ApplicationManagerMessageTool.LOG_GETROOTAPP), e);\n\n            context.put(CONTEXT_LASTERRORCODE, new Integer(e.getCode()));\n            context.put(CONTEXT_LASTEXCEPTION, new XWikiExceptionApi(e, context));\n        }\n\n        return app;\n    }","commit_id":"788af33ab2a405892dab2a10c0e31601a173f0fc","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Create an instance of the Application Manager plugin user api.\n     * \n     * @param plugin the entry point of the Application Manager plugin.\n     * @param context the XWiki context.\n     */\n    public ApplicationManagerPluginApi(ApplicationManagerPlugin plugin, XWikiContext context)\n    {\n        super(plugin, context);\n\n        // Default Exception\n        defaultException =\n            new XWikiExceptionApi(ApplicationManagerException.getDefaultException(), context);\n\n        // Message Tool\n        Locale locale = (Locale) context.get(\"locale\");\n        this.messageTool = new XWikiPluginMessageTool(locale, plugin, context);\n        context.put(ApplicationManager.MESSAGETOOL_CONTEXT_KEY, this.messageTool);\n    }","id":82158,"modified_method":"/**\n     * Create an instance of the Application Manager plugin user api.\n     * \n     * @param plugin the entry point of the Application Manager plugin.\n     * @param context the XWiki context.\n     */\n    public ApplicationManagerPluginApi(ApplicationManagerPlugin plugin, XWikiContext context)\n    {\n        super(plugin, context);\n\n        // Default Exception\n        defaultException =\n            new XWikiExceptionApi(ApplicationManagerException.getDefaultException(), context);\n\n        // Message Tool\n        Locale locale = (Locale) context.get(\"locale\");\n        this.messageTool = new ApplicationManagerMessageTool(locale, plugin, context);\n        context.put(ApplicationManagerMessageTool.MESSAGETOOL_CONTEXT_KEY, this.messageTool);\n    }","commit_id":"788af33ab2a405892dab2a10c0e31601a173f0fc","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Get all applications descriptors documents.\n     * \n     * @return a list of XWikiApplication.\n     * @throws XWikiException all error that does not caused by user of this method.\n     */\n    public List getApplicationDocumentList() throws XWikiException\n    {\n        List listDocument = Collections.EMPTY_LIST;\n\n        try {\n            listDocument = ApplicationManager.getInstance().getApplicationList(this.context);\n        } catch (ApplicationManagerException e) {\n            LOG.error(\"Try to get all applications documents\", e);\n\n            context.put(CONTEXT_LASTERRORCODE, new Integer(e.getCode()));\n            context.put(CONTEXT_LASTEXCEPTION, new XWikiExceptionApi(e, context));\n        }\n\n        return listDocument;\n    }","id":82159,"modified_method":"/**\n     * Get all applications descriptors documents.\n     * \n     * @return a list of XWikiApplication.\n     * @throws XWikiException all error that does not caused by user of this method.\n     */\n    public List getApplicationDocumentList() throws XWikiException\n    {\n        List listDocument = Collections.EMPTY_LIST;\n\n        try {\n            listDocument = ApplicationManager.getInstance().getApplicationList(this.context);\n        } catch (ApplicationManagerException e) {\n            LOG.error(this.messageTool.get(ApplicationManagerMessageTool.LOG_GETALLAPPS), e);\n\n            context.put(CONTEXT_LASTERRORCODE, new Integer(e.getCode()));\n            context.put(CONTEXT_LASTEXCEPTION, new XWikiExceptionApi(e, context));\n        }\n\n        return listDocument;\n    }","commit_id":"788af33ab2a405892dab2a10c0e31601a173f0fc","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Get the application descriptor document of the provided application name.\n     * \n     * @param appName the name of the application.\n     * @return the application descriptor document. If there is error, it add error code in context\n     *         {@link #CONTEXT_LASTERRORCODE} field and exception in context's\n     *         {@link #CONTEXT_LASTEXCEPTION} field. Error codes can be :\n     *         <ul>\n     *         <li> {@link ApplicationManagerException#ERROR_AM_DOESNOTEXIST} : provided application\n     *         does not exist.\n     *         <\/ul>\n     * @throws XWikiException all error that does not caused by user of this method.\n     */\n    public XWikiApplication getApplicationDocument(String appName) throws XWikiException\n    {\n        XWikiApplication app = null;\n\n        try {\n            app = ApplicationManager.getInstance().getApplication(appName, context, true);\n        } catch (ApplicationManagerException e) {\n            LOG.error(\"Try to get application document from application name\", e);\n\n            context.put(CONTEXT_LASTERRORCODE, new Integer(e.getCode()));\n            context.put(CONTEXT_LASTEXCEPTION, new XWikiExceptionApi(e, context));\n        }\n\n        return app;\n    }","id":82160,"modified_method":"/**\n     * Get the application descriptor document of the provided application name.\n     * \n     * @param appName the name of the application.\n     * @return the application descriptor document. If there is error, it add error code in context\n     *         {@link #CONTEXT_LASTERRORCODE} field and exception in context's\n     *         {@link #CONTEXT_LASTEXCEPTION} field. Error codes can be :\n     *         <ul>\n     *         <li> {@link ApplicationManagerException#ERROR_AM_DOESNOTEXIST} : provided application\n     *         does not exist.\n     *         <\/ul>\n     * @throws XWikiException all error that does not caused by user of this method.\n     */\n    public XWikiApplication getApplicationDocument(String appName) throws XWikiException\n    {\n        XWikiApplication app = null;\n\n        try {\n            app = ApplicationManager.getInstance().getApplication(appName, context, true);\n        } catch (ApplicationManagerException e) {\n            LOG.error(this.messageTool.get(ApplicationManagerMessageTool.LOG_GETAPP, appName), e);\n\n            context.put(CONTEXT_LASTERRORCODE, new Integer(e.getCode()));\n            context.put(CONTEXT_LASTEXCEPTION, new XWikiExceptionApi(e, context));\n        }\n\n        return app;\n    }","commit_id":"788af33ab2a405892dab2a10c0e31601a173f0fc","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Reload all xwiki applications. It means : - update XWikiPreferences with each application\n     * translation documents\n     * \n     * @return error code.\n     *         <ul>\n     *         <li> {@link XWikiExceptionApi#ERROR_NOERROR} : action finished with no error.\n     *         <li> {@link XWikiException#ERROR_XWIKI_ACCESS_DENIED} : context's user don't have\n     *         rights to do this action.\n     *         <\/ul>\n     * @throws XWikiException all error that does not caused by user of this method.\n     */\n    public int reloadAllApplications() throws XWikiException\n    {\n        if (!hasAdminRights()) {\n            return XWikiException.ERROR_XWIKI_ACCESS_DENIED;\n        }\n\n        int returncode = XWikiExceptionApi.ERROR_NOERROR;\n\n        try {\n            ApplicationManager.getInstance().reloadAllApplications(\n                this.messageTool.get(\"applicationmanager.plugin.reloadallapplications.comment\"),\n                context);\n        } catch (ApplicationManagerException e) {\n            LOG.error(\"Try to reload all applications\", e);\n\n            context.put(CONTEXT_LASTERRORCODE, new Integer(e.getCode()));\n            context.put(CONTEXT_LASTEXCEPTION, new XWikiExceptionApi(e, context));\n\n            returncode = e.getCode();\n        }\n\n        return returncode;\n    }","id":82161,"modified_method":"/**\n     * Reload all xwiki applications. It means : - update XWikiPreferences with each application\n     * translation documents\n     * \n     * @return error code.\n     *         <ul>\n     *         <li> {@link XWikiExceptionApi#ERROR_NOERROR} : action finished with no error.\n     *         <li> {@link XWikiException#ERROR_XWIKI_ACCESS_DENIED} : context's user don't have\n     *         rights to do this action.\n     *         <\/ul>\n     * @throws XWikiException all error that does not caused by user of this method.\n     */\n    public int reloadAllApplications() throws XWikiException\n    {\n        if (!hasAdminRights()) {\n            return XWikiException.ERROR_XWIKI_ACCESS_DENIED;\n        }\n\n        int returncode = XWikiExceptionApi.ERROR_NOERROR;\n\n        try {\n            ApplicationManager.getInstance()\n                .reloadAllApplications(\n                    this.messageTool\n                        .get(ApplicationManagerMessageTool.COMMENT_RELOADALLAPPLICATIONS),\n                    context);\n        } catch (ApplicationManagerException e) {\n            LOG.error(this.messageTool.get(ApplicationManagerMessageTool.LOG_REALOADALLAPPS), e);\n\n            context.put(CONTEXT_LASTERRORCODE, new Integer(e.getCode()));\n            context.put(CONTEXT_LASTEXCEPTION, new XWikiExceptionApi(e, context));\n\n            returncode = e.getCode();\n        }\n\n        return returncode;\n    }","commit_id":"788af33ab2a405892dab2a10c0e31601a173f0fc","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Import attached application XAR into current wiki and do all actions needed to installation\n     * an application. See {@link #reloadApplication(String)} for more.\n     * \n     * @param packageName the name of the attached XAR file to import.\n     * @return error code . If there is error, it add error code in context\n     *         {@link #CONTEXT_LASTERRORCODE} field and exception in context's\n     *         {@link #CONTEXT_LASTEXCEPTION} field.\n     *         <p>\n     *         Error codes can be :\n     *         <ul>\n     *         <li> {@link XWikiExceptionApi#ERROR_NOERROR} : action finished with no error.\n     *         <li> {@link XWikiException#ERROR_XWIKI_ACCESS_DENIED} : context's user don't have\n     *         rights to do this action.\n     *         <li> {@link ApplicationManagerException#ERROR_AM_DOESNOTEXIST} : provided application\n     *         does not exist.\n     *         <\/ul>\n     * @throws XWikiException all error that does not caused by user of this method.\n     */\n    public int importApplication(String packageName) throws XWikiException\n    {\n        if (!hasAdminRights()) {\n            return XWikiException.ERROR_XWIKI_ACCESS_DENIED;\n        }\n\n        int returncode = XWikiExceptionApi.ERROR_NOERROR;\n\n        try {\n            ApplicationManager.getInstance().importApplication(\n                context.getDoc(),\n                packageName,\n                this.messageTool.get(\"applicationmanager.plugin.importapplication.comment\",\n                    packageName), context);\n        } catch (ApplicationManagerException e) {\n            LOG.error(\"Try to import applications from XAR package\", e);\n\n            context.put(CONTEXT_LASTERRORCODE, new Integer(e.getCode()));\n            context.put(CONTEXT_LASTEXCEPTION, new XWikiExceptionApi(e, context));\n\n            returncode = e.getCode();\n        }\n\n        return returncode;\n    }","id":82162,"modified_method":"/**\n     * Import attached application XAR into current wiki and do all actions needed to installation\n     * an application. See {@link #reloadApplication(String)} for more.\n     * \n     * @param packageName the name of the attached XAR file to import.\n     * @return error code . If there is error, it add error code in context\n     *         {@link #CONTEXT_LASTERRORCODE} field and exception in context's\n     *         {@link #CONTEXT_LASTEXCEPTION} field.\n     *         <p>\n     *         Error codes can be :\n     *         <ul>\n     *         <li> {@link XWikiExceptionApi#ERROR_NOERROR} : action finished with no error.\n     *         <li> {@link XWikiException#ERROR_XWIKI_ACCESS_DENIED} : context's user don't have\n     *         rights to do this action.\n     *         <li> {@link ApplicationManagerException#ERROR_AM_DOESNOTEXIST} : provided application\n     *         does not exist.\n     *         <\/ul>\n     * @throws XWikiException all error that does not caused by user of this method.\n     */\n    public int importApplication(String packageName) throws XWikiException\n    {\n        if (!hasAdminRights()) {\n            return XWikiException.ERROR_XWIKI_ACCESS_DENIED;\n        }\n\n        int returncode = XWikiExceptionApi.ERROR_NOERROR;\n\n        try {\n            ApplicationManager.getInstance().importApplication(\n                context.getDoc(),\n                packageName,\n                this.messageTool.get(ApplicationManagerMessageTool.COMMENT_IMPORTAPPLICATION,\n                    packageName), context);\n        } catch (ApplicationManagerException e) {\n            LOG.error(this.messageTool.get(ApplicationManagerMessageTool.LOG_IMPORTAPP,\n                packageName), e);\n\n            context.put(CONTEXT_LASTERRORCODE, new Integer(e.getCode()));\n            context.put(CONTEXT_LASTEXCEPTION, new XWikiExceptionApi(e, context));\n\n            returncode = e.getCode();\n        }\n\n        return returncode;\n    }","commit_id":"788af33ab2a405892dab2a10c0e31601a173f0fc","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\r\n     * Get the XWiki document descriptor of containing XAppClasses.XWikiApplication XWiki object\r\n     * with \"appname\" field equals to <code>appName<\/code>.\r\n     * \r\n     * @param appName the name of the application.\r\n     * @param context the XWiki context.\r\n     * @param validate indicate if it return new {@link XWikiDocument} or throw exception if\r\n     *            application descriptor does not exist.\r\n     * @return the {@link XWikiDocument} representing application descriptor.\r\n     * @throws XWikiException error when searching for application descriptor document.\r\n     * @see #getApplication(String, XWikiContext, boolean)\r\n     */\r\n    protected XWikiDocument getApplicationDocument(String appName, XWikiContext context,\r\n        boolean validate) throws XWikiException\r\n    {\r\n        XWiki xwiki = context.getWiki();\r\n\r\n        String[][] fieldDescriptors =\r\n            new String[][] {{FIELD_APPNAME, StringProperty.class.getSimpleName(), appName}};\r\n        List parameterValues = new ArrayList();\r\n        String where = createWhereClause(fieldDescriptors, parameterValues);\r\n\r\n        List listApp =\r\n            context.getWiki().getStore().searchDocuments(where, parameterValues, context);\r\n\r\n        if (listApp.isEmpty()) {\r\n            if (validate) {\r\n                throw new ApplicationManagerException(\r\n                    ApplicationManagerException.ERROR_AM_DOESNOTEXIST,\r\n                    appName + \" application does not exist\");\r\n            } else {\r\n                return xwiki.getDocument(getItemDocumentDefaultFullName(appName, context),\r\n                    context);\r\n            }\r\n        }\r\n\r\n        return (XWikiDocument) listApp.get(0);\r\n    }","id":82163,"modified_method":"/**\r\n     * Get the XWiki document descriptor of containing XAppClasses.XWikiApplication XWiki object\r\n     * with \"appname\" field equals to <code>appName<\/code>.\r\n     * \r\n     * @param appName the name of the application.\r\n     * @param context the XWiki context.\r\n     * @param validate indicate if it return new {@link XWikiDocument} or throw exception if\r\n     *            application descriptor does not exist.\r\n     * @return the {@link XWikiDocument} representing application descriptor.\r\n     * @throws XWikiException error when searching for application descriptor document.\r\n     * @see #getApplication(String, XWikiContext, boolean)\r\n     */\r\n    protected XWikiDocument getApplicationDocument(String appName, XWikiContext context,\r\n        boolean validate) throws XWikiException\r\n    {\r\n        XWiki xwiki = context.getWiki();\r\n\r\n        String[][] fieldDescriptors =\r\n            new String[][] {{FIELD_APPNAME, StringProperty.class.getSimpleName(), appName}};\r\n        List parameterValues = new ArrayList();\r\n        String where = createWhereClause(fieldDescriptors, parameterValues);\r\n\r\n        List listApp =\r\n            context.getWiki().getStore().searchDocuments(where, parameterValues, context);\r\n\r\n        if (listApp.isEmpty()) {\r\n            if (validate) {\r\n                throw new ApplicationManagerException(\r\n                    ApplicationManagerException.ERROR_AM_DOESNOTEXIST,\r\n                    ApplicationManagerMessageTool.getDefault(context).get(\r\n                        ApplicationManagerMessageTool.ERROR_APPDOESNOTEXISTS, appName));\r\n            } else {\r\n                return xwiki.getDocument(getItemDocumentDefaultFullName(appName, context),\r\n                    context);\r\n            }\r\n        }\r\n\r\n        return (XWikiDocument) listApp.get(0);\r\n    }","commit_id":"788af33ab2a405892dab2a10c0e31601a173f0fc","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/** Note: it doesn't call render doCatch/doFinally */\n\tprivate void renderItem0(Renderer renderer, Treeitem item, Object node)\n\tthrows Throwable {\n\t\tif(item.isLoaded())\n\t\t\treturn;\n\n\t\tTreechildren children = null;\n\t\t\n\t\tif(item.getTreechildren()!=null){\n\t\t\tchildren = item.getTreechildren();\n\t\t\t/* \n\t\t\t * When the treeitem is rendered after 1st time, dropped all\n\t\t\t * the descending treeitems first.\n\t\t\t*/\n\t\t\tif(children.getItemCount()>0)\n\t\t\t\tchildren.getChildren().clear();\n\t\t}else{\n\t\t\tchildren = new Treechildren();\n\t\t\trenderer.render(item, node);\n\t\t}\n\t\t/*\n\t\t * After modified the node in tree model, if node is leaf, \n\t\t * its treechildren is needed to be dropped.\n\t\t */\n\t\tif(_model.isLeaf(node)){\n\t\t\trenderer.render(item, node);\n\t\t\tif(item.getTreechildren()!=null)\n\t\t\t\titem.getTreechildren().detach();\n\t\t}else{\n\t\t\t/*\n\t\t\t * render children of item\n\t\t\t */\n\t\t\tfor(int i=0; i< _model.getChildCount(node);i++ ){\n\t\t\t\tTreeitem ti = newUnloadedItem();\n\t\t\t\tObject childNode = _model.getChild(node, i);\n\t\t\t\trenderer.render(ti, childNode);\n\t\t\t\tif(!_model.isLeaf(childNode)){\t\n\t\t\t\t\tTreechildren ch = new Treechildren();\n\t\t\t\t\tch.setParent(ti);\n\t\t\t\t}\n\t\t\t\tti.setParent(children);\n\t\t\t}\n\t\t\tchildren.setParent(item);\n\t\t}\n\n\t\t//After the treeitem is loaded, set treeitem to be loaded\n\t\titem.setLoaded(true);\n\t}","id":82164,"modified_method":"/** Note: it doesn't call render doCatch/doFinally */\n\tprivate void renderItem0(Renderer renderer, Treeitem item, Object node)\n\tthrows Throwable {\n\t\tif(item.isLoaded()) //all direct children are loaded\n\t\t\treturn;\n\n\t\t/*\n\t\t * After modified the node in tree model, if node is leaf, \n\t\t * its treechildren is needed to be dropped.\n\t\t */\n\t\tTreechildren tc = item.getTreechildren();\n\t\tif(_model.isLeaf(node)){\n\t\t\tif(tc != null)\n\t\t\t\ttc.detach(); //just in case\n\n\t\t\t//no children to render\n\t\t\t//Note item already renderred, so no need:\n\t\t\t//renderer.render(item, node);\n\t\t}else{\n\t\t\tif (tc != null) tc.getChildren().clear(); //just in case\n\t\t\telse {\n\t\t\t\ttc = new Treechildren();\n\t\t\t\ttc.setParent(item);\n\t\t\t}\n\n\t\t\trenderChildren(renderer, tc, node);\n\t\t}\n\n\t\t//After the treeitem is loaded, set treeitem to be loaded\n\t\titem.setLoaded(true);\n\t}","commit_id":"4d9ccf352d2b4119c9f474f843bd2d1e8d59ad4a","url":"https://github.com/zkoss/zk"},{"original_method":"private void renderTree(){\n\t\tif(_treechildren == null) {\n\t\t\tTreechildren children = new Treechildren();\n\t\t\tchildren.setParent(this);\n\t\t} else {\n\t\t\t_treechildren.getChildren().clear();\n\t\t}\n\t\n\t\tObject node = _model.getRoot();\n\t\tint childCount = _model.getChildCount(node);\n\t\tfinal Renderer renderer = new Renderer();\n\t\ttry {\n\t\t\tfor(int i=0; i< childCount;i++ ){\n\t\t\t\trenderTreeChild(renderer, node, i);\n\t\t\t}\n\t\t} catch (Throwable ex) {\n\t\t\trenderer.doCatch(ex);\n\t\t} finally {\n\t\t\trenderer.doFinally();\n\t\t}\n}","id":82165,"modified_method":"private void renderTree(){\n\t\tif(_treechildren == null) {\n\t\t\tTreechildren children = new Treechildren();\n\t\t\tchildren.setParent(this);\n\t\t} else {\n\t\t\t_treechildren.getChildren().clear();\n\t\t}\n\t\n\t\tObject node = _model.getRoot();\n\t\tfinal Renderer renderer = new Renderer();\n\t\ttry {\n\t\t\trenderChildren(renderer, _treechildren, node);\n\t\t} catch (Throwable ex) {\n\t\t\trenderer.doCatch(ex);\n\t\t} finally {\n\t\t\trenderer.doFinally();\n\t\t}\n}","commit_id":"4d9ccf352d2b4119c9f474f843bd2d1e8d59ad4a","url":"https://github.com/zkoss/zk"},{"original_method":"private void onTreeDataContentChanged(Component parent,Object node, int index){\n\t\tList items = getParentTreechildren(parent).getChildren();\t\t\n\t\n\t\t/* \n\t\t * find the associated tree compoent(parent)\n\t\t * notice:\n\t\t * if parent is root\n\t\t */\n\t\tif(parent instanceof Tree)\n\t\t\trenderTree();\n\t\telse{\n\t\t\t/*\n\t\t\t * 2008/02/01 --- issue: [ 1884112 ] When Updating TreeModel, throws a IndexOutOfBoundsException\n\t\t\t * When I update a children node data of the TreeModel , and fire a \n\t\t\t * CONTENTS_CHANGED event, it will throw a IndexOutOfBoundsException , If a \n\t\t\t * node doesn't open yet or not load yet.\n\t\t\t * \n\t\t\t * if parent is loaded, change content. \n\t\t\t * else do nothing\n\t\t\t */\n\t\t\tif(items.size()>0){\n\t\t\t\tTreeitem ti = (Treeitem)items.get(index);\n\t\t\t\t/*\n\t\t\t\t * When content of treeitem is changed, the treeitem is rendered as \n\t\t\t\t * unloaded item.\n\t\t\t\t * 2007/11/05 --- issue: Can not dynamically update content of treeitem from treemodel\n\t\t\t\t */\n\t\t\t\tti.setLoaded(false);\n\t\t\t\trenderItem(ti,_model.getChild(node,index));\n\t\t\t}\n\t\t}\n\t}","id":82166,"modified_method":"private void onTreeDataContentChanged(Component parent,Object node, int index){\n\t\tList items = treechildrenOf(parent).getChildren();\t\t\n\n\t\t/* \n\t\t * find the associated tree compoent(parent)\n\t\t * notice:\n\t\t * if parent is root\n\t\t */\n\t\tif(parent instanceof Tree)\n\t\t\trenderTree();\n\t\telse{\n\t\t\t/*\n\t\t\t * 2008/02/01 --- issue: [ 1884112 ] When Updating TreeModel, throws a IndexOutOfBoundsException\n\t\t\t * When I update a children node data of the TreeModel , and fire a \n\t\t\t * CONTENTS_CHANGED event, it will throw a IndexOutOfBoundsException , If a \n\t\t\t * node doesn't open yet or not load yet.\n\t\t\t * \n\t\t\t * if parent is loaded, change content. \n\t\t\t * else do nothing\n\t\t\t */\n\t\t\tif(items.size()>0){\n\t\t\t\tTreeitem ti = (Treeitem)items.get(index);\n\t\t\t\t/*\n\t\t\t\t * When content of treeitem is changed, the treeitem is rendered as \n\t\t\t\t * unloaded item.\n\t\t\t\t * 2007/11/05 --- issue: Can not dynamically update content of treeitem from treemodel\n\t\t\t\t */\n\t\t\t\tti.setLoaded(false);\n\t\t\t\trenderItem(ti,_model.getChild(node,index));\n\t\t\t}\n\t\t}\n\t}","commit_id":"4d9ccf352d2b4119c9f474f843bd2d1e8d59ad4a","url":"https://github.com/zkoss/zk"},{"original_method":"private void onTreeDataInsert(Component parent,Object node, int index){\n\t\t/* \tFind the sibling to insertBefore;\n\t\t * \tif there is no sibling or new item is inserted at end.\n\t\t */\n\t\tTreeitem newTi = newUnloadedItem();\n\t\tTreechildren ch= getParentTreechildren(parent);\n\t\trenderItem(newTi,_model.getChild(node,index));\n\t\tList siblings = ch.getChildren();\n\t\t//if there is no sibling or new item is inserted at end.\n\t\tif(siblings.size()==0 || index == siblings.size() ){\n\t\t\tch.insertBefore(newTi, null);\n\t\t}else{\n\t\t\tch.insertBefore(newTi, (Treeitem)siblings.get(index));\n\t\t}\n\t\tch.setParent(parent);\n\t}","id":82167,"modified_method":"private void onTreeDataInsert(Component parent,Object node, int index){\n\t\t/* \tFind the sibling to insertBefore;\n\t\t * \tif there is no sibling or new item is inserted at end.\n\t\t */\n\t\tTreeitem newTi = newUnloadedItem();\n\t\tTreechildren tc= treechildrenOf(parent);\n\t\tList siblings = tc.getChildren();\n\t\t//if there is no sibling or new item is inserted at end.\n\t\tif(siblings.size()==0 || index == siblings.size() ){\n\t\t\ttc.insertBefore(newTi, null);\n\t\t}else{\n\t\t\ttc.insertBefore(newTi, (Treeitem)siblings.get(index));\n\t\t}\n\n\t\trenderItem(newTi,_model.getChild(node,index));\n\t}","commit_id":"4d9ccf352d2b4119c9f474f843bd2d1e8d59ad4a","url":"https://github.com/zkoss/zk"},{"original_method":"private void onTreeDataRemoved(Component parent,Object node, int index){\n\t\tList items = getParentTreechildren(parent).getChildren();\t\t\n\t\tif(items.size()>1){\n\t\t\t((Treeitem)items.get(index)).detach();\n\t\t}else{\n\t\t\tgetParentTreechildren(parent).detach();\n\t\t}\n\t}","id":82168,"modified_method":"private void onTreeDataRemoved(Component parent,Object node, int index){\n\t\tfinal Treechildren tc = treechildrenOf(parent);\n\t\tfinal List items = tc.getChildren();\t\t\n\t\tif(items.size()>1){\n\t\t\t((Treeitem)items.get(index)).detach();\n\t\t}else{\n\t\t\ttc.detach();\n\t\t}\n\t}","commit_id":"4d9ccf352d2b4119c9f474f843bd2d1e8d59ad4a","url":"https://github.com/zkoss/zk"},{"original_method":"private void renderTreeChild(Renderer renderer, Object node,int index)\n\tthrows Throwable {\n\t\tTreeitem ti = newUnloadedItem();\n\t\tObject childNode = _model.getChild(node, index);\n\t\trenderer.render(ti, childNode);\n\t\tif(!_model.isLeaf(childNode)){\t\n\t\t\tTreechildren ch = new Treechildren();\n\t\t\tch.setParent(ti);\n\t\t}\n\t\tti.setParent(_treechildren);\n\t}","id":82169,"modified_method":"private void renderChildren(Renderer renderer, Treechildren parent,\n\tObject node) throws Throwable {\n\t\tfor(int i = 0; i < _model.getChildCount(node); i++) {\n\t\t\tTreeitem ti = newUnloadedItem();\n\t\t\tti.setParent(parent);\n\t\t\tObject childNode = _model.getChild(node, i);\n\t\t\trenderer.render(ti, childNode);\n\t\t\tif(!_model.isLeaf(childNode)){\t\n\t\t\t\tTreechildren tc = new Treechildren();\n\t\t\t\ttc.setParent(ti);\n\t\t\t}\n\t\t}\n\t}","commit_id":"4d9ccf352d2b4119c9f474f843bd2d1e8d59ad4a","url":"https://github.com/zkoss/zk"},{"original_method":"/**\r\n * tabbox.dsp\r\n<c:set var=\"self\" value=\"${requestScope.arg.self}\"/>\r\n<table id=\"${self.uuid}\"${self.outerAttrs}${self.innerAttrs} z.tabs=\"${self.tabs.uuid}\" \r\nz.type=\"zul.tab.Tabbox\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n${z:redraw(self.tabs, null)}\r\n${z:redraw(self.tabpanels, null)}\r\n<\/table>\r\n\r\nvtabbox.dsp\r\n<table id=\"${self.uuid}\"${self.outerAttrs}${self.innerAttrs} z.tabs=\"${self.tabs.uuid}\" z.type=\"zul.tab.Tabbox\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n<tr valign=\"top\">\r\n${z:redraw(self.tabs, null)}\r\n${z:redraw(self.tabpanels, null)}\r\n<\/tr>\r\n<\/table>\r\n */\r\n\r\n\tpublic void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal WriterHelper wh = new WriterHelper(out);\r\n\t\tfinal Tabbox self = (Tabbox) comp;\t\r\n\t\t\r\n\t\tif(self.getOrient().equals(\"vertical\")){\r\n\t\t\twh.write(\"<table id=\\\"\" + self.getUuid() + \"\\\"\" + self.getOuterAttrs() + self.getInnerAttrs() + \" z.tabs=\\\"\" \r\n\t\t\t\t\t+ self.getTabs().getUuid() + \"\\\" z.type=\\\"zul.tab.Tabbox\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\">\");\t\t\r\n\t\t\twh.write(\"<tr valign=\\\"top\\\">\");\r\n\t\t\tself.getTabs().redraw(out);\r\n\t\t    self.getTabpanels().redraw(out);\t\t\r\n\t\t\twh.write(\"<\/tr>\");\r\n\t\t\twh.write(\"<\/table>\");\r\n\t\t}\r\n\t\telse{\r\n\t\t\twh.write(\"<table id=\\\"\" + self.getUuid() + \"\\\"\" + self.getOuterAttrs() + self.getInnerAttrs() + \" z.tabs=\\\"\" \r\n\t\t\t\t+ self.getTabs().getUuid() + \"\\\" z.type=\\\"zul.tab.Tabbox\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\">\");\t\t\r\n\t\t\tself.getTabs().redraw(out);\r\n\t\t\tself.getTabs().redraw(out);\r\n\t\t\tself.getTabpanels().redraw(out);\r\n\t\t\twh.write(\"<\/table>\");\r\n\t\t}\r\n\t}","id":82170,"modified_method":"/**\r\n * tabbox.dsp\r\n<c:set var=\"self\" value=\"${requestScope.arg.self}\"/>\r\n<table id=\"${self.uuid}\"${self.outerAttrs}${self.innerAttrs} z.tabs=\"${self.tabs.uuid}\" \r\nz.type=\"zul.tab.Tabbox\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n${z:redraw(self.tabs, null)}\r\n${z:redraw(self.tabpanels, null)}\r\n<\/table>\r\n\r\nvtabbox.dsp\r\n<table id=\"${self.uuid}\"${self.outerAttrs}${self.innerAttrs} z.tabs=\"${self.tabs.uuid}\" z.type=\"zul.tab.Tabbox\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n<tr valign=\"top\">\r\n${z:redraw(self.tabs, null)}\r\n${z:redraw(self.tabpanels, null)}\r\n<\/tr>\r\n<\/table>\r\n */\r\n\r\n\tpublic void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal WriterHelper wh = new WriterHelper(out);\r\n\t\tfinal Tabbox self = (Tabbox) comp;\r\n\t\tfinal Tabs ts = self.getTabs();\r\n\t\tfinal Tabpanels tps = self.getTabpanels();\r\n\t\t\r\n\t\tif(\"vertical\".equals(self.getOrient())){\r\n\t\t\twh.write(\"<table id=\\\"\" + self.getUuid() + \"\\\"\" + self.getOuterAttrs() + self.getInnerAttrs() + \" z.tabs=\\\"\" \r\n\t\t\t\t\t+ (ts==null ?\"\":ts.getUuid()) + \"\\\" z.type=\\\"zul.tab.Tabbox\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\">\");\t\t\r\n\t\t\twh.write(\"<tr valign=\\\"top\\\">\");\r\n\t\t\tif(ts != null)\t\t\t\t\r\n\t\t\t\tts.redraw(out);\r\n\t\t\tif(tps != null)\r\n\t\t\t\ttps.redraw(out);\t\t    \t\t\r\n\t\t\twh.write(\"<\/tr>\");\r\n\t\t\twh.write(\"<\/table>\");\r\n\t\t}\r\n\t\telse{\r\n\t\t\twh.write(\"<table id=\\\"\" + self.getUuid() + \"\\\"\" + self.getOuterAttrs() + self.getInnerAttrs() + \" z.tabs=\\\"\" \r\n\t\t\t\t+ self.getTabs().getUuid() + \"\\\" z.type=\\\"zul.tab.Tabbox\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\">\");\t\t\r\n\t\t\tself.getTabs().redraw(out);\r\n\t\t\tself.getTabs().redraw(out);\r\n\t\t\tself.getTabpanels().redraw(out);\r\n\t\t\twh.write(\"<\/table>\");\r\n\t\t}\r\n\t}","commit_id":"d0c7d6a63280e85933e761a6df27704f5fafdc35","url":"https://github.com/zkoss/zk"},{"original_method":"/**\r\n<c:set var=\"self\" value=\"${requestScope.arg.self}\"/>\r\n<div id=\"${self.uuid}\" z.type=\"zul.tree.Tree\"${self.outerAttrs}${self.innerAttrs}>\r\n<c:if test=\"${!empty self.treecols}\">\r\n\t<div id=\"${self.uuid}!head\" class=\"tree-head\">\r\n\t<table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"table-layout:fixed\">\r\n${z:redraw(self.treecols, null)}\r\n\t<\/table>\r\n\t<\/div>\r\n<\/c:if>\r\n\t<div id=\"${self.uuid}!body\" class=\"tree-body\">\r\n\t<table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n${z:redraw(self.treechildren, null)}\r\n\t<\/table>\r\n\t<\/div>\r\n<c:if test=\"${!empty self.treefoot}\">\r\n\t<div id=\"${self.uuid}!foot\" class=\"tree-foot\">\r\n\t<table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"table-layout:fixed\">\r\n${z:redraw(self.treefoot, null)}\r\n\t<\/table>\r\n\t<\/div>\r\n<\/c:if>\r\n<\/div>\r\n\t */\r\n\t/* (non-Javadoc)\r\n\t * @see org.zkoss.zk.ui.util.ComponentRenderer#render(org.zkoss.zk.ui.Component, java.io.Writer)\r\n\t */\r\n\tpublic void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal WriterHelper wh = new WriterHelper(out);\r\n\t\tfinal Tree self = (Tree) comp;\r\n\t\t\r\n\t\twh.write(\"<div id=\\\"\" + self.getUuid() + \"\\\" z.type=\\\"zul.tree.Tree\\\"\" \r\n\t\t\t\t+ self.getOuterAttrs() + self.getInnerAttrs() + \">\");\r\n\t\tif(!(self.getTreecols() == null)){\r\n\t\t\twh.write(\"<div id=\\\"\" + self.getUuid() + \"!head\\\" class=\\\"tree-head\\\">\");\r\n\t\t\twh.write(\"<table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"table-layout:fixed\\\">\");\r\n\t\t\tself.getTreecols().redraw(out);\t\t\r\n\t\t\twh.write(\"<\/table>\");\r\n\t\t\twh.write(\"<\/div>\");\r\n\t\t}\r\n\t\twh.write(\"<div id=\\\"\" + self.getUuid() + \"!body\\\" class=\\\"tree-body\\\">\");\r\n\t\twh.write(\"<table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\">\" );\r\n\t\tself.getTreechildren().redraw(out);\t\t\r\n\t\twh.write(\"<\/table>\");\r\n\t\twh.write(\"<\/div>\");\t\t\r\n\t\tif(!(self.getTreefoot() == null)){\r\n\t\t\twh.write(\"<div id=\\\"\" + self.getUuid() + \"!foot\\\" class=\\\"tree-foot\\\">\");\r\n\t\t\twh.write(\"<table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"table-layout:fixed\\\">\");\r\n\t\t\tself.getTreefoot().redraw(out);\t\t\r\n\t\t\twh.write(\"<\/table>\");\r\n\t\t\twh.write(\"<\/div>\");\r\n\t\t}\r\n\t\twh.write(\"<\/div>\");\r\n\t}","id":82171,"modified_method":"/**\r\n<c:set var=\"self\" value=\"${requestScope.arg.self}\"/>\r\n<div id=\"${self.uuid}\" z.type=\"zul.tree.Tree\"${self.outerAttrs}${self.innerAttrs}>\r\n<c:if test=\"${!empty self.treecols}\">\r\n\t<div id=\"${self.uuid}!head\" class=\"tree-head\">\r\n\t<table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"table-layout:fixed\">\r\n${z:redraw(self.treecols, null)}\r\n\t<\/table>\r\n\t<\/div>\r\n<\/c:if>\r\n\t<div id=\"${self.uuid}!body\" class=\"tree-body\">\r\n\t<table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n${z:redraw(self.treechildren, null)}\r\n\t<\/table>\r\n\t<\/div>\r\n<c:if test=\"${!empty self.treefoot}\">\r\n\t<div id=\"${self.uuid}!foot\" class=\"tree-foot\">\r\n\t<table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"table-layout:fixed\">\r\n${z:redraw(self.treefoot, null)}\r\n\t<\/table>\r\n\t<\/div>\r\n<\/c:if>\r\n<\/div>\r\n\t */\r\n\t/* (non-Javadoc)\r\n\t * @see org.zkoss.zk.ui.util.ComponentRenderer#render(org.zkoss.zk.ui.Component, java.io.Writer)\r\n\t */\r\n\tpublic void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal WriterHelper wh = new WriterHelper(out);\r\n\t\tfinal Tree self = (Tree) comp;\r\n\t\tfinal Treecols tcs = (Treecols) self.getTreecols();\r\n\t\tfinal Treechildren tc = (Treechildren) self.getTreechildren();\r\n\t\tfinal Treefoot tf = (Treefoot) self.getTreefoot();\r\n\t\t\r\n\t\twh.write(\"<div id=\\\"\" + self.getUuid() + \"\\\" z.type=\\\"zul.tree.Tree\\\"\" \r\n\t\t\t\t+ self.getOuterAttrs() + self.getInnerAttrs() + \">\");\r\n\t\tif(!(self.getTreecols() == null)){\r\n\t\t\twh.write(\"<div id=\\\"\" + self.getUuid() + \"!head\\\" class=\\\"tree-head\\\">\");\r\n\t\t\twh.write(\"<table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"table-layout:fixed\\\">\");\r\n\t\t\tif(tcs != null)\r\n\t\t\t\ttcs.redraw(out);\t\t\r\n\t\t\twh.write(\"<\/table>\");\r\n\t\t\twh.write(\"<\/div>\");\r\n\t\t}\r\n\t\twh.write(\"<div id=\\\"\" + self.getUuid() + \"!body\\\" class=\\\"tree-body\\\">\");\r\n\t\twh.write(\"<table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\">\" );\r\n\t\tif(tc != null)\r\n\t\t\ttc.redraw(out);\t\t\r\n\t\twh.write(\"<\/table>\");\r\n\t\twh.write(\"<\/div>\");\t\t\r\n\t\tif(!(self.getTreefoot() == null)){\r\n\t\t\twh.write(\"<div id=\\\"\" + self.getUuid() + \"!foot\\\" class=\\\"tree-foot\\\">\");\r\n\t\t\twh.write(\"<table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"table-layout:fixed\\\">\");\r\n\t\t\tif(tf != null)\r\n\t\t\t\ttf.redraw(out);\t\t\r\n\t\t\twh.write(\"<\/table>\");\r\n\t\t\twh.write(\"<\/div>\");\r\n\t\t}\r\n\t\twh.write(\"<\/div>\");\r\n\t}","commit_id":"d0c7d6a63280e85933e761a6df27704f5fafdc35","url":"https://github.com/zkoss/zk"},{"original_method":"/**\r\n<c:set var=\"self\" value=\"${requestScope.arg.self}\"/>\r\n${z:redraw(self.treerow, null)}\r\n${z:redraw(self.treechildren, null)}\r\n */\r\n\tpublic void render(Component comp, Writer out) throws IOException {\t\t\r\n\t\tfinal Treeitem self = (Treeitem) comp;\r\n\t\t\r\n\t\tself.getTreerow().redraw(out);\r\n\t\tself.getTreechildren().redraw(out);\r\n\t}","id":82172,"modified_method":"/**\r\n<c:set var=\"self\" value=\"${requestScope.arg.self}\"/>\r\n${z:redraw(self.treerow, null)}\r\n${z:redraw(self.treechildren, null)}\r\n */\r\n\tpublic void render(Component comp, Writer out) throws IOException {\t\t\r\n\t\tfinal Treeitem self = (Treeitem) comp;\r\n\t\tfinal Treerow tr = self.getTreerow();\r\n\t\tfinal Treechildren tc = self.getTreechildren();\r\n\t\t\r\n\t\tif (tr != null)\t\t\t\r\n\t\t\ttr.redraw(out);\r\n\t\tif (tc != null)\r\n\t\t\ttc.redraw(out);\r\n\t}","commit_id":"d0c7d6a63280e85933e761a6df27704f5fafdc35","url":"https://github.com/zkoss/zk"},{"original_method":"public void render(Component comp, Writer out) throws IOException {\n\t\tfinal WriterHelper wh = new WriterHelper(out);\n\t\tfinal Window self = (Window)comp;\n\t\tfinal String uuid = self.getUuid();\n\t\tfinal Execution exec = Executions.getCurrent();\n\n\t\twh.write(\"<div id=\\\"\");\n\t\twh.write(uuid);\n\t\twh.write(\"\\\" z.type=\\\"zul.wnd.Wnd\\\" z.autoz=\\\"true\\\"\");\n\t\twh.write(self.getOuterAttrs());\n\t\twh.write(self.getInnerAttrs());\n\t\twh.write(\">\\n\");\n\n\t\tfinal Caption caption = self.getCaption();\n\t\tfinal String title = self.getTitle(), titlesc = self.getTitleSclass();\n\t\tString wcExtStyle = \"\";\n\t\tif (caption == null && title.length() == 0) {\n\t\t\tif (exec.isExplorer() && !exec.isExplorer7()) {\n\t\t\t\twh.write(\n\t\t\t\t\t\"<table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\">\"\n\t\t\t\t\t+\"<tr height=\\\"1px\\\"><td><\/td><\/tr><\/table>\\n\");\n\t\t\t}\n\t\t} else {\n\t\t\twh.write(\"<table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\">\\n\");\n\t\t\tif (caption == null) {\n\t\t\t\twh.write(\"<tr id=\\\"\");\n\t\t\t\twh.write(uuid);\n\t\t\t\twh.write(\"!caption\\\" class=\\\"title\\\">\\n\");\n\t\t\t\twh.write(\"<td class=\\\"l\");\n\t\t\t\twh.write(titlesc);\n\t\t\t\twh.write(\"\\\"><\/td>\\n\");\n\t\t\t\twh.write(\"<td class=\\\"m\");\n\t\t\t\twh.write(titlesc);\n\t\t\t\twh.write(\"\\\">\");\n\t\t\t\twh.write(XMLs.escapeXML(title));\n\t\t\t\twh.write(\"<\/td>\");\n\t\t\t\tif (self.isClosable()) {\n\t\t\t\t\twh.write(\"<td width=\\\"16\\\" class=\\\"m\");\n\t\t\t\t\twh.write(titlesc);\n\t\t\t\t\twh.write(\"\\\"><img id=\\\"\");\n\t\t\t\t\twh.write(uuid);\n\t\t\t\t\twh.write(\"!close\\\" src=\\\"\");\n\t\t\t\t\twh.write(exec.encodeURL(\"~./zul/img/close-off.gif\"));\n\t\t\t\t\twh.write(\"\\\"/><\/td>\");\n\t\t\t\t}\n\t\t\t\twh.write(\"<td class=\\\"r\");\n\t\t\t\twh.write(titlesc);\n\t\t\t\twh.write(\"\\\"><\/td><\/tr>\\n\");\n\t\t\t} else {\n\t\t\t\twh.write(\"<tr id=\\\"\");\n\t\t\t\twh.write(uuid);\n\t\t\t\twh.write(\"!caption\\\"><td class=\\\"l\");\n\t\t\t\twh.write(titlesc);\n\t\t\t\twh.write(\"\\\"><\/td><td class=\\\"m\");\n\t\t\t\twh.write(titlesc);\n\t\t\t\twh.write(\"\\\">\");\n\t\t\t\tcaption.redraw(out);\n\t\t\t\twh.write(\"<\/td><td class=\\\"r\");\n\t\t\t\twh.write(titlesc);\n\t\t\t\twh.write(\"\\\"><\/td><\/tr>\\n\");\n\t\t\t}\n\t\t\twh.write(\"<\/table>\\n\");\n\t\t\twcExtStyle = \"border-top:0;\";\n\t\t}\n\n\t\tfinal String cs = self.getContentStyle();\n\t\tif(cs!=null){\n\t\t\twcExtStyle += cs;\n\t\t}\n\t\twh.write(\"<div id=\\\"\").write(uuid).write(\"!cave\\\" class=\\\"\")\n\t\t\t.write(self.getContentSclass()).write(\"\\\"\")\n\t\t\t.writeAttr(\"style\", wcExtStyle).write(\">\");\n\n\t\tfor (Iterator it = self.getChildren().iterator(); it.hasNext();) {\n\t\t\tfinal Component child = (Component)it.next();\n\t\t\tif (child != caption)\n\t\t\t\tchild.redraw(out);\n\t\t}\n\t\twh.write(\"<\/div><\/div>\\n\");\n\t}","id":82173,"modified_method":"public void render(Component comp, Writer out) throws IOException {\n\t\tfinal WriterHelper wh = new WriterHelper(out);\n\t\tfinal Window self = (Window)comp;\n\t\tfinal String uuid = self.getUuid();\n\t\tfinal Execution exec = Executions.getCurrent();\n\n\t\twh.write(\"<div id=\\\"\");\n\t\twh.write(uuid);\n\t\twh.write(\"\\\" z.type=\\\"zul.wnd.Wnd\\\" z.autoz=\\\"true\\\"\");\n\t\twh.write(self.getOuterAttrs());\n\t\twh.write(self.getInnerAttrs());\n\t\twh.write(\">\\n\");\n\n\t\tfinal Caption caption = self.getCaption();\n\t\tfinal String title = self.getTitle(), titlesc = self.getTitleSclass();\n\t\tString wcExtStyle = \"\";\n\t\tif (caption == null && title.length() == 0) {\n\t\t\tif (exec.isExplorer() && !exec.isExplorer7()) {\n\t\t\t\twh.write(\n\t\t\t\t\t\"<table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\">\"\n\t\t\t\t\t+\"<tr height=\\\"1px\\\"><td><\/td><\/tr><\/table>\\n\");\n\t\t\t}\n\t\t} else {\n\t\t\twh.write(\"<table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\">\\n\");\n\t\t\tif (caption == null) {\n\t\t\t\twh.write(\"<tr id=\\\"\");\n\t\t\t\twh.write(uuid);\n\t\t\t\twh.write(\"!caption\\\" class=\\\"title\\\">\\n\");\n\t\t\t\twh.write(\"<td class=\\\"l\");\n\t\t\t\twh.write(titlesc);\n\t\t\t\twh.write(\"\\\"><\/td>\\n\");\n\t\t\t\twh.write(\"<td class=\\\"m\");\n\t\t\t\twh.write(titlesc);\n\t\t\t\twh.write(\"\\\">\");\n\t\t\t\twh.write(XMLs.escapeXML(title));\n\t\t\t\twh.write(\"<\/td>\");\n\t\t\t\tif (self.isClosable()) {\n\t\t\t\t\twh.write(\"<td width=\\\"16\\\" class=\\\"m\");\n\t\t\t\t\twh.write(titlesc);\n\t\t\t\t\twh.write(\"\\\"><img id=\\\"\");\n\t\t\t\t\twh.write(uuid);\n\t\t\t\t\twh.write(\"!close\\\" src=\\\"\");\n\t\t\t\t\twh.write(exec.encodeURL(\"~./zul/img/close-off.gif\"));\n\t\t\t\t\twh.write(\"\\\"/><\/td>\");\n\t\t\t\t}\n\t\t\t\twh.write(\"<td class=\\\"r\");\n\t\t\t\twh.write(titlesc);\n\t\t\t\twh.write(\"\\\"><\/td><\/tr>\\n\");\n\t\t\t} else {\n\t\t\t\twh.write(\"<tr id=\\\"\");\n\t\t\t\twh.write(uuid);\n\t\t\t\twh.write(\"!caption\\\"><td class=\\\"l\");\n\t\t\t\twh.write(titlesc);\n\t\t\t\twh.write(\"\\\"><\/td><td class=\\\"m\");\n\t\t\t\twh.write(titlesc);\n\t\t\t\twh.write(\"\\\">\");\n\t\t\t\tcaption.redraw(out);\n\t\t\t\twh.write(\"<\/td><td class=\\\"r\");\n\t\t\t\twh.write(titlesc);\n\t\t\t\twh.write(\"\\\"><\/td><\/tr>\\n\");\n\t\t\t}\n\t\t\twh.write(\"<\/table>\\n\");\n\t\t\twcExtStyle = \"border-top:0;\";\n\t\t}\n\n\t\tfinal String cs = self.getContentStyle();\n\t\tif(cs!=null){\n\t\t\twcExtStyle += cs;\n\t\t}\n\t\twh.write(\"<div id=\\\"\");\n\t\twh.write(uuid);\n\t\twh.write(\"!cave\\\" class=\\\"\");\n\t\twh.write(self.getContentSclass());\n\t\twh.write(\"\\\"\");\n\t\tif (wcExtStyle.length() > 0) {\n\t\t\twh.write(\" style=\\\"\");\n\t\t\twh.write(wcExtStyle);\n\t\t\twh.write(\"\\\"\");\n\t\t}\n\t\twh.write(\">\");\n\n\t\tfor (Iterator it = self.getChildren().iterator(); it.hasNext();) {\n\t\t\tfinal Component child = (Component)it.next();\n\t\t\tif (child != caption)\n\t\t\t\tchild.redraw(out);\n\t\t}\n\t\twh.write(\"<\/div><\/div>\\n\");\n\t}","commit_id":"d0c7d6a63280e85933e761a6df27704f5fafdc35","url":"https://github.com/zkoss/zk"},{"original_method":"public void setUpVizPanel()\n    {\n        vizPanel = new JPanel()\n        {\n            public Dimension getMaximumSize()\n            {\n                 return new Dimension(400,30);\n            }\n        };\n        GridBagLayout vizLayout = new GridBagLayout();\n        GridBagConstraints vizConstraints = new GridBagConstraints();\n        vizPanel.setLayout(vizLayout);\n        vizLabel = new JLabel(\"Select a visualization mode:\");\n        String[] vizChoices = {\"Vote\",\"Weight\"};\n        vizChoice = new JComboBox(vizChoices);\n        //$\n          vizConstraints.fill = GridBagConstraints.BOTH;\n          vizConstraints.anchor = GridBagConstraints.EAST;\n          //vizConstraints.weightx = 0.0;\n        //$\n        vizLayout.setConstraints(vizLabel,vizConstraints);\n        vizPanel.add(vizLabel);\n        //$\n           vizConstraints.anchor = GridBagConstraints.WEST;\n           vizConstraints.weightx = 1.0;\n        //$\n        vizConstraints.gridwidth = GridBagConstraints.REMAINDER;\n        vizLayout.setConstraints(vizChoice,vizConstraints);\n        vizPanel.add(vizChoice);\n        int b = TAB_BORDER_SIZE;\n        vizPanel.setBorder(BorderFactory.createEmptyBorder(b,b,b,b));\n        \n        votePanel = new JPanel();\n        /*{\n          public Dimension getPreferredSize()\n          {\n              return new Dimension(400,600);\n          }\n        };*/\n        \n        \n        weightPanel = new WeightVisualizationSettingsPanel(this);\n        GridBagLayout voteLayout = new GridBagLayout();\n        GridBagConstraints voteConstraints = new GridBagConstraints();\n        votePanel.setLayout(voteLayout);\n        JLabel defineThresholdMessageLabel = new JLabel(defineThresholdMessage);\n        //defineThresholdMessageLabel.setBorder(BorderFactory.createEmptyBorder(0,0,20,0));\n        \n        JPanel moreLessLabel = new JPanel();\n        /*{\n          public Dimension getPreferredSize()\n          {\n              return nodeThresholdSlider.getSize();\n          }\n        };*/\n        JLabel moreLabel = new JLabel(\"<< more\",JLabel.LEFT);\n        JLabel lessLabel = new JLabel(\"less >>\",JLabel.RIGHT);\n\n        moreLessLabel.setLayout(new BorderLayout());\n        moreLessLabel.add(BorderLayout.WEST,moreLabel);\n        moreLessLabel.add(BorderLayout.EAST,lessLabel);\n        \n        nodeThresholdSlider = new JSlider(0,100,50);\n        nodeThresholdSlider.addMouseListener(new java.awt.event.MouseAdapter() {\n            public void mousePressed(java.awt.event.MouseEvent me)\n            {\n                nodeMousePressed = true;\n            }\n        });\n        nodeThresholdSlider.setPaintTicks(true);\n        nodeThresholdSlider.setMajorTickSpacing(10);\n        nodeThresholdSlider.setPaintLabels(true);\n        java.util.Dictionary labels = nodeThresholdSlider.getLabelTable();\n        java.util.Enumeration e = labels.elements();\n        while(e.hasMoreElements())\n        {\n            Object label = e.nextElement();\n            if(label instanceof javax.swing.JComponent)\n            {\n                ((javax.swing.JComponent)label).setFont(new Font(\"Courier\",Font.PLAIN,9));\n            }\n        }\n        JLabel nodeLabel = new JLabel(\"Nodes:\");\n        \n        //voteConstraints.gridwidth = GridBagConstraints.REMAINDER;\n        //$\n          voteConstraints.gridwidth = 2;\n          voteConstraints.gridx = 0;\n          voteConstraints.gridy = 0;\n        //$\n        voteConstraints.insets = new Insets(0,0,20,0);\n        voteConstraints.anchor = GridBagConstraints.NORTHWEST;\n        //voteConstraints.weightx = 1.0;\n        voteLayout.setConstraints(defineThresholdMessageLabel,voteConstraints);\n        votePanel.add(defineThresholdMessageLabel);\n        \n        //voteConstraints.weightx =1.0;\n        voteConstraints.anchor = GridBagConstraints.CENTER;\n        voteConstraints.fill = GridBagConstraints.HORIZONTAL;\n        voteConstraints.insets = new Insets(0,0,0,0);\n        //$\n          voteConstraints.gridwidth = 1;\n          voteConstraints.gridx = 1;\n          voteConstraints.gridy = 1;\n        //$\n        voteLayout.setConstraints(moreLessLabel,voteConstraints);\n        votePanel.add(moreLessLabel);\n        \n        //$\n          voteConstraints.gridx = 0;\n          voteConstraints.gridy = 2;\n        //$\n        voteConstraints.fill = GridBagConstraints.NONE;\n        voteConstraints.anchor = GridBagConstraints.WEST;\n        //voteConstraints.weightx = 1.0;\n        voteConstraints.insets= new java.awt.Insets(0,40,0,0);\n        //voteConstraints.gridwidth = GridBagConstraints.RELATIVE;\n        voteConstraints.gridwidth = 1;\n        //$\n           //nodeLabel.setOpaque(true);\n           //nodeLabel.setBackground(Color.YELLOW);\n           voteConstraints.gridx = 0;\n           voteConstraints.gridy = 2;\n        //$\n        voteLayout.setConstraints(nodeLabel,voteConstraints);\n        votePanel.add(nodeLabel);\n        voteConstraints.insets = new java.awt.Insets(0,0,0,0);\n        //$\n          voteConstraints.gridx = 1;\n          voteConstraints.gridy = 2;\n        //$\n        voteLayout.setConstraints(nodeThresholdSlider,voteConstraints);\n\n        votePanel.add(nodeThresholdSlider);\n        percentageDisplay = new JLabel(nodeThresholdSlider.getValue()+ \"%\");\n        //have created methods below to turn this on and off (so that changes during setup don't affect the map)\n        //boolean method could be used to turn this on (if not already on) from outside this constructor\n        nodeThresholdSlider.addChangeListener(this);\n        //voteConstraints.gridwidth = GridBagConstraints.REMAINDER;\n        //$\n          voteConstraints.gridx = 2;\n          voteConstraints.gridy = 2;\n        //$\n        voteConstraints.insets = new java.awt.Insets(0,0,0,40);\n        voteLayout.setConstraints(percentageDisplay,voteConstraints);\n        votePanel.add(percentageDisplay);\n        \n        linkThresholdSlider = new JSlider(0,100,50);\n        linkThresholdSlider.setPaintTicks(true);\n        linkThresholdSlider.setMajorTickSpacing(10);\n        linkThresholdSlider.setPaintLabels(true);\n        java.util.Dictionary linkLabels = linkThresholdSlider.getLabelTable();\n        java.util.Enumeration le = linkLabels.elements();\n        while(le.hasMoreElements())\n        {\n            Object linkLabel = le.nextElement();\n            if(linkLabel instanceof javax.swing.JComponent)\n            {\n                ((javax.swing.JComponent)linkLabel).setFont(new Font(\"Courier\",Font.PLAIN,9));\n            }\n        }\n        JLabel linkPanel = new JLabel(\"Links:\");\n        voteConstraints.gridwidth = 1;\n        voteConstraints.insets= new java.awt.Insets(0,40,0,0);\n        //$\n           voteConstraints.gridx = 0;\n           voteConstraints.gridy = 3;\n        //$\n        voteLayout.setConstraints(linkPanel,voteConstraints);\n        votePanel.add(linkPanel);\n        voteConstraints.insets= new java.awt.Insets(0,0,0,0);\n        //$\n           voteConstraints.gridx = 1;\n           voteConstraints.gridy = 3;\n        //$\n        voteLayout.setConstraints(linkThresholdSlider,voteConstraints);\n        votePanel.add(linkThresholdSlider);\n        linkPercentageDisplay = new JLabel(linkThresholdSlider.getValue()+\"%\");\n        linkThresholdSlider.addChangeListener(this);\n        voteConstraints.insets = new java.awt.Insets(0,0,0,40);\n        //voteConstraints.gridwidth = GridBagConstraints.REMAINDER;\n        //$\n           voteConstraints.gridx = 2;\n           voteConstraints.gridy = 3;\n        //$\n        voteLayout.setConstraints(linkPercentageDisplay,voteConstraints);\n        votePanel.add(linkPercentageDisplay);\n    }","id":82174,"modified_method":"public void setUpVizPanel()\n    {\n        vizPanel = new JPanel()\n        {\n            public Dimension getMaximumSize()\n            {\n                 return new Dimension(400,30);\n            }\n        };\n        GridBagLayout vizLayout = new GridBagLayout();\n        GridBagConstraints vizConstraints = new GridBagConstraints();\n        vizPanel.setLayout(vizLayout);\n        vizLabel = new JLabel(\"Select a visualization mode:\");\n        String[] vizChoices = {\"Vote\",\"Weight\"};\n        vizChoice = new JComboBox(vizChoices);\n        filterChoice = new JCheckBox(\"Filter on Base Map?\");\n        //$\n          vizConstraints.fill = GridBagConstraints.BOTH;\n          vizConstraints.anchor = GridBagConstraints.EAST;\n          //vizConstraints.weightx = 0.0;\n        //$\n        vizLayout.setConstraints(vizLabel,vizConstraints);\n        vizPanel.add(vizLabel);\n        //$\n           vizConstraints.anchor = GridBagConstraints.WEST;\n           vizConstraints.weightx = 1.0;\n        //$\n        vizConstraints.gridwidth = GridBagConstraints.REMAINDER;\n        vizLayout.setConstraints(vizChoice,vizConstraints);\n        vizPanel.add(vizChoice);\n        vizLayout.setConstraints(filterChoice,vizConstraints);\n        vizPanel.add(filterChoice);\n        int b = TAB_BORDER_SIZE;\n        vizPanel.setBorder(BorderFactory.createEmptyBorder(b,b,b,b));\n        \n        votePanel = new JPanel();\n        /*{\n          public Dimension getPreferredSize()\n          {\n              return new Dimension(400,600);\n          }\n        };*/\n        \n        \n        weightPanel = new WeightVisualizationSettingsPanel(this);\n        GridBagLayout voteLayout = new GridBagLayout();\n        GridBagConstraints voteConstraints = new GridBagConstraints();\n        votePanel.setLayout(voteLayout);\n        JLabel defineThresholdMessageLabel = new JLabel(defineThresholdMessage);\n        //defineThresholdMessageLabel.setBorder(BorderFactory.createEmptyBorder(0,0,20,0));\n        \n        JPanel moreLessLabel = new JPanel();\n        /*{\n          public Dimension getPreferredSize()\n          {\n              return nodeThresholdSlider.getSize();\n          }\n        };*/\n        JLabel moreLabel = new JLabel(\"<< more\",JLabel.LEFT);\n        JLabel lessLabel = new JLabel(\"less >>\",JLabel.RIGHT);\n\n        moreLessLabel.setLayout(new BorderLayout());\n        moreLessLabel.add(BorderLayout.WEST,moreLabel);\n        moreLessLabel.add(BorderLayout.EAST,lessLabel);\n        \n        nodeThresholdSlider = new JSlider(0,100,50);\n        nodeThresholdSlider.addMouseListener(new java.awt.event.MouseAdapter() {\n            public void mousePressed(java.awt.event.MouseEvent me)\n            {\n                nodeMousePressed = true;\n            }\n        });\n        nodeThresholdSlider.setPaintTicks(true);\n        nodeThresholdSlider.setMajorTickSpacing(10);\n        nodeThresholdSlider.setPaintLabels(true);\n        java.util.Dictionary labels = nodeThresholdSlider.getLabelTable();\n        java.util.Enumeration e = labels.elements();\n        while(e.hasMoreElements())\n        {\n            Object label = e.nextElement();\n            if(label instanceof javax.swing.JComponent)\n            {\n                ((javax.swing.JComponent)label).setFont(new Font(\"Courier\",Font.PLAIN,9));\n            }\n        }\n        JLabel nodeLabel = new JLabel(\"Nodes:\");\n        \n        //voteConstraints.gridwidth = GridBagConstraints.REMAINDER;\n        //$\n          voteConstraints.gridwidth = 2;\n          voteConstraints.gridx = 0;\n          voteConstraints.gridy = 0;\n        //$\n        voteConstraints.insets = new Insets(0,0,20,0);\n        voteConstraints.anchor = GridBagConstraints.NORTHWEST;\n        //voteConstraints.weightx = 1.0;\n        voteLayout.setConstraints(defineThresholdMessageLabel,voteConstraints);\n        votePanel.add(defineThresholdMessageLabel);\n        \n        //voteConstraints.weightx =1.0;\n        voteConstraints.anchor = GridBagConstraints.CENTER;\n        voteConstraints.fill = GridBagConstraints.HORIZONTAL;\n        voteConstraints.insets = new Insets(0,0,0,0);\n        //$\n          voteConstraints.gridwidth = 1;\n          voteConstraints.gridx = 1;\n          voteConstraints.gridy = 1;\n        //$\n        voteLayout.setConstraints(moreLessLabel,voteConstraints);\n        votePanel.add(moreLessLabel);\n        \n        //$\n          voteConstraints.gridx = 0;\n          voteConstraints.gridy = 2;\n        //$\n        voteConstraints.fill = GridBagConstraints.NONE;\n        voteConstraints.anchor = GridBagConstraints.WEST;\n        //voteConstraints.weightx = 1.0;\n        voteConstraints.insets= new java.awt.Insets(0,40,0,0);\n        //voteConstraints.gridwidth = GridBagConstraints.RELATIVE;\n        voteConstraints.gridwidth = 1;\n        //$\n           //nodeLabel.setOpaque(true);\n           //nodeLabel.setBackground(Color.YELLOW);\n           voteConstraints.gridx = 0;\n           voteConstraints.gridy = 2;\n        //$\n        voteLayout.setConstraints(nodeLabel,voteConstraints);\n        votePanel.add(nodeLabel);\n        voteConstraints.insets = new java.awt.Insets(0,0,0,0);\n        //$\n          voteConstraints.gridx = 1;\n          voteConstraints.gridy = 2;\n        //$\n        voteLayout.setConstraints(nodeThresholdSlider,voteConstraints);\n\n        votePanel.add(nodeThresholdSlider);\n        percentageDisplay = new JLabel(nodeThresholdSlider.getValue()+ \"%\");\n        //have created methods below to turn this on and off (so that changes during setup don't affect the map)\n        //boolean method could be used to turn this on (if not already on) from outside this constructor\n        nodeThresholdSlider.addChangeListener(this);\n        //voteConstraints.gridwidth = GridBagConstraints.REMAINDER;\n        //$\n          voteConstraints.gridx = 2;\n          voteConstraints.gridy = 2;\n        //$\n        voteConstraints.insets = new java.awt.Insets(0,0,0,40);\n        voteLayout.setConstraints(percentageDisplay,voteConstraints);\n        votePanel.add(percentageDisplay);\n        \n        linkThresholdSlider = new JSlider(0,100,50);\n        linkThresholdSlider.setPaintTicks(true);\n        linkThresholdSlider.setMajorTickSpacing(10);\n        linkThresholdSlider.setPaintLabels(true);\n        java.util.Dictionary linkLabels = linkThresholdSlider.getLabelTable();\n        java.util.Enumeration le = linkLabels.elements();\n        while(le.hasMoreElements())\n        {\n            Object linkLabel = le.nextElement();\n            if(linkLabel instanceof javax.swing.JComponent)\n            {\n                ((javax.swing.JComponent)linkLabel).setFont(new Font(\"Courier\",Font.PLAIN,9));\n            }\n        }\n        JLabel linkPanel = new JLabel(\"Links:\");\n        voteConstraints.gridwidth = 1;\n        voteConstraints.insets= new java.awt.Insets(0,40,0,0);\n        //$\n           voteConstraints.gridx = 0;\n           voteConstraints.gridy = 3;\n        //$\n        voteLayout.setConstraints(linkPanel,voteConstraints);\n        votePanel.add(linkPanel);\n        voteConstraints.insets= new java.awt.Insets(0,0,0,0);\n        //$\n           voteConstraints.gridx = 1;\n           voteConstraints.gridy = 3;\n        //$\n        voteLayout.setConstraints(linkThresholdSlider,voteConstraints);\n        votePanel.add(linkThresholdSlider);\n        linkPercentageDisplay = new JLabel(linkThresholdSlider.getValue()+\"%\");\n        linkThresholdSlider.addChangeListener(this);\n        voteConstraints.insets = new java.awt.Insets(0,0,0,40);\n        //voteConstraints.gridwidth = GridBagConstraints.REMAINDER;\n        //$\n           voteConstraints.gridx = 2;\n           voteConstraints.gridy = 3;\n        //$\n        voteLayout.setConstraints(linkPercentageDisplay,voteConstraints);\n        votePanel.add(linkPercentageDisplay);\n    }","commit_id":"2fa16a438e25581db589c6ae402a6e6463cb2c2a","url":"https://github.com/VUE/VUE"},{"original_method":"public void createVoteMerge(LWMergeMap map)\n    {\n        ArrayList<ConnectivityMatrix> cms = new ArrayList<ConnectivityMatrix>();\n        Iterator<LWMap> i = /*map.getMapList()*/mapList.iterator();\n        while(i.hasNext())\n        {\n          cms.add(new ConnectivityMatrix(i.next()));\n        }\n        VoteAggregate voteAggregate= new VoteAggregate(cms);\n        voteAggregate.setNodeThreshold((double)(nodeThresholdSlider.getValue()/100.0));\n        voteAggregate.setLinkThreshold((double)(linkThresholdSlider.getValue()/100.0));\n        \n        //compute and create nodes in Merge Map\n        Iterator children = baseMap.getNodeIterator();\n        while(children.hasNext()) {\n           LWComponent comp = (LWComponent)children.next();\n           if(voteAggregate.isNodeVoteAboveThreshold(Util.getMergeProperty(comp)) ){\n                   LWNode node = (LWNode)comp.duplicate();\n                   map.addNode(node);\n           }\n        }\n        \n        //compute and create links in Merge Map\n        Iterator children1 = map.getNodeIterator();\n        while(children1.hasNext()) {\n           LWNode node1 = (LWNode)children1.next();\n           Iterator children2 = map.getNodeIterator();\n           while(children2.hasNext()) {\n               LWNode node2 = (LWNode)children2.next();\n               if(node2 != node1) {\n                  int c = voteAggregate.getConnection(Util.getMergeProperty(node1),Util.getMergeProperty(node2));\n                  if(c >0) {\n                     map.addLink(new LWLink(node1,node2));\n                  }\n               }\n           }\n        }\n        \n    }","id":82175,"modified_method":"public void createVoteMerge(LWMergeMap map)\n    {\n        ArrayList<ConnectivityMatrix> cms = new ArrayList<ConnectivityMatrix>();\n        \n        // why not map.getMapList()? is something wrong here?...\n        Iterator<LWMap> i = /*map.getMapList()*/mapList.iterator();\n        while(i.hasNext())\n        {\n          cms.add(new ConnectivityMatrix(i.next()));\n        }\n        VoteAggregate voteAggregate= new VoteAggregate(cms);\n        voteAggregate.setNodeThreshold((double)(nodeThresholdSlider.getValue()/100.0));\n        voteAggregate.setLinkThreshold((double)(linkThresholdSlider.getValue()/100.0));\n        \n        \n        //*** change to be same as for weight merge ***\n        \n        //compute and create nodes in Merge Map\n        \n        addMergeNodesForMap(map,baseMap,voteAggregate);\n        \n        if(!filterChoice.isSelected())\n        {\n          Iterator<LWMap> maps = map.getMapList().iterator();\n          while(maps.hasNext())\n          {\n            LWMap m = maps.next();\n            if(m!=baseMap)\n            {\n                addMergeNodesForMap(map,m,voteAggregate);\n            }\n          }\n        }\n        \n        /*Iterator children = baseMap.getNodeIterator();\n        while(children.hasNext()) {\n           LWComponent comp = (LWComponent)children.next();\n           if(voteAggregate.isNodeVoteAboveThreshold(Util.getMergeProperty(comp)) ){\n                   LWNode node = (LWNode)comp.duplicate();\n                   map.addNode(node);\n           }\n        }*/\n        \n        //compute and create links in Merge Map\n        Iterator children1 = map.getNodeIterator();\n        while(children1.hasNext()) {\n           LWNode node1 = (LWNode)children1.next();\n           Iterator children2 = map.getNodeIterator();\n           while(children2.hasNext()) {\n               LWNode node2 = (LWNode)children2.next();\n               if(node2 != node1) {\n                  int c = voteAggregate.getConnection(Util.getMergeProperty(node1),Util.getMergeProperty(node2));\n                  if(c >0) {\n                     map.addLink(new LWLink(node1,node2));\n                  }\n               }\n           }\n        }\n        \n    }","commit_id":"2fa16a438e25581db589c6ae402a6e6463cb2c2a","url":"https://github.com/VUE/VUE"},{"original_method":"public void generateMergeMap()\n    {\n            // create new map\n            LWMergeMap map = new LWMergeMap(LWMergeMap.getTitle());\n            \n            //set selection settings\n            map.setMapListSelectionType(sp.getMapListSelectionType());\n            \n            //todo: send all maps not just the active ones.\n            sp.fillMapList();\n            //System.out.println(\"mmc: \" + sp.getMapList().size());\n            map.setMapList(sp.getMapList());\n            System.out.println(\"mmc: map list size in generate merge map \" + map.getMapList().size());\n            map.setMapFileList(sp.getMapFileList());\n            \n            //set base map settings\n            map.setBaseMapSelectionType(getBaseMapSelectionType());\n            map.setBaseMapFile(getBaseMapFile());\n            \n            //loadBaseMap here? currently baseMap is either open and will\n            //be saved with the merge map or has already been loaded through\n            //GUI\n            //map.setBaseMap(baseMap);\n            //actually set base map below...\n            \n            //set visualization settings\n            map.setVisualizationSelectionType(vizChoice.getSelectedIndex());\n            try\n            { \n              if(vizChoice.getSelectedIndex()==1)\n                map.setStyleMapFile(StyleMap.saveToUniqueUserFile());\n              //System.out.println(\"mmc: \" + map.getStyleMapFile());\n              //System.out.prinltn(\"userfolder: \");\n            }\n            catch(Exception ex)\n            {\n              ex.printStackTrace();  \n            }\n            //map.setVoteThresholds();\n            //map.setWeightStyle();\n            \n            //load maps --should this be done as needed instead of always from file?\n            //-- how to determine which maps are intended to be loaded? From list\n            // of LWMaps in dialog?\n            \n            //merge maps map object\n            \n            if(vizChoice.getSelectedIndex() == 0)\n            {\n              sp.generate(map);\n              //mapList.clear();\n            }\n            else\n            {\n             \n               //LWMergeMap map = new LWMergeMap(LWMergeMap.getTitle());\n               //fail safe default value for base map is active map\n               if(baseMap == null)\n               {\n                 baseMap = VUE.getActiveMap();\n               }\n               Object baseMapObject = baseChoice.getSelectedItem();\n               if(baseMapObject instanceof LWMap)\n                 baseMap = (LWMap)baseMapObject;\n               //if(choice.getSelectedItem().equals(ALL_TEXT))\n               //{\n               //Iterator <LWMap> i = VUE.getLeftTabbedPane().getAllMaps();\n               //while(i.hasNext())\n               //{\n               // mapList.add(i.next());\n               //}\n               \n               //sp.fillMapList();\n               mapList = map.getMapList();//= sp.getMapList();\n               //need to get from sp\n               //map.setSelectChoice(\"all\");\n               \n               map.setBaseMap(baseMap);\n               \n               createWeightedMerge(map);\n               VUE.displayMap(map);\n               // creates class cast exception? (should be MapScrollPane apparently, really need\n               // an awkward run-time check..) Also, doesn't seem neccesary... (real problem\n               // is base map showing incorrectly until mouse over map)\n               //VUE.setActiveViewer((MapViewer)(VUE.getTabbedPane().getSelectedComponent()));\n               mapList.clear();\n                \n            } // */ to top of if/else\n    }","id":82176,"modified_method":"public void generateMergeMap()\n    {\n            // create new map\n            LWMergeMap map = new LWMergeMap(LWMergeMap.getTitle());\n            \n            //set selection settings\n            map.setMapListSelectionType(sp.getMapListSelectionType());\n            \n            //todo: send all maps not just the active ones.\n            // this is for file based selection.\n            sp.fillMapList();\n            //System.out.println(\"mmc: \" + sp.getMapList().size());\n            map.setMapList(sp.getMapList());\n            System.out.println(\"mmc: map list size in generate merge map \" + map.getMapList().size());\n            map.setMapFileList(sp.getMapFileList());\n            \n            //set base map settings\n            map.setBaseMapSelectionType(getBaseMapSelectionType());\n            map.setBaseMapFile(getBaseMapFile());\n            \n            //loadBaseMap here? currently baseMap is either open and will\n            //be saved with the merge map or has already been loaded through\n            //GUI\n            //map.setBaseMap(baseMap);\n            \n            \n            //set visualization settings\n            map.setVisualizationSelectionType(vizChoice.getSelectedIndex());\n            try\n            { \n              if(vizChoice.getSelectedIndex()==1)\n                map.setStyleMapFile(StyleMap.saveToUniqueUserFile());\n              //System.out.println(\"mmc: \" + map.getStyleMapFile());\n              //System.out.prinltn(\"userfolder: \");\n            }\n            catch(Exception ex)\n            {\n              ex.printStackTrace();  \n            }\n            //map.setVoteThresholds();\n            //map.setWeightStyle();\n            \n            //load maps --should this be done as needed instead of always from file?\n            //-- how to determine which maps are intended to be loaded? From list\n            // of LWMaps in dialog?\n            \n            //merge maps map object\n            \n            if(vizChoice.getSelectedIndex() == 0)\n            {\n              sp.generate(map);\n              //mapList.clear();\n            }\n            else\n            {\n             \n               //LWMergeMap map = new LWMergeMap(LWMergeMap.getTitle());\n               //fail safe default value for base map is active map\n               if(baseMap == null)\n               {\n                 baseMap = VUE.getActiveMap();\n               }\n               Object baseMapObject = baseChoice.getSelectedItem();\n               if(baseMapObject instanceof LWMap)\n                 baseMap = (LWMap)baseMapObject;\n               \n               //$\n                 //mapList = map.getMapList();//= sp.getMapList();\n               //$\n               \n               map.setBaseMap(baseMap);\n               \n               createWeightedMerge(map);\n               VUE.displayMap(map);\n               // creates class cast exception? (should be MapScrollPane apparently, really need\n               // an awkward run-time check..) Also, doesn't seem neccesary... (real problem\n               // is base map showing incorrectly until mouse over map)\n               //VUE.setActiveViewer((MapViewer)(VUE.getTabbedPane().getSelectedComponent()));\n               mapList.clear();\n                \n            } // */ to top of if/else\n    }","commit_id":"2fa16a438e25581db589c6ae402a6e6463cb2c2a","url":"https://github.com/VUE/VUE"},{"original_method":"public void createWeightedMerge(LWMergeMap map)\n    {\n        \n        System.out.println(\"mmc: createWeightedMerge mapList size: \" + mapList.size() );\n        System.out.println(\"mmc: createWeightedMerge LWMerge Map mapList size: \" + map.getMapList().size() );\n        \n        ArrayList<ConnectivityMatrix> cms = new ArrayList<ConnectivityMatrix>();\n        Iterator<LWMap> i = map.getMapList().iterator();\n        while(i.hasNext())\n        {\n          cms.add(new ConnectivityMatrix(i.next()));\n        }\n        \n        ArrayList<Style> styles = new ArrayList<Style>();\n        ArrayList<Style> linkStyles = new ArrayList<Style>();\n        \n        for(int si=0;si<5;si++)\n        {\n            styles.add(StyleMap.getStyle(\"node.w\" + (si +1)));\n        }\n        \n        for(int lsi=0;lsi<5;lsi++)\n        {\n            linkStyles.add(StyleMap.getStyle(\"link.w\" + (lsi +1)));\n        }\n        \n        //System.out.println(\"mmc: create weight aggregate\");\n        WeightAggregate weightAggregate = new WeightAggregate(cms);\n        \n        //compute and create nodes in Merge Map, apply just background style for now\n        Iterator children = baseMap.getNodeIterator();\n        while(children.hasNext()) {\n           LWNode comp = (LWNode)children.next();\n           LWNode node = (LWNode)comp.duplicate();\n           //System.out.println(\"Weighted Merge Demo: counts : \" + node.getRawLabel() + \":\" + weightAggregate.getNodeCount(node.getRawLabel()) + \" \" + weightAggregate.getCount());\n           double score = 100*weightAggregate.getNodeCount(Util.getMergeProperty(node))/weightAggregate.getCount();\n           if(score>100)\n           {\n               score = 100;\n           }\n           if(score<0)\n           {\n               score = 0;\n           }\n           //System.out.println(\"mmc: score: \" + score);\n           //System.out.println(\"mmc: getInterval(score): \" + getInterval(score));\n           Style currStyle = styles.get(getInterval(score)-1);\n           //System.out.println(\"Weighted Merge Demo: \" + currStyle + \" score: \" + score);\n           node.setFillColor(Style.hexToColor(currStyle.getAttribute(\"background\")));\n           map.addNode(node);\n        }\n        \n        //compute and create links in Merge Map\n        Iterator children1 = map.getNodeIterator();\n        while(children1.hasNext()) {\n           LWNode node1 = (LWNode)children1.next();\n           Iterator children2 = map.getNodeIterator();\n           while(children2.hasNext()) {\n               LWNode node2 = (LWNode)children2.next();\n               if(node2 != node1) {\n                  int c = weightAggregate.getConnection(Util.getMergeProperty(node1),Util.getMergeProperty(node2));\n                  \n                  //$\n                    // don't know if link already drawn.. need to keep track or explicitly check for link..\n                    //int c2 = weightAggregate.getConnection(Util.getMergeProperty(node2),Util.getMergeProperty(node2));\n                  //$\n                  \n                  if(c >0) {\n                    double score = 100*c/weightAggregate.getCount();\n                    if(score > 100)\n                    {\n                        score = 100;\n                    }\n                    if(score < 0)\n                    {\n                        score = 0;\n                    }\n                    Style currLinkStyle = linkStyles.get(getInterval(score)-1);\n                    //System.out.println(\"Weighted Merge Demo: \" + currLinkStyle + \" score: \" + score);\n                    LWLink link = new LWLink(node1,node2);\n                    link.setStrokeColor(Style.hexToColor(currLinkStyle.getAttribute(\"background\")));\n                    //also add label to link if present? (will be nonunique perhaps.. might make sense for voting?)\n                    map.addLink(link);\n                  }\n               }\n           }\n        }\n    }","id":82177,"modified_method":"public void createWeightedMerge(LWMergeMap map)\n    {\n        \n        //System.out.println(\"mmc: createWeightedMerge mapList size: \" + mapList.size() );\n        //System.out.println(\"mmc: createWeightedMerge LWMerge Map mapList size: \" + map.getMapList().size() );\n        \n        ArrayList<ConnectivityMatrix> cms = new ArrayList<ConnectivityMatrix>();\n        Iterator<LWMap> i = map.getMapList().iterator();\n        while(i.hasNext())\n        {\n          cms.add(new ConnectivityMatrix(i.next()));\n        }\n        \n        ArrayList<Style> nodeStyles = new ArrayList<Style>();\n        ArrayList<Style> linkStyles = new ArrayList<Style>();\n        \n        for(int si=0;si<5;si++)\n        {\n            nodeStyles.add(StyleMap.getStyle(\"node.w\" + (si +1)));\n        }\n        \n        for(int lsi=0;lsi<5;lsi++)\n        {\n            linkStyles.add(StyleMap.getStyle(\"link.w\" + (lsi +1)));\n        }\n        \n        //System.out.println(\"mmc: create weight aggregate\");\n        WeightAggregate weightAggregate = new WeightAggregate(cms);\n        \n        addMergeNodesForMap(map,baseMap,weightAggregate,nodeStyles);\n        \n        if(!filterChoice.isSelected())\n        {\n          Iterator<LWMap> maps = map.getMapList().iterator();\n          while(maps.hasNext())\n          {\n            LWMap m = maps.next();\n            if(m!=baseMap)\n            {\n                addMergeNodesForMap(map,m,weightAggregate,nodeStyles);\n            }\n          }\n        }\n        \n        //compute and create nodes in Merge Map, apply just background style for now\n        /* Iterator children = baseMap.getNodeIterator();\n        while(children.hasNext()) {\n           LWNode comp = (LWNode)children.next();\n           LWNode node = (LWNode)comp.duplicate();\n           //System.out.println(\"Weighted Merge Demo: counts : \" + node.getRawLabel() + \":\" + weightAggregate.getNodeCount(node.getRawLabel()) + \" \" + weightAggregate.getCount());\n           double score = 100*weightAggregate.getNodeCount(Util.getMergeProperty(node))/weightAggregate.getCount();\n           if(score>100)\n           {\n               score = 100;\n           }\n           if(score<0)\n           {\n               score = 0;\n           }\n           //System.out.println(\"mmc: score: \" + score);\n           //System.out.println(\"mmc: getInterval(score): \" + getInterval(score));\n           Style currStyle = styles.get(getInterval(score)-1);\n           //System.out.println(\"Weighted Merge Demo: \" + currStyle + \" score: \" + score);\n           node.setFillColor(Style.hexToColor(currStyle.getAttribute(\"background\")));\n           map.addNode(node);\n        }*/\n        \n        \n        \n        //compute and create links in Merge Map\n        Iterator children1 = map.getNodeIterator();\n        while(children1.hasNext()) {\n           LWNode node1 = (LWNode)children1.next();\n           Iterator children2 = map.getNodeIterator();\n           while(children2.hasNext()) {\n               LWNode node2 = (LWNode)children2.next();\n               if(node2 != node1) {\n                  int c = weightAggregate.getConnection(Util.getMergeProperty(node1),Util.getMergeProperty(node2));\n                  \n                  //$\n                    // don't know if link already drawn.. need to keep track or explicitly check for link..\n                    //int c2 = weightAggregate.getConnection(Util.getMergeProperty(node2),Util.getMergeProperty(node2));\n                  //$\n                  \n                  if(c >0) {\n                    double score = 100*c/weightAggregate.getCount();\n                    if(score > 100)\n                    {\n                        score = 100;\n                    }\n                    if(score < 0)\n                    {\n                        score = 0;\n                    }\n                    Style currLinkStyle = linkStyles.get(getInterval(score)-1);\n                    //System.out.println(\"Weighted Merge Demo: \" + currLinkStyle + \" score: \" + score);\n                    LWLink link = new LWLink(node1,node2);\n                    link.setStrokeColor(Style.hexToColor(currLinkStyle.getAttribute(\"background\")));\n                    //also add label to link if present? (will be nonunique perhaps.. might make sense for voting?)\n                    map.addLink(link);\n                  }\n               }\n           }\n        }\n    }","commit_id":"2fa16a438e25581db589c6ae402a6e6463cb2c2a","url":"https://github.com/VUE/VUE"},{"original_method":"public jetbrains.mps.openapi.editor.TextBuilder appendToTheRight(jetbrains.mps.openapi.editor.TextBuilder builder, boolean insertSpace) {\n    if (builder == ourEmptyTextBuilder) return this;\n    if (this == ourEmptyTextBuilder) return builder;\n    TextBuilder result = new TextBuilder();\n    String delim = insertSpace ? \" \" : \"\";\n    int delimWidth = delim.length();\n    \n    result.myWidth = this.myWidth + getWidth(builder) + delimWidth;\n    int builderHeight = builder.getLines().size();\n    int height = Math.max(this.getHeight(), builderHeight);\n\n    for (int i = 0; i < height; i++) {\n      if (i >= this.myLines.size()) {\n        result.myLines.add(makeWhitespaceStringBuffer(this.myWidth + delimWidth));\n      } else {\n        result.myLines.add(new StringBuffer(this.myLines.get(i).append(delim)));\n      }\n      if (i < builder.getLines().size()) {\n        result.myLines.get(i).append(builder.getLines().get(i));\n      }\n    }\n    result.normalizeWidth();\n    return result;\n  }","id":82178,"modified_method":"public jetbrains.mps.openapi.editor.TextBuilder appendToTheRight(jetbrains.mps.openapi.editor.TextBuilder builder, boolean insertSpace) {\n    if (builder == ourEmptyTextBuilder) return this;\n    if (this == ourEmptyTextBuilder) return builder;\n    TextBuilder result = new TextBuilder();\n    String delim = insertSpace ? \" \" : \"\";\n    int delimWidth = delim.length();\n    \n    result.myWidth = this.myWidth + getWidth(builder) + delimWidth;\n\n    Iterator<StringBuffer> builderIterator = builder.getLines().iterator();\n    Iterator<StringBuffer> myIterator = getLines().iterator();\n    while (myIterator.hasNext() || builderIterator.hasNext()){\n      StringBuffer resultLine;\n      if (myIterator.hasNext()) {\n        StringBuffer myCurrentLine = myIterator.next();\n        resultLine = new StringBuffer(myCurrentLine.append(delim));\n      } else {\n        resultLine = makeWhitespaceStringBuffer(this.myWidth + delimWidth);\n      }\n\n\n      if (builderIterator.hasNext()) {\n        StringBuffer builderCurrentLine = builderIterator.next();\n        resultLine.append(builderCurrentLine);\n      }\n      result.myLines.add(resultLine);\n    }\n    result.normalizeWidth();\n    return result;\n  }","commit_id":"1c5f02ab62f3b1ff50ef4eeb68c3b4614cb1dfd1","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  public List<StringBuffer> getLines() {\n    return myLines;\n  }","id":82179,"modified_method":"@Override\n  public Iterable<StringBuffer> getLines() {\n    return myLines;\n  }","commit_id":"1c5f02ab62f3b1ff50ef4eeb68c3b4614cb1dfd1","url":"https://github.com/JetBrains/MPS"},{"original_method":"/**\n     Returns all members of a given group\n     @param group The group name\n     @return Vector A list of Addresses\n     */\n    public Vector getMembers(String group) {\n        if(group == null) {\n            if(log.isErrorEnabled()) log.error(\"group is null\");\n            return null;\n        }\n        Vector result=_getMembers(group);\n        if(log.isTraceEnabled())\n            log.trace(\"GET(\" + group + \") --> \" + result);\n        return result;\n    }","id":82180,"modified_method":"/**\n     Returns all members of a given group\n     @param group The group name\n     @return List A list of Addresses\n     */\n    public List getMembers(String group) {\n        if(group == null) {\n            if(log.isErrorEnabled()) log.error(\"group is null\");\n            return null;\n        }\n        List result=_getMembers(group);\n        if(log.isTraceEnabled())\n            log.trace(\"GET(\" + group + \") --> \" + result);\n        return result;\n    }","commit_id":"418f6b3a49afb3367ced0898b16a089b3043d968","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     Creates the GossipClient\n     @param gossip_hosts List of IpAddresses\n     @param expiry Interval (in msecs) for the refresher task\n     */\n    public GossipClient(Vector gossip_hosts, long expiry) {\n        if(gossip_hosts == null) {\n            if(log.isErrorEnabled()) log.error(\"empty set of GossipServers given\");\n            return;\n        }\n        for(int i=0; i < gossip_hosts.size(); i++)\n            init((IpAddress) gossip_hosts.elementAt(i), expiry);\n    }","id":82181,"modified_method":"/**\n     Creates the GossipClient\n     @param gossip_hosts List of IpAddresses\n     @param expiry Interval (in msecs) for the refresher task\n     */\n    public GossipClient(Vector gossip_hosts, long expiry) {\n        if(gossip_hosts == null) {\n            if(log.isErrorEnabled()) log.error(\"empty set of GossipRouters given\");\n            return;\n        }\n        for(int i=0; i < gossip_hosts.size(); i++)\n            init((IpAddress) gossip_hosts.elementAt(i), expiry);\n    }","commit_id":"418f6b3a49afb3367ced0898b16a089b3043d968","url":"https://github.com/belaban/JGroups"},{"original_method":"final void init(IpAddress gossip_host, long expiry) {\n        EXPIRY_TIME=expiry;\n        addGossipServer(gossip_host);\n    }","id":82182,"modified_method":"final void init(IpAddress gossip_host, long expiry) {\n        EXPIRY_TIME=expiry;\n        addGossipRouter(gossip_host);\n    }","commit_id":"418f6b3a49afb3367ced0898b16a089b3043d968","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * Sends a GET_MBR_REQ to *all* GossipServers, merges responses.\n     */\n    Vector _getMembers(String group) {\n        Vector ret=new Vector();\n        Socket sock=null;\n        SocketAddress destAddr;\n        ObjectOutputStream out=null;\n        ObjectInputStream in=null;\n        IpAddress entry;\n        GossipData gossip_req, gossip_rsp;\n        Address mbr;\n\n        for(int i=0; i < gossip_servers.size(); i++) {\n            entry=(IpAddress) gossip_servers.elementAt(i);\n            if(entry.getIpAddress() == null || entry.getPort() == 0) {\n                if(log.isErrorEnabled()) log.error(\"entry.host or entry.port is null\");\n                continue;\n            }\n            \n            try {\n                // sock=new Socket(entry.getIpAddress(), entry.getPort());\n                sock=new Socket();\n                destAddr=new InetSocketAddress(entry.getIpAddress(), entry.getPort());\n                sock.connect(destAddr, SOCKET_TIMEOUT);\n                out=new ObjectOutputStream(sock.getOutputStream());\n\n                gossip_req=new GossipData(GossipData.GET_REQ, group, null, null);\n                // must send GossipData as fast as possible, otherwise the\n                // request might be rejected\n                out.writeObject(gossip_req);\n                out.flush();\n\n                in=new ObjectInputStream(sock.getInputStream());\n                gossip_rsp=(GossipData) in.readObject();\n                if(gossip_rsp.mbrs != null) { // merge with ret\n                    for(int j=0; j < gossip_rsp.mbrs.size(); j++) {\n                        mbr=(Address) gossip_rsp.mbrs.elementAt(j);\n                        if(!ret.contains(mbr))\n                            ret.addElement(mbr);\n                    }\n                }\n            }\n            catch(Exception ex) {\n                if(log.isErrorEnabled()) log.error(\"exception connecting to host \" + entry + \": \" + ex);\n            }\n            finally {\n                Util.closeOutputStream(out);\n                Util.closeInputStream(in);\n                if(sock != null) {\n                    try {sock.close();} catch(IOException e) {}\n                }\n            }\n        }\n\n        return ret;\n    }","id":82183,"modified_method":"/**\n     * Sends a GET_MBR_REQ to *all* GossipRouters, merges responses.\n     */\n    private List _getMembers(String group) {\n        List ret=new LinkedList();\n        Socket sock=null;\n        SocketAddress destAddr;\n        DataOutputStream out=null;\n        DataInputStream in=null;\n        IpAddress entry;\n        GossipData gossip_req, gossip_rsp;\n        Address mbr;\n\n        for(int i=0; i < gossip_servers.size(); i++) {\n            entry=(IpAddress) gossip_servers.elementAt(i);\n            if(entry.getIpAddress() == null || entry.getPort() == 0) {\n                if(log.isErrorEnabled()) log.error(\"entry.host or entry.port is null\");\n                continue;\n            }\n            \n            try {\n                // sock=new Socket(entry.getIpAddress(), entry.getPort());\n                sock=new Socket();\n                destAddr=new InetSocketAddress(entry.getIpAddress(), entry.getPort());\n                sock.connect(destAddr, SOCKET_TIMEOUT);\n                out=new DataOutputStream(sock.getOutputStream());\n\n                gossip_req=new GossipData(GossipRouter.GOSSIP_GET, group, null, null);\n                // must send GossipData as fast as possible, otherwise the\n                // request might be rejected\n                gossip_req.writeTo(out);\n                out.flush();\n\n                in=new DataInputStream(sock.getInputStream());\n                gossip_rsp=new GossipData();\n                gossip_rsp.readFrom(in);\n                if(gossip_rsp.mbrs != null) { // merge with ret\n                    for(Iterator it=gossip_rsp.mbrs.iterator(); it.hasNext();) {\n                        mbr=(Address)it.next();\n                        if(!ret.contains(mbr))\n                            ret.add(mbr);\n                    }\n                }\n            }\n            catch(Exception ex) {\n                if(log.isErrorEnabled()) log.error(\"exception connecting to host \" + entry, ex);\n            }\n            finally {\n                Util.close(out);\n                Util.close(in);\n                if(sock != null) {\n                    try {sock.close();} catch(IOException e) {}\n                }\n            }\n        }\n\n        return ret;\n    }","commit_id":"418f6b3a49afb3367ced0898b16a089b3043d968","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * Adds a GossipServer to be accessed.\n     */\n    public void addGossipServer(IpAddress gossip_host) {\n        if(!gossip_servers.contains(gossip_host))\n            gossip_servers.addElement(gossip_host);\n    }","id":82184,"modified_method":"/**\n     * Adds a GossipRouter to be accessed.\n     */\n    public void addGossipRouter(IpAddress gossip_host) {\n        if(!gossip_servers.contains(gossip_host))\n            gossip_servers.addElement(gossip_host);\n    }","commit_id":"418f6b3a49afb3367ced0898b16a089b3043d968","url":"https://github.com/belaban/JGroups"},{"original_method":"public void run() {\n            int num_items=0;\n            String group;\n            Vector mbrs;\n            Address mbr;\n\n             if(log.isTraceEnabled()) log.trace(\"refresher task is run\");\n            for(Enumeration e=groups.keys(); e.hasMoreElements();) {\n                group=(String) e.nextElement();\n                mbrs=(Vector) groups.get(group);\n                if(mbrs != null) {\n                    for(int i=0; i < mbrs.size(); i++) {\n                        mbr=(Address) mbrs.elementAt(i);\n                        if(log.isTraceEnabled()) log.trace(\"registering \" + group + \" : \" + mbr);\n                        register(group, mbr);\n                        num_items++;\n                    }\n                }\n            }\n            if(log.isTraceEnabled()) log.trace(\"refresher task done. Registered \" + num_items + \" items\");\n        }","id":82185,"modified_method":"public void run() {\n            int num_items=0;\n            String group;\n            List mbrs;\n            Address mbr;\n\n            if(log.isTraceEnabled()) log.trace(\"refresher task is run\");\n            for(Enumeration e=groups.keys(); e.hasMoreElements();) {\n                group=(String)e.nextElement();\n                mbrs=(List)groups.get(group);\n                if(mbrs != null) {\n                    for(Iterator it=mbrs.iterator(); it.hasNext();) {\n                        mbr=(Address)it.next();\n                        if(log.isTraceEnabled()) log.trace(\"registering \" + group + \" : \" + mbr);\n                        register(group, mbr);\n                        num_items++;\n                    }\n                }\n            }\n            if(log.isTraceEnabled()) log.trace(\"refresher task done. Registered \" + num_items + \" items\");\n        }","commit_id":"418f6b3a49afb3367ced0898b16a089b3043d968","url":"https://github.com/belaban/JGroups"},{"original_method":"public static void main(String[] args) {\n        Vector gossip_hosts=new Vector();\n        String host;\n        InetAddress ip_addr;\n        int port;\n        boolean get=false, register=false, keep_running=false;\n        String register_host=null;\n        int register_port=0;\n        String get_group=null, register_group=null;\n        GossipClient gossip_client=null;\n        Vector mbrs;\n        long expiry=20000;\n\n\n        for(int i=0; i < args.length; i++) {\n            if(\"-help\".equals(args[i])) {\n                usage();\n                return;\n            }\n            if(\"-expiry\".equals(args[i])) {\n                expiry=Long.parseLong(args[++i]);\n                continue;\n            }\n            if(\"-host\".equals(args[i])) {\n                host=args[++i];\n                port=Integer.parseInt(args[++i]);\n                try {\n                    ip_addr=InetAddress.getByName(host);\n                    gossip_hosts.addElement(new IpAddress(ip_addr, port));\n                }\n                catch(Exception ex) {\n                    System.err.println(ex);\n                }\n                continue;\n            }\n            if(\"-keep_running\".equals(args[i])) {\n                keep_running=true;\n                continue;\n            }\n            if(\"-get\".equals(args[i])) {\n                get=true;\n                get_group=args[++i];\n                continue;\n            }\n            if(\"-register\".equals(args[i])) {\n                register_group=args[++i];\n                register_host=args[++i];\n                register_port=Integer.parseInt(args[++i]);\n                register=true;\n                continue;\n            }\n            usage();\n            return;\n        }\n\n        if(gossip_hosts.size() == 0) {\n            System.err.println(\"At least 1 GossipServer has to be given\");\n            return;\n        }\n\n        if(!register && !get) {\n            System.err.println(\"Neither get nor register command given, will not do anything\");\n            return;\n        }\n\n        try {\n            gossip_client=new GossipClient(gossip_hosts, expiry);\n            if(register) {\n                System.out.println(\"Registering \" + register_group + \" --> \" + register_host + ':' + register_port);\n                gossip_client.register(register_group, new IpAddress(register_host, register_port));\n            }\n\n            if(get) {\n                System.out.println(\"Getting members for group \" + get_group);\n                mbrs=gossip_client.getMembers(get_group);\n                System.out.println(\"Members for group \" + get_group + \" are \" + mbrs);\n            }\n        }\n        catch(Exception ex) {\n            System.err.println(ex);\n        }\n        if(!keep_running)\n            gossip_client.stop();\n    }","id":82186,"modified_method":"public static void main(String[] args) {\n        Vector gossip_hosts=new Vector();\n        String host;\n        InetAddress ip_addr;\n        int port;\n        boolean get=false, register=false, keep_running=false;\n        String register_host=null;\n        int register_port=0;\n        String get_group=null, register_group=null;\n        GossipClient gossip_client=null;\n        List mbrs;\n        long expiry=20000;\n\n\n        for(int i=0; i < args.length; i++) {\n            if(\"-help\".equals(args[i])) {\n                usage();\n                return;\n            }\n            if(\"-expiry\".equals(args[i])) {\n                expiry=Long.parseLong(args[++i]);\n                continue;\n            }\n            if(\"-host\".equals(args[i])) {\n                host=args[++i];\n                port=Integer.parseInt(args[++i]);\n                try {\n                    ip_addr=InetAddress.getByName(host);\n                    gossip_hosts.addElement(new IpAddress(ip_addr, port));\n                }\n                catch(Exception ex) {\n                    System.err.println(ex);\n                }\n                continue;\n            }\n            if(\"-keep_running\".equals(args[i])) {\n                keep_running=true;\n                continue;\n            }\n            if(\"-get\".equals(args[i])) {\n                get=true;\n                get_group=args[++i];\n                continue;\n            }\n            if(\"-register\".equals(args[i])) {\n                register_group=args[++i];\n                register_host=args[++i];\n                register_port=Integer.parseInt(args[++i]);\n                register=true;\n                continue;\n            }\n            usage();\n            return;\n        }\n\n        if(gossip_hosts.size() == 0) {\n            System.err.println(\"At least 1 GossipRouter has to be given\");\n            return;\n        }\n\n        if(!register && !get) {\n            System.err.println(\"Neither get nor register command given, will not do anything\");\n            return;\n        }\n\n        try {\n            gossip_client=new GossipClient(gossip_hosts, expiry);\n            if(register) {\n                System.out.println(\"Registering \" + register_group + \" --> \" + register_host + ':' + register_port);\n                gossip_client.register(register_group, new IpAddress(register_host, register_port));\n            }\n\n            if(get) {\n                System.out.println(\"Getting members for group \" + get_group);\n                mbrs=gossip_client.getMembers(get_group);\n                System.out.println(\"Members for group \" + get_group + \" are \" + mbrs);\n            }\n        }\n        catch(Exception ex) {\n            System.err.println(ex);\n        }\n        if(!keep_running)\n            gossip_client.stop();\n    }","commit_id":"418f6b3a49afb3367ced0898b16a089b3043d968","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * Registers the group|mbr with *all* GossipServers.\n     * todo: parallelize GossipServer access\n     */\n    void _register(String group, Address mbr) {\n        Socket sock;\n        ObjectOutputStream out;\n        IpAddress entry;\n        GossipData gossip_req;\n\n        for(int i=0; i < gossip_servers.size(); i++) {\n            entry=(IpAddress) gossip_servers.elementAt(i);\n            if(entry.getIpAddress() == null || entry.getPort() == 0) {\n                if(log.isErrorEnabled()) log.error(\"entry.host or entry.port is null\");\n                continue;\n            }\n            try {\n                if(log.isTraceEnabled())\n                    log.trace(\"REGISTER(\" + group + \", \" + entry.getIpAddress() + ':' + entry.getPort() + \")\");\n                sock=new Socket(entry.getIpAddress(), entry.getPort());\n                out=new ObjectOutputStream(sock.getOutputStream());\n                gossip_req=new GossipData(GossipData.REGISTER_REQ, group, mbr, null);\n                // must send GossipData as fast as possible, otherwise the\n                // request might be rejected\n                out.writeObject(gossip_req);\n                out.flush();\n                sock.close();\n            }\n            catch(Exception ex) {\n                if(log.isErrorEnabled()) log.error(\"exception connecting to host \" + entry + \": \" + ex);\n            }\n        }\n    }","id":82187,"modified_method":"/**\n     * Registers the group|mbr with *all* GossipRouters.\n     */\n    void _register(String group, Address mbr) {\n        Socket sock=null;\n        DataOutputStream out=null;\n        IpAddress entry;\n        GossipData gossip_req;\n\n        for(int i=0; i < gossip_servers.size(); i++) {\n            entry=(IpAddress) gossip_servers.elementAt(i);\n            if(entry.getIpAddress() == null || entry.getPort() == 0) {\n                if(log.isErrorEnabled()) log.error(\"entry.host or entry.port is null\");\n                continue;\n            }\n            try {\n                if(log.isTraceEnabled())\n                    log.trace(\"REGISTER(\" + group + \", \" + mbr + \") with GossipRouter at \" + entry.getIpAddress() + ':' + entry.getPort());\n                sock=new Socket(entry.getIpAddress(), entry.getPort());\n                out=new DataOutputStream(sock.getOutputStream());\n                gossip_req=new GossipData(GossipRouter.REGISTER, group, mbr, null);\n                // must send GossipData as fast as possible, otherwise the\n                // request might be rejected\n                gossip_req.writeTo(out);\n                out.flush();\n            }\n            catch(Exception ex) {\n                if(log.isErrorEnabled()) log.error(\"exception connecting to host \" + entry, ex);\n            }\n            finally {\n                Util.close(out);\n                if(sock != null) {\n                    try {sock.close();} catch(IOException e) {}\n                }\n            }\n        }\n    }","commit_id":"418f6b3a49afb3367ced0898b16a089b3043d968","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     Adds the member to the given group. If the group already has an entry for the member,\n     its timestamp will be updated, preventing the cache cleaner from removing the entry.<p>\n     The entry will be registered <em>with all GossipServers that GossipClient is configured to access<\/em>\n     */\n    public void register(String group, Address mbr) {\n        Vector mbrs;\n\n        if(group == null || mbr == null) {\n            if(log.isErrorEnabled()) log.error(\"group or mbr is null\");\n            return;\n        }\n        mbrs=(Vector) groups.get(group);\n        if(mbrs == null) {\n            mbrs=new Vector();\n            mbrs.addElement(mbr);\n            groups.put(group, mbrs);\n        }\n        else {\n            if(!mbrs.contains(mbr))\n                mbrs.addElement(mbr);\n        }\n\n        _register(group, mbr); // update entry in GossipServer\n\n        if(!timer_running) {\n            timer=new Timer(true);\n            refresher_task=new Refresher();\n            timer.schedule(refresher_task, EXPIRY_TIME, EXPIRY_TIME);\n            timer_running=true;\n        }\n    }","id":82188,"modified_method":"/**\n     Adds the member to the given group. If the group already has an entry for the member,\n     its timestamp will be updated, preventing the cache cleaner from removing the entry.<p>\n     The entry will be registered <em>with all GossipRouters that GossipClient is configured to access<\/em>\n     */\n    public void register(String group, Address mbr) {\n        if(group == null || mbr == null) {\n            if(log.isErrorEnabled()) log.error(\"group or mbr is null\");\n            return;\n        }\n\n        List mbrs=(List)groups.get(group);\n        if(mbrs == null) {\n            mbrs=new LinkedList();\n            mbrs.add(mbr);\n            groups.put(group, mbrs);\n        }\n        else {\n            if(!mbrs.contains(mbr))\n                mbrs.add(mbr);\n        }\n\n        _register(group, mbr); // update entry in GossipRouter\n\n        if(refresher_enabled) {\n            if(!timer_running) {\n                timer=new Timer(true);\n                refresher_task=new Refresher();\n                timer.schedule(refresher_task, EXPIRY_TIME, EXPIRY_TIME);\n                timer_running=true;\n            }\n        }\n    }","commit_id":"418f6b3a49afb3367ced0898b16a089b3043d968","url":"https://github.com/belaban/JGroups"},{"original_method":"private void sendToAllMembersInGroup(String groupname, byte[] msg, Address sender) {\n        List val;\n        val=(List)routingTable.get(groupname);\n        if(val == null || val.size() == 0) {\n            return;\n        }\n\n        synchronized(val) {\n            for(Iterator i=val.iterator(); i.hasNext();) {\n                AddressEntry ae = (AddressEntry)i.next();\n                if(ae.addr != null && ae.addr.equals(sender)) {\n                    // if(log.isTraceEnabled())\n                       // log.trace(\"dropped message to sender of multicast (\" + ae.addr + \")\");\n                    continue;\n                }\n                DataOutputStream dos = ae.output;\n\n                if (dos!=null) {\n                    // send only to 'connected' members\n                    try {\n                        sendToMember(null, dos, msg);\n                    }\n                    catch(Exception e) {\n                        if(log.isWarnEnabled()) log.warn(\"cannot send to \"+ae.addr+\": \"+e.getMessage());\n                        ae.destroy(); // this closes the socket\n                        i.remove();\n                    }\n                }\n            }\n        }\n    }","id":82189,"modified_method":"private void sendToAllMembersInGroup(String groupname, byte[] msg, Address sender) {\n        List val;\n        val=(List)routingTable.get(groupname);\n        if(val == null || val.size() == 0) {\n            return;\n        }\n\n        synchronized(val) {\n            for(Iterator i=val.iterator(); i.hasNext();) {\n                AddressEntry ae=(AddressEntry)i.next();\n                DataOutputStream dos=ae.output;\n\n                if(dos != null) {\n                    // send only to 'connected' members\n                    try {\n                        sendToMember(null, dos, msg, sender);\n                    }\n                    catch(Exception e) {\n                        if(log.isWarnEnabled()) log.warn(\"cannot send to \" + ae.addr + \": \" + e.getMessage());\n                        ae.destroy(); // this closes the socket\n                        i.remove();\n                    }\n                }\n            }\n        }\n    }","commit_id":"418f6b3a49afb3367ced0898b16a089b3043d968","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * Cleans the routing tables while the Router is going down.\n     **/\n    private void cleanup() {\n\n        // shutdown the routing threads and cleanup the tables\n        synchronized(routingTable) {\n            for(Iterator i=routingTable.keySet().iterator(); i.hasNext();) {\n                String gname=(String)i.next();\n                List l=(List)routingTable.get(gname);\n                if (l!=null) {\n                    for(Iterator j=l.iterator(); j.hasNext(); ) {\n                        AddressEntry e = (AddressEntry)j.next();\n                        e.destroy();\n                    }\n                }\n            }\n            routingTable.clear();\n            if(log.isInfoEnabled()) log.info(\"routing table cleared\");\n        }\n        synchronized(gossipTable) {\n            gossipTable.clear();\n            if(log.isInfoEnabled()) log.info(\"gossip table cleared\");\n        }\n\n    }","id":82190,"modified_method":"/**\n     * Cleans the routing tables while the Router is going down.\n     */\n    private void cleanup() {\n\n        // shutdown the routing threads and cleanup the tables\n        synchronized(routingTable) {\n            for(Iterator i=routingTable.keySet().iterator(); i.hasNext();) {\n                String gname=(String)i.next();\n                List l=(List)routingTable.get(gname);\n                if(l != null) {\n                    for(Iterator j=l.iterator(); j.hasNext();) {\n                        AddressEntry e=(AddressEntry)j.next();\n                        e.destroy();\n                    }\n                }\n            }\n            routingTable.clear();\n        }\n        synchronized(gossipTable) {\n            gossipTable.clear();\n        }\n\n    }","commit_id":"418f6b3a49afb3367ced0898b16a089b3043d968","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * The main server loop. Runs on the JGroups Router Main Thread.\n     **/\n    private void mainLoop() {\n        Socket sock = null;\n        DataInputStream input = null;\n        DataOutputStream output = null;\n        Address peer_addr = null;\n        byte[] buf;\n        int len, type = -1;\n        String gname = null;\n        Date d;\n        boolean up = true;\n\n        if(bindAddress == null) {\n            bindAddress=srvSock.getInetAddress();\n        }\n        d=new Date();\n        System.out.println(\"GossipRouter started at \" + d +\n                           \"\\nListening on port \" + port + \" bound on address \" + bindAddress + '\\n');\n        d=null;\n\n        while(up) {\n\n            try {\n                sock=srvSock.accept();\n                sock.setSoLinger(true, 500);\n\n                if(log.isTraceEnabled()) {\n                    log.trace(\"router accepted connection from \"+sock);\n                }\n\n                final BufferedInputStream bis = new BufferedInputStream(sock.getInputStream());\n                final Promise waitArea = new Promise();\n                final Socket s = sock;\n\n                // @since 2.2.1\n                // Handling of gossip requests on a different thread allows \n                // the GossipRouter to serve both routing and gossip requests.\n                // The GossipRouter stays backward compatible, old clients \n                // shouldn't be aware they talk to a merged Router/GossipServer.\n\n               Thread t = new Thread(new Runnable() {\n                        public void run() {\n                            ObjectInputStream ois = null;\n                            try {\n                                bis.mark(MARK_BUFFER_SIZE);\n                                // blocks until gossip request or 'forever'\n                                ois = new ObjectInputStream(bis);\n                                GossipData gossip_req = (GossipData)ois.readObject();\n\n                                // it is a gossip request, set the main thread free\n                                waitArea.setResult(GOSSIP_REQUEST);\n\n                                GossipData gresp = processGossip(gossip_req);\n                                if (gresp != null) {\n                                    ObjectOutputStream oos = new ObjectOutputStream(s.getOutputStream());\n                                    oos.writeObject(gresp);\n                                    oos.close();\n                                }\n                                bis.close();\n                                s.close();\n                            }\n                            catch(Exception e) {\n                                if(log.isDebugEnabled()) log.debug(\"gossip thread exception :\"+e);\n                                waitArea.setResult(GOSSIP_FAILURE);\n                            }\n                            finally {\n                                try {\n                                    ois.close();\n                                }\n                                catch(Exception e) {\n                                    // OK\n                                }\n                            }\n                        }\n                    }, \"Gossip Request Thread\");\n\n                t.start();\n\n                Object waitResult = waitArea.getResult(gossipRequestTimeout);\n                waitArea.reset();\n\n                if (waitResult != null) {\n                    // gossip request, let the gossip thread deal with it\n                    continue;\n                }\n\n                // timeout, this is a routing request\n\n                peer_addr = new IpAddress(sock.getInetAddress(), sock.getPort());\n                output = new DataOutputStream(sock.getOutputStream());\n                \n                // return the address of the peer so it can set it\n                buf = Util.objectToByteBuffer(peer_addr);\n                output.writeInt(buf.length);\n                output.write(buf, 0, buf.length);\n\n                // The gossip thread still waits for a serialized object, so\n                // wait that read to fail. If it actually gets a GossipData,\n                // that's an error condition we should handle here\n                waitResult = waitArea.getResult(routingClientReplyTimeout);\n\n                if (waitResult == null) {\n                    // timeout\n                    throw new Exception(\"Timeout waiting for router client answer\");\n                }\n                else if (waitResult == GOSSIP_REQUEST) {\n                    // lazy gossip client, let it handle its business, it will\n                    // fail anyway\n                    output.close();\n                    continue;\n                }\n\n                bis.reset();\n                input=new DataInputStream(bis);\n\n                type=input.readInt();\n                if(log.isTraceEnabled()) {\n                    log.trace(\"request of type \"+requestTypeToString(type));\n                }\n\n                gname=input.readUTF();\n\n\n                // We can have 2 kinds of messages at this point: GET requests or REGISTER requests.\n                // GET requests are processed right here, REGISTRATION requests cause the spawning of\n                // a separate thread handling it (long running thread as it will do the message routing\n                // on behalf of that client for the duration of the client's lifetime).\n\n                switch(type) {\n                case GossipRouter.GET:\n                    processGetRequest(sock, output, gname); // closes sock after processing\n                    break;\n                case GossipRouter.DUMP:\n                    processDumpRequest(sock, output); // closes sock after processing\n                    break;\n                case GossipRouter.REGISTER:\n                    Address addr;\n                    len=input.readInt();\n                    buf=new byte[len];\n                    input.readFully(buf, 0, buf.length); // read Address\n                    addr=(Address)Util.objectFromByteBuffer(buf);\n                    SocketThread st = new SocketThread(sock, input, addr);\n                    addEntry(gname, new AddressEntry(addr, sock, st, output));\n                    st.start();\n                    break;\n                case GossipRouter.SHUTDOWN:\n                    if(log.isInfoEnabled()) log.info(\"router shutting down\");\n                    output.writeInt(SHUTDOWN_OK);\n                    output.flush();\n                    try {\n                        sock.close();\n                    }\n                    catch(Exception e) {\n                        // OK, going down anyway\n                    }\n                    up = false;\n                    continue;\n                default:\n                    if(log.isErrorEnabled()) log.error(\"request of type \" + type + \" not recognized\");\n                }\n            }\n            catch(Exception e) {\n                if(log.isErrorEnabled()) log.error(\"failure handling a client connection: \" + e.getMessage(), e);\n                try {\n                    sock.close();\n                }\n                catch(IOException e2) {\n                    if(log.isWarnEnabled()) log.warn(\"failed to close socket \"+sock);\n                }\n            }\n        }\n    }","id":82191,"modified_method":"/**\n     * The main server loop. Runs on the JGroups Router Main Thread.\n     */\n    private void mainLoop() {\n        Socket sock=null;\n        DataInputStream input=null;\n        DataOutputStream output=null;\n        Address peer_addr=null, mbr;\n\n        if(bindAddress == null) {\n            bindAddress=srvSock.getInetAddress();\n        }\n        System.out.println(\"GossipRouter started at \" + new Date() +\n                \"\\nListening on port \" + port + \" bound on address \" + bindAddress + '\\n');\n\n        GossipData req;\n        String group;\n\n        while(up && srvSock != null) {\n            try {\n                sock=srvSock.accept();\n                sock.setSoLinger(true, 500);\n                input=new DataInputStream(sock.getInputStream());\n                // if(log.isTraceEnabled())\n                   // log.trace(\"accepted connection from \" + sock);\n\n                req=new GossipData();\n                req.readFrom(input);\n\n                switch(req.getType()) {\n                    case GossipRouter.REGISTER:\n                        mbr=req.getAddress();\n                        group=req.getGroup();\n                        if(log.isTraceEnabled())\n                            log.trace(\"REGISTER(\" + group + \", \" + mbr + \")\");\n                        if(group == null || mbr == null) {\n                            if(log.isErrorEnabled()) log.error(\"group or member is null, cannot register member\");\n                        }\n                        else\n                            addGossipEntry(group, new AddressEntry(mbr));\n                        Util.close(input);\n                        Util.close(sock);\n                        break;\n\n                    case GossipRouter.UNREGISTER:\n                        mbr=req.getAddress();\n                        group=req.getGroup();\n                        if(log.isTraceEnabled())\n                            log.trace(\"UNREGISTER(\" + group + \", \" + mbr + \")\");\n                        if(group == null || mbr == null) {\n                            if(log.isErrorEnabled()) log.error(\"group or member is null, cannot unregister member\");\n                        }\n                        else\n                            removeGossipEntry(group, mbr);\n                        Util.close(input);\n                        Util.close(output);\n                        Util.close(sock);\n                        break;\n\n                    case GossipRouter.GOSSIP_GET:\n                        group=req.getGroup();\n                        List mbrs=null;\n                        List l=(List)gossipTable.get(group);\n                        if(l != null) {\n                            mbrs=new LinkedList();\n                            for(Iterator i=l.iterator(); i.hasNext();) {\n                                AddressEntry e=(AddressEntry)i.next();\n                                mbrs.add(e.addr);\n                            }\n                        }\n                        if(log.isTraceEnabled())\n                            log.trace(\"GOSSIP_GET(\" + group + \") --> \" + mbrs);\n                        output=new DataOutputStream(sock.getOutputStream());\n                        GossipData rsp=new GossipData(GossipRouter.GET_RSP, group, null, mbrs);\n                        rsp.writeTo(output);\n                        Util.close(input);\n                        Util.close(output);\n                        Util.close(sock);\n                        break;\n\n                    case GossipRouter.ROUTER_GET:\n                        group=req.getGroup();\n                        output=new DataOutputStream(sock.getOutputStream());\n                        List ret=getMembers(group);\n                        if(log.isTraceEnabled())\n                            log.trace(\"ROUTER_GET(\" + group + \") --> \" + ret);\n                        rsp=new GossipData(GossipRouter.GET_RSP, group, null, ret);\n                        rsp.writeTo(output);\n                        Util.close(input);\n                        Util.close(output);\n                        Util.close(sock);\n                        break;\n\n                    case GossipRouter.DUMP:\n                        output=new DataOutputStream(sock.getOutputStream());\n                        output.writeUTF(dumpRoutingTable());\n                        Util.close(input);\n                        Util.close(output);\n                        Util.close(sock);\n                        break;\n\n                    case GossipRouter.CONNECT:\n                        output=new DataOutputStream(sock.getOutputStream());\n                        peer_addr=new IpAddress(sock.getInetAddress(), sock.getPort());\n                        output=new DataOutputStream(sock.getOutputStream());\n                        // return the address of the peer so it can set it\n                        Util.writeAddress(peer_addr, output);\n                        String group_name=req.getGroup();\n                        if(log.isTraceEnabled())\n                            log.trace(\"CONNECT(\" + group_name + \", \" + peer_addr + \")\");\n                        SocketThread st=new SocketThread(sock, input, peer_addr);\n                        addEntry(group_name, new AddressEntry(peer_addr, sock, st, output));\n                        st.start();\n                        break;\n\n                    case GossipRouter.DISCONNECT:\n                        Address addr=req.getAddress();\n                        group_name=req.getGroup();\n                        removeEntry(group_name, addr);\n                        if(log.isTraceEnabled())\n                            log.trace(\"DISCONNECT(\" + group_name + \", \" + addr + \")\");\n                        Util.close(input);\n                        Util.close(output);\n                        Util.close(sock);\n                        break;\n\n                    case GossipRouter.SHUTDOWN:\n                        if(log.isInfoEnabled()) log.info(\"router shutting down\");\n                        Util.close(input);\n                        Util.close(output);\n                        Util.close(sock);\n                        up=false;\n                        break;\n                    default:\n                        if(log.isWarnEnabled())\n                            log.warn(\"received unkown gossip request (gossip=\" + req + ')');\n                        break;\n                }\n            }\n            catch(Exception e) {\n                if(up)\n                    if(log.isErrorEnabled()) log.error(\"failure handling a client connection\", e);\n                Util.close(input);\n                Util.close(output);\n                Util.close(sock);\n            }\n        }\n    }","commit_id":"418f6b3a49afb3367ced0898b16a089b3043d968","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * JBoss MBean lifecycle operation. Called after create(). When this method\n     * is called, the managed attributes have already been set.<br>\n     * Brings the Router in fully functional state.\n     **/\n    public void start() throws Exception {\n\n        if (srvSock!=null) {\n            throw new Exception(\"Router already started.\");\n        }\n\n        if (bindAddressString!=null) {\n            bindAddress = InetAddress.getByName(bindAddressString);\n            srvSock = new ServerSocket(port, 50, bindAddress);  \n        }\n        else {\n            srvSock = new ServerSocket(port, 50);  \n        }\n\n        // start the main server thread\n        new Thread(new Runnable() {\n                public void run() {\n                    mainLoop();\n                    cleanup();\n                }\n            }, \"JGroups Router Main Thread\").start();\n\n        // starts the cache sweeper as daemon thread, so we won't block on it\n        // upon termination\n        timer = new Timer(true);   \n        timer.schedule(new TimerTask() {\n                public void run() {\n                    sweep();\n                }\n            }, expiryTime, expiryTime);\n    }","id":82192,"modified_method":"/**\n     * JBoss MBean lifecycle operation. Called after create(). When this method\n     * is called, the managed attributes have already been set.<br>\n     * Brings the Router in fully functional state.\n     */\n    public void start() throws Exception {\n        if(srvSock != null) {\n            throw new Exception(\"Router already started.\");\n        }\n\n        if(bindAddressString != null) {\n            bindAddress=InetAddress.getByName(bindAddressString);\n            srvSock=new ServerSocket(port, 50, bindAddress);\n        }\n        else {\n            srvSock=new ServerSocket(port, 50);\n        }\n\n        up=true;\n\n        // start the main server thread\n        new Thread(new Runnable() {\n            public void run() {\n                mainLoop();\n                cleanup();\n            }\n        }, \"GossipRouter\").start();\n\n        // starts the cache sweeper as daemon thread, so we won't block on it\n        // upon termination\n        timer=new Timer(true);\n        timer.schedule(new TimerTask() {\n            public void run() {\n                sweep();\n            }\n        }, expiryTime, expiryTime);\n    }","commit_id":"418f6b3a49afb3367ced0898b16a089b3043d968","url":"https://github.com/belaban/JGroups"},{"original_method":"/**   \n     * Removes expired gossip entries (entries older than EXPIRY_TIME msec).\n     * @since 2.2.1\n     */\n    private void sweep() {\n\n        long diff, currentTime=System.currentTimeMillis();\n        int num_entries_removed=0;\n        String key=null;\n        List val;\n\n        if(log.isTraceEnabled()) log.trace(\"running sweep\");\n\n        synchronized(gossipTable) {\n            for(Iterator i=gossipTable.keySet().iterator(); i.hasNext();) {\n                key=(String)i.next();\n                val=(List)gossipTable.get(key);\n                if(val != null) {\n                    for(Iterator j=val.iterator(); j.hasNext();) {\n                        AddressEntry ae = (AddressEntry)j.next();\n                        diff=currentTime - ae.timestamp;\n                        if(diff > expiryTime) {\n                            j.remove();\n                            if(log.isTraceEnabled())\n                                log.trace(\"Removed member \" + ae + \" from group \" + key + '(' + diff + \" msecs old)\");\n                            num_entries_removed++;\n                        }\n                    }\n                }\n                if(val.size() == 0)\n                    i.remove();\n            }\n        }\n        \n        if(num_entries_removed > 0) {\n            if(log.isTraceEnabled()) log.trace(\"done (removed \" + num_entries_removed + \" entries)\");\n        }\n    }","id":82193,"modified_method":"/**\n     * Removes expired gossip entries (entries older than EXPIRY_TIME msec).\n     * @since 2.2.1\n     */\n    private void sweep() {\n\n        long diff, currentTime=System.currentTimeMillis();\n        int num_entries_removed=0;\n        String key=null;\n        List val;\n\n        synchronized(gossipTable) {\n            for(Iterator i=gossipTable.keySet().iterator(); i.hasNext();) {\n                key=(String)i.next();\n                val=(List)gossipTable.get(key);\n                if(val != null) {\n                    for(Iterator j=val.iterator(); j.hasNext();) {\n                        AddressEntry ae=(AddressEntry)j.next();\n                        diff=currentTime - ae.timestamp;\n                        if(diff > expiryTime) {\n                            j.remove();\n                            if(log.isTraceEnabled())\n                                log.trace(\"removed \" + ae + \" from \" + key + \" (\" + diff + \" msecs old)\");\n                            num_entries_removed++;\n                        }\n                    }\n                }\n                if(val.size() == 0)\n                    i.remove();\n            }\n        }\n\n        if(num_entries_removed > 0) {\n            if(log.isTraceEnabled()) log.trace(\"done (removed \" + num_entries_removed + \" entries)\");\n        }\n    }","commit_id":"418f6b3a49afb3367ced0898b16a089b3043d968","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * JBoss MBean lifecycle operation. The JMX agent allways calls this method\n     * before destroy(). Close connections and frees resources.\n     **/\n    public void stop() {\n\n        if (srvSock==null) {\n            if(log.isWarnEnabled()) log.warn(\"Router already stopped\");\n            return;\n        }\n\n        timer.cancel();\n        shutdown();\n        try {\n            srvSock.close();\n        }\n        catch(Exception e) {\n            if(log.isErrorEnabled()) log.error(\"Failed to close server socket: \"+e);\n        }\n        // exiting the mainLoop will clean the tables\n        srvSock = null;\n        if(log.isInfoEnabled()) log.info(\"Router stopped\");\n    }","id":82194,"modified_method":"/**\n     * JBoss MBean lifecycle operation. The JMX agent allways calls this method\n     * before destroy(). Close connections and frees resources.\n     */\n    public void stop() {\n        up=false;\n\n        if(srvSock == null) {\n            if(log.isWarnEnabled()) log.warn(\"router already stopped\");\n            return;\n        }\n\n        timer.cancel();\n        shutdown();\n        try {\n            srvSock.close();\n        }\n        catch(Exception e) {\n            if(log.isErrorEnabled()) log.error(\"Failed to close server socket: \" + e);\n        }\n        // exiting the mainLoop will clean the tables\n        srvSock=null;\n        if(log.isInfoEnabled()) log.info(\"router stopped\");\n    }","commit_id":"418f6b3a49afb3367ced0898b16a089b3043d968","url":"https://github.com/belaban/JGroups"},{"original_method":"public void run() {\n            byte[] buf;\n            int len;\n            Address dst_addr=null;\n            String gname;\n\n            while(active) {\n                try {\n                    // 1. Group name is first\n                    gname=input.readUTF();\n\n                    // 2. Second is the destination address\n                    dst_addr=Util.readAddress(input);\n\n                    if (log.isTraceEnabled()) {\n                        log.trace(\"group \" + gname + \", routing request to \" + (dst_addr == null ? \"all\" : dst_addr.toString()));\n                    }\n\n                    // 3. Then the length of the byte buffer representing the message\n                    len=input.readInt();\n                    if(len == 0) {\n                        if(log.isWarnEnabled()) log.warn(\"received null message\");\n                        continue;\n                    }\n\n                    // 4. Finally the message itself, as a byte buffer\n                    buf=new byte[len];\n                    input.readFully(buf, 0, buf.length);  // message\n\n                    // Then route the message to everyone else except me\n                    route(dst_addr, gname, buf, addr);\n                }\n                catch(EOFException io_ex) {\n                    if(log.isTraceEnabled())\n                        log.trace(\"client \" +sock.getInetAddress().getHostName() + ':' + sock.getPort() +\n                                  \" closed connection; removing it from routing table\");\n                    removeEntry(sock); // will close socket\n                    return;\n                }\n                catch(Exception e) {\n                    if(log.isErrorEnabled()) log.error(\"exception=\" + e);\n                    break;\n                }\n            }\n            closeSocket();\n        }","id":82195,"modified_method":"public void run() {\n            byte[] buf;\n            int len;\n            Address dst_addr=null;\n            String gname;\n\n            while(active) {\n                try {\n                    // 1. Group name is first\n                    gname=input.readUTF();\n\n                    // 2. Second is the destination address\n                    dst_addr=Util.readAddress(input);\n\n                    //if(log.isTraceEnabled()) {\n                      //  log.trace(\"group \" + gname + \", routing request to \" + (dst_addr == null? \"all\" : dst_addr.toString()));\n                    //}\n\n                    // 3. Then the length of the byte buffer representing the message\n                    len=input.readInt();\n                    if(len == 0) {\n                        if(log.isWarnEnabled()) log.warn(\"received null message\");\n                        continue;\n                    }\n\n                    // 4. Finally the message itself, as a byte buffer\n                    buf=new byte[len];\n                    input.readFully(buf, 0, buf.length);  // message\n                    route(dst_addr, gname, buf, addr);\n                }\n                catch(EOFException io_ex) {\n                    if(log.isTraceEnabled())\n                        log.trace(\"client \" + sock.getInetAddress().getHostName() + ':' + sock.getPort() +\n                                \" closed connection; removing it from routing table\");\n                    removeEntry(sock); // will close socket\n                    return;\n                }\n                catch(Exception e) {\n                    if(log.isErrorEnabled()) log.error(\"exception=\" + e);\n                    break;\n                }\n            }\n            closeSocket();\n        }","commit_id":"418f6b3a49afb3367ced0898b16a089b3043d968","url":"https://github.com/belaban/JGroups"},{"original_method":"private void route(Address dest, String dest_group, byte[] msg, Address sender) {\n        if(log.isTraceEnabled()) {\n            int len=msg != null? msg.length : 0;\n            log.trace(\"routing request from \" + sender + \" for \"+dest_group+\" to \" +\n                      (dest==null?\"ALL\":dest.toString())+\", \" + len + \" bytes\");\n        }\n\n        if(dest == null) {\n            // send to all members in group dest.getChannelName()\n            if(dest_group == null) {\n                if(log.isErrorEnabled()) log.error(\"both dest address and group are null\");\n                return;\n            }\n            else {\n                sendToAllMembersInGroup(dest_group, msg, sender);\n            }\n        }\n        else {                  \n            // send to destination address\n            AddressEntry ae = findAddressEntry(dest);\n            if (ae == null) {\n                if(log.isErrorEnabled()) log.error(\"cannot find \" + dest + \" in the routing table\");\n                return;\n            }\n            if (ae.output==null) {\n                if(log.isErrorEnabled()) log.error(dest + \" is associated with a null output stream\");\n                return;\n            }\n            try {\n                sendToMember(dest, ae.output, msg);\n            }\n            catch(Exception e) {\n                if(log.isErrorEnabled()) log.error(\"failed sending message to \"+dest+\": \"+e.getMessage());\n                removeEntry(ae.sock); // will close socket\n            }\n        }\n    }","id":82196,"modified_method":"private void route(Address dest, String dest_group, byte[] msg, Address sender) {\n        //if(log.isTraceEnabled()) {\n          //  int len=msg != null? msg.length : 0;\n            //log.trace(\"routing request from \" + sender + \" for \" + dest_group + \" to \" +\n              //      (dest == null? \"ALL\" : dest.toString()) + \", \" + len + \" bytes\");\n        //}\n\n        if(dest == null) {\n            // send to all members in group dest.getChannelName()\n            if(dest_group == null) {\n                if(log.isErrorEnabled()) log.error(\"both dest address and group are null\");\n            }\n            else {\n                sendToAllMembersInGroup(dest_group, msg, sender);\n            }\n        }\n        else {\n            // send to destination address\n            AddressEntry ae=findAddressEntry(dest);\n            if(ae == null) {\n                if(log.isErrorEnabled())\n                    log.error(\"cannot find \" + dest + \" in the routing table, routing table=\\n\" + dumpRoutingTable() +\n                            \"\\ngossip table=\\n\" + dumpGossipTable());\n                return;\n            }\n            if(ae.output == null) {\n                if(log.isErrorEnabled()) log.error(dest + \" is associated with a null output stream\");\n                return;\n            }\n            try {\n                sendToMember(dest, ae.output, msg, sender);\n            }\n            catch(Exception e) {\n                if(log.isErrorEnabled()) log.error(\"failed sending message to \" + dest + \": \" + e.getMessage());\n                removeEntry(ae.sock); // will close socket\n            }\n        }\n    }","commit_id":"418f6b3a49afb3367ced0898b16a089b3043d968","url":"https://github.com/belaban/JGroups"},{"original_method":"public static String requestTypeToString(int type) {\n        return\n            type == GET ? \"GET\" :\n                (type == REGISTER ? \"REGISTER\" :\n                    (type == DUMP ? \"DUMP\" :\n                        (type == SHUTDOWN ? \"SHUTDOWN\" : \"UNKNOWN REQUEST: \"+type)));\n    }","id":82197,"modified_method":"public static String type2String(int type) {\n        switch(type) {\n            case CONNECT:\n                return \"CONNECT\";\n            case DISCONNECT:\n                return \"DISCONNECT\";\n            case REGISTER:\n                return \"REGISTER\";\n            case GOSSIP_GET:\n                return \"GOSSIP_GET\";\n            case ROUTER_GET:\n                return \"ROUTER_GET\";\n            case GET_RSP:\n                return \"GET_RSP\";\n            case UNREGISTER:\n                return \"UNREGISTER\";\n            case DUMP:\n                return \"DUMP\";\n            case SHUTDOWN:\n                return \"SHUTDOWN\";\n            default:\n                return \"unknown\";\n        }\n    }","commit_id":"418f6b3a49afb3367ced0898b16a089b3043d968","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * @exception IOException \n     **/\n    private void sendToMember(Address dest, DataOutputStream out, byte[] msg) throws IOException {\n        if (out==null) {\n            return;\n        }\n\n        synchronized(out) {\n            Util.writeAddress(dest, out);\n            out.writeInt(msg.length);\n            out.write(msg, 0, msg.length);\n        }\n    }","id":82198,"modified_method":"/**\n     * @throws IOException\n     */\n    private void sendToMember(Address dest, DataOutputStream out, byte[] msg, Address sender) throws IOException {\n        if(out == null)\n            return;\n\n        if(discard_loopbacks && dest != null && dest.equals(sender)) {\n            return;\n        }\n\n        synchronized(out) {\n            Util.writeAddress(dest, out);\n            out.writeInt(msg.length);\n            out.write(msg, 0, msg.length);\n        }\n    }","commit_id":"418f6b3a49afb3367ced0898b16a089b3043d968","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * Connects to the ServerSocket and sends the shutdown header.\n     **/\n    private void shutdown() {       \n        try {\n            Socket s = new Socket(srvSock.getInetAddress(), \n                                  srvSock.getLocalPort());\n            DataInputStream dis = new DataInputStream(s.getInputStream());\n            int len = dis.readInt();\n            byte[] buf = new byte[len];\n            dis.readFully(buf, 0, buf.length);\n            DataOutputStream dos = new DataOutputStream(s.getOutputStream());\n            dos.writeInt(SHUTDOWN);\n            dos.writeUTF(\"\");\n            // waits until the server replies\n            dis.readInt();\n            dos.flush();\n            dos.close();\n            s.close();\n        }\n        catch(Exception e) {\n            if(log.isErrorEnabled()) log.error(\"shutdown failed: \"+e);\n        }\n        \n    }","id":82199,"modified_method":"/**\n     * Connects to the ServerSocket and sends the shutdown header.\n     */\n    private void shutdown() {\n        Socket s=null;\n        DataOutputStream dos=null;\n        try {\n            s=new Socket(srvSock.getInetAddress(),srvSock.getLocalPort());\n            dos=new DataOutputStream(s.getOutputStream());\n            dos.writeInt(SHUTDOWN);\n            dos.writeUTF(\"\");\n        }\n        catch(Exception e) {\n            if(log.isErrorEnabled()) log.error(\"shutdown failed: \" + e);\n        }\n        finally {\n            Util.close(s);\n            Util.close(dos);\n        }\n    }","commit_id":"418f6b3a49afb3367ced0898b16a089b3043d968","url":"https://github.com/belaban/JGroups"},{"original_method":"public synchronized Address connect(String router_host, int router_port) throws Exception {\n        setRouterHost(router_host);\n        setRouterPort(router_port);\n        return connect();\n    }","id":82200,"modified_method":"public Address connect(String groupname, String router_host, int router_port) throws Exception {\n        setRouterHost(router_host);\n        setRouterPort(router_port);\n        return connect(groupname);\n    }","commit_id":"418f6b3a49afb3367ced0898b16a089b3043d968","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * Establishes a connection to the router. The router will send my address (its peer address) back\n     * as an Address, which is subsequently returned to the caller. The reason for not using\n     * InetAddress.getLocalHost() or sock.getLocalAddress() is that this may not be permitted\n     * with certain security managers (e.g if this code runs in an applet). Also, some network\n     * address translation (NAT) (e.g IP Masquerading) may return the wrong address.\n     */\n    public synchronized Address connect() throws Exception {\n        Address ret=null;\n        int len=0;\n        byte[] buf;\n\n        try {\n            sock=new Socket(router_host, router_port);\n            sock.setSoLinger(true, 500);\n\n            // Retrieve our own address by reading it from the socket\n            input=new DataInputStream(sock.getInputStream());\n            len=input.readInt();\n            buf=new byte[len];\n            input.readFully(buf);\n            ret=(Address)Util.objectFromByteBuffer(buf);\n            output=new DataOutputStream(sock.getOutputStream());\n            setConnected(true);\n        }\n        catch(Exception e) {\n            setConnected(false);\n            if(sock != null)\n                sock.close();\n            throw e;\n        }\n\n        // IpAddress uses InetAddress.getLocalHost() to find the host. May not be permitted in applets !\n        if(ret == null && sock != null)\n            ret=new org.jgroups.stack.IpAddress(sock.getLocalPort());\n\n        // set local address; this is the one that we will use from now on !\n        if(local_addr == null)\n            local_addr=ret;\n\n        return ret;\n    }","id":82201,"modified_method":"/**\n     Register this process with the router under <code>groupname<\/code>.\n     @param groupname The name of the group under which to register\n     @return Address Our address, as returned from the GossipRouter\n     */\n    public synchronized Address connect(String groupname) {\n        if(groupname == null || groupname.length() == 0) {\n            if(log.isErrorEnabled()) log.error(\"groupname is null\");\n            return null;\n        }\n\n        this.groupname=groupname;\n        try {\n            sock=new Socket(router_host, router_port);\n            sock.setSoLinger(true, 500);\n            output=new DataOutputStream(sock.getOutputStream());\n            GossipData req=new GossipData(GossipRouter.CONNECT, groupname, null, null);\n            req.writeTo(output);\n            output.flush();\n            input=new DataInputStream(sock.getInputStream()); // retrieve our own address by reading it from the socket\n            Address ret=Util.readAddress(input);\n            setConnected(true);\n            // IpAddress uses InetAddress.getLocalHost() to find the host. May not be permitted in applets !\n            if(ret == null && sock != null)\n                ret=new org.jgroups.stack.IpAddress(sock.getLocalPort());\n\n            // set local address; this is the one that we will use from now on !\n            local_addr=ret;\n            return ret;\n        }\n        catch(Exception e) {\n            Util.close(sock); Util.close(input); Util.close(output);\n            if(log.isErrorEnabled()) log.error(\"failed connecting\", e);\n            setConnected(false);\n            return null;\n        }\n    }","commit_id":"418f6b3a49afb3367ced0898b16a089b3043d968","url":"https://github.com/belaban/JGroups"},{"original_method":"/** Tries to establish connection to router. Tries until router is up again. */\n    public boolean reconnect(int max_attempts) {\n        Address new_addr=null;\n        int num_atttempts=0;\n\n        if(connected) return false;\n        disconnect();\n        reconnect=true;\n        while(reconnect && (num_atttempts++ < max_attempts || max_attempts == -1)) {\n            try {\n                if((new_addr=connect()) != null)\n                    break;\n            }\n            catch(Exception ex) { // this is a normal case\n                if(log.isTraceEnabled()) log.trace(\"failed reconnecting\", ex);\n            }\n            if(max_attempts == -1)\n                Util.sleep(RECONNECT_TIMEOUT);\n        }\n        if(new_addr == null) {\n            return false;\n        }\n        if(log.isTraceEnabled()) log.trace(\"client reconnected, new address is \" + new_addr);\n        return true;\n    }","id":82202,"modified_method":"/** Tries to establish connection to router. Tries until router is up again. */\n    public boolean reconnect(int max_attempts) {\n        Address new_addr=null;\n        int num_atttempts=0;\n\n        if(connected) return false;\n        disconnect();\n        reconnect=true;\n        while(reconnect && (num_atttempts++ < max_attempts || max_attempts == -1)) {\n            try {\n                if((new_addr=connect(groupname)) != null)\n                    break;\n            }\n            catch(Exception ex) { // this is a normal case\n                if(log.isTraceEnabled()) log.trace(\"failed reconnecting\", ex);\n            }\n            if(max_attempts == -1)\n                Util.sleep(RECONNECT_TIMEOUT);\n        }\n        if(new_addr == null) {\n            return false;\n        }\n        else\n            local_addr=new_addr;\n        if(log.isTraceEnabled()) log.trace(\"client reconnected, new address is \" + new_addr);\n        return true;\n    }","commit_id":"418f6b3a49afb3367ced0898b16a089b3043d968","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     Retrieves the membership (list of Addresses) for a given group. This is mainly used by the PING\n     protocol to obtain its initial membership. This is used infrequently, so don't maintain socket\n     for the entire time, but create/delete it on demand.\n     */\n    public List get(String groupname) {\n        List ret=null;\n        Socket tmpsock=null;\n        DataOutputStream tmpOutput=null;\n        DataInputStream tmpInput=null;\n        int len;\n        byte[] buf;\n\n\n        if(groupname == null || groupname.length() == 0) {\n            if(log.isErrorEnabled()) log.error(\"groupname is null\");\n            return null;\n        }\n\n        try {\n            tmpsock=new Socket(router_host, router_port);\n            tmpsock.setSoLinger(true, 500);\n            tmpInput=new DataInputStream(tmpsock.getInputStream());\n\n            len=tmpInput.readInt();     // discard my own address\n            buf=new byte[len];       // (first thing returned by router on acept())\n            tmpInput.readFully(buf);\n            tmpOutput=new DataOutputStream(tmpsock.getOutputStream());\n\n            // request membership for groupname\n            tmpOutput.writeInt(Router.GET);\n            tmpOutput.writeUTF(groupname);\n\n            // wait for response (List)\n            len=tmpInput.readInt();\n            if(len == 0)\n                return null;\n\n            buf=new byte[len];\n            tmpInput.readFully(buf);\n            ret=(List)Util.objectFromByteBuffer(buf);\n        }\n        catch(Exception e) {\n            if(log.isErrorEnabled()) log.error(\"exception=\" + e);\n        }\n        finally {\n            try {\n                if(tmpOutput != null) tmpOutput.close();\n            }\n            catch(Exception e) {\n            }\n            try {\n                if(tmpInput != null) tmpInput.close();\n            }\n            catch(Exception e) {\n            }\n            try {\n                if(tmpsock != null) tmpsock.close();\n            }\n            catch(Exception e) {\n            }\n        }\n        return ret;\n    }","id":82203,"modified_method":"/**\n     Retrieves the membership (list of Addresses) for a given group. This is mainly used by the PING\n     protocol to obtain its initial membership. This is used infrequently, so don't maintain socket\n     for the entire time, but create/delete it on demand.\n     */\n    public List get(String groupname) {\n        List ret=null;\n        Socket tmpsock=null;\n        DataOutputStream tmpOutput=null;\n        DataInputStream tmpInput=null;\n\n        if(groupname == null || groupname.length() == 0) {\n            if(log.isErrorEnabled()) log.error(\"groupname is null\");\n            return null;\n        }\n\n        try {\n            tmpsock=new Socket(router_host, router_port);\n            tmpsock.setSoLinger(true, 500);\n\n            // request membership for groupname\n            tmpOutput=new DataOutputStream(tmpsock.getOutputStream());\n            GossipData request=new GossipData(GossipRouter.ROUTER_GET, groupname, null, null);\n            request.writeTo(tmpOutput);\n\n            tmpInput=new DataInputStream(tmpsock.getInputStream());\n            GossipData response=new GossipData();\n            response.readFrom(tmpInput);\n            return response.getMembers();\n        }\n        catch(Exception e) {\n            if(log.isErrorEnabled()) log.error(\"exception=\" + e);\n        }\n        finally {\n            Util.close(tmpOutput);\n            Util.close(tmpInput);\n            Util.close(tmpsock);\n        }\n        return ret;\n    }","commit_id":"418f6b3a49afb3367ced0898b16a089b3043d968","url":"https://github.com/belaban/JGroups"},{"original_method":"/** Closes the socket and the input and output streams associated with it */\n    public synchronized void disconnect() {\n        if(output != null) {\n            try {\n                output.close();\n                output=null;\n            }\n            catch(Exception e) {\n            }\n        }\n\n        if(input != null) {\n            try {\n                input.close();\n                input=null;\n            }\n            catch(Exception e) {\n            }\n        }\n\n        if(sock != null) {\n            try {\n                sock.close();\n                sock=null;\n            }\n            catch(Exception e) {\n            }\n        }\n        setConnected(false);\n        // stop the TUNNEL receiver thread\n        reconnect=false;\n    }","id":82204,"modified_method":"/** Closes the socket and the input and output streams associated with it */\n    public synchronized void disconnect() {\n        try {\n            if(sock == null || output == null || input == null) {\n                if(log.isErrorEnabled()) log.error(\"no connection to router (groupname=\" + groupname + ')');\n                setConnected(false);\n                return;\n            }\n\n            if(groupname == null || groupname.length() == 0) {\n                if(log.isErrorEnabled()) log.error(\"groupname is null\");\n                return;\n            }\n\n            if(local_addr == null) {\n                if(log.isErrorEnabled()) log.error(\"local_addr is null\");\n                return;\n            }\n\n            GossipData req=new GossipData(GossipRouter.DISCONNECT, groupname, local_addr, null);\n            req.writeTo(output);\n            setConnected(false);\n        }\n        catch(Exception e) {\n            if(log.isErrorEnabled()) log.error(\"failed unregistering \" + local_addr, e);\n        }\n        finally {\n            Util.close(output);\n            Util.close(input);\n            Util.close(sock); sock=null;\n            setConnected(false);\n            // stop the TUNNEL receiver thread\n            reconnect=false;\n            local_addr=null;\n        }\n    }","commit_id":"418f6b3a49afb3367ced0898b16a089b3043d968","url":"https://github.com/belaban/JGroups"},{"original_method":"public static void main(String[] args) {\n        if(args.length != 2) {\n            System.out.println(\"RouterStub <host> <port>\");\n            return;\n        }\n        RouterStub stub=new RouterStub(args[0], Integer.parseInt(args[1]));\n        Address my_addr;\n        boolean rc;\n        final String groupname=\"BelaGroup\";\n        Message msg;\n        List mbrs;\n\n        try {\n            my_addr=stub.connect();\n            System.out.println(\"My address is \" + my_addr);\n\n            System.out.println(\"Registering under \" + groupname);\n            rc=stub.register(groupname);\n            System.out.println(\"Done, rc=\" + rc);\n\n\n            System.out.println(\"Getting members of \" + groupname + \": \");\n            mbrs=stub.get(groupname);\n            System.out.println(\"Done, mbrs are \" + mbrs);\n\n\n            for(int i=0; i < 10; i++) {\n                msg=new Message(null, my_addr, \"Bela #\" + i);\n                msg.putHeader(\"TUNNEL\", new TunnelHeader(groupname));\n                rc=stub.send(msg, groupname);\n                System.out.println(\"Sent msg, rc=\" + rc);\n            }\n\n            for(int i=0; i < 10; i++) {\n                System.out.println(\"stub.receive():\");\n                msg=stub.receive();\n                System.out.println(\"Received msg\");\n            }\n\n        }\n        catch(Exception ex) {\n            log.error(ex);\n        }\n        finally {\n            stub.disconnect();\n        }\n    }","id":82205,"modified_method":"public static void main(String[] args) {\n        if(args.length != 2) {\n            System.out.println(\"RouterStub <host> <port>\");\n            return;\n        }\n        RouterStub stub=new RouterStub(args[0], Integer.parseInt(args[1])),\n                   stub2=new RouterStub(args[0], Integer.parseInt(args[1]));\n        Address my_addr;\n        boolean rc;\n        final String groupname=\"BelaGroup\";\n        Message msg;\n        List mbrs;\n\n        try {\n            System.out.println(\"Registering under \" + groupname);\n            my_addr=stub.connect(groupname);\n            System.out.println(\"My address is \" + my_addr);\n\n            stub2.connect(groupname);\n\n            System.out.println(\"Getting members of \" + groupname + \": \");\n            mbrs=stub.get(groupname);\n            System.out.println(\"Done, mbrs are \" + mbrs);\n\n            for(int i=1; i <= 10; i++) {\n                msg=new Message(null, my_addr, \"Bela #\" + i);\n                msg.putHeader(\"TUNNEL\", new TunnelHeader(groupname));\n                rc=stub2.send(msg, groupname);\n                System.out.println(\"Sent msg #\" + i + \", rc=\" + rc);\n            }\n\n            for(int i=0; i < 10; i++) {\n                msg=stub.receive();\n                System.out.println(\"Received msg \" + msg.getObject());\n            }\n        }\n        catch(Exception ex) {\n            log.error(ex);\n        }\n        finally {\n            stub.disconnect();\n        }\n    }","commit_id":"418f6b3a49afb3367ced0898b16a089b3043d968","url":"https://github.com/belaban/JGroups"},{"original_method":"/** Receives a message from the router (blocking mode). If the connection is down,\n     false is returned, otherwise true */\n    public Message receive() {\n        Message ret=null;\n        byte[] buf=null;\n        int len;\n\n        if(sock == null || output == null || input == null) {\n            // if(log.isErrorEnabled()) log.error(\"no connection to router\");\n            setConnected(false);\n            return null;\n        }\n        Address dest;\n        try {\n            dest=Util.readAddress(input);\n            len=input.readInt();\n            if(len == 0) {\n                ret=null;\n            }\n            else {\n                buf=new byte[len];\n                input.readFully(buf, 0, len);\n                ret=new Message(false);\n                ByteArrayInputStream tmp=new ByteArrayInputStream(buf);\n                DataInputStream in=new DataInputStream(tmp);\n                ret.readFrom(in);\n                ret.setDest(dest);\n                in.close();\n            }\n        }\n        catch(Exception e) {\n            if (connected) {\n                if(log.isTraceEnabled()) log.trace(\"failed receiving message\", e);\n            }\n            setConnected(false);\n            return null;\n        }\n\n        if(log.isTraceEnabled()) log.trace(\"received \"+ret);\n        return ret;\n    }","id":82206,"modified_method":"/** Receives a message from the router (blocking mode). If the connection is down,\n     false is returned, otherwise true */\n    public Message receive() throws Exception {\n        Message ret=null;\n        byte[] buf=null;\n        int len;\n\n        if(sock == null || output == null || input == null) {\n            // if(log.isErrorEnabled()) log.error(\"no connection to router\");\n            setConnected(false);\n            return null;\n        }\n        Address dest;\n        try {\n            dest=Util.readAddress(input);\n            len=input.readInt();\n            if(len == 0) {\n                ret=null;\n            }\n            else {\n                buf=new byte[len];\n                input.readFully(buf, 0, len);\n                ret=new Message(false);\n                ByteArrayInputStream tmp=new ByteArrayInputStream(buf);\n                DataInputStream in=new DataInputStream(tmp);\n                ret.readFrom(in);\n                ret.setDest(dest);\n                in.close();\n            }\n            if(log.isTraceEnabled()) log.trace(\"received \"+ret);\n            return ret;\n        }\n        catch(Exception e) {\n            setConnected(false);\n            throw e;\n        }\n    }","commit_id":"418f6b3a49afb3367ced0898b16a089b3043d968","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * Adds a GossipServer to be accessed.\n     */\n    public void addGossipServer(IpAddress gossip_host) {\n        if(!gossip_servers.contains(gossip_host))\n            gossip_servers.addElement(gossip_host);\n    }","id":82207,"modified_method":"/**\n     * Adds a GossipRouter to be accessed.\n     */\n    public void addGossipRouter(IpAddress gossip_host) {\n        if(!gossip_servers.contains(gossip_host))\n            gossip_servers.addElement(gossip_host);\n    }","commit_id":"bfc0edb8c7d379ba01f4bd114b7ad4c965e73fd9","url":"https://github.com/belaban/JGroups"},{"original_method":"public void run() {\n            int num_items=0;\n            String group;\n            Vector mbrs;\n            Address mbr;\n\n             if(log.isTraceEnabled()) log.trace(\"refresher task is run\");\n            for(Enumeration e=groups.keys(); e.hasMoreElements();) {\n                group=(String) e.nextElement();\n                mbrs=(Vector) groups.get(group);\n                if(mbrs != null) {\n                    for(int i=0; i < mbrs.size(); i++) {\n                        mbr=(Address) mbrs.elementAt(i);\n                        if(log.isTraceEnabled()) log.trace(\"registering \" + group + \" : \" + mbr);\n                        register(group, mbr);\n                        num_items++;\n                    }\n                }\n            }\n            if(log.isTraceEnabled()) log.trace(\"refresher task done. Registered \" + num_items + \" items\");\n        }","id":82208,"modified_method":"public void run() {\n            int num_items=0;\n            String group;\n            List mbrs;\n            Address mbr;\n\n            if(log.isTraceEnabled()) log.trace(\"refresher task is run\");\n            for(Enumeration e=groups.keys(); e.hasMoreElements();) {\n                group=(String)e.nextElement();\n                mbrs=(List)groups.get(group);\n                if(mbrs != null) {\n                    for(Iterator it=mbrs.iterator(); it.hasNext();) {\n                        mbr=(Address)it.next();\n                        if(log.isTraceEnabled()) log.trace(\"registering \" + group + \" : \" + mbr);\n                        register(group, mbr);\n                        num_items++;\n                    }\n                }\n            }\n            if(log.isTraceEnabled()) log.trace(\"refresher task done. Registered \" + num_items + \" items\");\n        }","commit_id":"bfc0edb8c7d379ba01f4bd114b7ad4c965e73fd9","url":"https://github.com/belaban/JGroups"},{"original_method":"public static void main(String[] args) {\n        Vector gossip_hosts=new Vector();\n        String host;\n        InetAddress ip_addr;\n        int port;\n        boolean get=false, register=false, keep_running=false;\n        String register_host=null;\n        int register_port=0;\n        String get_group=null, register_group=null;\n        GossipClient gossip_client=null;\n        Vector mbrs;\n        long expiry=20000;\n\n\n        for(int i=0; i < args.length; i++) {\n            if(\"-help\".equals(args[i])) {\n                usage();\n                return;\n            }\n            if(\"-expiry\".equals(args[i])) {\n                expiry=Long.parseLong(args[++i]);\n                continue;\n            }\n            if(\"-host\".equals(args[i])) {\n                host=args[++i];\n                port=Integer.parseInt(args[++i]);\n                try {\n                    ip_addr=InetAddress.getByName(host);\n                    gossip_hosts.addElement(new IpAddress(ip_addr, port));\n                }\n                catch(Exception ex) {\n                    System.err.println(ex);\n                }\n                continue;\n            }\n            if(\"-keep_running\".equals(args[i])) {\n                keep_running=true;\n                continue;\n            }\n            if(\"-get\".equals(args[i])) {\n                get=true;\n                get_group=args[++i];\n                continue;\n            }\n            if(\"-register\".equals(args[i])) {\n                register_group=args[++i];\n                register_host=args[++i];\n                register_port=Integer.parseInt(args[++i]);\n                register=true;\n                continue;\n            }\n            usage();\n            return;\n        }\n\n        if(gossip_hosts.size() == 0) {\n            System.err.println(\"At least 1 GossipServer has to be given\");\n            return;\n        }\n\n        if(!register && !get) {\n            System.err.println(\"Neither get nor register command given, will not do anything\");\n            return;\n        }\n\n        try {\n            gossip_client=new GossipClient(gossip_hosts, expiry);\n            if(register) {\n                System.out.println(\"Registering \" + register_group + \" --> \" + register_host + ':' + register_port);\n                gossip_client.register(register_group, new IpAddress(register_host, register_port));\n            }\n\n            if(get) {\n                System.out.println(\"Getting members for group \" + get_group);\n                mbrs=gossip_client.getMembers(get_group);\n                System.out.println(\"Members for group \" + get_group + \" are \" + mbrs);\n            }\n        }\n        catch(Exception ex) {\n            System.err.println(ex);\n        }\n        if(!keep_running)\n            gossip_client.stop();\n    }","id":82209,"modified_method":"public static void main(String[] args) {\n        Vector gossip_hosts=new Vector();\n        String host;\n        InetAddress ip_addr;\n        int port;\n        boolean get=false, register=false, keep_running=false;\n        String register_host=null;\n        int register_port=0;\n        String get_group=null, register_group=null;\n        GossipClient gossip_client=null;\n        List mbrs;\n        long expiry=20000;\n\n\n        for(int i=0; i < args.length; i++) {\n            if(\"-help\".equals(args[i])) {\n                usage();\n                return;\n            }\n            if(\"-expiry\".equals(args[i])) {\n                expiry=Long.parseLong(args[++i]);\n                continue;\n            }\n            if(\"-host\".equals(args[i])) {\n                host=args[++i];\n                port=Integer.parseInt(args[++i]);\n                try {\n                    ip_addr=InetAddress.getByName(host);\n                    gossip_hosts.addElement(new IpAddress(ip_addr, port));\n                }\n                catch(Exception ex) {\n                    System.err.println(ex);\n                }\n                continue;\n            }\n            if(\"-keep_running\".equals(args[i])) {\n                keep_running=true;\n                continue;\n            }\n            if(\"-get\".equals(args[i])) {\n                get=true;\n                get_group=args[++i];\n                continue;\n            }\n            if(\"-register\".equals(args[i])) {\n                register_group=args[++i];\n                register_host=args[++i];\n                register_port=Integer.parseInt(args[++i]);\n                register=true;\n                continue;\n            }\n            usage();\n            return;\n        }\n\n        if(gossip_hosts.size() == 0) {\n            System.err.println(\"At least 1 GossipRouter has to be given\");\n            return;\n        }\n\n        if(!register && !get) {\n            System.err.println(\"Neither get nor register command given, will not do anything\");\n            return;\n        }\n\n        try {\n            gossip_client=new GossipClient(gossip_hosts, expiry);\n            if(register) {\n                System.out.println(\"Registering \" + register_group + \" --> \" + register_host + ':' + register_port);\n                gossip_client.register(register_group, new IpAddress(register_host, register_port));\n            }\n\n            if(get) {\n                System.out.println(\"Getting members for group \" + get_group);\n                mbrs=gossip_client.getMembers(get_group);\n                System.out.println(\"Members for group \" + get_group + \" are \" + mbrs);\n            }\n        }\n        catch(Exception ex) {\n            System.err.println(ex);\n        }\n        if(!keep_running)\n            gossip_client.stop();\n    }","commit_id":"bfc0edb8c7d379ba01f4bd114b7ad4c965e73fd9","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     Creates the GossipClient\n     @param gossip_hosts List of IpAddresses\n     @param expiry Interval (in msecs) for the refresher task\n     */\n    public GossipClient(Vector gossip_hosts, long expiry) {\n        if(gossip_hosts == null) {\n            if(log.isErrorEnabled()) log.error(\"empty set of GossipServers given\");\n            return;\n        }\n        for(int i=0; i < gossip_hosts.size(); i++)\n            init((IpAddress) gossip_hosts.elementAt(i), expiry);\n    }","id":82210,"modified_method":"/**\n     Creates the GossipClient\n     @param gossip_hosts List of IpAddresses\n     @param expiry Interval (in msecs) for the refresher task\n     */\n    public GossipClient(Vector gossip_hosts, long expiry) {\n        if(gossip_hosts == null) {\n            if(log.isErrorEnabled()) log.error(\"empty set of GossipRouters given\");\n            return;\n        }\n        for(int i=0; i < gossip_hosts.size(); i++)\n            init((IpAddress) gossip_hosts.elementAt(i), expiry);\n    }","commit_id":"bfc0edb8c7d379ba01f4bd114b7ad4c965e73fd9","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     Adds the member to the given group. If the group already has an entry for the member,\n     its timestamp will be updated, preventing the cache cleaner from removing the entry.<p>\n     The entry will be registered <em>with all GossipServers that GossipClient is configured to access<\/em>\n     */\n    public void register(String group, Address mbr) {\n        Vector mbrs;\n\n        if(group == null || mbr == null) {\n            if(log.isErrorEnabled()) log.error(\"group or mbr is null\");\n            return;\n        }\n        mbrs=(Vector) groups.get(group);\n        if(mbrs == null) {\n            mbrs=new Vector();\n            mbrs.addElement(mbr);\n            groups.put(group, mbrs);\n        }\n        else {\n            if(!mbrs.contains(mbr))\n                mbrs.addElement(mbr);\n        }\n\n        _register(group, mbr); // update entry in GossipServer\n\n        if(!timer_running) {\n            timer=new Timer(true);\n            refresher_task=new Refresher();\n            timer.schedule(refresher_task, EXPIRY_TIME, EXPIRY_TIME);\n            timer_running=true;\n        }\n    }","id":82211,"modified_method":"/**\n     Adds the member to the given group. If the group already has an entry for the member,\n     its timestamp will be updated, preventing the cache cleaner from removing the entry.<p>\n     The entry will be registered <em>with all GossipRouters that GossipClient is configured to access<\/em>\n     */\n    public void register(String group, Address mbr) {\n        if(group == null || mbr == null) {\n            if(log.isErrorEnabled()) log.error(\"group or mbr is null\");\n            return;\n        }\n\n        List mbrs=(List)groups.get(group);\n        if(mbrs == null) {\n            mbrs=new LinkedList();\n            mbrs.add(mbr);\n            groups.put(group, mbrs);\n        }\n        else {\n            if(!mbrs.contains(mbr))\n                mbrs.add(mbr);\n        }\n\n        _register(group, mbr); // update entry in GossipRouter\n\n        if(refresher_enabled) {\n            if(!timer_running) {\n                timer=new Timer(true);\n                refresher_task=new Refresher();\n                timer.schedule(refresher_task, EXPIRY_TIME, EXPIRY_TIME);\n                timer_running=true;\n            }\n        }\n    }","commit_id":"bfc0edb8c7d379ba01f4bd114b7ad4c965e73fd9","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     Returns all members of a given group\n     @param group The group name\n     @return Vector A list of Addresses\n     */\n    public Vector getMembers(String group) {\n        if(group == null) {\n            if(log.isErrorEnabled()) log.error(\"group is null\");\n            return null;\n        }\n        Vector result=_getMembers(group);\n        if(log.isTraceEnabled())\n            log.trace(\"GET(\" + group + \") --> \" + result);\n        return result;\n    }","id":82212,"modified_method":"/**\n     Returns all members of a given group\n     @param group The group name\n     @return List A list of Addresses\n     */\n    public List getMembers(String group) {\n        if(group == null) {\n            if(log.isErrorEnabled()) log.error(\"group is null\");\n            return null;\n        }\n        List result=_getMembers(group);\n        if(log.isTraceEnabled())\n            log.trace(\"GET(\" + group + \") --> \" + result);\n        return result;\n    }","commit_id":"bfc0edb8c7d379ba01f4bd114b7ad4c965e73fd9","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * Sends a GET_MBR_REQ to *all* GossipServers, merges responses.\n     */\n    Vector _getMembers(String group) {\n        Vector ret=new Vector();\n        Socket sock=null;\n        SocketAddress destAddr;\n        ObjectOutputStream out=null;\n        ObjectInputStream in=null;\n        IpAddress entry;\n        GossipData gossip_req, gossip_rsp;\n        Address mbr;\n\n        for(int i=0; i < gossip_servers.size(); i++) {\n            entry=(IpAddress) gossip_servers.elementAt(i);\n            if(entry.getIpAddress() == null || entry.getPort() == 0) {\n                if(log.isErrorEnabled()) log.error(\"entry.host or entry.port is null\");\n                continue;\n            }\n            \n            try {\n                // sock=new Socket(entry.getIpAddress(), entry.getPort());\n                sock=new Socket();\n                destAddr=new InetSocketAddress(entry.getIpAddress(), entry.getPort());\n                sock.connect(destAddr, SOCKET_TIMEOUT);\n                out=new ObjectOutputStream(sock.getOutputStream());\n\n                gossip_req=new GossipData(GossipData.GET_REQ, group, null, null);\n                // must send GossipData as fast as possible, otherwise the\n                // request might be rejected\n                out.writeObject(gossip_req);\n                out.flush();\n\n                in=new ObjectInputStream(sock.getInputStream());\n                gossip_rsp=(GossipData) in.readObject();\n                if(gossip_rsp.mbrs != null) { // merge with ret\n                    for(int j=0; j < gossip_rsp.mbrs.size(); j++) {\n                        mbr=(Address) gossip_rsp.mbrs.elementAt(j);\n                        if(!ret.contains(mbr))\n                            ret.addElement(mbr);\n                    }\n                }\n            }\n            catch(Exception ex) {\n                if(log.isErrorEnabled()) log.error(\"exception connecting to host \" + entry + \": \" + ex);\n            }\n            finally {\n                Util.closeOutputStream(out);\n                Util.closeInputStream(in);\n                if(sock != null) {\n                    try {sock.close();} catch(IOException e) {}\n                }\n            }\n        }\n\n        return ret;\n    }","id":82213,"modified_method":"/**\n     * Sends a GET_MBR_REQ to *all* GossipRouters, merges responses.\n     */\n    private List _getMembers(String group) {\n        List ret=new LinkedList();\n        Socket sock=null;\n        SocketAddress destAddr;\n        DataOutputStream out=null;\n        DataInputStream in=null;\n        IpAddress entry;\n        GossipData gossip_req, gossip_rsp;\n        Address mbr;\n\n        for(int i=0; i < gossip_servers.size(); i++) {\n            entry=(IpAddress) gossip_servers.elementAt(i);\n            if(entry.getIpAddress() == null || entry.getPort() == 0) {\n                if(log.isErrorEnabled()) log.error(\"entry.host or entry.port is null\");\n                continue;\n            }\n            \n            try {\n                // sock=new Socket(entry.getIpAddress(), entry.getPort());\n                sock=new Socket();\n                destAddr=new InetSocketAddress(entry.getIpAddress(), entry.getPort());\n                sock.connect(destAddr, SOCKET_TIMEOUT);\n                out=new DataOutputStream(sock.getOutputStream());\n\n                gossip_req=new GossipData(GossipRouter.GOSSIP_GET, group, null, null);\n                // must send GossipData as fast as possible, otherwise the\n                // request might be rejected\n                gossip_req.writeTo(out);\n                out.flush();\n\n                in=new DataInputStream(sock.getInputStream());\n                gossip_rsp=new GossipData();\n                gossip_rsp.readFrom(in);\n                if(gossip_rsp.mbrs != null) { // merge with ret\n                    for(Iterator it=gossip_rsp.mbrs.iterator(); it.hasNext();) {\n                        mbr=(Address)it.next();\n                        if(!ret.contains(mbr))\n                            ret.add(mbr);\n                    }\n                }\n            }\n            catch(Exception ex) {\n                if(log.isErrorEnabled()) log.error(\"exception connecting to host \" + entry, ex);\n            }\n            finally {\n                Util.close(out);\n                Util.close(in);\n                if(sock != null) {\n                    try {sock.close();} catch(IOException e) {}\n                }\n            }\n        }\n\n        return ret;\n    }","commit_id":"bfc0edb8c7d379ba01f4bd114b7ad4c965e73fd9","url":"https://github.com/belaban/JGroups"},{"original_method":"final void init(IpAddress gossip_host, long expiry) {\n        EXPIRY_TIME=expiry;\n        addGossipServer(gossip_host);\n    }","id":82214,"modified_method":"final void init(IpAddress gossip_host, long expiry) {\n        EXPIRY_TIME=expiry;\n        addGossipRouter(gossip_host);\n    }","commit_id":"bfc0edb8c7d379ba01f4bd114b7ad4c965e73fd9","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * Registers the group|mbr with *all* GossipServers.\n     * todo: parallelize GossipServer access\n     */\n    void _register(String group, Address mbr) {\n        Socket sock;\n        ObjectOutputStream out;\n        IpAddress entry;\n        GossipData gossip_req;\n\n        for(int i=0; i < gossip_servers.size(); i++) {\n            entry=(IpAddress) gossip_servers.elementAt(i);\n            if(entry.getIpAddress() == null || entry.getPort() == 0) {\n                if(log.isErrorEnabled()) log.error(\"entry.host or entry.port is null\");\n                continue;\n            }\n            try {\n                if(log.isTraceEnabled())\n                    log.trace(\"REGISTER(\" + group + \", \" + entry.getIpAddress() + ':' + entry.getPort() + \")\");\n                sock=new Socket(entry.getIpAddress(), entry.getPort());\n                out=new ObjectOutputStream(sock.getOutputStream());\n                gossip_req=new GossipData(GossipData.REGISTER_REQ, group, mbr, null);\n                // must send GossipData as fast as possible, otherwise the\n                // request might be rejected\n                out.writeObject(gossip_req);\n                out.flush();\n                sock.close();\n            }\n            catch(Exception ex) {\n                if(log.isErrorEnabled()) log.error(\"exception connecting to host \" + entry + \": \" + ex);\n            }\n        }\n    }","id":82215,"modified_method":"/**\n     * Registers the group|mbr with *all* GossipRouters.\n     */\n    void _register(String group, Address mbr) {\n        Socket sock=null;\n        DataOutputStream out=null;\n        IpAddress entry;\n        GossipData gossip_req;\n\n        for(int i=0; i < gossip_servers.size(); i++) {\n            entry=(IpAddress) gossip_servers.elementAt(i);\n            if(entry.getIpAddress() == null || entry.getPort() == 0) {\n                if(log.isErrorEnabled()) log.error(\"entry.host or entry.port is null\");\n                continue;\n            }\n            try {\n                if(log.isTraceEnabled())\n                    log.trace(\"REGISTER(\" + group + \", \" + mbr + \") with GossipRouter at \" + entry.getIpAddress() + ':' + entry.getPort());\n                sock=new Socket(entry.getIpAddress(), entry.getPort());\n                out=new DataOutputStream(sock.getOutputStream());\n                gossip_req=new GossipData(GossipRouter.REGISTER, group, mbr, null);\n                // must send GossipData as fast as possible, otherwise the\n                // request might be rejected\n                gossip_req.writeTo(out);\n                out.flush();\n            }\n            catch(Exception ex) {\n                if(log.isErrorEnabled()) log.error(\"exception connecting to host \" + entry, ex);\n            }\n            finally {\n                Util.close(out);\n                if(sock != null) {\n                    try {sock.close();} catch(IOException e) {}\n                }\n            }\n        }\n    }","commit_id":"bfc0edb8c7d379ba01f4bd114b7ad4c965e73fd9","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * JBoss MBean lifecycle operation. The JMX agent allways calls this method\n     * before destroy(). Close connections and frees resources.\n     **/\n    public void stop() {\n\n        if (srvSock==null) {\n            if(log.isWarnEnabled()) log.warn(\"Router already stopped\");\n            return;\n        }\n\n        timer.cancel();\n        shutdown();\n        try {\n            srvSock.close();\n        }\n        catch(Exception e) {\n            if(log.isErrorEnabled()) log.error(\"Failed to close server socket: \"+e);\n        }\n        // exiting the mainLoop will clean the tables\n        srvSock = null;\n        if(log.isInfoEnabled()) log.info(\"Router stopped\");\n    }","id":82216,"modified_method":"/**\n     * JBoss MBean lifecycle operation. The JMX agent allways calls this method\n     * before destroy(). Close connections and frees resources.\n     */\n    public void stop() {\n        up=false;\n\n        if(srvSock == null) {\n            if(log.isWarnEnabled()) log.warn(\"router already stopped\");\n            return;\n        }\n\n        timer.cancel();\n        shutdown();\n        try {\n            srvSock.close();\n        }\n        catch(Exception e) {\n            if(log.isErrorEnabled()) log.error(\"Failed to close server socket: \" + e);\n        }\n        // exiting the mainLoop will clean the tables\n        srvSock=null;\n        if(log.isInfoEnabled()) log.info(\"router stopped\");\n    }","commit_id":"bfc0edb8c7d379ba01f4bd114b7ad4c965e73fd9","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * @exception IOException \n     **/\n    private void sendToMember(Address dest, DataOutputStream out, byte[] msg) throws IOException {\n        if (out==null) {\n            return;\n        }\n\n        synchronized(out) {\n            Util.writeAddress(dest, out);\n            out.writeInt(msg.length);\n            out.write(msg, 0, msg.length);\n        }\n    }","id":82217,"modified_method":"/**\n     * @throws IOException\n     */\n    private void sendToMember(Address dest, DataOutputStream out, byte[] msg, Address sender) throws IOException {\n        if(out == null)\n            return;\n\n        if(discard_loopbacks && dest != null && dest.equals(sender)) {\n            return;\n        }\n\n        synchronized(out) {\n            Util.writeAddress(dest, out);\n            out.writeInt(msg.length);\n            out.write(msg, 0, msg.length);\n        }\n    }","commit_id":"bfc0edb8c7d379ba01f4bd114b7ad4c965e73fd9","url":"https://github.com/belaban/JGroups"},{"original_method":"private void sendToAllMembersInGroup(String groupname, byte[] msg, Address sender) {\n        List val;\n        val=(List)routingTable.get(groupname);\n        if(val == null || val.size() == 0) {\n            return;\n        }\n\n        synchronized(val) {\n            for(Iterator i=val.iterator(); i.hasNext();) {\n                AddressEntry ae = (AddressEntry)i.next();\n                if(ae.addr != null && ae.addr.equals(sender)) {\n                    // if(log.isTraceEnabled())\n                       // log.trace(\"dropped message to sender of multicast (\" + ae.addr + \")\");\n                    continue;\n                }\n                DataOutputStream dos = ae.output;\n\n                if (dos!=null) {\n                    // send only to 'connected' members\n                    try {\n                        sendToMember(null, dos, msg);\n                    }\n                    catch(Exception e) {\n                        if(log.isWarnEnabled()) log.warn(\"cannot send to \"+ae.addr+\": \"+e.getMessage());\n                        ae.destroy(); // this closes the socket\n                        i.remove();\n                    }\n                }\n            }\n        }\n    }","id":82218,"modified_method":"private void sendToAllMembersInGroup(String groupname, byte[] msg, Address sender) {\n        List val;\n        val=(List)routingTable.get(groupname);\n        if(val == null || val.size() == 0) {\n            return;\n        }\n\n        synchronized(val) {\n            for(Iterator i=val.iterator(); i.hasNext();) {\n                AddressEntry ae=(AddressEntry)i.next();\n                DataOutputStream dos=ae.output;\n\n                if(dos != null) {\n                    // send only to 'connected' members\n                    try {\n                        sendToMember(null, dos, msg, sender);\n                    }\n                    catch(Exception e) {\n                        if(log.isWarnEnabled()) log.warn(\"cannot send to \" + ae.addr + \": \" + e.getMessage());\n                        ae.destroy(); // this closes the socket\n                        i.remove();\n                    }\n                }\n            }\n        }\n    }","commit_id":"bfc0edb8c7d379ba01f4bd114b7ad4c965e73fd9","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * Connects to the ServerSocket and sends the shutdown header.\n     **/\n    private void shutdown() {       \n        try {\n            Socket s = new Socket(srvSock.getInetAddress(), \n                                  srvSock.getLocalPort());\n            DataInputStream dis = new DataInputStream(s.getInputStream());\n            int len = dis.readInt();\n            byte[] buf = new byte[len];\n            dis.readFully(buf, 0, buf.length);\n            DataOutputStream dos = new DataOutputStream(s.getOutputStream());\n            dos.writeInt(SHUTDOWN);\n            dos.writeUTF(\"\");\n            // waits until the server replies\n            dis.readInt();\n            dos.flush();\n            dos.close();\n            s.close();\n        }\n        catch(Exception e) {\n            if(log.isErrorEnabled()) log.error(\"shutdown failed: \"+e);\n        }\n        \n    }","id":82219,"modified_method":"/**\n     * Connects to the ServerSocket and sends the shutdown header.\n     */\n    private void shutdown() {\n        Socket s=null;\n        DataOutputStream dos=null;\n        try {\n            s=new Socket(srvSock.getInetAddress(),srvSock.getLocalPort());\n            dos=new DataOutputStream(s.getOutputStream());\n            dos.writeInt(SHUTDOWN);\n            dos.writeUTF(\"\");\n        }\n        catch(Exception e) {\n            if(log.isErrorEnabled()) log.error(\"shutdown failed: \" + e);\n        }\n        finally {\n            Util.close(s);\n            Util.close(dos);\n        }\n    }","commit_id":"bfc0edb8c7d379ba01f4bd114b7ad4c965e73fd9","url":"https://github.com/belaban/JGroups"},{"original_method":"/**   \n     * Removes expired gossip entries (entries older than EXPIRY_TIME msec).\n     * @since 2.2.1\n     */\n    private void sweep() {\n\n        long diff, currentTime=System.currentTimeMillis();\n        int num_entries_removed=0;\n        String key=null;\n        List val;\n\n        if(log.isTraceEnabled()) log.trace(\"running sweep\");\n\n        synchronized(gossipTable) {\n            for(Iterator i=gossipTable.keySet().iterator(); i.hasNext();) {\n                key=(String)i.next();\n                val=(List)gossipTable.get(key);\n                if(val != null) {\n                    for(Iterator j=val.iterator(); j.hasNext();) {\n                        AddressEntry ae = (AddressEntry)j.next();\n                        diff=currentTime - ae.timestamp;\n                        if(diff > expiryTime) {\n                            j.remove();\n                            if(log.isTraceEnabled())\n                                log.trace(\"Removed member \" + ae + \" from group \" + key + '(' + diff + \" msecs old)\");\n                            num_entries_removed++;\n                        }\n                    }\n                }\n                if(val.size() == 0)\n                    i.remove();\n            }\n        }\n        \n        if(num_entries_removed > 0) {\n            if(log.isTraceEnabled()) log.trace(\"done (removed \" + num_entries_removed + \" entries)\");\n        }\n    }","id":82220,"modified_method":"/**\n     * Removes expired gossip entries (entries older than EXPIRY_TIME msec).\n     * @since 2.2.1\n     */\n    private void sweep() {\n\n        long diff, currentTime=System.currentTimeMillis();\n        int num_entries_removed=0;\n        String key=null;\n        List val;\n\n        synchronized(gossipTable) {\n            for(Iterator i=gossipTable.keySet().iterator(); i.hasNext();) {\n                key=(String)i.next();\n                val=(List)gossipTable.get(key);\n                if(val != null) {\n                    for(Iterator j=val.iterator(); j.hasNext();) {\n                        AddressEntry ae=(AddressEntry)j.next();\n                        diff=currentTime - ae.timestamp;\n                        if(diff > expiryTime) {\n                            j.remove();\n                            if(log.isTraceEnabled())\n                                log.trace(\"removed \" + ae + \" from \" + key + \" (\" + diff + \" msecs old)\");\n                            num_entries_removed++;\n                        }\n                    }\n                }\n                if(val.size() == 0)\n                    i.remove();\n            }\n        }\n\n        if(num_entries_removed > 0) {\n            if(log.isTraceEnabled()) log.trace(\"done (removed \" + num_entries_removed + \" entries)\");\n        }\n    }","commit_id":"bfc0edb8c7d379ba01f4bd114b7ad4c965e73fd9","url":"https://github.com/belaban/JGroups"},{"original_method":"public void run() {\n            byte[] buf;\n            int len;\n            Address dst_addr=null;\n            String gname;\n\n            while(active) {\n                try {\n                    // 1. Group name is first\n                    gname=input.readUTF();\n\n                    // 2. Second is the destination address\n                    dst_addr=Util.readAddress(input);\n\n                    if (log.isTraceEnabled()) {\n                        log.trace(\"group \" + gname + \", routing request to \" + (dst_addr == null ? \"all\" : dst_addr.toString()));\n                    }\n\n                    // 3. Then the length of the byte buffer representing the message\n                    len=input.readInt();\n                    if(len == 0) {\n                        if(log.isWarnEnabled()) log.warn(\"received null message\");\n                        continue;\n                    }\n\n                    // 4. Finally the message itself, as a byte buffer\n                    buf=new byte[len];\n                    input.readFully(buf, 0, buf.length);  // message\n\n                    // Then route the message to everyone else except me\n                    route(dst_addr, gname, buf, addr);\n                }\n                catch(EOFException io_ex) {\n                    if(log.isTraceEnabled())\n                        log.trace(\"client \" +sock.getInetAddress().getHostName() + ':' + sock.getPort() +\n                                  \" closed connection; removing it from routing table\");\n                    removeEntry(sock); // will close socket\n                    return;\n                }\n                catch(Exception e) {\n                    if(log.isErrorEnabled()) log.error(\"exception=\" + e);\n                    break;\n                }\n            }\n            closeSocket();\n        }","id":82221,"modified_method":"public void run() {\n            byte[] buf;\n            int len;\n            Address dst_addr=null;\n            String gname;\n\n            while(active) {\n                try {\n                    // 1. Group name is first\n                    gname=input.readUTF();\n\n                    // 2. Second is the destination address\n                    dst_addr=Util.readAddress(input);\n\n                    //if(log.isTraceEnabled()) {\n                      //  log.trace(\"group \" + gname + \", routing request to \" + (dst_addr == null? \"all\" : dst_addr.toString()));\n                    //}\n\n                    // 3. Then the length of the byte buffer representing the message\n                    len=input.readInt();\n                    if(len == 0) {\n                        if(log.isWarnEnabled()) log.warn(\"received null message\");\n                        continue;\n                    }\n\n                    // 4. Finally the message itself, as a byte buffer\n                    buf=new byte[len];\n                    input.readFully(buf, 0, buf.length);  // message\n                    route(dst_addr, gname, buf, addr);\n                }\n                catch(EOFException io_ex) {\n                    if(log.isTraceEnabled())\n                        log.trace(\"client \" + sock.getInetAddress().getHostName() + ':' + sock.getPort() +\n                                \" closed connection; removing it from routing table\");\n                    removeEntry(sock); // will close socket\n                    return;\n                }\n                catch(Exception e) {\n                    if(log.isErrorEnabled()) log.error(\"exception=\" + e);\n                    break;\n                }\n            }\n            closeSocket();\n        }","commit_id":"bfc0edb8c7d379ba01f4bd114b7ad4c965e73fd9","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * Cleans the routing tables while the Router is going down.\n     **/\n    private void cleanup() {\n\n        // shutdown the routing threads and cleanup the tables\n        synchronized(routingTable) {\n            for(Iterator i=routingTable.keySet().iterator(); i.hasNext();) {\n                String gname=(String)i.next();\n                List l=(List)routingTable.get(gname);\n                if (l!=null) {\n                    for(Iterator j=l.iterator(); j.hasNext(); ) {\n                        AddressEntry e = (AddressEntry)j.next();\n                        e.destroy();\n                    }\n                }\n            }\n            routingTable.clear();\n            if(log.isInfoEnabled()) log.info(\"routing table cleared\");\n        }\n        synchronized(gossipTable) {\n            gossipTable.clear();\n            if(log.isInfoEnabled()) log.info(\"gossip table cleared\");\n        }\n\n    }","id":82222,"modified_method":"/**\n     * Cleans the routing tables while the Router is going down.\n     */\n    private void cleanup() {\n\n        // shutdown the routing threads and cleanup the tables\n        synchronized(routingTable) {\n            for(Iterator i=routingTable.keySet().iterator(); i.hasNext();) {\n                String gname=(String)i.next();\n                List l=(List)routingTable.get(gname);\n                if(l != null) {\n                    for(Iterator j=l.iterator(); j.hasNext();) {\n                        AddressEntry e=(AddressEntry)j.next();\n                        e.destroy();\n                    }\n                }\n            }\n            routingTable.clear();\n        }\n        synchronized(gossipTable) {\n            gossipTable.clear();\n        }\n\n    }","commit_id":"bfc0edb8c7d379ba01f4bd114b7ad4c965e73fd9","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * JBoss MBean lifecycle operation. Called after create(). When this method\n     * is called, the managed attributes have already been set.<br>\n     * Brings the Router in fully functional state.\n     **/\n    public void start() throws Exception {\n\n        if (srvSock!=null) {\n            throw new Exception(\"Router already started.\");\n        }\n\n        if (bindAddressString!=null) {\n            bindAddress = InetAddress.getByName(bindAddressString);\n            srvSock = new ServerSocket(port, 50, bindAddress);  \n        }\n        else {\n            srvSock = new ServerSocket(port, 50);  \n        }\n\n        // start the main server thread\n        new Thread(new Runnable() {\n                public void run() {\n                    mainLoop();\n                    cleanup();\n                }\n            }, \"JGroups Router Main Thread\").start();\n\n        // starts the cache sweeper as daemon thread, so we won't block on it\n        // upon termination\n        timer = new Timer(true);   \n        timer.schedule(new TimerTask() {\n                public void run() {\n                    sweep();\n                }\n            }, expiryTime, expiryTime);\n    }","id":82223,"modified_method":"/**\n     * JBoss MBean lifecycle operation. Called after create(). When this method\n     * is called, the managed attributes have already been set.<br>\n     * Brings the Router in fully functional state.\n     */\n    public void start() throws Exception {\n        if(srvSock != null) {\n            throw new Exception(\"Router already started.\");\n        }\n\n        if(bindAddressString != null) {\n            bindAddress=InetAddress.getByName(bindAddressString);\n            srvSock=new ServerSocket(port, 50, bindAddress);\n        }\n        else {\n            srvSock=new ServerSocket(port, 50);\n        }\n\n        up=true;\n\n        // start the main server thread\n        new Thread(new Runnable() {\n            public void run() {\n                mainLoop();\n                cleanup();\n            }\n        }, \"GossipRouter\").start();\n\n        // starts the cache sweeper as daemon thread, so we won't block on it\n        // upon termination\n        timer=new Timer(true);\n        timer.schedule(new TimerTask() {\n            public void run() {\n                sweep();\n            }\n        }, expiryTime, expiryTime);\n    }","commit_id":"bfc0edb8c7d379ba01f4bd114b7ad4c965e73fd9","url":"https://github.com/belaban/JGroups"},{"original_method":"private void route(Address dest, String dest_group, byte[] msg, Address sender) {\n        if(log.isTraceEnabled()) {\n            int len=msg != null? msg.length : 0;\n            log.trace(\"routing request from \" + sender + \" for \"+dest_group+\" to \" +\n                      (dest==null?\"ALL\":dest.toString())+\", \" + len + \" bytes\");\n        }\n\n        if(dest == null) {\n            // send to all members in group dest.getChannelName()\n            if(dest_group == null) {\n                if(log.isErrorEnabled()) log.error(\"both dest address and group are null\");\n                return;\n            }\n            else {\n                sendToAllMembersInGroup(dest_group, msg, sender);\n            }\n        }\n        else {                  \n            // send to destination address\n            AddressEntry ae = findAddressEntry(dest);\n            if (ae == null) {\n                if(log.isErrorEnabled()) log.error(\"cannot find \" + dest + \" in the routing table\");\n                return;\n            }\n            if (ae.output==null) {\n                if(log.isErrorEnabled()) log.error(dest + \" is associated with a null output stream\");\n                return;\n            }\n            try {\n                sendToMember(dest, ae.output, msg);\n            }\n            catch(Exception e) {\n                if(log.isErrorEnabled()) log.error(\"failed sending message to \"+dest+\": \"+e.getMessage());\n                removeEntry(ae.sock); // will close socket\n            }\n        }\n    }","id":82224,"modified_method":"private void route(Address dest, String dest_group, byte[] msg, Address sender) {\n        //if(log.isTraceEnabled()) {\n          //  int len=msg != null? msg.length : 0;\n            //log.trace(\"routing request from \" + sender + \" for \" + dest_group + \" to \" +\n              //      (dest == null? \"ALL\" : dest.toString()) + \", \" + len + \" bytes\");\n        //}\n\n        if(dest == null) {\n            // send to all members in group dest.getChannelName()\n            if(dest_group == null) {\n                if(log.isErrorEnabled()) log.error(\"both dest address and group are null\");\n            }\n            else {\n                sendToAllMembersInGroup(dest_group, msg, sender);\n            }\n        }\n        else {\n            // send to destination address\n            AddressEntry ae=findAddressEntry(dest);\n            if(ae == null) {\n                if(log.isErrorEnabled())\n                    log.error(\"cannot find \" + dest + \" in the routing table, routing table=\\n\" + dumpRoutingTable() +\n                            \"\\ngossip table=\\n\" + dumpGossipTable());\n                return;\n            }\n            if(ae.output == null) {\n                if(log.isErrorEnabled()) log.error(dest + \" is associated with a null output stream\");\n                return;\n            }\n            try {\n                sendToMember(dest, ae.output, msg, sender);\n            }\n            catch(Exception e) {\n                if(log.isErrorEnabled()) log.error(\"failed sending message to \" + dest + \": \" + e.getMessage());\n                removeEntry(ae.sock); // will close socket\n            }\n        }\n    }","commit_id":"bfc0edb8c7d379ba01f4bd114b7ad4c965e73fd9","url":"https://github.com/belaban/JGroups"},{"original_method":"public static String requestTypeToString(int type) {\n        return\n            type == GET ? \"GET\" :\n                (type == REGISTER ? \"REGISTER\" :\n                    (type == DUMP ? \"DUMP\" :\n                        (type == SHUTDOWN ? \"SHUTDOWN\" : \"UNKNOWN REQUEST: \"+type)));\n    }","id":82225,"modified_method":"public static String type2String(int type) {\n        switch(type) {\n            case CONNECT:\n                return \"CONNECT\";\n            case DISCONNECT:\n                return \"DISCONNECT\";\n            case REGISTER:\n                return \"REGISTER\";\n            case GOSSIP_GET:\n                return \"GOSSIP_GET\";\n            case ROUTER_GET:\n                return \"ROUTER_GET\";\n            case GET_RSP:\n                return \"GET_RSP\";\n            case UNREGISTER:\n                return \"UNREGISTER\";\n            case DUMP:\n                return \"DUMP\";\n            case SHUTDOWN:\n                return \"SHUTDOWN\";\n            default:\n                return \"unknown\";\n        }\n    }","commit_id":"bfc0edb8c7d379ba01f4bd114b7ad4c965e73fd9","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * The main server loop. Runs on the JGroups Router Main Thread.\n     **/\n    private void mainLoop() {\n        Socket sock = null;\n        DataInputStream input = null;\n        DataOutputStream output = null;\n        Address peer_addr = null;\n        byte[] buf;\n        int len, type = -1;\n        String gname = null;\n        Date d;\n        boolean up = true;\n\n        if(bindAddress == null) {\n            bindAddress=srvSock.getInetAddress();\n        }\n        d=new Date();\n        System.out.println(\"GossipRouter started at \" + d +\n                           \"\\nListening on port \" + port + \" bound on address \" + bindAddress + '\\n');\n        d=null;\n\n        while(up) {\n\n            try {\n                sock=srvSock.accept();\n                sock.setSoLinger(true, 500);\n\n                if(log.isTraceEnabled()) {\n                    log.trace(\"router accepted connection from \"+sock);\n                }\n\n                final BufferedInputStream bis = new BufferedInputStream(sock.getInputStream());\n                final Promise waitArea = new Promise();\n                final Socket s = sock;\n\n                // @since 2.2.1\n                // Handling of gossip requests on a different thread allows \n                // the GossipRouter to serve both routing and gossip requests.\n                // The GossipRouter stays backward compatible, old clients \n                // shouldn't be aware they talk to a merged Router/GossipServer.\n\n               Thread t = new Thread(new Runnable() {\n                        public void run() {\n                            ObjectInputStream ois = null;\n                            try {\n                                bis.mark(MARK_BUFFER_SIZE);\n                                // blocks until gossip request or 'forever'\n                                ois = new ObjectInputStream(bis);\n                                GossipData gossip_req = (GossipData)ois.readObject();\n\n                                // it is a gossip request, set the main thread free\n                                waitArea.setResult(GOSSIP_REQUEST);\n\n                                GossipData gresp = processGossip(gossip_req);\n                                if (gresp != null) {\n                                    ObjectOutputStream oos = new ObjectOutputStream(s.getOutputStream());\n                                    oos.writeObject(gresp);\n                                    oos.close();\n                                }\n                                bis.close();\n                                s.close();\n                            }\n                            catch(Exception e) {\n                                if(log.isDebugEnabled()) log.debug(\"gossip thread exception :\"+e);\n                                waitArea.setResult(GOSSIP_FAILURE);\n                            }\n                            finally {\n                                try {\n                                    ois.close();\n                                }\n                                catch(Exception e) {\n                                    // OK\n                                }\n                            }\n                        }\n                    }, \"Gossip Request Thread\");\n\n                t.start();\n\n                Object waitResult = waitArea.getResult(gossipRequestTimeout);\n                waitArea.reset();\n\n                if (waitResult != null) {\n                    // gossip request, let the gossip thread deal with it\n                    continue;\n                }\n\n                // timeout, this is a routing request\n\n                peer_addr = new IpAddress(sock.getInetAddress(), sock.getPort());\n                output = new DataOutputStream(sock.getOutputStream());\n                \n                // return the address of the peer so it can set it\n                buf = Util.objectToByteBuffer(peer_addr);\n                output.writeInt(buf.length);\n                output.write(buf, 0, buf.length);\n\n                // The gossip thread still waits for a serialized object, so\n                // wait that read to fail. If it actually gets a GossipData,\n                // that's an error condition we should handle here\n                waitResult = waitArea.getResult(routingClientReplyTimeout);\n\n                if (waitResult == null) {\n                    // timeout\n                    throw new Exception(\"Timeout waiting for router client answer\");\n                }\n                else if (waitResult == GOSSIP_REQUEST) {\n                    // lazy gossip client, let it handle its business, it will\n                    // fail anyway\n                    output.close();\n                    continue;\n                }\n\n                bis.reset();\n                input=new DataInputStream(bis);\n\n                type=input.readInt();\n                if(log.isTraceEnabled()) {\n                    log.trace(\"request of type \"+requestTypeToString(type));\n                }\n\n                gname=input.readUTF();\n\n\n                // We can have 2 kinds of messages at this point: GET requests or REGISTER requests.\n                // GET requests are processed right here, REGISTRATION requests cause the spawning of\n                // a separate thread handling it (long running thread as it will do the message routing\n                // on behalf of that client for the duration of the client's lifetime).\n\n                switch(type) {\n                case GossipRouter.GET:\n                    processGetRequest(sock, output, gname); // closes sock after processing\n                    break;\n                case GossipRouter.DUMP:\n                    processDumpRequest(sock, output); // closes sock after processing\n                    break;\n                case GossipRouter.REGISTER:\n                    Address addr;\n                    len=input.readInt();\n                    buf=new byte[len];\n                    input.readFully(buf, 0, buf.length); // read Address\n                    addr=(Address)Util.objectFromByteBuffer(buf);\n                    SocketThread st = new SocketThread(sock, input, addr);\n                    addEntry(gname, new AddressEntry(addr, sock, st, output));\n                    st.start();\n                    break;\n                case GossipRouter.SHUTDOWN:\n                    if(log.isInfoEnabled()) log.info(\"router shutting down\");\n                    output.writeInt(SHUTDOWN_OK);\n                    output.flush();\n                    try {\n                        sock.close();\n                    }\n                    catch(Exception e) {\n                        // OK, going down anyway\n                    }\n                    up = false;\n                    continue;\n                default:\n                    if(log.isErrorEnabled()) log.error(\"request of type \" + type + \" not recognized\");\n                }\n            }\n            catch(Exception e) {\n                if(log.isErrorEnabled()) log.error(\"failure handling a client connection: \" + e.getMessage(), e);\n                try {\n                    sock.close();\n                }\n                catch(IOException e2) {\n                    if(log.isWarnEnabled()) log.warn(\"failed to close socket \"+sock);\n                }\n            }\n        }\n    }","id":82226,"modified_method":"/**\n     * The main server loop. Runs on the JGroups Router Main Thread.\n     */\n    private void mainLoop() {\n        Socket sock=null;\n        DataInputStream input=null;\n        DataOutputStream output=null;\n        Address peer_addr=null, mbr;\n\n        if(bindAddress == null) {\n            bindAddress=srvSock.getInetAddress();\n        }\n        System.out.println(\"GossipRouter started at \" + new Date() +\n                \"\\nListening on port \" + port + \" bound on address \" + bindAddress + '\\n');\n\n        GossipData req;\n        String group;\n\n        while(up && srvSock != null) {\n            try {\n                sock=srvSock.accept();\n                sock.setSoLinger(true, 500);\n                input=new DataInputStream(sock.getInputStream());\n                // if(log.isTraceEnabled())\n                   // log.trace(\"accepted connection from \" + sock);\n\n                req=new GossipData();\n                req.readFrom(input);\n\n                switch(req.getType()) {\n                    case GossipRouter.REGISTER:\n                        mbr=req.getAddress();\n                        group=req.getGroup();\n                        if(log.isTraceEnabled())\n                            log.trace(\"REGISTER(\" + group + \", \" + mbr + \")\");\n                        if(group == null || mbr == null) {\n                            if(log.isErrorEnabled()) log.error(\"group or member is null, cannot register member\");\n                        }\n                        else\n                            addGossipEntry(group, new AddressEntry(mbr));\n                        Util.close(input);\n                        Util.close(sock);\n                        break;\n\n                    case GossipRouter.UNREGISTER:\n                        mbr=req.getAddress();\n                        group=req.getGroup();\n                        if(log.isTraceEnabled())\n                            log.trace(\"UNREGISTER(\" + group + \", \" + mbr + \")\");\n                        if(group == null || mbr == null) {\n                            if(log.isErrorEnabled()) log.error(\"group or member is null, cannot unregister member\");\n                        }\n                        else\n                            removeGossipEntry(group, mbr);\n                        Util.close(input);\n                        Util.close(output);\n                        Util.close(sock);\n                        break;\n\n                    case GossipRouter.GOSSIP_GET:\n                        group=req.getGroup();\n                        List mbrs=null;\n                        List l=(List)gossipTable.get(group);\n                        if(l != null) {\n                            mbrs=new LinkedList();\n                            for(Iterator i=l.iterator(); i.hasNext();) {\n                                AddressEntry e=(AddressEntry)i.next();\n                                mbrs.add(e.addr);\n                            }\n                        }\n                        if(log.isTraceEnabled())\n                            log.trace(\"GOSSIP_GET(\" + group + \") --> \" + mbrs);\n                        output=new DataOutputStream(sock.getOutputStream());\n                        GossipData rsp=new GossipData(GossipRouter.GET_RSP, group, null, mbrs);\n                        rsp.writeTo(output);\n                        Util.close(input);\n                        Util.close(output);\n                        Util.close(sock);\n                        break;\n\n                    case GossipRouter.ROUTER_GET:\n                        group=req.getGroup();\n                        output=new DataOutputStream(sock.getOutputStream());\n                        List ret=getMembers(group);\n                        if(log.isTraceEnabled())\n                            log.trace(\"ROUTER_GET(\" + group + \") --> \" + ret);\n                        rsp=new GossipData(GossipRouter.GET_RSP, group, null, ret);\n                        rsp.writeTo(output);\n                        Util.close(input);\n                        Util.close(output);\n                        Util.close(sock);\n                        break;\n\n                    case GossipRouter.DUMP:\n                        output=new DataOutputStream(sock.getOutputStream());\n                        output.writeUTF(dumpRoutingTable());\n                        Util.close(input);\n                        Util.close(output);\n                        Util.close(sock);\n                        break;\n\n                    case GossipRouter.CONNECT:\n                        output=new DataOutputStream(sock.getOutputStream());\n                        peer_addr=new IpAddress(sock.getInetAddress(), sock.getPort());\n                        output=new DataOutputStream(sock.getOutputStream());\n                        // return the address of the peer so it can set it\n                        Util.writeAddress(peer_addr, output);\n                        String group_name=req.getGroup();\n                        if(log.isTraceEnabled())\n                            log.trace(\"CONNECT(\" + group_name + \", \" + peer_addr + \")\");\n                        SocketThread st=new SocketThread(sock, input, peer_addr);\n                        addEntry(group_name, new AddressEntry(peer_addr, sock, st, output));\n                        st.start();\n                        break;\n\n                    case GossipRouter.DISCONNECT:\n                        Address addr=req.getAddress();\n                        group_name=req.getGroup();\n                        removeEntry(group_name, addr);\n                        if(log.isTraceEnabled())\n                            log.trace(\"DISCONNECT(\" + group_name + \", \" + addr + \")\");\n                        Util.close(input);\n                        Util.close(output);\n                        Util.close(sock);\n                        break;\n\n                    case GossipRouter.SHUTDOWN:\n                        if(log.isInfoEnabled()) log.info(\"router shutting down\");\n                        Util.close(input);\n                        Util.close(output);\n                        Util.close(sock);\n                        up=false;\n                        break;\n                    default:\n                        if(log.isWarnEnabled())\n                            log.warn(\"received unkown gossip request (gossip=\" + req + ')');\n                        break;\n                }\n            }\n            catch(Exception e) {\n                if(up)\n                    if(log.isErrorEnabled()) log.error(\"failure handling a client connection\", e);\n                Util.close(input);\n                Util.close(output);\n                Util.close(sock);\n            }\n        }\n    }","commit_id":"bfc0edb8c7d379ba01f4bd114b7ad4c965e73fd9","url":"https://github.com/belaban/JGroups"},{"original_method":"public static void main(String[] args) {\n        if(args.length != 2) {\n            System.out.println(\"RouterStub <host> <port>\");\n            return;\n        }\n        RouterStub stub=new RouterStub(args[0], Integer.parseInt(args[1]));\n        Address my_addr;\n        boolean rc;\n        final String groupname=\"BelaGroup\";\n        Message msg;\n        List mbrs;\n\n        try {\n            my_addr=stub.connect();\n            System.out.println(\"My address is \" + my_addr);\n\n            System.out.println(\"Registering under \" + groupname);\n            rc=stub.register(groupname);\n            System.out.println(\"Done, rc=\" + rc);\n\n\n            System.out.println(\"Getting members of \" + groupname + \": \");\n            mbrs=stub.get(groupname);\n            System.out.println(\"Done, mbrs are \" + mbrs);\n\n\n            for(int i=0; i < 10; i++) {\n                msg=new Message(null, my_addr, \"Bela #\" + i);\n                msg.putHeader(\"TUNNEL\", new TunnelHeader(groupname));\n                rc=stub.send(msg, groupname);\n                System.out.println(\"Sent msg, rc=\" + rc);\n            }\n\n            for(int i=0; i < 10; i++) {\n                System.out.println(\"stub.receive():\");\n                msg=stub.receive();\n                System.out.println(\"Received msg\");\n            }\n\n        }\n        catch(Exception ex) {\n            log.error(ex);\n        }\n        finally {\n            stub.disconnect();\n        }\n    }","id":82227,"modified_method":"public static void main(String[] args) {\n        if(args.length != 2) {\n            System.out.println(\"RouterStub <host> <port>\");\n            return;\n        }\n        RouterStub stub=new RouterStub(args[0], Integer.parseInt(args[1])),\n                   stub2=new RouterStub(args[0], Integer.parseInt(args[1]));\n        Address my_addr;\n        boolean rc;\n        final String groupname=\"BelaGroup\";\n        Message msg;\n        List mbrs;\n\n        try {\n            System.out.println(\"Registering under \" + groupname);\n            my_addr=stub.connect(groupname);\n            System.out.println(\"My address is \" + my_addr);\n\n            stub2.connect(groupname);\n\n            System.out.println(\"Getting members of \" + groupname + \": \");\n            mbrs=stub.get(groupname);\n            System.out.println(\"Done, mbrs are \" + mbrs);\n\n            for(int i=1; i <= 10; i++) {\n                msg=new Message(null, my_addr, \"Bela #\" + i);\n                msg.putHeader(\"TUNNEL\", new TunnelHeader(groupname));\n                rc=stub2.send(msg, groupname);\n                System.out.println(\"Sent msg #\" + i + \", rc=\" + rc);\n            }\n\n            for(int i=0; i < 10; i++) {\n                msg=stub.receive();\n                System.out.println(\"Received msg \" + msg.getObject());\n            }\n        }\n        catch(Exception ex) {\n            log.error(ex);\n        }\n        finally {\n            stub.disconnect();\n        }\n    }","commit_id":"bfc0edb8c7d379ba01f4bd114b7ad4c965e73fd9","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * Establishes a connection to the router. The router will send my address (its peer address) back\n     * as an Address, which is subsequently returned to the caller. The reason for not using\n     * InetAddress.getLocalHost() or sock.getLocalAddress() is that this may not be permitted\n     * with certain security managers (e.g if this code runs in an applet). Also, some network\n     * address translation (NAT) (e.g IP Masquerading) may return the wrong address.\n     */\n    public synchronized Address connect() throws Exception {\n        Address ret=null;\n        int len=0;\n        byte[] buf;\n\n        try {\n            sock=new Socket(router_host, router_port);\n            sock.setSoLinger(true, 500);\n\n            // Retrieve our own address by reading it from the socket\n            input=new DataInputStream(sock.getInputStream());\n            len=input.readInt();\n            buf=new byte[len];\n            input.readFully(buf);\n            ret=(Address)Util.objectFromByteBuffer(buf);\n            output=new DataOutputStream(sock.getOutputStream());\n            setConnected(true);\n        }\n        catch(Exception e) {\n            setConnected(false);\n            if(sock != null)\n                sock.close();\n            throw e;\n        }\n\n        // IpAddress uses InetAddress.getLocalHost() to find the host. May not be permitted in applets !\n        if(ret == null && sock != null)\n            ret=new org.jgroups.stack.IpAddress(sock.getLocalPort());\n\n        // set local address; this is the one that we will use from now on !\n        if(local_addr == null)\n            local_addr=ret;\n\n        return ret;\n    }","id":82228,"modified_method":"/**\n     Register this process with the router under <code>groupname<\/code>.\n     @param groupname The name of the group under which to register\n     @return Address Our address, as returned from the GossipRouter\n     */\n    public synchronized Address connect(String groupname) {\n        if(groupname == null || groupname.length() == 0) {\n            if(log.isErrorEnabled()) log.error(\"groupname is null\");\n            return null;\n        }\n\n        this.groupname=groupname;\n        try {\n            sock=new Socket(router_host, router_port);\n            sock.setSoLinger(true, 500);\n            output=new DataOutputStream(sock.getOutputStream());\n            GossipData req=new GossipData(GossipRouter.CONNECT, groupname, null, null);\n            req.writeTo(output);\n            output.flush();\n            input=new DataInputStream(sock.getInputStream()); // retrieve our own address by reading it from the socket\n            Address ret=Util.readAddress(input);\n            setConnected(true);\n            // IpAddress uses InetAddress.getLocalHost() to find the host. May not be permitted in applets !\n            if(ret == null && sock != null)\n                ret=new org.jgroups.stack.IpAddress(sock.getLocalPort());\n\n            // set local address; this is the one that we will use from now on !\n            local_addr=ret;\n            return ret;\n        }\n        catch(Exception e) {\n            Util.close(sock); Util.close(input); Util.close(output);\n            if(log.isErrorEnabled()) log.error(\"failed connecting\", e);\n            setConnected(false);\n            return null;\n        }\n    }","commit_id":"bfc0edb8c7d379ba01f4bd114b7ad4c965e73fd9","url":"https://github.com/belaban/JGroups"},{"original_method":"/** Tries to establish connection to router. Tries until router is up again. */\n    public boolean reconnect(int max_attempts) {\n        Address new_addr=null;\n        int num_atttempts=0;\n\n        if(connected) return false;\n        disconnect();\n        reconnect=true;\n        while(reconnect && (num_atttempts++ < max_attempts || max_attempts == -1)) {\n            try {\n                if((new_addr=connect()) != null)\n                    break;\n            }\n            catch(Exception ex) { // this is a normal case\n                if(log.isTraceEnabled()) log.trace(\"failed reconnecting\", ex);\n            }\n            if(max_attempts == -1)\n                Util.sleep(RECONNECT_TIMEOUT);\n        }\n        if(new_addr == null) {\n            return false;\n        }\n        if(log.isTraceEnabled()) log.trace(\"client reconnected, new address is \" + new_addr);\n        return true;\n    }","id":82229,"modified_method":"/** Tries to establish connection to router. Tries until router is up again. */\n    public boolean reconnect(int max_attempts) {\n        Address new_addr=null;\n        int num_atttempts=0;\n\n        if(connected) return false;\n        disconnect();\n        reconnect=true;\n        while(reconnect && (num_atttempts++ < max_attempts || max_attempts == -1)) {\n            try {\n                if((new_addr=connect(groupname)) != null)\n                    break;\n            }\n            catch(Exception ex) { // this is a normal case\n                if(log.isTraceEnabled()) log.trace(\"failed reconnecting\", ex);\n            }\n            if(max_attempts == -1)\n                Util.sleep(RECONNECT_TIMEOUT);\n        }\n        if(new_addr == null) {\n            return false;\n        }\n        else\n            local_addr=new_addr;\n        if(log.isTraceEnabled()) log.trace(\"client reconnected, new address is \" + new_addr);\n        return true;\n    }","commit_id":"bfc0edb8c7d379ba01f4bd114b7ad4c965e73fd9","url":"https://github.com/belaban/JGroups"},{"original_method":"/** Receives a message from the router (blocking mode). If the connection is down,\n     false is returned, otherwise true */\n    public Message receive() {\n        Message ret=null;\n        byte[] buf=null;\n        int len;\n\n        if(sock == null || output == null || input == null) {\n            // if(log.isErrorEnabled()) log.error(\"no connection to router\");\n            setConnected(false);\n            return null;\n        }\n        Address dest;\n        try {\n            dest=Util.readAddress(input);\n            len=input.readInt();\n            if(len == 0) {\n                ret=null;\n            }\n            else {\n                buf=new byte[len];\n                input.readFully(buf, 0, len);\n                ret=new Message(false);\n                ByteArrayInputStream tmp=new ByteArrayInputStream(buf);\n                DataInputStream in=new DataInputStream(tmp);\n                ret.readFrom(in);\n                ret.setDest(dest);\n                in.close();\n            }\n        }\n        catch(Exception e) {\n            if (connected) {\n                if(log.isTraceEnabled()) log.trace(\"failed receiving message\", e);\n            }\n            setConnected(false);\n            return null;\n        }\n\n        if(log.isTraceEnabled()) log.trace(\"received \"+ret);\n        return ret;\n    }","id":82230,"modified_method":"/** Receives a message from the router (blocking mode). If the connection is down,\n     false is returned, otherwise true */\n    public Message receive() throws Exception {\n        Message ret=null;\n        byte[] buf=null;\n        int len;\n\n        if(sock == null || output == null || input == null) {\n            // if(log.isErrorEnabled()) log.error(\"no connection to router\");\n            setConnected(false);\n            return null;\n        }\n        Address dest;\n        try {\n            dest=Util.readAddress(input);\n            len=input.readInt();\n            if(len == 0) {\n                ret=null;\n            }\n            else {\n                buf=new byte[len];\n                input.readFully(buf, 0, len);\n                ret=new Message(false);\n                ByteArrayInputStream tmp=new ByteArrayInputStream(buf);\n                DataInputStream in=new DataInputStream(tmp);\n                ret.readFrom(in);\n                ret.setDest(dest);\n                in.close();\n            }\n            if(log.isTraceEnabled()) log.trace(\"received \"+ret);\n            return ret;\n        }\n        catch(Exception e) {\n            setConnected(false);\n            throw e;\n        }\n    }","commit_id":"bfc0edb8c7d379ba01f4bd114b7ad4c965e73fd9","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     Retrieves the membership (list of Addresses) for a given group. This is mainly used by the PING\n     protocol to obtain its initial membership. This is used infrequently, so don't maintain socket\n     for the entire time, but create/delete it on demand.\n     */\n    public List get(String groupname) {\n        List ret=null;\n        Socket tmpsock=null;\n        DataOutputStream tmpOutput=null;\n        DataInputStream tmpInput=null;\n        int len;\n        byte[] buf;\n\n\n        if(groupname == null || groupname.length() == 0) {\n            if(log.isErrorEnabled()) log.error(\"groupname is null\");\n            return null;\n        }\n\n        try {\n            tmpsock=new Socket(router_host, router_port);\n            tmpsock.setSoLinger(true, 500);\n            tmpInput=new DataInputStream(tmpsock.getInputStream());\n\n            len=tmpInput.readInt();     // discard my own address\n            buf=new byte[len];       // (first thing returned by router on acept())\n            tmpInput.readFully(buf);\n            tmpOutput=new DataOutputStream(tmpsock.getOutputStream());\n\n            // request membership for groupname\n            tmpOutput.writeInt(Router.GET);\n            tmpOutput.writeUTF(groupname);\n\n            // wait for response (List)\n            len=tmpInput.readInt();\n            if(len == 0)\n                return null;\n\n            buf=new byte[len];\n            tmpInput.readFully(buf);\n            ret=(List)Util.objectFromByteBuffer(buf);\n        }\n        catch(Exception e) {\n            if(log.isErrorEnabled()) log.error(\"exception=\" + e);\n        }\n        finally {\n            try {\n                if(tmpOutput != null) tmpOutput.close();\n            }\n            catch(Exception e) {\n            }\n            try {\n                if(tmpInput != null) tmpInput.close();\n            }\n            catch(Exception e) {\n            }\n            try {\n                if(tmpsock != null) tmpsock.close();\n            }\n            catch(Exception e) {\n            }\n        }\n        return ret;\n    }","id":82231,"modified_method":"/**\n     Retrieves the membership (list of Addresses) for a given group. This is mainly used by the PING\n     protocol to obtain its initial membership. This is used infrequently, so don't maintain socket\n     for the entire time, but create/delete it on demand.\n     */\n    public List get(String groupname) {\n        List ret=null;\n        Socket tmpsock=null;\n        DataOutputStream tmpOutput=null;\n        DataInputStream tmpInput=null;\n\n        if(groupname == null || groupname.length() == 0) {\n            if(log.isErrorEnabled()) log.error(\"groupname is null\");\n            return null;\n        }\n\n        try {\n            tmpsock=new Socket(router_host, router_port);\n            tmpsock.setSoLinger(true, 500);\n\n            // request membership for groupname\n            tmpOutput=new DataOutputStream(tmpsock.getOutputStream());\n            GossipData request=new GossipData(GossipRouter.ROUTER_GET, groupname, null, null);\n            request.writeTo(tmpOutput);\n\n            tmpInput=new DataInputStream(tmpsock.getInputStream());\n            GossipData response=new GossipData();\n            response.readFrom(tmpInput);\n            return response.getMembers();\n        }\n        catch(Exception e) {\n            if(log.isErrorEnabled()) log.error(\"exception=\" + e);\n        }\n        finally {\n            Util.close(tmpOutput);\n            Util.close(tmpInput);\n            Util.close(tmpsock);\n        }\n        return ret;\n    }","commit_id":"bfc0edb8c7d379ba01f4bd114b7ad4c965e73fd9","url":"https://github.com/belaban/JGroups"},{"original_method":"/** Closes the socket and the input and output streams associated with it */\n    public synchronized void disconnect() {\n        if(output != null) {\n            try {\n                output.close();\n                output=null;\n            }\n            catch(Exception e) {\n            }\n        }\n\n        if(input != null) {\n            try {\n                input.close();\n                input=null;\n            }\n            catch(Exception e) {\n            }\n        }\n\n        if(sock != null) {\n            try {\n                sock.close();\n                sock=null;\n            }\n            catch(Exception e) {\n            }\n        }\n        setConnected(false);\n        // stop the TUNNEL receiver thread\n        reconnect=false;\n    }","id":82232,"modified_method":"/** Closes the socket and the input and output streams associated with it */\n    public synchronized void disconnect() {\n        try {\n            if(sock == null || output == null || input == null) {\n                if(log.isErrorEnabled()) log.error(\"no connection to router (groupname=\" + groupname + ')');\n                setConnected(false);\n                return;\n            }\n\n            if(groupname == null || groupname.length() == 0) {\n                if(log.isErrorEnabled()) log.error(\"groupname is null\");\n                return;\n            }\n\n            if(local_addr == null) {\n                if(log.isErrorEnabled()) log.error(\"local_addr is null\");\n                return;\n            }\n\n            GossipData req=new GossipData(GossipRouter.DISCONNECT, groupname, local_addr, null);\n            req.writeTo(output);\n            setConnected(false);\n        }\n        catch(Exception e) {\n            if(log.isErrorEnabled()) log.error(\"failed unregistering \" + local_addr, e);\n        }\n        finally {\n            Util.close(output);\n            Util.close(input);\n            Util.close(sock); sock=null;\n            setConnected(false);\n            // stop the TUNNEL receiver thread\n            reconnect=false;\n            local_addr=null;\n        }\n    }","commit_id":"bfc0edb8c7d379ba01f4bd114b7ad4c965e73fd9","url":"https://github.com/belaban/JGroups"},{"original_method":"public synchronized Address connect(String router_host, int router_port) throws Exception {\n        setRouterHost(router_host);\n        setRouterPort(router_port);\n        return connect();\n    }","id":82233,"modified_method":"public Address connect(String groupname, String router_host, int router_port) throws Exception {\n        setRouterHost(router_host);\n        setRouterPort(router_port);\n        return connect(groupname);\n    }","commit_id":"bfc0edb8c7d379ba01f4bd114b7ad4c965e73fd9","url":"https://github.com/belaban/JGroups"},{"original_method":"@Override\n\tpublic void createPartControl(Composite parent) {\n\t\tsuper.createPartControl(parent);\n\t\t// We need ProjectionViewer to support Folding\n\t\tProjectionViewer projectionViewer = (ProjectionViewer) getSourceViewer();\n\t\tprojectionSupport = new ProjectionSupport(projectionViewer, getAnnotationAccess(), getSharedColors());\n\t\tprojectionSupport.addSummarizableAnnotationType(\"org.eclipse.ui.workbench.texteditor.warning\"); //$NON-NLS-1$\n\t\tprojectionSupport.install();\n\t\tprojectionViewer.doOperation(ProjectionViewer.TOGGLE);\n\n\t\t// folding stuff\n\t\tfoldingSupport = new FoldingUpdater();\n\t\tfoldingSupport.bind(getModel(), projectionViewer);\n\t}","id":82234,"modified_method":"@Override\n\tpublic void createPartControl(Composite parent) {\n\t\tsuper.createPartControl(parent);\n\t\t// We need ProjectionViewer to support Folding\n\t\tProjectionViewer projectionViewer = (ProjectionViewer) getSourceViewer();\n\t\tprojectionSupport = new ProjectionSupport(projectionViewer, getAnnotationAccess(), getSharedColors());\n\t\tprojectionSupport.addSummarizableAnnotationType(\"org.eclipse.ui.workbench.texteditor.warning\"); //$NON-NLS-1$\n\t\tprojectionSupport.install();\n\n\t\t// folding stuff\n\t\tIFoldingStructureProvider foldingProvider = ServiceRegistry.getService(languageDescriptor,\n\t\t\t\tIFoldingStructureProvider.class);\n\t\tif (foldingProvider != null) {\n\t\t\tprojectionViewer.doOperation(ProjectionViewer.TOGGLE);\n\t\t\tfoldingSupport = new FoldingUpdater(foldingProvider);\n\t\t\tfoldingSupport.bind(getModel(), projectionViewer);\n\t\t}\n\t}","commit_id":"bd1d2401e4e917fee74c5f00e913d3b3cfe8b2f3","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n\tpublic void dispose() {\n\t\tsuper.dispose();\n\t\tprojectionSupport.dispose();\n\t\tfoldingSupport.unbind();\n\t}","id":82235,"modified_method":"@Override\n\tpublic void dispose() {\n\t\tsuper.dispose();\n\t\tprojectionSupport.dispose();\n\t\tif (foldingSupport != null)\n\t\t\tfoldingSupport.unbind();\n\t}","commit_id":"bd1d2401e4e917fee74c5f00e913d3b3cfe8b2f3","url":"https://github.com/eclipse/xtext"},{"original_method":"private boolean isWhiteSpace(LeafNode ln) {\n\t\treturn ln.isHidden() && ln.getGrammarElement() instanceof LexerRule\n\t\t\t\t&& \"WS\".equals(((LexerRule) ln.getGrammarElement()).getName());\n\t}","id":82236,"modified_method":"private boolean isWhiteSpace(LeafNode ln) {\n\t\treturn ln.isHidden() && ln.getGrammarElement() instanceof LexerRule\n\t\t\t\t&& GrammarConstants.LEXER_RULE_WHITESPACE.equals(((LexerRule) ln.getGrammarElement()).getName());\n\t}","commit_id":"bd1d2401e4e917fee74c5f00e913d3b3cfe8b2f3","url":"https://github.com/eclipse/xtext"},{"original_method":"public void format(IEditorModel editorModel, IDocument document, IRegion region) {\n\t\tindentSB = new StringBuilder();\n\t\tlastLeafNode = null;\n\t\trootNode = editorModel.getParseTreeRootNode();\n\t\tformattingRegion = region;\n\t\tif (rootNode != null) {\n\t\t\tStringBuilder stringBuilder = new StringBuilder();\n\t\t\tformattingRegion = calculateFormattingRegion(region);\n\t\t\tappend(rootNode, stringBuilder);\n\t\t\ttry {\n\t\t\t\tString string = stringBuilder.toString();\n\t\t\t\tif (!document.get().equals(string))\n\t\t\t\t\tdocument.replace(formattingRegion.getOffset(), formattingRegion.getLength(), string);\n\t\t\t}\n\t\t\tcatch (BadLocationException e) {\n\t\t\t\tCoreLog.logError(e);\n\t\t\t}\n\t\t}\n\t}","id":82237,"modified_method":"public final void format(IEditorModel editorModel, IDocument document, IRegion region) {\n\t\tindentSB = new StringBuilder();\n\t\tlastLeafNode = null;\n\t\trootNode = editorModel.getParseTreeRootNode();\n\t\tformattingRegion = region;\n\t\tif (rootNode != null) {\n\t\t\tStringBuilder stringBuilder = new StringBuilder();\n\t\t\tformattingRegion = calculateFormattingRegion(region);\n\t\t\tappend(rootNode, stringBuilder);\n\t\t\ttry {\n\t\t\t\tString string = stringBuilder.toString();\n\t\t\t\tif (!document.get().equals(string))\n\t\t\t\t\tdocument.replace(formattingRegion.getOffset(), formattingRegion.getLength(), string);\n\t\t\t}\n\t\t\tcatch (BadLocationException e) {\n\t\t\t\tCoreLog.logError(e);\n\t\t\t}\n\t\t}\n\t}","commit_id":"bd1d2401e4e917fee74c5f00e913d3b3cfe8b2f3","url":"https://github.com/eclipse/xtext"},{"original_method":"public ITokenTypeDef mlCommentTokenType() {\n\t\tTokenTypeDef ttd = new TokenTypeDef(ML_COMMENT_ID) {\n\t\t\t@Override\n\t\t\tpublic boolean match(LeafNode node) {\n\t\t\t\tif (node.getGrammarElement() instanceof LexerRule) {\n\t\t\t\t\treturn \"ML_COMMENT\".equals(((LexerRule) node.getGrammarElement()).getName());\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t};\n\t\tttd.setName(\"Multi Line Comment\");\n\t\tttd.setTextStyle(new TextStyle(\"33, 97, 65\", null, SWT.NONE, null));\n\t\treturn ttd;\n\t}","id":82238,"modified_method":"public ITokenTypeDef mlCommentTokenType() {\n\t\tTokenTypeDef ttd = new TokenTypeDef(ML_COMMENT_ID) {\n\t\t\t@Override\n\t\t\tpublic boolean match(LeafNode node) {\n\t\t\t\tif (node.getGrammarElement() instanceof LexerRule) {\n\t\t\t\t\treturn GrammarConstants.LEXER_RULE_MLCOMMENT.equals(((LexerRule) node.getGrammarElement())\n\t\t\t\t\t\t\t.getName());\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t};\n\t\tttd.setName(\"Multi Line Comment\");\n\t\tttd.setTextStyle(new TextStyle(\"33, 97, 65\", null, SWT.NONE, null));\n\t\treturn ttd;\n\t}","commit_id":"bd1d2401e4e917fee74c5f00e913d3b3cfe8b2f3","url":"https://github.com/eclipse/xtext"},{"original_method":"/**\n\t * Binds Editor model with Annotation model contained in ProjectionViewer\n\t * \n\t * @param model\n\t * @param viewer\n\t */\n\tpublic void bind(IEditorModel model, ProjectionViewer viewer) {\n\t\tAssert.isLegal(model != null);\n\t\tAssert.isLegal(viewer != null);\n\t\tAssert.isLegal(viewer.getAnnotationModel() != null);\n\t\tAssert.isLegal(viewer.getDocument() != null);\n\t\tthis.model = model;\n\t\tthis.annotationModel = viewer.getProjectionAnnotationModel();\n\t\tthis.document = viewer.getDocument();\n\t\tstartAnnotationCreation();\n\t\tmodel.addModelListener(editorModelListener);\n\t}","id":82239,"modified_method":"/**\n\t * Binds Editor model with Annotation model contained in ProjectionViewer\n\t * \n\t * @param model\n\t * @param viewer\n\t */\n\tpublic void bind(IEditorModel model, ProjectionViewer viewer) {\n\t\tAssert.isLegal(model != null);\n\t\tAssert.isLegal(viewer != null);\n\t\tAssert.isLegal(viewer.getAnnotationModel() != null);\n\t\tAssert.isLegal(viewer.getDocument() != null);\n\t\tthis.model = model;\n\t\tthis.viewer = viewer;\n\t\tthis.foldingStructureProvider.updateFoldingStructure(model, viewer);\n\t\tthis.model.addModelListener(editorModelListener);\n\t}","commit_id":"bd1d2401e4e917fee74c5f00e913d3b3cfe8b2f3","url":"https://github.com/eclipse/xtext"},{"original_method":"public void modelChanged(XtextEditorModelChangeEvent event) {\n\t\t\tstartAnnotationCreation();\n\t\t}","id":82240,"modified_method":"public void modelChanged(XtextEditorModelChangeEvent event) {\n\t\t\tfoldingStructureProvider.updateFoldingStructure(model, viewer);\n\t\t}","commit_id":"bd1d2401e4e917fee74c5f00e913d3b3cfe8b2f3","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n\tprotected String before(LeafNode leafNode) {\n\t\tif (\")\".equals(leafNode.getText()) || \"?=\".equals(leafNode.getText()) || \".\".equals(leafNode.getText()))\n\t\t\treturn EMPTY_STRING;\n\t\telse if (\"ParserRule\".equals(getGrammarRuleName(leafNode.getParent()))\n\t\t\t\t&& \"ID\".equals(getGrammarRuleName(leafNode)))\n\t\t\treturn NEW_LINE + NEW_LINE;\n\t\telse if (new BuiltInTokenTypeDef().mlCommentTokenType().match(leafNode)\n\t\t\t\t|| \"language\".equals(leafNode.getText()) || \"generate\".equals(leafNode.getText()))\n\t\t\treturn NEW_LINE;\n\n\t\tLeafNode pLeafNode = previousNode();\n\t\tif (pLeafNode != null) {\n\t\t\tif (\"(\".equals(pLeafNode.getText()) || \".\".equals(pLeafNode.getText())) {\n\t\t\t\treturn EMPTY_STRING;\n\t\t\t}\n\t\t}\n\t\treturn SPACE;\n\t}","id":82241,"modified_method":"@Override\n\tprotected String before(LeafNode leafNode) {\n\t\tif (\")\".equals(leafNode.getText()) || \"?=\".equals(leafNode.getText()) || \".\".equals(leafNode.getText()))\n\t\t\treturn EMPTY_STRING;\n\t\telse if (\"ParserRule\".equals(getGrammarRuleName(leafNode.getParent()))\n\t\t\t\t&& GrammarConstants.LEXER_RULE_ID.equals(getGrammarRuleName(leafNode)))\n\t\t\treturn NEW_LINE + NEW_LINE;\n\t\telse if (new BuiltInTokenTypeDef().mlCommentTokenType().match(leafNode)\n\t\t\t\t|| \"language\".equals(leafNode.getText()) || \"generate\".equals(leafNode.getText()))\n\t\t\treturn NEW_LINE;\n\n\t\tLeafNode pLeafNode = previousNode();\n\t\tif (pLeafNode != null) {\n\t\t\tif (\"(\".equals(pLeafNode.getText()) || \".\".equals(pLeafNode.getText())) {\n\t\t\t\treturn EMPTY_STRING;\n\t\t\t}\n\t\t}\n\t\treturn SPACE;\n\t}","commit_id":"bd1d2401e4e917fee74c5f00e913d3b3cfe8b2f3","url":"https://github.com/eclipse/xtext"},{"original_method":"public void setRange(IDocument document, int offset, int length) {\n\n\t\tAssert.isLegal(document != null);\n\t\tnodeIterator = null;\n\t\tif (Activator.DEBUG_PARSING) {\n\t\t\tSystem.out.print(\"Token Scanner: Parsing Range [\" + offset + \",\" + length + \"]...\");\n\n\t\t}\n\t\tlong start = System.currentTimeMillis();\n\n\t\t// TODO: dependency injection for default element factory in parser\n\t\tIAstFactory elementFactory = ServiceRegistry.getService(languageDescriptor, IAstFactory.class);\n\t\tIParseResult parseResult;\n\t\ttry {\n\t\t\tCompositeNode lastRootNode = null;\n\t\t\tif (lastParseResult == null) {\n\t\t\t\tparseResult = parser.parse(new StringInputStream(document.get()), elementFactory);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlastRootNode = lastParseResult.getRootNode();\n\t\t\t\tint documentGrowth = document.getLength() - lastRootNode.getLength();\n\t\t\t\tint originalLength = length - documentGrowth;\n\t\t\t\tString change = document.get().substring(offset, offset + length);\n\t\t\t\tif (Activator.DEBUG_PARSING)\n\t\t\t\t\tSystem.out.print(\" Reparse segment '\" + change + \"'\" + \" documentGrowth:\" + documentGrowth + \" \");\n\t\t\t\tparseResult = parser.reparse(lastRootNode, offset, originalLength, change);\n\n\t\t\t}\n\t\t\tlastParseResult = parseResult;\n\t\t\tCompositeNode rootNode = parseResult.getRootNode();\n\t\t\tif (rootNode != null) {\n\t\t\t\tnodeIterator = rootNode.getLeafNodes().iterator();\n\t\t\t\tif (lastRootNode != rootNode) {\n\t\t\t\t\trootNode.eAdapters().add(new NodeContentAdapter());\n\t\t\t\t}\n\t\t\t\tint length2 = rootNode.getLength();\n\t\t\t\tif (length2 != document.getLength())\n\t\t\t\t\tthrow new IllegalStateException(\"Document.length=\" + document.getLength() + \" rootNode.length=\"\n\t\t\t\t\t\t\t+ length2);\n\t\t\t}\n\t\t\tif (Activator.DEBUG_PARSING)\n\t\t\t\tSystem.out.println(\"...took \" + (System.currentTimeMillis() - start) + \"ms.\");\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tCoreLog.logError(\"Error during parse process in token scanner. \"\n\t\t\t\t\t+ (e.getLocalizedMessage() != null ? e.getLocalizedMessage() : \"\"), e);\n\t\t\te.printStackTrace();\n\t\t\tif (Activator.DEBUG_PARSING)\n\t\t\t\tSystem.err.println(\"fail!\");\n\t\t}\n\t}","id":82242,"modified_method":"public void setRange(IDocument document, int offset, int length) {\n\n\t\tAssert.isLegal(document != null);\n\t\tnodeIterator = null;\n\t\tif (Activator.DEBUG_PARSING) {\n\t\t\tSystem.out.print(\"Token Scanner: Parsing Range [\" + offset + \",\" + length + \"]...\");\n\n\t\t}\n\t\tlong start = System.currentTimeMillis();\n\n\t\t// TODO: dependency injection for default element factory in parser\n\t\tIAstFactory elementFactory = ServiceRegistry.getService(languageDescriptor, IAstFactory.class);\n\t\tIParseResult parseResult;\n\t\ttry {\n\t\t\tCompositeNode lastRootNode = null;\n\t\t\tif (lastParseResult == null) {\n\t\t\t\tparseResult = parser.parse(new StringInputStream(document.get()), elementFactory);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlastRootNode = lastParseResult.getRootNode();\n\t\t\t\tint documentGrowth = document.getLength() - lastRootNode.getLength();\n\t\t\t\tint originalLength = length - documentGrowth;\n\t\t\t\tString change = document.get().substring(offset, offset + length);\n\t\t\t\tif (Activator.DEBUG_PARSING)\n\t\t\t\t\tSystem.out.print(\" Reparse segment '\" + change.replaceAll(\"\\n\", \"\\\\\\\\n\") + \"'\" + \" documentGrowth:\"\n\t\t\t\t\t\t\t+ documentGrowth + \" \");\n\t\t\t\tparseResult = parser.reparse(lastRootNode, offset, originalLength, change);\n\n\t\t\t}\n\t\t\tlastParseResult = parseResult;\n\t\t\tCompositeNode rootNode = parseResult.getRootNode();\n\t\t\tif (rootNode != null) {\n\t\t\t\tnodeIterator = rootNode.getLeafNodes().iterator();\n\t\t\t\tif (lastRootNode != rootNode) {\n\t\t\t\t\trootNode.eAdapters().add(new NodeContentAdapter());\n\t\t\t\t}\n\t\t\t\t// TODO remove this check if BUG # is fixed and a test is\n\t\t\t\t// created\n\t\t\t\tint length2 = rootNode.getLength();\n\t\t\t\tif (length2 != document.getLength())\n\t\t\t\t\tthrow new IllegalStateException(\"Document.length=\" + document.getLength() + \" rootNode.length=\"\n\t\t\t\t\t\t\t+ length2);\n\t\t\t}\n\t\t\tif (Activator.DEBUG_PARSING)\n\t\t\t\tSystem.out.println(\"...took \" + (System.currentTimeMillis() - start) + \"ms.\");\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tCoreLog.logError(\"Error during parse process in token scanner. \"\n\t\t\t\t\t+ (e.getLocalizedMessage() != null ? e.getLocalizedMessage() : \"\"), e);\n\t\t\te.printStackTrace();\n\t\t\tif (Activator.DEBUG_PARSING)\n\t\t\t\tSystem.err.println(\"fail!\");\n\t\t}\n\t}","commit_id":"bd1d2401e4e917fee74c5f00e913d3b3cfe8b2f3","url":"https://github.com/eclipse/xtext"},{"original_method":"public static void main (String[] argv) {\r\n\t\t// this is only here for me to debug native code faster\r\n\t\tnew SharedLibraryLoader(\"../../extensions/gdx-audio/libs/gdx-audio-natives.jar\").load(\"gdx-audio\");\r\n\t\tnew SharedLibraryLoader(\"../../extensions/gdx-image/libs/gdx-image-natives.jar\").load(\"gdx-image\");\r\n\t\tnew SharedLibraryLoader(\"../../extensions/gdx-freetype/libs/gdx-freetype-natives.jar\").load(\"gdx-freetype\");\r\n\t\tnew SharedLibraryLoader(\"../../extensions/gdx-controllers/gdx-controllers-desktop/libs/gdx-controllers-desktop-natives.jar\").load(\"gdx-controllers-desktop\");\r\n\t\tnew SharedLibraryLoader(\"../../gdx/libs/gdx-natives.jar\").load(\"gdx\");\r\n\r\n\t\tMathUtils.atan2(-6.0E-44f,0f);\r\n//\t\tGdxTest test = new AnimationTest();\r\n//\t\tLwjglApplicationConfiguration config = new LwjglApplicationConfiguration();\r\n//\t\tconfig.useGL20 = test.needsGL20();\r\n//\t\tnew LwjglApplication(test, config);\r\n\t}","id":82243,"modified_method":"public static void main (String[] argv) {\r\n\t\t// this is only here for me to debug native code faster\r\n\t\tnew SharedLibraryLoader(\"../../extensions/gdx-audio/libs/gdx-audio-natives.jar\").load(\"gdx-audio\");\r\n\t\tnew SharedLibraryLoader(\"../../extensions/gdx-image/libs/gdx-image-natives.jar\").load(\"gdx-image\");\r\n\t\tnew SharedLibraryLoader(\"../../extensions/gdx-freetype/libs/gdx-freetype-natives.jar\").load(\"gdx-freetype\");\r\n\t\tnew SharedLibraryLoader(\"../../extensions/gdx-controllers/gdx-controllers-desktop/libs/gdx-controllers-desktop-natives.jar\").load(\"gdx-controllers-desktop\");\r\n\t\tnew SharedLibraryLoader(\"../../gdx/libs/gdx-natives.jar\").load(\"gdx\");\r\n\r\n\t\tGdxTest test = new SpriteCacheTest();\r\n\t\tLwjglApplicationConfiguration config = new LwjglApplicationConfiguration();\r\n\t\tconfig.useGL20 = test.needsGL20();\r\n\t\tnew LwjglApplication(test, config);\r\n\t}","commit_id":"5c5f13ec99eaf4ad49c257a2c1f0bc7e7e248339","url":"https://github.com/libgdx/libgdx"},{"original_method":"/** Completes rendering for this SpriteCache.f */\r\n\tpublic void end () {\r\n\t\tif (!drawing) throw new IllegalStateException(\"begin must be called before end.\");\r\n\t\tdrawing = false;\r\n\r\n\t\tif (Gdx.graphics.isGL20Available() == false) {\r\n\t\t\tGL10 gl = Gdx.gl10;\r\n\t\t\tgl.glDepthMask(true);\r\n\t\t\tgl.glDisable(GL10.GL_TEXTURE_2D);\r\n\t\t\tmesh.unbind();\r\n\t\t} else {\r\n\t\t\tshader.end();\r\n\t\t\tGL20 gl = Gdx.gl20;\r\n\t\t\tgl.glDepthMask(true);\r\n\t\t\tmesh.unbind(shader);\r\n\t\t}\r\n\t}","id":82244,"modified_method":"/** Completes rendering for this SpriteCache.f */\r\n\tpublic void end () {\r\n\t\tif (!drawing) throw new IllegalStateException(\"begin must be called before end.\");\r\n\t\tdrawing = false;\r\n\r\n\t\tif (Gdx.graphics.isGL20Available() == false) {\r\n\t\t\tGL10 gl = Gdx.gl10;\r\n\t\t\tgl.glDepthMask(true);\r\n\t\t\tgl.glDisable(GL10.GL_TEXTURE_2D);\r\n\t\t\tmesh.unbind();\r\n\t\t} else {\r\n\t\t\tshader.end();\r\n\t\t\tGL20 gl = Gdx.gl20;\r\n\t\t\tgl.glDepthMask(true);\r\n\t\t\tif(customShader != null) mesh.unbind(customShader);\r\n\t\t\telse mesh.unbind(shader);\r\n\t\t}\r\n\t}","commit_id":"5c5f13ec99eaf4ad49c257a2c1f0bc7e7e248339","url":"https://github.com/libgdx/libgdx"},{"original_method":"/** Prepares the OpenGL state for SpriteCache rendering. */\r\n\tpublic void begin () {\r\n\t\tif (drawing) throw new IllegalStateException(\"end must be called before begin.\");\r\n\r\n\t\tif (Gdx.graphics.isGL20Available() == false) {\r\n\t\t\tGL10 gl = Gdx.gl10;\r\n\t\t\tgl.glDepthMask(false);\r\n\t\t\tgl.glEnable(GL10.GL_TEXTURE_2D);\r\n\r\n\t\t\tgl.glMatrixMode(GL10.GL_PROJECTION);\r\n\t\t\tgl.glLoadMatrixf(projectionMatrix.val, 0);\r\n\t\t\tgl.glMatrixMode(GL10.GL_MODELVIEW);\r\n\t\t\tgl.glLoadMatrixf(transformMatrix.val, 0);\r\n\r\n\t\t\tmesh.bind();\r\n\t\t} else {\r\n\t\t\tcombinedMatrix.set(projectionMatrix).mul(transformMatrix);\r\n\r\n\t\t\tGL20 gl = Gdx.gl20;\r\n\t\t\tgl.glDepthMask(false);\r\n\r\n\t\t\tif (customShader != null) {\r\n\t\t\t\tcustomShader.begin();\r\n\t\t\t\tcustomShader.setUniformMatrix(\"u_proj\", projectionMatrix);\r\n\t\t\t\tcustomShader.setUniformMatrix(\"u_trans\", transformMatrix);\r\n\t\t\t\tcustomShader.setUniformMatrix(\"u_projTrans\", combinedMatrix);\r\n\t\t\t\tcustomShader.setUniformi(\"u_texture\", 0);\r\n\t\t\t} else {\r\n\t\t\t\tshader.begin();\r\n\t\t\t\tshader.setUniformMatrix(\"u_projectionViewMatrix\", combinedMatrix);\r\n\t\t\t\tshader.setUniformi(\"u_texture\", 0);\r\n\t\t\t}\r\n\r\n\t\t\tmesh.bind(shader);\r\n\t\t}\r\n\t\tdrawing = true;\r\n\t}","id":82245,"modified_method":"/** Prepares the OpenGL state for SpriteCache rendering. */\r\n\tpublic void begin () {\r\n\t\tif (drawing) throw new IllegalStateException(\"end must be called before begin.\");\r\n\r\n\t\tif (Gdx.graphics.isGL20Available() == false) {\r\n\t\t\tGL10 gl = Gdx.gl10;\r\n\t\t\tgl.glDepthMask(false);\r\n\t\t\tgl.glEnable(GL10.GL_TEXTURE_2D);\r\n\r\n\t\t\tgl.glMatrixMode(GL10.GL_PROJECTION);\r\n\t\t\tgl.glLoadMatrixf(projectionMatrix.val, 0);\r\n\t\t\tgl.glMatrixMode(GL10.GL_MODELVIEW);\r\n\t\t\tgl.glLoadMatrixf(transformMatrix.val, 0);\r\n\r\n\t\t\tmesh.bind();\r\n\t\t} else {\r\n\t\t\tcombinedMatrix.set(projectionMatrix).mul(transformMatrix);\r\n\r\n\t\t\tGL20 gl = Gdx.gl20;\r\n\t\t\tgl.glDepthMask(false);\r\n\r\n\t\t\tif (customShader != null) {\r\n\t\t\t\tcustomShader.begin();\r\n\t\t\t\tcustomShader.setUniformMatrix(\"u_proj\", projectionMatrix);\r\n\t\t\t\tcustomShader.setUniformMatrix(\"u_trans\", transformMatrix);\r\n\t\t\t\tcustomShader.setUniformMatrix(\"u_projTrans\", combinedMatrix);\r\n\t\t\t\tcustomShader.setUniformi(\"u_texture\", 0);\r\n\t\t\t\tmesh.bind(customShader);\r\n\t\t\t} else {\r\n\t\t\t\tshader.begin();\r\n\t\t\t\tshader.setUniformMatrix(\"u_projectionViewMatrix\", combinedMatrix);\r\n\t\t\t\tshader.setUniformi(\"u_texture\", 0);\r\n\t\t\t\tmesh.bind(shader);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tdrawing = true;\r\n\t}","commit_id":"5c5f13ec99eaf4ad49c257a2c1f0bc7e7e248339","url":"https://github.com/libgdx/libgdx"},{"original_method":"private void renderSprites () {\r\n\t\tGL10 gl = Gdx.graphics.getGL10();\r\n\t\tgl.glClearColor(0.7f, 0.7f, 0.7f, 1);\r\n\t\tgl.glClear(GL10.GL_COLOR_BUFFER_BIT);\r\n\r\n\t\tfloat begin = 0;\r\n\t\tfloat end = 0;\r\n\t\tfloat draw1 = 0;\r\n\t\tfloat draw2 = 0;\r\n\t\tfloat drawText = 0;\r\n\r\n\t\tlong start = TimeUtils.nanoTime();\r\n\t\tspriteCache.begin();\r\n\t\tbegin = (TimeUtils.nanoTime() - start) / 1000000000.0f;\r\n\r\n\t\tstart = TimeUtils.nanoTime();\r\n\t\tspriteCache.draw(spriteCacheID);\r\n\t\tdraw1 = (TimeUtils.nanoTime() - start) / 1000000000.0f;\r\n\r\n\t\tstart = TimeUtils.nanoTime();\r\n\t\tspriteCache.end();\r\n\t\tend = (TimeUtils.nanoTime() - start) / 1000000000.0f;\r\n\r\n\t\tif (TimeUtils.nanoTime() - startTime > 1000000000) {\r\n// Gdx.app.log( \"SpriteBatch\", \"fps: \" + frames + \", render calls: \" + spriteBatch.renderCalls + \", \" + begin + \", \" + draw1 +\r\n// \", \" + draw2 + \", \" + drawText + \", \" + end );\r\n\t\t\tframes = 0;\r\n\t\t\tstartTime = TimeUtils.nanoTime();\r\n\t\t}\r\n\t\tframes++;\r\n\t}","id":82246,"modified_method":"private void renderSprites () {\r\n\t\tGdx.gl.glClearColor(0.7f, 0.7f, 0.7f, 1);\r\n\t\tGdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT);\r\n\r\n\t\tfloat begin = 0;\r\n\t\tfloat end = 0;\r\n\t\tfloat draw1 = 0;\r\n\t\tfloat draw2 = 0;\r\n\t\tfloat drawText = 0;\r\n\r\n\t\tlong start = TimeUtils.nanoTime();\r\n\t\tspriteCache.begin();\r\n\t\tbegin = (TimeUtils.nanoTime() - start) / 1000000000.0f;\r\n\r\n\t\tstart = TimeUtils.nanoTime();\r\n\t\tspriteCache.draw(spriteCacheID);\r\n\t\tdraw1 = (TimeUtils.nanoTime() - start) / 1000000000.0f;\r\n\r\n\t\tstart = TimeUtils.nanoTime();\r\n\t\tspriteCache.end();\r\n\t\tend = (TimeUtils.nanoTime() - start) / 1000000000.0f;\r\n\r\n\t\tif (TimeUtils.nanoTime() - startTime > 1000000000) {\r\n// Gdx.app.log( \"SpriteBatch\", \"fps: \" + frames + \", render calls: \" + spriteBatch.renderCalls + \", \" + begin + \", \" + draw1 +\r\n// \", \" + draw2 + \", \" + drawText + \", \" + end );\r\n\t\t\tframes = 0;\r\n\t\t\tstartTime = TimeUtils.nanoTime();\r\n\t\t}\r\n\t\tframes++;\r\n\t}","commit_id":"5c5f13ec99eaf4ad49c257a2c1f0bc7e7e248339","url":"https://github.com/libgdx/libgdx"},{"original_method":"private @CheckForNull RuntimeException injectElement(final InjectableElement element, final Object adaptable, \n            final Model modelAnnotation, final @Nonnull DisposalCallbackRegistry registry,\n            final InjectCallback callback) {\n\n        InjectAnnotationProcessor annotationProcessor = null;\n        String source = element.getSource();\n        boolean wasInjectionSuccessful = false;\n\n        // find an appropriate annotation processor\n        for (InjectAnnotationProcessorFactory2 factory : injectAnnotationProcessorFactories2) {\n            annotationProcessor = factory.createAnnotationProcessor(adaptable, element.getAnnotatedElement());\n            if (annotationProcessor != null) {\n                break;\n            }\n        }\n        if (annotationProcessor == null) {\n            for (InjectAnnotationProcessorFactory factory : injectAnnotationProcessorFactories) {\n                annotationProcessor = factory.createAnnotationProcessor(adaptable, element.getAnnotatedElement());\n                if (annotationProcessor != null) {\n                    break;\n                }\n            }\n        }\n\n        String name = getName(element, annotationProcessor);\n        Object injectionAdaptable = getAdaptable(adaptable, element, annotationProcessor);\n\n        RuntimeException lastInjectionException = null;\n        if (injectionAdaptable != null) {\n            // find the right injector\n            for (Injector injector : injectors) {\n                if (source == null || source.equals(injector.getName())) {\n                    if (name != null || injector instanceof AcceptsNullName) {\n                        Object value = injector.getValue(injectionAdaptable, name, element.getType(), element.getAnnotatedElement(), registry);\n                        if (value != null) {\n                            lastInjectionException = callback.inject(element, value);\n                            if (lastInjectionException == null) {\n                                wasInjectionSuccessful = true;\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        // if injection failed, use default\n        if (!wasInjectionSuccessful) {\n            Result<Boolean> defaultInjectionResult = injectDefaultValue(element, annotationProcessor, callback);\n            if (defaultInjectionResult.wasSuccessfull()) {\n                // log previous injection error, if there was any\n                if (lastInjectionException != null) {\n                    // treat post-construct and validation exceptions differently, because they are sometimes used for flow-control or validation purposes\n                    if (lastInjectionException instanceof PostConstructException || lastInjectionException instanceof InvalidModelException) {\n                        log.debug(\"Although falling back to default value worked, injection into {} failed because of: \" + lastInjectionException.getMessage(), element.getAnnotatedElement(), lastInjectionException);\n                    } else {\n                        log.warn(\"Although falling back to default value worked, injection into {} failed because of: \" + lastInjectionException.getMessage(), element.getAnnotatedElement(), lastInjectionException);\n                    }\n                }\n                wasInjectionSuccessful = defaultInjectionResult.getValue();\n            } else {\n                return defaultInjectionResult.getThrowable();\n            }\n        }\n\n        // if default is not set, check if mandatory\n        if (!wasInjectionSuccessful) {\n            if (element.isOptional(annotationProcessor)) {\n                if (element.isPrimitive()) {\n                    RuntimeException throwable = injectPrimitiveInitialValue(element, callback);\n                    if (throwable != null) {\n                        return throwable;\n                    }\n                }\n            } else {\n                if (lastInjectionException != null) {\n                    return lastInjectionException;\n                } else {\n                    return new ModelClassException(\"No injector returned a non-null value!\");\n                }\n            }\n        }\n        return null;\n    }","id":82247,"modified_method":"private @CheckForNull RuntimeException injectElement(final InjectableElement element, final Object adaptable, \n            final Model modelAnnotation, final @Nonnull DisposalCallbackRegistry registry,\n            final InjectCallback callback) {\n\n        InjectAnnotationProcessor annotationProcessor = null;\n        String source = element.getSource();\n        boolean wasInjectionSuccessful = false;\n\n        // find an appropriate annotation processor\n        for (InjectAnnotationProcessorFactory2 factory : injectAnnotationProcessorFactories2) {\n            annotationProcessor = factory.createAnnotationProcessor(adaptable, element.getAnnotatedElement());\n            if (annotationProcessor != null) {\n                break;\n            }\n        }\n        if (annotationProcessor == null) {\n            for (InjectAnnotationProcessorFactory factory : injectAnnotationProcessorFactories) {\n                annotationProcessor = factory.createAnnotationProcessor(adaptable, element.getAnnotatedElement());\n                if (annotationProcessor != null) {\n                    break;\n                }\n            }\n        }\n\n        String name = getName(element, annotationProcessor);\n        Object injectionAdaptable = getAdaptable(adaptable, element, annotationProcessor);\n\n        RuntimeException lastInjectionException = null;\n        if (injectionAdaptable != null) {\n            // find the right injector\n            if (StringUtils.isNotEmpty(source)) {\n                for (Injector injector : injectors.get(source)) {\n                    if (name != null || injector instanceof AcceptsNullName) {\n                        Object value =\n                            injector.getValue(injectionAdaptable, name, element.getType(), element.getAnnotatedElement(), registry);\n                        if (value != null) {\n                            lastInjectionException = callback.inject(element, value);\n                            if (lastInjectionException == null) {\n                                wasInjectionSuccessful = true;\n                                break;\n                            }\n                        }\n                    }\n                }\n            } else {\n                for (Injector injector : sortedInjectors) {\n                    if (name != null || injector instanceof AcceptsNullName) {\n                        Object value =\n                            injector.getValue(injectionAdaptable, name, element.getType(), element.getAnnotatedElement(), registry);\n                        if (value != null) {\n                            lastInjectionException = callback.inject(element, value);\n                            if (lastInjectionException == null) {\n                                wasInjectionSuccessful = true;\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        // if injection failed, use default\n        if (!wasInjectionSuccessful) {\n            Result<Boolean> defaultInjectionResult = injectDefaultValue(element, annotationProcessor, callback);\n            if (defaultInjectionResult.wasSuccessfull()) {\n                // log previous injection error, if there was any\n                if (lastInjectionException != null) {\n                    // treat post-construct and validation exceptions differently, because they are sometimes used for flow-control or validation purposes\n                    if (lastInjectionException instanceof PostConstructException || lastInjectionException instanceof InvalidModelException) {\n                        log.debug(\"Although falling back to default value worked, injection into {} failed because of: \" + lastInjectionException.getMessage(), element.getAnnotatedElement(), lastInjectionException);\n                    } else {\n                        log.warn(\"Although falling back to default value worked, injection into {} failed because of: \" + lastInjectionException.getMessage(), element.getAnnotatedElement(), lastInjectionException);\n                    }\n                }\n                wasInjectionSuccessful = defaultInjectionResult.getValue();\n            } else {\n                return defaultInjectionResult.getThrowable();\n            }\n        }\n\n        // if default is not set, check if mandatory\n        if (!wasInjectionSuccessful) {\n            if (element.isOptional(annotationProcessor)) {\n                if (element.isPrimitive()) {\n                    RuntimeException throwable = injectPrimitiveInitialValue(element, callback);\n                    if (throwable != null) {\n                        return throwable;\n                    }\n                }\n            } else {\n                if (lastInjectionException != null) {\n                    return lastInjectionException;\n                } else {\n                    return new ModelClassException(\"No injector returned a non-null value!\");\n                }\n            }\n        }\n        return null;\n    }","commit_id":"b748ed2a3670920af65317e2d2f3437bc8fe0fd9","url":"https://github.com/apache/sling"},{"original_method":"protected void bindInjector(final Injector injector, final Map<String, Object> props) {\n        injectors.bind(injector, props);\n    }","id":82248,"modified_method":"protected void bindInjector(final Injector injector, final Map<String, Object> props) {\n        String name = injector.getName();\n        RankedServices<Injector> injectorRankedServices = injectors.get(name);\n        if (injectorRankedServices == null) {\n            injectorRankedServices = new RankedServices<Injector>();\n            injectors.put(name, injectorRankedServices);\n        }\n        injectorRankedServices.bind(injector, props);\n        sortedInjectors.bind(injector, props);\n    }","commit_id":"b748ed2a3670920af65317e2d2f3437bc8fe0fd9","url":"https://github.com/apache/sling"},{"original_method":"@Nonnull Collection<Injector> getInjectors() {\n        return injectors.get();\n    }","id":82249,"modified_method":"@Nonnull Collection<Injector> getInjectors() {\n        return sortedInjectors.get();\n    }","commit_id":"b748ed2a3670920af65317e2d2f3437bc8fe0fd9","url":"https://github.com/apache/sling"},{"original_method":"protected void unbindInjector(final Injector injector, final Map<String, Object> props) {\n        injectors.unbind(injector, props);\n    }","id":82250,"modified_method":"protected void unbindInjector(final Injector injector, final Map<String, Object> props) {\n        String name = injector.getName();\n        RankedServices<Injector> injectorRankedServices = injectors.get(name);\n        if (injectorRankedServices != null) {\n            injectorRankedServices.unbind(injector, props);\n            if (injectorRankedServices.get().size() == 0) {\n                injectors.remove(name);\n            }\n        }\n        sortedInjectors.unbind(injector, props);\n    }","commit_id":"b748ed2a3670920af65317e2d2f3437bc8fe0fd9","url":"https://github.com/apache/sling"},{"original_method":"@Test\n    public void testInjectorOrder() {\n        String bindingsValue = \"bindings value\";\n        bindings.put(\"firstAttribute\", bindingsValue);\n\n        String attributeValue = \"attribute value\";\n        when(request.getAttribute(\"firstAttribute\")).thenReturn(attributeValue);\n\n        ForTwoInjectors obj = factory.getAdapter(request, ForTwoInjectors.class);\n\n        assertNotNull(obj);\n        assertEquals(obj.firstAttribute, bindingsValue);\n\n        verifyNoMoreInteractions(attributesInjector);\n        verify(bindingsInjector).createAnnotationProcessor(any(AnnotatedElement.class));\n        verify(bindingsInjector).getValue(eq(request), eq(\"firstAttribute\"), eq(String.class), any(AnnotatedElement.class), any(DisposalCallbackRegistry.class));\n        verifyNoMoreInteractions(bindingsInjector);\n    }","id":82251,"modified_method":"@Test\n    public void testInjectorOrder() {\n        String bindingsValue = \"bindings value\";\n        bindings.put(\"firstAttribute\", bindingsValue);\n\n        String attributeValue = \"attribute value\";\n        when(request.getAttribute(\"firstAttribute\")).thenReturn(attributeValue);\n\n        ForTwoInjectors obj = factory.getAdapter(request, ForTwoInjectors.class);\n\n        assertNotNull(obj);\n        assertEquals(obj.firstAttribute, bindingsValue);\n\n        verify(bindingsInjector).createAnnotationProcessor(any(AnnotatedElement.class));\n        verify(bindingsInjector).getValue(eq(request), eq(\"firstAttribute\"), eq(String.class), any(AnnotatedElement.class), any(DisposalCallbackRegistry.class));\n    }","commit_id":"b748ed2a3670920af65317e2d2f3437bc8fe0fd9","url":"https://github.com/apache/sling"},{"original_method":"/**\n   * If the request has a valid authentication token it allows the request to continue to the target resource,\n   * otherwise it triggers an authentication sequence using the configured {@link AuthenticationHandler}.\n   *\n   * @param request the request object.\n   * @param response the response object.\n   * @param filterChain the filter chain object.\n   *\n   * @throws IOException thrown if an IO error occurred.\n   * @throws ServletException thrown if a processing error occurred.\n   */\n  @Override\n  public void doFilter(ServletRequest request, ServletResponse response, FilterChain filterChain)\n      throws IOException, ServletException {\n    boolean unauthorizedResponse = true;\n    int errCode = HttpServletResponse.SC_UNAUTHORIZED;\n    AuthenticationException authenticationEx = null;\n    HttpServletRequest httpRequest = (HttpServletRequest) request;\n    HttpServletResponse httpResponse = (HttpServletResponse) response;\n    boolean isHttps = \"https\".equals(httpRequest.getScheme());\n    try {\n      boolean newToken = false;\n      AuthenticationToken token;\n      try {\n        token = getToken(httpRequest);\n      }\n      catch (AuthenticationException ex) {\n        LOG.warn(\"AuthenticationToken ignored: \" + ex.getMessage());\n        // will be sent back in a 401 unless filter authenticates\n        authenticationEx = ex;\n        token = null;\n      }\n      if (authHandler.managementOperation(token, httpRequest, httpResponse)) {\n        if (token == null) {\n          if (LOG.isDebugEnabled()) {\n            LOG.debug(\"Request [{}] triggering authentication\", getRequestURL(httpRequest));\n          }\n          token = authHandler.authenticate(httpRequest, httpResponse);\n          if (token != null && token.getExpires() != 0 &&\n              token != AuthenticationToken.ANONYMOUS) {\n            token.setExpires(System.currentTimeMillis() + getValidity() * 1000);\n          }\n          newToken = true;\n        }\n        if (token != null) {\n          unauthorizedResponse = false;\n          if (LOG.isDebugEnabled()) {\n            LOG.debug(\"Request [{}] user [{}] authenticated\", getRequestURL(httpRequest), token.getUserName());\n          }\n          final AuthenticationToken authToken = token;\n          httpRequest = new HttpServletRequestWrapper(httpRequest) {\n\n            @Override\n            public String getAuthType() {\n              return authToken.getType();\n            }\n\n            @Override\n            public String getRemoteUser() {\n              return authToken.getUserName();\n            }\n\n            @Override\n            public Principal getUserPrincipal() {\n              return (authToken != AuthenticationToken.ANONYMOUS) ? authToken : null;\n            }\n          };\n          if (newToken && !token.isExpired() && token != AuthenticationToken.ANONYMOUS) {\n            String signedToken = signer.sign(token.toString());\n            createAuthCookie(httpResponse, signedToken, getCookieDomain(),\n                    getCookiePath(), token.getExpires(), isHttps);\n          }\n          doFilter(filterChain, httpRequest, httpResponse);\n        }\n      } else {\n        unauthorizedResponse = false;\n      }\n    } catch (AuthenticationException ex) {\n      // exception from the filter itself is fatal\n      errCode = HttpServletResponse.SC_FORBIDDEN;\n      authenticationEx = ex;\n      LOG.warn(\"Authentication exception: \" + ex.getMessage(), ex);\n    }\n    if (unauthorizedResponse) {\n      if (!httpResponse.isCommitted()) {\n        createAuthCookie(httpResponse, \"\", getCookieDomain(),\n                getCookiePath(), 0, isHttps);\n        // If response code is 401. Then WWW-Authenticate Header should be\n        // present.. reset to 403 if not found..\n        if ((errCode == HttpServletResponse.SC_UNAUTHORIZED)\n            && (!httpResponse.containsHeader(\n                KerberosAuthenticator.WWW_AUTHENTICATE))) {\n          errCode = HttpServletResponse.SC_FORBIDDEN;\n        }\n        if (authenticationEx == null) {\n          httpResponse.sendError(errCode, \"Authentication required\");\n        } else {\n          httpResponse.sendError(errCode, authenticationEx.getMessage());\n        }\n      }\n    }\n  }","id":82252,"modified_method":"/**\n   * If the request has a valid authentication token it allows the request to continue to the target resource,\n   * otherwise it triggers an authentication sequence using the configured {@link AuthenticationHandler}.\n   *\n   * @param request the request object.\n   * @param response the response object.\n   * @param filterChain the filter chain object.\n   *\n   * @throws IOException thrown if an IO error occurred.\n   * @throws ServletException thrown if a processing error occurred.\n   */\n  @Override\n  public void doFilter(ServletRequest request, ServletResponse response, FilterChain filterChain)\n      throws IOException, ServletException {\n    boolean unauthorizedResponse = true;\n    int errCode = HttpServletResponse.SC_UNAUTHORIZED;\n    AuthenticationException authenticationEx = null;\n    HttpServletRequest httpRequest = (HttpServletRequest) request;\n    HttpServletResponse httpResponse = (HttpServletResponse) response;\n    boolean isHttps = \"https\".equals(httpRequest.getScheme());\n    try {\n      boolean newToken = false;\n      AuthenticationToken token;\n      try {\n        token = getToken(httpRequest);\n      }\n      catch (AuthenticationException ex) {\n        LOG.warn(\"AuthenticationToken ignored: \" + ex.getMessage());\n        // will be sent back in a 401 unless filter authenticates\n        authenticationEx = ex;\n        token = null;\n      }\n      if (authHandler.managementOperation(token, httpRequest, httpResponse)) {\n        if (token == null) {\n          if (LOG.isDebugEnabled()) {\n            LOG.debug(\"Request [{}] triggering authentication\", getRequestURL(httpRequest));\n          }\n          token = authHandler.authenticate(httpRequest, httpResponse);\n          if (token != null && token.getExpires() != 0 &&\n              token != AuthenticationToken.ANONYMOUS) {\n            token.setExpires(System.currentTimeMillis() + getValidity() * 1000);\n          }\n          newToken = true;\n        }\n        if (token != null) {\n          unauthorizedResponse = false;\n          if (LOG.isDebugEnabled()) {\n            LOG.debug(\"Request [{}] user [{}] authenticated\", getRequestURL(httpRequest), token.getUserName());\n          }\n          final AuthenticationToken authToken = token;\n          httpRequest = new HttpServletRequestWrapper(httpRequest) {\n\n            @Override\n            public String getAuthType() {\n              return authToken.getType();\n            }\n\n            @Override\n            public String getRemoteUser() {\n              return authToken.getUserName();\n            }\n\n            @Override\n            public Principal getUserPrincipal() {\n              return (authToken != AuthenticationToken.ANONYMOUS) ? authToken : null;\n            }\n          };\n          if (newToken && !token.isExpired() && token != AuthenticationToken.ANONYMOUS) {\n            String signedToken = signer.sign(token.toString());\n            createAuthCookie(httpResponse, signedToken, getCookieDomain(),\n                    getCookiePath(), token.getExpires(), isHttps);\n          }\n          doFilter(filterChain, httpRequest, httpResponse);\n        }\n      } else {\n        unauthorizedResponse = false;\n      }\n    } catch (AuthenticationException ex) {\n      // exception from the filter itself is fatal\n      errCode = HttpServletResponse.SC_FORBIDDEN;\n      authenticationEx = ex;\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Authentication exception: \" + ex.getMessage(), ex);\n      } else {\n        LOG.warn(\"Authentication exception: \" + ex.getMessage());\n      }\n    }\n    if (unauthorizedResponse) {\n      if (!httpResponse.isCommitted()) {\n        createAuthCookie(httpResponse, \"\", getCookieDomain(),\n                getCookiePath(), 0, isHttps);\n        // If response code is 401. Then WWW-Authenticate Header should be\n        // present.. reset to 403 if not found..\n        if ((errCode == HttpServletResponse.SC_UNAUTHORIZED)\n            && (!httpResponse.containsHeader(\n                KerberosAuthenticator.WWW_AUTHENTICATE))) {\n          errCode = HttpServletResponse.SC_FORBIDDEN;\n        }\n        if (authenticationEx == null) {\n          httpResponse.sendError(errCode, \"Authentication required\");\n        } else {\n          httpResponse.sendError(errCode, authenticationEx.getMessage());\n        }\n      }\n    }\n  }","commit_id":"0ebe84d30af2046775884c9fb1e054da31582657","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n   * Get the group names for this user.\n   * @return the list of users with the primary group first. If the command\n   *    fails, it returns an empty list.\n   */\n  public synchronized String[] getGroupNames() {\n    ensureInitialized();\n    try {\n      Set<String> result = new LinkedHashSet<String>\n        (groups.getGroups(getShortUserName()));\n      return result.toArray(new String[result.size()]);\n    } catch (IOException ie) {\n      LOG.warn(\"No groups available for user \" + getShortUserName());\n      return new String[0];\n    }\n  }","id":82253,"modified_method":"/**\n   * Get the group names for this user.\n   * @return the list of users with the primary group first. If the command\n   *    fails, it returns an empty list.\n   */\n  public synchronized String[] getGroupNames() {\n    ensureInitialized();\n    try {\n      Set<String> result = new LinkedHashSet<String>\n        (groups.getGroups(getShortUserName()));\n      return result.toArray(new String[result.size()]);\n    } catch (IOException ie) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"No groups available for user \" + getShortUserName());\n      }\n      return new String[0];\n    }\n  }","commit_id":"e286512a7143427f2975ec92cdc4fad0a093a456","url":"https://github.com/apache/hadoop"},{"original_method":"public DataStore createDataStore() throws Exception {\n        DataStoreSupport instance;\n        if (true) {\n            properties.put(\"kind\", \"org.fusesource.datastore.zookeeper\");\n            instance = new ZooKeeperDataStore();\n        } else {\n            properties.put(\"kind\", \"org.fusesource.datastore.git\");\n            instance = new GitDataStore();\n        }\n        Objects.notNull(curator, \"curator\");\n        instance.setCurator(curator);\n        instance.setPlaceholderResolvers(placeholderResolvers);\n        if (instance instanceof GitDataStore) {\n            GitDataStore gitDataStore = (GitDataStore)instance;\n            Objects.notNull(gitService, \"gitService\");\n            gitDataStore.setGitService(gitService);\n        }\n        instance.init();\n        return instance;\n    }","id":82254,"modified_method":"public DataStore createDataStore() throws Exception {\n        DataStoreSupport instance;\n        String kind = System.getProperty(DATASTORE_KIND, \"zookeeper\").toLowerCase();\n        if (kind.startsWith(\"z\")) {\n            properties.put(\"kind\", \"org.fusesource.datastore.zookeeper\");\n            instance = new ZooKeeperDataStore();\n        } else {\n            properties.put(\"kind\", \"org.fusesource.datastore.git\");\n            instance = new GitDataStore();\n        }\n        LOG.info(\"Has system property \" + DATASTORE_KIND + \"=\" + kind + \" so created DataStore: \" + instance);\n        Objects.notNull(curator, \"curator\");\n        instance.setCurator(curator);\n        instance.setPlaceholderResolvers(placeholderResolvers);\n        if (instance instanceof GitDataStore) {\n            GitDataStore gitDataStore = (GitDataStore)instance;\n            if (gitService == null) {\n                LOG.info(\"Creating bootstrap GitService\");\n                gitService = createBootstrapGitService();\n            } else {\n                LOG.info(\"Using GitService: \" + gitService);\n            }\n            gitDataStore.setGitService(gitService);\n        }\n        instance.init();\n        return instance;\n    }","commit_id":"c1ac99197498db3d9e566ea690342c1bf1aba520","url":"https://github.com/fabric8io/fabric8"},{"original_method":"/**\n     * Performs a pull so the git repo is pretty much up to date before we start performing operations on it\n     */\n    protected void doPull(Git git) {\n        try {\n            Repository repository = git.getRepository();\n            StoredConfig config = repository.getConfig();\n            String url = config.getString(\"remote\", remote, \"url\");\n            if (Strings.isNullOrBlank(url)) {\n                LOG.warn(\"No remote repository defined for the git repository at \" + GitHelpers\n                        .getRootGitDirectory(git)\n                        + \" so not doing a pull\");\n                return;\n            }\n            String branch = repository.getBranch();\n            String mergeUrl = config.getString(\"branch\", branch, \"merge\");\n            if (Strings.isNullOrBlank(mergeUrl)) {\n                LOG.warn(\"No merge spec for branch.\" + branch + \".merge in the git repository at \"\n                        + GitHelpers.getRootGitDirectory(git) + \" so not doing a pull\");\n                return;\n            }\n            if (LOG.isDebugEnabled()) {\n                LOG.debug(\n                        \"Performing a pull in git repository \" + GitHelpers.getRootGitDirectory(git)\n                                + \" on remote URL: \"\n                                + url);\n            }\n            //git.pull().setCredentialsProvider(cp).setRebase(true).call();\n            git.pull().setRebase(true).call();\n        } catch (Throwable e) {\n            LOG.error(\n                    \"Failed to pull from the remote git repo \" + GitHelpers.getRootGitDirectory(git)\n                            + \". Reason: \" + e,\n                    e);\n        }\n    }","id":82255,"modified_method":"/**\n     * Performs a pull so the git repo is pretty much up to date before we start performing operations on it\n     */\n    protected void doPull(Git git) {\n        try {\n            Repository repository = git.getRepository();\n            StoredConfig config = repository.getConfig();\n            String url = config.getString(\"remote\", remote, \"url\");\n            if (Strings.isNullOrBlank(url)) {\n                if (LOG.isDebugEnabled()) {\n                    LOG.debug(\"No remote repository defined for the git repository at \" + GitHelpers\n                            .getRootGitDirectory(git)\n                            + \" so not doing a pull\");\n                }\n                return;\n            }\n            String branch = repository.getBranch();\n            String mergeUrl = config.getString(\"branch\", branch, \"merge\");\n            if (Strings.isNullOrBlank(mergeUrl)) {\n                if (LOG.isDebugEnabled()) {\n                    LOG.debug(\"No merge spec for branch.\" + branch + \".merge in the git repository at \"\n                            + GitHelpers.getRootGitDirectory(git) + \" so not doing a pull\");\n                }\n                return;\n            }\n            if (LOG.isDebugEnabled()) {\n                LOG.debug(\n                        \"Performing a pull in git repository \" + GitHelpers.getRootGitDirectory(git)\n                                + \" on remote URL: \"\n                                + url);\n            }\n            //git.pull().setCredentialsProvider(cp).setRebase(true).call();\n            git.pull().setRebase(true).call();\n        } catch (Throwable e) {\n            LOG.error(\n                    \"Failed to pull from the remote git repo \" + GitHelpers.getRootGitDirectory(git)\n                            + \". Reason: \" + e,\n                    e);\n        }\n    }","commit_id":"c1ac99197498db3d9e566ea690342c1bf1aba520","url":"https://github.com/fabric8io/fabric8"},{"original_method":"protected void commit() {\n    \tif (!needsCommit)\n    \t\treturn;\n        try {\n        \tLOG.warn(\"Committing lucene index\");\n        \tif (cachedWriter != null)\n        \t\tcachedWriter.commit();\n            needsCommit = false;\n        } catch(CorruptIndexException cie) {\n            LOG.error(\"Detected corrupt Lucence index on writer release and commit: \" + cie.getMessage(), cie);\n        } catch(IOException ioe) {\n            LOG.error(\"Detected Lucence index issue on writer release and commit: \" + ioe.getMessage(), ioe);\n        }\n    }","id":82256,"modified_method":"protected void commit() {\n    \tif (!needsCommit) {\n            return;\n        }\n        try {\n            if(LOG.isDebugEnabled()) {\n                LOG.debug(\"Committing lucene index\");\n            }\n            \n        \tif (cachedWriter != null) {\n                cachedWriter.commit();\n            }\n            needsCommit = false;\n        } catch(CorruptIndexException cie) {\n            LOG.error(\"Detected corrupt Lucence index on writer release and commit: \" + cie.getMessage(), cie);\n        } catch(IOException ioe) {\n            LOG.error(\"Detected Lucence index issue on writer release and commit: \" + ioe.getMessage(), ioe);\n        }\n    }","commit_id":"cc30afee5d3c11008e381a4507f41ca49ba16368","url":"https://github.com/eXist-db/exist"},{"original_method":"public synchronized void release(int mode) {\n        if (Thread.currentThread() != owner_) {\n            LOG.warn(\"Possible lock problem: thread \" + Thread.currentThread() +\n                \" Released a lock on \" + getId() + \" it didn't hold.\" +\n                \" Either the thread was interrupted or it never acquired the lock.\" +\n                \" The lock was owned by: \" + owner_);\n            if (DEBUG) {\n                LOG.debug(\"Lock was acquired by :\");\n                while (!seStack.isEmpty()) {\n                    StackTraceElement[] se = seStack.pop();\n                    LOG.debug(se);\n                    se = null;\n                }\n            }\n            return;\n        }\n        Integer top = modeStack.pop();\n        mode_ = top.intValue();\n        top = null; \t\n        if (mode_ != mode) {\n            LOG.warn(\"Released lock of different type. Expected \" + mode_ +\n                \" got \" + mode, new Throwable());\n        }      \t\n        if (mode_ == Lock.WRITE_LOCK) {\n            writeLocks--;\n        }\n        if (DEBUG) {\n            seStack.pop();\n        }\n        if (--holds_ == 0) {\n            if (!suspendedThreads.isEmpty()) {\n                SuspendedWaiter suspended = suspendedThreads.pop();\n                owner_ = suspended.thread;\n                mode_ = suspended.lockMode;\n                holds_ = suspended.lockCount;\n            } else {\n                owner_ = null;\n                mode_ = Lock.NO_LOCK;\n                notify();\n            }\n        }\n        if (listener != null) {\n            listener.lockReleased();\n            listener = null;\n        }\n    }","id":82257,"modified_method":"public synchronized void release(int mode) {\n        if (Thread.currentThread() != owner_) {\n//            LOG.warn(\"Possible lock problem: thread \" + Thread.currentThread() +\n//                \" Released a lock on \" + getId() + \" it didn't hold.\" +\n//                \" Either the thread was interrupted or it never acquired the lock.\" +\n//                \" The lock was owned by: \" + owner_);\n            if (DEBUG) {\n                LOG.debug(\"Lock was acquired by :\");\n                while (!seStack.isEmpty()) {\n                    StackTraceElement[] se = seStack.pop();\n                    LOG.debug(se);\n                    se = null;\n                }\n            }\n            return;\n        }\n        Integer top = modeStack.pop();\n        mode_ = top.intValue();\n        top = null; \t\n        if (mode_ != mode) {\n            LOG.warn(\"Released lock of different type. Expected \" + mode_ +\n                \" got \" + mode, new Throwable());\n        }      \t\n        if (mode_ == Lock.WRITE_LOCK) {\n            writeLocks--;\n        }\n        if (DEBUG) {\n            seStack.pop();\n        }\n        if (--holds_ == 0) {\n            if (!suspendedThreads.isEmpty()) {\n                SuspendedWaiter suspended = suspendedThreads.pop();\n                owner_ = suspended.thread;\n                mode_ = suspended.lockMode;\n                holds_ = suspended.lockCount;\n            } else {\n                owner_ = null;\n                mode_ = Lock.NO_LOCK;\n                notify();\n            }\n        }\n        if (listener != null) {\n            listener.lockReleased();\n            listener = null;\n        }\n    }","commit_id":"cc30afee5d3c11008e381a4507f41ca49ba16368","url":"https://github.com/eXist-db/exist"},{"original_method":"@Override\n  public void doFilter(ServletRequest req, ServletResponse resp,\n      FilterChain chain) throws IOException, ServletException {\n    ProxyUtils.rejectNonHttpRequests(req);\n\n    HttpServletRequest httpReq = (HttpServletRequest)req;\n    HttpServletResponse httpResp = (HttpServletResponse)resp;\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Remote address for request is: {}\", httpReq.getRemoteAddr());\n    }\n    if (!getProxyAddresses().contains(httpReq.getRemoteAddr())) {\n      String redirectUrl = findRedirectUrl();\n      String target = redirectUrl + httpReq.getRequestURI();\n      ProxyUtils.sendRedirect(httpReq,  httpResp,  target);\n      return;\n    }\n\n    String user = null;\n\n    if (httpReq.getCookies() != null) {\n      for(Cookie c: httpReq.getCookies()) {\n        if(WebAppProxyServlet.PROXY_USER_COOKIE_NAME.equals(c.getName())){\n          user = c.getValue();\n          break;\n        }\n      }\n    }\n    if (user == null) {\n      LOG.warn(\"Could not find \" + WebAppProxyServlet.PROXY_USER_COOKIE_NAME\n               + \" cookie, so user will not be set\");\n      chain.doFilter(req, resp);\n    } else {\n      final AmIpPrincipal principal = new AmIpPrincipal(user);\n      ServletRequest requestWrapper = new AmIpServletRequestWrapper(httpReq,\n          principal);\n      chain.doFilter(requestWrapper, resp);\n    }\n  }","id":82258,"modified_method":"@Override\n  public void doFilter(ServletRequest req, ServletResponse resp,\n      FilterChain chain) throws IOException, ServletException {\n    ProxyUtils.rejectNonHttpRequests(req);\n\n    HttpServletRequest httpReq = (HttpServletRequest)req;\n    HttpServletResponse httpResp = (HttpServletResponse)resp;\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Remote address for request is: {}\", httpReq.getRemoteAddr());\n    }\n    if (!getProxyAddresses().contains(httpReq.getRemoteAddr())) {\n      String redirectUrl = findRedirectUrl();\n      String target = redirectUrl + httpReq.getRequestURI();\n      ProxyUtils.sendRedirect(httpReq,  httpResp,  target);\n      return;\n    }\n\n    String user = null;\n\n    if (httpReq.getCookies() != null) {\n      for(Cookie c: httpReq.getCookies()) {\n        if(WebAppProxyServlet.PROXY_USER_COOKIE_NAME.equals(c.getName())){\n          user = c.getValue();\n          break;\n        }\n      }\n    }\n    if (user == null) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Could not find \" + WebAppProxyServlet.PROXY_USER_COOKIE_NAME\n                 + \" cookie, so user will not be set\");\n      }\n      chain.doFilter(req, resp);\n    } else {\n      final AmIpPrincipal principal = new AmIpPrincipal(user);\n      ServletRequest requestWrapper = new AmIpServletRequestWrapper(httpReq,\n          principal);\n      chain.doFilter(requestWrapper, resp);\n    }\n  }","commit_id":"e556198e71df6be3a83e5598265cb702fc7a668b","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n    public void configure (WebAppContext context) throws Exception\n    {         \n        if (_processor == null)\n        {\n            Log.warn(\"No TldProcessor configured, skipping tld processing\");\n            return;\n        }\n\n        //Create listeners from the parsed tld trees\n        for (TldDescriptor d:_descriptors)\n            _processor.process(context, d);\n    }","id":82259,"modified_method":"@Override\n    public void configure (WebAppContext context) throws Exception\n    {         \n        if (_processor == null)\n        {\n            if (Log.isDebugEnabled())\n                Log.debug(\"No TldProcessor configured, skipping tld processing\");\n            return;\n        }\n\n        //Create listeners from the parsed tld trees\n        for (TldDescriptor d:_descriptors)\n            _processor.process(context, d);\n    }","commit_id":"a9a56e8716280a194a9ccabd8b19a38fe4309083","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Override\n    public void preConfigure(WebAppContext context) throws Exception\n    {\n        Set tlds = new HashSet();\n\n        // Find tld's from web.xml\n        // When web.xml was processed, it should have created aliases for all TLDs.  So search resources aliases\n        // for aliases ending in tld\n        if (context.getResourceAliases()!=null && \n                context.getBaseResource()!=null && \n                context.getBaseResource().exists())\n        {\n            Iterator iter=context.getResourceAliases().values().iterator();\n            while(iter.hasNext())\n            {\n                String location = (String)iter.next();\n                if (location!=null && location.toLowerCase().endsWith(\".tld\"))\n                {\n                    if (!location.startsWith(\"/\"))\n                        location=\"/WEB-INF/\"+location;\n                    Resource l=context.getBaseResource().addPath(location);\n                    tlds.add(l);\n                }\n            }\n        }\n        \n        // Look for any tlds in WEB-INF directly.\n        Resource web_inf = context.getWebInf();\n        if (web_inf!=null)\n        {\n            String[] contents = web_inf.list();\n            for (int i=0;contents!=null && i<contents.length;i++)\n            {\n                if (contents[i]!=null && contents[i].toLowerCase().endsWith(\".tld\"))\n                {\n                    Resource l=web_inf.addPath(contents[i]);\n                    tlds.add(l);\n                }\n            }\n        }\n        \n    \n        // Add in tlds found in META-INF of jars. The jars that will be scanned are controlled by\n        // the patterns defined in the context attributes: org.eclipse.jetty.server.webapp.ContainerIncludeJarPattern,\n        // and org.eclipse.jetty.server.webapp.WebInfIncludeJarPattern\n        Collection<Resource> tld_resources=(Collection<Resource>)context.getAttribute(TLD_RESOURCES);\n        if (tld_resources!=null)\n            tlds.addAll(tld_resources);\n        \n       \n        // Parse the tlds into memory\n        _descriptors.clear();\n        Resource tld = null;\n        Iterator iter = tlds.iterator();\n        while (iter.hasNext())\n        {\n            try\n            {\n                tld = (Resource)iter.next();\n                if (Log.isDebugEnabled()) Log.debug(\"TLD=\"+tld);\n                TldDescriptor d = new TldDescriptor(tld);\n                d.parse();\n                _descriptors.add(d);\n            }\n            catch(Exception e)\n            {\n                Log.warn(\"Unable to parse TLD: \" + tld,e);\n            }\n        }\n        \n        // Create a processor for the tlds and save it\n        _processor = new TldProcessor ();  \n    }","id":82260,"modified_method":"@Override\n    public void preConfigure(WebAppContext context) throws Exception\n    {\n        try\n        {\n            Class jsp_page = Loader.loadClass(WebXmlConfiguration.class,\"javax.servlet.jsp.JspPage\");\n        }\n        catch (Exception e)\n        {\n            //no jsp available, don't parse TLDs\n            return;\n        }\n\n        Set tlds = new HashSet();\n\n        // Find tld's from web.xml\n        // When web.xml was processed, it should have created aliases for all TLDs.  So search resources aliases\n        // for aliases ending in tld\n        if (context.getResourceAliases()!=null && \n                context.getBaseResource()!=null && \n                context.getBaseResource().exists())\n        {\n            Iterator iter=context.getResourceAliases().values().iterator();\n            while(iter.hasNext())\n            {\n                String location = (String)iter.next();\n                if (location!=null && location.toLowerCase().endsWith(\".tld\"))\n                {\n                    if (!location.startsWith(\"/\"))\n                        location=\"/WEB-INF/\"+location;\n                    Resource l=context.getBaseResource().addPath(location);\n                    tlds.add(l);\n                }\n            }\n        }\n        \n        // Look for any tlds in WEB-INF directly.\n        Resource web_inf = context.getWebInf();\n        if (web_inf!=null)\n        {\n            String[] contents = web_inf.list();\n            for (int i=0;contents!=null && i<contents.length;i++)\n            {\n                if (contents[i]!=null && contents[i].toLowerCase().endsWith(\".tld\"))\n                {\n                    Resource l=web_inf.addPath(contents[i]);\n                    tlds.add(l);\n                }\n            }\n        }\n        \n    \n        // Add in tlds found in META-INF of jars. The jars that will be scanned are controlled by\n        // the patterns defined in the context attributes: org.eclipse.jetty.server.webapp.ContainerIncludeJarPattern,\n        // and org.eclipse.jetty.server.webapp.WebInfIncludeJarPattern\n        Collection<Resource> tld_resources=(Collection<Resource>)context.getAttribute(TLD_RESOURCES);\n        if (tld_resources!=null)\n            tlds.addAll(tld_resources);\n        \n       \n        // Parse the tlds into memory\n        _descriptors.clear();\n        Resource tld = null;\n        Iterator iter = tlds.iterator();\n        while (iter.hasNext())\n        {\n            try\n            {\n                tld = (Resource)iter.next();\n                if (Log.isDebugEnabled()) Log.debug(\"TLD=\"+tld);\n                TldDescriptor d = new TldDescriptor(tld);\n                d.parse();\n                _descriptors.add(d);\n            }\n            catch(Exception e)\n            {\n                Log.warn(\"Unable to parse TLD: \" + tld,e);\n            }\n        }\n        \n        // Create a processor for the tlds and save it\n        _processor = new TldProcessor ();  \n    }","commit_id":"a9a56e8716280a194a9ccabd8b19a38fe4309083","url":"https://github.com/eclipse/jetty.project"},{"original_method":"/**\n     * Load a cursor with a given file name, optionally decorated with an overlay image.\n     *\n     * @param name the cursor image filename in \"cursor\" directory\n     * @param overlay optional overlay image\n     * @return cursor with a given file name, optionally decorated with an overlay image\n     */\n    public static Cursor getCursor(String name, String overlay) {\n        ImageIcon img = get(\"cursor\", name);\n        if (overlay != null) {\n            img = new ImageProvider(\"cursor\", name).setMaxSize(ImageSizes.CURSOR)\n                .addOverlay(new ImageOverlay(new ImageProvider(\"cursor/modifier/\" + overlay)\n                    .setMaxSize(ImageSizes.CURSOROVERLAY))).get();\n        }\n        if (GraphicsEnvironment.isHeadless()) {\n            Main.warn(\"Cursors are not available in headless mode. Returning null for '\"+name+'\\'');\n            return null;\n        }\n        return Toolkit.getDefaultToolkit().createCustomCursor(img.getImage(),\n                \"crosshair\".equals(name) ? new Point(10, 10) : new Point(3, 2), \"Cursor\");\n    }","id":82261,"modified_method":"/**\n     * Load a cursor with a given file name, optionally decorated with an overlay image.\n     *\n     * @param name the cursor image filename in \"cursor\" directory\n     * @param overlay optional overlay image\n     * @return cursor with a given file name, optionally decorated with an overlay image\n     */\n    public static Cursor getCursor(String name, String overlay) {\n        ImageIcon img = get(\"cursor\", name);\n        if (overlay != null) {\n            img = new ImageProvider(\"cursor\", name).setMaxSize(ImageSizes.CURSOR)\n                .addOverlay(new ImageOverlay(new ImageProvider(\"cursor/modifier/\" + overlay)\n                    .setMaxSize(ImageSizes.CURSOROVERLAY))).get();\n        }\n        if (GraphicsEnvironment.isHeadless()) {\n            if (Main.isDebugEnabled()) {\n                Main.debug(\"Cursors are not available in headless mode. Returning null for '\"+name+'\\'');\n            }\n            return null;\n        }\n        return Toolkit.getDefaultToolkit().createCustomCursor(img.getImage(),\n                \"crosshair\".equals(name) ? new Point(10, 10) : new Point(3, 2), \"Cursor\");\n    }","commit_id":"72bcae9f43dc676eb6225470f2921107bddb626b","url":"https://github.com/openstreetmap/josm"},{"original_method":"/**\n   * Run the given action as the user, potentially throwing an exception.\n   * @param <T> the return type of the run method\n   * @param action the method to execute\n   * @return the value from the run method\n   * @throws IOException if the action throws an IOException\n   * @throws Error if the action throws an Error\n   * @throws RuntimeException if the action throws a RuntimeException\n   * @throws InterruptedException if the action throws an InterruptedException\n   * @throws UndeclaredThrowableException if the action throws something else\n   */\n  @InterfaceAudience.Public\n  @InterfaceStability.Evolving\n  public <T> T doAs(PrivilegedExceptionAction<T> action\n                    ) throws IOException, InterruptedException {\n    try {\n      logPrivilegedAction(subject, action);\n      return Subject.doAs(subject, action);\n    } catch (PrivilegedActionException pae) {\n      Throwable cause = pae.getCause();\n      LOG.warn(\"PriviledgedActionException as:\"+this+\" cause:\"+cause);\n      if (cause instanceof IOException) {\n        throw (IOException) cause;\n      } else if (cause instanceof Error) {\n        throw (Error) cause;\n      } else if (cause instanceof RuntimeException) {\n        throw (RuntimeException) cause;\n      } else if (cause instanceof InterruptedException) {\n        throw (InterruptedException) cause;\n      } else {\n        throw new UndeclaredThrowableException(cause);\n      }\n    }\n  }","id":82262,"modified_method":"/**\n   * Run the given action as the user, potentially throwing an exception.\n   * @param <T> the return type of the run method\n   * @param action the method to execute\n   * @return the value from the run method\n   * @throws IOException if the action throws an IOException\n   * @throws Error if the action throws an Error\n   * @throws RuntimeException if the action throws a RuntimeException\n   * @throws InterruptedException if the action throws an InterruptedException\n   * @throws UndeclaredThrowableException if the action throws something else\n   */\n  @InterfaceAudience.Public\n  @InterfaceStability.Evolving\n  public <T> T doAs(PrivilegedExceptionAction<T> action\n                    ) throws IOException, InterruptedException {\n    try {\n      logPrivilegedAction(subject, action);\n      return Subject.doAs(subject, action);\n    } catch (PrivilegedActionException pae) {\n      Throwable cause = pae.getCause();\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"PrivilegedActionException as:\" + this + \" cause:\" + cause);\n      }\n      if (cause instanceof IOException) {\n        throw (IOException) cause;\n      } else if (cause instanceof Error) {\n        throw (Error) cause;\n      } else if (cause instanceof RuntimeException) {\n        throw (RuntimeException) cause;\n      } else if (cause instanceof InterruptedException) {\n        throw (InterruptedException) cause;\n      } else {\n        throw new UndeclaredThrowableException(cause);\n      }\n    }\n  }","commit_id":"f89ede8d8645ee752961754ddc19bdfc72a03681","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n  @NotNull\n  public StubTree getStubTree() {\n    ApplicationManager.getApplication().assertReadAccessAllowed();\n\n    StubTree stubTree = dereference(myStub);\n    if (stubTree != null) return stubTree;\n\n    // build newStub out of lock to avoid deadlock\n    StubTree newStubTree = (StubTree)StubTreeLoader.getInstance().readOrBuild(getProject(), getVirtualFile(), this);\n    if (newStubTree == null) {\n      LOG.warn(\"No stub for class file in index: \" + getVirtualFile().getPresentableUrl());\n      newStubTree = new StubTree(new PsiJavaFileStubImpl(\"corrupted.classfiles\", true));\n    }\n\n    synchronized (myStubLock) {\n      stubTree = dereference(myStub);\n      if (stubTree != null) return stubTree;\n\n      stubTree = newStubTree;\n\n      @SuppressWarnings(\"unchecked\") PsiFileStubImpl<PsiFile> fileStub = (PsiFileStubImpl)stubTree.getRoot();\n      fileStub.setPsi(this);\n\n      myStub = new SoftReference<StubTree>(stubTree);\n    }\n\n    return stubTree;\n  }","id":82263,"modified_method":"@Override\n  @NotNull\n  public StubTree getStubTree() {\n    ApplicationManager.getApplication().assertReadAccessAllowed();\n\n    StubTree stubTree = dereference(myStub);\n    if (stubTree != null) return stubTree;\n\n    // build newStub out of lock to avoid deadlock\n    StubTree newStubTree = (StubTree)StubTreeLoader.getInstance().readOrBuild(getProject(), getVirtualFile(), this);\n    if (newStubTree == null) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"No stub for class file in index: \" + getVirtualFile().getPresentableUrl());\n      }\n      newStubTree = new StubTree(new PsiJavaFileStubImpl(\"corrupted.classfiles\", true));\n    }\n\n    synchronized (myStubLock) {\n      stubTree = dereference(myStub);\n      if (stubTree != null) return stubTree;\n\n      stubTree = newStubTree;\n\n      @SuppressWarnings(\"unchecked\") PsiFileStubImpl<PsiFile> fileStub = (PsiFileStubImpl)stubTree.getRoot();\n      fileStub.setPsi(this);\n\n      myStub = new SoftReference<StubTree>(stubTree);\n    }\n\n    return stubTree;\n  }","commit_id":"24d9d850e3440d6e919b9b8d1025662e20bb281a","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n        public void succeeded()\n        {\n            LOG.debug(\"Upgrade Request Write Success\");\n            // Writing the request header is complete.\n            super.succeeded();\n            state = State.RESPONSE;\n            // start the interest in fill\n            fillInterested();\n        }","id":82264,"modified_method":"@Override\n        public void succeeded()\n        {\n            if (LOG.isDebugEnabled())\n            {\n                LOG.debug(\"Upgrade Request Write Success\");\n            }\n            // Writing the request header is complete.\n            super.succeeded();\n            state = State.RESPONSE;\n            // start the interest in fill\n            fillInterested();\n        }","commit_id":"665fd209952e45390e505aef1458620ebb1c5cbc","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Override\n    protected boolean onReadTimeout()\n    {\n        if (LOG.isDebugEnabled())\n        {\n            LOG.warn(\"Timeout on connection {}\",this);\n        }\n\n        failUpgrade(new IOException(\"Timeout while performing WebSocket Upgrade\"));\n\n        return super.onReadTimeout();\n    }","id":82265,"modified_method":"@Override\n    protected boolean onReadTimeout()\n    {\n        if (LOG.isDebugEnabled())\n        {\n            LOG.debug(\"Timeout on connection {}\",this);\n        }\n\n        failUpgrade(new IOException(\"Timeout while performing WebSocket Upgrade\"));\n\n        return super.onReadTimeout();\n    }","commit_id":"665fd209952e45390e505aef1458620ebb1c5cbc","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Override\n        public void failed(Throwable cause)\n        {\n            LOG.warn(\"Upgrade Request Write Failure\",cause);\n            super.failed(cause);\n            state = State.FAILURE;\n            // Fail the connect promise when a fundamental exception during connect occurs.\n            connectPromise.failed(cause);\n        }","id":82266,"modified_method":"@Override\n        public void failed(Throwable cause)\n        {\n            if (LOG.isDebugEnabled())\n            {\n                LOG.debug(\"Upgrade Request Write Failure\",cause);\n            }\n            super.failed(cause);\n            state = State.FAILURE;\n            // Fail the connect promise when a fundamental exception during connect occurs.\n            connectPromise.failed(cause);\n        }","commit_id":"665fd209952e45390e505aef1458620ebb1c5cbc","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Override\n    public void onClose()\n    {\n        if (LOG.isDebugEnabled())\n        {\n            LOG.warn(\"Closed connection {}\",this);\n        }\n        super.onClose();\n    }","id":82267,"modified_method":"@Override\n    public void onClose()\n    {\n        if (LOG.isDebugEnabled())\n        {\n            LOG.debug(\"Closed connection {}\",this);\n        }\n        super.onClose();\n    }","commit_id":"665fd209952e45390e505aef1458620ebb1c5cbc","url":"https://github.com/eclipse/jetty.project"},{"original_method":"public RenderResult render(ToolConfiguration configuration,\n                               HttpServletRequest request,\n                               HttpServletResponse response,\n                               ServletContext context)\n        throws IOException {\n\n        for (Iterator i = renderServices.iterator(); i.hasNext();) {\n            ToolRenderService trs = (ToolRenderService) i.next();\n            if (trs.accept(configuration, request, response, context)) {\n                LOG.warn(\"Rendering with \" + trs);\n                return trs.render(configuration, request, response, context);\n            }\n        }\n        throw new ToolRenderException(\"No available Tool Render Service for the tool \" + configuration.getToolId());\n    }","id":82268,"modified_method":"public RenderResult render(ToolConfiguration configuration,\n                               HttpServletRequest request,\n                               HttpServletResponse response,\n                               ServletContext context)\n        throws IOException {\n\n        for (Iterator i = renderServices.iterator(); i.hasNext();) {\n            ToolRenderService trs = (ToolRenderService) i.next();\n            if (trs.accept(configuration, request, response, context)) {\n                LOG.debug(\"Rendering with \" + trs);\n                return trs.render(configuration, request, response, context);\n            }\n        }\n        throw new ToolRenderException(\"No available Tool Render Service for the tool \" + configuration.getToolId());\n    }","commit_id":"2eb5eb922617e30073c9d0709a8bd99785062c34","url":"https://github.com/sakaiproject/sakai"},{"original_method":"/**\n     * @param request\n     * @param response\n     * @param context\n     * @return\n     * @throws IOException\n     */\n    public boolean preprocess(HttpServletRequest request,\n                              HttpServletResponse response,\n                              ServletContext context)\n        throws IOException {\n\n        boolean continueProcessing = true;\n        for (Iterator i = renderServices.iterator(); i.hasNext();) {\n            ToolRenderService trs = (ToolRenderService) i.next();\n            LOG.warn(\"Preprocessing with \" + trs);\n            continueProcessing = continueProcessing &&\n                trs.preprocess(request, response, context);\n        }\n        return continueProcessing;\n    }","id":82269,"modified_method":"/**\n     * @param request\n     * @param response\n     * @param context\n     * @return\n     * @throws IOException\n     */\n    public boolean preprocess(HttpServletRequest request,\n                              HttpServletResponse response,\n                              ServletContext context)\n        throws IOException {\n\n        boolean continueProcessing = true;\n        for (Iterator i = renderServices.iterator(); i.hasNext();) {\n            ToolRenderService trs = (ToolRenderService) i.next();\n            LOG.debug(\"Preprocessing with \" + trs);\n            continueProcessing = continueProcessing &&\n                trs.preprocess(request, response, context);\n        }\n        return continueProcessing;\n    }","commit_id":"2eb5eb922617e30073c9d0709a8bd99785062c34","url":"https://github.com/sakaiproject/sakai"},{"original_method":"public boolean accept(ToolConfiguration configuration,\n                          HttpServletRequest request,\n                          HttpServletResponse response,\n                          ServletContext context) {\n\t\tif ( PortletToolRenderService.isPortletTool(configuration) ) {\n\t\t\tSystem.err.println(\"Tool \"+configuration.getToolId()+\" is a portlet\");\n\t\t\treturn false;\n\t\t}\n\t\tSystem.err.println(\"Tool \"+configuration.getToolId()+\" is iframe tool\");\n\t\treturn true;\n\t}","id":82270,"modified_method":"public boolean accept(ToolConfiguration configuration,\n                          HttpServletRequest request,\n                          HttpServletResponse response,\n                          ServletContext context) {\n\t\tif ( PortletToolRenderService.isPortletTool(configuration) ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}","commit_id":"2eb5eb922617e30073c9d0709a8bd99785062c34","url":"https://github.com/sakaiproject/sakai"},{"original_method":"static boolean isPortletApplication(ToolConfiguration configuration) {\n        Properties toolProperties = configuration.getConfig();\n        if (toolProperties.containsKey(TOOL_PORTLET_CONTEXT_PATH) &&\n            toolProperties.containsKey(TOOL_PORTLET_NAME)) {\n            return true;\n        }\n        return false;\n    }","id":82271,"modified_method":"static boolean isPortletApplication(Placement placement) {\n        if ( placement == null ) {\n\t\treturn false;\n\t}\n        Properties toolProperties = placement.getConfig();\n        if ( toolProperties == null ) {\n\t\treturn false;\n\t}\n        if (toolProperties.containsKey(TOOL_PORTLET_CONTEXT_PATH) &&\n            toolProperties.containsKey(TOOL_PORTLET_NAME)) {\n            return true;\n        }\n        return false;\n    }","commit_id":"2eb5eb922617e30073c9d0709a8bd99785062c34","url":"https://github.com/sakaiproject/sakai"},{"original_method":"private void createPortletWindow(Placement placement) throws ToolRenderException {\n        Properties placementProperties = placement.getConfig();\n        String contextPath = placementProperties.getProperty(TOOL_PORTLET_CONTEXT_PATH);\n        String portletName = placementProperties.getProperty(TOOL_PORTLET_NAME);\n\n        if (isEmpty(contextPath) || isEmpty(portletName)) {\n            throw new ToolRenderException(\"The tool placement does not have a context of a name, \" +\n                TOOL_PORTLET_CONTEXT_PATH +\n                \":\" + contextPath + \"  \" + TOOL_PORTLET_NAME + \":\" + portletName, new Exception());\n        }\n        String windowId = placement.getId();\n        PortletWindow window = new SakaiPortletWindow(windowId, contextPath, portletName);\n        portletWindows.put(windowId, window);\n    }","id":82272,"modified_method":"private void createPortletWindow(Placement placement) throws ToolRenderException {\n        if ( !isPortletApplication(placement) ) {\n\t     return;\n        }\n        Properties placementProperties = placement.getConfig();\n        String contextPath = placementProperties.getProperty(TOOL_PORTLET_CONTEXT_PATH);\n        String portletName = placementProperties.getProperty(TOOL_PORTLET_NAME);\n\n        if (isEmpty(contextPath) || isEmpty(portletName)) {\n            throw new ToolRenderException(\"The tool placement does not have a context of a name, \" +\n                TOOL_PORTLET_CONTEXT_PATH +\n                \":\" + contextPath + \"  \" + TOOL_PORTLET_NAME + \":\" + portletName, new Exception());\n        }\n        String windowId = placement.getId();\n        PortletWindow window = new SakaiPortletWindow(windowId, contextPath, portletName);\n        portletWindows.put(windowId, window);\n    }","commit_id":"2eb5eb922617e30073c9d0709a8bd99785062c34","url":"https://github.com/sakaiproject/sakai"},{"original_method":"private boolean isPortletApplication(ServletContext context, ToolConfiguration configuration)\n        throws ToolRenderException, MalformedURLException {\n        SakaiPortletWindow window = registry.getOrCreatePortletWindow(configuration);\n        ServletContext crossContext = context.getContext(window.getContextPath());\n        return crossContext.getResource(\"/WEB-INF/portlet.xml\") != null;\n    }","id":82273,"modified_method":"private boolean isPortletApplication(ServletContext context, ToolConfiguration configuration)\n        throws ToolRenderException, MalformedURLException {\n        SakaiPortletWindow window = registry.getOrCreatePortletWindow(configuration);\n        if ( window == null ) {\n\t\treturn false;\n\t}\n        ServletContext crossContext = context.getContext(window.getContextPath());\n        return crossContext.getResource(\"/WEB-INF/portlet.xml\") != null;\n    }","commit_id":"2eb5eb922617e30073c9d0709a8bd99785062c34","url":"https://github.com/sakaiproject/sakai"},{"original_method":"public RenderResult render(ToolConfiguration toolConfiguration,\n                               final HttpServletRequest request,\n                               final HttpServletResponse response,\n                               ServletContext context)\n        throws IOException {\n        LOG.info(\"Render request recieved.\");\n\n        final SakaiPortletWindow window = isIn168TestMode(request) ?\n            createPortletWindow(toolConfiguration.getId()) :\n            registry.getOrCreatePortletWindow(toolConfiguration);\n\n        PortletState state =\n            PortletStateAccess.getPortletState(request, window.getId().getStringId());\n\n        if (LOG.isDebugEnabled()) {\n            LOG.debug(\"Retrieved PortletState from request cache.  Applying to window.\");\n        }\n\n\n        if (state == null) {\n            state = new PortletState(window.getId().getStringId());\n            PortletStateAccess.setPortletState(request, state);\n        }\n        \n        window.setState(state);\n\n\n        try {\n\n            final HttpServletRequest req = new SakaiServletRequest(request, state);\n            final PortletContainer portletContainer = getPortletContainer(context);\n\n            return new RenderResult() {\n                private BufferedServletResponse bufferedResponse = null;\n\n                private void renderResponse() throws ToolRenderException {\n                    if (bufferedResponse == null) {\n                        bufferedResponse = new BufferedServletResponse(response);\n                        try {\n                            portletContainer.doRender(window, req, bufferedResponse);\n                        }\n                        catch (PortletException e) {\n                            throw new ToolRenderException(e.getMessage(), e);\n                        }\n                        catch (IOException e) {\n                            throw new ToolRenderException(e.getMessage(), e);\n                        }\n                        catch (PortletContainerException e) {\n                            throw new ToolRenderException(e.getMessage(), e);\n                        }\n                    }\n                }\n\n                public String getContent() throws ToolRenderException {\n                    renderResponse();\n                    return bufferedResponse.getInternalBuffer().getBuffer().toString();\n                }\n\n                public String getTitle() throws ToolRenderException {\n                    renderResponse();\n                    return PortletStateAccess.getPortletState(req, window.getId().getStringId()).getTitle();\n                }\n\n            };\n\n        } catch (PortletContainerException e) {\n            throw new ToolRenderException(e.getMessage(), e);\n        }\n    }","id":82274,"modified_method":"public RenderResult render(ToolConfiguration toolConfiguration,\n                               final HttpServletRequest request,\n                               final HttpServletResponse response,\n                               ServletContext context)\n        throws IOException {\n\n        final SakaiPortletWindow window = isIn168TestMode(request) ?\n            createPortletWindow(toolConfiguration.getId()) :\n            registry.getOrCreatePortletWindow(toolConfiguration);\n\n        PortletState state =\n            PortletStateAccess.getPortletState(request, window.getId().getStringId());\n\n        if (LOG.isDebugEnabled()) {\n            LOG.debug(\"Retrieved PortletState from request cache.  Applying to window.\");\n        }\n\n\n        if (state == null) {\n            state = new PortletState(window.getId().getStringId());\n            PortletStateAccess.setPortletState(request, state);\n        }\n        \n        window.setState(state);\n\n\n        try {\n\n            final HttpServletRequest req = new SakaiServletRequest(request, state);\n            final PortletContainer portletContainer = getPortletContainer(context);\n\n            return new RenderResult() {\n                private BufferedServletResponse bufferedResponse = null;\n\n                private void renderResponse() throws ToolRenderException {\n                    if (bufferedResponse == null) {\n                        bufferedResponse = new BufferedServletResponse(response);\n                        try {\n                            portletContainer.doRender(window, req, bufferedResponse);\n                        }\n                        catch (PortletException e) {\n                            throw new ToolRenderException(e.getMessage(), e);\n                        }\n                        catch (IOException e) {\n                            throw new ToolRenderException(e.getMessage(), e);\n                        }\n                        catch (PortletContainerException e) {\n                            throw new ToolRenderException(e.getMessage(), e);\n                        }\n                    }\n                }\n\n                public String getContent() throws ToolRenderException {\n                    renderResponse();\n                    return bufferedResponse.getInternalBuffer().getBuffer().toString();\n                }\n\n                public String getTitle() throws ToolRenderException {\n                    renderResponse();\n                    return PortletStateAccess.getPortletState(req, window.getId().getStringId()).getTitle();\n                }\n\n            };\n\n        } catch (PortletContainerException e) {\n            throw new ToolRenderException(e.getMessage(), e);\n        }\n    }","commit_id":"2eb5eb922617e30073c9d0709a8bd99785062c34","url":"https://github.com/sakaiproject/sakai"},{"original_method":"public boolean preprocess(HttpServletRequest request,\n                              HttpServletResponse response,\n                              ServletContext context)\n        throws IOException {\n\n        LOG.info(\"Preprocess request received.\");\n\n        String stateParam = request.getParameter(SakaiPortalCallbackService.PORTLET_STATE_QUERY_PARAM);\n\n        // If there is not state parameter, short circuit\n        if (stateParam == null) {\n            return true;\n        }\n\n        PortletState state = portletStateEncoder.decode(stateParam);\n        PortletStateAccess.setPortletState(request, state);\n\n        if (LOG.isDebugEnabled()) {\n            LOG.debug(\"New Portlet State retrieved for Tool '\"+state.getId()+\".\");\n        }\n\n        if (state.isAction()) {\n            if (LOG.isInfoEnabled()) {\n                LOG.info(\"Processing action for placement id \" + state.getId());\n            }\n\n            PortletStateAccess.setPortletState(request, state);\n            SakaiPortletWindow window =\n                isIn168TestMode(request) ?\n                    createPortletWindow(state.getId()) :\n                    registry.getPortletWindow(state.getId());\n            window.setState(state);\n\n            try {\n                PortletContainer portletContainer = getPortletContainer(context);\n                portletContainer.doAction(window, new SakaiServletRequest(request, state), response);\n            } catch (PortletException e) {\n                throw new ToolRenderException(e.getMessage(), e);\n            } catch (PortletContainerException e) {\n                throw new ToolRenderException(e.getMessage(), e);\n            } finally {\n                state.setAction(false);\n            }\n            return false;\n        }\n        return true;\n    }","id":82275,"modified_method":"public boolean preprocess(HttpServletRequest request,\n                              HttpServletResponse response,\n                              ServletContext context)\n        throws IOException {\n\n\n        String stateParam = request.getParameter(SakaiPortalCallbackService.PORTLET_STATE_QUERY_PARAM);\n\n        // If there is not state parameter, short circuit\n        if (stateParam == null) {\n            return true;\n        }\n\n        PortletState state = portletStateEncoder.decode(stateParam);\n        PortletStateAccess.setPortletState(request, state);\n\n        if (LOG.isDebugEnabled()) {\n            LOG.debug(\"New Portlet State retrieved for Tool '\"+state.getId()+\".\");\n        }\n\n        if (state.isAction()) {\n            if (LOG.isInfoEnabled()) {\n                LOG.info(\"Processing action for placement id \" + state.getId());\n            }\n\n            PortletStateAccess.setPortletState(request, state);\n            SakaiPortletWindow window =\n                isIn168TestMode(request) ?\n                    createPortletWindow(state.getId()) :\n                    registry.getPortletWindow(state.getId());\n            window.setState(state);\n\n            try {\n                PortletContainer portletContainer = getPortletContainer(context);\n                portletContainer.doAction(window, new SakaiServletRequest(request, state), response);\n            } catch (PortletException e) {\n                throw new ToolRenderException(e.getMessage(), e);\n            } catch (PortletContainerException e) {\n                throw new ToolRenderException(e.getMessage(), e);\n            } finally {\n                state.setAction(false);\n            }\n            return false;\n        }\n        return true;\n    }","commit_id":"2eb5eb922617e30073c9d0709a8bd99785062c34","url":"https://github.com/sakaiproject/sakai"},{"original_method":"public boolean accept(ToolConfiguration configuration,\n                          HttpServletRequest request,\n                          HttpServletResponse response,\n                          ServletContext context) {\n\t\ttry\n\t\t{\n\t\t\tif ( isIn168TestMode(request) ) {\n\t\t\t\tLOG.warn(\"In portlet test mode\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif ( isPortletApplication(context, configuration)) {\n\t\t\t\tLOG.warn(\"Tool \"+configuration.getToolId()+\" is a portlet\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tLOG.warn(\"Tool \"+configuration.getToolId()+\" is not a portlet\");\n\t\t\treturn false;\n\t\t}\n\t\tcatch (MalformedURLException e)\n\t\t{\n\t\t\tLOG.error(\"Failed to render \",e);\n\t\t\treturn false;\n\t\t} catch (ToolRenderException e) {\n            LOG.error(\"Failed to render \",e);\n            return false;\n        }\n    }","id":82276,"modified_method":"public boolean accept(ToolConfiguration configuration,\n                          HttpServletRequest request,\n                          HttpServletResponse response,\n                          ServletContext context) {\n\t\ttry\n\t\t{\n\t\t\tif ( isIn168TestMode(request) ) {\n\t\t\t\tLOG.warn(\"In portlet test mode\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif ( isPortletApplication(context, configuration)) {\n        \t\t\tif (LOG.isDebugEnabled()) {\n\t\t\t\t\tLOG.debug(\"Tool \"+configuration.getToolId()+\" is a portlet\");\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n        \t\tif (LOG.isDebugEnabled()) {\n\t\t\t\tLOG.debug(\"Tool \"+configuration.getToolId()+\" is not a portlet\");\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\tcatch (MalformedURLException e)\n\t\t{\n\t\t\tLOG.error(\"Failed to render \",e);\n\t\t\treturn false;\n\t\t} catch (ToolRenderException e) {\n            LOG.error(\"Failed to render \",e);\n            return false;\n        }\n    }","commit_id":"2eb5eb922617e30073c9d0709a8bd99785062c34","url":"https://github.com/sakaiproject/sakai"},{"original_method":"protected void sendReply(Destination replyDestination, final Message message, final JmsExchange exchange, final JmsMessage out) {\n        if (replyDestination == null) {\n            LOG.warn(\"Cannot send reply message as there is no replyDestination for: \" + out);\n            return;\n        }\n        getTemplate().send(replyDestination, new MessageCreator() {\n            public Message createMessage(Session session) throws JMSException {\n                Message reply = endpoint.getBinding().makeJmsMessage(exchange, out, session);\n\n                // lets preserve any correlation ID\n                String correlationID = message.getJMSCorrelationID();\n                if (correlationID != null) {\n                    reply.setJMSCorrelationID(correlationID);\n                }\n\n                if (LOG.isDebugEnabled()) {\n                    LOG.debug(endpoint + \" sending reply JMS message: \" + reply);\n                }\n                return reply;\n            }\n        });\n    }","id":82277,"modified_method":"protected void sendReply(Destination replyDestination, final Message message, final JmsExchange exchange, final JmsMessage out) {\n        if (replyDestination == null) {\n            if (LOG.isDebugEnabled()) {\n                LOG.debug(\"Cannot send reply message as there is no replyDestination for: \" + out);\n            }\n            return;\n        }\n        getTemplate().send(replyDestination, new MessageCreator() {\n            public Message createMessage(Session session) throws JMSException {\n                Message reply = endpoint.getBinding().makeJmsMessage(exchange, out, session);\n\n                // lets preserve any correlation ID\n                String correlationID = message.getJMSCorrelationID();\n                if (correlationID != null) {\n                    reply.setJMSCorrelationID(correlationID);\n                }\n\n                if (LOG.isDebugEnabled()) {\n                    LOG.debug(endpoint + \" sending reply JMS message: \" + reply);\n                }\n                return reply;\n            }\n        });\n    }","commit_id":"5765b4427d1f2ab752e43c9e8ebfcc33c87c1637","url":"https://github.com/apache/camel"},{"original_method":"public long run(String key, int flags, int expires, byte[] value)\n    {\n        final int now = Shared.init(this, key);\n\n        // Pre-check for item existence => Fail w/ NOT_STORED status if the record exists (whether active or queued for deletion)\n        voltQueueSQL(check, key, now);\n        VoltTable[] checkResult = voltExecuteSQL();\n        if (checkResult[0].getRowCount() > 0)\n            return VoltCacheResult.NOT_STORED;\n\n        // Insert new item\n        voltQueueSQL(insert, key, Shared.expires(this, expires), flags, value);\n        voltExecuteSQL(true);\n        return VoltCacheResult.STORED;\n    }","id":82278,"modified_method":"public long run(String key, int flags, int expires, byte[] value)\n    {\n        final int now = Shared.init(this, key);\n\n        // Pre-check for item existence => Fail w/ NOT_STORED status if the record exists (whether active or queued for deletion)\n        voltQueueSQL(check, key, now);\n        if (voltExecuteSQL()[1].getRowCount() > 0)\n            return VoltCacheResult.NOT_STORED;\n\n        // Insert new item\n        voltQueueSQL(insert, key, Shared.expires(this, expires), flags, value);\n        voltExecuteSQL(true);\n        return VoltCacheResult.STORED;\n    }","commit_id":"24d84e4fbf3bfabcc53dbf78edb2851d028d4038","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public long run(String key, byte[] value)\n    {\n        final int now = Shared.init(this, key);\n\n        voltQueueSQL(check, key, now);\n        VoltTable checkResult = voltExecuteSQL()[0];\n        if (checkResult.getRowCount() == 0)\n            return VoltCacheResult.NOT_STORED;\n\n        ByteArrayOutputStream stream = new ByteArrayOutputStream();\n        try\n        {\n            byte[] old = checkResult.fetchRow(0).getVarbinary(1);\n            stream.write(old, 0, old.length);\n            stream.write(value, 0, value.length);\n            voltQueueSQL(update, stream.toByteArray(), key);\n            voltExecuteSQL(true);\n            return VoltCacheResult.STORED;\n        }\n        catch(Exception x)\n        {\n            throw new VoltAbortException(x);\n        }\n        finally\n        {\n            try {stream.close();} catch(Exception cx){}\n        }\n    }","id":82279,"modified_method":"public long run(String key, byte[] value)\n    {\n        final int now = Shared.init(this, key);\n\n        voltQueueSQL(check, key, now);\n        VoltTable checkResult = voltExecuteSQL()[1];\n        if (checkResult.getRowCount() == 0)\n            return VoltCacheResult.NOT_STORED;\n\n        ByteArrayOutputStream stream = new ByteArrayOutputStream();\n        try\n        {\n            byte[] old = checkResult.fetchRow(0).getVarbinary(1);\n            stream.write(old, 0, old.length);\n            stream.write(value, 0, value.length);\n            voltQueueSQL(update, stream.toByteArray(), key);\n            voltExecuteSQL(true);\n            return VoltCacheResult.STORED;\n        }\n        catch(Exception x)\n        {\n            throw new VoltAbortException(x);\n        }\n        finally\n        {\n            try {stream.close();} catch(Exception cx){}\n        }\n    }","commit_id":"24d84e4fbf3bfabcc53dbf78edb2851d028d4038","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public long run(String key, int flags, int expires, byte[] value, long casVersion)\n    {\n        final int now = Shared.init(this, key);\n\n        voltQueueSQL(check, key, now);\n        VoltTable checkResult = voltExecuteSQL()[0];\n        if (checkResult.getRowCount() == 0)\n            return VoltCacheResult.NOT_FOUND;\n\n        if (checkResult.fetchRow(0).getLong(0) != casVersion)\n            return VoltCacheResult.EXISTS;\n\n        voltQueueSQL(update, Shared.expires(this, expires), flags, value, key, casVersion);\n        voltExecuteSQL(true);\n        return VoltCacheResult.STORED;\n    }","id":82280,"modified_method":"public long run(String key, int flags, int expires, byte[] value, long casVersion)\n    {\n        final int now = Shared.init(this, key);\n\n        voltQueueSQL(check, key, now);\n        VoltTable checkResult = voltExecuteSQL()[1];\n        if (checkResult.getRowCount() == 0)\n            return VoltCacheResult.NOT_FOUND;\n\n        if (checkResult.fetchRow(0).getLong(0) != casVersion)\n            return VoltCacheResult.EXISTS;\n\n        voltQueueSQL(update, Shared.expires(this, expires), flags, value, key, casVersion);\n        voltExecuteSQL(true);\n        return VoltCacheResult.STORED;\n    }","commit_id":"24d84e4fbf3bfabcc53dbf78edb2851d028d4038","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public long run(String key, int expires)\n    {\n        final int now = Shared.init(this, key);\n\n        // If immediate-deletion request, honor regardless as to whether item was already queued for deletion\n        if (expires <= 0)\n        {\n            voltQueueSQL(delete, key);\n            if (voltExecuteSQL()[0].fetchRow(0).getLong(0) == 0)\n                return VoltCacheResult.NOT_FOUND;\n            return VoltCacheResult.DELETED;\n        }\n        // Otherwise find item and queue for deletion\n        else\n        {\n            voltQueueSQL(check, key, now);\n            VoltTable[] checkResult = voltExecuteSQL();\n            if (checkResult[0].getRowCount() == 0)\n                return VoltCacheResult.NOT_FOUND;\n\n            voltQueueSQL(update, Shared.expires(this, expires), key);\n            voltExecuteSQL(true);\n            return VoltCacheResult.DELETED;\n        }\n    }","id":82281,"modified_method":"public long run(String key, int expires)\n    {\n        final int now = Shared.init(this, key);\n\n        // If immediate-deletion request, honor regardless as to whether item was already queued for deletion\n        if (expires <= 0)\n        {\n            voltQueueSQL(delete, key);\n            if (voltExecuteSQL()[1].fetchRow(0).getLong(0) == 0)\n                return VoltCacheResult.NOT_FOUND;\n            return VoltCacheResult.DELETED;\n        }\n        // Otherwise find item and queue for deletion\n        else\n        {\n            voltQueueSQL(check, key, now);\n            if (voltExecuteSQL()[1].getRowCount() == 0)\n                return VoltCacheResult.NOT_FOUND;\n\n            voltQueueSQL(update, Shared.expires(this, expires), key);\n            voltExecuteSQL(true);\n            return VoltCacheResult.DELETED;\n        }\n    }","commit_id":"24d84e4fbf3bfabcc53dbf78edb2851d028d4038","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public VoltTable[] run(String key)\n    {\n        final int now = Shared.init(this, key);\n\n        // Select item (only if not expired/queued for deletion)\n        voltQueueSQL(select, key, now);\n        return voltExecuteSQL(true);\n    }","id":82282,"modified_method":"public VoltTable[] run(String key)\n    {\n        final int now = Shared.init(this, key);\n\n        // Select item (only if not expired/queued for deletion)\n        voltQueueSQL(select, key, now);\n        return new VoltTable[] { voltExecuteSQL(true)[1] };\n    }","commit_id":"24d84e4fbf3bfabcc53dbf78edb2851d028d4038","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public long run(String key, long by, byte increment)\n    {\n        final int now = Shared.init(this, key);\n\n        voltQueueSQL(check, key, now);\n        VoltTable checkResult = voltExecuteSQL()[0];\n        if (checkResult.getRowCount() == 0)\n            return VoltType.NULL_BIGINT;\n\n        try\n        {\n            byte[] oldRawData = checkResult.fetchRow(0).getVarbinary(1);\n            long value = Long.parseLong(new String(oldRawData,\"UTF-8\")) + (increment == 1 ? by : -by);\n            if (value < 0l) // Underflow protection: per protocol, this should be an unsigned long...\n                value = 0l;\n            byte[] newRawData = Long.toString(value).getBytes(\"UTF-8\");\n            voltQueueSQL(update, newRawData, key);\n            voltExecuteSQL(true);\n            return value;\n        }\n        catch(Exception x)\n        {\n            throw new VoltAbortException(x);\n        }\n    }","id":82283,"modified_method":"public long run(String key, long by, byte increment)\n    {\n        final int now = Shared.init(this, key);\n\n        voltQueueSQL(check, key, now);\n        VoltTable checkResult = voltExecuteSQL()[1];\n        if (checkResult.getRowCount() == 0)\n            return VoltType.NULL_BIGINT;\n\n        try\n        {\n            final byte[] oldRawData = checkResult.fetchRow(0).getVarbinary(1);\n            final long old_value = Long.parseLong(new String(oldRawData,\"UTF-8\"));\n            long value = old_value + (increment == 1 ? by : -by);\n            if (value < 0l) // Underflow protection: per protocol, this should be an unsigned long...\n                value = 0l;\n            final byte[] newRawData = Long.toString(value).getBytes(\"UTF-8\");\n            voltQueueSQL(update, newRawData, key);\n            voltExecuteSQL(true);\n            return old_value;\n        }\n        catch(Exception x)\n        {\n            throw new VoltAbortException(x);\n        }\n    }","commit_id":"24d84e4fbf3bfabcc53dbf78edb2851d028d4038","url":"https://github.com/VoltDB/voltdb"},{"original_method":"protected void answer() throws Exception\n    {\n        // Read a line of data\n        final ByteArrayOutputStream lineData = new ByteArrayOutputStream();\n        boolean gotR = false;\n        int b;\n        while(true)\n        {\n                    b = this.in.read();\n\n            if (b == -1)\n                throw new IOException(\"Stream terminated\");\n\n                    if (b == 13)\n                    {\n                            gotR = true;\n                            continue;\n                    }\n\n                    if (gotR)\n                    {\n                            if (b == 10)\n                                    break;\n\n                lineData.write(13);\n\n                            gotR = false;\n                    }\n\n            lineData.write(b);\n        }\n\n        // Parse first line arguments to figure out command\n        final String[] args  = lineData.toString(\"UTF-8\").trim().split(\" \");\n        final String command = args[0].toLowerCase();\n        final int argCount   = args.length-1;\n\n        // GET\n        if (command.equals(COMMAND_GET) || command.equals(COMMAND_GETS))\n        {\n            if (argCount == 0)\n                this.replyClientError(INVALID_ARGUMENT_COUNT, argCount);\n            else if (argCount == 1)\n            {\n                try\n                {\n                    this.replyData(args[1], this.Cache.get(args[1]));\n                }\n                catch(Exception e)\n                {\n                    this.replyServerError(EXECUTION_EXCEPTION, e);\n                }\n            }\n            else\n            {\n                try\n                {\n                    this.replyData(this.Cache.get(Arrays.copyOfRange(args, 1, args.length-1)));\n                }\n                catch(Exception e)\n                {\n                    this.replyServerError(EXECUTION_EXCEPTION, e);\n                }\n            }\n        }\n\n        // ADD, APPEND, PREPEND, REPLACE, SET\n        else if (\n                command.equals(COMMAND_SET)\n             || command.equals(COMMAND_ADD)\n             || command.equals(COMMAND_APPEND)\n             || command.equals(COMMAND_PREPEND)\n             || command.equals(COMMAND_REPLACE)\n           )\n        {\n            if ((argCount < 4) || (argCount > 5))\n                this.replyClientError(INVALID_ARGUMENT_COUNT, argCount);\n            else\n                try\n                {\n                    final String key = args[1];\n                    final int flags = Integer.valueOf(args[2]);\n                    final int exptime = Integer.valueOf(args[3]);\n                    final int byteCount = Integer.valueOf(args[4]);\n                    final byte[] data = new byte[byteCount];\n                    this.in.read(data);\n                    this.in.skip(2); // Skip \\r\\n terminator\n                    boolean noreply = false;\n                    if (argCount == 5)\n                    {\n                        if (args[5].equals(NOREPLY))\n                            noreply = true;\n                        else\n                        {\n                            this.replyClientError(INVALID_NOREPLY_ARGUMENT, args[5]);\n                            return;\n                        }\n                    }\n\n                    try\n                    {\n                        // Run actual operation\n                        if(command.equals(COMMAND_SET))\n                            this.replyStatus(this.Cache.set(key, flags, exptime, data, noreply));\n                        else if(command.equals(COMMAND_ADD))\n                            this.replyStatus(this.Cache.add(key, flags, exptime, data, noreply));\n                        else if(command.equals(COMMAND_APPEND))\n                            this.replyStatus(this.Cache.append(key, data, noreply));\n                        else if(command.equals(COMMAND_PREPEND))\n                            this.replyStatus(this.Cache.prepend(key, data, noreply));\n                        else if(command.equals(COMMAND_REPLACE))\n                            this.replyStatus(this.Cache.replace(key, flags, exptime, data, noreply));\n                    }\n                    catch(Exception e)\n                    {\n                        this.replyServerError(EXECUTION_EXCEPTION, e);\n                    }\n                }\n                catch(Exception x)\n                {\n                    this.replyClientError(PREPARATION_EXCEPTION, x);\n                }\n        }\n\n        // CAS\n        else if (command.equals(COMMAND_CAS))\n        {\n            if ((argCount < 5) || (argCount > 6))\n                this.replyClientError(INVALID_ARGUMENT_COUNT, argCount);\n            else\n                try\n                {\n                    final String key = args[1];\n                    final int flags = Integer.valueOf(args[2]);\n                    final int exptime = Integer.valueOf(args[3]);\n                    final int byteCount = Integer.valueOf(args[4]);\n                    final byte[] data = new byte[byteCount];\n                    this.in.read(data, 0, byteCount);\n                    this.in.skip(2); // Skip \\r\\n terminator\n                    final long casVersion = Long.valueOf(args[5]);\n                    boolean noreply = false;\n                    if (argCount == 6)\n                    {\n                        if (args[6].equals(NOREPLY))\n                            noreply = true;\n                        else\n                        {\n                            this.replyClientError(INVALID_NOREPLY_ARGUMENT, args[6]);\n                            return;\n                        }\n                    }\n\n                    // Run actual operation\n                    try\n                    {\n                        this.replyStatus(this.Cache.cas(key, flags, exptime, data, casVersion, noreply));\n                    }\n                    catch(Exception e)\n                    {\n                        this.replyServerError(EXECUTION_EXCEPTION, e);\n                    }\n                }\n                catch(Exception x)\n                {\n                    this.replyClientError(PREPARATION_EXCEPTION, x);\n                }\n        }\n\n        // DELETE\n        else if (command.equals(COMMAND_DELETE))\n        {\n            if (argCount == 0 || argCount > 3)\n                this.replyClientError(INVALID_ARGUMENT_COUNT, argCount);\n            else\n            {\n                try\n                {\n                    final String key = args[1];\n                    int exptime = 0;\n                    boolean noreply = false;\n                    if (argCount == 2)\n                    {\n                        if (args[2].equals(NOREPLY))\n                            noreply = true;\n                        else\n                            exptime = Integer.valueOf(args[2]);\n                    }\n                    else if (argCount == 3)\n                    {\n                        exptime = Integer.valueOf(args[1]);\n                        if (args[3].equals(NOREPLY))\n                            noreply = true;\n                        else\n                        {\n                            this.replyClientError(INVALID_NOREPLY_ARGUMENT, args[3]);\n                            return;\n                        }\n                    }\n\n                    // Run actual operation\n                    try\n                    {\n                        this.replyStatus(this.Cache.delete(key, exptime, noreply));\n                    }\n                    catch(Exception e)\n                    {\n                        this.replyServerError(EXECUTION_EXCEPTION, e);\n                    }\n                }\n                catch(Exception x)\n                {\n                    this.replyClientError(PREPARATION_EXCEPTION, x);\n                }\n            }\n        }\n\n        // FLUSH_ALL\n        else if (command.equals(COMMAND_FLUSHALL))\n        {\n            if (argCount > 2)\n                this.replyClientError(INVALID_ARGUMENT_COUNT, argCount);\n            else\n            {\n                try\n                {\n                    int exptime = 0;\n                    boolean noreply = false;\n                    if (argCount == 1)\n                    {\n                        if (args[1].equals(NOREPLY))\n                            noreply = true;\n                        else\n                            exptime = Integer.valueOf(args[1]);\n                    }\n                    else if (argCount == 2)\n                    {\n                        exptime = Integer.valueOf(args[1]);\n                        if (args[2].equals(NOREPLY))\n                            noreply = true;\n                        else\n                        {\n                            this.replyClientError(INVALID_NOREPLY_ARGUMENT, args[2]);\n                            return;\n                        }\n                    }\n\n                    // Run actual operation\n                    try\n                    {\n                        this.replyStatus(this.Cache.flushAll(exptime, noreply));\n                    }\n                    catch(Exception e)\n                    {\n                        this.replyServerError(EXECUTION_EXCEPTION, e);\n                    }\n                }\n                catch(Exception x)\n                {\n                    this.replyClientError(PREPARATION_EXCEPTION, x);\n                }\n            }\n        }\n\n        // VERSION\n        else if (command.equals(COMMAND_VERSION))\n        {\n            this.reply(\"VERSION 1.4.5\\r\\n\"); // Pretend to be Memcached server 1.4.5\n        }\n\n        // INCR, DECR\n        else if (command.equals(COMMAND_INCR) || command.equals(COMMAND_DECR))\n        {\n            if (argCount < 2 || argCount > 3)\n                this.replyClientError(INVALID_ARGUMENT_COUNT, argCount);\n            else\n            {\n                try\n                {\n                    final String key = args[1];\n                    final long by = Long.valueOf(args[2]);\n                    boolean noreply = false;\n                    if (argCount == 3)\n                    {\n                        if (args[3].equals(NOREPLY))\n                            noreply = true;\n                        else\n                        {\n                            this.replyClientError(INVALID_NOREPLY_ARGUMENT, args[3]);\n                            return;\n                        }\n                    }\n\n                    // Run actual operation\n                    try\n                    {\n                        this.replyIncrDecr(this.Cache.incrDecr(key, by, command.equals(COMMAND_INCR), noreply), noreply);\n                    }\n                    catch(Exception e)\n                    {\n                        this.replyServerError(EXECUTION_EXCEPTION, e);\n                    }\n                }\n                catch(Exception x)\n                {\n                    this.replyClientError(PREPARATION_EXCEPTION, x);\n                }\n            }\n        }\n        else if (command.equals(COMMAND_QUIT))\n            this.kill();\n        else\n            this.replyError();\n    }","id":82284,"modified_method":"protected void answer() throws Exception\n    {\n        boolean gotR = false;\n        int b;\n        int xi = 0;\n\n        int tr = this.in.read(msg);\n        if (tr == -1)\n            throw new IOException(\"Stream terminated\");\n\n        while(true)\n        {\n            b = msg[xi];\n            if (xi >= tr)\n                throw new IOException(\"Stream terminated\");\n            if (b == 13)\n            {\n                gotR = true;\n                xi++;\n                continue;\n            }\n            if (gotR)\n            {\n                if (b == 10)\n                {\n                    xi++;\n                    break;\n                }\n                msg[xi++] = 13;\n                gotR = false;\n            }\n            xi++;\n        }\n        // Parse first line arguments to figure out command\n        final String[] args  = splitter.split(new String(msg, 0, xi, USASCII).trim());\n        final String command = args[0].toLowerCase();\n        final int argCount   = args.length-1;\n\n        // GET\n        if (command.equals(COMMAND_GET) || command.equals(COMMAND_GETS))\n        {\n            if (argCount == 0)\n                this.replyClientError(INVALID_ARGUMENT_COUNT, argCount);\n            else if (argCount == 1)\n            {\n                try\n                {\n                    this.replyData(args[1], this.Cache.get(args[1]));\n                }\n                catch(Exception e)\n                {\n                    this.replyServerError(EXECUTION_EXCEPTION, e);\n                }\n            }\n            else\n            {\n                try\n                {\n                    this.replyData(this.Cache.get(Arrays.copyOfRange(args, 1, args.length-1)));\n                }\n                catch(Exception e)\n                {\n                    this.replyServerError(EXECUTION_EXCEPTION, e);\n                }\n            }\n        }\n\n        // ADD, APPEND, PREPEND, REPLACE, SET\n        else if (\n                command.equals(COMMAND_SET)\n             || command.equals(COMMAND_ADD)\n             || command.equals(COMMAND_APPEND)\n             || command.equals(COMMAND_PREPEND)\n             || command.equals(COMMAND_REPLACE)\n           )\n        {\n            if ((argCount < 4) || (argCount > 5))\n                this.replyClientError(INVALID_ARGUMENT_COUNT, argCount);\n            else\n                try\n                {\n                    final String key = args[1];\n                    final int flags = Integer.valueOf(args[2]);\n                    final int exptime = Integer.valueOf(args[3]);\n                    final int byteCount = Integer.valueOf(args[4]);\n                    final byte[] data = new byte[byteCount];\n                    int avail = tr-xi;\n                    if (avail < byteCount)\n                    {\n                        System.arraycopy(msg, xi, data, 0, avail);\n                        this.in.read(data, avail, byteCount-avail);\n                        this.in.skip(2);\n                    }\n                    else\n                    {\n                        System.arraycopy(msg, xi, data, 0, byteCount);\n                        if (byteCount+2 > avail)\n                            this.in.skip(byteCount+2-avail);\n                    }\n                    boolean noreply = false;\n                    if (argCount == 5)\n                    {\n                        if (args[5].equals(NOREPLY))\n                            noreply = true;\n                        else\n                        {\n                            this.replyClientError(INVALID_NOREPLY_ARGUMENT, args[5]);\n                            return;\n                        }\n                    }\n\n                    try\n                    {\n                        // Run actual operation\n                        if(command.equals(COMMAND_SET))\n                            this.replyStatus(this.Cache.set(key, flags, exptime, data, noreply));\n                        else if(command.equals(COMMAND_ADD))\n                            this.replyStatus(this.Cache.add(key, flags, exptime, data, noreply));\n                        else if(command.equals(COMMAND_APPEND))\n                            this.replyStatus(this.Cache.append(key, data, noreply));\n                        else if(command.equals(COMMAND_PREPEND))\n                            this.replyStatus(this.Cache.prepend(key, data, noreply));\n                        else if(command.equals(COMMAND_REPLACE))\n                            this.replyStatus(this.Cache.replace(key, flags, exptime, data, noreply));\n                    }\n                    catch(Exception e)\n                    {\n                        this.replyServerError(EXECUTION_EXCEPTION, e);\n                    }\n                }\n                catch(Exception x)\n                {\n                    this.replyClientError(PREPARATION_EXCEPTION, x);\n                }\n        }\n\n        // CAS\n        else if (command.equals(COMMAND_CAS))\n        {\n            if ((argCount < 5) || (argCount > 6))\n                this.replyClientError(INVALID_ARGUMENT_COUNT, argCount);\n            else\n                try\n                {\n                    final String key = args[1];\n                    final int flags = Integer.valueOf(args[2]);\n                    final int exptime = Integer.valueOf(args[3]);\n                    final int byteCount = Integer.valueOf(args[4]);\n                    final byte[] data = new byte[byteCount];\n                    int avail = tr-xi;\n                    if (avail < byteCount)\n                    {\n                        System.arraycopy(msg, xi, data, 0, avail);\n                        this.in.read(data, avail, byteCount-avail);\n                        this.in.skip(2);\n                    }\n                    else\n                    {\n                        System.arraycopy(msg, xi, data, 0, byteCount);\n                        if (byteCount+2 > avail)\n                            this.in.skip(byteCount+2-avail);\n                    }\n                    final long casVersion = Long.valueOf(args[5]);\n                    boolean noreply = false;\n                    if (argCount == 6)\n                    {\n                        if (args[6].equals(NOREPLY))\n                            noreply = true;\n                        else\n                        {\n                            this.replyClientError(INVALID_NOREPLY_ARGUMENT, args[6]);\n                            return;\n                        }\n                    }\n\n                    // Run actual operation\n                    try\n                    {\n                        this.replyStatus(this.Cache.cas(key, flags, exptime, data, casVersion, noreply));\n                    }\n                    catch(Exception e)\n                    {\n                        this.replyServerError(EXECUTION_EXCEPTION, e);\n                    }\n                }\n                catch(Exception x)\n                {\n                    this.replyClientError(PREPARATION_EXCEPTION, x);\n                }\n        }\n\n        // DELETE\n        else if (command.equals(COMMAND_DELETE))\n        {\n            if (argCount == 0 || argCount > 3)\n                this.replyClientError(INVALID_ARGUMENT_COUNT, argCount);\n            else\n            {\n                try\n                {\n                    final String key = args[1];\n                    int exptime = 0;\n                    boolean noreply = false;\n                    if (argCount == 2)\n                    {\n                        if (args[2].equals(NOREPLY))\n                            noreply = true;\n                        else\n                            exptime = Integer.valueOf(args[2]);\n                    }\n                    else if (argCount == 3)\n                    {\n                        exptime = Integer.valueOf(args[1]);\n                        if (args[3].equals(NOREPLY))\n                            noreply = true;\n                        else\n                        {\n                            this.replyClientError(INVALID_NOREPLY_ARGUMENT, args[3]);\n                            return;\n                        }\n                    }\n\n                    // Run actual operation\n                    try\n                    {\n                        this.replyStatus(this.Cache.delete(key, exptime, noreply));\n                    }\n                    catch(Exception e)\n                    {\n                        this.replyServerError(EXECUTION_EXCEPTION, e);\n                    }\n                }\n                catch(Exception x)\n                {\n                    this.replyClientError(PREPARATION_EXCEPTION, x);\n                }\n            }\n        }\n\n        // FLUSH_ALL\n        else if (command.equals(COMMAND_FLUSHALL))\n        {\n            if (argCount > 2)\n                this.replyClientError(INVALID_ARGUMENT_COUNT, argCount);\n            else\n            {\n                try\n                {\n                    int exptime = 0;\n                    boolean noreply = false;\n                    if (argCount == 1)\n                    {\n                        if (args[1].equals(NOREPLY))\n                            noreply = true;\n                        else\n                            exptime = Integer.valueOf(args[1]);\n                    }\n                    else if (argCount == 2)\n                    {\n                        exptime = Integer.valueOf(args[1]);\n                        if (args[2].equals(NOREPLY))\n                            noreply = true;\n                        else\n                        {\n                            this.replyClientError(INVALID_NOREPLY_ARGUMENT, args[2]);\n                            return;\n                        }\n                    }\n\n                    // Run actual operation\n                    try\n                    {\n                        this.replyStatus(this.Cache.flushAll(exptime, noreply));\n                    }\n                    catch(Exception e)\n                    {\n                        this.replyServerError(EXECUTION_EXCEPTION, e);\n                    }\n                }\n                catch(Exception x)\n                {\n                    this.replyClientError(PREPARATION_EXCEPTION, x);\n                }\n            }\n        }\n\n        // VERSION\n        else if (command.equals(COMMAND_VERSION))\n        {\n            this.reply(\"VERSION 1.4.5\\r\\n\"); // Pretend to be Memcached server 1.4.5\n        }\n\n        // INCR, DECR\n        else if (command.equals(COMMAND_INCR) || command.equals(COMMAND_DECR))\n        {\n            if (argCount < 2 || argCount > 3)\n                this.replyClientError(INVALID_ARGUMENT_COUNT, argCount);\n            else\n            {\n                try\n                {\n                    final String key = args[1];\n                    final long by = Long.valueOf(args[2]);\n                    boolean noreply = false;\n                    if (argCount == 3)\n                    {\n                        if (args[3].equals(NOREPLY))\n                            noreply = true;\n                        else\n                        {\n                            this.replyClientError(INVALID_NOREPLY_ARGUMENT, args[3]);\n                            return;\n                        }\n                    }\n\n                    // Run actual operation\n                    try\n                    {\n                        this.replyIncrDecr(this.Cache.incrDecr(key, by, command.equals(COMMAND_INCR), noreply), noreply);\n                    }\n                    catch(Exception e)\n                    {\n                        this.replyServerError(EXECUTION_EXCEPTION, e);\n                    }\n                }\n                catch(Exception x)\n                {\n                    this.replyClientError(PREPARATION_EXCEPTION, x);\n                }\n            }\n        }\n        else if (command.equals(COMMAND_QUIT))\n            this.kill();\n        else\n            this.replyError();\n    }","commit_id":"24d84e4fbf3bfabcc53dbf78edb2851d028d4038","url":"https://github.com/VoltDB/voltdb"},{"original_method":"private void replyData(String key, VoltCacheResult response) throws Exception\n    {\n        if (response.Data.containsKey(key))\n        {\n            final VoltCacheItem item = response.Data.get(key);\n\n            byte[] value;\n\n            this.out.write(RESPONSE_VALUE, 0, RESPONSE_VALUE_Length);\n\n            value = item.Key.getBytes(\"UTF-8\");\n            this.out.write(value, 0, value.length);\n\n            this.out.write(OneSpace, 0, OneSpace_Length);\n\n            value = Integer.toString(item.Flags).getBytes(\"UTF-8\");\n            this.out.write(value, 0, value.length);\n\n            this.out.write(OneSpace, 0, OneSpace_Length);\n\n            value = Integer.toString(item.Value.length).getBytes(\"UTF-8\");\n            this.out.write(value, 0, value.length);\n\n            this.out.write(OneSpace, 0, OneSpace_Length);\n\n            value = Long.toString(item.CASVersion).getBytes(\"UTF-8\");\n            this.out.write(value, 0, value.length);\n\n            this.out.write(NewLine, 0, NewLine_Length);\n\n            this.out.write(item.Value, 0, item.Value.length);\n            this.out.write(NewLine, 0, NewLine_Length);\n        }\n        this.out.write(EndLine, 0, EndLine_Length);\n        this.out.flush();\n\n    }","id":82285,"modified_method":"private void replyData(String key, VoltCacheResult response) throws Exception\n    {\n        if (response.Data != null)\n        {\n            if (response.Data.containsKey(key))\n            {\n                final VoltCacheItem item = response.Data.get(key);\n\n                byte[] value;\n\n                this.out.write(RESPONSE_VALUE, 0, RESPONSE_VALUE_Length);\n\n                value = getResponseBytes(key);\n                this.out.write(value, 0, value.length);\n\n                this.out.write(OneSpace, 0, OneSpace_Length);\n\n                value = getResponseBytes(Integer.toString(item.Flags));\n                this.out.write(value, 0, value.length);\n\n                this.out.write(OneSpace, 0, OneSpace_Length);\n\n                value = getResponseBytes(Integer.toString(item.Value.length));\n                this.out.write(value, 0, value.length);\n\n                this.out.write(OneSpace, 0, OneSpace_Length);\n\n                value = getResponseBytes(Long.toString(item.CASVersion));\n                this.out.write(value, 0, value.length);\n\n                this.out.write(NewLine, 0, NewLine_Length);\n\n                this.out.write(item.Value, 0, item.Value.length);\n                this.out.write(NewLine, 0, NewLine_Length);\n            }\n        }\n        this.out.write(EndLine, 0, EndLine_Length);\n        this.out.flush();\n\n    }","commit_id":"24d84e4fbf3bfabcc53dbf78edb2851d028d4038","url":"https://github.com/VoltDB/voltdb"},{"original_method":"private void replyData(VoltCacheResult response) throws Exception\n    {\n        Iterator<VoltCacheItem> itr = (Iterator<VoltCacheItem>)((Collection<VoltCacheItem>)response.Data.values()).iterator();\n        while (itr.hasNext())\n        {\n            final VoltCacheItem item = itr.next();\n            byte[] value;\n\n            this.out.write(RESPONSE_VALUE, 0, RESPONSE_VALUE_Length);\n\n            value = item.Key.getBytes(\"UTF-8\");\n            this.out.write(value, 0, value.length);\n\n            this.out.write(OneSpace, 0, OneSpace_Length);\n\n            value = Integer.toString(item.Flags).getBytes(\"UTF-8\");\n            this.out.write(value, 0, value.length);\n\n            this.out.write(OneSpace, 0, OneSpace_Length);\n\n            value = Integer.toString(item.Value.length).getBytes(\"UTF-8\");\n            this.out.write(value, 0, value.length);\n\n            this.out.write(OneSpace, 0, OneSpace_Length);\n\n            value = Long.toString(item.CASVersion).getBytes(\"UTF-8\");\n            this.out.write(value, 0, value.length);\n\n            this.out.write(NewLine, 0, NewLine_Length);\n\n            this.out.write(item.Value, 0, item.Value.length);\n            this.out.write(NewLine, 0, NewLine_Length);\n        }\n        this.out.write(EndLine, 0, EndLine.length);\n        this.out.flush();\n    }","id":82286,"modified_method":"private void replyData(VoltCacheResult response) throws Exception\n    {\n        if (response.Data != null)\n        {\n            Iterator<VoltCacheItem> itr = (Iterator<VoltCacheItem>)((Collection<VoltCacheItem>)response.Data.values()).iterator();\n            while (itr.hasNext())\n            {\n                final VoltCacheItem item = itr.next();\n                byte[] value;\n\n                this.out.write(RESPONSE_VALUE, 0, RESPONSE_VALUE_Length);\n\n                value = getResponseBytes(item.Key);\n                this.out.write(value, 0, value.length);\n\n                this.out.write(OneSpace, 0, OneSpace_Length);\n\n                value = getResponseBytes(Integer.toString(item.Flags));\n                this.out.write(value, 0, value.length);\n\n                this.out.write(OneSpace, 0, OneSpace_Length);\n\n                value = getResponseBytes(Integer.toString(item.Value.length));\n                this.out.write(value, 0, value.length);\n\n                this.out.write(OneSpace, 0, OneSpace_Length);\n\n                value = getResponseBytes(Long.toString(item.CASVersion));\n                this.out.write(value, 0, value.length);\n\n                this.out.write(NewLine, 0, NewLine_Length);\n\n                this.out.write(item.Value, 0, item.Value.length);\n                this.out.write(NewLine, 0, NewLine_Length);\n            }\n        }\n        this.out.write(EndLine, 0, EndLine.length);\n        this.out.flush();\n    }","commit_id":"24d84e4fbf3bfabcc53dbf78edb2851d028d4038","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public MemcachedTextProtocolService(Socket socket, String voltcacheServerList, int voltcachePort) throws Exception\n    {\n        this.Id     = IdGenerator++;\n        this.Socket = socket;\n        this.in     = new BufferedInputStream(socket.getInputStream());\n        this.out    = new BufferedOutputStream(socket.getOutputStream());\n        this.Cache  = new VoltCache(voltcacheServerList, voltcachePort);\n        System.out.println(\"Opening Client Connection[\" + this.Id + \"] :: \" + this.Socket.getInetAddress());\n    }","id":82287,"modified_method":"public MemcachedTextProtocolService(Socket socket, String voltcacheServerList, int voltcachePort) throws Exception\n    {\n        this.Id     = IdGenerator++;\n        this.Socket = socket;\n        this.in     = socket.getInputStream();\n//        this.in     = new BufferedInputStream(socket.getInputStream(), 65535);\n        this.out    = new BufferedOutputStream(socket.getOutputStream(), 65535);\n        this.Cache  = new VoltCache(voltcacheServerList, voltcachePort);\n        System.out.println(\"Opening Client Connection[\" + this.Id + \"] :: \" + this.Socket.getInetAddress());\n    }","commit_id":"24d84e4fbf3bfabcc53dbf78edb2851d028d4038","url":"https://github.com/VoltDB/voltdb"},{"original_method":"private void replyIncrDecr(VoltCacheResult response, boolean noreply) throws Exception\n    {\n        if (noreply)\n            this.replyStatus(response);\n        else\n        {\n            long value = response.IncrDecrValue;\n            if (value == VoltType.NULL_BIGINT)\n                this.reply(RESPONSE_NOT_FOUND);\n            else\n                this.reply(Long.toString(value) + \"\\r\\n\");\n        }\n    }","id":82288,"modified_method":"private void replyIncrDecr(VoltCacheResult response, boolean noreply) throws Exception\n    {\n        if (noreply)\n            this.replyStatus(response);\n        else\n        {\n            if (response.Code == VoltCacheResult.NOT_FOUND)\n                this.reply(RESPONSE_NOT_FOUND);\n            else\n                this.reply(Long.toString(response.IncrDecrValue) + \"\\r\\n\");\n        }\n    }","commit_id":"24d84e4fbf3bfabcc53dbf78edb2851d028d4038","url":"https://github.com/VoltDB/voltdb"},{"original_method":"private static byte[] getResponseBytes(String responseString)\n    {\n        try\n        {\n            return responseString.getBytes(\"UTF-8\");\n        }\n        catch(Exception x)\n        {\n            return responseString.getBytes();\n        }\n    }","id":82289,"modified_method":"private static byte[] getResponseBytes(String responseString)\n    {\n        try\n        {\n            return USASCII.encode(responseString).array(); //responseString.getBytes(USASCII);\n        }\n        catch(Exception x)\n        {\n            return responseString.getBytes();\n        }\n    }","commit_id":"24d84e4fbf3bfabcc53dbf78edb2851d028d4038","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public long run(String key, byte[] value)\n    {\n        final int now = Shared.init(this, key);\n\n        voltQueueSQL(check, key, now);\n        VoltTable checkResult = voltExecuteSQL()[0];\n        if (checkResult.getRowCount() == 0)\n            return VoltCacheResult.NOT_STORED;\n\n        ByteArrayOutputStream stream = new ByteArrayOutputStream();\n        try\n        {\n            byte[] old = checkResult.fetchRow(0).getVarbinary(1);\n            stream.write(value, 0, value.length);\n            stream.write(old, 0, old.length);\n            voltQueueSQL(update, stream.toByteArray(), key);\n            voltExecuteSQL(true);\n            return VoltCacheResult.STORED;\n        }\n        catch(Exception x)\n        {\n            throw new VoltAbortException(x);\n        }\n        finally\n        {\n            try {stream.close();} catch(Exception cx){}\n        }\n    }","id":82290,"modified_method":"public long run(String key, byte[] value)\n    {\n        final int now = Shared.init(this, key);\n\n        voltQueueSQL(check, key, now);\n        VoltTable checkResult = voltExecuteSQL()[1];\n        if (checkResult.getRowCount() == 0)\n            return VoltCacheResult.NOT_STORED;\n\n        ByteArrayOutputStream stream = new ByteArrayOutputStream();\n        try\n        {\n            byte[] old = checkResult.fetchRow(0).getVarbinary(1);\n            stream.write(value, 0, value.length);\n            stream.write(old, 0, old.length);\n            voltQueueSQL(update, stream.toByteArray(), key);\n            voltExecuteSQL(true);\n            return VoltCacheResult.STORED;\n        }\n        catch(Exception x)\n        {\n            throw new VoltAbortException(x);\n        }\n        finally\n        {\n            try {stream.close();} catch(Exception cx){}\n        }\n    }","commit_id":"24d84e4fbf3bfabcc53dbf78edb2851d028d4038","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public long run(String key, int flags, int expires, byte[] value)\n    {\n        final int now = Shared.init(this, key);\n\n        voltQueueSQL(check, key, now);\n        VoltTable checkResult = voltExecuteSQL()[0];\n        if (checkResult.getRowCount() == 0)\n            return VoltCacheResult.NOT_FOUND;\n\n        voltQueueSQL(update, Shared.expires(this, expires), flags, value, key);\n        voltExecuteSQL(true);\n        return VoltCacheResult.STORED;\n    }","id":82291,"modified_method":"public long run(String key, int flags, int expires, byte[] value)\n    {\n        final int now = Shared.init(this, key);\n\n        voltQueueSQL(check, key, now);\n        VoltTable checkResult = voltExecuteSQL()[1];\n        if (checkResult.getRowCount() == 0)\n            return VoltCacheResult.NOT_FOUND;\n\n        voltQueueSQL(update, Shared.expires(this, expires), flags, value, key);\n        voltExecuteSQL(true);\n        return VoltCacheResult.STORED;\n    }","commit_id":"24d84e4fbf3bfabcc53dbf78edb2851d028d4038","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public long run(String key, int flags, int expires, byte[] value)\n    {\n        final int now = Shared.init(this, key);\n\n        voltQueueSQL(check, key, now);\n        VoltTable checkResult = voltExecuteSQL()[0];\n        if (checkResult.getRowCount() > 0)\n        {\n            // If invalidated return success immediately (without doing anything though: invalidated item cannot be retrieved)\n            if (checkResult.fetchRow(0).getLong(0) == -1)\n                return VoltCacheResult.STORED;\n            else\n                voltQueueSQL(update, Shared.expires(this, expires), flags, value, key);\n        }\n        else\n            voltQueueSQL(insert, key, Shared.expires(this, expires), flags, value);\n\n        voltExecuteSQL(true);\n        return VoltCacheResult.STORED;\n    }","id":82292,"modified_method":"public long run(String key, int flags, int expires, byte[] value)\n    {\n        final int now = Shared.init(this, key);\n\n        voltQueueSQL(check, key, now);\n        VoltTable checkResult = voltExecuteSQL()[1];\n        if (checkResult.getRowCount() > 0)\n        {\n            // If invalidated return success immediately (without doing anything though: invalidated item cannot be retrieved)\n            if (checkResult.fetchRow(0).getLong(0) == -1)\n                return VoltCacheResult.STORED;\n            else\n                voltQueueSQL(update, Shared.expires(this, expires), flags, value, key);\n        }\n        else\n            voltQueueSQL(insert, key, Shared.expires(this, expires), flags, value);\n\n        voltExecuteSQL(true);\n        return VoltCacheResult.STORED;\n    }","commit_id":"24d84e4fbf3bfabcc53dbf78edb2851d028d4038","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public static int init(VoltProcedure procedure, String key)\n    {\n        final int now = now(procedure);\n        procedure.voltQueueSQL(CleanSQLStmt, key, now);\n        procedure.voltExecuteSQL();\n        return now;\n    }","id":82293,"modified_method":"public static int init(VoltProcedure procedure, String key)\n    {\n        final int now = now(procedure);\n        procedure.voltQueueSQL(CleanSQLStmt, key, now);\n        return now;\n    }","commit_id":"24d84e4fbf3bfabcc53dbf78edb2851d028d4038","url":"https://github.com/VoltDB/voltdb"},{"original_method":"VoltCacheItem(String key, int flags, byte[] value, long casVersion)\n    {\n        this.Key = key;\n        this.Flags = flags;\n        this.Value = value;\n        this.CASVersion = casVersion;\n    }","id":82294,"modified_method":"VoltCacheItem(String key, int flags, byte[] value, long casVersion, int expires)\n    {\n        this.Key = key;\n        this.Flags = flags;\n        this.Value = value;\n        this.CASVersion = casVersion;\n        this.Expires = expires;\n    }","commit_id":"24d84e4fbf3bfabcc53dbf78edb2851d028d4038","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public static VoltCacheResult DELETED()      { return new VoltCacheResult(4l); }","id":82295,"modified_method":"public static VoltCacheResult DELETED()      { return _CODES[4]; }","commit_id":"24d84e4fbf3bfabcc53dbf78edb2851d028d4038","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public static VoltCacheResult SERVER_ERROR() { return new VoltCacheResult(7l); }","id":82296,"modified_method":"public static VoltCacheResult SERVER_ERROR() { return _CODES[7]; }","commit_id":"24d84e4fbf3bfabcc53dbf78edb2851d028d4038","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public static VoltCacheResult ERROR()        { return new VoltCacheResult(5l); }","id":82297,"modified_method":"public static VoltCacheResult ERROR()        { return _CODES[5]; }","commit_id":"24d84e4fbf3bfabcc53dbf78edb2851d028d4038","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public static VoltCacheResult NOT_STORED()   { return new VoltCacheResult(1l); }","id":82298,"modified_method":"public static VoltCacheResult NOT_STORED()   { return _CODES[1]; }","commit_id":"24d84e4fbf3bfabcc53dbf78edb2851d028d4038","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public static VoltCacheResult NOT_FOUND()    { return new VoltCacheResult(3l); }","id":82299,"modified_method":"public static VoltCacheResult NOT_FOUND()    { return _CODES[3]; }","commit_id":"24d84e4fbf3bfabcc53dbf78edb2851d028d4038","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public static VoltCacheResult STORED()       { return new VoltCacheResult(0l); }","id":82300,"modified_method":"public static VoltCacheResult STORED()       { return _CODES[0]; }","commit_id":"24d84e4fbf3bfabcc53dbf78edb2851d028d4038","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public static VoltCacheResult CLIENT_ERROR() { return new VoltCacheResult(6l); }","id":82301,"modified_method":"public static VoltCacheResult CLIENT_ERROR() { return _CODES[6]; }","commit_id":"24d84e4fbf3bfabcc53dbf78edb2851d028d4038","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public static VoltCacheResult get(Type type, ClientResponse response)\n    {\n        if (type == Type.CODE)\n        {\n            return new VoltCacheResult(response.getResults()[0].fetchRow(0).getLong(0));\n        }\n        else if (type == Type.DATA)\n        {\n            final VoltTable data = response.getResults()[0];\n            final VoltCacheResult result = VoltCacheResult.OK();\n            result.Data = new HashMap<String,VoltCacheItem>();\n            while(data.advanceRow())\n                result.Data.put(\n                                 data.getString(0)\n                               , new VoltCacheItem(\n                                                    data.getString(0)\n                                                  , (int)data.getLong(1)\n                                                  , data.getVarbinary(2)\n                                                  , data.getLong(3)\n                                                  )\n                               );\n            return result;\n        }\n        else if (type == Type.IDOP)\n        {\n            final VoltCacheResult result = VoltCacheResult.OK();\n            result.IncrDecrValue = response.getResults()[0].fetchRow(0).getLong(0);\n            return result;\n        }\n        else\n            throw new RuntimeException(\"Invalid Result Type: \" + type);\n    }","id":82302,"modified_method":"public static VoltCacheResult get(Type type, ClientResponse response)\n    {\n        if (type == Type.CODE)\n        {\n            return _CODES[(int)response.getResults()[0].asScalarLong()];\n        }\n        else if (type == Type.DATA)\n        {\n            final VoltTable data = response.getResults()[0];\n            if (data.getRowCount() > 0)\n            {\n                final VoltCacheResult result = VoltCacheResult.OK();\n                result.Data = new HashMap<String,VoltCacheItem>();\n                while(data.advanceRow())\n                    result.Data.put(\n                                     data.getString(0)\n                                   , new VoltCacheItem(\n                                                        data.getString(0)\n                                                      , (int)data.getLong(1)\n                                                      , data.getVarbinary(2)\n                                                      , data.getLong(3)\n                                                      , (int)data.getLong(4)\n                                                      )\n                                   );\n                return result;\n            }\n            else\n                return VoltCacheResult.NOT_FOUND();\n        }\n        else if (type == Type.IDOP)\n        {\n            final long value = response.getResults()[0].asScalarLong();\n            if (value == VoltType.NULL_BIGINT)\n                return VoltCacheResult.NOT_FOUND();\n            else\n            {\n                final VoltCacheResult result = VoltCacheResult.OK();\n                result.IncrDecrValue = value;\n                return result;\n            }\n        }\n        else\n            throw new RuntimeException(\"Invalid Result Type: \" + type);\n    }","commit_id":"24d84e4fbf3bfabcc53dbf78edb2851d028d4038","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public static VoltCacheResult SUBMITTED()    { return new VoltCacheResult(9l); }","id":82303,"modified_method":"public static VoltCacheResult SUBMITTED()    { return _CODES[9]; }","commit_id":"24d84e4fbf3bfabcc53dbf78edb2851d028d4038","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public static VoltCacheResult EXISTS()       { return new VoltCacheResult(2l); }","id":82304,"modified_method":"public static VoltCacheResult EXISTS()       { return _CODES[2]; }","commit_id":"24d84e4fbf3bfabcc53dbf78edb2851d028d4038","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public static void main(String[] args)\n    {\n        try\n        {\n\n// ---------------------------------------------------------------------------------------------------------------------------------------------------\n\n            // Use the AppHelper utility class to retrieve command line application parameters\n\n            // Define parameters and pull from command line\n            AppHelper apph = new AppHelper(AsyncBenchmark.class.getCanonicalName())\n                .add(\"display-interval\", \"display_interval_in_seconds\", \"Interval for performance feedback, in seconds.\", 10)\n                .add(\"duration\", \"run_duration_in_seconds\", \"Benchmark duration, in seconds.\", 120)\n                .add(\"servers\", \"comma_separated_server_list\", \"List of VoltDB servers to connect to.\", \"localhost\")\n                .add(\"port\", \"port_number\", \"Client port to connect to on cluster nodes.\", 21212)\n                .add(\"contestants\", \"contestant_count\", \"Number of contestants in the voting contest (from 1 to 10).\", 6)\n                .add(\"max-votes\", \"max_votes_per_phone_number\", \"Maximum number of votes accepted for a given voter (phone number).\", 2)\n                .add(\"rate-limit\", \"rate_limit\", \"Rate limit to start from (number of transactions per second).\", 100000)\n                .add(\"auto-tune\", \"auto_tune\", \"Flag indicating whether the benchmark should self-tune the transaction rate for a target execution latency (true|false).\", \"true\")\n                .add(\"latency-target\", \"latency_target\", \"Execution latency to target to tune transaction rate (in milliseconds).\", 10.0d)\n                .setArguments(args)\n            ;\n\n            // Retrieve parameters\n            long displayInterval = apph.longValue(\"display-interval\");\n            long duration        = apph.longValue(\"duration\");\n            String servers       = apph.stringValue(\"servers\");\n            int port             = apph.intValue(\"port\");\n            int contestantCount  = apph.intValue(\"contestants\");\n            int maxVoteCount     = apph.intValue(\"max-votes\");\n            long rateLimit       = apph.longValue(\"rate-limit\");\n            boolean autoTune     = apph.booleanValue(\"auto-tune\");\n            double latencyTarget = apph.doubleValue(\"latency-target\");\n\n\n            // Validate parameters\n            apph.validate(\"contestants\", (contestantCount > 0))\n                .validate(\"max-votes\", (maxVoteCount > 0))\n                .validate(\"rate-limit\", (rateLimit > 0))\n                .validate(\"latency-target\", (latencyTarget > 0))\n            ;\n\n            // Display actual parameters, for reference\n            apph.printActualUsage();\n\n// ---------------------------------------------------------------------------------------------------------------------------------------------------\n\n            // Get a client connection - we retry for a while in case the server hasn't started yet\n            System.out.printf(\"Connecting to servers: %s at port: %d\\n\", servers, port);\n            int sleep = 1000;\n            while(true)\n            {\n                try\n                {\n                    Con = ClientConnectionPool.get(servers, port);\n                    break;\n                }\n                catch (Exception e)\n                {\n                    System.err.printf(\"Connection failed - retrying in %d second(s).\\n\", sleep/1000);\n                    try {Thread.sleep(sleep);} catch(Exception tie){}\n                    if (sleep < 8000)\n                        sleep += sleep;\n                }\n            }\n            System.out.println(\"Connected.  Starting benchmark.\");\n\n            // Initialize the application\n            final int maxContestants = (int)Con.execute(\"Initialize\", contestantCount, ContestantNamesCSV).getResults()[0].fetchRow(0).getLong(0);\n\n            // Get a Phone Call Generator that will simulate voter entries from the call center\n            PhoneCallGenerator switchboard = new PhoneCallGenerator(maxContestants);\n\n// ---------------------------------------------------------------------------------------------------------------------------------------------------\n\n            // Create a Timer task to display performance data on the Vote procedure\n            Timer timer = new Timer();\n            timer.scheduleAtFixedRate(new TimerTask()\n            {\n                @Override\n                public void run()\n                {\n                    System.out.print(Con.getStatistics(\"Vote\"));\n                }\n            }\n            , displayInterval*1000l\n            , displayInterval*1000l\n            );\n\n// ---------------------------------------------------------------------------------------------------------------------------------------------------\n\n            // Pick the transaction rate limiter helping object to use based on user request (rate limiting or latency targeting)\n            IRateLimiter limiter = null;\n            if (autoTune)\n                limiter = (IRateLimiter)new LatencyLimiter(Con, \"Vote\", latencyTarget, rateLimit);\n            else\n                limiter = (IRateLimiter)new RateLimiter(rateLimit);\n\n            // Run the benchmark loop for the requested duration\n            long endTime = System.currentTimeMillis() + (1000l * duration);\n            while (endTime > System.currentTimeMillis())\n            {\n                // Get the next phone call\n                PhoneCallGenerator.PhoneCall call = switchboard.receive();\n\n                // Post the vote, asynchronously\n                Con.executeAsync(new ProcedureCallback()\n                {\n                    @Override\n                    public void clientCallback(ClientResponse response) throws Exception\n                    {\n                        // Track the result of the vote (Accepted, Rejected, Failure...)\n                        if (response.getStatus() == ClientResponse.SUCCESS)\n                            VotingBoardResults.incrementAndGet((int)response.getResults()[0].fetchRow(0).getLong(0));\n                        else\n                            VotingBoardResults.incrementAndGet(3);\n                    }\n                }\n                , \"Vote\"\n                , call.PhoneNumber\n                , call.ContestantNumber\n                , maxVoteCount\n                );\n\n                // Use the limiter to throttle client activity\n                limiter.throttle();\n            }\n\n// ---------------------------------------------------------------------------------------------------------------------------------------------------\n\n            // We're done - stop the performance statistics display task\n            timer.cancel();\n\n// ---------------------------------------------------------------------------------------------------------------------------------------------------\n\n            // Now print application results:\n\n            // 1. Voting Board statistics, Voting results and performance statistics\n            System.out.printf(\n              \"-------------------------------------------------------------------------------------\\n\"\n            + \" Voting Results\\n\"\n            + \"-------------------------------------------------------------------------------------\\n\\n\"\n            + \"A total of %d votes was received...\\n\"\n            + \" - %,9d Accepted\\n\"\n            + \" - %,9d Rejected (Invalid Contestant)\\n\"\n            + \" - %,9d Rejected (Maximum Vote Count Reached)\\n\"\n            + \" - %,9d Failed (Transaction Error)\\n\"\n            + \"\\n\\n\"\n            + \"-------------------------------------------------------------------------------------\\n\"\n            + \"Contestant Name\\t\\tVotes Received\\n\"\n            , Con.getStatistics(\"Vote\").getExecutionCount()\n            , VotingBoardResults.get(0)\n            , VotingBoardResults.get(1)\n            , VotingBoardResults.get(2)\n            , VotingBoardResults.get(3)\n            );\n\n            // 2. Voting results\n            VoltTable result = Con.execute(\"Results\").getResults()[0];\n            String winner = \"\";\n            long winnerVoteCount = 0;\n            while(result.advanceRow())\n            {\n                if (result.getLong(2) > winnerVoteCount)\n                {\n                    winnerVoteCount = result.getLong(2);\n                    winner = result.getString(0);\n                }\n                System.out.printf(\"%s\\t\\t%,14d\\n\", result.getString(0), result.getLong(2));\n            }\n            System.out.printf(\"\\n\\nThe Winner is: %s\\n-------------------------------------------------------------------------------------\\n\", winner);\n\n            // 3. Performance statistics (we only care about the Vote procedure that we're benchmarking)\n            System.out.println(\n              \"\\n\\n-------------------------------------------------------------------------------------\\n\"\n            + \" System Statistics\\n\"\n            + \"-------------------------------------------------------------------------------------\\n\\n\");\n            System.out.print(Con.getStatistics(\"Vote\").toString(false));\n\n            Con.close();\n\n// ---------------------------------------------------------------------------------------------------------------------------------------------------\n\n        }\n        catch(Exception x)\n        {\n            System.out.println(\"Exception: \" + x);\n            x.printStackTrace();\n        }\n    }","id":82305,"modified_method":"public static void main(String[] args)\n    {\n        try\n        {\n\n// ---------------------------------------------------------------------------------------------------------------------------------------------------\n\n            // Use the AppHelper utility class to retrieve command line application parameters\n\n            // Define parameters and pull from command line\n            AppHelper apph = new AppHelper(AsyncBenchmark.class.getCanonicalName())\n                .add(\"display-interval\", \"display_interval_in_seconds\", \"Interval for performance feedback, in seconds.\", 10)\n                .add(\"duration\", \"run_duration_in_seconds\", \"Benchmark duration, in seconds.\", 120)\n                .add(\"servers\", \"comma_separated_server_list\", \"List of VoltDB servers to connect to.\", \"localhost\")\n                .add(\"port\", \"port_number\", \"Client port to connect to on cluster nodes.\", 21212)\n                .add(\"contestants\", \"contestant_count\", \"Number of contestants in the voting contest (from 1 to 10).\", 6)\n                .add(\"max-votes\", \"max_votes_per_phone_number\", \"Maximum number of votes accepted for a given voter (phone number).\", 2)\n                .add(\"rate-limit\", \"rate_limit\", \"Rate limit to start from (number of transactions per second).\", 100000)\n                .add(\"auto-tune\", \"auto_tune\", \"Flag indicating whether the benchmark should self-tune the transaction rate for a target execution latency (true|false).\", \"true\")\n                .add(\"latency-target\", \"latency_target\", \"Execution latency to target to tune transaction rate (in milliseconds).\", 10.0d)\n                .setArguments(args)\n            ;\n\n            // Retrieve parameters\n            long displayInterval = apph.longValue(\"display-interval\");\n            long duration        = apph.longValue(\"duration\");\n            String servers       = apph.stringValue(\"servers\");\n            int port             = apph.intValue(\"port\");\n            int contestantCount  = apph.intValue(\"contestants\");\n            int maxVoteCount     = apph.intValue(\"max-votes\");\n            long rateLimit       = apph.longValue(\"rate-limit\");\n            boolean autoTune     = apph.booleanValue(\"auto-tune\");\n            double latencyTarget = apph.doubleValue(\"latency-target\");\n\n\n            // Validate parameters\n            apph.validate(\"contestants\", (contestantCount > 0))\n                .validate(\"max-votes\", (maxVoteCount > 0))\n                .validate(\"rate-limit\", (rateLimit > 0))\n                .validate(\"latency-target\", (latencyTarget > 0))\n            ;\n\n            // Display actual parameters, for reference\n            apph.printActualUsage();\n\n// ---------------------------------------------------------------------------------------------------------------------------------------------------\n\n            // Get a client connection - we retry for a while in case the server hasn't started yet\n            System.out.printf(\"Connecting to servers: %s at port: %d\\n\", servers, port);\n            int sleep = 1000;\n            while(true)\n            {\n                try\n                {\n                    Con = ClientConnectionPool.get(servers, port);\n                    break;\n                }\n                catch (Exception e)\n                {\n                    System.err.printf(\"Connection failed - retrying in %d second(s).\\n\", sleep/1000);\n                    try {Thread.sleep(sleep);} catch(Exception tie){}\n                    if (sleep < 8000)\n                        sleep += sleep;\n                }\n            }\n            System.out.println(\"Connected.  Starting benchmark.\");\n\n            // Initialize the application\n            final int maxContestants = (int)Con.execute(\"Initialize\", contestantCount, ContestantNamesCSV).getResults()[0].fetchRow(0).getLong(0);\n\n            // Get a Phone Call Generator that will simulate voter entries from the call center\n            PhoneCallGenerator switchboard = new PhoneCallGenerator(maxContestants);\n\n// ---------------------------------------------------------------------------------------------------------------------------------------------------\n\n            // Create a Timer task to display performance data on the Vote procedure\n            Timer timer = new Timer();\n            timer.scheduleAtFixedRate(new TimerTask()\n            {\n                @Override\n                public void run()\n                {\n                    System.out.print(Con.getStatistics(\"Vote\"));\n                }\n            }\n            , displayInterval*1000l\n            , displayInterval*1000l\n            );\n\n// ---------------------------------------------------------------------------------------------------------------------------------------------------\n\n            // Pick the transaction rate limiter helping object to use based on user request (rate limiting or latency targeting)\n            IRateLimiter limiter = null;\n            if (autoTune)\n                limiter = new LatencyLimiter(Con, \"Vote\", latencyTarget, rateLimit);\n            else\n                limiter = new RateLimiter(rateLimit);\n\n            // Run the benchmark loop for the requested duration\n            long endTime = System.currentTimeMillis() + (1000l * duration);\n            while (endTime > System.currentTimeMillis())\n            {\n                // Get the next phone call\n                PhoneCallGenerator.PhoneCall call = switchboard.receive();\n\n                // Post the vote, asynchronously\n                Con.executeAsync(new ProcedureCallback()\n                {\n                    @Override\n                    public void clientCallback(ClientResponse response) throws Exception\n                    {\n                        // Track the result of the vote (Accepted, Rejected, Failure...)\n                        if (response.getStatus() == ClientResponse.SUCCESS)\n                            VotingBoardResults.incrementAndGet((int)response.getResults()[0].fetchRow(0).getLong(0));\n                        else\n                            VotingBoardResults.incrementAndGet(3);\n                    }\n                }\n                , \"Vote\"\n                , call.phoneNumber\n                , call.contestantNumber\n                , maxVoteCount\n                );\n\n                // Use the limiter to throttle client activity\n                limiter.throttle();\n            }\n\n// ---------------------------------------------------------------------------------------------------------------------------------------------------\n\n            // We're done - stop the performance statistics display task\n            timer.cancel();\n\n// ---------------------------------------------------------------------------------------------------------------------------------------------------\n\n            // Now print application results:\n\n            // 1. Voting Board statistics, Voting results and performance statistics\n            System.out.printf(\n              \"-------------------------------------------------------------------------------------\\n\"\n            + \" Voting Results\\n\"\n            + \"-------------------------------------------------------------------------------------\\n\\n\"\n            + \"A total of %d votes was received...\\n\"\n            + \" - %,9d Accepted\\n\"\n            + \" - %,9d Rejected (Invalid Contestant)\\n\"\n            + \" - %,9d Rejected (Maximum Vote Count Reached)\\n\"\n            + \" - %,9d Failed (Transaction Error)\\n\"\n            + \"\\n\\n\"\n            + \"-------------------------------------------------------------------------------------\\n\"\n            + \"Contestant Name\\t\\tVotes Received\\n\"\n            , Con.getStatistics(\"Vote\").getExecutionCount()\n            , VotingBoardResults.get(0)\n            , VotingBoardResults.get(1)\n            , VotingBoardResults.get(2)\n            , VotingBoardResults.get(3)\n            );\n\n            // 2. Voting results\n            VoltTable result = Con.execute(\"Results\").getResults()[0];\n            String winner = \"\";\n            long winnerVoteCount = 0;\n            while(result.advanceRow())\n            {\n                if (result.getLong(2) > winnerVoteCount)\n                {\n                    winnerVoteCount = result.getLong(2);\n                    winner = result.getString(0);\n                }\n                System.out.printf(\"%s\\t\\t%,14d\\n\", result.getString(0), result.getLong(2));\n            }\n            System.out.printf(\"\\n\\nThe Winner is: %s\\n-------------------------------------------------------------------------------------\\n\", winner);\n\n            // 3. Performance statistics (we only care about the Vote procedure that we're benchmarking)\n            System.out.println(\n              \"\\n\\n-------------------------------------------------------------------------------------\\n\"\n            + \" System Statistics\\n\"\n            + \"-------------------------------------------------------------------------------------\\n\\n\");\n            System.out.print(Con.getStatistics(\"Vote\").toString(false));\n\n            Con.close();\n\n// ---------------------------------------------------------------------------------------------------------------------------------------------------\n\n        }\n        catch(Exception x)\n        {\n            System.out.println(\"Exception: \" + x);\n            x.printStackTrace();\n        }\n    }","commit_id":"601fd69e57b6a0bfbc7e2fa8f3a796dcc5bbacb6","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public VoltTable[] run(int contestantNumber, int max)\n    {\n        ArrayList<Result> results = new ArrayList<Result>();\n        voltQueueSQL(resultStmt);\n        VoltTable summary = voltExecuteSQL()[0];\n        String state = \"\";\n        while(summary.advanceRow())\n        {\n            if (!summary.getString(1).equals(state))\n            {\n                state = summary.getString(1);\n                if (summary.getLong(0) == contestantNumber)\n                    results.add(new Result(state, summary.getLong(2)));\n            }\n        }\n        Result[] resultArray = (Result[])results.toArray();\n        Arrays.sort(resultArray, new OrderByVotesDesc());\n        VoltTable result = new VoltTable(new VoltTable.ColumnInfo(\"state\",VoltType.STRING), new VoltTable.ColumnInfo(\"num_votes\",VoltType.BIGINT));\n        for(int i=0;i<Math.min(resultArray.length,max);i++)\n            result.addRow(new Object[] { ((Result)resultArray[i]).State, ((Result)resultArray[i]).Votes });\n        return new VoltTable[] { result };\n    }","id":82306,"modified_method":"public VoltTable run(int contestantNumber, int max)\n    {\n        ArrayList<Result> results = new ArrayList<Result>();\n        voltQueueSQL(resultStmt);\n        VoltTable summary = voltExecuteSQL()[0];\n        String state = \"\";\n        while(summary.advanceRow()) {\n            if (!summary.getString(1).equals(state)) {\n                state = summary.getString(1);\n                if (summary.getLong(0) == contestantNumber)\n                    results.add(new Result(state, summary.getLong(2)));\n            }\n        }\n        Result[] resultArray = (Result[])results.toArray();\n        Arrays.sort(resultArray, new OrderByVotesDesc());\n        VoltTable result = new VoltTable(new VoltTable.ColumnInfo(\"state\",VoltType.STRING), new VoltTable.ColumnInfo(\"num_votes\",VoltType.BIGINT));\n        for(int i=0;i<Math.min(resultArray.length,max);i++)\n            result.addRow(new Object[] { resultArray[i].State, resultArray[i].Votes });\n        return result;\n    }","commit_id":"601fd69e57b6a0bfbc7e2fa8f3a796dcc5bbacb6","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public VoltTable[] run()\n    {\n        ArrayList<Result> results = new ArrayList<Result>();\n        voltQueueSQL(resultStmt);\n        VoltTable summary = voltExecuteSQL()[0];\n        String state = \"\";\n        while(summary.advanceRow())\n        {\n            if (!summary.getString(1).equals(state))\n            {\n                state = summary.getString(1);\n                results.add(new Result(state, (int)summary.getLong(0), summary.getLong(2), (byte)1));\n            }\n            else\n                results.add(new Result(state, (int)summary.getLong(0), summary.getLong(2), (byte)0));\n        }\n        Object[] resultArray = results.toArray();\n        VoltTable result = new VoltTable(new VoltTable.ColumnInfo(\"state\",VoltType.STRING), new VoltTable.ColumnInfo(\"contestant_number\",VoltType.INTEGER), new VoltTable.ColumnInfo(\"num_votes\",VoltType.BIGINT), new VoltTable.ColumnInfo(\"is_winning\",VoltType.TINYINT));\n        for(int i=0;i<resultArray.length;i++)\n            result.addRow(new Object[] { ((Result)resultArray[i]).State, ((Result)resultArray[i]).ContestantNumber, ((Result)resultArray[i]).Votes, ((Result)resultArray[i]).IsWinning });\n        return new VoltTable[] { result };\n    }","id":82307,"modified_method":"public VoltTable run()\n    {\n        ArrayList<Result> results = new ArrayList<Result>();\n        voltQueueSQL(resultStmt);\n        VoltTable summary = voltExecuteSQL()[0];\n        String state = \"\";\n\n        while(summary.advanceRow()) {\n            if (!summary.getString(1).equals(state)) {\n                state = summary.getString(1);\n                results.add(new Result(state, (int)summary.getLong(0), summary.getLong(2), (byte)1));\n            }\n            else {\n                results.add(new Result(state, (int)summary.getLong(0), summary.getLong(2), (byte)0));\n            }\n        }\n\n        Object[] resultArray = results.toArray();\n        VoltTable result = new VoltTable(new VoltTable.ColumnInfo(\"state\",VoltType.STRING), new VoltTable.ColumnInfo(\"contestant_number\",VoltType.INTEGER), new VoltTable.ColumnInfo(\"num_votes\",VoltType.BIGINT), new VoltTable.ColumnInfo(\"is_winning\",VoltType.TINYINT));\n        for(int i=0;i<resultArray.length;i++)\n            result.addRow(new Object[] { ((Result)resultArray[i]).State, ((Result)resultArray[i]).ContestantNumber, ((Result)resultArray[i]).Votes, ((Result)resultArray[i]).IsWinning });\n        return result;\n    }","commit_id":"601fd69e57b6a0bfbc7e2fa8f3a796dcc5bbacb6","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public VoltTable[] run(int maxContestant, String contestants)\n    {\n        String[] contestantArray = contestants.split(\",\");\n        int numContestants = 1;\n\n        voltQueueSQL(checkStmt);\n        VoltTable results1[] = voltExecuteSQL();\n\n        if (results1[0].fetchRow(0).getLong(0) == 0)\n        {\n            for (int i=0; i < maxContestant; i++)\n                voltQueueSQL(insertContestantStmt, contestantArray[i], i+1);\n            voltExecuteSQL();\n\n            numContestants = maxContestant;\n\n            for(int i=0;i<areaCodes.length;i++)\n                voltQueueSQL(insertACSStmt, areaCodes[i], states[i]);\n            voltExecuteSQL();\n\n        }\n        else\n            numContestants = (int) results1[0].fetchRow(0).getLong(0);\n\n        VoltTable vtContestants = new VoltTable(new VoltTable.ColumnInfo(\"numContestants\",VoltType.INTEGER));\n        vtContestants.addRow(new Object[] {numContestants});\n        return new VoltTable[] {vtContestants};\n    }","id":82308,"modified_method":"public long run(int maxContestants, String contestants) {\n\n        String[] contestantArray = contestants.split(\",\");\n\n        voltQueueSQL(checkStmt, EXPECT_SCALAR_LONG);\n        long existingContestantCount = voltExecuteSQL()[0].asScalarLong();\n\n        // if the data is initialized, return the contestant count\n        if (existingContestantCount != 0)\n            return existingContestantCount;\n\n        // initialize the data\n\n        for (int i=0; i < maxContestants; i++)\n            voltQueueSQL(insertContestantStmt, EXPECT_SCALAR_MATCH(1), contestantArray[i], i+1);\n        voltExecuteSQL();\n\n        for(int i=0;i<areaCodes.length;i++)\n            voltQueueSQL(insertACSStmt, EXPECT_SCALAR_MATCH(1), areaCodes[i], states[i]);\n        voltExecuteSQL();\n\n        return maxContestants;\n    }","commit_id":"601fd69e57b6a0bfbc7e2fa8f3a796dcc5bbacb6","url":"https://github.com/VoltDB/voltdb"},{"original_method":"@Override\n        public void run()\n        {\n            // Each thread gets its dedicated JDBC connection, and posts votes against it.\n            Connection con = null;\n            try\n            {\n                con = DriverManager.getConnection(url, \"\", \"\");\n                final CallableStatement voteCS = con.prepareCall(\"{call Vote(?,?,?)}\");\n                long endTime = System.currentTimeMillis() + (1000l * this.duration);\n                while (endTime > System.currentTimeMillis())\n                {\n                    PhoneCallGenerator.PhoneCall call = this.switchboard.receive();\n                    voteCS.setLong(1, call.PhoneNumber);\n                    voteCS.setInt(2, call.ContestantNumber);\n                    voteCS.setLong(3, this.maxVoteCount);\n                    try\n                    {\n                        VotingBoardResults.incrementAndGet(voteCS.executeUpdate());\n                    }\n                    catch(Exception x)\n                    {\n                        VotingBoardResults.incrementAndGet(3);\n                    }\n                }\n            }\n            catch(Exception x)\n            {\n                System.err.println(\"Exception: \" + x);\n                x.printStackTrace();\n            }\n            finally\n            {\n                try { con.close(); } catch (Exception x) {}\n            }\n        }","id":82309,"modified_method":"@Override\n        public void run()\n        {\n            // Each thread gets its dedicated JDBC connection, and posts votes against it.\n            Connection con = null;\n            try\n            {\n                con = DriverManager.getConnection(url, \"\", \"\");\n                final CallableStatement voteCS = con.prepareCall(\"{call Vote(?,?,?)}\");\n                long endTime = System.currentTimeMillis() + (1000l * this.duration);\n                while (endTime > System.currentTimeMillis())\n                {\n                    PhoneCallGenerator.PhoneCall call = this.switchboard.receive();\n                    voteCS.setLong(1, call.phoneNumber);\n                    voteCS.setInt(2, call.contestantNumber);\n                    voteCS.setLong(3, this.maxVoteCount);\n                    try\n                    {\n                        VotingBoardResults.incrementAndGet(voteCS.executeUpdate());\n                    }\n                    catch(Exception x)\n                    {\n                        VotingBoardResults.incrementAndGet(3);\n                    }\n                }\n            }\n            catch(Exception x)\n            {\n                System.err.println(\"Exception: \" + x);\n                x.printStackTrace();\n            }\n            finally\n            {\n                try { con.close(); } catch (Exception x) {}\n            }\n        }","commit_id":"601fd69e57b6a0bfbc7e2fa8f3a796dcc5bbacb6","url":"https://github.com/VoltDB/voltdb"},{"original_method":"protected PhoneCall(int contestantNumber, long phoneNumber)\n        {\n            this.ContestantNumber = contestantNumber;\n            this.PhoneNumber = phoneNumber;\n        }","id":82310,"modified_method":"protected PhoneCall(int contestantNumber, long phoneNumber) {\n            this.contestantNumber = contestantNumber;\n            this.phoneNumber = phoneNumber;\n        }","commit_id":"601fd69e57b6a0bfbc7e2fa8f3a796dcc5bbacb6","url":"https://github.com/VoltDB/voltdb"},{"original_method":"/**\n     * Receives/generates a simulated voting call\n     * @return Call details (calling number and contestant to whom the vote is given)\n     */\n    public PhoneCall receive()\n    {\n        // For the purpose of a benchmark, issue random voting activity (including invalid votes to demonstrate transaction validationg in the database)\n\n        // Pick a random area code for the originating phone call\n        final int areaCodeIndex = (this.Rand.nextInt(AreaCodes.length) * this.Rand.nextInt(AreaCodes.length)) % AreaCodes.length;\n\n        // Pick a contestant number - introduce an invalid contestant every 100 call or so to simulate fraud / invalid entries (something the transaction validates against)\n        final int contestantNumber =   ((this.Rand.nextInt(100) % 100) == 0) ? 999 : (this.Rand.nextInt(100) > 50 ? VotingMap[areaCodeIndex] : ((this.Rand.nextInt(this.ContestantCount) % this.ContestantCount) + 1));\n\n        // Build the phone number\n        final long phoneNumber = Long.parseLong(AreaCodes[areaCodeIndex])*10000000l + (Math.abs(this.Rand.nextLong()) % 9999999l);\n\n        // Return the generated phone number\n        return new PhoneCall(contestantNumber, phoneNumber);\n    }","id":82311,"modified_method":"/**\n     * Receives/generates a simulated voting call\n     * @return Call details (calling number and contestant to whom the vote is given)\n     */\n    public PhoneCall receive()\n    {\n        // For the purpose of a benchmark, issue random voting activity\n        // (including invalid votes to demonstrate transaction validationg in the database)\n\n        // Pick a random area code for the originating phone call\n        int areaCodeIndex = rand.nextInt(AREA_CODES.length);\n\n        // Pick a contestant number\n        int contestantNumber = votingMap[areaCodeIndex];\n        if (rand.nextBoolean()) {\n            contestantNumber = rand.nextInt(contestantCount) + 1;\n        }\n\n        //  introduce an invalid contestant every 100 call or so to simulate fraud\n        //  and invalid entries (something the transaction validates against)\n        if (rand.nextInt(100) == 0) {\n            contestantNumber = 999;\n        }\n\n        // Build the phone number\n        long phoneNumber = AREA_CODES[areaCodeIndex] * 10000000L + rand.nextInt(10000000);\n\n        // Return the generated phone number\n        return new PhoneCall(contestantNumber, phoneNumber);\n    }","commit_id":"601fd69e57b6a0bfbc7e2fa8f3a796dcc5bbacb6","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public PhoneCallGenerator(int contestantCount)\n    {\n        this.ContestantCount = contestantCount;\n\n        // This is a just a small fudge to make the geographical voting map more interesting for the benchmark!\n        for(int i=0;i<VotingMap.length;i++)\n            VotingMap[i] = this.Rand.nextInt(100) < 30 ? 1 : (int)(Math.abs(Math.sin(i)*this.ContestantCount) % this.ContestantCount) + 1;\n\n    }","id":82312,"modified_method":"public PhoneCallGenerator(final int contestantCount)\n    {\n        this.contestantCount = contestantCount;\n\n        // This is a just a small fudge to make the geographical voting map more interesting for the benchmark!\n        for(int i = 0; i < votingMap.length; i++) {\n            votingMap[i] = 1;\n            if (rand.nextInt(100) >= 30) {\n                votingMap[i] = (int) (Math.abs(Math.sin(i)* contestantCount) % contestantCount) + 1;\n            }\n        }\n    }","commit_id":"601fd69e57b6a0bfbc7e2fa8f3a796dcc5bbacb6","url":"https://github.com/VoltDB/voltdb"},{"original_method":"@Override\n        public void run()\n        {\n            // Each thread gets its dedicated JDBC connection, and posts votes against it.\n            ClientConnection con = null;\n            try\n            {\n                con = ClientConnectionPool.get(servers, port);\n                long endTime = System.currentTimeMillis() + (1000l * this.duration);\n                while (endTime > System.currentTimeMillis())\n                {\n                    PhoneCallGenerator.PhoneCall call = this.switchboard.receive();\n                    try\n                    {\n                        VotingBoardResults.incrementAndGet((int)con.execute(\"Vote\", call.PhoneNumber, call.ContestantNumber, this.maxVoteCount).getResults()[0].fetchRow(0).getLong(0));\n                    }\n                    catch(Exception x)\n                    {\n                        VotingBoardResults.incrementAndGet(3);\n                    }\n                }\n            }\n            catch(Exception x)\n            {\n                System.err.println(\"Exception: \" + x);\n                x.printStackTrace();\n            }\n            finally\n            {\n                try { con.close(); } catch (Exception x) {}\n            }\n        }","id":82313,"modified_method":"@Override\n        public void run()\n        {\n            // Each thread gets its dedicated JDBC connection, and posts votes against it.\n            ClientConnection con = null;\n            try\n            {\n                con = ClientConnectionPool.get(servers, port);\n                long endTime = System.currentTimeMillis() + (1000l * this.duration);\n                while (endTime > System.currentTimeMillis())\n                {\n                    PhoneCallGenerator.PhoneCall call = this.switchboard.receive();\n                    try\n                    {\n                        VotingBoardResults.incrementAndGet((int)con.execute(\"Vote\", call.phoneNumber, call.contestantNumber, this.maxVoteCount).getResults()[0].fetchRow(0).getLong(0));\n                    }\n                    catch(Exception x)\n                    {\n                        VotingBoardResults.incrementAndGet(3);\n                    }\n                }\n            }\n            catch(Exception x)\n            {\n                System.err.println(\"Exception: \" + x);\n                x.printStackTrace();\n            }\n            finally\n            {\n                try { con.close(); } catch (Exception x) {}\n            }\n        }","commit_id":"601fd69e57b6a0bfbc7e2fa8f3a796dcc5bbacb6","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public VoltTable[] run(long phoneNumber, int contestantNumber, long maxVotesPerPhoneNumber)\n    {\n        boolean validVoter = false;\n        boolean validContestant = false;\n        long returnValue = 0;\n\n        // Queue up validation statements\n        voltQueueSQL(checkContestantStmt, contestantNumber);\n        voltQueueSQL(checkVoterStmt, phoneNumber);\n        voltQueueSQL(checkStateStmt, (short)(phoneNumber / 10000000l));\n        VoltTable validation[] = voltExecuteSQL();\n\n        if (validation[0].getRowCount() > 0)\n        {\n            // valid contestant\n            validContestant = true;\n            // phone number has not yet voted\n            if (validation[1].getRowCount() == 0)\n                validVoter = true;\n            // phone number still has votes\n            else if (validation[1].fetchRow(0).getLong(0) < maxVotesPerPhoneNumber)\n                validVoter = true;\n        }\n\n        if (validContestant && validVoter)\n        {\n            // Some sample client libraries use the legacy random phone generation that mostly\n            // created invalid phone numbers. Until refactoring, re-assign all such votes to\n            // the \"XX\" fake state (those votes will not appear on the Live Statistics dashboard,\n            // but are tracked as legitimate instead of invalid, as old clients would mostly get\n            // it wrong and see all their transactions rejected).\n            final String state = (validation[2].getRowCount() > 0) ? validation[2].fetchRow(0).getString(0) : \"XX\";\n\n            // Post the vote\n            voltQueueSQL(insertVoteStmt, phoneNumber, state, contestantNumber);\n            voltExecuteSQL(true);\n\n            // Set the return value to 0: successful vote\n            returnValue = 0;\n        }\n        else if (!validContestant)\n            returnValue = 1;\n        else\n            returnValue = 2;\n\n        // return a 1 row 2 column VoltTable\n        //   column return_value : 0 = successful vote\n        //                         1 = invalid contestant number\n        //                         2 = voter over vote limit\n        VoltTable result = new VoltTable(new VoltTable.ColumnInfo(\"return_value\",VoltType.INTEGER));\n        result.addRow(new Object[] {returnValue});\n        return new VoltTable[] { result };\n    }","id":82314,"modified_method":"public long run(long phoneNumber, int contestantNumber, long maxVotesPerPhoneNumber) {\n\n        // Queue up validation statements\n        voltQueueSQL(checkContestantStmt, EXPECT_ZERO_OR_ONE_ROW, contestantNumber);\n        voltQueueSQL(checkVoterStmt, EXPECT_ZERO_OR_ONE_ROW, phoneNumber);\n        voltQueueSQL(checkStateStmt, EXPECT_ONE_ROW, (short)(phoneNumber / 10000000l));\n        VoltTable validation[] = voltExecuteSQL();\n\n        if (validation[0].getRowCount() == 0) {\n            return ERR_INVALID_CONTESTANT;\n        }\n\n        if ((validation[1].getRowCount() == 1) &&\n                (validation[1].asScalarLong() >= maxVotesPerPhoneNumber)) {\n            return ERR_VOTER_OVER_VOTE_LIMIT;\n        }\n\n        // Some sample client libraries use the legacy random phone generation that mostly\n        // created invalid phone numbers. Until refactoring, re-assign all such votes to\n        // the \"XX\" fake state (those votes will not appear on the Live Statistics dashboard,\n        // but are tracked as legitimate instead of invalid, as old clients would mostly get\n        // it wrong and see all their transactions rejected).\n        final String state = (validation[2].getRowCount() > 0) ? validation[2].fetchRow(0).getString(0) : \"XX\";\n\n        // Post the vote\n        voltQueueSQL(insertVoteStmt, EXPECT_SCALAR_MATCH(1), phoneNumber, state, contestantNumber);\n        voltExecuteSQL(true);\n\n        // Set the return value to 0: successful vote\n        return VOTE_SUCCESSFUL;\n    }","commit_id":"601fd69e57b6a0bfbc7e2fa8f3a796dcc5bbacb6","url":"https://github.com/VoltDB/voltdb"},{"original_method":"@Override\n  public void checkConfiguration() throws RuntimeConfigurationException {\n    if (StringUtil.isEmptyOrSpaces(myTestToRun)) {\n      throw new RuntimeConfigurationError(\"Please specify target folder or script\");\n    }\n    if (!VFSTestFrameworkListener.getInstance().isPyTestInstalled(PythonSdkType.findSdkByPath(getInterpreterPath())))\n      throw new RuntimeConfigurationWarning(PyBundle.message(\"runcfg.testing.no.test.framework\", \"py.test\"));\n  }","id":82315,"modified_method":"@Override\n  public void checkConfiguration() throws RuntimeConfigurationException {\n    if (StringUtil.isEmptyOrSpaces(myTestToRun)) {\n      throw new RuntimeConfigurationError(\"Please specify target folder or script\");\n    }\n    Sdk sdkPath = PythonSdkType.findSdkByPath(getInterpreterPath());\n    if (sdkPath != null && !VFSTestFrameworkListener.getInstance().isPyTestInstalled(sdkPath))\n      throw new RuntimeConfigurationWarning(PyBundle.message(\"runcfg.testing.no.test.framework\", \"py.test\"));\n  }","commit_id":"085c08f629cc87beda97e148bafeae61c390fcd5","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void checkConfiguration() throws RuntimeConfigurationException {\n    super.checkConfiguration();\n    if (!VFSTestFrameworkListener.getInstance().isAtTestInstalled(PythonSdkType.findSdkByPath(getInterpreterPath())))\n      throw new RuntimeConfigurationWarning(PyBundle.message(\"runcfg.testing.no.test.framework\", \"attest\"));\n  }","id":82316,"modified_method":"@Override\n  public void checkConfiguration() throws RuntimeConfigurationException {\n    super.checkConfiguration();\n    Sdk sdkPath = PythonSdkType.findSdkByPath(getInterpreterPath());\n    if (sdkPath != null && !VFSTestFrameworkListener.getInstance().isAtTestInstalled(sdkPath))\n      throw new RuntimeConfigurationWarning(PyBundle.message(\"runcfg.testing.no.test.framework\", \"attest\"));\n  }","commit_id":"085c08f629cc87beda97e148bafeae61c390fcd5","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void checkConfiguration() throws RuntimeConfigurationException {\n    super.checkConfiguration();\n    if (!VFSTestFrameworkListener.getInstance().isNoseTestInstalled(PythonSdkType.findSdkByPath(getInterpreterPath())))\n      throw new RuntimeConfigurationWarning(PyBundle.message(\"runcfg.testing.no.test.framework\", \"nosetest\"));\n  }","id":82317,"modified_method":"@Override\n  public void checkConfiguration() throws RuntimeConfigurationException {\n    super.checkConfiguration();\n    Sdk sdkPath = PythonSdkType.findSdkByPath(getInterpreterPath());\n    if (sdkPath != null && !VFSTestFrameworkListener.getInstance().isNoseTestInstalled(sdkPath))\n      throw new RuntimeConfigurationWarning(PyBundle.message(\"runcfg.testing.no.test.framework\", \"nosetest\"));\n  }","commit_id":"085c08f629cc87beda97e148bafeae61c390fcd5","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    protected void onIdleExpired(TimeoutException timeout)\n    {\n        // Note: Rely on fillInterest to notify onReadTimeout to close connection.\n        _fillInterest.onFail(timeout);\n        _writeFlusher.onFail(timeout);\n    }","id":82318,"modified_method":"@Override\n    protected void onIdleExpired(TimeoutException timeout)\n    {\n        boolean output_shutdown=isOutputShutdown();\n        boolean input_shutdown=isInputShutdown();\n        boolean fillFailed = _fillInterest.onFail(timeout);\n        boolean writeFailed = _writeFlusher.onFail(timeout);\n        \n        // If the endpoint is half closed and there was no onFail handling, the close here\n        // This handles the situation where the connection has completed its close handling \n        // and the endpoint is half closed, but the other party does not complete the close.\n        // This perhaps should not check for half closed, however the servlet spec case allows\n        // for a dispatched servlet or suspended request to extend beyond the connections idle \n        // time.  So if this test would always close an idle endpoint that is not handled, then \n        // we would need a mode to ignore timeouts for some HTTP states\n        if (isOpen() && (output_shutdown || input_shutdown) && !(fillFailed || writeFailed))\n            close();\n        else \n            LOG.debug(\"Ignored idle endpoint {}\",this);\n    }","commit_id":"9a428def2df1b8c6b0d0428b200a03eda1d6f31c","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Test\n    public void testWrite() throws Exception\n    {\n        ByteArrayEndPoint endp = new ByteArrayEndPoint(_scheduler, 5000, (byte[])null, 15);\n        endp.setGrowOutput(false);\n        endp.setOutput(BufferUtil.allocate(10));\n\n        ByteBuffer data = BufferUtil.toBuffer(\"Data.\");\n        ByteBuffer more = BufferUtil.toBuffer(\" Some more.\");\n\n        FutureCallback fcb = new FutureCallback();\n        endp.write( fcb, data);\n        assertTrue(fcb.isDone());\n        assertEquals(null, fcb.get());\n        assertEquals(\"Data.\", endp.getOutputString());\n\n        fcb = new FutureCallback();\n        endp.write(fcb, more);\n        assertFalse(fcb.isDone());\n\n        assertEquals(\"Data. Some\", endp.getOutputString());\n        assertEquals(\"Data. Some\", endp.takeOutputString());\n\n        assertTrue(fcb.isDone());\n        assertEquals(null, fcb.get());\n        assertEquals(\" more.\", endp.getOutputString());\n    }","id":82319,"modified_method":"@Test\n    public void testWrite() throws Exception\n    {\n        ByteArrayEndPoint endp = new ByteArrayEndPoint(_scheduler, 5000, (byte[])null, 15);\n        endp.setGrowOutput(false);\n        endp.setOutput(BufferUtil.allocate(10));\n\n        ByteBuffer data = BufferUtil.toBuffer(\"Data.\");\n        ByteBuffer more = BufferUtil.toBuffer(\" Some more.\");\n\n        FutureCallback fcb = new FutureCallback();\n        endp.write( fcb, data);\n        assertTrue(fcb.isDone());\n        assertEquals(null, fcb.get());\n        assertEquals(\"Data.\", endp.getOutputString());\n\n        fcb = new FutureCallback();\n        endp.write(fcb, more);\n        assertFalse(fcb.isDone());\n\n        assertEquals(\"Data. Some\", endp.getOutputString());\n        assertEquals(\"Data. Some\", endp.takeOutputString());\n\n        assertTrue(fcb.isDone());\n        assertEquals(null, fcb.get());\n        assertEquals(\" more.\", endp.getOutputString());\n        endp.close();\n    }","commit_id":"9a428def2df1b8c6b0d0428b200a03eda1d6f31c","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Test\n    public void testFlush() throws Exception\n    {\n        ByteArrayEndPoint endp = new ByteArrayEndPoint((byte[])null,15);\n        endp.setGrowOutput(false);\n        endp.setOutput(BufferUtil.allocate(10));\n\n        ByteBuffer data = BufferUtil.toBuffer(\"Some more data.\");\n        assertEquals(false,endp.flush(data));\n        assertEquals(\"Some more \",endp.getOutputString());\n        assertEquals(\"data.\",BufferUtil.toString(data));\n\n        assertEquals(\"Some more \",endp.takeOutputString());\n\n        assertEquals(true,endp.flush(data));\n        assertEquals(\"data.\",BufferUtil.toString(endp.takeOutput()));\n    }","id":82320,"modified_method":"@Test\n    public void testFlush() throws Exception\n    {\n        ByteArrayEndPoint endp = new ByteArrayEndPoint((byte[])null,15);\n        endp.setGrowOutput(false);\n        endp.setOutput(BufferUtil.allocate(10));\n\n        ByteBuffer data = BufferUtil.toBuffer(\"Some more data.\");\n        assertEquals(false,endp.flush(data));\n        assertEquals(\"Some more \",endp.getOutputString());\n        assertEquals(\"data.\",BufferUtil.toString(data));\n\n        assertEquals(\"Some more \",endp.takeOutputString());\n\n        assertEquals(true,endp.flush(data));\n        assertEquals(\"data.\",BufferUtil.toString(endp.takeOutput()));\n        endp.close();\n    }","commit_id":"9a428def2df1b8c6b0d0428b200a03eda1d6f31c","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Test\n    public void testGrowingFlush() throws Exception\n    {\n        ByteArrayEndPoint endp = new ByteArrayEndPoint((byte[])null,15);\n        endp.setGrowOutput(true);\n\n        assertEquals(true,endp.flush(BufferUtil.toBuffer(\"some output\")));\n        assertEquals(\"some output\",endp.getOutputString());\n\n        assertEquals(true,endp.flush(BufferUtil.toBuffer(\" some more\")));\n        assertEquals(\"some output some more\",endp.getOutputString());\n\n        assertEquals(true,endp.flush());\n        assertEquals(\"some output some more\",endp.getOutputString());\n\n        assertEquals(true,endp.flush(BufferUtil.EMPTY_BUFFER));\n        assertEquals(\"some output some more\",endp.getOutputString());\n\n        assertEquals(true,endp.flush(BufferUtil.EMPTY_BUFFER,BufferUtil.toBuffer(\" and\"),BufferUtil.toBuffer(\" more\")));\n        assertEquals(\"some output some more and more\",endp.getOutputString());\n    }","id":82321,"modified_method":"@Test\n    public void testGrowingFlush() throws Exception\n    {\n        ByteArrayEndPoint endp = new ByteArrayEndPoint((byte[])null,15);\n        endp.setGrowOutput(true);\n\n        assertEquals(true,endp.flush(BufferUtil.toBuffer(\"some output\")));\n        assertEquals(\"some output\",endp.getOutputString());\n\n        assertEquals(true,endp.flush(BufferUtil.toBuffer(\" some more\")));\n        assertEquals(\"some output some more\",endp.getOutputString());\n\n        assertEquals(true,endp.flush());\n        assertEquals(\"some output some more\",endp.getOutputString());\n\n        assertEquals(true,endp.flush(BufferUtil.EMPTY_BUFFER));\n        assertEquals(\"some output some more\",endp.getOutputString());\n\n        assertEquals(true,endp.flush(BufferUtil.EMPTY_BUFFER,BufferUtil.toBuffer(\" and\"),BufferUtil.toBuffer(\" more\")));\n        assertEquals(\"some output some more and more\",endp.getOutputString());\n        endp.close();\n    }","commit_id":"9a428def2df1b8c6b0d0428b200a03eda1d6f31c","url":"https://github.com/eclipse/jetty.project"},{"original_method":"/** Call to signal a failure to a registered interest\n     */\n    public void onFail(Throwable cause)\n    {\n        Callback callback=_interested.get();\n        if (callback!=null && _interested.compareAndSet(callback,null))\n            callback.failed(cause);\n    }","id":82322,"modified_method":"/** Call to signal a failure to a registered interest\n     * @return true if the cause was passed to a {@link Callback} instance\n     */\n    public boolean onFail(Throwable cause)\n    {\n        Callback callback=_interested.get();\n        if (callback!=null && _interested.compareAndSet(callback,null))\n        {\n            callback.failed(cause);\n            return true;\n        }\n        return false;\n    }","commit_id":"9a428def2df1b8c6b0d0428b200a03eda1d6f31c","url":"https://github.com/eclipse/jetty.project"},{"original_method":"protected void fail(Throwable cause)\n        {\n            if (_callback!=null)\n                _callback.failed(cause);\n        }","id":82323,"modified_method":"protected boolean fail(Throwable cause)\n        {\n            if (_callback!=null)\n            {\n                _callback.failed(cause);\n                return true;\n            }\n            return false;\n        }","commit_id":"9a428def2df1b8c6b0d0428b200a03eda1d6f31c","url":"https://github.com/eclipse/jetty.project"},{"original_method":"public void onFail(Throwable cause)\n    {\n        // Keep trying to handle the failure until we get to IDLE or FAILED state\n        while(true)\n        {\n            State current=_state.get();\n            switch(current.getType())\n            {\n                case IDLE:\n                case FAILED:\n                    if (DEBUG)\n                        LOG.debug(\"ignored: {} {}\", this, cause);\n                    return;\n\n                case PENDING:\n                    if (DEBUG)\n                        LOG.debug(\"failed: {} {}\", this, cause);\n\n                    PendingState pending = (PendingState)current;\n                    if (updateState(pending,__IDLE))\n                    {\n                        pending.fail(cause);\n                        return;\n                    }\n                    break;\n\n                default:\n                    if (DEBUG)\n                        LOG.debug(\"failed: {} {}\", this, cause);\n\n                    if (updateState(current,new FailedState(cause)))\n                        return;\n                    break;\n            }\n        }\n    }","id":82324,"modified_method":"/** Notify the flusher of a failure\n     * @param cause The cause of the failure\n     * @return true if the flusher passed the failure to a {@link Callback} instance\n     */\n    public boolean onFail(Throwable cause)\n    {\n        // Keep trying to handle the failure until we get to IDLE or FAILED state\n        while(true)\n        {\n            State current=_state.get();\n            switch(current.getType())\n            {\n                case IDLE:\n                case FAILED:\n                    if (DEBUG)\n                        LOG.debug(\"ignored: {} {}\", this, cause);\n                    return false;\n\n                case PENDING:\n                    if (DEBUG)\n                        LOG.debug(\"failed: {} {}\", this, cause);\n\n                    PendingState pending = (PendingState)current;\n                    if (updateState(pending,__IDLE))\n                        return pending.fail(cause);\n                    break;\n\n                default:\n                    if (DEBUG)\n                        LOG.debug(\"failed: {} {}\", this, cause);\n\n                    if (updateState(current,new FailedState(cause)))\n                        return false;\n                    break;\n            }\n        }\n    }","commit_id":"9a428def2df1b8c6b0d0428b200a03eda1d6f31c","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Override\n    protected void onIdleExpired(TimeoutException timeout)\n    {\n        // Note: Rely on fillInterest to notify onReadTimeout to close connection.\n        _fillInterest.onFail(timeout);\n        _writeFlusher.onFail(timeout);\n    }","id":82325,"modified_method":"@Override\n    protected void onIdleExpired(TimeoutException timeout)\n    {\n        boolean output_shutdown=isOutputShutdown();\n        boolean input_shutdown=isInputShutdown();\n        boolean fillFailed = _fillInterest.onFail(timeout);\n        boolean writeFailed = _writeFlusher.onFail(timeout);\n        \n        // If the endpoint is half closed and there was no onFail handling, the close here\n        // This handles the situation where the connection has completed its close handling \n        // and the endpoint is half closed, but the other party does not complete the close.\n        // This perhaps should not check for half closed, however the servlet spec case allows\n        // for a dispatched servlet or suspended request to extend beyond the connections idle \n        // time.  So if this test would always close an idle endpoint that is not handled, then \n        // we would need a mode to ignore timeouts for some HTTP states\n        if (isOpen() && (output_shutdown || input_shutdown) && !(fillFailed || writeFailed))\n            close();\n        else \n            LOG.debug(\"Ignored idle endpoint {}\",this);\n    }","commit_id":"61b2e7f75ea7398e33452b78af4282091fe7b26b","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Test\n    public void testWrite() throws Exception\n    {\n        ByteArrayEndPoint endp = new ByteArrayEndPoint(_scheduler, 5000, (byte[])null, 15);\n        endp.setGrowOutput(false);\n        endp.setOutput(BufferUtil.allocate(10));\n\n        ByteBuffer data = BufferUtil.toBuffer(\"Data.\");\n        ByteBuffer more = BufferUtil.toBuffer(\" Some more.\");\n\n        FutureCallback fcb = new FutureCallback();\n        endp.write( fcb, data);\n        assertTrue(fcb.isDone());\n        assertEquals(null, fcb.get());\n        assertEquals(\"Data.\", endp.getOutputString());\n\n        fcb = new FutureCallback();\n        endp.write(fcb, more);\n        assertFalse(fcb.isDone());\n\n        assertEquals(\"Data. Some\", endp.getOutputString());\n        assertEquals(\"Data. Some\", endp.takeOutputString());\n\n        assertTrue(fcb.isDone());\n        assertEquals(null, fcb.get());\n        assertEquals(\" more.\", endp.getOutputString());\n    }","id":82326,"modified_method":"@Test\n    public void testWrite() throws Exception\n    {\n        ByteArrayEndPoint endp = new ByteArrayEndPoint(_scheduler, 5000, (byte[])null, 15);\n        endp.setGrowOutput(false);\n        endp.setOutput(BufferUtil.allocate(10));\n\n        ByteBuffer data = BufferUtil.toBuffer(\"Data.\");\n        ByteBuffer more = BufferUtil.toBuffer(\" Some more.\");\n\n        FutureCallback fcb = new FutureCallback();\n        endp.write( fcb, data);\n        assertTrue(fcb.isDone());\n        assertEquals(null, fcb.get());\n        assertEquals(\"Data.\", endp.getOutputString());\n\n        fcb = new FutureCallback();\n        endp.write(fcb, more);\n        assertFalse(fcb.isDone());\n\n        assertEquals(\"Data. Some\", endp.getOutputString());\n        assertEquals(\"Data. Some\", endp.takeOutputString());\n\n        assertTrue(fcb.isDone());\n        assertEquals(null, fcb.get());\n        assertEquals(\" more.\", endp.getOutputString());\n        endp.close();\n    }","commit_id":"61b2e7f75ea7398e33452b78af4282091fe7b26b","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Test\n    public void testGrowingFlush() throws Exception\n    {\n        ByteArrayEndPoint endp = new ByteArrayEndPoint((byte[])null,15);\n        endp.setGrowOutput(true);\n\n        assertEquals(true,endp.flush(BufferUtil.toBuffer(\"some output\")));\n        assertEquals(\"some output\",endp.getOutputString());\n\n        assertEquals(true,endp.flush(BufferUtil.toBuffer(\" some more\")));\n        assertEquals(\"some output some more\",endp.getOutputString());\n\n        assertEquals(true,endp.flush());\n        assertEquals(\"some output some more\",endp.getOutputString());\n\n        assertEquals(true,endp.flush(BufferUtil.EMPTY_BUFFER));\n        assertEquals(\"some output some more\",endp.getOutputString());\n\n        assertEquals(true,endp.flush(BufferUtil.EMPTY_BUFFER,BufferUtil.toBuffer(\" and\"),BufferUtil.toBuffer(\" more\")));\n        assertEquals(\"some output some more and more\",endp.getOutputString());\n    }","id":82327,"modified_method":"@Test\n    public void testGrowingFlush() throws Exception\n    {\n        ByteArrayEndPoint endp = new ByteArrayEndPoint((byte[])null,15);\n        endp.setGrowOutput(true);\n\n        assertEquals(true,endp.flush(BufferUtil.toBuffer(\"some output\")));\n        assertEquals(\"some output\",endp.getOutputString());\n\n        assertEquals(true,endp.flush(BufferUtil.toBuffer(\" some more\")));\n        assertEquals(\"some output some more\",endp.getOutputString());\n\n        assertEquals(true,endp.flush());\n        assertEquals(\"some output some more\",endp.getOutputString());\n\n        assertEquals(true,endp.flush(BufferUtil.EMPTY_BUFFER));\n        assertEquals(\"some output some more\",endp.getOutputString());\n\n        assertEquals(true,endp.flush(BufferUtil.EMPTY_BUFFER,BufferUtil.toBuffer(\" and\"),BufferUtil.toBuffer(\" more\")));\n        assertEquals(\"some output some more and more\",endp.getOutputString());\n        endp.close();\n    }","commit_id":"61b2e7f75ea7398e33452b78af4282091fe7b26b","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Test\n    public void testFlush() throws Exception\n    {\n        ByteArrayEndPoint endp = new ByteArrayEndPoint((byte[])null,15);\n        endp.setGrowOutput(false);\n        endp.setOutput(BufferUtil.allocate(10));\n\n        ByteBuffer data = BufferUtil.toBuffer(\"Some more data.\");\n        assertEquals(false,endp.flush(data));\n        assertEquals(\"Some more \",endp.getOutputString());\n        assertEquals(\"data.\",BufferUtil.toString(data));\n\n        assertEquals(\"Some more \",endp.takeOutputString());\n\n        assertEquals(true,endp.flush(data));\n        assertEquals(\"data.\",BufferUtil.toString(endp.takeOutput()));\n    }","id":82328,"modified_method":"@Test\n    public void testFlush() throws Exception\n    {\n        ByteArrayEndPoint endp = new ByteArrayEndPoint((byte[])null,15);\n        endp.setGrowOutput(false);\n        endp.setOutput(BufferUtil.allocate(10));\n\n        ByteBuffer data = BufferUtil.toBuffer(\"Some more data.\");\n        assertEquals(false,endp.flush(data));\n        assertEquals(\"Some more \",endp.getOutputString());\n        assertEquals(\"data.\",BufferUtil.toString(data));\n\n        assertEquals(\"Some more \",endp.takeOutputString());\n\n        assertEquals(true,endp.flush(data));\n        assertEquals(\"data.\",BufferUtil.toString(endp.takeOutput()));\n        endp.close();\n    }","commit_id":"61b2e7f75ea7398e33452b78af4282091fe7b26b","url":"https://github.com/eclipse/jetty.project"},{"original_method":"/** Call to signal a failure to a registered interest\n     */\n    public void onFail(Throwable cause)\n    {\n        Callback callback=_interested.get();\n        if (callback!=null && _interested.compareAndSet(callback,null))\n            callback.failed(cause);\n    }","id":82329,"modified_method":"/** Call to signal a failure to a registered interest\n     * @return true if the cause was passed to a {@link Callback} instance\n     */\n    public boolean onFail(Throwable cause)\n    {\n        Callback callback=_interested.get();\n        if (callback!=null && _interested.compareAndSet(callback,null))\n        {\n            callback.failed(cause);\n            return true;\n        }\n        return false;\n    }","commit_id":"61b2e7f75ea7398e33452b78af4282091fe7b26b","url":"https://github.com/eclipse/jetty.project"},{"original_method":"protected void fail(Throwable cause)\n        {\n            if (_callback!=null)\n                _callback.failed(cause);\n        }","id":82330,"modified_method":"protected boolean fail(Throwable cause)\n        {\n            if (_callback!=null)\n            {\n                _callback.failed(cause);\n                return true;\n            }\n            return false;\n        }","commit_id":"61b2e7f75ea7398e33452b78af4282091fe7b26b","url":"https://github.com/eclipse/jetty.project"},{"original_method":"public void onFail(Throwable cause)\n    {\n        // Keep trying to handle the failure until we get to IDLE or FAILED state\n        while(true)\n        {\n            State current=_state.get();\n            switch(current.getType())\n            {\n                case IDLE:\n                case FAILED:\n                    if (DEBUG)\n                        LOG.debug(\"ignored: {} {}\", this, cause);\n                    return;\n\n                case PENDING:\n                    if (DEBUG)\n                        LOG.debug(\"failed: {} {}\", this, cause);\n\n                    PendingState pending = (PendingState)current;\n                    if (updateState(pending,__IDLE))\n                    {\n                        pending.fail(cause);\n                        return;\n                    }\n                    break;\n\n                default:\n                    if (DEBUG)\n                        LOG.debug(\"failed: {} {}\", this, cause);\n\n                    if (updateState(current,new FailedState(cause)))\n                        return;\n                    break;\n            }\n        }\n    }","id":82331,"modified_method":"/** Notify the flusher of a failure\n     * @param cause The cause of the failure\n     * @return true if the flusher passed the failure to a {@link Callback} instance\n     */\n    public boolean onFail(Throwable cause)\n    {\n        // Keep trying to handle the failure until we get to IDLE or FAILED state\n        while(true)\n        {\n            State current=_state.get();\n            switch(current.getType())\n            {\n                case IDLE:\n                case FAILED:\n                    if (DEBUG)\n                        LOG.debug(\"ignored: {} {}\", this, cause);\n                    return false;\n\n                case PENDING:\n                    if (DEBUG)\n                        LOG.debug(\"failed: {} {}\", this, cause);\n\n                    PendingState pending = (PendingState)current;\n                    if (updateState(pending,__IDLE))\n                        return pending.fail(cause);\n                    break;\n\n                default:\n                    if (DEBUG)\n                        LOG.debug(\"failed: {} {}\", this, cause);\n\n                    if (updateState(current,new FailedState(cause)))\n                        return false;\n                    break;\n            }\n        }\n    }","commit_id":"61b2e7f75ea7398e33452b78af4282091fe7b26b","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Override\n    public void unsupported()\n    {\n        ConnectionFactory ConnectionFactory = connector.getDefaultConnectionFactory();\n        EndPoint endPoint = getEndPoint();\n        Connection connection = ConnectionFactory.newConnection(channel, endPoint, connector);\n        connector.replaceConnection(endPoint, connection);\n        completed = true;\n    }","id":82332,"modified_method":"@Override\n    public void unsupported()\n    {\n        ConnectionFactory connectionFactory = connector.getDefaultConnectionFactory();\n        EndPoint endPoint = getEndPoint();\n        Connection connection = connectionFactory.newConnection(channel, endPoint, connector);\n        connector.replaceConnection(endPoint, connection);\n        completed = true;\n    }","commit_id":"edd40ec2999b456591d6a96411820f22f42a0927","url":"https://github.com/eclipse/jetty.project"},{"original_method":"protected InetSocketAddress startServer(SPDYServerConnector connector) throws Exception\n    {\n        server = new Server();\n        if (connector == null)\n//            connector = new SPDYServerConnector(null, newSslContextFactory()); //TODO:\n        connector.setPort(0);\n        this.connector = connector;\n        server.addConnector(connector);\n        server.start();\n        return new InetSocketAddress(\"localhost\", connector.getLocalPort());\n    }","id":82333,"modified_method":"protected InetSocketAddress startServer(SPDYServerConnector connector) throws Exception\n    {\n        server = new Server();\n        if (connector == null)\n            connector = new SPDYServerConnector(server, newSslContextFactory(), null);\n        connector.setPort(0);\n        connector.setIdleTimeout(30000);\n        this.connector = connector;\n        server.addConnector(connector);\n        server.start();\n        return new InetSocketAddress(\"localhost\", connector.getLocalPort());\n    }","commit_id":"edd40ec2999b456591d6a96411820f22f42a0927","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Test\n    public void testServerAdvertisingSPDYAndHTTPSpeaksHTTPWhenNegotiated() throws Exception\n    {\n        InetSocketAddress address = startServer(null);\n//        connector.putAsyncConnectionFactory(\"http/1.1\", new ServerHTTPAsyncConnectionFactory(connector)); //TODO:\n\n        SslContextFactory sslContextFactory = newSslContextFactory();\n        sslContextFactory.start();\n        SSLContext sslContext = sslContextFactory.getSslContext();\n        SSLSocket client = (SSLSocket)sslContext.getSocketFactory().createSocket(address.getAddress(), address.getPort());\n        client.setUseClientMode(true);\n        client.setSoTimeout(5000);\n\n        NextProtoNego.put(client, new NextProtoNego.ClientProvider()\n        {\n            @Override\n            public boolean supports()\n            {\n                return true;\n            }\n\n            @Override\n            public void unsupported()\n            {\n            }\n\n            @Override\n            public String selectProtocol(List<String> strings)\n            {\n                Assert.assertNotNull(strings);\n                String spdyProtocol = \"spdy/2\";\n                Assert.assertTrue(strings.contains(spdyProtocol));\n                String httpProtocol = \"http/1.1\";\n                Assert.assertTrue(strings.contains(httpProtocol));\n                Assert.assertTrue(strings.indexOf(spdyProtocol) < strings.indexOf(httpProtocol));\n                return httpProtocol;\n            }\n        });\n\n        client.startHandshake();\n\n        // Verify that the server really speaks http/1.1\n\n        OutputStream output = client.getOutputStream();\n        output.write((\"\" +\n                \"GET / HTTP/1.1\\r\\n\" +\n                \"Host: localhost:\" + address.getPort() + \"\\r\\n\" +\n                \"\\r\\n\" +\n                \"\").getBytes(\"UTF-8\"));\n        output.flush();\n\n        InputStream input = client.getInputStream();\n        BufferedReader reader = new BufferedReader(new InputStreamReader(input, \"UTF-8\"));\n        String line = reader.readLine();\n        Assert.assertTrue(line.contains(\" 404 \"));\n\n        client.close();\n    }","id":82334,"modified_method":"@Test\n    public void testServerAdvertisingSPDYAndHTTPSpeaksHTTPWhenNegotiated() throws Exception\n    {\n        InetSocketAddress address = startServer(null);\n        connector.putConnectionFactory(\"http/1.1\", new HttpServerConnectionFactory(connector));\n\n        SslContextFactory sslContextFactory = newSslContextFactory();\n        sslContextFactory.start();\n        SSLContext sslContext = sslContextFactory.getSslContext();\n        SSLSocket client = (SSLSocket)sslContext.getSocketFactory().createSocket(address.getAddress(), address.getPort());\n        client.setUseClientMode(true);\n        client.setSoTimeout(5000);\n\n        NextProtoNego.put(client, new NextProtoNego.ClientProvider()\n        {\n            @Override\n            public boolean supports()\n            {\n                return true;\n            }\n\n            @Override\n            public void unsupported()\n            {\n            }\n\n            @Override\n            public String selectProtocol(List<String> strings)\n            {\n                Assert.assertNotNull(strings);\n                String spdyProtocol = \"spdy/2\";\n                Assert.assertTrue(strings.contains(spdyProtocol));\n                String httpProtocol = \"http/1.1\";\n                Assert.assertTrue(strings.contains(httpProtocol));\n                Assert.assertTrue(strings.indexOf(spdyProtocol) < strings.indexOf(httpProtocol));\n                return httpProtocol;\n            }\n        });\n\n        client.startHandshake();\n\n        // Verify that the server really speaks http/1.1\n\n        OutputStream output = client.getOutputStream();\n        output.write((\"\" +\n                \"GET / HTTP/1.1\\r\\n\" +\n                \"Host: localhost:\" + address.getPort() + \"\\r\\n\" +\n                \"\\r\\n\" +\n                \"\").getBytes(\"UTF-8\"));\n        output.flush();\n\n        InputStream input = client.getInputStream();\n        BufferedReader reader = new BufferedReader(new InputStreamReader(input, \"UTF-8\"));\n        String line = reader.readLine();\n        Assert.assertTrue(line.contains(\" 404 \"));\n\n        client.close();\n    }","commit_id":"edd40ec2999b456591d6a96411820f22f42a0927","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Test\n    public void testServerAdvertisingHTTPSpeaksHTTP() throws Exception\n    {\n        InetSocketAddress address = startServer(null);\n        connector.removeConnectionFactory(\"spdy/2\");\n//        connector.putConnectionFactory(\"http/1.1\", new ServerHTTPAsyncConnectionFactory(connector)); //TODO:\n\n        SslContextFactory sslContextFactory = newSslContextFactory();\n        sslContextFactory.start();\n        SSLContext sslContext = sslContextFactory.getSslContext();\n        SSLSocket client = (SSLSocket)sslContext.getSocketFactory().createSocket(address.getAddress(), address.getPort());\n        client.setUseClientMode(true);\n        client.setSoTimeout(5000);\n\n        NextProtoNego.put(client, new NextProtoNego.ClientProvider()\n        {\n            @Override\n            public boolean supports()\n            {\n                return true;\n            }\n\n            @Override\n            public void unsupported()\n            {\n            }\n\n            @Override\n            public String selectProtocol(List<String> strings)\n            {\n                Assert.assertNotNull(strings);\n                String protocol = \"http/1.1\";\n                Assert.assertTrue(strings.contains(protocol));\n                return protocol;\n            }\n        });\n\n        client.startHandshake();\n\n        // Verify that the server really speaks http/1.1\n\n        OutputStream output = client.getOutputStream();\n        output.write((\"\" +\n                \"GET / HTTP/1.1\\r\\n\" +\n                \"Host: localhost:\" + address.getPort() + \"\\r\\n\" +\n                \"\\r\\n\" +\n                \"\").getBytes(\"UTF-8\"));\n        output.flush();\n\n        InputStream input = client.getInputStream();\n        BufferedReader reader = new BufferedReader(new InputStreamReader(input, \"UTF-8\"));\n        String line = reader.readLine();\n        Assert.assertTrue(line.contains(\" 404 \"));\n\n        client.close();\n    }","id":82335,"modified_method":"@Test\n    public void testServerAdvertisingHTTPSpeaksHTTP() throws Exception\n    {\n        InetSocketAddress address = startServer(null);\n        connector.putConnectionFactory(\"http/1.1\", new HttpServerConnectionFactory(connector));\n\n        SslContextFactory sslContextFactory = newSslContextFactory();\n        sslContextFactory.start();\n        SSLContext sslContext = sslContextFactory.getSslContext();\n        SSLSocket client = (SSLSocket)sslContext.getSocketFactory().createSocket(address.getAddress(), address.getPort());\n        client.setUseClientMode(true);\n        client.setSoTimeout(5000);\n\n        NextProtoNego.put(client, new NextProtoNego.ClientProvider()\n        {\n            @Override\n            public boolean supports()\n            {\n                return true;\n            }\n\n            @Override\n            public void unsupported()\n            {\n            }\n\n            @Override\n            public String selectProtocol(List<String> strings)\n            {\n                Assert.assertNotNull(strings);\n                String protocol = \"http/1.1\";\n                Assert.assertTrue(strings.contains(protocol));\n                return protocol;\n            }\n        });\n\n        client.startHandshake();\n\n        // Verify that the server really speaks http/1.1\n\n        OutputStream output = client.getOutputStream();\n        output.write((\"\" +\n                \"GET / HTTP/1.1\\r\\n\" +\n                \"Host: localhost:\" + address.getPort() + \"\\r\\n\" +\n                \"\\r\\n\" +\n                \"\").getBytes(\"UTF-8\"));\n        output.flush();\n\n        InputStream input = client.getInputStream();\n        BufferedReader reader = new BufferedReader(new InputStreamReader(input, \"UTF-8\"));\n        String line = reader.readLine();\n        Assert.assertTrue(line.contains(\" 404 \"));\n\n        client.close();\n    }","commit_id":"edd40ec2999b456591d6a96411820f22f42a0927","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Test\n    public void testServerAdvertisingSPDYAndHTTPSpeaksDefaultProtocolWhenNPNMissing() throws Exception\n    {\n//        SPDYServerConnector connector = new SPDYServerConnector(null, newSslContextFactory()); //TODO:\n//        connector.setDefaultConnectionFactory(new ServerHTTPConnectionFactory(connector));\n        InetSocketAddress address = startServer(connector);\n//        connector.putAsyncConnectionFactory(\"http/1.1\", new ServerHTTPAsyncConnectionFactory(connector));\n\n        SslContextFactory sslContextFactory = newSslContextFactory();\n        sslContextFactory.start();\n        SSLContext sslContext = sslContextFactory.getSslContext();\n        SSLSocket client = (SSLSocket)sslContext.getSocketFactory().createSocket(address.getAddress(), address.getPort());\n        client.setUseClientMode(true);\n        client.setSoTimeout(5000);\n\n        NextProtoNego.put(client, new NextProtoNego.ClientProvider()\n        {\n            @Override\n            public boolean supports()\n            {\n                return false;\n            }\n\n            @Override\n            public void unsupported()\n            {\n            }\n\n            @Override\n            public String selectProtocol(List<String> strings)\n            {\n                return null;\n            }\n        });\n\n        client.startHandshake();\n\n        // Verify that the server really speaks http/1.1\n\n        OutputStream output = client.getOutputStream();\n        output.write((\"\" +\n                \"GET / HTTP/1.1\\r\\n\" +\n                \"Host: localhost:\" + address.getPort() + \"\\r\\n\" +\n                \"\\r\\n\" +\n                \"\").getBytes(\"UTF-8\"));\n        output.flush();\n\n        InputStream input = client.getInputStream();\n        BufferedReader reader = new BufferedReader(new InputStreamReader(input, \"UTF-8\"));\n        String line = reader.readLine();\n        Assert.assertTrue(line.contains(\" 404 \"));\n\n        client.close();\n    }","id":82336,"modified_method":"@Test\n    public void testServerAdvertisingSPDYAndHTTPSpeaksDefaultProtocolWhenNPNMissing() throws Exception\n    {\n        InetSocketAddress address = startServer(null);\n        connector.setDefaultConnectionFactory(new HttpServerConnectionFactory(connector));\n        connector.putConnectionFactory(\"http/1.1\", connector.getDefaultConnectionFactory());\n\n        SslContextFactory sslContextFactory = newSslContextFactory();\n        sslContextFactory.start();\n        SSLContext sslContext = sslContextFactory.getSslContext();\n        SSLSocket client = (SSLSocket)sslContext.getSocketFactory().createSocket(address.getAddress(), address.getPort());\n        client.setUseClientMode(true);\n        client.setSoTimeout(5000);\n\n        NextProtoNego.put(client, new NextProtoNego.ClientProvider()\n        {\n            @Override\n            public boolean supports()\n            {\n                return false;\n            }\n\n            @Override\n            public void unsupported()\n            {\n            }\n\n            @Override\n            public String selectProtocol(List<String> strings)\n            {\n                return null;\n            }\n        });\n\n        client.startHandshake();\n\n        // Verify that the server really speaks http/1.1\n\n        OutputStream output = client.getOutputStream();\n        output.write((\"\" +\n                \"GET / HTTP/1.1\\r\\n\" +\n                \"Host: localhost:\" + address.getPort() + \"\\r\\n\" +\n                \"\\r\\n\" +\n                \"\").getBytes(\"UTF-8\"));\n        output.flush();\n\n        InputStream input = client.getInputStream();\n        BufferedReader reader = new BufferedReader(new InputStreamReader(input, \"UTF-8\"));\n        String line = reader.readLine();\n        Assert.assertTrue(line.contains(\" 404 \"));\n\n        client.close();\n    }","commit_id":"edd40ec2999b456591d6a96411820f22f42a0927","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Override\n    protected Connection newConnection(SocketChannel channel, EndPoint endPoint, Object attachment)\n    {\n        SslContextFactory sslContextFactory = getSslContextFactory();\n        if (sslContextFactory != null)\n        {\n            final SSLEngine engine = newSSLEngine(sslContextFactory, channel);\n            SslConnection sslConnection = new SslConnection(getByteBufferPool(), getExecutor(), endPoint, engine)\n            {\n                @Override\n                public void onClose()\n                {\n                    NextProtoNego.remove(engine);\n                    super.onClose();\n                }\n            };\n\n            final EndPoint sslEndPoint = sslConnection.getDecryptedEndPoint();\n            NextProtoNegoServerConnection connection = new NextProtoNegoServerConnection(channel, sslEndPoint, this);\n            sslEndPoint.setConnection(connection);\n            getSelectorManager().connectionOpened(connection);\n\n            NextProtoNego.put(engine, connection);\n\n            return sslConnection;\n        }\n        else\n        {\n            ConnectionFactory connectionFactory = getDefaultConnectionFactory();\n            Connection connection = connectionFactory.newConnection(channel, endPoint, this);\n            endPoint.setConnection(connection);\n            return connection;\n        }\n    }","id":82337,"modified_method":"@Override\n    protected Connection newConnection(SocketChannel channel, EndPoint endPoint, Object attachment)\n    {\n        SslContextFactory sslContextFactory = getSslContextFactory();\n        if (sslContextFactory != null)\n        {\n            final SSLEngine engine = newSSLEngine(sslContextFactory, channel);\n            SslConnection sslConnection = new SslConnection(getByteBufferPool(), getExecutor(), endPoint, engine)\n            {\n                @Override\n                public void onClose()\n                {\n                    NextProtoNego.remove(engine);\n                    super.onClose();\n                }\n            };\n\n            final EndPoint sslEndPoint = sslConnection.getDecryptedEndPoint();\n            NextProtoNegoServerConnection connection = new NextProtoNegoServerConnection(channel, sslEndPoint, this);\n            sslEndPoint.setConnection(connection);\n            getSelectorManager().connectionOpened(connection);\n\n            NextProtoNego.put(engine, connection);\n\n            return sslConnection;\n        }\n        else\n        {\n            return super.newConnection(channel, endPoint, this);\n        }\n    }","commit_id":"edd40ec2999b456591d6a96411820f22f42a0927","url":"https://github.com/eclipse/jetty.project"},{"original_method":"public void replaceConnection(EndPoint endPoint, Connection connection)\n    {\n        Connection oldConnection = endPoint.getConnection();\n        endPoint.setConnection(connection);\n        getSelectorManager().connectionUpgraded(endPoint, oldConnection);\n    }","id":82338,"modified_method":"public void replaceConnection(EndPoint endPoint, Connection connection)\n    {\n        Connection oldConnection = endPoint.getConnection();\n        LOG.debug(\"Upgrading connection {} -> {} on endPoint {}\", oldConnection, connection, endPoint);\n        endPoint.setConnection(connection);\n        getSelectorManager().connectionUpgraded(endPoint, oldConnection);\n    }","commit_id":"edd40ec2999b456591d6a96411820f22f42a0927","url":"https://github.com/eclipse/jetty.project"},{"original_method":"public void testRenegotiateFail() throws Exception {\n        renegotiateFail(false);\n    }","id":82339,"modified_method":"public void testRenegotiateFail() throws Exception {\n        Tomcat tomcat = getTomcatInstance();\n\n        File appDir = new File(getBuildDirectory(), \"webapps/examples\");\n        // app dir is relative to server home\n        tomcat.addWebapp(null, \"/examples\", appDir.getAbsolutePath());\n\n        initSsl(tomcat);\n\n        // Default - MITM attack prevented\n        \n        tomcat.start();\n        SSLContext sslCtx = SSLContext.getInstance(\"TLS\");\n        sslCtx.init(null, trustAllCerts, new java.security.SecureRandom());\n        SSLSocketFactory socketFactory = sslCtx.getSocketFactory();\n        SSLSocket socket = (SSLSocket) socketFactory.createSocket(\"localhost\", getPort());\n\n        socket.addHandshakeCompletedListener(new HandshakeCompletedListener() {\n            @Override\n            public void handshakeCompleted(HandshakeCompletedEvent event) {\n                handshakeDone = true;\n            }\n        });\n        \n        OutputStream os = socket.getOutputStream();\n        os.write(\"GET /examples/servlets/servlet/HelloWorldExample HTTP/1.0\\n\".getBytes());\n        os.flush();\n\n        \n        InputStream is = socket.getInputStream();\n\n        // Make sure the NIO connector has read the request before the handshake\n        Thread.sleep(100);\n        socket.startHandshake();\n        handshakeDone = false;\n        byte[] b = new byte[0];\n        int maxTries = 5;  // 5 sec should be enough - in NIO we'll timeout\n        socket.setSoTimeout(1000);\n        for (int i = 0; i < maxTries; i++) {\n            try {\n                is.read(b);\n            } catch (IOException e) {\n                // timeout\n            }\n            if (handshakeDone) {\n                break;\n            }\n        }\n        os = socket.getOutputStream();\n        if (!handshakeDone) {\n            // success - we timedout without handshake\n            return;\n        }\n        try {\n            os.write(\"Host: localhost\\n\\n\".getBytes());\n        } catch (IOException ex) {\n            // success - connection closed\n            return;\n        }\n        \n        fail(\"Re-negotiation worked\");\n        \n    }","commit_id":"b0d1f4bc444485ed4bc9a0d9ff7a108f757aa2a0","url":"https://github.com/apache/tomcat"},{"original_method":"private void initSsl(Tomcat tomcat, boolean nio) {\n        if (nio) {\n            Connector connector = \n                new Connector(\"org.apache.coyote.http11.Http11NioProtocol\");\n            connector.setPort(getPort());\n            tomcat.getService().addConnector(connector);\n            tomcat.setConnector(connector);\n            tomcat.getConnector().setProperty(\"sslProtocol\", \"tls\");\n        }\n        String protocol = tomcat.getConnector().getProtocolHandlerClassName();\n        if (protocol.indexOf(\"Apr\") == -1) {\n            tomcat.getConnector().setProperty(\"sslProtocol\", \"tls\");\n            File keystoreFile = new File(\n                    \"test/org/apache/catalina/startup/test.keystore\");\n            tomcat.getConnector().setAttribute(\"keystoreFile\",\n                    keystoreFile.getAbsolutePath());\n        } else {\n            File keystoreFile = new File(\n                    \"test/org/apache/catalina/startup/test-cert.pem\");\n            tomcat.getConnector().setAttribute(\"SSLCertificateFile\",\n                    keystoreFile.getAbsolutePath());\n            keystoreFile = new File(\n                    \"test/org/apache/catalina/startup/test-key.pem\");\n            tomcat.getConnector().setAttribute(\"SSLCertificateKeyFile\",\n                    keystoreFile.getAbsolutePath());\n        }\n        tomcat.getConnector().setSecure(true);            \n        tomcat.getConnector().setProperty(\"SSLEnabled\", \"true\");\n\n    }","id":82340,"modified_method":"private void initSsl(Tomcat tomcat) {\n        String protocol = tomcat.getConnector().getProtocolHandlerClassName();\n        if (protocol.indexOf(\"Apr\") == -1) {\n            tomcat.getConnector().setProperty(\"sslProtocol\", \"tls\");\n            File keystoreFile = new File(\n                    \"test/org/apache/catalina/startup/test.keystore\");\n            tomcat.getConnector().setAttribute(\"keystoreFile\",\n                    keystoreFile.getAbsolutePath());\n        } else {\n            File keystoreFile = new File(\n                    \"test/org/apache/catalina/startup/test-cert.pem\");\n            tomcat.getConnector().setAttribute(\"SSLCertificateFile\",\n                    keystoreFile.getAbsolutePath());\n            keystoreFile = new File(\n                    \"test/org/apache/catalina/startup/test-key.pem\");\n            tomcat.getConnector().setAttribute(\"SSLCertificateKeyFile\",\n                    keystoreFile.getAbsolutePath());\n        }\n        tomcat.getConnector().setSecure(true);            \n        tomcat.getConnector().setProperty(\"SSLEnabled\", \"true\");\n\n    }","commit_id":"b0d1f4bc444485ed4bc9a0d9ff7a108f757aa2a0","url":"https://github.com/apache/tomcat"},{"original_method":"public void testSimpleSsl() throws Exception {\n        simpleSsl(false);\n    }","id":82341,"modified_method":"public void testSimpleSsl() throws Exception {\n        // Install the all-trusting trust manager so https:// works \n        // with unsigned certs. \n\n        try {\n            SSLContext sc = SSLContext.getInstance(\"SSL\");\n            sc.init(null, trustAllCerts, new java.security.SecureRandom());\n            javax.net.ssl.HttpsURLConnection.setDefaultSSLSocketFactory(\n                    sc.getSocketFactory());\n        } catch (Exception e) {\n            e.printStackTrace();\n        } \n        \n        Tomcat tomcat = getTomcatInstance();\n\n        File appDir = new File(getBuildDirectory(), \"webapps/examples\");\n        tomcat.addWebapp(null, \"/examples\", appDir.getAbsolutePath());\n        \n        initSsl(tomcat);\n\n        tomcat.start();\n        ByteChunk res = getUrl(\"https://localhost:\" + getPort() +\n            \"/examples/servlets/servlet/HelloWorldExample\");\n        assertTrue(res.toString().indexOf(\"<h1>Hello World!<\/h1>\") > 0);\n    }","commit_id":"b0d1f4bc444485ed4bc9a0d9ff7a108f757aa2a0","url":"https://github.com/apache/tomcat"},{"original_method":"public void testRenegotiateWorks() throws Exception {\n        renegotiateWorks(false);\n    }","id":82342,"modified_method":"public void testRenegotiateWorks() throws Exception {\n        Tomcat tomcat = getTomcatInstance();\n\n        File appDir = new File(getBuildDirectory(), \"webapps/examples\");\n        // app dir is relative to server home\n        tomcat.addWebapp(null, \"/examples\", appDir.getAbsolutePath());\n\n        initSsl(tomcat);\n        \n        // Enable MITM attack\n        tomcat.getConnector().setAttribute(\"allowUnsafeLegacyRenegotiation\", \"true\");\n\n        tomcat.start();\n\n        String protocol = tomcat.getConnector().getProtocolHandlerClassName();\n        if (protocol.indexOf(\"Nio\") != -1) {\n            return; // Not supported yet (2010-07-22)\n        }\n\n        SSLContext sslCtx = SSLContext.getInstance(\"TLS\");\n        sslCtx.init(null, trustAllCerts, new java.security.SecureRandom());\n        SSLSocketFactory socketFactory = sslCtx.getSocketFactory();\n        SSLSocket socket = (SSLSocket) socketFactory.createSocket(\"localhost\", getPort());\n\n        socket.addHandshakeCompletedListener(new HandshakeCompletedListener() {\n            @Override\n            public void handshakeCompleted(HandshakeCompletedEvent event) {\n                handshakeDone = true;\n            }\n        });\n        \n        OutputStream os = socket.getOutputStream();\n        os.write(\"GET /examples/servlets/servlet/HelloWorldExample HTTP/1.0\\n\".getBytes());\n        os.flush();\n\n        InputStream is = socket.getInputStream();\n\n        socket.startHandshake();\n        handshakeDone = false;\n        byte[] b = new byte[0];\n        int maxTries = 5; \n        socket.setSoTimeout(1000);\n        for (int i = 0; i < maxTries; i++) {\n            try {\n                is.read(b);\n            } catch (IOException e) {\n                // timeout\n            }\n            if (handshakeDone) {\n                break;\n            }\n        }\n        os = socket.getOutputStream();\n        \n        try {\n            os.write(\"Host: localhost\\n\\n\".getBytes());\n        } catch (IOException ex) {\n            fail(\"Re-negotiation failed\");\n        }\n        \n    }","commit_id":"b0d1f4bc444485ed4bc9a0d9ff7a108f757aa2a0","url":"https://github.com/apache/tomcat"},{"original_method":"@Override\n    public void setUp() throws Exception {\n        // Need to use JULI so log messages from the tests are visible\n        System.setProperty(\"java.util.logging.manager\",\n                \"org.apache.juli.ClassLoaderLogManager\");\n\n        tempDir = new File(System.getProperty(\"tomcat.test.temp\", \"output/tmp\"));\n        if (!tempDir.exists() && !tempDir.mkdirs()) {\n            fail(\"Unable to create temporary directory for test\");\n        }\n        \n        System.setProperty(\"catalina.base\", tempDir.getAbsolutePath());\n        \n        File appBase = new File(tempDir, \"webapps\");\n        if (!appBase.exists() && !appBase.mkdir()) {\n            fail(\"Unable to create appBase for test\");\n        }\n        \n        tomcat = new Tomcat();\n\n        // Add AprLifecycleListener\n        StandardServer server = (StandardServer) tomcat.getServer();\n        AprLifecycleListener listener = new AprLifecycleListener();\n        server.addLifecycleListener(listener);\n        \n        tomcat.setBaseDir(tempDir.getAbsolutePath());\n        tomcat.getHost().setAppBase(appBase.getAbsolutePath());\n          \n        // If each test is running on same port - they\n        // may interfere with each other (on unix at least)\n        tomcat.setPort(getNextPort());\n    }","id":82343,"modified_method":"@Override\n    public void setUp() throws Exception {\n        // Need to use JULI so log messages from the tests are visible\n        System.setProperty(\"java.util.logging.manager\",\n                \"org.apache.juli.ClassLoaderLogManager\");\n\n        tempDir = new File(System.getProperty(\"tomcat.test.temp\", \"output/tmp\"));\n        if (!tempDir.exists() && !tempDir.mkdirs()) {\n            fail(\"Unable to create temporary directory for test\");\n        }\n        \n        System.setProperty(\"catalina.base\", tempDir.getAbsolutePath());\n        \n        File appBase = new File(tempDir, \"webapps\");\n        if (!appBase.exists() && !appBase.mkdir()) {\n            fail(\"Unable to create appBase for test\");\n        }\n        \n        tomcat = new Tomcat();\n\n        // Has a protocol been specified\n        String protocol = System.getProperty(\"tomcat.test.protocol\");\n        \n        // Use BIO by default\n        if (protocol == null) {\n            protocol = \"org.apache.coyote.http11.Http11Protocol\";\n        }\n\n        Connector connector = new Connector(protocol);\n        // If each test is running on same port - they\n        // may interfere with each other (on unix at least)\n        connector.setPort(getNextPort());\n        tomcat.getService().addConnector(connector);\n        tomcat.setConnector(connector);\n\n        // Add AprLifecycleListener if we are using the Apr connector\n        if (protocol.contains(\"Apr\")) {\n            StandardServer server = (StandardServer) tomcat.getServer();\n            AprLifecycleListener listener = new AprLifecycleListener();\n            server.addLifecycleListener(listener);\n        }\n        \n        tomcat.setBaseDir(tempDir.getAbsolutePath());\n        tomcat.getHost().setAppBase(appBase.getAbsolutePath());\n    }","commit_id":"b0d1f4bc444485ed4bc9a0d9ff7a108f757aa2a0","url":"https://github.com/apache/tomcat"},{"original_method":"/**\n\t * @throws Exception\n\t */\n\t@Before\n\tpublic void before() throws Exception\n\t{\n\t\tHttpUnitOptions.setExceptionsThrownOnScriptError(false);\n\n\t\tSystem.setProperty(\"wicket.configuration\", \"deployment\");\n\n\t\tserver = new Server(0);\n\t\tSelectChannelConnector connector = new SelectChannelConnector();\n\t\tserver.setConnectors(new Connector[] { connector });\n\n\t\tWebAppContext web = new WebAppContext();\n\t\tif (contextPath == null)\n\t\t\tweb.setContextPath(\"/wicket-examples\");\n\t\telse\n\t\t\tweb.setContextPath(contextPath);\n\n\t\tif (webappLocation == null)\n\t\t{\n\t\t\tString basedir = System.getProperty(\"basedir\");\n\t\t\tString path = \"\";\n\t\t\tif (basedir != null)\n\t\t\t\tpath = basedir + \"/\";\n\t\t\tpath += \"src/main/webapp\";\n\n\t\t\tweb.setWar(path);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tweb.setWar(webappLocation);\n\t\t}\n\t\tserver.setHandler(web);\n\n\t\tserver.start();\n\t\tlocalPort = connector.getLocalPort();\n\t}","id":82344,"modified_method":"/**\n\t * @throws Exception\n\t */\n\t@Before\n\tpublic void before() throws Exception\n\t{\n\t\tHttpUnitOptions.setExceptionsThrownOnScriptError(false);\n\n\t\tSystem.setProperty(\"wicket.configuration\", \"deployment\");\n\n\t\tserver = new Server(0);\n\n\t\tHttpConfiguration http_config = new HttpConfiguration();\n\t\thttp_config.setSecureScheme(\"https\");\n\t\thttp_config.setSecurePort(8443);\n\t\thttp_config.setOutputBufferSize(32768);\n\n\t\tServerConnector http = new ServerConnector(server, new HttpConnectionFactory(http_config));\n\t\tserver.addConnector(http);\n\n\t\tWebAppContext web = new WebAppContext();\n\t\tif (contextPath == null)\n\t\t\tweb.setContextPath(\"/wicket-examples\");\n\t\telse\n\t\t\tweb.setContextPath(contextPath);\n\n\t\tif (webappLocation == null)\n\t\t{\n\t\t\tString basedir = System.getProperty(\"basedir\");\n\t\t\tString path = \"\";\n\t\t\tif (basedir != null)\n\t\t\t\tpath = basedir + \"/\";\n\t\t\tpath += \"src/main/webapp\";\n\n\t\t\tweb.setWar(path);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tweb.setWar(webappLocation);\n\t\t}\n\t\tserver.setHandler(web);\n\n\t\tserver.start();\n\t\tlocalPort = http.getLocalPort();\n\t}","commit_id":"1f74570463eb10371c226c3b4aa6916997246aed","url":"https://github.com/apache/wicket"},{"original_method":"/**\n\t * Main function, starts the jetty server.\n\t * \n\t * @param args\n\t */\n\tpublic static void main(String[] args)\n\t{\n\t\tSystem.setProperty(\"wicket.configuration\", \"development\");\n\n\t\tServer server = new Server();\n\t\tSelectChannelConnector connector = new SelectChannelConnector();\n\n\t\t// Set some timeout options to make debugging easier.\n\t\tconnector.setMaxIdleTime(1000 * 60 * 60);\n\t\tconnector.setSoLingerTime(-1);\n\t\tconnector.setPort(8080);\n\t\tserver.setConnectors(new Connector[] { connector });\n\n\t\tResource keystore = Resource.newClassPathResource(\"/keystore\");\n\t\tif (keystore != null && keystore.exists()) {\n\t\t\t// if a keystore for a SSL certificate is available, start a SSL\n\t\t\t// connector on port 8443.\n\t\t\t// By default, the quickstart comes with a Apache Wicket Quickstart\n\t\t\t// Certificate that expires about half way september 2021. Do not\n\t\t\t// use this certificate anywhere important as the passwords are\n\t\t\t// available in the source.\n\n\t\t\tconnector.setConfidentialPort(8443);\n\n\t\t\tSslContextFactory factory = new SslContextFactory();\n\t\t\tfactory.setKeyStoreResource(keystore);\n\t\t\tfactory.setKeyStorePassword(\"wicket\");\n\t\t\tfactory.setTrustStoreResource(keystore);\n\t\t\tfactory.setKeyManagerPassword(\"wicket\");\n\t\t\tSslSocketConnector sslConnector = new SslSocketConnector(factory);\n\t\t\tint timeout = (int) Duration.ONE_HOUR.getMilliseconds();\n\t\t\tsslConnector.setMaxIdleTime(timeout);\n\t\t\tsslConnector.setPort(8443);\n\t\t\tsslConnector.setAcceptors(4);\n\t\t\tserver.addConnector(sslConnector);\n\n\t\t\tSystem.out.println(\"SSL access to the examples has been enabled on port 8443\");\n\t\t\tSystem.out.println(\"You can access the application using SSL on https://localhost:8443\");\n\t\t\tSystem.out.println();\n\t\t}\n\n\t\tWebAppContext bb = new WebAppContext();\n\t\tbb.setServer(server);\n\t\tbb.setContextPath(\"/\");\n\t\tbb.setWar(\"src/main/webapp\");\n\n\t\t// uncomment next line if you want to test with JSESSIONID encoded in the urls\n\t\t// ((AbstractSessionManager) bb.getSessionHandler().getSessionManager()).setUsingCookies(false);\n\n\t\tserver.setHandler(bb);\n\n\t\tMBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();\n\t\tMBeanContainer mBeanContainer = new MBeanContainer(mBeanServer);\n\t\tserver.getContainer().addEventListener(mBeanContainer);\n\n\t\ttry\n\t\t{\n\t\t\tmBeanContainer.start();\n\t\t\tserver.start();\n\t\t\tserver.join();\n\t\t}\n\t\tcatch (Exception e)\n\t\t{\n\t\t\te.printStackTrace();\n\t\t\tSystem.exit(100);\n\t\t}\n\t}","id":82345,"modified_method":"/**\n\t * Main function, starts the jetty server.\n\t * \n\t * @param args\n\t */\n\tpublic static void main(String[] args)\n\t{\n\t\tSystem.setProperty(\"wicket.configuration\", \"development\");\n\n\t\tServer server = new Server();\n\n\t\tHttpConfiguration http_config = new HttpConfiguration();\n\t\thttp_config.setSecureScheme(\"https\");\n\t\thttp_config.setSecurePort(8443);\n\t\thttp_config.setOutputBufferSize(32768);\n\n\t\tServerConnector http = new ServerConnector(server, new HttpConnectionFactory(http_config));\n\t\thttp.setPort(8080);\n\t\thttp.setIdleTimeout(1000 * 60 * 60);\n\n\t\tserver.addConnector(http);\n\n\t\tResource keystore = Resource.newClassPathResource(\"/keystore\");\n\t\tif (keystore != null && keystore.exists())\n\t\t{\n\t\t\t// if a keystore for a SSL certificate is available, start a SSL\n\t\t\t// connector on port 8443.\n\t\t\t// By default, the quickstart comes with a Apache Wicket Quickstart\n\t\t\t// Certificate that expires about half way september 2021. Do not\n\t\t\t// use this certificate anywhere important as the passwords are\n\t\t\t// available in the source.\n\n\t\t\tSslContextFactory sslContextFactory = new SslContextFactory();\n\t\t\tsslContextFactory.setKeyStoreResource(keystore);\n\t\t\tsslContextFactory.setKeyStorePassword(\"wicket\");\n\t\t\tsslContextFactory.setKeyManagerPassword(\"wicket\");\n\n\t\t\tHttpConfiguration https_config = new HttpConfiguration(http_config);\n\t\t\thttps_config.addCustomizer(new SecureRequestCustomizer());\n\n\t\t\tServerConnector https = new ServerConnector(server, new SslConnectionFactory(\n\t\t\t\t\tsslContextFactory, \"http/1.1\"), new HttpConnectionFactory(https_config));\n\t\t\thttps.setPort(8443);\n\t\t\thttps.setIdleTimeout(500000);\n\n\t\t\tserver.addConnector(https);\n\t\t\tSystem.out.println(\"SSL access to the examples has been enabled on port 8443\");\n\t\t\tSystem.out\n\t\t\t\t\t.println(\"You can access the application using SSL on https://localhost:8443\");\n\t\t\tSystem.out.println();\n\t\t}\n\n\t\tWebAppContext bb = new WebAppContext();\n\t\tbb.setServer(server);\n\t\tbb.setContextPath(\"/\");\n\t\tbb.setWar(\"src/main/webapp\");\n\n\t\t// uncomment next line if you want to test with JSESSIONID encoded in the urls\n\t\t// ((AbstractSessionManager)\n\t\t// bb.getSessionHandler().getSessionManager()).setUsingCookies(false);\n\n\t\tserver.setHandler(bb);\n\n\t\tMBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();\n\t\tMBeanContainer mBeanContainer = new MBeanContainer(mBeanServer);\n\t\tserver.addEventListener(mBeanContainer);\n\t\tserver.addBean(mBeanContainer);\n\n\t\ttry\n\t\t{\n\t\t\tserver.start();\n\t\t\tserver.join();\n\t\t}\n\t\tcatch (Exception e)\n\t\t{\n\t\t\te.printStackTrace();\n\t\t\tSystem.exit(100);\n\t\t}\n\t}","commit_id":"1f74570463eb10371c226c3b4aa6916997246aed","url":"https://github.com/apache/wicket"},{"original_method":"public static void processArgs(FliesCommand cmd, String[] args, GlobalOptions globals) throws IOException, JAXBException, MalformedURLException, URISyntaxException\n   {\n      CmdLineParser parser = new CmdLineParser(cmd);\n\n      if (globals.getDebug())\n      {\n         cmd.setDebug(true);\n      }\n      if (globals.getErrors())\n      {\n         cmd.setErrors(true);\n      }\n      if (globals.getHelp())\n      {\n         cmd.setHelp(true);\n      }\n\n      try\n      {\n         parser.setUsageWidth(Integer.parseInt(System.getenv(\"COLUMNS\")));\n      }\n      catch (Exception e)\n      {\n         parser.setUsageWidth(120);\n      }\n      try\n      {\n         parser.parseArgument(args);\n      }\n      catch (CmdLineException e)\n      {\n         if (!cmd.getHelp() && args.length != 0)\n         {\n            System.err.println(e.getMessage());\n            printHelp(cmd, System.err);\n            parser.printUsage(System.err);\n            System.exit(1);\n         }\n      }\n\n      if (cmd.getHelp() || args.length == 0)\n      {\n         printHelp(cmd, System.out);\n         parser.printUsage(System.out);\n         System.exit(0);\n      }\n\n      try\n      {\n         cmd.initConfig();\n         if (cmd.getDebug())\n         {\n            enableDebugLogging();\n         }\n         if (cmd.getErrors())\n         {\n            System.out.println(\"+ Error stacktraces are turned on.\");\n         }\n         cmd.run();\n      }\n      catch (Exception e)\n      {\n         handleException(e, cmd.getErrors());\n      }\n   }","id":82346,"modified_method":"public static void processArgs(FliesCommand cmd, String[] args, GlobalOptions globals) throws IOException, JAXBException, MalformedURLException, URISyntaxException\n   {\n      CmdLineParser parser = new CmdLineParser(cmd);\n\n      if (globals.getDebug())\n      {\n         cmd.setDebug(true);\n      }\n      if (globals.getErrors())\n      {\n         cmd.setErrors(true);\n      }\n      if (globals.getHelp())\n      {\n         cmd.setHelp(true);\n      }\n      if (globals.getQuiet())\n      {\n         cmd.setQuiet(true);\n      }\n\n      try\n      {\n         parser.setUsageWidth(Integer.parseInt(System.getenv(\"COLUMNS\")));\n      }\n      catch (Exception e)\n      {\n         parser.setUsageWidth(120);\n      }\n      try\n      {\n         parser.parseArgument(args);\n      }\n      catch (CmdLineException e)\n      {\n         if (!cmd.getHelp() && args.length != 0)\n         {\n            System.err.println(e.getMessage());\n            printHelp(cmd, System.err);\n            parser.printUsage(System.err);\n            System.exit(1);\n         }\n      }\n\n      if (cmd.getHelp() || args.length == 0)\n      {\n         printHelp(cmd, System.out);\n         parser.printUsage(System.out);\n         System.exit(0);\n      }\n\n      try\n      {\n         setLogLevels(globals);\n         cmd.initConfig();\n      }\n      catch (Exception e)\n      {\n         handleException(e, globals.getErrors());\n      }\n      try\n      {\n         setLogLevels(cmd);\n         if (cmd.getErrors())\n         {\n            log.info(\"Error stacktraces are turned on.\");\n         }\n         cmd.run();\n      }\n      catch (Exception e)\n      {\n         handleException(e, cmd.getErrors());\n      }\n   }","commit_id":"81d0048d3bdb23c956167ac4ce0d2d69009cae72","url":"https://github.com/zanata/zanata-server"},{"original_method":"public static void handleException(Exception e, boolean outputErrors)\n   {\n      System.err.println(\"Execution failed: \" + e.getMessage());\n      if (outputErrors)\n      {\n         e.printStackTrace();\n      }\n      else\n      {\n         System.err.println(\"Use -e/--errors for full stack trace (or when reporting bugs)\");\n      }\n      System.exit(1);\n   }","id":82347,"modified_method":"public static void handleException(Exception e, boolean outputErrors)\n   {\n      if (outputErrors)\n      {\n         log.error(\"Execution failed: \", e);\n      }\n      else\n      {\n         log.error(\"Execution failed: \" + e.getMessage());\n         log.error(\"Use -e/--errors for full stack trace (or when reporting bugs)\");\n      }\n      System.exit(1);\n   }","commit_id":"81d0048d3bdb23c956167ac4ce0d2d69009cae72","url":"https://github.com/zanata/zanata-server"},{"original_method":"/**\n    * Loads the config files (controlled by the property userConfig) to supply\n    * any values which haven't already been set. (May be overridden by subclass\n    * to load other configuration.)\n    * \n    * @throws Exception\n    */\n   public void initConfig() throws Exception\n   {\n      if (userConfig != null)\n      {\n         if (userConfig.exists())\n         {\n            // TODO use a ConfigurationFactory\n            DataConfiguration dataConfig = new DataConfiguration(new HierarchicalINIConfiguration(userConfig));\n            applyConfig(dataConfig);\n         }\n         else\n         {\n            System.err.printf(\"Flies user config file '%s' not found; ignoring.\\n\", userConfig);\n         }\n      }\n   }","id":82348,"modified_method":"/**\n    * Loads the config files (controlled by the property userConfig) to supply\n    * any values which haven't already been set. (May be overridden by subclass\n    * to load other configuration.)\n    * \n    * @throws Exception\n    */\n   public void initConfig() throws Exception\n   {\n      if (userConfig != null)\n      {\n         if (userConfig.exists())\n         {\n            log.info(\"Loading flies user config from {}\", userConfig);\n            DataConfiguration dataConfig = new DataConfiguration(new HierarchicalINIConfiguration(userConfig));\n            applyConfig(dataConfig);\n         }\n         else\n         {\n            System.err.printf(\"Flies user config file '%s' not found; ignoring.\\n\", userConfig);\n         }\n      }\n   }","commit_id":"81d0048d3bdb23c956167ac4ce0d2d69009cae72","url":"https://github.com/zanata/zanata-server"},{"original_method":"/**\n    * Applies values from the user's personal configuration unless they have\n    * been set directly by parameters or by project configuration.\n    * \n    * @param config\n    */\n   private void applyConfig(DataConfiguration config)\n   {\n      if (!debugSet)\n         debug = config.getBoolean(\"flies.debug\", false);\n      if (debug)\n         setErrors(true);\n      if (!errorsSet)\n         errors = config.getBoolean(\"flies.errors\", false);\n      if (key == null)\n         key = config.getString(\"flies.key\", null);\n      if (url == null)\n         url = config.getURL(\"flies.url\", null);\n      if (username == null)\n         username = config.getString(\"flies.username\", null);\n   }","id":82349,"modified_method":"/**\n    * Applies values from the user's personal configuration unless they have\n    * been set directly by parameters or by project configuration.\n    * \n    * @param config\n    */\n   private void applyConfig(DataConfiguration config)\n   {\n      if (!debugSet)\n         debug = config.getBoolean(\"flies.debug\", false);\n      if (debug)\n         setErrors(true);\n      if (!errorsSet)\n         errors = config.getBoolean(\"flies.errors\", false);\n      if (key == null)\n         key = config.getString(\"flies.key\", null);\n      if (!quietSet)\n         quiet = config.getBoolean(\"flies.quiet\", false);\n      if (url == null)\n         url = config.getURL(\"flies.url\", null);\n      if (username == null)\n         username = config.getString(\"flies.username\", null);\n   }","commit_id":"81d0048d3bdb23c956167ac4ce0d2d69009cae72","url":"https://github.com/zanata/zanata-server"},{"original_method":"/**\n    * Loads the config files (controlled by the properties userConfig and\n    * projectConfig) to supply any values which haven't already been set via\n    * parameters.\n    * \n    * @throws Exception\n    */\n   @Override\n   public void initConfig() throws Exception\n   {\n      if (projectConfig != null)\n      {\n         if (projectConfig.exists())\n         {\n            FliesConfig fliesConfig = (FliesConfig) unmarshaller.unmarshal(projectConfig);\n            // local project config is supposed to override user's flies.ini, so\n            // we\n            // apply it first\n            applyProjectConfig(fliesConfig);\n         }\n         else\n         {\n            // System.err.printf(\"Flies project config file '%s' not found; ignoring.\\n\",\n            // projectConfig);\n            log.warn(\"Flies project config file '{}' not found; ignoring.\", projectConfig);\n            // log.warn(\"Flies project config file '\" + projectConfig +\n            // \"' not found; ignoring.\");\n         }\n      }\n      super.initConfig();\n   }","id":82350,"modified_method":"/**\n    * Loads the config files (controlled by the properties userConfig and\n    * projectConfig) to supply any values which haven't already been set via\n    * parameters.\n    * \n    * @throws Exception\n    */\n   @Override\n   public void initConfig() throws Exception\n   {\n      if (projectConfig != null)\n      {\n         File projectConfigFile = null;\n         String userDir = System.getProperty(\"user.dir\");\n         File projectDir = new File(userDir);\n         while (projectDir != null && !(projectConfigFile = new File(projectDir, projectConfig)).exists())\n         {\n            projectDir = projectDir.getParentFile();\n         }\n\n         if (projectConfigFile.exists())\n         {\n            log.info(\"Loading flies project config from {}\", projectConfigFile);\n            FliesConfig fliesConfig = (FliesConfig) unmarshaller.unmarshal(projectConfigFile);\n            // local project config is supposed to override user's flies.ini, so\n            // we\n            // apply it first\n            applyProjectConfig(fliesConfig);\n         }\n         else\n         {\n            log.warn(\"Flies project config file '{}' not found in '{}' or parent directories; ignoring.\", projectConfig, userDir);\n         }\n      }\n      super.initConfig();\n   }","commit_id":"81d0048d3bdb23c956167ac4ce0d2d69009cae72","url":"https://github.com/zanata/zanata-server"},{"original_method":"@Option(name = \"--project-config\", metaVar = \"FILE\", usage = \"Flies project configuration, eg flies.xml\", required = false)\n   public void setProjectConfig(File projectConfig)\n   {\n      this.projectConfig = projectConfig;\n   }","id":82351,"modified_method":"@Option(name = \"--project-config\", metaVar = \"FILENAME\", usage = \"Flies project configuration, eg flies.xml\", required = false)\n   public void setProjectConfig(String projectConfig)\n   {\n      this.projectConfig = projectConfig;\n   }","commit_id":"81d0048d3bdb23c956167ac4ce0d2d69009cae72","url":"https://github.com/zanata/zanata-server"},{"original_method":"public void setProjectConfig(File projectConfig)\n   {\n      getCommand().setProjectConfig(projectConfig);\n   }","id":82352,"modified_method":"public void setProjectConfig(File projectConfig)\n   {\n      getCommand().setProjectConfig(projectConfig.getPath());\n   }","commit_id":"81d0048d3bdb23c956167ac4ce0d2d69009cae72","url":"https://github.com/zanata/zanata-server"},{"original_method":"SNode convertStatement(DoStatement x) throws JavaParseException {\n    SNode loopTest = convertExpressionWrap(x.condition);\n    SNode loopBody = convertStatement(x.action);\n    SNode doWhileStatement = SConceptOperations.createNewNode(\"jetbrains.mps.baseLanguage.structure.DoWhileStatement\", null);\n    SLinkOperations.setTarget(doWhileStatement, \"condition\", loopTest, true);\n    SNode body = getStatementListFromStatement(loopBody, x.action);\n    SLinkOperations.setTarget(doWhileStatement, \"body\", body, true);\n    return doWhileStatement;\n  }","id":82353,"modified_method":"SNode convertStatement(DoStatement x) throws JavaParseException {\n    SNode loopTest = convertExpressionWrap(x.condition);\n    SNode loopBody = convertStatementWrap(x.action);\n    SNode doWhileStatement = SConceptOperations.createNewNode(\"jetbrains.mps.baseLanguage.structure.DoWhileStatement\", null);\n    SLinkOperations.setTarget(doWhileStatement, \"condition\", loopTest, true);\n    SNode body = getStatementListFromStatement(loopBody, x.action);\n    SLinkOperations.setTarget(doWhileStatement, \"body\", body, true);\n    return doWhileStatement;\n  }","commit_id":"5a78a1f4fe85872a054738efb652d3148cf67438","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode convertStatement(Statement s) throws JavaParseException {\n    if (s instanceof AssertStatement) {\n      return convertStatement((AssertStatement) s);\n    } else if (s instanceof Block) {\n      return convertStatement((Block) s);\n    } else if (s instanceof BreakStatement) {\n      return convertStatement((BreakStatement) s);\n    } else if (s instanceof ContinueStatement) {\n      return convertStatement((ContinueStatement) s);\n    } else if (s instanceof DoStatement) {\n      return convertStatement((DoStatement) s);\n    } else if (s instanceof EmptyStatement) {\n      return convertStatement((EmptyStatement) s);\n    } else if (s instanceof ExplicitConstructorCall) {\n      return convertStatement((ExplicitConstructorCall) s);\n    } else if (s instanceof Expression) {\n      return convertStatement((Expression) s);\n    } else if (s instanceof ForStatement) {\n      return convertStatement((ForStatement) s);\n    } else if (s instanceof ForeachStatement) {\n      return convertStatement((ForeachStatement) s);\n    } else if (s instanceof IfStatement) {\n      return convertStatement((IfStatement) s);\n    } else if (s instanceof LabeledStatement) {\n      return convertStatement((LabeledStatement) s);\n    } else if (s instanceof LocalDeclaration) {\n      return convertStatement((LocalDeclaration) s);\n    } else if (s instanceof ReturnStatement) {\n      return convertStatement((ReturnStatement) s);\n    } else if (s instanceof SwitchStatement) {\n      return convertStatement((SwitchStatement) s);\n    } else if (s instanceof SynchronizedStatement) {\n      return convertStatement((SynchronizedStatement) s);\n    } else if (s instanceof ThrowStatement) {\n      return convertStatement((ThrowStatement) s);\n    } else if (s instanceof TryStatement) {\n      return convertStatement((TryStatement) s);\n    } else if (s instanceof TypeDeclaration) {\n      return convertStatement((TypeDeclaration) s);\n    } else if (s instanceof WhileStatement) {\n      return convertStatement((WhileStatement) s);\n    } else {\n      return null;\n    }\n\n  }","id":82354,"modified_method":"public SNode convertStatement(Statement x) throws JavaParseException {\n    if (x instanceof AssertStatement) {\n      return convertStatement((AssertStatement) x);\n    } else if (x instanceof Block) {\n      return convertStatement((Block) x);\n    } else if (x instanceof BreakStatement) {\n      return convertStatement((BreakStatement) x);\n    } else if (x instanceof ContinueStatement) {\n      return convertStatement((ContinueStatement) x);\n    } else if (x instanceof DoStatement) {\n      return convertStatement((DoStatement) x);\n    } else if (x instanceof EmptyStatement) {\n      return convertStatement((EmptyStatement) x);\n    } else if (x instanceof ExplicitConstructorCall) {\n      return convertStatement((ExplicitConstructorCall) x);\n    } else if (x instanceof Expression) {\n      return convertStatement((Expression) x);\n    } else if (x instanceof ForStatement) {\n      return convertStatement((ForStatement) x);\n    } else if (x instanceof ForeachStatement) {\n      return convertStatement((ForeachStatement) x);\n    } else if (x instanceof IfStatement) {\n      return convertStatement((IfStatement) x);\n    } else if (x instanceof LabeledStatement) {\n      return convertStatement((LabeledStatement) x);\n    } else if (x instanceof LocalDeclaration) {\n      return convertStatement((LocalDeclaration) x);\n    } else if (x instanceof ReturnStatement) {\n      return convertStatement((ReturnStatement) x);\n    } else if (x instanceof SwitchStatement) {\n      return convertStatement((SwitchStatement) x);\n    } else if (x instanceof SynchronizedStatement) {\n      return convertStatement((SynchronizedStatement) x);\n    } else if (x instanceof ThrowStatement) {\n      return convertStatement((ThrowStatement) x);\n    } else if (x instanceof TryStatement) {\n      return convertStatement((TryStatement) x);\n    } else if (x instanceof TypeDeclaration) {\n      return convertStatement((TypeDeclaration) x);\n    } else if (x instanceof WhileStatement) {\n      return convertStatement((WhileStatement) x);\n    } else {\n      return null;\n    }\n\n  }","commit_id":"5a78a1f4fe85872a054738efb652d3148cf67438","url":"https://github.com/JetBrains/MPS"},{"original_method":"List<SNode> convertExpressionStatements(Statement[] statements) throws JavaParseException {\n    List<SNode> expressionStatements = new ArrayList<SNode>();\n    if (statements != null) {\n      for (int i = 0, n = statements.length; i < n; ++i) {\n        SNode statement = convertStatement(statements[i]);\n        if ((statement != null)) {\n          ListSequence.fromList(expressionStatements).addElement(SNodeOperations.cast(statement, \"jetbrains.mps.baseLanguage.structure.ExpressionStatement\"));\n        }\n      }\n    }\n    return expressionStatements;\n  }","id":82355,"modified_method":"List<SNode> convertExpressionStatements(Statement[] statements) throws JavaParseException {\n    List<SNode> expressionStatements = new ArrayList<SNode>();\n    if (statements != null) {\n      for (int i = 0, n = statements.length; i < n; ++i) {\n        SNode statement = convertStatementWrap(statements[i]);\n        if ((statement != null)) {\n          ListSequence.fromList(expressionStatements).addElement(SNodeOperations.cast(statement, \"jetbrains.mps.baseLanguage.structure.ExpressionStatement\"));\n        }\n      }\n    }\n    return expressionStatements;\n  }","commit_id":"5a78a1f4fe85872a054738efb652d3148cf67438","url":"https://github.com/JetBrains/MPS"},{"original_method":"SNode convertStatement(ForStatement x) throws JavaParseException {\n    SNode forStatement = SConceptOperations.createNewNode(\"jetbrains.mps.baseLanguage.structure.ForStatement\", null);\n    List<SNode> init = convertStatements(x.initializations);\n    SNode result = forStatement;\n    if (ListSequence.fromList(init).any(new IWhereFilter<SNode>() {\n      public boolean accept(SNode it) {\n        return SNodeOperations.isInstanceOf(it, \"jetbrains.mps.baseLanguage.structure.ExpressionStatement\");\n      }\n    })) {\n      // we don't support for ( a=5, b=6; ...) {} in baseLanguage, workaround here \n      result = _quotation_createNode_f46ocm_a0b0d0cb(init, forStatement);\n    } else if (!(init.isEmpty())) {\n      boolean first = true;\n      for (SNode statement : init) {\n        if (SNodeOperations.isInstanceOf(statement, \"jetbrains.mps.baseLanguage.structure.LocalVariableDeclarationStatement\")) {\n          SNode lvds = SNodeOperations.cast(statement, \"jetbrains.mps.baseLanguage.structure.LocalVariableDeclarationStatement\");\n          SNode variableDeclaration = SLinkOperations.getTarget(lvds, \"localVariableDeclaration\", true);\n          if (first) {\n            SLinkOperations.setTarget(forStatement, \"variable\", variableDeclaration, true);\n            first = false;\n          } else {\n            SNode additionalForLoopVariable = SConceptOperations.createNewNode(\"jetbrains.mps.baseLanguage.structure.AdditionalForLoopVariable\", null);\n            SPropertyOperations.set(additionalForLoopVariable, \"name\", SPropertyOperations.getString(variableDeclaration, \"name\"));\n            SNode inititalizer = SLinkOperations.getTarget(variableDeclaration, \"initializer\", true);\n            if ((inititalizer != null)) {\n              SLinkOperations.setTarget(additionalForLoopVariable, \"initializer\", inititalizer, true);\n            }\n            ListSequence.fromList(SLinkOperations.getTargets(forStatement, \"additionalVar\", true)).addElement(additionalForLoopVariable);\n          }\n        }\n      }\n    }\n    SNode expr = convertExpressionWrap(x.condition);\n    SLinkOperations.setTarget(forStatement, \"condition\", expr, true);\n    List<SNode> incr = convertExpressionStatements(x.increments);\n    if (!(incr.isEmpty())) {\n      for (SNode expressionStatement : incr) {\n        SNode expression = SLinkOperations.getTarget(expressionStatement, \"expression\", true);\n        SNodeOperations.detachNode(expression);\n        ListSequence.fromList(SLinkOperations.getTargets(forStatement, \"iteration\", true)).addElement(expression);\n      }\n    }\n    SNode loopBody = convertStatement(x.action);\n    SNode body = getStatementListFromStatement(loopBody, x.action);\n    SLinkOperations.setTarget(forStatement, \"body\", body, true);\n    return result;\n  }","id":82356,"modified_method":"SNode convertStatement(ForStatement x) throws JavaParseException {\n    SNode forStatement = SConceptOperations.createNewNode(\"jetbrains.mps.baseLanguage.structure.ForStatement\", null);\n    List<SNode> init = convertStatements(x.initializations);\n    SNode result = forStatement;\n    if (ListSequence.fromList(init).any(new IWhereFilter<SNode>() {\n      public boolean accept(SNode it) {\n        return SNodeOperations.isInstanceOf(it, \"jetbrains.mps.baseLanguage.structure.ExpressionStatement\");\n      }\n    })) {\n      // we don't support for ( a=5, b=6; ...) {} in baseLanguage, workaround here \n      result = _quotation_createNode_f46ocm_a0b0d0db(init, forStatement);\n    } else if (!(init.isEmpty())) {\n      boolean first = true;\n      for (SNode statement : init) {\n        if (SNodeOperations.isInstanceOf(statement, \"jetbrains.mps.baseLanguage.structure.LocalVariableDeclarationStatement\")) {\n          SNode lvds = SNodeOperations.cast(statement, \"jetbrains.mps.baseLanguage.structure.LocalVariableDeclarationStatement\");\n          SNode variableDeclaration = SLinkOperations.getTarget(lvds, \"localVariableDeclaration\", true);\n          if (first) {\n            SLinkOperations.setTarget(forStatement, \"variable\", variableDeclaration, true);\n            first = false;\n          } else {\n            SNode additionalForLoopVariable = SConceptOperations.createNewNode(\"jetbrains.mps.baseLanguage.structure.AdditionalForLoopVariable\", null);\n            SPropertyOperations.set(additionalForLoopVariable, \"name\", SPropertyOperations.getString(variableDeclaration, \"name\"));\n            SNode inititalizer = SLinkOperations.getTarget(variableDeclaration, \"initializer\", true);\n            if ((inititalizer != null)) {\n              SLinkOperations.setTarget(additionalForLoopVariable, \"initializer\", inititalizer, true);\n            }\n            ListSequence.fromList(SLinkOperations.getTargets(forStatement, \"additionalVar\", true)).addElement(additionalForLoopVariable);\n          }\n        }\n      }\n    }\n    SNode expr = convertExpressionWrap(x.condition);\n    SLinkOperations.setTarget(forStatement, \"condition\", expr, true);\n    List<SNode> incr = convertExpressionStatements(x.increments);\n    if (!(incr.isEmpty())) {\n      for (SNode expressionStatement : incr) {\n        SNode expression = SLinkOperations.getTarget(expressionStatement, \"expression\", true);\n        SNodeOperations.detachNode(expression);\n        ListSequence.fromList(SLinkOperations.getTargets(forStatement, \"iteration\", true)).addElement(expression);\n      }\n    }\n    SNode loopBody = convertStatementWrap(x.action);\n    SNode body = getStatementListFromStatement(loopBody, x.action);\n    SLinkOperations.setTarget(forStatement, \"body\", body, true);\n    return result;\n  }","commit_id":"5a78a1f4fe85872a054738efb652d3148cf67438","url":"https://github.com/JetBrains/MPS"},{"original_method":"SNode convertStatement(ForeachStatement x) throws JavaParseException {\n    SNode result = SConceptOperations.createNewNode(\"jetbrains.mps.baseLanguage.structure.ForeachStatement\", null);\n    SNode action = convertStatement(x.action);\n    SNode body = getStatementListFromStatement(action, x.action);\n\n\n    SNode elementVar = SLinkOperations.getTarget(SNodeOperations.cast(convertStatement(x.elementVariable), \"jetbrains.mps.baseLanguage.structure.LocalVariableDeclarationStatement\"), \"localVariableDeclaration\", true);\n\n\n    SNode iterable = convertExpressionWrap(x.collection);\n    SLinkOperations.setTarget(result, \"iterable\", iterable, true);\n    SLinkOperations.setTarget(result, \"variable\", elementVar, true);\n    SLinkOperations.setTarget(result, \"body\", body, true);\n    return result;\n  }","id":82357,"modified_method":"SNode convertStatement(ForeachStatement x) throws JavaParseException {\n    SNode result = SConceptOperations.createNewNode(\"jetbrains.mps.baseLanguage.structure.ForeachStatement\", null);\n    SNode action = convertStatementWrap(x.action);\n    SNode body = getStatementListFromStatement(action, x.action);\n\n\n    SNode elementVar = SLinkOperations.getTarget(SNodeOperations.cast(convertStatement(x.elementVariable), \"jetbrains.mps.baseLanguage.structure.LocalVariableDeclarationStatement\"), \"localVariableDeclaration\", true);\n\n\n    SNode iterable = convertExpressionWrap(x.collection);\n    SLinkOperations.setTarget(result, \"iterable\", iterable, true);\n    SLinkOperations.setTarget(result, \"variable\", elementVar, true);\n    SLinkOperations.setTarget(result, \"body\", body, true);\n    return result;\n  }","commit_id":"5a78a1f4fe85872a054738efb652d3148cf67438","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static SNode _quotation_createNode_f46ocm_a0b0d0cb(Object parameter_1, Object parameter_2) {\n    SNode quotedNode_3 = null;\n    SNode quotedNode_4 = null;\n    SNode quotedNode_5 = null;\n    SNode quotedNode_6 = null;\n    SNode quotedNode_7 = null;\n    SNode quotedNode_8 = null;\n    quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.BlockStatement\", null, null, GlobalScope.getInstance(), false);\n    quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.StatementList\", null, null, GlobalScope.getInstance(), false);\n    quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.SingleLineComment\", null, null, GlobalScope.getInstance(), false);\n    quotedNode_8 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.TextCommentPart\", null, null, GlobalScope.getInstance(), false);\n    SNodeAccessUtil.setProperty(quotedNode_8, \"text\", \"converted:  for ( expr; ...) {}  ->  { expr; for ( ; ...) {} }\");\n    quotedNode_5.addChild(\"commentPart\", quotedNode_8);\n    quotedNode_4.addChild(\"statement\", quotedNode_5);\n    {\n      List<SNode> nodes = (List<SNode>) parameter_1;\n      for (SNode child : nodes) {\n        quotedNode_4.addChild(\"statement\", HUtil.copyIfNecessary(child));\n      }\n    }\n    quotedNode_7 = (SNode) parameter_2;\n    if (quotedNode_7 != null) {\n      quotedNode_4.addChild(\"statement\", HUtil.copyIfNecessary(quotedNode_7));\n    }\n    quotedNode_3.addChild(\"statements\", quotedNode_4);\n    return quotedNode_3;\n  }","id":82358,"modified_method":"private static SNode _quotation_createNode_f46ocm_a0b0d0db(Object parameter_1, Object parameter_2) {\n    SNode quotedNode_3 = null;\n    SNode quotedNode_4 = null;\n    SNode quotedNode_5 = null;\n    SNode quotedNode_6 = null;\n    SNode quotedNode_7 = null;\n    SNode quotedNode_8 = null;\n    quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.BlockStatement\", null, null, GlobalScope.getInstance(), false);\n    quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.StatementList\", null, null, GlobalScope.getInstance(), false);\n    quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.SingleLineComment\", null, null, GlobalScope.getInstance(), false);\n    quotedNode_8 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.TextCommentPart\", null, null, GlobalScope.getInstance(), false);\n    SNodeAccessUtil.setProperty(quotedNode_8, \"text\", \"converted:  for ( expr; ...) {}  ->  { expr; for ( ; ...) {} }\");\n    quotedNode_5.addChild(\"commentPart\", quotedNode_8);\n    quotedNode_4.addChild(\"statement\", quotedNode_5);\n    {\n      List<SNode> nodes = (List<SNode>) parameter_1;\n      for (SNode child : nodes) {\n        quotedNode_4.addChild(\"statement\", HUtil.copyIfNecessary(child));\n      }\n    }\n    quotedNode_7 = (SNode) parameter_2;\n    if (quotedNode_7 != null) {\n      quotedNode_4.addChild(\"statement\", HUtil.copyIfNecessary(quotedNode_7));\n    }\n    quotedNode_3.addChild(\"statements\", quotedNode_4);\n    return quotedNode_3;\n  }","commit_id":"5a78a1f4fe85872a054738efb652d3148cf67438","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static SNode _quotation_createNode_f46ocm_a0a1a0zc(Object parameter_1) {\n    SNode quotedNode_2 = null;\n    quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.StringLiteral\", null, null, GlobalScope.getInstance(), false);\n    SNodeAccessUtil.setProperty(quotedNode_2, \"value\", (String) parameter_1);\n    return quotedNode_2;\n  }","id":82359,"modified_method":"private static SNode _quotation_createNode_f46ocm_a0a1a0ad(Object parameter_1) {\n    SNode quotedNode_2 = null;\n    quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.StringLiteral\", null, null, GlobalScope.getInstance(), false);\n    SNodeAccessUtil.setProperty(quotedNode_2, \"value\", (String) parameter_1);\n    return quotedNode_2;\n  }","commit_id":"5a78a1f4fe85872a054738efb652d3148cf67438","url":"https://github.com/JetBrains/MPS"},{"original_method":"SNode convertExpression(Literal x) {\n    if (x instanceof NullLiteral) {\n      return convertExpression((NullLiteral) x);\n    } else {\n      x.computeConstant();\n      if (x.constant == null) {\n        return null;\n      }\n      if (x.constant != Constant.NotAConstant) {\n        return SNodeOperations.cast(dispatchRefl(\"convertConstant\", x.constant), \"jetbrains.mps.baseLanguage.structure.Expression\");\n      } else if (x instanceof NullLiteral) {\n        return SConceptOperations.createNewNode(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null);\n      } else {\n        // import token as string constant even if it was an error in literal \n        return _quotation_createNode_f46ocm_a1a0c0n(NameUtil.escapeString(new String(((Literal) x).source())));\n      }\n    }\n\n  }","id":82360,"modified_method":"SNode convertExpression(Literal x) {\n    if (x instanceof NullLiteral) {\n      return convertExpression((NullLiteral) x);\n    } else {\n      x.computeConstant();\n      if (x.constant == null) {\n        return null;\n      }\n      if (x.constant != Constant.NotAConstant) {\n        return SNodeOperations.cast(dispatchRefl(\"convertConstant\", x.constant), \"jetbrains.mps.baseLanguage.structure.Expression\");\n      } else if (x instanceof NullLiteral) {\n        return SConceptOperations.createNewNode(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null);\n      } else {\n        // import token as string constant even if it was an error in literal \n        return _quotation_createNode_f46ocm_a1a0c0o(NameUtil.escapeString(new String(((Literal) x).source())));\n      }\n    }\n\n  }","commit_id":"5a78a1f4fe85872a054738efb652d3148cf67438","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static SNode _quotation_createNode_f46ocm_a0a0a77() {\n    SNode quotedNode_1 = null;\n    quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.BooleanConstant\", null, null, GlobalScope.getInstance(), false);\n    SNodeAccessUtil.setProperty(quotedNode_1, \"value\", \"true\");\n    return quotedNode_1;\n  }","id":82361,"modified_method":"private static SNode _quotation_createNode_f46ocm_a0a0a87() {\n    SNode quotedNode_1 = null;\n    quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.BooleanConstant\", null, null, GlobalScope.getInstance(), false);\n    SNodeAccessUtil.setProperty(quotedNode_1, \"value\", \"true\");\n    return quotedNode_1;\n  }","commit_id":"5a78a1f4fe85872a054738efb652d3148cf67438","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static SNode _quotation_createNode_f46ocm_a1a4a0zc() {\n    SNode quotedNode_1 = null;\n    quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.StringLiteral\", null, null, GlobalScope.getInstance(), false);\n    SNodeAccessUtil.setProperty(quotedNode_1, \"value\", \"NOT SUPPORTED YET\");\n    return quotedNode_1;\n  }","id":82362,"modified_method":"private static SNode _quotation_createNode_f46ocm_a1a4a0ad() {\n    SNode quotedNode_1 = null;\n    quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.StringLiteral\", null, null, GlobalScope.getInstance(), false);\n    SNodeAccessUtil.setProperty(quotedNode_1, \"value\", \"NOT SUPPORTED YET\");\n    return quotedNode_1;\n  }","commit_id":"5a78a1f4fe85872a054738efb652d3148cf67438","url":"https://github.com/JetBrains/MPS"},{"original_method":"SNode convertStatement(SwitchStatement x) throws JavaParseException {\n    SNode expression = convertExpressionWrap(x.expression);\n    SNode result = SConceptOperations.createNewNode(\"jetbrains.mps.baseLanguage.structure.SwitchStatement\", null);\n    SLinkOperations.setTarget(result, \"expression\", expression, true);\n    SLinkOperations.setTarget(result, \"defaultBlock\", SConceptOperations.createNewNode(\"jetbrains.mps.baseLanguage.structure.StatementList\", null), true);\n    // defaultCase is not set for me. Maybe eclipse sets it after resolving work \n    // <node> \n    if (x.statements != null) {\n      SNode currentSwitchCase = null;\n      for (Statement stmt : x.statements) {\n        if (stmt instanceof CaseStatement) {\n          // advance end of previous case block \n          if ((currentSwitchCase != null)) {\n            getBlock(currentSwitchCase).setEndPos(stmt.sourceStart);\n          }\n          CaseStatement caseStatement = (CaseStatement) stmt;\n          if (caseStatement.constantExpression == null) {\n            currentSwitchCase = SLinkOperations.getTarget(result, \"defaultBlock\", true);\n            addBlock(SLinkOperations.getTarget(result, \"defaultBlock\", true), caseStatement.sourceStart, caseStatement.sourceEnd);\n          } else {\n            SNode switchCase = convertCaseStatement((CaseStatement) stmt);\n            if ((switchCase != null)) {\n              ListSequence.fromList(SLinkOperations.getTargets(result, \"case\", true)).addElement(switchCase);\n            }\n            currentSwitchCase = ((switchCase == null) ?\n              null :\n              SLinkOperations.getTarget(switchCase, \"body\", true)\n            );\n          }\n        } else\n        if ((currentSwitchCase != null)) {\n          // advance end of case block \n          getBlock(currentSwitchCase).setEndPos(stmt.sourceEnd);\n          ListSequence.fromList(SLinkOperations.getTargets(currentSwitchCase, \"statement\", true)).addElement(convertStatement(stmt));\n        }\n      }\n      // adjust end of last case block up to the end of switch statement \n      if ((currentSwitchCase != null)) {\n        getBlock(currentSwitchCase).setEndPos(x.sourceEnd);\n      }\n    }\n    return result;\n  }","id":82363,"modified_method":"SNode convertStatement(SwitchStatement x) throws JavaParseException {\n    SNode expression = convertExpressionWrap(x.expression);\n    SNode result = SConceptOperations.createNewNode(\"jetbrains.mps.baseLanguage.structure.SwitchStatement\", null);\n    SLinkOperations.setTarget(result, \"expression\", expression, true);\n    SLinkOperations.setTarget(result, \"defaultBlock\", SConceptOperations.createNewNode(\"jetbrains.mps.baseLanguage.structure.StatementList\", null), true);\n    // defaultCase is not set for me. Maybe eclipse sets it after resolving work \n    // <node> \n    if (x.statements != null) {\n      SNode currentSwitchCase = null;\n      for (Statement stmt : x.statements) {\n        if (stmt instanceof CaseStatement) {\n          // advance end of previous case block \n          if ((currentSwitchCase != null)) {\n            getBlock(currentSwitchCase).setEndPos(stmt.sourceStart);\n          }\n          CaseStatement caseStatement = (CaseStatement) stmt;\n          if (caseStatement.constantExpression == null) {\n            currentSwitchCase = SLinkOperations.getTarget(result, \"defaultBlock\", true);\n            addBlock(SLinkOperations.getTarget(result, \"defaultBlock\", true), caseStatement.sourceStart, caseStatement.sourceEnd);\n          } else {\n            SNode switchCase = convertCaseStatement((CaseStatement) stmt);\n            if ((switchCase != null)) {\n              ListSequence.fromList(SLinkOperations.getTargets(result, \"case\", true)).addElement(switchCase);\n            }\n            currentSwitchCase = ((switchCase == null) ?\n              null :\n              SLinkOperations.getTarget(switchCase, \"body\", true)\n            );\n          }\n        } else\n        if ((currentSwitchCase != null)) {\n          // advance end of case block \n          getBlock(currentSwitchCase).setEndPos(stmt.sourceEnd);\n          ListSequence.fromList(SLinkOperations.getTargets(currentSwitchCase, \"statement\", true)).addElement(convertStatementWrap(stmt));\n        }\n      }\n      // adjust end of last case block up to the end of switch statement \n      if ((currentSwitchCase != null)) {\n        getBlock(currentSwitchCase).setEndPos(x.sourceEnd);\n      }\n    }\n    return result;\n  }","commit_id":"5a78a1f4fe85872a054738efb652d3148cf67438","url":"https://github.com/JetBrains/MPS"},{"original_method":"public List<SNode> convertStatements(Statement[] ss) throws JavaParseException {\n    List<SNode> result = new ArrayList<SNode>();\n    if (ss != null) {\n      for (Statement stmt : ss) {\n        SNode statement = convertStatement(stmt);\n        if (statement != null) {\n          result.add(statement);\n        }\n      }\n    }\n    return result;\n  }","id":82364,"modified_method":"public List<SNode> convertStatements(Statement[] ss) throws JavaParseException {\n    List<SNode> result = new ArrayList<SNode>();\n    if (ss != null) {\n      for (Statement stmt : ss) {\n        SNode statement = convertStatementWrap(stmt);\n        if (statement != null) {\n          result.add(statement);\n        }\n      }\n    }\n    return result;\n  }","commit_id":"5a78a1f4fe85872a054738efb652d3148cf67438","url":"https://github.com/JetBrains/MPS"},{"original_method":"SNode convertStatement(LabeledStatement x) throws JavaParseException {\n    SNode statement = convertStatement(x.statement);\n    if ((statement == null)) {\n      return null;\n    }\n    if (SNodeOperations.isInstanceOf(statement, \"jetbrains.mps.baseLanguage.structure.AbstractLoopStatement\")) {\n      SNode loopStatement = SNodeOperations.cast(statement, \"jetbrains.mps.baseLanguage.structure.AbstractLoopStatement\");\n      SPropertyOperations.set(loopStatement, \"label\", new String(x.label));\n    } else\n    if (SNodeOperations.isInstanceOf(statement, \"jetbrains.mps.baseLanguage.structure.SwitchStatement\")) {\n      SNode switchStatement = SNodeOperations.cast(statement, \"jetbrains.mps.baseLanguage.structure.SwitchStatement\");\n      SPropertyOperations.set(switchStatement, \"label\", new String(x.label));\n    }\n    return statement;\n  }","id":82365,"modified_method":"SNode convertStatement(LabeledStatement x) throws JavaParseException {\n    SNode statement = convertStatementWrap(x.statement);\n    if ((statement == null)) {\n      return null;\n    }\n    if (SNodeOperations.isInstanceOf(statement, \"jetbrains.mps.baseLanguage.structure.AbstractLoopStatement\")) {\n      SNode loopStatement = SNodeOperations.cast(statement, \"jetbrains.mps.baseLanguage.structure.AbstractLoopStatement\");\n      SPropertyOperations.set(loopStatement, \"label\", new String(x.label));\n    } else\n    if (SNodeOperations.isInstanceOf(statement, \"jetbrains.mps.baseLanguage.structure.SwitchStatement\")) {\n      SNode switchStatement = SNodeOperations.cast(statement, \"jetbrains.mps.baseLanguage.structure.SwitchStatement\");\n      SPropertyOperations.set(switchStatement, \"label\", new String(x.label));\n    }\n    return statement;\n  }","commit_id":"5a78a1f4fe85872a054738efb652d3148cf67438","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode convertExpression(Expression x) throws JavaParseException {\n    if (x instanceof AllocationExpression) {\n      return convertExpression((AllocationExpression) x);\n    } else if (x instanceof ArrayAllocationExpression) {\n      return convertExpression((ArrayAllocationExpression) x);\n    } else if (x instanceof ArrayInitializer) {\n      return convertExpression((ArrayInitializer) x);\n    } else if (x instanceof ArrayReference) {\n      return convertExpression((ArrayReference) x);\n    } else if (x instanceof Assignment) {\n      return convertExpression((Assignment) x);\n    } else if (x instanceof BinaryExpression) {\n      return convertExpression((BinaryExpression) x);\n    } else if (x instanceof CastExpression) {\n      return convertExpression((CastExpression) x);\n    } else if (x instanceof ClassLiteralAccess) {\n      return convertExpression((ClassLiteralAccess) x);\n    } else if (x instanceof ConditionalExpression) {\n      return convertExpression((ConditionalExpression) x);\n    } else if (x instanceof FieldReference) {\n      return convertExpression((FieldReference) x);\n    } else if (x instanceof InstanceOfExpression) {\n      return convertExpression((InstanceOfExpression) x);\n    } else if (x instanceof Literal) {\n      return convertExpression((Literal) x);\n    } else if (x instanceof MessageSend) {\n      return convertExpression((MessageSend) x);\n    } else if (x instanceof QualifiedNameReference) {\n      return convertExpression((QualifiedNameReference) x);\n    } else if (x instanceof SingleNameReference) {\n      return convertExpression((SingleNameReference) x);\n    } else if (x instanceof ThisReference) {\n      return convertExpression((ThisReference) x);\n    } else if (x instanceof UnaryExpression) {\n      return convertExpression((UnaryExpression) x);\n    } else {\n      System.out.println(\"Unknown expression: \" + x.getClass().getName());\n      return null;\n    }\n\n  }","id":82366,"modified_method":"public SNode convertExpression(Expression x) throws JavaParseException {\n    if (x instanceof AllocationExpression) {\n      return convertExpression((AllocationExpression) x);\n    } else if (x instanceof ArrayAllocationExpression) {\n      return convertExpression((ArrayAllocationExpression) x);\n    } else if (x instanceof ArrayInitializer) {\n      return convertExpression((ArrayInitializer) x);\n    } else if (x instanceof ArrayReference) {\n      return convertExpression((ArrayReference) x);\n    } else if (x instanceof Assignment) {\n      return convertExpression((Assignment) x);\n    } else if (x instanceof BinaryExpression) {\n      return convertExpression((BinaryExpression) x);\n    } else if (x instanceof CastExpression) {\n      return convertExpression((CastExpression) x);\n    } else if (x instanceof ClassLiteralAccess) {\n      return convertExpression((ClassLiteralAccess) x);\n    } else if (x instanceof ConditionalExpression) {\n      return convertExpression((ConditionalExpression) x);\n    } else if (x instanceof FieldReference) {\n      return convertExpression((FieldReference) x);\n    } else if (x instanceof InstanceOfExpression) {\n      return convertExpression((InstanceOfExpression) x);\n    } else if (x instanceof Literal) {\n      return convertExpression((Literal) x);\n    } else if (x instanceof MessageSend) {\n      return convertExpression((MessageSend) x);\n    } else if (x instanceof QualifiedNameReference) {\n      return convertExpression((QualifiedNameReference) x);\n    } else if (x instanceof SingleNameReference) {\n      return convertExpression((SingleNameReference) x);\n    } else if (x instanceof ThisReference) {\n      return convertExpression((ThisReference) x);\n    } else if (x instanceof UnaryExpression) {\n      return convertExpression((UnaryExpression) x);\n    } else {\n      if (x != null) {\n        LOG.error(\"Unknown expression type: \" + x.getClass().getName());\n      }\n      return null;\n    }\n\n  }","commit_id":"5a78a1f4fe85872a054738efb652d3148cf67438","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static SNode _quotation_createNode_f46ocm_a0a0a0zc() {\n    SNode quotedNode_1 = null;\n    quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.BooleanConstant\", null, null, GlobalScope.getInstance(), false);\n    return quotedNode_1;\n  }","id":82367,"modified_method":"private static SNode _quotation_createNode_f46ocm_a0a0a0ad() {\n    SNode quotedNode_1 = null;\n    quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.BooleanConstant\", null, null, GlobalScope.getInstance(), false);\n    return quotedNode_1;\n  }","commit_id":"5a78a1f4fe85872a054738efb652d3148cf67438","url":"https://github.com/JetBrains/MPS"},{"original_method":"SNode convertStatement(IfStatement x) throws JavaParseException {\n    SNode result = SConceptOperations.createNewNode(\"jetbrains.mps.baseLanguage.structure.IfStatement\", null);\n    SLinkOperations.setTarget(result, \"condition\", convertExpressionWrap(x.condition), true);\n    SNode thenStmt = convertStatement(x.thenStatement);\n    SLinkOperations.setTarget(result, \"ifFalseStatement\", convertStatement(x.elseStatement), true);\n    SNode ifTrue = getStatementListFromStatement(thenStmt, x.thenStatement);\n    // adjust start of the \"if\" statement list block to get comments from \"if (...)\" there \n    getBlock(ifTrue).setStartPos(x.sourceStart);\n    // replacing the ifTrue node \n    // <node> \n    SLinkOperations.setTarget(result, \"ifTrue\", ifTrue, true);\n    return result;\n  }","id":82368,"modified_method":"SNode convertStatement(IfStatement x) throws JavaParseException {\n    SNode result = SConceptOperations.createNewNode(\"jetbrains.mps.baseLanguage.structure.IfStatement\", null);\n    SLinkOperations.setTarget(result, \"condition\", convertExpressionWrap(x.condition), true);\n    SNode thenStmt = convertStatementWrap(x.thenStatement);\n    SLinkOperations.setTarget(result, \"ifFalseStatement\", convertStatementWrap(x.elseStatement), true);\n    SNode ifTrue = getStatementListFromStatement(thenStmt, x.thenStatement);\n    // adjust start of the \"if\" statement list block to get comments from \"if (...)\" there \n    getBlock(ifTrue).setStartPos(x.sourceStart);\n    // replacing the ifTrue node \n    // <node> \n    SLinkOperations.setTarget(result, \"ifTrue\", ifTrue, true);\n    return result;\n  }","commit_id":"5a78a1f4fe85872a054738efb652d3148cf67438","url":"https://github.com/JetBrains/MPS"},{"original_method":"SNode convertStatement(WhileStatement x) throws JavaParseException {\n    SNode loopTest = convertExpressionWrap(x.condition);\n    SNode loopBody = convertStatement(x.action);\n    SNode result = SConceptOperations.createNewNode(\"jetbrains.mps.baseLanguage.structure.WhileStatement\", null);\n    SLinkOperations.setTarget(result, \"condition\", loopTest, true);\n    SLinkOperations.setTarget(result, \"body\", getStatementListFromStatement(loopBody, x.action), true);\n    return result;\n  }","id":82369,"modified_method":"SNode convertStatement(WhileStatement x) throws JavaParseException {\n    SNode loopTest = convertExpressionWrap(x.condition);\n    SNode loopBody = convertStatementWrap(x.action);\n    SNode result = SConceptOperations.createNewNode(\"jetbrains.mps.baseLanguage.structure.WhileStatement\", null);\n    SLinkOperations.setTarget(result, \"condition\", loopTest, true);\n    SLinkOperations.setTarget(result, \"body\", getStatementListFromStatement(loopBody, x.action), true);\n    return result;\n  }","commit_id":"5a78a1f4fe85872a054738efb652d3148cf67438","url":"https://github.com/JetBrains/MPS"},{"original_method":"/**\n   * Will go away in favor of all convertExpression(SomeParticularExp) methods\n   */\n  public SNode convertExpressionAdHoc(Expression exp) {\n    if (exp instanceof TrueLiteral) {\n      return _quotation_createNode_f46ocm_a0a0a77();\n    } else if (exp instanceof FalseLiteral) {\n      return _quotation_createNode_f46ocm_a0a0a0zc();\n    } else if (exp instanceof StringLiteral) {\n      return _quotation_createNode_f46ocm_a0a1a0zc(new String(((StringLiteral) exp).source()));\n    } else if (exp instanceof ArrayInitializer) {\n      SNode arr = SConceptOperations.createNewNode(\"jetbrains.mps.baseLanguage.structure.ArrayLiteral\", null);\n      for (Expression e : ((ArrayInitializer) exp).expressions) {\n        ListSequence.fromList(SLinkOperations.getTargets(arr, \"item\", true)).addElement(convertExpressionAdHoc(e));\n      }\n      return arr;\n    } else if (exp instanceof QualifiedNameReference) {\n\n      // FIXME HACK it can be static field ref as well, and maybe something else \n      SNode enumRef = SConceptOperations.createNewNode(\"jetbrains.mps.baseLanguage.structure.EnumConstantReference\", null);\n      char[][] tokens = ((QualifiedNameReference) exp).tokens;\n\n      String enumName = new String(tokens[0]);\n      for (int i = 1; i < tokens.length - 1; i++) {\n        enumName = enumName + \".\" + new String(tokens[i]);\n      }\n\n      String enumConstName = new String(tokens[tokens.length - 1]);\n\n      SReference enumClRef;\n      if (enumName.contains(\".\")) {\n        enumClRef = myTypeResolver.resolveQualifiedClassName(enumName, enumRef, \"enumClass\");\n      } else {\n        enumClRef = myTypeResolver.resolveShortClassName(enumName, enumRef, \"enumClass\");\n      }\n      SReference enumConstRef = new DynamicReference(\"enumConstantDeclaration\", enumRef, null, enumConstName);\n\n      enumRef.addReference(enumClRef);\n      enumRef.addReference(enumConstRef);\n      return enumRef;\n\n    } else if (exp instanceof SingleNameReference) {\n      // FIXME \n      return _quotation_createNode_f46ocm_a1a4a0zc();\n    } else {\n      throw new RuntimeException(\"This kind of expression is not supported yet: \" + exp.getClass().getName());\n    }\n\n  }","id":82370,"modified_method":"/**\n   * Will go away in favor of all convertExpression(SomeParticularExp) methods\n   */\n  public SNode convertExpressionAdHoc(Expression exp) {\n    if (exp instanceof TrueLiteral) {\n      return _quotation_createNode_f46ocm_a0a0a87();\n    } else if (exp instanceof FalseLiteral) {\n      return _quotation_createNode_f46ocm_a0a0a0ad();\n    } else if (exp instanceof StringLiteral) {\n      return _quotation_createNode_f46ocm_a0a1a0ad(new String(((StringLiteral) exp).source()));\n    } else if (exp instanceof ArrayInitializer) {\n      SNode arr = SConceptOperations.createNewNode(\"jetbrains.mps.baseLanguage.structure.ArrayLiteral\", null);\n      for (Expression e : ((ArrayInitializer) exp).expressions) {\n        ListSequence.fromList(SLinkOperations.getTargets(arr, \"item\", true)).addElement(convertExpressionAdHoc(e));\n      }\n      return arr;\n    } else if (exp instanceof QualifiedNameReference) {\n\n      // FIXME HACK it can be static field ref as well, and maybe something else \n      SNode enumRef = SConceptOperations.createNewNode(\"jetbrains.mps.baseLanguage.structure.EnumConstantReference\", null);\n      char[][] tokens = ((QualifiedNameReference) exp).tokens;\n\n      String enumName = new String(tokens[0]);\n      for (int i = 1; i < tokens.length - 1; i++) {\n        enumName = enumName + \".\" + new String(tokens[i]);\n      }\n\n      String enumConstName = new String(tokens[tokens.length - 1]);\n\n      SReference enumClRef;\n      if (enumName.contains(\".\")) {\n        enumClRef = myTypeResolver.resolveQualifiedClassName(enumName, enumRef, \"enumClass\");\n      } else {\n        enumClRef = myTypeResolver.resolveShortClassName(enumName, enumRef, \"enumClass\");\n      }\n      SReference enumConstRef = new DynamicReference(\"enumConstantDeclaration\", enumRef, null, enumConstName);\n\n      enumRef.addReference(enumClRef);\n      enumRef.addReference(enumConstRef);\n      return enumRef;\n\n    } else if (exp instanceof SingleNameReference) {\n      // FIXME \n      return _quotation_createNode_f46ocm_a1a4a0ad();\n    } else {\n      throw new RuntimeException(\"This kind of expression is not supported yet: \" + exp.getClass().getName());\n    }\n\n  }","commit_id":"5a78a1f4fe85872a054738efb652d3148cf67438","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static SNode _quotation_createNode_f46ocm_a1a0c0n(Object parameter_1) {\n    SNode quotedNode_2 = null;\n    quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.StringLiteral\", null, null, GlobalScope.getInstance(), false);\n    SNodeAccessUtil.setProperty(quotedNode_2, \"value\", (String) parameter_1);\n    return quotedNode_2;\n  }","id":82371,"modified_method":"private static SNode _quotation_createNode_f46ocm_a1a0c0o(Object parameter_1) {\n    SNode quotedNode_2 = null;\n    quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.StringLiteral\", null, null, GlobalScope.getInstance(), false);\n    SNodeAccessUtil.setProperty(quotedNode_2, \"value\", (String) parameter_1);\n    return quotedNode_2;\n  }","commit_id":"5a78a1f4fe85872a054738efb652d3148cf67438","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static synchronized void pushDRBuffer(\n            int partitionId,\n            long startSequenceNumber,\n            long lastSequenceNumber,\n            long lastUniqueId,\n            ByteBuffer buf) {\n        if (logDebug) {\n            System.out.println(\"Received DR buffer size \" + buf.remaining());\n            AtomicLong haveOpenTransaction = haveOpenTransactionLocal.get();\n            buf.order(ByteOrder.LITTLE_ENDIAN);\n            //Magic header space for Java for implementing zero copy stuff\n            buf.position(8);\n            while (buf.hasRemaining()) {\n                int startPosition = buf.position();\n                byte version = buf.get();\n                int type = buf.get();\n\n                int checksum = 0;\n                if (version != 0) System.out.println(\"Remaining is \" + buf.remaining());\n\n                switch (DRRecordType.valueOf(type)) {\n                case INSERT: {\n                    //Insert\n                    if (haveOpenTransaction.get() == -1) {\n                        System.out.println(\"Have insert but no open transaction\");\n                        System.exit(-1);\n                    }\n                    final long tableHandle = buf.getLong();\n                    final int lengthPrefix = buf.getInt();\n                    buf.position(buf.position() + lengthPrefix);\n                    checksum = buf.getInt();\n                    System.out.println(\"Version \" + version + \" type INSERT table handle \" + tableHandle + \" length \" + lengthPrefix + \" checksum \" + checksum);\n                    break;\n                }\n                case DELETE: {\n                    //Delete\n                    if (haveOpenTransaction.get() == -1) {\n                        System.out.println(\"Have insert but no open transaction\");\n                        System.exit(-1);\n                    }\n                    final long tableHandle = buf.getLong();\n                    final int lengthPrefix = buf.getInt();\n                    buf.position(buf.position() + lengthPrefix);\n                    checksum = buf.getInt();\n                    System.out.println(\"Version \" + version + \" type DELETE table handle \" + tableHandle + \" length \" + lengthPrefix + \" checksum \" + checksum);\n                    break;\n                }\n                case UPDATE:\n                    //Update\n                    //System.out.println(\"Version \" + version + \" type UPDATE \" + checksum \" + checksum);\n                    break;\n                case BEGIN_TXN: {\n                    //Begin txn\n                    final long txnId = buf.getLong();\n                    final long spHandle = buf.getLong();\n                    if (haveOpenTransaction.get() != -1) {\n                        System.out.println(\"Have open transaction txnid \" + txnId + \" spHandle \" + spHandle + \" but already open transaction\");\n                        System.exit(-1);\n                    }\n                    haveOpenTransaction.set(spHandle);\n                    checksum = buf.getInt();\n                    System.out.println(\"Version \" + version + \" type BEGIN_TXN \" + \" txnid \" + txnId + \" spHandle \" + spHandle + \" checksum \" + checksum);\n                    break;\n                }\n                case END_TXN: {\n                    //End txn\n                    final long spHandle = buf.getLong();\n                    if (haveOpenTransaction.get() == -1 ) {\n                        System.out.println(\"Have end transaction spHandle \" + spHandle + \" but no open transaction and its less then last committed \" + lastCommittedSpHandleTL.get().get());\n    //                    checksum = buf.getInt();\n    //                    break;\n                        System.exit(-1);\n                    }\n                    haveOpenTransaction.set(-1);\n                    lastCommittedSpHandleTL.get().set(spHandle);\n                    checksum = buf.getInt();\n                    System.out.println(\"Version \" + version + \" type END_TXN \" + \" spHandle \" + spHandle + \" checksum \" + checksum);\n                    break;\n                }\n                case TRUNCATE_TABLE: {\n                    final long tableHandle = buf.getLong();\n                    final byte tableNameBytes[] = new byte[buf.getInt()];\n                    buf.get(tableNameBytes);\n                    final String tableName = new String(tableNameBytes, Charsets.UTF_8);\n                    checksum = buf.getInt();\n                    System.out.println(\"Version \" + version + \" type TRUNCATE_TABLE table handle \" + tableHandle + \" table name \" + tableName);\n                    break;\n                }\n                }\n                int calculatedChecksum = DBBPool.getBufferCRC32C(buf, startPosition, buf.position() - startPosition - 4);\n                if (calculatedChecksum != checksum) {\n                    System.out.println(\"Checksum \" + calculatedChecksum + \" didn't match \" + checksum);\n                    System.exit(-1);\n                }\n\n            }\n        }\n\n        final PartitionDRGateway pdrg = gateways.get(partitionId);\n        if (pdrg == null) {\n            VoltDB.crashLocalVoltDB(\"No PRDG when there should be\", true, null);\n        }\n        pdrg.onBinaryDR(partitionId, startSequenceNumber, lastSequenceNumber, lastUniqueId, buf);\n    }","id":82372,"modified_method":"public static synchronized void pushDRBuffer(\n            int partitionId,\n            long startSequenceNumber,\n            long lastSequenceNumber,\n            long lastUniqueId,\n            ByteBuffer buf) {\n        if (log.isTraceEnabled()) {\n            log.trace(\"Received DR buffer size \" + buf.remaining());\n            AtomicLong haveOpenTransaction = haveOpenTransactionLocal.get();\n            buf.order(ByteOrder.LITTLE_ENDIAN);\n            //Magic header space for Java for implementing zero copy stuff\n            buf.position(8);\n            while (buf.hasRemaining()) {\n                int startPosition = buf.position();\n                byte version = buf.get();\n                int type = buf.get();\n\n                int checksum = 0;\n                if (version != 0) log.trace(\"Remaining is \" + buf.remaining());\n\n                switch (DRRecordType.valueOf(type)) {\n                case INSERT: {\n                    //Insert\n                    if (haveOpenTransaction.get() == -1) {\n                        log.error(\"Have insert but no open transaction\");\n                        break;\n                    }\n                    final long tableHandle = buf.getLong();\n                    final int lengthPrefix = buf.getInt();\n                    buf.position(buf.position() + lengthPrefix);\n                    checksum = buf.getInt();\n                    log.trace(\"Version \" + version + \" type INSERT table handle \" + tableHandle + \" length \" + lengthPrefix + \" checksum \" + checksum);\n                    break;\n                }\n                case DELETE: {\n                    //Delete\n                    if (haveOpenTransaction.get() == -1) {\n                        log.error(\"Have insert but no open transaction\");\n                        break;\n                    }\n                    final long tableHandle = buf.getLong();\n                    final int lengthPrefix = buf.getInt();\n                    buf.position(buf.position() + lengthPrefix);\n                    checksum = buf.getInt();\n                    log.trace(\"Version \" + version + \" type DELETE table handle \" + tableHandle + \" length \" + lengthPrefix + \" checksum \" + checksum);\n                    break;\n                }\n                case UPDATE:\n                    //Update\n                    //log.trace(\"Version \" + version + \" type UPDATE \" + checksum \" + checksum);\n                    break;\n                case BEGIN_TXN: {\n                    //Begin txn\n                    final long txnId = buf.getLong();\n                    final long spHandle = buf.getLong();\n                    if (haveOpenTransaction.get() != -1) {\n                        log.error(\"Have open transaction txnid \" + txnId + \" spHandle \" + spHandle + \" but already open transaction\");\n                        break;\n                    }\n                    haveOpenTransaction.set(spHandle);\n                    checksum = buf.getInt();\n                    log.trace(\"Version \" + version + \" type BEGIN_TXN \" + \" txnid \" + txnId + \" spHandle \" + spHandle + \" checksum \" + checksum);\n                    break;\n                }\n                case END_TXN: {\n                    //End txn\n                    final long spHandle = buf.getLong();\n                    if (haveOpenTransaction.get() == -1 ) {\n                        log.error(\"Have end transaction spHandle \" + spHandle + \" but no open transaction and its less then last committed \" + lastCommittedSpHandleTL.get().get());\n                        break;\n                    }\n                    haveOpenTransaction.set(-1);\n                    lastCommittedSpHandleTL.get().set(spHandle);\n                    checksum = buf.getInt();\n                    log.trace(\"Version \" + version + \" type END_TXN \" + \" spHandle \" + spHandle + \" checksum \" + checksum);\n                    break;\n                }\n                case TRUNCATE_TABLE: {\n                    final long tableHandle = buf.getLong();\n                    final byte tableNameBytes[] = new byte[buf.getInt()];\n                    buf.get(tableNameBytes);\n                    final String tableName = new String(tableNameBytes, Charsets.UTF_8);\n                    checksum = buf.getInt();\n                    log.trace(\"Version \" + version + \" type TRUNCATE_TABLE table handle \" + tableHandle + \" table name \" + tableName);\n                    break;\n                }\n                }\n                int calculatedChecksum = DBBPool.getBufferCRC32C(buf, startPosition, buf.position() - startPosition - 4);\n                if (calculatedChecksum != checksum) {\n                    log.error(\"Checksum \" + calculatedChecksum + \" didn't match \" + checksum);\n                    break;\n                }\n\n            }\n        }\n\n        final PartitionDRGateway pdrg = gateways.get(partitionId);\n        if (pdrg == null) {\n            VoltDB.crashLocalVoltDB(\"No PRDG when there should be\", true, null);\n        }\n        pdrg.onBinaryDR(partitionId, startSequenceNumber, lastSequenceNumber, lastUniqueId, buf);\n    }","commit_id":"ba5b8c5e1a009ddd4ba1ad8a0a2a7dd30a6d1e24","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public void setByte(long offset, byte value) {\n    rangeCheck(offset, OByteSerializer.BYTE_SIZE);\n\n    directMemory.setByte(dataPointer + offset, value);\n  }","id":82373,"modified_method":"public void setByte(long offset, byte value) {\n    if (SAFE_MODE)\n      rangeCheck(offset, OByteSerializer.BYTE_SIZE);\n\n    directMemory.setByte(dataPointer + offset, value);\n  }","commit_id":"db406ae7a6a805e5d3f55b4e7ee389781465f60f","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public void setLong(long offset, long value) {\n    rangeCheck(offset, OLongSerializer.LONG_SIZE);\n\n    directMemory.setLong(dataPointer + offset, value);\n  }","id":82374,"modified_method":"public void setLong(long offset, long value) {\n    if (SAFE_MODE)\n      rangeCheck(offset, OLongSerializer.LONG_SIZE);\n\n    directMemory.setLong(dataPointer + offset, value);\n  }","commit_id":"db406ae7a6a805e5d3f55b4e7ee389781465f60f","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public void set(long offset, byte[] content, int arrayOffset, int length) {\n    rangeCheck(offset, length);\n\n    directMemory.set(dataPointer + offset, content, arrayOffset, length);\n  }","id":82375,"modified_method":"public void set(long offset, byte[] content, int arrayOffset, int length) {\n    if (SAFE_MODE)\n      rangeCheck(offset, length);\n\n    directMemory.set(dataPointer + offset, content, arrayOffset, length);\n  }","commit_id":"db406ae7a6a805e5d3f55b4e7ee389781465f60f","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public void get(long offset, byte[] array, int arrayOffset, int length) {\n    rangeCheck(offset, length);\n\n    directMemory.get(dataPointer + offset, array, arrayOffset, length);\n  }","id":82376,"modified_method":"public void get(long offset, byte[] array, int arrayOffset, int length) {\n    if (SAFE_MODE)\n      rangeCheck(offset, length);\n\n    directMemory.get(dataPointer + offset, array, arrayOffset, length);\n  }","commit_id":"db406ae7a6a805e5d3f55b4e7ee389781465f60f","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public void copyData(long srcOffset, ODirectMemoryPointer destPointer, long destOffset, long len) {\n    rangeCheck(srcOffset, len);\n    rangeCheck(destOffset, len);\n\n    directMemory.copyData(dataPointer + srcOffset, destPointer.getDataPointer() + destOffset, len);\n  }","id":82377,"modified_method":"public void copyData(long srcOffset, ODirectMemoryPointer destPointer, long destOffset, long len) {\n    if (SAFE_MODE) {\n      rangeCheck(srcOffset, len);\n      rangeCheck(destOffset, len);\n    }\n\n    directMemory.copyData(dataPointer + srcOffset, destPointer.getDataPointer() + destOffset, len);\n  }","commit_id":"db406ae7a6a805e5d3f55b4e7ee389781465f60f","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public byte getByte(long offset) {\n    rangeCheck(offset, OByteSerializer.BYTE_SIZE);\n\n    return directMemory.getByte(dataPointer + offset);\n  }","id":82378,"modified_method":"public byte getByte(long offset) {\n    if (SAFE_MODE)\n      rangeCheck(offset, OByteSerializer.BYTE_SIZE);\n\n    return directMemory.getByte(dataPointer + offset);\n  }","commit_id":"db406ae7a6a805e5d3f55b4e7ee389781465f60f","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public char getChar(long offset) {\n    rangeCheck(offset, OCharSerializer.CHAR_SIZE);\n\n    return directMemory.getChar(dataPointer + offset);\n  }","id":82379,"modified_method":"public char getChar(long offset) {\n    if (SAFE_MODE)\n      rangeCheck(offset, OCharSerializer.CHAR_SIZE);\n\n    return directMemory.getChar(dataPointer + offset);\n  }","commit_id":"db406ae7a6a805e5d3f55b4e7ee389781465f60f","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public byte[] get(long offset, int length) {\n    rangeCheck(offset, length);\n\n    return directMemory.get(dataPointer + offset, length);\n  }","id":82380,"modified_method":"public byte[] get(long offset, int length) {\n    if (SAFE_MODE)\n      rangeCheck(offset, length);\n\n    return directMemory.get(dataPointer + offset, length);\n  }","commit_id":"db406ae7a6a805e5d3f55b4e7ee389781465f60f","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public short getShort(long offset) {\n    rangeCheck(offset, OShortSerializer.SHORT_SIZE);\n\n    return directMemory.getShort(dataPointer + offset);\n  }","id":82381,"modified_method":"public short getShort(long offset) {\n    if (SAFE_MODE)\n      rangeCheck(offset, OShortSerializer.SHORT_SIZE);\n\n    return directMemory.getShort(dataPointer + offset);\n  }","commit_id":"db406ae7a6a805e5d3f55b4e7ee389781465f60f","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public long getLong(long offset) {\n    rangeCheck(offset, OLongSerializer.LONG_SIZE);\n\n    return directMemory.getLong(dataPointer + offset);\n  }","id":82382,"modified_method":"public long getLong(long offset) {\n    if (SAFE_MODE)\n      rangeCheck(offset, OLongSerializer.LONG_SIZE);\n\n    return directMemory.getLong(dataPointer + offset);\n  }","commit_id":"db406ae7a6a805e5d3f55b4e7ee389781465f60f","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public void setShort(long offset, short value) {\n    rangeCheck(offset, OShortSerializer.SHORT_SIZE);\n\n    directMemory.setShort(dataPointer + offset, value);\n  }","id":82383,"modified_method":"public void setShort(long offset, short value) {\n    if (SAFE_MODE)\n      rangeCheck(offset, OShortSerializer.SHORT_SIZE);\n\n    directMemory.setShort(dataPointer + offset, value);\n  }","commit_id":"db406ae7a6a805e5d3f55b4e7ee389781465f60f","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public void setInt(long offset, int value) {\n    rangeCheck(offset, OIntegerSerializer.INT_SIZE);\n\n    directMemory.setInt(dataPointer + offset, value);\n  }","id":82384,"modified_method":"public void setInt(long offset, int value) {\n    if (SAFE_MODE)\n      rangeCheck(offset, OIntegerSerializer.INT_SIZE);\n\n    directMemory.setInt(dataPointer + offset, value);\n  }","commit_id":"db406ae7a6a805e5d3f55b4e7ee389781465f60f","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public void setChar(long offset, char value) {\n    rangeCheck(offset, OCharSerializer.CHAR_SIZE);\n\n    directMemory.setChar(dataPointer + offset, value);\n  }","id":82385,"modified_method":"public void setChar(long offset, char value) {\n    if (SAFE_MODE)\n      rangeCheck(offset, OCharSerializer.CHAR_SIZE);\n\n    directMemory.setChar(dataPointer + offset, value);\n  }","commit_id":"db406ae7a6a805e5d3f55b4e7ee389781465f60f","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public int getInt(long offset) {\n    rangeCheck(offset, OIntegerSerializer.INT_SIZE);\n\n    return directMemory.getInt(dataPointer + offset);\n  }","id":82386,"modified_method":"public int getInt(long offset) {\n    if (SAFE_MODE)\n      rangeCheck(offset, OIntegerSerializer.INT_SIZE);\n\n    return directMemory.getInt(dataPointer + offset);\n  }","commit_id":"db406ae7a6a805e5d3f55b4e7ee389781465f60f","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public void set(long offset, byte[] content, int arrayOffset, int length) {\n    rangeCheck(offset, length);\n\n    directMemory.set(dataPointer + offset, content, arrayOffset, length);\n  }","id":82387,"modified_method":"public void set(long offset, byte[] content, int arrayOffset, int length) {\n    if (SAFE_MODE)\n      rangeCheck(offset, length);\n\n    directMemory.set(dataPointer + offset, content, arrayOffset, length);\n  }","commit_id":"2b46d1bd48befde999d80f2f5fc44a2971ffa8af","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public void copyData(long srcOffset, ODirectMemoryPointer destPointer, long destOffset, long len) {\n    rangeCheck(srcOffset, len);\n    rangeCheck(destOffset, len);\n\n    directMemory.copyData(dataPointer + srcOffset, destPointer.getDataPointer() + destOffset, len);\n  }","id":82388,"modified_method":"public void copyData(long srcOffset, ODirectMemoryPointer destPointer, long destOffset, long len) {\n    if (SAFE_MODE) {\n      rangeCheck(srcOffset, len);\n      rangeCheck(destOffset, len);\n    }\n\n    directMemory.copyData(dataPointer + srcOffset, destPointer.getDataPointer() + destOffset, len);\n  }","commit_id":"2b46d1bd48befde999d80f2f5fc44a2971ffa8af","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public long getLong(long offset) {\n    rangeCheck(offset, OLongSerializer.LONG_SIZE);\n\n    return directMemory.getLong(dataPointer + offset);\n  }","id":82389,"modified_method":"public long getLong(long offset) {\n    if (SAFE_MODE)\n      rangeCheck(offset, OLongSerializer.LONG_SIZE);\n\n    return directMemory.getLong(dataPointer + offset);\n  }","commit_id":"2b46d1bd48befde999d80f2f5fc44a2971ffa8af","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public short getShort(long offset) {\n    rangeCheck(offset, OShortSerializer.SHORT_SIZE);\n\n    return directMemory.getShort(dataPointer + offset);\n  }","id":82390,"modified_method":"public short getShort(long offset) {\n    if (SAFE_MODE)\n      rangeCheck(offset, OShortSerializer.SHORT_SIZE);\n\n    return directMemory.getShort(dataPointer + offset);\n  }","commit_id":"2b46d1bd48befde999d80f2f5fc44a2971ffa8af","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public void setByte(long offset, byte value) {\n    rangeCheck(offset, OByteSerializer.BYTE_SIZE);\n\n    directMemory.setByte(dataPointer + offset, value);\n  }","id":82391,"modified_method":"public void setByte(long offset, byte value) {\n    if (SAFE_MODE)\n      rangeCheck(offset, OByteSerializer.BYTE_SIZE);\n\n    directMemory.setByte(dataPointer + offset, value);\n  }","commit_id":"2b46d1bd48befde999d80f2f5fc44a2971ffa8af","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public byte getByte(long offset) {\n    rangeCheck(offset, OByteSerializer.BYTE_SIZE);\n\n    return directMemory.getByte(dataPointer + offset);\n  }","id":82392,"modified_method":"public byte getByte(long offset) {\n    if (SAFE_MODE)\n      rangeCheck(offset, OByteSerializer.BYTE_SIZE);\n\n    return directMemory.getByte(dataPointer + offset);\n  }","commit_id":"2b46d1bd48befde999d80f2f5fc44a2971ffa8af","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public void setLong(long offset, long value) {\n    rangeCheck(offset, OLongSerializer.LONG_SIZE);\n\n    directMemory.setLong(dataPointer + offset, value);\n  }","id":82393,"modified_method":"public void setLong(long offset, long value) {\n    if (SAFE_MODE)\n      rangeCheck(offset, OLongSerializer.LONG_SIZE);\n\n    directMemory.setLong(dataPointer + offset, value);\n  }","commit_id":"2b46d1bd48befde999d80f2f5fc44a2971ffa8af","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public byte[] get(long offset, int length) {\n    rangeCheck(offset, length);\n\n    return directMemory.get(dataPointer + offset, length);\n  }","id":82394,"modified_method":"public byte[] get(long offset, int length) {\n    if (SAFE_MODE)\n      rangeCheck(offset, length);\n\n    return directMemory.get(dataPointer + offset, length);\n  }","commit_id":"2b46d1bd48befde999d80f2f5fc44a2971ffa8af","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public void setShort(long offset, short value) {\n    rangeCheck(offset, OShortSerializer.SHORT_SIZE);\n\n    directMemory.setShort(dataPointer + offset, value);\n  }","id":82395,"modified_method":"public void setShort(long offset, short value) {\n    if (SAFE_MODE)\n      rangeCheck(offset, OShortSerializer.SHORT_SIZE);\n\n    directMemory.setShort(dataPointer + offset, value);\n  }","commit_id":"2b46d1bd48befde999d80f2f5fc44a2971ffa8af","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public void get(long offset, byte[] array, int arrayOffset, int length) {\n    rangeCheck(offset, length);\n\n    directMemory.get(dataPointer + offset, array, arrayOffset, length);\n  }","id":82396,"modified_method":"public void get(long offset, byte[] array, int arrayOffset, int length) {\n    if (SAFE_MODE)\n      rangeCheck(offset, length);\n\n    directMemory.get(dataPointer + offset, array, arrayOffset, length);\n  }","commit_id":"2b46d1bd48befde999d80f2f5fc44a2971ffa8af","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public void setChar(long offset, char value) {\n    rangeCheck(offset, OCharSerializer.CHAR_SIZE);\n\n    directMemory.setChar(dataPointer + offset, value);\n  }","id":82397,"modified_method":"public void setChar(long offset, char value) {\n    if (SAFE_MODE)\n      rangeCheck(offset, OCharSerializer.CHAR_SIZE);\n\n    directMemory.setChar(dataPointer + offset, value);\n  }","commit_id":"2b46d1bd48befde999d80f2f5fc44a2971ffa8af","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public int getInt(long offset) {\n    rangeCheck(offset, OIntegerSerializer.INT_SIZE);\n\n    return directMemory.getInt(dataPointer + offset);\n  }","id":82398,"modified_method":"public int getInt(long offset) {\n    if (SAFE_MODE)\n      rangeCheck(offset, OIntegerSerializer.INT_SIZE);\n\n    return directMemory.getInt(dataPointer + offset);\n  }","commit_id":"2b46d1bd48befde999d80f2f5fc44a2971ffa8af","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public char getChar(long offset) {\n    rangeCheck(offset, OCharSerializer.CHAR_SIZE);\n\n    return directMemory.getChar(dataPointer + offset);\n  }","id":82399,"modified_method":"public char getChar(long offset) {\n    if (SAFE_MODE)\n      rangeCheck(offset, OCharSerializer.CHAR_SIZE);\n\n    return directMemory.getChar(dataPointer + offset);\n  }","commit_id":"2b46d1bd48befde999d80f2f5fc44a2971ffa8af","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public void setInt(long offset, int value) {\n    rangeCheck(offset, OIntegerSerializer.INT_SIZE);\n\n    directMemory.setInt(dataPointer + offset, value);\n  }","id":82400,"modified_method":"public void setInt(long offset, int value) {\n    if (SAFE_MODE)\n      rangeCheck(offset, OIntegerSerializer.INT_SIZE);\n\n    directMemory.setInt(dataPointer + offset, value);\n  }","commit_id":"2b46d1bd48befde999d80f2f5fc44a2971ffa8af","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Override\n    public boolean restart(Network network, ReservationContext context) throws ConcurrentOperationException, ResourceUnavailableException, InsufficientCapacityException{\n        DataCenter dc = _configMgr.getZone(network.getDataCenterId());\n        NetworkOffering offering = _configMgr.getNetworkOffering(network.getNetworkOfferingId());\n        DeployDestination dest = new DeployDestination(dc, null, null, null);\n        List<DomainRouterVO> routers = _routerDao.findByNetwork(network.getId());\n        if (routers == null || routers.isEmpty()) {\n            s_logger.trace(\"Can't find dhcp element in network \" + network.getId());\n            return true;\n        }\n        \n        VirtualRouter result = null;\n        boolean ret = true;\n        for (DomainRouterVO router : routers) {\n            if (canHandle(network.getGuestType(), dest, offering.getTrafficType())) {\n                if (router.getState() == State.Stopped) {\n                    result = _routerMgr.startRouter(router.getId(), false);\n                } else {\n                    result = _routerMgr.rebootRouter(router.getId(), false);\n                }\n                if (result == null) {\n                    s_logger.warn(\"Failed to restart dhcp element \" + router + \" as a part of netowrk \" + network + \" restart\");\n                    ret = false;\n                }\n            } else {\n                s_logger.trace(\"Dhcp element doesn't handle network restart for the network \" + network);\n            }\n        }\n        return ret;\n    }","id":82401,"modified_method":"@Override\n    public boolean restart(Network network, ReservationContext context) throws ConcurrentOperationException, ResourceUnavailableException, InsufficientCapacityException{\n        DataCenter dc = _configMgr.getZone(network.getDataCenterId());\n        DeployDestination dest = new DeployDestination(dc, null, null, null);\n        NetworkOffering offering = _configMgr.getNetworkOffering(network.getNetworkOfferingId());\n        \n        if (!canHandle(network.getGuestType(), dest, offering.getTrafficType())) {\n            s_logger.trace(\"Dhcp element doesn't handle network restart for the network \" + network);\n            return false;\n        } \n        \n        List<DomainRouterVO> routers = _routerDao.findByNetwork(network.getId());\n        if (routers == null || routers.isEmpty()) {\n            s_logger.trace(\"Can't find dhcp element in network \" + network.getId());\n            return true;\n        }\n        \n        VirtualRouter result = null;\n        boolean ret = true;\n        for (DomainRouterVO router : routers) {\n            if (router.getState() == State.Stopped) {\n                result = _routerMgr.startRouter(router.getId(), false);\n            } else {\n                result = _routerMgr.rebootRouter(router.getId(), false);\n            }\n            if (result == null) {\n                s_logger.warn(\"Failed to restart dhcp element \" + router + \" as a part of netowrk \" + network + \" restart\");\n                ret = false;\n            }\n          \n        }\n        return ret;\n    }","commit_id":"4c4bff1c1e50968f25683d153a3adfb19025bc25","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public boolean restart(Network network, ReservationContext context) throws ConcurrentOperationException, ResourceUnavailableException, InsufficientCapacityException{\n        DataCenter dc = _configMgr.getZone(network.getDataCenterId());\n        DeployDestination dest = new DeployDestination(dc, null, null, null);\n        \n        NetworkOffering networkOffering = _networkOfferingDao.findById(network.getNetworkOfferingId());\n        \n        // We need to re-implement the network since the redundancy capability may changed\n        List<DomainRouterVO> routers = _routerDao.findByNetwork(network.getId());\n        if (routers == null || routers.isEmpty()) {\n            s_logger.trace(\"Can't find virtual router element in network \" + network.getId());\n            return true;\n        }\n        \n        /* Get the host_id in order to find the cluster */\n        long host_id = 0;\n        boolean result = true;\n        boolean ret = true;\n        for (DomainRouterVO router : routers) {\n            if (canHandle(network.getGuestType(), dest.getDataCenter())) {\n                host_id = router.getHostId();\n                if (_routerMgr.stopRouter(router.getId(), false) == null) {\n                    s_logger.warn(\"Failed to stop virtual router element \" + router + \" as a part of netowrk \" + network + \" restart\");\n                    ret = false;\n                }\n                result = _routerMgr.destroyRouter(router.getId());\n                if (!result) {\n                    s_logger.warn(\"Failed to destroy virtual router element \" + router + \" as a part of netowrk \" + network + \" restart\");\n                    ret = false;\n                }\n            } else {\n                s_logger.trace(\"Virtual router element doesn't handle network restart for the network \" + network);\n            }\n        }\n        Cluster cluster = _configMgr.getCluster(_hostDao.findById(host_id).getClusterId());\n        dest = new DeployDestination(dc, null, cluster, null);\n        implement(network, networkOffering, dest, context);\n        return ret;\n    }","id":82402,"modified_method":"@Override\n    public boolean restart(Network network, ReservationContext context) throws ConcurrentOperationException, ResourceUnavailableException, InsufficientCapacityException{\n        DataCenter dc = _configMgr.getZone(network.getDataCenterId());\n        if (!canHandle(network.getGuestType(), dc)) {\n            s_logger.trace(\"Virtual router element doesn't handle network restart for the network \" + network);\n            return false;\n        }\n\n        DeployDestination dest = new DeployDestination(dc, null, null, null);\n\n        NetworkOffering networkOffering = _networkOfferingDao.findById(network.getNetworkOfferingId());\n        \n        // We need to re-implement the network since the redundancy capability may changed\n        List<DomainRouterVO> routers = _routerDao.findByNetwork(network.getId());\n        if (routers == null || routers.isEmpty()) {\n            s_logger.trace(\"Can't find virtual router element in network \" + network.getId());\n            return true;\n        }\n        \n        /* Get the host_id in order to find the cluster */\n        long host_id = 0;\n        boolean result = true;\n        boolean ret = true;\n        for (DomainRouterVO router : routers) {\n            host_id = router.getHostId();\n            if (_routerMgr.stopRouter(router.getId(), false) == null) {\n                s_logger.warn(\"Failed to stop virtual router element \" + router + \" as a part of netowrk \" + network + \" restart\");\n                ret = false;\n            }\n            result = _routerMgr.destroyRouter(router.getId());\n            if (!result) {\n                s_logger.warn(\"Failed to destroy virtual router element \" + router + \" as a part of netowrk \" + network + \" restart\");\n                ret = false;\n            }\n           \n        }\n        \n        \n        Cluster cluster = _configMgr.getCluster(_hostDao.findById(host_id).getClusterId());\n        dest = new DeployDestination(dc, null, cluster, null);\n        implement(network, networkOffering, dest, context);\n        return ret;\n    }","commit_id":"4c4bff1c1e50968f25683d153a3adfb19025bc25","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public boolean restart(Network network, ReservationContext context) throws ConcurrentOperationException, ResourceUnavailableException, InsufficientCapacityException{\n        DataCenter dc = _configMgr.getZone(network.getDataCenterId());\n        NetworkOffering offering = _configMgr.getNetworkOffering(network.getNetworkOfferingId());\n        DeployDestination dest = new DeployDestination(dc, null, null, null);\n        List<DomainRouterVO> routers = _routerDao.findByNetwork(network.getId());\n        if (routers == null || routers.isEmpty()) {\n            s_logger.trace(\"Can't find dhcp element in network \" + network.getId());\n            return true;\n        }\n        \n        VirtualRouter result = null;\n        boolean ret = true;\n        for (DomainRouterVO router : routers) {\n            if (canHandle(network.getGuestType(), dest, offering.getTrafficType())) {\n                if (router.getState() == State.Stopped) {\n                    result = _routerMgr.startRouter(router.getId(), false);\n                } else {\n                    result = _routerMgr.rebootRouter(router.getId(), false);\n                }\n                if (result == null) {\n                    s_logger.warn(\"Failed to restart dhcp element \" + router + \" as a part of netowrk \" + network + \" restart\");\n                    ret = false;\n                }\n            } else {\n                s_logger.trace(\"Dhcp element doesn't handle network restart for the network \" + network);\n            }\n        }\n        return ret;\n    }","id":82403,"modified_method":"@Override\n    public boolean restart(Network network, ReservationContext context) throws ConcurrentOperationException, ResourceUnavailableException, InsufficientCapacityException{\n        DataCenter dc = _configMgr.getZone(network.getDataCenterId());\n        DeployDestination dest = new DeployDestination(dc, null, null, null);\n        NetworkOffering offering = _configMgr.getNetworkOffering(network.getNetworkOfferingId());\n        \n        if (!canHandle(network.getGuestType(), dest, offering.getTrafficType())) {\n            s_logger.trace(\"Dhcp element doesn't handle network restart for the network \" + network);\n            return false;\n        } \n        \n        List<DomainRouterVO> routers = _routerDao.findByNetwork(network.getId());\n        if (routers == null || routers.isEmpty()) {\n            s_logger.trace(\"Can't find dhcp element in network \" + network.getId());\n            return true;\n        }\n        \n        VirtualRouter result = null;\n        boolean ret = true;\n        for (DomainRouterVO router : routers) {\n            if (router.getState() == State.Stopped) {\n                result = _routerMgr.startRouter(router.getId(), false);\n            } else {\n                result = _routerMgr.rebootRouter(router.getId(), false);\n            }\n            if (result == null) {\n                s_logger.warn(\"Failed to restart dhcp element \" + router + \" as a part of netowrk \" + network + \" restart\");\n                ret = false;\n            }\n          \n        }\n        return ret;\n    }","commit_id":"ae9ba8996a468bde488f4f0ecc43ed35eabec66a","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public boolean restart(Network network, ReservationContext context) throws ConcurrentOperationException, ResourceUnavailableException, InsufficientCapacityException{\n        DataCenter dc = _configMgr.getZone(network.getDataCenterId());\n        DeployDestination dest = new DeployDestination(dc, null, null, null);\n        \n        NetworkOffering networkOffering = _networkOfferingDao.findById(network.getNetworkOfferingId());\n        \n        // We need to re-implement the network since the redundancy capability may changed\n        List<DomainRouterVO> routers = _routerDao.findByNetwork(network.getId());\n        if (routers == null || routers.isEmpty()) {\n            s_logger.trace(\"Can't find virtual router element in network \" + network.getId());\n            return true;\n        }\n\n        /* Get the host_id in order to find the cluster */\n        long host_id = 0;\n        boolean result = true;\n        boolean ret = true;\n        for (DomainRouterVO router : routers) {\n            if (canHandle(network.getGuestType(), dest.getDataCenter())) {\n                host_id = router.getHostId();\n                if (_routerMgr.stopRouter(router.getId(), false) == null) {\n                    s_logger.warn(\"Failed to stop virtual router element \" + router + \" as a part of netowrk \" + network + \" restart\");\n                    ret = false;\n                }\n                result = _routerMgr.destroyRouter(router.getId());\n                if (!result) {\n                    s_logger.warn(\"Failed to destroy virtual router element \" + router + \" as a part of netowrk \" + network + \" restart\");\n                    ret = false;\n                }\n            } else {\n                s_logger.trace(\"Virtual router element doesn't handle network restart for the network \" + network);\n            }\n        }\n        Cluster cluster = _configMgr.getCluster(_hostDao.findById(host_id).getClusterId());\n        dest = new DeployDestination(dc, null, cluster, null);\n        implement(network, networkOffering, dest, context);\n        return ret;\n    }","id":82404,"modified_method":"@Override\n    public boolean restart(Network network, ReservationContext context) throws ConcurrentOperationException, ResourceUnavailableException, InsufficientCapacityException{\n        DataCenter dc = _configMgr.getZone(network.getDataCenterId());\n        if (!canHandle(network.getGuestType(), dc)) {\n            s_logger.trace(\"Virtual router element doesn't handle network restart for the network \" + network);\n            return false;\n        }\n\n        DeployDestination dest = new DeployDestination(dc, null, null, null);\n\n        NetworkOffering networkOffering = _networkOfferingDao.findById(network.getNetworkOfferingId());\n        \n        // We need to re-implement the network since the redundancy capability may changed\n        List<DomainRouterVO> routers = _routerDao.findByNetwork(network.getId());\n        if (routers == null || routers.isEmpty()) {\n            s_logger.trace(\"Can't find virtual router element in network \" + network.getId());\n            return true;\n        }\n\n        /* Get the host_id in order to find the cluster */\n        long host_id = 0;\n        boolean result = true;\n        boolean ret = true;\n        for (DomainRouterVO router : routers) {\n            host_id = router.getHostId();\n            if (_routerMgr.stopRouter(router.getId(), false) == null) {\n                s_logger.warn(\"Failed to stop virtual router element \" + router + \" as a part of netowrk \" + network + \" restart\");\n                ret = false;\n            }\n            result = _routerMgr.destroyRouter(router.getId());\n            if (!result) {\n                s_logger.warn(\"Failed to destroy virtual router element \" + router + \" as a part of netowrk \" + network + \" restart\");\n                ret = false;\n            }\n           \n        }\n        \n        \n        Cluster cluster = _configMgr.getCluster(_hostDao.findById(host_id).getClusterId());\n        dest = new DeployDestination(dc, null, cluster, null);\n        implement(network, networkOffering, dest, context);\n        return ret;\n    }","commit_id":"ae9ba8996a468bde488f4f0ecc43ed35eabec66a","url":"https://github.com/apache/cloudstack"},{"original_method":"/**\n\t * Open the add selection dialog and add a new key/value to the table (and\n\t * to the dataset, of course).\n\t */\n\tvoid add() {\n\t\tCollection<OsmPrimitive> sel = Main.ds.getSelected();\n\t\tif (sel.isEmpty()) {\n\t\t\tJOptionPane.showMessageDialog(Main.parent, tr(\"Please select objects for which you want to change properties.\"));\n\t\t\treturn;\n\t\t}\n\n\t\tJPanel p = new JPanel(new BorderLayout());\n\t\tp.add(new JLabel(\"<html>\"+trn(\"This will change {0} object.\",\"This will change {0} objects.\", sel.size(),sel.size())+\"<br><br>\"+tr(\"Please select a key\")),\n\t\t\t\tBorderLayout.NORTH);\n\t\tfinal TreeMap<String, TreeSet<String>> allData = createAutoCompletionInfo(false);\n\t\tfinal AutoCompleteComboBox keys = new AutoCompleteComboBox();\n\t\tkeys.setPossibleItems(allData.keySet());\n\t\tkeys.setEditable(true);\n\t\t\n\t\tp.add(keys, BorderLayout.CENTER);\n\n\t\tJPanel p2 = new JPanel(new BorderLayout());\n\t\tp.add(p2, BorderLayout.SOUTH);\n\t\tp2.add(new JLabel(tr(\"Please select a value\")), BorderLayout.NORTH);\n\t\tfinal AutoCompleteComboBox values = new AutoCompleteComboBox();\n\t\tvalues.setEditable(true);\n\t\tp2.add(values, BorderLayout.CENTER);\n\n\t\tJOptionPane pane = new JOptionPane(p, JOptionPane.PLAIN_MESSAGE, JOptionPane.OK_CANCEL_OPTION){\n\t\t\t@Override public void selectInitialValue() {\n\t\t\t\tkeys.requestFocusInWindow();\n\t\t\t\tkeys.getEditor().selectAll();\n\t\t\t}\n\t\t};\n\t\tpane.createDialog(Main.parent, tr(\"Change values?\")).setVisible(true);\n\t\tif (!Integer.valueOf(JOptionPane.OK_OPTION).equals(pane.getValue()))\n\t\t\treturn;\n\t\tString key = keys.getEditor().getItem().toString();\n\t\tString value = values.getEditor().getItem().toString();\n\t\tif (value.equals(\"\"))\n\t\t\treturn;\n\t\tMain.main.undoRedo.add(new ChangePropertyCommand(sel, key, value));\n\t\tselectionChanged(sel); // update table\n\t\tMain.parent.repaint(); // repaint all - drawing could have been changed\n\t}","id":82405,"modified_method":"/**\n\t * Open the add selection dialog and add a new key/value to the table (and\n\t * to the dataset, of course).\n\t */\n\tvoid add() {\n\t\tCollection<OsmPrimitive> sel = Main.ds.getSelected();\n\t\tif (sel.isEmpty()) {\n\t\t\tJOptionPane.showMessageDialog(Main.parent, tr(\"Please select objects for which you want to change properties.\"));\n\t\t\treturn;\n\t\t}\n\n\t\tJPanel p = new JPanel(new BorderLayout());\n\t\tp.add(new JLabel(\"<html>\"+trn(\"This will change {0} object.\",\"This will change {0} objects.\", sel.size(),sel.size())+\"<br><br>\"+tr(\"Please select a key\")),\n\t\t\t\tBorderLayout.NORTH);\n\t\tfinal TreeMap<String, TreeSet<String>> allData = createAutoCompletionInfo(false);\n\t\tfinal AutoCompleteComboBox keys = new AutoCompleteComboBox();\n\t\tkeys.setPossibleItems(allData.keySet());\n\t\tkeys.setEditable(true);\n\t\t\n\t\tp.add(keys, BorderLayout.CENTER);\n\n\t\tJPanel p2 = new JPanel(new BorderLayout());\n\t\tp.add(p2, BorderLayout.SOUTH);\n\t\tp2.add(new JLabel(tr(\"Please select a value\")), BorderLayout.NORTH);\n\t\tfinal AutoCompleteComboBox values = new AutoCompleteComboBox();\n\t\tvalues.setEditable(true);\n\t\tp2.add(values, BorderLayout.CENTER);\n\n\t\taddFocusAdapter(-1, allData, keys, values);\n\t\tJOptionPane pane = new JOptionPane(p, JOptionPane.PLAIN_MESSAGE, JOptionPane.OK_CANCEL_OPTION){\n\t\t\t@Override public void selectInitialValue() {\n\t\t\t\tkeys.requestFocusInWindow();\n\t\t\t\tkeys.getEditor().selectAll();\n\t\t\t}\n\t\t};\n\t\tpane.createDialog(Main.parent, tr(\"Change values?\")).setVisible(true);\n\t\tif (!Integer.valueOf(JOptionPane.OK_OPTION).equals(pane.getValue()))\n\t\t\treturn;\n\t\tString key = keys.getEditor().getItem().toString();\n\t\tString value = values.getEditor().getItem().toString();\n\t\tif (value.equals(\"\"))\n\t\t\treturn;\n\t\tMain.main.undoRedo.add(new ChangePropertyCommand(sel, key, value));\n\t\tselectionChanged(sel); // update table\n\t\tMain.parent.repaint(); // repaint all - drawing could have been changed\n\t}","commit_id":"a52ddb7487dbd5f4a7d0ccb882a759fa3d9bad54","url":"https://github.com/openstreetmap/josm"},{"original_method":"/**\n\t * Create a new PropertiesDialog\n\t */\n\tpublic PropertiesDialog(MapFrame mapFrame) {\n\t\tsuper(tr(\"Properties/Memberships\"), \"propertiesdialog\", tr(\"Properties for selected objects.\"), KeyEvent.VK_P, 150);\n\n\t\t// ---------------------------------------\n\t\t// This drop-down is really deprecated but we offer people a chance to \n\t\t// activate it if they really want. Presets should be used from the \n\t\t// menu.\n\t\tif (TaggingPresetPreference.taggingPresets.size() > 0 && \n\t\t\t\tMain.pref.getBoolean(\"taggingpresets.in-properties-dialog\", false)) {\n\t\t\tVector<ActionListener> allPresets = new Vector<ActionListener>();\n\t\t\tfor (final TaggingPreset p : TaggingPresetPreference.taggingPresets)\n\t\t\t\tallPresets.add(new ForwardActionListener(this, p));\n\n\t\t\tTaggingPreset empty = new TaggingPreset();\n\t\t\t// empty.setName(\"this drop-down will be removed soon\");\n\t\t\tallPresets.add(0, new ForwardActionListener(this, empty));\n\t\t\ttaggingPresets.setModel(new DefaultComboBoxModel(allPresets));\n\t\t\tJPanel north = new JPanel(new GridBagLayout());\n\t\t\tnorth.add(getComponent(0),GBC.eol().fill(GBC.HORIZONTAL));\n\t\t\tnorth.add(taggingPresets,GBC.eol().fill(GBC.HORIZONTAL));\n\t\t\tadd(north, BorderLayout.NORTH);\n\t\t}\n\t\ttaggingPresets.addActionListener(new ActionListener(){\n\t\t\tpublic void actionPerformed(ActionEvent e) {\n\t\t\t\tTaggingPreset preset = ((ForwardActionListener)taggingPresets.getSelectedItem()).preset;\n\t\t\t\tpreset.actionPerformed(e);\n\t\t\t\ttaggingPresets.setSelectedItem(null);\n\t\t\t}\n\t\t});\n\t\ttaggingPresets.setRenderer(new TaggingCellRenderer());\n\n\t\t// setting up the properties table\n\t\t\n\t\tpropertyData.setColumnIdentifiers(new String[]{tr(\"Key\"),tr(\"Value\")});\n\t\tpropertyTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);\n\t\n\t\tpropertyTable.getColumnModel().getColumn(1).setCellRenderer(new DefaultTableCellRenderer(){\n\t\t\t@Override public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {\n\t\t\t\tComponent c = super.getTableCellRendererComponent(table, value, isSelected, false, row, column);\n\t\t\t\tif (c instanceof JLabel) {\n\t\t\t\t\tString str = ((JComboBox) value).getEditor().getItem().toString();\n\t\t\t\t\t((JLabel)c).setText(str);\n\t\t\t\t\tif (str.equals(tr(\"<different>\")))\n\t\t\t\t\t\tc.setFont(c.getFont().deriveFont(Font.ITALIC));\n\t\t\t\t}\n\t\t\t\treturn c;\n\t\t\t}\n\t\t});\n\t\t\n\t\t// setting up the membership table\n\t\t\n\t\tmembershipData.setColumnIdentifiers(new String[]{tr(\"Member Of\"),tr(\"Role\")});\n\t\tmembershipTable.setRowSelectionAllowed(false);\n\t\t\n\t\tmembershipTable.getColumnModel().getColumn(0).setCellRenderer(new DefaultTableCellRenderer() {\n\t\t\t@Override public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {\n\t\t\t\tComponent c = super.getTableCellRendererComponent(table, value, isSelected, false, row, column);\n\t\t\t\tif (c instanceof JLabel) {\n\t\t\t\t\tnameVisitor.visit((Relation)value);\n\t\t\t\t\t((JLabel)c).setText(nameVisitor.name);\n\t\t\t\t}\n\t\t\t\treturn c;\n\t\t\t}\n\t\t});\n\t\t\n\t\t// combine both tables and wrap them in a scrollPane\n\t\tJPanel bothTables = new JPanel();\n\t\tbothTables.setLayout(new GridBagLayout());\n\t\tbothTables.add(propertyTable.getTableHeader(), GBC.eol().fill(GBC.HORIZONTAL));\n\t\tbothTables.add(propertyTable, GBC.eol().fill(GBC.BOTH));\n\t\tbothTables.add(membershipTable.getTableHeader(), GBC.eol().fill(GBC.HORIZONTAL));\n\t\tbothTables.add(membershipTable, GBC.eol().fill(GBC.BOTH));\n\t\t\n\t\tDblClickWatch dblClickWatch = new DblClickWatch();\n\t\tpropertyTable.addMouseListener(dblClickWatch);\n\t\tmembershipTable.addMouseListener(dblClickWatch);\n\t\tJScrollPane scrollPane = new JScrollPane(bothTables);\n\t\tscrollPane.addMouseListener(dblClickWatch);\n\t\tadd(scrollPane, BorderLayout.CENTER);\n\n\t\tJPanel buttonPanel = new JPanel(new GridLayout(1,3));\n\t\tActionListener buttonAction = new ActionListener(){\n\t\t\tpublic void actionPerformed(ActionEvent e) {\n\t\t\t\tint sel = propertyTable.getSelectedRow();\n\t\t\t\tif (e.getActionCommand().equals(\"Add\"))\n\t\t\t\t\tadd();\n\t\t\t\telse if (e.getActionCommand().equals(\"Edit\")) {\n\t\t\t\t\tif (sel == -1)\n\t\t\t\t\t\tJOptionPane.showMessageDialog(Main.parent, tr(\"Please select the row to edit.\"));\n\t\t\t\t\telse\n\t\t\t\t\t\tpropertyEdit(sel);\n\t\t\t\t} else if (e.getActionCommand().equals(\"Delete\")) {\n\t\t\t\t\tif (sel == -1)\n\t\t\t\t\t\tJOptionPane.showMessageDialog(Main.parent, tr(\"Please select the row to delete.\"));\n\t\t\t\t\telse\n\t\t\t\t\t\tdelete(sel);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\t\n\t\tbuttonPanel.add(createButton(marktr(\"Add\"),tr(\"Add a new key/value pair to all objects\"), KeyEvent.VK_A, buttonAction));\n\t\tbuttonPanel.add(createButton(marktr(\"Edit\"),tr( \"Edit the value of the selected key for all objects\"), KeyEvent.VK_E, buttonAction));\n\t\tbuttonPanel.add(createButton(marktr(\"Delete\"),tr(\"Delete the selected key in all objects\"), KeyEvent.VK_D, buttonAction));\n\t\tadd(buttonPanel, BorderLayout.SOUTH);\n\n\t\tDataSet.selListeners.add(this);\n\t}","id":82406,"modified_method":"/**\n\t * Create a new PropertiesDialog\n\t */\n\tpublic PropertiesDialog(MapFrame mapFrame) {\n\t\tsuper(tr(\"Properties/Memberships\"), \"propertiesdialog\", tr(\"Properties for selected objects.\"), KeyEvent.VK_P, 150);\n\n\t\t// ---------------------------------------\n\t\t// This drop-down is really deprecated but we offer people a chance to \n\t\t// activate it if they really want. Presets should be used from the \n\t\t// menu.\n\t\tif (TaggingPresetPreference.taggingPresets.size() > 0 && \n\t\t\t\tMain.pref.getBoolean(\"taggingpresets.in-properties-dialog\", false)) {\n\t\t\tVector<ActionListener> allPresets = new Vector<ActionListener>();\n\t\t\tfor (final TaggingPreset p : TaggingPresetPreference.taggingPresets)\n\t\t\t\tallPresets.add(new ForwardActionListener(this, p));\n\n\t\t\tTaggingPreset empty = new TaggingPreset();\n\t\t\t// empty.setName(\"this drop-down will be removed soon\");\n\t\t\tallPresets.add(0, new ForwardActionListener(this, empty));\n\t\t\ttaggingPresets.setModel(new DefaultComboBoxModel(allPresets));\n\t\t\tJPanel north = new JPanel(new GridBagLayout());\n\t\t\tnorth.add(getComponent(0),GBC.eol().fill(GBC.HORIZONTAL));\n\t\t\tnorth.add(taggingPresets,GBC.eol().fill(GBC.HORIZONTAL));\n\t\t\tadd(north, BorderLayout.NORTH);\n\t\t}\n\t\ttaggingPresets.addActionListener(new ActionListener(){\n\t\t\tpublic void actionPerformed(ActionEvent e) {\n\t\t\t\tTaggingPreset preset = ((ForwardActionListener)taggingPresets.getSelectedItem()).preset;\n\t\t\t\tpreset.actionPerformed(e);\n\t\t\t\ttaggingPresets.setSelectedItem(null);\n\t\t\t}\n\t\t});\n\t\ttaggingPresets.setRenderer(new TaggingCellRenderer());\n\n\t\t// setting up the properties table\n\t\t\n\t\tpropertyData.setColumnIdentifiers(new String[]{tr(\"Key\"),tr(\"Value\")});\n\t\tpropertyTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);\n\t\n\t\tpropertyTable.getColumnModel().getColumn(1).setCellRenderer(new DefaultTableCellRenderer(){\n\t\t\t@Override public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {\n\t\t\t\tComponent c = super.getTableCellRendererComponent(table, value, isSelected, false, row, column);\n\t\t\t\tif (c instanceof JLabel) {\n\t\t\t\t\tString str = null;\n\t\t\t\t\tswitch (column) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tstr = (String) value;\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tMap<String, Integer> v = (Map<String,Integer>) value;\n\t\t\t\t\t\tif (v.size()!=1) {\n\t\t\t\t\t\t\tstr=\"<different>\";\t\n\t\t\t\t\t\t\tc.setFont(c.getFont().deriveFont(Font.ITALIC));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstr=v.entrySet().iterator().next().getKey();\n\t\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t((JLabel)c).setText(str);\n\t\t\t\t}\n\t\t\t\treturn c;\n\t\t\t}\n\t\t});\n\t\t\n\t\t// setting up the membership table\n\t\t\n\t\tmembershipData.setColumnIdentifiers(new String[]{tr(\"Member Of\"),tr(\"Role\")});\n\t\tmembershipTable.setRowSelectionAllowed(false);\n\t\t\n\t\tmembershipTable.getColumnModel().getColumn(0).setCellRenderer(new DefaultTableCellRenderer() {\n\t\t\t@Override public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {\n\t\t\t\tComponent c = super.getTableCellRendererComponent(table, value, isSelected, false, row, column);\n\t\t\t\tif (c instanceof JLabel) {\n\t\t\t\t\tnameVisitor.visit((Relation)value);\n\t\t\t\t\t((JLabel)c).setText(nameVisitor.name);\n\t\t\t\t}\n\t\t\t\treturn c;\n\t\t\t}\n\t\t});\n\t\t\n\t\t// combine both tables and wrap them in a scrollPane\n\t\tJPanel bothTables = new JPanel();\n\t\tbothTables.setLayout(new GridBagLayout());\n\t\tbothTables.add(propertyTable.getTableHeader(), GBC.eol().fill(GBC.HORIZONTAL));\n\t\tbothTables.add(propertyTable, GBC.eol().fill(GBC.BOTH));\n\t\tbothTables.add(membershipTable.getTableHeader(), GBC.eol().fill(GBC.HORIZONTAL));\n\t\tbothTables.add(membershipTable, GBC.eol().fill(GBC.BOTH));\n\t\t\n\t\tDblClickWatch dblClickWatch = new DblClickWatch();\n\t\tpropertyTable.addMouseListener(dblClickWatch);\n\t\tmembershipTable.addMouseListener(dblClickWatch);\n\t\tJScrollPane scrollPane = new JScrollPane(bothTables);\n\t\tscrollPane.addMouseListener(dblClickWatch);\n\t\tadd(scrollPane, BorderLayout.CENTER);\n\n\t\tJPanel buttonPanel = new JPanel(new GridLayout(1,3));\n\t\tActionListener buttonAction = new ActionListener(){\n\t\t\tpublic void actionPerformed(ActionEvent e) {\n\t\t\t\tint sel = propertyTable.getSelectedRow();\n\t\t\t\tif (e.getActionCommand().equals(\"Add\"))\n\t\t\t\t\tadd();\n\t\t\t\telse if (e.getActionCommand().equals(\"Edit\")) {\n\t\t\t\t\tif (sel == -1)\n\t\t\t\t\t\tJOptionPane.showMessageDialog(Main.parent, tr(\"Please select the row to edit.\"));\n\t\t\t\t\telse\n\t\t\t\t\t\tpropertyEdit(sel);\n\t\t\t\t} else if (e.getActionCommand().equals(\"Delete\")) {\n\t\t\t\t\tif (sel == -1)\n\t\t\t\t\t\tJOptionPane.showMessageDialog(Main.parent, tr(\"Please select the row to delete.\"));\n\t\t\t\t\telse\n\t\t\t\t\t\tdelete(sel);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\t\n\t\tbuttonPanel.add(createButton(marktr(\"Add\"),tr(\"Add a new key/value pair to all objects\"), KeyEvent.VK_A, buttonAction));\n\t\tbuttonPanel.add(createButton(marktr(\"Edit\"),tr( \"Edit the value of the selected key for all objects\"), KeyEvent.VK_E, buttonAction));\n\t\tbuttonPanel.add(createButton(marktr(\"Delete\"),tr(\"Delete the selected key in all objects\"), KeyEvent.VK_D, buttonAction));\n\t\tadd(buttonPanel, BorderLayout.SOUTH);\n\n\t\tDataSet.selListeners.add(this);\n\t}","commit_id":"a52ddb7487dbd5f4a7d0ccb882a759fa3d9bad54","url":"https://github.com/openstreetmap/josm"},{"original_method":"public void selectionChanged(Collection<? extends OsmPrimitive> newSelection) {\n\t\tif (!isVisible())\n\t\t\treturn;\n\t\tif (propertyTable == null)\n\t\t\treturn; // selection changed may be received in base class constructor before init\n\t\tif (propertyTable.getCellEditor() != null)\n\t\t\tpropertyTable.getCellEditor().cancelCellEditing();\n\n\t\t// re-load property data\n\t\t\n\t\tpropertyData.setRowCount(0);\n\n\t\tMap<String, Integer> valueCount = new HashMap<String, Integer>();\n\t\tTreeMap<String, Collection<String>> props = new TreeMap<String, Collection<String>>();\n\t\tfor (OsmPrimitive osm : newSelection) {\n\t\t\tfor (Entry<String, String> e : osm.entrySet()) {\n\t\t\t\tCollection<String> value = props.get(e.getKey());\n\t\t\t\tif (value == null) {\n\t\t\t\t\tvalue = new TreeSet<String>();\n\t\t\t\t\tprops.put(e.getKey(), value);\n\t\t\t\t}\n\t\t\t\tvalue.add(e.getValue());\n\t\t\t\tvalueCount.put(e.getKey(), valueCount.containsKey(e.getKey()) ? valueCount.get(e.getKey())+1 : 1);\n\t\t\t}\n\t\t}\n\t\tfor (Entry<String, Collection<String>> e : props.entrySet()) {\n            JComboBox value = new JComboBox(e.getValue().toArray());\n            value.setEditable(true);\n            value.getEditor().setItem(e.getValue().size() > 1 || valueCount.get(e.getKey()) != newSelection.size() ? tr(\"<different>\") : e.getValue().iterator().next());\n            propertyData.addRow(new Object[]{e.getKey(), value});\n\t\t}\n\t\t\n\t\t// re-load membership data\n\t\t// this is rather expensive since we have to walk through all members of all existing relationships.\n\t\t// could use back references here for speed if necessary.\n\t\t\n\t\tmembershipData.setRowCount(0);\n\t\t\n\t\tMap<Relation, Integer> valueCountM = new HashMap<Relation, Integer>();\n\t\tTreeMap<Relation, Collection<String>> roles = new TreeMap<Relation, Collection<String>>();\n\t\tfor (Relation r : Main.ds.relations) {\n\t\t\tif (!r.deleted && !r.incomplete) {\n\t\t\t\tfor (RelationMember m : r.members) {\n\t\t\t\t\tif (newSelection.contains(m.member)) {\n\t\t\t\t\t\tCollection<String> value = roles.get(r);\n\t\t\t\t\t\tif (value == null) {\n\t\t\t\t\t\t\tvalue = new TreeSet<String>();\n\t\t\t\t\t\t\troles.put(r, value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvalue.add(m.role);\n\t\t\t\t\t\tvalueCountM.put(r, valueCount.containsKey(r) ? valueCount.get(r)+1 : 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor (Entry<Relation, Collection<String>> e : roles.entrySet()) {\n\t\t\t//JComboBox value = new JComboBox(e.getValue().toArray());\n\t\t\t//value.setEditable(true);\n\t\t\t//value.getEditor().setItem(e.getValue().size() > 1 || valueCount.get(e.getKey()) != newSelection.size() ? tr(\"<different>\") : e.getValue().iterator().next());\n\t\t\tString value = e.getValue().size() > 1 || valueCountM.get(e.getKey()) != newSelection.size() ? tr(\"<different>\") : e.getValue().iterator().next();\n\t\t\tmembershipData.addRow(new Object[]{e.getKey(), value});\n\t\t}\n\t}","id":82407,"modified_method":"public void selectionChanged(Collection<? extends OsmPrimitive> newSelection) {\n\t\tif (!isVisible())\n\t\t\treturn;\n\t\tif (propertyTable == null)\n\t\t\treturn; // selection changed may be received in base class constructor before init\n\t\tif (propertyTable.getCellEditor() != null)\n\t\t\tpropertyTable.getCellEditor().cancelCellEditing();\n\n\t\t// re-load property data\n\t\t\n\t\tpropertyData.setRowCount(0);\n\n\t\tMap<String, Integer> keyCount = new HashMap<String, Integer>();\n\t\tvalueCount.clear();\n\t\tfor (OsmPrimitive osm : newSelection) {\n\t\t\tfor (Entry<String, String> e : osm.entrySet()) {\n\t\t\t\tkeyCount.put(e.getKey(), keyCount.containsKey(e.getKey()) ? keyCount.get(e.getKey())+1 : 1);\n\t\t\t\tif (valueCount.containsKey(e.getKey())) {\n\t\t\t\t\tMap<String, Integer> v = valueCount.get(e.getKey());\n\t\t\t\t\tv.put(e.getValue(), v.containsKey(e.getValue())? v.get(e.getValue())+1 : 1 );\n\t\t\t\t} else {\n\t\t\t\t\tTreeMap<String,Integer> v = new TreeMap<String, Integer>();\n\t\t\t\t\tv.put(e.getValue(), 1);\n\t\t\t\t\tvalueCount.put(e.getKey(), v);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (Entry<String, Map<String, Integer>> e : valueCount.entrySet()) {\n\t\t\tint count=0;\n\t\t\tfor (Entry<String, Integer> e1: e.getValue().entrySet()) {\n//\t\t\t\tSystem.out.println(e.getKey()+\" Entry \"+e1.getKey()+\" value \"+e1.getValue());\n\t\t\t\tcount+=e1.getValue();\n\t\t\t}\n\t\t\tif (count < newSelection.size()) {\n\t\t\t\te.getValue().put(\"\", newSelection.size()-count);\n\t\t\t}\n\t\t\tpropertyData.addRow(new Object[]{e.getKey(), e.getValue()});\n\t\t}\n\t\t\n\t\t// re-load membership data\n\t\t// this is rather expensive since we have to walk through all members of all existing relationships.\n\t\t// could use back references here for speed if necessary.\n\t\t\n\t\tmembershipData.setRowCount(0);\n\t\t\n\t\tMap<Relation, Integer> valueCountM = new HashMap<Relation, Integer>();\n\t\tTreeMap<Relation, Collection<String>> roles = new TreeMap<Relation, Collection<String>>();\n\t\tfor (Relation r : Main.ds.relations) {\n\t\t\tif (!r.deleted && !r.incomplete) {\n\t\t\t\tfor (RelationMember m : r.members) {\n\t\t\t\t\tif (newSelection.contains(m.member)) {\n\t\t\t\t\t\tCollection<String> value = roles.get(r);\n\t\t\t\t\t\tif (value == null) {\n\t\t\t\t\t\t\tvalue = new TreeSet<String>();\n\t\t\t\t\t\t\troles.put(r, value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvalue.add(m.role);\n\t\t\t\t\t\tvalueCountM.put(r, keyCount.containsKey(r) ? keyCount.get(r)+1 : 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor (Entry<Relation, Collection<String>> e : roles.entrySet()) {\n\t\t\t//JComboBox value = new JComboBox(e.getValue().toArray());\n\t\t\t//value.setEditable(true);\n\t\t\t//value.getEditor().setItem(e.getValue().size() > 1 || valueCount.get(e.getKey()) != newSelection.size() ? tr(\"<different>\") : e.getValue().iterator().next());\n\t\t\tString value = e.getValue().size() > 1 || valueCountM.get(e.getKey()) != newSelection.size() ? tr(\"<different>\") : e.getValue().iterator().next();\n\t\t\tmembershipData.addRow(new Object[]{e.getKey(), value});\n\t\t}\n\t}","commit_id":"a52ddb7487dbd5f4a7d0ccb882a759fa3d9bad54","url":"https://github.com/openstreetmap/josm"},{"original_method":"/**\n\t * Edit the value in the properties table row\n\t * @param row The row of the table from which the value is edited.\n\t */\n\tvoid propertyEdit(int row) {\n\t\tString key = propertyData.getValueAt(row, 0).toString();\n\t\tCollection<OsmPrimitive> sel = Main.ds.getSelected();\n\t\tif (sel.isEmpty()) {\n\t\t\tJOptionPane.showMessageDialog(Main.parent, tr(\"Please select the objects you want to change properties for.\"));\n\t\t\treturn;\n\t\t}\n\t\tString msg = \"<html>\"+trn(\"This will change {0} object.\", \"This will change {0} objects.\", sel.size(), sel.size())+\"<br><br>(\"+tr(\"An empty value deletes the key.\", key)+\")<\/html>\";\n\t\t\n\t\tJPanel panel = new JPanel(new BorderLayout());\n\t\tpanel.add(new JLabel(msg), BorderLayout.NORTH);\n\n\t\tfinal TreeMap<String, TreeSet<String>> allData = createAutoCompletionInfo(true);\n\n\t\tJPanel p = new JPanel(new GridBagLayout());\n\t\tpanel.add(p, BorderLayout.CENTER);\n\n\t\tfinal AutoCompleteComboBox keys = new AutoCompleteComboBox();\n\t\tkeys.setPossibleItems(allData.keySet());\n\t\tkeys.setEditable(true);\n\t\tkeys.setSelectedItem(key);\n\n\t\tp.add(new JLabel(tr(\"Key\")), GBC.std());\n\t\tp.add(Box.createHorizontalStrut(10), GBC.std());\n\t\tp.add(keys, GBC.eol().fill(GBC.HORIZONTAL));\n\n\t\tfinal AutoCompleteComboBox values = new AutoCompleteComboBox();\n\t\tvalues.setEditable(true);\n\t\tCollection<String> newItems;\n\t\tif (allData.containsKey(key)) {\n\t\t\tnewItems = allData.get(key);\n\t\t} else {\n\t\t\tnewItems = Collections.emptyList();\n\t\t}\n\t\tvalues.setPossibleItems(newItems);\n\t\tvalues.setSelectedItem(null);\n\t\tfinal String selection= ((JComboBox)propertyData.getValueAt(row, 1)).getEditor().getItem().toString(); \n\t\tvalues.setSelectedItem(selection);\n\t\tvalues.getEditor().setItem(selection);\n\t\tp.add(new JLabel(tr(\"Value\")), GBC.std());\n\t\tp.add(Box.createHorizontalStrut(10), GBC.std());\n\t\tp.add(values, GBC.eol().fill(GBC.HORIZONTAL));\n\t\taddFocusAdapter(allData, keys, values);\n\n\t\tfinal JOptionPane optionPane = new JOptionPane(panel, JOptionPane.QUESTION_MESSAGE, JOptionPane.OK_CANCEL_OPTION) {\n\t\t\t@Override public void selectInitialValue() {\n\t\t\t\tvalues.requestFocusInWindow();\n\t\t\t\tvalues.getEditor().selectAll();\n\t\t\t}\n\t\t};\n\t\tfinal JDialog dlg = optionPane.createDialog(Main.parent, tr(\"Change values?\"));\n\n\t\tvalues.getEditor().addActionListener(new ActionListener() {\n\t\t\tpublic void actionPerformed(ActionEvent e) {\n\t\t\t\tdlg.setVisible(false);\n\t\t\t\toptionPane.setValue(JOptionPane.OK_OPTION);\n\t\t\t}\n\t\t});\n\n\t\tString oldValue = values.getEditor().getItem().toString();\n\t\tdlg.setVisible(true);\n\n\t\tObject answer = optionPane.getValue();\n\t\tif (answer == null || answer == JOptionPane.UNINITIALIZED_VALUE ||\n\t\t\t\t(answer instanceof Integer && (Integer)answer != JOptionPane.OK_OPTION)) {\n\t\t\tvalues.getEditor().setItem(oldValue);\n\t\t\treturn;\n\t\t}\n\n\t\tString value = values.getEditor().getItem().toString();\n\t\tif (value.equals(tr(\"<different>\")))\n\t\t\treturn;\n\t\tif (value.equals(\"\"))\n\t\t\tvalue = null; // delete the key\n\t\tString newkey = keys.getEditor().getItem().toString();\n\t\tif (newkey.equals(\"\")) {\n\t\t\tnewkey = key;\n\t\t\tvalue = null; // delete the key instead\n\t\t}\n\t\tif (key.equals(newkey) || value == null)\n\t\t\tMain.main.undoRedo.add(new ChangePropertyCommand(sel, newkey, value));\n\t\telse {\n\t\t\tMain.main.undoRedo.add(new SequenceCommand(trn(\"Change properties of {0} object\", \"Change properties of {0} objects\", sel.size(), sel.size()),\n\t\t\t\t\tnew ChangePropertyCommand(sel, key, null),\n\t\t\t\t\tnew ChangePropertyCommand(sel, newkey, value)));\n\t\t}\n\n\t\t\tselectionChanged(sel); // update whole table\n\t\tMain.parent.repaint(); // repaint all - drawing could have been changed\n\t}","id":82408,"modified_method":"/**\n\t * Edit the value in the properties table row\n\t * @param row The row of the table from which the value is edited.\n\t */\n\tvoid propertyEdit(int row) {\n\t\tString key = propertyData.getValueAt(row, 0).toString();\n\t\tobjKey=key;\n\t\tCollection<OsmPrimitive> sel = Main.ds.getSelected();\n\t\tif (sel.isEmpty()) {\n\t\t\tJOptionPane.showMessageDialog(Main.parent, tr(\"Please select the objects you want to change properties for.\"));\n\t\t\treturn;\n\t\t}\n\t\tString msg = \"<html>\"+trn(\"This will change {0} object.\", \"This will change {0} objects.\", sel.size(), sel.size())+\"<br><br>(\"+tr(\"An empty value deletes the key.\", key)+\")<\/html>\";\n\t\t\n\t\tJPanel panel = new JPanel(new BorderLayout());\n\t\tpanel.add(new JLabel(msg), BorderLayout.NORTH);\n\n\t\tfinal TreeMap<String, TreeSet<String>> allData = createAutoCompletionInfo(true);\n\n\t\tJPanel p = new JPanel(new GridBagLayout());\n\t\tpanel.add(p, BorderLayout.CENTER);\n\n\t\tfinal AutoCompleteComboBox keys = new AutoCompleteComboBox();\n\t\tkeys.setPossibleItems(allData.keySet());\n\t\tkeys.setEditable(true);\n\t\tkeys.setSelectedItem(key);\n\n\t\tp.add(new JLabel(tr(\"Key\")), GBC.std());\n\t\tp.add(Box.createHorizontalStrut(10), GBC.std());\n\t\tp.add(keys, GBC.eol().fill(GBC.HORIZONTAL));\n\n\t\tfinal AutoCompleteComboBox values = new AutoCompleteComboBox();\n\t\tvalues.setRenderer(new DefaultListCellRenderer() {\n\t\t\t@Override public Component getListCellRendererComponent(JList list,  Object value, int index, boolean isSelected,  boolean cellHasFocus) {\n\t\t\t    Component c = super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);\n\t\t\t    if (c instanceof JLabel) {\n\t\t\t    \tString str = null;\n\t\t\t    \t\tstr=(String) value;\n\t\t\t    \t\tif (valueCount.containsKey(objKey)){ \n\t\t\t    \t\t\tMap<String, Integer> m=valueCount.get(objKey);\n\t\t\t    \t\t\tif (m.containsKey(str)) {\n\t\t\t    \t\t\t\tstr+=\"(\"+m.get(str)+\")\";\n\t\t\t    \t\t\t\tc.setFont(c.getFont().deriveFont(Font.ITALIC+Font.BOLD));\n\t\t\t    \t\t\t}\n\t\t\t    \t\t}\n\t\t\t\t    ((JLabel)c).setText(str);\n\t\t\t    }\n\t\t\t    return c;\n\t\t\t}\n\t\t});\n\t\tvalues.setEditable(true);\n\t\tupdateListData(key, allData, values);\n\t\tMap<String, Integer> m=(Map<String, Integer>)propertyData.getValueAt(row, 1);\n\t\tfinal String selection= m.size()!=1?\"<different>\":m.entrySet().iterator().next().getKey();\n\t\tvalues.setSelectedItem(selection);\n\t\tvalues.getEditor().setItem(selection);\n\t\tp.add(new JLabel(tr(\"Value\")), GBC.std());\n\t\tp.add(Box.createHorizontalStrut(10), GBC.std());\n\t\tp.add(values, GBC.eol().fill(GBC.HORIZONTAL));\n\t\taddFocusAdapter(row, allData, keys, values);\n\n\t\tfinal JOptionPane optionPane = new JOptionPane(panel, JOptionPane.QUESTION_MESSAGE, JOptionPane.OK_CANCEL_OPTION) {\n\t\t\t@Override public void selectInitialValue() {\n\t\t\t\tvalues.requestFocusInWindow();\n\t\t\t\tvalues.getEditor().selectAll();\n\t\t\t}\n\t\t};\n\t\tfinal JDialog dlg = optionPane.createDialog(Main.parent, tr(\"Change values?\"));\n\n\t\tvalues.getEditor().addActionListener(new ActionListener() {\n\t\t\tpublic void actionPerformed(ActionEvent e) {\n\t\t\t\tdlg.setVisible(false);\n\t\t\t\toptionPane.setValue(JOptionPane.OK_OPTION);\n\t\t\t}\n\t\t});\n\n\t\tString oldValue = values.getEditor().getItem().toString();\n\t\tdlg.setVisible(true);\n\n\t\tObject answer = optionPane.getValue();\n\t\tif (answer == null || answer == JOptionPane.UNINITIALIZED_VALUE ||\n\t\t\t\t(answer instanceof Integer && (Integer)answer != JOptionPane.OK_OPTION)) {\n\t\t\tvalues.getEditor().setItem(oldValue);\n\t\t\treturn;\n\t\t}\n\n\t\tString value = values.getEditor().getItem().toString();\n\t\tif (value.equals(tr(\"<different>\")))\n\t\t\treturn;\n\t\tif (value.equals(\"\"))\n\t\t\tvalue = null; // delete the key\n\t\tString newkey = keys.getEditor().getItem().toString();\n\t\tif (newkey.equals(\"\")) {\n\t\t\tnewkey = key;\n\t\t\tvalue = null; // delete the key instead\n\t\t}\n\t\tif (key.equals(newkey) || value == null)\n\t\t\tMain.main.undoRedo.add(new ChangePropertyCommand(sel, newkey, value));\n\t\telse {\n\t\t\tMain.main.undoRedo.add(new SequenceCommand(trn(\"Change properties of {0} object\", \"Change properties of {0} objects\", sel.size(), sel.size()),\n\t\t\t\t\tnew ChangePropertyCommand(sel, key, null),\n\t\t\t\t\tnew ChangePropertyCommand(sel, newkey, value)));\n\t\t}\n\n\t\tselectionChanged(sel); // update whole table\n\t\tMain.parent.repaint(); // repaint all - drawing could have been changed\n\t}","commit_id":"a52ddb7487dbd5f4a7d0ccb882a759fa3d9bad54","url":"https://github.com/openstreetmap/josm"},{"original_method":"/**\n\t * @param allData\n\t * @param keys\n\t * @param values\n\t */\n\tprivate void addFocusAdapter(\n\t        final TreeMap<String, TreeSet<String>> allData,\n\t        final AutoCompleteComboBox keys, final AutoCompleteComboBox values) {\n\t\t// get the combo box' editor component\n\t\tJTextComponent editor = (JTextComponent)values.getEditor()\n\t\t        .getEditorComponent();\n\t\t// Refresh the values model when focus is gained\n\t\teditor.addFocusListener(new FocusAdapter() {\n\t\t\t@Override public void focusGained(FocusEvent e) {\n\t\t\t\tString key = keys.getEditor().getItem().toString();\n\t\t\t\tCollection<String> newItems;\n\t\t\t\tif (allData.containsKey(key)) {\n\t\t\t\t\tnewItems = allData.get(key);\n\t\t\t\t} else {\n\t\t\t\t\tnewItems = Collections.emptyList();\n\t\t\t\t}\n\t\t\t\tvalues.setPossibleItems(newItems);\n\t\t\t}\n\t\t});\n\t}","id":82409,"modified_method":"/**\n\t * @param allData\n\t * @param keys\n\t * @param values\n\t */\n\tprivate void addFocusAdapter(final int row, final TreeMap<String, TreeSet<String>> allData,final AutoCompleteComboBox keys, final AutoCompleteComboBox values) {\n\t\t// get the combo box' editor component\n\t\tJTextComponent editor = (JTextComponent)values.getEditor()\n\t\t        .getEditorComponent();\n\t\t// Refresh the values model when focus is gained\n\t\teditor.addFocusListener(new FocusAdapter() {\n\t\t\t@Override public void focusGained(FocusEvent e) {\n\t\t\t\tString key = keys.getEditor().getItem().toString();\n\t\t\t\tupdateListData(key, allData, values);\n\t\t\t\tobjKey=key;\n\t\t\t}\n\t\t});\n\t}","commit_id":"a52ddb7487dbd5f4a7d0ccb882a759fa3d9bad54","url":"https://github.com/openstreetmap/josm"},{"original_method":"public void addRow(Long generation, String tableName, Object partitionHash, Object[] data)\n    {\n        int partition = TheHashinator.hashToPartition(partitionHash);\n        HashMap<String, ExportTestVerifier> verifiers = m_verifiers.get(generation);\n        if (verifiers == null) {\n            verifiers = new HashMap<String, ExportTestVerifier>();\n            m_verifiers.put( generation, verifiers);\n        }\n\n        ExportTestVerifier verifier = verifiers.get(tableName + partition);\n        if (verifier == null)\n        {\n            // something horribly wrong, bail\n            System.out.println(\"No verifier for table \" + tableName + \" and partition \" + partition);\n            System.exit(1);\n        }\n        //verifier.addRow(data);\n    }","id":82410,"modified_method":"public void addRow(String tableName, Object partitionHash, Object[] data)\n    {\n        int partition = TheHashinator.hashToPartition(partitionHash);\n        ExportTestVerifier verifier = m_verifiers.get(tableName + partition);\n        if (verifier == null)\n        {\n            verifier = new ExportTestVerifier();\n            m_verifiers.put(tableName + partition, verifier);\n        }\n        //verifier.addRow(data);\n    }","commit_id":"ee82f1284bec05214db33b853c03f8fa4f360ab2","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public boolean verifyRows() throws Exception {\n        for (File f : m_paths) {\n            for (File f2 : f.listFiles()) {\n                if (f2.getName().endsWith(\"csv\")) {\n                    Long generation;\n                    String tableName;\n                    if (f2.getName().startsWith(\"active\")) {\n                        generation = Long.valueOf(f2.getName().split(\"-\")[2]);\n                        tableName = f2.getName().split(\"-\")[1];\n                    } else {\n                        generation = Long.valueOf(f2.getName().split(\"-\")[1]);\n                        tableName = f2.getName().split(\"-\")[0];\n                    }\n\n                    FileInputStream fis = new FileInputStream(f2);\n                    BufferedInputStream bis = new BufferedInputStream(fis);\n                    InputStreamReader isr = new InputStreamReader(bis, VoltDB.UTF8ENCODING);\n                    CSVReader csvreader = new CSVReader(isr);\n                    String next[] = null;\n\n                    HashMap<String, ExportTestVerifier> tableToVerifier = m_verifiers.get(generation);\n                    if (tableToVerifier == null) {\n                        System.out.println(\"No verifiers at all for generation for generation \" + generation);\n                    }\n\n                    while ((next = csvreader.readNext()) != null) {\n                        StringBuilder sb = new StringBuilder();\n                        for (String s : next) {\n                            sb.append(s).append(\", \");\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    }","id":82411,"modified_method":"public boolean verifyRows() throws Exception {\n        TreeMap<Long, List<File>> generations = new TreeMap<Long, List<File>>();\n        /*\n         * Get all the files for each generation so we process them in the right order\n         */\n        for (File f : m_paths) {\n            for (File f2 : f.listFiles()) {\n                if (f2.getName().endsWith(\"csv\")) {\n                    Long generation;\n                    if (f2.getName().startsWith(\"active\")) {\n                        generation = Long.valueOf(f2.getName().split(\"-\")[2]);\n                    } else {\n                        generation = Long.valueOf(f2.getName().split(\"-\")[1]);\n                    }\n                    if (!generations.containsKey(generation)) generations.put(generation, new ArrayList<File>());\n                    List<File> generationFiles = generations.get(generation);\n                    generationFiles.add(f2);\n\n                }\n            }\n        }\n\n        /*\n         * Process the row data in each file\n         */\n        for (List<File> generationFiles : generations.values()) {\n            for (File f : generationFiles) {\n                String tableName;\n                if (f.getName().startsWith(\"active\")) {\n                    tableName = f.getName().split(\"-\")[1];\n                } else {\n                    tableName = f.getName().split(\"-\")[0];\n                }\n\n\n                FileInputStream fis = new FileInputStream(f);\n                BufferedInputStream bis = new BufferedInputStream(fis);\n                InputStreamReader isr = new InputStreamReader(bis, VoltDB.UTF8ENCODING);\n                CSVReader csvreader = new CSVReader(isr);\n                String next[] = null;\n                while ((next = csvreader.readNext()) != null) {\n                    final int partitionId = Integer.valueOf(next[3]);\n                    StringBuilder sb = new StringBuilder();\n                    for (String s : next) {\n                        sb.append(s).append(\", \");\n                    }\n                    System.out.println(sb);\n                    m_verifiers.get(tableName + partitionId).processRow(next);\n                }\n            }\n        }\n\n        return false;\n    }","commit_id":"ee82f1284bec05214db33b853c03f8fa4f360ab2","url":"https://github.com/VoltDB/voltdb"},{"original_method":"@Override\n    public void setUp() throws Exception\n    {\n        m_username = \"default\";\n        m_password = \"password\";\n        VoltFile.recursivelyDelete(new File(\"/tmp/\" + System.getProperty(\"user.name\")));\n        File f = new File(\"/tmp/\" + System.getProperty(\"user.name\"));\n        f.mkdirs();\n        super.setUp();\n\n        m_verifier = new ExportToFileVerifier(\n                getServerConfig().getPathInSubroots(\n                        new File(\"/tmp/\" + System.getProperty(\"user.name\"))),\n                \"zorag\");\n        m_verifier.loadGenerations();\n    }","id":82412,"modified_method":"@Override\n    public void setUp() throws Exception\n    {\n        m_username = \"default\";\n        m_password = \"password\";\n        VoltFile.recursivelyDelete(new File(\"/tmp/\" + System.getProperty(\"user.name\")));\n        File f = new File(\"/tmp/\" + System.getProperty(\"user.name\"));\n        f.mkdirs();\n        super.setUp();\n\n        m_verifier = new ExportToFileVerifier(\n                getServerConfig().getPathInSubroots(\n                        new File(\"/tmp/\" + System.getProperty(\"user.name\"))),\n                \"zorag\");\n    }","commit_id":"ee82f1284bec05214db33b853c03f8fa4f360ab2","url":"https://github.com/VoltDB/voltdb"},{"original_method":"private void quiesceAndVerify(final Client client, ExportToFileVerifier tester)\n            throws Exception\n            {\n                tester.loadGenerations();\n                quiesce(client);\n                assertTrue(tester.verifyRows());\n    }","id":82413,"modified_method":"private void quiesceAndVerify(final Client client, ExportToFileVerifier tester)\n            throws Exception\n            {\n                quiesce(client);\n                assertTrue(tester.verifyRows());\n    }","commit_id":"ee82f1284bec05214db33b853c03f8fa4f360ab2","url":"https://github.com/VoltDB/voltdb"},{"original_method":"/**\n     * Multi-table test\n     */\n    public void testExportMultiTable() throws Exception\n    {\n        System.out.println(\"testExportMultiTable\");\n        final Client client = getClient();\n\n        for (int i=0; i < 10; i++) {\n            // add data to a first (persistent) table\n            Object[] rowdata = TestSQLTypesSuite.m_midValues;\n            m_verifier.addRow( 0L,\n                    \"ALLOW_NULLS\", i, convertValsToRow(i, 'I', rowdata));\n            Object[] params = convertValsToParams(\"ALLOW_NULLS\", i, rowdata);\n            client.callProcedure(\"Insert\", params);\n\n            // add data to a second (streaming) table.\n            rowdata = TestSQLTypesSuite.m_defaultValues;\n            m_verifier.addRow( 0L,\n                    \"NO_NULLS\", i, convertValsToRow(i, 'I', rowdata));\n            params = convertValsToParams(\"NO_NULLS\", i, rowdata);\n            client.callProcedure(\"Insert\", params);\n        }\n        quiesceAndVerify(client, m_verifier);\n    }","id":82414,"modified_method":"/**\n     * Multi-table test\n     */\n    public void testExportMultiTable() throws Exception\n    {\n        System.out.println(\"testExportMultiTable\");\n        final Client client = getClient();\n\n        for (int i=0; i < 10; i++) {\n            // add data to a first (persistent) table\n            Object[] rowdata = TestSQLTypesSuite.m_midValues;\n            m_verifier.addRow(\n                    \"ALLOW_NULLS\", i, convertValsToRow(i, 'I', rowdata));\n            Object[] params = convertValsToParams(\"ALLOW_NULLS\", i, rowdata);\n            client.callProcedure(\"Insert\", params);\n\n            // add data to a second (streaming) table.\n            rowdata = TestSQLTypesSuite.m_defaultValues;\n            m_verifier.addRow(\n                    \"NO_NULLS\", i, convertValsToRow(i, 'I', rowdata));\n            params = convertValsToParams(\"NO_NULLS\", i, rowdata);\n            client.callProcedure(\"Insert\", params);\n        }\n        quiesceAndVerify(client, m_verifier);\n    }","commit_id":"ee82f1284bec05214db33b853c03f8fa4f360ab2","url":"https://github.com/VoltDB/voltdb"},{"original_method":"@Override\n   public NextAvailableResponse updateLimit(HttpMethod method, String user, String limitKey, ConfiguredRatelimit rateCfg, int datastoreWarnLimit) throws IOException {\n        UserRateLimit patchResult = (UserRateLimit)datastore.patch(user, new UserRateLimit.Patch(limitKey, method, rateCfg), 1, TimeUnitConverter.fromSchemaTypeToConcurrent(rateCfg.getUnit()));\n\n        if(patchResult.getLimitMap().keySet().size() >= datastoreWarnLimit){\n            LOG.warn(\"Large amount of limits recorded.  Repose Rate Limited may be misconfigured, keeping track of rate limits for user: \"+ user +\". Please review capture groups in your rate limit configuration.  If using clustered datastore, you may experience network latency.\");\n        }\n\n        CachedRateLimit rateLimit = patchResult.getLimitMap().get(limitKey);\n        return new NextAvailableResponse(patchResult.getWithinLimit(), new Date(rateLimit.getEarliestExpirationTime(method)), rateLimit.amount(method));\n   }","id":82415,"modified_method":"@Override\n   public NextAvailableResponse updateLimit(String user, String limitKey, ConfiguredRatelimit rateCfg, int datastoreWarnLimit) throws IOException {\n       UserRateLimit patchResult = (UserRateLimit)datastore.patch(user, new UserRateLimit.Patch(limitKey, rateCfg), 1, TimeUnitConverter.fromSchemaTypeToConcurrent(rateCfg.getUnit()));\n\n       if(patchResult.getLimitMap().keySet().size() >= datastoreWarnLimit){\n           LOG.warn(\"Large amount of limits recorded.  Repose Rate Limited may be misconfigured, keeping track of rate limits for user: \"+ user +\". Please review capture groups in your rate limit configuration.  If using clustered datastore, you may experience network latency.\");\n       }\n\n       CachedRateLimit rateLimit = patchResult.getLimitMap().get(limitKey);\n       boolean incrementedAll = (rateLimit.getUsageMap().size() == rateCfg.getHttpMethods().size());\n       return new NextAvailableResponse(incrementedAll, new Date(rateLimit.getEarliestExpirationTime(rateCfg.getHttpMethods().get(0))), rateLimit.amount(rateCfg.getHttpMethods().get(0)));\n   }","commit_id":"0ab25d9dfbcff4c71fee6587b0746abae2f8d81a","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Test\n    public void updateLimit_shouldSendPatchToDatastore() throws Exception {\n        HashMap<String, CachedRateLimit> limitMap = new HashMap<String, CachedRateLimit>();\n        limitMap.put(\"testKey\", new CachedRateLimit(\"foo\"));\n        when(datastore.patch(any(String.class), any(UserRateLimit.Patch.class), anyInt(), any(TimeUnit.class))).thenReturn(new UserRateLimit(limitMap, true));\n        ConfiguredRatelimit configuredRatelimit = new ConfiguredRatelimit();\n        configuredRatelimit.setUnit(com.rackspace.repose.service.limits.schema.TimeUnit.MINUTE);\n        rateLimitCache.updateLimit(HttpMethod.GET, \"bob\", \"testKey\", configuredRatelimit, 5);\n        verify(datastore).patch(eq(\"bob\"), any(UserRateLimit.Patch.class), eq(1), eq(TimeUnit.MINUTES));\n    }","id":82416,"modified_method":"@Test\n    public void updateLimit_shouldSendPatchToDatastore() throws Exception {\n        HashMap<String, CachedRateLimit> limitMap = new HashMap<String, CachedRateLimit>();\n        limitMap.put(\"testKey\", new CachedRateLimit(\"foo\"));\n        when(datastore.patch(any(String.class), any(UserRateLimit.Patch.class), anyInt(), any(TimeUnit.class))).thenReturn(new UserRateLimit(limitMap));\n        ConfiguredRatelimit configuredRatelimit = new ConfiguredRatelimit();\n        configuredRatelimit.setUnit(com.rackspace.repose.service.limits.schema.TimeUnit.MINUTE);\n        configuredRatelimit.getHttpMethods().add(HttpMethod.GET);\n        rateLimitCache.updateLimit(\"bob\", \"testKey\", configuredRatelimit, 5);\n        verify(datastore).patch(eq(\"bob\"), any(UserRateLimit.Patch.class), eq(1), eq(TimeUnit.MINUTES));\n    }","commit_id":"0ab25d9dfbcff4c71fee6587b0746abae2f8d81a","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Test\n    public void getUserRateLimits_shouldReturnCachedKeySets() throws Exception {\n        HashMap<String, CachedRateLimit> limitMap = new HashMap<String, CachedRateLimit>();\n        limitMap.put(\"12345\", new CachedRateLimit(\".*\"));\n\n        when(datastore.get(ACCOUNT)).thenReturn(new UserRateLimit(limitMap, false));\n\n        assertFalse(\"Should return a non-empty set\", rateLimitCache.getUserRateLimits(ACCOUNT).isEmpty());\n    }","id":82417,"modified_method":"@Test\n    public void getUserRateLimits_shouldReturnCachedKeySets() throws Exception {\n        HashMap<String, CachedRateLimit> limitMap = new HashMap<String, CachedRateLimit>();\n        limitMap.put(\"12345\", new CachedRateLimit(\".*\"));\n\n        when(datastore.get(ACCOUNT)).thenReturn(new UserRateLimit(limitMap));\n\n        assertFalse(\"Should return a non-empty set\", rateLimitCache.getUserRateLimits(ACCOUNT).isEmpty());\n    }","commit_id":"0ab25d9dfbcff4c71fee6587b0746abae2f8d81a","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Test\n    public void updateLimit_usesReturnedValues_toPopulateResultObject() throws Exception {\n        long now = System.currentTimeMillis();\n        CachedRateLimit cachedRateLimit = new CachedRateLimit(\"foo\");\n        cachedRateLimit.logHit(HttpMethod.GET, com.rackspace.repose.service.limits.schema.TimeUnit.MINUTE);\n        HashMap<String, CachedRateLimit> limitMap = new HashMap<String, CachedRateLimit>();\n        limitMap.put(\"testKey\", cachedRateLimit);\n        when(datastore.patch(any(String.class), any(UserRateLimit.Patch.class), anyInt(), any(TimeUnit.class))).thenReturn(new UserRateLimit(limitMap, true));\n        ConfiguredRatelimit configuredRatelimit = new ConfiguredRatelimit();\n        configuredRatelimit.setUnit(com.rackspace.repose.service.limits.schema.TimeUnit.MINUTE);\n        NextAvailableResponse response = rateLimitCache.updateLimit(HttpMethod.GET, \"bob\", \"testKey\", configuredRatelimit, 5);\n        assertThat(response, hasValues(true, now, 1));\n    }","id":82418,"modified_method":"@Test\n    public void updateLimit_usesReturnedValues_toPopulateResultObject() throws Exception {\n        long now = System.currentTimeMillis();\n        CachedRateLimit cachedRateLimit = new CachedRateLimit(\"foo\");\n        cachedRateLimit.logHit(HttpMethod.GET, com.rackspace.repose.service.limits.schema.TimeUnit.MINUTE);\n        HashMap<String, CachedRateLimit> limitMap = new HashMap<String, CachedRateLimit>();\n        limitMap.put(\"testKey\", cachedRateLimit);\n        when(datastore.patch(any(String.class), any(UserRateLimit.Patch.class), anyInt(), any(TimeUnit.class))).thenReturn(new UserRateLimit(limitMap));\n        ConfiguredRatelimit configuredRatelimit = new ConfiguredRatelimit();\n        configuredRatelimit.setUnit(com.rackspace.repose.service.limits.schema.TimeUnit.MINUTE);\n        configuredRatelimit.getHttpMethods().add(HttpMethod.GET);\n        NextAvailableResponse response = rateLimitCache.updateLimit(\"bob\", \"testKey\", configuredRatelimit, 5);\n        assertThat(response, hasValues(true, now, 1));\n    }","commit_id":"0ab25d9dfbcff4c71fee6587b0746abae2f8d81a","url":"https://github.com/rackerlabs/repose"},{"original_method":"public void handleRateLimit(String user, String limitKey, ConfiguredRatelimit rateLimit,int datastoreWarnLimit) throws OverLimitException {\n\n      // Get the next, shortest available time that a user has to wait for\n      try {\n         // update the cache for each method in single rate limit\n         NextAvailableResponse nextAvailable = null;\n         for (HttpMethod configuredMethod : rateLimit.getHttpMethods()) {\n            nextAvailable = cache.updateLimit(configuredMethod, user, limitKey, rateLimit, datastoreWarnLimit);\n         }\n\n         if (nextAvailable != null && !nextAvailable.hasRequestsRemaining()) {\n            throw new OverLimitException(\"User rate limited!\", user, nextAvailable.getResetTime(), nextAvailable.getCurrentLimitAmount(), rateLimit.toString());\n         }\n      } catch (IOException ioe) {\n         LOG.error(\"IOException caught during cache commit for rate limit user: \" + user + \" Reason: \" + ioe.getMessage(), ioe);\n\n         throw new CacheException(\"IOException caught during cache commit for rate limit.\", ioe);\n      }\n   }","id":82419,"modified_method":"public void handleRateLimit(String user, String limitKey, ConfiguredRatelimit rateLimit,int datastoreWarnLimit) throws OverLimitException {\n\n      // Get the next, shortest available time that a user has to wait for\n      try {\n         // update the cache for each method in single rate limit\n         NextAvailableResponse nextAvailable = cache.updateLimit(user, limitKey, rateLimit, datastoreWarnLimit);\n\n         if (nextAvailable != null && !nextAvailable.hasRequestsRemaining()) {\n            throw new OverLimitException(\"User rate limited!\", user, nextAvailable.getResetTime(), nextAvailable.getCurrentLimitAmount(), rateLimit.toString());\n         }\n      } catch (IOException ioe) {\n         LOG.error(\"IOException caught during cache commit for rate limit user: \" + user + \" Reason: \" + ioe.getMessage(), ioe);\n\n         throw new CacheException(\"IOException caught during cache commit for rate limit.\", ioe);\n      }\n   }","commit_id":"0ab25d9dfbcff4c71fee6587b0746abae2f8d81a","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Test(expected=OverLimitException.class)\n      public void shouldThrowOverLimitException() throws IOException, OverLimitException {\n\n         final RateLimiter rateLimiter = new RateLimiter(mockedCache);\n\n         when(mockedCache.updateLimit(any(HttpMethod.class), any(String.class), any(String.class),\n                                      any(ConfiguredRatelimit.class), anyInt())).thenReturn(new NextAvailableResponse(false, new Date(), 10));\n\n\n         rateLimiter.handleRateLimit(USER, key, configuredRateLimit, datastoreWarnLimit);\n      }","id":82420,"modified_method":"@Test(expected=OverLimitException.class)\n      public void shouldThrowOverLimitException() throws IOException, OverLimitException {\n\n         final RateLimiter rateLimiter = new RateLimiter(mockedCache);\n\n         when(mockedCache.updateLimit(any(String.class), any(String.class),\n                                      any(ConfiguredRatelimit.class), anyInt())).thenReturn(new NextAvailableResponse(false, new Date(), 10));\n\n\n         rateLimiter.handleRateLimit(USER, key, configuredRateLimit, datastoreWarnLimit);\n      }","commit_id":"0ab25d9dfbcff4c71fee6587b0746abae2f8d81a","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Test(expected= CacheException.class)\n      public void shouldThrowCacheException() throws OverLimitException, IOException {\n         final RateLimiter rateLimiter = new RateLimiter(mockedCache);\n\n         when(mockedCache.updateLimit(any(HttpMethod.class), any(String.class), any(String.class),\n                                      any(ConfiguredRatelimit.class), anyInt())).thenThrow(new IOException(\"uh oh\"));\n\n         rateLimiter.handleRateLimit(USER, key, configuredRateLimit, datastoreWarnLimit);\n\n      }","id":82421,"modified_method":"@Test(expected= CacheException.class)\n      public void shouldThrowCacheException() throws OverLimitException, IOException {\n         final RateLimiter rateLimiter = new RateLimiter(mockedCache);\n\n         when(mockedCache.updateLimit(any(String.class), any(String.class),\n                                      any(ConfiguredRatelimit.class), anyInt())).thenThrow(new IOException(\"uh oh\"));\n\n         rateLimiter.handleRateLimit(USER, key, configuredRateLimit, datastoreWarnLimit);\n\n      }","commit_id":"0ab25d9dfbcff4c71fee6587b0746abae2f8d81a","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Test(expected=OverLimitException.class)\n      public void noCaptureGroupshouldThrowOverLimitException() throws IOException, OverLimitException {\n\n         final RateLimiter rateLimiter = new RateLimiter(mockedCache);\n\n         when(mockedCache.updateLimit(any(HttpMethod.class), any(String.class), any(String.class),\n                                      any(ConfiguredRatelimit.class), anyInt())).thenReturn(new NextAvailableResponse(false, new Date(), 10));\n\n         key = LimitKey.getLimitKey(uriMatcher, false);\n         rateLimiter.handleRateLimit(USER, key, configuredRateLimit, datastoreWarnLimit);\n      }","id":82422,"modified_method":"@Test(expected=OverLimitException.class)\n      public void noCaptureGroupshouldThrowOverLimitException() throws IOException, OverLimitException {\n\n         final RateLimiter rateLimiter = new RateLimiter(mockedCache);\n\n         when(mockedCache.updateLimit(any(String.class), any(String.class),\n                                      any(ConfiguredRatelimit.class), anyInt())).thenReturn(new NextAvailableResponse(false, new Date(), 10));\n\n         key = LimitKey.getLimitKey(uriMatcher, false);\n         rateLimiter.handleRateLimit(USER, key, configuredRateLimit, datastoreWarnLimit);\n      }","commit_id":"0ab25d9dfbcff4c71fee6587b0746abae2f8d81a","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Test\n      public void shouldUpdateLimitWithoutExceptions() throws IOException, OverLimitException {\n         final RateLimiter rateLimiter = new RateLimiter(mockedCache);\n\n         when(mockedCache.updateLimit(any(HttpMethod.class), any(String.class), any(String.class), any(ConfiguredRatelimit.class), anyInt())).thenReturn(new NextAvailableResponse(true, new Date(), 10));\n\n         rateLimiter.handleRateLimit(USER, key, configuredRateLimit, datastoreWarnLimit);\n      }","id":82423,"modified_method":"@Test\n      public void shouldUpdateLimitWithoutExceptions() throws IOException, OverLimitException {\n         final RateLimiter rateLimiter = new RateLimiter(mockedCache);\n\n         when(mockedCache.updateLimit(any(String.class), any(String.class), any(ConfiguredRatelimit.class), anyInt())).thenReturn(new NextAvailableResponse(true, new Date(), 10));\n\n         rateLimiter.handleRateLimit(USER, key, configuredRateLimit, datastoreWarnLimit);\n      }","commit_id":"0ab25d9dfbcff4c71fee6587b0746abae2f8d81a","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Test\n        public void shouldTrackLimits() throws IOException, OverLimitException{\n           List<String> groups = new ArrayList<String>();\n           groups.add(\"configure-limit-group\");\n\n              when(cache.updateLimit(any(HttpMethod.class), any(String.class), any(String.class),\n                      any(ConfiguredRatelimit.class), anyInt())).thenReturn(new NextAvailableResponse(true, new Date(), 10));\n\n              rateLimitingService.trackLimits(\"user\", groups, \"/loadbalancer/something\", \"GET\", datastoreWarnLimit);\n         }","id":82424,"modified_method":"@Test\n        public void shouldTrackLimits() throws IOException, OverLimitException{\n           List<String> groups = new ArrayList<String>();\n           groups.add(\"configure-limit-group\");\n\n              when(cache.updateLimit(any(String.class), any(String.class),\n                      any(ConfiguredRatelimit.class), anyInt())).thenReturn(new NextAvailableResponse(true, new Date(), 10));\n\n              rateLimitingService.trackLimits(\"user\", groups, \"/loadbalancer/something\", \"GET\", datastoreWarnLimit);\n         }","commit_id":"0ab25d9dfbcff4c71fee6587b0746abae2f8d81a","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Test\n        public void shouldTrackNOGROUPSLimits() throws IOException, OverLimitException{\n           List<String> groups = new ArrayList<String>();\n           config.setUseCaptureGroups(Boolean.FALSE);\n           groups.add(\"configure-limit-group\");\n\n              when(cache.updateLimit(any(HttpMethod.class), any(String.class), any(String.class),\n                      any(ConfiguredRatelimit.class), anyInt())).thenReturn(new NextAvailableResponse(true, new Date(), 10));\n\n              rateLimitingService.trackLimits(\"user\", groups, \"/loadbalancer/something/1234\", \"GET\", datastoreWarnLimit);\n         }","id":82425,"modified_method":"@Test\n        public void shouldTrackNOGROUPSLimits() throws IOException, OverLimitException{\n           List<String> groups = new ArrayList<String>();\n           config.setUseCaptureGroups(Boolean.FALSE);\n           groups.add(\"configure-limit-group\");\n\n              when(cache.updateLimit(any(String.class), any(String.class),\n                      any(ConfiguredRatelimit.class), anyInt())).thenReturn(new NextAvailableResponse(true, new Date(), 10));\n\n              rateLimitingService.trackLimits(\"user\", groups, \"/loadbalancer/something/1234\", \"GET\", datastoreWarnLimit);\n         }","commit_id":"0ab25d9dfbcff4c71fee6587b0746abae2f8d81a","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Test(expected = IllegalArgumentException.class)\n      public void shouldThrowIllegalArgumentsOnNullUser() throws IOException, OverLimitException{\n         List<String> groups = new ArrayList<String>();\n         groups.add(\"configure-limit-group\");\n\n         when(cache.updateLimit(any(HttpMethod.class), any(String.class), any(String.class),\n                 any(ConfiguredRatelimit.class), anyInt())).thenReturn(new NextAvailableResponse(false, new Date(), 10));\n         \n         rateLimitingService.trackLimits(null, groups, \"/loadbalancer/something\", \"GET\", datastoreWarnLimit);\n      }","id":82426,"modified_method":"@Test(expected = IllegalArgumentException.class)\n      public void shouldThrowIllegalArgumentsOnNullUser() throws IOException, OverLimitException{\n         List<String> groups = new ArrayList<String>();\n         groups.add(\"configure-limit-group\");\n\n         when(cache.updateLimit(any(String.class), any(String.class),\n                 any(ConfiguredRatelimit.class), anyInt())).thenReturn(new NextAvailableResponse(false, new Date(), 10));\n         \n         rateLimitingService.trackLimits(null, groups, \"/loadbalancer/something\", \"GET\", datastoreWarnLimit);\n      }","commit_id":"0ab25d9dfbcff4c71fee6587b0746abae2f8d81a","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Test\n      public void shouldThrowOverLimits() throws IOException, OverLimitException{\n         List<String> groups = new ArrayList<String>();\n         groups.add(\"configure-limit-group\");\n         \n         Date nextAvail = new Date();\n\n         when(cache.updateLimit(any(HttpMethod.class), any(String.class), any(String.class),\n                 any(ConfiguredRatelimit.class), anyInt())).thenReturn(new NextAvailableResponse(false, nextAvail, 0));\n         \n         try{\n            rateLimitingService.trackLimits(\"user\", groups, \"/loadbalancer/something\", \"GET\", datastoreWarnLimit);\n         }catch(OverLimitException e){\n            assertEquals(\"User should be returned\",e.getUser(), \"user\");\n            assertTrue(\"Next available time should be returned\",e.getNextAvailableTime().compareTo(nextAvail)==0);\n            assertTrue(\"Configured limits should be returned\",e.getConfiguredLimit().contains(\"value=20\"));\n            assertEquals(e.getCurrentLimitAmount(), 0);\n         }\n      }","id":82427,"modified_method":"@Test\n      public void shouldThrowOverLimits() throws IOException, OverLimitException{\n         List<String> groups = new ArrayList<String>();\n         groups.add(\"configure-limit-group\");\n         \n         Date nextAvail = new Date();\n\n         when(cache.updateLimit(any(String.class), any(String.class),\n                 any(ConfiguredRatelimit.class), anyInt())).thenReturn(new NextAvailableResponse(false, nextAvail, 0));\n         \n         try{\n            rateLimitingService.trackLimits(\"user\", groups, \"/loadbalancer/something\", \"GET\", datastoreWarnLimit);\n         }catch(OverLimitException e){\n            assertEquals(\"User should be returned\",e.getUser(), \"user\");\n            assertTrue(\"Next available time should be returned\",e.getNextAvailableTime().compareTo(nextAvail)==0);\n            assertTrue(\"Configured limits should be returned\",e.getConfiguredLimit().contains(\"value=20\"));\n            assertEquals(e.getCurrentLimitAmount(), 0);\n         }\n      }","commit_id":"0ab25d9dfbcff4c71fee6587b0746abae2f8d81a","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Override\n        public UserRateLimit newFromPatch() {\n            HashMap<String, CachedRateLimit> newLimitMap = new HashMap<String, CachedRateLimit>();\n            CachedRateLimit cachedRateLimit = new CachedRateLimit(configuredRateLimit.getUriRegex());\n            boolean withinLimit = false;\n            if(configuredRateLimit.getValue() > 0) {\n                cachedRateLimit.logHit(method, configuredRateLimit.getUnit());\n                withinLimit = true;\n            }\n            newLimitMap.put(limitKey, cachedRateLimit);\n            return new UserRateLimit(newLimitMap, withinLimit);\n        }","id":82428,"modified_method":"@Override\n        public UserRateLimit newFromPatch() {\n            HashMap<String, CachedRateLimit> newLimitMap = new HashMap<String, CachedRateLimit>();\n            CachedRateLimit cachedRateLimit = new CachedRateLimit(configuredRateLimit.getUriRegex());\n            if(configuredRateLimit.getValue() > 0) {\n                for(HttpMethod method : configuredRateLimit.getHttpMethods()) {\n                    cachedRateLimit.logHit(method, configuredRateLimit.getUnit());\n                }\n            }\n            newLimitMap.put(limitKey, cachedRateLimit);\n            return new UserRateLimit(newLimitMap);\n        }","commit_id":"0ab25d9dfbcff4c71fee6587b0746abae2f8d81a","url":"https://github.com/rackerlabs/repose"},{"original_method":"public Patch(String limitKey, HttpMethod method, ConfiguredRatelimit configuredRateLimit) {\n            this.limitKey = limitKey;\n            this.configuredRateLimit = configuredRateLimit;\n            this.method = method;\n        }","id":82429,"modified_method":"public Patch(String limitKey, ConfiguredRatelimit configuredRateLimit) {\n            this.limitKey = limitKey;\n            this.configuredRateLimit = configuredRateLimit;\n        }","commit_id":"0ab25d9dfbcff4c71fee6587b0746abae2f8d81a","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Override\n    public UserRateLimit applyPatch(Patch patch) {\n        boolean insideLimit = false;\n        HashMap<String, CachedRateLimit> limitMapCopy = SerializationUtils.clone(limitMap);\n        CachedRateLimit cachedRateLimit = limitMap.get(patch.getLimitKey());\n        if (cachedRateLimit == null) {\n            cachedRateLimit = new CachedRateLimit(patch.getConfiguredRateLimit().getUriRegex());\n            limitMap.put(patch.getLimitKey(), cachedRateLimit);\n            limitMapCopy.put(patch.getLimitKey(), new CachedRateLimit(patch.getConfiguredRateLimit().getUriRegex()));\n        }\n\n        if (cachedRateLimit.amount(patch.getMethod()) < patch.getConfiguredRateLimit().getValue()){\n            insideLimit = true;\n            cachedRateLimit.logHit(patch.getMethod(), patch.getConfiguredRateLimit().getUnit());\n            limitMapCopy.get(patch.getLimitKey()).logHit(patch.getMethod(), patch.getConfiguredRateLimit().getUnit());\n        }\n        return new UserRateLimit(limitMapCopy, insideLimit);\n    }","id":82430,"modified_method":"@Override\n    public UserRateLimit applyPatch(Patch patch) {\n        HashMap<String, CachedRateLimit> returnedLimitMap = new HashMap<String, CachedRateLimit>();\n        CachedRateLimit cachedRateLimit = limitMap.get(patch.getLimitKey());\n        if(cachedRateLimit == null) {\n            cachedRateLimit = new CachedRateLimit(patch.getConfiguredRateLimit().getUriRegex());\n            limitMap.put(patch.getLimitKey(), cachedRateLimit);\n        }\n\n        CachedRateLimit returnedRateLimit = new CachedRateLimit(patch.getConfiguredRateLimit().getUriRegex());\n        returnedLimitMap.put(patch.getLimitKey(), returnedRateLimit);\n\n        for(HttpMethod method : patch.getConfiguredRateLimit().getHttpMethods()) {\n            if(cachedRateLimit.amount(method) < patch.getConfiguredRateLimit().getValue()) {\n                cachedRateLimit.logHit(method, patch.getConfiguredRateLimit().getUnit());\n                returnedRateLimit.getUsageMap().put(method, new LinkedList<Long>(cachedRateLimit.getUsageMap().get(method)));\n            }\n        }\n\n        return new UserRateLimit(returnedLimitMap);\n    }","commit_id":"0ab25d9dfbcff4c71fee6587b0746abae2f8d81a","url":"https://github.com/rackerlabs/repose"},{"original_method":"public UserRateLimit(HashMap<String, CachedRateLimit> limitMap, boolean withinLimit) {\n        this.limitMap = limitMap;\n        this.withinLimit = withinLimit;\n    }","id":82431,"modified_method":"public UserRateLimit(HashMap<String, CachedRateLimit> limitMap) {\n        this.limitMap = limitMap;\n    }","commit_id":"0ab25d9dfbcff4c71fee6587b0746abae2f8d81a","url":"https://github.com/rackerlabs/repose"},{"original_method":"private JScrollPane initTreeScrollPane() {\n\n    fillTreeData(null, true);\n\n    final InspectionsConfigTreeRenderer renderer = new InspectionsConfigTreeRenderer(){\n      protected String getFilter() {\n        return myProfileFilter != null ? myProfileFilter.getFilter() : null;\n      }\n    };\n    myTree = new CheckboxTree(renderer, myRoot) {\n      public Dimension getPreferredScrollableViewportSize() {\n        Dimension size = super.getPreferredScrollableViewportSize();\n        size = new Dimension(size.width + 10, size.height);\n        return size;\n      }\n      public int getToggleClickCount() {\n        return -1;\n      }\n\n      @Override\n      protected void onNodeStateChanged(final CheckedTreeNode node) {\n        toggleToolNode((InspectionConfigTreeNode)node);\n      }\n    };\n\n\n    myTree.setCellRenderer(renderer);\n    myTree.setRootVisible(false);\n    myTree.setShowsRootHandles(true);\n    UIUtil.setLineStyleAngled(myTree);\n    TreeUtil.installActions(myTree);\n\n\n    myTree.addTreeSelectionListener(new TreeSelectionListener() {\n      public void valueChanged(TreeSelectionEvent e) {\n        if (myTree.getSelectionPaths() != null && myTree.getSelectionPaths().length == 1) {\n          updateOptionsAndDescriptionPanel(myTree.getSelectionPaths()[0]);\n        }\n        else {\n          initOptionsAndDescriptionPanel();\n        }\n\n        if (!myIsInRestore) {\n          InspectionProfileImpl selected = mySelectedProfile;\n          if (selected != null) {\n            InspectionProfileImpl baseProfile = (InspectionProfileImpl)selected.getParentProfile();\n            if (baseProfile != null) {\n              baseProfile.getExpandedNodes().setSelectionPaths(myTree.getSelectionPaths());\n            }\n            selected.getExpandedNodes().setSelectionPaths(myTree.getSelectionPaths());\n          }\n        }\n\n      }\n    });\n\n\n    myTree.addMouseListener(new PopupHandler() {\n      public void invokePopup(Component comp, int x, int y) {\n        final int[] selectionRows = myTree.getSelectionRows();\n        if (selectionRows != null && myTree.getPathForLocation(x, y) != null && Arrays.binarySearch(selectionRows, myTree.getRowForLocation(x, y)) > -1)\n        {\n          compoundPopup().show(comp, x, y);\n        }\n      }\n    });\n\n\n    new TreeSpeedSearch(myTree, new Convertor<TreePath, String>() {\n      public String convert(TreePath o) {\n        final InspectionConfigTreeNode node = (InspectionConfigTreeNode)o.getLastPathComponent();\n        final Descriptor descriptor = node.getDesriptor();\n        return descriptor != null ? InspectionsConfigTreeComparator.getDisplayTextToSort(descriptor.getText()) : InspectionsConfigTreeComparator\n          .getDisplayTextToSort(node.getGroupName());\n      }\n    });\n\n\n    myTree.setSelectionModel(new DefaultTreeSelectionModel());\n\n    final JScrollPane scrollPane = ScrollPaneFactory.createScrollPane(myTree);\n    scrollPane.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED);\n    TreeUtil.collapseAll(myTree, 1);\n    final Dimension preferredSize = new Dimension(myTree.getPreferredSize().width + 20, scrollPane.getPreferredSize().height);\n    scrollPane.setPreferredSize(preferredSize);\n    scrollPane.setMinimumSize(preferredSize);\n\n    myTree.addTreeExpansionListener(new TreeExpansionListener() {\n      private String getExpandedString(TreePath treePath) {\n        final InspectionConfigTreeNode node = (InspectionConfigTreeNode)treePath.getLastPathComponent();\n        final Descriptor descriptor = node.getDesriptor();\n        if (descriptor != null) {\n          return descriptor.getText();\n        }\n        else {\n          return node.getGroupName();\n        }\n      }\n\n      public void treeCollapsed(TreeExpansionEvent event) {\n        InspectionProfileImpl selected = mySelectedProfile;\n        String nodeTitle = getExpandedString(event.getPath());\n        final InspectionProfileImpl parentProfile = (InspectionProfileImpl)selected.getParentProfile();\n        if (parentProfile != null) {\n          parentProfile.getExpandedNodes().collapseNode(nodeTitle);\n        }\n        selected.getExpandedNodes().collapseNode(nodeTitle);\n      }\n\n      public void treeExpanded(TreeExpansionEvent event) {\n        InspectionProfileImpl selected = mySelectedProfile;\n        if (selected != null) {\n          String nodeTitle = getExpandedString(event.getPath());\n          final InspectionProfileImpl parentProfile = (InspectionProfileImpl)selected.getParentProfile();\n          if (parentProfile != null) {\n            parentProfile.getExpandedNodes().expandNode(nodeTitle);\n          }\n          selected.getExpandedNodes().expandNode(nodeTitle);\n        }\n      }\n    });\n\n    myTreeExpander = new DefaultTreeExpander(myTree);\n    myProfileFilter = new MyFilterComponent();\n\n    return scrollPane;\n  }","id":82432,"modified_method":"private JScrollPane initTreeScrollPane() {\n\n    fillTreeData(null, true);\n\n    final InspectionsConfigTreeRenderer renderer = new InspectionsConfigTreeRenderer(){\n      protected String getFilter() {\n        return myProfileFilter != null ? myProfileFilter.getFilter() : null;\n      }\n    };\n    myTree = new CheckboxTree(renderer, myRoot) {\n      public Dimension getPreferredScrollableViewportSize() {\n        Dimension size = super.getPreferredScrollableViewportSize();\n        size = new Dimension(size.width + 10, size.height);\n        return size;\n      }\n      public int getToggleClickCount() {\n        return -1;\n      }\n\n      @Override\n      protected void onNodeStateChanged(final CheckedTreeNode node) {\n        toggleToolNode((InspectionConfigTreeNode)node);\n      }\n    };\n\n\n    myTree.setCellRenderer(renderer);\n    myTree.setRootVisible(false);\n    myTree.setShowsRootHandles(true);\n    UIUtil.setLineStyleAngled(myTree);\n    TreeUtil.installActions(myTree);\n\n\n    myTree.addTreeSelectionListener(new TreeSelectionListener() {\n      public void valueChanged(TreeSelectionEvent e) {\n        if (myTree.getSelectionPaths() != null && myTree.getSelectionPaths().length == 1) {\n          updateOptionsAndDescriptionPanel(myTree.getSelectionPaths()[0]);\n        }\n        else {\n          initOptionsAndDescriptionPanel();\n        }\n\n        if (!myIsInRestore) {\n          InspectionProfileImpl selected = mySelectedProfile;\n          if (selected != null) {\n            InspectionProfileImpl baseProfile = (InspectionProfileImpl)selected.getParentProfile();\n            if (baseProfile != null) {\n              baseProfile.getExpandedNodes().setSelectionPaths(myTree.getSelectionPaths());\n            }\n            selected.getExpandedNodes().setSelectionPaths(myTree.getSelectionPaths());\n          }\n        }\n\n      }\n    });\n\n\n    myTree.addMouseListener(new PopupHandler() {\n      public void invokePopup(Component comp, int x, int y) {\n        final int[] selectionRows = myTree.getSelectionRows();\n        if (selectionRows != null && myTree.getPathForLocation(x, y) != null && Arrays.binarySearch(selectionRows, myTree.getRowForLocation(x, y)) > -1)\n        {\n          compoundPopup().show(comp, x, y);\n        }\n      }\n    });\n\n\n    new TreeSpeedSearch(myTree, new Convertor<TreePath, String>() {\n      public String convert(TreePath o) {\n        final InspectionConfigTreeNode node = (InspectionConfigTreeNode)o.getLastPathComponent();\n        final Descriptor descriptor = node.getDesriptor();\n        return descriptor != null ? InspectionsConfigTreeComparator.getDisplayTextToSort(descriptor.getText()) : InspectionsConfigTreeComparator\n          .getDisplayTextToSort(node.getGroupName());\n      }\n    });\n\n\n    myTree.setSelectionModel(new DefaultTreeSelectionModel());\n\n    final JScrollPane scrollPane = ScrollPaneFactory.createScrollPane(myTree);\n    scrollPane.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED);\n    TreeUtil.collapseAll(myTree, 1);\n    final Dimension preferredSize = new Dimension(myTree.getPreferredSize().width + 20, scrollPane.getPreferredSize().height);\n    scrollPane.setPreferredSize(preferredSize);\n    scrollPane.setMinimumSize(preferredSize);\n\n    myTree.addTreeExpansionListener(new TreeExpansionListener() {\n\n\n      public void treeCollapsed(TreeExpansionEvent event) {\n        InspectionProfileImpl selected = mySelectedProfile;\n        final InspectionConfigTreeNode node = (InspectionConfigTreeNode)event.getPath().getLastPathComponent();\n        final InspectionProfileImpl parentProfile = (InspectionProfileImpl)selected.getParentProfile();\n        if (parentProfile != null) {\n          parentProfile.getExpandedNodes().collapseNode(node);\n        }\n        selected.getExpandedNodes().collapseNode(node);\n      }\n\n      public void treeExpanded(TreeExpansionEvent event) {\n        InspectionProfileImpl selected = mySelectedProfile;\n        if (selected != null) {\n          final InspectionConfigTreeNode node = (InspectionConfigTreeNode)event.getPath().getLastPathComponent();\n          final InspectionProfileImpl parentProfile = (InspectionProfileImpl)selected.getParentProfile();\n          if (parentProfile != null) {\n            parentProfile.getExpandedNodes().expandNode(node);\n          }\n          selected.getExpandedNodes().expandNode(node);\n        }\n      }\n    });\n\n    myTreeExpander = new DefaultTreeExpander(myTree);\n    myProfileFilter = new MyFilterComponent();\n\n    return scrollPane;\n  }","commit_id":"5e5606084b0ad9ae2775872023e7c571628d347b","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void traverseNodes(final DefaultMutableTreeNode root, List<TreePath> pathsToExpand, List<TreePath> toSelect) {\n    final Descriptor descriptor = ((InspectionConfigTreeNode)root).getDesriptor();\n    final TreeNode[] rootPath = root.getPath();\n    if (descriptor != null) {\n      final String shortName = descriptor.getKey().toString();\n      if (mySelectedNodes.contains(new State(descriptor))) {\n        toSelect.add(new TreePath(rootPath));\n      }\n      if (myExpandedNodes.contains(new State(descriptor))) {\n        pathsToExpand.add(new TreePath(rootPath));\n      }\n    }\n    else {\n      final String str = ((InspectionConfigTreeNode)root).getGroupName();\n      if (mySelectedNodes.contains(new State(str))) {\n        toSelect.add(new TreePath(rootPath));\n      }\n      if (myExpandedNodes.contains(new State(str))) {\n        pathsToExpand.add(new TreePath(rootPath));\n      }\n    }\n    for (int i = 0; i < root.getChildCount(); i++) {\n      traverseNodes((DefaultMutableTreeNode)root.getChildAt(i), pathsToExpand, toSelect);\n    }\n  }","id":82433,"modified_method":"private void traverseNodes(final DefaultMutableTreeNode root, List<TreePath> pathsToExpand, List<TreePath> toSelect) {\n    final State state = getState((InspectionConfigTreeNode)root);\n    final TreeNode[] rootPath = root.getPath();\n    if (mySelectedNodes.contains(state)) {\n      toSelect.add(new TreePath(rootPath));\n    }\n    if (myExpandedNodes.contains(state)) {\n      pathsToExpand.add(new TreePath(rootPath));\n    }\n    for (int i = 0; i < root.getChildCount(); i++) {\n      traverseNodes((DefaultMutableTreeNode)root.getChildAt(i), pathsToExpand, toSelect);\n    }\n  }","commit_id":"5e5606084b0ad9ae2775872023e7c571628d347b","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void saveVisibleState(Tree tree) {\n    myExpandedNodes.clear();\n    final DefaultMutableTreeNode rootNode = (DefaultMutableTreeNode)tree.getModel().getRoot();\n    Enumeration<TreePath> expanded = tree.getExpandedDescendants(new TreePath(rootNode.getPath()));\n    if (expanded != null) {\n      while (expanded.hasMoreElements()) {\n        final TreePath treePath = expanded.nextElement();\n        final InspectionConfigTreeNode node = (InspectionConfigTreeNode)treePath.getLastPathComponent();\n        final Descriptor descriptor = node.getDesriptor();\n        myExpandedNodes.add(getState(node, descriptor));\n      }\n    }\n\n    setSelectionPaths(tree.getSelectionPaths());\n  }","id":82434,"modified_method":"public void saveVisibleState(Tree tree) {\n    myExpandedNodes.clear();\n    final DefaultMutableTreeNode rootNode = (DefaultMutableTreeNode)tree.getModel().getRoot();\n    Enumeration<TreePath> expanded = tree.getExpandedDescendants(new TreePath(rootNode.getPath()));\n    if (expanded != null) {\n      while (expanded.hasMoreElements()) {\n        final TreePath treePath = expanded.nextElement();\n        final InspectionConfigTreeNode node = (InspectionConfigTreeNode)treePath.getLastPathComponent();\n        myExpandedNodes.add(getState(node));\n      }\n    }\n\n    setSelectionPaths(tree.getSelectionPaths());\n  }","commit_id":"5e5606084b0ad9ae2775872023e7c571628d347b","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static State getState(InspectionConfigTreeNode node, Descriptor descriptor) {\n    final State expandedNode;\n    if (descriptor != null) {\n      expandedNode = new State(descriptor);\n    }\n    else {\n      expandedNode = new State(node.getGroupName());\n    }\n    return expandedNode;\n  }","id":82435,"modified_method":"private static State getState(InspectionConfigTreeNode node) {\n    Descriptor descriptor = node.getDesriptor();\n    final State expandedNode;\n    if (descriptor != null) {\n      expandedNode = new State(descriptor);\n    }\n    else {\n      final StringBuilder buf = new StringBuilder();\n      while (node.getParent() != null) {\n        buf.append(node.getGroupName());\n        node = (InspectionConfigTreeNode)node.getParent();\n      }\n      expandedNode = new State(buf.toString());\n    }\n    return expandedNode;\n  }","commit_id":"5e5606084b0ad9ae2775872023e7c571628d347b","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void setSelectionPaths(final TreePath[] selectionPaths) {\n    mySelectedNodes.clear();\n    if (selectionPaths != null) {\n      for (TreePath selectionPath : selectionPaths) {\n        final InspectionConfigTreeNode node = (InspectionConfigTreeNode)selectionPath.getLastPathComponent();\n        final Descriptor descriptor = node.getDesriptor();\n        mySelectedNodes.add(getState(node, descriptor));\n      }\n    }\n  }","id":82436,"modified_method":"public void setSelectionPaths(final TreePath[] selectionPaths) {\n    mySelectedNodes.clear();\n    if (selectionPaths != null) {\n      for (TreePath selectionPath : selectionPaths) {\n        final InspectionConfigTreeNode node = (InspectionConfigTreeNode)selectionPath.getLastPathComponent();\n        mySelectedNodes.add(getState(node));\n      }\n    }\n  }","commit_id":"5e5606084b0ad9ae2775872023e7c571628d347b","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static <T extends CloudMetadata> Predicate<T> filterById( final Collection<String> requestedIdentifiers ) {\n    return new Predicate<T>( ) {\n      @Override\n      public boolean apply( T input ) {\n        return requestedIdentifiers == null || requestedIdentifiers.isEmpty( ) || requestedIdentifiers.contains( input.getDisplayName( ) );\n      }\n    };\n  }","id":82437,"modified_method":"public static <T extends CloudMetadata> Predicate<T> filterById( final Collection<String> requestedIdentifiers ) {\n    return filterByProperty( requestedIdentifiers, toDisplayName() );\n  }","commit_id":"b9fa8d4281c17e567ea96b143f99ade757a89797","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"NetworkGroup( final OwnerFullName ownerFullName, final String groupName, final String groupDescription ) {\n    this( ownerFullName, groupName );\n    checkParam( groupDescription, notNullValue() );\n    this.description = groupDescription;\n  }","id":82438,"modified_method":"NetworkGroup( final OwnerFullName ownerFullName, final String groupName, final String groupDescription ) {\n    this( ownerFullName, groupName );\n    checkParam( groupDescription, notNullValue() );\n    this.description = groupDescription;\n    this.groupId = Crypto.generateId( Integer.toHexString(groupName.hashCode()), \"sg\" );\n  }","commit_id":"b9fa8d4281c17e567ea96b143f99ade757a89797","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public AuthorizeSecurityGroupIngressResponseType authorize( final AuthorizeSecurityGroupIngressType request ) throws Exception {\n    final Context ctx = Contexts.lookup( );\n    final AuthorizeSecurityGroupIngressResponseType reply = request.getReply( );\n    \n    EntityTransaction db = Entities.get( NetworkGroup.class );\n    try {\n      final NetworkGroup ruleGroup = NetworkGroups.lookup( ctx.getUserFullName( ).asAccountFullName( ), request.getGroupName( ) );\n      if ( !RestrictedTypes.filterPrivileged( ).apply( ruleGroup ) ) {\n        throw new EucalyptusCloudException( \"Not authorized to authorize network group \" + request.getGroupName( ) + \" for \" + ctx.getUser( ) );\n      }\n      final List<NetworkRule> ruleList = Lists.newArrayList( );\n      for ( final IpPermissionType ipPerm : request.getIpPermissions( ) ) {\n        try {\n          ruleList.addAll( NetworkGroups.IpPermissionTypeAsNetworkRule.INSTANCE.apply( ipPerm ) );\n        } catch ( final IllegalArgumentException ex ) {\n          LOG.error( ex.getMessage( ) );\n          reply.set_return( false );\n          db.rollback( );\n          return reply;\n        }\n      }\n      if ( Iterables.any( ruleGroup.getNetworkRules( ), new Predicate<NetworkRule>( ) {\n        @Override\n        public boolean apply( final NetworkRule rule ) {\n          return Iterables.any( ruleList, Predicates.equalTo( rule ) );\n        }\n      } ) ) {\n        reply.set_return( false );\n        db.rollback( );\n        return reply;\n      } else {\n        ruleGroup.getNetworkRules( ).addAll( ruleList );\n        reply.set_return( true );\n      }\n      db.commit( );\n      return reply;\n    } catch ( Exception ex ) {\n      Logs.exhaust( ).error( ex, ex );\n      db.rollback( );\n      throw ex;\n    }\n  }","id":82439,"modified_method":"public AuthorizeSecurityGroupIngressResponseType authorize( final AuthorizeSecurityGroupIngressType request ) throws Exception {\n    final Context ctx = Contexts.lookup( );\n    final AuthorizeSecurityGroupIngressResponseType reply = request.getReply( );\n    \n    EntityTransaction db = Entities.get( NetworkGroup.class );\n    try {\n    \n      String lookUpGroup = request.getGroupName() != null ? request.getGroupName() : request.getGroupId();\n      AccountFullName lookUpGroupAccount = ctx.getUserFullName( ).asAccountFullName( );\n      NetworkGroup ruleGroup; \n      \n      try {\n          ruleGroup = NetworkGroups.lookup( lookUpGroupAccount , lookUpGroup );\n      } catch (MetadataException ex ) {\n\t  try {\n\t  ruleGroup = NetworkGroups.lookupByGroupId(lookUpGroupAccount, lookUpGroup);\n\t  } catch ( NoSuchMetadataException ex1 ) {\n\t      throw ex1;\n\t  }\n      }\n      \n      if ( !RestrictedTypes.filterPrivileged( ).apply( ruleGroup ) ) {\n        throw new EucalyptusCloudException( \"Not authorized to authorize network group \" + ruleGroup.getDisplayName() + \" for \" + ctx.getUser( ) );\n      }\n      final List<NetworkRule> ruleList = Lists.newArrayList( );\n      for ( final IpPermissionType ipPerm : request.getIpPermissions( ) ) {\n        try {\n          ruleList.addAll( NetworkGroups.IpPermissionTypeAsNetworkRule.INSTANCE.apply( ipPerm ) );\n        } catch ( final IllegalArgumentException ex ) {\n          LOG.error( ex.getMessage( ) );\n          reply.set_return( false );\n          db.rollback( );\n          return reply;\n        }\n      }\n      if ( Iterables.any( ruleGroup.getNetworkRules( ), new Predicate<NetworkRule>( ) {\n        @Override\n        public boolean apply( final NetworkRule rule ) {\n          return Iterables.any( ruleList, Predicates.equalTo( rule ) );\n        }\n      } ) ) {\n        reply.set_return( false );\n        db.rollback( );\n        return reply;\n      } else {\n        ruleGroup.getNetworkRules( ).addAll( ruleList );\n        reply.set_return( true );\n      }\n      db.commit( );\n      return reply;\n    } catch ( Exception ex ) {\n      Logs.exhaust( ).error( ex, ex );\n      db.rollback( );\n      throw ex;\n    }\n  }","commit_id":"b9fa8d4281c17e567ea96b143f99ade757a89797","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public DescribeSecurityGroupsResponseType describe( final DescribeSecurityGroupsType request ) throws EucalyptusCloudException, MetadataException {\n    final DescribeSecurityGroupsResponseType reply = request.getReply( );\n    final Context ctx = Contexts.lookup( );\n    boolean showAll = request.getSecurityGroupSet( ).remove( \"verbose\" );\n    NetworkGroups.createDefault( ctx.getUserFullName( ) );//ensure the default group exists to cover some old broken installs\n\n    final Filter filter = Filters.generate( request.getFilterSet(), NetworkGroup.class );\n    final CloudMetadatas.FilterBuilder<NetworkGroup> filterBuilder = CloudMetadatas.filteringFor( NetworkGroup.class )\n        .byId( request.getSecurityGroupSet( ) )\n        .byPredicate( filter.asPredicate() );\n\n    OwnerFullName ownerFn = AccountFullName.getInstance( ctx.getAccount( ) );\n    if ( Contexts.lookup( ).hasAdministrativePrivileges( ) ) {\n      if ( showAll ) {\n        ownerFn = null;\n      }\n    } else {\n      filterBuilder.byPrivileges();\n    }\n\n    final Predicate<? super NetworkGroup> netFilter = filterBuilder.buildPredicate();\n    final EntityTransaction db = Entities.get( NetworkGroup.class );\n    try {\n      final List<NetworkGroup> networks = Entities.query( NetworkGroup.named( ownerFn, null ), true, filter.asCriterion(), filter.getAliases() );\n      final Iterable<NetworkGroup> matches = Iterables.filter( networks, netFilter );\n      final Iterable<SecurityGroupItemType> transformed = Iterables.transform( matches, TypeMappers.lookup( NetworkGroup.class, SecurityGroupItemType.class ) );\n      Iterables.addAll( reply.getSecurityGroupInfo(), transformed );\n    } catch ( final Exception ex ) {\n      LOG.error( ex, ex );\n    } finally {\n      db.rollback( );\n    }\n    \n    return reply;\n  }","id":82440,"modified_method":"public DescribeSecurityGroupsResponseType describe( final DescribeSecurityGroupsType request ) throws EucalyptusCloudException, MetadataException {\n      final DescribeSecurityGroupsResponseType reply = request.getReply( );\n      final Context ctx = Contexts.lookup( );\n      boolean showAll = request.getSecurityGroupSet( ).remove( \"verbose\" );\n      NetworkGroups.createDefault( ctx.getUserFullName( ) );//ensure the default group exists to cover some old broken installs\n     \n      final List<String> groupNames = request.getSecurityGroupSet( );\n      final Predicate<NetworkGroup> argListFilter = new Predicate<NetworkGroup>( ) {\n        @Override\n        public boolean apply( final NetworkGroup arg0 ) {\n          return groupNames.isEmpty( ) || groupNames.contains( arg0.getDisplayName( ) ) || groupNames.contains(arg0.getGroupId( ) );\n       \n        }\n      };\n      \n      Predicate<NetworkGroup> netFilter = Predicates.and( argListFilter, RestrictedTypes.filterPrivileged( ) );\n      OwnerFullName ownerFn = AccountFullName.getInstance( ctx.getAccount( ) );\n      if ( Contexts.lookup( ).hasAdministrativePrivileges( ) ) {\n        if ( showAll ) {\n          ownerFn = null;\n        }\n        netFilter = argListFilter;\n      }\n      \n      final EntityTransaction db = Entities.get( NetworkGroup.class );\n      try {\n        final List<NetworkGroup> networks = Entities.query( NetworkGroup.named( ownerFn, null ) );\n        final Iterable<NetworkGroup> matches = Iterables.filter( networks, netFilter );\n        final Iterable<SecurityGroupItemType> transformed = Iterables.transform( matches, TypeMappers.lookup( NetworkGroup.class, SecurityGroupItemType.class ) );\n        Iterables.addAll( reply.getSecurityGroupInfo( ), transformed );\n        db.commit( );\n      } catch ( final Exception ex ) {\n        db.rollback( );\n      }\n      \n      return reply;\n  }","commit_id":"b9fa8d4281c17e567ea96b143f99ade757a89797","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public DeleteSecurityGroupResponseType delete( final DeleteSecurityGroupType request ) throws EucalyptusCloudException, MetadataException {\n    final Context ctx = Contexts.lookup( );\n    final DeleteSecurityGroupResponseType reply = ( DeleteSecurityGroupResponseType ) request.getReply( );\n    if ( !RestrictedTypes.filterPrivileged( ).apply( NetworkGroups.lookup( ctx.getUserFullName( ).asAccountFullName( ), request.getGroupName( ) ) ) ) {\n      throw new EucalyptusCloudException( \"Not authorized to delete network group \" + request.getGroupName( ) + \" for \" + ctx.getUser( ) );\n    }\n    NetworkGroups.delete( ctx.getUserFullName( ), request.getGroupName( ) );\n    reply.set_return( true );\n    return reply;\n  }","id":82441,"modified_method":"public DeleteSecurityGroupResponseType delete( final DeleteSecurityGroupType request ) throws EucalyptusCloudException, MetadataException {\n    final Context ctx = Contexts.lookup( );\n    final DeleteSecurityGroupResponseType reply = ( DeleteSecurityGroupResponseType ) request.getReply( );\n    \n    String lookUpGroup = request.getGroupName() != null ? request.getGroupName() : request.getGroupId();\n    AccountFullName lookUpGroupAccount = ctx.getUserFullName( ).asAccountFullName( );\n    \n    NetworkGroup group;\n    try {\n        group = NetworkGroups.lookup( lookUpGroupAccount , lookUpGroup );\n    } catch (MetadataException ex ) {\n\t  try {\n\t  group = NetworkGroups.lookupByGroupId(lookUpGroupAccount, lookUpGroup);\n\t  } catch ( NoSuchMetadataException ex1 ) {\n\t      throw ex1;\n\t  }\n    } \n    \n    if ( !RestrictedTypes.filterPrivileged( ).apply(group) ) {\n      throw new EucalyptusCloudException( \"Not authorized to delete network group \" + group.getDisplayName() + \" for \" + ctx.getUser( ) );\n    }\n    NetworkGroups.delete( ctx.getUserFullName( ), group.getDisplayName());\n    reply.set_return( true );\n    return reply;\n  }","commit_id":"b9fa8d4281c17e567ea96b143f99ade757a89797","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public RevokeSecurityGroupIngressResponseType revoke( final RevokeSecurityGroupIngressType request ) throws EucalyptusCloudException, MetadataException {\n      \n      final Context ctx = Contexts.lookup( );\n      final RevokeSecurityGroupIngressResponseType reply = request.getReply( );\n      reply.markFailed( );\n      final List<IpPermissionType> ipPermissions = request.getIpPermissions( );\n      final List<NetworkRule> revokedRuleList = NetworkGroups.ipPermissionsAsNetworkRules( ipPermissions );\n      \n      EntityTransaction db = Entities.get( NetworkGroup.class );\n      \n      try {      \n\t \n\t    final List<NetworkGroup> networkGroupList = NetworkGroups\n\t\t    .lookupAll(ctx.getUserFullName().asAccountFullName(),\n\t\t\t    request.getGroupName());\n\n\t    for (NetworkGroup networkGroup : networkGroupList) {\n\n\t\tif (RestrictedTypes.filterPrivileged().apply(networkGroup)) {\n\n\t\t    for (Iterator< NetworkRule > it = networkGroup.getNetworkRules().iterator(); it.hasNext() ;) {\n\t\t\t\n\t\t\tNetworkRule rule = it.next();\n\t\t\tif (revokedRuleList.contains(rule)) {\n\t\t\t  it.remove();\n\t\t\t}\n\t\t    }\n\n\t\t} else {\n\t\t    throw new EucalyptusCloudException(\n\t\t\t    \"Not authorized to revoke\" + \"network group \"\n\t\t\t\t    + request.getGroupName() + \" for \"\n\t\t\t\t    + ctx.getUser());\n\n\t\t}\n\t    }\n        reply.set_return(true);    \n        db.commit( );\n      } catch ( Exception ex ) {\n        Logs.exhaust( ).error( ex, ex );\n        db.rollback( );\n        throw new EucalyptusCloudException( \"RevokeSecurityGroupIngress failed because: \" + ex.getMessage( ), ex );\n      }\n      return reply;\n    }","id":82442,"modified_method":"public RevokeSecurityGroupIngressResponseType revoke( final RevokeSecurityGroupIngressType request ) throws EucalyptusCloudException, MetadataException {\n      \n      final Context ctx = Contexts.lookup( );\n      final RevokeSecurityGroupIngressResponseType reply = request.getReply( );\n      reply.markFailed( );\n      final List<IpPermissionType> ipPermissions = request.getIpPermissions( );\n      final List<NetworkRule> revokedRuleList = NetworkGroups.ipPermissionsAsNetworkRules( ipPermissions );\n      \n      EntityTransaction db = Entities.get( NetworkGroup.class );\n      \n      try {     \n\t  String lookUpGroup = request.getGroupName() != null ? request.getGroupName() : request.getGroupId();\n\t      AccountFullName lookUpGroupAccount = ctx.getUserFullName( ).asAccountFullName( );\n\t      String groupName; \n\t      \n\t      try {\n\t          groupName = NetworkGroups.lookup( lookUpGroupAccount , lookUpGroup ).getDisplayName();\n\t      } catch (MetadataException ex ) {\n\t\t  try {\n\t\t  groupName = NetworkGroups.lookupByGroupId(lookUpGroupAccount, lookUpGroup).getDisplayName();\n\t\t  } catch ( NoSuchMetadataException ex1 ) {\n\t\t      throw ex1;\n\t\t  }\n\t      }\n\t      \n\t     final List<NetworkGroup> networkGroupList = NetworkGroups\n\t\t    .lookupAll(ctx.getUserFullName().asAccountFullName(),\n\t\t\t    groupName);\n\t     \n\t     \n\t    for (NetworkGroup networkGroup : networkGroupList) {\n\n\t\tif (RestrictedTypes.filterPrivileged().apply(networkGroup)) {\n\n\t\t    for (Iterator< NetworkRule > it = networkGroup.getNetworkRules().iterator(); it.hasNext() ;) {\n\t\t\t\n\t\t\tNetworkRule rule = it.next();\n\t\t\tif (revokedRuleList.contains(rule)) {\n\t\t\t  it.remove();\n\t\t\t}\n\t\t    }\n\n\t\t} else {\n\t\t    throw new EucalyptusCloudException(\n\t\t\t    \"Not authorized to revoke\" + \"network group \"\n\t\t\t\t    + request.getGroupName() + \" for \"\n\t\t\t\t    + ctx.getUser());\n\n\t\t}\n\t    }\n        reply.set_return(true);    \n        db.commit( );\n      } catch ( Exception ex ) {\n        Logs.exhaust( ).error( ex, ex );\n        db.rollback( );\n        throw new EucalyptusCloudException( \"RevokeSecurityGroupIngress failed because: \" + ex.getMessage( ), ex );\n      }\n      return reply;\n    }","commit_id":"b9fa8d4281c17e567ea96b143f99ade757a89797","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"private static void visitGraph(Class<?> type, MutableClassDetails classDetails) {\n        Set<Class<?>> seen = new HashSet<Class<?>>();\n        List<Class<?>> queue = new ArrayList<Class<?>>();\n        queue.add(type);\n        while (!queue.isEmpty()) {\n            Class<?> current = queue.remove(0);\n            if (!seen.add(current)) {\n                continue;\n            }\n            inspectClass(current, classDetails);\n            for (Class<?> c : current.getInterfaces()) {\n                queue.add(0, c);\n            }\n            if (current.getSuperclass() != null && current.getSuperclass() != Object.class) {\n                queue.add(0, current.getSuperclass());\n            }\n        }\n    }","id":82443,"modified_method":"private static void visitGraph(Class<?> type, MutableClassDetails classDetails) {\n        Set<Class<?>> seen = new HashSet<Class<?>>();\n        List<Class<?>> queue = new ArrayList<Class<?>>();\n        queue.add(type);\n        while (!queue.isEmpty()) {\n            Class<?> current = queue.remove(0);\n            if (!seen.add(current)) {\n                continue;\n            }\n            if (!current.equals(type)) {\n                classDetails.superType(current);\n            }\n            inspectClass(current, classDetails);\n            if (current.getSuperclass() != null && current.getSuperclass() != Object.class) {\n                queue.add(current.getSuperclass());\n            }\n            Collections.addAll(queue, current.getInterfaces());\n        }\n    }","commit_id":"a0d65d030b202258ac0446384bae1c9d69eefb82","url":"https://github.com/gradle/gradle"},{"original_method":"public void removeMonitorListener( Object monitorListener )\n    {\n        Iterator<Map.Entry<Predicate<Method>, MonitorListenerInvocationHandler>> iter = monitorListeners.entrySet\n                ().iterator();\n        while ( iter.hasNext() )\n        {\n            Map.Entry<Predicate<Method>, MonitorListenerInvocationHandler> handlerEntry = iter.next();\n            if ( handlerEntry.getValue() instanceof UntaggedMonitorListenerInvocationHandler )\n            {\n                if ( ((UntaggedMonitorListenerInvocationHandler)\n                        handlerEntry.getValue()).getMonitorListener() == monitorListener )\n                {\n                    iter.remove();\n                }\n            }\n        }\n\n        recalculateAllMethodListeners();\n    }","id":82444,"modified_method":"public synchronized void removeMonitorListener( Object monitorListener )\n    {\n        Iterator<Map.Entry<Predicate<Method>, MonitorListenerInvocationHandler>> iter =\n                monitorListeners.entrySet().iterator();\n\n        while ( iter.hasNext() )\n        {\n            Map.Entry<Predicate<Method>, MonitorListenerInvocationHandler> handlerEntry = iter.next();\n            if ( handlerEntry.getValue() instanceof UntaggedMonitorListenerInvocationHandler )\n            {\n                UntaggedMonitorListenerInvocationHandler handler =\n                        (UntaggedMonitorListenerInvocationHandler) handlerEntry.getValue();\n\n                if ( handler.getMonitorListener() == monitorListener )\n                {\n                    iter.remove();\n                }\n            }\n        }\n\n        recalculateAllMethodListeners();\n    }","commit_id":"05b1b475a008e8f222eb22f716458ed501180dc8","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n        public void invoke( Object proxy, Method method, Object[] args, String... tags )\n                throws Throwable\n        {\n            required:\n            for ( int i = 0; i < this.tags.length; i++ )\n            {\n                String requiredTag = this.tags[i];\n                for ( int j = 0; j < tags.length; j++ )\n                {\n                    String tag = tags[j];\n                    if ( requiredTag.equals( tag ) )\n                    {\n                        continue required;\n                    }\n                }\n                return; // Not all required tags present\n            }\n\n            super.invoke( proxy, method, args, tags );\n        }","id":82445,"modified_method":"@Override\n        public void invoke( Object proxy, Method method, Object[] args, String... tags ) throws Throwable\n        {\n            required:\n            for ( String requiredTag : this.tags )\n            {\n                for ( String tag : tags )\n                {\n                    if ( requiredTag.equals( tag ) )\n                    {\n                        continue required;\n                    }\n                }\n                return; // Not all required tags present\n            }\n\n            super.invoke( proxy, method, args, tags );\n        }","commit_id":"05b1b475a008e8f222eb22f716458ed501180dc8","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void invokeMonitorListeners( Object proxy, Method method, Object[] args )\n        {\n            List<MonitorListenerInvocationHandler> handlers = methodMonitorListeners.get().get( method );\n            if ( handlers != null )\n            {\n                for ( int i = 0; i < handlers.size(); i++ )\n                {\n                    MonitorListenerInvocationHandler monitorListenerInvocationHandler = handlers.get( i );\n                    try\n                    {\n                        monitorListenerInvocationHandler.invoke( proxy, method, args, tags );\n                    }\n                    catch ( Throwable e )\n                    {\n                        if ( !method.getDeclaringClass().equals( Monitor.class ) )\n                        {\n                            monitorsMonitor.monitorListenerException( e );\n                        }\n                    }\n                }\n            }\n        }","id":82446,"modified_method":"private void invokeMonitorListeners( Object proxy, Method method, Object[] args )\n        {\n            List<MonitorListenerInvocationHandler> handlers = methodMonitorListeners.get( method );\n\n            if ( handlers != null )\n            {\n                for ( MonitorListenerInvocationHandler monitorListenerInvocationHandler : handlers )\n                {\n                    try\n                    {\n                        monitorListenerInvocationHandler.invoke( proxy, method, args, tags );\n                    }\n                    catch ( Throwable e )\n                    {\n                        if ( !method.getDeclaringClass().equals( Monitor.class ) )\n                        {\n                            monitorsMonitor.monitorListenerException( e );\n                        }\n                    }\n                }\n            }\n        }","commit_id":"05b1b475a008e8f222eb22f716458ed501180dc8","url":"https://github.com/neo4j/neo4j"},{"original_method":"private Iterable<Class<?>> getInterfacesOf( Class<?> aClass )\n    {\n        List<Class<?>> interfaces = new ArrayList<Class<?>>();\n        while ( aClass != null )\n        {\n            for ( Class<?> classInterface : aClass.getInterfaces() )\n            {\n                interfaces.add( classInterface );\n            }\n            aClass = aClass.getSuperclass();\n        }\n        return interfaces;\n    }","id":82447,"modified_method":"private Iterable<Class<?>> getInterfacesOf( Class<?> aClass )\n    {\n        List<Class<?>> interfaces = new ArrayList<>();\n        while ( aClass != null )\n        {\n            Collections.addAll( interfaces, aClass.getInterfaces() );\n            aClass = aClass.getSuperclass();\n        }\n        return interfaces;\n    }","commit_id":"05b1b475a008e8f222eb22f716458ed501180dc8","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void recalculateMethodListeners( Method method )\n    {\n        List<MonitorListenerInvocationHandler> listeners = new ArrayList<MonitorListenerInvocationHandler>();\n        for ( Map.Entry<Predicate<Method>, MonitorListenerInvocationHandler> handlerEntry : monitorListeners\n                .entrySet() )\n        {\n            if ( handlerEntry.getKey().accept( method ) )\n            {\n                listeners.add( handlerEntry.getValue() );\n            }\n        }\n        methodMonitorListeners.get().put( method, listeners );\n    }","id":82448,"modified_method":"private void recalculateMethodListeners( Method method )\n    {\n        List<MonitorListenerInvocationHandler> listeners = new ArrayList<>();\n        for ( Map.Entry<Predicate<Method>, MonitorListenerInvocationHandler> handlerEntry : monitorListeners.entrySet() )\n        {\n            if ( handlerEntry.getKey().accept( method ) )\n            {\n                listeners.add( handlerEntry.getValue() );\n            }\n        }\n        methodMonitorListeners.put( method, listeners );\n    }","commit_id":"05b1b475a008e8f222eb22f716458ed501180dc8","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void recalculateAllMethodListeners()\n    {\n        for ( Method method : methodMonitorListeners.get().keySet() )\n        {\n            recalculateMethodListeners( method );\n        }\n    }","id":82449,"modified_method":"private void recalculateAllMethodListeners()\n    {\n        for ( Method method : methodMonitorListeners.keySet() )\n        {\n            recalculateMethodListeners( method );\n        }\n    }","commit_id":"05b1b475a008e8f222eb22f716458ed501180dc8","url":"https://github.com/neo4j/neo4j"},{"original_method":"public <T> T newMonitor( Class<T> monitorClass, Class<?> owningClass, String... tags )\n    {\n        return newMonitor( monitorClass, toArray( String.class, append( owningClass.getName(), Iterables.<String, String>iterable(\n                tags ) ) ) );\n    }","id":82450,"modified_method":"public synchronized <T> T newMonitor( Class<T> monitorClass, Class<?> owningClass, String... tags )\n    {\n        Iterable<String> tagIer = append( owningClass.getName(), Iterables.<String,String>iterable( tags ) );\n        String[] tagArray = toArray( String.class, tagIer );\n        return newMonitor( monitorClass, tagArray );\n    }","commit_id":"05b1b475a008e8f222eb22f716458ed501180dc8","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void addMonitorListener( final Object monitorListener, String... tags )\n    {\n        MonitorListenerInvocationHandler monitorListenerInvocationHandler = tags.length == 0 ? new\n                UntaggedMonitorListenerInvocationHandler( monitorListener ) :\n                new TaggedMonitorListenerInvocationHandler( monitorListener, tags );\n        for ( Class<?> monitorInterface : getInterfacesOf( monitorListener.getClass() ) )\n        {\n            for ( final Method method : monitorInterface.getMethods() )\n            {\n                monitorListeners.put( new Predicate<Method>()\n                {\n                    @Override\n                    public boolean accept( Method item )\n                    {\n                        return method.equals( item );\n                    }\n                }, monitorListenerInvocationHandler );\n\n                recalculateMethodListeners( method );\n            }\n        }\n    }","id":82451,"modified_method":"public synchronized void addMonitorListener( final Object monitorListener, String... tags )\n    {\n        MonitorListenerInvocationHandler monitorListenerInvocationHandler =\n                tags.length == 0 ? new UntaggedMonitorListenerInvocationHandler( monitorListener )\n                                 : new TaggedMonitorListenerInvocationHandler( monitorListener, tags );\n\n        for ( Class<?> monitorInterface : getInterfacesOf( monitorListener.getClass() ) )\n        {\n            for ( final Method method : monitorInterface.getMethods() )\n            {\n                monitorListeners.put(\n                        Predicates.equalTo( method ),\n                        monitorListenerInvocationHandler );\n\n                recalculateMethodListeners( method );\n            }\n        }\n    }","commit_id":"05b1b475a008e8f222eb22f716458ed501180dc8","url":"https://github.com/neo4j/neo4j"},{"original_method":"/**\n     * Constructor of this component.\n     * \n     * @param reference the document holding the component definition\n     * @param roleType the role Type implemented\n     * @param roleHint the role hint for this role implementation\n     */\n    public DefaultWikiComponent(DocumentReference reference, Type roleType, String roleHint)\n    {\n        this.documentReference = reference;\n        this.roleType = roleType;\n        this.roleHint = roleHint;\n    }","id":82452,"modified_method":"/**\n     * Constructor of this component.\n     * \n     * @param documentReference the document holding the component definition\n     * @param authorReference the author of the document holding the component definition\n     * @param roleType the role Type implemented\n     * @param roleHint the role hint for this role implementation\n     * @param scope the scope of this component\n     */\n    public DefaultWikiComponent(DocumentReference documentReference, DocumentReference authorReference,\n        Type roleType, String roleHint, WikiComponentScope scope)\n    {\n        this.documentReference = documentReference;\n        this.authorReference = authorReference;\n        this.roleType = roleType;\n        this.roleHint = roleHint;\n        this.scope = scope;\n    }","commit_id":"eee7dbf478d3dc58b3db5f00467679780df40110","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Override\n    public List<WikiComponent> buildComponents(DocumentReference reference) throws WikiComponentException\n    {\n        List<WikiComponent> components = new ArrayList<WikiComponent>();\n\n        try {\n            XWikiDocument componentDocument = getXWikiContext().getWiki().getDocument(reference, getXWikiContext());\n            BaseObject componentObject = componentDocument.getObject(COMPONENT_CLASS);\n\n            if (!getXWikiContext().getWiki().getRightService().hasProgrammingRights(componentDocument,\n                getXWikiContext())) {\n                throw new WikiComponentException(\"Registering wiki components requires programming rights\");\n            }\n\n            if (componentObject == null) {\n                throw new WikiComponentException(\"No component object could be found\");\n            }\n\n            String role = componentObject.getStringValue(COMPONENT_ROLE_TYPE_FIELD);\n\n            if (StringUtils.isBlank(role)) {\n                throw new WikiComponentException(\"No role was specified in the component\");\n            }\n\n            Class< ? > roleAsClass;\n            try {\n                roleAsClass = ReflectionUtils.getTypeClass(ReflectionUtils.unserializeType(role,\n                    Thread.currentThread().getContextClassLoader()));\n            } catch (ClassNotFoundException e) {\n                throw new WikiComponentException(String.format(\"The role class [%s] could not be found\", role), e);\n            }\n\n            String roleHint = StringUtils.defaultIfEmpty(componentObject.getStringValue(\"roleHint\"), \"default\");\n\n            DefaultWikiComponent component = new DefaultWikiComponent(reference, roleAsClass, roleHint);\n            component.setHandledMethods(this.getHandledMethods(componentDocument));\n            component.setImplementedInterfaces(this.getDeclaredInterfaces(componentDocument));\n            component.setDependencies(this.getDependencies(componentDocument));\n            component.setSyntax(componentDocument.getSyntax());\n\n            components.add(component);\n        } catch (XWikiException e) {\n            throw new WikiComponentException(\n                String.format(\"Failed to build wiki component for document [%s]\", reference.toString()), e);\n        }\n\n        return components;\n    }","id":82453,"modified_method":"@Override\n    public List<WikiComponent> buildComponents(DocumentReference reference) throws WikiComponentException\n    {\n        List<WikiComponent> components = new ArrayList<WikiComponent>();\n\n        if (!this.componentBridge.hasProgrammingRights(reference)) {\n            throw new WikiComponentException(\"Registering wiki components requires programming rights\");\n        }\n\n        DefaultWikiComponent rawComponent =\n            new DefaultWikiComponent(reference, componentBridge.getAuthorReference(reference),\n                componentBridge.getRoleType(reference), componentBridge.getRoleHint(reference),\n                componentBridge.getScope(reference));\n        rawComponent.setHandledMethods(componentBridge.getHandledMethods(reference));\n        rawComponent.setImplementedInterfaces(componentBridge.getDeclaredInterfaces(reference));\n        rawComponent.setDependencies(componentBridge.getDependencies(reference));\n        rawComponent.setSyntax(componentBridge.getSyntax(reference));\n\n        // Create the method invocation handler of the proxy\n        InvocationHandler handler = new DefaultWikiComponentInvocationHandler(rawComponent, rootComponentManager);\n\n        // Prepare a list containing the interfaces the component implements\n        List<Class<?>> implementedInterfaces = new ArrayList<Class<?>>();\n        // Add the main role\n        Class<?> roleTypeClass = ReflectionUtils.getTypeClass(rawComponent.getRoleType());\n        // Add the component role\n        implementedInterfaces.add(ReflectionUtils.getTypeClass(roleTypeClass));\n        // Add the additional interfaces declared through XObjects\n        implementedInterfaces.addAll(rawComponent.getImplementedInterfaces());\n        // Add the interfaces from the java class itself (interfaces implemented by DefaultWikiComponent)\n        implementedInterfaces.addAll(Arrays.asList(rawComponent.getClass().getInterfaces()));\n\n        // Create the proxy\n        Class<?>[] implementedInterfacesArray = implementedInterfaces.toArray(new Class<?>[0]);\n        WikiComponent component = (WikiComponent) Proxy.newProxyInstance(roleTypeClass.getClassLoader(),\n            implementedInterfacesArray, handler);\n\n        components.add(component);\n\n        return components;\n    }","commit_id":"eee7dbf478d3dc58b3db5f00467679780df40110","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Verify that the {@link #COMPONENT_CLASS} exists and is up-to-date (act if not).\n     *\n     * @throws XWikiException on failure\n     */\n    private void installOrUpdateComponentXClass() throws XWikiException\n    {\n        XWikiContext xcontext = getXWikiContext();\n        XWikiDocument doc = xcontext.getWiki().getDocument(COMPONENT_CLASS, xcontext);\n\n        BaseClass bclass = doc.getXClass();\n        bclass.setName(COMPONENT_CLASS);\n\n        boolean needsUpdate = false;\n\n        needsUpdate |= initializeXClassDocumentMetadata(doc, \"Wiki Component XWiki Class\");\n        needsUpdate |= bclass.addTextField(COMPONENT_ROLE_TYPE_FIELD, \"Component Role Type\", 30);\n        needsUpdate |= bclass.addTextField(COMPONENT_ROLE_HINT_FIELD, \"Component Role Hint\", 30);\n\n        if (needsUpdate) {\n            this.update(doc);\n        }\n    }","id":82454,"modified_method":"/**\n     * Verify that the {@link #COMPONENT_CLASS} exists and is up-to-date (act if not).\n     *\n     * @throws XWikiException on failure\n     */\n    private void installOrUpdateComponentXClass() throws XWikiException\n    {\n        XWikiContext xcontext = getXWikiContext();\n        XWikiDocument doc = xcontext.getWiki().getDocument(COMPONENT_CLASS, xcontext);\n\n        BaseClass bclass = doc.getXClass();\n        bclass.setName(COMPONENT_CLASS);\n\n        boolean needsUpdate = false;\n\n        needsUpdate |= initializeXClassDocumentMetadata(doc, \"Wiki Component XWiki Class\");\n        needsUpdate |= bclass.addTextField(COMPONENT_ROLE_TYPE_FIELD, \"Component Role Type\", 30);\n        needsUpdate |= bclass.addTextField(COMPONENT_ROLE_HINT_FIELD, \"Component Role Hint\", 30);\n        needsUpdate |= bclass.addStaticListField(COMPONENT_SCOPE_FIELD, \"Component Scope\", 1, false,\n            \"wiki=Current Wiki|user=Current User|global=Global\", \"select\");\n\n        if (needsUpdate) {\n            this.update(doc);\n        }\n    }","commit_id":"eee7dbf478d3dc58b3db5f00467679780df40110","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Override\n    public List<Event> getEvents()\n    {\n        return Arrays.<Event> asList(new ApplicationReadyEvent());\n    }","id":82455,"modified_method":"@Override\n    public List<Event> getEvents()\n    {\n        return Arrays.<Event> asList(new ApplicationReadyEvent(), new WikiReadyEvent());\n    }","commit_id":"eee7dbf478d3dc58b3db5f00467679780df40110","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Test\n    public void buildComponents() throws Exception\n    {\n        final XWikiRightService rightService = getMockery().mock(XWikiRightService.class);\n        final ComponentManager componentManager = getComponentManager().getInstance(ComponentManager.class);\n        final Parser parser = getMockery().mock(Parser.class);\n        final BaseObject componentObject = getMockery().mock(BaseObject.class, \"component\");\n        final BaseObject methodObject = getMockery().mock(BaseObject.class, \"method\");\n        final BaseObject interfaceObject = getMockery().mock(BaseObject.class, \"interface\");\n        final Vector<BaseObject> methodObjects = new Vector<BaseObject>();\n        final Vector<BaseObject> interfaceObjects = new Vector<BaseObject>();\n        final XDOM xdom = new XDOM(new ArrayList<Block>());\n        methodObjects.add(methodObject);\n        interfaceObjects.add(interfaceObject);\n\n        getMockery().checking(new Expectations()\n        {\n            {\n                oneOf(componentDoc).getObject(COMPONENT_CLASS);\n                will(returnValue(componentObject));\n                oneOf(componentObject).getStringValue(COMPONENT_ROLE_TYPE_FIELD);\n                will(returnValue(TestRole.class.getCanonicalName()));\n                oneOf(componentObject).getStringValue(COMPONENT_ROLE_HINT_FIELD);\n                will(returnValue(ROLE_HINT));\n                oneOf(componentDoc).getObjectNumbers(METHOD_CLASS);\n                will(returnValue(1));\n                oneOf(componentDoc).getObjectNumbers(INTERFACE_CLASS);\n                will(returnValue(1));\n                oneOf(componentDoc).getObjectNumbers(DEPENDENCY_CLASS);\n                will(returnValue(0));\n                oneOf(componentDoc).getObjects(METHOD_CLASS);\n                will(returnValue(methodObjects));\n                oneOf(componentDoc).getObjects(INTERFACE_CLASS);\n                will(returnValue(interfaceObjects));\n                allowing(methodObject).getStringValue(METHOD_NAME_FIELD);\n                will(returnValue(\"test\"));\n                allowing(interfaceObject).getStringValue(INTERFACE_NAME_FIELD);\n                will(returnValue(\"org.xwiki.component.phase.Initializable\"));\n                oneOf(methodObject).getStringValue(METHOD_CODE_FIELD);\n                will(returnValue(\"\"));\n                oneOf(xwiki).getRightService();\n                will(returnValue(rightService));\n                oneOf(rightService).hasProgrammingRights(componentDoc, xwikiContext);\n                will(returnValue(true));\n                oneOf(parser).parse(with(any(Reader.class)));\n                will(returnValue(xdom));\n                oneOf(componentManager).getInstance(Parser.class, Syntax.XWIKI_2_0.toIdString());\n                will(returnValue(parser));\n            }\n        });\n\n        List<WikiComponent> components = this.provider.buildComponents(DOC_REFERENCE);\n\n        Assert.assertEquals(1, components.size());\n        Assert.assertEquals(1, ((DefaultWikiComponent) components.get(0)).getHandledMethods().size());\n        Assert.assertEquals(1, ((DefaultWikiComponent) components.get(0)).getImplementedInterfaces().size());\n    }","id":82456,"modified_method":"@Test\n    public void buildComponents() throws Exception\n    {\n        getMockery().checking(new Expectations()\n        {\n            {\n                oneOf(bridge).hasProgrammingRights(DOC_REFERENCE);\n                will(returnValue(true));\n                oneOf(bridge).getAuthorReference(DOC_REFERENCE);\n                will(returnValue(AUTHOR_REFERENCE));\n                oneOf(bridge).getRoleType(DOC_REFERENCE);\n                will(returnValue(TestRole.class));\n                oneOf(bridge).getRoleHint(DOC_REFERENCE);\n                will(returnValue(\"test\"));\n                oneOf(bridge).getScope(DOC_REFERENCE);\n                will(returnValue(WikiComponentScope.WIKI));\n                oneOf(bridge).getHandledMethods(DOC_REFERENCE);\n                will(returnValue(MapUtils.EMPTY_MAP));\n                oneOf(bridge).getDependencies(DOC_REFERENCE);\n                will(returnValue(MapUtils.EMPTY_MAP));\n                oneOf(bridge).getDeclaredInterfaces(DOC_REFERENCE);\n                will(returnValue(ListUtils.EMPTY_LIST));\n                oneOf(bridge).getSyntax(DOC_REFERENCE);\n                will(returnValue(Syntax.XWIKI_2_1));\n            }\n        });\n\n        List<WikiComponent> components = this.builder.buildComponents(DOC_REFERENCE);\n\n        Assert.assertEquals(1, components.size());\n    }","commit_id":"eee7dbf478d3dc58b3db5f00467679780df40110","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Before\n    public void configure() throws Exception\n    {\n        getMockery().setImposteriser(ClassImposteriser.INSTANCE);\n\n        Utils.setComponentManager(getComponentManager());\n\n        final Execution execution = getComponentManager().getInstance(Execution.class);\n        final ExecutionContext context = new ExecutionContext();\n\n        this.xwiki = getMockery().mock(XWiki.class);\n\n        this.xwikiContext = new XWikiContext();\n        this.xwikiContext.setDatabase(\"xwiki\");\n        this.xwikiContext.setWiki(this.xwiki);\n\n        context.setProperty(\"xwikicontext\", this.xwikiContext);\n\n        this.componentDoc = getMockery().mock(XWikiDocument.class);\n\n        getMockery().checking(new Expectations()\n        {\n            {\n                allowing(execution).getContext();\n                will(returnValue(context));\n                allowing(xwiki).getDocument(DOC_REFERENCE, xwikiContext);\n                will(returnValue(componentDoc));\n                allowing(componentDoc).getSyntax();\n                will(returnValue(Syntax.XWIKI_2_0));\n            }\n        });\n\n        this.provider = getComponentManager().getInstance(WikiComponentBuilder.class);\n    }","id":82457,"modified_method":"@Before\n    public void configure() throws Exception\n    {\n        this.builder = getComponentManager().getInstance(WikiComponentBuilder.class);\n        this.bridge = getComponentManager().getInstance(WikiComponentBridge.class);\n    }","commit_id":"eee7dbf478d3dc58b3db5f00467679780df40110","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Test\n    public void buildComponentsWithoutProgrammingRights() throws Exception\n    {\n        final XWikiRightService rightService = getMockery().mock(XWikiRightService.class);\n\n        getMockery().checking(new Expectations()\n        {\n            {\n                oneOf(componentDoc).getObject(COMPONENT_CLASS);\n                will(returnValue(null));\n                oneOf(xwiki).getRightService();\n                will(returnValue(rightService));\n                oneOf(rightService).hasProgrammingRights(componentDoc, xwikiContext);\n                will(returnValue(false));\n            }\n        });\n\n        try {\n            this.provider.buildComponents(DOC_REFERENCE);\n            Assert.fail(\"Should have thrown an exception\");\n        } catch (WikiComponentException expected) {\n            Assert.assertEquals(\"Registering wiki components requires programming rights\", expected.getMessage());\n        }\n    }","id":82458,"modified_method":"@Test\n    public void buildComponentsWithoutProgrammingRights() throws Exception\n    {\n        getMockery().checking(new Expectations()\n        {\n            {\n                oneOf(bridge).hasProgrammingRights(DOC_REFERENCE);\n                will(returnValue(false));\n            }\n        });\n\n        try {\n            this.builder.buildComponents(DOC_REFERENCE);\n            Assert.fail(\"Should have thrown an exception\");\n        } catch (WikiComponentException expected) {\n            Assert.assertEquals(\"Registering wiki components requires programming rights\", expected.getMessage());\n        }\n    }","commit_id":"eee7dbf478d3dc58b3db5f00467679780df40110","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Override\n    public Object invoke(Object proxy, Method method, Object[] args) throws Exception\n    {\n        WikiComponentMethodExecutor methodExecutor = componentManager.getInstance(WikiComponentMethodExecutor.class);\n\n        // We look for the method in the XObjects.\n        if (!this.wikiComponent.getHandledMethods().containsKey(method.getName())) {\n            if (method.getDeclaringClass() == Object.class) {\n                return ObjectMethodsProxy.invoke(proxy, method, args);\n            } else {\n                // Note: We throw a runtime exception so that our exception doesn't get wrapped by a generic\n                // UndeclaredThrowableException which would not make much sense for the user.\n                // See http://docs.oracle.com/javase/6/docs/api/java/lang/reflect/UndeclaredThrowableException.html\n                throw new WikiComponentRuntimeException(\n                    String.format(\"You need to add an Object of type [%s] in document [%s] to implement method [%s.%s]\",\n                        WikiComponentConstants.METHOD_CLASS,\n                        this.wikiComponent.getDocumentReference(),\n                        method.getDeclaringClass().getName(),\n                        method.getName()));\n            }\n        } else {\n            Map<String, Object> methodContext = new HashMap<String, Object>();\n            XDOM xdom = this.wikiComponent.getHandledMethods().get(method.getName());\n            methodContext.put(METHOD_CONTEXT_COMPONENT_KEY, proxy);\n            this.injectComponentDependencies(methodContext);\n            return methodExecutor.execute(method, args, wikiComponent.getDocumentReference(), xdom,\n                wikiComponent.getSyntax(), methodContext);\n        }\n    }","id":82459,"modified_method":"@Override\n    public Object invoke(Object proxy, Method method, Object[] args) throws Exception\n    {\n        // We look for the method in the XObjects.\n        if (!this.wikiComponent.getHandledMethods().containsKey(method.getName())) {\n            if (method.getDeclaringClass() == Object.class || method.getDeclaringClass() == WikiComponent.class) {\n                // return ObjectMethodsProxy.invoke(proxy, method, args);\n                return method.invoke(wikiComponent, args);\n            } else {\n                // Note: We throw a runtime exception so that our exception doesn't get wrapped by a generic\n                // UndeclaredThrowableException which would not make much sense for the user.\n                // See http://docs.oracle.com/javase/6/docs/api/java/lang/reflect/UndeclaredThrowableException.html\n                throw new WikiComponentRuntimeException(\n                    String.format(\"You need to add an Object of type [%s] in document [%s] to implement method [%s.%s]\",\n                        WikiComponentConstants.METHOD_CLASS,\n                        this.wikiComponent.getDocumentReference(),\n                        method.getDeclaringClass().getName(),\n                        method.getName()));\n            }\n        } else {\n            WikiComponentMethodExecutor methodExecutor =\n                componentManager.getInstance(WikiComponentMethodExecutor.class);\n            Map<String, Object> methodContext = new HashMap<String, Object>();\n            XDOM xdom = this.wikiComponent.getHandledMethods().get(method.getName());\n            methodContext.put(METHOD_CONTEXT_COMPONENT_KEY, proxy);\n            this.injectComponentDependencies(methodContext);\n            return methodExecutor.execute(method, args, wikiComponent.getDocumentReference(), xdom,\n                wikiComponent.getSyntax(), methodContext);\n        }\n    }","commit_id":"eee7dbf478d3dc58b3db5f00467679780df40110","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Override\n    @SuppressWarnings(\"unchecked\")\n    public void registerWikiComponent(WikiComponent component) throws WikiComponentException\n    {\n        if (registeredComponents.contains(component)) {\n            throw new WikiComponentException(\"Component already registered. Try unregistering it first.\");\n        }\n        \n        try {\n            Object instance;\n            // Get the component role interface\n            Type roleType = component.getRoleType();\n            Class<?> roleTypeClass = ReflectionUtils.getTypeClass(roleType);\n            ComponentDescriptor componentDescriptor = this.createComponentDescriptor(roleType, component.getRoleHint());\n\n            // Prepare a list containing the interfaces the component implements\n            List<Class<?>> implementedInterfaces = new ArrayList<Class<?>>();\n\n            // If the component is a Java classes extending the default WikiComponent interface, we add all the\n            // interfaces it implements to the list, except the WikiComponent one of course.\n            for (Class<?> implementedInterface : component.getClass().getInterfaces()) {\n                if (implementedInterface != WikiComponent.class) {\n                    implementedInterfaces.add(implementedInterface);\n                }\n            }\n\n            if (component instanceof DefaultWikiComponent) {\n\n                // Create the method invocation handler of the proxy\n                InvocationHandler handler =\n                    new DefaultWikiComponentInvocationHandler((DefaultWikiComponent) component, componentManager);\n\n                // Add all the interfaces declared through XObjects\n                implementedInterfaces.addAll(((DefaultWikiComponent) component).getImplementedInterfaces());\n\n                // If the component is a pure XObject implementation, we need to add the role interface to the list,\n                // since it's not been added by the previous loops.\n                if (!implementedInterfaces.contains(roleType)) {\n                    implementedInterfaces.add(roleTypeClass);\n                }\n\n                // Create the component instance and its descriptor\n                Class<?>[] implementedInterfacesArray = implementedInterfaces.toArray(new Class<?>[0]);\n                instance = Proxy.newProxyInstance(roleTypeClass.getClassLoader(), implementedInterfacesArray, handler);\n\n                // Finally, register the component against the CM\n                componentManager.registerComponent(componentDescriptor, roleTypeClass.cast(instance));\n            } else {\n                instance = component;\n                componentManager.registerComponent(componentDescriptor, roleTypeClass.cast(component));\n            }\n\n            // Since we are responsible to create the component instance,\n            // we also are responsible of its initialization (if needed)\n            if (this.isInitializable(implementedInterfaces)) {\n                try {\n                    ((Initializable) instance).initialize();\n                } catch (InitializationException e) {\n                    this.logger.error(\"Failed to initialize wiki component\", e);\n                }\n            }\n            \n            // And hold a reference to it.\n            this.registeredComponents.add(component);\n            \n        } catch (ComponentRepositoryException e) {\n            throw new WikiComponentException(\"Failed to register wiki component against component repository\", e);\n        }\n    }","id":82460,"modified_method":"@Override\n    @SuppressWarnings(\"unchecked\")\n    public void registerWikiComponent(WikiComponent component) throws WikiComponentException\n    {\n        if (registeredComponents.contains(component)) {\n            throw new WikiComponentException(\"Component already registered. Try unregistering it first.\");\n        }\n\n        // Save current context information\n        DocumentReference currentUserReference = this.wikiComponentManagerContext.getCurrentUserReference();\n        EntityReference currentEntityReference = this.wikiComponentManagerContext.getCurrentEntityReference();\n        \n        try {\n            // Get the component role interface\n            Type roleType = component.getRoleType();\n            Class<?> roleTypeClass = ReflectionUtils.getTypeClass(roleType);\n            ComponentDescriptor componentDescriptor = this.createComponentDescriptor(roleType, component.getRoleHint());\n\n            // Set the proper information so the component manager use the proper keys to find components to register\n            this.wikiComponentManagerContext.setCurrentUserReference(component.getAuthorReference());\n            this.wikiComponentManagerContext.setCurrentEntityReference(component.getDocumentReference());\n\n            // Since we are responsible to create the component instance, we also are responsible of its initialization\n            if (this.isInitializable(component.getClass().getInterfaces())) {\n                try {\n                    ((Initializable) component).initialize();\n                } catch (InitializationException e) {\n                    this.logger.error(\"Failed to initialize wiki component\", e);\n                }\n            }\n\n            getComponentManager(component.getScope()).registerComponent(componentDescriptor,\n                roleTypeClass.cast(component));\n\n            // And hold a reference to it.\n            this.registeredComponents.add(component);\n        } catch (ComponentLookupException e) {\n            throw new WikiComponentException(String.format(\"Failed to find a component manager for scope [%s] wiki \"\n                + \"component registration failed\",\n                component.getScope()), e);\n        } catch (ComponentRepositoryException e) {\n            throw new WikiComponentException(\"Failed to register wiki component against component repository\", e);\n        }   finally {\n            this.wikiComponentManagerContext.setCurrentUserReference(currentUserReference);\n            this.wikiComponentManagerContext.setCurrentEntityReference(currentEntityReference);\n        }\n    }","commit_id":"eee7dbf478d3dc58b3db5f00467679780df40110","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Override\n    public void unregisterWikiComponents(DocumentReference reference)\n    {\n        WikiComponent unregisteredComponent = null;\n\n        for (WikiComponent registered : this.registeredComponents) {\n            if (registered.getDocumentReference().equals(reference)) {\n                // Unregister component\n                unregisteredComponent = registered;\n                componentManager.unregisterComponent(registered.getRoleType(), registered.getRoleHint());\n            }\n        }\n\n        // Remove reference\n        if (unregisteredComponent != null) {\n            this.registeredComponents.remove(unregisteredComponent);\n        }\n    }","id":82461,"modified_method":"@Override\n    public void unregisterWikiComponents(DocumentReference reference) throws WikiComponentException\n    {\n        WikiComponent unregisteredComponent = null;\n        // Save current context information\n        DocumentReference currentUserReference = this.wikiComponentManagerContext.getCurrentUserReference();\n        EntityReference currentEntityReference = this.wikiComponentManagerContext.getCurrentEntityReference();\n\n        for (WikiComponent registered : this.registeredComponents) {\n            if (registered.getDocumentReference().equals(reference)) {\n                // Unregister component\n                unregisteredComponent = registered;\n                try {\n                    // Set the proper information so the component manager use the proper keys to find components to\n                    // unregister\n                    this.wikiComponentManagerContext.setCurrentUserReference(registered.getAuthorReference());\n                    this.wikiComponentManagerContext.setCurrentEntityReference(registered.getDocumentReference());\n\n                    getComponentManager(registered.getScope()).unregisterComponent(registered.getRoleType(),\n                        registered.getRoleHint());\n                } catch (ComponentLookupException e) {\n                    throw new WikiComponentException(String.format(\"Failed to find a component manager for scope [%s]\",\n                        registered.getScope()), e);\n                }  finally {\n                    this.wikiComponentManagerContext.setCurrentUserReference(currentUserReference);\n                    this.wikiComponentManagerContext.setCurrentEntityReference(currentEntityReference);\n                }\n\n            }\n        }\n\n        // Remove reference\n        if (unregisteredComponent != null) {\n            this.registeredComponents.remove(unregisteredComponent);\n        }\n    }","commit_id":"eee7dbf478d3dc58b3db5f00467679780df40110","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Helper method that checks if at least one of an array of interfaces is the {@link Initializable} class.\n     * \n     * @param interfaces the array of interfaces to test\n     * @return true if at least one of the passed interfaces is the is the {@link Initializable} class.\n     */\n    private boolean isInitializable(List<Class< ? >> interfaces)\n    {\n        for (Class< ? > iface : interfaces) {\n            if (Initializable.class.equals(iface)) {\n                return true;\n            }\n        }\n        return false;\n    }","id":82462,"modified_method":"/**\n     * Helper method that checks if at least one of an array of interfaces is the {@link Initializable} class.\n     *\n     * @param interfaces the array of interfaces to test\n     * @return true if at least one of the passed interfaces is the is the {@link Initializable} class.\n     */\n    private boolean isInitializable(Class< ? >[] interfaces)\n    {\n        for (Class< ? > iface : interfaces) {\n            if (Initializable.class.equals(iface)) {\n                return true;\n            }\n        }\n        return false;\n    }","commit_id":"eee7dbf478d3dc58b3db5f00467679780df40110","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Test\n    public void onApplicationReady() throws Exception\n    {\n        final WikiComponentManager manager = getComponentManager().getInstance(WikiComponentManager.class);\n        final DocumentModelBridge componentDoc = getMockery().mock(DocumentModelBridge.class);\n        final WikiComponent component = new DefaultWikiComponent(DOC_REFERENCE, TestRole.class, ROLE_HINT);\n        final List<WikiComponent> components = new ArrayList<WikiComponent>();\n        components.add(component);\n        final List<DocumentReference> providerReferences = new ArrayList<DocumentReference>();\n        providerReferences.add(DOC_REFERENCE);\n\n        getMockery().checking(new Expectations()\n        {\n            {\n                allowing(componentDoc).getDocumentReference();\n                will(returnValue(DOC_REFERENCE));\n                oneOf(provider).getDocumentReferences();\n                will(returnValue(providerReferences));\n                oneOf(provider).buildComponents(DOC_REFERENCE);\n                will(returnValue(components));\n                oneOf(manager).registerWikiComponent(component);\n            }\n        });\n\n        listener.onEvent(new ApplicationReadyEvent(), null, null);\n    }","id":82463,"modified_method":"@Test\n    public void onApplicationReady() throws Exception\n    {\n        final WikiComponentManager manager = getComponentManager().getInstance(WikiComponentManager.class);\n        final DocumentModelBridge componentDoc = getMockery().mock(DocumentModelBridge.class);\n        final WikiComponent component\n            = new DefaultWikiComponent(DOC_REFERENCE, AUTHOR_REFERENCE, TestRole.class, ROLE_HINT,\n            WikiComponentScope.WIKI);\n        final List<WikiComponent> components = new ArrayList<WikiComponent>();\n        components.add(component);\n        final List<DocumentReference> providerReferences = new ArrayList<DocumentReference>();\n        providerReferences.add(DOC_REFERENCE);\n\n        getMockery().checking(new Expectations()\n        {\n            {\n                allowing(componentDoc).getDocumentReference();\n                will(returnValue(DOC_REFERENCE));\n                oneOf(provider).getDocumentReferences();\n                will(returnValue(providerReferences));\n                oneOf(provider).buildComponents(DOC_REFERENCE);\n                will(returnValue(components));\n                oneOf(manager).registerWikiComponent(component);\n            }\n        });\n\n        listener.onEvent(new ApplicationReadyEvent(), null, null);\n    }","commit_id":"eee7dbf478d3dc58b3db5f00467679780df40110","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Test\n    public void onDocumentUpdated() throws Exception\n    {\n        final WikiComponentManager manager = getComponentManager().getInstance(WikiComponentManager.class);\n        final List<DocumentReference> providerReferences = new ArrayList<DocumentReference>();\n        providerReferences.add(DOC_REFERENCE);\n        final DocumentModelBridge componentDoc = getMockery().mock(DocumentModelBridge.class);\n        final WikiComponent component = new DefaultWikiComponent(DOC_REFERENCE, TestRole.class, ROLE_HINT);\n        final List<WikiComponent> components = new ArrayList<WikiComponent>();\n        components.add(component);\n\n        getMockery().checking(new Expectations()\n        {\n            {\n                allowing(componentDoc).getDocumentReference();\n                will(returnValue(DOC_REFERENCE));\n                oneOf(manager).unregisterWikiComponents(DOC_REFERENCE);\n                oneOf(provider).getDocumentReferences();\n                will(returnValue(providerReferences));\n                oneOf(provider).buildComponents(DOC_REFERENCE);\n                will(returnValue(components));\n                oneOf(manager).registerWikiComponent(component);\n            }\n        });\n\n        Event event = new DocumentUpdatedEvent(DOC_REFERENCE);\n        listener.onEvent(event, componentDoc, null);\n    }","id":82464,"modified_method":"@Test\n    public void onDocumentUpdated() throws Exception\n    {\n        final WikiComponentManager manager = getComponentManager().getInstance(WikiComponentManager.class);\n        final List<DocumentReference> providerReferences = new ArrayList<DocumentReference>();\n        providerReferences.add(DOC_REFERENCE);\n        final DocumentModelBridge componentDoc = getMockery().mock(DocumentModelBridge.class);\n        final WikiComponent component =\n            new DefaultWikiComponent(DOC_REFERENCE, AUTHOR_REFERENCE, TestRole.class, ROLE_HINT,\n                WikiComponentScope.WIKI);\n        final List<WikiComponent> components = new ArrayList<WikiComponent>();\n        components.add(component);\n\n        getMockery().checking(new Expectations()\n        {\n            {\n                allowing(componentDoc).getDocumentReference();\n                will(returnValue(DOC_REFERENCE));\n                oneOf(manager).unregisterWikiComponents(DOC_REFERENCE);\n                oneOf(provider).getDocumentReferences();\n                will(returnValue(providerReferences));\n                oneOf(provider).buildComponents(DOC_REFERENCE);\n                will(returnValue(components));\n                oneOf(manager).registerWikiComponent(component);\n            }\n        });\n\n        Event event = new DocumentUpdatedEvent(DOC_REFERENCE);\n        listener.onEvent(event, componentDoc, null);\n    }","commit_id":"eee7dbf478d3dc58b3db5f00467679780df40110","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Test\n    public void onDocumentCreated() throws Exception\n    {\n        final WikiComponentManager manager = getComponentManager().getInstance(WikiComponentManager.class);\n        final List<DocumentReference> providerReferences = new ArrayList<DocumentReference>();\n        providerReferences.add(DOC_REFERENCE);\n        final DocumentModelBridge componentDoc = getMockery().mock(DocumentModelBridge.class);\n        final WikiComponent component = new DefaultWikiComponent(DOC_REFERENCE, TestRole.class, ROLE_HINT);\n        final List<WikiComponent> components = new ArrayList<WikiComponent>();\n        components.add(component);\n\n        getMockery().checking(new Expectations()\n        {\n            {\n                allowing(componentDoc).getDocumentReference();\n                will(returnValue(DOC_REFERENCE));\n                oneOf(manager).unregisterWikiComponents(DOC_REFERENCE);\n                oneOf(provider).getDocumentReferences();\n                will(returnValue(providerReferences));\n                oneOf(provider).buildComponents(DOC_REFERENCE);\n                will(returnValue(components));\n                oneOf(manager).registerWikiComponent(component);\n            }\n        });\n\n        listener.onEvent(new DocumentCreatedEvent(DOC_REFERENCE), componentDoc, null);\n    }","id":82465,"modified_method":"@Test\n    public void onDocumentCreated() throws Exception\n    {\n        final WikiComponentManager manager = getComponentManager().getInstance(WikiComponentManager.class);\n        final List<DocumentReference> providerReferences = new ArrayList<DocumentReference>();\n        providerReferences.add(DOC_REFERENCE);\n        final DocumentModelBridge componentDoc = getMockery().mock(DocumentModelBridge.class);\n        final WikiComponent component =\n            new DefaultWikiComponent(DOC_REFERENCE, AUTHOR_REFERENCE, TestRole.class, ROLE_HINT,\n                WikiComponentScope.WIKI);\n        final List<WikiComponent> components = new ArrayList<WikiComponent>();\n        components.add(component);\n\n        getMockery().checking(new Expectations()\n        {\n            {\n                allowing(componentDoc).getDocumentReference();\n                will(returnValue(DOC_REFERENCE));\n                oneOf(manager).unregisterWikiComponents(DOC_REFERENCE);\n                oneOf(provider).getDocumentReferences();\n                will(returnValue(providerReferences));\n                oneOf(provider).buildComponents(DOC_REFERENCE);\n                will(returnValue(components));\n                oneOf(manager).registerWikiComponent(component);\n            }\n        });\n\n        listener.onEvent(new DocumentCreatedEvent(DOC_REFERENCE), componentDoc, null);\n    }","commit_id":"eee7dbf478d3dc58b3db5f00467679780df40110","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Test\n    public void registerAlreadyRegisteredWikiComponent() throws Exception\n    {\n        final ComponentManager componentManager = getComponentManager().getInstance(ComponentManager.class, \"wiki\");\n\n        getMockery().checking(new Expectations()\n        {{\n            oneOf(componentManager).registerComponent(with(any(ComponentDescriptor.class)), with(any(Object.class)));\n        }});\n\n        this.manager.registerWikiComponent(this.component);\n\n        try {\n            this.manager.registerWikiComponent(this.component);\n            Assert.fail(\"Should have thrown an exception\");\n        } catch (WikiComponentException expected) {\n            Assert.assertEquals(\"Component already registered. Try unregistering it first.\", expected.getMessage());\n        }\n    }","id":82466,"modified_method":"@Test\n    public void registerAlreadyRegisteredWikiComponent() throws Exception\n    {\n        final ComponentManager componentManager = getComponentManager().getInstance(ComponentManager.class, \"wiki\");\n\n        getMockery().checking(new Expectations()\n        {{\n            oneOf(rootComponentManager).getInstance(ComponentManager.class, \"wiki\");\n            will(returnValue(componentManager));\n            oneOf(componentManager).registerComponent(with(any(ComponentDescriptor.class)), with(any(Object.class)));\n        }});\n\n        this.wikiComponentManager.registerWikiComponent(this.component);\n\n        try {\n            this.wikiComponentManager.registerWikiComponent(this.component);\n            Assert.fail(\"Should have thrown an exception\");\n        } catch (WikiComponentException expected) {\n            Assert.assertEquals(\"Component already registered. Try unregistering it first.\", expected.getMessage());\n        }\n    }","commit_id":"eee7dbf478d3dc58b3db5f00467679780df40110","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Test\n    public void unregisterNotRegisteredWikiComponent() throws Exception\n    {\n        // We check that this doesn't do anything, silently\n        this.manager.unregisterWikiComponents(DOC_REFERENCE);\n    }","id":82467,"modified_method":"@Test\n    public void unregisterNotRegisteredWikiComponent() throws Exception\n    {\n        // We check that this doesn't do anything, silently\n        this.wikiComponentManager.unregisterWikiComponents(DOC_REFERENCE);\n    }","commit_id":"eee7dbf478d3dc58b3db5f00467679780df40110","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Before\n    public void configure() throws Exception\n    {\n        this.manager = getComponentManager().getInstance(WikiComponentManager.class);\n    }","id":82468,"modified_method":"@Before\n    public void configure() throws Exception\n    {\n        this.wikiComponentManager = getComponentManager().getInstance(WikiComponentManager.class);\n        this.rootComponentManager = getComponentManager().getInstance(ComponentManager.class);\n        this.componentManager =\n            getComponentManager().registerMockComponent(this.getMockery(), ComponentManager.class, \"wiki\");\n        this.wikiComponentManagerContext = getComponentManager().getInstance(WikiComponentManagerContext.class);\n\n        getMockery().checking(new Expectations()\n        {{\n            allowing(wikiComponentManagerContext).getCurrentUserReference();\n            will(returnValue(AUTHOR_REFERENCE));\n            allowing(wikiComponentManagerContext).getCurrentEntityReference();\n            will(returnValue(DOC_REFERENCE));\n            allowing(wikiComponentManagerContext).setCurrentEntityReference(DOC_REFERENCE);\n            allowing(wikiComponentManagerContext).setCurrentUserReference(AUTHOR_REFERENCE);\n        }});\n    }","commit_id":"eee7dbf478d3dc58b3db5f00467679780df40110","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Test\n    public void registerWikiComponent() throws Exception\n    {\n        final ComponentManager componentManager = getComponentManager().getInstance(ComponentManager.class, \"wiki\");\n\n        getMockery().checking(new Expectations()\n        {{\n            // The test is here\n            oneOf(componentManager).registerComponent(with(any(ComponentDescriptor.class)), with(any(Object.class)));\n        }});\n\n        this.manager.registerWikiComponent(this.component);\n    }","id":82469,"modified_method":"@Test\n    public void registerWikiComponent() throws Exception\n    {\n        getMockery().checking(new Expectations()\n        {{\n            oneOf(rootComponentManager).getInstance(ComponentManager.class, \"wiki\");\n            will(returnValue(componentManager));\n            // The test is here\n            oneOf(componentManager).registerComponent(with(any(ComponentDescriptor.class)), with(any(Object.class)));\n        }});\n\n        this.wikiComponentManager.registerWikiComponent(this.component);\n    }","commit_id":"eee7dbf478d3dc58b3db5f00467679780df40110","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Test\n    public void unregisterWikiComponent() throws Exception\n    {\n        final ComponentManager componentManager = getComponentManager().getInstance(ComponentManager.class, \"wiki\");\n\n        getMockery().checking(new Expectations()\n        {{\n            oneOf(componentManager).registerComponent(with(any(ComponentDescriptor.class)), with(any(Object.class)));\n            oneOf(componentManager).unregisterComponent((Type) TestRole.class, \"roleHint\");\n        }});\n\n        this.manager.registerWikiComponent(this.component);\n\n        // This call would throw an exception if the component had not been unregistered\n        this.manager.unregisterWikiComponents(DOC_REFERENCE);\n    }","id":82470,"modified_method":"@Test\n    public void unregisterWikiComponent() throws Exception\n    {\n        final ComponentManager componentManager = getComponentManager().getInstance(ComponentManager.class, \"wiki\");\n\n        getMockery().checking(new Expectations()\n        {{\n            allowing(rootComponentManager).getInstance(ComponentManager.class, \"wiki\");\n            will(returnValue(componentManager));\n            oneOf(componentManager).registerComponent(with(any(ComponentDescriptor.class)), with(any(Object.class)));\n            oneOf(componentManager).unregisterComponent((Type) TestRole.class, \"roleHint\");\n        }});\n\n        this.wikiComponentManager.registerWikiComponent(this.component);\n\n        // This call would throw an exception if the component had not been unregistered\n        this.wikiComponentManager.unregisterWikiComponents(DOC_REFERENCE);\n    }","commit_id":"eee7dbf478d3dc58b3db5f00467679780df40110","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Default constructor.\n     *\n     * @param documentReference The document in which the panel is defined\n     * @param xdom The content to display for this panel\n     * @param syntax The syntax in which the content is written\n     * @param componentManager The XWiki content manager\n     * @throws ComponentLookupException If module dependencies are missing\n     */\n    public PanelWikiUIExtension(DocumentReference documentReference, XDOM xdom, Syntax syntax,\n        ComponentManager componentManager) throws ComponentLookupException\n    {\n        this.documentReference = documentReference;\n        this.xdom = xdom;\n        this.syntax = syntax;\n        this.macroTransformation = componentManager.getInstance(Transformation.class, \"macro\");\n        this.compactWikiSerializer = componentManager.getInstance(EntityReferenceSerializer.TYPE_STRING, \"compactwiki\");\n    }","id":82471,"modified_method":"/**\n     * Default constructor.\n     *\n     * @param documentReference The document in which the panel is defined\n     * @param authorReference The author of the document in which the panel is defined\n     * @param xdom The content to display for this panel\n     * @param syntax The syntax in which the content is written\n     * @param componentManager The XWiki content manager\n     * @throws ComponentLookupException If module dependencies are missing\n     */\n    public PanelWikiUIExtension(DocumentReference documentReference, DocumentReference authorReference, XDOM xdom,\n        Syntax syntax, ComponentManager componentManager) throws ComponentLookupException\n    {\n        this.documentReference = documentReference;\n        this.authorReference = authorReference;\n        this.xdom = xdom;\n        this.syntax = syntax;\n        this.macroTransformation = componentManager.getInstance(Transformation.class, \"macro\");\n        this.compactWikiSerializer = componentManager.getInstance(EntityReferenceSerializer.TYPE_STRING, \"compactwiki\");\n    }","commit_id":"eee7dbf478d3dc58b3db5f00467679780df40110","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Override\n    public List<WikiComponent> buildComponents(DocumentReference reference) throws WikiComponentException\n    {\n        List<WikiComponent> components = new ArrayList<WikiComponent>();\n        DocumentReference panelXClass = new DocumentReference(getXWikiContext().getDatabase(), \"Panels\", \"PanelClass\");\n        String content = (String) documentAccessBridge.getProperty(reference, panelXClass, \"content\");\n        Syntax syntax = null;\n\n        try {\n            syntax = documentAccessBridge.getDocument(reference).getSyntax();\n        } catch (Exception e) {\n            String.format(\"Failed to retrieve panel document [{}]\", reference);\n        }\n\n        try {\n            Parser parser = componentManager.getInstance(Parser.class, syntax.toIdString());\n\n            try {\n                XDOM xdom = parser.parse(new StringReader(content));\n                components.add(new PanelWikiUIExtension(reference, xdom, syntax, componentManager));\n            } catch (ParseException e) {\n                throw new WikiComponentException(\n                    String.format(\"Failed to find parse content of panel [{}]\", reference));\n            }\n        } catch (ComponentLookupException e) {\n            throw new WikiComponentException(String.format(\"Failed to find a parser for syntax [{}]\", syntax));\n        }\n\n        return components;\n    }","id":82472,"modified_method":"@Override\n    public List<WikiComponent> buildComponents(DocumentReference reference) throws WikiComponentException\n    {\n        List<WikiComponent> components = new ArrayList<WikiComponent>();\n        DocumentReference panelXClass = new DocumentReference(getXWikiContext().getDatabase(), \"Panels\", \"PanelClass\");\n        String content = (String) documentAccessBridge.getProperty(reference, panelXClass, \"content\");\n        Syntax syntax = null;\n        DocumentReference authorReference;\n\n        try {\n            syntax = documentAccessBridge.getDocument(reference).getSyntax();\n            authorReference =\n                getXWikiContext().getWiki().getDocument(reference, getXWikiContext()).getAuthorReference();\n            Parser parser = componentManager.getInstance(Parser.class, syntax.toIdString());\n\n            try {\n                XDOM xdom = parser.parse(new StringReader(content));\n                components.add(new PanelWikiUIExtension(reference, authorReference, xdom, syntax, componentManager));\n            } catch (ParseException e) {\n                throw new WikiComponentException(\n                    String.format(\"Failed to find parse content of panel [{}]\", reference));\n            }\n        } catch (ComponentLookupException e) {\n            throw new WikiComponentException(String.format(\"Failed to find a parser for syntax [{}]\", syntax));\n        }  catch (Exception e) {\n            String.format(\"Failed to retrieve panel document [{}]\", reference);\n        }\n\n        return components;\n    }","commit_id":"eee7dbf478d3dc58b3db5f00467679780df40110","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Before\n    public void configure() throws Exception\n    {\n        //execution = getComponentManager().getInstance(Execution.class);\n        //final ExecutionContext context = new ExecutionContext();\n\n        contextComponentManager =\n            getComponentManager().registerMockComponent(getMockery(), ComponentManager.class, \"context\", \"context\");\n        final Provider<ComponentManager> componentManagerProvider =\n            getComponentManager().getInstance(\n                new DefaultParameterizedType(null, Provider.class, ComponentManager.class), \"context\");\n        getComponentManager().registerMockComponent(getMockery(), VelocityManager.class);\n        serializer = registerMockComponent(EntityReferenceSerializer.TYPE_STRING);\n        transformation = getComponentManager().registerMockComponent(getMockery(), Transformation.class, \"macro\");\n        this.service = getComponentManager().getInstance(ScriptService.class, \"uix\");\n\n        getMockery().checking(new Expectations()\n        {\n            {\n                //allowing(execution).getContext();\n                //will(returnValue(context));\n                allowing(serializer).serialize(with(any(EntityReference.class)), with(anything()));\n                will(returnValue(\"does not matter\"));\n                allowing(componentManagerProvider).get();\n                will(returnValue(contextComponentManager));\n            }\n        });\n\n        uiExtensions.add(new WikiUIExtension(OBJ1_REF, \"1id3\", \"epId1\", xdom, Syntax.XWIKI_2_0,\n            new HashMap<String, String>(), getComponentManager()));\n        uiExtensions.add(new WikiUIExtension(OBJ2_REF, \"1id1\", \"epId1\", xdom, Syntax.XWIKI_2_0,\n            new HashMap<String, String>(), getComponentManager()));\n        uiExtensions.add(new WikiUIExtension(OBJ3_REF, \"1id2\", \"epId1\", xdom, Syntax.XWIKI_2_0,\n            new HashMap<String, String>(), getComponentManager()));\n        uiExtensions.add(new WikiUIExtension(OBJ4_REF, \"2id1\", \"epId2\", xdom, Syntax.XWIKI_2_0,\n            new HashMap<String, String>(), getComponentManager()));\n    }","id":82473,"modified_method":"@Before\n    public void configure() throws Exception\n    {\n        //execution = getComponentManager().getInstance(Execution.class);\n        //final ExecutionContext context = new ExecutionContext();\n\n        contextComponentManager =\n            getComponentManager().registerMockComponent(getMockery(), ComponentManager.class, \"context\", \"context\");\n        final Provider<ComponentManager> componentManagerProvider =\n            getComponentManager().getInstance(\n                new DefaultParameterizedType(null, Provider.class, ComponentManager.class), \"context\");\n        getComponentManager().registerMockComponent(getMockery(), VelocityManager.class);\n        serializer = registerMockComponent(EntityReferenceSerializer.TYPE_STRING);\n        transformation = getComponentManager().registerMockComponent(getMockery(), Transformation.class, \"macro\");\n        this.service = getComponentManager().getInstance(ScriptService.class, \"uix\");\n\n        getMockery().checking(new Expectations()\n        {\n            {\n                allowing(serializer).serialize(with(any(EntityReference.class)), with(anything()));\n                will(returnValue(\"does not matter\"));\n                allowing(componentManagerProvider).get();\n                will(returnValue(contextComponentManager));\n            }\n        });\n\n        uiExtensions.add(new WikiUIExtension(\"1id3\", \"epId1\", OBJ1_REF, AUTHOR_REFERENCE, getComponentManager()));\n        uiExtensions.add(new WikiUIExtension(\"1id1\", \"epId1\", OBJ2_REF, AUTHOR_REFERENCE, getComponentManager()));\n        uiExtensions.add(new WikiUIExtension(\"1id2\", \"epId1\", OBJ3_REF, AUTHOR_REFERENCE, getComponentManager()));\n        uiExtensions.add(new WikiUIExtension(\"2id1\", \"epId2\", OBJ4_REF, AUTHOR_REFERENCE, getComponentManager()));\n        for (WikiUIExtension uiExtension : uiExtensions) {\n            uiExtension.setXDOM(xdom);\n            uiExtension.setSyntax(Syntax.XWIKI_2_1);\n            uiExtension.setParameters(new HashMap<String, String>());\n            uiExtension.setScope(WikiComponentScope.WIKI);\n        }\n    }","commit_id":"eee7dbf478d3dc58b3db5f00467679780df40110","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Override\n    public String getId()\n    {\n        return this.name;\n    }","id":82474,"modified_method":"@Override\n    public String getId()\n    {\n        return this.id;\n    }","commit_id":"eee7dbf478d3dc58b3db5f00467679780df40110","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Default constructor.\n     *\n     * @param objectReference the reference of the object holding this extension\n     * @param name the name of the extension\n     * @param extensionPointId ID of the extension point this extension is designed for\n     * @param xdom the XDOM to be rendered when this extension is displayed\n     * @param syntax the Syntax of the extension XDOM\n     * @param parameters the extension parameters map\n     * @param componentManager the XWiki component manager\n     */\n    public WikiUIExtension(ObjectReference objectReference, String name, String extensionPointId,\n        XDOM xdom, Syntax syntax, Map<String, String> parameters, ComponentManager componentManager)\n    {\n        this.documentReference = (DocumentReference) objectReference.getParent();\n        this.name = name;\n        this.extensionPointId = extensionPointId;\n        this.xdom = xdom;\n        this.syntax = syntax;\n        this.parameters = parameters;\n        try {\n            this.macroTransformation = componentManager.<Transformation>getInstance(Transformation.class, \"macro\");\n            this.execution = componentManager.getInstance(Execution.class);\n            this.velocityManager = componentManager.getInstance(VelocityManager.class);\n            EntityReferenceSerializer<String> serializer =\n                componentManager.getInstance(EntityReferenceSerializer.TYPE_STRING);\n            this.roleHint = serializer.serialize(objectReference);\n        } catch (Exception e) {\n            LOGGER.error(String.format(\"Failed to get an instance for a component role required by Wiki Components. \"\n                + \"Error: [%s]\", e.getMessage()));\n        }\n    }","id":82475,"modified_method":"/**\n     * Default constructor.\n     *\n     * @param id the id of the extension\n     * @param extensionPointId ID of the extension point this extension is designed for\n     * @param objectReference the reference of the object holding this extension\n     * @param authorReference the reference of the author of the document holding this extension\n     * @param cm the XWiki component manager\n     */\n    public WikiUIExtension(String id, String extensionPointId, ObjectReference objectReference,\n        DocumentReference authorReference, ComponentManager cm)\n    {\n        this.documentReference = (DocumentReference) objectReference.getParent();\n        this.authorReference = authorReference;\n        this.id = id;\n        this.extensionPointId = extensionPointId;\n        try {\n            this.macroTransformation = cm.<Transformation>getInstance(Transformation.class, \"macro\");\n            this.execution = cm.getInstance(Execution.class);\n            this.velocityManager = cm.getInstance(VelocityManager.class);\n            EntityReferenceSerializer<String> serializer = cm.getInstance(EntityReferenceSerializer.TYPE_STRING);\n            this.roleHint = serializer.serialize(objectReference);\n        } catch (Exception e) {\n            LOGGER.error(String.format(\"Failed to get an instance for a component role required by Wiki Components. \"\n                + \"Error: [%s]\", e.getMessage()));\n        }\n    }","commit_id":"eee7dbf478d3dc58b3db5f00467679780df40110","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Override\n    public List<WikiComponent> buildComponents(DocumentReference reference) throws WikiComponentException\n    {\n        List<WikiComponent> extensions = new ArrayList<WikiComponent>();\n        XWikiDocument doc = null;\n\n        try {\n            doc = getXWikiContext().getWiki().getDocument(reference, getXWikiContext());\n\n            if (!getXWikiContext().getWiki().getRightService().hasAccessLevel(\"admin\", doc.getContentAuthor(),\n                \"XWiki.XWikiPreferences\", getXWikiContext())) {\n                throw new WikiComponentException(\"Registering UI extensions requires admin rights at the wiki level\");\n            }\n        } catch (XWikiException e) {\n            throw new WikiComponentException(\"Failed to create UI Extension(s)\", e);\n        }\n\n        // Check whether this document contains a listener definition.\n        List<BaseObject> extensionDefinitions = doc.getXObjects(UI_EXTENSION_CLASS);\n\n        if (extensionDefinitions.size() == 0) {\n            throw new WikiComponentException(String.format(\"No UI extension object could be found in document [%s]\",\n                doc.getPrefixedFullName()));\n        }\n\n        for (BaseObject extensionDefinition : extensionDefinitions) {\n            // Extract extension definition.\n            String id = extensionDefinition.getStringValue(ID_PROPERTY);\n            String extensionPointId = extensionDefinition.getStringValue(EXTENSION_POINT_ID_PROPERTY);\n            String content = extensionDefinition.getStringValue(CONTENT_PROPERTY);\n            Map<String, String> parameters = parseParameters(extensionDefinition.getStringValue(PARAMETERS_PROPERTY));\n\n            try {\n                Parser parser = componentManager.getInstance(Parser.class, doc.getSyntax().toIdString());\n\n                try {\n                    XDOM xdom = parser.parse(new StringReader(content));\n                    WikiUIExtension extension =\n                        new WikiUIExtension(extensionDefinition.getReference(), id, extensionPointId, xdom,\n                            doc.getSyntax(), parameters, componentManager);\n                    extensions.add(extension);\n                } catch (ParseException e) {\n                    throw new WikiComponentException(\n                        String.format(\"Failed to find parse content of extension [{}]\", id));\n                }\n            } catch (ComponentLookupException e) {\n                throw new WikiComponentException(String.format(\"Failed to find a parser for syntax [{}]\",\n                    doc.getSyntax().toIdString()));\n            }\n        }\n\n        return extensions;\n    }","id":82476,"modified_method":"@Override\n    public List<WikiComponent> buildComponents(DocumentReference reference) throws WikiComponentException\n    {\n        List<WikiComponent> extensions = new ArrayList<WikiComponent>();\n        XWikiDocument doc = null;\n\n        try {\n            doc = getXWikiContext().getWiki().getDocument(reference, getXWikiContext());\n        } catch (XWikiException e) {\n            throw new WikiComponentException(\n                String.format(\"Failed to create UI Extension(s) document [%s]\", reference), e);\n        }\n\n        for (BaseObject extensionDefinition : this.getExtensionDefinitions(doc)) {\n            // Extract extension definition.\n            String id = extensionDefinition.getStringValue(ID_PROPERTY);\n            String extensionPointId = extensionDefinition.getStringValue(EXTENSION_POINT_ID_PROPERTY);\n            String content = extensionDefinition.getStringValue(CONTENT_PROPERTY);\n            Map<String, String> parameters = parseParameters(extensionDefinition.getStringValue(PARAMETERS_PROPERTY));\n            WikiComponentScope scope =\n                WikiComponentScope.fromString(extensionDefinition.getStringValue(SCOPE_PROPERTY));\n\n            // Before going further we need to check the document author is authorized to register the extension\n            this.checkRights(doc, scope);\n\n            XDOM xdom = contentParser.parse(content, doc.getSyntax());\n            WikiUIExtension extension =\n                new WikiUIExtension(id, extensionPointId, extensionDefinition.getReference(),\n                    doc.getAuthorReference(),  componentManager);\n            extension.setXDOM(xdom);\n            extension.setSyntax(doc.getSyntax());\n            extension.setParameters(parameters);\n            extension.setScope(scope);\n            extensions.add(extension);\n        }\n\n        return extensions;\n    }","commit_id":"eee7dbf478d3dc58b3db5f00467679780df40110","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Override\n    public List<Event> getEvents()\n    {\n        return Arrays.<Event> asList(new ApplicationReadyEvent());\n    }","id":82477,"modified_method":"@Override\n    public List<Event> getEvents()\n    {\n        return Arrays.<Event> asList(new ApplicationReadyEvent(), new WikiReadyEvent());\n    }","commit_id":"eee7dbf478d3dc58b3db5f00467679780df40110","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Creates or upgrade the XClass allowing to define UI extensions in the wiki.\n     *\n     * @throws XWikiException when the creation or upgrade fails, for example because of an exception in the storage.\n     */\n    public void installOrUpgradeUIExtensionClasses() throws XWikiException\n    {\n        XWikiContext xcontext = getXWikiContext();\n\n        // Install or Upgrade XWiki.UIExtensionClass\n        XWikiDocument doc = xcontext.getWiki().getDocument(documentReferenceResolver.resolve(UI_EXTENSION_CLASS),\n            xcontext);\n        BaseClass bclass = doc.getXClass();\n\n        boolean needsUpdate = false;\n\n        needsUpdate |= setClassesDocumentFields(doc, \"UI Extension Class\");\n        needsUpdate |= bclass.addTextField(EXTENSION_POINT_ID_PROPERTY, \"Extension Point ID\", 30);\n        needsUpdate |= bclass.addTextField(ID_PROPERTY, \"Extension ID\", 30);\n        needsUpdate |= bclass.addTextAreaField(CONTENT_PROPERTY, \"Extension Content\", 40, 10);\n        needsUpdate |= bclass.addTextAreaField(PARAMETERS_PROPERTY, \"Extension Parameters\", 40, 10);\n        if (needsUpdate) {\n            if (doc.isNew()) {\n                doc.setParent(\"XWiki.WebHome\");\n            }\n            xcontext.getWiki().saveDocument(doc, xcontext);\n        }\n    }","id":82478,"modified_method":"/**\n     * Creates or upgrade the XClass allowing to define UI extensions in the wiki.\n     *\n     * @throws XWikiException when the creation or upgrade fails, for example because of an exception in the storage.\n     */\n    public void installOrUpgradeUIExtensionClasses() throws XWikiException\n    {\n        XWikiContext xcontext = getXWikiContext();\n\n        // Install or Upgrade XWiki.UIExtensionClass\n        XWikiDocument doc = xcontext.getWiki().getDocument(documentReferenceResolver.resolve(UI_EXTENSION_CLASS),\n            xcontext);\n        BaseClass bclass = doc.getXClass();\n\n        boolean needsUpdate = false;\n\n        needsUpdate |= setClassesDocumentFields(doc, \"UI Extension Class\");\n        needsUpdate |= bclass.addTextField(EXTENSION_POINT_ID_PROPERTY, \"Extension Point ID\", 30);\n        needsUpdate |= bclass.addTextField(ID_PROPERTY, \"Extension ID\", 30);\n        needsUpdate |= bclass.addTextAreaField(CONTENT_PROPERTY, \"Extension Content\", 40, 10);\n        needsUpdate |= bclass.addTextAreaField(PARAMETERS_PROPERTY, \"Extension Parameters\", 40, 10);\n        needsUpdate |= bclass.addStaticListField(SCOPE_PROPERTY, \"Extension Scope\", 1, false,\n                    \"wiki=Current Wiki|user=Current User|global=Global\", \"select\");\n        if (needsUpdate) {\n            if (doc.isNew()) {\n                doc.setParent(\"XWiki.WebHome\");\n            }\n            xcontext.getWiki().saveDocument(doc, xcontext);\n        }\n    }","commit_id":"eee7dbf478d3dc58b3db5f00467679780df40110","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Test\n    public void buildExtensionsWithoutExtensionObject() throws Exception\n    {\n        final XWikiRightService rightService = getMockery().mock(XWikiRightService.class);\n\n        getMockery().checking(new Expectations()\n        {\n            {\n                oneOf(componentDoc).getContentAuthor();\n                will(returnValue(\"XWiki.Admin\"));\n                oneOf(xwiki).getRightService();\n                will(returnValue(rightService));\n                oneOf(rightService).hasAccessLevel(\"admin\", \"XWiki.Admin\", \"XWiki.XWikiPreferences\", xwikiContext);\n                will(returnValue(true));\n                oneOf(componentDoc).getXObjects(UI_EXTENSION_CLASS);\n                will(returnValue(new ArrayList()));\n                oneOf(componentDoc).getPrefixedFullName();\n                will(returnValue(\"xwiki:XWiki.MyUIExtension\"));\n            }\n        });\n\n        try {\n            this.builder.buildComponents(DOC_REF);\n            Assert.fail(\"Should have thrown an exception\");\n        } catch (WikiComponentException expected) {\n            Assert.assertEquals(\"No UI extension object could be found in document [xwiki:XWiki.MyUIExtension]\",\n                expected.getMessage());\n        }\n    }","id":82479,"modified_method":"@Test\n    public void buildExtensionsWithoutExtensionObject() throws Exception\n    {\n        final XWikiRightService rightService = getMockery().mock(XWikiRightService.class);\n\n        getMockery().checking(new Expectations()\n        {\n            {\n                oneOf(componentDoc).getXObjects(UI_EXTENSION_CLASS);\n                will(returnValue(new ArrayList()));\n                oneOf(componentDoc).getPrefixedFullName();\n                will(returnValue(\"xwiki:XWiki.MyUIExtension\"));\n            }\n        });\n\n        try {\n            this.builder.buildComponents(DOC_REF);\n            Assert.fail(\"Should have thrown an exception\");\n        } catch (WikiComponentException expected) {\n            Assert.assertEquals(\"No UI extension object could be found in document [xwiki:XWiki.MyUIExtension]\",\n                expected.getMessage());\n        }\n    }","commit_id":"eee7dbf478d3dc58b3db5f00467679780df40110","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Test\n    public void buildComponentsWithoutRightService() throws Exception\n    {\n        final XWikiRightService rightService = getMockery().mock(XWikiRightService.class);\n\n        getMockery().checking(new Expectations()\n        {\n            {\n                oneOf(componentDoc).getContentAuthor();\n                will(returnValue(\"XWiki.Admin\"));\n                oneOf(xwiki).getRightService();\n                will(returnValue(rightService));\n                oneOf(rightService).hasAccessLevel(\"admin\", \"XWiki.Admin\", \"XWiki.XWikiPreferences\", xwikiContext);\n                will(throwException(new XWikiException()));\n            }\n        });\n\n        try {\n            this.builder.buildComponents(DOC_REF);\n            Assert.fail(\"Should have thrown an exception\");\n        } catch (WikiComponentException expected) {\n            Assert.assertEquals(\"Failed to create UI Extension(s)\", expected.getMessage());\n        }\n    }","id":82480,"modified_method":"@Test\n    public void buildComponentsWithoutRightService() throws Exception\n    {\n        final XWikiRightService rightService = getMockery().mock(XWikiRightService.class);\n        final BaseObject extensionObject = getMockery().mock(BaseObject.class, \"uiextension\");\n        final Vector<BaseObject> extensionObjects = new Vector<BaseObject>();\n        extensionObjects.add(extensionObject);\n\n        getMockery().checking(new Expectations()\n        {\n            {\n                oneOf(componentDoc).getXObjects(UI_EXTENSION_CLASS);\n                will(returnValue(extensionObjects));\n                oneOf(extensionObject).getStringValue(ID_PROPERTY);\n                will(returnValue(\"name\"));\n                oneOf(extensionObject).getStringValue(EXTENSION_POINT_ID_PROPERTY);\n                will(returnValue(\"extensionPointId\"));\n                oneOf(extensionObject).getStringValue(CONTENT_PROPERTY);\n                will(returnValue(\"content\"));\n                oneOf(extensionObject).getStringValue(PARAMETERS_PROPERTY);\n                will(returnValue(\"key=value=foo\\nkey2=value2\\ninvalid=\\n\\n=invalid\"));\n                oneOf(extensionObject).getStringValue(SCOPE_PROPERTY);\n                will(returnValue(\"wiki\"));\n                oneOf(componentDoc).getContentAuthor();\n                will(returnValue(\"XWiki.Admin\"));\n                oneOf(xwiki).getRightService();\n                will(returnValue(rightService));\n                oneOf(rightService).hasAccessLevel(\"admin\", \"XWiki.Admin\", \"XWiki.XWikiPreferences\", xwikiContext);\n                will(throwException(new XWikiException()));\n            }\n        });\n\n        try {\n            this.builder.buildComponents(DOC_REF);\n            Assert.fail(\"Should have thrown an exception\");\n        } catch (WikiComponentException expected) {\n            Assert.assertEquals(\"Failed to check rights required to register UI Extension(s)\", expected.getMessage());\n        }\n    }","commit_id":"eee7dbf478d3dc58b3db5f00467679780df40110","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Test\n    public void buildComponents() throws Exception\n    {\n        final XWikiRightService rightService = getMockery().mock(XWikiRightService.class);\n        final ComponentManager componentManager = getComponentManager().getInstance(ComponentManager.class, \"wiki\");\n        final Parser parser = getMockery().mock(Parser.class);\n        final Transformation transformation = getMockery().mock(Transformation.class, \"macro\");\n        final VelocityManager velocityManager = getMockery().mock(VelocityManager.class);\n        final VelocityEngine velocityEngine = getMockery().mock(VelocityEngine.class);\n        final VelocityContext velocityContext = new VelocityContext();\n        final BaseObject extensionObject = getMockery().mock(BaseObject.class, \"uiextension\");\n        final Vector<BaseObject> extensionObjects = new Vector<BaseObject>();\n        final ObjectReference extensionReference = new BaseObjectReference(DOC_REF, 1, DOC_REF);\n        final StringWriter writer = new StringWriter();\n        final EntityReferenceSerializer<String> serializer =\n            registerMockComponent(EntityReferenceSerializer.TYPE_STRING);\n        writer.append(\"value=foo\");\n        final XDOM xdom = new XDOM(new ArrayList<Block>());\n        extensionObjects.add(extensionObject);\n\n\n        getMockery().checking(new Expectations()\n        {\n            {\n                allowing(serializer).serialize(with(any(EntityReference.class)), with(anything()));\n                will(returnValue(\"does not matter\"));\n                oneOf(componentDoc).getXObjects(UI_EXTENSION_CLASS);\n                will(returnValue(extensionObjects));\n                oneOf(xwiki).getRightService();\n                will(returnValue(rightService));\n                oneOf(componentDoc).getContentAuthor();\n                will(returnValue(\"XWiki.Admin\"));\n                oneOf(rightService).hasAccessLevel(\"admin\", \"XWiki.Admin\", \"XWiki.XWikiPreferences\", xwikiContext);\n                will(returnValue(true));\n                oneOf(extensionObject).getReference();\n                will(returnValue(extensionReference));\n                oneOf(extensionObject).getStringValue(ID_PROPERTY);\n                will(returnValue(\"name\"));\n                oneOf(extensionObject).getStringValue(EXTENSION_POINT_ID_PROPERTY);\n                will(returnValue(\"extensionPointId\"));\n                oneOf(extensionObject).getStringValue(CONTENT_PROPERTY);\n                will(returnValue(\"content\"));\n                oneOf(extensionObject).getStringValue(PARAMETERS_PROPERTY);\n                will(returnValue(\"key=value=foo\\nkey2=value2\\ninvalid=\\n\\n=invalid\"));\n                oneOf(parser).parse(with(any(Reader.class)));\n                will(returnValue(xdom));\n                oneOf(componentManager).getInstance(Parser.class, Syntax.XWIKI_2_0.toIdString());\n                will(returnValue(parser));\n                oneOf(componentManager).getInstance(Transformation.class, \"macro\");\n                will(returnValue(transformation));\n                oneOf(componentManager).getInstance(Execution.class);\n                will(returnValue(execution));\n                oneOf(componentManager).getInstance(VelocityManager.class);\n                will(returnValue(velocityManager));\n                oneOf(componentManager).getInstance(EntityReferenceSerializer.TYPE_STRING);\n                will(returnValue(serializer));\n                allowing(velocityManager).getVelocityEngine();\n                will(returnValue(velocityEngine));\n                allowing(velocityManager).getVelocityContext();\n                will(returnValue(velocityContext));\n                oneOf(velocityEngine).evaluate(with(any(VelocityContext.class)), with(any(StringWriter.class)),\n                    with(equal(\"\")), with(equal(\"value=foo\")));\n                oneOf(velocityEngine).evaluate(with(any(VelocityContext.class)), with(any(StringWriter.class)),\n                    with(equal(\"\")), with(equal(\"value2\")));\n                will(returnValue(true));\n            }\n        });\n\n        List<WikiComponent> components = this.builder.buildComponents(DOC_REF);\n        Assert.assertEquals(1, components.size());\n\n        UIExtension uiExtension = (WikiUIExtension) components.get(0);\n        Map<String, String> parameters = uiExtension.getParameters();\n        Assert.assertEquals(2, parameters.size());\n    }","id":82481,"modified_method":"@Test\n    public void buildComponents() throws Exception\n    {\n        final XWikiRightService rightService = getMockery().mock(XWikiRightService.class);\n        final ComponentManager componentManager = getComponentManager().getInstance(ComponentManager.class, \"wiki\");\n        final ContentParser contentParser = getComponentManager().getInstance(ContentParser.class);\n        final Parser parser = getMockery().mock(Parser.class);\n        final Transformation transformation = getMockery().mock(Transformation.class, \"macro\");\n        final VelocityManager velocityManager = getMockery().mock(VelocityManager.class);\n        final VelocityEngine velocityEngine = getMockery().mock(VelocityEngine.class);\n        final VelocityContext velocityContext = new VelocityContext();\n\n        final BaseObject extensionObject = getMockery().mock(BaseObject.class, \"uiextension\");\n        final Vector<BaseObject> extensionObjects = new Vector<BaseObject>();\n        extensionObjects.add(extensionObject);\n\n        final ObjectReference extensionReference = new BaseObjectReference(DOC_REF, 1, DOC_REF);\n        final StringWriter writer = new StringWriter();\n        final EntityReferenceSerializer<String> serializer =\n            registerMockComponent(EntityReferenceSerializer.TYPE_STRING);\n        writer.append(\"value=foo\");\n        final XDOM xdom = new XDOM(new ArrayList<Block>());\n\n\n\n        getMockery().checking(new Expectations()\n        {\n            {\n                allowing(serializer).serialize(with(any(EntityReference.class)), with(anything()));\n                will(returnValue(\"does not matter\"));\n                oneOf(componentDoc).getXObjects(UI_EXTENSION_CLASS);\n                will(returnValue(extensionObjects));\n                oneOf(componentDoc).getAuthorReference();\n                will(returnValue(AUTHOR_REFERENCE));\n                oneOf(xwiki).getRightService();\n                will(returnValue(rightService));\n                oneOf(componentDoc).getContentAuthor();\n                will(returnValue(\"XWiki.Admin\"));\n                oneOf(rightService).hasAccessLevel(\"admin\", \"XWiki.Admin\", \"XWiki.XWikiPreferences\", xwikiContext);\n                will(returnValue(true));\n                oneOf(extensionObject).getReference();\n                will(returnValue(extensionReference));\n                oneOf(extensionObject).getStringValue(ID_PROPERTY);\n                will(returnValue(\"name\"));\n                oneOf(extensionObject).getStringValue(EXTENSION_POINT_ID_PROPERTY);\n                will(returnValue(\"extensionPointId\"));\n                oneOf(extensionObject).getStringValue(CONTENT_PROPERTY);\n                will(returnValue(\"content\"));\n                oneOf(extensionObject).getStringValue(PARAMETERS_PROPERTY);\n                will(returnValue(\"key=value=foo\\nkey2=value2\\ninvalid=\\n\\n=invalid\"));\n                oneOf(extensionObject).getStringValue(SCOPE_PROPERTY);\n                will(returnValue(\"wiki\"));\n                oneOf(contentParser).parse(\"content\", Syntax.XWIKI_2_0);\n                will(returnValue(xdom));\n                oneOf(componentManager).getInstance(Transformation.class, \"macro\");\n                will(returnValue(transformation));\n                oneOf(componentManager).getInstance(Execution.class);\n                will(returnValue(execution));\n                oneOf(componentManager).getInstance(VelocityManager.class);\n                will(returnValue(velocityManager));\n                oneOf(componentManager).getInstance(EntityReferenceSerializer.TYPE_STRING);\n                will(returnValue(serializer));\n                allowing(velocityManager).getVelocityEngine();\n                will(returnValue(velocityEngine));\n                allowing(velocityManager).getVelocityContext();\n                will(returnValue(velocityContext));\n                oneOf(velocityEngine).evaluate(with(any(VelocityContext.class)), with(any(StringWriter.class)),\n                    with(equal(\"\")), with(equal(\"value=foo\")));\n                oneOf(velocityEngine).evaluate(with(any(VelocityContext.class)), with(any(StringWriter.class)),\n                    with(equal(\"\")), with(equal(\"value2\")));\n                will(returnValue(true));\n            }\n        });\n\n        List<WikiComponent> components = this.builder.buildComponents(DOC_REF);\n        Assert.assertEquals(1, components.size());\n\n        UIExtension uiExtension = (WikiUIExtension) components.get(0);\n        Map<String, String> parameters = uiExtension.getParameters();\n        Assert.assertEquals(2, parameters.size());\n    }","commit_id":"eee7dbf478d3dc58b3db5f00467679780df40110","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Test\n    public void buildExtensionsWithoutAdminRights() throws Exception\n    {\n        final XWikiRightService rightService = getMockery().mock(XWikiRightService.class);\n\n        getMockery().checking(new Expectations()\n        {\n            {\n                oneOf(componentDoc).getContentAuthor();\n                will(returnValue(\"XWiki.Admin\"));\n                oneOf(xwiki).getRightService();\n                will(returnValue(rightService));\n                oneOf(rightService).hasAccessLevel(\"admin\", \"XWiki.Admin\", \"XWiki.XWikiPreferences\", xwikiContext);\n                will(returnValue(false));\n            }\n        });\n\n        try {\n            this.builder.buildComponents(DOC_REF);\n            Assert.fail(\"Should have thrown an exception\");\n        } catch (WikiComponentException expected) {\n            Assert.assertEquals(\"Registering UI extensions requires admin rights at the wiki level\",\n                expected.getMessage());\n        }\n    }","id":82482,"modified_method":"@Test\n    public void buildExtensionsWithoutAdminRights() throws Exception\n    {\n        final XWikiRightService rightService = getMockery().mock(XWikiRightService.class);\n        final BaseObject extensionObject = getMockery().mock(BaseObject.class, \"uiextension\");\n        final Vector<BaseObject> extensionObjects = new Vector<BaseObject>();\n        extensionObjects.add(extensionObject);\n\n        getMockery().checking(new Expectations()\n        {\n            {\n                oneOf(componentDoc).getXObjects(UI_EXTENSION_CLASS);\n                will(returnValue(extensionObjects));\n                oneOf(extensionObject).getStringValue(ID_PROPERTY);\n                will(returnValue(\"name\"));\n                oneOf(extensionObject).getStringValue(EXTENSION_POINT_ID_PROPERTY);\n                will(returnValue(\"extensionPointId\"));\n                oneOf(extensionObject).getStringValue(CONTENT_PROPERTY);\n                will(returnValue(\"content\"));\n                oneOf(extensionObject).getStringValue(PARAMETERS_PROPERTY);\n                will(returnValue(\"key=value=foo\\nkey2=value2\\ninvalid=\\n\\n=invalid\"));\n                oneOf(extensionObject).getStringValue(SCOPE_PROPERTY);\n                will(returnValue(\"wiki\"));\n                oneOf(componentDoc).getContentAuthor();\n                will(returnValue(\"XWiki.Admin\"));\n                oneOf(xwiki).getRightService();\n                will(returnValue(rightService));\n                oneOf(rightService).hasAccessLevel(\"admin\", \"XWiki.Admin\", \"XWiki.XWikiPreferences\", xwikiContext);\n                will(returnValue(false));\n            }\n        });\n\n        try {\n            this.builder.buildComponents(DOC_REF);\n            Assert.fail(\"Should have thrown an exception\");\n        } catch (WikiComponentException expected) {\n            Assert.assertEquals(\"Registering UI extensions requires admin rights\", expected.getMessage());\n        }\n    }","commit_id":"eee7dbf478d3dc58b3db5f00467679780df40110","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Before\n    public void configure() throws Exception\n    {\n        final ComponentManager componentManager = getMockery().mock(ComponentManager.class);\n        transformation = getMockery().mock(Transformation.class, \"macro\");\n        final Execution execution = getMockery().mock(Execution.class);\n        velocityManager = getMockery().mock(VelocityManager.class);\n        objectReference = new ObjectReference(CLASS_REF.toString() + \"[1]\", DOC_REF);\n        final EntityReferenceSerializer<String> serializer = getMockery().mock(EntityReferenceSerializer.class);\n\n        getMockery().checking(new Expectations()\n        {\n            {\n                oneOf(componentManager).getInstance(Transformation.class, \"macro\");\n                will(returnValue(transformation));\n                oneOf(componentManager).getInstance(Execution.class);\n                will(returnValue(execution));\n                oneOf(componentManager).getInstance(VelocityManager.class);\n                will(returnValue(velocityManager));\n                oneOf(componentManager).getInstance(EntityReferenceSerializer.TYPE_STRING);\n                will(returnValue(serializer));\n                oneOf(serializer).serialize(objectReference);\n                will(returnValue(\"xwiki:XWiki.MyUIExtension^xwiki:XWiki.UIExtensionClass[1]\"));\n            }\n        });\n\n        xdom = new XDOM(new ArrayList<Block>());\n        Map<String, String> parameters = new HashMap();\n        parameters.put(\"key\", \"value=foo\");\n\n        wikiUIExtension = new WikiUIExtension(objectReference, \"name\", \"epId\", xdom, Syntax.XWIKI_2_1, parameters,\n            componentManager);\n    }","id":82483,"modified_method":"@Before\n    public void configure() throws Exception\n    {\n        final ComponentManager componentManager = getMockery().mock(ComponentManager.class);\n        transformation = getMockery().mock(Transformation.class, \"macro\");\n        final Execution execution = getMockery().mock(Execution.class);\n        velocityManager = getMockery().mock(VelocityManager.class);\n        objectReference = new ObjectReference(CLASS_REF.toString() + \"[1]\", DOC_REF);\n        final EntityReferenceSerializer<String> serializer = getMockery().mock(EntityReferenceSerializer.class);\n\n        getMockery().checking(new Expectations()\n        {\n            {\n                oneOf(componentManager).getInstance(Transformation.class, \"macro\");\n                will(returnValue(transformation));\n                oneOf(componentManager).getInstance(Execution.class);\n                will(returnValue(execution));\n                oneOf(componentManager).getInstance(VelocityManager.class);\n                will(returnValue(velocityManager));\n                oneOf(componentManager).getInstance(EntityReferenceSerializer.TYPE_STRING);\n                will(returnValue(serializer));\n                oneOf(serializer).serialize(objectReference);\n                will(returnValue(\"xwiki:XWiki.MyUIExtension^xwiki:XWiki.UIExtensionClass[1]\"));\n            }\n        });\n\n        wikiUIExtension = new WikiUIExtension(\"name\", \"epId\", objectReference, AUTHOR_REFERENCE, componentManager);\n\n        xdom = new XDOM(new ArrayList<Block>());\n        Map<String, String> parameters = new HashMap();\n        parameters.put(\"key\", \"value=foo\");\n\n        wikiUIExtension.setXDOM(xdom);\n        wikiUIExtension.setSyntax(Syntax.XWIKI_2_1);\n        wikiUIExtension.setParameters(parameters);\n    }","commit_id":"eee7dbf478d3dc58b3db5f00467679780df40110","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@GET\n    @Produces(MediaType.APPLICATION_JSON)\n    @Transactional\n    @Path(\"outages/monitoredServices\")\n    public Response outagesByServices() throws IOException {\n        final List<HeatMapElement> heatMapElements = m_outageDao.getHeatMapItemsForEntity(\"service.servicename\", \"service.serviceid\", null, null);\n        final JSONObject jo = new JSONObject(transformResults(heatMapElements, System.getProperty(SERVICE_FILTER_PROPERTY_KEY, SERVICE_FILTER_PROPERTY_DEFAULT)));\n        return Response.ok(jo.toString(), MediaType.APPLICATION_JSON).build();\n    }","id":82484,"modified_method":"@GET\n    @Produces({MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON})\n    @Transactional\n    @Path(\"outages/monitoredServices\")\n    public Response outagesByServices() throws IOException {\n        final List<HeatMapElement> heatMapElements = m_outageDao.getHeatMapItemsForEntity(\"service.servicename\", \"service.serviceid\", null, null);\n        return Response.ok(transformResults(heatMapElements, System.getProperty(SERVICE_FILTER_PROPERTY_KEY, SERVICE_FILTER_PROPERTY_DEFAULT))).build();\n    }","commit_id":"fc6cfaf3756bbb30b3cdefb4dbbce8ab93d2d6ce","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@GET\n    @Produces(MediaType.APPLICATION_JSON)\n    @Transactional\n    @Path(\"outages/foreignSources\")\n    public Response outagesByForeignsources() throws IOException {\n        final List<HeatMapElement> heatMapElements = m_outageDao.getHeatMapItemsForEntity(\"foreignsource\", \"0\", null, null, \"foreignsource\");\n        final JSONObject jo = new JSONObject(transformResults(heatMapElements, System.getProperty(FOREIGNSOURCE_FILTER_PROPERTY_KEY, FOREIGNSOURCE_FILTER_PROPERTY_DEFAULT)));\n        return Response.ok(jo.toString(), MediaType.APPLICATION_JSON).build();\n    }","id":82485,"modified_method":"@GET\n    @Produces({MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON})\n    @Transactional\n    @Path(\"outages/foreignSources\")\n    public Response outagesByForeignsources() throws IOException {\n        final List<HeatMapElement> heatMapElements = m_outageDao.getHeatMapItemsForEntity(\"foreignsource\", \"0\", null, null, \"foreignsource\");\n        return Response.ok(transformResults(heatMapElements, System.getProperty(FOREIGNSOURCE_FILTER_PROPERTY_KEY, FOREIGNSOURCE_FILTER_PROPERTY_DEFAULT))).build();\n    }","commit_id":"fc6cfaf3756bbb30b3cdefb4dbbce8ab93d2d6ce","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@GET\n    @Produces(MediaType.APPLICATION_JSON)\n    @Transactional\n    @Path(\"alarms/monitoredServices\")\n    public Response alarmsByServices() throws IOException {\n        boolean processAcknowledged = !Boolean.parseBoolean(System.getProperty(ONLY_UNACKNOWLEDGED_PROPERTY_KEY, ONLY_UNACKNOWLEDGED_PROPERTY_DEFAULT));\n        final List<HeatMapElement> heatMapElements = m_alarmDao.getHeatMapItemsForEntity(\"service.servicename\", \"service.serviceid\", processAcknowledged, null, null);\n        final JSONObject jo = new JSONObject(transformResults(heatMapElements, System.getProperty(SERVICE_FILTER_PROPERTY_KEY, SERVICE_FILTER_PROPERTY_DEFAULT)));\n        return Response.ok(jo.toString(), MediaType.APPLICATION_JSON).build();\n    }","id":82486,"modified_method":"@GET\n    @Produces({MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON})\n    @Transactional\n    @Path(\"alarms/monitoredServices\")\n    public Response alarmsByServices() throws IOException {\n        boolean processAcknowledged = !Boolean.parseBoolean(System.getProperty(ONLY_UNACKNOWLEDGED_PROPERTY_KEY, ONLY_UNACKNOWLEDGED_PROPERTY_DEFAULT));\n        final List<HeatMapElement> heatMapElements = m_alarmDao.getHeatMapItemsForEntity(\"service.servicename\", \"service.serviceid\", processAcknowledged, null, null);\n        return Response.ok(transformResults(heatMapElements, System.getProperty(SERVICE_FILTER_PROPERTY_KEY, SERVICE_FILTER_PROPERTY_DEFAULT))).build();\n    }","commit_id":"fc6cfaf3756bbb30b3cdefb4dbbce8ab93d2d6ce","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@GET\n    @Produces(MediaType.APPLICATION_JSON)\n    @Transactional\n    @Path(\"alarms/foreignSources\")\n    public Response alarmsByForeignsources() throws IOException {\n        boolean processAcknowledged = !Boolean.parseBoolean(System.getProperty(ONLY_UNACKNOWLEDGED_PROPERTY_KEY, ONLY_UNACKNOWLEDGED_PROPERTY_DEFAULT));\n        final List<HeatMapElement> heatMapElements = m_alarmDao.getHeatMapItemsForEntity(\"foreignsource\", \"0\", processAcknowledged, null, null, \"foreignsource\");\n        final JSONObject jo = new JSONObject(transformResults(heatMapElements, System.getProperty(FOREIGNSOURCE_FILTER_PROPERTY_KEY, FOREIGNSOURCE_FILTER_PROPERTY_DEFAULT)));\n        return Response.ok(jo.toString(), MediaType.APPLICATION_JSON).build();\n    }","id":82487,"modified_method":"@GET\n    @Produces({MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON})\n    @Transactional\n    @Path(\"alarms/foreignSources\")\n    public Response alarmsByForeignsources() throws IOException {\n        boolean processAcknowledged = !Boolean.parseBoolean(System.getProperty(ONLY_UNACKNOWLEDGED_PROPERTY_KEY, ONLY_UNACKNOWLEDGED_PROPERTY_DEFAULT));\n        final List<HeatMapElement> heatMapElements = m_alarmDao.getHeatMapItemsForEntity(\"foreignsource\", \"0\", processAcknowledged, null, null, \"foreignsource\");\n        return Response.ok(transformResults(heatMapElements, System.getProperty(FOREIGNSOURCE_FILTER_PROPERTY_KEY, FOREIGNSOURCE_FILTER_PROPERTY_DEFAULT))).build();\n    }","commit_id":"fc6cfaf3756bbb30b3cdefb4dbbce8ab93d2d6ce","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@GET\n    @Produces(MediaType.APPLICATION_JSON)\n    @Transactional\n    @Path(\"alarms/categories\")\n    public Response alarmsByCategories() throws IOException {\n        boolean processAcknowledged = !Boolean.parseBoolean(System.getProperty(ONLY_UNACKNOWLEDGED_PROPERTY_KEY, ONLY_UNACKNOWLEDGED_PROPERTY_DEFAULT));\n        final List<HeatMapElement> heatMapElements = m_alarmDao.getHeatMapItemsForEntity(\"categories.categoryname\", \"categories.categoryid\", processAcknowledged, null, null);\n        final JSONObject jo = new JSONObject(transformResults(heatMapElements, System.getProperty(CATEGORY_FILTER_PROPERTY_KEY, CATEGORY_FILTER_PROPERTY_DEFAULT)));\n        return Response.ok(jo.toString(), MediaType.APPLICATION_JSON).build();\n    }","id":82488,"modified_method":"@GET\n    @Produces({MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON})\n    @Transactional\n    @Path(\"alarms/categories\")\n    public Response alarmsByCategories() throws IOException {\n        boolean processAcknowledged = !Boolean.parseBoolean(System.getProperty(ONLY_UNACKNOWLEDGED_PROPERTY_KEY, ONLY_UNACKNOWLEDGED_PROPERTY_DEFAULT));\n        final List<HeatMapElement> heatMapElements = m_alarmDao.getHeatMapItemsForEntity(\"categories.categoryname\", \"categories.categoryid\", processAcknowledged, null, null);\n        return Response.ok(transformResults(heatMapElements, System.getProperty(CATEGORY_FILTER_PROPERTY_KEY, CATEGORY_FILTER_PROPERTY_DEFAULT))).build();\n    }","commit_id":"fc6cfaf3756bbb30b3cdefb4dbbce8ab93d2d6ce","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@GET\n    @Produces(MediaType.APPLICATION_JSON)\n    @Transactional\n    @Path(\"outages/categories\")\n    public Response outagesByCategories() throws IOException {\n        final List<HeatMapElement> heatMapElements = m_outageDao.getHeatMapItemsForEntity(\"categories.categoryname\", \"categories.categoryid\", null, null);\n        final JSONObject jo = new JSONObject(transformResults(heatMapElements, System.getProperty(CATEGORY_FILTER_PROPERTY_KEY, CATEGORY_FILTER_PROPERTY_DEFAULT)));\n        return Response.ok(jo.toString(), MediaType.APPLICATION_JSON).build();\n    }","id":82489,"modified_method":"@GET\n    @Produces({MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON})\n    @Transactional\n    @Path(\"outages/categories\")\n    public Response outagesByCategories() throws IOException {\n        final List<HeatMapElement> heatMapElements = m_outageDao.getHeatMapItemsForEntity(\"categories.categoryname\", \"categories.categoryid\", null, null);\n        return Response.ok(transformResults(heatMapElements, System.getProperty(CATEGORY_FILTER_PROPERTY_KEY, CATEGORY_FILTER_PROPERTY_DEFAULT))).build();\n    }","commit_id":"fc6cfaf3756bbb30b3cdefb4dbbce8ab93d2d6ce","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public static void handleDownload(ToadletContext context, Bucket data, BucketFactory bucketFactory, String mimeType, String requestedMimeType, String forceString, boolean forceDownload, String basePath, FreenetURI key, String extras, String referrer, boolean downloadLink, ToadletContext ctx, NodeClientCore core) throws ToadletContextClosedException, IOException {\n\t\tif(Logger.shouldLog(Logger.MINOR, FProxyToadlet.class))\n\t\t\tLogger.minor(FProxyToadlet.class, \"handleDownload(data.size=\"+data.size()+\", mimeType=\"+mimeType+\", requestedMimeType=\"+requestedMimeType+\", forceDownload=\"+forceDownload+\", basePath=\"+basePath+\", key=\"+key);\n\t\tString extrasNoMime = extras; // extras will not include MIME type to start with - REDFLAG maybe it should be an array\n\t\tif(requestedMimeType != null) {\n\t\t\tif(mimeType == null || !requestedMimeType.equals(mimeType)) {\n\t\t\t\tif(extras == null) extras = \"\";\n\t\t\t\textras = extras + \"&type=\" + requestedMimeType;\n\t\t\t}\n\t\t\tmimeType = requestedMimeType;\n\t\t}\n\t\tlong size = data.size();\n\t\t\n\t\tlong now = System.currentTimeMillis();\n\t\tboolean force = false;\n\t\tif(forceString != null) {\n\t\t\tif(forceString.equals(getForceValue(key, now)) || \n\t\t\t\t\tforceString.equals(getForceValue(key, now-FORCE_GRAIN_INTERVAL)))\n\t\t\t\tforce = true;\n\t\t}\n\n\t\tBucket toFree = null;\n\t\ttry {\n\t\t\tif((!force) && (!forceDownload)) {\n\t\t\t\tFilterOutput fo = ContentFilter.filter(data, bucketFactory, mimeType, key.toURI(basePath), context.getContainer().enableInlinePrefetch() ? prefetchHook : null);\n\t\t\t\tif(data != fo.data) toFree = fo.data;\n\t\t\t\tdata = fo.data;\n\t\t\t\tmimeType = fo.type;\n\t\t\t\t\n\t\t\t\tif(horribleEvilHack(data) && !(mimeType.startsWith(\"application/rss+xml\"))) {\n\t\t\t\t\tHTMLNode pageNode = context.getPageMaker().getPageNode(l10n(\"dangerousRSSTitle\"), context);\n\t\t\t\t\tHTMLNode contentNode = context.getPageMaker().getContentNode(pageNode);\n\t\t\t\t\t\n\t\t\t\t\tHTMLNode infobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-alert\");\n\t\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"dangerousRSSSubtitle\"));\n\t\t\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\t\tinfoboxContent.addChild(\"#\", L10n.getString(\"FProxyToadlet.dangerousRSS\", new String[] { \"type\" }, new String[] { mimeType }));\n\t\t\t\t\tinfoboxContent.addChild(\"p\", l10n(\"options\"));\n\t\t\t\t\tHTMLNode optionList = infoboxContent.addChild(\"ul\");\n\t\t\t\t\tHTMLNode option = optionList.addChild(\"li\");\n\t\t\t\t\t\n\t\t\t\t\tL10n.addL10nSubstitution(option, \"FProxyToadlet.openPossRSSAsPlainText\", new String[] { \"link\", \"/link\", \"bold\", \"/bold\" },\n\t\t\t\t\t\t\tnew String[] { \n\t\t\t\t\t\t\t\t\"<a href=\\\"\"+basePath+key.toString()+\"?type=text/plain&force=\"+getForceValue(key,now)+extrasNoMime+\"\\\">\",\n\t\t\t\t\t\t\t\t\"<\/a>\",\n\t\t\t\t\t\t\t\t\"<b>\",\n\t\t\t\t\t\t\t\t\"<\/b>\" });\n\t\t\t\t\t// \tFIXME: is this safe? See bug #131\n\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\tL10n.addL10nSubstitution(option, \"FProxyToadlet.openPossRSSForceDisk\", new String[] { \"link\", \"/link\", \"bold\", \"/bold\" },\n\t\t\t\t\t\t\tnew String[] { \n\t\t\t\t\t\t\t\t\"<a href=\\\"\"+basePath+key.toString()+\"?forcedownload\"+extras+\"\\\">\",\n\t\t\t\t\t\t\t\t\"<\/a>\",\n\t\t\t\t\t\t\t\t\"<b>\",\n\t\t\t\t\t\t\t\t\"<\/b>\" });\n\t\t\t\t\tboolean mimeRSS = mimeType.startsWith(\"application/xml+rss\") || mimeType.startsWith(\"text/xml\"); /* blergh! */\n\t\t\t\t\tif(!(mimeRSS || mimeType.startsWith(\"text/plain\"))) {\n\t\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\t\tL10n.addL10nSubstitution(option, \"FProxyToadlet.openRSSForce\", new String[] { \"link\", \"/link\", \"bold\", \"/bold\", \"mime\" },\n\t\t\t\t\t\t\t\tnew String[] { \n\t\t\t\t\t\t\t\t\t\"<a href=\\\"\"+basePath+key.toString()+\"?force=\"+getForceValue(key, now)+extras+\"\\\">\",\n\t\t\t\t\t\t\t\t\t\"<\/a>\",\n\t\t\t\t\t\t\t\t\t\"<b>\",\n\t\t\t\t\t\t\t\t\t\"<\/b>\",\n\t\t\t\t\t\t\t\t\tHTMLEncoder.encode(mimeType) /* these are not encoded because mostly they are tags, so we have to encode it */ });\n\t\t\t\t\t}\n\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\tL10n.addL10nSubstitution(option, \"FProxyToadlet.openRSSAsRSS\", new String[] { \"link\", \"/link\", \"bold\", \"/bold\" },\n\t\t\t\t\t\t\tnew String[] {\n\t\t\t\t\t\t\t\t\"<a href=\\\"\"+basePath + key.toString() + \"?type=application/xml+rss&force=\" + getForceValue(key, now)+extrasNoMime+\"\\\">\",\n\t\t\t\t\t\t\t\t\"<\/a>\",\n\t\t\t\t\t\t\t\t\"<b>\",\n\t\t\t\t\t\t\t\t\"<\/b>\" });\n\t\t\t\t\tif(referrer != null) {\n\t\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\t\tL10n.addL10nSubstitution(option, \"FProxyToadlet.backToReferrer\", new String[] { \"link\", \"/link\" },\n\t\t\t\t\t\t\t\tnew String[] { \"<a href=\\\"\"+HTMLEncoder.encode(referrer)+\"\\\">\", \"<\/a>\" });\n\t\t\t\t\t}\n\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\tL10n.addL10nSubstitution(option, \"FProxyToadlet.backToFProxy\", new String[] { \"link\", \"/link\" },\n\t\t\t\t\t\t\tnew String[] { \"<a href=\\\"/\\\">\", \"<\/a>\" });\n\t\t\t\t\t\n\t\t\t\t\tbyte[] pageBytes = pageNode.generate().getBytes(\"UTF-8\");\n\t\t\t\t\tcontext.sendReplyHeaders(200, \"OK\", new MultiValueTable<String, String>(), \"text/html; charset=utf-8\", pageBytes.length);\n\t\t\t\t\tcontext.writeData(pageBytes);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (forceDownload) {\n\t\t\t\tMultiValueTable<String, String> headers = new MultiValueTable<String, String>();\n\t\t\t\theaders.put(\"Content-Disposition\", \"attachment; filename=\\\"\" + key.getPreferredFilename() + '\"');\n\t\t\t\tcontext.sendReplyHeaders(200, \"OK\", headers, \"application/x-msdownload\", data.size());\n\t\t\t\tcontext.writeData(data);\n\t\t\t} else {\n\t\t\t\t// Send the data, intact\n\t\t\t\tcontext.sendReplyHeaders(200, \"OK\", new MultiValueTable<String, String>(), mimeType, data.size());\n\t\t\t\tcontext.writeData(data);\n\t\t\t}\n\t\t} catch (URISyntaxException use1) {\n\t\t\t/* shouldn't happen */\n\t\t\tuse1.printStackTrace();\n\t\t\tLogger.error(FProxyToadlet.class, \"could not create URI\", use1);\n\t\t} catch (UnsafeContentTypeException e) {\n\t\t\tHTMLNode pageNode = context.getPageMaker().getPageNode(l10n(\"dangerousContentTitle\"), context);\n\t\t\tHTMLNode contentNode = context.getPageMaker().getContentNode(pageNode);\n\t\t\tHTMLNode infobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-alert\");\n\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", e.getRawTitle());\n\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\tHTMLNode list = infoboxContent.addChild(\"ul\");\n\t\t\twriteSizeAndMIME(list, size, mimeType, true);\n\t\t\tinfoboxContent.addChild(\"p\").addChild(e.getHTMLExplanation());\n\t\t\tinfoboxContent.addChild(\"p\", l10n(\"options\"));\n\t\t\tHTMLNode optionList = infoboxContent.addChild(\"ul\");\n\t\t\tHTMLNode option;\n\t\t\t\n\t\t\tif((mimeType.equals(\"application/x-freenet-index\")) && (core.node.pluginManager.isPluginLoaded(\"plugins.ThawIndexBrowser.ThawIndexBrowser\"))) {\n\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\tL10n.addL10nSubstitution(option, \"FProxyToadlet.openAsThawIndex\", new String[] { \"link\", \"/link\" }, new String[] { \"<b><a href=\\\"\"+basePath + \"plugins/plugins.ThawIndexBrowser.ThawIndexBrowser/?key=\" + key.toString() + \"\\\">\", \"<\/a><\/b>\" });\n\t\t\t}\n\t\t\t\n\t\t\toption = optionList.addChild(\"li\");\n\t\t\t// FIXME: is this safe? See bug #131\n\t\t\tL10n.addL10nSubstitution(option, \"FProxyToadlet.openAsText\", new String[] { \"link\", \"/link\" }, new String[] { \"<a href=\\\"\"+basePath+key.toString()+\"?type=text/plain\"+extrasNoMime+\"\\\">\", \"<\/a>\" });\n\n\t\t\toption = optionList.addChild(\"li\");\n\t\t\tL10n.addL10nSubstitution(option, \"FProxyToadlet.openForceDisk\", new String[] { \"link\", \"/link\" }, new String[] { \"<a href=\\\"\"+basePath+key.toString()+\"?forcedownload\"+extras+\"\\\">\", \"<\/a>\" });\n\t\t\tif(!(mimeType.equals(\"application/octet-stream\") || mimeType.equals(\"application/x-msdownload\"))) {\n\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\tL10n.addL10nSubstitution(option, \"FProxyToadlet.openForce\", new String[] { \"link\", \"/link\", \"mime\" }, new String[] { \"<a href=\\\"\"+basePath + key.toString() + \"?force=\" + getForceValue(key, now)+extras+\"\\\">\", \"<\/a>\", HTMLEncoder.encode(mimeType)});\n\t\t\t}\n\t\t\tif(referrer != null) {\n\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\tL10n.addL10nSubstitution(option, \"FProxyToadlet.backToReferrer\", new String[] { \"link\", \"/link\" },\n\t\t\t\t\t\tnew String[] { \"<a href=\\\"\"+HTMLEncoder.encode(referrer)+\"\\\">\", \"<\/a>\" });\n\t\t\t}\n\t\t\toption = optionList.addChild(\"li\");\n\t\t\tL10n.addL10nSubstitution(option, \"FProxyToadlet.backToFProxy\", new String[] { \"link\", \"/link\" },\n\t\t\t\t\tnew String[] { \"<a href=\\\"/\\\">\", \"<\/a>\" });\n\t\t\tif(ctx.isAllowedFullAccess()) {\n\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\tHTMLNode optionForm = ctx.addFormChild(option, \"/queue/\", \"tooBigQueueForm\");\n\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"key\", key.toString() });\n\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"return-type\", \"disk\" });\n\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"persistence\", \"forever\" });\n\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"type\", mimeType });\n\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"download\", l10n(\"downloadInBackgroundToDisk\") });\n\t\t\t}\n\n\t\t\tbyte[] pageBytes = pageNode.generate().getBytes(\"UTF-8\");\n\t\t\tcontext.sendReplyHeaders(200, \"OK\", new MultiValueTable<String, String>(), \"text/html; charset=utf-8\", pageBytes.length);\n\t\t\tcontext.writeData(pageBytes);\n\t\t} finally {\n\t\t\tif(toFree != null) toFree.free();\n\t\t}\n\t}","id":82490,"modified_method":"public static void handleDownload(ToadletContext context, Bucket data, BucketFactory bucketFactory, String mimeType, String requestedMimeType, String forceString, boolean forceDownload, String basePath, FreenetURI key, String extras, String referrer, boolean downloadLink, ToadletContext ctx, NodeClientCore core) throws ToadletContextClosedException, IOException {\n\t\tif(Logger.shouldLog(Logger.MINOR, FProxyToadlet.class))\n\t\t\tLogger.minor(FProxyToadlet.class, \"handleDownload(data.size=\"+data.size()+\", mimeType=\"+mimeType+\", requestedMimeType=\"+requestedMimeType+\", forceDownload=\"+forceDownload+\", basePath=\"+basePath+\", key=\"+key);\n\t\tString extrasNoMime = extras; // extras will not include MIME type to start with - REDFLAG maybe it should be an array\n\t\tif(requestedMimeType != null) {\n\t\t\tif(mimeType == null || !requestedMimeType.equals(mimeType)) {\n\t\t\t\tif(extras == null) extras = \"\";\n\t\t\t\textras = extras + \"&type=\" + requestedMimeType;\n\t\t\t}\n\t\t\tmimeType = requestedMimeType;\n\t\t}\n\t\tlong size = data.size();\n\t\t\n\t\tlong now = System.currentTimeMillis();\n\t\tboolean force = false;\n\t\tif(forceString != null) {\n\t\t\tif(forceString.equals(getForceValue(key, now)) || \n\t\t\t\t\tforceString.equals(getForceValue(key, now-FORCE_GRAIN_INTERVAL)))\n\t\t\t\tforce = true;\n\t\t}\n\n\t\tBucket toFree = null;\n\t\ttry {\n\t\t\tif((!force) && (!forceDownload)) {\n\t\t\t\tFilterOutput fo = ContentFilter.filter(data, bucketFactory, mimeType, key.toURI(basePath), context.getContainer().enableInlinePrefetch() ? prefetchHook : null);\n\t\t\t\tif(data != fo.data) toFree = fo.data;\n\t\t\t\tdata = fo.data;\n\t\t\t\tmimeType = fo.type;\n\t\t\t\t\n\t\t\t\tif(horribleEvilHack(data) && !(mimeType.startsWith(\"application/rss+xml\"))) {\n\t\t\t\t\tHTMLNode pageNode = context.getPageMaker().getPageNode(l10n(\"dangerousRSSTitle\"), context);\n\t\t\t\t\tHTMLNode contentNode = context.getPageMaker().getContentNode(pageNode);\n\t\t\t\t\t\n\t\t\t\t\tHTMLNode infobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-alert\");\n\t\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"dangerousRSSSubtitle\"));\n\t\t\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\t\tinfoboxContent.addChild(\"#\", L10n.getString(\"FProxyToadlet.dangerousRSS\", new String[] { \"type\" }, new String[] { mimeType }));\n\t\t\t\t\tinfoboxContent.addChild(\"p\", l10n(\"options\"));\n\t\t\t\t\tHTMLNode optionList = infoboxContent.addChild(\"ul\");\n\t\t\t\t\tHTMLNode option = optionList.addChild(\"li\");\n\t\t\t\t\t\n\t\t\t\t\tL10n.addL10nSubstitution(option, \"FProxyToadlet.openPossRSSAsPlainText\", new String[] { \"link\", \"/link\", \"bold\", \"/bold\" },\n\t\t\t\t\t\t\tnew String[] { \n\t\t\t\t\t\t\t\t\"<a href=\\\"\"+basePath+key.toString()+\"?type=text/plain&force=\"+getForceValue(key,now)+extrasNoMime+\"\\\">\",\n\t\t\t\t\t\t\t\t\"<\/a>\",\n\t\t\t\t\t\t\t\t\"<b>\",\n\t\t\t\t\t\t\t\t\"<\/b>\" });\n\t\t\t\t\t// \tFIXME: is this safe? See bug #131\n\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\tL10n.addL10nSubstitution(option, \"FProxyToadlet.openPossRSSForceDisk\", new String[] { \"link\", \"/link\", \"bold\", \"/bold\" },\n\t\t\t\t\t\t\tnew String[] { \n\t\t\t\t\t\t\t\t\"<a href=\\\"\"+basePath+key.toString()+\"?forcedownload\"+extras+\"\\\">\",\n\t\t\t\t\t\t\t\t\"<\/a>\",\n\t\t\t\t\t\t\t\t\"<b>\",\n\t\t\t\t\t\t\t\t\"<\/b>\" });\n\t\t\t\t\tboolean mimeRSS = mimeType.startsWith(\"application/xml+rss\") || mimeType.startsWith(\"text/xml\"); /* blergh! */\n\t\t\t\t\tif(!(mimeRSS || mimeType.startsWith(\"text/plain\"))) {\n\t\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\t\tL10n.addL10nSubstitution(option, \"FProxyToadlet.openRSSForce\", new String[] { \"link\", \"/link\", \"bold\", \"/bold\", \"mime\" },\n\t\t\t\t\t\t\t\tnew String[] { \n\t\t\t\t\t\t\t\t\t\"<a href=\\\"\"+basePath+key.toString()+\"?force=\"+getForceValue(key, now)+extras+\"\\\">\",\n\t\t\t\t\t\t\t\t\t\"<\/a>\",\n\t\t\t\t\t\t\t\t\t\"<b>\",\n\t\t\t\t\t\t\t\t\t\"<\/b>\",\n\t\t\t\t\t\t\t\t\tHTMLEncoder.encode(mimeType) /* these are not encoded because mostly they are tags, so we have to encode it */ });\n\t\t\t\t\t}\n\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\tL10n.addL10nSubstitution(option, \"FProxyToadlet.openRSSAsRSS\", new String[] { \"link\", \"/link\", \"bold\", \"/bold\" },\n\t\t\t\t\t\t\tnew String[] {\n\t\t\t\t\t\t\t\t\"<a href=\\\"\"+basePath + key.toString() + \"?type=application/xml+rss&force=\" + getForceValue(key, now)+extrasNoMime+\"\\\">\",\n\t\t\t\t\t\t\t\t\"<\/a>\",\n\t\t\t\t\t\t\t\t\"<b>\",\n\t\t\t\t\t\t\t\t\"<\/b>\" });\n\t\t\t\t\tif(referrer != null) {\n\t\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\t\tL10n.addL10nSubstitution(option, \"FProxyToadlet.backToReferrer\", new String[] { \"link\", \"/link\" },\n\t\t\t\t\t\t\t\tnew String[] { \"<a href=\\\"\"+HTMLEncoder.encode(referrer)+\"\\\">\", \"<\/a>\" });\n\t\t\t\t\t}\n\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\tL10n.addL10nSubstitution(option, \"FProxyToadlet.backToFProxy\", new String[] { \"link\", \"/link\" },\n\t\t\t\t\t\t\tnew String[] { \"<a href=\\\"/\\\">\", \"<\/a>\" });\n\t\t\t\t\t\n\t\t\t\t\tbyte[] pageBytes = pageNode.generate().getBytes(\"UTF-8\");\n\t\t\t\t\tcontext.sendReplyHeaders(200, \"OK\", new MultiValueTable<String, String>(), \"text/html; charset=utf-8\", pageBytes.length);\n\t\t\t\t\tcontext.writeData(pageBytes);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (forceDownload) {\n\t\t\t\tMultiValueTable<String, String> headers = new MultiValueTable<String, String>();\n\t\t\t\theaders.put(\"Content-Disposition\", \"attachment; filename=\\\"\" + key.getPreferredFilename() + '\"');\n\t\t\t\tcontext.sendReplyHeaders(200, \"OK\", headers, \"application/x-msdownload\", data.size());\n\t\t\t\tcontext.writeData(data);\n\t\t\t} else {\n\t\t\t\t// Send the data, intact\n\t\t\t\tcontext.sendReplyHeaders(200, \"OK\", new MultiValueTable<String, String>(), mimeType, data.size());\n\t\t\t\tcontext.writeData(data);\n\t\t\t}\n\t\t} catch (URISyntaxException use1) {\n\t\t\t/* shouldn't happen */\n\t\t\tuse1.printStackTrace();\n\t\t\tLogger.error(FProxyToadlet.class, \"could not create URI\", use1);\n\t\t} catch (UnsafeContentTypeException e) {\n\t\t\tHTMLNode pageNode = context.getPageMaker().getPageNode(l10n(\"dangerousContentTitle\"), context);\n\t\t\tHTMLNode contentNode = context.getPageMaker().getContentNode(pageNode);\n\t\t\tHTMLNode infobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-alert\");\n\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", e.getRawTitle());\n\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\tHTMLNode list = infoboxContent.addChild(\"ul\");\n\t\t\twriteSizeAndMIME(list, size, mimeType, true);\n\t\t\tinfoboxContent.addChild(\"p\").addChild(e.getHTMLExplanation());\n\t\t\tinfoboxContent.addChild(\"p\", l10n(\"options\"));\n\t\t\tHTMLNode optionList = infoboxContent.addChild(\"ul\");\n\t\t\tHTMLNode option;\n\t\t\t\n\t\t\tif((mimeType.equals(\"application/x-freenet-index\")) && (core.node.pluginManager.isPluginLoaded(\"plugins.ThawIndexBrowser.ThawIndexBrowser\"))) {\n\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\tL10n.addL10nSubstitution(option, \"FProxyToadlet.openAsThawIndex\", new String[] { \"link\", \"/link\" }, new String[] { \"<b><a href=\\\"\"+basePath + \"plugins/plugins.ThawIndexBrowser.ThawIndexBrowser/?key=\" + key.toString() + \"\\\">\", \"<\/a><\/b>\" });\n\t\t\t}\n\t\t\t\n\t\t\toption = optionList.addChild(\"li\");\n\t\t\t// FIXME: is this safe? See bug #131\n\t\t\tL10n.addL10nSubstitution(option, \"FProxyToadlet.openAsText\", new String[] { \"link\", \"/link\" }, new String[] { \"<a href=\\\"\"+basePath+key.toString()+\"?type=text/plain\"+extrasNoMime+\"\\\">\", \"<\/a>\" });\n\n\t\t\toption = optionList.addChild(\"li\");\n\t\t\tL10n.addL10nSubstitution(option, \"FProxyToadlet.openForceDisk\", new String[] { \"link\", \"/link\" }, new String[] { \"<a href=\\\"\"+basePath+key.toString()+\"?forcedownload\"+extras+\"\\\">\", \"<\/a>\" });\n\t\t\tif(!(mimeType.equals(\"application/octet-stream\") || mimeType.equals(\"application/x-msdownload\"))) {\n\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\tL10n.addL10nSubstitution(option, \"FProxyToadlet.openForce\", new String[] { \"link\", \"/link\", \"mime\" }, new String[] { \"<a href=\\\"\"+basePath + key.toString() + \"?force=\" + getForceValue(key, now)+extras+\"\\\">\", \"<\/a>\", HTMLEncoder.encode(mimeType)});\n\t\t\t}\n\t\t\tif(referrer != null) {\n\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\tL10n.addL10nSubstitution(option, \"FProxyToadlet.backToReferrer\", new String[] { \"link\", \"/link\" },\n\t\t\t\t\t\tnew String[] { \"<a href=\\\"\"+HTMLEncoder.encode(referrer)+\"\\\">\", \"<\/a>\" });\n\t\t\t}\n\t\t\toption = optionList.addChild(\"li\");\n\t\t\tL10n.addL10nSubstitution(option, \"FProxyToadlet.backToFProxy\", new String[] { \"link\", \"/link\" },\n\t\t\t\t\tnew String[] { \"<a href=\\\"/\\\">\", \"<\/a>\" });\n\t\t\tif(ctx.isAllowedFullAccess() || !ctx.getContainer().publicGatewayMode()) {\n\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\tHTMLNode optionForm = ctx.addFormChild(option, \"/queue/\", \"tooBigQueueForm\");\n\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"key\", key.toString() });\n\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"return-type\", \"disk\" });\n\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"persistence\", \"forever\" });\n\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"type\", mimeType });\n\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"download\", l10n(\"downloadInBackgroundToDisk\") });\n\t\t\t}\n\n\t\t\tbyte[] pageBytes = pageNode.generate().getBytes(\"UTF-8\");\n\t\t\tcontext.sendReplyHeaders(200, \"OK\", new MultiValueTable<String, String>(), \"text/html; charset=utf-8\", pageBytes.length);\n\t\t\tcontext.writeData(pageBytes);\n\t\t} finally {\n\t\t\tif(toFree != null) toFree.free();\n\t\t}\n\t}","commit_id":"e9da1f789fd1592215886588e2d924ac184df5a2","url":"https://github.com/freenet/fred"},{"original_method":"public void handleMethodGET(URI uri, HTTPRequest request, ToadletContext ctx) throws ToadletContextClosedException, IOException {\n        if (ctx.isAllowedFullAccess()) {\n\n            if (request.isParameterSet(\"latestlog\")) {\n                final File logs = new File(node.config.get(\"logger\").getString(\"dirname\") + File.separator + \"freenet-latest.log\");\n\n                this.writeTextReply(ctx, 200, \"OK\", FileUtil.readUTF(logs));\n                return;\n            } else if (request.isParameterSet(\"terminated\")) {\n                if ((!request.isParameterSet(\"formPassword\")) || !request.getParam(\"formPassword\").equals(core.formPassword)) {\n                    redirectToRoot(ctx);\n                    return;\n                }\n                // Tell the user that the node is shutting down\n                PageNode page = ctx.getPageMaker().getPageNode(\"Node Shutdown\", ctx, new RenderParameters().renderNavigationLinks(false));\n                HTMLNode pageNode = page.outer;\n                HTMLNode contentNode = page.content;\n                ctx.getPageMaker().getInfobox(\"infobox-information\", l10n(\"shutdownDone\"), contentNode, \"shutdown-progressing\", true).\n                \taddChild(\"#\", l10n(\"thanks\"));\n\n                WelcomeToadlet.maybeDisplayWrapperLogfile(ctx, contentNode);\n\n                this.writeHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n                return;\n            } else if (request.isParameterSet(\"restarted\")) {\n                if ((!request.isParameterSet(\"formPassword\")) || !request.getParam(\"formPassword\").equals(core.formPassword)) {\n                    redirectToRoot(ctx);\n                    return;\n                }\n                sendRestartingPage(ctx);\n                return;\n            } else if (request.getParam(\"newbookmark\").length() > 0) {\n            \tPageNode page = ctx.getPageMaker().getPageNode(l10n(\"confirmAddBookmarkTitle\"), ctx);\n                HTMLNode pageNode = page.outer;\n                HTMLNode contentNode = page.content;\n                HTMLNode infoboxContent = ctx.getPageMaker().getInfobox(\"#\", l10n(\"confirmAddBookmarkSubTitle\"), contentNode, \"add-bookmark-confirm\", true);\n                HTMLNode addForm = ctx.addFormChild(infoboxContent, \"/bookmarkEditor/\", \"editBookmarkForm\");\n                addForm.addChild(\"#\", l10n(\"confirmAddBookmarkWithKey\", \"key\", request.getParam(\"newbookmark\")));\n                addForm.addChild(\"br\");\n                String key = request.getParam(\"newbookmark\");\n                if (key.startsWith(\"freenet:\")) {\n                    key = key.substring(8);\n                }\n                addForm.addChild(\"input\", new String[]{\"type\", \"name\", \"value\"}, new String[]{\"hidden\", \"key\", key});\n                if(request.isParameterSet(\"hasAnActivelink\")) {\n                \taddForm.addChild(\"input\", new String[]{\"type\", \"name\", \"value\"}, new String[]{\"hidden\",\"hasAnActivelink\",request.getParam(\"hasAnActivelink\")});\n                }\n\t\t\t\taddForm.addChild(\"label\", \"for\", \"name\", NodeL10n.getBase().getString(\"BookmarkEditorToadlet.nameLabel\") + ' ');\n                addForm.addChild(\"input\", new String[]{\"type\", \"name\", \"value\"}, new String[]{\"text\", \"name\", request.getParam(\"desc\")});\n                addForm.addChild(\"br\");\n                addForm.addChild(\"input\", new String[]{\"type\", \"name\", \"value\"}, new String[]{\"hidden\", \"bookmark\", \"/\"});\n                addForm.addChild(\"input\", new String[]{\"type\", \"name\", \"value\"}, new String[]{\"hidden\", \"action\", \"addItem\"});\n                addForm.addChild(\"label\", \"for\", \"descB\", NodeL10n.getBase().getString(\"BookmarkEditorToadlet.descLabel\") + ' ');\n                addForm.addChild(\"br\");\n                addForm.addChild(\"textarea\", new String[]{\"id\", \"name\", \"row\", \"cols\"}, new String[]{\"descB\", \"descB\", \"3\", \"70\"});\n                if(node.getDarknetConnections().length > 0) {\n                \taddForm.addChild(\"br\");\n                \taddForm.addChild(\"br\");\n\n                \tHTMLNode peerTable = addForm.addChild(\"table\", \"class\", \"darknet_connections\");\n                \tpeerTable.addChild(\"th\", \"colspan\", \"2\", NodeL10n.getBase().getString(\"BookmarkEditorToadlet.recommendToFriends\"));\n                \tfor(DarknetPeerNode peer : node.getDarknetConnections()) {\n                \t\tHTMLNode peerRow = peerTable.addChild(\"tr\", \"class\", \"darknet_connections_normal\");\n                \t\tpeerRow.addChild(\"td\", \"class\", \"peer-marker\").addChild(\"input\", new String[] { \"type\", \"name\" }, new String[] { \"checkbox\", \"node_\" + peer.hashCode() });\n                \t\tpeerRow.addChild(\"td\", \"class\", \"peer-name\").addChild(\"#\", peer.getName());\n                \t}\n\n                \taddForm.addChild(\"label\", \"for\", \"descB\", (NodeL10n.getBase().getString(\"BookmarkEditorToadlet.publicDescLabel\") + ' '));\n                \taddForm.addChild(\"br\");\n                \taddForm.addChild(\"textarea\", new String[]{\"id\", \"name\", \"row\", \"cols\"}, new String[]{\"descB\", \"publicDescB\", \"3\", \"70\"}, \"\");\n                }\n                addForm.addChild(\"br\");\n\n                addForm.addChild(\"input\", new String[]{\"type\", \"name\", \"value\"}, new String[]{\"submit\", \"addbookmark\", NodeL10n.getBase().getString(\"BookmarkEditorToadlet.addBookmark\")});\n\n                this.writeHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n                return;\n        } else if (uri.getQuery() != null && uri.getQuery().startsWith(\"_CHECKED_HTTP_=\")) {\n\t\t//Redirect requests for escaped URLs using the old destination to ExternalLinkToadlet.\n\t\tsuper.writeTemporaryRedirect(ctx, \"Depreciated\", ExternalLinkToadlet.PATH+'?'+uri.getQuery());\n\t\treturn;\n        }\n        }\n\n        PageNode page = ctx.getPageMaker().getPageNode(l10n(\"homepageFullTitle\"), ctx);\n        HTMLNode pageNode = page.outer;\n        HTMLNode contentNode = page.content;\n\n        String useragent = ctx.getHeaders().get(\"user-agent\");\n\n        if (useragent != null) {\n            useragent = useragent.toLowerCase();\n            if ((useragent.indexOf(\"msie\") > -1) && (useragent.indexOf(\"opera\") == -1)) {\n            \tctx.getPageMaker().getInfobox(\"infobox-alert\", l10n(\"ieWarningTitle\"), contentNode, \"internet-explorer-used\", true).\n                \taddChild(\"#\", l10n(\"ieWarning\"));\n            }\n        }\n\n        // Alerts\n        if (ctx.isAllowedFullAccess()) {\n\t\t\tcontentNode.addChild(core.alerts.createSummary());\n        }\n\t\t\n        if (ctx.getPageMaker().getTheme().fetchKeyBoxAboveBookmarks) {\n            this.putFetchKeyBox(ctx, contentNode);\n        }\n        \n        // Bookmarks\n        HTMLNode bookmarkBox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-normal bookmarks-box\");\n        HTMLNode bookmarkBoxHeader = bookmarkBox.addChild(\"div\", \"class\", \"infobox-header\");\n        bookmarkBoxHeader.addChild(\"a\", new String[]{\"class\", \"title\"}, new String[]{\"bookmarks-header-text\", NodeL10n.getBase().getString(\"BookmarkEditorToadlet.myBookmarksExplanation\")}, NodeL10n.getBase().getString(\"BookmarkEditorToadlet.myBookmarksTitle\"));\n        if (ctx.isAllowedFullAccess()) {\n            bookmarkBoxHeader.addChild(\"span\", \"class\", \"edit-bracket\", \"[\");\n            bookmarkBoxHeader.addChild(\"span\", \"id\", \"bookmarkedit\").addChild(\"a\", new String[]{\"href\", \"class\"}, new String[]{\"/bookmarkEditor/\", \"interfacelink\"}, NodeL10n.getBase().getString(\"BookmarkEditorToadlet.edit\"));\n            bookmarkBoxHeader.addChild(\"span\", \"class\", \"edit-bracket\", \"]\");\n        }\n\n        HTMLNode bookmarkBoxContent = bookmarkBox.addChild(\"div\", \"class\", \"infobox-content\");\n        \n        \n        HTMLNode bookmarksList = bookmarkBoxContent.addChild(\"ul\", \"id\", \"bookmarks\");\n\t\tif (ctx.isAllowedFullAccess()) {\n\t\t\taddCategoryToList(BookmarkManager.MAIN_CATEGORY, bookmarksList, (!container.enableActivelinks()) || (useragent != null && useragent.contains(\"khtml\") && !useragent.contains(\"chrome\")), ctx);\n\t\t}\n\t\telse {\n\t\t\taddCategoryToList(BookmarkManager.DEFAULT_CATEGORY, bookmarksList, (!container.enableActivelinks()) || (useragent != null && useragent.contains(\"khtml\") && !useragent.contains(\"chrome\")), ctx);\n\t\t}\n\n\t\t// Search Box\n        // FIXME search box is BELOW bookmarks for now, until we get search fixed properly.\n\t\tHTMLNode searchBox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-normal\");\n\t\tsearchBox.addAttribute(\"id\", \"search-freenet\");\n        searchBox.addChild(\"div\", \"class\", \"infobox-header\").addChild(\"span\", \"class\", \"search-title-label\", NodeL10n.getBase().getString(\"WelcomeToadlet.searchBoxLabel\"));\n\t\tHTMLNode searchBoxContent = searchBox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t// Search form\n\t\tif(core.node.pluginManager != null &&\n\t\t\t\tcore.node.pluginManager.isPluginLoaded(\"plugins.Library.Main\")) {\n        \t// FIXME: Remove this once we have a non-broken index.\n        \tsearchBoxContent.addChild(\"span\", \"class\", \"search-warning-text\", l10n(\"searchBoxWarningSlow\"));\n\t\t\tHTMLNode searchForm = container.addFormChild(searchBoxContent, \"/library/\", \"searchform\");\n        \tsearchForm.addChild(\"input\", new String[] { \"type\", \"size\", \"name\" }, new String[] { \"text\", \"80\", \"search\" });\n        \tsearchForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"find\", l10n(\"searchFreenet\") });\n        \t// Search must be in a new window so that the user is able to browse the bookmarks.\n        \tsearchForm.addAttribute(\"target\", \"_blank\");\n        } else if(core.node.pluginManager == null || \n        \t\tcore.node.pluginManager.isPluginLoadedOrLoadingOrWantLoad(\"Library\")) {\n\t\t\t// Warn that search plugin is not loaded.\n\t\t\tHTMLNode textSpan = searchBoxContent.addChild(\"span\", \"class\", \"search-not-availible-warning\");\n\t\t\tNodeL10n.getBase().addL10nSubstitution(textSpan, \"WelcomeToadlet.searchPluginLoading\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(\"/plugins/\") });\n        } else {\n\t\t\t// Warn that search plugin is not loaded.\n\t\t\tHTMLNode textSpan = searchBoxContent.addChild(\"span\", \"class\", \"search-not-availible-warning\");\n\t\t\tNodeL10n.getBase().addL10nSubstitution(textSpan, \"WelcomeToadlet.searchPluginNotLoaded\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(\"/plugins/\") });\n\t\t}\n\t\t\n        if (!ctx.getPageMaker().getTheme().fetchKeyBoxAboveBookmarks) {\n            this.putFetchKeyBox(ctx, contentNode);\n        }\n\n        // Version info and Quit Form\n        HTMLNode versionContent = ctx.getPageMaker().getInfobox(\"infobox-information\", l10n(\"versionHeader\"), contentNode, \"freenet-version\", true);\n        versionContent.addChild(\"span\", \"class\", \"freenet-full-version\",\n                NodeL10n.getBase().getString(\"WelcomeToadlet.version\", new String[]{\"fullVersion\", \"build\", \"rev\"},\n                new String[]{Version.publicVersion(), Integer.toString(Version.buildNumber()), Version.cvsRevision()}));\n        versionContent.addChild(\"br\");\n        if (NodeStarter.extBuildNumber < NodeStarter.RECOMMENDED_EXT_BUILD_NUMBER) {\n            versionContent.addChild(\"span\", \"class\", \"freenet-ext-version\",\n                    NodeL10n.getBase().getString(\"WelcomeToadlet.extVersionWithRecommended\", new String[]{\"build\", \"recbuild\", \"rev\"},\n                    new String[]{Integer.toString(NodeStarter.extBuildNumber), Integer.toString(NodeStarter.RECOMMENDED_EXT_BUILD_NUMBER), NodeStarter.extRevisionNumber}));\n        } else {\n            versionContent.addChild(\"span\", \"class\", \"freenet-ext-version\",\n                    NodeL10n.getBase().getString(\"WelcomeToadlet.extVersion\", new String[]{\"build\", \"rev\"},\n                    new String[]{Integer.toString(NodeStarter.extBuildNumber), NodeStarter.extRevisionNumber}));\n        }\n        versionContent.addChild(\"br\");\n        if (ctx.isAllowedFullAccess()) {\n        \tHTMLNode shutdownForm = ctx.addFormChild(versionContent, \".\", \"shutdownForm\");\n            shutdownForm.addChild(\"input\", new String[]{\"type\", \"name\"}, new String[]{\"hidden\", \"exit\"});\n            \n            shutdownForm.addChild(\"input\", new String[]{\"type\", \"value\"}, new String[]{\"submit\", l10n(\"shutdownNode\")});\n            if (node.isUsingWrapper()) {\n                HTMLNode restartForm = ctx.addFormChild(versionContent, \".\", \"restartForm\");\n                restartForm.addChild(\"input\", new String[]{\"type\", \"name\"}, new String[]{\"hidden\", \"restart\"});\n                restartForm.addChild(\"input\", new String[]{\"type\", \"name\", \"value\"}, new String[]{\"submit\", \"restart2\", l10n(\"restartNode\")});\n            }\n        }\n\n        this.writeHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n    }","id":82491,"modified_method":"public void handleMethodGET(URI uri, HTTPRequest request, ToadletContext ctx) throws ToadletContextClosedException, IOException {\n        if (ctx.isAllowedFullAccess()) {\n\n            if (request.isParameterSet(\"latestlog\")) {\n                final File logs = new File(node.config.get(\"logger\").getString(\"dirname\") + File.separator + \"freenet-latest.log\");\n\n                this.writeTextReply(ctx, 200, \"OK\", FileUtil.readUTF(logs));\n                return;\n            } else if (request.isParameterSet(\"terminated\")) {\n                if ((!request.isParameterSet(\"formPassword\")) || !request.getParam(\"formPassword\").equals(core.formPassword)) {\n                    redirectToRoot(ctx);\n                    return;\n                }\n                // Tell the user that the node is shutting down\n                PageNode page = ctx.getPageMaker().getPageNode(\"Node Shutdown\", ctx, new RenderParameters().renderNavigationLinks(false));\n                HTMLNode pageNode = page.outer;\n                HTMLNode contentNode = page.content;\n                ctx.getPageMaker().getInfobox(\"infobox-information\", l10n(\"shutdownDone\"), contentNode, \"shutdown-progressing\", true).\n                \taddChild(\"#\", l10n(\"thanks\"));\n\n                WelcomeToadlet.maybeDisplayWrapperLogfile(ctx, contentNode);\n\n                this.writeHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n                return;\n            } else if (request.isParameterSet(\"restarted\")) {\n                if ((!request.isParameterSet(\"formPassword\")) || !request.getParam(\"formPassword\").equals(core.formPassword)) {\n                    redirectToRoot(ctx);\n                    return;\n                }\n                sendRestartingPage(ctx);\n                return;\n            } else if (request.getParam(\"newbookmark\").length() > 0) {\n            \tPageNode page = ctx.getPageMaker().getPageNode(l10n(\"confirmAddBookmarkTitle\"), ctx);\n                HTMLNode pageNode = page.outer;\n                HTMLNode contentNode = page.content;\n                HTMLNode infoboxContent = ctx.getPageMaker().getInfobox(\"#\", l10n(\"confirmAddBookmarkSubTitle\"), contentNode, \"add-bookmark-confirm\", true);\n                HTMLNode addForm = ctx.addFormChild(infoboxContent, \"/bookmarkEditor/\", \"editBookmarkForm\");\n                addForm.addChild(\"#\", l10n(\"confirmAddBookmarkWithKey\", \"key\", request.getParam(\"newbookmark\")));\n                addForm.addChild(\"br\");\n                String key = request.getParam(\"newbookmark\");\n                if (key.startsWith(\"freenet:\")) {\n                    key = key.substring(8);\n                }\n                addForm.addChild(\"input\", new String[]{\"type\", \"name\", \"value\"}, new String[]{\"hidden\", \"key\", key});\n                if(request.isParameterSet(\"hasAnActivelink\")) {\n                \taddForm.addChild(\"input\", new String[]{\"type\", \"name\", \"value\"}, new String[]{\"hidden\",\"hasAnActivelink\",request.getParam(\"hasAnActivelink\")});\n                }\n\t\t\t\taddForm.addChild(\"label\", \"for\", \"name\", NodeL10n.getBase().getString(\"BookmarkEditorToadlet.nameLabel\") + ' ');\n                addForm.addChild(\"input\", new String[]{\"type\", \"name\", \"value\"}, new String[]{\"text\", \"name\", request.getParam(\"desc\")});\n                addForm.addChild(\"br\");\n                addForm.addChild(\"input\", new String[]{\"type\", \"name\", \"value\"}, new String[]{\"hidden\", \"bookmark\", \"/\"});\n                addForm.addChild(\"input\", new String[]{\"type\", \"name\", \"value\"}, new String[]{\"hidden\", \"action\", \"addItem\"});\n                addForm.addChild(\"label\", \"for\", \"descB\", NodeL10n.getBase().getString(\"BookmarkEditorToadlet.descLabel\") + ' ');\n                addForm.addChild(\"br\");\n                addForm.addChild(\"textarea\", new String[]{\"id\", \"name\", \"row\", \"cols\"}, new String[]{\"descB\", \"descB\", \"3\", \"70\"});\n                if(node.getDarknetConnections().length > 0) {\n                \taddForm.addChild(\"br\");\n                \taddForm.addChild(\"br\");\n\n                \tHTMLNode peerTable = addForm.addChild(\"table\", \"class\", \"darknet_connections\");\n                \tpeerTable.addChild(\"th\", \"colspan\", \"2\", NodeL10n.getBase().getString(\"BookmarkEditorToadlet.recommendToFriends\"));\n                \tfor(DarknetPeerNode peer : node.getDarknetConnections()) {\n                \t\tHTMLNode peerRow = peerTable.addChild(\"tr\", \"class\", \"darknet_connections_normal\");\n                \t\tpeerRow.addChild(\"td\", \"class\", \"peer-marker\").addChild(\"input\", new String[] { \"type\", \"name\" }, new String[] { \"checkbox\", \"node_\" + peer.hashCode() });\n                \t\tpeerRow.addChild(\"td\", \"class\", \"peer-name\").addChild(\"#\", peer.getName());\n                \t}\n\n                \taddForm.addChild(\"label\", \"for\", \"descB\", (NodeL10n.getBase().getString(\"BookmarkEditorToadlet.publicDescLabel\") + ' '));\n                \taddForm.addChild(\"br\");\n                \taddForm.addChild(\"textarea\", new String[]{\"id\", \"name\", \"row\", \"cols\"}, new String[]{\"descB\", \"publicDescB\", \"3\", \"70\"}, \"\");\n                }\n                addForm.addChild(\"br\");\n\n                addForm.addChild(\"input\", new String[]{\"type\", \"name\", \"value\"}, new String[]{\"submit\", \"addbookmark\", NodeL10n.getBase().getString(\"BookmarkEditorToadlet.addBookmark\")});\n\n                this.writeHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n                return;\n        } else if (uri.getQuery() != null && uri.getQuery().startsWith(\"_CHECKED_HTTP_=\")) {\n\t\t//Redirect requests for escaped URLs using the old destination to ExternalLinkToadlet.\n\t\tsuper.writeTemporaryRedirect(ctx, \"Depreciated\", ExternalLinkToadlet.PATH+'?'+uri.getQuery());\n\t\treturn;\n        }\n        }\n\n        PageNode page = ctx.getPageMaker().getPageNode(l10n(\"homepageFullTitle\"), ctx);\n        HTMLNode pageNode = page.outer;\n        HTMLNode contentNode = page.content;\n\n        String useragent = ctx.getHeaders().get(\"user-agent\");\n\n        if (useragent != null) {\n            useragent = useragent.toLowerCase();\n            if ((useragent.indexOf(\"msie\") > -1) && (useragent.indexOf(\"opera\") == -1)) {\n            \tctx.getPageMaker().getInfobox(\"infobox-alert\", l10n(\"ieWarningTitle\"), contentNode, \"internet-explorer-used\", true).\n                \taddChild(\"#\", l10n(\"ieWarning\"));\n            }\n        }\n\n        // Alerts\n        if (ctx.isAllowedFullAccess()) {\n\t\t\tcontentNode.addChild(core.alerts.createSummary());\n        }\n\t\t\n        if (ctx.getPageMaker().getTheme().fetchKeyBoxAboveBookmarks) {\n            this.putFetchKeyBox(ctx, contentNode);\n        }\n        \n        // Bookmarks\n        HTMLNode bookmarkBox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-normal bookmarks-box\");\n        HTMLNode bookmarkBoxHeader = bookmarkBox.addChild(\"div\", \"class\", \"infobox-header\");\n        bookmarkBoxHeader.addChild(\"a\", new String[]{\"class\", \"title\"}, new String[]{\"bookmarks-header-text\", NodeL10n.getBase().getString(\"BookmarkEditorToadlet.myBookmarksExplanation\")}, NodeL10n.getBase().getString(\"BookmarkEditorToadlet.myBookmarksTitle\"));\n        if (ctx.isAllowedFullAccess()) {\n            bookmarkBoxHeader.addChild(\"span\", \"class\", \"edit-bracket\", \"[\");\n            bookmarkBoxHeader.addChild(\"span\", \"id\", \"bookmarkedit\").addChild(\"a\", new String[]{\"href\", \"class\"}, new String[]{\"/bookmarkEditor/\", \"interfacelink\"}, NodeL10n.getBase().getString(\"BookmarkEditorToadlet.edit\"));\n            bookmarkBoxHeader.addChild(\"span\", \"class\", \"edit-bracket\", \"]\");\n        }\n\n        HTMLNode bookmarkBoxContent = bookmarkBox.addChild(\"div\", \"class\", \"infobox-content\");\n        \n        \n        HTMLNode bookmarksList = bookmarkBoxContent.addChild(\"ul\", \"id\", \"bookmarks\");\n\t\tif (ctx.isAllowedFullAccess() || !ctx.getContainer().publicGatewayMode()) {\n\t\t\taddCategoryToList(BookmarkManager.MAIN_CATEGORY, bookmarksList, (!container.enableActivelinks()) || (useragent != null && useragent.contains(\"khtml\") && !useragent.contains(\"chrome\")), ctx);\n\t\t}\n\t\telse {\n\t\t\taddCategoryToList(BookmarkManager.DEFAULT_CATEGORY, bookmarksList, (!container.enableActivelinks()) || (useragent != null && useragent.contains(\"khtml\") && !useragent.contains(\"chrome\")), ctx);\n\t\t}\n\n\t\t// Search Box\n        // FIXME search box is BELOW bookmarks for now, until we get search fixed properly.\n\t\tHTMLNode searchBox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-normal\");\n\t\tsearchBox.addAttribute(\"id\", \"search-freenet\");\n        searchBox.addChild(\"div\", \"class\", \"infobox-header\").addChild(\"span\", \"class\", \"search-title-label\", NodeL10n.getBase().getString(\"WelcomeToadlet.searchBoxLabel\"));\n\t\tHTMLNode searchBoxContent = searchBox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t// Search form\n\t\tif(core.node.pluginManager != null &&\n\t\t\t\tcore.node.pluginManager.isPluginLoaded(\"plugins.Library.Main\")) {\n        \t// FIXME: Remove this once we have a non-broken index.\n        \tsearchBoxContent.addChild(\"span\", \"class\", \"search-warning-text\", l10n(\"searchBoxWarningSlow\"));\n\t\t\tHTMLNode searchForm = container.addFormChild(searchBoxContent, \"/library/\", \"searchform\");\n        \tsearchForm.addChild(\"input\", new String[] { \"type\", \"size\", \"name\" }, new String[] { \"text\", \"80\", \"search\" });\n        \tsearchForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"find\", l10n(\"searchFreenet\") });\n        \t// Search must be in a new window so that the user is able to browse the bookmarks.\n        \tsearchForm.addAttribute(\"target\", \"_blank\");\n        } else if(core.node.pluginManager == null || \n        \t\tcore.node.pluginManager.isPluginLoadedOrLoadingOrWantLoad(\"Library\")) {\n\t\t\t// Warn that search plugin is not loaded.\n\t\t\tHTMLNode textSpan = searchBoxContent.addChild(\"span\", \"class\", \"search-not-availible-warning\");\n\t\t\tNodeL10n.getBase().addL10nSubstitution(textSpan, \"WelcomeToadlet.searchPluginLoading\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(\"/plugins/\") });\n        } else {\n\t\t\t// Warn that search plugin is not loaded.\n\t\t\tHTMLNode textSpan = searchBoxContent.addChild(\"span\", \"class\", \"search-not-availible-warning\");\n\t\t\tNodeL10n.getBase().addL10nSubstitution(textSpan, \"WelcomeToadlet.searchPluginNotLoaded\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(\"/plugins/\") });\n\t\t}\n\t\t\n        if (!ctx.getPageMaker().getTheme().fetchKeyBoxAboveBookmarks) {\n            this.putFetchKeyBox(ctx, contentNode);\n        }\n\n        // Version info and Quit Form\n        HTMLNode versionContent = ctx.getPageMaker().getInfobox(\"infobox-information\", l10n(\"versionHeader\"), contentNode, \"freenet-version\", true);\n        versionContent.addChild(\"span\", \"class\", \"freenet-full-version\",\n                NodeL10n.getBase().getString(\"WelcomeToadlet.version\", new String[]{\"fullVersion\", \"build\", \"rev\"},\n                new String[]{Version.publicVersion(), Integer.toString(Version.buildNumber()), Version.cvsRevision()}));\n        versionContent.addChild(\"br\");\n        if (NodeStarter.extBuildNumber < NodeStarter.RECOMMENDED_EXT_BUILD_NUMBER) {\n            versionContent.addChild(\"span\", \"class\", \"freenet-ext-version\",\n                    NodeL10n.getBase().getString(\"WelcomeToadlet.extVersionWithRecommended\", new String[]{\"build\", \"recbuild\", \"rev\"},\n                    new String[]{Integer.toString(NodeStarter.extBuildNumber), Integer.toString(NodeStarter.RECOMMENDED_EXT_BUILD_NUMBER), NodeStarter.extRevisionNumber}));\n        } else {\n            versionContent.addChild(\"span\", \"class\", \"freenet-ext-version\",\n                    NodeL10n.getBase().getString(\"WelcomeToadlet.extVersion\", new String[]{\"build\", \"rev\"},\n                    new String[]{Integer.toString(NodeStarter.extBuildNumber), NodeStarter.extRevisionNumber}));\n        }\n        versionContent.addChild(\"br\");\n        if (ctx.isAllowedFullAccess()) {\n        \tHTMLNode shutdownForm = ctx.addFormChild(versionContent, \".\", \"shutdownForm\");\n            shutdownForm.addChild(\"input\", new String[]{\"type\", \"name\"}, new String[]{\"hidden\", \"exit\"});\n            \n            shutdownForm.addChild(\"input\", new String[]{\"type\", \"value\"}, new String[]{\"submit\", l10n(\"shutdownNode\")});\n            if (node.isUsingWrapper()) {\n                HTMLNode restartForm = ctx.addFormChild(versionContent, \".\", \"restartForm\");\n                restartForm.addChild(\"input\", new String[]{\"type\", \"name\"}, new String[]{\"hidden\", \"restart\"});\n                restartForm.addChild(\"input\", new String[]{\"type\", \"name\", \"value\"}, new String[]{\"submit\", \"restart2\", l10n(\"restartNode\")});\n            }\n        }\n\n        this.writeHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n    }","commit_id":"8611d2bca8279bc763a7c05ca47992004795f011","url":"https://github.com/freenet/fred"},{"original_method":"@Override\n\tpublic void handleGet(URI uri, HTTPRequest httprequest, ToadletContext ctx) \n\t\t\tthrows ToadletContextClosedException, IOException, RedirectException {\n\n\t\tString ks = uri.getPath();\n\t\t\n\t\tboolean logMINOR = Logger.shouldLog(Logger.MINOR, this);\n\t\t\n\t\tif (ks.equals(\"/\")) {\n\t\t\tif (httprequest.isParameterSet(\"key\")) {\n\t\t\t\tString k = httprequest.getParam(\"key\");\n\t\t\t\tFreenetURI newURI;\n\t\t\t\ttry {\n\t\t\t\t\tnewURI = new FreenetURI(k);\n\t\t\t\t} catch (MalformedURLException e) {\n\t\t\t\t\tLogger.normal(this, \"Invalid key: \"+e+\" for \"+k, e);\n\t\t\t\t\tsendErrorPage(ctx, 404, l10n(\"notFoundTitle\"), L10n.getString(\"FProxyToadlet.invalidKeyWithReason\", new String[] { \"reason\" }, new String[] { e.toString() }));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Redirecting to FreenetURI: \"+newURI);\n\t\t\t\tString type = httprequest.getParam(\"type\");\n\t\t\t\tString location;\n\t\t\t\tif ((type != null) && (type.length() > 0)) {\n\t\t\t\t\tlocation =  \"/\"+newURI + \"?type=\" + type;\n\t\t\t\t} else {\n\t\t\t\t\tlocation =  \"/\"+newURI;\n\t\t\t\t}\n\t\t\t\twriteTemporaryRedirect(ctx, null, location);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\ttry {\n\t\t\t\tString querystring = uri.getQuery();\n\t\t\t\t\n\t\t\t\tif (querystring == null) {\n\t\t\t\t\tthrow new RedirectException(welcome);\n\t\t\t\t} else {\n\t\t\t\t\t// TODP possibly a proper URLEncode method\n\t\t\t\t\tquerystring = querystring.replace(' ', '+');\n\t\t\t\t\tthrow new RedirectException(\"/welcome/?\" + querystring);\n\t\t\t\t}\n\t\t\t} catch (URISyntaxException e) {\n\t\t\t\t// HUH!?!\n\t\t\t}\n\t\t}else if(ks.equals(\"/favicon.ico\")){\n\t\t\tbyte[] buf = new byte[1024];\n\t\t\tint len;\n\t\t\tInputStream strm = getClass().getResourceAsStream(\"staticfiles/favicon.ico\");\n\t\t\t\n\t\t\tif (strm == null) {\n\t\t\t\tthis.sendErrorPage(ctx, 404, l10n(\"pathNotFoundTitle\"), l10n(\"pathNotFound\"));\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tctx.sendReplyHeaders(200, \"OK\", null, \"image/x-icon\", strm.available());\n\t\t\t\n\t\t\twhile ( (len = strm.read(buf)) > 0) {\n\t\t\t\tctx.writeData(buf, 0, len);\n\t\t\t}\n\t\t\treturn;\n\t\t}else if(ks.equals(\"/robots.txt\") && ctx.doRobots()){\n\t\t\tthis.writeTextReply(ctx, 200, \"Ok\", \"User-agent: *\\nDisallow: /\");\n\t\t\treturn;\n\t\t}else if(ks.startsWith(\"/darknet/\") || ks.equals(\"/darknet\")) { //TODO (pre-build 1045 url format) remove when obsolete\n\t\t\twritePermanentRedirect(ctx, \"obsoleted\", \"/friends/\");\n\t\t\treturn;\n\t\t}else if(ks.startsWith(\"/opennet/\") || ks.equals(\"/opennet\")) { //TODO (pre-build 1045 url format) remove when obsolete\n\t\t\twritePermanentRedirect(ctx, \"obsoleted\", \"/strangers/\");\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(ks.startsWith(\"/\"))\n\t\t\tks = ks.substring(1);\n\t\t\n\t\tlong maxSize = httprequest.getLongParam(\"max-size\", MAX_LENGTH);\n\t\t\n\t\tFreenetURI key;\n\t\ttry {\n\t\t\tkey = new FreenetURI(ks);\n\t\t} catch (MalformedURLException e) {\n\t\t\tHTMLNode pageNode = ctx.getPageMaker().getPageNode(l10n(\"invalidKeyTitle\"), ctx);\n\t\t\tHTMLNode contentNode = ctx.getPageMaker().getContentNode(pageNode);\n\n\t\t\tHTMLNode errorInfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-error\");\n\t\t\terrorInfobox.addChild(\"div\", \"class\", \"infobox-header\", L10n.getString(\"FProxyToadlet.invalidKeyWithReason\", new String[] { \"reason\" }, new String[] { e.toString() }));\n\t\t\tHTMLNode errorContent = errorInfobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\terrorContent.addChild(\"#\", l10n(\"expectedKeyButGot\"));\n\t\t\terrorContent.addChild(\"code\", ks);\n\t\t\terrorContent.addChild(\"br\");\n\t\t\terrorContent.addChild(ctx.getPageMaker().createBackLink(ctx, l10n(\"goBack\")));\n\t\t\terrorContent.addChild(\"br\");\n\t\t\taddHomepageLink(errorContent);\n\n\t\t\tthis.writeHTMLReply(ctx, 400, l10n(\"invalidKeyTitle\"), pageNode.generate());\n\t\t\treturn;\n\t\t}\n\t\tString requestedMimeType = httprequest.getParam(\"type\", null);\n\t\tString override = (requestedMimeType == null) ? \"\" : \"?type=\"+URLEncoder.encode(requestedMimeType,true);\n\t\t// No point passing ?force= across a redirect, since the key will change.\n\t\t// However, there is every point in passing ?forcedownload.\n\t\tif(httprequest.isParameterSet(\"forcedownload\")) {\n\t\t\tif(override.length() == 0) override = \"?forcedownload\";\n\t\t\telse override = override+\"&forcedownload\";\n\t\t}\n\t\tBucket data = null;\n\t\ttry {\n\t\t\tif(Logger.shouldLog(Logger.MINOR, this))\n\t\t\t\tLogger.minor(this, \"FProxy fetching \"+key+\" (\"+maxSize+ ')');\n\t\t\tFetchResult result = fetch(key, maxSize, httprequest /* fixme replace if HTTPRequest ever becomes comparable */); \n\t\t\t\n\t\t\t// Now, is it safe?\n\t\t\t\n\t\t\tdata = result.asBucket();\n\t\t\tString mimeType = result.getMimeType();\n\t\t\t\n\t\t\tString referer = sanitizeReferer(ctx);\n\t\t\t\n\t\t\t\n\t\t\thandleDownload(ctx, data, ctx.getBucketFactory(), mimeType, requestedMimeType, httprequest.getParam(\"force\", null), httprequest.isParameterSet(\"forcedownload\"), \"/\", key, maxSize != MAX_LENGTH ? \"&max-size=\"+SizeUtil.formatSizeWithoutSpace(maxSize) : \"\", referer, true, ctx, core);\n\t\t\t\n\t\t} catch (FetchException e) {\n\t\t\tString msg = e.getMessage();\n\t\t\tif(Logger.shouldLog(Logger.MINOR, this))\n\t\t\t\tLogger.minor(this, \"Failed to fetch \"+uri+\" : \"+e);\n\t\t\tif(e.newURI != null) {\n\t\t\t\tToadlet.writePermanentRedirect(ctx, msg, '/' +e.newURI.toACIIString() + override);\n\t\t\t} else if(e.mode == FetchException.TOO_BIG) {\n\t\t\t\tHTMLNode pageNode = ctx.getPageMaker().getPageNode(l10n(\"fileInformationTitle\"), ctx);\n\t\t\t\tHTMLNode contentNode = ctx.getPageMaker().getContentNode(pageNode);\n\t\t\t\t\n\t\t\t\tHTMLNode infobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-information\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"largeFile\"));\n\t\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\tHTMLNode fileInformationList = infoboxContent.addChild(\"ul\");\n\t\t\t\tHTMLNode option = fileInformationList.addChild(\"li\");\n\t\t\t\toption.addChild(\"#\", (l10n(\"filenameLabel\") + ' '));\n\t\t\t\toption.addChild(\"a\", \"href\", '/' + key.toString(), getFilename(e, key, e.getExpectedMimeType()));\n\n\t\t\t\tString mime = writeSizeAndMIME(fileInformationList, e);\n\t\t\t\t\n\t\t\t\tinfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-information\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"explanationTitle\"));\n\t\t\t\tinfoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\tinfoboxContent.addChild(\"#\", l10n(\"largeFileExplanationAndOptions\"));\n\t\t\t\tHTMLNode optionList = infoboxContent.addChild(\"ul\");\n\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\tHTMLNode optionForm = option.addChild(\"form\", new String[] { \"action\", \"method\" }, new String[] {'/' + key.toString(), \"get\" });\n\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"max-size\", String.valueOf(e.expectedSize == -1 ? Long.MAX_VALUE : e.expectedSize*2) });\n\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"fetch\", l10n(\"fetchLargeFileAnywayAndDisplay\") });\n\t\t\t\toptionList.addChild(\"li\").addChild(\"a\", new String[] { \"href\", \"title\" }, new String[] { \"/\", \"FProxy home page\" }, l10n(\"abortToHomepage\"));\n\t\t\t\tif(ctx.isAllowedFullAccess()) {\n\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\toptionForm = ctx.addFormChild(option, \"/queue/\", \"tooBigQueueForm\");\n\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"key\", key.toString() });\n\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"return-type\", \"disk\" });\n\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"persistence\", \"forever\" });\n\t\t\t\t\tif (mime != null) {\n\t\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"type\", mime });\n\t\t\t\t\t}\n\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"download\", l10n(\"downloadInBackgroundToDisk\") });\n\t\t\t\t}\n\n\t\t\t\twriteHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n\t\t\t} else {\n\t\t\t\tHTMLNode pageNode = ctx.getPageMaker().getPageNode(FetchException.getShortMessage(e.mode), ctx);\n\t\t\t\tHTMLNode contentNode = ctx.getPageMaker().getContentNode(pageNode);\n\n\t\t\t\tHTMLNode infobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-error\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"errorWithReason\", \"error\", FetchException.getShortMessage(e.mode)));\n\t\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\tHTMLNode fileInformationList = infoboxContent.addChild(\"ul\");\n\t\t\t\tHTMLNode option = fileInformationList.addChild(\"li\");\n\t\t\t\toption.addChild(\"#\", (l10n(\"filenameLabel\") + ' '));\n\t\t\t\toption.addChild(\"a\", \"href\", '/' + key.toString(), getFilename(e, key, e.getExpectedMimeType()));\n\n\t\t\t\tString mime = writeSizeAndMIME(fileInformationList, e);\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"explanationTitle\"));\n\t\t\t\tinfoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\tinfoboxContent.addChild(\"p\", l10n(\"unableToRetrieve\"));\n\t\t\t\tif(e.isFatal())\n\t\t\t\t\tinfoboxContent.addChild(\"p\", l10n(\"errorIsFatal\"));\n\t\t\t\tinfoboxContent.addChild(\"p\", msg);\n\t\t\t\tif(e.errorCodes != null) {\n\t\t\t\t\tinfoboxContent.addChild(\"p\").addChild(\"pre\").addChild(\"#\", e.errorCodes.toVerboseString());\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"options\"));\n\t\t\t\tinfoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\t\n\t\t\t\tHTMLNode optionList = infoboxContent.addChild(\"ul\");\n\t\t\t\t\n\t\t\t\tif((e.mode == FetchException.NOT_IN_ARCHIVE) && (core.node.pluginManager.isPluginLoaded(\"plugins.KeyExplorer.KeyExplorer\"))) {\n\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\tL10n.addL10nSubstitution(option, \"FProxyToadlet.openWithKeyExplorer\", new String[] { \"link\", \"/link\" }, new String[] { \"<a href=\\\"/plugins/plugins.KeyExplorer.KeyExplorer/?key=\" + key.toString() + \"\\\">\", \"<\/a>\" });\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(!e.isFatal() && ctx.isAllowedFullAccess()) {\n\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\tHTMLNode optionForm = ctx.addFormChild(option, \"/queue/\", \"dnfQueueForm\");\n\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"key\", key.toString() });\n\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"return-type\", \"disk\" });\n\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"persistence\", \"forever\" });\n\t\t\t\t\tif (mime != null) {\n\t\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"type\", mime });\n\t\t\t\t\t}\n\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"download\", l10n(\"downloadInBackgroundToDisk\")});\n\t\t\t\t\t\n\t\t\t\t\toptionList.addChild(\"li\").\n\t\t\t\t\t\taddChild(\"a\", \"href\", getLink(key, requestedMimeType, maxSize, httprequest.getParam(\"force\", null), httprequest.isParameterSet(\"forcedownload\"))).addChild(\"#\", l10n(\"retryNow\"));\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\toptionList.addChild(\"li\").addChild(\"a\", new String[] { \"href\", \"title\" }, new String[] { \"/\", L10n.getString(\"Toadlet.homepage\") }, l10n(\"abortToHomepage\"));\n\t\t\t\t\n\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\toption.addChild(ctx.getPageMaker().createBackLink(ctx, l10n(\"goBackToPrev\")));\n\t\t\t\t\n\t\t\t\tthis.writeHTMLReply(ctx, (e.mode == 10) ? 404 : 500 /* close enough - FIXME probably should depend on status code */,\n\t\t\t\t\t\t\"Internal Error\", pageNode.generate());\n\t\t\t}\n\t\t} catch (SocketException e) {\n\t\t\t// Probably irrelevant\n\t\t\tif(e.getMessage().equals(\"Broken pipe\")) {\n\t\t\t\tif(Logger.shouldLog(Logger.MINOR, this))\n\t\t\t\t\tLogger.minor(this, \"Caught \"+e+\" while handling GET\", e);\n\t\t\t} else {\n\t\t\t\tLogger.normal(this, \"Caught \"+e);\n\t\t\t}\n\t\t\tthrow e;\n\t\t} catch (Throwable t) {\n\t\t\twriteInternalError(t, ctx);\n\t\t} finally {\n\t\t\tif(data != null) data.free();\n\t\t}\n\t}","id":82492,"modified_method":"@Override\n\tpublic void handleGet(URI uri, HTTPRequest httprequest, ToadletContext ctx) \n\t\t\tthrows ToadletContextClosedException, IOException, RedirectException {\n\n\t\tString ks = uri.getPath();\n\t\t\n\t\tboolean logMINOR = Logger.shouldLog(Logger.MINOR, this);\n\t\t\n\t\tif (ks.equals(\"/\")) {\n\t\t\tif (httprequest.isParameterSet(\"key\")) {\n\t\t\t\tString k = httprequest.getParam(\"key\");\n\t\t\t\tFreenetURI newURI;\n\t\t\t\ttry {\n\t\t\t\t\tnewURI = new FreenetURI(k);\n\t\t\t\t} catch (MalformedURLException e) {\n\t\t\t\t\tLogger.normal(this, \"Invalid key: \"+e+\" for \"+k, e);\n\t\t\t\t\tsendErrorPage(ctx, 404, l10n(\"notFoundTitle\"), L10n.getString(\"FProxyToadlet.invalidKeyWithReason\", new String[] { \"reason\" }, new String[] { e.toString() }));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Redirecting to FreenetURI: \"+newURI);\n\t\t\t\tString type = httprequest.getParam(\"type\");\n\t\t\t\tString location;\n\t\t\t\tif ((type != null) && (type.length() > 0)) {\n\t\t\t\t\tlocation =  \"/\"+newURI + \"?type=\" + type;\n\t\t\t\t} else {\n\t\t\t\t\tlocation =  \"/\"+newURI;\n\t\t\t\t}\n\t\t\t\twriteTemporaryRedirect(ctx, null, location);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\ttry {\n\t\t\t\tString querystring = uri.getQuery();\n\t\t\t\t\n\t\t\t\tif (querystring == null) {\n\t\t\t\t\tthrow new RedirectException(welcome);\n\t\t\t\t} else {\n\t\t\t\t\t// TODP possibly a proper URLEncode method\n\t\t\t\t\tquerystring = querystring.replace(' ', '+');\n\t\t\t\t\tthrow new RedirectException(\"/welcome/?\" + querystring);\n\t\t\t\t}\n\t\t\t} catch (URISyntaxException e) {\n\t\t\t\t// HUH!?!\n\t\t\t}\n\t\t}else if(ks.equals(\"/favicon.ico\")){\n\t\t\tbyte[] buf = new byte[1024];\n\t\t\tint len;\n\t\t\tInputStream strm = getClass().getResourceAsStream(\"staticfiles/favicon.ico\");\n\t\t\t\n\t\t\tif (strm == null) {\n\t\t\t\tthis.sendErrorPage(ctx, 404, l10n(\"pathNotFoundTitle\"), l10n(\"pathNotFound\"));\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tctx.sendReplyHeaders(200, \"OK\", null, \"image/x-icon\", strm.available());\n\t\t\t\n\t\t\twhile ( (len = strm.read(buf)) > 0) {\n\t\t\t\tctx.writeData(buf, 0, len);\n\t\t\t}\n\t\t\treturn;\n\t\t}else if(ks.equals(\"/robots.txt\") && ctx.doRobots()){\n\t\t\tthis.writeTextReply(ctx, 200, \"Ok\", \"User-agent: *\\nDisallow: /\");\n\t\t\treturn;\n\t\t}else if(ks.startsWith(\"/darknet/\") || ks.equals(\"/darknet\")) { //TODO (pre-build 1045 url format) remove when obsolete\n\t\t\twritePermanentRedirect(ctx, \"obsoleted\", \"/friends/\");\n\t\t\treturn;\n\t\t}else if(ks.startsWith(\"/opennet/\") || ks.equals(\"/opennet\")) { //TODO (pre-build 1045 url format) remove when obsolete\n\t\t\twritePermanentRedirect(ctx, \"obsoleted\", \"/strangers/\");\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(ks.startsWith(\"/\"))\n\t\t\tks = ks.substring(1);\n\t\t\n\t\tlong maxSize = httprequest.getLongParam(\"max-size\", MAX_LENGTH);\n\t\t\n\t\tFreenetURI key;\n\t\ttry {\n\t\t\tkey = new FreenetURI(ks);\n\t\t} catch (MalformedURLException e) {\n\t\t\tHTMLNode pageNode = ctx.getPageMaker().getPageNode(l10n(\"invalidKeyTitle\"), ctx);\n\t\t\tHTMLNode contentNode = ctx.getPageMaker().getContentNode(pageNode);\n\n\t\t\tHTMLNode errorInfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-error\");\n\t\t\terrorInfobox.addChild(\"div\", \"class\", \"infobox-header\", L10n.getString(\"FProxyToadlet.invalidKeyWithReason\", new String[] { \"reason\" }, new String[] { e.toString() }));\n\t\t\tHTMLNode errorContent = errorInfobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\terrorContent.addChild(\"#\", l10n(\"expectedKeyButGot\"));\n\t\t\terrorContent.addChild(\"code\", ks);\n\t\t\terrorContent.addChild(\"br\");\n\t\t\terrorContent.addChild(ctx.getPageMaker().createBackLink(ctx, l10n(\"goBack\")));\n\t\t\terrorContent.addChild(\"br\");\n\t\t\taddHomepageLink(errorContent);\n\n\t\t\tthis.writeHTMLReply(ctx, 400, l10n(\"invalidKeyTitle\"), pageNode.generate());\n\t\t\treturn;\n\t\t}\n\t\tString requestedMimeType = httprequest.getParam(\"type\", null);\n\t\tString override = (requestedMimeType == null) ? \"\" : \"?type=\"+URLEncoder.encode(requestedMimeType,true);\n\t\t// No point passing ?force= across a redirect, since the key will change.\n\t\t// However, there is every point in passing ?forcedownload.\n\t\tif(httprequest.isParameterSet(\"forcedownload\")) {\n\t\t\tif(override.length() == 0) override = \"?forcedownload\";\n\t\t\telse override = override+\"&forcedownload\";\n\t\t}\n\t\tBucket data = null;\n\t\ttry {\n\t\t\tif(Logger.shouldLog(Logger.MINOR, this))\n\t\t\t\tLogger.minor(this, \"FProxy fetching \"+key+\" (\"+maxSize+ ')');\n\t\t\tFetchResult result = fetch(key, maxSize, httprequest /* fixme replace if HTTPRequest ever becomes comparable */); \n\t\t\t\n\t\t\t// Now, is it safe?\n\t\t\t\n\t\t\tdata = result.asBucket();\n\t\t\tString mimeType = result.getMimeType();\n\t\t\t\n\t\t\tString referer = sanitizeReferer(ctx);\n\t\t\t\n\t\t\t\n\t\t\thandleDownload(ctx, data, ctx.getBucketFactory(), mimeType, requestedMimeType, httprequest.getParam(\"force\", null), httprequest.isParameterSet(\"forcedownload\"), \"/\", key, maxSize != MAX_LENGTH ? \"&max-size=\"+SizeUtil.formatSizeWithoutSpace(maxSize) : \"\", referer, true, ctx, core);\n\t\t\t\n\t\t} catch (FetchException e) {\n\t\t\tString msg = e.getMessage();\n\t\t\tif(Logger.shouldLog(Logger.MINOR, this))\n\t\t\t\tLogger.minor(this, \"Failed to fetch \"+uri+\" : \"+e);\n\t\t\tif(e.newURI != null) {\n\t\t\t\tToadlet.writePermanentRedirect(ctx, msg, '/' +e.newURI.toACIIString() + override);\n\t\t\t} else if(e.mode == FetchException.TOO_BIG) {\n\t\t\t\tHTMLNode pageNode = ctx.getPageMaker().getPageNode(l10n(\"fileInformationTitle\"), ctx);\n\t\t\t\tHTMLNode contentNode = ctx.getPageMaker().getContentNode(pageNode);\n\t\t\t\t\n\t\t\t\tHTMLNode infobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-information\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"largeFile\"));\n\t\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\tHTMLNode fileInformationList = infoboxContent.addChild(\"ul\");\n\t\t\t\tHTMLNode option = fileInformationList.addChild(\"li\");\n\t\t\t\toption.addChild(\"#\", (l10n(\"filenameLabel\") + ' '));\n\t\t\t\toption.addChild(\"a\", \"href\", '/' + key.toString(), getFilename(e, key, e.getExpectedMimeType()));\n\n\t\t\t\tString mime = writeSizeAndMIME(fileInformationList, e);\n\t\t\t\t\n\t\t\t\tinfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-information\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"explanationTitle\"));\n\t\t\t\tinfoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\tinfoboxContent.addChild(\"#\", l10n(\"largeFileExplanationAndOptions\"));\n\t\t\t\tHTMLNode optionList = infoboxContent.addChild(\"ul\");\n\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\tHTMLNode optionForm = option.addChild(\"form\", new String[] { \"action\", \"method\" }, new String[] {'/' + key.toString(), \"get\" });\n\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"max-size\", String.valueOf(e.expectedSize == -1 ? Long.MAX_VALUE : e.expectedSize*2) });\n\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"fetch\", l10n(\"fetchLargeFileAnywayAndDisplay\") });\n\t\t\t\toptionList.addChild(\"li\").addChild(\"a\", new String[] { \"href\", \"title\" }, new String[] { \"/\", \"FProxy home page\" }, l10n(\"abortToHomepage\"));\n\t\t\t\tif(ctx.isAllowedFullAccess() || !ctx.getContainer().publicGatewayMode()) {\n\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\toptionForm = ctx.addFormChild(option, \"/queue/\", \"tooBigQueueForm\");\n\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"key\", key.toString() });\n\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"return-type\", \"disk\" });\n\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"persistence\", \"forever\" });\n\t\t\t\t\tif (mime != null) {\n\t\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"type\", mime });\n\t\t\t\t\t}\n\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"download\", l10n(\"downloadInBackgroundToDisk\") });\n\t\t\t\t}\n\n\t\t\t\twriteHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n\t\t\t} else {\n\t\t\t\tHTMLNode pageNode = ctx.getPageMaker().getPageNode(FetchException.getShortMessage(e.mode), ctx);\n\t\t\t\tHTMLNode contentNode = ctx.getPageMaker().getContentNode(pageNode);\n\n\t\t\t\tHTMLNode infobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-error\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"errorWithReason\", \"error\", FetchException.getShortMessage(e.mode)));\n\t\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\tHTMLNode fileInformationList = infoboxContent.addChild(\"ul\");\n\t\t\t\tHTMLNode option = fileInformationList.addChild(\"li\");\n\t\t\t\toption.addChild(\"#\", (l10n(\"filenameLabel\") + ' '));\n\t\t\t\toption.addChild(\"a\", \"href\", '/' + key.toString(), getFilename(e, key, e.getExpectedMimeType()));\n\n\t\t\t\tString mime = writeSizeAndMIME(fileInformationList, e);\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"explanationTitle\"));\n\t\t\t\tinfoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\tinfoboxContent.addChild(\"p\", l10n(\"unableToRetrieve\"));\n\t\t\t\tif(e.isFatal())\n\t\t\t\t\tinfoboxContent.addChild(\"p\", l10n(\"errorIsFatal\"));\n\t\t\t\tinfoboxContent.addChild(\"p\", msg);\n\t\t\t\tif(e.errorCodes != null) {\n\t\t\t\t\tinfoboxContent.addChild(\"p\").addChild(\"pre\").addChild(\"#\", e.errorCodes.toVerboseString());\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"options\"));\n\t\t\t\tinfoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\t\n\t\t\t\tHTMLNode optionList = infoboxContent.addChild(\"ul\");\n\t\t\t\t\n\t\t\t\tif((e.mode == FetchException.NOT_IN_ARCHIVE) && (core.node.pluginManager.isPluginLoaded(\"plugins.KeyExplorer.KeyExplorer\"))) {\n\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\tL10n.addL10nSubstitution(option, \"FProxyToadlet.openWithKeyExplorer\", new String[] { \"link\", \"/link\" }, new String[] { \"<a href=\\\"/plugins/plugins.KeyExplorer.KeyExplorer/?key=\" + key.toString() + \"\\\">\", \"<\/a>\" });\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(!e.isFatal() && (ctx.isAllowedFullAccess() || !ctx.getContainer().publicGatewayMode())) {\n\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\tHTMLNode optionForm = ctx.addFormChild(option, \"/queue/\", \"dnfQueueForm\");\n\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"key\", key.toString() });\n\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"return-type\", \"disk\" });\n\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"persistence\", \"forever\" });\n\t\t\t\t\tif (mime != null) {\n\t\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"type\", mime });\n\t\t\t\t\t}\n\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"download\", l10n(\"downloadInBackgroundToDisk\")});\n\t\t\t\t\t\n\t\t\t\t\toptionList.addChild(\"li\").\n\t\t\t\t\t\taddChild(\"a\", \"href\", getLink(key, requestedMimeType, maxSize, httprequest.getParam(\"force\", null), httprequest.isParameterSet(\"forcedownload\"))).addChild(\"#\", l10n(\"retryNow\"));\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\toptionList.addChild(\"li\").addChild(\"a\", new String[] { \"href\", \"title\" }, new String[] { \"/\", L10n.getString(\"Toadlet.homepage\") }, l10n(\"abortToHomepage\"));\n\t\t\t\t\n\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\toption.addChild(ctx.getPageMaker().createBackLink(ctx, l10n(\"goBackToPrev\")));\n\t\t\t\t\n\t\t\t\tthis.writeHTMLReply(ctx, (e.mode == 10) ? 404 : 500 /* close enough - FIXME probably should depend on status code */,\n\t\t\t\t\t\t\"Internal Error\", pageNode.generate());\n\t\t\t}\n\t\t} catch (SocketException e) {\n\t\t\t// Probably irrelevant\n\t\t\tif(e.getMessage().equals(\"Broken pipe\")) {\n\t\t\t\tif(Logger.shouldLog(Logger.MINOR, this))\n\t\t\t\t\tLogger.minor(this, \"Caught \"+e+\" while handling GET\", e);\n\t\t\t} else {\n\t\t\t\tLogger.normal(this, \"Caught \"+e);\n\t\t\t}\n\t\t\tthrow e;\n\t\t} catch (Throwable t) {\n\t\t\twriteInternalError(t, ctx);\n\t\t} finally {\n\t\t\tif(data != null) data.free();\n\t\t}\n\t}","commit_id":"5b6ab5720f79c639d6dab14bdd90bcb3dc4d8a4c","url":"https://github.com/freenet/fred"},{"original_method":"static public boolean ensureEclairAVD(final AndroidSDK sdk) {\n    try {\n      if (defaultAVD.exists(sdk)) {\n        System.out.println(\"the avd exists\");\n        return true;\n      }\n      if (defaultAVD.create(sdk)) {\n        System.out.println(\"the avd was created\");\n        return true;\n      }\n      Base.showWarning(\"Android Error\", AVD_CREATE_ERROR, null);\n    } catch (final Exception e) {\n      Base.showWarning(\"Android Error\", AVD_CREATE_ERROR, e);\n    }\n    return false;\n  }","id":82493,"modified_method":"static public boolean ensureEclairAVD(final AndroidSDK sdk) {\n    try {\n      if (defaultAVD.exists(sdk)) {\n//        System.out.println(\"the avd exists\");\n        return true;\n      }\n      if (defaultAVD.create(sdk)) {\n//        System.out.println(\"the avd was created\");\n        return true;\n      }\n      Base.showWarning(\"Android Error\", AVD_CREATE_ERROR, null);\n    } catch (final Exception e) {\n      Base.showWarning(\"Android Error\", AVD_CREATE_ERROR, e);\n    }\n    return false;\n  }","commit_id":"63544f75acbbede1f091e097da774fa3906508e2","url":"https://github.com/processing/processing"},{"original_method":"public void handlePressed(MouseEvent e, int sel) {\n    boolean shift = e.isShiftDown();\n    AndroidEditor aeditor = (AndroidEditor) editor;\n    \n    switch (sel) {\n    case RUN:\n      if (shift) {\n        aeditor.handleRunEmulator();\n      } else {\n        aeditor.handleRunDevice();\n      }\n      break;\n\n    case STOP:\n      aeditor.handleStop();\n      break;\n\n    case OPEN:\n      // TODO I think we need a longer chain of accessors here.\n      JPopupMenu popup = editor.getMode().getToolbarMenu().getPopupMenu();\n      popup.show(this, e.getX(), e.getY());\n      break;\n\n    case NEW:\n      if (shift) {\n        base.handleNew();\n      } else {\n        base.handleNewReplace();\n      }\n      break;\n\n    case SAVE:\n      aeditor.handleSaveRequest(false);\n      break;\n\n    case EXPORT:\n      if (shift) {\n        aeditor.handleExportPackage();\n      } else {\n        aeditor.handleExportProject();\n      }\n      break;\n    }\n  }","id":82494,"modified_method":"public void handlePressed(MouseEvent e, int sel) {\n    boolean shift = e.isShiftDown();\n    AndroidEditor aeditor = (AndroidEditor) editor;\n    \n    switch (sel) {\n    case RUN:\n      if (shift) {\n        aeditor.handleRunDevice();\n      } else {\n        aeditor.handleRunEmulator();\n      }\n      break;\n\n    case STOP:\n      aeditor.handleStop();\n      break;\n\n    case OPEN:\n      // TODO I think we need a longer chain of accessors here.\n      JPopupMenu popup = editor.getMode().getToolbarMenu().getPopupMenu();\n      popup.show(this, e.getX(), e.getY());\n      break;\n\n    case NEW:\n      if (shift) {\n        base.handleNew();\n      } else {\n        base.handleNewReplace();\n      }\n      break;\n\n    case SAVE:\n      aeditor.handleSaveRequest(false);\n      break;\n\n    case EXPORT:\n      if (shift) {\n        aeditor.handleExportPackage();\n      } else {\n        aeditor.handleExportProject();\n      }\n      break;\n    }\n  }","commit_id":"63544f75acbbede1f091e097da774fa3906508e2","url":"https://github.com/processing/processing"},{"original_method":"public JTree buildExamplesTree() {\n    DefaultMutableTreeNode node = new DefaultMutableTreeNode(\"Examples\");\n\n    JTree examplesTree = new JTree(node);\n//    rebuildExamplesTree(node);\n//  }\n\n    //DefaultTreeCellRenderer renderer = tree.\n//    TreeCellRenderer tcr = examplesTree.getCellRenderer();\n\n    //\n//  \n//  public void rebuildExamplesTree(DefaultMutableTreeNode node) {\n    try {\n      // break down the examples folder for examples\n//      File[] subfolders = examplesFolder.listFiles(new FilenameFilter() {\n//        public boolean accept(File dir, String name) {\n//          return dir.isDirectory() && name.charAt(0) != '.';\n//        }\n//      });\n      File[] subfolders = getExampleCategoryFolders();\n\n//      DefaultMutableTreeNode examplesParent = new DefaultMutableTreeNode(\"Examples\");\n      for (File sub : subfolders) {\n        DefaultMutableTreeNode subNode = new DefaultMutableTreeNode(sub.getName());\n        if (base.addSketches(subNode, sub)) {\n//          examplesParent.add(subNode);\n          node.add(subNode);\n        }\n      }\n//      node.add(examplesParent);\n//      examplesTree.expandPath(new TreePath(examplesParent));\n\n      // get library examples\n      DefaultMutableTreeNode libParent = new DefaultMutableTreeNode(\"Libraries\");\n      for (Library lib : coreLibraries) {\n        if (lib.hasExamples()) {\n//          JMenu libMenu = new JMenu(lib.getName());\n          DefaultMutableTreeNode libNode = new DefaultMutableTreeNode(lib.getName());\n//          base.addSketches(libMenu, lib.getExamplesFolder(), replace);\n          base.addSketches(libNode, lib.getExamplesFolder());\n//          menu.add(libMenu);\n          libParent.add(libNode);\n        }\n      }\n      node.add(libParent);\n\n      // get contrib library examples\n      boolean any = false;\n      for (Library lib : contribLibraries) {\n        if (lib.hasExamples()) {\n          any = true;\n        }\n      }\n      if (any) {\n//        menu.addSeparator();\n        DefaultMutableTreeNode contribParent = new DefaultMutableTreeNode(\"Contributed Libraries\");\n//        Base.addDisabledItem(menu, \"Contributed\");\n        for (Library lib : contribLibraries) {\n          if (lib.hasExamples()) {\n//            JMenu libMenu = new JMenu(lib.getName());\n            DefaultMutableTreeNode libNode = new DefaultMutableTreeNode(lib.getName());\n//            base.addSketches(libMenu, lib.getExamplesFolder(), replace);\n            base.addSketches(libNode, lib.getExamplesFolder());\n//            menu.add(libMenu);\n            contribParent.add(libNode);\n          }\n        }\n        node.add(contribParent);\n      }\n    } catch (IOException e) {\n      e.printStackTrace();\n    }\n    return examplesTree;\n  }","id":82495,"modified_method":"public JTree buildExamplesTree() {\n    DefaultMutableTreeNode node = new DefaultMutableTreeNode(\"Examples\");\n\n    JTree examplesTree = new JTree(node);\n//    rebuildExamplesTree(node);\n//  }\n\n    //DefaultTreeCellRenderer renderer = tree.\n//    TreeCellRenderer tcr = examplesTree.getCellRenderer();\n\n    //\n//  \n//  public void rebuildExamplesTree(DefaultMutableTreeNode node) {\n    try {\n      // break down the examples folder for examples\n//      File[] subfolders = examplesFolder.listFiles(new FilenameFilter() {\n//        public boolean accept(File dir, String name) {\n//          return dir.isDirectory() && name.charAt(0) != '.';\n//        }\n//      });\n      File[] subfolders = getExampleCategoryFolders();\n\n//      DefaultMutableTreeNode examplesParent = new DefaultMutableTreeNode(\"Examples\");\n      for (File sub : subfolders) {\n        DefaultMutableTreeNode subNode = new DefaultMutableTreeNode(sub.getName());\n        if (base.addSketches(subNode, sub)) {\n//          examplesParent.add(subNode);\n          node.add(subNode);\n        }\n      }\n//      node.add(examplesParent);\n//      examplesTree.expandPath(new TreePath(examplesParent));\n\n      // get library examples\n      boolean any = false;\n      DefaultMutableTreeNode libParent = new DefaultMutableTreeNode(\"Libraries\");\n      for (Library lib : coreLibraries) {\n        if (lib.hasExamples()) {\n//          JMenu libMenu = new JMenu(lib.getName());\n          DefaultMutableTreeNode libNode = new DefaultMutableTreeNode(lib.getName());\n//          base.addSketches(libMenu, lib.getExamplesFolder(), replace);\n          any |= base.addSketches(libNode, lib.getExamplesFolder());\n//          menu.add(libMenu);\n          libParent.add(libNode);\n        }\n      }\n      if (any) {\n        node.add(libParent);\n      }\n\n      // get contrib library examples\n      any = false;\n      for (Library lib : contribLibraries) {\n        if (lib.hasExamples()) {\n          any = true;\n        }\n      }\n      if (any) {\n//        menu.addSeparator();\n        DefaultMutableTreeNode contribParent = new DefaultMutableTreeNode(\"Contributed Libraries\");\n//        Base.addDisabledItem(menu, \"Contributed\");\n        for (Library lib : contribLibraries) {\n          if (lib.hasExamples()) {\n//            JMenu libMenu = new JMenu(lib.getName());\n            DefaultMutableTreeNode libNode = new DefaultMutableTreeNode(lib.getName());\n//            base.addSketches(libMenu, lib.getExamplesFolder(), replace);\n            base.addSketches(libNode, lib.getExamplesFolder());\n//            menu.add(libMenu);\n            contribParent.add(libNode);\n          }\n        }\n        node.add(contribParent);\n      }\n    } catch (IOException e) {\n      e.printStackTrace();\n    }\n    return examplesTree;\n  }","commit_id":"63544f75acbbede1f091e097da774fa3906508e2","url":"https://github.com/processing/processing"},{"original_method":"public void showExamplesFrame() {\n    if (examplesFrame == null) {\n      examplesFrame = new JFrame(\"Examples\");\n      final JTree tree = buildExamplesTree();\n\n      tree.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);\n      tree.setShowsRootHandles(true);\n      // expand the root\n      tree.expandRow(0);\n      // now hide the root\n      tree.setRootVisible(false);\n      // now expand the other folks\n      for (int row = tree.getRowCount()-1; row >= 0; --row) {\n        tree.expandRow(row);\n      }\n\n      /*\n      tree.addTreeSelectionListener(new TreeSelectionListener() {\n        public void valueChanged(TreeSelectionEvent e) {\n          DefaultMutableTreeNode node = (DefaultMutableTreeNode)\n          tree.getLastSelectedPathComponent();\n\n          if (node != null) {\n            Object nodeInfo = node.getUserObject();\n            if (node.isLeaf()) {\n              System.out.println(node + \" user obj: \" + nodeInfo);\n              //            BookInfo book = (BookInfo)nodeInfo;\n              //            displayURL(book.bookURL);\n            }\n          }\n        }\n      });\n      */\n      tree.addMouseListener(new MouseAdapter() {\n        public void mouseClicked(MouseEvent e) {\n          if (e.getClickCount() > 1) {\n            DefaultMutableTreeNode node = \n              (DefaultMutableTreeNode) tree.getLastSelectedPathComponent();\n            if (node != null && node.isLeaf()) {\n//              File sketch = (File) node.getUserObject();\n              \n//              base.handleOpen(sketch.getAbsolutePath());\n//              System.out.println(node + \" user obj: \" + node.getUserObject());\n\n              SketchReference sketch = (SketchReference) node.getUserObject();\n              base.handleOpen(sketch.getPath());\n            }\n          }\n        }\n      });\n      tree.addKeyListener(new KeyAdapter() {\n        public void keyTyped(KeyEvent e) {\n//          System.out.println(e);\n          if (e.getKeyChar() == KeyEvent.VK_ENTER) {\n            DefaultMutableTreeNode node = \n              (DefaultMutableTreeNode) tree.getLastSelectedPathComponent();\n            if (node != null && node.isLeaf()) {\n//              System.out.println(node + \" user obj: \" + node.getUserObject());\n//              File sketch = (File) node.getUserObject();\n//              base.handleOpen(sketch.getAbsolutePath());\n              \n//              Object[] obj = (Object[]) node.getUserObject();\n//              base.handleOpen(((File) obj[1]).getAbsolutePath());\n              SketchReference sketch = (SketchReference) node.getUserObject();\n              base.handleOpen(sketch.getPath());\n            }\n          } else if (e.getKeyChar() == KeyEvent.VK_ESCAPE) {\n            examplesFrame.setVisible(false);\n          }\n        }\n      });\n      \n      tree.setBorder(new EmptyBorder(5, 5, 5, 5));\n      JScrollPane treeView = new JScrollPane(tree);\n      treeView.setPreferredSize(new Dimension(250, 450));\n      examplesFrame.add(treeView);\n      examplesFrame.pack();\n    }\n    if (base.activeEditor != null) {\n      Point p = base.activeEditor.getLocation();\n      examplesFrame.setLocation(p.x - examplesFrame.getWidth() - 20, p.y);\n    } else {\n      examplesFrame.setLocationRelativeTo(null);\n    }\n    examplesFrame.setVisible(true);\n  }","id":82496,"modified_method":"public void showExamplesFrame() {\n    if (examplesFrame == null) {\n      examplesFrame = new JFrame(getTitle() + \" Examples\");\n      final JTree tree = buildExamplesTree();\n\n      tree.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);\n      tree.setShowsRootHandles(true);\n      // expand the root\n      tree.expandRow(0);\n      // now hide the root\n      tree.setRootVisible(false);\n      // now expand the other folks\n      for (int row = tree.getRowCount()-1; row >= 0; --row) {\n        tree.expandRow(row);\n      }\n\n      /*\n      tree.addTreeSelectionListener(new TreeSelectionListener() {\n        public void valueChanged(TreeSelectionEvent e) {\n          DefaultMutableTreeNode node = (DefaultMutableTreeNode)\n          tree.getLastSelectedPathComponent();\n\n          if (node != null) {\n            Object nodeInfo = node.getUserObject();\n            if (node.isLeaf()) {\n              System.out.println(node + \" user obj: \" + nodeInfo);\n              //            BookInfo book = (BookInfo)nodeInfo;\n              //            displayURL(book.bookURL);\n            }\n          }\n        }\n      });\n      */\n      tree.addMouseListener(new MouseAdapter() {\n        public void mouseClicked(MouseEvent e) {\n          if (e.getClickCount() > 1) {\n            DefaultMutableTreeNode node = \n              (DefaultMutableTreeNode) tree.getLastSelectedPathComponent();\n            if (node != null && node.isLeaf()) {\n//              File sketch = (File) node.getUserObject();\n              \n//              base.handleOpen(sketch.getAbsolutePath());\n//              System.out.println(node + \" user obj: \" + node.getUserObject());\n\n              SketchReference sketch = (SketchReference) node.getUserObject();\n              base.handleOpen(sketch.getPath());\n            }\n          }\n        }\n      });\n      tree.addKeyListener(new KeyAdapter() {\n        public void keyTyped(KeyEvent e) {\n//          System.out.println(e);\n          if (e.getKeyChar() == KeyEvent.VK_ENTER) {\n            DefaultMutableTreeNode node = \n              (DefaultMutableTreeNode) tree.getLastSelectedPathComponent();\n            if (node != null && node.isLeaf()) {\n//              System.out.println(node + \" user obj: \" + node.getUserObject());\n//              File sketch = (File) node.getUserObject();\n//              base.handleOpen(sketch.getAbsolutePath());\n              \n//              Object[] obj = (Object[]) node.getUserObject();\n//              base.handleOpen(((File) obj[1]).getAbsolutePath());\n              SketchReference sketch = (SketchReference) node.getUserObject();\n              base.handleOpen(sketch.getPath());\n            }\n          } else if (e.getKeyChar() == KeyEvent.VK_ESCAPE) {\n            examplesFrame.setVisible(false);\n          }\n        }\n      });\n      \n      tree.setBorder(new EmptyBorder(5, 5, 5, 5));\n      JScrollPane treeView = new JScrollPane(tree);\n      treeView.setPreferredSize(new Dimension(250, 450));\n      examplesFrame.add(treeView);\n      examplesFrame.pack();\n    }\n    if (base.activeEditor != null) {\n      Point p = base.activeEditor.getLocation();\n      examplesFrame.setLocation(p.x - examplesFrame.getWidth() - 20, p.y);\n    } else {\n      examplesFrame.setLocationRelativeTo(null);\n    }\n    examplesFrame.setVisible(true);\n  }","commit_id":"63544f75acbbede1f091e097da774fa3906508e2","url":"https://github.com/processing/processing"},{"original_method":"/**\n   * Annotate this document for KBP relations.\n   * @param annotation The document to annotate.\n   */\n  public void annotate(Annotation annotation) {\n    List<CoreMap> sentences = annotation.get(CoreAnnotations.SentencesAnnotation.class);\n\n    // Annotate with NER\n    casedNER.annotate(annotation);\n    caselessNER.annotate(annotation);\n    // (update mentions with new NER)\n    for (CoreMap sentence : sentences) {\n      for (CoreMap mention : sentence.get(CoreAnnotations.MentionsAnnotation.class)) {\n        for (CoreLabel token : mention.get(CoreAnnotations.TokensAnnotation.class)) {\n          if (!\"O\".equals(token.ner())) {\n            mention.set(CoreAnnotations.NamedEntityTagAnnotation.class, token.ner());\n          }\n        }\n      }\n    }\n\n    // Create simple document\n    Document doc = new Document(serializer.toProto(annotation));\n\n    // Get the mentions in the document\n    List<CoreMap> mentions = new ArrayList<>();\n    for (CoreMap sentence : sentences) {\n      mentions.addAll(sentence.get(CoreAnnotations.MentionsAnnotation.class));\n    }\n    List<CoreMap> pronounMentions = annotatePronominalMentions(annotation);\n    mentions.addAll(pronounMentions);\n\n    // Compute coreferent clusters\n    // (map an index to a KBP mention)\n    Map<Pair<Integer, Integer>, CoreMap> mentionByStartIndex = new HashMap<>();\n    for (CoreMap mention : mentions) {\n      for (CoreLabel token : mention.get(CoreAnnotations.TokensAnnotation.class)) {\n        mentionByStartIndex.put(Pair.makePair(token.sentIndex(), token.index()), mention);\n      }\n    }\n    // (collect coreferent KBP mentions)\n    Map<CoreMap, Set<CoreMap>> mentionsMap = new HashMap<>();  // map from canonical mention -> other mentions\n    for (Map.Entry<Integer, CorefChain> chain : annotation.get(CorefCoreAnnotations.CorefChainAnnotation.class).entrySet()) {\n      CoreMap firstMention = null;\n      for (CorefChain.CorefMention mention : chain.getValue().getMentionsInTextualOrder()) {\n        CoreMap kbpMention = null;\n        for (int i = mention.startIndex; i < mention.endIndex; ++i) {\n          if (mentionByStartIndex.containsKey(Pair.makePair(mention.sentNum - 1, i))) {\n            kbpMention = mentionByStartIndex.get(Pair.makePair(mention.sentNum - 1, i));\n            break;\n          }\n        }\n        if (firstMention == null) {\n          firstMention = kbpMention;\n        }\n        if (kbpMention != null) {\n          if (!mentionsMap.containsKey(firstMention)) {\n            mentionsMap.put(firstMention, new LinkedHashSet<>());\n          }\n          mentionsMap.get(firstMention).add(kbpMention);\n        }\n      }\n    }\n    // (coreference acronyms)\n    acronymMatch(mentions, mentionsMap);\n    // (ensure valid NER tag for canonical mention)\n    for (CoreMap key : new HashSet<>(mentionsMap.keySet())) {\n      if (key.get(CoreAnnotations.NamedEntityTagAnnotation.class) == null) {\n        CoreMap newKey = null;\n        for (CoreMap candidate : mentionsMap.get(key)) {\n          if (candidate.get(CoreAnnotations.NamedEntityTagAnnotation.class) != null) {\n            newKey = candidate;\n            break;\n          }\n        }\n        if (newKey != null) {\n          mentionsMap.put(newKey, mentionsMap.remove(key));\n        } else {\n          mentionsMap.remove(key);  // case: no mention in this chain has an NER tag.\n        }\n      }\n    }\n\n    // Propagate Entity Link\n    for (Map.Entry<CoreMap, Set<CoreMap>> entry : mentionsMap.entrySet()) {\n      String entityLink = entry.getKey().get(CoreAnnotations.WikipediaEntityAnnotation.class);\n      for (CoreMap mention : entry.getValue()) {\n        for (CoreLabel token : mention.get(CoreAnnotations.TokensAnnotation.class)) {\n          token.set(CoreAnnotations.WikipediaEntityAnnotation.class, entityLink);\n        }\n      }\n    }\n\n    // Create a canonical mention map\n    Map<CoreMap, CoreMap> mentionToCanonicalMention = new HashMap<>();\n    for (Map.Entry<CoreMap, Set<CoreMap>> entry : mentionsMap.entrySet()) {\n      for (CoreMap mention : entry.getValue()) {\n        // (set the NER tag + link to be axiomatically that of the canonical mention)\n        mention.set(CoreAnnotations.NamedEntityTagAnnotation.class, entry.getKey().get(CoreAnnotations.NamedEntityTagAnnotation.class));\n        mention.set(CoreAnnotations.WikipediaEntityAnnotation.class, entry.getKey().get(CoreAnnotations.WikipediaEntityAnnotation.class));\n        // (add the mention (note: this must come after we set the NER!)\n        mentionToCanonicalMention.put(mention, entry.getKey());\n      }\n    }\n    // (add missing mentions)\n    mentions.stream().filter(mention -> mentionToCanonicalMention.get(mention) == null)\n        .forEach(mention -> mentionToCanonicalMention.put(mention, mention));\n\n\n    // Cluster mentions by sentence\n    @SuppressWarnings(\"unchecked\") List<CoreMap>[] mentionsBySentence = new List[annotation.get(CoreAnnotations.SentencesAnnotation.class).size()];\n    for (int i = 0; i < mentionsBySentence.length; ++i) {\n      mentionsBySentence[i] = new ArrayList<>();\n    }\n    for (CoreMap mention : mentionToCanonicalMention.keySet()) {\n      mentionsBySentence[mention.get(CoreAnnotations.SentenceIndexAnnotation.class)].add(mention);\n    }\n\n    // Classify\n    for (int sentenceI = 0; sentenceI < mentionsBySentence.length; ++sentenceI) {\n      List<RelationTriple> triples = new ArrayList<>();  // the annotations\n      List<CoreMap> candidates = mentionsBySentence[sentenceI];\n      for (int subjI = 0; subjI < candidates.size(); ++subjI) {\n        CoreMap subj = candidates.get(subjI);\n        int subjBegin = subj.get(CoreAnnotations.TokensAnnotation.class).get(0).index() - 1;\n        int subjEnd = subj.get(CoreAnnotations.TokensAnnotation.class).get(subj.get(CoreAnnotations.TokensAnnotation.class).size() - 1).index();\n        Optional<KBPRelationExtractor.NERTag> subjNER = KBPRelationExtractor.NERTag.fromString(subj.get(CoreAnnotations.NamedEntityTagAnnotation.class));\n        if (subjNER.isPresent()) {\n          for (int objI = 0; objI < candidates.size(); ++objI) {\n            if (subjI == objI) {\n              continue;\n            }\n            CoreMap obj = candidates.get(objI);\n            int objBegin = obj.get(CoreAnnotations.TokensAnnotation.class).get(0).index() - 1;\n            int objEnd = obj.get(CoreAnnotations.TokensAnnotation.class).get(obj.get(CoreAnnotations.TokensAnnotation.class).size() - 1).index();\n            Optional<KBPRelationExtractor.NERTag> objNER = KBPRelationExtractor.NERTag.fromString(obj.get(CoreAnnotations.NamedEntityTagAnnotation.class));\n\n            if (objNER.isPresent() &&\n                KBPRelationExtractor.RelationType.plausiblyHasRelation(subjNER.get(), objNER.get())) {  // type check\n              KBPStatisticalExtractor.FeaturizerInput input = new KBPStatisticalExtractor.FeaturizerInput(\n                  new Span(subjBegin, subjEnd),\n                  new Span(objBegin, objEnd),\n                  subjNER.get(),\n                  objNER.get(),\n                  doc.sentence(sentenceI)\n              );\n              //  -- BEGIN Classify\n              Pair<String, Double> prediction = Pair.makePair(KBPRelationExtractor.NO_RELATION, 1.0);\n              for (KBPRelationExtractor extractor : extractors) {\n                Pair<String, Double> classifierPrediction = extractor.classify(input);\n                if (prediction.first.equals(KBPRelationExtractor.NO_RELATION) ||\n                    (!classifierPrediction.first.equals(KBPRelationExtractor.NO_RELATION) &&\n                        classifierPrediction.second > prediction.second)\n                    ){\n                  // The last prediction was NO_RELATION, or this is not NO_RELATION and has a higher score\n                  prediction = classifierPrediction;\n                }\n              }\n              //  -- END Classify\n              // Handle the classifier output\n              if (!KBPStatisticalExtractor.NO_RELATION.equals(prediction.first)) {\n                RelationTriple triple = new RelationTriple.WithLink(\n                    subj.get(CoreAnnotations.TokensAnnotation.class),\n                    mentionToCanonicalMention.get(subj).get(CoreAnnotations.TokensAnnotation.class),\n                    Collections.singletonList(new CoreLabel(new Word(prediction.first))),\n                    obj.get(CoreAnnotations.TokensAnnotation.class),\n                    mentionToCanonicalMention.get(obj).get(CoreAnnotations.TokensAnnotation.class),\n                    prediction.second,\n                    sentences.get(sentenceI).get(SemanticGraphCoreAnnotations.CollapsedCCProcessedDependenciesAnnotation.class),\n                    subj.get(CoreAnnotations.WikipediaEntityAnnotation.class),\n                    obj.get(CoreAnnotations.WikipediaEntityAnnotation.class)\n                    );\n                triples.add(triple);\n              }\n            }\n          }\n        }\n      }\n\n      // Set triples\n      annotation.get(CoreAnnotations.SentencesAnnotation.class).get(sentenceI).set(CoreAnnotations.KBPTriplesAnnotation.class, triples);\n    }\n  }","id":82497,"modified_method":"/**\n   * Annotate this document for KBP relations.\n   * @param annotation The document to annotate.\n   */\n  public void annotate(Annotation annotation) {\n    List<CoreMap> sentences = annotation.get(CoreAnnotations.SentencesAnnotation.class);\n\n    // Annotate with NER\n    casedNER.annotate(annotation);\n    caselessNER.annotate(annotation);\n    // Annotate with Mentions\n    entityMentionAnnotator.annotate(annotation);\n\n    // Create simple document\n    Document doc = new Document(serializer.toProto(annotation));\n\n    // Get the mentions in the document\n    List<CoreMap> mentions = new ArrayList<>();\n    for (CoreMap sentence : sentences) {\n      mentions.addAll(sentence.get(CoreAnnotations.MentionsAnnotation.class));\n    }\n    List<CoreMap> pronounMentions = annotatePronominalMentions(annotation);\n    mentions.addAll(pronounMentions);\n\n    // Compute coreferent clusters\n    // (map an index to a KBP mention)\n    Map<Pair<Integer, Integer>, CoreMap> mentionByStartIndex = new HashMap<>();\n    for (CoreMap mention : mentions) {\n      for (CoreLabel token : mention.get(CoreAnnotations.TokensAnnotation.class)) {\n        mentionByStartIndex.put(Pair.makePair(token.sentIndex(), token.index()), mention);\n      }\n    }\n    // (collect coreferent KBP mentions)\n    Map<CoreMap, Set<CoreMap>> mentionsMap = new HashMap<>();  // map from canonical mention -> other mentions\n    for (Map.Entry<Integer, CorefChain> chain : annotation.get(CorefCoreAnnotations.CorefChainAnnotation.class).entrySet()) {\n      CoreMap firstMention = null;\n      for (CorefChain.CorefMention mention : chain.getValue().getMentionsInTextualOrder()) {\n        CoreMap kbpMention = null;\n        for (int i = mention.startIndex; i < mention.endIndex; ++i) {\n          if (mentionByStartIndex.containsKey(Pair.makePair(mention.sentNum - 1, i))) {\n            kbpMention = mentionByStartIndex.get(Pair.makePair(mention.sentNum - 1, i));\n            break;\n          }\n        }\n        if (firstMention == null) {\n          firstMention = kbpMention;\n        }\n        if (kbpMention != null) {\n          if (!mentionsMap.containsKey(firstMention)) {\n            mentionsMap.put(firstMention, new LinkedHashSet<>());\n          }\n          mentionsMap.get(firstMention).add(kbpMention);\n        }\n      }\n    }\n    // (coreference acronyms)\n    acronymMatch(mentions, mentionsMap);\n    // (ensure valid NER tag for canonical mention)\n    for (CoreMap key : new HashSet<>(mentionsMap.keySet())) {\n      if (key.get(CoreAnnotations.NamedEntityTagAnnotation.class) == null) {\n        CoreMap newKey = null;\n        for (CoreMap candidate : mentionsMap.get(key)) {\n          if (candidate.get(CoreAnnotations.NamedEntityTagAnnotation.class) != null) {\n            newKey = candidate;\n            break;\n          }\n        }\n        if (newKey != null) {\n          mentionsMap.put(newKey, mentionsMap.remove(key));\n        } else {\n          mentionsMap.remove(key);  // case: no mention in this chain has an NER tag.\n        }\n      }\n    }\n\n    // Propagate Entity Link\n    for (Map.Entry<CoreMap, Set<CoreMap>> entry : mentionsMap.entrySet()) {\n      String entityLink = entry.getKey().get(CoreAnnotations.WikipediaEntityAnnotation.class);\n      for (CoreMap mention : entry.getValue()) {\n        for (CoreLabel token : mention.get(CoreAnnotations.TokensAnnotation.class)) {\n          token.set(CoreAnnotations.WikipediaEntityAnnotation.class, entityLink);\n        }\n      }\n    }\n\n    // Create a canonical mention map\n    Map<CoreMap, CoreMap> mentionToCanonicalMention = new HashMap<>();\n    for (Map.Entry<CoreMap, Set<CoreMap>> entry : mentionsMap.entrySet()) {\n      for (CoreMap mention : entry.getValue()) {\n        // (set the NER tag + link to be axiomatically that of the canonical mention)\n        mention.set(CoreAnnotations.NamedEntityTagAnnotation.class, entry.getKey().get(CoreAnnotations.NamedEntityTagAnnotation.class));\n        mention.set(CoreAnnotations.WikipediaEntityAnnotation.class, entry.getKey().get(CoreAnnotations.WikipediaEntityAnnotation.class));\n        // (add the mention (note: this must come after we set the NER!)\n        mentionToCanonicalMention.put(mention, entry.getKey());\n      }\n    }\n    // (add missing mentions)\n    mentions.stream().filter(mention -> mentionToCanonicalMention.get(mention) == null)\n        .forEach(mention -> mentionToCanonicalMention.put(mention, mention));\n\n\n    // Cluster mentions by sentence\n    @SuppressWarnings(\"unchecked\") List<CoreMap>[] mentionsBySentence = new List[annotation.get(CoreAnnotations.SentencesAnnotation.class).size()];\n    for (int i = 0; i < mentionsBySentence.length; ++i) {\n      mentionsBySentence[i] = new ArrayList<>();\n    }\n    for (CoreMap mention : mentionToCanonicalMention.keySet()) {\n      mentionsBySentence[mention.get(CoreAnnotations.SentenceIndexAnnotation.class)].add(mention);\n    }\n\n    // Classify\n    for (int sentenceI = 0; sentenceI < mentionsBySentence.length; ++sentenceI) {\n      List<RelationTriple> triples = new ArrayList<>();  // the annotations\n      List<CoreMap> candidates = mentionsBySentence[sentenceI];\n      for (int subjI = 0; subjI < candidates.size(); ++subjI) {\n        CoreMap subj = candidates.get(subjI);\n        int subjBegin = subj.get(CoreAnnotations.TokensAnnotation.class).get(0).index() - 1;\n        int subjEnd = subj.get(CoreAnnotations.TokensAnnotation.class).get(subj.get(CoreAnnotations.TokensAnnotation.class).size() - 1).index();\n        Optional<KBPRelationExtractor.NERTag> subjNER = KBPRelationExtractor.NERTag.fromString(subj.get(CoreAnnotations.NamedEntityTagAnnotation.class));\n        if (subjNER.isPresent()) {\n          for (int objI = 0; objI < candidates.size(); ++objI) {\n            if (subjI == objI) {\n              continue;\n            }\n            CoreMap obj = candidates.get(objI);\n            int objBegin = obj.get(CoreAnnotations.TokensAnnotation.class).get(0).index() - 1;\n            int objEnd = obj.get(CoreAnnotations.TokensAnnotation.class).get(obj.get(CoreAnnotations.TokensAnnotation.class).size() - 1).index();\n            Optional<KBPRelationExtractor.NERTag> objNER = KBPRelationExtractor.NERTag.fromString(obj.get(CoreAnnotations.NamedEntityTagAnnotation.class));\n\n            if (objNER.isPresent() &&\n                KBPRelationExtractor.RelationType.plausiblyHasRelation(subjNER.get(), objNER.get())) {  // type check\n              KBPStatisticalExtractor.FeaturizerInput input = new KBPStatisticalExtractor.FeaturizerInput(\n                  new Span(subjBegin, subjEnd),\n                  new Span(objBegin, objEnd),\n                  subjNER.get(),\n                  objNER.get(),\n                  doc.sentence(sentenceI)\n              );\n              //  -- BEGIN Classify\n              Pair<String, Double> prediction = Pair.makePair(KBPRelationExtractor.NO_RELATION, 1.0);\n              for (KBPRelationExtractor extractor : extractors) {\n                Pair<String, Double> classifierPrediction = extractor.classify(input);\n                if (prediction.first.equals(KBPRelationExtractor.NO_RELATION) ||\n                    (!classifierPrediction.first.equals(KBPRelationExtractor.NO_RELATION) &&\n                        classifierPrediction.second > prediction.second)\n                    ){\n                  // The last prediction was NO_RELATION, or this is not NO_RELATION and has a higher score\n                  prediction = classifierPrediction;\n                }\n              }\n              //  -- END Classify\n              // Handle the classifier output\n              if (!KBPStatisticalExtractor.NO_RELATION.equals(prediction.first)) {\n                RelationTriple triple = new RelationTriple.WithLink(\n                    subj.get(CoreAnnotations.TokensAnnotation.class),\n                    mentionToCanonicalMention.get(subj).get(CoreAnnotations.TokensAnnotation.class),\n                    Collections.singletonList(new CoreLabel(new Word(prediction.first))),\n                    obj.get(CoreAnnotations.TokensAnnotation.class),\n                    mentionToCanonicalMention.get(obj).get(CoreAnnotations.TokensAnnotation.class),\n                    prediction.second,\n                    sentences.get(sentenceI).get(SemanticGraphCoreAnnotations.CollapsedCCProcessedDependenciesAnnotation.class),\n                    subj.get(CoreAnnotations.WikipediaEntityAnnotation.class),\n                    obj.get(CoreAnnotations.WikipediaEntityAnnotation.class)\n                    );\n                triples.add(triple);\n              }\n            }\n          }\n        }\n      }\n\n      // Set triples\n      annotation.get(CoreAnnotations.SentencesAnnotation.class).get(sentenceI).set(CoreAnnotations.KBPTriplesAnnotation.class, triples);\n    }\n  }","commit_id":"555622d82113a486982cf625a7788f2aa044db62","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/** {@inheritDoc} */\n  @Override\n  public Set<Class<? extends CoreAnnotation>> requirementsSatisfied() {\n    return Collections.singleton(CoreAnnotations.KBPTriplesAnnotation.class);\n  }","id":82498,"modified_method":"/** {@inheritDoc} */\n  @Override\n  public Set<Class<? extends CoreAnnotation>> requirementsSatisfied() {\n    Set<Class<? extends CoreAnnotation>> requirements = new HashSet<>(Arrays.asList(\n        CoreAnnotations.MentionsAnnotation.class,\n        CoreAnnotations.KBPTriplesAnnotation.class\n    ));\n    return Collections.unmodifiableSet(requirements);\n  }","commit_id":"555622d82113a486982cf625a7788f2aa044db62","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/** {@inheritDoc} */\n  @Override\n  public Set<Class<? extends CoreAnnotation>> requires() {\n    Set<Class<? extends CoreAnnotation>> requirements = new HashSet<>(Arrays.asList(\n        CoreAnnotations.TextAnnotation.class,\n        CoreAnnotations.TokensAnnotation.class,\n        CoreAnnotations.IndexAnnotation.class,\n        CoreAnnotations.SentencesAnnotation.class,\n        CoreAnnotations.SentenceIndexAnnotation.class,\n        CoreAnnotations.PartOfSpeechAnnotation.class,\n        CoreAnnotations.LemmaAnnotation.class,\n        SemanticGraphCoreAnnotations.BasicDependenciesAnnotation.class,\n        SemanticGraphCoreAnnotations.CollapsedDependenciesAnnotation.class,\n        SemanticGraphCoreAnnotations.CollapsedCCProcessedDependenciesAnnotation.class,\n        CoreAnnotations.OriginalTextAnnotation.class,\n        CoreAnnotations.MentionsAnnotation.class\n    ));\n    return Collections.unmodifiableSet(requirements);\n  }","id":82499,"modified_method":"/** {@inheritDoc} */\n  @Override\n  public Set<Class<? extends CoreAnnotation>> requires() {\n    Set<Class<? extends CoreAnnotation>> requirements = new HashSet<>(Arrays.asList(\n        CoreAnnotations.TextAnnotation.class,\n        CoreAnnotations.TokensAnnotation.class,\n        CoreAnnotations.IndexAnnotation.class,\n        CoreAnnotations.SentencesAnnotation.class,\n        CoreAnnotations.SentenceIndexAnnotation.class,\n        CoreAnnotations.PartOfSpeechAnnotation.class,\n        CoreAnnotations.LemmaAnnotation.class,\n        SemanticGraphCoreAnnotations.BasicDependenciesAnnotation.class,\n        SemanticGraphCoreAnnotations.CollapsedDependenciesAnnotation.class,\n        SemanticGraphCoreAnnotations.CollapsedCCProcessedDependenciesAnnotation.class,\n        CoreAnnotations.OriginalTextAnnotation.class\n    ));\n    return Collections.unmodifiableSet(requirements);\n  }","commit_id":"555622d82113a486982cf625a7788f2aa044db62","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Create a new KBP annotator from the given properties.\n   *\n   * @param props The properties to use when creating this extractor.\n   */\n  public KBPAnnotator(String name, Properties props) {\n    // Parse standard properties\n    ArgumentParser.fillOptions(this, name, props);\n\n    // Load the extractor\n    extractors = new ArrayList<>();\n    try {\n      Object object = IOUtils.readObjectFromURLOrClasspathOrFileSystem(model);\n      if (object instanceof LinearClassifier) {\n        //noinspection unchecked\n        extractors.add(new KBPStatisticalExtractor((Classifier<String, String>) object));\n      } else if (object instanceof KBPStatisticalExtractor) {\n        extractors.add( (KBPStatisticalExtractor) object );\n      } else {\n        throw new ClassCastException(object.getClass() + \" cannot be cast into a \" + KBPStatisticalExtractor.class);\n      }\n      extractors.add(new KBPTokensregexExtractor(tokensregexdir));\n      extractors.add(new KBPSemgrexExtractor(semgrexdir));\n    } catch (IOException | ClassNotFoundException e) {\n      throw new RuntimeIOException(e);\n    }\n\n    // Load TokensRegexNER\n    this.casedNER = new TokensRegexNERAnnotator(\n        regexnerCasedPath,\n        false);\n    this.caselessNER = new TokensRegexNERAnnotator(\n        regexnerCaselessPath,\n        true,\n        \"^(NN|JJ).*\");\n  }","id":82500,"modified_method":"/**\n   * Create a new KBP annotator from the given properties.\n   *\n   * @param props The properties to use when creating this extractor.\n   */\n  public KBPAnnotator(String name, Properties props) {\n    // Parse standard properties\n    ArgumentParser.fillOptions(this, name, props);\n\n    // Load the extractor\n    extractors = new ArrayList<>();\n    try {\n      Object object = IOUtils.readObjectFromURLOrClasspathOrFileSystem(model);\n      if (object instanceof LinearClassifier) {\n        //noinspection unchecked\n        extractors.add(new KBPStatisticalExtractor((Classifier<String, String>) object));\n      } else if (object instanceof KBPStatisticalExtractor) {\n        extractors.add( (KBPStatisticalExtractor) object );\n      } else {\n        throw new ClassCastException(object.getClass() + \" cannot be cast into a \" + KBPStatisticalExtractor.class);\n      }\n      extractors.add(new KBPTokensregexExtractor(tokensregexdir));\n      extractors.add(new KBPSemgrexExtractor(semgrexdir));\n    } catch (IOException | ClassNotFoundException e) {\n      throw new RuntimeIOException(e);\n    }\n\n    // Load TokensRegexNER\n    this.casedNER = new TokensRegexNERAnnotator(\n        regexnerCasedPath,\n        false);\n    this.caselessNER = new TokensRegexNERAnnotator(\n        regexnerCaselessPath,\n        true,\n        \"^(NN|JJ).*\");\n\n    // Create entity mention annotator\n    this.entityMentionAnnotator = new EntityMentionsAnnotator(\"kbp.entitymention\", new Properties() {{\n      setProperty(\"kbp.entitymention.acronyms\", \"true\");\n      setProperty(\"acronyms\", \"true\");\n    }});\n  }","commit_id":"555622d82113a486982cf625a7788f2aa044db62","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private void addLibraryCheckingExistings(LibraryManager manager, Library library) {\n      for (ManagedLibrary existing : getUsedLibraries()) {\n        if (existing.manager == manager) {\n          @SuppressWarnings({\"NonConstantStringShouldBeStringBuffer\"})\n          String message = \"There is already a \" + manager.getLibraryCategoryName() + \" library\";\n          final String version = manager.getLibraryVersion(existing.library, myLibrariesContainer);\n          if (StringUtil.isNotEmpty(version)) {\n            message += \" of version \" + version;\n          }\n          message += \".\\n Do you want to replace the existing one?\";\n          final String replace = \"&Replace\";\n          final int result =\n            Messages.showDialog(myComponent, message, \"Library already exists\", new String[]{replace, \"&Add\", \"&Cancel\"}, 0, null);\n          if (result == 2 || result < 0) {\n            return; //cancel or escape\n          }\n\n          if (result == 0) {\n            doRemoveLibraries(Collections.singleton(existing.library));\n          }\n        }\n      }\n\n      myEditorContext.getModifiableRootModel().addLibraryEntry(library);\n    }","id":82501,"modified_method":"private void addLibraryCheckingExistings(LibraryManager manager, Library library) {\n      for (ManagedLibrary existing : getUsedLibraries()) {\n        if (existing.manager == manager) {\n          @SuppressWarnings({\"NonConstantStringShouldBeStringBuffer\"})\n          String message = \"There is already a \" + manager.getLibraryCategoryName() + \" library\";\n          final String version = manager.getLibraryVersion(existing.library, myLibrariesContainer);\n          if (StringUtil.isNotEmpty(version)) {\n            message += \" of version \" + version;\n          }\n          message += \".\\n Do you want to replace the existing one?\";\n          final String replace = \"&Replace\";\n          final int result =\n            Messages.showDialog(myComponent, message, \"Library already exists\", new String[]{replace, \"&Add\", \"&Cancel\"}, 0, null);\n          if (result == 2 || result < 0) {\n            return; //cancel or escape\n          }\n\n          if (result == 0) {\n            doRemoveLibraries(new THashSet<Library>(Arrays.asList(existing.library)));\n          }\n        }\n      }\n\n      myEditorContext.getModifiableRootModel().addLibraryEntry(library);\n    }","commit_id":"39509b85b3fd768aed0207751493c6d9ddd952a8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void calculateDefaultResourcePackage(Server server) {\n        if (!StringUtils.isEmpty(getResourcePackage())) {\n            return;\n        }\n        JAXRSServiceFactoryBean serviceFactoryBean = \n            (JAXRSServiceFactoryBean)server.getEndpoint().get(JAXRSServiceFactoryBean.class.getName());\n        List<ClassResourceInfo> resourceInfos = serviceFactoryBean.getClassResourceInfo();\n        \n        if (resourceInfos.size() == 1) {\n            setResourcePackage(resourceInfos.get(0).getServiceClass().getPackage().getName());\n        } else {\n            List<Class<?>> serviceClasses = new ArrayList<Class<?>>(resourceInfos.size());\n            for (ClassResourceInfo cri : resourceInfos) {\n                serviceClasses.add(cri.getServiceClass());\n            }\n            String sharedPackage = PackageUtils.getSharedPackageName(serviceClasses);\n            if (!StringUtils.isEmpty(getResourcePackage())) {\n                setResourcePackage(sharedPackage);\n            }\n        }\n    }","id":82502,"modified_method":"private void calculateDefaultResourcePackage(Server server) {\n        if (!StringUtils.isEmpty(getResourcePackage())) {\n            return;\n        }\n        JAXRSServiceFactoryBean serviceFactoryBean = \n            (JAXRSServiceFactoryBean)server.getEndpoint().get(JAXRSServiceFactoryBean.class.getName());\n        List<ClassResourceInfo> resourceInfos = serviceFactoryBean.getClassResourceInfo();\n        \n        if (resourceInfos.size() == 1) {\n            setResourcePackage(resourceInfos.get(0).getServiceClass().getPackage().getName());\n        } else {\n            List<Class<?>> serviceClasses = new ArrayList<Class<?>>(resourceInfos.size());\n            for (ClassResourceInfo cri : resourceInfos) {\n                serviceClasses.add(cri.getServiceClass());\n            }\n            String sharedPackage = PackageUtils.getSharedPackageName(serviceClasses);\n            if (!StringUtils.isEmpty(sharedPackage)) {\n                setResourcePackage(sharedPackage);\n            }\n        }\n    }","commit_id":"14849cb7c8b2117c45196da92df21151f8a78742","url":"https://github.com/apache/cxf"},{"original_method":"@Bean\n    public Server rsServer() {\n        JAXRSServerFactoryBean endpoint = new JAXRSServerFactoryBean();\n        endpoint.setServiceBean(new HelloService());\n        endpoint.setAddress(\"/helloservice\");\n        return endpoint.create();\n    }","id":82503,"modified_method":"@Bean\n    public Server rsServer() {\n        JAXRSServerFactoryBean endpoint = new JAXRSServerFactoryBean();\n        endpoint.setServiceBeans(Arrays.asList(new HelloService(), new HelloService2()));\n        endpoint.setAddress(\"/helloservice\");\n        return endpoint.create();\n    }","commit_id":"14849cb7c8b2117c45196da92df21151f8a78742","url":"https://github.com/apache/cxf"},{"original_method":"@Bean\n    public Swagger2Feature swaggerFeature(ApplicationContext context) {\n        // Or create a simple Swagger2Feature @Component-annotated extension\n        // and drop this method if a default feature setup is OK\n        Swagger2Feature feature = new Swagger2Feature();\n        feature.setRunAsFilter(true);\n        return feature;\n    }","id":82504,"modified_method":"@Bean\n    public Swagger2Feature swaggerFeature(ApplicationContext context) {\n        // Or create a simple Swagger2Feature @Component-annotated extension\n        // and drop this method if a default feature setup is OK\n        Swagger2Feature feature = new Swagger2Feature();\n        //feature.setRunAsFilter(true);\n        return feature;\n    }","commit_id":"14849cb7c8b2117c45196da92df21151f8a78742","url":"https://github.com/apache/cxf"},{"original_method":"public Set<Object> getSingletons() {\n            return Collections.<Object>singleton(new HelloService());\n        }","id":82505,"modified_method":"public Set<Object> getSingletons() {\n            return new HashSet<Object>(Arrays.asList(new HelloService(), new HelloService2()));\n        }","commit_id":"14849cb7c8b2117c45196da92df21151f8a78742","url":"https://github.com/apache/cxf"},{"original_method":"static LinkedHashSet<Cipher> defaultSort(final LinkedHashSet<Cipher> ciphers) {\n        final LinkedHashSet<Cipher> result = new LinkedHashSet<>(ciphers.size());\n        final LinkedHashSet<Cipher> ecdh = new LinkedHashSet<>(ciphers.size());\n\n        /* Everything else being equal, prefer ephemeral ECDH over other key exchange mechanisms */\n        ecdh.addAll(filterByKeyExchange(ciphers, Collections.singleton(KeyExchange.EECDH)));\n\n        /* AES is our preferred symmetric cipher */\n        Set<Encryption> aes = new HashSet<>(Arrays.asList(Encryption.AES128, Encryption.AES128CCM,\n                Encryption.AES128CCM8, Encryption.AES128GCM, Encryption.AES256,\n                Encryption.AES256CCM, Encryption.AES256CCM8, Encryption.AES256GCM));\n\n        /* Now arrange all ciphers by preference: */\n        result.addAll(filterByEncryption(ecdh, aes));\n        result.addAll(filterByEncryption(ciphers, aes));\n\n        /* Add everything else */\n        result.addAll(ecdh);\n        result.addAll(ciphers);\n\n        /* Low priority for MD5 */\n        moveToEnd(result, filterByMessageDigest(result, Collections.singleton(MessageDigest.MD5)));\n\n        /* Move anonymous ciphers to the end.  Usually, these will remain disabled.\n         * (For applications that allow them, they aren't too bad, but we prefer\n         * authenticated ciphers.) */\n        moveToEnd(result, filterByAuthentication(result, Collections.singleton(Authentication.aNULL)));\n\n        /* Move ciphers without forward secrecy to the end */\n        moveToEnd(result, filterByAuthentication(result, Collections.singleton(Authentication.ECDH)));\n        moveToEnd(result, filterByKeyExchange(result, Collections.singleton(KeyExchange.RSA)));\n        moveToEnd(result, filterByKeyExchange(result, Collections.singleton(KeyExchange.PSK)));\n\n        /* RC4 is sort-of broken -- move the the end */\n        moveToEnd(result, filterByEncryption(result, Collections.singleton(Encryption.RC4)));\n        return strengthSort(result);\n    }","id":82506,"modified_method":"static LinkedHashSet<Cipher> defaultSort(final LinkedHashSet<Cipher> ciphers) {\n        final LinkedHashSet<Cipher> result = new LinkedHashSet<>(ciphers.size());\n        final LinkedHashSet<Cipher> ecdh = new LinkedHashSet<>(ciphers.size());\n\n        /* Everything else being equal, prefer ephemeral ECDH over other key exchange mechanisms */\n        ecdh.addAll(filterByKeyExchange(ciphers, new HashSet<>(Arrays.asList(KeyExchange.EECDH, KeyExchange.ECDHEPSK))));\n\n        /* AES is our preferred symmetric cipher */\n        Set<Encryption> aes = new HashSet<>(Arrays.asList(Encryption.AES128, Encryption.AES128CCM,\n                Encryption.AES128CCM8, Encryption.AES128GCM, Encryption.AES256,\n                Encryption.AES256CCM, Encryption.AES256CCM8, Encryption.AES256GCM));\n\n        /* Now arrange all ciphers by preference: */\n        result.addAll(filterByEncryption(ecdh, aes));\n        result.addAll(filterByEncryption(ciphers, aes));\n\n        /* Add everything else */\n        result.addAll(ecdh);\n        result.addAll(ciphers);\n\n        /* Low priority for MD5 */\n        moveToEnd(result, filterByMessageDigest(result, Collections.singleton(MessageDigest.MD5)));\n\n        /* Move anonymous ciphers to the end.  Usually, these will remain disabled.\n         * (For applications that allow them, they aren't too bad, but we prefer\n         * authenticated ciphers.) */\n        moveToEnd(result, filterByAuthentication(result, Collections.singleton(Authentication.aNULL)));\n\n        /* Move ciphers without forward secrecy to the end */\n        moveToEnd(result, filterByAuthentication(result, Collections.singleton(Authentication.ECDH)));\n        moveToEnd(result, filterByKeyExchange(result, Collections.singleton(KeyExchange.RSA)));\n        moveToEnd(result, filterByKeyExchange(result, Collections.singleton(KeyExchange.PSK)));\n\n        /* RC4 is sort-of broken -- move the the end */\n        moveToEnd(result, filterByEncryption(result, Collections.singleton(Encryption.RC4)));\n        return strengthSort(result);\n    }","commit_id":"e0ef10b3e4703e585dfb3b4215155b38a407f93f","url":"https://github.com/apache/tomcat"},{"original_method":"/**\n     * Gathers Jingle Nodes candidates for all host <tt>Candidate<\/tt>s that are\n     * already present in the specified <tt>component<\/tt>. This method relies\n     * on the specified <tt>component<\/tt> to already contain all its host\n     * candidates so that it would resolve them.\n     *\n     * @param component the {@link Component} that we'd like to gather candidate\n     * Jingle Nodes <tt>Candidate<\/tt>s for\n     * @return  the <tt>LocalCandidate<\/tt>s gathered by this\n     * <tt>CandidateHarvester<\/tt>\n     */\n    @Override\n    public synchronized Collection<LocalCandidate> harvest(Component component)\n    {\n        logger.info(\"harvest Jingle Nodes\");\n\n        Collection<LocalCandidate> candidates = new HashSet<LocalCandidate>();\n        String ip = null;\n        int port = -1;\n\n        /* if we have already a candidate (RTCP) allocated, get it */\n        if(localAddressSecond != null && relayedAddressSecond != null)\n        {\n            LocalCandidate candidate = createJingleNodesCandidate(\n                    relayedAddressSecond, component, localAddressSecond);\n            candidates.add(candidate);\n            component.addLocalCandidate(candidate);\n\n            localAddressSecond = null;\n            relayedAddressSecond = null;\n            return candidates;\n        }\n\n        XMPPConnection conn = serviceNode.getConnection();\n        JingleChannelIQ ciq = null;\n\n        if (serviceNode != null)\n        {\n            final TrackerEntry preferred = serviceNode.getPreferedRelay();\n\n            if (preferred != null)\n            {\n                ciq = SmackServiceNode.getChannel(conn, preferred.getJid());\n            }\n        }\n\n        if (ciq != null && ciq.getRemoteport() > 0)\n        {\n            ip = ciq.getHost();\n            port = ciq.getRemoteport();\n\n            if(logger.isInfoEnabled())\n            {\n                logger.info(\"JN relay: \" + ip + \" remote port:\" + port +\n                        \" local port: \" + ciq.getLocalport());\n            }\n\n            /* RTP */\n            TransportAddress relayedAddress = new TransportAddress(ip, port,\n                    Transport.UDP);\n            TransportAddress localAddress = new TransportAddress(ip,\n                    ciq.getLocalport(), Transport.UDP);\n\n            LocalCandidate local = createJingleNodesCandidate(\n                    relayedAddress, component, localAddress);\n\n            /* RTCP */\n            relayedAddressSecond\n                = new TransportAddress(ip, port + 1,Transport.UDP);\n            localAddressSecond\n                = new TransportAddress(ip, ciq.getLocalport() + 1,\n                        Transport.UDP);\n\n            candidates.add(local);\n            component.addLocalCandidate(local);\n        }\n        return candidates;\n    }","id":82507,"modified_method":"/**\n     * Gathers Jingle Nodes candidates for all host <tt>Candidate<\/tt>s that are\n     * already present in the specified <tt>component<\/tt>. This method relies\n     * on the specified <tt>component<\/tt> to already contain all its host\n     * candidates so that it would resolve them.\n     *\n     * @param component the {@link Component} that we'd like to gather candidate\n     * Jingle Nodes <tt>Candidate<\/tt>s for\n     * @return  the <tt>LocalCandidate<\/tt>s gathered by this\n     * <tt>CandidateHarvester<\/tt>\n     */\n    @Override\n    public synchronized Collection<LocalCandidate> harvest(Component component)\n    {\n        logger.info(\"harvest Jingle Nodes\");\n\n        Collection<LocalCandidate> candidates = new HashSet<LocalCandidate>();\n        String ip = null;\n        int port = -1;\n\n        /* if we have already a candidate (RTCP) allocated, get it */\n        if(localAddressSecond != null && relayedAddressSecond != null)\n        {\n            LocalCandidate candidate = createJingleNodesCandidate(\n                    relayedAddressSecond, component, localAddressSecond);\n\n            //try to add the candidate to the component and then only add it to\n            //the harvest not redundant (not sure how it could be red. but ...)\n            if( component.addLocalCandidate(candidate))\n            {\n                candidates.add(candidate);\n            }\n\n            localAddressSecond = null;\n            relayedAddressSecond = null;\n            return candidates;\n        }\n\n        XMPPConnection conn = serviceNode.getConnection();\n        JingleChannelIQ ciq = null;\n\n        if (serviceNode != null)\n        {\n            final TrackerEntry preferred = serviceNode.getPreferedRelay();\n\n            if (preferred != null)\n            {\n                ciq = SmackServiceNode.getChannel(conn, preferred.getJid());\n            }\n        }\n\n        if (ciq != null && ciq.getRemoteport() > 0)\n        {\n            ip = ciq.getHost();\n            port = ciq.getRemoteport();\n\n            if(logger.isInfoEnabled())\n            {\n                logger.info(\"JN relay: \" + ip + \" remote port:\" + port +\n                        \" local port: \" + ciq.getLocalport());\n            }\n\n            /* RTP */\n            TransportAddress relayedAddress = new TransportAddress(ip, port,\n                    Transport.UDP);\n            TransportAddress localAddress = new TransportAddress(ip,\n                    ciq.getLocalport(), Transport.UDP);\n\n            LocalCandidate local = createJingleNodesCandidate(\n                    relayedAddress, component, localAddress);\n\n            /* RTCP */\n            relayedAddressSecond\n                = new TransportAddress(ip, port + 1,Transport.UDP);\n            localAddressSecond\n                = new TransportAddress(ip, ciq.getLocalport() + 1,\n                        Transport.UDP);\n\n\n            //try to add the candidate to the component and then only add it to\n            //the harvest not redundant (not sure how it could be red. but ...)\n            if( component.addLocalCandidate(local))\n            {\n                candidates.add(local);\n            }\n        }\n        return candidates;\n    }","commit_id":"3108302e51aff3b027fffd6d3ceac601f86b5728","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Gathers Jingle Nodes candidates for all host <tt>Candidate<\/tt>s that are\n     * already present in the specified <tt>component<\/tt>. This method relies\n     * on the specified <tt>component<\/tt> to already contain all its host\n     * candidates so that it would resolve them.\n     *\n     * @param component the {@link Component} that we'd like to gather candidate\n     * Jingle Nodes <tt>Candidate<\/tt>s for\n     * @return  the <tt>LocalCandidate<\/tt>s gathered by this\n     * <tt>CandidateHarvester<\/tt>\n     */\n    @Override\n    public synchronized Collection<LocalCandidate> harvest(Component component)\n    {\n        logger.info(\"harvest Jingle Nodes\");\n\n        Collection<LocalCandidate> candidates = new HashSet<LocalCandidate>();\n        String ip = null;\n        int port = -1;\n\n        /* if we have already a candidate (RTCP) allocated, get it */\n        if(localAddressSecond != null && relayedAddressSecond != null)\n        {\n            LocalCandidate candidate = createJingleNodesCandidate(\n                    relayedAddressSecond, component, localAddressSecond);\n            candidates.add(candidate);\n            component.addLocalCandidate(candidate);\n\n            localAddressSecond = null;\n            relayedAddressSecond = null;\n            return candidates;\n        }\n\n        XMPPConnection conn = serviceNode.getConnection();\n        JingleChannelIQ ciq = null;\n\n        if (serviceNode != null)\n        {\n            final TrackerEntry preferred = serviceNode.getPreferedRelay();\n\n            if (preferred != null)\n            {\n                ciq = SmackServiceNode.getChannel(conn, preferred.getJid());\n            }\n        }\n\n        if (ciq != null && ciq.getRemoteport() > 0)\n        {\n            ip = ciq.getHost();\n            port = ciq.getRemoteport();\n\n            if(logger.isInfoEnabled())\n            {\n                logger.info(\"JN relay: \" + ip + \" remote port:\" + port +\n                        \" local port: \" + ciq.getLocalport());\n            }\n\n            /* RTP */\n            TransportAddress relayedAddress = new TransportAddress(ip, port,\n                    Transport.UDP);\n            TransportAddress localAddress = new TransportAddress(ip,\n                    ciq.getLocalport(), Transport.UDP);\n\n            LocalCandidate local = createJingleNodesCandidate(\n                    relayedAddress, component, localAddress);\n\n            /* RTCP */\n            relayedAddressSecond\n                = new TransportAddress(ip, port + 1,Transport.UDP);\n            localAddressSecond\n                = new TransportAddress(ip, ciq.getLocalport() + 1,\n                        Transport.UDP);\n\n            candidates.add(local);\n            component.addLocalCandidate(local);\n        }\n        return candidates;\n    }","id":82508,"modified_method":"/**\n     * Gathers Jingle Nodes candidates for all host <tt>Candidate<\/tt>s that are\n     * already present in the specified <tt>component<\/tt>. This method relies\n     * on the specified <tt>component<\/tt> to already contain all its host\n     * candidates so that it would resolve them.\n     *\n     * @param component the {@link Component} that we'd like to gather candidate\n     * Jingle Nodes <tt>Candidate<\/tt>s for\n     * @return  the <tt>LocalCandidate<\/tt>s gathered by this\n     * <tt>CandidateHarvester<\/tt>\n     */\n    @Override\n    public synchronized Collection<LocalCandidate> harvest(Component component)\n    {\n        logger.info(\"harvest Jingle Nodes\");\n\n        Collection<LocalCandidate> candidates = new HashSet<LocalCandidate>();\n        String ip = null;\n        int port = -1;\n\n        /* if we have already a candidate (RTCP) allocated, get it */\n        if(localAddressSecond != null && relayedAddressSecond != null)\n        {\n            LocalCandidate candidate = createJingleNodesCandidate(\n                    relayedAddressSecond, component, localAddressSecond);\n\n            //try to add the candidate to the component and then only add it to\n            //the harvest not redundant (not sure how it could be red. but ...)\n            if( component.addLocalCandidate(candidate))\n            {\n                candidates.add(candidate);\n            }\n\n            localAddressSecond = null;\n            relayedAddressSecond = null;\n            return candidates;\n        }\n\n        XMPPConnection conn = serviceNode.getConnection();\n        JingleChannelIQ ciq = null;\n\n        if (serviceNode != null)\n        {\n            final TrackerEntry preferred = serviceNode.getPreferedRelay();\n\n            if (preferred != null)\n            {\n                ciq = SmackServiceNode.getChannel(conn, preferred.getJid());\n            }\n        }\n\n        if (ciq != null && ciq.getRemoteport() > 0)\n        {\n            ip = ciq.getHost();\n            port = ciq.getRemoteport();\n\n            if(logger.isInfoEnabled())\n            {\n                logger.info(\"JN relay: \" + ip + \" remote port:\" + port +\n                        \" local port: \" + ciq.getLocalport());\n            }\n\n            /* RTP */\n            TransportAddress relayedAddress = new TransportAddress(ip, port,\n                    Transport.UDP);\n            TransportAddress localAddress = new TransportAddress(ip,\n                    ciq.getLocalport(), Transport.UDP);\n\n            LocalCandidate local = createJingleNodesCandidate(\n                    relayedAddress, component, localAddress);\n\n            /* RTCP */\n            relayedAddressSecond\n                = new TransportAddress(ip, port + 1,Transport.UDP);\n            localAddressSecond\n                = new TransportAddress(ip, ciq.getLocalport() + 1,\n                        Transport.UDP);\n\n\n            //try to add the candidate to the component and then only add it to\n            //the harvest not redundant (not sure how it could be red. but ...)\n            if( component.addLocalCandidate(local))\n            {\n                candidates.add(local);\n            }\n        }\n        return candidates;\n    }","commit_id":"50c0d7ae0d59c34b64b72a6975360f0d5fd45dbc","url":"https://github.com/jitsi/jitsi"},{"original_method":"public EvaluationContextImpl createEvaluationContext() {\n    DebuggerManagerThreadImpl.assertIsManagerThread();\n    StackFrameProxyImpl frameProxy = getFrameProxy();\n    ObjectReference objectReference;\n    try {\n      objectReference = frameProxy != null ? frameProxy.thisObject() : null;\n    }\n    catch (EvaluateException e) {\n      DebuggerCommandImpl currentCommand = getDebugProcess().getManagerThread().getCurrentCommand();\n      if (currentCommand instanceof SuspendContextCommandImpl) {\n        final SuspendContextImpl currentCommandContext = ((SuspendContextCommandImpl)currentCommand).getSuspendContext();\n        final ThreadReferenceProxyImpl commandThread = currentCommandContext.getThread();\n        if (commandThread != frameProxy.threadProxy()) {\n          LOG.assertTrue(false);\n          LOG.info(\"Current Command: \" + currentCommand.getClass().getName());\n          LOG.info(\"Current Command Thread : \" + (commandThread != null? commandThread.name() : \"null\"));\n        }\n        LOG.info(\"Thread : \" + frameProxy.threadProxy().name(), e);\n      }\n      objectReference = null;\n    }\n    return new EvaluationContextImpl(getSuspendContext(), frameProxy, objectReference);\n  }","id":82509,"modified_method":"public EvaluationContextImpl createEvaluationContext() {\n    DebuggerManagerThreadImpl.assertIsManagerThread();\n    StackFrameProxyImpl frameProxy = getFrameProxy();\n    ObjectReference objectReference;\n    try {\n      objectReference = frameProxy != null ? frameProxy.thisObject() : null;\n    }\n    catch (EvaluateException e) {\n      DebuggerCommandImpl currentCommand = getDebugProcess().getManagerThread().getCurrentCommand();\n      if (currentCommand instanceof SuspendContextCommandImpl) {\n        final SuspendContextImpl currentCommandContext = ((SuspendContextCommandImpl)currentCommand).getSuspendContext();\n        final ThreadReferenceProxyImpl commandThread = currentCommandContext.getThread();\n        if (commandThread != frameProxy.threadProxy()) {\n          LOG.assertTrue(\n              false,\n              \"Current Command: \" + currentCommand.getClass().getName() + \n              \"\\nCurrent Command Thread : \" + (commandThread != null? commandThread.name() : \"null\") + \n              \"\\nThread : \" + frameProxy.threadProxy().name()\n          );\n        }\n      }\n      objectReference = null;\n    }\n    return new EvaluationContextImpl(getSuspendContext(), frameProxy, objectReference);\n  }","commit_id":"589e323e752680d861833cb038594af7ee9d7b0d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testSendAndReceiveUDP() throws IOException\n    {\n        ByteArrayOutputStream bytesOut = new ByteArrayOutputStream();\n        DataOutputStream dataOut = new DataOutputStream(bytesOut);\n        dataOut.writeFloat(1.0f);\n        dataOut.writeFloat(2.0f);\n\n        int outPort = 9001;\n        int inPort = 9002;\n\n        DatagramSocket socket = new DatagramSocket(inPort, InetAddress.getLocalHost());\n\n        byte[] bytes = bytesOut.toByteArray();\n        DatagramPacket outboundPacket = new DatagramPacket(bytes, bytes.length, InetAddress\n                        .getLocalHost(), outPort);\n        socket.send(outboundPacket);\n        log.info(\"sent bytes: \" + Arrays.toString(outboundPacket.getData()));\n\n        byte[] buffer = new byte[bytes.length];\n        DatagramPacket inboundPacket = new DatagramPacket(buffer, buffer.length);\n        socket.receive(inboundPacket);\n\n        ByteArrayInputStream bytesIn = new ByteArrayInputStream(inboundPacket.getData());\n        log.info(\"recv bytes: \" + Arrays.toString(inboundPacket.getData()));\n\n        DataInputStream dataIn = new DataInputStream(bytesIn);\n        assertEquals(1.0f, dataIn.readFloat(), Float.POSITIVE_INFINITY);\n        assertEquals(2.0f, dataIn.readFloat(), Float.POSITIVE_INFINITY);\n        //log.info(\"float #1: \" + dataIn.readFloat());\n        //log.info(\"float #2: \" + dataIn.readFloat());\n    }","id":82510,"modified_method":"public void testSendAndReceiveUDP() throws IOException\n    {\n        int outPort = 9001;\n        int inPort = 9002;\n\n        // the socket we talk to\n        DatagramSocket socket = new DatagramSocket(inPort, InetAddress.getLocalHost());\n\n        // prepare outgoing packet\n        ByteArrayOutputStream bytesOut = new ByteArrayOutputStream();\n        DataOutputStream dataOut = new DataOutputStream(bytesOut);\n        dataOut.writeFloat(1.0f);\n        dataOut.writeFloat(2.0f);\n        byte[] bytesToSend = bytesOut.toByteArray();\n\n        DatagramPacket outboundPacket = new DatagramPacket(bytesToSend, bytesToSend.length,\n            InetAddress.getLocalHost(), outPort);\n        socket.send(outboundPacket);\n\n        // receive whatever came back\n        byte[] receiveBuffer = new byte[bytesToSend.length];\n        DatagramPacket inboundPacket = new DatagramPacket(receiveBuffer, receiveBuffer.length);\n        socket.receive(inboundPacket);\n\n        // compare byte buffers as strings so we get to see the diff\n        assertEquals(Arrays.toString(outboundPacket.getData()), Arrays.toString(inboundPacket.getData()));\n\n        // make sure the contents are really the same\n        ByteArrayInputStream bytesIn = new ByteArrayInputStream(inboundPacket.getData());\n        DataInputStream dataIn = new DataInputStream(bytesIn);\n        // the delta is only here to make JUnit happy\n        assertEquals(1.0f, dataIn.readFloat(), 0.1f);\n        assertEquals(2.0f, dataIn.readFloat(), 0.1f);\n    }","commit_id":"b8b6460932e2473e4722258f0d350177938cbc5b","url":"https://github.com/mulesoft/mule"},{"original_method":"public void testSendAndReceiveMails() throws Exception {\n        MockEndpoint resultEndpoint = getMockEndpoint(\"mock:result\");\n        resultEndpoint.expectedMinimumMessageCount(1);\n\n        Properties properties = new Properties();\n        properties.put(\"mail.smtp.host\", \"localhost\");\n        Session session = Session.getDefaultInstance(properties, null);\n\n        MimeMessage message = new MimeMessage(session);\n        populateMimeMessageBody(message);\n        message.setRecipients(Message.RecipientType.TO, \"james@localhost\");\n\n        Transport.send(message);\n\n        // lets test the receive worked\n        resultEndpoint.assertIsSatisfied();\n\n        Exchange exchange = resultEndpoint.getReceivedExchanges().get(0);\n\n        String text = exchange.getIn().getBody(String.class);\n        assertEquals(\"mail body\", body, text);\n\n        assertNotNull(\"attachments got lost\", exchange.getIn().getAttachments());\n        Iterator<String> keyIt = exchange.getIn().getAttachmentNames().iterator();\n        while (keyIt.hasNext()) {\n            DataHandler dh = exchange.getIn().getAttachment(keyIt.next());\n            log.info(\"Found attachment: \" + dh.getName());\n        }\n    }","id":82511,"modified_method":"public void testSendAndReceiveMails() throws Exception {\n        MockEndpoint resultEndpoint = getMockEndpoint(\"mock:result\");\n        resultEndpoint.expectedMinimumMessageCount(1);\n\n        Properties properties = new Properties();\n        properties.put(\"mail.smtp.host\", \"localhost\");\n        Session session = Session.getDefaultInstance(properties, null);\n\n        MimeMessage message = new MimeMessage(session);\n        populateMimeMessageBody(message);\n        message.setRecipients(Message.RecipientType.TO, \"james@localhost\");\n\n        Transport.send(message);\n\n        // lets test the receive worked\n        resultEndpoint.assertIsSatisfied();\n\n        Exchange exchange = resultEndpoint.getReceivedExchanges().get(0);\n\n        String text = exchange.getIn().getBody(String.class);\n        assertEquals(\"mail body\", body, text);\n\n        assertNotNull(\"attachments got lost\", exchange.getIn().getAttachments());\n        for (String s : exchange.getIn().getAttachmentNames()) {\n            DataHandler dh = exchange.getIn().getAttachment(s);\n            assertEquals(\"log4j.properties\", dh.getName());\n            Object content = dh.getContent();\n            assertNotNull(\"Content should not be empty\", content);\n        }\n    }","commit_id":"8075187019e3adcf44792d18921b352127eb8d1b","url":"https://github.com/apache/camel"},{"original_method":"/**\n     * Lets encode a multipart mime message\n     */\n    protected void populateMimeMessageBody(MimeMessage message) throws MessagingException {\n        MimeBodyPart plainPart = new MimeBodyPart();\n        plainPart.setText(body);\n\n        MimeBodyPart htmlPart = new MimeBodyPart();\n        htmlPart.setText(\"<html><body>\" + body + \"<\/body><\/html>\");\n\n        Multipart alt = new MimeMultipart(\"alternative\");\n        alt.addBodyPart(plainPart);\n        alt.addBodyPart(htmlPart);\n\n        Multipart mixed = new MimeMultipart(\"mixed\");\n        MimeBodyPart wrap = new MimeBodyPart();\n        wrap.setContent(alt);\n        mixed.addBodyPart(wrap);\n\n        mixed.addBodyPart(plainPart);\n        mixed.addBodyPart(htmlPart);\n\n        DataSource ds = null;\n        try {\n            File f = new File(getClass().getResource(\"/log4j.properties\").toURI());\n            ds = new FileDataSource(f);\n        } catch (URISyntaxException ex) {\n            ds = new URLDataSource(getClass().getResource(\"/log4j.properties\"));\n        }\n        DataHandler dh = new DataHandler(ds);\n\n        BodyPart attachmentBodyPart = null;\n        // Create another body part\n        attachmentBodyPart = new MimeBodyPart();\n        // Set the data handler to the attachment\n        attachmentBodyPart.setDataHandler(dh);\n        // Set the filename\n        attachmentBodyPart.setFileName(dh.getName());\n        // Set Disposition\n        attachmentBodyPart.setDisposition(Part.ATTACHMENT);\n\n        mixed.addBodyPart(plainPart);\n        mixed.addBodyPart(htmlPart);\n        // Add attachmentBodyPart to multipart\n        mixed.addBodyPart(attachmentBodyPart);\n\n        message.setContent(mixed);\n    }","id":82512,"modified_method":"/**\n     * Lets encode a multipart mime message\n     */\n    protected void populateMimeMessageBody(MimeMessage message) throws MessagingException {\n        MimeBodyPart plainPart = new MimeBodyPart();\n        plainPart.setText(body);\n\n        MimeBodyPart htmlPart = new MimeBodyPart();\n        htmlPart.setText(\"<html><body>\" + body + \"<\/body><\/html>\");\n\n        Multipart alt = new MimeMultipart(\"alternative\");\n        alt.addBodyPart(plainPart);\n        alt.addBodyPart(htmlPart);\n\n        Multipart mixed = new MimeMultipart(\"mixed\");\n        MimeBodyPart wrap = new MimeBodyPart();\n        wrap.setContent(alt);\n        mixed.addBodyPart(wrap);\n\n        mixed.addBodyPart(plainPart);\n        mixed.addBodyPart(htmlPart);\n\n        DataSource ds;\n        try {\n            File f = new File(getClass().getResource(\"/log4j.properties\").toURI());\n            ds = new FileDataSource(f);\n        } catch (URISyntaxException ex) {\n            ds = new URLDataSource(getClass().getResource(\"/log4j.properties\"));\n        }\n        DataHandler dh = new DataHandler(ds);\n\n        BodyPart attachmentBodyPart;\n        // Create another body part\n        attachmentBodyPart = new MimeBodyPart();\n        // Set the data handler to the attachment\n        attachmentBodyPart.setDataHandler(dh);\n        // Set the filename\n        attachmentBodyPart.setFileName(dh.getName());\n        // Set Disposition\n        attachmentBodyPart.setDisposition(Part.ATTACHMENT);\n\n        mixed.addBodyPart(plainPart);\n        mixed.addBodyPart(htmlPart);\n        // Add attachmentBodyPart to multipart\n        mixed.addBodyPart(attachmentBodyPart);\n\n        message.setContent(mixed);\n    }","commit_id":"8075187019e3adcf44792d18921b352127eb8d1b","url":"https://github.com/apache/camel"},{"original_method":"private void doRun(ProgressIndicator progress) {\n    PersistenceRegistry.getInstance().disableFastFindUsages();\n\n    Map<String, Object> options = InitialStep.getOptions();\n\n    // project steps are considered to be X percent of the whole process \n    double projectStepsFraction = 0.3;\n\n    int projectStepsCount = myManager.projectStepsCount();\n    setFraction(progress, 0);\n\n    addElementToMigrationList(\"Cleaning project... Please wait.\");\n    while (executeSingleStep(myManager.nextProjectStep(options, true))) {\n      setFraction(progress, progress.getFraction() + projectStepsFraction / projectStepsCount);\n    }\n\n    addElementToMigrationList(\"Checking models... Please wait.\");\n    final Wrappers._boolean preProblems = new Wrappers._boolean();\n    ModelAccess.instance().runReadAction(new Runnable() {\n      public void run() {\n        Iterable<SModule> modules = ((Iterable<SModule>) ProjectHelper.toMPSProject(myProject).getModulesWithGenerators());\n        Iterable<SNode> problems = MigrationCheckUtil.getProblemNodes(modules);\n        preProblems.value = Sequence.fromIterable(problems).isNotEmpty();\n      }\n    });\n\n    final Wrappers._boolean postProblems = new Wrappers._boolean(false);\n    if (!(preProblems.value)) {\n      while (executeSingleStep(myManager.nextProjectStep(options, false))) {\n        setFraction(progress, progress.getFraction() + projectStepsFraction / projectStepsCount);\n      }\n      setFraction(progress, projectStepsFraction);\n\n      int languageStepsCount = myManager.languageStepsCount();\n      while (executeSingleStep(myManager.nextLanguageStep())) {\n        setFraction(progress, progress.getFraction() + (1.0 - projectStepsFraction) / languageStepsCount);\n      }\n      setFraction(progress, 1.0);\n\n      addElementToMigrationList(\"Saving changed models... Please wait.\");\n      ModelAccess.instance().runWriteInEDT(new Runnable() {\n        public void run() {\n          MPSModuleRepository.getInstance().saveAll();\n        }\n      });\n\n      addElementToMigrationList(\"Checking models... Please wait.\");\n      ModelAccess.instance().runReadAction(new Runnable() {\n        public void run() {\n          Iterable<SModule> modules = ((Iterable<SModule>) ProjectHelper.toMPSProject(myProject).getModulesWithGenerators());\n          Iterable<SNode> problems = MigrationCheckUtil.getProblemNodes(modules);\n          postProblems.value = Sequence.fromIterable(problems).isNotEmpty();\n        }\n      });\n    }\n\n    myFinishedState = new MigrationsProgressStep.FinishedState(preProblems.value, myNoErrors && !(myManager.isMigrationRequired()), postProblems.value);\n\n    addElementToMigrationList((myFinishedState.isEverythingOk() ? \"Done!\" : \"Finished with errors. Click 'Next' to continue.\"));\n\n    PersistenceRegistry.getInstance().enableFastFindUsages();\n  }","id":82513,"modified_method":"private void doRun(ProgressIndicator progress) {\n    PersistenceRegistry.getInstance().disableFastFindUsages();\n\n    Map<String, Object> options = InitialStep.getOptions();\n\n    // project steps are considered to be X percent of the whole process \n    double projectStepsFraction = 0.3;\n\n    int projectStepsCount = myManager.projectStepsCount();\n    setFraction(progress, 0);\n\n    boolean cleanNotification = false;\n    while (executeSingleStep(myManager.nextProjectStep(options, true))) {\n      if (!(cleanNotification)) {\n        cleanNotification = true;\n        addElementToMigrationList(\"Cleaning project... Please wait.\");\n      }\n      setFraction(progress, progress.getFraction() + projectStepsFraction / projectStepsCount);\n    }\n\n    addElementToMigrationList(\"Checking models... Please wait.\");\n    final Wrappers._boolean preProblems = new Wrappers._boolean();\n    ModelAccess.instance().runReadAction(new Runnable() {\n      public void run() {\n        Iterable<SModule> modules = ((Iterable<SModule>) ProjectHelper.toMPSProject(myProject).getModulesWithGenerators());\n        Iterable<SNode> problems = MigrationCheckUtil.getProblemNodes(modules);\n        preProblems.value = Sequence.fromIterable(problems).isNotEmpty();\n      }\n    });\n\n    final Wrappers._boolean postProblems = new Wrappers._boolean(false);\n    if (!(preProblems.value)) {\n      while (executeSingleStep(myManager.nextProjectStep(options, false))) {\n        setFraction(progress, progress.getFraction() + projectStepsFraction / projectStepsCount);\n      }\n      setFraction(progress, projectStepsFraction);\n\n      int languageStepsCount = myManager.languageStepsCount();\n      while (executeSingleStep(myManager.nextLanguageStep())) {\n        setFraction(progress, progress.getFraction() + (1.0 - projectStepsFraction) / languageStepsCount);\n      }\n      setFraction(progress, 1.0);\n\n      addElementToMigrationList(\"Saving changed models... Please wait.\");\n      ModelAccess.instance().runWriteInEDT(new Runnable() {\n        public void run() {\n          MPSModuleRepository.getInstance().saveAll();\n        }\n      });\n\n      addElementToMigrationList(\"Checking models... Please wait.\");\n      ModelAccess.instance().runReadAction(new Runnable() {\n        public void run() {\n          Iterable<SModule> modules = ((Iterable<SModule>) ProjectHelper.toMPSProject(myProject).getModulesWithGenerators());\n          Iterable<SNode> problems = MigrationCheckUtil.getProblemNodes(modules);\n          postProblems.value = Sequence.fromIterable(problems).isNotEmpty();\n        }\n      });\n    }\n\n    myFinishedState = new MigrationsProgressStep.FinishedState(preProblems.value, myNoErrors && !(myManager.isMigrationRequired()), postProblems.value);\n\n    addElementToMigrationList((myFinishedState.isEverythingOk() ? \"Done!\" : \"Finished with errors. Click 'Next' to continue.\"));\n\n    PersistenceRegistry.getInstance().enableFastFindUsages();\n  }","commit_id":"49e3904f24c5ebea5ce8bbc810e9a4a26f530101","url":"https://github.com/JetBrains/MPS"},{"original_method":"protected _FunctionTypes._void_P0_E0 afterProjectInitialized() {\n    return new _FunctionTypes._void_P0_E0() {\n      public void invoke() {\n        // show nodes with no language defined for them \n        jetbrains.mps.project.Project mpsProject = ProjectHelper.toMPSProject(myProject);\n        Iterable<SModule> modules = ((Iterable<SModule>) mpsProject.getModulesWithGenerators());\n        Iterable<SNode> problems = MigrationCheckUtil.getProblemNodes(modules);\n        List<SearchResult<jetbrains.mps.smodel.SNode>> results = Sequence.fromIterable(problems).select(new ISelector<SNode, SearchResult<jetbrains.mps.smodel.SNode>>() {\n          public SearchResult<jetbrains.mps.smodel.SNode> select(SNode it) {\n            return new SearchResult<jetbrains.mps.smodel.SNode>(((jetbrains.mps.smodel.SNode) it), \"Language not found\");\n          }\n        }).toListSequence();\n        myProject.getComponent(UsagesViewTool.class).show(new SearchResults<jetbrains.mps.smodel.SNode>(Collections.<jetbrains.mps.smodel.SNode>emptySet(), results), \"\");\n      }\n    };\n  }","id":82514,"modified_method":"protected _FunctionTypes._void_P0_E0 afterProjectInitialized() {\n    return MigrationCheckUtil.getShowUsagesCallback(myProject);\n  }","commit_id":"9162b1ead3072eb9b86ff5fd4b733a3c883e51e9","url":"https://github.com/JetBrains/MPS"},{"original_method":"protected _FunctionTypes._void_P0_E0 afterProjectInitialized() {\n    return new _FunctionTypes._void_P0_E0() {\n      public void invoke() {\n        // show nodes with no language defined for them \n\n      }\n    };\n  }","id":82515,"modified_method":"protected _FunctionTypes._void_P0_E0 afterProjectInitialized() {\n    return MigrationCheckUtil.getShowUsagesCallback(myProject);\n  }","commit_id":"9162b1ead3072eb9b86ff5fd4b733a3c883e51e9","url":"https://github.com/JetBrains/MPS"},{"original_method":"private void doRun(ProgressIndicator progress) {\n    PersistenceRegistry.getInstance().disableFastFindUsages();\n\n    // project steps are considered to be X percent of the whole process \n    double projectStepsFraction = 0.3;\n\n    int projectStepsCount = myManager.projectStepsCount();\n    int languageStepsCount = myManager.languageStepsCount();\n    progress.setFraction(0);\n\n    while (executeSingleStep(myManager.nextProjectStep())) {\n      progress.setFraction(progress.getFraction() + projectStepsFraction / projectStepsCount);\n    }\n    progress.setFraction(projectStepsFraction);\n\n    while (executeSingleStep(myManager.nextLanguageStep())) {\n      progress.setFraction(progress.getFraction() + (1.0 - projectStepsFraction) / languageStepsCount);\n    }\n    progress.setFraction(1.0);\n\n    addElementToMigrationList(\"Saving changed models... Please wait.\");\n    ModelAccess.instance().runWriteInEDT(new Runnable() {\n      public void run() {\n        MPSModuleRepository.getInstance().saveAll();\n      }\n    });\n\n    addElementToMigrationList(\"Checking models... Please wait.\");\n    final Wrappers._boolean postProblems = new Wrappers._boolean();\n    ModelAccess.instance().runReadAction(new Runnable() {\n      public void run() {\n        Iterable<SModule> modules = ((Iterable<SModule>) ProjectHelper.toMPSProject(myProject).getModulesWithGenerators());\n        Iterable<SNode> problems = MigrationCheckUtil.getProblemNodes(modules);\n        postProblems.value = Sequence.fromIterable(problems).isNotEmpty();\n      }\n    });\n    myFinishedState = new MigrationsProgressStep.FinishedState(false, myNoErrors && !(myManager.isMigrationRequired()), postProblems.value);\n    addElementToMigrationList((myFinishedState.isEverythingOk() ? \"Done!\" : \"Finished with errors. Click 'Next' to continue.\"));\n\n    PersistenceRegistry.getInstance().enableFastFindUsages();\n  }","id":82516,"modified_method":"private void doRun(ProgressIndicator progress) {\n    PersistenceRegistry.getInstance().disableFastFindUsages();\n\n    // project steps are considered to be X percent of the whole process \n    double projectStepsFraction = 0.3;\n\n    int projectStepsCount = myManager.projectStepsCount();\n    int languageStepsCount = myManager.languageStepsCount();\n    progress.setFraction(0);\n\n    addElementToMigrationList(\"Checking models... Please wait.\");\n    final Wrappers._boolean preProblems = new Wrappers._boolean();\n    ModelAccess.instance().runReadAction(new Runnable() {\n      public void run() {\n        Iterable<SModule> modules = ((Iterable<SModule>) ProjectHelper.toMPSProject(myProject).getModulesWithGenerators());\n        Iterable<SNode> problems = MigrationCheckUtil.getProblemNodes(modules);\n        preProblems.value = Sequence.fromIterable(problems).isNotEmpty();\n      }\n    });\n\n    final Wrappers._boolean postProblems = new Wrappers._boolean(false);\n    if (!(preProblems.value)) {\n      while (executeSingleStep(myManager.nextProjectStep())) {\n        progress.setFraction(progress.getFraction() + projectStepsFraction / projectStepsCount);\n      }\n      progress.setFraction(projectStepsFraction);\n\n      while (executeSingleStep(myManager.nextLanguageStep())) {\n        progress.setFraction(progress.getFraction() + (1.0 - projectStepsFraction) / languageStepsCount);\n      }\n      progress.setFraction(1.0);\n\n      addElementToMigrationList(\"Saving changed models... Please wait.\");\n      ModelAccess.instance().runWriteInEDT(new Runnable() {\n        public void run() {\n          MPSModuleRepository.getInstance().saveAll();\n        }\n      });\n\n      addElementToMigrationList(\"Checking models... Please wait.\");\n      ModelAccess.instance().runReadAction(new Runnable() {\n        public void run() {\n          Iterable<SModule> modules = ((Iterable<SModule>) ProjectHelper.toMPSProject(myProject).getModulesWithGenerators());\n          Iterable<SNode> problems = MigrationCheckUtil.getProblemNodes(modules);\n          postProblems.value = Sequence.fromIterable(problems).isNotEmpty();\n        }\n      });\n    }\n\n    myFinishedState = new MigrationsProgressStep.FinishedState(preProblems.value, myNoErrors && !(myManager.isMigrationRequired()), postProblems.value);\n\n    addElementToMigrationList((myFinishedState.isEverythingOk() ? \"Done!\" : \"Finished with errors. Click 'Next' to continue.\"));\n\n    PersistenceRegistry.getInstance().enableFastFindUsages();\n  }","commit_id":"9162b1ead3072eb9b86ff5fd4b733a3c883e51e9","url":"https://github.com/JetBrains/MPS"},{"original_method":"public DefaultCommandService(WorkingMemory workingMemory) {\r\n\t\tthis.workingMemory = workingMemory;\r\n\t}","id":82517,"modified_method":"public DefaultCommandService(StatefulSession session) {\r\n\t\tthis.session = session;\r\n\t}","commit_id":"139b6bcc179d83768b97f0bdfc060c8231ac6ac8","url":"https://github.com/droolsjbpm/drools"},{"original_method":"public <T> T execute(Command<T> command) {\r\n\t\treturn command.execute(workingMemory);\r\n\t}","id":82518,"modified_method":"public <T> T execute(Command<T> command) {\r\n\t\treturn command.execute(session);\r\n\t}","commit_id":"139b6bcc179d83768b97f0bdfc060c8231ac6ac8","url":"https://github.com/droolsjbpm/drools"},{"original_method":"public DefaultWorkItemManager(WorkingMemory workingMemory) {\r\n\t    this.workingMemory = workingMemory;\r\n\t}","id":82519,"modified_method":"public DefaultWorkItemManager(InternalKnowledgeRuntime kruntime) {\r\n\t    this.kruntime = kruntime;\r\n\t}","commit_id":"4dfabc4a42cbf5b8eac636dfe1e8ab9e1a696032","url":"https://github.com/droolsjbpm/drools"},{"original_method":"public void completeWorkItem(long id, Map<String, Object> results) {\r\n        WorkItem workItem = (WorkItem) workItems.get(new Long(id));\r\n        // work item may have been aborted\r\n        if (workItem != null) {\r\n            ((org.drools.process.instance.WorkItem) workItem).setResults(results);\r\n            ProcessInstance processInstance = ( ProcessInstance ) workingMemory.getProcessInstance(workItem.getProcessInstanceId());\r\n            ((org.drools.process.instance.WorkItem) workItem).setState(WorkItem.COMPLETED);\r\n            // process instance may have finished already\r\n            if (processInstance != null) {\r\n                processInstance.signalEvent(\"workItemCompleted\", workItem);\r\n            }\r\n            workItems.remove(new Long(id));\r\n            workingMemory.fireAllRules();\r\n        }\r\n    }","id":82520,"modified_method":"public void completeWorkItem(long id, Map<String, Object> results) {\r\n        WorkItem workItem = (WorkItem) workItems.get(new Long(id));\r\n        // work item may have been aborted\r\n        if (workItem != null) {\r\n            ((org.drools.process.instance.WorkItem) workItem).setResults(results);\r\n            ProcessInstance processInstance = kruntime.getProcessInstance(workItem.getProcessInstanceId());\r\n            ((org.drools.process.instance.WorkItem) workItem).setState(WorkItem.COMPLETED);\r\n            // process instance may have finished already\r\n            if (processInstance != null) {\r\n                processInstance.signalEvent(\"workItemCompleted\", workItem);\r\n            }\r\n            workItems.remove(new Long(id));\r\n        }\r\n    }","commit_id":"4dfabc4a42cbf5b8eac636dfe1e8ab9e1a696032","url":"https://github.com/droolsjbpm/drools"},{"original_method":"@SuppressWarnings(\"unchecked\")\r\n\tpublic void readExternal(ObjectInput in) throws IOException, ClassNotFoundException {\r\n        workItemCounter = in.readLong();\r\n        workItems = (Map<Long, WorkItem>)in.readObject();\r\n        workingMemory = (WorkingMemory)in.readObject();\r\n        workItemHandlers = (Map<String, WorkItemHandler>) in.readObject();\r\n    }","id":82521,"modified_method":"@SuppressWarnings(\"unchecked\")\r\n\tpublic void readExternal(ObjectInput in) throws IOException, ClassNotFoundException {\r\n        workItemCounter = in.readLong();\r\n        workItems = (Map<Long, WorkItem>) in.readObject();\r\n        kruntime = (InternalKnowledgeRuntime) in.readObject();\r\n        workItemHandlers = (Map<String, WorkItemHandler>) in.readObject();\r\n    }","commit_id":"4dfabc4a42cbf5b8eac636dfe1e8ab9e1a696032","url":"https://github.com/droolsjbpm/drools"},{"original_method":"public void writeExternal(ObjectOutput out) throws IOException {\r\n        out.writeLong(workItemCounter);\r\n        out.writeObject(workItems);\r\n        out.writeObject(workingMemory);\r\n        out.writeObject(workItemHandlers);\r\n    }","id":82522,"modified_method":"public void writeExternal(ObjectOutput out) throws IOException {\r\n        out.writeLong(workItemCounter);\r\n        out.writeObject(workItems);\r\n        out.writeObject(kruntime);\r\n        out.writeObject(workItemHandlers);\r\n    }","commit_id":"4dfabc4a42cbf5b8eac636dfe1e8ab9e1a696032","url":"https://github.com/droolsjbpm/drools"},{"original_method":"public void abortWorkItem(long id) {\r\n        WorkItemImpl workItem = (WorkItemImpl) workItems.get(new Long(id));\r\n        // work item may have been aborted\r\n        if (workItem != null) {\r\n            ProcessInstance processInstance = ( ProcessInstance ) workingMemory.getProcessInstance(workItem.getProcessInstanceId());\r\n            workItem.setState(WorkItem.ABORTED);\r\n            // process instance may have finished already\r\n            if (processInstance != null) {\r\n                processInstance.signalEvent(\"workItemAborted\", workItem);\r\n            }\r\n            workItems.remove(new Long(id));\r\n            workingMemory.fireAllRules();\r\n        }\r\n    }","id":82523,"modified_method":"public void abortWorkItem(long id) {\r\n        WorkItemImpl workItem = (WorkItemImpl) workItems.get(new Long(id));\r\n        // work item may have been aborted\r\n        if (workItem != null) {\r\n            ProcessInstance processInstance = kruntime.getProcessInstance(workItem.getProcessInstanceId());\r\n            workItem.setState(WorkItem.ABORTED);\r\n            // process instance may have finished already\r\n            if (processInstance != null) {\r\n                processInstance.signalEvent(\"workItemAborted\", workItem);\r\n            }\r\n            workItems.remove(new Long(id));\r\n        }\r\n    }","commit_id":"4dfabc4a42cbf5b8eac636dfe1e8ab9e1a696032","url":"https://github.com/droolsjbpm/drools"},{"original_method":"public boolean mustRefreshMissingArtifact(long ageMillis) {\n        CachedArtifactResolutionControl artifactResolutionControl = new CachedArtifactResolutionControl(null, ageMillis);\n\n        List<Action<? super ArtifactResolutionControl>> rules = new ArrayList<Action<? super ArtifactResolutionControl>>(artifactCacheRules);\n        rules.add(defaultArtifactCacheRule);\n        for (Action<? super ArtifactResolutionControl> rule : rules) {\n            rule.execute(artifactResolutionControl);\n            if (artifactResolutionControl.ruleMatch()) {\n                return artifactResolutionControl.mustCheck();\n            }\n        }\n\n        return false;\n    }","id":82524,"modified_method":"public boolean mustRefreshMissingArtifact(long ageMillis) {\n        CachedArtifactResolutionControl artifactResolutionControl = new CachedArtifactResolutionControl(null, ageMillis);\n\n        for (Action<? super ArtifactResolutionControl> rule : artifactCacheRules) {\n            rule.execute(artifactResolutionControl);\n            if (artifactResolutionControl.ruleMatch()) {\n                return artifactResolutionControl.mustCheck();\n            }\n        }\n\n        return false;\n    }","commit_id":"4f96d35de2c6ad9c6f3557a571d113437ca5fce3","url":"https://github.com/gradle/gradle"},{"original_method":"private boolean mustRefreshModule(final ResolvedModuleVersion version, final long ageMillis, final boolean changingModule) {\n        CachedModuleResolutionControl moduleResolutionControl = new CachedModuleResolutionControl(version, changingModule, ageMillis);\n\n        List<Action<? super ModuleResolutionControl>> rules = new ArrayList<Action<? super ModuleResolutionControl>>(moduleCacheRules);\n        rules.add(defaultModuleCacheRule);\n        for (Action<? super ModuleResolutionControl> rule : rules) {\n            rule.execute(moduleResolutionControl);\n            if (moduleResolutionControl.ruleMatch()) {\n                return moduleResolutionControl.mustCheck();\n            }\n        }\n\n        return false;\n    }","id":82525,"modified_method":"private boolean mustRefreshModule(final ResolvedModuleVersion version, final long ageMillis, final boolean changingModule) {\n        CachedModuleResolutionControl moduleResolutionControl = new CachedModuleResolutionControl(version, changingModule, ageMillis);\n\n        for (Action<? super ModuleResolutionControl> rule : moduleCacheRules) {\n            rule.execute(moduleResolutionControl);\n            if (moduleResolutionControl.ruleMatch()) {\n                return moduleResolutionControl.mustCheck();\n            }\n        }\n\n        return false;\n    }","commit_id":"4f96d35de2c6ad9c6f3557a571d113437ca5fce3","url":"https://github.com/gradle/gradle"},{"original_method":"public void eachDependency(Action<? super DependencyResolutionControl> action) {\n        dependencyCacheRules.add(action);\n    }","id":82526,"modified_method":"public void eachDependency(Action<? super DependencyResolutionControl> action) {\n        dependencyCacheRules.add(0, action);\n    }","commit_id":"4f96d35de2c6ad9c6f3557a571d113437ca5fce3","url":"https://github.com/gradle/gradle"},{"original_method":"public DefaultCachePolicy() {\n        defaultDependencyCacheRule = new Action<DependencyResolutionControl>() {\n            public void execute(DependencyResolutionControl dependencyResolutionControl) {\n                dependencyResolutionControl.cacheFor(SECONDS_IN_DAY, TimeUnit.SECONDS);\n            }\n        };\n        defaultModuleCacheRule = new Action<ModuleResolutionControl>() {\n            public void execute(ModuleResolutionControl moduleResolutionControl) {\n                if (moduleResolutionControl.isChanging()) {\n                    moduleResolutionControl.cacheFor(SECONDS_IN_DAY, TimeUnit.SECONDS);\n                }\n            }\n        };\n        defaultArtifactCacheRule = new Action<ArtifactResolutionControl>() {\n            public void execute(ArtifactResolutionControl artifactResolutionControl) {\n                if (artifactResolutionControl.getCachedResult() == null) {\n                    artifactResolutionControl.cacheFor(SECONDS_IN_DAY, TimeUnit.SECONDS);\n                }\n            }\n        };\n    }","id":82527,"modified_method":"public DefaultCachePolicy() {\n        eachDependency(new Action<DependencyResolutionControl>() {\n            public void execute(DependencyResolutionControl dependencyResolutionControl) {\n                dependencyResolutionControl.cacheFor(SECONDS_IN_DAY, TimeUnit.SECONDS);\n            }\n        });\n        eachModule(new Action<ModuleResolutionControl>() {\n            public void execute(ModuleResolutionControl moduleResolutionControl) {\n                if (moduleResolutionControl.isChanging()) {\n                    moduleResolutionControl.cacheFor(SECONDS_IN_DAY, TimeUnit.SECONDS);\n                }\n            }\n        });\n        eachArtifact(new Action<ArtifactResolutionControl>() {\n            public void execute(ArtifactResolutionControl artifactResolutionControl) {\n                if (artifactResolutionControl.getCachedResult() == null) {\n                    artifactResolutionControl.cacheFor(SECONDS_IN_DAY, TimeUnit.SECONDS);\n                }\n            }\n        });\n    }","commit_id":"4f96d35de2c6ad9c6f3557a571d113437ca5fce3","url":"https://github.com/gradle/gradle"},{"original_method":"public void eachArtifact(Action<? super ArtifactResolutionControl> action) {\n        artifactCacheRules.add(action);\n    }","id":82528,"modified_method":"public void eachArtifact(Action<? super ArtifactResolutionControl> action) {\n        artifactCacheRules.add(0, action);\n    }","commit_id":"4f96d35de2c6ad9c6f3557a571d113437ca5fce3","url":"https://github.com/gradle/gradle"},{"original_method":"public boolean mustRefreshDynamicVersion(final ResolvedModuleVersion version, final long ageMillis) {\n        CachedDependencyResolutionControl dependencyResolutionControl = new CachedDependencyResolutionControl(version, ageMillis);\n\n        List<Action<? super DependencyResolutionControl>> rules = new ArrayList<Action<? super DependencyResolutionControl>>(dependencyCacheRules);\n        rules.add(defaultDependencyCacheRule);\n        for (Action<? super DependencyResolutionControl> rule : rules) {\n            rule.execute(dependencyResolutionControl);\n            if (dependencyResolutionControl.ruleMatch()) {\n                return dependencyResolutionControl.mustCheck();\n            }\n        }\n        \n        return false;\n    }","id":82529,"modified_method":"public boolean mustRefreshDynamicVersion(final ResolvedModuleVersion version, final long ageMillis) {\n        CachedDependencyResolutionControl dependencyResolutionControl = new CachedDependencyResolutionControl(version, ageMillis);\n\n        for (Action<? super DependencyResolutionControl> rule : dependencyCacheRules) {\n            rule.execute(dependencyResolutionControl);\n            if (dependencyResolutionControl.ruleMatch()) {\n                return dependencyResolutionControl.mustCheck();\n            }\n        }\n        \n        return false;\n    }","commit_id":"4f96d35de2c6ad9c6f3557a571d113437ca5fce3","url":"https://github.com/gradle/gradle"},{"original_method":"public void cacheDynamicVersionsFor(final int value, final TimeUnit unit) {\n        dependencyCacheRules.add(new Action<DependencyResolutionControl>() {\n            public void execute(DependencyResolutionControl dependencyResolutionControl) {\n                dependencyResolutionControl.cacheFor(value, unit);\n            }\n        });\n    }","id":82530,"modified_method":"public void cacheDynamicVersionsFor(final int value, final TimeUnit unit) {\n        eachDependency(new Action<DependencyResolutionControl>() {\n            public void execute(DependencyResolutionControl dependencyResolutionControl) {\n                dependencyResolutionControl.cacheFor(value, unit);\n            }\n        });\n    }","commit_id":"4f96d35de2c6ad9c6f3557a571d113437ca5fce3","url":"https://github.com/gradle/gradle"},{"original_method":"public void eachModule(Action<? super ModuleResolutionControl> action) {\n        moduleCacheRules.add(action);\n    }","id":82531,"modified_method":"public void eachModule(Action<? super ModuleResolutionControl> action) {\n        moduleCacheRules.add(0, action);\n    }","commit_id":"4f96d35de2c6ad9c6f3557a571d113437ca5fce3","url":"https://github.com/gradle/gradle"},{"original_method":"public IvyAdapter create(ConfigurationInternal configuration) {\n        UserResolverChain userResolverChain = new UserResolverChain();\n        CachePolicy cachePolicy = configuration.getResolutionStrategy().getCachePolicy();\n        cachePolicy = resolveModeOverride.overrideCachePolicy(cachePolicy);\n\n        LoopbackDependencyResolver loopbackDependencyResolver = new LoopbackDependencyResolver(SettingsConverter.LOOPBACK_RESOLVER_NAME, userResolverChain, cacheLockingManager);\n        List<DependencyResolver> rawResolvers = resolverProvider.getResolvers();\n\n        // Unfortunately, WharfResolverMetadata requires the resolver to have settings to calculate an id.\n        // We then need to set the ivySettings on the delegating resolver as well\n        IvySettings ivySettings = settingsConverter.convertForResolve(loopbackDependencyResolver, rawResolvers);\n        Ivy ivy = ivyFactory.createIvy(ivySettings);\n        ResolveData resolveData = createResolveData(ivy, configuration.getName());\n\n        IvyContextualiser contextualiser = new IvyContextualiser(ivy, resolveData);\n        for (DependencyResolver rawResolver : rawResolvers) {\n            String resolverId = new WharfResolverMetadata(rawResolver).getId();\n\n            CacheLockingDependencyResolver cacheLockingResolver = new CacheLockingDependencyResolver(rawResolver, cacheLockingManager);\n            cacheLockingResolver.setSettings(ivySettings);\n\n            ModuleVersionRepository moduleVersionRepository = new DependencyResolverAdapter(resolverId, cacheLockingResolver);\n            moduleVersionRepository = resolveModeOverride.overrideModuleVersionRepository(moduleVersionRepository);\n            ModuleVersionRepository cachingRepository =\n                    new CachingModuleVersionRepository(moduleVersionRepository, moduleResolutionCache, moduleDescriptorCache, artifactResolutionCache, cachePolicy);\n            // Need to contextualise outside of caching, since parsing of module descriptors in the cache requires ivy settings, which is provided via the context atm\n            ModuleVersionRepository ivyContextualisedRepository = contextualiser.contextualise(ModuleVersionRepository.class, cachingRepository);\n            userResolverChain.add(ivyContextualisedRepository);\n        }\n\n        return new DefaultIvyAdapter(resolveData, userResolverChain);\n    }","id":82532,"modified_method":"public IvyAdapter create(ConfigurationInternal configuration) {\n        UserResolverChain userResolverChain = new UserResolverChain();\n        ResolutionRules resolutionRules = configuration.getResolutionStrategy().getResolutionRules();\n        resolveModeOverride.overrideCachePolicy(resolutionRules);\n\n        LoopbackDependencyResolver loopbackDependencyResolver = new LoopbackDependencyResolver(SettingsConverter.LOOPBACK_RESOLVER_NAME, userResolverChain, cacheLockingManager);\n        List<DependencyResolver> rawResolvers = resolverProvider.getResolvers();\n\n        // Unfortunately, WharfResolverMetadata requires the resolver to have settings to calculate an id.\n        // We then need to set the ivySettings on the delegating resolver as well\n        IvySettings ivySettings = settingsConverter.convertForResolve(loopbackDependencyResolver, rawResolvers);\n        Ivy ivy = ivyFactory.createIvy(ivySettings);\n        ResolveData resolveData = createResolveData(ivy, configuration.getName());\n\n        IvyContextualiser contextualiser = new IvyContextualiser(ivy, resolveData);\n        for (DependencyResolver rawResolver : rawResolvers) {\n            String resolverId = new WharfResolverMetadata(rawResolver).getId();\n\n            CacheLockingDependencyResolver cacheLockingResolver = new CacheLockingDependencyResolver(rawResolver, cacheLockingManager);\n            cacheLockingResolver.setSettings(ivySettings);\n\n            ModuleVersionRepository moduleVersionRepository = new DependencyResolverAdapter(resolverId, cacheLockingResolver);\n            moduleVersionRepository = resolveModeOverride.overrideModuleVersionRepository(moduleVersionRepository);\n            ModuleVersionRepository cachingRepository =\n                    new CachingModuleVersionRepository(moduleVersionRepository, moduleResolutionCache, moduleDescriptorCache, artifactResolutionCache,\n                                                       configuration.getResolutionStrategy().getCachePolicy());\n            // Need to contextualise outside of caching, since parsing of module descriptors in the cache requires ivy settings, which is provided via the context atm\n            ModuleVersionRepository ivyContextualisedRepository = contextualiser.contextualise(ModuleVersionRepository.class, cachingRepository);\n            userResolverChain.add(ivyContextualisedRepository);\n        }\n\n        return new DefaultIvyAdapter(resolveData, userResolverChain);\n    }","commit_id":"4f96d35de2c6ad9c6f3557a571d113437ca5fce3","url":"https://github.com/gradle/gradle"},{"original_method":"public ResolveModeOverride(ResolveMode resolveMode) {\n        this.resolveMode = resolveMode;\n        this.overridePolicy = createOverridePolicy(resolveMode);\n    }","id":82533,"modified_method":"public ResolveModeOverride(ResolveMode resolveMode) {\n        this.resolveMode = resolveMode;\n    }","commit_id":"4f96d35de2c6ad9c6f3557a571d113437ca5fce3","url":"https://github.com/gradle/gradle"},{"original_method":"private CachePolicy createOverridePolicy(ResolveMode resolveMode) {\n        switch (resolveMode) {\n            case FORCE:\n                return new ForceResolveCachePolicy(true);\n            case OFFLINE:\n                return new ForceResolveCachePolicy(false);\n            default:\n                return null;\n        }\n    }","id":82534,"modified_method":"public void overrideCachePolicy(ResolutionRules resolutionRules) {\n        if (resolveMode == ResolveMode.OFFLINE) {\n            resolutionRules.eachDependency(new Action<DependencyResolutionControl>() {\n                public void execute(DependencyResolutionControl dependencyResolutionControl) {\n                    dependencyResolutionControl.useCachedResult();\n                }\n            });\n            resolutionRules.eachModule(new Action<ModuleResolutionControl>() {\n                public void execute(ModuleResolutionControl moduleResolutionControl) {\n                    moduleResolutionControl.useCachedResult();\n                }\n            });\n            resolutionRules.eachArtifact(new Action<ArtifactResolutionControl>() {\n                public void execute(ArtifactResolutionControl artifactResolutionControl) {\n                    artifactResolutionControl.useCachedResult();\n                }\n            });\n        } else if (resolveMode == ResolveMode.FORCE) {\n            resolutionRules.eachDependency(new Action<DependencyResolutionControl>() {\n                public void execute(DependencyResolutionControl dependencyResolutionControl) {\n                    dependencyResolutionControl.invalidate();\n                }\n            });\n            resolutionRules.eachModule(new Action<ModuleResolutionControl>() {\n                public void execute(ModuleResolutionControl moduleResolutionControl) {\n                    moduleResolutionControl.invalidate();\n                }\n            });\n            resolutionRules.eachArtifact(new Action<ArtifactResolutionControl>() {\n                public void execute(ArtifactResolutionControl ArtifactResolutionControl) {\n                    ArtifactResolutionControl.invalidate();\n                }\n            });\n        }\n    }","commit_id":"4f96d35de2c6ad9c6f3557a571d113437ca5fce3","url":"https://github.com/gradle/gradle"},{"original_method":"public CachedModuleLookup lookupModuleInCache(ModuleVersionRepository repository, DependencyDescriptor resolvedDependencyDescriptor) {\n        ModuleRevisionId resolvedModuleVersionId = resolvedDependencyDescriptor.getDependencyRevisionId();\n        ModuleVersionIdentifier moduleVersionIdentifier = createModuleVersionIdentifier(resolvedModuleVersionId);\n        ModuleDescriptorCache.CachedModuleDescriptor cachedModuleDescriptor = moduleDescriptorCache.getCachedModuleDescriptor(repository, resolvedModuleVersionId);\n        if (cachedModuleDescriptor == null) {\n            return notFound();\n        }\n        if (cachedModuleDescriptor.isMissing()) {\n            if (cachePolicy.mustRefreshModule(moduleVersionIdentifier, null, resolvedModuleVersionId, cachedModuleDescriptor.getAgeMillis())) {\n                LOGGER.debug(\"Cached meta-data for missing module is expired: will perform fresh resolve of '{}' in '{}'\", resolvedModuleVersionId, repository.getName());\n                return notFound();\n            }\n            LOGGER.debug(\"Detected non-existence of module '{}' in resolver cache '{}'\", resolvedModuleVersionId, repository.getName());\n            return found(null);\n        }\n        if (cachedModuleDescriptor.isChangingModule() || resolvedDependencyDescriptor.isChanging()) {\n            if (cachePolicy.mustRefreshChangingModule(moduleVersionIdentifier, cachedModuleDescriptor.getModuleVersion(), cachedModuleDescriptor.getAgeMillis())) {\n                expireArtifactsForChangingModule(repository, cachedModuleDescriptor.getModuleDescriptor());\n                LOGGER.debug(\"Cached meta-data for changing module is expired: will perform fresh resolve of '{}' in '{}'\", resolvedModuleVersionId, repository.getName());\n                return notFound();\n            }\n            LOGGER.debug(\"Found cached version of changing module '{}' in '{}'\", resolvedModuleVersionId, repository.getName());\n        } else {\n            if (cachePolicy.mustRefreshModule(moduleVersionIdentifier, cachedModuleDescriptor.getModuleVersion(), null, cachedModuleDescriptor.getAgeMillis())) {\n                LOGGER.debug(\"Cached meta-data for module must be refreshed: will perform fresh resolve of '{}' in '{}'\", resolvedModuleVersionId, repository.getName());\n                return notFound();\n            }\n        }\n\n        LOGGER.debug(\"Using cached module metadata for module '{}' in '{}'\", resolvedModuleVersionId, repository.getName());\n        // TODO:DAZ Could provide artifact metadata and file here from artifactFileStore (it's not needed currently)\n        ModuleVersionDescriptor cachedModule = new DefaultModuleVersionDescriptor(cachedModuleDescriptor.getModuleDescriptor(), cachedModuleDescriptor.isChangingModule());\n        return found(cachedModule);\n    }","id":82535,"modified_method":"public CachedModuleLookup lookupModuleInCache(ModuleVersionRepository repository, DependencyDescriptor resolvedDependencyDescriptor) {\n        ModuleRevisionId resolvedModuleVersionId = resolvedDependencyDescriptor.getDependencyRevisionId();\n        ModuleVersionIdentifier moduleVersionIdentifier = createModuleVersionIdentifier(resolvedModuleVersionId);\n        ModuleDescriptorCache.CachedModuleDescriptor cachedModuleDescriptor = moduleDescriptorCache.getCachedModuleDescriptor(repository, resolvedModuleVersionId);\n        if (cachedModuleDescriptor == null) {\n            return notFound();\n        }\n        if (cachedModuleDescriptor.isMissing()) {\n            if (cachePolicy.mustRefreshModule(moduleVersionIdentifier, null, cachedModuleDescriptor.getAgeMillis())) {\n                LOGGER.debug(\"Cached meta-data for missing module is expired: will perform fresh resolve of '{}' in '{}'\", resolvedModuleVersionId, repository.getName());\n                return notFound();\n            }\n            LOGGER.debug(\"Detected non-existence of module '{}' in resolver cache '{}'\", resolvedModuleVersionId, repository.getName());\n            return found(null);\n        }\n        if (cachedModuleDescriptor.isChangingModule() || resolvedDependencyDescriptor.isChanging()) {\n            if (cachePolicy.mustRefreshChangingModule(moduleVersionIdentifier, cachedModuleDescriptor.getModuleVersion(), cachedModuleDescriptor.getAgeMillis())) {\n                expireArtifactsForChangingModule(repository, cachedModuleDescriptor.getModuleDescriptor());\n                LOGGER.debug(\"Cached meta-data for changing module is expired: will perform fresh resolve of '{}' in '{}'\", resolvedModuleVersionId, repository.getName());\n                return notFound();\n            }\n            LOGGER.debug(\"Found cached version of changing module '{}' in '{}'\", resolvedModuleVersionId, repository.getName());\n        } else {\n            if (cachePolicy.mustRefreshModule(moduleVersionIdentifier, cachedModuleDescriptor.getModuleVersion(), cachedModuleDescriptor.getAgeMillis())) {\n                LOGGER.debug(\"Cached meta-data for module must be refreshed: will perform fresh resolve of '{}' in '{}'\", resolvedModuleVersionId, repository.getName());\n                return notFound();\n            }\n        }\n\n        LOGGER.debug(\"Using cached module metadata for module '{}' in '{}'\", resolvedModuleVersionId, repository.getName());\n        // TODO:DAZ Could provide artifact metadata and file here from artifactFileStore (it's not needed currently)\n        ModuleVersionDescriptor cachedModule = new DefaultModuleVersionDescriptor(cachedModuleDescriptor.getModuleDescriptor(), cachedModuleDescriptor.isChangingModule());\n        return found(cachedModule);\n    }","commit_id":"0afffabadb384f9bb81ecd62d465a73e8f8a4b05","url":"https://github.com/gradle/gradle"},{"original_method":"public boolean mustRefreshModule(ModuleVersionIdentifier moduleVersionId, ResolvedModuleVersion resolvedModuleVersion, ModuleRevisionId moduleRevisionId, final long ageMillis) {\n        return mustRefreshModule(moduleVersionId, resolvedModuleVersion, ageMillis, false);\n    }","id":82536,"modified_method":"public boolean mustRefreshModule(ModuleVersionIdentifier moduleVersionId, ResolvedModuleVersion resolvedModuleVersion, final long ageMillis) {\n        return mustRefreshModule(moduleVersionId, resolvedModuleVersion, ageMillis, false);\n    }","commit_id":"0afffabadb384f9bb81ecd62d465a73e8f8a4b05","url":"https://github.com/gradle/gradle"},{"original_method":"public IvyAdapter create(ConfigurationInternal configuration) {\n        UserResolverChain userResolverChain = new UserResolverChain();\n        ResolutionRules resolutionRules = configuration.getResolutionStrategy().getResolutionRules();\n        startParameterResolutionOverride.addResolutionRules(resolutionRules);\n\n        LoopbackDependencyResolver loopbackDependencyResolver = new LoopbackDependencyResolver(SettingsConverter.LOOPBACK_RESOLVER_NAME, userResolverChain, cacheLockingManager);\n        List<DependencyResolver> rawResolvers = resolverProvider.getResolvers();\n\n        IvySettings ivySettings = settingsConverter.convertForResolve(loopbackDependencyResolver, rawResolvers);\n        Ivy ivy = ivyFactory.createIvy(ivySettings);\n        ResolveData resolveData = createResolveData(ivy, configuration.getName());\n\n        RefreshWhenMissingInAllRepositoriesCachePolicy repositoryAwareCachePolicy = new RefreshWhenMissingInAllRepositoriesCachePolicy(configuration.getResolutionStrategy().getCachePolicy(), moduleDescriptorCache);\n\n        IvyContextualiser contextualiser = new IvyContextualiser(ivy, resolveData);\n        for (DependencyResolver rawResolver : rawResolvers) {\n            // TODO:DAZ This could be lazily provided via the ivy context. Then we can change resolverProvider.getResolvers() -> getRepositories().\n            rawResolver.setSettings(ivySettings);\n            ModuleVersionRepository moduleVersionRepository = new DependencyResolverAdapter(rawResolver);\n            repositoryAwareCachePolicy.registerRepository(moduleVersionRepository);\n            moduleVersionRepository = new CacheLockingModuleVersionRepository(moduleVersionRepository, cacheLockingManager);\n            moduleVersionRepository = startParameterResolutionOverride.overrideModuleVersionRepository(moduleVersionRepository);\n\n            ModuleVersionRepository cachingRepository = new CachingModuleVersionRepository(moduleVersionRepository, moduleResolutionCache, moduleDescriptorCache, artifactAtRepositoryCachedResolutionIndex,\n                    repositoryAwareCachePolicy, timeProvider);\n            // Need to contextualise outside of caching, since parsing of module descriptors in the cache requires ivy settings, which is provided via the context atm\n            ModuleVersionRepository ivyContextualisedRepository = contextualiser.contextualise(ModuleVersionRepository.class, cachingRepository);\n            userResolverChain.add(ivyContextualisedRepository);\n        }\n\n        return new DefaultIvyAdapter(resolveData, userResolverChain);\n    }","id":82537,"modified_method":"public IvyAdapter create(ConfigurationInternal configuration) {\n        UserResolverChain userResolverChain = new UserResolverChain();\n        ResolutionRules resolutionRules = configuration.getResolutionStrategy().getResolutionRules();\n        startParameterResolutionOverride.addResolutionRules(resolutionRules);\n\n        LoopbackDependencyResolver loopbackDependencyResolver = new LoopbackDependencyResolver(SettingsConverter.LOOPBACK_RESOLVER_NAME, userResolverChain, cacheLockingManager);\n        List<DependencyResolver> rawResolvers = resolverProvider.getResolvers();\n\n        IvySettings ivySettings = settingsConverter.convertForResolve(loopbackDependencyResolver, rawResolvers);\n        Ivy ivy = ivyFactory.createIvy(ivySettings);\n        ResolveData resolveData = createResolveData(ivy, configuration.getName());\n\n        IvyContextualiser contextualiser = new IvyContextualiser(ivy, resolveData);\n        for (DependencyResolver rawResolver : rawResolvers) {\n            // TODO:DAZ This could be lazily provided via the ivy context. Then we can change resolverProvider.getResolvers() -> getRepositories().\n            rawResolver.setSettings(ivySettings);\n\n            ModuleVersionRepository moduleVersionRepository = new DependencyResolverAdapter(rawResolver);\n            moduleVersionRepository = new CacheLockingModuleVersionRepository(moduleVersionRepository, cacheLockingManager);\n            moduleVersionRepository = startParameterResolutionOverride.overrideModuleVersionRepository(moduleVersionRepository);\n            ModuleVersionRepository cachingRepository =\n                    new CachingModuleVersionRepository(moduleVersionRepository, moduleResolutionCache, moduleDescriptorCache, artifactAtRepositoryCachedResolutionIndex,\n                                                       configuration.getResolutionStrategy().getCachePolicy(), timeProvider);\n            // Need to contextualise outside of caching, since parsing of module descriptors in the cache requires ivy settings, which is provided via the context atm\n            ModuleVersionRepository ivyContextualisedRepository = contextualiser.contextualise(ModuleVersionRepository.class, cachingRepository);\n            userResolverChain.add(ivyContextualisedRepository);\n        }\n\n        return new DefaultIvyAdapter(resolveData, userResolverChain);\n    }","commit_id":"0afffabadb384f9bb81ecd62d465a73e8f8a4b05","url":"https://github.com/gradle/gradle"},{"original_method":"public boolean mustRefreshModule(ModuleVersionIdentifier moduleVersionId, ResolvedModuleVersion resolvedModuleVersion, ModuleRevisionId moduleRevisionId, long ageMillis) {\n        return delegate.mustRefreshModule(moduleVersionId, resolvedModuleVersion, moduleRevisionId, ageMillis) || isGloballyNotFound(moduleRevisionId);\n    }","id":82538,"modified_method":"public boolean mustRefreshModule(ModuleVersionIdentifier moduleVersionId, ResolvedModuleVersion resolvedModuleVersion, ModuleRevisionId moduleRevisionId, long ageMillis) {\n        return isGloballyNotFound(moduleRevisionId);\n    }","commit_id":"16eba3f9f7c8c198561eb582321c2a372b00ad61","url":"https://github.com/gradle/gradle"},{"original_method":"public boolean mustRefreshArtifact(ArtifactIdentifier artifactIdentifier, File cachedArtifactFile, long ageMillis) {\n        return delegate.mustRefreshArtifact(artifactIdentifier, cachedArtifactFile, ageMillis);\n    }","id":82539,"modified_method":"public boolean mustRefreshArtifact(ArtifactIdentifier artifactIdentifier, File cachedArtifactFile, long ageMillis) {\n        return false;\n    }","commit_id":"16eba3f9f7c8c198561eb582321c2a372b00ad61","url":"https://github.com/gradle/gradle"},{"original_method":"public boolean mustRefreshChangingModule(ModuleVersionIdentifier moduleVersionId, ResolvedModuleVersion resolvedModuleVersion, long ageMillis) {\n        return delegate.mustRefreshChangingModule(moduleVersionId, resolvedModuleVersion, ageMillis);\n    }","id":82540,"modified_method":"public boolean mustRefreshChangingModule(ModuleVersionIdentifier moduleVersionId, ResolvedModuleVersion resolvedModuleVersion, long ageMillis) {\n        return false;\n    }","commit_id":"16eba3f9f7c8c198561eb582321c2a372b00ad61","url":"https://github.com/gradle/gradle"},{"original_method":"public boolean mustRefreshDynamicVersion(ModuleVersionSelector selector, ModuleVersionIdentifier moduleId, long ageMillis) {\n        return delegate.mustRefreshDynamicVersion(selector, moduleId, ageMillis);\n    }","id":82541,"modified_method":"public boolean mustRefreshDynamicVersion(ModuleVersionSelector selector, ModuleVersionIdentifier moduleId, long ageMillis) {\n        return false;\n    }","commit_id":"16eba3f9f7c8c198561eb582321c2a372b00ad61","url":"https://github.com/gradle/gradle"},{"original_method":"public RefreshWhenMissingInAllRepositoriesCachePolicy(CachePolicy delegate, ModuleResolutionCache moduleResolutionCache, ModuleDescriptorCache moduleDescriptorCache) {\n        this.delegate = delegate;\n        this.moduleResolutionCache = moduleResolutionCache;\n        this.moduleDescriptorCache = moduleDescriptorCache;\n    }","id":82542,"modified_method":"public RefreshWhenMissingInAllRepositoriesCachePolicy(ModuleResolutionCache moduleResolutionCache, ModuleDescriptorCache moduleDescriptorCache) {\n        this.moduleResolutionCache = moduleResolutionCache;\n        this.moduleDescriptorCache = moduleDescriptorCache;\n    }","commit_id":"16eba3f9f7c8c198561eb582321c2a372b00ad61","url":"https://github.com/gradle/gradle"},{"original_method":"public IvyAdapter create(ConfigurationInternal configuration) {\n        UserResolverChain userResolverChain = new UserResolverChain();\n        ResolutionRules resolutionRules = configuration.getResolutionStrategy().getResolutionRules();\n        startParameterResolutionOverride.addResolutionRules(resolutionRules);\n\n        LoopbackDependencyResolver loopbackDependencyResolver = new LoopbackDependencyResolver(SettingsConverter.LOOPBACK_RESOLVER_NAME, userResolverChain, cacheLockingManager);\n        List<DependencyResolver> rawResolvers = resolverProvider.getResolvers();\n\n        IvySettings ivySettings = settingsConverter.convertForResolve(loopbackDependencyResolver, rawResolvers);\n        Ivy ivy = ivyFactory.createIvy(ivySettings);\n        ResolveData resolveData = createResolveData(ivy, configuration.getName());\n\n        RefreshWhenMissingInAllRepositoriesCachePolicy repositoryAwareCachePolicy = new RefreshWhenMissingInAllRepositoriesCachePolicy(configuration.getResolutionStrategy().getCachePolicy(), moduleResolutionCache, moduleDescriptorCache);\n\n        IvyContextualiser contextualiser = new IvyContextualiser(ivy, resolveData);\n        for (DependencyResolver rawResolver : rawResolvers) {\n            // TODO:DAZ This could be lazily provided via the ivy context. Then we can change resolverProvider.getResolvers() -> getRepositories().\n            rawResolver.setSettings(ivySettings);\n            ModuleVersionRepository moduleVersionRepository = new DependencyResolverAdapter(rawResolver);\n            repositoryAwareCachePolicy.registerRepository(moduleVersionRepository);\n            moduleVersionRepository = new CacheLockingModuleVersionRepository(moduleVersionRepository, cacheLockingManager);\n            moduleVersionRepository = startParameterResolutionOverride.overrideModuleVersionRepository(moduleVersionRepository);\n\n            ModuleVersionRepository cachingRepository = new CachingModuleVersionRepository(moduleVersionRepository, moduleResolutionCache, moduleDescriptorCache, artifactAtRepositoryCachedResolutionIndex,\n                    repositoryAwareCachePolicy, timeProvider);\n            // Need to contextualise outside of caching, since parsing of module descriptors in the cache requires ivy settings, which is provided via the context atm\n            ModuleVersionRepository ivyContextualisedRepository = contextualiser.contextualise(ModuleVersionRepository.class, cachingRepository);\n            userResolverChain.add(ivyContextualisedRepository);\n        }\n\n        return new DefaultIvyAdapter(resolveData, userResolverChain);\n    }","id":82543,"modified_method":"public IvyAdapter create(ConfigurationInternal configuration) {\n        UserResolverChain userResolverChain = new UserResolverChain();\n        ResolutionRules resolutionRules = configuration.getResolutionStrategy().getResolutionRules();\n        startParameterResolutionOverride.addResolutionRules(resolutionRules);\n\n        LoopbackDependencyResolver loopbackDependencyResolver = new LoopbackDependencyResolver(SettingsConverter.LOOPBACK_RESOLVER_NAME, userResolverChain, cacheLockingManager);\n        List<DependencyResolver> rawResolvers = resolverProvider.getResolvers();\n\n        IvySettings ivySettings = settingsConverter.convertForResolve(loopbackDependencyResolver, rawResolvers);\n        Ivy ivy = ivyFactory.createIvy(ivySettings);\n        ResolveData resolveData = createResolveData(ivy, configuration.getName());\n        IvyContextualiser contextualiser = new IvyContextualiser(ivy, resolveData);\n        for (DependencyResolver rawResolver : rawResolvers) {\n            // TODO:DAZ This could be lazily provided via the ivy context. Then we can change resolverProvider.getResolvers() -> getRepositories().\n            rawResolver.setSettings(ivySettings);\n            ModuleVersionRepository moduleVersionRepository = new DependencyResolverAdapter(rawResolver);\n            refreshWhenMissingInAllRepositoriesCachePolicy.registerRepository(moduleVersionRepository);\n            moduleVersionRepository = new CacheLockingModuleVersionRepository(moduleVersionRepository, cacheLockingManager);\n            moduleVersionRepository = startParameterResolutionOverride.overrideModuleVersionRepository(moduleVersionRepository);\n            ModuleVersionRepository cachingRepository = new CachingModuleVersionRepository(moduleVersionRepository, moduleResolutionCache, moduleDescriptorCache, artifactAtRepositoryCachedResolutionIndex,\n                    new ChainedCachePolicy(configuration.getResolutionStrategy().getCachePolicy(),\n                                           new OnlyOncePerRepositoryRefreshModuleCachePolicy(moduleVersionRepository, repositoryLookUpRegistry, refreshWhenMissingInAllRepositoriesCachePolicy)), timeProvider);\n            ModuleVersionRepository ivyContextualisedRepository = contextualiser.contextualise(ModuleVersionRepository.class, cachingRepository);\n            userResolverChain.add(ivyContextualisedRepository);\n        }\n\n        return new DefaultIvyAdapter(resolveData, userResolverChain);\n    }","commit_id":"16eba3f9f7c8c198561eb582321c2a372b00ad61","url":"https://github.com/gradle/gradle"},{"original_method":"public ResolveIvyFactory(IvyFactory ivyFactory, ResolverProvider resolverProvider, SettingsConverter settingsConverter,\n                             ModuleResolutionCache moduleResolutionCache, ModuleDescriptorCache moduleDescriptorCache,\n                             CachedExternalResourceIndex<ArtifactAtRepositoryKey> artifactAtRepositoryCachedResolutionIndex,\n                             CacheLockingManager cacheLockingManager, StartParameterResolutionOverride startParameterResolutionOverride,\n                             TimeProvider timeProvider) {\n        this.ivyFactory = ivyFactory;\n        this.resolverProvider = resolverProvider;\n        this.settingsConverter = settingsConverter;\n        this.moduleResolutionCache = moduleResolutionCache;\n        this.moduleDescriptorCache = moduleDescriptorCache;\n        this.artifactAtRepositoryCachedResolutionIndex = artifactAtRepositoryCachedResolutionIndex;\n        this.cacheLockingManager = cacheLockingManager;\n        this.startParameterResolutionOverride = startParameterResolutionOverride;\n        this.timeProvider = timeProvider;\n    }","id":82544,"modified_method":"public ResolveIvyFactory(IvyFactory ivyFactory, ResolverProvider resolverProvider, SettingsConverter settingsConverter,\n                             ModuleResolutionCache moduleResolutionCache, ModuleDescriptorCache moduleDescriptorCache,\n                             CachedExternalResourceIndex<ArtifactAtRepositoryKey> artifactAtRepositoryCachedResolutionIndex,\n                             CacheLockingManager cacheLockingManager, StartParameterResolutionOverride startParameterResolutionOverride,\n                             TimeProvider timeProvider) {\n        this.ivyFactory = ivyFactory;\n        this.resolverProvider = resolverProvider;\n        this.settingsConverter = settingsConverter;\n        this.moduleResolutionCache = moduleResolutionCache;\n        this.moduleDescriptorCache = moduleDescriptorCache;\n        this.artifactAtRepositoryCachedResolutionIndex = artifactAtRepositoryCachedResolutionIndex;\n        this.cacheLockingManager = cacheLockingManager;\n        this.startParameterResolutionOverride = startParameterResolutionOverride;\n        this.timeProvider = timeProvider;\n        this.refreshWhenMissingInAllRepositoriesCachePolicy = new RefreshWhenMissingInAllRepositoriesCachePolicy(moduleResolutionCache, moduleDescriptorCache);\n\n    }","commit_id":"16eba3f9f7c8c198561eb582321c2a372b00ad61","url":"https://github.com/gradle/gradle"},{"original_method":"public boolean isConflictingChange(final Project project) {\n    Boolean isConflicting = myIsConflicting.get();\n    if (isConflicting != null) return isConflicting;\n\n    ContentRevision afterRevision = getChange(project).getAfterRevision();\n    if (afterRevision == null) return false;\n    try {\n      afterRevision.getContent();\n    }\n    catch(VcsException e) {\n      if (e.getCause() instanceof ApplyPatchException) {\n        myIsConflicting.set(true);\n        return true;\n      }\n    }\n    myIsConflicting.set(false);\n    return false;\n  }","id":82545,"modified_method":"public boolean isConflictingChange(final Project project) {\n    ContentRevision afterRevision = getChange(project).getAfterRevision();\n    if (afterRevision == null) return false;\n    try {\n      afterRevision.getContent();\n    }\n    catch (VcsException e) {\n      if (e.getCause() instanceof ApplyPatchException) {\n        return true;\n      }\n    }\n    return false;\n  }","commit_id":"722a0d4ae62d3ed1b9186a47522486c76bbacb40","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    @Nullable\n    public String getContent() throws VcsException {\n      if (myContent == null) {\n        try {\n          myContent = loadContent();\n        }\n        catch (Exception e) {\n          throw new VcsException(e);\n        }\n      }\n\n      return myContent;\n    }","id":82546,"modified_method":"@Override\n    @Nullable\n    public String getContent() throws VcsException {\n      try {\n        // content based on local shouldn't be cached because local file may be changed (during show diff also)\n        return loadContent();\n      }\n      catch (Exception e) {\n        throw new VcsException(e);\n      }\n    }","commit_id":"722a0d4ae62d3ed1b9186a47522486c76bbacb40","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public ShelvedChange(final String patchPath, final String beforePath, final String afterPath, final FileStatus fileStatus) {\n    myPatchPath = patchPath;\n    myBeforePath = beforePath;\n    // optimisation: memory\n    myAfterPath = Comparing.equal(beforePath, afterPath) ? beforePath : afterPath;\n    myFileStatus = fileStatus;\n    myIsConflicting = new AtomicReference<Boolean>();\n  }","id":82547,"modified_method":"public ShelvedChange(final String patchPath, final String beforePath, final String afterPath, final FileStatus fileStatus) {\n    myPatchPath = patchPath;\n    myBeforePath = beforePath;\n    // optimisation: memory\n    myAfterPath = Comparing.equal(beforePath, afterPath) ? beforePath : afterPath;\n    myFileStatus = fileStatus;\n  }","commit_id":"722a0d4ae62d3ed1b9186a47522486c76bbacb40","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void updateSingleIndex(final ID<?, ?> indexId, final VirtualFile file, final FileContent currentFC, final FileContent oldFC)\n    throws StorageException {\n\n    setDataBufferingEnabled(false);\n    myIndexingHistory.clear();\n\n    final int inputId = Math.abs(getFileId(file));\n    final UpdatableIndex<?, ?, FileContent> index = getIndex(indexId);\n    index.update(inputId, currentFC, oldFC);\n    if (file.isValid()) {\n      if (currentFC != null) {\n        IndexingStamp.update(file, indexId, getIndexCreationStamp(indexId));\n      }\n      else {\n        // mark the file as unindexed\n        IndexingStamp.update(file, indexId, -1L);\n      }\n    }\n  }","id":82548,"modified_method":"private void updateSingleIndex(final ID<?, ?> indexId, final VirtualFile file, final FileContent currentFC, final FileContent oldFC)\n    throws StorageException {\n\n    setDataBufferingEnabled(false);\n    synchronized (myLastIndexedDocStamps) {\n      myLastIndexedDocStamps.clear();\n      myLastIndexedUnsavedContent.clear();\n    }\n\n    final int inputId = Math.abs(getFileId(file));\n    final UpdatableIndex<?, ?, FileContent> index = getIndex(indexId);\n    index.update(inputId, currentFC, oldFC);\n    if (file.isValid()) {\n      if (currentFC != null) {\n        IndexingStamp.update(file, indexId, getIndexCreationStamp(indexId));\n      }\n      else {\n        // mark the file as unindexed\n        IndexingStamp.update(file, indexId, -1L);\n      }\n    }\n  }","commit_id":"beb3fc1efe4a5c8ab6047ed56c2dba49685ddbae","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public VirtualFile[] queryNeededFiles() {\n      synchronized (myFileToUpdate) {\n        return myFileToUpdate.toArray(new VirtualFile[myFileToUpdate.size()]);\n      }\n    }","id":82549,"modified_method":"public VirtualFile[] queryNeededFiles() {\n      synchronized (myFilesToUpdate) {\n        return myFilesToUpdate.toArray(new VirtualFile[myFilesToUpdate.size()]);\n      }\n    }","commit_id":"beb3fc1efe4a5c8ab6047ed56c2dba49685ddbae","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void scheduleInvalidation(final VirtualFile file, final boolean saveContent) {\n      if (file.isDirectory()) {\n        if (!(file instanceof NewVirtualFile) || ManagingFS.getInstance().areChildrenLoaded(file)) {\n          for (VirtualFile child : file.getChildren()) {\n            scheduleInvalidation(child, false);\n          }\n        }\n      }\n      else {\n        final List<ID<?, ?>> affectedIndices = new ArrayList<ID<?, ?>>(myIndices.size());\n        for (ID<?, ?> indexId : myIndices.keySet()) {\n          if (getInputFilter(indexId).acceptInput(file) && IndexingStamp.isFileIndexed(file, indexId, getIndexCreationStamp(indexId))) {\n            if (myNeedContentLoading.contains(indexId)) {\n              affectedIndices.add(indexId);\n            }\n            else {\n              // invalidate it synchronously\n              try {\n                updateSingleIndex(indexId, file, null, new FileContent(file, null));\n              }\n              catch (StorageException e) {\n                LOG.error(e);\n                requestRebuild(indexId);\n              }\n            }\n          }\n        }\n        \n        if (affectedIndices.size() > 0) {\n          iterateIndexableFiles(file, new Processor<VirtualFile>() {\n            public boolean process(final VirtualFile file) {\n              myFileToUpdate.add(file);\n              return true;\n            }\n          });\n          if (saveContent) {\n            myFileContentAttic.offer(file);\n          }\n          else {\n            final FileContent fc = new FileContent(file, loadContent(file));\n            final FutureTask<?> future = (FutureTask<?>)myInvalidationService.submit(new Runnable() {\n              public void run() {\n                for (ID<?, ?> indexId : affectedIndices) {\n                  try {\n                    updateSingleIndex(indexId, file, null, fc);\n                  }\n                  catch (StorageException e) {\n                    LOG.error(e);\n                    requestRebuild(indexId);\n                  }\n                }\n              }\n            });\n            myFutureInvalidations.offer(future);\n          }\n        }\n      }\n    }","id":82550,"modified_method":"private void scheduleInvalidation(final VirtualFile file, final boolean saveContent) {\n      if (file.isDirectory()) {\n        if (!(file instanceof NewVirtualFile) || ManagingFS.getInstance().areChildrenLoaded(file)) {\n          for (VirtualFile child : file.getChildren()) {\n            scheduleInvalidation(child, false);\n          }\n        }\n      }\n      else {\n        final List<ID<?, ?>> affectedIndices = new ArrayList<ID<?, ?>>(myIndices.size());\n        for (ID<?, ?> indexId : myIndices.keySet()) {\n          if (getInputFilter(indexId).acceptInput(file) && IndexingStamp.isFileIndexed(file, indexId, getIndexCreationStamp(indexId))) {\n            if (myNeedContentLoading.contains(indexId)) {\n              affectedIndices.add(indexId);\n            }\n            else {\n              // invalidate it synchronously\n              try {\n                updateSingleIndex(indexId, file, null, new FileContent(file, null));\n              }\n              catch (StorageException e) {\n                LOG.error(e);\n                requestRebuild(indexId);\n              }\n            }\n          }\n        }\n        \n        if (affectedIndices.size() > 0) {\n          iterateIndexableFiles(file, new Processor<VirtualFile>() {\n            public boolean process(final VirtualFile file) {\n              myFilesToUpdate.add(file);\n              return true;\n            }\n          });\n          if (saveContent) {\n            myFileContentAttic.offer(file);\n          }\n          else {\n            final FileContent fc = new FileContent(file, loadContent(file));\n            final FutureTask<?> future = (FutureTask<?>)myInvalidationService.submit(new Runnable() {\n              public void run() {\n                for (ID<?, ?> indexId : affectedIndices) {\n                  try {\n                    updateSingleIndex(indexId, file, null, fc);\n                  }\n                  catch (StorageException e) {\n                    LOG.error(e);\n                    requestRebuild(indexId);\n                  }\n                }\n              }\n            });\n            myFutureInvalidations.offer(future);\n          }\n        }\n      }\n    }","commit_id":"beb3fc1efe4a5c8ab6047ed56c2dba49685ddbae","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void processFileImpl(final com.intellij.ide.startup.FileContent fileContent) {\n      final VirtualFile file = fileContent.getVirtualFile();\n      final boolean reallyRemoved = myFileToUpdate.remove(file);\n      if (reallyRemoved && file.isValid()) {\n        indexFileContent(fileContent);\n      }\n    }","id":82551,"modified_method":"private void processFileImpl(final com.intellij.ide.startup.FileContent fileContent) {\n      final VirtualFile file = fileContent.getVirtualFile();\n      final boolean reallyRemoved = myFilesToUpdate.remove(file);\n      if (reallyRemoved && file.isValid()) {\n        indexFileContent(fileContent);\n      }\n    }","commit_id":"beb3fc1efe4a5c8ab6047ed56c2dba49685ddbae","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void forceUpdate() {\n      ensureAllInvalidateTasksCompleted();\n      for (VirtualFile file: queryNeededFiles()) {\n        processFileImpl(new com.intellij.ide.startup.FileContent(file));\n      }\n    }","id":82552,"modified_method":"public void forceUpdate() {\n      ensureAllInvalidateTasksCompleted();\n      myForceUpdateSemaphore.down();\n      try {\n        for (VirtualFile file: queryNeededFiles()) {\n          processFileImpl(new com.intellij.ide.startup.FileContent(file));\n        }\n      }\n      finally {\n        myForceUpdateSemaphore.up();\n        myForceUpdateSemaphore.waitFor(); // possibly wait until another thread completes indexing\n      }\n    }","commit_id":"beb3fc1efe4a5c8ab6047ed56c2dba49685ddbae","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void indexUnsavedDocuments() throws StorageException {\n    myChangedFilesUpdater.forceUpdate();\n    \n    final FileDocumentManager fdManager = FileDocumentManager.getInstance();\n    final Document[] documents = fdManager.getUnsavedDocuments();\n    if (documents.length > 0) {\n      // now index unsaved data\n      setDataBufferingEnabled(true);\n      for (Document document : documents) {\n        final VirtualFile vFile = fdManager.getFile(document);\n        if (!vFile.isValid()) {\n          continue; // since the corresponding file is invalid, the document should be ignored\n        }\n        final Pair<CharSequence, Long> indexingInfo = myIndexingHistory.get(document);\n        final long documentStamp = document.getModificationStamp();\n        if (indexingInfo == null || documentStamp != indexingInfo.getSecond().longValue()) {\n          final FileContent oldFc = new FileContent(\n            vFile,\n            indexingInfo != null? indexingInfo.getFirst() : loadContent(vFile)\n          );\n          final FileContent newFc = new FileContent(vFile, document.getText());\n          for (ID<?, ?> indexId : myIndices.keySet()) {\n            if (getInputFilter(indexId).acceptInput(vFile)) {\n              final int inputId = Math.abs(getFileId(vFile));\n              getIndex(indexId).update(inputId, newFc, oldFc);\n            }\n          }\n          myIndexingHistory.put(document, new Pair<CharSequence, Long>(newFc.content, documentStamp));\n        }\n      }\n    }\n  }","id":82553,"modified_method":"private void indexUnsavedDocuments() throws StorageException {\n    myChangedFilesUpdater.forceUpdate();\n    \n    final FileDocumentManager fdManager = FileDocumentManager.getInstance();\n    final Document[] documents = fdManager.getUnsavedDocuments();\n    if (documents.length > 0) {\n      // now index unsaved data\n      setDataBufferingEnabled(true);\n      myUnsavedDataIndexingSemaphore.down();\n      try {\n        for (Document document : documents) {\n          final VirtualFile vFile = fdManager.getFile(document);\n          if (!vFile.isValid()) {\n            continue; // since the corresponding file is invalid, the document should be ignored\n          }\n          final long currentDocStamp = document.getModificationStamp();\n          if (currentDocStamp != getLastIndexedStamp(document).getAndSet(currentDocStamp)) {\n            CharSequence lastIndexed = myLastIndexedUnsavedContent.get(document);\n            if (lastIndexed == null) {\n              lastIndexed = loadContent(vFile);\n            }\n            final FileContent oldFc = new FileContent(vFile, lastIndexed);\n            final FileContent newFc = new FileContent(vFile, document.getText());\n            for (ID<?, ?> indexId : myIndices.keySet()) {\n              if (getInputFilter(indexId).acceptInput(vFile)) {\n                final int inputId = Math.abs(getFileId(vFile));\n                getIndex(indexId).update(inputId, newFc, oldFc);\n              }\n            }\n            myLastIndexedUnsavedContent.put(document, newFc.content);\n          }\n        }\n      }\n      finally {\n        myUnsavedDataIndexingSemaphore.up();\n        myUnsavedDataIndexingSemaphore.waitFor(); // may need to wait until another thread is done with indexing \n      }\n    }\n  }","commit_id":"beb3fc1efe4a5c8ab6047ed56c2dba49685ddbae","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void fileDeleted(final VirtualFileEvent event) {\n      myFileToUpdate.remove(event.getFile()); // no need to update it anymore\n    }","id":82554,"modified_method":"public void fileDeleted(final VirtualFileEvent event) {\n      myFilesToUpdate.remove(event.getFile()); // no need to update it anymore\n    }","commit_id":"beb3fc1efe4a5c8ab6047ed56c2dba49685ddbae","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void markDirty(final VirtualFileEvent event) {\n      iterateIndexableFiles(event.getFile(), new Processor<VirtualFile>() {\n        public boolean process(final VirtualFile file) {\n          for (ID<?, ?> indexId : myIndices.keySet()) {\n            if (getInputFilter(indexId).acceptInput(file)) {\n              if (myNeedContentLoading.contains(indexId)) {\n                myFileToUpdate.add(file);\n              }\n              else {\n                try {\n                  updateSingleIndex(indexId, file, new FileContent(file, null), null);\n                }\n                catch (StorageException e) {\n                  LOG.error(e);\n                  requestRebuild(indexId);\n                }\n              }\n            }\n          }\n          return true;\n        }\n      });\n    }","id":82555,"modified_method":"private void markDirty(final VirtualFileEvent event) {\n      iterateIndexableFiles(event.getFile(), new Processor<VirtualFile>() {\n        public boolean process(final VirtualFile file) {\n          for (ID<?, ?> indexId : myIndices.keySet()) {\n            if (getInputFilter(indexId).acceptInput(file)) {\n              if (myNeedContentLoading.contains(indexId)) {\n                myFilesToUpdate.add(file);\n              }\n              else {\n                try {\n                  updateSingleIndex(indexId, file, new FileContent(file, null), null);\n                }\n                catch (StorageException e) {\n                  LOG.error(e);\n                  requestRebuild(indexId);\n                }\n              }\n            }\n          }\n          return true;\n        }\n      });\n    }","commit_id":"beb3fc1efe4a5c8ab6047ed56c2dba49685ddbae","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  @Override\n  public DefaultActionGroup getActionGroup(Project project) {\n    final DefaultActionGroup group = new DefaultActionGroup();\n    group.add(new StudyPreviousStudyTaskAction());\n    group.add(new StudyNextStudyTaskAction());\n    group.add(new StudyRefreshTaskFileAction());\n    group.add(new StudyShowHintAction());\n\n    group.add(new StudyRunAction());\n    group.add(new StudyEditInputAction());\n    return group;\n  }","id":82556,"modified_method":"@NotNull\n  @Override\n  public DefaultActionGroup getActionGroup(Project project) {\n    return getDefaultActionGroup();\n  }","commit_id":"1f26530d3bc58d4e49c2fde6b0ad204f866c990f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void loadContent(@NotNull final String content, StudyPluginConfigurator configurator) {\n    String withCodeHighlighting = createHtmlWithCodeHighlighting(content, configurator);\n    Platform.runLater(()-> {\n        updateLookWithProgressBarIfNeeded();\n        myEngine.loadContent(withCodeHighlighting);        \n      });\n  }","id":82557,"modified_method":"public void loadContent(@NotNull final String content, @Nullable StudyPluginConfigurator configurator) {\n    if (configurator == null) {\n      Platform.runLater(() -> myEngine.loadContent(\"Seems like desired plugin doesn't installed\"));\n      LOG.warn(\"No StudyPluginConfigurator is provided for the plugin\");\n    }\n    else {\n      String withCodeHighlighting = createHtmlWithCodeHighlighting(content, configurator);\n      Platform.runLater(() -> {\n        updateLookWithProgressBarIfNeeded();\n        myEngine.loadContent(withCodeHighlighting);\n      });\n    }\n  }","commit_id":"1f26530d3bc58d4e49c2fde6b0ad204f866c990f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void runAfterTaskSolvedActions() {\n    StudyPluginConfigurator configurator = StudyUtils.getConfigurator(myProject);\n    if (configurator != null) {\n      StudyAfterCheckAction[] checkActions = configurator.getAfterCheckActions();\n      if (checkActions != null) {\n        for (StudyAfterCheckAction action: checkActions) {\n          action.run(myProject, myTask, myStatusBeforeCheck);\n        }\n      }\n    }\n  }","id":82558,"modified_method":"private void runAfterTaskSolvedActions() {\n    StudyPluginConfigurator configurator = StudyUtils.getConfigurator(myProject);\n    if (configurator != null) {\n      StudyAfterCheckAction[] checkActions = configurator.getAfterCheckActions();\n      if (checkActions != null) {\n        for (StudyAfterCheckAction action: checkActions) {\n          action.run(myProject, myTask, myStatusBeforeCheck);\n        }\n      }\n    }\n    else {\n      LOG.warn(\"No configurator is provided for the plugin\");\n    }\n  }","commit_id":"1f26530d3bc58d4e49c2fde6b0ad204f866c990f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void setTaskText(String text) {\n    StudyPluginConfigurator configurator = StudyUtils.getConfigurator(ProjectUtil.guessCurrentProject(this));\n    if (configurator != null) {\n      myBrowserWindow.loadContent(text, configurator);\n    }\n  }","id":82559,"modified_method":"@Override\n  public void setTaskText(String text) {\n    StudyPluginConfigurator configurator = StudyUtils.getConfigurator(ProjectUtil.guessCurrentProject(this));\n      myBrowserWindow.loadContent(text, configurator);\n  }","commit_id":"1f26530d3bc58d4e49c2fde6b0ad204f866c990f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static DefaultActionGroup getActionGroup(@NotNull final Project project) {\n    Course course = StudyTaskManager.getInstance(project).getCourse();\n    if (course == null) {\n      LOG.warn(\"Course is null\");\n      return new DefaultActionGroup();\n    }\n    StudyPluginConfigurator configurator = StudyUtils.getConfigurator(project);\n    assert configurator != null;\n\n    return configurator.getActionGroup(project);\n  }","id":82560,"modified_method":"private static DefaultActionGroup getActionGroup(@NotNull final Project project) {\n    Course course = StudyTaskManager.getInstance(project).getCourse();\n    if (course == null) {\n      LOG.warn(\"Course is null\");\n      return new DefaultActionGroup();\n    }\n    StudyPluginConfigurator configurator = StudyUtils.getConfigurator(project);\n    if (configurator != null) {\n      return configurator.getActionGroup(project);\n    }\n    else {\n      LOG.warn(\"No configurator is provided for plugin\");\n      return StudyBasePluginConfigurator.getDefaultActionGroup();\n    }\n  }","commit_id":"1f26530d3bc58d4e49c2fde6b0ad204f866c990f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void addAdditionalPanels(Project project) {\n    StudyPluginConfigurator configurator = StudyUtils.getConfigurator(project);\n    assert configurator != null;\n    Map<String, JPanel> panels = configurator.getAdditionalPanels(project);\n    for (Map.Entry<String, JPanel> entry: panels.entrySet()) {\n      myContentPanel.add(entry.getKey(), entry.getValue());\n    }\n  }","id":82561,"modified_method":"private void addAdditionalPanels(Project project) {\n    StudyPluginConfigurator configurator = StudyUtils.getConfigurator(project);\n    if (configurator != null) {\n      Map<String, JPanel> panels = configurator.getAdditionalPanels(project);\n      for (Map.Entry<String, JPanel> entry : panels.entrySet()) {\n        myContentPanel.add(entry.getKey(), entry.getValue());\n      }\n    }\n    else {\n      LOG.warn(\"No StudyPluginConfigurator is provided for the plugin\");\n    }\n  }","commit_id":"1f26530d3bc58d4e49c2fde6b0ad204f866c990f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void init(Project project) {\n    String taskText = StudyUtils.getTaskText(project);\n    if (taskText == null) return;\n\n    JPanel toolbarPanel = createToolbarPanel(project);\n    setToolbar(toolbarPanel);\n\n    myContentPanel.add(TASK_INFO_ID, createTaskInfoPanel(taskText, project));\n    mySplitPane.setFirstComponent(myContentPanel);\n    addAdditionalPanels(project);\n    myCardLayout.show(myContentPanel, TASK_INFO_ID);\n\n    setContent(mySplitPane);\n\n    StudyPluginConfigurator configurator = StudyUtils.getConfigurator(project);\n    assert configurator != null;\n    final FileEditorManagerListener listener = configurator.getFileEditorManagerListener(project, this);\n    project.getMessageBus().connect().subscribe(FileEditorManagerListener.FILE_EDITOR_MANAGER, listener);\n  }","id":82562,"modified_method":"public void init(Project project) {\n    String taskText = StudyUtils.getTaskText(project);\n    if (taskText == null) return;\n\n    JPanel toolbarPanel = createToolbarPanel(project);\n    setToolbar(toolbarPanel);\n\n    myContentPanel.add(TASK_INFO_ID, createTaskInfoPanel(taskText, project));\n    mySplitPane.setFirstComponent(myContentPanel);\n    addAdditionalPanels(project);\n    myCardLayout.show(myContentPanel, TASK_INFO_ID);\n\n    setContent(mySplitPane);\n\n    StudyPluginConfigurator configurator = StudyUtils.getConfigurator(project);\n    if (configurator != null) {\n      final FileEditorManagerListener listener = configurator.getFileEditorManagerListener(project, this);\n      project.getMessageBus().connect().subscribe(FileEditorManagerListener.FILE_EDITOR_MANAGER, listener);\n    }\n  }","commit_id":"1f26530d3bc58d4e49c2fde6b0ad204f866c990f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected List<Block> buildChildren() {\n\n    final ArrayList<Block> result = new ArrayList<Block>();\n\n    if (myNode.getElementType() == ElementType.XML_ATTRIBUTE_VALUE) {\n      return result;\n    }\n\n    if (myNode.getElementType() == ElementType.XML_TEXT) {\n      if (myXmlFormattingPolicy.getShouldKeepWhiteSpaces()) {\n        return result;\n      }\n\n      final ASTNode treeParent = myNode.getTreeParent();\n      if (myXmlFormattingPolicy.keepWhiteSpacesInsideTag(getTag(treeParent))) {\n        return result;\n      }\n    }\n\n    if (myNode instanceof CompositeElement) {\n      ChameleonTransforming.transformChildren(myNode);\n      ASTNode child = myNode.getFirstChildNode();\n      while (child != null) {\n        if (!containsWhiteSpacesOnly(child) && child.getTextLength() > 0) {\n          result.add(createChildBlock(child, null, null, null));\n        }\n        child = child.getTreeNext();\n      }\n    }\n    return result;\n  }","id":82563,"modified_method":"protected List<Block> buildChildren() {\n\n    final ArrayList<Block> result = new ArrayList<Block>();\n\n    if (myNode.getElementType() == ElementType.XML_ATTRIBUTE_VALUE) {\n      return result;\n    }\n\n    if (myNode.getElementType() == ElementType.XML_TEXT) {\n      if (myXmlFormattingPolicy.getShouldKeepWhiteSpaces()) {\n        return result;\n      }\n\n      final ASTNode treeParent = myNode.getTreeParent();\n      final XmlTag tag = getTag(treeParent);\n      if (tag != null) {\n        if (myXmlFormattingPolicy.keepWhiteSpacesInsideTag(tag)) {\n          return result;\n        }\n      } \n    }\n\n    if (myNode instanceof CompositeElement) {\n      ChameleonTransforming.transformChildren(myNode);\n      ASTNode child = myNode.getFirstChildNode();\n      while (child != null) {\n        if (!containsWhiteSpacesOnly(child) && child.getTextLength() > 0) {\n          result.add(createChildBlock(child, null, null, null));\n        }\n        child = child.getTreeNext();\n      }\n    }\n    return result;\n  }","commit_id":"54cbb6ad56ea78f9c79321c4599935b27e6de2ff","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public EditingPOIActivity(MapActivity uiContext){\n\t\tthis.ctx = uiContext;\n\n\t\tOsmandSettings settings = OsmandSettings.getOsmandSettings(ctx);\n\t\tif(!settings.isInternetConnectionAvailable(true)){\n\t\t\tthis.openstreetmapUtil = new OpenstreetmapLocalUtil(ctx);\n\t\t} else {\n\t\t\tthis.openstreetmapUtil = new OpenstreetmapRemoteUtil(ctx);\n\t\t}\n\t}","id":82564,"modified_method":"public EditingPOIActivity(MapActivity uiContext){\n\t\tthis.ctx = uiContext;\n\n\t\tOsmandSettings settings = OsmandSettings.getOsmandSettings(ctx);\n\t\tif(!settings.isInternetConnectionAvailable(true)){\n\t\t\tthis.openstreetmapUtil = new OpenstreetmapLocalUtil(ctx);\n\t\t} else {\n\t\t\tthis.openstreetmapUtil = new OpenstreetmapRemoteUtil(ctx, ctx.getMapView());\n\t\t}\n\t}","commit_id":"db007efb75be810a5083e446d972926c2c3d4072","url":"https://github.com/osmandapp/Osmand"},{"original_method":"@SuppressWarnings(\"unchecked\")\n\t@Override\n\tprotected void onCreate(Bundle savedInstanceState) {\n\t\tsuper.onCreate(savedInstanceState);\n\n\t\tsetContentView(R.layout.local_openstreetmap);\n\t\tsettings = OsmandSettings.getOsmandSettings(this);\n\t}","id":82565,"modified_method":"@SuppressWarnings(\"unchecked\")\n\t@Override\n\tprotected void onCreate(Bundle savedInstanceState) {\n\t\tsuper.onCreate(savedInstanceState);\n\n\t\tsetContentView(R.layout.local_openstreetmap);\n\t\tsettings = OsmandSettings.getOsmandSettings(this);\n\t\tlistAdapter = new LocalOpenstreetmapAdapter();\n\n\t\tgetExpandableListView().setOnCreateContextMenuListener(new View.OnCreateContextMenuListener() {\n\t\t\t@Override\n\t\t\tpublic void onCreateContextMenu(ContextMenu menu, View v, ContextMenuInfo menuInfo) {\n\t\t\t\tlong packedPos = ((ExpandableListContextMenuInfo)menuInfo).packedPosition;\n\t\t\t\tint group = ExpandableListView.getPackedPositionGroup(packedPos);\n\t\t\t\tint child = ExpandableListView.getPackedPositionChild(packedPos);\n\t\t\t\tif (child >= 0 && group >= 0) {\n\t\t\t\t\tfinal OpenstreetmapPoint point = (OpenstreetmapPoint) listAdapter.getChild(group, child);\n\t\t\t\t\tshowContextMenu(point);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t\n\t\tsetListAdapter(listAdapter);\n\n\t\tdb = new OpenstreetmapsDbHelper(this);\n\t\tList<OpenstreetmapPoint> l = db.getOpenstreetmapPoints();\n\t\tandroid.util.Log.d(LogUtil.TAG, \"List of POI \" + l.size() + \" length\");\n\t\tfor (OpenstreetmapPoint p : l) {\n\t\t\tlistAdapter.addOpenstreetmapPoint(p);\n\t\t}\n\t\tlistAdapter.notifyDataSetChanged();\n\t}","commit_id":"db007efb75be810a5083e446d972926c2c3d4072","url":"https://github.com/osmandapp/Osmand"},{"original_method":"public OpenstreetmapLocalUtil(MapActivity uiContext){\n\t\tthis.ctx = uiContext;\n\t\tthis.db = new OpenstreetmapsDbHelper(ctx);\n\t}","id":82566,"modified_method":"public OpenstreetmapLocalUtil(Context uiContext){\n\t\tthis.ctx = uiContext;\n\t\tthis.db = new OpenstreetmapsDbHelper(ctx);\n\t}","commit_id":"db007efb75be810a5083e446d972926c2c3d4072","url":"https://github.com/osmandapp/Osmand"},{"original_method":"public String getOpeninghours() {\n\t\treturn entity.getTag(OSMTagKey.OPENING_HOURS.getValue());\n\t}","id":82567,"modified_method":"public String getOpeninghours() {\n\t\tString ret = entity.getTag(OSMTagKey.OPENING_HOURS.getValue());\n\t\tif (ret == null)\n\t\t\treturn \"\";\n\t\treturn entity.getTag(ret);\n\t}","commit_id":"db007efb75be810a5083e446d972926c2c3d4072","url":"https://github.com/osmandapp/Osmand"},{"original_method":"public String getName() {\n\t\treturn entity.getTag(OSMTagKey.NAME.getValue());\n\t}","id":82568,"modified_method":"public String getName() {\n\t\tString ret = entity.getTag(OSMTagKey.NAME.getValue());\n\t\tif (ret == null)\n\t\t\treturn \"\";\n\t\treturn ret;\n\t}","commit_id":"db007efb75be810a5083e446d972926c2c3d4072","url":"https://github.com/osmandapp/Osmand"},{"original_method":"public OpenstreetmapRemoteUtil(MapActivity uiContext){\n\t\tthis.ctx = uiContext;\n\t}","id":82569,"modified_method":"public OpenstreetmapRemoteUtil(Context uiContext, View view){\n\t\tthis.ctx = uiContext;\n\t\tthis.view = view;\n\t}","commit_id":"db007efb75be810a5083e446d972926c2c3d4072","url":"https://github.com/osmandapp/Osmand"},{"original_method":"private void showWarning(final String msg){\n\t\tctx.getMapView().post(new Runnable(){\n\t\t\t@Override\n\t\t\tpublic void run() {\n\t\t\t\tToast.makeText(ctx, msg, Toast.LENGTH_LONG).show();\n\t\t\t}\n\t\t});\n\t}","id":82570,"modified_method":"private void showWarning(final String msg){\n\t\tview.post(new Runnable(){\n\t\t\t@Override\n\t\t\tpublic void run() {\n\t\t\t\tToast.makeText(ctx, msg, Toast.LENGTH_LONG).show();\n\t\t\t}\n\t\t});\n\t}","commit_id":"db007efb75be810a5083e446d972926c2c3d4072","url":"https://github.com/osmandapp/Osmand"},{"original_method":"private void checkOpenstreetmapPoints(){\n\t\tSQLiteDatabase db = getWritableDatabase();\n\t\tif (db != null) {\n\t\t\tCursor query = db.rawQuery(\"SELECT \" + OPENSTREETMAP_COL_ID + \", \" + OPENSTREETMAP_COL_NAME + \", \" + OPENSTREETMAP_COL_TYPE + \", \" + OPENSTREETMAP_COL_SUBTYPE + \", \" + OPENSTREETMAP_COL_LAT + \",\" + OPENSTREETMAP_COL_LON + \",\" + OPENSTREETMAP_COL_ACTION + \",\" + OPENSTREETMAP_COL_COMMENT + \",\" + OPENSTREETMAP_COL_OPENINGHOURS + \" FROM \" + //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ \n\t\t\t\t\tOPENSTREETMAP_TABLE_NAME, null);\n\t\t\tcachedOpenstreetmapPoints.clear();\n\t\t\tif (query.moveToFirst()) {\n\t\t\t\tdo {\n\t\t\t\t\tString name = query.getString(1);\n\t\t\t\t\tOpenstreetmapPoint p = new OpenstreetmapPoint();\n\t\t\t\t\tNode entity = new Node(query.getDouble(4),\n\t\t\t\t\t\t\t\t\t\t   query.getDouble(5),\n\t\t\t\t\t\t\t\t\t\t   query.getLong(0));\n\n\t\t\t\t\tentity.putTag(query.getString(2), query.getString(3));\n\t\t\t\t\tentity.putTag(OSMTagKey.NAME.getValue(), name);\n\t\t\t\t\tentity.putTag(OSMTagKey.OPENING_HOURS.getValue(), query.getString(8));\n\t\t\t\t\tp.setEntity(entity);\n\t\t\t\t\tp.setStored(true);\n\t\t\t\t\tp.setAction(query.getString(6));\n\t\t\t\t\tp.setComment(query.getString(7));\n\t\t\t\t} while (query.moveToNext());\n\t\t\t}\n\t\t\tquery.close();\n\t\t}\n\t}","id":82571,"modified_method":"private void checkOpenstreetmapPoints(){\n\t\tSQLiteDatabase db = getWritableDatabase();\n\t\tif (db != null) {\n\t\t\tCursor query = db.rawQuery(\"SELECT \" + OPENSTREETMAP_COL_ID + \", \" + OPENSTREETMAP_COL_NAME + \", \" + OPENSTREETMAP_COL_TYPE + \", \" + OPENSTREETMAP_COL_SUBTYPE + \", \" + OPENSTREETMAP_COL_LAT + \",\" + OPENSTREETMAP_COL_LON + \",\" + OPENSTREETMAP_COL_ACTION + \",\" + OPENSTREETMAP_COL_COMMENT + \",\" + OPENSTREETMAP_COL_OPENINGHOURS + \" FROM \" + //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ \n\t\t\t\t\tOPENSTREETMAP_TABLE_NAME, null);\n\t\t\tcachedOpenstreetmapPoints.clear();\n\t\t\tif (query.moveToFirst()) {\n\t\t\t\tdo {\n\t\t\t\t\tString name = query.getString(1);\n\t\t\t\t\tOpenstreetmapPoint p = new OpenstreetmapPoint();\n\t\t\t\t\tNode entity = new Node(query.getDouble(4),\n\t\t\t\t\t\t\t\t\t\t   query.getDouble(5),\n\t\t\t\t\t\t\t\t\t\t   query.getLong(0));\n\n\t\t\t\t\tentity.putTag(query.getString(2), query.getString(3));\n\t\t\t\t\tentity.putTag(OSMTagKey.NAME.getValue(), name);\n\t\t\t\t\tString openingHours = query.getString(8);\n\t\t\t\t\tif (openingHours != null && openingHours.length() > 0)\n\t\t\t\t\t\tentity.putTag(OSMTagKey.OPENING_HOURS.getValue(), openingHours);\n\t\t\t\t\tp.setEntity(entity);\n\t\t\t\t\tp.setStored(true);\n\t\t\t\t\tp.setAction(query.getString(6));\n\t\t\t\t\tp.setComment(query.getString(7));\n\t\t\t\t\tcachedOpenstreetmapPoints.add(p);\n\t\t\t\t} while (query.moveToNext());\n\t\t\t}\n\t\t\tquery.close();\n\t\t}\n\t}","commit_id":"db007efb75be810a5083e446d972926c2c3d4072","url":"https://github.com/osmandapp/Osmand"},{"original_method":"public void visitXmlTagChildRemoved(final XmlTagChildRemoved xmlTagChildRemoved) {\n    clearParentCaches(xmlTagChildRemoved.getTag());\n  }","id":82572,"modified_method":"public void visitXmlTagChildRemoved(final XmlTagChildRemoved xmlTagChildRemoved) {\n    final XmlTag tag = xmlTagChildRemoved.getTag();\n    final AntFile antFile = getAntFile(tag);\n    if (antFile != null) {\n      antFile.clearCachesWithTypeDefinitions();\n    }\n    else {\n      clearParentCaches(tag);\n    }\n  }","commit_id":"6a329e528b4111e68e3c4fbe4171af53863b3581","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void clearParentCaches(final XmlElement el) {\n    final TextRange textRange = el.getTextRange();\n    final AntFile file = getAntFile(el);\n    if (file == null) {\n      return;\n    }\n    AntElement element = file.lightFindElementAt(textRange.getStartOffset());\n    final boolean shouldInvalidateProperties = element instanceof AntProperty;\n    if (element instanceof AntTypeDef) {\n      ((AntTypeDef)element).clearClassesCache();\n    }\n    if (element != null && element.isValid()) {\n      if (element instanceof AntMacroDef || element instanceof AntPresetDef || element instanceof AntScriptDef) {\n        element.clearCaches();\n      }\n    }\n    if (element != null) {\n      do{\n        element = element.getAntParent();\n      }\n      while (element != null && !(element instanceof AntFile) && (!element.isValid() || element.getTextLength() <= textRange.getLength() || element instanceof AntOuterProjectElement));\n    }\n\n    if (element == null) {\n      element = file;\n    }\n    synchronized (PsiLock.LOCK) {\n      element.clearCaches();\n      if (shouldInvalidateProperties) {\n        file.invalidateProperties();\n      }\n      final AntMacroDef macrodef = PsiTreeUtil.getParentOfType(element, AntMacroDef.class, false, true);\n      if (macrodef != null) {\n        macrodef.clearCaches();\n      }\n      final AntPresetDef presetdef = PsiTreeUtil.getParentOfType(element, AntPresetDef.class, false, true);\n      if (presetdef != null) {\n        presetdef.clearCaches();\n      }\n      final AntScriptDef scriptdef = PsiTreeUtil.getParentOfType(element, AntScriptDef.class, false, true);\n      if (scriptdef != null) {\n        scriptdef.clearCaches();\n      }\n      final AntTypeDef typeDef = PsiTreeUtil.getParentOfType(element, AntTypeDef.class, false, true);\n      if (typeDef != null) {\n        typeDef.clearCaches();\n      }\n    }\n    updateBuildFile(file);\n  }","id":82573,"modified_method":"private static void clearParentCaches(final XmlElement el) {\n    final TextRange textRange = el.getTextRange();\n    final AntFile file = getAntFile(el);\n    if (file == null) {\n      return;\n    }\n    AntElement element = file.lightFindElementAt(textRange.getStartOffset());\n    final boolean shouldInvalidateProperties = element instanceof AntProperty;\n\n    if (element instanceof AntDefTask) {\n      if (element.isValid()) {\n        element.clearCaches();\n      }\n      else {\n        ((AntDefTask)element).clearClassesCache();\n      }\n    }\n\n    if (element != null) {\n      do{\n        element = element.getAntParent();\n      }\n      while (element != null && !(element instanceof AntFile) && (!element.isValid() || element.getTextLength() <= textRange.getLength() || element instanceof AntOuterProjectElement));\n    }\n\n    if (element == null) {\n      element = file;\n    }\n    synchronized (PsiLock.LOCK) {\n      element.clearCaches();\n      if (shouldInvalidateProperties) {\n        file.invalidateProperties();\n      }\n      final AntMacroDef macrodef = PsiTreeUtil.getParentOfType(element, AntMacroDef.class, false, true);\n      if (macrodef != null) {\n        macrodef.clearCaches();\n      }\n      final AntPresetDef presetdef = PsiTreeUtil.getParentOfType(element, AntPresetDef.class, false, true);\n      if (presetdef != null) {\n        presetdef.clearCaches();\n      }\n      final AntScriptDef scriptdef = PsiTreeUtil.getParentOfType(element, AntScriptDef.class, false, true);\n      if (scriptdef != null) {\n        scriptdef.clearCaches();\n      }\n      final AntTypeDef typeDef = PsiTreeUtil.getParentOfType(element, AntTypeDef.class, false, true);\n      if (typeDef != null) {\n        typeDef.clearCaches();\n      }\n    }\n    updateBuildFile(file);\n  }","commit_id":"6a329e528b4111e68e3c4fbe4171af53863b3581","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public Object[] getVariants() {\n    AntStructuredElement parent = (AntStructuredElement)getElement().getAntParent();\n    if (parent == null) {\n      return EMPTY_ARRAY;\n    }\n    AntTypeDefinition def = parent.getTypeDefinition();\n    if (def == null) {\n      def = parent.getAntProject().getTypeDefinition();\n      if (def == null) {\n        return EMPTY_ARRAY;\n      }\n    }\n    final AntFile antFile = parent.getAntFile();\n    final Project project = antFile.getProject();\n    final Set<PsiElement> ids = PsiElementSetSpinAllocator.alloc();\n    try {\n      for (final AntTypeId id : def.getNestedElements()) {\n        ids.add(new AntElementCompletionWrapper(parent, id.getName() + \" \", project, AntElementRole.TASK_ROLE));\n      }\n      if (def.isAllTaskContainer()) {\n        for (final AntTypeDefinition _def : antFile.getBaseTypeDefinitions()) {\n          if (_def.isTask()) {\n            ids.add(new AntElementCompletionWrapper(parent, _def.getTypeId().getName() + \" \", project, AntElementRole.TASK_ROLE));\n          }\n        }\n      }\n      return ids.toArray(new Object[ids.size()]);\n    }\n    finally {\n      PsiElementSetSpinAllocator.dispose(ids);\n    }\n  }","id":82574,"modified_method":"public Object[] getVariants() {\n    final AntStructuredElement parent = (AntStructuredElement)getElement().getAntParent();\n    if (parent == null) {\n      return EMPTY_ARRAY;\n    }\n    AntTypeDefinition def = parent.getTypeDefinition();\n    if (def == null) {\n      def = parent.getAntProject().getTypeDefinition();\n      if (def == null) {\n        return EMPTY_ARRAY;\n      }\n    }\n    final AntFile antFile = parent.getAntFile();\n    final Project project = antFile.getProject();\n    final Set<PsiElement> ids = PsiElementSetSpinAllocator.alloc();\n    try {\n      for (final AntTypeId id : def.getNestedElements()) {\n        ids.add(new AntElementCompletionWrapper(parent, id.getName() + \" \", project, AntElementRole.TASK_ROLE));\n      }\n      if (def.isAllTaskContainer()) {\n        new Object() {\n          final Set<AntFile> processedFiles = new HashSet<AntFile>();\n          final Set<AntTypeId> processedTypes = new HashSet<AntTypeId>();\n          \n          void walkFiles(AntFile file) {\n            if (processedFiles.contains(file)) {\n              return;  \n            }\n            processedFiles.add(file);\n\n            for (final AntTypeDefinition _def : file.getBaseTypeDefinitions()) {\n              if (_def.isTask()) {\n                final AntTypeId typeId = _def.getTypeId();\n                if (!processedTypes.contains(typeId)) {\n                  processedTypes.add(typeId);\n                  ids.add(new AntElementCompletionWrapper(parent, typeId.getName() + \" \", project, AntElementRole.TASK_ROLE));\n                }\n              }\n            }\n\n            for (AntFile imported : file.getAntProject().getImportedFiles()) {\n              walkFiles(imported);\n            }\n          }\n        }.walkFiles(antFile);\n      }\n      return ids.toArray(new Object[ids.size()]);\n    }\n    finally {\n      PsiElementSetSpinAllocator.dispose(ids);\n    }\n  }","commit_id":"6a329e528b4111e68e3c4fbe4171af53863b3581","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public PsiElement resolveInner() {\n    final AntStructuredElement element = getElement();\n    final AntTypeDefinition elementDef = element.getTypeDefinition();\n    if (elementDef != null) {\n      final PsiElement definingElement = elementDef.getDefiningElement();\n      if (element.isPresetDefined() || element.isTypeDefined()) {\n        return definingElement;\n      }\n      if (!(element instanceof AntTask)) {\n        return (definingElement == null) ? findClass(elementDef, element) : definingElement;\n      }\n      AntTask task = (AntTask)element;\n      if (task.isMacroDefined() || task.isScriptDefined()) {\n        final XmlAttribute attr = getAttribute();\n        if (definingElement != null && attr != null) {\n          for (PsiElement child : definingElement.getChildren()) {\n            if (child instanceof AntStructuredElement && attr.getName().equals(((AntStructuredElement)child).getName())) {\n              return child;\n            }\n          }\n        }\n        return definingElement;\n      }\n      return findClass(elementDef, element);\n    }\n    return null;\n  }","id":82575,"modified_method":"public PsiElement resolveInner() {\n    final AntStructuredElement element = getElement();\n    final AntTypeDefinition elementDef = element.getTypeDefinition();\n    if (elementDef != null) {\n      final PsiElement definingElement = elementDef.getDefiningElement();\n      if (element.isPresetDefined() || element.isTypeDefined()) {\n        return definingElement;\n      }\n      if (!(element instanceof AntTask)) {\n        return (definingElement == null) ? findClass(elementDef, element) : definingElement;\n      }\n      AntTask task = (AntTask)element;\n      if (task.isMacroDefined() || task.isScriptDefined()) {\n        final XmlAttribute attr = getAttribute();\n        if (definingElement != null && attr != null) {\n          final String attribName = attr.getName();\n          for (PsiElement child : definingElement.getChildren()) {\n            if (child instanceof AntStructuredElement && attribName.equals(((AntStructuredElement)child).getName())) {\n              return child;\n            }\n          }\n        }\n        return definingElement;\n      }\n      return findClass(elementDef, element);\n    }\n    return null;\n  }","commit_id":"6a329e528b4111e68e3c4fbe4171af53863b3581","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void clearCaches() {\n    synchronized (PsiLock.LOCK) {\n      super.clearCaches();\n      final AntFile file = getAntFile();\n      if (myMacroDefinition != null) {\n        for (AntTypeId id : myMacroDefinition.getNestedElements()) {\n          final AntTypeDefinition nestedDef = file.getBaseTypeDefinition(myMacroDefinition.getNestedClassName(id));\n          if (nestedDef != null) {\n            file.unregisterCustomType(nestedDef);\n          }\n        }\n        final AntStructuredElement parent = getAntProject();\n        if (parent != null) {\n          parent.unregisterCustomType(myMacroDefinition);\n        }\n        myMacroDefinition = null;\n      }\n      file.clearCaches();\n    }\n  }","id":82576,"modified_method":"public void clearCaches() {\n    synchronized (PsiLock.LOCK) {\n      super.clearCaches();\n      clearClassesCache();\n      getAntFile().clearCaches();\n    }\n  }","commit_id":"6a329e528b4111e68e3c4fbe4171af53863b3581","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void clearCaches() {\n    synchronized (PsiLock.LOCK) {\n      super.clearCaches();\n      if (myPresetDefinition != null) {\n        final AntStructuredElement parent = getAntProject();\n        if (parent != null) {\n          parent.unregisterCustomType(myPresetDefinition);\n        }\n        myPresetDefinition = null;\n      }\n      getAntFile().clearCaches();\n    }\n  }","id":82577,"modified_method":"public void clearCaches() {\n    synchronized (PsiLock.LOCK) {\n      super.clearCaches();\n      clearClassesCache();\n      getAntFile().clearCaches();\n    }\n  }","commit_id":"6a329e528b4111e68e3c4fbe4171af53863b3581","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void clearCaches() {\n    synchronized (PsiLock.LOCK) {\n      super.clearCaches();\n      final AntFile file = getAntFile();\n      if (myScriptDefinition != null) {\n        for (AntTypeId id : myScriptDefinition.getNestedElements()) {\n          final AntTypeDefinition nestedDef = file.getBaseTypeDefinition(myScriptDefinition.getNestedClassName(id));\n          if (nestedDef != null) {\n            file.unregisterCustomType(nestedDef);\n          }\n        }\n        final AntStructuredElement parent = getAntProject();\n        if (parent != null) {\n          parent.unregisterCustomType(myScriptDefinition);\n        }\n        myScriptDefinition = null;\n      }\n      file.clearCaches();\n    }\n  }","id":82578,"modified_method":"public void clearCaches() {\n    synchronized (PsiLock.LOCK) {\n      super.clearCaches();\n      final AntFile file = getAntFile();\n      clearClassesCache();\n      file.clearCaches();\n    }\n  }","commit_id":"6a329e528b4111e68e3c4fbe4171af53863b3581","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void clearClassesCache() {\n    synchronized(PsiLock.LOCK) {\n      if (myNewDefinitions != null) {\n        final AntStructuredElement parent = getAntParent();\n        if (parent != null) {\n          final AntProject antProject = !(parent instanceof AntProject)? parent.getAntProject() : null;\n          for (final AntTypeDefinition def : myNewDefinitions) {\n            parent.unregisterCustomType(def);\n            if (antProject != null) {\n              antProject.unregisterCustomType(def);\n            }\n          }\n        }\n        myNewDefinitions = null;\n        myClassesLoaded = false;\n      }\n    }\n  }","id":82579,"modified_method":"public void clearClassesCache() {\n    synchronized(PsiLock.LOCK) {\n      if (myNewDefinitions != null) {\n        final AntStructuredElement parent = getAntParent();\n        if (parent != null) {\n          final AntProject antProject = !(parent instanceof AntProject)? parent.getAntProject() : null;\n          for (final AntTypeDefinition def : myNewDefinitions) {\n            parent.unregisterCustomType(def);\n            if (antProject != null) {\n              antProject.unregisterCustomType(def);\n            }\n          }\n        }\n        myNewDefinitions = null;\n        //myClassesLoaded = false;\n      }\n    }\n  }","commit_id":"6a329e528b4111e68e3c4fbe4171af53863b3581","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  public AntTypeDefinition[] getDefinitions() {\n    synchronized (PsiLock.LOCK) {\n      if (myNewDefinitions == null) {\n        myNewDefinitions = AntTypeDefinition.EMPTY_ARRAY;\n        final String classname = getClassName();\n        if (classname != null) {\n          final AntStructuredElement parent = getAntParent();\n          final AntFile antFile = parent != null? parent.getAntFile() : null;\n          loadClass(antFile, classname, getDefinedName(), getUri(),getAntParent());\n        }\n        else {\n          final String resource = getResource();\n          if (resource != null) {\n            loadResource(resource);\n          }\n          else {\n            final String file = getFile();\n            if (file != null) {\n              loadFile(file);\n            }\n          }\n        }\n      }\n      return myNewDefinitions;\n    }\n  }","id":82580,"modified_method":"@NotNull\n  public AntTypeDefinition[] getDefinitions() {\n    synchronized (PsiLock.LOCK) {\n      if (myNewDefinitions == null || (!typesLoaded() && myLocalizedError == null /*don't give up loading until the error occurres or types are loaded*/)) {\n        myNewDefinitions = AntTypeDefinition.EMPTY_ARRAY;\n        final String classname = getClassName();\n        if (classname != null) {\n          final AntStructuredElement parent = getAntParent();\n          final AntFile antFile = parent != null? parent.getAntFile() : null;\n          loadClass(antFile, classname, getDefinedName(), getUri(),getAntParent());\n        }\n        else {\n          final String resource = getResource();\n          if (resource != null) {\n            loadResource(resource);\n          }\n          else {\n            final String file = getFile();\n            if (file != null) {\n              loadFile(file);\n            }\n          }\n        }\n      }\n      return myNewDefinitions;\n    }\n  }","commit_id":"6a329e528b4111e68e3c4fbe4171af53863b3581","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static Iterable<SNode> collectYieldStatements(SNode node) {\n    Iterable<SNode> yieldStatements = ListSequence.fromList(SNodeOperations.getChildren(node)).translate(new ITranslator2 <SNode, SNode>() {\n\n      public Iterable<SNode> translate(final SNode it) {\n        return new Iterable <SNode>() {\n\n          public Iterator<SNode> iterator() {\n            return new YieldingIterator <SNode>() {\n\n              private int __CP__ = 0;\n              private SNode _11_yieldStmt;\n              private Iterator<SNode> _11_yieldStmt_it;\n\n              protected boolean moveToNext() {\n__loop__:\n                do {\n__switch__:\n                  switch (this.__CP__) {\n                    case -1:\n                      assert false : \"Internal error\";\n                      return false;\n                    case 11:\n                      this._11_yieldStmt_it = Sequence.fromIterable(collectYieldStatements(it)).iterator();\n                    case 12:\n                      if (!(this._11_yieldStmt_it.hasNext())) {\n                        this.__CP__ = 3;\n                        break;\n                      }\n                      this._11_yieldStmt = this._11_yieldStmt_it.next();\n                      this.__CP__ = 13;\n                      break;\n                    case 4:\n                      if (SNodeOperations.isInstanceOf(it, \"jetbrains.mps.baseLanguage.collections.structure.TraversalYieldStatement\")) {\n                        this.__CP__ = 5;\n                        break;\n                      }\n                      this.__CP__ = 7;\n                      break;\n                    case 7:\n                      if (SNodeOperations.isInstanceOf(it, \"jetbrains.mps.baseLanguage.structure.ConceptFunction\") || SNodeOperations.isInstanceOf(it, \"jetbrains.mps.baseLanguage.structure.CommentedStatementsBlock\")) {\n                        this.__CP__ = 8;\n                        break;\n                      }\n                      this.__CP__ = 10;\n                      break;\n                    case 3:\n                      if (false) {\n                        this.__CP__ = 2;\n                        break;\n                      }\n                      this.__CP__ = 1;\n                      break;\n                    case 6:\n                      this.__CP__ = 3;\n                      this.yield(it);\n                      return true;\n                    case 14:\n                      this.__CP__ = 12;\n                      this.yield(this._11_yieldStmt);\n                      return true;\n                    case 2:\n                      this.__CP__ = 4;\n                      break;\n                    case 5:\n                      this.__CP__ = 6;\n                      break;\n                    case 8:\n                      //                       don't look inside closures and other code-blocks\n                      //                       don't look inside commented statements\n                      this.__CP__ = 1;\n                      break;\n                    case 10:\n                      this.__CP__ = 11;\n                      break;\n                    case 13:\n                      this.__CP__ = 14;\n                      break;\n                    case 0:\n                      this.__CP__ = 2;\n                      break;\n                    default:\n                      break __loop__;\n                  }\n                } while(true);\n                return false;\n              }\n            };\n          }\n        };\n      }\n    });\n    return yieldStatements;\n  }","id":82581,"modified_method":"public static Iterable<SNode> collectYieldStatements(SNode node) {\n    Iterable<SNode> yieldStatements = ListSequence.fromList(SNodeOperations.getChildren(node)).translate(new ITranslator2 <SNode, SNode>() {\n\n      public Iterable<SNode> translate(final SNode it) {\n        return new Iterable <SNode>() {\n\n          public Iterator<SNode> iterator() {\n            return new YieldingIterator <SNode>() {\n\n              private int __CP__ = 0;\n              private SNode _11_yieldStmt;\n              private Iterator<SNode> _11_yieldStmt_it;\n\n              protected boolean moveToNext() {\n__loop__:\n                do {\n__switch__:\n                  switch (this.__CP__) {\n                    case -1:\n                      assert false : \"Internal error\";\n                      return false;\n                    case 11:\n                      this._11_yieldStmt_it = Sequence.fromIterable(collectYieldStatements(it)).iterator();\n                    case 12:\n                      if (!(this._11_yieldStmt_it.hasNext())) {\n                        this.__CP__ = 3;\n                        break;\n                      }\n                      this._11_yieldStmt = this._11_yieldStmt_it.next();\n                      this.__CP__ = 13;\n                      break;\n                    case 4:\n                      if (SNodeOperations.isInstanceOf(it, \"jetbrains.mps.baseLanguage.collections.structure.TraversalYieldStatement\")) {\n                        this.__CP__ = 5;\n                        break;\n                      }\n                      this.__CP__ = 7;\n                      break;\n                    case 7:\n                      if (SNodeOperations.isInstanceOf(it, \"jetbrains.mps.baseLanguage.structure.ConceptFunction\") || SNodeOperations.isInstanceOf(it, \"jetbrains.mps.baseLanguage.structure.CommentedStatementsBlock\")) {\n                        this.__CP__ = 8;\n                        break;\n                      }\n                      this.__CP__ = 10;\n                      break;\n                    case 3:\n                      if (false) {\n                        this.__CP__ = 2;\n                        break;\n                      }\n                      this.__CP__ = 1;\n                      break;\n                    case 6:\n                      this.__CP__ = 3;\n                      this.yield(SNodeOperations.cast(it, \"jetbrains.mps.baseLanguage.collections.structure.TraversalYieldStatement\"));\n                      return true;\n                    case 14:\n                      this.__CP__ = 12;\n                      this.yield(this._11_yieldStmt);\n                      return true;\n                    case 2:\n                      this.__CP__ = 4;\n                      break;\n                    case 5:\n                      this.__CP__ = 6;\n                      break;\n                    case 8:\n                      //                       don't look inside closures and other code-blocks\n                      //                       don't look inside commented statements\n                      this.__CP__ = 1;\n                      break;\n                    case 10:\n                      this.__CP__ = 11;\n                      break;\n                    case 13:\n                      this.__CP__ = 14;\n                      break;\n                    case 0:\n                      this.__CP__ = 2;\n                      break;\n                    default:\n                      break __loop__;\n                  }\n                } while(true);\n                return false;\n              }\n            };\n          }\n        };\n      }\n    });\n    return yieldStatements;\n  }","commit_id":"62ebe53ec7d60edc46867867f4bb49ef7478cc4e","url":"https://github.com/JetBrains/MPS"},{"original_method":"@CheckingMethod()\n  public static SNode getInput(final TypeCheckingContext typeCheckingContext, SNode op) {\n    SNode input = null;\n    SNode parent = SNodeOperations.getParent(op);\n    if (SNodeOperations.isInstanceOf(parent, \"jetbrains.mps.baseLanguage.structure.DotExpression\")) {\n      input = SLinkOperations.getTarget(parent, \"operand\", true);\n    } else\n    {\n      {\n        BaseIntentionProvider intentionProvider = null;\n        IErrorTarget errorTarget = new NodeErrorTarget();\n        typeCheckingContext.reportTypeError(op, \"not expected here\", \"r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)\", \"1184783963366\", intentionProvider, errorTarget);\n      }\n    }\n    return input;\n  }","id":82582,"modified_method":"@CheckingMethod()\n  public static SNode getInput(final TypeCheckingContext typeCheckingContext, SNode op) {\n    SNode input = null;\n    SNode parent = SNodeOperations.getParent(op);\n    if (SNodeOperations.isInstanceOf(parent, \"jetbrains.mps.baseLanguage.structure.DotExpression\")) {\n      input = SLinkOperations.getTarget(SNodeOperations.cast(parent, \"jetbrains.mps.baseLanguage.structure.DotExpression\"), \"operand\", true);\n    } else\n    {\n      {\n        BaseIntentionProvider intentionProvider = null;\n        IErrorTarget errorTarget = new NodeErrorTarget();\n        typeCheckingContext.reportTypeError(op, \"not expected here\", \"r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)\", \"1184783963366\", intentionProvider, errorTarget);\n      }\n    }\n    return input;\n  }","commit_id":"62ebe53ec7d60edc46867867f4bb49ef7478cc4e","url":"https://github.com/JetBrains/MPS"},{"original_method":"@InferenceMethod()\n  public static void isInputElementType(final TypeCheckingContext typeCheckingContext, SNode op, SNode target) {\n    //     1. Take input expression\n    //     2. Assert that it is coerceable to sequence\n    //     3. Assert that target has sequence element type\n    SNode input = getInput(typeCheckingContext, op);\n    if ((input != null)) {\n      final SNode elementType_typevar_1184850451264 = typeCheckingContext.createNewRuntimeTypesVariable();\n      {\n        SNode _nodeToCheck_1029348928467 = null;\n        BaseIntentionProvider intentionProvider = null;\n        typeCheckingContext.createLessThanInequation(typeCheckingContext.typeOf(input, \"r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)\", \"1184850451271\", true), new _Quotations.QuotationClass_3().createNode(typeCheckingContext.getEquationManager().getRepresentator(elementType_typevar_1184850451264), typeCheckingContext), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)\", \"1184850451265\", false, 0, intentionProvider);\n      }\n      {\n        SNode _nodeToCheck_1029348928467 = null;\n        BaseIntentionProvider intentionProvider = null;\n        typeCheckingContext.createLessThanInequation(typeCheckingContext.typeOf(target, \"r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)\", \"1184850492037\", true), typeCheckingContext.getEquationManager().getRepresentator(elementType_typevar_1184850451264), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)\", \"1184850492036\", false, 0, intentionProvider);\n      }\n    }\n  }","id":82583,"modified_method":"@InferenceMethod()\n  public static void isInputElementType(final TypeCheckingContext typeCheckingContext, SNode op, SNode target) {\n    //     1. Take input expression\n    //     2. Assert that it is coerceable to sequence\n    //     3. Assert that target has sequence element type\n    SNode input = getInput(typeCheckingContext, op);\n    if ((input != null)) {\n      final SNode elementType_typevar_1184850451264 = typeCheckingContext.createNewRuntimeTypesVariable();\n      {\n        SNode _nodeToCheck_1029348928467 = null;\n        BaseIntentionProvider intentionProvider = null;\n        typeCheckingContext.createLessThanInequation(typeCheckingContext.typeOf(input, \"r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)\", \"1184850451271\", true), new _Quotations.QuotationClass_3().createNode(typeCheckingContext.getEquationManager().getRepresentator(elementType_typevar_1184850451264), typeCheckingContext), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)\", \"1184850451265\", false, 0, intentionProvider);\n      }\n      {\n        SNode _nodeToCheck_1029348928467 = target;\n        BaseIntentionProvider intentionProvider = null;\n        typeCheckingContext.createLessThanInequation(typeCheckingContext.typeOf(target, \"r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)\", \"1184850492037\", true), typeCheckingContext.getEquationManager().getRepresentator(elementType_typevar_1184850451264), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)\", \"1184850492036\", false, 0, intentionProvider);\n      }\n    }\n  }","commit_id":"62ebe53ec7d60edc46867867f4bb49ef7478cc4e","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static SNode getOutput(SNode op) {\n    SNode output = null;\n    SNode parent = SNodeOperations.getParent(op);\n    if (SNodeOperations.isInstanceOf(parent, \"jetbrains.mps.baseLanguage.structure.DotExpression\")) {\n      output = SLinkOperations.getTarget(parent, \"operation\", true);\n      return output;\n    } else\n    {\n      return null;\n    }\n  }","id":82584,"modified_method":"public static SNode getOutput(SNode op) {\n    SNode output = null;\n    SNode parent = SNodeOperations.getParent(op);\n    if (SNodeOperations.isInstanceOf(parent, \"jetbrains.mps.baseLanguage.structure.DotExpression\")) {\n      output = SNodeOperations.as(SLinkOperations.getTarget(SNodeOperations.cast(parent, \"jetbrains.mps.baseLanguage.structure.DotExpression\"), \"operation\", true), \"jetbrains.mps.baseLanguage.collections.structure.SequenceOperation\");\n      return output;\n    } else\n    {\n      return null;\n    }\n  }","commit_id":"62ebe53ec7d60edc46867867f4bb49ef7478cc4e","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static SNode coerceTo_SequenceType(SNode type) {\n    SNode sequenceType = TypeChecker.getInstance().getRuntimeSupport().coerce_(type, HUtil.createMatchingPatternByConceptFQName(\"jetbrains.mps.baseLanguage.collections.structure.SequenceType\"), true);\n    if (sequenceType != null) {\n      return sequenceType;\n    }\n    if (sequenceType == null) {\n      return null;\n    }\n    //     the following code is not reachable \n    if (type == null) {\n      return null;\n    }\n    //     ==========\n    //     TEMP FIX FOR DNQ 1\n    if (\"jetbrains.teamsys.dnq.structure.PListType\".equals(type.getConceptFqName())) {\n      SNode classifierType = type.getChild(\"classifierType\");\n      return new _Quotations.QuotationClass_39().createNode(SNodeOperations.copyNode(classifierType));\n    }\n    //     END TEMP FIX\n    //     ==========\n    //     ==========\n    //     TEMP FIX FOR DNQ\n    //     TODO: extract generics information\n    if (type != null) {\n      SModel model = TypeChecker.getInstance().getRuntimeTypesModel();\n      GlobalScope scope = GlobalScope.getInstance();\n      SNode entity = SModelUtil.findNodeByFQName(\"com.jetbrains.teamsys.database.Entity\", SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.Classifier\"), scope);\n      if (entity == null) {\n        return null;\n      }\n      SNode entityType = SModelOperations.createNewNode(model, \"jetbrains.mps.baseLanguage.structure.ClassifierType\", null);\n      SLinkOperations.setTarget(entityType, \"classifier\", entity, false);\n      SNode javaIterable = SModelUtil.findNodeByFQName(\"java.lang.Iterable\", SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.Classifier\"), scope);\n      SNode javaIterableType = SModelOperations.createNewNode(model, \"jetbrains.mps.baseLanguage.structure.ClassifierType\", null);\n      SLinkOperations.setTarget(javaIterableType, \"classifier\", javaIterable, false);\n      SLinkOperations.addChild(javaIterableType, \"parameter\", entityType);\n      if (TypeChecker.getInstance().getSubtypingManager().isSubtype(type, javaIterableType)) {\n        return new _Quotations.QuotationClass_40().createNode(SNodeOperations.copyNode(entity));\n      }\n      //       ==========\n      SNode entityIterable = SModelUtil.findNodeByFQName(\"com.jetbrains.teamsys.database.EntityIterable\", SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.Classifier\"), scope);\n      SNode entityIterableType = SModelOperations.createNewNode(model, \"jetbrains.mps.baseLanguage.structure.ClassifierType\", null);\n      SLinkOperations.setTarget(entityIterableType, \"classifier\", entityIterable, false);\n      if (TypeChecker.getInstance().getSubtypingManager().isSubtype(type, entityIterableType)) {\n        return new _Quotations.QuotationClass_41().createNode(SNodeOperations.copyNode(entity));\n      }\n    }\n    //     END FIX\n    //     ==========\n    return null;\n  }","id":82585,"modified_method":"public static SNode coerceTo_SequenceType(SNode type) {\n    SNode sequenceType = TypeChecker.getInstance().getRuntimeSupport().coerce_(type, HUtil.createMatchingPatternByConceptFQName(\"jetbrains.mps.baseLanguage.collections.structure.SequenceType\"), true);\n    if (sequenceType != null) {\n      return sequenceType;\n    }\n    if (sequenceType == null) {\n      return null;\n    }\n    //     the following code is not reachable \n    if (type == null) {\n      return null;\n    }\n    //     ==========\n    //     TEMP FIX FOR DNQ 1\n    if (\"jetbrains.teamsys.dnq.structure.PListType\".equals(type.getConceptFqName())) {\n      SNode classifierType = SNodeOperations.cast(type.getChild(\"classifierType\"), \"jetbrains.mps.baseLanguage.structure.ClassifierType\");\n      return new _Quotations.QuotationClass_39().createNode(SNodeOperations.copyNode(classifierType));\n    }\n    //     END TEMP FIX\n    //     ==========\n    //     ==========\n    //     TEMP FIX FOR DNQ\n    //     TODO: extract generics information\n    if (type != null) {\n      SModel model = TypeChecker.getInstance().getRuntimeTypesModel();\n      GlobalScope scope = GlobalScope.getInstance();\n      SNode entity = SNodeOperations.cast(SModelUtil.findNodeByFQName(\"com.jetbrains.teamsys.database.Entity\", SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.Classifier\"), scope), \"jetbrains.mps.baseLanguage.structure.Classifier\");\n      if (entity == null) {\n        return null;\n      }\n      SNode entityType = SModelOperations.createNewNode(model, \"jetbrains.mps.baseLanguage.structure.ClassifierType\", null);\n      SLinkOperations.setTarget(entityType, \"classifier\", entity, false);\n      SNode javaIterable = SNodeOperations.cast(SModelUtil.findNodeByFQName(\"java.lang.Iterable\", SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.Classifier\"), scope), \"jetbrains.mps.baseLanguage.structure.Classifier\");\n      SNode javaIterableType = SModelOperations.createNewNode(model, \"jetbrains.mps.baseLanguage.structure.ClassifierType\", null);\n      SLinkOperations.setTarget(javaIterableType, \"classifier\", javaIterable, false);\n      SLinkOperations.addChild(javaIterableType, \"parameter\", entityType);\n      if (TypeChecker.getInstance().getSubtypingManager().isSubtype(type, javaIterableType)) {\n        return new _Quotations.QuotationClass_40().createNode(SNodeOperations.copyNode(entity));\n      }\n      //       ==========\n      SNode entityIterable = SNodeOperations.cast(SModelUtil.findNodeByFQName(\"com.jetbrains.teamsys.database.EntityIterable\", SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.Classifier\"), scope), \"jetbrains.mps.baseLanguage.structure.Classifier\");\n      SNode entityIterableType = SModelOperations.createNewNode(model, \"jetbrains.mps.baseLanguage.structure.ClassifierType\", null);\n      SLinkOperations.setTarget(entityIterableType, \"classifier\", entityIterable, false);\n      if (TypeChecker.getInstance().getSubtypingManager().isSubtype(type, entityIterableType)) {\n        return new _Quotations.QuotationClass_41().createNode(SNodeOperations.copyNode(entity));\n      }\n    }\n    //     END FIX\n    //     ==========\n    return null;\n  }","commit_id":"62ebe53ec7d60edc46867867f4bb49ef7478cc4e","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void applyRule(final SNode co, final TypeCheckingContext typeCheckingContext) {\n    {\n      SNode _nodeToCheck_1029348928467 = co;\n      BaseIntentionProvider intentionProvider = null;\n      typeCheckingContext.createEquation(typeCheckingContext.typeOf(co, \"r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)\", \"1205753329622\", true), typeCheckingContext.typeOf(SLinkOperations.getTarget(SNodeOperations.getParent(co), \"operand\", true), \"r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)\", \"1205753430842\", true), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)\", \"1205753325804\", intentionProvider);\n    }\n    {\n      SNode _nodeToCheck_1029348928467 = co;\n      BaseIntentionProvider intentionProvider = null;\n      typeCheckingContext.createLessThanInequation(typeCheckingContext.typeOf(SLinkOperations.getTarget(co, \"length\", true), \"r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)\", \"1205753511511\", true), new _Quotations.QuotationClass_78().createNode(typeCheckingContext), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)\", \"1205753509659\", false, 0, intentionProvider);\n    }\n  }","id":82586,"modified_method":"public void applyRule(final SNode co, final TypeCheckingContext typeCheckingContext) {\n    {\n      SNode _nodeToCheck_1029348928467 = co;\n      BaseIntentionProvider intentionProvider = null;\n      typeCheckingContext.createEquation(typeCheckingContext.typeOf(co, \"r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)\", \"1205753329622\", true), typeCheckingContext.typeOf(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(co), \"jetbrains.mps.baseLanguage.structure.DotExpression\"), \"operand\", true), \"r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)\", \"1205753430842\", true), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)\", \"1205753325804\", intentionProvider);\n    }\n    {\n      SNode _nodeToCheck_1029348928467 = co;\n      BaseIntentionProvider intentionProvider = null;\n      typeCheckingContext.createLessThanInequation(typeCheckingContext.typeOf(SLinkOperations.getTarget(co, \"length\", true), \"r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)\", \"1205753511511\", true), new _Quotations.QuotationClass_78().createNode(typeCheckingContext), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)\", \"1205753509659\", false, 0, intentionProvider);\n    }\n  }","commit_id":"62ebe53ec7d60edc46867867f4bb49ef7478cc4e","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void applyRule(final SNode scpd, final TypeCheckingContext typeCheckingContext) {\n    if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(scpd), \"jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral\") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(SNodeOperations.getParent(scpd)), \"jetbrains.mps.baseLanguage.structure.IOperation\")) {\n      final SNode paramType_typevar_1230315924141 = typeCheckingContext.createNewRuntimeTypesVariable();\n      {\n        SNode _nodeToCheck_1029348928467 = scpd;\n        BaseIntentionProvider intentionProvider = null;\n        typeCheckingContext.createLessThanInequation(typeCheckingContext.typeOf(IOperation_Behavior.call_getOperand_1213877410070(SNodeOperations.getParent(SNodeOperations.getParent(scpd))), \"r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)\", \"1230315907236\", true), new _Quotations.QuotationClass_88().createNode(typeCheckingContext.getEquationManager().getRepresentator(paramType_typevar_1230315924141), typeCheckingContext), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)\", \"1230315907234\", false, 0, intentionProvider);\n      }\n      {\n        SNode _nodeToCheck_1029348928467 = scpd;\n        BaseIntentionProvider intentionProvider = null;\n        typeCheckingContext.createEquation(typeCheckingContext.typeOf(scpd, \"r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)\", \"1230315969555\", true), typeCheckingContext.getEquationManager().getRepresentator(paramType_typevar_1230315924141), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)\", \"1230315977451\", intentionProvider);\n      }\n    }\n  }","id":82587,"modified_method":"public void applyRule(final SNode scpd, final TypeCheckingContext typeCheckingContext) {\n    if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(scpd), \"jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral\") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(SNodeOperations.getParent(scpd)), \"jetbrains.mps.baseLanguage.structure.IOperation\")) {\n      final SNode paramType_typevar_1230315924141 = typeCheckingContext.createNewRuntimeTypesVariable();\n      {\n        SNode _nodeToCheck_1029348928467 = scpd;\n        BaseIntentionProvider intentionProvider = null;\n        typeCheckingContext.createLessThanInequation(typeCheckingContext.typeOf(IOperation_Behavior.call_getOperand_1213877410070(SNodeOperations.cast(SNodeOperations.getParent(SNodeOperations.getParent(scpd)), \"jetbrains.mps.baseLanguage.structure.IOperation\")), \"r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)\", \"1230315907236\", true), new _Quotations.QuotationClass_88().createNode(typeCheckingContext.getEquationManager().getRepresentator(paramType_typevar_1230315924141), typeCheckingContext), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)\", \"1230315907234\", false, 0, intentionProvider);\n      }\n      {\n        SNode _nodeToCheck_1029348928467 = scpd;\n        BaseIntentionProvider intentionProvider = null;\n        typeCheckingContext.createEquation(typeCheckingContext.typeOf(scpd, \"r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)\", \"1230315969555\", true), typeCheckingContext.getEquationManager().getRepresentator(paramType_typevar_1230315924141), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)\", \"1230315977451\", intentionProvider);\n      }\n    }\n  }","commit_id":"62ebe53ec7d60edc46867867f4bb49ef7478cc4e","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\r\n  public boolean execute(final OHttpRequest iRequest, final OHttpResponse iResponse) throws Exception {\r\n    final String[] parts = init(iRequest, iResponse);\r\n    ODatabaseDocumentTx db = null;\r\n\r\n    try {\r\n      db = getProfiledDatabaseInstance(iRequest);\r\n\r\n      final OFunction f = db.getMetadata().getFunctionLibrary().getFunction(parts[2]);\r\n      if (f == null)\r\n        throw new IllegalArgumentException(\"Function '\" + parts[2] + \"' is not configured\");\r\n\r\n      if (iRequest.httpMethod.equalsIgnoreCase(\"GET\") && !f.isIdempotent()) {\r\n        iResponse.send(OHttpUtils.STATUS_BADREQ_CODE, OHttpUtils.STATUS_BADREQ_DESCRIPTION, OHttpUtils.CONTENT_TEXT_PLAIN,\r\n            \"GET method is not allowed to execute function '\" + parts[2]\r\n                + \"' because has been declared as non idempotent. Use POST instead.\", null, true);\r\n        return false;\r\n      }\r\n\r\n      final Object[] args = new String[parts.length - 3];\r\n      for (int i = 3; i < parts.length; ++i)\r\n        args[i - 3] = parts[i];\r\n\r\n      // BIND CONTEXT VARIABLES\r\n      final OBasicCommandContext context = new OBasicCommandContext();\r\n      context.setVariable(\"request\", new OHttpRequestWrapper(iRequest, (String[]) args));\r\n      context.setVariable(\"response\", new OHttpResponseWrapper(iResponse));\r\n\r\n      handleResult(iRequest, iResponse, f.executeInContext(context, args));\r\n\r\n    } catch (OCommandScriptException e) {\r\n      // EXCEPTION\r\n\r\n      final StringBuilder msg = new StringBuilder();\r\n      for (Exception currentException = e; currentException != null; currentException = (Exception) currentException.getCause()) {\r\n        if (msg.length() > 0)\r\n          msg.append(\"\\n\");\r\n        msg.append(currentException.getMessage());\r\n      }\r\n\r\n      iResponse.send(OHttpUtils.STATUS_BADREQ_CODE, OHttpUtils.STATUS_BADREQ_DESCRIPTION, OHttpUtils.CONTENT_TEXT_PLAIN,\r\n          msg.toString(), null, true);\r\n\r\n    } finally {\r\n      if (db != null)\r\n        OSharedDocumentDatabase.release(db);\r\n    }\r\n\r\n    return false;\r\n  }","id":82588,"modified_method":"@Override\r\n  public boolean execute(final OHttpRequest iRequest, final OHttpResponse iResponse) throws Exception {\r\n    final String[] parts = init(iRequest, iResponse);\r\n    ODatabaseDocumentTx db = null;\r\n\r\n    try {\r\n      db = getProfiledDatabaseInstance(iRequest);\r\n\r\n      final OFunction f = db.getMetadata().getFunctionLibrary().getFunction(parts[2]);\r\n      if (f == null)\r\n        throw new IllegalArgumentException(\"Function '\" + parts[2] + \"' is not configured\");\r\n\r\n      if (iRequest.httpMethod.equalsIgnoreCase(\"GET\") && !f.isIdempotent()) {\r\n        iResponse.send(OHttpUtils.STATUS_BADREQ_CODE, OHttpUtils.STATUS_BADREQ_DESCRIPTION, OHttpUtils.CONTENT_TEXT_PLAIN,\r\n            \"GET method is not allowed to execute function '\" + parts[2]\r\n                + \"' because has been declared as non idempotent. Use POST instead.\", null, true);\r\n        return false;\r\n      }\r\n\r\n      final Object[] args = new String[parts.length - 3];\r\n      for (int i = 3; i < parts.length; ++i)\r\n        args[i - 3] = parts[i];\r\n\r\n      // BIND CONTEXT VARIABLES\r\n      final OBasicCommandContext context = new OBasicCommandContext();\r\n      context.setVariable(\"request\", new OHttpRequestWrapper(iRequest, (String[]) args));\r\n      context.setVariable(\"response\", new OHttpResponseWrapper(iResponse));\r\n\r\n      handleResult(iRequest, iResponse, f.executeInContext(context, args));\r\n\r\n    } catch (OCommandScriptException e) {\r\n      // EXCEPTION\r\n\r\n      final StringBuilder msg = new StringBuilder();\r\n      for (Exception currentException = e; currentException != null; currentException = (Exception) currentException.getCause()) {\r\n        if (msg.length() > 0)\r\n          msg.append(\"\\n\");\r\n        msg.append(currentException.getMessage());\r\n      }\r\n\r\n      iResponse.send(OHttpUtils.STATUS_BADREQ_CODE, OHttpUtils.STATUS_BADREQ_DESCRIPTION, OHttpUtils.CONTENT_TEXT_PLAIN,\r\n          msg.toString(), null, true);\r\n\r\n    } finally {\r\n      if (db != null)\r\n        db.close();\r\n    }\r\n\r\n    return false;\r\n  }","commit_id":"85d716607c6ab3e05dc71350bdac064fde4b7b1c","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"protected ODatabaseDocumentTx getProfiledDatabaseInstance(final OHttpRequest iRequest) throws InterruptedException {\r\n    if (iRequest.authorization == null)\r\n      throw new OSecurityAccessException(iRequest.databaseName, \"No user and password received\");\r\n\r\n    final List<String> parts = OStringSerializerHelper.split(iRequest.authorization, ':');\r\n\r\n    final ODatabaseDocumentTx db = OSharedDocumentDatabase.acquire(iRequest.databaseName, parts.get(0), parts.get(1));\r\n    if (db != null) {\r\n      iRequest.data.lastDatabase = db.getName();\r\n      iRequest.data.lastUser = db.getUser() != null ? db.getUser().getName() : null;\r\n    } else {\r\n      iRequest.data.lastDatabase = null;\r\n      iRequest.data.lastUser = null;\r\n    }\r\n\r\n    return db;\r\n  }","id":82589,"modified_method":"protected ODatabaseDocumentTx getProfiledDatabaseInstance(final OHttpRequest iRequest) throws InterruptedException {\r\n    if (iRequest.authorization == null)\r\n      throw new OSecurityAccessException(iRequest.databaseName, \"No user and password received\");\r\n\r\n    final List<String> parts = OStringSerializerHelper.split(iRequest.authorization, ':');\r\n\r\n    // final ODatabaseDocumentTx db = OSharedDocumentDatabase.acquire(iRequest.databaseName, parts.get(0), parts.get(1));\r\n    final ODatabaseDocumentTx db = (ODatabaseDocumentTx) server.openDatabase(\"graph\", iRequest.databaseName, parts.get(0),\r\n        parts.get(1));\r\n\r\n    if (db != null) {\r\n      iRequest.data.lastDatabase = db.getName();\r\n      iRequest.data.lastUser = db.getUser() != null ? db.getUser().getName() : null;\r\n    } else {\r\n      iRequest.data.lastDatabase = null;\r\n      iRequest.data.lastUser = null;\r\n    }\r\n\r\n    return db;\r\n  }","commit_id":"85d716607c6ab3e05dc71350bdac064fde4b7b1c","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"protected boolean authenticate(final OHttpRequest iRequest, final OHttpResponse iResponse,\r\n      final List<String> iAuthenticationParts, final String iDatabaseName) throws IOException {\r\n    ODatabaseDocumentTx db = null;\r\n    try {\r\n      db = OSharedDocumentDatabase.acquire(iDatabaseName, iAuthenticationParts.get(0), iAuthenticationParts.get(1));\r\n\r\n      // AUTHENTICATED: CREATE THE SESSION\r\n      iRequest.sessionId = OHttpSessionManager.getInstance().createSession(iDatabaseName, iAuthenticationParts.get(0));\r\n      iResponse.sessionId = iRequest.sessionId;\r\n      return true;\r\n\r\n    } catch (OSecurityAccessException e) {\r\n      // WRONG USER/PASSWD\r\n    } catch (OLockException e) {\r\n      OLogManager.instance().error(this, \"Cannot access to the database '\" + iDatabaseName + \"'\", ODatabaseException.class, e);\r\n    } catch (InterruptedException e) {\r\n      Thread.currentThread().interrupt();\r\n      OLogManager.instance().error(this, \"Cannot access to the database '\" + iDatabaseName + \"'\", ODatabaseException.class, e);\r\n    } finally {\r\n      if (db != null)\r\n        OSharedDocumentDatabase.release(db);\r\n      else\r\n        // WRONG USER/PASSWD\r\n        sendAuthorizationRequest(iRequest, iResponse, iDatabaseName);\r\n    }\r\n    return false;\r\n  }","id":82590,"modified_method":"protected boolean authenticate(final OHttpRequest iRequest, final OHttpResponse iResponse,\r\n      final List<String> iAuthenticationParts, final String iDatabaseName) throws IOException {\r\n    ODatabaseDocumentTx db = null;\r\n    try {\r\n      db = (ODatabaseDocumentTx) server.openDatabase(\"graph\", iDatabaseName, iAuthenticationParts.get(0),\r\n          iAuthenticationParts.get(1));\r\n      // db = OSharedDocumentDatabase.acquire(iDatabaseName, iAuthenticationParts.get(0), iAuthenticationParts.get(1));\r\n\r\n      // AUTHENTICATED: CREATE THE SESSION\r\n      iRequest.sessionId = OHttpSessionManager.getInstance().createSession(iDatabaseName, iAuthenticationParts.get(0));\r\n      iResponse.sessionId = iRequest.sessionId;\r\n      return true;\r\n\r\n    } catch (OSecurityAccessException e) {\r\n      // WRONG USER/PASSWD\r\n    } catch (OLockException e) {\r\n      OLogManager.instance().error(this, \"Cannot access to the database '\" + iDatabaseName + \"'\", ODatabaseException.class, e);\r\n    } finally {\r\n      if (db != null)\r\n        db.close();\r\n      else\r\n        // WRONG USER/PASSWD\r\n        sendAuthorizationRequest(iRequest, iResponse, iDatabaseName);\r\n    }\r\n    return false;\r\n  }","commit_id":"85d716607c6ab3e05dc71350bdac064fde4b7b1c","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Override\r\n\tpublic boolean execute(final OHttpRequest iRequest, OHttpResponse iResponse) throws Exception {\r\n\t\tString[] urlParts = checkSyntax(iRequest.url, 3, \"Syntax error: class/<database>/<class-name>\");\r\n\r\n\t\tiRequest.data.commandInfo = \"Delete class\";\r\n\t\tiRequest.data.commandDetail = urlParts[2];\r\n\r\n\t\tODatabaseDocumentTx db = null;\r\n\r\n\t\ttry {\r\n\t\t\tdb = getProfiledDatabaseInstance(iRequest);\r\n\r\n\t\t\tif (db.getMetadata().getSchema().getClass(urlParts[2]) == null)\r\n\t\t\t\tthrow new IllegalArgumentException(\"Invalid class '\" + urlParts[2] + \"'\");\r\n\r\n\t\t\tdb.getMetadata().getSchema().dropClass(urlParts[2]);\r\n\r\n\t\t\tiResponse.send(OHttpUtils.STATUS_OK_CODE, \"OK\", OHttpUtils.CONTENT_TEXT_PLAIN, null, null);\r\n\r\n\t\t} finally {\r\n\t\t\tif (db != null)\r\n\t\t\t\tOSharedDocumentDatabase.release(db);\r\n\t\t}\r\n\t\treturn false;\r\n\t}","id":82591,"modified_method":"@Override\r\n  public boolean execute(final OHttpRequest iRequest, OHttpResponse iResponse) throws Exception {\r\n    String[] urlParts = checkSyntax(iRequest.url, 3, \"Syntax error: class/<database>/<class-name>\");\r\n\r\n    iRequest.data.commandInfo = \"Delete class\";\r\n    iRequest.data.commandDetail = urlParts[2];\r\n\r\n    ODatabaseDocumentTx db = null;\r\n\r\n    try {\r\n      db = getProfiledDatabaseInstance(iRequest);\r\n\r\n      if (db.getMetadata().getSchema().getClass(urlParts[2]) == null)\r\n        throw new IllegalArgumentException(\"Invalid class '\" + urlParts[2] + \"'\");\r\n\r\n      db.getMetadata().getSchema().dropClass(urlParts[2]);\r\n\r\n      iResponse.send(OHttpUtils.STATUS_OK_CODE, \"OK\", OHttpUtils.CONTENT_TEXT_PLAIN, null, null);\r\n\r\n    } finally {\r\n      if (db != null)\r\n        db.close();\r\n    }\r\n    return false;\r\n  }","commit_id":"85d716607c6ab3e05dc71350bdac064fde4b7b1c","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Override\r\n\tpublic boolean execute(final OHttpRequest iRequest, OHttpResponse iResponse) throws Exception {\r\n\t\tODatabaseDocumentTx db = null;\r\n\r\n\t\ttry {\r\n\t\t\tfinal String[] urlParts = checkSyntax(iRequest.url, 3, \"Syntax error: document/<database>/<record-id>\");\r\n\r\n\t\t\tiRequest.data.commandInfo = \"Delete document\";\r\n\r\n\t\t\tdb = getProfiledDatabaseInstance(iRequest);\r\n\r\n\t\t\t// PARSE PARAMETERS\r\n\t\t\tfinal int parametersPos = urlParts[2].indexOf('?');\r\n\t\t\tfinal String rid = parametersPos > -1 ? urlParts[2].substring(0, parametersPos) : urlParts[2];\r\n\t\t\tfinal ORecordId recordId = new ORecordId(rid);\r\n\r\n\t\t\tif (!recordId.isValid())\r\n\t\t\t\tthrow new IllegalArgumentException(\"Invalid Record ID in request: \" + urlParts[2]);\r\n\r\n\t\t\tfinal ODocument doc = new ODocument(recordId);\r\n\r\n\t\t\t// UNMARSHALL DOCUMENT WITH REQUEST CONTENT\r\n\t\t\tif (iRequest.content != null)\r\n\t\t\t\t// GET THE VERSION FROM THE DOCUMENT\r\n\t\t\t\tdoc.fromJSON(iRequest.content);\r\n\t\t\telse {\r\n\t\t\t\tif (iRequest.ifMatch != null)\r\n\t\t\t\t\t// USE THE IF-MATCH HTTP HEADER AS VERSION\r\n\t\t\t\t\tdoc.setVersion(Integer.parseInt(iRequest.ifMatch));\r\n\t\t\t\telse\r\n\t\t\t\t\t// IGNORE THE VERSION\r\n\t\t\t\t\tdoc.setVersion(-1);\r\n\t\t\t}\r\n\t\t\tdoc.delete();\r\n\r\n\t\t\tiResponse.send(OHttpUtils.STATUS_OK_CODE, \"OK\", OHttpUtils.CONTENT_TEXT_PLAIN, null, null);\r\n\r\n\t\t} finally {\r\n\t\t\tif (db != null)\r\n\t\t\t\tOSharedDocumentDatabase.release(db);\r\n\t\t}\r\n\t\treturn false;\r\n\t}","id":82592,"modified_method":"@Override\r\n  public boolean execute(final OHttpRequest iRequest, OHttpResponse iResponse) throws Exception {\r\n    ODatabaseDocumentTx db = null;\r\n\r\n    try {\r\n      final String[] urlParts = checkSyntax(iRequest.url, 3, \"Syntax error: document/<database>/<record-id>\");\r\n\r\n      iRequest.data.commandInfo = \"Delete document\";\r\n\r\n      db = getProfiledDatabaseInstance(iRequest);\r\n\r\n      // PARSE PARAMETERS\r\n      final int parametersPos = urlParts[2].indexOf('?');\r\n      final String rid = parametersPos > -1 ? urlParts[2].substring(0, parametersPos) : urlParts[2];\r\n      final ORecordId recordId = new ORecordId(rid);\r\n\r\n      if (!recordId.isValid())\r\n        throw new IllegalArgumentException(\"Invalid Record ID in request: \" + urlParts[2]);\r\n\r\n      final ODocument doc = new ODocument(recordId);\r\n\r\n      // UNMARSHALL DOCUMENT WITH REQUEST CONTENT\r\n      if (iRequest.content != null)\r\n        // GET THE VERSION FROM THE DOCUMENT\r\n        doc.fromJSON(iRequest.content);\r\n      else {\r\n        if (iRequest.ifMatch != null)\r\n          // USE THE IF-MATCH HTTP HEADER AS VERSION\r\n          doc.setVersion(Integer.parseInt(iRequest.ifMatch));\r\n        else\r\n          // IGNORE THE VERSION\r\n          doc.setVersion(-1);\r\n      }\r\n      doc.delete();\r\n\r\n      iResponse.send(OHttpUtils.STATUS_OK_CODE, \"OK\", OHttpUtils.CONTENT_TEXT_PLAIN, null, null);\r\n\r\n    } finally {\r\n      if (db != null)\r\n        db.close();\r\n    }\r\n    return false;\r\n  }","commit_id":"85d716607c6ab3e05dc71350bdac064fde4b7b1c","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Override\r\n\tpublic boolean execute(final OHttpRequest iRequest, OHttpResponse iResponse) throws Exception {\r\n\t\tfinal String[] urlParts = checkSyntax(iRequest.url, 3, \"Syntax error: index/<database>/<index-name>/<key>/[<value>]\");\r\n\r\n\t\tiRequest.data.commandInfo = \"Index remove\";\r\n\r\n\t\tODatabaseDocumentTx db = null;\r\n\r\n\t\ttry {\r\n\t\t\tdb = getProfiledDatabaseInstance(iRequest);\r\n\r\n\t\t\tfinal OIndex<?> index = db.getMetadata().getIndexManager().getIndex(urlParts[2]);\r\n\t\t\tif (index == null)\r\n\t\t\t\tthrow new IllegalArgumentException(\"Index name '\" + urlParts[2] + \"' not found\");\r\n\r\n\t\t\tfinal boolean found;\r\n\t\t\tif (urlParts.length > 4)\r\n\t\t\t\tfound = index.remove(urlParts[3], new ORecordId(urlParts[3]));\r\n\t\t\telse\r\n\t\t\t\tfound = index.remove(urlParts[3]);\r\n\r\n\t\t\tif (found)\r\n\t\t\t  iResponse.send(OHttpUtils.STATUS_OK_CODE, \"OK\", OHttpUtils.CONTENT_TEXT_PLAIN, null, null);\r\n\t\t\telse\r\n\t\t\t  iResponse.send(OHttpUtils.STATUS_NOTFOUND_CODE, OHttpUtils.STATUS_NOTFOUND_DESCRIPTION, OHttpUtils.CONTENT_TEXT_PLAIN, null,\r\n\t\t\t\t\t\tnull);\r\n\t\t} finally {\r\n\t\t\tif (db != null)\r\n\t\t\t\tOSharedDocumentDatabase.release(db);\r\n\t\t}\r\n\t\treturn false;\r\n\t}","id":82593,"modified_method":"@Override\r\n\tpublic boolean execute(final OHttpRequest iRequest, OHttpResponse iResponse) throws Exception {\r\n\t\tfinal String[] urlParts = checkSyntax(iRequest.url, 3, \"Syntax error: index/<database>/<index-name>/<key>/[<value>]\");\r\n\r\n\t\tiRequest.data.commandInfo = \"Index remove\";\r\n\r\n\t\tODatabaseDocumentTx db = null;\r\n\r\n\t\ttry {\r\n\t\t\tdb = getProfiledDatabaseInstance(iRequest);\r\n\r\n\t\t\tfinal OIndex<?> index = db.getMetadata().getIndexManager().getIndex(urlParts[2]);\r\n\t\t\tif (index == null)\r\n\t\t\t\tthrow new IllegalArgumentException(\"Index name '\" + urlParts[2] + \"' not found\");\r\n\r\n\t\t\tfinal boolean found;\r\n\t\t\tif (urlParts.length > 4)\r\n\t\t\t\tfound = index.remove(urlParts[3], new ORecordId(urlParts[3]));\r\n\t\t\telse\r\n\t\t\t\tfound = index.remove(urlParts[3]);\r\n\r\n\t\t\tif (found)\r\n\t\t\t  iResponse.send(OHttpUtils.STATUS_OK_CODE, \"OK\", OHttpUtils.CONTENT_TEXT_PLAIN, null, null);\r\n\t\t\telse\r\n\t\t\t  iResponse.send(OHttpUtils.STATUS_NOTFOUND_CODE, OHttpUtils.STATUS_NOTFOUND_DESCRIPTION, OHttpUtils.CONTENT_TEXT_PLAIN, null,\r\n\t\t\t\t\t\tnull);\r\n\t\t} finally {\r\n\t\t\tif (db != null)\r\n\t\t\t  db.close();\r\n\t\t}\r\n\t\treturn false;\r\n\t}","commit_id":"85d716607c6ab3e05dc71350bdac064fde4b7b1c","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Override\r\n\tpublic boolean execute(final OHttpRequest iRequest, OHttpResponse iResponse) throws Exception {\r\n\t\tString[] urlParts = checkSyntax(iRequest.url, 4, \"Syntax error: property/<database>/<class-name>/<property-name>\");\r\n\r\n\t\tiRequest.data.commandInfo = \"Delete property\";\r\n\t\tiRequest.data.commandDetail = urlParts[2] + \".\" + urlParts[3];\r\n\r\n\t\tODatabaseDocumentTx db = null;\r\n\r\n\t\ttry {\r\n\t\t\tdb = getProfiledDatabaseInstance(iRequest);\r\n\r\n\t\t\tif (db.getMetadata().getSchema().getClass(urlParts[2]) == null)\r\n\t\t\t\tthrow new IllegalArgumentException(\"Invalid class '\" + urlParts[2] + \"'\");\r\n\r\n\t\t\tfinal OClass cls = db.getMetadata().getSchema().getClass(urlParts[2]);\r\n\r\n\t\t\tcls.dropProperty(urlParts[3]);\r\n\r\n\t\t\tiResponse.send(OHttpUtils.STATUS_OK_CODE, \"OK\", OHttpUtils.CONTENT_TEXT_PLAIN, null, null);\r\n\r\n\t\t} finally {\r\n\t\t\tif (db != null)\r\n\t\t\t\tOSharedDocumentDatabase.release(db);\r\n\t\t}\r\n\t\treturn false;\r\n\t}","id":82594,"modified_method":"@Override\r\n  public boolean execute(final OHttpRequest iRequest, OHttpResponse iResponse) throws Exception {\r\n    String[] urlParts = checkSyntax(iRequest.url, 4, \"Syntax error: property/<database>/<class-name>/<property-name>\");\r\n\r\n    iRequest.data.commandInfo = \"Delete property\";\r\n    iRequest.data.commandDetail = urlParts[2] + \".\" + urlParts[3];\r\n\r\n    ODatabaseDocumentTx db = null;\r\n\r\n    try {\r\n      db = getProfiledDatabaseInstance(iRequest);\r\n\r\n      if (db.getMetadata().getSchema().getClass(urlParts[2]) == null)\r\n        throw new IllegalArgumentException(\"Invalid class '\" + urlParts[2] + \"'\");\r\n\r\n      final OClass cls = db.getMetadata().getSchema().getClass(urlParts[2]);\r\n\r\n      cls.dropProperty(urlParts[3]);\r\n\r\n      iResponse.send(OHttpUtils.STATUS_OK_CODE, \"OK\", OHttpUtils.CONTENT_TEXT_PLAIN, null, null);\r\n\r\n    } finally {\r\n      if (db != null)\r\n        db.close();\r\n    }\r\n    return false;\r\n  }","commit_id":"85d716607c6ab3e05dc71350bdac064fde4b7b1c","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Override\r\n  public boolean execute(final OHttpRequest iRequest, OHttpResponse iResponse) throws Exception {\r\n    String[] urlParts = checkSyntax(iRequest.url, 3, \"Syntax error: class/<database>/<class-name>\");\r\n\r\n    iRequest.data.commandInfo = \"Returns the information of a class in the schema\";\r\n    iRequest.data.commandDetail = urlParts[2];\r\n\r\n    ODatabaseDocumentTx db = null;\r\n\r\n    try {\r\n      db = getProfiledDatabaseInstance(iRequest);\r\n\r\n      if (db.getMetadata().getSchema().getClass(urlParts[2]) == null)\r\n        throw new IllegalArgumentException(\"Invalid class '\" + urlParts[2] + \"'\");\r\n\r\n      final StringWriter buffer = new StringWriter();\r\n      final OJSONWriter json = new OJSONWriter(buffer, OHttpResponse.JSON_FORMAT);\r\n      OServerCommandGetConnect.exportClass(db, json, db.getMetadata().getSchema().getClass(urlParts[2]));\r\n      iResponse.send(OHttpUtils.STATUS_OK_CODE, \"OK\", OHttpUtils.CONTENT_JSON, buffer.toString(), null);\r\n    } finally {\r\n      if (db != null)\r\n        OSharedDocumentDatabase.release(db);\r\n    }\r\n    return false;\r\n  }","id":82595,"modified_method":"@Override\r\n  public boolean execute(final OHttpRequest iRequest, OHttpResponse iResponse) throws Exception {\r\n    String[] urlParts = checkSyntax(iRequest.url, 3, \"Syntax error: class/<database>/<class-name>\");\r\n\r\n    iRequest.data.commandInfo = \"Returns the information of a class in the schema\";\r\n    iRequest.data.commandDetail = urlParts[2];\r\n\r\n    ODatabaseDocumentTx db = null;\r\n\r\n    try {\r\n      db = getProfiledDatabaseInstance(iRequest);\r\n\r\n      if (db.getMetadata().getSchema().getClass(urlParts[2]) == null)\r\n        throw new IllegalArgumentException(\"Invalid class '\" + urlParts[2] + \"'\");\r\n\r\n      final StringWriter buffer = new StringWriter();\r\n      final OJSONWriter json = new OJSONWriter(buffer, OHttpResponse.JSON_FORMAT);\r\n      OServerCommandGetConnect.exportClass(db, json, db.getMetadata().getSchema().getClass(urlParts[2]));\r\n      iResponse.send(OHttpUtils.STATUS_OK_CODE, \"OK\", OHttpUtils.CONTENT_JSON, buffer.toString(), null);\r\n    } finally {\r\n      if (db != null)\r\n        db.close();\r\n    }\r\n    return false;\r\n  }","commit_id":"85d716607c6ab3e05dc71350bdac064fde4b7b1c","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Override\r\n\tpublic boolean execute(final OHttpRequest iRequest, OHttpResponse iResponse) throws Exception {\r\n\t\tString[] urlParts = checkSyntax(\r\n\t\t\t\tiRequest.url,\r\n\t\t\t\t3,\r\n\t\t\t\t\"Syntax error: cluster/<database>/<cluster-name>[/<limit>]<br/>Limit is optional and is setted to 20 by default. Set expressely to 0 to have no limits.\");\r\n\r\n\t\tiRequest.data.commandInfo = \"Browse cluster\";\r\n\t\tiRequest.data.commandDetail = urlParts[2];\r\n\r\n\t\tODatabaseDocumentTx db = null;\r\n\r\n\t\ttry {\r\n\t\t\tdb = getProfiledDatabaseInstance(iRequest);\r\n\r\n\t\t\tif (db.getClusterIdByName(urlParts[2]) == -1)\r\n\t\t\t\tthrow new IllegalArgumentException(\"Invalid cluster '\" + urlParts[2] + \"'\");\r\n\r\n\t\t\tfinal int limit = urlParts.length > 3 ? Integer.parseInt(urlParts[3]) : 20;\r\n\r\n\t\t\tfinal List<OIdentifiable> response = new ArrayList<OIdentifiable>();\r\n\t\t\tfor (ORecord<?> rec : db.browseCluster(urlParts[2])) {\r\n\t\t\t\tif (limit > 0 && response.size() >= limit)\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tresponse.add(rec);\r\n\t\t\t}\r\n\r\n\t\t\tiResponse.writeRecords(response);\r\n\t\t} finally {\r\n\t\t\tif (db != null)\r\n\t\t\t\tOSharedDocumentDatabase.release(db);\r\n\t\t}\r\n\t\treturn false;\r\n\t}","id":82596,"modified_method":"@Override\r\n  public boolean execute(final OHttpRequest iRequest, OHttpResponse iResponse) throws Exception {\r\n    String[] urlParts = checkSyntax(\r\n        iRequest.url,\r\n        3,\r\n        \"Syntax error: cluster/<database>/<cluster-name>[/<limit>]<br/>Limit is optional and is setted to 20 by default. Set expressely to 0 to have no limits.\");\r\n\r\n    iRequest.data.commandInfo = \"Browse cluster\";\r\n    iRequest.data.commandDetail = urlParts[2];\r\n\r\n    ODatabaseDocumentTx db = null;\r\n\r\n    try {\r\n      db = getProfiledDatabaseInstance(iRequest);\r\n\r\n      if (db.getClusterIdByName(urlParts[2]) == -1)\r\n        throw new IllegalArgumentException(\"Invalid cluster '\" + urlParts[2] + \"'\");\r\n\r\n      final int limit = urlParts.length > 3 ? Integer.parseInt(urlParts[3]) : 20;\r\n\r\n      final List<OIdentifiable> response = new ArrayList<OIdentifiable>();\r\n      for (ORecord<?> rec : db.browseCluster(urlParts[2])) {\r\n        if (limit > 0 && response.size() >= limit)\r\n          break;\r\n\r\n        response.add(rec);\r\n      }\r\n\r\n      iResponse.writeRecords(response);\r\n    } finally {\r\n      if (db != null)\r\n        db.close();\r\n    }\r\n    return false;\r\n  }","commit_id":"85d716607c6ab3e05dc71350bdac064fde4b7b1c","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"protected void exec(final OHttpRequest iRequest, final OHttpResponse iResponse, String[] urlParts) throws InterruptedException,\r\n      IOException {\r\n    ODatabaseDocumentTx db = null;\r\n    try {\r\n      if (urlParts.length > 2) {\r\n        db = OSharedDocumentDatabase.acquire(urlParts[1], urlParts[2], urlParts[3]);\r\n      } else\r\n        db = getProfiledDatabaseInstance(iRequest);\r\n\r\n      final StringWriter buffer = new StringWriter();\r\n      final OJSONWriter json = new OJSONWriter(buffer);\r\n      json.beginObject();\r\n\r\n      json.beginObject(1, true, \"server\");\r\n      json.writeAttribute(2, true, \"version\", OConstants.ORIENT_VERSION);\r\n      if (OConstants.getBuildNumber() != null)\r\n        json.writeAttribute(2, true, \"build\", OConstants.getBuildNumber());\r\n      json.writeAttribute(2, true, \"osName\", System.getProperty(\"os.name\"));\r\n      json.writeAttribute(2, true, \"osVersion\", System.getProperty(\"os.version\"));\r\n      json.writeAttribute(2, true, \"osArch\", System.getProperty(\"os.arch\"));\r\n      json.writeAttribute(2, true, \"javaVendor\", System.getProperty(\"java.vm.vendor\"));\r\n      json.writeAttribute(2, true, \"javaVersion\", System.getProperty(\"java.vm.version\"));\r\n      json.endObject(1, true);\r\n\r\n      if (db.getMetadata().getSchema().getClasses() != null) {\r\n        json.beginCollection(1, true, \"classes\");\r\n        List<String> classNames = new ArrayList<String>();\r\n\r\n        for (OClass cls : db.getMetadata().getSchema().getClasses())\r\n          classNames.add(cls.getName());\r\n        Collections.sort(classNames);\r\n\r\n        for (String className : classNames) {\r\n          final OClass cls = db.getMetadata().getSchema().getClass(className);\r\n\r\n          try {\r\n            exportClass(db, json, cls);\r\n          } catch (Exception e) {\r\n            OLogManager.instance().error(this, \"Error on exporting class '\" + cls + \"'\", e);\r\n          }\r\n        }\r\n        json.endCollection(1, true);\r\n      }\r\n\r\n      if (db.getStorage() instanceof OStorageLocal) {\r\n        json.beginCollection(1, false, \"dataSegments\");\r\n        for (ODataLocal data : ((OStorageLocal) db.getStorage()).getDataSegments()) {\r\n          json.beginObject(2, true, null);\r\n          json.writeAttribute(3, false, \"id\", data.getId());\r\n          json.writeAttribute(3, false, \"name\", data.getName());\r\n          json.writeAttribute(3, false, \"size\", data.getSize());\r\n          json.writeAttribute(3, false, \"filled\", data.getFilledUpTo());\r\n          json.writeAttribute(3, false, \"maxSize\", data.getConfig().maxSize);\r\n          json.writeAttribute(3, false, \"files\", Arrays.toString(data.getConfig().infoFiles));\r\n          json.endObject(2, false);\r\n        }\r\n        json.endCollection(1, true);\r\n      }\r\n\r\n      if (db.getClusterNames() != null) {\r\n        json.beginCollection(1, false, \"clusters\");\r\n        OCluster cluster;\r\n        for (String clusterName : db.getClusterNames()) {\r\n          cluster = db.getStorage().getClusterById(db.getClusterIdByName(clusterName));\r\n\r\n          try {\r\n            json.beginObject(2, true, null);\r\n            json.writeAttribute(3, false, \"id\", cluster.getId());\r\n            json.writeAttribute(3, false, \"name\", clusterName);\r\n            json.writeAttribute(3, false, \"type\", cluster.getType());\r\n            json.writeAttribute(3, false, \"records\", cluster.getEntries());\r\n            if (cluster instanceof OClusterLocal) {\r\n              json.writeAttribute(3, false, \"size\", ((OClusterLocal) cluster).getSize());\r\n              json.writeAttribute(3, false, \"filled\", ((OClusterLocal) cluster).getFilledUpTo());\r\n              json.writeAttribute(3, false, \"maxSize\", ((OClusterLocal) cluster).getConfig().getMaxSize());\r\n              json.writeAttribute(3, false, \"files\", Arrays.toString(((OClusterLocal) cluster).getConfig().getInfoFiles()));\r\n            } else {\r\n              json.writeAttribute(3, false, \"size\", \"-\");\r\n              json.writeAttribute(3, false, \"filled\", \"-\");\r\n              json.writeAttribute(3, false, \"maxSize\", \"-\");\r\n              json.writeAttribute(3, false, \"files\", \"-\");\r\n            }\r\n          } catch (Exception e) {\r\n            json.writeAttribute(3, false, \"records\", \"? (Unauthorized)\");\r\n          }\r\n          json.endObject(2, false);\r\n        }\r\n        json.endCollection(1, true);\r\n      }\r\n\r\n      if (db.getStorage() instanceof OStorageLocal) {\r\n        json.beginCollection(1, false, \"txSegment\");\r\n        final OTxSegment txSegment = ((OStorageLocal) db.getStorage()).getTxManager().getTxSegment();\r\n        json.beginObject(2, true, null);\r\n        json.writeAttribute(3, false, \"size\", txSegment.getSize());\r\n        json.writeAttribute(3, false, \"filled\", txSegment.getFilledUpTo());\r\n        json.writeAttribute(3, false, \"maxSize\", txSegment.getConfig().maxSize);\r\n        json.writeAttribute(3, false, \"file\", txSegment.getConfig().path);\r\n        json.endObject(2, false);\r\n        json.endCollection(1, true);\r\n      }\r\n\r\n      json.writeAttribute(1, false, \"currentUser\", db.getUser().getName());\r\n\r\n      json.beginCollection(1, false, \"users\");\r\n      OUser user;\r\n      for (ODocument doc : db.getMetadata().getSecurity().getAllUsers()) {\r\n        user = new OUser(doc);\r\n        json.beginObject(2, true, null);\r\n        json.writeAttribute(3, false, \"name\", user.getName());\r\n        json.writeAttribute(3, false, \"roles\", user.getRoles() != null ? Arrays.toString(user.getRoles().toArray()) : \"null\");\r\n        json.endObject(2, false);\r\n      }\r\n      json.endCollection(1, true);\r\n\r\n      json.beginCollection(1, true, \"roles\");\r\n      ORole role;\r\n      for (ODocument doc : db.getMetadata().getSecurity().getAllRoles()) {\r\n        role = new ORole(doc);\r\n        json.beginObject(2, true, null);\r\n        json.writeAttribute(3, false, \"name\", role.getName());\r\n        json.writeAttribute(3, false, \"mode\", role.getMode().toString());\r\n\r\n        json.beginCollection(3, true, \"rules\");\r\n        for (Entry<String, Byte> rule : role.getRules().entrySet()) {\r\n          json.beginObject(4);\r\n          json.writeAttribute(4, true, \"name\", rule.getKey());\r\n          json.writeAttribute(4, false, \"create\", role.allow(rule.getKey(), ORole.PERMISSION_CREATE));\r\n          json.writeAttribute(4, false, \"read\", role.allow(rule.getKey(), ORole.PERMISSION_READ));\r\n          json.writeAttribute(4, false, \"update\", role.allow(rule.getKey(), ORole.PERMISSION_UPDATE));\r\n          json.writeAttribute(4, false, \"delete\", role.allow(rule.getKey(), ORole.PERMISSION_DELETE));\r\n          json.endObject(4, true);\r\n        }\r\n        json.endCollection(3, false);\r\n\r\n        json.endObject(2, true);\r\n      }\r\n      json.endCollection(1, true);\r\n\r\n      json.beginObject(1, true, \"config\");\r\n\r\n      json.beginCollection(2, true, \"values\");\r\n      json.writeObjects(3, true, null,\r\n          new Object[] { \"name\", \"dateFormat\", \"value\", db.getStorage().getConfiguration().dateFormat }, new Object[] { \"name\",\r\n              \"dateTimeFormat\", \"value\", db.getStorage().getConfiguration().dateTimeFormat }, new Object[] { \"name\",\r\n              \"localeCountry\", \"value\", db.getStorage().getConfiguration().getLocaleCountry() }, new Object[] { \"name\",\r\n              \"localeLanguage\", \"value\", db.getStorage().getConfiguration().getLocaleLanguage() }, new Object[] { \"name\",\r\n              \"charSet\", \"value\", db.getStorage().getConfiguration().getCharset() }, new Object[] { \"name\",\r\n              \"timezone\", \"value\", db.getStorage().getConfiguration().getTimeZone().getID() }, new Object[] { \"name\",\r\n              \"definitionVersion\", \"value\", db.getStorage().getConfiguration().version });\r\n      json.endCollection(2, true);\r\n\r\n      json.beginCollection(2, true, \"properties\");\r\n      if (db.getStorage().getConfiguration().properties != null)\r\n        for (OStorageEntryConfiguration entry : db.getStorage().getConfiguration().properties) {\r\n          if (entry != null) {\r\n            json.beginObject(3, true, null);\r\n            json.writeAttribute(4, false, \"name\", entry.name);\r\n            json.writeAttribute(4, false, \"value\", entry.value);\r\n            json.endObject(3, true);\r\n          }\r\n        }\r\n      json.endCollection(2, true);\r\n\r\n      json.endObject(1, true);\r\n      json.endObject();\r\n      json.flush();\r\n\r\n      iResponse.send(OHttpUtils.STATUS_OK_CODE, \"OK\", OHttpUtils.CONTENT_JSON, buffer.toString(), null);\r\n    } finally {\r\n      if (db != null)\r\n        OSharedDocumentDatabase.release(db);\r\n    }\r\n  }","id":82597,"modified_method":"protected void exec(final OHttpRequest iRequest, final OHttpResponse iResponse, String[] urlParts) throws InterruptedException,\r\n      IOException {\r\n    ODatabaseDocumentTx db = null;\r\n    try {\r\n      if (urlParts.length > 2) {\r\n        db = OSharedDocumentDatabase.acquire(urlParts[1], urlParts[2], urlParts[3]);\r\n      } else\r\n        db = getProfiledDatabaseInstance(iRequest);\r\n\r\n      final StringWriter buffer = new StringWriter();\r\n      final OJSONWriter json = new OJSONWriter(buffer);\r\n      json.beginObject();\r\n\r\n      json.beginObject(1, true, \"server\");\r\n      json.writeAttribute(2, true, \"version\", OConstants.ORIENT_VERSION);\r\n      if (OConstants.getBuildNumber() != null)\r\n        json.writeAttribute(2, true, \"build\", OConstants.getBuildNumber());\r\n      json.writeAttribute(2, true, \"osName\", System.getProperty(\"os.name\"));\r\n      json.writeAttribute(2, true, \"osVersion\", System.getProperty(\"os.version\"));\r\n      json.writeAttribute(2, true, \"osArch\", System.getProperty(\"os.arch\"));\r\n      json.writeAttribute(2, true, \"javaVendor\", System.getProperty(\"java.vm.vendor\"));\r\n      json.writeAttribute(2, true, \"javaVersion\", System.getProperty(\"java.vm.version\"));\r\n      json.endObject(1, true);\r\n\r\n      if (db.getMetadata().getSchema().getClasses() != null) {\r\n        json.beginCollection(1, true, \"classes\");\r\n        List<String> classNames = new ArrayList<String>();\r\n\r\n        for (OClass cls : db.getMetadata().getSchema().getClasses())\r\n          classNames.add(cls.getName());\r\n        Collections.sort(classNames);\r\n\r\n        for (String className : classNames) {\r\n          final OClass cls = db.getMetadata().getSchema().getClass(className);\r\n\r\n          try {\r\n            exportClass(db, json, cls);\r\n          } catch (Exception e) {\r\n            OLogManager.instance().error(this, \"Error on exporting class '\" + cls + \"'\", e);\r\n          }\r\n        }\r\n        json.endCollection(1, true);\r\n      }\r\n\r\n      if (db.getStorage() instanceof OStorageLocal) {\r\n        json.beginCollection(1, false, \"dataSegments\");\r\n        for (ODataLocal data : ((OStorageLocal) db.getStorage()).getDataSegments()) {\r\n          json.beginObject(2, true, null);\r\n          json.writeAttribute(3, false, \"id\", data.getId());\r\n          json.writeAttribute(3, false, \"name\", data.getName());\r\n          json.writeAttribute(3, false, \"size\", data.getSize());\r\n          json.writeAttribute(3, false, \"filled\", data.getFilledUpTo());\r\n          json.writeAttribute(3, false, \"maxSize\", data.getConfig().maxSize);\r\n          json.writeAttribute(3, false, \"files\", Arrays.toString(data.getConfig().infoFiles));\r\n          json.endObject(2, false);\r\n        }\r\n        json.endCollection(1, true);\r\n      }\r\n\r\n      if (db.getClusterNames() != null) {\r\n        json.beginCollection(1, false, \"clusters\");\r\n        OCluster cluster;\r\n        for (String clusterName : db.getClusterNames()) {\r\n          cluster = db.getStorage().getClusterById(db.getClusterIdByName(clusterName));\r\n\r\n          try {\r\n            json.beginObject(2, true, null);\r\n            json.writeAttribute(3, false, \"id\", cluster.getId());\r\n            json.writeAttribute(3, false, \"name\", clusterName);\r\n            json.writeAttribute(3, false, \"type\", cluster.getType());\r\n            json.writeAttribute(3, false, \"records\", cluster.getEntries());\r\n            if (cluster instanceof OClusterLocal) {\r\n              json.writeAttribute(3, false, \"size\", ((OClusterLocal) cluster).getSize());\r\n              json.writeAttribute(3, false, \"filled\", ((OClusterLocal) cluster).getFilledUpTo());\r\n              json.writeAttribute(3, false, \"maxSize\", ((OClusterLocal) cluster).getConfig().getMaxSize());\r\n              json.writeAttribute(3, false, \"files\", Arrays.toString(((OClusterLocal) cluster).getConfig().getInfoFiles()));\r\n            } else {\r\n              json.writeAttribute(3, false, \"size\", \"-\");\r\n              json.writeAttribute(3, false, \"filled\", \"-\");\r\n              json.writeAttribute(3, false, \"maxSize\", \"-\");\r\n              json.writeAttribute(3, false, \"files\", \"-\");\r\n            }\r\n          } catch (Exception e) {\r\n            json.writeAttribute(3, false, \"records\", \"? (Unauthorized)\");\r\n          }\r\n          json.endObject(2, false);\r\n        }\r\n        json.endCollection(1, true);\r\n      }\r\n\r\n      if (db.getStorage() instanceof OStorageLocal) {\r\n        json.beginCollection(1, false, \"txSegment\");\r\n        final OTxSegment txSegment = ((OStorageLocal) db.getStorage()).getTxManager().getTxSegment();\r\n        json.beginObject(2, true, null);\r\n        json.writeAttribute(3, false, \"size\", txSegment.getSize());\r\n        json.writeAttribute(3, false, \"filled\", txSegment.getFilledUpTo());\r\n        json.writeAttribute(3, false, \"maxSize\", txSegment.getConfig().maxSize);\r\n        json.writeAttribute(3, false, \"file\", txSegment.getConfig().path);\r\n        json.endObject(2, false);\r\n        json.endCollection(1, true);\r\n      }\r\n\r\n      if (db.getUser() != null) {\r\n        json.writeAttribute(1, false, \"currentUser\", db.getUser().getName());\r\n\r\n        json.beginCollection(1, false, \"users\");\r\n        for (ODocument doc : db.getMetadata().getSecurity().getAllUsers()) {\r\n          OUser user = new OUser(doc);\r\n          json.beginObject(2, true, null);\r\n          json.writeAttribute(3, false, \"name\", user.getName());\r\n          json.writeAttribute(3, false, \"roles\", user.getRoles() != null ? Arrays.toString(user.getRoles().toArray()) : \"null\");\r\n          json.endObject(2, false);\r\n        }\r\n        json.endCollection(1, true);\r\n\r\n        json.beginCollection(1, true, \"roles\");\r\n        ORole role;\r\n        for (ODocument doc : db.getMetadata().getSecurity().getAllRoles()) {\r\n          role = new ORole(doc);\r\n          json.beginObject(2, true, null);\r\n          json.writeAttribute(3, false, \"name\", role.getName());\r\n          json.writeAttribute(3, false, \"mode\", role.getMode().toString());\r\n\r\n          json.beginCollection(3, true, \"rules\");\r\n          for (Entry<String, Byte> rule : role.getRules().entrySet()) {\r\n            json.beginObject(4);\r\n            json.writeAttribute(4, true, \"name\", rule.getKey());\r\n            json.writeAttribute(4, false, \"create\", role.allow(rule.getKey(), ORole.PERMISSION_CREATE));\r\n            json.writeAttribute(4, false, \"read\", role.allow(rule.getKey(), ORole.PERMISSION_READ));\r\n            json.writeAttribute(4, false, \"update\", role.allow(rule.getKey(), ORole.PERMISSION_UPDATE));\r\n            json.writeAttribute(4, false, \"delete\", role.allow(rule.getKey(), ORole.PERMISSION_DELETE));\r\n            json.endObject(4, true);\r\n          }\r\n          json.endCollection(3, false);\r\n\r\n          json.endObject(2, true);\r\n        }\r\n        json.endCollection(1, true);\r\n      }\r\n\r\n      json.beginObject(1, true, \"config\");\r\n\r\n      json.beginCollection(2, true, \"values\");\r\n      json.writeObjects(3, true, null,\r\n          new Object[] { \"name\", \"dateFormat\", \"value\", db.getStorage().getConfiguration().dateFormat }, new Object[] { \"name\",\r\n              \"dateTimeFormat\", \"value\", db.getStorage().getConfiguration().dateTimeFormat }, new Object[] { \"name\",\r\n              \"localeCountry\", \"value\", db.getStorage().getConfiguration().getLocaleCountry() }, new Object[] { \"name\",\r\n              \"localeLanguage\", \"value\", db.getStorage().getConfiguration().getLocaleLanguage() }, new Object[] { \"name\",\r\n              \"charSet\", \"value\", db.getStorage().getConfiguration().getCharset() }, new Object[] { \"name\", \"timezone\", \"value\",\r\n              db.getStorage().getConfiguration().getTimeZone().getID() }, new Object[] { \"name\", \"definitionVersion\", \"value\",\r\n              db.getStorage().getConfiguration().version });\r\n      json.endCollection(2, true);\r\n\r\n      json.beginCollection(2, true, \"properties\");\r\n      if (db.getStorage().getConfiguration().properties != null)\r\n        for (OStorageEntryConfiguration entry : db.getStorage().getConfiguration().properties) {\r\n          if (entry != null) {\r\n            json.beginObject(3, true, null);\r\n            json.writeAttribute(4, false, \"name\", entry.name);\r\n            json.writeAttribute(4, false, \"value\", entry.value);\r\n            json.endObject(3, true);\r\n          }\r\n        }\r\n      json.endCollection(2, true);\r\n\r\n      json.endObject(1, true);\r\n      json.endObject();\r\n      json.flush();\r\n\r\n      iResponse.send(OHttpUtils.STATUS_OK_CODE, \"OK\", OHttpUtils.CONTENT_JSON, buffer.toString(), null);\r\n    } finally {\r\n      if (db != null)\r\n        db.close();\r\n    }\r\n  }","commit_id":"85d716607c6ab3e05dc71350bdac064fde4b7b1c","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Override\r\n\tpublic boolean execute(final OHttpRequest iRequest, OHttpResponse iResponse) throws Exception {\r\n\t\tiRequest.data.commandInfo = \"Dictionary lookup\";\r\n\r\n\t\tString[] urlParts = checkSyntax(iRequest.url, 3, \"Syntax error: dictionary/<database>/<key>\");\r\n\r\n\t\tODatabaseDocumentTx db = null;\r\n\r\n\t\ttry {\r\n\t\t\tdb = getProfiledDatabaseInstance(iRequest);\r\n\r\n\t\t\tfinal ORecord<?> record = db.getDictionary().get(urlParts[2]);\r\n\t\t\tif (record == null)\r\n\t\t\t\tthrow new ORecordNotFoundException(\"Key '\" + urlParts[2] + \"' was not found in the database dictionary\");\r\n\r\n\t\t\tiResponse.writeRecord(record);\r\n\r\n\t\t} finally {\r\n\t\t\tif (db != null)\r\n\t\t\t\tOSharedDocumentDatabase.release(db);\r\n\t\t}\r\n\t\treturn false;\r\n\t}","id":82598,"modified_method":"@Override\r\n  public boolean execute(final OHttpRequest iRequest, OHttpResponse iResponse) throws Exception {\r\n    iRequest.data.commandInfo = \"Dictionary lookup\";\r\n\r\n    String[] urlParts = checkSyntax(iRequest.url, 3, \"Syntax error: dictionary/<database>/<key>\");\r\n\r\n    ODatabaseDocumentTx db = null;\r\n\r\n    try {\r\n      db = getProfiledDatabaseInstance(iRequest);\r\n\r\n      final ORecord<?> record = db.getDictionary().get(urlParts[2]);\r\n      if (record == null)\r\n        throw new ORecordNotFoundException(\"Key '\" + urlParts[2] + \"' was not found in the database dictionary\");\r\n\r\n      iResponse.writeRecord(record);\r\n\r\n    } finally {\r\n      if (db != null)\r\n        db.close();\r\n    }\r\n    return false;\r\n  }","commit_id":"85d716607c6ab3e05dc71350bdac064fde4b7b1c","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Override\r\n  public boolean execute(final OHttpRequest iRequest, OHttpResponse iResponse) throws Exception {\r\n    ODatabaseDocumentTx db = null;\r\n\r\n    final String[] urlParts = checkSyntax(iRequest.url, 3, \"Syntax error: document/<database>/<record-id>[/fetchPlan]\");\r\n\r\n    final String fetchPlan = urlParts.length > 3 ? urlParts[3] : null;\r\n\r\n    iRequest.data.commandInfo = \"Load document\";\r\n\r\n    final ORecord<?> rec;\r\n\r\n    final int parametersPos = urlParts[2].indexOf('?');\r\n    final String rid = parametersPos > -1 ? urlParts[2].substring(0, parametersPos) : urlParts[2];\r\n\r\n    try {\r\n      db = getProfiledDatabaseInstance(iRequest);\r\n\r\n      rec = db.load(new ORecordId(rid), fetchPlan);\r\n\r\n    } finally {\r\n      if (db != null)\r\n        OSharedDocumentDatabase.release(db);\r\n    }\r\n\r\n    if (rec == null)\r\n      iResponse.send(OHttpUtils.STATUS_NOTFOUND_CODE, \"Not Found\", OHttpUtils.CONTENT_JSON, \"Record with id '\" + urlParts[2]\r\n          + \"' was not found.\", null);\r\n    else\r\n      iResponse.writeRecord(rec, fetchPlan, null);\r\n    return false;\r\n  }","id":82599,"modified_method":"@Override\r\n  public boolean execute(final OHttpRequest iRequest, OHttpResponse iResponse) throws Exception {\r\n    ODatabaseDocumentTx db = null;\r\n\r\n    final String[] urlParts = checkSyntax(iRequest.url, 3, \"Syntax error: document/<database>/<record-id>[/fetchPlan]\");\r\n\r\n    final String fetchPlan = urlParts.length > 3 ? urlParts[3] : null;\r\n\r\n    iRequest.data.commandInfo = \"Load document\";\r\n\r\n    final ORecord<?> rec;\r\n\r\n    final int parametersPos = urlParts[2].indexOf('?');\r\n    final String rid = parametersPos > -1 ? urlParts[2].substring(0, parametersPos) : urlParts[2];\r\n\r\n    try {\r\n      db = getProfiledDatabaseInstance(iRequest);\r\n\r\n      rec = db.load(new ORecordId(rid), fetchPlan);\r\n\r\n    } finally {\r\n      if (db != null)\r\n        db.close();\r\n    }\r\n\r\n    if (rec == null)\r\n      iResponse.send(OHttpUtils.STATUS_NOTFOUND_CODE, \"Not Found\", OHttpUtils.CONTENT_JSON, \"Record with id '\" + urlParts[2]\r\n          + \"' was not found.\", null);\r\n    else\r\n      iResponse.writeRecord(rec, fetchPlan, null);\r\n    return false;\r\n  }","commit_id":"85d716607c6ab3e05dc71350bdac064fde4b7b1c","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Override\r\n  public boolean execute(final OHttpRequest iRequest, OHttpResponse iResponse) throws Exception {\r\n    ODatabaseDocumentTx db = null;\r\n\r\n    final String[] urlParts = checkSyntax(iRequest.url, 4,\r\n        \"Syntax error: documentbyclass/<database>/<class-name>/<record-position>[/fetchPlan]\");\r\n\r\n    final String fetchPlan = urlParts.length > 4 ? urlParts[4] : null;\r\n\r\n    iRequest.data.commandInfo = \"Load document\";\r\n\r\n    final ORecord<?> rec;\r\n    try {\r\n\r\n      db = getProfiledDatabaseInstance(iRequest);\r\n      if (db.getMetadata().getSchema().getClass(urlParts[2]) == null) {\r\n        throw new IllegalArgumentException(\"Invalid class '\" + urlParts[2] + \"'\");\r\n      }\r\n      final String rid = db.getClusterIdByName(urlParts[2]) + \":\" + urlParts[3];\r\n      rec = db.load(new ORecordId(rid), fetchPlan);\r\n\r\n    } finally {\r\n      if (db != null)\r\n        OSharedDocumentDatabase.release(db);\r\n    }\r\n\r\n    if (rec == null)\r\n      iResponse.send(OHttpUtils.STATUS_NOTFOUND_CODE, \"Not Found\", OHttpUtils.CONTENT_JSON, \"Record with id '\" + urlParts[2]\r\n          + \"' was not found.\", null);\r\n    else\r\n      iResponse.writeRecord(rec, fetchPlan, null);\r\n    return false;\r\n  }","id":82600,"modified_method":"@Override\r\n  public boolean execute(final OHttpRequest iRequest, OHttpResponse iResponse) throws Exception {\r\n    ODatabaseDocumentTx db = null;\r\n\r\n    final String[] urlParts = checkSyntax(iRequest.url, 4,\r\n        \"Syntax error: documentbyclass/<database>/<class-name>/<record-position>[/fetchPlan]\");\r\n\r\n    final String fetchPlan = urlParts.length > 4 ? urlParts[4] : null;\r\n\r\n    iRequest.data.commandInfo = \"Load document\";\r\n\r\n    final ORecord<?> rec;\r\n    try {\r\n\r\n      db = getProfiledDatabaseInstance(iRequest);\r\n      if (db.getMetadata().getSchema().getClass(urlParts[2]) == null) {\r\n        throw new IllegalArgumentException(\"Invalid class '\" + urlParts[2] + \"'\");\r\n      }\r\n      final String rid = db.getClusterIdByName(urlParts[2]) + \":\" + urlParts[3];\r\n      rec = db.load(new ORecordId(rid), fetchPlan);\r\n\r\n    } finally {\r\n      if (db != null)\r\n        db.close();\r\n    }\r\n\r\n    if (rec == null)\r\n      iResponse.send(OHttpUtils.STATUS_NOTFOUND_CODE, \"Not Found\", OHttpUtils.CONTENT_JSON, \"Record with id '\" + urlParts[2]\r\n          + \"' was not found.\", null);\r\n    else\r\n      iResponse.writeRecord(rec, fetchPlan, null);\r\n    return false;\r\n  }","commit_id":"85d716607c6ab3e05dc71350bdac064fde4b7b1c","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"protected void exportStandard(final OHttpRequest iRequest, final OHttpResponse iResponse) throws InterruptedException,\r\n\t\t\tIOException {\r\n\t\tiRequest.data.commandInfo = \"Database export\";\r\n\t\tODatabaseRecord database = getProfiledDatabaseInstance(iRequest);\r\n\t\tiResponse.writeStatus(OHttpUtils.STATUS_OK_CODE, OHttpUtils.STATUS_OK_DESCRIPTION);\r\n\t\tiResponse.writeHeaders(OHttpUtils.CONTENT_GZIP);\r\n\t\tiResponse.writeLine(\"Content-Disposition: attachment; filename=\" + database.getName() + \".gz\");\r\n\t\tiResponse.writeLine(\"Date: \" + new Date());\r\n\t\tiResponse.writeLine(null);\r\n\t\tODatabaseExport export = new ODatabaseExport(database, new GZIPOutputStream(iResponse.getOutputStream()), this);\r\n\t\texport.exportDatabase();\r\n\t\t\r\n\t\ttry {\r\n\t\t\tiResponse.flush();\r\n\t\t} catch (SocketException e) {\r\n\t\t}\r\n\t}","id":82601,"modified_method":"protected void exportStandard(final OHttpRequest iRequest, final OHttpResponse iResponse) throws InterruptedException,\r\n      IOException {\r\n    iRequest.data.commandInfo = \"Database export\";\r\n    final ODatabaseRecord database = getProfiledDatabaseInstance(iRequest);\r\n    try {\r\n      iResponse.writeStatus(OHttpUtils.STATUS_OK_CODE, OHttpUtils.STATUS_OK_DESCRIPTION);\r\n      iResponse.writeHeaders(OHttpUtils.CONTENT_GZIP);\r\n      iResponse.writeLine(\"Content-Disposition: attachment; filename=\" + database.getName() + \".gz\");\r\n      iResponse.writeLine(\"Date: \" + new Date());\r\n      iResponse.writeLine(null);\r\n      final ODatabaseExport export = new ODatabaseExport(database, new GZIPOutputStream(iResponse.getOutputStream()), this);\r\n      export.exportDatabase();\r\n\r\n      try {\r\n        iResponse.flush();\r\n      } catch (SocketException e) {\r\n      }\r\n    } finally {\r\n      if (database != null)\r\n        database.close();\r\n    }\r\n  }","commit_id":"85d716607c6ab3e05dc71350bdac064fde4b7b1c","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Override\n  public boolean execute(OHttpRequest iRequest, OHttpResponse iResponse) throws Exception {\n    ODatabaseDocumentTx db = getProfiledDatabaseInstance(iRequest);\n    String[] urlParts = checkSyntax(iRequest.url, 3, \"Syntax error: fileDownload/<database>/rid/[/<fileName>][/<fileType>].\");\n\n    final String fileName = urlParts.length > 3 ? encodeResponseText(urlParts[3]) : \"unknown\";\n\n    final String fileType = urlParts.length > 5 ? encodeResponseText(urlParts[4]) + '/' + encodeResponseText(urlParts[5])\n        : (urlParts.length > 4 ? encodeResponseText(urlParts[4]) : \"\");\n\n    final String rid = urlParts[2];\n\n    iRequest.data.commandInfo = \"Download\";\n    iRequest.data.commandDetail = rid;\n\n    final ORecordAbstract<?> response;\n\n    try {\n\n      response = db.load(new ORecordId(rid));\n      if (response != null) {\n        if (response instanceof ORecordBytes) {\n          sendORecordBinaryFileContent(iRequest, iResponse, OHttpUtils.STATUS_OK_CODE, OHttpUtils.STATUS_OK_DESCRIPTION, fileType,\n              (ORecordBytes) response, fileName);\n        } else if (response instanceof ORecordSchemaAware) {\n          for (OProperty prop : ((ORecordSchemaAware<?>) response).getSchemaClass().properties()) {\n            if (prop.getType().equals(OType.BINARY))\n              sendBinaryFieldFileContent(iRequest, iResponse, OHttpUtils.STATUS_OK_CODE, OHttpUtils.STATUS_OK_DESCRIPTION,\n                  fileType, (byte[]) ((ORecordSchemaAware<?>) response).field(prop.getName()), fileName);\n          }\n        } else {\n          iResponse.send(OHttpUtils.STATUS_INVALIDMETHOD_CODE, \"Record requested is not a file nor has a readable schema\",\n              OHttpUtils.CONTENT_TEXT_PLAIN, \"Record requested is not a file nor has a readable schema\", null);\n        }\n      } else {\n        iResponse.send(OHttpUtils.STATUS_INVALIDMETHOD_CODE, \"Record requested not exists\", OHttpUtils.CONTENT_TEXT_PLAIN, \"Record requestes not exists\",\n            null);\n      }\n    } catch (Exception e) {\n      iResponse.send(OHttpUtils.STATUS_INTERNALERROR_CODE, OHttpUtils.STATUS_INTERNALERROR_DESCRIPTION, OHttpUtils.CONTENT_TEXT_PLAIN, e.getMessage(),\n          null);\n    } finally {\n      if (db != null)\n        OSharedDocumentDatabase.release(db);\n    }\n\n    return false;\n  }","id":82602,"modified_method":"@Override\n  public boolean execute(OHttpRequest iRequest, OHttpResponse iResponse) throws Exception {\n    ODatabaseDocumentTx db = getProfiledDatabaseInstance(iRequest);\n    String[] urlParts = checkSyntax(iRequest.url, 3, \"Syntax error: fileDownload/<database>/rid/[/<fileName>][/<fileType>].\");\n\n    final String fileName = urlParts.length > 3 ? encodeResponseText(urlParts[3]) : \"unknown\";\n\n    final String fileType = urlParts.length > 5 ? encodeResponseText(urlParts[4]) + '/' + encodeResponseText(urlParts[5])\n        : (urlParts.length > 4 ? encodeResponseText(urlParts[4]) : \"\");\n\n    final String rid = urlParts[2];\n\n    iRequest.data.commandInfo = \"Download\";\n    iRequest.data.commandDetail = rid;\n\n    final ORecordAbstract<?> response;\n\n    try {\n\n      response = db.load(new ORecordId(rid));\n      if (response != null) {\n        if (response instanceof ORecordBytes) {\n          sendORecordBinaryFileContent(iRequest, iResponse, OHttpUtils.STATUS_OK_CODE, OHttpUtils.STATUS_OK_DESCRIPTION, fileType,\n              (ORecordBytes) response, fileName);\n        } else if (response instanceof ORecordSchemaAware) {\n          for (OProperty prop : ((ORecordSchemaAware<?>) response).getSchemaClass().properties()) {\n            if (prop.getType().equals(OType.BINARY))\n              sendBinaryFieldFileContent(iRequest, iResponse, OHttpUtils.STATUS_OK_CODE, OHttpUtils.STATUS_OK_DESCRIPTION,\n                  fileType, (byte[]) ((ORecordSchemaAware<?>) response).field(prop.getName()), fileName);\n          }\n        } else {\n          iResponse.send(OHttpUtils.STATUS_INVALIDMETHOD_CODE, \"Record requested is not a file nor has a readable schema\",\n              OHttpUtils.CONTENT_TEXT_PLAIN, \"Record requested is not a file nor has a readable schema\", null);\n        }\n      } else {\n        iResponse.send(OHttpUtils.STATUS_INVALIDMETHOD_CODE, \"Record requested not exists\", OHttpUtils.CONTENT_TEXT_PLAIN,\n            \"Record requestes not exists\", null);\n      }\n    } catch (Exception e) {\n      iResponse.send(OHttpUtils.STATUS_INTERNALERROR_CODE, OHttpUtils.STATUS_INTERNALERROR_DESCRIPTION,\n          OHttpUtils.CONTENT_TEXT_PLAIN, e.getMessage(), null);\n    } finally {\n      if (db != null)\n        db.close();\n    }\n\n    return false;\n  }","commit_id":"85d716607c6ab3e05dc71350bdac064fde4b7b1c","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Override\r\n  @SuppressWarnings(\"unchecked\")\r\n  public boolean execute(final OHttpRequest iRequest, OHttpResponse iResponse) throws Exception {\r\n    String[] urlParts = checkSyntax(\r\n        iRequest.url,\r\n        4,\r\n        \"Syntax error: gephi/<database>/sql/<query-text>[/<limit>][/<fetchPlan>].<br/>Limit is optional and is setted to 20 by default. Set expressely to 0 to have no limits.\");\r\n\r\n    final int limit = urlParts.length > 4 ? Integer.parseInt(urlParts[4]) : 20;\r\n\r\n    final String fetchPlan = urlParts.length > 5 ? urlParts[5] : null;\r\n\r\n    final String text = urlParts[3];\r\n\r\n    iRequest.data.commandInfo = \"Gephi\";\r\n    iRequest.data.commandDetail = text;\r\n\r\n    ODatabaseDocumentTx db = null;\r\n\r\n    final List<OIdentifiable> response;\r\n\r\n    try {\r\n      db = getProfiledDatabaseInstance(iRequest);\r\n\r\n      response = (List<OIdentifiable>) db.command(new OSQLSynchQuery<ORecordSchemaAware<?>>(text, limit).setFetchPlan(fetchPlan))\r\n          .execute();\r\n\r\n    } finally {\r\n      if (db != null)\r\n        OSharedDocumentDatabase.release(db);\r\n    }\r\n\r\n    sendRecordsContent(iRequest, iResponse, response, fetchPlan);\r\n    return false;\r\n  }","id":82603,"modified_method":"@Override\r\n  @SuppressWarnings(\"unchecked\")\r\n  public boolean execute(final OHttpRequest iRequest, OHttpResponse iResponse) throws Exception {\r\n    String[] urlParts = checkSyntax(\r\n        iRequest.url,\r\n        4,\r\n        \"Syntax error: gephi/<database>/sql/<query-text>[/<limit>][/<fetchPlan>].<br/>Limit is optional and is setted to 20 by default. Set expressely to 0 to have no limits.\");\r\n\r\n    final int limit = urlParts.length > 4 ? Integer.parseInt(urlParts[4]) : 20;\r\n\r\n    final String fetchPlan = urlParts.length > 5 ? urlParts[5] : null;\r\n\r\n    final String text = urlParts[3];\r\n\r\n    iRequest.data.commandInfo = \"Gephi\";\r\n    iRequest.data.commandDetail = text;\r\n\r\n    ODatabaseDocumentTx db = null;\r\n\r\n    final List<OIdentifiable> response;\r\n\r\n    try {\r\n      db = getProfiledDatabaseInstance(iRequest);\r\n\r\n      response = (List<OIdentifiable>) db.command(new OSQLSynchQuery<ORecordSchemaAware<?>>(text, limit).setFetchPlan(fetchPlan))\r\n          .execute();\r\n\r\n    } finally {\r\n      if (db != null)\r\n        db.close();\r\n    }\r\n\r\n    sendRecordsContent(iRequest, iResponse, response, fetchPlan);\r\n    return false;\r\n  }","commit_id":"85d716607c6ab3e05dc71350bdac064fde4b7b1c","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@SuppressWarnings(\"unchecked\")\r\n\t@Override\r\n\tpublic boolean execute(final OHttpRequest iRequest, OHttpResponse iResponse) throws Exception {\r\n\t\tfinal String[] urlParts = checkSyntax(iRequest.url, 3, \"Syntax error: index/<database>/<index-name>/<key>\");\r\n\r\n\t\tiRequest.data.commandInfo = \"Index get\";\r\n\r\n\t\tODatabaseDocumentTx db = null;\r\n\r\n\t\ttry {\r\n\t\t\tdb = getProfiledDatabaseInstance(iRequest);\r\n\r\n\t\t\tfinal OIndex<?> index = db.getMetadata().getIndexManager().getIndex(urlParts[2]);\r\n\t\t\tif (index == null)\r\n\t\t\t\tthrow new IllegalArgumentException(\"Index name '\" + urlParts[2] + \"' not found\");\r\n\r\n\t\t\tfinal Object content = index.get(urlParts[3]);\r\n\r\n\t\t\tif (content == null)\r\n\t\t\t  iResponse.send(OHttpUtils.STATUS_NOTFOUND_CODE, OHttpUtils.STATUS_NOTFOUND_DESCRIPTION, OHttpUtils.CONTENT_TEXT_PLAIN, null,\r\n\t\t\t\t\t\tnull);\r\n\t\t\telse {\r\n\t\t\t\tfinal StringBuilder buffer = new StringBuilder();\r\n\t\t\t\tbuffer.append('[');\r\n\r\n\t\t\t\tif (content instanceof Collection<?>) {\r\n\t\t\t\t\tCollection<OIdentifiable> collection = (Collection<OIdentifiable>) content;\r\n\t\t\t\t\tfor (OIdentifiable item : collection) {\r\n\t\t\t\t\t\tbuffer.append(item.getRecord().toJSON());\r\n\t\t\t\t\t}\r\n\t\t\t\t} else\r\n\t\t\t\t\tbuffer.append(((OIdentifiable) content).getRecord().toJSON());\r\n\r\n\t\t\t\tbuffer.append(']');\r\n\r\n\t\t\t\tiResponse.send(OHttpUtils.STATUS_OK_CODE, \"OK\", OHttpUtils.CONTENT_TEXT_PLAIN, buffer.toString(), null);\r\n\t\t\t}\r\n\t\t} finally {\r\n\t\t\tif (db != null)\r\n\t\t\t\tOSharedDocumentDatabase.release(db);\r\n\t\t}\r\n\t\treturn false;\r\n\t}","id":82604,"modified_method":"@SuppressWarnings(\"unchecked\")\r\n  @Override\r\n  public boolean execute(final OHttpRequest iRequest, OHttpResponse iResponse) throws Exception {\r\n    final String[] urlParts = checkSyntax(iRequest.url, 3, \"Syntax error: index/<database>/<index-name>/<key>\");\r\n\r\n    iRequest.data.commandInfo = \"Index get\";\r\n\r\n    ODatabaseDocumentTx db = null;\r\n\r\n    try {\r\n      db = getProfiledDatabaseInstance(iRequest);\r\n\r\n      final OIndex<?> index = db.getMetadata().getIndexManager().getIndex(urlParts[2]);\r\n      if (index == null)\r\n        throw new IllegalArgumentException(\"Index name '\" + urlParts[2] + \"' not found\");\r\n\r\n      final Object content = index.get(urlParts[3]);\r\n\r\n      if (content == null)\r\n        iResponse.send(OHttpUtils.STATUS_NOTFOUND_CODE, OHttpUtils.STATUS_NOTFOUND_DESCRIPTION, OHttpUtils.CONTENT_TEXT_PLAIN,\r\n            null, null);\r\n      else {\r\n        final StringBuilder buffer = new StringBuilder();\r\n        buffer.append('[');\r\n\r\n        if (content instanceof Collection<?>) {\r\n          Collection<OIdentifiable> collection = (Collection<OIdentifiable>) content;\r\n          for (OIdentifiable item : collection) {\r\n            buffer.append(item.getRecord().toJSON());\r\n          }\r\n        } else\r\n          buffer.append(((OIdentifiable) content).getRecord().toJSON());\r\n\r\n        buffer.append(']');\r\n\r\n        iResponse.send(OHttpUtils.STATUS_OK_CODE, \"OK\", OHttpUtils.CONTENT_TEXT_PLAIN, buffer.toString(), null);\r\n      }\r\n    } finally {\r\n      if (db != null)\r\n        db.close();\r\n    }\r\n    return false;\r\n  }","commit_id":"85d716607c6ab3e05dc71350bdac064fde4b7b1c","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Override\r\n\t@SuppressWarnings(\"unchecked\")\r\n\tpublic boolean execute(final OHttpRequest iRequest, OHttpResponse iResponse) throws Exception {\r\n\t\tString[] urlParts = checkSyntax(\r\n\t\t\t\tiRequest.url,\r\n\t\t\t\t4,\r\n\t\t\t\t\"Syntax error: query/<database>/sql/<query-text>[/<limit>][/<fetchPlan>].<br/>Limit is optional and is setted to 20 by default. Set expressely to 0 to have no limits.\");\r\n\r\n\t\tfinal int limit = urlParts.length > 4 ? Integer.parseInt(urlParts[4]) : 20;\r\n\r\n\t\tfinal String fetchPlan = urlParts.length > 5 ? urlParts[5] : null;\r\n\r\n\t\tfinal String text = urlParts[3];\r\n\r\n\t\tiRequest.data.commandInfo = \"Query\";\r\n\t\tiRequest.data.commandDetail = text;\r\n\r\n\t\tODatabaseDocumentTx db = null;\r\n\r\n\t\tfinal List<OIdentifiable> response;\r\n\r\n\t\ttry {\r\n\t\t\tdb = getProfiledDatabaseInstance(iRequest);\r\n\r\n\t\t\tresponse = (List<OIdentifiable>) db.command(new OSQLSynchQuery<ORecordSchemaAware<?>>(text, limit).setFetchPlan(fetchPlan))\r\n\t\t\t\t\t.execute();\r\n\r\n\t\t} finally {\r\n\t\t\tif (db != null)\r\n\t\t\t\tOSharedDocumentDatabase.release(db);\r\n\t\t}\r\n\r\n\t\tiResponse.writeRecords(response, fetchPlan);\r\n\t\treturn false;\r\n\t}","id":82605,"modified_method":"@Override\r\n  @SuppressWarnings(\"unchecked\")\r\n  public boolean execute(final OHttpRequest iRequest, OHttpResponse iResponse) throws Exception {\r\n    String[] urlParts = checkSyntax(\r\n        iRequest.url,\r\n        4,\r\n        \"Syntax error: query/<database>/sql/<query-text>[/<limit>][/<fetchPlan>].<br/>Limit is optional and is setted to 20 by default. Set expressely to 0 to have no limits.\");\r\n\r\n    final int limit = urlParts.length > 4 ? Integer.parseInt(urlParts[4]) : 20;\r\n\r\n    final String fetchPlan = urlParts.length > 5 ? urlParts[5] : null;\r\n\r\n    final String text = urlParts[3];\r\n\r\n    iRequest.data.commandInfo = \"Query\";\r\n    iRequest.data.commandDetail = text;\r\n\r\n    ODatabaseDocumentTx db = null;\r\n\r\n    final List<OIdentifiable> response;\r\n\r\n    try {\r\n      db = getProfiledDatabaseInstance(iRequest);\r\n\r\n      response = (List<OIdentifiable>) db.command(new OSQLSynchQuery<ORecordSchemaAware<?>>(text, limit).setFetchPlan(fetchPlan))\r\n          .execute();\r\n\r\n    } finally {\r\n      if (db != null)\r\n        db.close();\r\n    }\r\n\r\n    iResponse.writeRecords(response, fetchPlan);\r\n    return false;\r\n  }","commit_id":"85d716607c6ab3e05dc71350bdac064fde4b7b1c","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Override\r\n  public boolean execute(final OHttpRequest iRequest, final OHttpResponse iResponse) throws Exception {\r\n    String[] urlParts = checkSyntax(iRequest.url, 2, \"Syntax error: allocation/<database>\");\r\n\r\n    iRequest.data.commandInfo = \"Storage allocation\";\r\n    iRequest.data.commandDetail = urlParts[1];\r\n\r\n    ODatabaseDocumentTx db = null;\r\n\r\n    try {\r\n      db = getProfiledDatabaseInstance(iRequest);\r\n\r\n      if (!(db.getStorage() instanceof OStorageLocal))\r\n        throw new IllegalArgumentException(\"Cannot get allocation information for database '\" + iRequest.databaseName\r\n            + \"' because it is not a disk-based database\");\r\n\r\n      final List<ODataHoleInfo> holes = ((OStorageLocal) db.getStorage()).getHolesList();\r\n      Collections.sort(holes);\r\n\r\n      final StringWriter buffer = new StringWriter();\r\n      final OJSONWriter json = new OJSONWriter(buffer);\r\n\r\n      final ODataLocal dataSegment = ((OStorageLocal) db.getStorage()).getDataSegmentById(0);\r\n      final long dbSize = dataSegment.getFilledUpTo();\r\n\r\n      json.beginObject();\r\n      json.writeAttribute(1, true, \"size\", dbSize);\r\n\r\n      long current = 0;\r\n\r\n      long holesSize = 0;\r\n\r\n      json.beginCollection(1, true, \"segments\");\r\n      for (ODataHoleInfo h : holes) {\r\n        if (h.dataOffset == -1)\r\n          continue;\r\n\r\n        if (current < h.dataOffset) {\r\n          // DATA SEGMENT\r\n          json.beginObject(2, true, null);\r\n          json.writeAttribute(3, false, \"type\", \"d\");\r\n          json.writeAttribute(3, false, \"offset\", current);\r\n          json.writeAttribute(3, false, \"size\", h.dataOffset - current);\r\n          json.endObject(2, false);\r\n        }\r\n\r\n        json.beginObject(2, true, null);\r\n        json.writeAttribute(3, false, \"type\", \"h\");\r\n        json.writeAttribute(3, false, \"offset\", h.dataOffset);\r\n        json.writeAttribute(3, false, \"size\", h.size);\r\n        json.endObject(2, false);\r\n        holesSize += h.size;\r\n\r\n        current = h.dataOffset + h.size;\r\n      }\r\n\r\n      if (dbSize > current) {\r\n        // DATA SEGMENT\r\n        json.beginObject(2, true, null);\r\n        json.writeAttribute(3, false, \"type\", \"d\");\r\n        json.writeAttribute(3, false, \"offset\", current);\r\n        json.writeAttribute(3, false, \"size\", dbSize - current);\r\n        json.endObject(2, false);\r\n      }\r\n\r\n      json.endCollection(1, true);\r\n\r\n      json.writeAttribute(1, true, \"dataSize\", dbSize - holesSize);\r\n      json.writeAttribute(1, true, \"dataSizePercent\", (dbSize - holesSize) * 100 / dbSize);\r\n      json.writeAttribute(1, true, \"holesSize\", holesSize);\r\n      json.writeAttribute(1, true, \"holesSizePercent\", 100 - (dbSize - holesSize) * 100 / dbSize);\r\n\r\n      json.endObject();\r\n      json.flush();\r\n\r\n      iResponse.send(OHttpUtils.STATUS_OK_CODE, \"OK\", OHttpUtils.CONTENT_JSON, buffer.toString(), null);\r\n    } finally {\r\n      if (db != null)\r\n        OSharedDocumentDatabase.release(db);\r\n    }\r\n    return false;\r\n  }","id":82606,"modified_method":"@Override\r\n  public boolean execute(final OHttpRequest iRequest, final OHttpResponse iResponse) throws Exception {\r\n    String[] urlParts = checkSyntax(iRequest.url, 2, \"Syntax error: allocation/<database>\");\r\n\r\n    iRequest.data.commandInfo = \"Storage allocation\";\r\n    iRequest.data.commandDetail = urlParts[1];\r\n\r\n    ODatabaseDocumentTx db = null;\r\n\r\n    try {\r\n      db = getProfiledDatabaseInstance(iRequest);\r\n\r\n      if (!(db.getStorage() instanceof OStorageLocal))\r\n        throw new IllegalArgumentException(\"Cannot get allocation information for database '\" + iRequest.databaseName\r\n            + \"' because it is not a disk-based database\");\r\n\r\n      final List<ODataHoleInfo> holes = ((OStorageLocal) db.getStorage()).getHolesList();\r\n      Collections.sort(holes);\r\n\r\n      final StringWriter buffer = new StringWriter();\r\n      final OJSONWriter json = new OJSONWriter(buffer);\r\n\r\n      final ODataLocal dataSegment = ((OStorageLocal) db.getStorage()).getDataSegmentById(0);\r\n      final long dbSize = dataSegment.getFilledUpTo();\r\n\r\n      json.beginObject();\r\n      json.writeAttribute(1, true, \"size\", dbSize);\r\n\r\n      long current = 0;\r\n\r\n      long holesSize = 0;\r\n\r\n      json.beginCollection(1, true, \"segments\");\r\n      for (ODataHoleInfo h : holes) {\r\n        if (h.dataOffset == -1)\r\n          continue;\r\n\r\n        if (current < h.dataOffset) {\r\n          // DATA SEGMENT\r\n          json.beginObject(2, true, null);\r\n          json.writeAttribute(3, false, \"type\", \"d\");\r\n          json.writeAttribute(3, false, \"offset\", current);\r\n          json.writeAttribute(3, false, \"size\", h.dataOffset - current);\r\n          json.endObject(2, false);\r\n        }\r\n\r\n        json.beginObject(2, true, null);\r\n        json.writeAttribute(3, false, \"type\", \"h\");\r\n        json.writeAttribute(3, false, \"offset\", h.dataOffset);\r\n        json.writeAttribute(3, false, \"size\", h.size);\r\n        json.endObject(2, false);\r\n        holesSize += h.size;\r\n\r\n        current = h.dataOffset + h.size;\r\n      }\r\n\r\n      if (dbSize > current) {\r\n        // DATA SEGMENT\r\n        json.beginObject(2, true, null);\r\n        json.writeAttribute(3, false, \"type\", \"d\");\r\n        json.writeAttribute(3, false, \"offset\", current);\r\n        json.writeAttribute(3, false, \"size\", dbSize - current);\r\n        json.endObject(2, false);\r\n      }\r\n\r\n      json.endCollection(1, true);\r\n\r\n      json.writeAttribute(1, true, \"dataSize\", dbSize - holesSize);\r\n      json.writeAttribute(1, true, \"dataSizePercent\", (dbSize - holesSize) * 100 / dbSize);\r\n      json.writeAttribute(1, true, \"holesSize\", holesSize);\r\n      json.writeAttribute(1, true, \"holesSizePercent\", 100 - (dbSize - holesSize) * 100 / dbSize);\r\n\r\n      json.endObject();\r\n      json.flush();\r\n\r\n      iResponse.send(OHttpUtils.STATUS_OK_CODE, \"OK\", OHttpUtils.CONTENT_JSON, buffer.toString(), null);\r\n    } finally {\r\n      if (db != null)\r\n        db.close();\r\n    }\r\n    return false;\r\n  }","commit_id":"85d716607c6ab3e05dc71350bdac064fde4b7b1c","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Override\r\n\tpublic boolean execute(final OHttpRequest iRequest, OHttpResponse iResponse) throws Exception {\r\n\t\tString[] urlParts = checkSyntax(iRequest.url, 3, \"Syntax error: class/<database>/<class-name>\");\r\n\r\n\t\tiRequest.data.commandInfo = \"Create class\";\r\n\t\tiRequest.data.commandDetail = urlParts[2];\r\n\r\n\t\tODatabaseDocumentTx db = null;\r\n\r\n\t\ttry {\r\n\t\t\tdb = getProfiledDatabaseInstance(iRequest);\r\n\r\n\t\t\tif (db.getMetadata().getSchema().getClass(urlParts[2]) != null)\r\n\t\t\t\tthrow new IllegalArgumentException(\"Class '\" + urlParts[2] + \"' already exists\");\r\n\r\n\t\t\tdb.getMetadata().getSchema().createClass(urlParts[2]);\r\n\r\n\t\t\tiResponse.send(OHttpUtils.STATUS_CREATED_CODE, OHttpUtils.STATUS_CREATED_DESCRIPTION, OHttpUtils.CONTENT_TEXT_PLAIN, db.getMetadata().getSchema().getClasses().size(),\r\n\t\t\t\t\tnull);\r\n\r\n\t\t} finally {\r\n\t\t\tif (db != null)\r\n\t\t\t\tOSharedDocumentDatabase.release(db);\r\n\t\t}\r\n\t\treturn false;\r\n\t}","id":82607,"modified_method":"@Override\r\n  public boolean execute(final OHttpRequest iRequest, OHttpResponse iResponse) throws Exception {\r\n    String[] urlParts = checkSyntax(iRequest.url, 3, \"Syntax error: class/<database>/<class-name>\");\r\n\r\n    iRequest.data.commandInfo = \"Create class\";\r\n    iRequest.data.commandDetail = urlParts[2];\r\n\r\n    ODatabaseDocumentTx db = null;\r\n\r\n    try {\r\n      db = getProfiledDatabaseInstance(iRequest);\r\n\r\n      if (db.getMetadata().getSchema().getClass(urlParts[2]) != null)\r\n        throw new IllegalArgumentException(\"Class '\" + urlParts[2] + \"' already exists\");\r\n\r\n      db.getMetadata().getSchema().createClass(urlParts[2]);\r\n\r\n      iResponse.send(OHttpUtils.STATUS_CREATED_CODE, OHttpUtils.STATUS_CREATED_DESCRIPTION, OHttpUtils.CONTENT_TEXT_PLAIN, db\r\n          .getMetadata().getSchema().getClasses().size(), null);\r\n\r\n    } finally {\r\n      if (db != null)\r\n        db.close();\r\n    }\r\n    return false;\r\n  }","commit_id":"85d716607c6ab3e05dc71350bdac064fde4b7b1c","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Override\r\n  public boolean execute(final OHttpRequest iRequest, OHttpResponse iResponse) throws Exception {\r\n    final String[] urlParts = checkSyntax(iRequest.url, 3,\r\n        \"Syntax error: command/<database>/<language>/<command-text>[/limit][/<fetchPlan>]\");\r\n\r\n    // TRY TO GET THE COMMAND FROM THE URL, THEN FROM THE CONTENT\r\n    final String language = urlParts.length > 2 ? urlParts[2].trim() : \"sql\";\r\n    final String text = urlParts.length > 3 ? urlParts[3].trim() : iRequest.content;\r\n    final int limit = urlParts.length > 4 ? Integer.parseInt(urlParts[4].trim()) : -1;\r\n    final String fetchPlan = urlParts.length > 5 ? urlParts[5] : null;\r\n\r\n    iRequest.data.commandInfo = \"Command\";\r\n    iRequest.data.commandDetail = text;\r\n\r\n    ODatabaseDocumentTx db = null;\r\n\r\n    Object response;\r\n\r\n    try {\r\n      db = getProfiledDatabaseInstance(iRequest);\r\n\r\n      final OCommandRequestText cmd = (OCommandRequestText) OCommandManager.instance().getRequester(language);\r\n      cmd.setText(text);\r\n      cmd.setLimit(limit);\r\n      cmd.setFetchPlan(fetchPlan);\r\n      response = db.command(cmd).execute();\r\n\r\n    } finally {\r\n      if (db != null)\r\n        OSharedDocumentDatabase.release(db);\r\n    }\r\n\r\n    final String format = fetchPlan != null ? \"fetchPlan:\" + fetchPlan : null;\r\n\r\n    iResponse.writeResult(response, format);\r\n    return false;\r\n  }","id":82608,"modified_method":"@Override\r\n  public boolean execute(final OHttpRequest iRequest, OHttpResponse iResponse) throws Exception {\r\n    final String[] urlParts = checkSyntax(iRequest.url, 3,\r\n        \"Syntax error: command/<database>/<language>/<command-text>[/limit][/<fetchPlan>]\");\r\n\r\n    // TRY TO GET THE COMMAND FROM THE URL, THEN FROM THE CONTENT\r\n    final String language = urlParts.length > 2 ? urlParts[2].trim() : \"sql\";\r\n    final String text = urlParts.length > 3 ? urlParts[3].trim() : iRequest.content;\r\n    final int limit = urlParts.length > 4 ? Integer.parseInt(urlParts[4].trim()) : -1;\r\n    final String fetchPlan = urlParts.length > 5 ? urlParts[5] : null;\r\n\r\n    iRequest.data.commandInfo = \"Command\";\r\n    iRequest.data.commandDetail = text;\r\n\r\n    ODatabaseDocumentTx db = null;\r\n\r\n    Object response;\r\n\r\n    try {\r\n      db = getProfiledDatabaseInstance(iRequest);\r\n\r\n      final OCommandRequestText cmd = (OCommandRequestText) OCommandManager.instance().getRequester(language);\r\n      cmd.setText(text);\r\n      cmd.setLimit(limit);\r\n      cmd.setFetchPlan(fetchPlan);\r\n      response = db.command(cmd).execute();\r\n\r\n    } finally {\r\n      if (db != null)\r\n        db.close();\r\n    }\r\n\r\n    final String format = fetchPlan != null ? \"fetchPlan:\" + fetchPlan : null;\r\n\r\n    iResponse.writeResult(response, format);\r\n    return false;\r\n  }","commit_id":"85d716607c6ab3e05dc71350bdac064fde4b7b1c","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Override\r\n  public boolean execute(final OHttpRequest iRequest, OHttpResponse iResponse) throws Exception {\r\n    checkSyntax(iRequest.url, 2, \"Syntax error: document/<database>\");\r\n\r\n    iRequest.data.commandInfo = \"Create document\";\r\n\r\n    ODatabaseDocumentTx db = null;\r\n\r\n    ODocument doc = null;\r\n\r\n    try {\r\n      db = getProfiledDatabaseInstance(iRequest);\r\n\r\n      doc = new ODocument().fromJSON(iRequest.content);\r\n\r\n      // ASSURE TO MAKE THE RECORD ID INVALID\r\n      ((ORecordId) doc.getIdentity()).clusterPosition = ORID.CLUSTER_POS_INVALID;\r\n\r\n      doc.save();\r\n\r\n    } finally {\r\n      if (db != null)\r\n        OSharedDocumentDatabase.release(db);\r\n    }\r\n\r\n    iResponse.send(OHttpUtils.STATUS_CREATED_CODE, OHttpUtils.STATUS_CREATED_DESCRIPTION, OHttpUtils.CONTENT_TEXT_PLAIN, doc.getIdentity(),\r\n        null, true);\r\n    return false;\r\n  }","id":82609,"modified_method":"@Override\r\n  public boolean execute(final OHttpRequest iRequest, OHttpResponse iResponse) throws Exception {\r\n    checkSyntax(iRequest.url, 2, \"Syntax error: document/<database>\");\r\n\r\n    iRequest.data.commandInfo = \"Create document\";\r\n\r\n    ODatabaseDocumentTx db = null;\r\n\r\n    ODocument doc = null;\r\n\r\n    try {\r\n      db = getProfiledDatabaseInstance(iRequest);\r\n\r\n      doc = new ODocument().fromJSON(iRequest.content);\r\n\r\n      // ASSURE TO MAKE THE RECORD ID INVALID\r\n      ((ORecordId) doc.getIdentity()).clusterPosition = ORID.CLUSTER_POS_INVALID;\r\n\r\n      doc.save();\r\n\r\n    } finally {\r\n      if (db != null)\r\n        db.close();\r\n    }\r\n\r\n    iResponse.send(OHttpUtils.STATUS_CREATED_CODE, OHttpUtils.STATUS_CREATED_DESCRIPTION, OHttpUtils.CONTENT_TEXT_PLAIN,\r\n        doc.getIdentity(), null, true);\r\n    return false;\r\n  }","commit_id":"85d716607c6ab3e05dc71350bdac064fde4b7b1c","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Override\r\n\tpublic boolean execute(final OHttpRequest iRequest, OHttpResponse iResponse) throws Exception {\r\n\t\tfinal String[] urlParts = checkSyntax(iRequest.url, 4,\r\n\t\t\t\t\"Syntax error: importRecords/<database>/<format>/<class>[/<separator>][/<string-delimiter>][/<locale>]\");\r\n\r\n\t\tfinal long start = System.currentTimeMillis();\r\n\r\n\t\tiRequest.data.commandInfo = \"Import records\";\r\n\r\n\t\tODatabaseDocumentTx db = getProfiledDatabaseInstance(iRequest);\r\n\t\ttry {\r\n\r\n\t\t\tfinal OClass cls = db.getMetadata().getSchema().getClass(urlParts[3]);\r\n\t\t\tif (cls == null)\r\n\t\t\t\tthrow new IllegalArgumentException(\"Class '\" + urlParts[3] + \" is not defined\");\r\n\r\n\t\t\tif (iRequest.content == null)\r\n\t\t\t\tthrow new IllegalArgumentException(\"Empty content\");\r\n\r\n\t\t\tif (urlParts[2].equalsIgnoreCase(\"csv\")) {\r\n\t\t\t\tfinal char separator = urlParts.length > 4 ? urlParts[4].charAt(0) : CSV_SEPARATOR;\r\n\t\t\t\tfinal char stringDelimiter = urlParts.length > 5 ? urlParts[5].charAt(0) : CSV_STR_DELIMITER;\r\n\t\t\t\tfinal Locale locale = urlParts.length > 6 ? new Locale(urlParts[6]) : Locale.getDefault();\r\n\r\n\t\t\t\tfinal BufferedReader reader = new BufferedReader(new StringReader(iRequest.content));\r\n\t\t\t\tfinal String header = reader.readLine().trim();\r\n\t\t\t\tif (header.length() == 0)\r\n\t\t\t\t\tthrow new InputMismatchException(\"Missing CSV file header\");\r\n\r\n\t\t\t\tfinal List<String> columns = OStringSerializerHelper.smartSplit(header, separator);\r\n\t\t\t\tfor (int i = 0; i < columns.size(); ++i)\r\n\t\t\t\t\tcolumns.set(i, OStringSerializerHelper.getStringContent(columns.get(i)));\r\n\r\n\t\t\t\tint imported = 0;\r\n\t\t\t\tint errors = 0;\r\n\r\n\t\t\t\tfinal StringBuilder output = new StringBuilder();\r\n\r\n\t\t\t\tint line = 0;\r\n\t\t\t\tint col = 0;\r\n\t\t\t\tString column = \"?\";\r\n\t\t\t\tString parsedCell = \"?\";\r\n\t\t\t\tfinal NumberFormat numberFormat = NumberFormat.getNumberInstance(locale);\r\n\r\n\t\t\t\tfor (line = 2; reader.ready(); line++) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tfinal String parsedRow = reader.readLine();\r\n\t\t\t\t\t\tif (parsedRow == null)\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tfinal ODocument doc = new ODocument(cls);\r\n\t\t\t\t\t\tfinal String row = parsedRow.trim();\r\n\t\t\t\t\t\tfinal List<String> cells = OStringSerializerHelper.smartSplit(row, CSV_SEPARATOR);\r\n\r\n\t\t\t\t\t\tfor (col = 0; col < columns.size(); ++col) {\r\n\t\t\t\t\t\t\tparsedCell = cells.get(col);\r\n\t\t\t\t\t\t\tcolumn = columns.get(col);\r\n\r\n\t\t\t\t\t\t\tString cellValue = parsedCell.trim();\r\n\r\n\t\t\t\t\t\t\tif (cellValue.length() == 0 || cellValue.equalsIgnoreCase(\"null\"))\r\n\t\t\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t\t\tObject value;\r\n\t\t\t\t\t\t\tif (cellValue.length() >= 2 && cellValue.charAt(0) == stringDelimiter\r\n\t\t\t\t\t\t\t\t\t&& cellValue.charAt(cellValue.length() - 1) == stringDelimiter)\r\n\t\t\t\t\t\t\t\tvalue = OStringSerializerHelper.getStringContent(cellValue);\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t\tvalue = numberFormat.parse(cellValue);\r\n\t\t\t\t\t\t\t\t} catch (Exception e) {\r\n\t\t\t\t\t\t\t\t\tvalue = ORecordSerializerCSVAbstract.getTypeValue(cellValue);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tdoc.field(columns.get(col), value);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tdoc.save();\r\n\t\t\t\t\t\timported++;\r\n\r\n\t\t\t\t\t} catch (Exception e) {\r\n\t\t\t\t\t\terrors++;\r\n\t\t\t\t\t\toutput.append(String.format(\"#%d: line %d column %s (%d) value '%s': '%s'\\n\", errors, line, column, col, parsedCell,\r\n\t\t\t\t\t\t\t\te.toString()));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfinal float elapsed = (System.currentTimeMillis() - start) / 1000;\r\n\r\n\t\t\t\tString message = String\r\n\t\t\t\t\t\t.format(\r\n\t\t\t\t\t\t\t\t\"Import of records of class '%s' completed in %5.3f seconds. Line parsed: %d, imported: %d, error: %d\\nDetailed messages:\\n%s\",\r\n\t\t\t\t\t\t\t\tcls.getName(), elapsed, line, imported, errors, output);\r\n\r\n\t\t\t\tiResponse.send(OHttpUtils.STATUS_CREATED_CODE, OHttpUtils.STATUS_CREATED_DESCRIPTION, OHttpUtils.CONTENT_TEXT_PLAIN, message,\r\n\t\t\t\t\t\tnull);\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t} else\r\n\t\t\t\tthrow new UnsupportedOperationException(\"Unsupported format on importing record. Available formats are: csv\");\r\n\r\n\t\t} finally {\r\n\t\t\tif (db != null)\r\n\t\t\t\tOSharedDocumentDatabase.release(db);\r\n\t\t}\r\n\t}","id":82610,"modified_method":"@Override\r\n  public boolean execute(final OHttpRequest iRequest, OHttpResponse iResponse) throws Exception {\r\n    final String[] urlParts = checkSyntax(iRequest.url, 4,\r\n        \"Syntax error: importRecords/<database>/<format>/<class>[/<separator>][/<string-delimiter>][/<locale>]\");\r\n\r\n    final long start = System.currentTimeMillis();\r\n\r\n    iRequest.data.commandInfo = \"Import records\";\r\n\r\n    ODatabaseDocumentTx db = getProfiledDatabaseInstance(iRequest);\r\n    try {\r\n\r\n      final OClass cls = db.getMetadata().getSchema().getClass(urlParts[3]);\r\n      if (cls == null)\r\n        throw new IllegalArgumentException(\"Class '\" + urlParts[3] + \" is not defined\");\r\n\r\n      if (iRequest.content == null)\r\n        throw new IllegalArgumentException(\"Empty content\");\r\n\r\n      if (urlParts[2].equalsIgnoreCase(\"csv\")) {\r\n        final char separator = urlParts.length > 4 ? urlParts[4].charAt(0) : CSV_SEPARATOR;\r\n        final char stringDelimiter = urlParts.length > 5 ? urlParts[5].charAt(0) : CSV_STR_DELIMITER;\r\n        final Locale locale = urlParts.length > 6 ? new Locale(urlParts[6]) : Locale.getDefault();\r\n\r\n        final BufferedReader reader = new BufferedReader(new StringReader(iRequest.content));\r\n        final String header = reader.readLine().trim();\r\n        if (header.length() == 0)\r\n          throw new InputMismatchException(\"Missing CSV file header\");\r\n\r\n        final List<String> columns = OStringSerializerHelper.smartSplit(header, separator);\r\n        for (int i = 0; i < columns.size(); ++i)\r\n          columns.set(i, OStringSerializerHelper.getStringContent(columns.get(i)));\r\n\r\n        int imported = 0;\r\n        int errors = 0;\r\n\r\n        final StringBuilder output = new StringBuilder();\r\n\r\n        int line = 0;\r\n        int col = 0;\r\n        String column = \"?\";\r\n        String parsedCell = \"?\";\r\n        final NumberFormat numberFormat = NumberFormat.getNumberInstance(locale);\r\n\r\n        for (line = 2; reader.ready(); line++) {\r\n          try {\r\n            final String parsedRow = reader.readLine();\r\n            if (parsedRow == null)\r\n              break;\r\n\r\n            final ODocument doc = new ODocument(cls);\r\n            final String row = parsedRow.trim();\r\n            final List<String> cells = OStringSerializerHelper.smartSplit(row, CSV_SEPARATOR);\r\n\r\n            for (col = 0; col < columns.size(); ++col) {\r\n              parsedCell = cells.get(col);\r\n              column = columns.get(col);\r\n\r\n              String cellValue = parsedCell.trim();\r\n\r\n              if (cellValue.length() == 0 || cellValue.equalsIgnoreCase(\"null\"))\r\n                continue;\r\n\r\n              Object value;\r\n              if (cellValue.length() >= 2 && cellValue.charAt(0) == stringDelimiter\r\n                  && cellValue.charAt(cellValue.length() - 1) == stringDelimiter)\r\n                value = OStringSerializerHelper.getStringContent(cellValue);\r\n              else {\r\n                try {\r\n                  value = numberFormat.parse(cellValue);\r\n                } catch (Exception e) {\r\n                  value = ORecordSerializerCSVAbstract.getTypeValue(cellValue);\r\n                }\r\n              }\r\n\r\n              doc.field(columns.get(col), value);\r\n            }\r\n\r\n            doc.save();\r\n            imported++;\r\n\r\n          } catch (Exception e) {\r\n            errors++;\r\n            output.append(String.format(\"#%d: line %d column %s (%d) value '%s': '%s'\\n\", errors, line, column, col, parsedCell,\r\n                e.toString()));\r\n          }\r\n        }\r\n\r\n        final float elapsed = (System.currentTimeMillis() - start) / 1000;\r\n\r\n        String message = String\r\n            .format(\r\n                \"Import of records of class '%s' completed in %5.3f seconds. Line parsed: %d, imported: %d, error: %d\\nDetailed messages:\\n%s\",\r\n                cls.getName(), elapsed, line, imported, errors, output);\r\n\r\n        iResponse.send(OHttpUtils.STATUS_CREATED_CODE, OHttpUtils.STATUS_CREATED_DESCRIPTION, OHttpUtils.CONTENT_TEXT_PLAIN,\r\n            message, null);\r\n        return false;\r\n\r\n      } else\r\n        throw new UnsupportedOperationException(\"Unsupported format on importing record. Available formats are: csv\");\r\n\r\n    } finally {\r\n      if (db != null)\r\n        db.close();\r\n    }\r\n  }","commit_id":"85d716607c6ab3e05dc71350bdac064fde4b7b1c","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Override\r\n  public boolean execute(final OHttpRequest iRequest, OHttpResponse iResponse) throws Exception {\r\n    ODatabaseDocumentTx db = null;\r\n    try {\r\n      db = getProfiledDatabaseInstance(iRequest);\r\n      if (iRequest.content == null || iRequest.content.length() <= 0)\r\n        return addSingleProperty(iRequest, iResponse, db);\r\n      else {\r\n        return addMultipreProperties(iRequest, iResponse, db);\r\n      }\r\n    } finally {\r\n      if (db != null)\r\n        OSharedDocumentDatabase.release(db);\r\n    }\r\n  }","id":82611,"modified_method":"@Override\r\n  public boolean execute(final OHttpRequest iRequest, OHttpResponse iResponse) throws Exception {\r\n    ODatabaseDocumentTx db = null;\r\n    try {\r\n      db = getProfiledDatabaseInstance(iRequest);\r\n      if (iRequest.content == null || iRequest.content.length() <= 0)\r\n        return addSingleProperty(iRequest, iResponse, db);\r\n      else {\r\n        return addMultipreProperties(iRequest, iResponse, db);\r\n      }\r\n    } finally {\r\n      if (db != null)\r\n        db.close();\r\n    }\r\n  }","commit_id":"85d716607c6ab3e05dc71350bdac064fde4b7b1c","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public boolean execute(final OHttpRequest iRequest, OHttpResponse iResponse) throws Exception {\r\n    ODatabaseDocumentTx db = null;\r\n\r\n    try {\r\n      final String[] urlParts = checkSyntax(iRequest.url, 3, \"Syntax error: studio/<database>/<context>\");\r\n\r\n      db = getProfiledDatabaseInstance(iRequest);\r\n\r\n      final String req = iRequest.content;\r\n\r\n      // PARSE PARAMETERS\r\n      String operation = null;\r\n      String rid = null;\r\n      String className = null;\r\n\r\n      final Map<String, String> fields = new HashMap<String, String>();\r\n\r\n      final String[] params = req.split(\"&\");\r\n      String value;\r\n\r\n      for (String p : params) {\r\n        String[] pairs = p.split(\"=\");\r\n        value = pairs.length == 1 ? null : pairs[1];\r\n\r\n        if (\"oper\".equals(pairs[0]))\r\n          operation = value;\r\n        else if (\"0\".equals(pairs[0]))\r\n          rid = value;\r\n        else if (\"1\".equals(pairs[0]))\r\n          className = value;\r\n        else if (pairs[0].startsWith(ODocumentHelper.ATTRIBUTE_CLASS))\r\n          className = value;\r\n        else if (pairs[0].startsWith(\"@\") || pairs[0].equals(\"id\"))\r\n          continue;\r\n        else {\r\n          fields.put(pairs[0], value);\r\n        }\r\n      }\r\n\r\n      String context = urlParts[2];\r\n      if (\"document\".equals(context))\r\n        executeDocument(iRequest, iResponse, db, operation, rid, className, fields);\r\n      else if (\"classes\".equals(context))\r\n        executeClasses(iRequest, iResponse, db, operation, rid, className, fields);\r\n      else if (\"clusters\".equals(context))\r\n        executeClusters(iRequest, iResponse, db, operation, rid, className, fields);\r\n      else if (\"classProperties\".equals(context))\r\n        executeClassProperties(iRequest, iResponse, db, operation, rid, className, fields);\r\n      else if (\"classIndexes\".equals(context))\r\n        executeClassIndexes(iRequest, iResponse, db, operation, rid, className, fields);\r\n\r\n    } finally {\r\n      if (db != null)\r\n        OSharedDocumentDatabase.release(db);\r\n    }\r\n    return false;\r\n  }","id":82612,"modified_method":"public boolean execute(final OHttpRequest iRequest, OHttpResponse iResponse) throws Exception {\r\n    ODatabaseDocumentTx db = null;\r\n\r\n    try {\r\n      final String[] urlParts = checkSyntax(iRequest.url, 3, \"Syntax error: studio/<database>/<context>\");\r\n\r\n      db = getProfiledDatabaseInstance(iRequest);\r\n\r\n      final String req = iRequest.content;\r\n\r\n      // PARSE PARAMETERS\r\n      String operation = null;\r\n      String rid = null;\r\n      String className = null;\r\n\r\n      final Map<String, String> fields = new HashMap<String, String>();\r\n\r\n      final String[] params = req.split(\"&\");\r\n      String value;\r\n\r\n      for (String p : params) {\r\n        String[] pairs = p.split(\"=\");\r\n        value = pairs.length == 1 ? null : pairs[1];\r\n\r\n        if (\"oper\".equals(pairs[0]))\r\n          operation = value;\r\n        else if (\"0\".equals(pairs[0]))\r\n          rid = value;\r\n        else if (\"1\".equals(pairs[0]))\r\n          className = value;\r\n        else if (pairs[0].startsWith(ODocumentHelper.ATTRIBUTE_CLASS))\r\n          className = value;\r\n        else if (pairs[0].startsWith(\"@\") || pairs[0].equals(\"id\"))\r\n          continue;\r\n        else {\r\n          fields.put(pairs[0], value);\r\n        }\r\n      }\r\n\r\n      String context = urlParts[2];\r\n      if (\"document\".equals(context))\r\n        executeDocument(iRequest, iResponse, db, operation, rid, className, fields);\r\n      else if (\"classes\".equals(context))\r\n        executeClasses(iRequest, iResponse, db, operation, rid, className, fields);\r\n      else if (\"clusters\".equals(context))\r\n        executeClusters(iRequest, iResponse, db, operation, rid, className, fields);\r\n      else if (\"classProperties\".equals(context))\r\n        executeClassProperties(iRequest, iResponse, db, operation, rid, className, fields);\r\n      else if (\"classIndexes\".equals(context))\r\n        executeClassIndexes(iRequest, iResponse, db, operation, rid, className, fields);\r\n\r\n    } finally {\r\n      if (db != null)\r\n        db.close();\r\n    }\r\n    return false;\r\n  }","commit_id":"85d716607c6ab3e05dc71350bdac064fde4b7b1c","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Override\r\n  public boolean execute(final OHttpRequest iRequest, final OHttpResponse iResponse) throws Exception {\r\n    final String[] parts = checkSyntax(iRequest.url, 3, \"Syntax error: process/<database>/<template-name>[/param]*\");\r\n    iRequest.data.commandInfo = \"Processes a transformation returning a JSON\";\r\n\r\n    ODatabaseDocumentTx db = null;\r\n\r\n    try {\r\n      db = getProfiledDatabaseInstance(iRequest);\r\n\r\n      final String name = parts[2];\r\n      final Object[] args = new String[parts.length - 3];\r\n      for (int i = 3; i < parts.length; ++i)\r\n        args[i - 3] = parts[i];\r\n\r\n      // BIND CONTEXT VARIABLES\r\n      final OCommandContext context = new OBasicCommandContext();\r\n      int argIdx = 0;\r\n      for (Object arg : args)\r\n        context.setVariable(\"arg\" + (argIdx++), arg);\r\n\r\n      context.setVariable(\"request\", new OHttpRequestWrapper(iRequest, (String[]) args));\r\n      context.setVariable(\"response\", new OHttpResponseWrapper(iResponse));\r\n\r\n      final String debugMode = iRequest.getParameter(\"debug\");\r\n      if (debugMode != null && Boolean.parseBoolean(debugMode))\r\n        context.setVariable(\"debugMode\", Boolean.TRUE);\r\n\r\n      final OComposableProcessor processEngine = (OComposableProcessor) OProcessorManager.getInstance().get(\"composable\");\r\n      Object result = processEngine.processFromFile(name, context, iRequest.httpMethod.equals(\"GET\"));\r\n\r\n      if (result instanceof ODocument)\r\n        result = ((ODocument) result).field(\"result\");\r\n\r\n      iResponse.writeResult(result, \"\");\r\n\r\n    } catch (OCommandScriptException e) {\r\n      // EXCEPTION\r\n\r\n      final StringBuilder msg = new StringBuilder();\r\n      for (Exception currentException = e; currentException != null; currentException = (Exception) currentException.getCause()) {\r\n        if (msg.length() > 0)\r\n          msg.append(\"\\n\");\r\n        msg.append(currentException.getMessage());\r\n      }\r\n\r\n      iResponse.send(OHttpUtils.STATUS_BADREQ_CODE, OHttpUtils.STATUS_BADREQ_DESCRIPTION, OHttpUtils.CONTENT_TEXT_PLAIN,\r\n          msg.toString(), null, true);\r\n\r\n    } finally {\r\n      if (db != null)\r\n        OSharedDocumentDatabase.release(db);\r\n    }\r\n\r\n    return false;\r\n  }","id":82613,"modified_method":"@Override\r\n  public boolean execute(final OHttpRequest iRequest, final OHttpResponse iResponse) throws Exception {\r\n    final String[] parts = checkSyntax(iRequest.url, 3, \"Syntax error: process/<database>/<template-name>[/param]*\");\r\n    iRequest.data.commandInfo = \"Processes a transformation returning a JSON\";\r\n\r\n    ODatabaseDocumentTx db = null;\r\n\r\n    try {\r\n      db = getProfiledDatabaseInstance(iRequest);\r\n\r\n      final String name = parts[2];\r\n      final Object[] args = new String[parts.length - 3];\r\n      for (int i = 3; i < parts.length; ++i)\r\n        args[i - 3] = parts[i];\r\n\r\n      // BIND CONTEXT VARIABLES\r\n      final OCommandContext context = new OBasicCommandContext();\r\n      int argIdx = 0;\r\n      for (Object arg : args)\r\n        context.setVariable(\"arg\" + (argIdx++), arg);\r\n\r\n      context.setVariable(\"request\", new OHttpRequestWrapper(iRequest, (String[]) args));\r\n      context.setVariable(\"response\", new OHttpResponseWrapper(iResponse));\r\n\r\n      final String debugMode = iRequest.getParameter(\"debug\");\r\n      if (debugMode != null && Boolean.parseBoolean(debugMode))\r\n        context.setVariable(\"debugMode\", Boolean.TRUE);\r\n\r\n      final OComposableProcessor processEngine = (OComposableProcessor) OProcessorManager.getInstance().get(\"composable\");\r\n      Object result = processEngine.processFromFile(name, context, iRequest.httpMethod.equals(\"GET\"));\r\n\r\n      if (result instanceof ODocument)\r\n        result = ((ODocument) result).field(\"result\");\r\n\r\n      iResponse.writeResult(result, \"\");\r\n\r\n    } catch (OCommandScriptException e) {\r\n      // EXCEPTION\r\n\r\n      final StringBuilder msg = new StringBuilder();\r\n      for (Exception currentException = e; currentException != null; currentException = (Exception) currentException.getCause()) {\r\n        if (msg.length() > 0)\r\n          msg.append(\"\\n\");\r\n        msg.append(currentException.getMessage());\r\n      }\r\n\r\n      iResponse.send(OHttpUtils.STATUS_BADREQ_CODE, OHttpUtils.STATUS_BADREQ_DESCRIPTION, OHttpUtils.CONTENT_TEXT_PLAIN,\r\n          msg.toString(), null, true);\r\n\r\n    } finally {\r\n      if (db != null)\r\n        db.close();\r\n    }\r\n\r\n    return false;\r\n  }","commit_id":"85d716607c6ab3e05dc71350bdac064fde4b7b1c","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Override\r\n  public boolean execute(final OHttpRequest iRequest, OHttpResponse iResponse) throws Exception {\r\n    final String[] urlParts = checkSyntax(iRequest.url, 2, \"Syntax error: document/<database>[/<record-id>]\");\r\n\r\n    iRequest.data.commandInfo = \"Edit Document\";\r\n\r\n    ODatabaseDocumentTx db = null;\r\n    ORecordId recordId = null;\r\n    final ODocument doc;\r\n\r\n    try {\r\n      db = getProfiledDatabaseInstance(iRequest);\r\n\r\n      if (urlParts.length > 2) {\r\n        // EXTRACT RID\r\n        final int parametersPos = urlParts[2].indexOf('?');\r\n        final String rid = parametersPos > -1 ? urlParts[2].substring(0, parametersPos) : urlParts[2];\r\n        recordId = new ORecordId(rid);\r\n\r\n        if (!recordId.isValid())\r\n          throw new IllegalArgumentException(\"Invalid Record ID in request: \" + recordId);\r\n      } else\r\n        recordId = new ORecordId();\r\n\r\n      // UNMARSHALL DOCUMENT WITH REQUEST CONTENT\r\n      doc = new ODocument();\r\n      doc.fromJSON(iRequest.content);\r\n\r\n      if (!recordId.isValid())\r\n        recordId = (ORecordId) doc.getIdentity();\r\n      else\r\n        doc.setIdentity(recordId);\r\n\r\n      if (!recordId.isValid())\r\n        throw new IllegalArgumentException(\"Invalid Record ID in request: \" + recordId);\r\n\r\n      final ODocument currentDocument = db.load(recordId);\r\n\r\n      if (currentDocument == null) {\r\n        iResponse.send(OHttpUtils.STATUS_NOTFOUND_CODE, OHttpUtils.STATUS_NOTFOUND_DESCRIPTION, OHttpUtils.CONTENT_TEXT_PLAIN, \"Record \" + recordId + \" was not found.\",\r\n            null);\r\n        return false;\r\n      }\r\n\r\n      currentDocument.merge(doc, false, false);\r\n      currentDocument.setVersion(doc.getVersion());\r\n\r\n      currentDocument.save();\r\n\r\n    } finally {\r\n      if (db != null)\r\n        OSharedDocumentDatabase.release(db);\r\n    }\r\n\r\n    iResponse.send(OHttpUtils.STATUS_OK_CODE, \"OK\", OHttpUtils.CONTENT_TEXT_PLAIN, \"Record \" + recordId\r\n        + \" updated successfully.\", null);\r\n    return false;\r\n  }","id":82614,"modified_method":"@Override\r\n  public boolean execute(final OHttpRequest iRequest, OHttpResponse iResponse) throws Exception {\r\n    final String[] urlParts = checkSyntax(iRequest.url, 2, \"Syntax error: document/<database>[/<record-id>]\");\r\n\r\n    iRequest.data.commandInfo = \"Edit Document\";\r\n\r\n    ODatabaseDocumentTx db = null;\r\n    ORecordId recordId = null;\r\n    final ODocument doc;\r\n\r\n    try {\r\n      db = getProfiledDatabaseInstance(iRequest);\r\n\r\n      if (urlParts.length > 2) {\r\n        // EXTRACT RID\r\n        final int parametersPos = urlParts[2].indexOf('?');\r\n        final String rid = parametersPos > -1 ? urlParts[2].substring(0, parametersPos) : urlParts[2];\r\n        recordId = new ORecordId(rid);\r\n\r\n        if (!recordId.isValid())\r\n          throw new IllegalArgumentException(\"Invalid Record ID in request: \" + recordId);\r\n      } else\r\n        recordId = new ORecordId();\r\n\r\n      // UNMARSHALL DOCUMENT WITH REQUEST CONTENT\r\n      doc = new ODocument();\r\n      doc.fromJSON(iRequest.content);\r\n\r\n      if (!recordId.isValid())\r\n        recordId = (ORecordId) doc.getIdentity();\r\n      else\r\n        doc.setIdentity(recordId);\r\n\r\n      if (!recordId.isValid())\r\n        throw new IllegalArgumentException(\"Invalid Record ID in request: \" + recordId);\r\n\r\n      final ODocument currentDocument = db.load(recordId);\r\n\r\n      if (currentDocument == null) {\r\n        iResponse.send(OHttpUtils.STATUS_NOTFOUND_CODE, OHttpUtils.STATUS_NOTFOUND_DESCRIPTION, OHttpUtils.CONTENT_TEXT_PLAIN,\r\n            \"Record \" + recordId + \" was not found.\", null);\r\n        return false;\r\n      }\r\n\r\n      currentDocument.merge(doc, false, false);\r\n      currentDocument.setVersion(doc.getVersion());\r\n\r\n      currentDocument.save();\r\n\r\n    } finally {\r\n      if (db != null)\r\n        db.close();\r\n    }\r\n\r\n    iResponse.send(OHttpUtils.STATUS_OK_CODE, \"OK\", OHttpUtils.CONTENT_TEXT_PLAIN, \"Record \" + recordId + \" updated successfully.\",\r\n        null);\r\n    return false;\r\n  }","commit_id":"85d716607c6ab3e05dc71350bdac064fde4b7b1c","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Override\r\n  public boolean execute(final OHttpRequest iRequest, OHttpResponse iResponse) throws Exception {\r\n    final String[] urlParts = checkSyntax(iRequest.url, 3, \"Syntax error: index/<database>/<index-name>/<key>[/<value>]\");\r\n\r\n    iRequest.data.commandInfo = \"Index put\";\r\n\r\n    ODatabaseDocumentTx db = null;\r\n\r\n    try {\r\n      db = getProfiledDatabaseInstance(iRequest);\r\n\r\n      final OIndex<?> index = db.getMetadata().getIndexManager().getIndex(urlParts[2]);\r\n      if (index == null)\r\n        throw new IllegalArgumentException(\"Index name '\" + urlParts[2] + \"' not found\");\r\n\r\n      final OIdentifiable record;\r\n\r\n      if (urlParts.length > 4)\r\n        // GET THE RECORD ID AS VALUE\r\n        record = new ORecordId(urlParts[4]);\r\n      else {\r\n        // GET THE REQUEST CONTENT AS DOCUMENT\r\n        if (iRequest.content == null || iRequest.content.length() == 0)\r\n          throw new IllegalArgumentException(\"Index's entry value is null\");\r\n\r\n        record = new ODocument().fromJSON(iRequest.content);\r\n      }\r\n\r\n      final OIndexDefinition indexDefinition = index.getDefinition();\r\n      final Object key;\r\n      if (indexDefinition != null)\r\n        key = indexDefinition.createValue(urlParts[3]);\r\n      else\r\n        key = urlParts[3];\r\n\r\n      if (key == null)\r\n        throw new IllegalArgumentException(\"Invalid key value : \" + urlParts[3]);\r\n\r\n      index.put(key, record);\r\n\r\n      iResponse.send(OHttpUtils.STATUS_OK_CODE, \"OK\", OHttpUtils.CONTENT_TEXT_PLAIN, \"Key '\"\r\n          + urlParts[3] + \"' correctly inserted into the index \" + urlParts[2] + \".\", null);\r\n    } finally {\r\n      if (db != null)\r\n        OSharedDocumentDatabase.release(db);\r\n    }\r\n    return false;\r\n  }","id":82615,"modified_method":"@Override\r\n  public boolean execute(final OHttpRequest iRequest, OHttpResponse iResponse) throws Exception {\r\n    final String[] urlParts = checkSyntax(iRequest.url, 3, \"Syntax error: index/<database>/<index-name>/<key>[/<value>]\");\r\n\r\n    iRequest.data.commandInfo = \"Index put\";\r\n\r\n    ODatabaseDocumentTx db = null;\r\n\r\n    try {\r\n      db = getProfiledDatabaseInstance(iRequest);\r\n\r\n      final OIndex<?> index = db.getMetadata().getIndexManager().getIndex(urlParts[2]);\r\n      if (index == null)\r\n        throw new IllegalArgumentException(\"Index name '\" + urlParts[2] + \"' not found\");\r\n\r\n      final OIdentifiable record;\r\n\r\n      if (urlParts.length > 4)\r\n        // GET THE RECORD ID AS VALUE\r\n        record = new ORecordId(urlParts[4]);\r\n      else {\r\n        // GET THE REQUEST CONTENT AS DOCUMENT\r\n        if (iRequest.content == null || iRequest.content.length() == 0)\r\n          throw new IllegalArgumentException(\"Index's entry value is null\");\r\n\r\n        record = new ODocument().fromJSON(iRequest.content);\r\n      }\r\n\r\n      final OIndexDefinition indexDefinition = index.getDefinition();\r\n      final Object key;\r\n      if (indexDefinition != null)\r\n        key = indexDefinition.createValue(urlParts[3]);\r\n      else\r\n        key = urlParts[3];\r\n\r\n      if (key == null)\r\n        throw new IllegalArgumentException(\"Invalid key value : \" + urlParts[3]);\r\n\r\n      index.put(key, record);\r\n\r\n      iResponse.send(OHttpUtils.STATUS_OK_CODE, \"OK\", OHttpUtils.CONTENT_TEXT_PLAIN, \"Key '\" + urlParts[3]\r\n          + \"' correctly inserted into the index \" + urlParts[2] + \".\", null);\r\n    } finally {\r\n      if (db != null)\r\n        db.close();\r\n    }\r\n    return false;\r\n  }","commit_id":"85d716607c6ab3e05dc71350bdac064fde4b7b1c","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public void service() throws ONetworkProtocolException, IOException {\r\n    ++connection.data.totalRequests;\r\n    connection.data.commandInfo = null;\r\n    connection.data.commandDetail = null;\r\n\r\n    final String callbackF;\r\n    if ((request.parameters != null) && request.parameters.containsKey(OHttpUtils.CALLBACK_PARAMETER_NAME))\r\n      callbackF = request.parameters.get(OHttpUtils.CALLBACK_PARAMETER_NAME);\r\n    else\r\n      callbackF = null;\r\n\r\n    response = new OHttpResponse(channel.outStream, request.httpVersion, additionalResponseHeaders, responseCharSet,\r\n        connection.data.serverInfo, request.sessionId, callbackF);\r\n    if (request.contentEncoding != null && request.contentEncoding.equals(OHttpUtils.CONTENT_ACCEPT_GZIP_ENCODED)) {\r\n      response.setContentEncoding(OHttpUtils.CONTENT_ACCEPT_GZIP_ENCODED);\r\n    }\r\n\r\n    final long begin = System.currentTimeMillis();\r\n\r\n    boolean isChain;\r\n    do {\r\n      isChain = false;\r\n      final String command;\r\n      if (request.url.length() < 2) {\r\n        command = \"\";\r\n      } else {\r\n        command = request.url.substring(1);\r\n      }\r\n\r\n      final String commandString = getCommandString(command);\r\n\r\n      final OServerCommand cmd = (OServerCommand) cmdManager.getCommand(commandString);\r\n      if (cmd != null)\r\n        try {\r\n          if (cmd.beforeExecute(request, response))\r\n            // EXECUTE THE COMMAND\r\n            isChain = cmd.execute(request, response);\r\n\r\n        } catch (Exception e) {\r\n          handleError(e);\r\n        }\r\n      else {\r\n        try {\r\n          OLogManager.instance().warn(\r\n              this,\r\n              \"->\" + channel.socket.getInetAddress().getHostAddress() + \": Command not found: \" + request.httpMethod + \".\"\r\n                  + URLDecoder.decode(command, \"UTF-8\"));\r\n\r\n          sendTextContent(OHttpUtils.STATUS_INVALIDMETHOD_CODE, OHttpUtils.STATUS_INVALIDMETHOD_DESCRIPTION, null,\r\n              OHttpUtils.CONTENT_TEXT_PLAIN, \"Command not found: \" + command);\r\n        } catch (IOException e1) {\r\n          sendShutdown();\r\n        }\r\n      }\r\n    } while (isChain);\r\n\r\n    connection.data.lastCommandInfo = connection.data.commandInfo;\r\n    connection.data.lastCommandDetail = connection.data.commandDetail;\r\n\r\n    connection.data.lastCommandExecutionTime = System.currentTimeMillis() - begin;\r\n    connection.data.totalCommandExecutionTime += connection.data.lastCommandExecutionTime;\r\n  }","id":82616,"modified_method":"public void service() throws ONetworkProtocolException, IOException {\r\n    ++connection.data.totalRequests;\r\n    connection.data.commandInfo = null;\r\n    connection.data.commandDetail = null;\r\n\r\n    final String callbackF;\r\n    if ((request.parameters != null) && request.parameters.containsKey(OHttpUtils.CALLBACK_PARAMETER_NAME))\r\n      callbackF = request.parameters.get(OHttpUtils.CALLBACK_PARAMETER_NAME);\r\n    else\r\n      callbackF = null;\r\n\r\n    response = new OHttpResponse(channel.outStream, request.httpVersion, additionalResponseHeaders, responseCharSet,\r\n        connection.data.serverInfo, request.sessionId, callbackF);\r\n    if (request.contentEncoding != null && request.contentEncoding.equals(OHttpUtils.CONTENT_ACCEPT_GZIP_ENCODED)) {\r\n      response.setContentEncoding(OHttpUtils.CONTENT_ACCEPT_GZIP_ENCODED);\r\n    }\r\n\r\n    final long begin = System.currentTimeMillis();\r\n\r\n    boolean isChain;\r\n    do {\r\n      isChain = false;\r\n      final String command;\r\n      if (request.url.length() < 2) {\r\n        command = \"\";\r\n      } else {\r\n        command = request.url.substring(1);\r\n      }\r\n\r\n      final String commandString = getCommandString(command);\r\n\r\n      final OServerCommand cmd = (OServerCommand) cmdManager.getCommand(commandString);\r\n      if (cmd != null)\r\n        try {\r\n          if (cmd.beforeExecute(request, response))\r\n            try {\r\n              // EXECUTE THE COMMAND\r\n              isChain = cmd.execute(request, response);\r\n            } finally {\r\n              cmd.afterExecute(request, response);\r\n            }\r\n\r\n        } catch (Exception e) {\r\n          handleError(e);\r\n        }\r\n      else {\r\n        try {\r\n          OLogManager.instance().warn(\r\n              this,\r\n              \"->\" + channel.socket.getInetAddress().getHostAddress() + \": Command not found: \" + request.httpMethod + \".\"\r\n                  + URLDecoder.decode(command, \"UTF-8\"));\r\n\r\n          sendTextContent(OHttpUtils.STATUS_INVALIDMETHOD_CODE, OHttpUtils.STATUS_INVALIDMETHOD_DESCRIPTION, null,\r\n              OHttpUtils.CONTENT_TEXT_PLAIN, \"Command not found: \" + command);\r\n        } catch (IOException e1) {\r\n          sendShutdown();\r\n        }\r\n      }\r\n    } while (isChain);\r\n\r\n    connection.data.lastCommandInfo = connection.data.commandInfo;\r\n    connection.data.lastCommandDetail = connection.data.commandDetail;\r\n\r\n    connection.data.lastCommandExecutionTime = System.currentTimeMillis() - begin;\r\n    connection.data.totalCommandExecutionTime += connection.data.lastCommandExecutionTime;\r\n  }","commit_id":"5cb1500d095313a66d864dff28c31cd7c84e072c","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"protected boolean authenticate(final OHttpRequest iRequest, final OHttpResponse iResponse,\r\n      final List<String> iAuthenticationParts, final String iDatabaseName) throws IOException {\r\n    ODatabaseDocumentTx db = null;\r\n    try {\r\n      db = (ODatabaseDocumentTx) server.openDatabase(\"graph\", iDatabaseName, iAuthenticationParts.get(0),\r\n          iAuthenticationParts.get(1));\r\n      if (db.getUser() == null)\r\n        // MAYBE A PREVIOUS ROOT REALM? UN AUTHORIZE\r\n        return false;\r\n\r\n      // db = OSharedDocumentDatabase.acquire(iDatabaseName, iAuthenticationParts.get(0), iAuthenticationParts.get(1));\r\n      iRequest.data.currentUserId = db.getUser().getDocument().getIdentity().toString(); // Set user rid after authentication\r\n      // AUTHENTICATED: CREATE THE SESSION\r\n      iRequest.sessionId = OHttpSessionManager.getInstance().createSession(iDatabaseName, iAuthenticationParts.get(0));\r\n      iResponse.sessionId = iRequest.sessionId;\r\n      return true;\r\n\r\n    } catch (OSecurityAccessException e) {\r\n      // WRONG USER/PASSWD\r\n    } catch (OLockException e) {\r\n      OLogManager.instance().error(this, \"Cannot access to the database '\" + iDatabaseName + \"'\", ODatabaseException.class, e);\r\n    } finally {\r\n      if (db != null)\r\n        db.close();\r\n      else\r\n        // WRONG USER/PASSWD\r\n        sendAuthorizationRequest(iRequest, iResponse, iDatabaseName);\r\n    }\r\n    return false;\r\n  }","id":82617,"modified_method":"protected boolean authenticate(final OHttpRequest iRequest, final OHttpResponse iResponse,\r\n      final List<String> iAuthenticationParts, final String iDatabaseName) throws IOException {\r\n    ODatabaseDocumentTx db = null;\r\n    try {\r\n      db = (ODatabaseDocumentTx) server.openDatabase(\"document\", iDatabaseName, iAuthenticationParts.get(0),\r\n          iAuthenticationParts.get(1));\r\n      // if (db.getUser() == null)\r\n      // // MAYBE A PREVIOUS ROOT REALM? UN AUTHORIZE\r\n      // return false;\r\n\r\n      // Set user rid after authentication\r\n      iRequest.data.currentUserId = db.getUser() == null ? \"<server user>\" : db.getUser().getDocument().getIdentity().toString();\r\n\r\n      // AUTHENTICATED: CREATE THE SESSION\r\n      iRequest.sessionId = OHttpSessionManager.getInstance().createSession(iDatabaseName, iAuthenticationParts.get(0));\r\n      iResponse.sessionId = iRequest.sessionId;\r\n      return true;\r\n\r\n    } catch (OSecurityAccessException e) {\r\n      // WRONG USER/PASSWD\r\n    } catch (OLockException e) {\r\n      OLogManager.instance().error(this, \"Cannot access to the database '\" + iDatabaseName + \"'\", ODatabaseException.class, e);\r\n    } finally {\r\n      if (db == null)\r\n        // WRONG USER/PASSWD\r\n        sendAuthorizationRequest(iRequest, iResponse, iDatabaseName);\r\n    }\r\n    return false;\r\n  }","commit_id":"5cb1500d095313a66d864dff28c31cd7c84e072c","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"protected ODatabaseDocumentTx getProfiledDatabaseInstance(final OHttpRequest iRequest) throws InterruptedException {\r\n    if (iRequest.authorization == null)\r\n      throw new OSecurityAccessException(iRequest.databaseName, \"No user and password received\");\r\n\r\n    final List<String> parts = OStringSerializerHelper.split(iRequest.authorization, ':');\r\n\r\n    final ODatabaseDocumentTx db = OSharedDocumentDatabase.acquire(iRequest.databaseName, parts.get(0), parts.get(1));\r\n    // after authentication, if current login user is different compare with current DB user, reset DB user to login user\r\n    ODatabaseRecord localDatabase = ODatabaseRecordThreadLocal.INSTANCE.getIfDefined();\r\n    String currentUserId = iRequest.data.currentUserId;\r\n    if (currentUserId != null && currentUserId.length() > 0 && localDatabase != null && localDatabase.getUser() != null) {\r\n      if (!currentUserId.equals(localDatabase.getUser().getDocument().getIdentity().toString())) {\r\n        ODocument userDoc = localDatabase.load(new ORecordId(currentUserId));\r\n        localDatabase.setUser(new OUser(userDoc));\r\n      }\r\n    }\r\n    // final ODatabaseDocumentTx db = (ODatabaseDocumentTx) server.openDatabase(\"graph\", iRequest.databaseName, parts.get(0),\r\n    // parts.get(1));\r\n\r\n    if (db != null) {\r\n      iRequest.data.lastDatabase = db.getName();\r\n      iRequest.data.lastUser = db.getUser() != null ? db.getUser().getName() : null;\r\n    } else {\r\n      iRequest.data.lastDatabase = null;\r\n      iRequest.data.lastUser = null;\r\n    }\r\n\r\n    return db;\r\n  }","id":82618,"modified_method":"protected ODatabaseDocumentTx getProfiledDatabaseInstance(final OHttpRequest iRequest) throws InterruptedException {\r\n    if (iRequest.authorization == null)\r\n      throw new OSecurityAccessException(iRequest.databaseName, \"No user and password received\");\r\n\r\n    // after authentication, if current login user is different compare with current DB user, reset DB user to login user\r\n    ODatabaseRecord localDatabase = ODatabaseRecordThreadLocal.INSTANCE.getIfDefined();\r\n\r\n    if (localDatabase == null) {\r\n      final List<String> parts = OStringSerializerHelper.split(iRequest.authorization, ':');\r\n      localDatabase = (ODatabaseDocumentTx) server.openDatabase(\"document\", iRequest.databaseName, parts.get(0), parts.get(1));\r\n    } else {\r\n\r\n      String currentUserId = iRequest.data.currentUserId;\r\n      if (currentUserId != null && currentUserId.length() > 0 && localDatabase != null && localDatabase.getUser() != null) {\r\n        if (!currentUserId.equals(localDatabase.getUser().getDocument().getIdentity().toString())) {\r\n          ODocument userDoc = localDatabase.load(new ORecordId(currentUserId));\r\n          localDatabase.setUser(new OUser(userDoc));\r\n        }\r\n      }\r\n    }\r\n\r\n    iRequest.data.lastDatabase = localDatabase.getName();\r\n    iRequest.data.lastUser = localDatabase.getUser() != null ? localDatabase.getUser().getName() : null;\r\n    return (ODatabaseDocumentTx) localDatabase.getDatabaseOwner();\r\n  }","commit_id":"5cb1500d095313a66d864dff28c31cd7c84e072c","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Override\r\n  public boolean execute(final OHttpRequest iRequest, OHttpResponse iResponse) throws Exception {\r\n    checkSyntax(iRequest.url, 2, \"Syntax error: document/<database>\");\r\n\r\n    iRequest.data.commandInfo = \"Create document\";\r\n\r\n    ODatabaseDocumentTx db = null;\r\n\r\n    ODocument doc = null;\r\n\r\n    try {\r\n      db = getProfiledDatabaseInstance(iRequest);\r\n\r\n      doc = new ODocument().fromJSON(iRequest.content);\r\n\r\n      // ASSURE TO MAKE THE RECORD ID INVALID\r\n      ((ORecordId) doc.getIdentity()).clusterPosition = ORID.CLUSTER_POS_INVALID;\r\n\r\n      doc.save();\r\n\r\n    } finally {\r\n      if (db != null)\r\n        db.close();\r\n    }\r\n\r\n    iResponse.send(OHttpUtils.STATUS_CREATED_CODE, OHttpUtils.STATUS_CREATED_DESCRIPTION, OHttpUtils.CONTENT_TEXT_PLAIN,\r\n        doc.toJSON(), null, true);\r\n    return false;\r\n  }","id":82619,"modified_method":"@Override\r\n  public boolean execute(final OHttpRequest iRequest, OHttpResponse iResponse) throws Exception {\r\n    checkSyntax(iRequest.url, 2, \"Syntax error: document/<database>\");\r\n\r\n    iRequest.data.commandInfo = \"Create document\";\r\n\r\n    ODatabaseDocumentTx db = null;\r\n\r\n    ODocument doc = null;\r\n\r\n    try {\r\n      db = getProfiledDatabaseInstance(iRequest);\r\n\r\n      doc = new ODocument().fromJSON(iRequest.content);\r\n\r\n      // ASSURE TO MAKE THE RECORD ID INVALID\r\n      ((ORecordId) doc.getIdentity()).clusterPosition = ORID.CLUSTER_POS_INVALID;\r\n\r\n      doc.save();\r\n\r\n      iResponse.send(OHttpUtils.STATUS_CREATED_CODE, OHttpUtils.STATUS_CREATED_DESCRIPTION, OHttpUtils.CONTENT_TEXT_PLAIN,\r\n          doc.toJSON(), null, true);\r\n\r\n    } finally {\r\n      if (db != null)\r\n        db.close();\r\n    }\r\n    return false;\r\n  }","commit_id":"5cb1500d095313a66d864dff28c31cd7c84e072c","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Override\r\n    public void execute(){\r\n        try {\r\n            List<? extends Host> result = _resourceService.discoverCluster(this);\r\n            ListResponse<HostResponse> response = new ListResponse<HostResponse>();\r\n            List<HostResponse> hostResponses = new ArrayList<HostResponse>();\r\n            if (result != null) {\r\n                for (Host host : result) {\r\n                    HostResponse hostResponse = _responseGenerator.createHostResponse(host);\r\n                    hostResponses.add(hostResponse);\r\n                }\r\n            } else {\r\n                throw new ServerApiException(BaseCmd.INTERNAL_ERROR, \"Failed to add host cluster\");\r\n            }\r\n\r\n            response.setResponses(hostResponses);\r\n            response.setResponseName(getCommandName());\r\n            \r\n            this.setResponseObject(response);\r\n        } catch (DiscoveryException ex) {\r\n            s_logger.warn(\"Exception: \", ex);\r\n            throw new ServerApiException(BaseCmd.INTERNAL_ERROR, ex.getMessage());\r\n        }\r\n    }","id":82620,"modified_method":"@Override\r\n    public void execute(){\r\n        try {\r\n            List<? extends Cluster> result = _resourceService.discoverCluster(this);\r\n            ListResponse<ClusterResponse> response = new ListResponse<ClusterResponse>();\r\n            List<ClusterResponse> clusterResponses = new ArrayList<ClusterResponse>();\r\n            if (result != null) {\r\n                for (Cluster cluster : result) {\r\n                    ClusterResponse clusterResponse = _responseGenerator.createClusterResponse(cluster);\r\n                    clusterResponses.add(clusterResponse);\r\n                }\r\n            } else {\r\n                throw new ServerApiException(BaseCmd.INTERNAL_ERROR, \"Failed to add cluster\");\r\n            }\r\n\r\n            response.setResponses(clusterResponses);\r\n            response.setResponseName(getCommandName());\r\n            \r\n            this.setResponseObject(response);\r\n        } catch (DiscoveryException ex) {\r\n            s_logger.warn(\"Exception: \", ex);\r\n            throw new ServerApiException(BaseCmd.INTERNAL_ERROR, ex.getMessage());\r\n        }\r\n    }","commit_id":"9e2cbbe0dd490306bcb59569d4f22c69407b9a37","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public List<? extends Host> discoverCluster(AddClusterCmd cmd) \n    \tthrows IllegalArgumentException, DiscoveryException, InvalidParameterValueException {\n        Long dcId = cmd.getZoneId();\n        Long podId = cmd.getPodId();\n        String clusterName = cmd.getClusterName();\n        String url = cmd.getUrl();\n        String username = cmd.getUsername();\n        String password = cmd.getPassword();\n        \n    \tURI uri = null;\n    \t\n        //Check if the zone exists in the system\n        if (_dcDao.findById(dcId) == null ){\n        \tthrow new InvalidParameterValueException(\"Can't find zone by id \" + dcId);\n        }\n        \n        //Check if the pod exists in the system\n        if (podId != null) {\n            if (_podDao.findById(podId) == null ){\n                throw new InvalidParameterValueException(\"Can't find pod by id \" + podId);\n            }\n            //check if pod belongs to the zone\n            HostPodVO pod = _podDao.findById(podId);\n            if (!Long.valueOf(pod.getDataCenterId()).equals(dcId)) {\n            \tthrow new InvalidParameterValueException(\"Pod \" + podId + \" doesn't belong to the zone \" + dcId);\n            }\n        }\n        \n        // Verify cluster information and create a new cluster if needed\n        if (clusterName == null || clusterName.isEmpty()) {\n            throw new InvalidParameterValueException(\"Please specify cluster name\");\n        }\n        \n        if(cmd.getHypervisor() == null || cmd.getHypervisor().isEmpty()) {\n            throw new InvalidParameterValueException(\"Please specify a hypervisor\");\n        }\n        \n        Hypervisor.HypervisorType hypervisorType = Hypervisor.HypervisorType.valueOf(cmd.getHypervisor());\n        if(hypervisorType == null) {\n            throw new InvalidParameterValueException(\"Please specify a valid hypervisor name\");\n        }\n        \n        Cluster.ClusterType clusterType = null;\n        if(cmd.getClusterType() != null && !cmd.getClusterType().isEmpty()) {\n        \tclusterType = Cluster.ClusterType.valueOf(cmd.getClusterType());\n        }\n        if(clusterType == null) {\n            clusterType = Cluster.ClusterType.CloudManaged;\n        }\n        \n        Discoverer discoverer = getMatchingDiscover(hypervisorType);\n        if(discoverer == null) {\n            throw new InvalidParameterValueException(\"Please specify a valid hypervisor\");\n        }\n        \n        long clusterId = 0;\n        if (clusterName != null) {      \n            ClusterVO cluster = new ClusterVO(dcId, podId, clusterName);\n            cluster.setHypervisorType(cmd.getHypervisor());\n            \n            cluster.setClusterType(clusterType);\n            try {\n                cluster = _clusterDao.persist(cluster);\n            } catch (Exception e) {\n                cluster = _clusterDao.findBy(clusterName, podId);\n                if (cluster == null) {\n                    throw new CloudRuntimeException(\"Unable to create cluster \" + clusterName + \" in pod \" + podId + \" and data center \" + dcId, e);\n                }\n            }\n            clusterId = cluster.getId();\n        }\n        \n        if(clusterType == Cluster.ClusterType.CloudManaged) {\n            return _hostDao.listByCluster(clusterId);\n        }\n        \n        boolean success = false;\n        try {\n\t        try {\n\t    \t\turi = new URI(UriUtils.encodeURIComponent(url));\n\t    \t\tif (uri.getScheme() == null) {\n\t                throw new InvalidParameterValueException(\"uri.scheme is null \" + url + \", add http:// as a prefix\");\n\t            } else if (uri.getScheme().equalsIgnoreCase(\"http\")) {\n\t    \t\t\tif (uri.getHost() == null || uri.getHost().equalsIgnoreCase(\"\") || uri.getPath() == null || uri.getPath().equalsIgnoreCase(\"\")) {\n\t    \t\t\t\tthrow new InvalidParameterValueException(\"Your host and/or path is wrong.  Make sure it's of the format http://hostname/path\");\n\t    \t\t\t}\n\t    \t\t}\n\t    \t} catch (URISyntaxException e) {\n\t\t\t\tthrow new InvalidParameterValueException(url + \" is not a valid uri\");\n\t    \t}\n\t        \n\t        List<HostVO> hosts = new ArrayList<HostVO>();\n\t        Map<? extends ServerResource, Map<String, String>> resources = null;\n\t        \n\t        try {\n\t        \tresources = discoverer.find(dcId, podId, clusterId, uri, username, password);\n\t        } catch(Exception e) {\n\t        \ts_logger.info(\"Exception in external cluster discovery process with discoverer: \" + discoverer.getName());\n\t        }\n\t        if (resources != null) {\n\t            for (Map.Entry<? extends ServerResource, Map<String, String>> entry : resources.entrySet()) {\n\t                ServerResource resource = entry.getKey();\n\t                AgentAttache attache = simulateStart(resource, entry.getValue(), true);\n\t                if (attache != null) {\n\t                    hosts.add(_hostDao.findById(attache.getId()));\n\t                }\n\t                discoverer.postDiscovery(hosts, _nodeId);\n\t            }\n\t            s_logger.info(\"External cluster has been successfully discovered by \" + discoverer.getName());\n\t            success = true;\n\t            return hosts;\n\t        }\n\t    \t\n\t        s_logger.warn(\"Unable to find the server resources at \" + url);\n\t        throw new DiscoveryException(\"Unable to add the external cluster\");\n        } finally {\n        \tif(!success) {\n        \t\t_clusterDao.remove(clusterId);\n        \t}\n        }\n    }","id":82621,"modified_method":"@Override\n    public List<? extends Cluster> discoverCluster(AddClusterCmd cmd) \n    \tthrows IllegalArgumentException, DiscoveryException, InvalidParameterValueException {\n        Long dcId = cmd.getZoneId();\n        Long podId = cmd.getPodId();\n        String clusterName = cmd.getClusterName();\n        String url = cmd.getUrl();\n        String username = cmd.getUsername();\n        String password = cmd.getPassword();\n        \n    \tURI uri = null;\n    \t\n        //Check if the zone exists in the system\n        if (_dcDao.findById(dcId) == null ){\n        \tthrow new InvalidParameterValueException(\"Can't find zone by id \" + dcId);\n        }\n        \n        //Check if the pod exists in the system\n        if (podId != null) {\n            if (_podDao.findById(podId) == null ){\n                throw new InvalidParameterValueException(\"Can't find pod by id \" + podId);\n            }\n            //check if pod belongs to the zone\n            HostPodVO pod = _podDao.findById(podId);\n            if (!Long.valueOf(pod.getDataCenterId()).equals(dcId)) {\n            \tthrow new InvalidParameterValueException(\"Pod \" + podId + \" doesn't belong to the zone \" + dcId);\n            }\n        }\n        \n        // Verify cluster information and create a new cluster if needed\n        if (clusterName == null || clusterName.isEmpty()) {\n            throw new InvalidParameterValueException(\"Please specify cluster name\");\n        }\n        \n        if(cmd.getHypervisor() == null || cmd.getHypervisor().isEmpty()) {\n            throw new InvalidParameterValueException(\"Please specify a hypervisor\");\n        }\n        \n        Hypervisor.HypervisorType hypervisorType = Hypervisor.HypervisorType.valueOf(cmd.getHypervisor());\n        if(hypervisorType == null) {\n            throw new InvalidParameterValueException(\"Please specify a valid hypervisor name\");\n        }\n        \n        Cluster.ClusterType clusterType = null;\n        if(cmd.getClusterType() != null && !cmd.getClusterType().isEmpty()) {\n        \tclusterType = Cluster.ClusterType.valueOf(cmd.getClusterType());\n        }\n        if(clusterType == null) {\n            clusterType = Cluster.ClusterType.CloudManaged;\n        }\n        \n        Discoverer discoverer = getMatchingDiscover(hypervisorType);\n        if(discoverer == null) {\n            throw new InvalidParameterValueException(\"Please specify a valid hypervisor\");\n        }\n        \n        List<ClusterVO> result = new ArrayList<ClusterVO>(); \n        \n        long clusterId = 0;\n        ClusterVO cluster = new ClusterVO(dcId, podId, clusterName);\n        cluster.setHypervisorType(cmd.getHypervisor());\n        \n        cluster.setClusterType(clusterType);\n        try {\n            cluster = _clusterDao.persist(cluster);\n        } catch (Exception e) {\n            cluster = _clusterDao.findBy(clusterName, podId);\n            if (cluster == null) {\n                throw new CloudRuntimeException(\"Unable to create cluster \" + clusterName + \" in pod \" + podId + \" and data center \" + dcId, e);\n            }\n        }\n        clusterId = cluster.getId();\n        result.add(cluster);\n        \n        if(clusterType == Cluster.ClusterType.CloudManaged) {\n            return result;\n        }\n        \n        boolean success = false;\n        try {\n\t        try {\n\t    \t\turi = new URI(UriUtils.encodeURIComponent(url));\n\t    \t\tif (uri.getScheme() == null) {\n\t                throw new InvalidParameterValueException(\"uri.scheme is null \" + url + \", add http:// as a prefix\");\n\t            } else if (uri.getScheme().equalsIgnoreCase(\"http\")) {\n\t    \t\t\tif (uri.getHost() == null || uri.getHost().equalsIgnoreCase(\"\") || uri.getPath() == null || uri.getPath().equalsIgnoreCase(\"\")) {\n\t    \t\t\t\tthrow new InvalidParameterValueException(\"Your host and/or path is wrong.  Make sure it's of the format http://hostname/path\");\n\t    \t\t\t}\n\t    \t\t}\n\t    \t} catch (URISyntaxException e) {\n\t\t\t\tthrow new InvalidParameterValueException(url + \" is not a valid uri\");\n\t    \t}\n\t        \n\t        List<HostVO> hosts = new ArrayList<HostVO>();\n\t        Map<? extends ServerResource, Map<String, String>> resources = null;\n\t        \n\t        try {\n\t        \tresources = discoverer.find(dcId, podId, clusterId, uri, username, password);\n\t        } catch(Exception e) {\n\t        \ts_logger.info(\"Exception in external cluster discovery process with discoverer: \" + discoverer.getName());\n\t        }\n\t        if (resources != null) {\n\t            for (Map.Entry<? extends ServerResource, Map<String, String>> entry : resources.entrySet()) {\n\t                ServerResource resource = entry.getKey();\n\t                AgentAttache attache = simulateStart(resource, entry.getValue(), true);\n\t                if (attache != null) {\n\t                    hosts.add(_hostDao.findById(attache.getId()));\n\t                }\n\t                discoverer.postDiscovery(hosts, _nodeId);\n\t            }\n\t            s_logger.info(\"External cluster has been successfully discovered by \" + discoverer.getName());\n\t            success = true;\n\t            return result;\n\t        }\n\t    \t\n\t        s_logger.warn(\"Unable to find the server resources at \" + url);\n\t        throw new DiscoveryException(\"Unable to add the external cluster\");\n        } finally {\n        \tif(!success) {\n        \t\t_clusterDao.remove(clusterId);\n        \t}\n        }\n    }","commit_id":"9e2cbbe0dd490306bcb59569d4f22c69407b9a37","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public FirewallRuleResponse createPortForwardingRuleResponse(PortForwardingRule fwRule) {\n        FirewallRuleResponse response = new FirewallRuleResponse();\n        response.setId(fwRule.getUuid());\n        response.setPrivateStartPort(Integer.toString(fwRule.getDestinationPortStart()));\n        response.setPrivateEndPort(Integer.toString(fwRule.getDestinationPortEnd()));\n        response.setProtocol(fwRule.getProtocol());\n        response.setPublicStartPort(Integer.toString(fwRule.getSourcePortStart()));\n        response.setPublicEndPort(Integer.toString(fwRule.getSourcePortEnd()));\n        List<String> cidrs = ApiDBUtils.findFirewallSourceCidrs(fwRule.getId());\n        response.setCidrList(StringUtils.join(cidrs, \",\"));\n\n        IpAddress ip = ApiDBUtils.findIpAddressById(fwRule.getSourceIpAddressId());\n        response.setPublicIpAddressId(ip.getUuid());\n        response.setPublicIpAddress(ip.getAddress().addr());\n\n        if (ip != null && fwRule.getDestinationIpAddress() != null) {\n            UserVm vm = ApiDBUtils.findUserVmById(fwRule.getVirtualMachineId());\n            if (vm != null) {\n                response.setVirtualMachineId(vm.getUuid());\n                response.setVirtualMachineName(vm.getHostName());\n\n                if (vm.getDisplayName() != null) {\n                    response.setVirtualMachineDisplayName(vm.getDisplayName());\n                } else {\n                    response.setVirtualMachineDisplayName(vm.getHostName());\n                }\n            }\n        }\n        FirewallRule.State state = fwRule.getState();\n        if (state != null) {\n            String stateToSet = state.toString();\n            if (state.equals(FirewallRule.State.Revoke)) {\n                stateToSet = \"Deleting\";\n            }\n            response.setState(stateToSet);\n        }\n\n        //set tag information\n        List<? extends ResourceTag> tags = ApiDBUtils.listByResourceTypeAndId(TaggedResourceType.PortForwardingRule, fwRule.getId());\n        List<ResourceTagResponse> tagResponses = new ArrayList<ResourceTagResponse>();\n        for (ResourceTag tag : tags) {\n            ResourceTagResponse tagResponse = createResourceTagResponse(tag, true);\n            tagResponses.add(tagResponse);\n        }\n        response.setTags(tagResponses);\n        response.setObjectName(\"portforwardingrule\");\n        return response;\n    }","id":82622,"modified_method":"@Override\n    public FirewallRuleResponse createPortForwardingRuleResponse(PortForwardingRule fwRule) {\n        FirewallRuleResponse response = new FirewallRuleResponse();\n        response.setId(fwRule.getUuid());\n        response.setPrivateStartPort(Integer.toString(fwRule.getDestinationPortStart()));\n        response.setPrivateEndPort(Integer.toString(fwRule.getDestinationPortEnd()));\n        response.setProtocol(fwRule.getProtocol());\n        response.setPublicStartPort(Integer.toString(fwRule.getSourcePortStart()));\n        response.setPublicEndPort(Integer.toString(fwRule.getSourcePortEnd()));\n        List<String> cidrs = ApiDBUtils.findFirewallSourceCidrs(fwRule.getId());\n        response.setCidrList(StringUtils.join(cidrs, \",\"));\n\n        IpAddress ip = ApiDBUtils.findIpAddressById(fwRule.getSourceIpAddressId());\n        response.setPublicIpAddressId(ip.getUuid());\n        response.setPublicIpAddress(ip.getAddress().addr());\n\n        if (ip != null && fwRule.getDestinationIpAddress() != null) {\n            UserVm vm = ApiDBUtils.findUserVmById(fwRule.getVirtualMachineId());\n            if (vm != null) {\n                response.setVirtualMachineId(vm.getUuid());\n                response.setVirtualMachineName(vm.getHostName());\n\n                if (vm.getDisplayName() != null) {\n                    response.setVirtualMachineDisplayName(vm.getDisplayName());\n                } else {\n                    response.setVirtualMachineDisplayName(vm.getHostName());\n                }\n            }\n        }\n        FirewallRule.State state = fwRule.getState();\n        String stateToSet = state.toString();\n        if (state.equals(FirewallRule.State.Revoke)) {\n            stateToSet = \"Deleting\";\n        }\n\n        //set tag information\n        List<? extends ResourceTag> tags = ApiDBUtils.listByResourceTypeAndId(TaggedResourceType.PortForwardingRule, fwRule.getId());\n        List<ResourceTagResponse> tagResponses = new ArrayList<ResourceTagResponse>();\n        for (ResourceTag tag : tags) {\n            ResourceTagResponse tagResponse = createResourceTagResponse(tag, true);\n            tagResponses.add(tagResponse);\n        }\n        response.setTags(tagResponses);\n\n        response.setState(stateToSet);\n        response.setObjectName(\"portforwardingrule\");\n        return response;\n    }","commit_id":"e397f23f6b5d6ba34ad42eca95ae9d9ee43ac6a8","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public TemplateResponse createIsoResponse(VirtualMachineTemplate result) {\n        TemplateResponse response = new TemplateResponse();\n        response.setId(result.getUuid());\n        response.setName(result.getName());\n        response.setDisplayText(result.getDisplayText());\n        response.setPublic(result.isPublicTemplate());\n        response.setCreated(result.getCreated());\n        response.setFormat(result.getFormat());\n        GuestOS os = ApiDBUtils.findGuestOSById(result.getGuestOSId());\n        if (os != null) {\n            response.setOsTypeId(os.getUuid());\n            response.setOsTypeName(os.getDisplayName());\n        }\n        response.setDetails(result.getDetails());\n        Account caller = UserContext.current().getCaller();\n\n        if (result.getFormat() == ImageFormat.ISO) { // Templates are always bootable\n            response.setBootable(result.isBootable());\n        } else {\n            if (result.getHypervisorType() != null) {\n                response.setHypervisor(result.getHypervisorType().toString());// hypervisors\n                                                                              // are\n                                                                              // associated\n                                                                              // with\n                                                                              // templates\n            }\n        }\n\n        // add account ID and name\n        Account owner = ApiDBUtils.findAccountById(result.getAccountId());\n        populateAccount(response, owner.getId());\n        populateDomain(response, owner.getDomainId());\n\n        //set tag information\n        List<? extends ResourceTag> tags = null;\n        if (result.getFormat() == ImageFormat.ISO) {\n            tags = ApiDBUtils.listByResourceTypeAndId(TaggedResourceType.ISO, result.getId());\n        } else {\n            tags = ApiDBUtils.listByResourceTypeAndId(TaggedResourceType.Template, result.getId());\n        }\n\n        List<ResourceTagResponse> tagResponses = new ArrayList<ResourceTagResponse>();\n        for (ResourceTag tag : tags) {\n            ResourceTagResponse tagResponse = createResourceTagResponse(tag, true);\n            tagResponses.add(tagResponse);\n        }\n        response.setTags(tagResponses);\n\n        response.setObjectName(\"iso\");\n        return response;\n    }","id":82623,"modified_method":"@Override\n    public TemplateResponse createIsoResponse(VirtualMachineTemplate result) {\n        TemplateResponse response = new TemplateResponse();\n        response.setId(result.getUuid());\n        response.setName(result.getName());\n        response.setDisplayText(result.getDisplayText());\n        response.setPublic(result.isPublicTemplate());\n        response.setCreated(result.getCreated());\n        response.setFormat(result.getFormat());\n        GuestOS os = ApiDBUtils.findGuestOSById(result.getGuestOSId());\n        if (os != null) {\n            response.setOsTypeId(os.getUuid());\n            response.setOsTypeName(os.getDisplayName());\n        }\n        response.setDetails(result.getDetails());\n        Account caller = UserContext.current().getCaller();\n\n        if (result.getFormat() == ImageFormat.ISO) { // Templates are always bootable\n            response.setBootable(result.isBootable());\n        } else {\n            response.setHypervisor(result.getHypervisorType().toString());// hypervisors are associated with templates\n        }\n\n        // add account ID and name\n        Account owner = ApiDBUtils.findAccountById(result.getAccountId());\n        populateAccount(response, owner.getId());\n        populateDomain(response, owner.getDomainId());\n\n        //set tag information\n        List<? extends ResourceTag> tags = null;\n        if (result.getFormat() == ImageFormat.ISO) {\n            tags = ApiDBUtils.listByResourceTypeAndId(TaggedResourceType.ISO, result.getId());\n        } else {\n            tags = ApiDBUtils.listByResourceTypeAndId(TaggedResourceType.Template, result.getId());\n        }\n\n        List<ResourceTagResponse> tagResponses = new ArrayList<ResourceTagResponse>();\n        for (ResourceTag tag : tags) {\n            ResourceTagResponse tagResponse = createResourceTagResponse(tag, true);\n            tagResponses.add(tagResponse);\n        }\n        response.setTags(tagResponses);\n\n        response.setObjectName(\"iso\");\n        return response;\n    }","commit_id":"e397f23f6b5d6ba34ad42eca95ae9d9ee43ac6a8","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public CounterResponse createCounterResponse(Counter counter) {\n        CounterResponse response = new CounterResponse();\n        response.setId(counter.getUuid());\n        if (counter.getSource() != null) {\n            response.setSource(counter.getSource().toString());\n        }\n        response.setName(counter.getName());\n        response.setValue(counter.getValue());\n        response.setObjectName(\"counter\");\n        return response;\n    }","id":82624,"modified_method":"@Override\n    public CounterResponse createCounterResponse(Counter counter) {\n        CounterResponse response = new CounterResponse();\n        response.setId(counter.getUuid());\n        response.setSource(counter.getSource().toString());\n        response.setName(counter.getName());\n        response.setValue(counter.getValue());\n        response.setObjectName(\"counter\");\n        return response;\n    }","commit_id":"e397f23f6b5d6ba34ad42eca95ae9d9ee43ac6a8","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public ExtractResponse createExtractResponse(Long uploadId, Long id, Long zoneId, Long accountId, String mode) {\n        UploadVO uploadInfo = ApiDBUtils.findUploadById(uploadId);\n        ExtractResponse response = new ExtractResponse();\n        response.setObjectName(\"template\");\n        response.setId(id);\n        response.setName(ApiDBUtils.findTemplateById(id).getName());\n        if (zoneId != null) {\n            response.setZoneId(zoneId);\n            response.setZoneName(ApiDBUtils.findZoneById(zoneId).getName());\n        }\n        response.setMode(mode);\n        response.setUploadId(uploadId);\n        if (uploadInfo.getUploadState() != null) {\n            response.setState(uploadInfo.getUploadState().toString());\n        }\n        response.setAccountId(accountId);\n        response.setUrl(uploadInfo.getUploadUrl());\n        return response;\n\n    }","id":82625,"modified_method":"@Override\n    public ExtractResponse createExtractResponse(Long uploadId, Long id, Long zoneId, Long accountId, String mode) {\n        UploadVO uploadInfo = ApiDBUtils.findUploadById(uploadId);\n        ExtractResponse response = new ExtractResponse();\n        response.setObjectName(\"template\");\n        response.setId(id);\n        response.setName(ApiDBUtils.findTemplateById(id).getName());\n        if (zoneId != null) {\n            response.setZoneId(zoneId);\n            response.setZoneName(ApiDBUtils.findZoneById(zoneId).getName());\n        }\n        response.setMode(mode);\n        response.setUploadId(uploadId);\n        response.setState(uploadInfo.getUploadState().toString());\n        response.setAccountId(accountId);\n        response.setUrl(uploadInfo.getUploadUrl());\n        return response;\n\n    }","commit_id":"e397f23f6b5d6ba34ad42eca95ae9d9ee43ac6a8","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public NetworkResponse createNetworkResponse(Network network) {\n        // need to get network profile in order to retrieve dns information from there\n        NetworkProfile profile = ApiDBUtils.getNetworkProfile(network.getId());\n        NetworkResponse response = new NetworkResponse();\n        response.setId(network.getUuid());\n        response.setName(network.getName());\n        response.setDisplaytext(network.getDisplayText());\n        if (network.getBroadcastDomainType() != null) {\n            response.setBroadcastDomainType(network.getBroadcastDomainType().toString());\n        }\n\n        if (network.getTrafficType() != null) {\n            response.setTrafficType(network.getTrafficType().name());\n        }\n\n        if (network.getGuestType() != null) {\n            response.setType(network.getGuestType().toString());\n        }\n\n        response.setGateway(network.getGateway());\n\n        // FIXME - either set netmask or cidr\n        response.setCidr(network.getCidr());\n        if (network.getCidr() != null) {\n            response.setNetmask(NetUtils.cidr2Netmask(network.getCidr()));\n        }\n\n        //return vlan information only to Root admin\n        if (network.getBroadcastUri() != null && UserContext.current().getCaller().getType() == Account.ACCOUNT_TYPE_ADMIN) {\n            String broadcastUri = network.getBroadcastUri().toString();\n            response.setBroadcastUri(broadcastUri);\n            String vlan=\"N/A\";\n            if (broadcastUri.startsWith(\"vlan\")) {\n                vlan = broadcastUri.substring(\"vlan://\".length(), broadcastUri.length());\n            }\n            //return vlan information only to Root admin\n            response.setVlan(vlan);\n\n        }\n\n        DataCenter zone = ApiDBUtils.findZoneById(network.getDataCenterId());\n        if (zone != null) {\n            response.setZoneId(zone.getUuid());\n            response.setZoneName(zone.getName());\n        }\n        if (network.getPhysicalNetworkId() != null) {\n            PhysicalNetworkVO pnet = ApiDBUtils.findPhysicalNetworkById(network.getPhysicalNetworkId());\n            response.setPhysicalNetworkId(pnet.getUuid());\n        }\n\n        // populate network offering information\n        NetworkOffering networkOffering = ApiDBUtils.findNetworkOfferingById(network.getNetworkOfferingId());\n        if (networkOffering != null) {\n            response.setNetworkOfferingId(networkOffering.getUuid());\n            response.setNetworkOfferingName(networkOffering.getName());\n            response.setNetworkOfferingDisplayText(networkOffering.getDisplayText());\n            response.setIsSystem(networkOffering.isSystemOnly());\n            if (networkOffering.getAvailability() != null) {\n                response.setNetworkOfferingAvailability(networkOffering.getAvailability().toString());\n            }\n        }\n\n        if (network.getAclType() != null) {\n            response.setAclType(network.getAclType().toString());\n        }\n        if (network.getState() != null) {\n            response.setState(network.getState().toString());\n        }\n        response.setRestartRequired(network.isRestartRequired());\n        NetworkVO nw = ApiDBUtils.findNetworkById(network.getRelated());\n        if (nw != null) {\n            response.setRelated(nw.getUuid());\n        }\n        response.setNetworkDomain(network.getNetworkDomain());\n\n        response.setDns1(profile.getDns1());\n        response.setDns2(profile.getDns2());\n        // populate capability\n        Map<Service, Map<Capability, String>> serviceCapabilitiesMap = ApiDBUtils.getNetworkCapabilities(network.getId(), network.getDataCenterId());\n        List<ServiceResponse> serviceResponses = new ArrayList<ServiceResponse>();\n        if (serviceCapabilitiesMap != null) {\n            for (Service service : serviceCapabilitiesMap.keySet()) {\n                ServiceResponse serviceResponse = new ServiceResponse();\n                // skip gateway service\n                if (service == Service.Gateway) {\n                    continue;\n                }\n                serviceResponse.setName(service.getName());\n\n                // set list of capabilities for the service\n                List<CapabilityResponse> capabilityResponses = new ArrayList<CapabilityResponse>();\n                Map<Capability, String> serviceCapabilities = serviceCapabilitiesMap.get(service);\n                if (serviceCapabilities != null) {\n                    for (Capability capability : serviceCapabilities.keySet()) {\n                        CapabilityResponse capabilityResponse = new CapabilityResponse();\n                        String capabilityValue = serviceCapabilities.get(capability);\n                        capabilityResponse.setName(capability.getName());\n                        capabilityResponse.setValue(capabilityValue);\n                        capabilityResponse.setObjectName(\"capability\");\n                        capabilityResponses.add(capabilityResponse);\n                    }\n                    serviceResponse.setCapabilities(capabilityResponses);\n                }\n\n                serviceResponse.setObjectName(\"service\");\n                serviceResponses.add(serviceResponse);\n            }\n        }\n        response.setServices(serviceResponses);\n\n        if (network.getAclType() == null || network.getAclType() == ACLType.Account) {\n            populateOwner(response, network);\n        } else {\n            // get domain from network_domain table\n            Pair<Long, Boolean> domainNetworkDetails = ApiDBUtils.getDomainNetworkDetails(network.getId());\n            if (domainNetworkDetails.first() != null) {\n                Domain domain = ApiDBUtils.findDomainById(domainNetworkDetails.first());\n                if (domain != null) {\n                    response.setDomainId(domain.getUuid());\n                }\n            }\n            response.setSubdomainAccess(domainNetworkDetails.second());\n        }\n\n        Long dedicatedDomainId = ApiDBUtils.getDedicatedNetworkDomain(network.getId());\n        if (dedicatedDomainId != null) {\n            Domain domain = ApiDBUtils.findDomainById(dedicatedDomainId);\n            if (domain != null) {\n                response.setDomainId(domain.getUuid());\n            }\n            response.setDomainName(domain.getName());\n        }\n\n        response.setSpecifyIpRanges(network.getSpecifyIpRanges());\n        if (network.getVpcId() != null) {\n            Vpc vpc = ApiDBUtils.findVpcById(network.getVpcId());\n            if (vpc != null) {\n                response.setVpcId(vpc.getUuid());\n            }\n        }\n        response.setCanUseForDeploy(ApiDBUtils.canUseForDeploy(network));\n\n        //set tag information\n        List<? extends ResourceTag> tags = ApiDBUtils.listByResourceTypeAndId(TaggedResourceType.Network, network.getId());\n        List<ResourceTagResponse> tagResponses = new ArrayList<ResourceTagResponse>();\n        for (ResourceTag tag : tags) {\n            ResourceTagResponse tagResponse = createResourceTagResponse(tag, true);\n            tagResponses.add(tagResponse);\n        }\n        response.setTags(tagResponses);\n\n        response.setObjectName(\"network\");\n        return response;\n    }","id":82626,"modified_method":"@Override\n    public NetworkResponse createNetworkResponse(Network network) {\n        // need to get network profile in order to retrieve dns information from there\n        NetworkProfile profile = ApiDBUtils.getNetworkProfile(network.getId());\n        NetworkResponse response = new NetworkResponse();\n        response.setId(network.getUuid());\n        response.setName(network.getName());\n        response.setDisplaytext(network.getDisplayText());\n        if (network.getBroadcastDomainType() != null) {\n            response.setBroadcastDomainType(network.getBroadcastDomainType().toString());\n        }\n\n        if (network.getTrafficType() != null) {\n            response.setTrafficType(network.getTrafficType().name());\n        }\n\n        if (network.getGuestType() != null) {\n            response.setType(network.getGuestType().toString());\n        }\n\n        response.setGateway(network.getGateway());\n\n        // FIXME - either set netmask or cidr\n        response.setCidr(network.getCidr());\n        if (network.getCidr() != null) {\n            response.setNetmask(NetUtils.cidr2Netmask(network.getCidr()));\n        }\n\n        //return vlan information only to Root admin\n        if (network.getBroadcastUri() != null && UserContext.current().getCaller().getType() == Account.ACCOUNT_TYPE_ADMIN) {\n            String broadcastUri = network.getBroadcastUri().toString();\n            response.setBroadcastUri(broadcastUri);\n            String vlan=\"N/A\";\n            if (broadcastUri.startsWith(\"vlan\")) {\n                vlan = broadcastUri.substring(\"vlan://\".length(), broadcastUri.length());\n            }\n            //return vlan information only to Root admin\n            response.setVlan(vlan);\n\n        }\n\n        DataCenter zone = ApiDBUtils.findZoneById(network.getDataCenterId());\n        if (zone != null) {\n            response.setZoneId(zone.getUuid());\n            response.setZoneName(zone.getName());\n        }\n        if (network.getPhysicalNetworkId() != null) {\n            PhysicalNetworkVO pnet = ApiDBUtils.findPhysicalNetworkById(network.getPhysicalNetworkId());\n            response.setPhysicalNetworkId(pnet.getUuid());\n        }\n\n        // populate network offering information\n        NetworkOffering networkOffering = ApiDBUtils.findNetworkOfferingById(network.getNetworkOfferingId());\n        if (networkOffering != null) {\n            response.setNetworkOfferingId(networkOffering.getUuid());\n            response.setNetworkOfferingName(networkOffering.getName());\n            response.setNetworkOfferingDisplayText(networkOffering.getDisplayText());\n            response.setIsSystem(networkOffering.isSystemOnly());\n            response.setNetworkOfferingAvailability(networkOffering.getAvailability().toString());\n        }\n\n        if (network.getAclType() != null) {\n            response.setAclType(network.getAclType().toString());\n        }\n        response.setState(network.getState().toString());\n        response.setRestartRequired(network.isRestartRequired());\n        NetworkVO nw = ApiDBUtils.findNetworkById(network.getRelated());\n        if (nw != null) {\n            response.setRelated(nw.getUuid());\n        }\n        response.setNetworkDomain(network.getNetworkDomain());\n\n        response.setDns1(profile.getDns1());\n        response.setDns2(profile.getDns2());\n        // populate capability\n        Map<Service, Map<Capability, String>> serviceCapabilitiesMap = ApiDBUtils.getNetworkCapabilities(network.getId(), network.getDataCenterId());\n        List<ServiceResponse> serviceResponses = new ArrayList<ServiceResponse>();\n        if (serviceCapabilitiesMap != null) {\n            for (Service service : serviceCapabilitiesMap.keySet()) {\n                ServiceResponse serviceResponse = new ServiceResponse();\n                // skip gateway service\n                if (service == Service.Gateway) {\n                    continue;\n                }\n                serviceResponse.setName(service.getName());\n\n                // set list of capabilities for the service\n                List<CapabilityResponse> capabilityResponses = new ArrayList<CapabilityResponse>();\n                Map<Capability, String> serviceCapabilities = serviceCapabilitiesMap.get(service);\n                if (serviceCapabilities != null) {\n                    for (Capability capability : serviceCapabilities.keySet()) {\n                        CapabilityResponse capabilityResponse = new CapabilityResponse();\n                        String capabilityValue = serviceCapabilities.get(capability);\n                        capabilityResponse.setName(capability.getName());\n                        capabilityResponse.setValue(capabilityValue);\n                        capabilityResponse.setObjectName(\"capability\");\n                        capabilityResponses.add(capabilityResponse);\n                    }\n                    serviceResponse.setCapabilities(capabilityResponses);\n                }\n\n                serviceResponse.setObjectName(\"service\");\n                serviceResponses.add(serviceResponse);\n            }\n        }\n        response.setServices(serviceResponses);\n\n        if (network.getAclType() == null || network.getAclType() == ACLType.Account) {\n            populateOwner(response, network);\n        } else {\n            // get domain from network_domain table\n            Pair<Long, Boolean> domainNetworkDetails = ApiDBUtils.getDomainNetworkDetails(network.getId());\n            if (domainNetworkDetails.first() != null) {\n                Domain domain = ApiDBUtils.findDomainById(domainNetworkDetails.first());\n                if (domain != null) {\n                    response.setDomainId(domain.getUuid());\n                }\n            }\n            response.setSubdomainAccess(domainNetworkDetails.second());\n        }\n\n        Long dedicatedDomainId = ApiDBUtils.getDedicatedNetworkDomain(network.getId());\n        if (dedicatedDomainId != null) {\n            Domain domain = ApiDBUtils.findDomainById(dedicatedDomainId);\n            if (domain != null) {\n                response.setDomainId(domain.getUuid());\n            }\n            response.setDomainName(domain.getName());\n        }\n\n        response.setSpecifyIpRanges(network.getSpecifyIpRanges());\n        if (network.getVpcId() != null) {\n            Vpc vpc = ApiDBUtils.findVpcById(network.getVpcId());\n            if (vpc != null) {\n                response.setVpcId(vpc.getUuid());\n            }\n        }\n        response.setCanUseForDeploy(ApiDBUtils.canUseForDeploy(network));\n\n        //set tag information\n        List<? extends ResourceTag> tags = ApiDBUtils.listByResourceTypeAndId(TaggedResourceType.Network, network.getId());\n        List<ResourceTagResponse> tagResponses = new ArrayList<ResourceTagResponse>();\n        for (ResourceTag tag : tags) {\n            ResourceTagResponse tagResponse = createResourceTagResponse(tag, true);\n            tagResponses.add(tagResponse);\n        }\n        response.setTags(tagResponses);\n\n        response.setObjectName(\"network\");\n        return response;\n    }","commit_id":"e397f23f6b5d6ba34ad42eca95ae9d9ee43ac6a8","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public AccountResponse createAccountResponse(Account account) {\n        boolean accountIsAdmin = (account.getType() == Account.ACCOUNT_TYPE_ADMIN);\n        AccountResponse accountResponse = new AccountResponse();\n        accountResponse.setId(account.getUuid());\n        accountResponse.setName(account.getAccountName());\n        accountResponse.setAccountType(account.getType());\n        Domain domain = ApiDBUtils.findDomainById(account.getDomainId());\n        if (domain != null) {\n            accountResponse.setDomainId(domain.getUuid());\n            accountResponse.setDomainName(domain.getName());\n        }\n        if (account.getState() != null) {\n            accountResponse.setState(account.getState().toString());\n        }\n        accountResponse.setNetworkDomain(account.getNetworkDomain());\n        DataCenter dc = ApiDBUtils.findZoneById(account.getDefaultZoneId());\n        if (dc != null) {\n            accountResponse.setDefaultZone(dc.getUuid());\n        }\n\n        // get network stat\n        List<UserStatisticsVO> stats = ApiDBUtils.listUserStatsBy(account.getId());\n        if (stats == null) {\n            throw new ServerApiException(BaseCmd.INTERNAL_ERROR, \"Internal error searching for user stats\");\n        }\n\n        Long bytesSent = 0L;\n        Long bytesReceived = 0L;\n        for (UserStatisticsVO stat : stats) {\n            Long rx = stat.getNetBytesReceived() + stat.getCurrentBytesReceived();\n            Long tx = stat.getNetBytesSent() + stat.getCurrentBytesSent();\n            bytesReceived = bytesReceived + Long.valueOf(rx);\n            bytesSent = bytesSent + Long.valueOf(tx);\n        }\n        accountResponse.setBytesReceived(bytesReceived);\n        accountResponse.setBytesSent(bytesSent);\n\n        // Get resource limits and counts\n\n        Long vmLimit = ApiDBUtils.findCorrectResourceLimit(ResourceType.user_vm, account.getId());\n        String vmLimitDisplay = (accountIsAdmin || vmLimit == -1) ? \"Unlimited\" : String.valueOf(vmLimit);\n        Long vmTotal = ApiDBUtils.getResourceCount(ResourceType.user_vm, account.getId());\n        String vmAvail = (accountIsAdmin || vmLimit == -1) ? \"Unlimited\" : String.valueOf(vmLimit - vmTotal);\n        accountResponse.setVmLimit(vmLimitDisplay);\n        accountResponse.setVmTotal(vmTotal);\n        accountResponse.setVmAvailable(vmAvail);\n\n        Long ipLimit = ApiDBUtils.findCorrectResourceLimit(ResourceType.public_ip, account.getId());\n        String ipLimitDisplay = (accountIsAdmin || ipLimit == -1) ? \"Unlimited\" : String.valueOf(ipLimit);\n        Long ipTotal = ApiDBUtils.getResourceCount(ResourceType.public_ip, account.getId());\n\n        Long ips = ipLimit - ipTotal;\n        // check how many free ips are left, and if it's less than max allowed number of ips from account - use this\n        // value\n        Long ipsLeft = ApiDBUtils.countFreePublicIps();\n        boolean unlimited = true;\n        if (ips.longValue() > ipsLeft.longValue()) {\n            ips = ipsLeft;\n            unlimited = false;\n        }\n\n        String ipAvail = ((accountIsAdmin || ipLimit == -1) && unlimited) ? \"Unlimited\" : String.valueOf(ips);\n\n        accountResponse.setIpLimit(ipLimitDisplay);\n        accountResponse.setIpTotal(ipTotal);\n        accountResponse.setIpAvailable(ipAvail);\n\n        Long volumeLimit = ApiDBUtils.findCorrectResourceLimit(ResourceType.volume, account.getId());\n        String volumeLimitDisplay = (accountIsAdmin || volumeLimit == -1) ? \"Unlimited\" : String.valueOf(volumeLimit);\n        Long volumeTotal = ApiDBUtils.getResourceCount(ResourceType.volume, account.getId());\n        String volumeAvail = (accountIsAdmin || volumeLimit == -1) ? \"Unlimited\" : String.valueOf(volumeLimit - volumeTotal);\n        accountResponse.setVolumeLimit(volumeLimitDisplay);\n        accountResponse.setVolumeTotal(volumeTotal);\n        accountResponse.setVolumeAvailable(volumeAvail);\n\n        Long snapshotLimit = ApiDBUtils.findCorrectResourceLimit(ResourceType.snapshot, account.getId());\n        String snapshotLimitDisplay = (accountIsAdmin || snapshotLimit == -1) ? \"Unlimited\" : String.valueOf(snapshotLimit);\n        Long snapshotTotal = ApiDBUtils.getResourceCount(ResourceType.snapshot, account.getId());\n        String snapshotAvail = (accountIsAdmin || snapshotLimit == -1) ? \"Unlimited\" : String.valueOf(snapshotLimit - snapshotTotal);\n        accountResponse.setSnapshotLimit(snapshotLimitDisplay);\n        accountResponse.setSnapshotTotal(snapshotTotal);\n        accountResponse.setSnapshotAvailable(snapshotAvail);\n\n        Long templateLimit = ApiDBUtils.findCorrectResourceLimit(ResourceType.template, account.getId());\n        String templateLimitDisplay = (accountIsAdmin || templateLimit == -1) ? \"Unlimited\" : String.valueOf(templateLimit);\n        Long templateTotal = ApiDBUtils.getResourceCount(ResourceType.template, account.getId());\n        String templateAvail = (accountIsAdmin || templateLimit == -1) ? \"Unlimited\" : String.valueOf(templateLimit - templateTotal);\n        accountResponse.setTemplateLimit(templateLimitDisplay);\n        accountResponse.setTemplateTotal(templateTotal);\n        accountResponse.setTemplateAvailable(templateAvail);\n\n        // Get stopped and running VMs\n        int vmStopped = 0;\n        int vmRunning = 0;\n\n        List<Long> permittedAccounts = new ArrayList<Long>();\n        permittedAccounts.add(account.getId());\n\n        List<UserVmJoinVO> virtualMachines = ApiDBUtils.searchForUserVMs(new Criteria(), permittedAccounts);\n\n        // get Running/Stopped VMs\n        for (Iterator<UserVmJoinVO> iter = virtualMachines.iterator(); iter.hasNext();) {\n            // count how many stopped/running vms we have\n            UserVmJoinVO vm = iter.next();\n\n            if (vm.getState() == State.Stopped) {\n                vmStopped++;\n            } else if (vm.getState() == State.Running) {\n                vmRunning++;\n            }\n        }\n\n        accountResponse.setVmStopped(vmStopped);\n        accountResponse.setVmRunning(vmRunning);\n        accountResponse.setObjectName(\"account\");\n\n        //get resource limits for projects\n        Long projectLimit = ApiDBUtils.findCorrectResourceLimit(ResourceType.project, account.getId());\n        String projectLimitDisplay = (accountIsAdmin || projectLimit == -1) ? \"Unlimited\" : String.valueOf(projectLimit);\n        Long projectTotal = ApiDBUtils.getResourceCount(ResourceType.project, account.getId());\n        String projectAvail = (accountIsAdmin || projectLimit == -1) ? \"Unlimited\" : String.valueOf(projectLimit - projectTotal);\n        accountResponse.setProjectLimit(projectLimitDisplay);\n        accountResponse.setProjectTotal(projectTotal);\n        accountResponse.setProjectAvailable(projectAvail);\n\n        //get resource limits for networks\n        Long networkLimit = ApiDBUtils.findCorrectResourceLimit(ResourceType.network, account.getId());\n        String networkLimitDisplay = (accountIsAdmin || networkLimit == -1) ? \"Unlimited\" : String.valueOf(networkLimit);\n        Long networkTotal = ApiDBUtils.getResourceCount(ResourceType.network, account.getId());\n        String networkAvail = (accountIsAdmin || networkLimit == -1) ? \"Unlimited\" : String.valueOf(networkLimit - networkTotal);\n        accountResponse.setNetworkLimit(networkLimitDisplay);\n        accountResponse.setNetworkTotal(networkTotal);\n        accountResponse.setNetworkAvailable(networkAvail);\n\n        //get resource limits for vpcs\n        Long vpcLimit = ApiDBUtils.findCorrectResourceLimit(ResourceType.vpc, account.getId());\n        String vpcLimitDisplay = (accountIsAdmin || vpcLimit == -1) ? \"Unlimited\" : String.valueOf(vpcLimit);\n        Long vpcTotal = ApiDBUtils.getResourceCount(ResourceType.vpc, account.getId());\n        String vpcAvail = (accountIsAdmin || vpcLimit == -1) ? \"Unlimited\" : String.valueOf(vpcLimit - vpcTotal);\n        accountResponse.setNetworkLimit(vpcLimitDisplay);\n        accountResponse.setNetworkTotal(vpcTotal);\n        accountResponse.setNetworkAvailable(vpcAvail);\n\n        // adding all the users for an account as part of the response obj\n        List<UserVO> usersForAccount = ApiDBUtils.listUsersByAccount(account.getAccountId());\n        List<UserResponse> userResponseList = new ArrayList<UserResponse>();\n        for (UserVO user : usersForAccount) {\n            UserResponse userResponse = createUserResponse(user);\n            userResponseList.add(userResponse);\n        }\n\n        accountResponse.setUsers(userResponseList);\n        accountResponse.setDetails(ApiDBUtils.getAccountDetails(account.getId()));\n        return accountResponse;\n    }","id":82627,"modified_method":"@Override\n    public AccountResponse createAccountResponse(Account account) {\n        boolean accountIsAdmin = (account.getType() == Account.ACCOUNT_TYPE_ADMIN);\n        AccountResponse accountResponse = new AccountResponse();\n        accountResponse.setId(account.getUuid());\n        accountResponse.setName(account.getAccountName());\n        accountResponse.setAccountType(account.getType());\n        Domain domain = ApiDBUtils.findDomainById(account.getDomainId());\n        if (domain != null) {\n            accountResponse.setDomainId(domain.getUuid());\n            accountResponse.setDomainName(domain.getName());\n        }\n        accountResponse.setState(account.getState().toString());\n        accountResponse.setNetworkDomain(account.getNetworkDomain());\n        DataCenter dc = ApiDBUtils.findZoneById(account.getDefaultZoneId());\n        if (dc != null) {\n            accountResponse.setDefaultZone(dc.getUuid());\n        }\n\n        // get network stat\n        List<UserStatisticsVO> stats = ApiDBUtils.listUserStatsBy(account.getId());\n        if (stats == null) {\n            throw new ServerApiException(BaseCmd.INTERNAL_ERROR, \"Internal error searching for user stats\");\n        }\n\n        Long bytesSent = 0L;\n        Long bytesReceived = 0L;\n        for (UserStatisticsVO stat : stats) {\n            Long rx = stat.getNetBytesReceived() + stat.getCurrentBytesReceived();\n            Long tx = stat.getNetBytesSent() + stat.getCurrentBytesSent();\n            bytesReceived = bytesReceived + Long.valueOf(rx);\n            bytesSent = bytesSent + Long.valueOf(tx);\n        }\n        accountResponse.setBytesReceived(bytesReceived);\n        accountResponse.setBytesSent(bytesSent);\n\n        // Get resource limits and counts\n\n        Long vmLimit = ApiDBUtils.findCorrectResourceLimit(ResourceType.user_vm, account.getId());\n        String vmLimitDisplay = (accountIsAdmin || vmLimit == -1) ? \"Unlimited\" : String.valueOf(vmLimit);\n        Long vmTotal = ApiDBUtils.getResourceCount(ResourceType.user_vm, account.getId());\n        String vmAvail = (accountIsAdmin || vmLimit == -1) ? \"Unlimited\" : String.valueOf(vmLimit - vmTotal);\n        accountResponse.setVmLimit(vmLimitDisplay);\n        accountResponse.setVmTotal(vmTotal);\n        accountResponse.setVmAvailable(vmAvail);\n\n        Long ipLimit = ApiDBUtils.findCorrectResourceLimit(ResourceType.public_ip, account.getId());\n        String ipLimitDisplay = (accountIsAdmin || ipLimit == -1) ? \"Unlimited\" : String.valueOf(ipLimit);\n        Long ipTotal = ApiDBUtils.getResourceCount(ResourceType.public_ip, account.getId());\n\n        Long ips = ipLimit - ipTotal;\n        // check how many free ips are left, and if it's less than max allowed number of ips from account - use this\n        // value\n        Long ipsLeft = ApiDBUtils.countFreePublicIps();\n        boolean unlimited = true;\n        if (ips.longValue() > ipsLeft.longValue()) {\n            ips = ipsLeft;\n            unlimited = false;\n        }\n\n        String ipAvail = ((accountIsAdmin || ipLimit == -1) && unlimited) ? \"Unlimited\" : String.valueOf(ips);\n\n        accountResponse.setIpLimit(ipLimitDisplay);\n        accountResponse.setIpTotal(ipTotal);\n        accountResponse.setIpAvailable(ipAvail);\n\n        Long volumeLimit = ApiDBUtils.findCorrectResourceLimit(ResourceType.volume, account.getId());\n        String volumeLimitDisplay = (accountIsAdmin || volumeLimit == -1) ? \"Unlimited\" : String.valueOf(volumeLimit);\n        Long volumeTotal = ApiDBUtils.getResourceCount(ResourceType.volume, account.getId());\n        String volumeAvail = (accountIsAdmin || volumeLimit == -1) ? \"Unlimited\" : String.valueOf(volumeLimit - volumeTotal);\n        accountResponse.setVolumeLimit(volumeLimitDisplay);\n        accountResponse.setVolumeTotal(volumeTotal);\n        accountResponse.setVolumeAvailable(volumeAvail);\n\n        Long snapshotLimit = ApiDBUtils.findCorrectResourceLimit(ResourceType.snapshot, account.getId());\n        String snapshotLimitDisplay = (accountIsAdmin || snapshotLimit == -1) ? \"Unlimited\" : String.valueOf(snapshotLimit);\n        Long snapshotTotal = ApiDBUtils.getResourceCount(ResourceType.snapshot, account.getId());\n        String snapshotAvail = (accountIsAdmin || snapshotLimit == -1) ? \"Unlimited\" : String.valueOf(snapshotLimit - snapshotTotal);\n        accountResponse.setSnapshotLimit(snapshotLimitDisplay);\n        accountResponse.setSnapshotTotal(snapshotTotal);\n        accountResponse.setSnapshotAvailable(snapshotAvail);\n\n        Long templateLimit = ApiDBUtils.findCorrectResourceLimit(ResourceType.template, account.getId());\n        String templateLimitDisplay = (accountIsAdmin || templateLimit == -1) ? \"Unlimited\" : String.valueOf(templateLimit);\n        Long templateTotal = ApiDBUtils.getResourceCount(ResourceType.template, account.getId());\n        String templateAvail = (accountIsAdmin || templateLimit == -1) ? \"Unlimited\" : String.valueOf(templateLimit - templateTotal);\n        accountResponse.setTemplateLimit(templateLimitDisplay);\n        accountResponse.setTemplateTotal(templateTotal);\n        accountResponse.setTemplateAvailable(templateAvail);\n\n        // Get stopped and running VMs\n        int vmStopped = 0;\n        int vmRunning = 0;\n\n        List<Long> permittedAccounts = new ArrayList<Long>();\n        permittedAccounts.add(account.getId());\n\n        List<UserVmJoinVO> virtualMachines = ApiDBUtils.searchForUserVMs(new Criteria(), permittedAccounts);\n\n        // get Running/Stopped VMs\n        for (Iterator<UserVmJoinVO> iter = virtualMachines.iterator(); iter.hasNext();) {\n            // count how many stopped/running vms we have\n            UserVmJoinVO vm = iter.next();\n\n            if (vm.getState() == State.Stopped) {\n                vmStopped++;\n            } else if (vm.getState() == State.Running) {\n                vmRunning++;\n            }\n        }\n\n        accountResponse.setVmStopped(vmStopped);\n        accountResponse.setVmRunning(vmRunning);\n        accountResponse.setObjectName(\"account\");\n\n        //get resource limits for projects\n        Long projectLimit = ApiDBUtils.findCorrectResourceLimit(ResourceType.project, account.getId());\n        String projectLimitDisplay = (accountIsAdmin || projectLimit == -1) ? \"Unlimited\" : String.valueOf(projectLimit);\n        Long projectTotal = ApiDBUtils.getResourceCount(ResourceType.project, account.getId());\n        String projectAvail = (accountIsAdmin || projectLimit == -1) ? \"Unlimited\" : String.valueOf(projectLimit - projectTotal);\n        accountResponse.setProjectLimit(projectLimitDisplay);\n        accountResponse.setProjectTotal(projectTotal);\n        accountResponse.setProjectAvailable(projectAvail);\n\n        //get resource limits for networks\n        Long networkLimit = ApiDBUtils.findCorrectResourceLimit(ResourceType.network, account.getId());\n        String networkLimitDisplay = (accountIsAdmin || networkLimit == -1) ? \"Unlimited\" : String.valueOf(networkLimit);\n        Long networkTotal = ApiDBUtils.getResourceCount(ResourceType.network, account.getId());\n        String networkAvail = (accountIsAdmin || networkLimit == -1) ? \"Unlimited\" : String.valueOf(networkLimit - networkTotal);\n        accountResponse.setNetworkLimit(networkLimitDisplay);\n        accountResponse.setNetworkTotal(networkTotal);\n        accountResponse.setNetworkAvailable(networkAvail);\n\n        //get resource limits for vpcs\n        Long vpcLimit = ApiDBUtils.findCorrectResourceLimit(ResourceType.vpc, account.getId());\n        String vpcLimitDisplay = (accountIsAdmin || vpcLimit == -1) ? \"Unlimited\" : String.valueOf(vpcLimit);\n        Long vpcTotal = ApiDBUtils.getResourceCount(ResourceType.vpc, account.getId());\n        String vpcAvail = (accountIsAdmin || vpcLimit == -1) ? \"Unlimited\" : String.valueOf(vpcLimit - vpcTotal);\n        accountResponse.setNetworkLimit(vpcLimitDisplay);\n        accountResponse.setNetworkTotal(vpcTotal);\n        accountResponse.setNetworkAvailable(vpcAvail);\n\n        // adding all the users for an account as part of the response obj\n        List<UserVO> usersForAccount = ApiDBUtils.listUsersByAccount(account.getAccountId());\n        List<UserResponse> userResponseList = new ArrayList<UserResponse>();\n        for (UserVO user : usersForAccount) {\n            UserResponse userResponse = createUserResponse(user);\n            userResponseList.add(userResponse);\n        }\n\n        accountResponse.setUsers(userResponseList);\n        accountResponse.setDetails(ApiDBUtils.getAccountDetails(account.getId()));\n        return accountResponse;\n    }","commit_id":"e397f23f6b5d6ba34ad42eca95ae9d9ee43ac6a8","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public RemoteAccessVpnResponse createRemoteAccessVpnResponse(RemoteAccessVpn vpn) {\n        RemoteAccessVpnResponse vpnResponse = new RemoteAccessVpnResponse();\n        IpAddress ip = ApiDBUtils.findIpAddressById(vpn.getServerAddressId());\n        if (ip != null) {\n            vpnResponse.setPublicIpId(ip.getUuid());\n            vpnResponse.setPublicIp(ip.getAddress().addr());\n        }\n        vpnResponse.setIpRange(vpn.getIpRange());\n        vpnResponse.setPresharedKey(vpn.getIpsecPresharedKey());\n\n        populateOwner(vpnResponse, vpn);\n\n        if (vpn.getState() != null) {\n            vpnResponse.setState(vpn.getState().toString());\n        }\n        vpnResponse.setObjectName(\"remoteaccessvpn\");\n\n        return vpnResponse;\n    }","id":82628,"modified_method":"@Override\n    public RemoteAccessVpnResponse createRemoteAccessVpnResponse(RemoteAccessVpn vpn) {\n        RemoteAccessVpnResponse vpnResponse = new RemoteAccessVpnResponse();\n        IpAddress ip = ApiDBUtils.findIpAddressById(vpn.getServerAddressId());\n        if (ip != null) {\n            vpnResponse.setPublicIpId(ip.getUuid());\n            vpnResponse.setPublicIp(ip.getAddress().addr());\n        }\n        vpnResponse.setIpRange(vpn.getIpRange());\n        vpnResponse.setPresharedKey(vpn.getIpsecPresharedKey());\n\n        populateOwner(vpnResponse, vpn);\n\n        vpnResponse.setState(vpn.getState().toString());\n        vpnResponse.setObjectName(\"remoteaccessvpn\");\n\n        return vpnResponse;\n    }","commit_id":"e397f23f6b5d6ba34ad42eca95ae9d9ee43ac6a8","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public NetworkOfferingResponse createNetworkOfferingResponse(NetworkOffering offering) {\n        NetworkOfferingResponse response = new NetworkOfferingResponse();\n        response.setId(offering.getUuid());\n        response.setName(offering.getName());\n        response.setDisplayText(offering.getDisplayText());\n        response.setTags(offering.getTags());\n        if (offering.getTrafficType() != null) {\n            response.setTrafficType(offering.getTrafficType().toString());\n        }\n        response.setIsDefault(offering.isDefault());\n        response.setSpecifyVlan(offering.getSpecifyVlan());\n        response.setConserveMode(offering.isConserveMode());\n        response.setSpecifyIpRanges(offering.getSpecifyIpRanges());\n        if (offering.getAvailability() != null) {\n            response.setAvailability(offering.getAvailability().toString());\n        }\n        response.setNetworkRate(ApiDBUtils.getNetworkRate(offering.getId()));\n        Long so = null;\n        if (offering.getServiceOfferingId() != null) {\n            so = offering.getServiceOfferingId();\n        } else {\n            so = ApiDBUtils.findDefaultRouterServiceOffering();\n        }\n        if (so != null) {\n            ServiceOffering soffering = ApiDBUtils.findServiceOfferingById(so);\n            if (soffering != null)\n                response.setServiceOfferingId(soffering.getUuid());\n        }\n\n        if (offering.getGuestType() != null) {\n            response.setGuestIpType(offering.getGuestType().toString());\n        }\n\n        response.setState(offering.getState().name());\n\n        Map<Service, Set<Provider>> serviceProviderMap = ApiDBUtils.listNetworkOfferingServices(offering.getId());\n        List<ServiceResponse> serviceResponses = new ArrayList<ServiceResponse>();\n        for (Service service : serviceProviderMap.keySet()) {\n            ServiceResponse svcRsp = new ServiceResponse();\n            // skip gateway service\n            if (service == Service.Gateway) {\n                continue;\n            }\n            svcRsp.setName(service.getName());\n            List<ProviderResponse> providers = new ArrayList<ProviderResponse>();\n            for (Provider provider : serviceProviderMap.get(service)) {\n                if (provider != null) {\n                    ProviderResponse providerRsp = new ProviderResponse();\n                    providerRsp.setName(provider.getName());\n                    providers.add(providerRsp);\n                }\n            }\n            svcRsp.setProviders(providers);\n\n            if (Service.Lb == service) {\n                List<CapabilityResponse> lbCapResponse = new ArrayList<CapabilityResponse>();\n\n                CapabilityResponse lbIsoaltion = new CapabilityResponse();\n                lbIsoaltion.setName(Capability.SupportedLBIsolation.getName());\n                lbIsoaltion.setValue(offering.getDedicatedLB() ? \"dedicated\" : \"shared\");\n                lbCapResponse.add(lbIsoaltion);\n\n                CapabilityResponse eLb = new CapabilityResponse();\n                eLb.setName(Capability.ElasticLb.getName());\n                eLb.setValue(offering.getElasticLb() ? \"true\" : \"false\");\n                lbCapResponse.add(eLb);\n\n                svcRsp.setCapabilities(lbCapResponse);\n            } else if (Service.SourceNat == service) {\n                List<CapabilityResponse> capabilities = new ArrayList<CapabilityResponse>();\n                CapabilityResponse sharedSourceNat = new CapabilityResponse();\n                sharedSourceNat.setName(Capability.SupportedSourceNatTypes.getName());\n                sharedSourceNat.setValue(offering.getSharedSourceNat() ? \"perzone\" : \"peraccount\");\n                capabilities.add(sharedSourceNat);\n\n                CapabilityResponse redundantRouter = new CapabilityResponse();\n                redundantRouter.setName(Capability.RedundantRouter.getName());\n                redundantRouter.setValue(offering.getRedundantRouter() ? \"true\" : \"false\");\n                capabilities.add(redundantRouter);\n\n                svcRsp.setCapabilities(capabilities);\n            } else if (service == Service.StaticNat) {\n                List<CapabilityResponse> staticNatCapResponse = new ArrayList<CapabilityResponse>();\n\n                CapabilityResponse eIp = new CapabilityResponse();\n                eIp.setName(Capability.ElasticIp.getName());\n                eIp.setValue(offering.getElasticLb() ? \"true\" : \"false\");\n                staticNatCapResponse.add(eIp);\n\n                svcRsp.setCapabilities(staticNatCapResponse);\n            }\n\n            serviceResponses.add(svcRsp);\n        }\n        response.setForVpc(ApiDBUtils.isOfferingForVpc(offering));\n\n        response.setServices(serviceResponses);\n        response.setObjectName(\"networkoffering\");\n        return response;\n    }","id":82629,"modified_method":"@Override\n    public NetworkOfferingResponse createNetworkOfferingResponse(NetworkOffering offering) {\n        NetworkOfferingResponse response = new NetworkOfferingResponse();\n        response.setId(offering.getUuid());\n        response.setName(offering.getName());\n        response.setDisplayText(offering.getDisplayText());\n        response.setTags(offering.getTags());\n        response.setTrafficType(offering.getTrafficType().toString());\n        response.setIsDefault(offering.isDefault());\n        response.setSpecifyVlan(offering.getSpecifyVlan());\n        response.setConserveMode(offering.isConserveMode());\n        response.setSpecifyIpRanges(offering.getSpecifyIpRanges());\n        response.setAvailability(offering.getAvailability().toString());\n        response.setNetworkRate(ApiDBUtils.getNetworkRate(offering.getId()));\n        Long so = null;\n        if (offering.getServiceOfferingId() != null) {\n            so = offering.getServiceOfferingId();\n        } else {\n            so = ApiDBUtils.findDefaultRouterServiceOffering();\n        }\n        if (so != null) {\n            ServiceOffering soffering = ApiDBUtils.findServiceOfferingById(so);\n            if (soffering != null)\n                response.setServiceOfferingId(soffering.getUuid());\n        }\n\n        if (offering.getGuestType() != null) {\n            response.setGuestIpType(offering.getGuestType().toString());\n        }\n\n        response.setState(offering.getState().name());\n\n        Map<Service, Set<Provider>> serviceProviderMap = ApiDBUtils.listNetworkOfferingServices(offering.getId());\n        List<ServiceResponse> serviceResponses = new ArrayList<ServiceResponse>();\n        for (Service service : serviceProviderMap.keySet()) {\n            ServiceResponse svcRsp = new ServiceResponse();\n            // skip gateway service\n            if (service == Service.Gateway) {\n                continue;\n            }\n            svcRsp.setName(service.getName());\n            List<ProviderResponse> providers = new ArrayList<ProviderResponse>();\n            for (Provider provider : serviceProviderMap.get(service)) {\n                if (provider != null) {\n                    ProviderResponse providerRsp = new ProviderResponse();\n                    providerRsp.setName(provider.getName());\n                    providers.add(providerRsp);\n                }\n            }\n            svcRsp.setProviders(providers);\n\n            if (Service.Lb == service) {\n                List<CapabilityResponse> lbCapResponse = new ArrayList<CapabilityResponse>();\n\n                CapabilityResponse lbIsoaltion = new CapabilityResponse();\n                lbIsoaltion.setName(Capability.SupportedLBIsolation.getName());\n                lbIsoaltion.setValue(offering.getDedicatedLB() ? \"dedicated\" : \"shared\");\n                lbCapResponse.add(lbIsoaltion);\n\n                CapabilityResponse eLb = new CapabilityResponse();\n                eLb.setName(Capability.ElasticLb.getName());\n                eLb.setValue(offering.getElasticLb() ? \"true\" : \"false\");\n                lbCapResponse.add(eLb);\n\n                svcRsp.setCapabilities(lbCapResponse);\n            } else if (Service.SourceNat == service) {\n                List<CapabilityResponse> capabilities = new ArrayList<CapabilityResponse>();\n                CapabilityResponse sharedSourceNat = new CapabilityResponse();\n                sharedSourceNat.setName(Capability.SupportedSourceNatTypes.getName());\n                sharedSourceNat.setValue(offering.getSharedSourceNat() ? \"perzone\" : \"peraccount\");\n                capabilities.add(sharedSourceNat);\n\n                CapabilityResponse redundantRouter = new CapabilityResponse();\n                redundantRouter.setName(Capability.RedundantRouter.getName());\n                redundantRouter.setValue(offering.getRedundantRouter() ? \"true\" : \"false\");\n                capabilities.add(redundantRouter);\n\n                svcRsp.setCapabilities(capabilities);\n            } else if (service == Service.StaticNat) {\n                List<CapabilityResponse> staticNatCapResponse = new ArrayList<CapabilityResponse>();\n\n                CapabilityResponse eIp = new CapabilityResponse();\n                eIp.setName(Capability.ElasticIp.getName());\n                eIp.setValue(offering.getElasticLb() ? \"true\" : \"false\");\n                staticNatCapResponse.add(eIp);\n\n                svcRsp.setCapabilities(staticNatCapResponse);\n            }\n\n            serviceResponses.add(svcRsp);\n        }\n        response.setForVpc(ApiDBUtils.isOfferingForVpc(offering));\n\n        response.setServices(serviceResponses);\n        response.setObjectName(\"networkoffering\");\n        return response;\n    }","commit_id":"e397f23f6b5d6ba34ad42eca95ae9d9ee43ac6a8","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public LoadBalancerResponse createLoadBalancerResponse(LoadBalancer loadBalancer) {\n        LoadBalancerResponse lbResponse = new LoadBalancerResponse();\n        lbResponse.setId(loadBalancer.getUuid());\n        lbResponse.setName(loadBalancer.getName());\n        lbResponse.setDescription(loadBalancer.getDescription());\n        List<String> cidrs = ApiDBUtils.findFirewallSourceCidrs(loadBalancer.getId());\n        lbResponse.setCidrList(StringUtils.join(cidrs, \",\"));\n\n        IPAddressVO publicIp = ApiDBUtils.findIpAddressById(loadBalancer.getSourceIpAddressId());\n        lbResponse.setPublicIpId(publicIp.getUuid());\n        lbResponse.setPublicIp(publicIp.getAddress().addr());\n        lbResponse.setPublicPort(Integer.toString(loadBalancer.getSourcePortStart()));\n        lbResponse.setPrivatePort(Integer.toString(loadBalancer.getDefaultPortStart()));\n        lbResponse.setAlgorithm(loadBalancer.getAlgorithm());\n        FirewallRule.State state = loadBalancer.getState();\n        if (state != null) {\n            String stateToSet = state.toString();\n            if (state.equals(FirewallRule.State.Revoke)) {\n                stateToSet = \"Deleting\";\n            }\n            lbResponse.setState(stateToSet);\n        }\n        populateOwner(lbResponse, loadBalancer);\n        DataCenter zone = ApiDBUtils.findZoneById(publicIp.getDataCenterId());\n        if (zone != null) {\n            lbResponse.setZoneId(zone.getUuid());\n        }\n\n        //set tag information\n        List<? extends ResourceTag> tags = ApiDBUtils.listByResourceTypeAndId(TaggedResourceType.UserVm, loadBalancer.getId());\n        List<ResourceTagResponse> tagResponses = new ArrayList<ResourceTagResponse>();\n        for (ResourceTag tag : tags) {\n            ResourceTagResponse tagResponse = createResourceTagResponse(tag, true);\n            tagResponses.add(tagResponse);\n        }\n        lbResponse.setTags(tagResponses);\n\n        lbResponse.setObjectName(\"loadbalancer\");\n        return lbResponse;\n    }","id":82630,"modified_method":"@Override\n    public LoadBalancerResponse createLoadBalancerResponse(LoadBalancer loadBalancer) {\n        LoadBalancerResponse lbResponse = new LoadBalancerResponse();\n        lbResponse.setId(loadBalancer.getUuid());\n        lbResponse.setName(loadBalancer.getName());\n        lbResponse.setDescription(loadBalancer.getDescription());\n        List<String> cidrs = ApiDBUtils.findFirewallSourceCidrs(loadBalancer.getId());\n        lbResponse.setCidrList(StringUtils.join(cidrs, \",\"));\n\n        IPAddressVO publicIp = ApiDBUtils.findIpAddressById(loadBalancer.getSourceIpAddressId());\n        lbResponse.setPublicIpId(publicIp.getUuid());\n        lbResponse.setPublicIp(publicIp.getAddress().addr());\n        lbResponse.setPublicPort(Integer.toString(loadBalancer.getSourcePortStart()));\n        lbResponse.setPrivatePort(Integer.toString(loadBalancer.getDefaultPortStart()));\n        lbResponse.setAlgorithm(loadBalancer.getAlgorithm());\n        FirewallRule.State state = loadBalancer.getState();\n        String stateToSet = state.toString();\n        if (state.equals(FirewallRule.State.Revoke)) {\n            stateToSet = \"Deleting\";\n        }\n        lbResponse.setState(stateToSet);\n        populateOwner(lbResponse, loadBalancer);\n        DataCenter zone = ApiDBUtils.findZoneById(publicIp.getDataCenterId());\n        if (zone != null) {\n            lbResponse.setZoneId(zone.getUuid());\n        }\n\n        //set tag information\n        List<? extends ResourceTag> tags = ApiDBUtils.listByResourceTypeAndId(TaggedResourceType.UserVm, loadBalancer.getId());\n        List<ResourceTagResponse> tagResponses = new ArrayList<ResourceTagResponse>();\n        for (ResourceTag tag : tags) {\n            ResourceTagResponse tagResponse = createResourceTagResponse(tag, true);\n            tagResponses.add(tagResponse);\n        }\n        lbResponse.setTags(tagResponses);\n\n        lbResponse.setObjectName(\"loadbalancer\");\n        return lbResponse;\n    }","commit_id":"e397f23f6b5d6ba34ad42eca95ae9d9ee43ac6a8","url":"https://github.com/apache/cloudstack"},{"original_method":"private List<TemplateResponse> createSwiftTemplateResponses(long templateId) {\n        VirtualMachineTemplate template = findTemplateById(templateId);\n        List<TemplateResponse> responses = new ArrayList<TemplateResponse>();\n        VMTemplateSwiftVO templateSwiftRef = ApiDBUtils.findTemplateSwiftRef(templateId);\n        if (templateSwiftRef == null) {\n            return responses;\n        }\n\n        TemplateResponse templateResponse = new TemplateResponse();\n        templateResponse.setId(template.getUuid());\n        templateResponse.setName(template.getName());\n        templateResponse.setDisplayText(template.getDisplayText());\n        templateResponse.setPublic(template.isPublicTemplate());\n        templateResponse.setCreated(templateSwiftRef.getCreated());\n\n        templateResponse.setReady(true);\n        templateResponse.setFeatured(template.isFeatured());\n        templateResponse.setExtractable(template.isExtractable() && !(template.getTemplateType() == TemplateType.SYSTEM));\n        templateResponse.setPasswordEnabled(template.getEnablePassword());\n        templateResponse.setCrossZones(template.isCrossZones());\n        templateResponse.setFormat(template.getFormat());\n        templateResponse.setDetails(template.getDetails());\n        if (template.getTemplateType() != null) {\n            templateResponse.setTemplateType(template.getTemplateType().toString());\n        }\n\n        if (template.getHypervisorType() != null) {\n            templateResponse.setHypervisor(template.getHypervisorType().toString());\n        }\n\n        GuestOS os = ApiDBUtils.findGuestOSById(template.getGuestOSId());\n        if (os != null) {\n            templateResponse.setOsTypeId(os.getUuid());\n            templateResponse.setOsTypeName(os.getDisplayName());\n        } else {\n            templateResponse.setOsTypeId(\"-1\");\n            templateResponse.setOsTypeName(\"\");\n        }\n\n        Account account = ApiDBUtils.findAccountByIdIncludingRemoved(template.getAccountId());\n        populateAccount(templateResponse, account.getId());\n        populateDomain(templateResponse, account.getDomainId());\n\n        Account caller = UserContext.current().getCaller();\n        boolean isAdmin = false;\n        if (BaseCmd.isAdmin(caller.getType())) {\n            isAdmin = true;\n        }\n\n        // If the user is an Admin, add the template download status\n        if (isAdmin || caller.getId() == template.getAccountId()) {\n            // add download status\n            templateResponse.setStatus(\"Successfully Installed\");\n        }\n\n        Long templateSize = templateSwiftRef.getSize();\n        if (templateSize > 0) {\n            templateResponse.setSize(templateSize);\n        }\n\n        templateResponse.setChecksum(template.getChecksum());\n        if (template.getSourceTemplateId() != null) {\n            VirtualMachineTemplate tmpl = ApiDBUtils.findTemplateById(template.getSourceTemplateId());\n            if (tmpl != null) {\n                templateResponse.setSourceTemplateId(tmpl.getUuid());\n            }\n        }\n\n        templateResponse.setChecksum(template.getChecksum());\n\n        templateResponse.setTemplateTag(template.getTemplateTag());\n\n        templateResponse.setObjectName(\"template\");\n        responses.add(templateResponse);\n        return responses;\n    }","id":82631,"modified_method":"private List<TemplateResponse> createSwiftTemplateResponses(long templateId) {\n        VirtualMachineTemplate template = findTemplateById(templateId);\n        List<TemplateResponse> responses = new ArrayList<TemplateResponse>();\n        VMTemplateSwiftVO templateSwiftRef = ApiDBUtils.findTemplateSwiftRef(templateId);\n        if (templateSwiftRef == null) {\n            return responses;\n        }\n\n        TemplateResponse templateResponse = new TemplateResponse();\n        templateResponse.setId(template.getUuid());\n        templateResponse.setName(template.getName());\n        templateResponse.setDisplayText(template.getDisplayText());\n        templateResponse.setPublic(template.isPublicTemplate());\n        templateResponse.setCreated(templateSwiftRef.getCreated());\n\n        templateResponse.setReady(true);\n        templateResponse.setFeatured(template.isFeatured());\n        templateResponse.setExtractable(template.isExtractable() && !(template.getTemplateType() == TemplateType.SYSTEM));\n        templateResponse.setPasswordEnabled(template.getEnablePassword());\n        templateResponse.setCrossZones(template.isCrossZones());\n        templateResponse.setFormat(template.getFormat());\n        templateResponse.setDetails(template.getDetails());\n        if (template.getTemplateType() != null) {\n            templateResponse.setTemplateType(template.getTemplateType().toString());\n        }\n\n        templateResponse.setHypervisor(template.getHypervisorType().toString());\n\n        GuestOS os = ApiDBUtils.findGuestOSById(template.getGuestOSId());\n        if (os != null) {\n            templateResponse.setOsTypeId(os.getUuid());\n            templateResponse.setOsTypeName(os.getDisplayName());\n        } else {\n            templateResponse.setOsTypeId(\"-1\");\n            templateResponse.setOsTypeName(\"\");\n        }\n\n        Account account = ApiDBUtils.findAccountByIdIncludingRemoved(template.getAccountId());\n        populateAccount(templateResponse, account.getId());\n        populateDomain(templateResponse, account.getDomainId());\n\n        Account caller = UserContext.current().getCaller();\n        boolean isAdmin = false;\n        if (BaseCmd.isAdmin(caller.getType())) {\n            isAdmin = true;\n        }\n\n        // If the user is an Admin, add the template download status\n        if (isAdmin || caller.getId() == template.getAccountId()) {\n            // add download status\n            templateResponse.setStatus(\"Successfully Installed\");\n        }\n\n        Long templateSize = templateSwiftRef.getSize();\n        if (templateSize > 0) {\n            templateResponse.setSize(templateSize);\n        }\n\n        templateResponse.setChecksum(template.getChecksum());\n        if (template.getSourceTemplateId() != null) {\n            VirtualMachineTemplate tmpl = ApiDBUtils.findTemplateById(template.getSourceTemplateId());\n            if (tmpl != null) {\n                templateResponse.setSourceTemplateId(tmpl.getUuid());\n            }\n        }\n\n        templateResponse.setChecksum(template.getChecksum());\n\n        templateResponse.setTemplateTag(template.getTemplateTag());\n\n        templateResponse.setObjectName(\"template\");\n        responses.add(templateResponse);\n        return responses;\n    }","commit_id":"e397f23f6b5d6ba34ad42eca95ae9d9ee43ac6a8","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public List<TemplateResponse> createTemplateResponses(long templateId, long zoneId, boolean readyOnly) {\n        VirtualMachineTemplate template = findTemplateById(templateId);\n        List<TemplateResponse> responses = new ArrayList<TemplateResponse>();\n        VMTemplateHostVO templateHostRef = ApiDBUtils.findTemplateHostRef(templateId, zoneId, readyOnly);\n        if (templateHostRef == null) {\n            return responses;\n        }\n\n        HostVO host = ApiDBUtils.findHostById(templateHostRef.getHostId());\n        if (host.getType() == Host.Type.LocalSecondaryStorage && host.getStatus() != com.cloud.host.Status.Up) {\n            return responses;\n        }\n\n        TemplateResponse templateResponse = new TemplateResponse();\n        templateResponse.setId(template.getUuid());\n        templateResponse.setName(template.getName());\n        templateResponse.setDisplayText(template.getDisplayText());\n        templateResponse.setPublic(template.isPublicTemplate());\n        templateResponse.setCreated(templateHostRef.getCreated());\n\n        templateResponse.setReady(templateHostRef.getDownloadState() == Status.DOWNLOADED);\n        templateResponse.setFeatured(template.isFeatured());\n        templateResponse.setExtractable(template.isExtractable() && !(template.getTemplateType() == TemplateType.SYSTEM));\n        templateResponse.setPasswordEnabled(template.getEnablePassword());\n        templateResponse.setCrossZones(template.isCrossZones());\n        templateResponse.setFormat(template.getFormat());\n        if (template.getTemplateType() != null) {\n            templateResponse.setTemplateType(template.getTemplateType().toString());\n        }\n\n        if (template.getHypervisorType() != null) {\n            templateResponse.setHypervisor(template.getHypervisorType().toString());\n        }\n        templateResponse.setDetails(template.getDetails());\n\n        GuestOS os = ApiDBUtils.findGuestOSById(template.getGuestOSId());\n        if (os != null) {\n            templateResponse.setOsTypeId(os.getUuid());\n            templateResponse.setOsTypeName(os.getDisplayName());\n        } else {\n            templateResponse.setOsTypeId(\"-1\");\n            templateResponse.setOsTypeName(\"\");\n        }\n\n        Account account = ApiDBUtils.findAccountByIdIncludingRemoved(template.getAccountId());\n        populateAccount(templateResponse, account.getId());\n        populateDomain(templateResponse, account.getDomainId());\n\n        DataCenter datacenter = ApiDBUtils.findZoneById(zoneId);\n\n        if (datacenter != null) {\n            // Add the zone ID\n            templateResponse.setZoneId(datacenter.getUuid());\n            templateResponse.setZoneName(datacenter.getName());\n        }\n\n        boolean isAdmin = false;\n        Account caller = UserContext.current().getCaller();\n        if ((caller == null) || BaseCmd.isAdmin(caller.getType())) {\n            isAdmin = true;\n        }\n\n        // If the user is an Admin, add the template download status\n        if (isAdmin || caller.getId() == template.getAccountId()) {\n            // add download status\n            if (templateHostRef.getDownloadState() != Status.DOWNLOADED) {\n                String templateStatus = \"Processing\";\n                if (templateHostRef.getDownloadState() == VMTemplateHostVO.Status.DOWNLOAD_IN_PROGRESS) {\n                    if (templateHostRef.getDownloadPercent() == 100) {\n                        templateStatus = \"Installing Template\";\n                    } else {\n                        templateStatus = templateHostRef.getDownloadPercent() + \"% Downloaded\";\n                    }\n                } else {\n                    templateStatus = templateHostRef.getErrorString();\n                }\n                templateResponse.setStatus(templateStatus);\n            } else if (templateHostRef.getDownloadState() == VMTemplateHostVO.Status.DOWNLOADED) {\n                templateResponse.setStatus(\"Download Complete\");\n            } else {\n                templateResponse.setStatus(\"Successfully Installed\");\n            }\n        }\n\n        Long templateSize = templateHostRef.getSize();\n        if (templateSize > 0) {\n            templateResponse.setSize(templateSize);\n        }\n\n        templateResponse.setChecksum(template.getChecksum());\n        if (template.getSourceTemplateId() != null) {\n            VirtualMachineTemplate tmpl = ApiDBUtils.findTemplateById(template.getSourceTemplateId());\n            if (tmpl != null) {\n                templateResponse.setSourceTemplateId(tmpl.getUuid());\n            }\n        }\n\n        templateResponse.setChecksum(template.getChecksum());\n\n        templateResponse.setTemplateTag(template.getTemplateTag());\n\n        //set tag information\n        List<? extends ResourceTag> tags = null;\n        if (template.getFormat() == ImageFormat.ISO) {\n            tags = ApiDBUtils.listByResourceTypeAndId(TaggedResourceType.ISO, template.getId());\n        } else {\n            tags = ApiDBUtils.listByResourceTypeAndId(TaggedResourceType.Template, template.getId());\n        }\n        List<ResourceTagResponse> tagResponses = new ArrayList<ResourceTagResponse>();\n        for (ResourceTag tag : tags) {\n            ResourceTagResponse tagResponse = createResourceTagResponse(tag, true);\n            tagResponses.add(tagResponse);\n        }\n        templateResponse.setTags(tagResponses);\n\n        templateResponse.setObjectName(\"template\");\n        responses.add(templateResponse);\n        return responses;\n    }","id":82632,"modified_method":"@Override\n    public List<TemplateResponse> createTemplateResponses(long templateId, long zoneId, boolean readyOnly) {\n        VirtualMachineTemplate template = findTemplateById(templateId);\n        List<TemplateResponse> responses = new ArrayList<TemplateResponse>();\n        VMTemplateHostVO templateHostRef = ApiDBUtils.findTemplateHostRef(templateId, zoneId, readyOnly);\n        if (templateHostRef == null) {\n            return responses;\n        }\n\n        HostVO host = ApiDBUtils.findHostById(templateHostRef.getHostId());\n        if (host.getType() == Host.Type.LocalSecondaryStorage && host.getStatus() != com.cloud.host.Status.Up) {\n            return responses;\n        }\n\n        TemplateResponse templateResponse = new TemplateResponse();\n        templateResponse.setId(template.getUuid());\n        templateResponse.setName(template.getName());\n        templateResponse.setDisplayText(template.getDisplayText());\n        templateResponse.setPublic(template.isPublicTemplate());\n        templateResponse.setCreated(templateHostRef.getCreated());\n\n        templateResponse.setReady(templateHostRef.getDownloadState() == Status.DOWNLOADED);\n        templateResponse.setFeatured(template.isFeatured());\n        templateResponse.setExtractable(template.isExtractable() && !(template.getTemplateType() == TemplateType.SYSTEM));\n        templateResponse.setPasswordEnabled(template.getEnablePassword());\n        templateResponse.setCrossZones(template.isCrossZones());\n        templateResponse.setFormat(template.getFormat());\n        if (template.getTemplateType() != null) {\n            templateResponse.setTemplateType(template.getTemplateType().toString());\n        }\n\n        templateResponse.setHypervisor(template.getHypervisorType().toString());\n        templateResponse.setDetails(template.getDetails());\n\n        GuestOS os = ApiDBUtils.findGuestOSById(template.getGuestOSId());\n        if (os != null) {\n            templateResponse.setOsTypeId(os.getUuid());\n            templateResponse.setOsTypeName(os.getDisplayName());\n        } else {\n            templateResponse.setOsTypeId(\"-1\");\n            templateResponse.setOsTypeName(\"\");\n        }\n\n        Account account = ApiDBUtils.findAccountByIdIncludingRemoved(template.getAccountId());\n        populateAccount(templateResponse, account.getId());\n        populateDomain(templateResponse, account.getDomainId());\n\n        DataCenter datacenter = ApiDBUtils.findZoneById(zoneId);\n\n        if (datacenter != null) {\n            // Add the zone ID\n            templateResponse.setZoneId(datacenter.getUuid());\n            templateResponse.setZoneName(datacenter.getName());\n        }\n\n        boolean isAdmin = false;\n        Account caller = UserContext.current().getCaller();\n        if ((caller == null) || BaseCmd.isAdmin(caller.getType())) {\n            isAdmin = true;\n        }\n\n        // If the user is an Admin, add the template download status\n        if (isAdmin || caller.getId() == template.getAccountId()) {\n            // add download status\n            if (templateHostRef.getDownloadState() != Status.DOWNLOADED) {\n                String templateStatus = \"Processing\";\n                if (templateHostRef.getDownloadState() == VMTemplateHostVO.Status.DOWNLOAD_IN_PROGRESS) {\n                    if (templateHostRef.getDownloadPercent() == 100) {\n                        templateStatus = \"Installing Template\";\n                    } else {\n                        templateStatus = templateHostRef.getDownloadPercent() + \"% Downloaded\";\n                    }\n                } else {\n                    templateStatus = templateHostRef.getErrorString();\n                }\n                templateResponse.setStatus(templateStatus);\n            } else if (templateHostRef.getDownloadState() == VMTemplateHostVO.Status.DOWNLOADED) {\n                templateResponse.setStatus(\"Download Complete\");\n            } else {\n                templateResponse.setStatus(\"Successfully Installed\");\n            }\n        }\n\n        Long templateSize = templateHostRef.getSize();\n        if (templateSize > 0) {\n            templateResponse.setSize(templateSize);\n        }\n\n        templateResponse.setChecksum(template.getChecksum());\n        if (template.getSourceTemplateId() != null) {\n            VirtualMachineTemplate tmpl = ApiDBUtils.findTemplateById(template.getSourceTemplateId());\n            if (tmpl != null) {\n                templateResponse.setSourceTemplateId(tmpl.getUuid());\n            }\n        }\n\n        templateResponse.setChecksum(template.getChecksum());\n\n        templateResponse.setTemplateTag(template.getTemplateTag());\n\n        //set tag information\n        List<? extends ResourceTag> tags = null;\n        if (template.getFormat() == ImageFormat.ISO) {\n            tags = ApiDBUtils.listByResourceTypeAndId(TaggedResourceType.ISO, template.getId());\n        } else {\n            tags = ApiDBUtils.listByResourceTypeAndId(TaggedResourceType.Template, template.getId());\n        }\n        List<ResourceTagResponse> tagResponses = new ArrayList<ResourceTagResponse>();\n        for (ResourceTag tag : tags) {\n            ResourceTagResponse tagResponse = createResourceTagResponse(tag, true);\n            tagResponses.add(tagResponse);\n        }\n        templateResponse.setTags(tagResponses);\n\n        templateResponse.setObjectName(\"template\");\n        responses.add(templateResponse);\n        return responses;\n    }","commit_id":"e397f23f6b5d6ba34ad42eca95ae9d9ee43ac6a8","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public HostResponse createHostResponse(Host host, EnumSet<HostDetails> details) {\n        HostResponse hostResponse = new HostResponse();\n        hostResponse.setId(host.getUuid());\n        hostResponse.setCapabilities(host.getCapabilities());\n        ClusterVO cluster = null;\n        if (host.getClusterId() != null) {\n            cluster = ApiDBUtils.findClusterById(host.getClusterId());\n            if (cluster != null) {\n                hostResponse.setClusterId(cluster.getUuid());\n            }\n        }\n        hostResponse.setCpuNumber(host.getCpus());\n        DataCenter zone = ApiDBUtils.findZoneById(host.getDataCenterId());\n        if (zone != null) {\n            hostResponse.setZoneId(zone.getUuid());\n        }\n        hostResponse.setDisconnectedOn(host.getDisconnectedOn());\n        hostResponse.setHypervisor(host.getHypervisorType());\n        hostResponse.setHostType(host.getType());\n        hostResponse.setLastPinged(new Date(host.getLastPinged()));\n        hostResponse.setManagementServerId(host.getManagementServerId());\n        hostResponse.setName(host.getName());\n        HostPodVO pod = ApiDBUtils.findPodById(host.getPodId());\n        if (pod != null) {\n            hostResponse.setPodId(pod.getUuid());\n        }\n        hostResponse.setRemoved(host.getRemoved());\n        hostResponse.setCpuSpeed(host.getSpeed());\n        hostResponse.setState(host.getStatus());\n        hostResponse.setIpAddress(host.getPrivateIpAddress());\n        hostResponse.setVersion(host.getVersion());\n        hostResponse.setCreated(host.getCreated());\n\n        if (details.contains(HostDetails.all) || details.contains(HostDetails.capacity)\n                || details.contains(HostDetails.stats) || details.contains(HostDetails.events)) {\n\n            GuestOSCategoryVO guestOSCategory = ApiDBUtils.getHostGuestOSCategory(host.getId());\n            if (guestOSCategory != null) {\n                hostResponse.setOsCategoryId(guestOSCategory.getUuid());\n                hostResponse.setOsCategoryName(guestOSCategory.getName());\n            }\n            if (zone != null) {\n                hostResponse.setZoneName(zone.getName());\n            }\n\n            if (pod != null) {\n                hostResponse.setPodName(pod.getName());\n            }\n\n            if (cluster != null) {\n                hostResponse.setClusterName(cluster.getName());\n                if (cluster.getClusterType() != null) {\n                    hostResponse.setClusterType(cluster.getClusterType().toString());\n                }\n            }\n        }\n\n        DecimalFormat decimalFormat = new DecimalFormat(\"#.##\");\n        if (host.getType() == Host.Type.Routing) {\n            if (details.contains(HostDetails.all) || details.contains(HostDetails.capacity)) {\n                // set allocated capacities\n                Long mem = ApiDBUtils.getMemoryOrCpuCapacitybyHost(host.getId(), Capacity.CAPACITY_TYPE_MEMORY);\n                Long cpu = ApiDBUtils.getMemoryOrCpuCapacitybyHost(host.getId(), Capacity.CAPACITY_TYPE_CPU);\n\n                hostResponse.setMemoryAllocated(mem);\n                hostResponse.setMemoryTotal(host.getTotalMemory());\n                String hostTags = ApiDBUtils.getHostTags(host.getId());\n                hostResponse.setHostTags(hostTags);\n\n                String haTag = ApiDBUtils.getHaTag();\n                if (haTag != null && !haTag.isEmpty() && hostTags != null && !hostTags.isEmpty()) {\n                    if (haTag.equalsIgnoreCase(hostTags)) {\n                        hostResponse.setHaHost(true);\n                    } else {\n                        hostResponse.setHaHost(false);\n                    }\n                } else {\n                    hostResponse.setHaHost(false);\n                }\n\n                hostResponse.setHypervisorVersion(host.getHypervisorVersion());\n\n                String cpuAlloc = decimalFormat.format(((float) cpu / (float) (host.getCpus() * host.getSpeed())) * 100f) + \"%\";\n                hostResponse.setCpuAllocated(cpuAlloc);\n                String cpuWithOverprovisioning = new Float(host.getCpus() * host.getSpeed() * ApiDBUtils.getCpuOverprovisioningFactor()).toString();\n                hostResponse.setCpuWithOverprovisioning(cpuWithOverprovisioning);\n            }\n\n            if (details.contains(HostDetails.all) || details.contains(HostDetails.stats)) {\n                // set CPU/RAM/Network stats\n                String cpuUsed = null;\n                HostStats hostStats = ApiDBUtils.getHostStatistics(host.getId());\n                if (hostStats != null) {\n                    float cpuUtil = (float) hostStats.getCpuUtilization();\n                    cpuUsed = decimalFormat.format(cpuUtil) + \"%\";\n                    hostResponse.setCpuUsed(cpuUsed);\n                    hostResponse.setMemoryUsed((new Double(hostStats.getUsedMemory())).longValue());\n                    hostResponse.setNetworkKbsRead((new Double(hostStats.getNetworkReadKBs())).longValue());\n                    hostResponse.setNetworkKbsWrite((new Double(hostStats.getNetworkWriteKBs())).longValue());\n\n                }\n            }\n\n        } else if (host.getType() == Host.Type.SecondaryStorage) {\n            StorageStats secStorageStats = ApiDBUtils.getSecondaryStorageStatistics(host.getId());\n            if (secStorageStats != null) {\n                hostResponse.setDiskSizeTotal(secStorageStats.getCapacityBytes());\n                hostResponse.setDiskSizeAllocated(secStorageStats.getByteUsed());\n            }\n        }\n\n        hostResponse.setLocalStorageActive(ApiDBUtils.isLocalStorageActiveOnHost(host));\n\n        if (details.contains(HostDetails.all) || details.contains(HostDetails.events)) {\n            Set<com.cloud.host.Status.Event> possibleEvents = host.getStatus().getPossibleEvents();\n            if ((possibleEvents != null) && !possibleEvents.isEmpty()) {\n                String events = \"\";\n                Iterator<com.cloud.host.Status.Event> iter = possibleEvents.iterator();\n                while (iter.hasNext()) {\n                    com.cloud.host.Status.Event event = iter.next();\n                    events += event.toString();\n                    if (iter.hasNext()) {\n                        events += \"; \";\n                    }\n                }\n                hostResponse.setEvents(events);\n            }\n        }\n\n        if (host.getResourceState() != null) {\n            hostResponse.setResourceState(host.getResourceState().toString());\n        }\n        hostResponse.setObjectName(\"host\");\n\n        return hostResponse;\n    }","id":82633,"modified_method":"@Override\n    public HostResponse createHostResponse(Host host, EnumSet<HostDetails> details) {\n        HostResponse hostResponse = new HostResponse();\n        hostResponse.setId(host.getUuid());\n        hostResponse.setCapabilities(host.getCapabilities());\n        ClusterVO cluster = null;\n        if (host.getClusterId() != null) {\n            cluster = ApiDBUtils.findClusterById(host.getClusterId());\n            if (cluster != null) {\n                hostResponse.setClusterId(cluster.getUuid());\n            }\n        }\n        hostResponse.setCpuNumber(host.getCpus());\n        DataCenter zone = ApiDBUtils.findZoneById(host.getDataCenterId());\n        if (zone != null) {\n            hostResponse.setZoneId(zone.getUuid());\n        }\n        hostResponse.setDisconnectedOn(host.getDisconnectedOn());\n        hostResponse.setHypervisor(host.getHypervisorType());\n        hostResponse.setHostType(host.getType());\n        hostResponse.setLastPinged(new Date(host.getLastPinged()));\n        hostResponse.setManagementServerId(host.getManagementServerId());\n        hostResponse.setName(host.getName());\n        HostPodVO pod = ApiDBUtils.findPodById(host.getPodId());\n        if (pod != null) {\n            hostResponse.setPodId(pod.getUuid());\n        }\n        hostResponse.setRemoved(host.getRemoved());\n        hostResponse.setCpuSpeed(host.getSpeed());\n        hostResponse.setState(host.getStatus());\n        hostResponse.setIpAddress(host.getPrivateIpAddress());\n        hostResponse.setVersion(host.getVersion());\n        hostResponse.setCreated(host.getCreated());\n\n        if (details.contains(HostDetails.all) || details.contains(HostDetails.capacity)\n                || details.contains(HostDetails.stats) || details.contains(HostDetails.events)) {\n\n            GuestOSCategoryVO guestOSCategory = ApiDBUtils.getHostGuestOSCategory(host.getId());\n            if (guestOSCategory != null) {\n                hostResponse.setOsCategoryId(guestOSCategory.getUuid());\n                hostResponse.setOsCategoryName(guestOSCategory.getName());\n            }\n            if (zone != null) {\n                hostResponse.setZoneName(zone.getName());\n            }\n\n            if (pod != null) {\n                hostResponse.setPodName(pod.getName());\n            }\n\n            if (cluster != null) {\n                hostResponse.setClusterName(cluster.getName());\n                hostResponse.setClusterType(cluster.getClusterType().toString());\n            }\n        }\n\n        DecimalFormat decimalFormat = new DecimalFormat(\"#.##\");\n        if (host.getType() == Host.Type.Routing) {\n            if (details.contains(HostDetails.all) || details.contains(HostDetails.capacity)) {\n                // set allocated capacities\n                Long mem = ApiDBUtils.getMemoryOrCpuCapacitybyHost(host.getId(), Capacity.CAPACITY_TYPE_MEMORY);\n                Long cpu = ApiDBUtils.getMemoryOrCpuCapacitybyHost(host.getId(), Capacity.CAPACITY_TYPE_CPU);\n\n                hostResponse.setMemoryAllocated(mem);\n                hostResponse.setMemoryTotal(host.getTotalMemory());\n                String hostTags = ApiDBUtils.getHostTags(host.getId());\n                hostResponse.setHostTags(hostTags);\n\n                String haTag = ApiDBUtils.getHaTag();\n                if (haTag != null && !haTag.isEmpty() && hostTags != null && !hostTags.isEmpty()) {\n                    if (haTag.equalsIgnoreCase(hostTags)) {\n                        hostResponse.setHaHost(true);\n                    } else {\n                        hostResponse.setHaHost(false);\n                    }\n                } else {\n                    hostResponse.setHaHost(false);\n                }\n\n                hostResponse.setHypervisorVersion(host.getHypervisorVersion());\n\n                String cpuAlloc = decimalFormat.format(((float) cpu / (float) (host.getCpus() * host.getSpeed())) * 100f) + \"%\";\n                hostResponse.setCpuAllocated(cpuAlloc);\n                String cpuWithOverprovisioning = new Float(host.getCpus() * host.getSpeed() * ApiDBUtils.getCpuOverprovisioningFactor()).toString();\n                hostResponse.setCpuWithOverprovisioning(cpuWithOverprovisioning);\n            }\n\n            if (details.contains(HostDetails.all) || details.contains(HostDetails.stats)) {\n                // set CPU/RAM/Network stats\n                String cpuUsed = null;\n                HostStats hostStats = ApiDBUtils.getHostStatistics(host.getId());\n                if (hostStats != null) {\n                    float cpuUtil = (float) hostStats.getCpuUtilization();\n                    cpuUsed = decimalFormat.format(cpuUtil) + \"%\";\n                    hostResponse.setCpuUsed(cpuUsed);\n                    hostResponse.setMemoryUsed((new Double(hostStats.getUsedMemory())).longValue());\n                    hostResponse.setNetworkKbsRead((new Double(hostStats.getNetworkReadKBs())).longValue());\n                    hostResponse.setNetworkKbsWrite((new Double(hostStats.getNetworkWriteKBs())).longValue());\n\n                }\n            }\n\n        } else if (host.getType() == Host.Type.SecondaryStorage) {\n            StorageStats secStorageStats = ApiDBUtils.getSecondaryStorageStatistics(host.getId());\n            if (secStorageStats != null) {\n                hostResponse.setDiskSizeTotal(secStorageStats.getCapacityBytes());\n                hostResponse.setDiskSizeAllocated(secStorageStats.getByteUsed());\n            }\n        }\n\n        hostResponse.setLocalStorageActive(ApiDBUtils.isLocalStorageActiveOnHost(host));\n\n        if (details.contains(HostDetails.all) || details.contains(HostDetails.events)) {\n            Set<com.cloud.host.Status.Event> possibleEvents = host.getStatus().getPossibleEvents();\n            if ((possibleEvents != null) && !possibleEvents.isEmpty()) {\n                String events = \"\";\n                Iterator<com.cloud.host.Status.Event> iter = possibleEvents.iterator();\n                while (iter.hasNext()) {\n                    com.cloud.host.Status.Event event = iter.next();\n                    events += event.toString();\n                    if (iter.hasNext()) {\n                        events += \"; \";\n                    }\n                }\n                hostResponse.setEvents(events);\n            }\n        }\n\n        hostResponse.setResourceState(host.getResourceState().toString());\n        hostResponse.setObjectName(\"host\");\n\n        return hostResponse;\n    }","commit_id":"e397f23f6b5d6ba34ad42eca95ae9d9ee43ac6a8","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public FirewallResponse createFirewallResponse(FirewallRule fwRule) {\n        FirewallResponse response = new FirewallResponse();\n\n        response.setId(fwRule.getUuid());\n        response.setProtocol(fwRule.getProtocol());\n        if (fwRule.getSourcePortStart() != null) {\n            response.setStartPort(Integer.toString(fwRule.getSourcePortStart()));\n        }\n\n        if (fwRule.getSourcePortEnd() != null) {\n            response.setEndPort(Integer.toString(fwRule.getSourcePortEnd()));\n        }\n\n        List<String> cidrs = ApiDBUtils.findFirewallSourceCidrs(fwRule.getId());\n        response.setCidrList(StringUtils.join(cidrs, \",\"));\n\n        IpAddress ip = ApiDBUtils.findIpAddressById(fwRule.getSourceIpAddressId());\n        response.setPublicIpAddressId(ip.getId());\n        response.setPublicIpAddress(ip.getAddress().addr());\n\n        FirewallRule.State state = fwRule.getState();\n        if (state != null) {\n            String stateToSet = state.toString();\n            if (state.equals(FirewallRule.State.Revoke)) {\n                stateToSet = \"Deleting\";\n            }\n            response.setState(stateToSet);\n        }\n\n        response.setIcmpCode(fwRule.getIcmpCode());\n        response.setIcmpType(fwRule.getIcmpType());\n\n        //set tag information\n        List<? extends ResourceTag> tags = ApiDBUtils.listByResourceTypeAndId(TaggedResourceType.FirewallRule, fwRule.getId());\n        List<ResourceTagResponse> tagResponses = new ArrayList<ResourceTagResponse>();\n        for (ResourceTag tag : tags) {\n            ResourceTagResponse tagResponse = createResourceTagResponse(tag, true);\n            tagResponses.add(tagResponse);\n        }\n        response.setTags(tagResponses);\n\n        response.setObjectName(\"firewallrule\");\n        return response;\n    }","id":82634,"modified_method":"@Override\n    public FirewallResponse createFirewallResponse(FirewallRule fwRule) {\n        FirewallResponse response = new FirewallResponse();\n\n        response.setId(fwRule.getUuid());\n        response.setProtocol(fwRule.getProtocol());\n        if (fwRule.getSourcePortStart() != null) {\n            response.setStartPort(Integer.toString(fwRule.getSourcePortStart()));\n        }\n\n        if (fwRule.getSourcePortEnd() != null) {\n            response.setEndPort(Integer.toString(fwRule.getSourcePortEnd()));\n        }\n\n        List<String> cidrs = ApiDBUtils.findFirewallSourceCidrs(fwRule.getId());\n        response.setCidrList(StringUtils.join(cidrs, \",\"));\n\n        IpAddress ip = ApiDBUtils.findIpAddressById(fwRule.getSourceIpAddressId());\n        response.setPublicIpAddressId(ip.getId());\n        response.setPublicIpAddress(ip.getAddress().addr());\n\n        FirewallRule.State state = fwRule.getState();\n        String stateToSet = state.toString();\n        if (state.equals(FirewallRule.State.Revoke)) {\n            stateToSet = \"Deleting\";\n        }\n\n        response.setIcmpCode(fwRule.getIcmpCode());\n        response.setIcmpType(fwRule.getIcmpType());\n\n        //set tag information\n        List<? extends ResourceTag> tags = ApiDBUtils.listByResourceTypeAndId(TaggedResourceType.FirewallRule, fwRule.getId());\n        List<ResourceTagResponse> tagResponses = new ArrayList<ResourceTagResponse>();\n        for (ResourceTag tag : tags) {\n            ResourceTagResponse tagResponse = createResourceTagResponse(tag, true);\n            tagResponses.add(tagResponse);\n        }\n        response.setTags(tagResponses);\n\n        response.setState(stateToSet);\n        response.setObjectName(\"firewallrule\");\n        return response;\n    }","commit_id":"e397f23f6b5d6ba34ad42eca95ae9d9ee43ac6a8","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public ResourceCountResponse createResourceCountResponse(ResourceCount resourceCount) {\n        ResourceCountResponse resourceCountResponse = new ResourceCountResponse();\n\n        if (resourceCount.getResourceOwnerType() == ResourceOwnerType.Account) {\n            Account accountTemp = ApiDBUtils.findAccountById(resourceCount.getOwnerId());\n            if (accountTemp != null) {\n                populateAccount(resourceCountResponse, accountTemp.getId());\n                populateDomain(resourceCountResponse, accountTemp.getDomainId());\n            }\n        } else if (resourceCount.getResourceOwnerType() == ResourceOwnerType.Domain) {\n            populateDomain(resourceCountResponse, resourceCount.getOwnerId());\n        }\n\n        if (resourceCount.getType() != null) {\n            resourceCountResponse.setResourceType(Integer.valueOf(resourceCount.getType().getOrdinal()).toString());\n        }\n        resourceCountResponse.setResourceCount(resourceCount.getCount());\n        resourceCountResponse.setObjectName(\"resourcecount\");\n        return resourceCountResponse;\n    }","id":82635,"modified_method":"@Override\n    public ResourceCountResponse createResourceCountResponse(ResourceCount resourceCount) {\n        ResourceCountResponse resourceCountResponse = new ResourceCountResponse();\n\n        if (resourceCount.getResourceOwnerType() == ResourceOwnerType.Account) {\n            Account accountTemp = ApiDBUtils.findAccountById(resourceCount.getOwnerId());\n            if (accountTemp != null) {\n                populateAccount(resourceCountResponse, accountTemp.getId());\n                populateDomain(resourceCountResponse, accountTemp.getDomainId());\n            }\n        } else if (resourceCount.getResourceOwnerType() == ResourceOwnerType.Domain) {\n            populateDomain(resourceCountResponse, resourceCount.getOwnerId());\n        }\n\n        resourceCountResponse.setResourceType(Integer.valueOf(resourceCount.getType().getOrdinal()).toString());\n        resourceCountResponse.setResourceCount(resourceCount.getCount());\n        resourceCountResponse.setObjectName(\"resourcecount\");\n        return resourceCountResponse;\n    }","commit_id":"e397f23f6b5d6ba34ad42eca95ae9d9ee43ac6a8","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public PodResponse createPodResponse(Pod pod, Boolean showCapacities) {\n        String[] ipRange = new String[2];\n        if (pod.getDescription() != null && pod.getDescription().length() > 0) {\n            ipRange = pod.getDescription().split(\"-\");\n        } else {\n            ipRange[0] = pod.getDescription();\n        }\n\n        PodResponse podResponse = new PodResponse();\n        podResponse.setId(pod.getUuid());\n        podResponse.setName(pod.getName());\n        DataCenter zone = ApiDBUtils.findZoneById(pod.getDataCenterId());\n        if (zone != null) {\n            podResponse.setZoneId(zone.getUuid());\n            podResponse.setZoneName(zone.getName());\n        }\n        podResponse.setNetmask(NetUtils.getCidrNetmask(pod.getCidrSize()));\n        podResponse.setStartIp(ipRange[0]);\n        podResponse.setEndIp(((ipRange.length > 1) && (ipRange[1] != null)) ? ipRange[1] : \"\");\n        podResponse.setGateway(pod.getGateway());\n        if (pod.getAllocationState() != null) {\n            podResponse.setAllocationState(pod.getAllocationState().toString());\n        }\n        if (showCapacities != null && showCapacities) {\n            List<SummedCapacity> capacities = ApiDBUtils.getCapacityByClusterPodZone(null, pod.getId(), null);\n            Set<CapacityResponse> capacityResponses = new HashSet<CapacityResponse>();\n            float cpuOverprovisioningFactor = ApiDBUtils.getCpuOverprovisioningFactor();\n\n            for (SummedCapacity capacity : capacities) {\n                CapacityResponse capacityResponse = new CapacityResponse();\n                capacityResponse.setCapacityType(capacity.getCapacityType());\n                capacityResponse.setCapacityUsed(capacity.getUsedCapacity());\n                if (capacity.getCapacityType() == Capacity.CAPACITY_TYPE_CPU) {\n                    capacityResponse.setCapacityTotal(new Long((long) (capacity.getTotalCapacity() * cpuOverprovisioningFactor)));\n                } else if (capacity.getCapacityType() == Capacity.CAPACITY_TYPE_STORAGE_ALLOCATED) {\n                    List<SummedCapacity> c = ApiDBUtils.findNonSharedStorageForClusterPodZone(null, pod.getId(), null);\n                    capacityResponse.setCapacityTotal(capacity.getTotalCapacity() - c.get(0).getTotalCapacity());\n                    capacityResponse.setCapacityUsed(capacity.getUsedCapacity() - c.get(0).getUsedCapacity());\n                } else {\n                    capacityResponse.setCapacityTotal(capacity.getTotalCapacity());\n                }\n                if (capacityResponse.getCapacityTotal() != 0) {\n                    capacityResponse.setPercentUsed(s_percentFormat.format((float) capacityResponse.getCapacityUsed() / (float) capacityResponse.getCapacityTotal() * 100f));\n                } else {\n                    capacityResponse.setPercentUsed(s_percentFormat.format(0L));\n                }\n                capacityResponses.add(capacityResponse);\n            }\n            // Do it for stats as well.\n            capacityResponses.addAll(getStatsCapacityresponse(null, null, pod.getId(), pod.getDataCenterId()));\n            podResponse.setCapacitites(new ArrayList<CapacityResponse>(capacityResponses));\n        }\n        podResponse.setObjectName(\"pod\");\n        return podResponse;\n    }","id":82636,"modified_method":"@Override\n    public PodResponse createPodResponse(Pod pod, Boolean showCapacities) {\n        String[] ipRange = new String[2];\n        if (pod.getDescription() != null && pod.getDescription().length() > 0) {\n            ipRange = pod.getDescription().split(\"-\");\n        } else {\n            ipRange[0] = pod.getDescription();\n        }\n\n        PodResponse podResponse = new PodResponse();\n        podResponse.setId(pod.getUuid());\n        podResponse.setName(pod.getName());\n        DataCenter zone = ApiDBUtils.findZoneById(pod.getDataCenterId());\n        if (zone != null) {\n            podResponse.setZoneId(zone.getUuid());\n            podResponse.setZoneName(zone.getName());\n        }\n        podResponse.setNetmask(NetUtils.getCidrNetmask(pod.getCidrSize()));\n        podResponse.setStartIp(ipRange[0]);\n        podResponse.setEndIp(((ipRange.length > 1) && (ipRange[1] != null)) ? ipRange[1] : \"\");\n        podResponse.setGateway(pod.getGateway());\n        podResponse.setAllocationState(pod.getAllocationState().toString());\n        if (showCapacities != null && showCapacities) {\n            List<SummedCapacity> capacities = ApiDBUtils.getCapacityByClusterPodZone(null, pod.getId(), null);\n            Set<CapacityResponse> capacityResponses = new HashSet<CapacityResponse>();\n            float cpuOverprovisioningFactor = ApiDBUtils.getCpuOverprovisioningFactor();\n\n            for (SummedCapacity capacity : capacities) {\n                CapacityResponse capacityResponse = new CapacityResponse();\n                capacityResponse.setCapacityType(capacity.getCapacityType());\n                capacityResponse.setCapacityUsed(capacity.getUsedCapacity());\n                if (capacity.getCapacityType() == Capacity.CAPACITY_TYPE_CPU) {\n                    capacityResponse.setCapacityTotal(new Long((long) (capacity.getTotalCapacity() * cpuOverprovisioningFactor)));\n                } else if (capacity.getCapacityType() == Capacity.CAPACITY_TYPE_STORAGE_ALLOCATED) {\n                    List<SummedCapacity> c = ApiDBUtils.findNonSharedStorageForClusterPodZone(null, pod.getId(), null);\n                    capacityResponse.setCapacityTotal(capacity.getTotalCapacity() - c.get(0).getTotalCapacity());\n                    capacityResponse.setCapacityUsed(capacity.getUsedCapacity() - c.get(0).getUsedCapacity());\n                } else {\n                    capacityResponse.setCapacityTotal(capacity.getTotalCapacity());\n                }\n                if (capacityResponse.getCapacityTotal() != 0) {\n                    capacityResponse.setPercentUsed(s_percentFormat.format((float) capacityResponse.getCapacityUsed() / (float) capacityResponse.getCapacityTotal() * 100f));\n                } else {\n                    capacityResponse.setPercentUsed(s_percentFormat.format(0L));\n                }\n                capacityResponses.add(capacityResponse);\n            }\n            // Do it for stats as well.\n            capacityResponses.addAll(getStatsCapacityresponse(null, null, pod.getId(), pod.getDataCenterId()));\n            podResponse.setCapacitites(new ArrayList<CapacityResponse>(capacityResponses));\n        }\n        podResponse.setObjectName(\"pod\");\n        return podResponse;\n    }","commit_id":"e397f23f6b5d6ba34ad42eca95ae9d9ee43ac6a8","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public IpForwardingRuleResponse createIpForwardingRuleResponse(StaticNatRule fwRule) {\n        IpForwardingRuleResponse response = new IpForwardingRuleResponse();\n        response.setId(fwRule.getUuid());\n        response.setProtocol(fwRule.getProtocol());\n\n        IpAddress ip = ApiDBUtils.findIpAddressById(fwRule.getSourceIpAddressId());\n        response.setPublicIpAddressId(ip.getId());\n        response.setPublicIpAddress(ip.getAddress().addr());\n\n        if (ip != null && fwRule.getDestIpAddress() != null) {\n            UserVm vm = ApiDBUtils.findUserVmById(ip.getAssociatedWithVmId());\n            if (vm != null) {// vm might be destroyed\n                response.setVirtualMachineId(vm.getUuid());\n                response.setVirtualMachineName(vm.getHostName());\n                if (vm.getDisplayName() != null) {\n                    response.setVirtualMachineDisplayName(vm.getDisplayName());\n                } else {\n                    response.setVirtualMachineDisplayName(vm.getHostName());\n                }\n            }\n        }\n        FirewallRule.State state = fwRule.getState();\n        if (state != null) {\n            String stateToSet = state.toString();\n            if (state.equals(FirewallRule.State.Revoke)) {\n                stateToSet = \"Deleting\";\n            }\n            response.setState(stateToSet);\n        }\n\n        response.setStartPort(fwRule.getSourcePortStart());\n        response.setEndPort(fwRule.getSourcePortEnd());\n        response.setProtocol(fwRule.getProtocol());\n        response.setObjectName(\"ipforwardingrule\");\n        return response;\n    }","id":82637,"modified_method":"@Override\n    public IpForwardingRuleResponse createIpForwardingRuleResponse(StaticNatRule fwRule) {\n        IpForwardingRuleResponse response = new IpForwardingRuleResponse();\n        response.setId(fwRule.getUuid());\n        response.setProtocol(fwRule.getProtocol());\n\n        IpAddress ip = ApiDBUtils.findIpAddressById(fwRule.getSourceIpAddressId());\n        response.setPublicIpAddressId(ip.getId());\n        response.setPublicIpAddress(ip.getAddress().addr());\n\n        if (ip != null && fwRule.getDestIpAddress() != null) {\n            UserVm vm = ApiDBUtils.findUserVmById(ip.getAssociatedWithVmId());\n            if (vm != null) {// vm might be destroyed\n                response.setVirtualMachineId(vm.getUuid());\n                response.setVirtualMachineName(vm.getHostName());\n                if (vm.getDisplayName() != null) {\n                    response.setVirtualMachineDisplayName(vm.getDisplayName());\n                } else {\n                    response.setVirtualMachineDisplayName(vm.getHostName());\n                }\n            }\n        }\n        FirewallRule.State state = fwRule.getState();\n        String stateToSet = state.toString();\n        if (state.equals(FirewallRule.State.Revoke)) {\n            stateToSet = \"Deleting\";\n        }\n\n        response.setStartPort(fwRule.getSourcePortStart());\n        response.setEndPort(fwRule.getSourcePortEnd());\n        response.setProtocol(fwRule.getProtocol());\n        response.setState(stateToSet);\n        response.setObjectName(\"ipforwardingrule\");\n        return response;\n    }","commit_id":"e397f23f6b5d6ba34ad42eca95ae9d9ee43ac6a8","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public StaticRouteResponse createStaticRouteResponse(StaticRoute result) {\n        StaticRouteResponse response = new StaticRouteResponse();\n        response.setId(result.getUuid());\n        if (result.getVpcId() != null) {\n            Vpc vpc = ApiDBUtils.findVpcById(result.getVpcId());\n            if (vpc != null) {\n                response.setVpcId(vpc.getUuid());\n            }\n        }\n        response.setCidr(result.getCidr());\n\n        StaticRoute.State state = result.getState();\n        if (state != null) {\n            String stateToSet = state.toString();\n            if (state.equals(FirewallRule.State.Revoke)) {\n                stateToSet = \"Deleting\";\n            }\n            response.setState(stateToSet);\n        }\n        populateAccount(response, result.getAccountId());\n        populateDomain(response, result.getDomainId());\n\n        //set tag information\n        List<? extends ResourceTag> tags = ApiDBUtils.listByResourceTypeAndId(TaggedResourceType.StaticRoute, result.getId());\n        List<ResourceTagResponse> tagResponses = new ArrayList<ResourceTagResponse>();\n        for (ResourceTag tag : tags) {\n            ResourceTagResponse tagResponse = createResourceTagResponse(tag, true);\n            tagResponses.add(tagResponse);\n        }\n        response.setTags(tagResponses);\n        response.setObjectName(\"staticroute\");\n\n        return response;\n    }","id":82638,"modified_method":"@Override\n    public StaticRouteResponse createStaticRouteResponse(StaticRoute result) {\n        StaticRouteResponse response = new StaticRouteResponse();\n        response.setId(result.getUuid());\n        if (result.getVpcId() != null) {\n            Vpc vpc = ApiDBUtils.findVpcById(result.getVpcId());\n            if (vpc != null) {\n                response.setVpcId(vpc.getUuid());\n            }\n        }\n        response.setCidr(result.getCidr());\n\n        StaticRoute.State state = result.getState();\n        String stateToSet = state.toString();\n        if (state.equals(FirewallRule.State.Revoke)) {\n            stateToSet = \"Deleting\";\n        }\n        response.setState(stateToSet);\n        populateAccount(response, result.getAccountId());\n        populateDomain(response, result.getDomainId());\n\n        //set tag information\n        List<? extends ResourceTag> tags = ApiDBUtils.listByResourceTypeAndId(TaggedResourceType.StaticRoute, result.getId());\n        List<ResourceTagResponse> tagResponses = new ArrayList<ResourceTagResponse>();\n        for (ResourceTag tag : tags) {\n            ResourceTagResponse tagResponse = createResourceTagResponse(tag, true);\n            tagResponses.add(tagResponse);\n        }\n        response.setTags(tagResponses);\n        response.setObjectName(\"staticroute\");\n\n        return response;\n    }","commit_id":"e397f23f6b5d6ba34ad42eca95ae9d9ee43ac6a8","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public VolumeResponse createVolumeResponse(Volume volume) {\n        VolumeResponse volResponse = new VolumeResponse();\n        volResponse.setId(volume.getUuid());\n\n        if (volume.getName() != null) {\n            volResponse.setName(volume.getName());\n        } else {\n            volResponse.setName(\"\");\n        }\n\n        DataCenter zone = ApiDBUtils.findZoneById(volume.getDataCenterId());\n        if (zone != null) {\n            volResponse.setZoneId(zone.getUuid());\n            volResponse.setZoneName(zone.getName());\n        }\n\n        if (volume.getVolumeType() != null) {\n            volResponse.setVolumeType(volume.getVolumeType().toString());\n        }\n        volResponse.setDeviceId(volume.getDeviceId());\n\n        Long instanceId = volume.getInstanceId();\n        if (instanceId != null && volume.getState() != Volume.State.Destroy) {\n            VMInstanceVO vm = ApiDBUtils.findVMInstanceById(instanceId);\n            if (vm != null) {\n                volResponse.setVirtualMachineId(vm.getUuid());\n                volResponse.setVirtualMachineName(vm.getHostName());\n                if (vm.getState() != null) {\n                    volResponse.setVirtualMachineState(vm.getState().toString());\n                }\n\n                UserVm userVm = ApiDBUtils.findUserVmById(vm.getId());\n                if (userVm != null) {\n                    if (userVm.getDisplayName() != null) {\n                        volResponse.setVirtualMachineDisplayName(userVm.getDisplayName());\n                    } else {\n                        volResponse.setVirtualMachineDisplayName(userVm.getHostName());\n                    }\n                } else {\n                    s_logger.error(\"User Vm with Id: \" + instanceId + \" does not exist for volume \" + volume.getId());\n                }\n            } else {\n                s_logger.error(\"Vm with Id: \" + instanceId + \" does not exist for volume \" + volume.getId());\n            }\n        }\n\n        // Show the virtual size of the volume\n        volResponse.setSize(volume.getSize());\n\n        volResponse.setCreated(volume.getCreated());\n        if (volume.getState() != null) {\n            volResponse.setState(volume.getState().toString());\n        }\n        if(volume.getState() == Volume.State.UploadOp){\n            com.cloud.storage.VolumeHostVO volumeHostRef = ApiDBUtils.findVolumeHostRef(volume.getId(), volume.getDataCenterId());\n            volResponse.setSize(volumeHostRef.getSize());\n            volResponse.setCreated(volumeHostRef.getCreated());\n            Account caller = UserContext.current().getCaller();\n            if (caller.getType() == Account.ACCOUNT_TYPE_ADMIN || caller.getType() == Account.ACCOUNT_TYPE_RESOURCE_DOMAIN_ADMIN)\n                volResponse.setHypervisor(ApiDBUtils.getHypervisorTypeFromFormat(volumeHostRef.getFormat()).toString());\n            if (volumeHostRef.getDownloadState() != Status.DOWNLOADED) {\n                String volumeStatus = \"Processing\";\n                if (volumeHostRef.getDownloadState() == VMTemplateHostVO.Status.DOWNLOAD_IN_PROGRESS) {\n                    if (volumeHostRef.getDownloadPercent() == 100) {\n                        volumeStatus = \"Checking Volume\";\n                    } else {\n                        volumeStatus = volumeHostRef.getDownloadPercent() + \"% Uploaded\";\n                    }\n                    volResponse.setState(\"Uploading\");\n                } else {\n                    volumeStatus = volumeHostRef.getErrorString();\n                    if(volumeHostRef.getDownloadState() == VMTemplateHostVO.Status.NOT_DOWNLOADED){\n                        volResponse.setState(\"UploadNotStarted\");\n                    }else {\n                        volResponse.setState(\"UploadError\");\n                    }\n                }\n                volResponse.setStatus(volumeStatus);\n            } else if (volumeHostRef.getDownloadState() == VMTemplateHostVO.Status.DOWNLOADED) {\n                volResponse.setStatus(\"Upload Complete\");\n                volResponse.setState(\"Uploaded\");\n            } else {\n                volResponse.setStatus(\"Successfully Installed\");\n            }\n        }\n\n        populateOwner(volResponse, volume);\n\n        DiskOfferingVO diskOffering = ApiDBUtils.findDiskOfferingById(volume.getDiskOfferingId());\n        if (diskOffering != null) {\n            if (volume.getVolumeType().equals(Volume.Type.ROOT)) {\n                volResponse.setServiceOfferingId(diskOffering.getUuid());\n            } else {\n                volResponse.setDiskOfferingId(diskOffering.getUuid());\n            }\n\n            if (volume.getVolumeType().equals(Volume.Type.ROOT)) {\n                volResponse.setServiceOfferingName(diskOffering.getName());\n                volResponse.setServiceOfferingDisplayText(diskOffering.getDisplayText());\n            } else {\n                volResponse.setDiskOfferingName(diskOffering.getName());\n                volResponse.setDiskOfferingDisplayText(diskOffering.getDisplayText());\n            }\n            volResponse.setStorageType(diskOffering.getUseLocalStorage() ? ServiceOffering.StorageType.local.toString()\n                    : ServiceOffering.StorageType.shared.toString());\n        }\n        Long poolId = volume.getPoolId();\n        String poolName = (poolId == null) ? \"none\" : ApiDBUtils.findStoragePoolById(poolId).getName();\n        volResponse.setStoragePoolName(poolName);\n        // volResponse.setSourceId(volume.getSourceId());\n        // if (volume.getSourceType() != null) {\n        // volResponse.setSourceType(volume.getSourceType().toString());\n        // }\n\n        // return hypervisor for ROOT and Resource domain only\n        Account caller = UserContext.current().getCaller();\n        if ((caller.getType() == Account.ACCOUNT_TYPE_ADMIN || caller.getType() == Account.ACCOUNT_TYPE_RESOURCE_DOMAIN_ADMIN) && volume.getState() != Volume.State.UploadOp) {\n            HypervisorType ht = ApiDBUtils.getVolumeHyperType(volume.getId());\n            if (ht != null) {\n                volResponse.setHypervisor(ht.toString());\n            }\n        }\n\n        volResponse.setAttached(volume.getAttached());\n        volResponse.setDestroyed(volume.getState() == Volume.State.Destroy);\n            boolean isExtractable = true;\n            if (volume.getVolumeType() != Volume.Type.DATADISK) { // Datadisk dont have any template dependence.\n                VMTemplateVO template = ApiDBUtils.findTemplateById(volume.getTemplateId());\n            if (template != null) { // For ISO based volumes template = null and we allow extraction of all ISO based volumes\n                    isExtractable = template.isExtractable() && template.getTemplateType() != Storage.TemplateType.SYSTEM;\n                }\n            }\n\n            //set tag information\n            List<? extends ResourceTag> tags = ApiDBUtils.listByResourceTypeAndId(TaggedResourceType.Volume, volume.getId());\n            List<ResourceTagResponse> tagResponses = new ArrayList<ResourceTagResponse>();\n            for (ResourceTag tag : tags) {\n                ResourceTagResponse tagResponse = createResourceTagResponse(tag, true);\n                tagResponses.add(tagResponse);\n            }\n            volResponse.setTags(tagResponses);\n\n        volResponse.setExtractable(isExtractable);\n        volResponse.setObjectName(\"volume\");\n        return volResponse;\n    }","id":82639,"modified_method":"@Override\n    public VolumeResponse createVolumeResponse(Volume volume) {\n        VolumeResponse volResponse = new VolumeResponse();\n        volResponse.setId(volume.getUuid());\n\n        if (volume.getName() != null) {\n            volResponse.setName(volume.getName());\n        } else {\n            volResponse.setName(\"\");\n        }\n\n        DataCenter zone = ApiDBUtils.findZoneById(volume.getDataCenterId());\n        if (zone != null) {\n            volResponse.setZoneId(zone.getUuid());\n            volResponse.setZoneName(zone.getName());\n        }\n\n        volResponse.setVolumeType(volume.getVolumeType().toString());\n        volResponse.setDeviceId(volume.getDeviceId());\n\n        Long instanceId = volume.getInstanceId();\n        if (instanceId != null && volume.getState() != Volume.State.Destroy) {\n            VMInstanceVO vm = ApiDBUtils.findVMInstanceById(instanceId);\n            if (vm != null) {\n                volResponse.setVirtualMachineId(vm.getUuid());\n                volResponse.setVirtualMachineName(vm.getHostName());\n                volResponse.setVirtualMachineState(vm.getState().toString());\n                UserVm userVm = ApiDBUtils.findUserVmById(vm.getId());\n                if (userVm != null) {\n                    if (userVm.getDisplayName() != null) {\n                        volResponse.setVirtualMachineDisplayName(userVm.getDisplayName());\n                    }\n                } else {\n                        s_logger.error(\"User Vm with Id: \" + instanceId + \" does not exist for volume \" + volume.getId());\n                }\n            } else {\n                    s_logger.error(\"Vm with Id: \" + instanceId + \" does not exist for volume \" + volume.getId());\n            }\n        }\n\n        // Show the virtual size of the volume\n        volResponse.setSize(volume.getSize());\n\n        volResponse.setCreated(volume.getCreated());\n        volResponse.setState(volume.getState().toString());\n        if(volume.getState() == Volume.State.UploadOp){\n            com.cloud.storage.VolumeHostVO volumeHostRef = ApiDBUtils.findVolumeHostRef(volume.getId(), volume.getDataCenterId());\n            volResponse.setSize(volumeHostRef.getSize());\n            volResponse.setCreated(volumeHostRef.getCreated());\n            Account caller = UserContext.current().getCaller();\n            if (caller.getType() == Account.ACCOUNT_TYPE_ADMIN || caller.getType() == Account.ACCOUNT_TYPE_RESOURCE_DOMAIN_ADMIN)\n                volResponse.setHypervisor(ApiDBUtils.getHypervisorTypeFromFormat(volumeHostRef.getFormat()).toString());\n            if (volumeHostRef.getDownloadState() != Status.DOWNLOADED) {\n                String volumeStatus = \"Processing\";\n                if (volumeHostRef.getDownloadState() == VMTemplateHostVO.Status.DOWNLOAD_IN_PROGRESS) {\n                    if (volumeHostRef.getDownloadPercent() == 100) {\n                        volumeStatus = \"Checking Volume\";\n                    } else {\n                        volumeStatus = volumeHostRef.getDownloadPercent() + \"% Uploaded\";\n                    }\n                    volResponse.setState(\"Uploading\");\n                } else {\n                    volumeStatus = volumeHostRef.getErrorString();\n                    if(volumeHostRef.getDownloadState() == VMTemplateHostVO.Status.NOT_DOWNLOADED){\n                        volResponse.setState(\"UploadNotStarted\");\n                    }else {\n                        volResponse.setState(\"UploadError\");\n                    }\n                }\n                volResponse.setStatus(volumeStatus);\n            } else if (volumeHostRef.getDownloadState() == VMTemplateHostVO.Status.DOWNLOADED) {\n                volResponse.setStatus(\"Upload Complete\");\n                volResponse.setState(\"Uploaded\");\n            } else {\n                volResponse.setStatus(\"Successfully Installed\");\n            }\n        }\n\n        populateOwner(volResponse, volume);\n\n        DiskOfferingVO diskOffering = ApiDBUtils.findDiskOfferingById(volume.getDiskOfferingId());\n        if (diskOffering != null) {\n            if (volume.getVolumeType().equals(Volume.Type.ROOT)) {\n                volResponse.setServiceOfferingId(diskOffering.getUuid());\n            } else {\n                volResponse.setDiskOfferingId(diskOffering.getUuid());\n            }\n\n            if (volume.getVolumeType().equals(Volume.Type.ROOT)) {\n                volResponse.setServiceOfferingName(diskOffering.getName());\n                volResponse.setServiceOfferingDisplayText(diskOffering.getDisplayText());\n            } else {\n                volResponse.setDiskOfferingName(diskOffering.getName());\n                volResponse.setDiskOfferingDisplayText(diskOffering.getDisplayText());\n            }\n            volResponse.setStorageType(diskOffering.getUseLocalStorage() ? ServiceOffering.StorageType.local.toString()\n                    : ServiceOffering.StorageType.shared.toString());\n        }\n        Long poolId = volume.getPoolId();\n        String poolName = (poolId == null) ? \"none\" : ApiDBUtils.findStoragePoolById(poolId).getName();\n        volResponse.setStoragePoolName(poolName);\n        // volResponse.setSourceId(volume.getSourceId());\n        // if (volume.getSourceType() != null) {\n        // volResponse.setSourceType(volume.getSourceType().toString());\n        // }\n\n        // return hypervisor for ROOT and Resource domain only\n        Account caller = UserContext.current().getCaller();\n        if ((caller.getType() == Account.ACCOUNT_TYPE_ADMIN || caller.getType() == Account.ACCOUNT_TYPE_RESOURCE_DOMAIN_ADMIN) && volume.getState() != Volume.State.UploadOp) {\n            volResponse.setHypervisor(ApiDBUtils.getVolumeHyperType(volume.getId()).toString());\n        }\n\n        volResponse.setAttached(volume.getAttached());\n        volResponse.setDestroyed(volume.getState() == Volume.State.Destroy);\n            boolean isExtractable = true;\n            if (volume.getVolumeType() != Volume.Type.DATADISK) { // Datadisk dont have any template dependence.\n                VMTemplateVO template = ApiDBUtils.findTemplateById(volume.getTemplateId());\n            if (template != null) { // For ISO based volumes template = null and we allow extraction of all ISO based volumes\n                    isExtractable = template.isExtractable() && template.getTemplateType() != Storage.TemplateType.SYSTEM;\n                }\n            }\n\n            //set tag information\n            List<? extends ResourceTag> tags = ApiDBUtils.listByResourceTypeAndId(TaggedResourceType.Volume, volume.getId());\n            List<ResourceTagResponse> tagResponses = new ArrayList<ResourceTagResponse>();\n            for (ResourceTag tag : tags) {\n                ResourceTagResponse tagResponse = createResourceTagResponse(tag, true);\n                tagResponses.add(tagResponse);\n            }\n            volResponse.setTags(tagResponses);\n\n        volResponse.setExtractable(isExtractable);\n        volResponse.setObjectName(\"volume\");\n        return volResponse;\n    }","commit_id":"e397f23f6b5d6ba34ad42eca95ae9d9ee43ac6a8","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public PrivateGatewayResponse createPrivateGatewayResponse(PrivateGateway result) {\n        PrivateGatewayResponse response = new PrivateGatewayResponse();\n        response.setId(result.getUuid());\n        response.setVlan(result.getVlanTag());\n        response.setGateway(result.getGateway());\n        response.setNetmask(result.getNetmask());\n        if (result.getVpcId() != null) {\n            Vpc vpc = ApiDBUtils.findVpcById(result.getVpcId());\n            response.setVpcId(vpc.getUuid());\n        }\n\n        DataCenter zone = ApiDBUtils.findZoneById(result.getZoneId());\n        if (zone != null) {\n            response.setZoneId(zone.getUuid());\n            response.setZoneName(zone.getName());\n        }\n        response.setAddress(result.getIp4Address());\n        PhysicalNetwork pnet = ApiDBUtils.findPhysicalNetworkById(result.getPhysicalNetworkId());\n        if (pnet != null) {\n            response.setPhysicalNetworkId(pnet.getUuid());\n        }\n\n        populateAccount(response, result.getAccountId());\n        populateDomain(response, result.getDomainId());\n        if (result.getState() != null) {\n            response.setState(result.getState().toString());\n        }\n\n        response.setObjectName(\"privategateway\");\n\n\n        return response;\n    }","id":82640,"modified_method":"@Override\n    public PrivateGatewayResponse createPrivateGatewayResponse(PrivateGateway result) {\n        PrivateGatewayResponse response = new PrivateGatewayResponse();\n        response.setId(result.getUuid());\n        response.setVlan(result.getVlanTag());\n        response.setGateway(result.getGateway());\n        response.setNetmask(result.getNetmask());\n        if (result.getVpcId() != null) {\n            Vpc vpc = ApiDBUtils.findVpcById(result.getVpcId());\n            response.setVpcId(vpc.getUuid());\n        }\n\n        DataCenter zone = ApiDBUtils.findZoneById(result.getZoneId());\n        if (zone != null) {\n            response.setZoneId(zone.getUuid());\n            response.setZoneName(zone.getName());\n        }\n        response.setAddress(result.getIp4Address());\n        PhysicalNetwork pnet = ApiDBUtils.findPhysicalNetworkById(result.getPhysicalNetworkId());\n        if (pnet != null) {\n            response.setPhysicalNetworkId(pnet.getUuid());\n        }\n\n        populateAccount(response, result.getAccountId());\n        populateDomain(response, result.getDomainId());\n        response.setState(result.getState().toString());\n\n        response.setObjectName(\"privategateway\");\n\n\n        return response;\n    }","commit_id":"e397f23f6b5d6ba34ad42eca95ae9d9ee43ac6a8","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public AsyncJobResponse createAsyncJobResponse(AsyncJob job) {\n        AsyncJobResponse jobResponse = new AsyncJobResponse();\n        Account account = ApiDBUtils.findAccountById(job.getAccountId());\n        if (account != null) {\n            jobResponse.setAccountId(account.getUuid());\n        }\n        User user = ApiDBUtils.findUserById(job.getUserId());\n        if (user != null) {\n            jobResponse.setUserId(user.getUuid());\n        }\n        jobResponse.setCmd(job.getCmd());\n        jobResponse.setCreated(job.getCreated());\n        jobResponse.setJobId(job.getId());\n        jobResponse.setJobStatus(job.getStatus());\n        jobResponse.setJobProcStatus(job.getProcessStatus());\n\n        if (job.getInstanceType() != null && job.getInstanceId() != null) {\n            if (job.getInstanceType() != null) {\n                jobResponse.setJobInstanceType(job.getInstanceType().toString());\n            }\n            String jobInstanceId = null;\n            if (job.getInstanceType() == AsyncJob.Type.Volume) {\n                VolumeVO volume = ApiDBUtils.findVolumeById(job.getInstanceId());\n                if (volume != null) {\n                    jobInstanceId = volume.getUuid();\n                }\n            } else if (job.getInstanceType() == AsyncJob.Type.Template || job.getInstanceType() == AsyncJob.Type.Iso) {\n                VMTemplateVO template = ApiDBUtils.findTemplateById(job.getInstanceId());\n                if (template != null) {\n                    jobInstanceId = template.getUuid();\n                }\n            } else if (job.getInstanceType() == AsyncJob.Type.VirtualMachine || job.getInstanceType() == AsyncJob.Type.ConsoleProxy\n                    || job.getInstanceType() == AsyncJob.Type.SystemVm || job.getInstanceType() == AsyncJob.Type.DomainRouter) {\n                VMInstanceVO vm = ApiDBUtils.findVMInstanceById(job.getInstanceId());\n                if (vm != null) {\n                    jobInstanceId = vm.getUuid();\n                }\n            } else if (job.getInstanceType() == AsyncJob.Type.Snapshot) {\n                Snapshot snapshot = ApiDBUtils.findSnapshotById(job.getInstanceId());\n                if (snapshot != null) {\n                    jobInstanceId = snapshot.getUuid();\n                }\n            } else if (job.getInstanceType() == AsyncJob.Type.Host) {\n                Host host = ApiDBUtils.findHostById(job.getInstanceId());\n                if (host != null) {\n                    jobInstanceId = host.getUuid();\n                }\n            } else if (job.getInstanceType() == AsyncJob.Type.StoragePool) {\n                StoragePoolVO spool = ApiDBUtils.findStoragePoolById(job.getInstanceId());\n                if (spool != null) {\n                    jobInstanceId = spool.getUuid();\n                }\n            } else if (job.getInstanceType() == AsyncJob.Type.IpAddress) {\n                IPAddressVO ip = ApiDBUtils.findIpAddressById(job.getInstanceId());\n                if (ip != null) {\n                    jobInstanceId = ip.getUuid();\n                }\n            } else if (job.getInstanceType() == AsyncJob.Type.SecurityGroup) {\n                SecurityGroup sg = ApiDBUtils.findSecurityGroupById(job.getInstanceId());\n                if (sg != null) {\n                    jobInstanceId = sg.getUuid();\n                }\n            } else if (job.getInstanceType() == AsyncJob.Type.PhysicalNetwork) {\n                PhysicalNetworkVO pnet = ApiDBUtils.findPhysicalNetworkById(job.getInstanceId());\n                if (pnet != null) {\n                    jobInstanceId = pnet.getUuid();\n                }\n            } else if (job.getInstanceType() == AsyncJob.Type.TrafficType) {\n                PhysicalNetworkTrafficTypeVO trafficType = ApiDBUtils.findPhysicalNetworkTrafficTypeById(job.getInstanceId());\n                if (trafficType != null) {\n                    jobInstanceId = trafficType.getUuid();\n                }\n            } else if (job.getInstanceType() == AsyncJob.Type.PhysicalNetworkServiceProvider) {\n                PhysicalNetworkServiceProvider sp = ApiDBUtils.findPhysicalNetworkServiceProviderById(job.getInstanceId());\n                if (sp != null) {\n                    jobInstanceId = sp.getUuid();\n                }\n            } else if (job.getInstanceType() == AsyncJob.Type.FirewallRule) {\n                FirewallRuleVO fw = ApiDBUtils.findFirewallRuleById(job.getInstanceId());\n                if (fw != null) {\n                    jobInstanceId = fw.getUuid();\n                }\n            } else if (job.getInstanceType() == AsyncJob.Type.Account) {\n                Account acct = ApiDBUtils.findAccountById(job.getInstanceId());\n                if (acct != null) {\n                    jobInstanceId = acct.getUuid();\n                }\n            } else if (job.getInstanceType() == AsyncJob.Type.User) {\n                User usr = ApiDBUtils.findUserById(job.getInstanceId());\n                if (usr != null) {\n                    jobInstanceId = usr.getUuid();\n                }\n            } else if (job.getInstanceType() == AsyncJob.Type.StaticRoute) {\n                StaticRouteVO route = ApiDBUtils.findStaticRouteById(job.getInstanceId());\n                if (route != null) {\n                    jobInstanceId = route.getUuid();\n                }\n            } else if (job.getInstanceType() == AsyncJob.Type.PrivateGateway) {\n                VpcGatewayVO gateway = ApiDBUtils.findVpcGatewayById(job.getInstanceId());\n                if (gateway != null) {\n                    jobInstanceId = gateway.getUuid();\n                }\n            } else if (job.getInstanceType() == AsyncJob.Type.Counter) {\n                CounterVO counter = ApiDBUtils.getCounter(job.getInstanceId());\n                if (counter != null) {\n                    jobInstanceId = counter.getUuid();\n                }\n            } else if (job.getInstanceType() == AsyncJob.Type.Condition) {\n                ConditionVO condition = ApiDBUtils.findConditionById(job.getInstanceId());\n                if (condition != null) {\n                    jobInstanceId = condition.getUuid();\n                }\n            } else if (job.getInstanceType() == AsyncJob.Type.AutoScalePolicy) {\n                AutoScalePolicyVO policy = ApiDBUtils.findAutoScalePolicyById(job.getInstanceId());\n                if (policy != null) {\n                    jobInstanceId = policy.getUuid();\n                }\n            } else if (job.getInstanceType() == AsyncJob.Type.AutoScaleVmProfile) {\n                AutoScaleVmProfileVO profile = ApiDBUtils.findAutoScaleVmProfileById(job.getInstanceId());\n                if (profile != null) {\n                    jobInstanceId = profile.getUuid();\n                }\n            } else if (job.getInstanceType() == AsyncJob.Type.AutoScaleVmGroup) {\n                AutoScaleVmGroupVO group = ApiDBUtils.findAutoScaleVmGroupById(job.getInstanceId());\n                if (group != null) {\n                    jobInstanceId = group.getUuid();\n                }\n            } else if (job.getInstanceType() != AsyncJob.Type.None) {\n                // TODO : when we hit here, we need to add instanceType -> UUID\n                // entity table mapping\n                assert (false);\n            }\n            if (jobInstanceId != null) {\n                jobResponse.setJobInstanceId(jobInstanceId);\n            }\n        }\n        jobResponse.setJobResultCode(job.getResultCode());\n\n        boolean savedValue = SerializationContext.current().getUuidTranslation();\n        SerializationContext.current().setUuidTranslation(false);\n\n        Object resultObject = ApiSerializerHelper.fromSerializedString(job.getResult());\n        jobResponse.setJobResult((ResponseObject) resultObject);\n        SerializationContext.current().setUuidTranslation(savedValue);\n\n        if (resultObject != null) {\n            Class<?> clz = resultObject.getClass();\n            if (clz.isPrimitive() || clz.getSuperclass() == Number.class || clz == String.class || clz == Date.class) {\n                jobResponse.setJobResultType(\"text\");\n            } else {\n                jobResponse.setJobResultType(\"object\");\n            }\n        }\n\n        jobResponse.setObjectName(\"asyncjobs\");\n        return jobResponse;\n    }","id":82641,"modified_method":"@Override\n    public AsyncJobResponse createAsyncJobResponse(AsyncJob job) {\n        AsyncJobResponse jobResponse = new AsyncJobResponse();\n        Account account = ApiDBUtils.findAccountById(job.getAccountId());\n        if (account != null) {\n            jobResponse.setAccountId(account.getUuid());\n        }\n        User user = ApiDBUtils.findUserById(job.getUserId());\n        if (user != null) {\n            jobResponse.setUserId(user.getUuid());\n        }\n        jobResponse.setCmd(job.getCmd());\n        jobResponse.setCreated(job.getCreated());\n        jobResponse.setJobId(job.getId());\n        jobResponse.setJobStatus(job.getStatus());\n        jobResponse.setJobProcStatus(job.getProcessStatus());\n\n        if (job.getInstanceType() != null && job.getInstanceId() != null) {\n            jobResponse.setJobInstanceType(job.getInstanceType().toString());\n            String jobInstanceId = null;\n            if (job.getInstanceType() == AsyncJob.Type.Volume) {\n                VolumeVO volume = ApiDBUtils.findVolumeById(job.getInstanceId());\n                if (volume != null) {\n                    jobInstanceId = volume.getUuid();\n                }\n            } else if (job.getInstanceType() == AsyncJob.Type.Template || job.getInstanceType() == AsyncJob.Type.Iso) {\n                VMTemplateVO template = ApiDBUtils.findTemplateById(job.getInstanceId());\n                if (template != null) {\n                    jobInstanceId = template.getUuid();\n                }\n            } else if (job.getInstanceType() == AsyncJob.Type.VirtualMachine || job.getInstanceType() == AsyncJob.Type.ConsoleProxy\n                    || job.getInstanceType() == AsyncJob.Type.SystemVm || job.getInstanceType() == AsyncJob.Type.DomainRouter) {\n                VMInstanceVO vm = ApiDBUtils.findVMInstanceById(job.getInstanceId());\n                if (vm != null) {\n                    jobInstanceId = vm.getUuid();\n                }\n            } else if (job.getInstanceType() == AsyncJob.Type.Snapshot) {\n                Snapshot snapshot = ApiDBUtils.findSnapshotById(job.getInstanceId());\n                if (snapshot != null) {\n                    jobInstanceId = snapshot.getUuid();\n                }\n            } else if (job.getInstanceType() == AsyncJob.Type.Host) {\n                Host host = ApiDBUtils.findHostById(job.getInstanceId());\n                if (host != null) {\n                    jobInstanceId = host.getUuid();\n                }\n            } else if (job.getInstanceType() == AsyncJob.Type.StoragePool) {\n                StoragePoolVO spool = ApiDBUtils.findStoragePoolById(job.getInstanceId());\n                if (spool != null) {\n                    jobInstanceId = spool.getUuid();\n                }\n            } else if (job.getInstanceType() == AsyncJob.Type.IpAddress) {\n                IPAddressVO ip = ApiDBUtils.findIpAddressById(job.getInstanceId());\n                if (ip != null) {\n                    jobInstanceId = ip.getUuid();\n                }\n            } else if (job.getInstanceType() == AsyncJob.Type.SecurityGroup) {\n                SecurityGroup sg = ApiDBUtils.findSecurityGroupById(job.getInstanceId());\n                if (sg != null) {\n                    jobInstanceId = sg.getUuid();\n                }\n            } else if (job.getInstanceType() == AsyncJob.Type.PhysicalNetwork) {\n                PhysicalNetworkVO pnet = ApiDBUtils.findPhysicalNetworkById(job.getInstanceId());\n                if (pnet != null) {\n                    jobInstanceId = pnet.getUuid();\n                }\n            } else if (job.getInstanceType() == AsyncJob.Type.TrafficType) {\n                PhysicalNetworkTrafficTypeVO trafficType = ApiDBUtils.findPhysicalNetworkTrafficTypeById(job.getInstanceId());\n                if (trafficType != null) {\n                    jobInstanceId = trafficType.getUuid();\n                }\n            } else if (job.getInstanceType() == AsyncJob.Type.PhysicalNetworkServiceProvider) {\n                PhysicalNetworkServiceProvider sp = ApiDBUtils.findPhysicalNetworkServiceProviderById(job.getInstanceId());\n                if (sp != null) {\n                    jobInstanceId = sp.getUuid();\n                }\n            } else if (job.getInstanceType() == AsyncJob.Type.FirewallRule) {\n                FirewallRuleVO fw = ApiDBUtils.findFirewallRuleById(job.getInstanceId());\n                if (fw != null) {\n                    jobInstanceId = fw.getUuid();\n                }\n            } else if (job.getInstanceType() == AsyncJob.Type.Account) {\n                Account acct = ApiDBUtils.findAccountById(job.getInstanceId());\n                if (acct != null) {\n                    jobInstanceId = acct.getUuid();\n                }\n            } else if (job.getInstanceType() == AsyncJob.Type.User) {\n                User usr = ApiDBUtils.findUserById(job.getInstanceId());\n                if (usr != null) {\n                    jobInstanceId = usr.getUuid();\n                }\n            } else if (job.getInstanceType() == AsyncJob.Type.StaticRoute) {\n                StaticRouteVO route = ApiDBUtils.findStaticRouteById(job.getInstanceId());\n                if (route != null) {\n                    jobInstanceId = route.getUuid();\n                }\n            } else if (job.getInstanceType() == AsyncJob.Type.PrivateGateway) {\n                VpcGatewayVO gateway = ApiDBUtils.findVpcGatewayById(job.getInstanceId());\n                if (gateway != null) {\n                    jobInstanceId = gateway.getUuid();\n                }\n            } else if (job.getInstanceType() == AsyncJob.Type.Counter) {\n                CounterVO counter = ApiDBUtils.getCounter(job.getInstanceId());\n                if (counter != null) {\n                    jobInstanceId = counter.getUuid();\n                }\n            } else if (job.getInstanceType() == AsyncJob.Type.Condition) {\n                ConditionVO condition = ApiDBUtils.findConditionById(job.getInstanceId());\n                if (condition != null) {\n                    jobInstanceId = condition.getUuid();\n                }\n            } else if (job.getInstanceType() == AsyncJob.Type.AutoScalePolicy) {\n                AutoScalePolicyVO policy = ApiDBUtils.findAutoScalePolicyById(job.getInstanceId());\n                if (policy != null) {\n                    jobInstanceId = policy.getUuid();\n                }\n            } else if (job.getInstanceType() == AsyncJob.Type.AutoScaleVmProfile) {\n                AutoScaleVmProfileVO profile = ApiDBUtils.findAutoScaleVmProfileById(job.getInstanceId());\n                if (profile != null) {\n                    jobInstanceId = profile.getUuid();\n                }\n            } else if (job.getInstanceType() == AsyncJob.Type.AutoScaleVmGroup) {\n                AutoScaleVmGroupVO group = ApiDBUtils.findAutoScaleVmGroupById(job.getInstanceId());\n                if (group != null) {\n                    jobInstanceId = group.getUuid();\n                }\n            } else if (job.getInstanceType() != AsyncJob.Type.None) {\n                // TODO : when we hit here, we need to add instanceType -> UUID\n                // entity table mapping\n                assert (false);\n            }\n            if (jobInstanceId != null) {\n                jobResponse.setJobInstanceId(jobInstanceId);\n            }\n        }\n        jobResponse.setJobResultCode(job.getResultCode());\n\n        boolean savedValue = SerializationContext.current().getUuidTranslation();\n        SerializationContext.current().setUuidTranslation(false);\n\n        Object resultObject = ApiSerializerHelper.fromSerializedString(job.getResult());\n        jobResponse.setJobResult((ResponseObject) resultObject);\n        SerializationContext.current().setUuidTranslation(savedValue);\n\n        if (resultObject != null) {\n            Class<?> clz = resultObject.getClass();\n            if (clz.isPrimitive() || clz.getSuperclass() == Number.class || clz == String.class || clz == Date.class) {\n                jobResponse.setJobResultType(\"text\");\n            } else {\n                jobResponse.setJobResultType(\"object\");\n            }\n        }\n\n        jobResponse.setObjectName(\"asyncjobs\");\n        return jobResponse;\n    }","commit_id":"e397f23f6b5d6ba34ad42eca95ae9d9ee43ac6a8","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public ClusterResponse createClusterResponse(Cluster cluster, Boolean showCapacities) {\n        ClusterResponse clusterResponse = new ClusterResponse();\n        clusterResponse.setId(cluster.getUuid());\n        clusterResponse.setName(cluster.getName());\n        HostPodVO pod = ApiDBUtils.findPodById(cluster.getPodId());\n        if (pod != null) {\n            clusterResponse.setPodId(pod.getUuid());\n            clusterResponse.setPodName(pod.getName());\n        }\n        DataCenter dc = ApiDBUtils.findZoneById(cluster.getDataCenterId());\n        if (dc != null) {\n            clusterResponse.setZoneId(dc.getUuid());\n            clusterResponse.setZoneName(dc.getName());\n        }\n        if (cluster.getHypervisorType() != null) {\n            clusterResponse.setHypervisorType(cluster.getHypervisorType().toString());\n        }\n        if (cluster.getClusterType() != null) {\n            clusterResponse.setClusterType(cluster.getClusterType().toString());\n        }\n        if (cluster.getAllocationState() != null) {\n            clusterResponse.setAllocationState(cluster.getAllocationState().toString());\n        }\n        if (cluster.getManagedState() != null) {\n            clusterResponse.setManagedState(cluster.getManagedState().toString());\n        }\n\n\n        if (showCapacities != null && showCapacities) {\n            List<SummedCapacity> capacities = ApiDBUtils.getCapacityByClusterPodZone(null, null, cluster.getId());\n            Set<CapacityResponse> capacityResponses = new HashSet<CapacityResponse>();\n            float cpuOverprovisioningFactor = ApiDBUtils.getCpuOverprovisioningFactor();\n\n            for (SummedCapacity capacity : capacities) {\n                CapacityResponse capacityResponse = new CapacityResponse();\n                capacityResponse.setCapacityType(capacity.getCapacityType());\n                capacityResponse.setCapacityUsed(capacity.getUsedCapacity());\n\n                if (capacity.getCapacityType() == Capacity.CAPACITY_TYPE_CPU) {\n                    capacityResponse.setCapacityTotal(new Long((long) (capacity.getTotalCapacity() * cpuOverprovisioningFactor)));\n                } else if (capacity.getCapacityType() == Capacity.CAPACITY_TYPE_STORAGE_ALLOCATED) {\n                    List<SummedCapacity> c = ApiDBUtils.findNonSharedStorageForClusterPodZone(null, null, cluster.getId());\n                    capacityResponse.setCapacityTotal(capacity.getTotalCapacity() - c.get(0).getTotalCapacity());\n                    capacityResponse.setCapacityUsed(capacity.getUsedCapacity() - c.get(0).getUsedCapacity());\n                } else {\n                    capacityResponse.setCapacityTotal(capacity.getTotalCapacity());\n                }\n                if (capacityResponse.getCapacityTotal() != 0) {\n                    capacityResponse.setPercentUsed(s_percentFormat.format((float) capacityResponse.getCapacityUsed() / (float) capacityResponse.getCapacityTotal() * 100f));\n                } else {\n                    capacityResponse.setPercentUsed(s_percentFormat.format(0L));\n                }\n                capacityResponses.add(capacityResponse);\n            }\n            // Do it for stats as well.\n            capacityResponses.addAll(getStatsCapacityresponse(null, cluster.getId(), pod.getId(), pod.getDataCenterId()));\n            clusterResponse.setCapacitites(new ArrayList<CapacityResponse>(capacityResponses));\n        }\n        clusterResponse.setObjectName(\"cluster\");\n        return clusterResponse;\n    }","id":82642,"modified_method":"@Override\n    public ClusterResponse createClusterResponse(Cluster cluster, Boolean showCapacities) {\n        ClusterResponse clusterResponse = new ClusterResponse();\n        clusterResponse.setId(cluster.getUuid());\n        clusterResponse.setName(cluster.getName());\n        HostPodVO pod = ApiDBUtils.findPodById(cluster.getPodId());\n        if (pod != null) {\n            clusterResponse.setPodId(pod.getUuid());\n            clusterResponse.setPodName(pod.getName());\n        }\n        DataCenter dc = ApiDBUtils.findZoneById(cluster.getDataCenterId());\n        if (dc != null) {\n            clusterResponse.setZoneId(dc.getUuid());\n            clusterResponse.setZoneName(dc.getName());\n        }\n        clusterResponse.setHypervisorType(cluster.getHypervisorType().toString());\n        clusterResponse.setClusterType(cluster.getClusterType().toString());\n        clusterResponse.setAllocationState(cluster.getAllocationState().toString());\n        clusterResponse.setManagedState(cluster.getManagedState().toString());\n\n\n        if (showCapacities != null && showCapacities) {\n            List<SummedCapacity> capacities = ApiDBUtils.getCapacityByClusterPodZone(null, null, cluster.getId());\n            Set<CapacityResponse> capacityResponses = new HashSet<CapacityResponse>();\n            float cpuOverprovisioningFactor = ApiDBUtils.getCpuOverprovisioningFactor();\n\n            for (SummedCapacity capacity : capacities) {\n                CapacityResponse capacityResponse = new CapacityResponse();\n                capacityResponse.setCapacityType(capacity.getCapacityType());\n                capacityResponse.setCapacityUsed(capacity.getUsedCapacity());\n\n                if (capacity.getCapacityType() == Capacity.CAPACITY_TYPE_CPU) {\n                    capacityResponse.setCapacityTotal(new Long((long) (capacity.getTotalCapacity() * cpuOverprovisioningFactor)));\n                } else if (capacity.getCapacityType() == Capacity.CAPACITY_TYPE_STORAGE_ALLOCATED) {\n                    List<SummedCapacity> c = ApiDBUtils.findNonSharedStorageForClusterPodZone(null, null, cluster.getId());\n                    capacityResponse.setCapacityTotal(capacity.getTotalCapacity() - c.get(0).getTotalCapacity());\n                    capacityResponse.setCapacityUsed(capacity.getUsedCapacity() - c.get(0).getUsedCapacity());\n                } else {\n                    capacityResponse.setCapacityTotal(capacity.getTotalCapacity());\n                }\n                if (capacityResponse.getCapacityTotal() != 0) {\n                    capacityResponse.setPercentUsed(s_percentFormat.format((float) capacityResponse.getCapacityUsed() / (float) capacityResponse.getCapacityTotal() * 100f));\n                } else {\n                    capacityResponse.setPercentUsed(s_percentFormat.format(0L));\n                }\n                capacityResponses.add(capacityResponse);\n            }\n            // Do it for stats as well.\n            capacityResponses.addAll(getStatsCapacityresponse(null, cluster.getId(), pod.getId(), pod.getDataCenterId()));\n            clusterResponse.setCapacitites(new ArrayList<CapacityResponse>(capacityResponses));\n        }\n        clusterResponse.setObjectName(\"cluster\");\n        return clusterResponse;\n    }","commit_id":"e397f23f6b5d6ba34ad42eca95ae9d9ee43ac6a8","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public IPAddressResponse createIPAddressResponse(IpAddress ipAddr) {\n        VlanVO vlan = ApiDBUtils.findVlanById(ipAddr.getVlanId());\n        boolean forVirtualNetworks = vlan.getVlanType().equals(VlanType.VirtualNetwork);\n        long zoneId = ipAddr.getDataCenterId();\n\n        IPAddressResponse ipResponse = new IPAddressResponse();\n        ipResponse.setId(ipAddr.getUuid());\n        if (ipAddr.getAddress() != null) {\n            ipResponse.setIpAddress(ipAddr.getAddress().toString());\n        }\n        if (ipAddr.getAllocatedTime() != null) {\n            ipResponse.setAllocated(ipAddr.getAllocatedTime());\n        }\n        DataCenter zone = ApiDBUtils.findZoneById(ipAddr.getDataCenterId());\n        if (zone != null) {\n            ipResponse.setZoneId(zone.getUuid());\n            ipResponse.setZoneName(zone.getName());\n        }\n        ipResponse.setSourceNat(ipAddr.isSourceNat());\n        ipResponse.setIsSystem(ipAddr.getSystem());\n\n        // get account information\n        if (ipAddr.getAllocatedToAccountId() != null) {\n            populateOwner(ipResponse, ipAddr);\n        }\n\n        ipResponse.setForVirtualNetwork(forVirtualNetworks);\n        ipResponse.setStaticNat(ipAddr.isOneToOneNat());\n\n        if (ipAddr.getAssociatedWithVmId() != null) {\n            UserVm vm = ApiDBUtils.findUserVmById(ipAddr.getAssociatedWithVmId());\n            if (vm != null) {\n                ipResponse.setVirtualMachineId(vm.getUuid());\n                ipResponse.setVirtualMachineName(vm.getHostName());\n                if (vm.getDisplayName() != null) {\n                    ipResponse.setVirtualMachineDisplayName(vm.getDisplayName());\n                } else {\n                    ipResponse.setVirtualMachineDisplayName(vm.getHostName());\n                }\n            }\n        }\n\n        if (ipAddr.getAssociatedWithNetworkId() != null) {\n            Network ntwk = ApiDBUtils.findNetworkById(ipAddr.getAssociatedWithNetworkId());\n            if (ntwk != null) {\n                ipResponse.setAssociatedNetworkId(ntwk.getUuid());\n                ipResponse.setAssociatedNetworkName(ntwk.getName());\n            }\n        }\n\n        if (ipAddr.getVpcId() != null) {\n            Vpc vpc = ApiDBUtils.findVpcById(ipAddr.getVpcId());\n            if (vpc != null) {\n                ipResponse.setVpcId(vpc.getUuid());\n            }\n        }\n\n        // Network id the ip is associated with (if associated networkId is\n        // null, try to get this information from vlan)\n        Long vlanNetworkId = ApiDBUtils.getVlanNetworkId(ipAddr.getVlanId());\n\n        // Network id the ip belongs to\n        Long networkId;\n        if (vlanNetworkId != null) {\n            networkId = vlanNetworkId;\n        } else {\n            networkId = ApiDBUtils.getPublicNetworkIdByZone(zoneId);\n        }\n\n        if (networkId != null) {\n            NetworkVO nw = ApiDBUtils.findNetworkById(networkId);\n            if (nw != null) {\n                ipResponse.setNetworkId(nw.getUuid());\n            }\n        }\n        if (ipAddr.getState() != null) {\n            ipResponse.setState(ipAddr.getState().toString());\n        }\n\n        if (ipAddr.getPhysicalNetworkId() != null) {\n            PhysicalNetworkVO pnw = ApiDBUtils.findPhysicalNetworkById(ipAddr.getPhysicalNetworkId());\n            if (pnw != null) {\n                ipResponse.setPhysicalNetworkId(pnw.getUuid());\n            }\n        }\n\n        // show this info to admin only\n        Account account = UserContext.current().getCaller();\n        if (account.getType() == Account.ACCOUNT_TYPE_ADMIN) {\n            VlanVO vl = ApiDBUtils.findVlanById(ipAddr.getVlanId());\n            if (vl != null) {\n                ipResponse.setVlanId(vl.getUuid());\n                ipResponse.setVlanName(vl.getVlanTag());\n            }\n        }\n\n        if (ipAddr.getSystem()) {\n            if (ipAddr.isOneToOneNat()) {\n                ipResponse.setPurpose(IpAddress.Purpose.StaticNat.toString());\n            } else {\n                ipResponse.setPurpose(IpAddress.Purpose.Lb.toString());\n            }\n        }\n\n        //set tag information\n        List<? extends ResourceTag> tags = ApiDBUtils.listByResourceTypeAndId(TaggedResourceType.PublicIpAddress, ipAddr.getId());\n        List<ResourceTagResponse> tagResponses = new ArrayList<ResourceTagResponse>();\n        for (ResourceTag tag : tags) {\n            ResourceTagResponse tagResponse = createResourceTagResponse(tag, true);\n            tagResponses.add(tagResponse);\n        }\n        ipResponse.setTags(tagResponses);\n\n        ipResponse.setObjectName(\"ipaddress\");\n        return ipResponse;\n    }","id":82643,"modified_method":"@Override\n    public IPAddressResponse createIPAddressResponse(IpAddress ipAddr) {\n        VlanVO vlan = ApiDBUtils.findVlanById(ipAddr.getVlanId());\n        boolean forVirtualNetworks = vlan.getVlanType().equals(VlanType.VirtualNetwork);\n        long zoneId = ipAddr.getDataCenterId();\n\n        IPAddressResponse ipResponse = new IPAddressResponse();\n        ipResponse.setId(ipAddr.getUuid());\n        ipResponse.setIpAddress(ipAddr.getAddress().toString());\n        if (ipAddr.getAllocatedTime() != null) {\n            ipResponse.setAllocated(ipAddr.getAllocatedTime());\n        }\n        DataCenter zone = ApiDBUtils.findZoneById(ipAddr.getDataCenterId());\n        if (zone != null) {\n            ipResponse.setZoneId(zone.getUuid());\n            ipResponse.setZoneName(zone.getName());\n        }\n        ipResponse.setSourceNat(ipAddr.isSourceNat());\n        ipResponse.setIsSystem(ipAddr.getSystem());\n\n        // get account information\n        if (ipAddr.getAllocatedToAccountId() != null) {\n            populateOwner(ipResponse, ipAddr);\n        }\n\n        ipResponse.setForVirtualNetwork(forVirtualNetworks);\n        ipResponse.setStaticNat(ipAddr.isOneToOneNat());\n\n        if (ipAddr.getAssociatedWithVmId() != null) {\n            UserVm vm = ApiDBUtils.findUserVmById(ipAddr.getAssociatedWithVmId());\n            if (vm != null) {\n                ipResponse.setVirtualMachineId(vm.getUuid());\n                ipResponse.setVirtualMachineName(vm.getHostName());\n                if (vm.getDisplayName() != null) {\n                    ipResponse.setVirtualMachineDisplayName(vm.getDisplayName());\n                } else {\n                    ipResponse.setVirtualMachineDisplayName(vm.getHostName());\n                }\n            }\n        }\n\n        if (ipAddr.getAssociatedWithNetworkId() != null) {\n            Network ntwk = ApiDBUtils.findNetworkById(ipAddr.getAssociatedWithNetworkId());\n            if (ntwk != null) {\n                ipResponse.setAssociatedNetworkId(ntwk.getUuid());\n                ipResponse.setAssociatedNetworkName(ntwk.getName());\n            }\n        }\n\n        if (ipAddr.getVpcId() != null) {\n            Vpc vpc = ApiDBUtils.findVpcById(ipAddr.getVpcId());\n            if (vpc != null) {\n                ipResponse.setVpcId(vpc.getUuid());\n            }\n        }\n\n        // Network id the ip is associated with (if associated networkId is\n        // null, try to get this information from vlan)\n        Long vlanNetworkId = ApiDBUtils.getVlanNetworkId(ipAddr.getVlanId());\n\n        // Network id the ip belongs to\n        Long networkId;\n        if (vlanNetworkId != null) {\n            networkId = vlanNetworkId;\n        } else {\n            networkId = ApiDBUtils.getPublicNetworkIdByZone(zoneId);\n        }\n\n        if (networkId != null) {\n            NetworkVO nw = ApiDBUtils.findNetworkById(networkId);\n            if (nw != null) {\n                ipResponse.setNetworkId(nw.getUuid());\n            }\n        }\n        ipResponse.setState(ipAddr.getState().toString());\n\n        if (ipAddr.getPhysicalNetworkId() != null) {\n            PhysicalNetworkVO pnw = ApiDBUtils.findPhysicalNetworkById(ipAddr.getPhysicalNetworkId());\n            if (pnw != null) {\n                ipResponse.setPhysicalNetworkId(pnw.getUuid());\n            }\n        }\n\n        // show this info to admin only\n        Account account = UserContext.current().getCaller();\n        if (account.getType() == Account.ACCOUNT_TYPE_ADMIN) {\n            VlanVO vl = ApiDBUtils.findVlanById(ipAddr.getVlanId());\n            if (vl != null) {\n                ipResponse.setVlanId(vl.getUuid());\n                ipResponse.setVlanName(vl.getVlanTag());\n            }\n        }\n\n        if (ipAddr.getSystem()) {\n            if (ipAddr.isOneToOneNat()) {\n                ipResponse.setPurpose(IpAddress.Purpose.StaticNat.toString());\n            } else {\n                ipResponse.setPurpose(IpAddress.Purpose.Lb.toString());\n            }\n        }\n\n        //set tag information\n        List<? extends ResourceTag> tags = ApiDBUtils.listByResourceTypeAndId(TaggedResourceType.PublicIpAddress, ipAddr.getId());\n        List<ResourceTagResponse> tagResponses = new ArrayList<ResourceTagResponse>();\n        for (ResourceTag tag : tags) {\n            ResourceTagResponse tagResponse = createResourceTagResponse(tag, true);\n            tagResponses.add(tagResponse);\n        }\n        ipResponse.setTags(tagResponses);\n\n        ipResponse.setObjectName(\"ipaddress\");\n        return ipResponse;\n    }","commit_id":"e397f23f6b5d6ba34ad42eca95ae9d9ee43ac6a8","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public List<CapacityResponse> createCapacityResponse(List<? extends Capacity> result, DecimalFormat format) {\n        List<CapacityResponse> capacityResponses = new ArrayList<CapacityResponse>();\n\n        for (Capacity summedCapacity : result) {\n            CapacityResponse capacityResponse = new CapacityResponse();\n            capacityResponse.setCapacityTotal(summedCapacity.getTotalCapacity());\n            capacityResponse.setCapacityType(summedCapacity.getCapacityType());\n            capacityResponse.setCapacityUsed(summedCapacity.getUsedCapacity());\n            if (summedCapacity.getPodId() != null) {\n                HostPodVO pod = ApiDBUtils.findPodById(summedCapacity.getPodId());\n                if (pod != null) {\n                    capacityResponse.setPodId(pod.getUuid());\n                    capacityResponse.setPodName(pod.getName());\n                }\n            }\n            if (summedCapacity.getClusterId() != null) {\n                ClusterVO cluster = ApiDBUtils.findClusterById(summedCapacity.getClusterId());\n                if (cluster != null) {\n                    capacityResponse.setClusterId(cluster.getUuid());\n                    capacityResponse.setClusterName(cluster.getName());\n                    if (summedCapacity.getPodId() == null) {\n                        HostPodVO pod = ApiDBUtils.findPodById(cluster.getPodId());\n                        capacityResponse.setPodId(pod.getUuid());\n                        capacityResponse.setPodName(pod.getName());\n                    }\n                }\n            }\n            DataCenter zone = ApiDBUtils.findZoneById(summedCapacity.getDataCenterId());\n            if (zone != null) {\n                capacityResponse.setZoneId(zone.getUuid());\n                capacityResponse.setZoneName(zone.getName());\n            }\n            if (summedCapacity.getUsedPercentage() != null){\n                capacityResponse.setPercentUsed(format.format(summedCapacity.getUsedPercentage() * 100f));\n            } else if (summedCapacity.getTotalCapacity() != 0) {\n                capacityResponse.setPercentUsed(format.format((float) summedCapacity.getUsedCapacity() / (float) summedCapacity.getTotalCapacity() * 100f));\n            } else {\n                capacityResponse.setPercentUsed(format.format(0L));\n            }\n\n            capacityResponse.setObjectName(\"capacity\");\n            capacityResponses.add(capacityResponse);\n        }\n\n        return capacityResponses;\n    }","id":82644,"modified_method":"@Override\n    public List<CapacityResponse> createCapacityResponse(List<? extends Capacity> result, DecimalFormat format) {\n        List<CapacityResponse> capacityResponses = new ArrayList<CapacityResponse>();\n\n        for (Capacity summedCapacity : result) {\n            CapacityResponse capacityResponse = new CapacityResponse();\n            capacityResponse.setCapacityTotal(summedCapacity.getTotalCapacity());\n            capacityResponse.setCapacityType(summedCapacity.getCapacityType());\n            capacityResponse.setCapacityUsed(summedCapacity.getUsedCapacity());\n            if (summedCapacity.getPodId() != null) {\n                capacityResponse.setPodId(ApiDBUtils.findPodById(summedCapacity.getPodId()).getUuid());\n                HostPodVO pod = ApiDBUtils.findPodById(summedCapacity.getPodId());\n                if (pod != null) {\n                    capacityResponse.setPodId(pod.getUuid());\n                    capacityResponse.setPodName(pod.getName());\n                }\n            }\n            if (summedCapacity.getClusterId() != null) {\n                ClusterVO cluster = ApiDBUtils.findClusterById(summedCapacity.getClusterId());\n                if (cluster != null) {\n                    capacityResponse.setClusterId(cluster.getUuid());\n                    capacityResponse.setClusterName(cluster.getName());\n                    if (summedCapacity.getPodId() == null) {\n                        HostPodVO pod = ApiDBUtils.findPodById(cluster.getPodId());\n                        capacityResponse.setPodId(pod.getUuid());\n                        capacityResponse.setPodName(pod.getName());\n                    }\n                }\n            }\n            DataCenter zone = ApiDBUtils.findZoneById(summedCapacity.getDataCenterId());\n            if (zone != null) {\n                capacityResponse.setZoneId(zone.getUuid());\n                capacityResponse.setZoneName(zone.getName());\n            }\n            if (summedCapacity.getUsedPercentage() != null){\n                capacityResponse.setPercentUsed(format.format(summedCapacity.getUsedPercentage() * 100f));\n            } else if (summedCapacity.getTotalCapacity() != 0) {\n                capacityResponse.setPercentUsed(format.format((float) summedCapacity.getUsedCapacity() / (float) summedCapacity.getTotalCapacity() * 100f));\n            } else {\n                capacityResponse.setPercentUsed(format.format(0L));\n            }\n\n            capacityResponse.setObjectName(\"capacity\");\n            capacityResponses.add(capacityResponse);\n        }\n\n        return capacityResponses;\n    }","commit_id":"e397f23f6b5d6ba34ad42eca95ae9d9ee43ac6a8","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public Site2SiteVpnGatewayResponse createSite2SiteVpnGatewayResponse(Site2SiteVpnGateway result) {\n        Site2SiteVpnGatewayResponse response = new Site2SiteVpnGatewayResponse();\n        response.setId(result.getUuid());\n        IpAddress ip = ApiDBUtils.findIpAddressById(result.getAddrId());\n        if (ip != null && ip.getAddress() != null) {\n            response.setIp(ip.getAddress().toString());\n        }\n        Vpc vpc = ApiDBUtils.findVpcById(result.getVpcId());\n        if (vpc != null) {\n            response.setVpcId(result.getUuid());\n        }\n        response.setRemoved(result.getRemoved());\n        response.setObjectName(\"vpngateway\");\n\n        populateAccount(response, result.getAccountId());\n        populateDomain(response, result.getDomainId());\n        return response;\n    }","id":82645,"modified_method":"@Override\n    public Site2SiteVpnGatewayResponse createSite2SiteVpnGatewayResponse(Site2SiteVpnGateway result) {\n        Site2SiteVpnGatewayResponse response = new Site2SiteVpnGatewayResponse();\n        response.setId(result.getUuid());\n        response.setIp(ApiDBUtils.findIpAddressById(result.getAddrId()).getAddress().toString());\n        Vpc vpc = ApiDBUtils.findVpcById(result.getVpcId());\n        if (vpc != null) {\n            response.setVpcId(result.getUuid());\n        }\n        response.setRemoved(result.getRemoved());\n        response.setObjectName(\"vpngateway\");\n\n        populateAccount(response, result.getAccountId());\n        populateDomain(response, result.getDomainId());\n        return response;\n    }","commit_id":"e397f23f6b5d6ba34ad42eca95ae9d9ee43ac6a8","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public ZoneResponse createZoneResponse(DataCenter dataCenter, Boolean showCapacities) {\n        Account account = UserContext.current().getCaller();\n        ZoneResponse zoneResponse = new ZoneResponse();\n        zoneResponse.setId(dataCenter.getUuid());\n        zoneResponse.setName(dataCenter.getName());\n        zoneResponse.setSecurityGroupsEnabled(ApiDBUtils.isSecurityGroupEnabledInZone(dataCenter.getId()));\n        zoneResponse.setLocalStorageEnabled(dataCenter.isLocalStorageEnabled());\n\n        if ((dataCenter.getDescription() != null) && !dataCenter.getDescription().equalsIgnoreCase(\"null\")) {\n            zoneResponse.setDescription(dataCenter.getDescription());\n        }\n\n        if ((account == null) || (account.getType() == Account.ACCOUNT_TYPE_ADMIN)) {\n            zoneResponse.setDns1(dataCenter.getDns1());\n            zoneResponse.setDns2(dataCenter.getDns2());\n            zoneResponse.setInternalDns1(dataCenter.getInternalDns1());\n            zoneResponse.setInternalDns2(dataCenter.getInternalDns2());\n            // FIXME zoneResponse.setVlan(dataCenter.get.getVnet());\n            zoneResponse.setGuestCidrAddress(dataCenter.getGuestNetworkCidr());\n        }\n\n        if (showCapacities != null && showCapacities) {\n            List<SummedCapacity> capacities = ApiDBUtils.getCapacityByClusterPodZone(dataCenter.getId(), null, null);\n            Set<CapacityResponse> capacityResponses = new HashSet<CapacityResponse>();\n            float cpuOverprovisioningFactor = ApiDBUtils.getCpuOverprovisioningFactor();\n\n            for (SummedCapacity capacity : capacities) {\n                CapacityResponse capacityResponse = new CapacityResponse();\n                capacityResponse.setCapacityType(capacity.getCapacityType());\n                capacityResponse.setCapacityUsed(capacity.getUsedCapacity());\n                if (capacity.getCapacityType() == Capacity.CAPACITY_TYPE_CPU) {\n                    capacityResponse.setCapacityTotal(new Long((long) (capacity.getTotalCapacity() * cpuOverprovisioningFactor)));\n                } else if (capacity.getCapacityType() == Capacity.CAPACITY_TYPE_STORAGE_ALLOCATED) {\n                    List<SummedCapacity> c = ApiDBUtils.findNonSharedStorageForClusterPodZone(dataCenter.getId(), null, null);\n                    capacityResponse.setCapacityTotal(capacity.getTotalCapacity() - c.get(0).getTotalCapacity());\n                    capacityResponse.setCapacityUsed(capacity.getUsedCapacity() - c.get(0).getUsedCapacity());\n                } else {\n                    capacityResponse.setCapacityTotal(capacity.getTotalCapacity());\n                }\n                if (capacityResponse.getCapacityTotal() != 0) {\n                    capacityResponse.setPercentUsed(s_percentFormat.format((float) capacityResponse.getCapacityUsed() / (float) capacityResponse.getCapacityTotal() * 100f));\n                } else {\n                    capacityResponse.setPercentUsed(s_percentFormat.format(0L));\n                }\n                capacityResponses.add(capacityResponse);\n            }\n            // Do it for stats as well.\n            capacityResponses.addAll(getStatsCapacityresponse(null, null, null, dataCenter.getId()));\n\n            zoneResponse.setCapacitites(new ArrayList<CapacityResponse>(capacityResponses));\n        }\n\n        // set network domain info\n        zoneResponse.setDomain(dataCenter.getDomain());\n\n        // set domain info\n        Long domainId = dataCenter.getDomainId();\n        if (domainId != null) {\n            Domain domain = ApiDBUtils.findDomainById(domainId);\n            zoneResponse.setDomainId(domain.getId());\n            zoneResponse.setDomainName(domain.getName());\n        }\n\n        if (dataCenter.getNetworkType() != null) {\n            zoneResponse.setType(dataCenter.getNetworkType().toString());\n        }\n        if (dataCenter.getAllocationState() != null) {\n            zoneResponse.setAllocationState(dataCenter.getAllocationState().toString());\n        }\n        zoneResponse.setZoneToken(dataCenter.getZoneToken());\n        zoneResponse.setDhcpProvider(dataCenter.getDhcpProvider());\n        zoneResponse.setObjectName(\"zone\");\n        return zoneResponse;\n    }","id":82646,"modified_method":"@Override\n    public ZoneResponse createZoneResponse(DataCenter dataCenter, Boolean showCapacities) {\n        Account account = UserContext.current().getCaller();\n        ZoneResponse zoneResponse = new ZoneResponse();\n        zoneResponse.setId(dataCenter.getUuid());\n        zoneResponse.setName(dataCenter.getName());\n        zoneResponse.setSecurityGroupsEnabled(ApiDBUtils.isSecurityGroupEnabledInZone(dataCenter.getId()));\n        zoneResponse.setLocalStorageEnabled(dataCenter.isLocalStorageEnabled());\n\n        if ((dataCenter.getDescription() != null) && !dataCenter.getDescription().equalsIgnoreCase(\"null\")) {\n            zoneResponse.setDescription(dataCenter.getDescription());\n        }\n\n        if ((account == null) || (account.getType() == Account.ACCOUNT_TYPE_ADMIN)) {\n            zoneResponse.setDns1(dataCenter.getDns1());\n            zoneResponse.setDns2(dataCenter.getDns2());\n            zoneResponse.setInternalDns1(dataCenter.getInternalDns1());\n            zoneResponse.setInternalDns2(dataCenter.getInternalDns2());\n            // FIXME zoneResponse.setVlan(dataCenter.get.getVnet());\n            zoneResponse.setGuestCidrAddress(dataCenter.getGuestNetworkCidr());\n        }\n\n        if (showCapacities != null && showCapacities) {\n            List<SummedCapacity> capacities = ApiDBUtils.getCapacityByClusterPodZone(dataCenter.getId(), null, null);\n            Set<CapacityResponse> capacityResponses = new HashSet<CapacityResponse>();\n            float cpuOverprovisioningFactor = ApiDBUtils.getCpuOverprovisioningFactor();\n\n            for (SummedCapacity capacity : capacities) {\n                CapacityResponse capacityResponse = new CapacityResponse();\n                capacityResponse.setCapacityType(capacity.getCapacityType());\n                capacityResponse.setCapacityUsed(capacity.getUsedCapacity());\n                if (capacity.getCapacityType() == Capacity.CAPACITY_TYPE_CPU) {\n                    capacityResponse.setCapacityTotal(new Long((long) (capacity.getTotalCapacity() * cpuOverprovisioningFactor)));\n                } else if (capacity.getCapacityType() == Capacity.CAPACITY_TYPE_STORAGE_ALLOCATED) {\n                    List<SummedCapacity> c = ApiDBUtils.findNonSharedStorageForClusterPodZone(dataCenter.getId(), null, null);\n                    capacityResponse.setCapacityTotal(capacity.getTotalCapacity() - c.get(0).getTotalCapacity());\n                    capacityResponse.setCapacityUsed(capacity.getUsedCapacity() - c.get(0).getUsedCapacity());\n                } else {\n                    capacityResponse.setCapacityTotal(capacity.getTotalCapacity());\n                }\n                if (capacityResponse.getCapacityTotal() != 0) {\n                    capacityResponse.setPercentUsed(s_percentFormat.format((float) capacityResponse.getCapacityUsed() / (float) capacityResponse.getCapacityTotal() * 100f));\n                } else {\n                    capacityResponse.setPercentUsed(s_percentFormat.format(0L));\n                }\n                capacityResponses.add(capacityResponse);\n            }\n            // Do it for stats as well.\n            capacityResponses.addAll(getStatsCapacityresponse(null, null, null, dataCenter.getId()));\n\n            zoneResponse.setCapacitites(new ArrayList<CapacityResponse>(capacityResponses));\n        }\n\n        // set network domain info\n        zoneResponse.setDomain(dataCenter.getDomain());\n\n        // set domain info\n        Long domainId = dataCenter.getDomainId();\n        if (domainId != null) {\n            Domain domain = ApiDBUtils.findDomainById(domainId);\n            zoneResponse.setDomainId(domain.getId());\n            zoneResponse.setDomainName(domain.getName());\n        }\n\n        zoneResponse.setType(dataCenter.getNetworkType().toString());\n        zoneResponse.setAllocationState(dataCenter.getAllocationState().toString());\n        zoneResponse.setZoneToken(dataCenter.getZoneToken());\n        zoneResponse.setDhcpProvider(dataCenter.getDhcpProvider());\n        zoneResponse.setObjectName(\"zone\");\n        return zoneResponse;\n    }","commit_id":"e397f23f6b5d6ba34ad42eca95ae9d9ee43ac6a8","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public ResourceLimitResponse createResourceLimitResponse(ResourceLimit limit) {\n        ResourceLimitResponse resourceLimitResponse = new ResourceLimitResponse();\n        if (limit.getResourceOwnerType() == ResourceOwnerType.Domain) {\n            populateDomain(resourceLimitResponse, limit.getOwnerId());\n        } else if (limit.getResourceOwnerType() == ResourceOwnerType.Account) {\n            Account accountTemp = ApiDBUtils.findAccountById(limit.getOwnerId());\n            populateAccount(resourceLimitResponse, limit.getOwnerId());\n            populateDomain(resourceLimitResponse, accountTemp.getDomainId());\n        }\n        if (limit.getType() != null) {\n            resourceLimitResponse.setResourceType(Integer.valueOf(limit.getType().getOrdinal()).toString());\n        }\n        resourceLimitResponse.setMax(limit.getMax());\n        resourceLimitResponse.setObjectName(\"resourcelimit\");\n\n        return resourceLimitResponse;\n    }","id":82647,"modified_method":"@Override\n    public ResourceLimitResponse createResourceLimitResponse(ResourceLimit limit) {\n        ResourceLimitResponse resourceLimitResponse = new ResourceLimitResponse();\n        if (limit.getResourceOwnerType() == ResourceOwnerType.Domain) {\n            populateDomain(resourceLimitResponse, limit.getOwnerId());\n        } else if (limit.getResourceOwnerType() == ResourceOwnerType.Account) {\n            Account accountTemp = ApiDBUtils.findAccountById(limit.getOwnerId());\n            populateAccount(resourceLimitResponse, limit.getOwnerId());\n            populateDomain(resourceLimitResponse, accountTemp.getDomainId());\n        }\n        resourceLimitResponse.setResourceType(Integer.valueOf(limit.getType().getOrdinal()).toString());\n        resourceLimitResponse.setMax(limit.getMax());\n        resourceLimitResponse.setObjectName(\"resourcelimit\");\n\n        return resourceLimitResponse;\n    }","commit_id":"e397f23f6b5d6ba34ad42eca95ae9d9ee43ac6a8","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public NetworkACLResponse createNetworkACLResponse(FirewallRule networkACL) {\n        NetworkACLResponse response = new NetworkACLResponse();\n\n        response.setId(networkACL.getUuid());\n        response.setProtocol(networkACL.getProtocol());\n        if (networkACL.getSourcePortStart() != null) {\n            response.setStartPort(Integer.toString(networkACL.getSourcePortStart()));\n        }\n\n        if (networkACL.getSourcePortEnd() != null) {\n            response.setEndPort(Integer.toString(networkACL.getSourcePortEnd()));\n        }\n\n        List<String> cidrs = ApiDBUtils.findFirewallSourceCidrs(networkACL.getId());\n        response.setCidrList(StringUtils.join(cidrs, \",\"));\n\n        if (networkACL.getTrafficType() != null) {\n            response.setTrafficType(networkACL.getTrafficType().toString());\n        }\n\n        FirewallRule.State state = networkACL.getState();\n        if (state != null) {\n            String stateToSet = state.toString();\n            if (state.equals(FirewallRule.State.Revoke)) {\n                stateToSet = \"Deleting\";\n            }\n            response.setState(stateToSet);\n        }\n\n        response.setIcmpCode(networkACL.getIcmpCode());\n        response.setIcmpType(networkACL.getIcmpType());\n\n\n\n        //set tag information\n        List<? extends ResourceTag> tags = ApiDBUtils.listByResourceTypeAndId(TaggedResourceType.NetworkACL, networkACL.getId());\n        List<ResourceTagResponse> tagResponses = new ArrayList<ResourceTagResponse>();\n        for (ResourceTag tag : tags) {\n            ResourceTagResponse tagResponse = createResourceTagResponse(tag, true);\n            tagResponses.add(tagResponse);\n        }\n        response.setTags(tagResponses);\n\n        response.setObjectName(\"networkacl\");\n        return response;\n    }","id":82648,"modified_method":"@Override\n    public NetworkACLResponse createNetworkACLResponse(FirewallRule networkACL) {\n        NetworkACLResponse response = new NetworkACLResponse();\n\n        response.setId(networkACL.getUuid());\n        response.setProtocol(networkACL.getProtocol());\n        if (networkACL.getSourcePortStart() != null) {\n            response.setStartPort(Integer.toString(networkACL.getSourcePortStart()));\n        }\n\n        if (networkACL.getSourcePortEnd() != null) {\n            response.setEndPort(Integer.toString(networkACL.getSourcePortEnd()));\n        }\n\n        List<String> cidrs = ApiDBUtils.findFirewallSourceCidrs(networkACL.getId());\n        response.setCidrList(StringUtils.join(cidrs, \",\"));\n\n        response.setTrafficType(networkACL.getTrafficType().toString());\n\n        FirewallRule.State state = networkACL.getState();\n        String stateToSet = state.toString();\n        if (state.equals(FirewallRule.State.Revoke)) {\n            stateToSet = \"Deleting\";\n        }\n\n        response.setIcmpCode(networkACL.getIcmpCode());\n        response.setIcmpType(networkACL.getIcmpType());\n\n        response.setState(stateToSet);\n\n        //set tag information\n        List<? extends ResourceTag> tags = ApiDBUtils.listByResourceTypeAndId(TaggedResourceType.NetworkACL, networkACL.getId());\n        List<ResourceTagResponse> tagResponses = new ArrayList<ResourceTagResponse>();\n        for (ResourceTag tag : tags) {\n            ResourceTagResponse tagResponse = createResourceTagResponse(tag, true);\n            tagResponses.add(tagResponse);\n        }\n        response.setTags(tagResponses);\n\n        response.setObjectName(\"networkacl\");\n        return response;\n    }","commit_id":"e397f23f6b5d6ba34ad42eca95ae9d9ee43ac6a8","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public ConditionResponse createConditionResponse(Condition condition) {\n        ConditionResponse response = new ConditionResponse();\n        response.setId(condition.getUuid());\n        List<CounterResponse> counterResponseList = new ArrayList<CounterResponse>();\n        counterResponseList.add(createCounterResponse(ApiDBUtils.getCounter(condition.getCounterid())));\n        response.setCounterResponse(counterResponseList);\n        if (condition.getRelationalOperator() != null) {\n            response.setRelationalOperator(condition.getRelationalOperator().toString());\n        }\n        response.setThreshold(condition.getThreshold());\n        response.setObjectName(\"condition\");\n        populateOwner(response, condition);\n        return response;\n    }","id":82649,"modified_method":"@Override\n    public ConditionResponse createConditionResponse(Condition condition) {\n        ConditionResponse response = new ConditionResponse();\n        response.setId(condition.getUuid());\n        List<CounterResponse> counterResponseList = new ArrayList<CounterResponse>();\n        counterResponseList.add(createCounterResponse(ApiDBUtils.getCounter(condition.getCounterid())));\n        response.setCounterResponse(counterResponseList);\n        response.setRelationalOperator(condition.getRelationalOperator().toString());\n        response.setThreshold(condition.getThreshold());\n        response.setObjectName(\"condition\");\n        populateOwner(response, condition);\n        return response;\n    }","commit_id":"e397f23f6b5d6ba34ad42eca95ae9d9ee43ac6a8","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public ProviderResponse createNetworkServiceProviderResponse(PhysicalNetworkServiceProvider result) {\n        ProviderResponse response = new ProviderResponse();\n        response.setId(result.getUuid());\n        response.setName(result.getProviderName());\n        PhysicalNetwork pnw = ApiDBUtils.findPhysicalNetworkById(result.getPhysicalNetworkId());\n        if (pnw != null) {\n            response.setPhysicalNetworkId(pnw.getUuid());\n        }\n        PhysicalNetwork dnw = ApiDBUtils.findPhysicalNetworkById(result.getDestinationPhysicalNetworkId());\n        if (dnw != null) {\n            response.setDestinationPhysicalNetworkId(dnw.getUuid());\n        }\n        if (result.getState() != null) {\n            response.setState(result.getState().toString());\n        }\n\n        // set enabled services\n        List<String> services = new ArrayList<String>();\n        for (Service service : result.getEnabledServices()) {\n            services.add(service.getName());\n        }\n        response.setServices(services);\n\n        response.setObjectName(\"networkserviceprovider\");\n        return response;\n    }","id":82650,"modified_method":"@Override\n    public ProviderResponse createNetworkServiceProviderResponse(PhysicalNetworkServiceProvider result) {\n        ProviderResponse response = new ProviderResponse();\n        response.setId(result.getUuid());\n        response.setName(result.getProviderName());\n        PhysicalNetwork pnw = ApiDBUtils.findPhysicalNetworkById(result.getPhysicalNetworkId());\n        if (pnw != null) {\n            response.setPhysicalNetworkId(pnw.getUuid());\n        }\n        PhysicalNetwork dnw = ApiDBUtils.findPhysicalNetworkById(result.getDestinationPhysicalNetworkId());\n        if (dnw != null) {\n            response.setDestinationPhysicalNetworkId(dnw.getUuid());\n        }\n        response.setState(result.getState().toString());\n\n        // set enabled services\n        List<String> services = new ArrayList<String>();\n        for (Service service : result.getEnabledServices()) {\n            services.add(service.getName());\n        }\n        response.setServices(services);\n\n        response.setObjectName(\"networkserviceprovider\");\n        return response;\n    }","commit_id":"e397f23f6b5d6ba34ad42eca95ae9d9ee43ac6a8","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public SystemVmInstanceResponse createSystemVmInstanceResponse(VirtualMachine vm) {\n        SystemVmInstanceResponse vmResponse = new SystemVmInstanceResponse();\n        vmResponse.setId(vm.getUuid());\n        if (vm.getType() != null) {\n            vmResponse.setSystemVmType(vm.getType().toString().toLowerCase());\n        }\n        vmResponse.setName(vm.getHostName());\n        if (vm.getHostId() != null) {\n            Host host = ApiDBUtils.findHostById(vm.getHostId());\n            if (host != null) {\n                vmResponse.setHostId(host.getUuid());\n            }\n        }\n        if (vm.getState() != null) {\n            vmResponse.setState(vm.getState().toString());\n        }\n        if (vm.getType() == Type.DomainRouter) {\n            VirtualRouter router = (VirtualRouter) vm;\n            if (router.getRole() != null) {\n                vmResponse.setRole(router.getRole().toString());\n            }\n        }\n        vmResponse.setObjectName(\"systemvminstance\");\n        return vmResponse;\n    }","id":82651,"modified_method":"@Override\n    public SystemVmInstanceResponse createSystemVmInstanceResponse(VirtualMachine vm) {\n        SystemVmInstanceResponse vmResponse = new SystemVmInstanceResponse();\n        vmResponse.setId(vm.getUuid());\n        vmResponse.setSystemVmType(vm.getType().toString().toLowerCase());\n        vmResponse.setName(vm.getHostName());\n        if (vm.getHostId() != null) {\n            Host host = ApiDBUtils.findHostById(vm.getHostId());\n            if (host != null) {\n                vmResponse.setHostId(host.getUuid());\n            }\n        }\n        if (vm.getState() != null) {\n            vmResponse.setState(vm.getState().toString());\n        }\n        if (vm.getType() == Type.DomainRouter) {\n            VirtualRouter router = (VirtualRouter) vm;\n            if (router.getRole() != null) {\n                vmResponse.setRole(router.getRole().toString());\n            }\n        }\n        vmResponse.setObjectName(\"systemvminstance\");\n        return vmResponse;\n    }","commit_id":"e397f23f6b5d6ba34ad42eca95ae9d9ee43ac6a8","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public DomainResponse createDomainResponse(Domain domain) {\n        DomainResponse domainResponse = new DomainResponse();\n        domainResponse.setDomainName(domain.getName());\n        domainResponse.setId(domain.getUuid());\n        domainResponse.setLevel(domain.getLevel());\n        domainResponse.setNetworkDomain(domain.getNetworkDomain());\n        if (domain.getParent() != null) {\n            Domain parentDomain = ApiDBUtils.findDomainById(domain.getParent());\n            if (parentDomain != null) {\n                domainResponse.setParentDomainId(parentDomain.getUuid());\n                domainResponse.setParentDomainName(parentDomain.getName());\n            }\n        }\n        StringBuilder domainPath = new StringBuilder(\"ROOT\");\n        (domainPath.append(domain.getPath())).deleteCharAt(domainPath.length() - 1);\n        domainResponse.setPath(domainPath.toString());\n\n        if (domain.getChildCount() > 0) {\n            domainResponse.setHasChild(true);\n        }\n        domainResponse.setObjectName(\"domain\");\n        return domainResponse;\n    }","id":82652,"modified_method":"@Override\n    public DomainResponse createDomainResponse(Domain domain) {\n        DomainResponse domainResponse = new DomainResponse();\n        domainResponse.setDomainName(domain.getName());\n        domainResponse.setId(domain.getUuid());\n        domainResponse.setLevel(domain.getLevel());\n        domainResponse.setNetworkDomain(domain.getNetworkDomain());\n        Domain parentDomain = ApiDBUtils.findDomainById(domain.getParent());\n        if (parentDomain != null) {\n            domainResponse.setParentDomainId(parentDomain.getUuid());\n        }\n        StringBuilder domainPath = new StringBuilder(\"ROOT\");\n        (domainPath.append(domain.getPath())).deleteCharAt(domainPath.length() - 1);\n        domainResponse.setPath(domainPath.toString());\n        if (domain.getParent() != null) {\n            domainResponse.setParentDomainName(ApiDBUtils.findDomainById(domain.getParent()).getName());\n        }\n        if (domain.getChildCount() > 0) {\n            domainResponse.setHasChild(true);\n        }\n        domainResponse.setObjectName(\"domain\");\n        return domainResponse;\n    }","commit_id":"e397f23f6b5d6ba34ad42eca95ae9d9ee43ac6a8","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public SystemVmResponse createSystemVmResponse(VirtualMachine vm) {\n        SystemVmResponse vmResponse = new SystemVmResponse();\n        if (vm.getType() == Type.SecondaryStorageVm || vm.getType() == Type.ConsoleProxy) {\n            // SystemVm vm = (SystemVm) systemVM;\n            vmResponse.setId(vm.getUuid());\n            vmResponse.setObjectId(vm.getId());\n            if (vm.getType() != null) {\n                vmResponse.setSystemVmType(vm.getType().toString().toLowerCase());\n            }\n\n            vmResponse.setName(vm.getHostName());\n            if ( vm.getPodIdToDeployIn() != null ){\n                HostPodVO pod = ApiDBUtils.findPodById(vm.getPodIdToDeployIn());\n                if ( pod != null ){\n            vmResponse.setPodId(pod.getUuid());\n                }\n            }\n            VMTemplateVO template = ApiDBUtils.findTemplateById(vm.getTemplateId());\n            if (template != null){\n            vmResponse.setTemplateId(template.getUuid());\n            }\n            vmResponse.setCreated(vm.getCreated());\n\n            if (vm.getHostId() != null) {\n                Host host = ApiDBUtils.findHostById(vm.getHostId());\n                if (host != null) {\n                    vmResponse.setHostId(host.getUuid());\n                    vmResponse.setHostName(host.getName());\n                }\n            }\n\n            if (vm.getState() != null) {\n                vmResponse.setState(vm.getState().toString());\n            }\n\n            // for console proxies, add the active sessions\n            if (vm.getType() == Type.ConsoleProxy) {\n                ConsoleProxyVO proxy = ApiDBUtils.findConsoleProxy(vm.getId());\n                // proxy can be already destroyed\n                if (proxy != null) {\n                    vmResponse.setActiveViewerSessions(proxy.getActiveSession());\n                }\n            }\n\n            DataCenter zone = ApiDBUtils.findZoneById(vm.getDataCenterIdToDeployIn());\n            if (zone != null) {\n                vmResponse.setZoneId(zone.getUuid());\n                vmResponse.setZoneName(zone.getName());\n                vmResponse.setDns1(zone.getDns1());\n                vmResponse.setDns2(zone.getDns2());\n            }\n\n            List<NicProfile> nicProfiles = ApiDBUtils.getNics(vm);\n            for (NicProfile singleNicProfile : nicProfiles) {\n                Network network = ApiDBUtils.findNetworkById(singleNicProfile.getNetworkId());\n                if (network != null) {\n                    if (network.getTrafficType() == TrafficType.Management) {\n                        vmResponse.setPrivateIp(singleNicProfile.getIp4Address());\n                        vmResponse.setPrivateMacAddress(singleNicProfile.getMacAddress());\n                        vmResponse.setPrivateNetmask(singleNicProfile.getNetmask());\n                    } else if (network.getTrafficType() == TrafficType.Control) {\n                        vmResponse.setLinkLocalIp(singleNicProfile.getIp4Address());\n                        vmResponse.setLinkLocalMacAddress(singleNicProfile.getMacAddress());\n                        vmResponse.setLinkLocalNetmask(singleNicProfile.getNetmask());\n                    } else if (network.getTrafficType() == TrafficType.Public || network.getTrafficType() == TrafficType.Guest) {\n                        /*In basic zone, public ip has TrafficType.Guest*/\n                        vmResponse.setPublicIp(singleNicProfile.getIp4Address());\n                        vmResponse.setPublicMacAddress(singleNicProfile.getMacAddress());\n                        vmResponse.setPublicNetmask(singleNicProfile.getNetmask());\n                        vmResponse.setGateway(singleNicProfile.getGateway());\n                    }\n                }\n            }\n        }\n        vmResponse.setObjectName(\"systemvm\");\n        return vmResponse;\n    }","id":82653,"modified_method":"@Override\n    public SystemVmResponse createSystemVmResponse(VirtualMachine vm) {\n        SystemVmResponse vmResponse = new SystemVmResponse();\n        if (vm.getType() == Type.SecondaryStorageVm || vm.getType() == Type.ConsoleProxy) {\n            // SystemVm vm = (SystemVm) systemVM;\n            vmResponse.setId(vm.getUuid());\n            vmResponse.setObjectId(vm.getId());\n            vmResponse.setSystemVmType(vm.getType().toString().toLowerCase());\n\n            vmResponse.setName(vm.getHostName());\n            if ( vm.getPodIdToDeployIn() != null ){\n                HostPodVO pod = ApiDBUtils.findPodById(vm.getPodIdToDeployIn());\n                if ( pod != null ){\n            vmResponse.setPodId(pod.getUuid());\n                }\n            }\n            VMTemplateVO template = ApiDBUtils.findTemplateById(vm.getTemplateId());\n            if (template != null){\n            vmResponse.setTemplateId(template.getUuid());\n            }\n            vmResponse.setCreated(vm.getCreated());\n\n            if (vm.getHostId() != null) {\n                Host host = ApiDBUtils.findHostById(vm.getHostId());\n                if (host != null) {\n                    vmResponse.setHostId(host.getUuid());\n                    vmResponse.setHostName(host.getName());\n                }\n            }\n\n            if (vm.getState() != null) {\n                vmResponse.setState(vm.getState().toString());\n            }\n\n            // for console proxies, add the active sessions\n            if (vm.getType() == Type.ConsoleProxy) {\n                ConsoleProxyVO proxy = ApiDBUtils.findConsoleProxy(vm.getId());\n                // proxy can be already destroyed\n                if (proxy != null) {\n                    vmResponse.setActiveViewerSessions(proxy.getActiveSession());\n                }\n            }\n\n            DataCenter zone = ApiDBUtils.findZoneById(vm.getDataCenterIdToDeployIn());\n            if (zone != null) {\n                vmResponse.setZoneId(zone.getUuid());\n                vmResponse.setZoneName(zone.getName());\n                vmResponse.setDns1(zone.getDns1());\n                vmResponse.setDns2(zone.getDns2());\n            }\n\n            List<NicProfile> nicProfiles = ApiDBUtils.getNics(vm);\n            for (NicProfile singleNicProfile : nicProfiles) {\n                Network network = ApiDBUtils.findNetworkById(singleNicProfile.getNetworkId());\n                if (network != null) {\n                    if (network.getTrafficType() == TrafficType.Management) {\n                        vmResponse.setPrivateIp(singleNicProfile.getIp4Address());\n                        vmResponse.setPrivateMacAddress(singleNicProfile.getMacAddress());\n                        vmResponse.setPrivateNetmask(singleNicProfile.getNetmask());\n                    } else if (network.getTrafficType() == TrafficType.Control) {\n                        vmResponse.setLinkLocalIp(singleNicProfile.getIp4Address());\n                        vmResponse.setLinkLocalMacAddress(singleNicProfile.getMacAddress());\n                        vmResponse.setLinkLocalNetmask(singleNicProfile.getNetmask());\n                    } else if (network.getTrafficType() == TrafficType.Public || network.getTrafficType() == TrafficType.Guest) {\n                        /*In basic zone, public ip has TrafficType.Guest*/\n                        vmResponse.setPublicIp(singleNicProfile.getIp4Address());\n                        vmResponse.setPublicMacAddress(singleNicProfile.getMacAddress());\n                        vmResponse.setPublicNetmask(singleNicProfile.getNetmask());\n                        vmResponse.setGateway(singleNicProfile.getGateway());\n                    }\n                }\n            }\n        }\n        vmResponse.setObjectName(\"systemvm\");\n        return vmResponse;\n    }","commit_id":"e397f23f6b5d6ba34ad42eca95ae9d9ee43ac6a8","url":"https://github.com/apache/cloudstack"},{"original_method":"protected static boolean isAccepted(String filter,\n                                      Set<String> search,\n                                      IdeaPluginDescriptor descriptor) {\n    if (StringUtil.isEmpty(filter)) return true;\n    if (isAccepted(search, filter, descriptor.getName())) {\n      return true;\n    }\n    else {\n      final String description = descriptor.getDescription();\n      if (description != null && isAccepted(search, filter, description)) {\n        return true;\n      }\n      final String category = descriptor.getCategory();\n      if (category != null && isAccepted(search, filter, category)) {\n        return true;\n      }\n      final String changeNotes = descriptor.getChangeNotes();\n      if (changeNotes != null && isAccepted(search, filter, changeNotes)) {\n        return true;\n      }\n    }\n    return false;\n  }","id":82654,"modified_method":"protected static boolean isAccepted(@Nullable String filter, @NotNull Set<String> search, @NotNull IdeaPluginDescriptor descriptor) {\n    if (StringUtil.isEmpty(filter)) return true;\n    if (StringUtil.containsIgnoreCase(descriptor.getName(), filter) || isAccepted(search, filter, descriptor.getName())) return true;\n    if (isAccepted(search, filter, descriptor.getDescription())) return true;\n    String category = descriptor.getCategory();\n    return category != null && (StringUtil.containsIgnoreCase(category, filter) || isAccepted(search, filter, category));\n  }","commit_id":"538f104f2983ebc47740de2de9936c37a0a2b548","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static boolean isAccepted(Set<String> search, @NotNull String filter, @NotNull String description) {\n    if (StringUtil.containsIgnoreCase(description, filter)) return true;\n    Set<String> descriptionSet = new HashSet<String>(search);\n    descriptionSet.removeAll(SearchableOptionsRegistrar.getInstance().getProcessedWords(description));\n    return descriptionSet.isEmpty();\n  }","id":82655,"modified_method":"private static boolean isAccepted(@NotNull Set<String> search, @NotNull String filter, @Nullable String description) {\n    if (StringUtil.isEmpty(description)) return false;\n    if (filter.length() <= 2) return false; \n    Set<String> words = SearchableOptionsRegistrar.getInstance().getProcessedWords(description);\n    if (words.contains(filter)) return true;\n    if (search.isEmpty()) return false;\n    Set<String> descriptionSet = new HashSet<String>(search);\n    descriptionSet.removeAll(words);\n    return descriptionSet.isEmpty();\n  }","commit_id":"538f104f2983ebc47740de2de9936c37a0a2b548","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static String markup(@NonNls @NotNull String textToMarkup, @Nullable String filter) {\n    if (filter == null || filter.length() == 0) {\n      return textToMarkup;\n    }\n    int bodyStart = textToMarkup.indexOf(\"<body>\");\n    final int bodyEnd = textToMarkup.indexOf(\"<\/body>\");\n    final String head;\n    final String foot;\n    if (bodyStart >= 0) {\n      bodyStart += \"<body>\".length();\n      head = textToMarkup.substring(0, bodyStart);\n      if (bodyEnd >= 0) {\n        foot = textToMarkup.substring(bodyEnd);\n      } else {\n        foot = \"\";\n      }\n      textToMarkup = textToMarkup.substring(bodyStart, bodyEnd);\n    } else {\n      foot = \"\";\n      head = \"\";\n    }\n    final Pattern insideHtmlTagPattern = Pattern.compile(\"[<[^<>]*>]*<[^<>]*\");\n    final SearchableOptionsRegistrar registrar = SearchableOptionsRegistrar.getInstance();\n    final HashSet<String> quoted = new HashSet<String>();\n    filter = processFilter(quoteStrictOccurrences(textToMarkup, filter), quoted);\n    final Set<String> options = registrar.getProcessedWords(filter);\n    final Set<String> words = registrar.getProcessedWords(textToMarkup);\n    for (String option : options) {\n      if (words.contains(option)) {\n        textToMarkup = markup(textToMarkup, insideHtmlTagPattern, option);\n      }\n    }\n    for (String stripped : quoted) {\n      textToMarkup = markup(textToMarkup, insideHtmlTagPattern, stripped);\n    }\n    return head + textToMarkup + foot;\n  }","id":82656,"modified_method":"public static String markup(@NonNls @NotNull String textToMarkup, @Nullable String filter) {\n    if (filter == null || filter.length() == 0) {\n      return textToMarkup;\n    }\n    int bodyStart = textToMarkup.indexOf(\"<body>\");\n    final int bodyEnd = textToMarkup.indexOf(\"<\/body>\");\n    final String head;\n    final String foot;\n    if (bodyStart >= 0) {\n      bodyStart += \"<body>\".length();\n      head = textToMarkup.substring(0, bodyStart);\n      if (bodyEnd >= 0) {\n        foot = textToMarkup.substring(bodyEnd);\n      } else {\n        foot = \"\";\n      }\n      textToMarkup = textToMarkup.substring(bodyStart, bodyEnd);\n    } else {\n      foot = \"\";\n      head = \"\";\n    }\n    final Pattern insideHtmlTagPattern = Pattern.compile(\"[<[^<>]*>]*<[^<>]*\");\n    final SearchableOptionsRegistrar registrar = SearchableOptionsRegistrar.getInstance();\n    final HashSet<String> quoted = new HashSet<String>();\n    filter = processFilter(quoteStrictOccurrences(textToMarkup, filter), quoted);\n    final Set<String> options = registrar.getProcessedWords(filter);\n    final Set<String> words = registrar.getProcessedWords(textToMarkup);\n    for (String option : options) {\n      if (words.contains(option)) {\n        textToMarkup = markup(textToMarkup, insideHtmlTagPattern, option);\n      }\n    }\n    for (String stripped : quoted) {\n      if (registrar.isStopWord(stripped)) continue;\n      textToMarkup = markup(textToMarkup, insideHtmlTagPattern, stripped);\n    }\n    return head + textToMarkup + foot;\n  }","commit_id":"538f104f2983ebc47740de2de9936c37a0a2b548","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static String markup(@NonNls String textToMarkup, final Pattern insideHtmlTagPattern, final String option) {\n    @NonNls String result = \"\";\n    final int styleIdx = textToMarkup.indexOf(\"<style\");\n    final int styleEndIdx = textToMarkup.indexOf(\"<\/style>\");\n    if (styleIdx < 0 || styleEndIdx < 0) {\n      result = markupInText(textToMarkup, insideHtmlTagPattern, option);\n    } else {\n      result = markup(textToMarkup.substring(0, styleIdx), insideHtmlTagPattern, option) + markup(textToMarkup.substring(styleEndIdx + STYLE_END.length()), insideHtmlTagPattern, option);\n    }\n    return result;\n  }","id":82657,"modified_method":"private static String markup(@NonNls String textToMarkup, final Pattern insideHtmlTagPattern, final String option) {\n    final int styleIdx = textToMarkup.indexOf(\"<style\");\n    final int styleEndIdx = textToMarkup.indexOf(\"<\/style>\");\n    if (styleIdx < 0 || styleEndIdx < 0) {\n      return markupInText(textToMarkup, insideHtmlTagPattern, option);\n    }\n    return  markup(textToMarkup.substring(0, styleIdx), insideHtmlTagPattern, option) + markup(textToMarkup.substring(styleEndIdx + STYLE_END.length()), insideHtmlTagPattern, option);\n  }","commit_id":"538f104f2983ebc47740de2de9936c37a0a2b548","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Test\n  public void insert() {\n    db.prepareDbUnit(getClass(), \"insert.xml\");\n    dbSession.commit();\n\n    dao.insert(dbSession, new DuplicationUnitDto()\n      .setProjectSnapshotId(1)\n      .setSnapshotId(2)\n      .setHash(\"bb\")\n      .setIndexInFile(0)\n      .setStartLine(1)\n      .setEndLine(2));\n    dbSession.commit();\n\n    db.assertDbUnit(getClass(), \"insert-result.xml\", \"duplications_index\");\n  }","id":82658,"modified_method":"@Test\n  public void insert() {\n    db.prepareDbUnit(getClass(), \"insert.xml\");\n    dbSession.commit();\n\n    dao.insert(dbSession, new DuplicationUnitDto()\n      .setProjectSnapshotId(1)\n      .setSnapshotId(2)\n      .setComponentUuid(\"uuid_1\")\n      .setHash(\"bb\")\n      .setIndexInFile(0)\n      .setStartLine(1)\n      .setEndLine(2));\n    dbSession.commit();\n\n    db.assertDbUnit(getClass(), \"insert-result.xml\", \"duplications_index\");\n  }","commit_id":"3bebc5fffefe706a322110a76d6098d04aad6e79","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void select_candidates() {\n    db.prepareDbUnit(getClass(), \"select_candidates.xml\");\n    dbSession.commit();\n\n    List<DuplicationUnitDto> blocks = dao.selectCandidates(dbSession, 7L, \"java\", singletonList(\"aa\"));\n    assertThat(blocks).hasSize(1);\n\n    DuplicationUnitDto block = blocks.get(0);\n    assertThat(block.getComponentKey()).isEqualTo(\"bar-last\");\n    assertThat(block.getHash()).isEqualTo(\"aa\");\n    assertThat(block.getIndexInFile()).isEqualTo(0);\n    assertThat(block.getStartLine()).isEqualTo(1);\n    assertThat(block.getEndLine()).isEqualTo(2);\n\n    // check null for lastSnapshotId\n    blocks = dao.selectCandidates(dbSession, null, \"java\", singletonList(\"aa\"));\n    assertThat(blocks).hasSize(2);\n  }","id":82659,"modified_method":"@Test\n  public void select_candidates() {\n    db.prepareDbUnit(getClass(), \"select_candidates.xml\");\n    dbSession.commit();\n\n    List<DuplicationUnitDto> blocks = dao.selectCandidates(dbSession, 7L, \"java\", singletonList(\"aa\"));\n    assertThat(blocks).hasSize(1);\n\n    DuplicationUnitDto block = blocks.get(0);\n    assertThat(block.getComponentKey()).isEqualTo(\"bar-last\");\n    assertThat(block.getComponentUuid()).isEqualTo(\"uuid_2\");\n    assertThat(block.getHash()).isEqualTo(\"aa\");\n    assertThat(block.getIndexInFile()).isEqualTo(0);\n    assertThat(block.getStartLine()).isEqualTo(1);\n    assertThat(block.getEndLine()).isEqualTo(2);\n\n    // check null for lastSnapshotId\n    blocks = dao.selectCandidates(dbSession, null, \"java\", singletonList(\"aa\"));\n    assertThat(blocks).hasSize(2);\n  }","commit_id":"3bebc5fffefe706a322110a76d6098d04aad6e79","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void nothing_to_do_when_cross_project_duplication_is_disabled() throws Exception {\n    when(crossProjectDuplicationStatusHolder.isEnabled()).thenReturn(false);\n    analysisMetadataHolder.setBaseProjectSnapshot(baseProjectSnapshot);\n\n    ComponentDto otherProject = createProject(\"OTHER_PROJECT_KEY\");\n    SnapshotDto otherProjectSnapshot = createProjectSnapshot(otherProject);\n\n    ComponentDto otherFIle = createFile(\"OTHER_FILE_KEY\", otherProject);\n    SnapshotDto otherFileSnapshot = createFileSnapshot(otherFIle, otherProjectSnapshot);\n\n    String hash = \"a8998353e96320ec\";\n    DuplicationUnitDto duplicate = new DuplicationUnitDto()\n      .setHash(hash)\n      .setStartLine(40)\n      .setEndLine(55)\n      .setIndexInFile(0)\n      .setProjectSnapshotId(otherProjectSnapshot.getId())\n      .setSnapshotId(otherFileSnapshot.getId());\n    dbClient.duplicationDao().insert(dbSession, duplicate);\n    dbSession.commit();\n\n    ScannerReport.CpdTextBlock originBlock = ScannerReport.CpdTextBlock.newBuilder()\n      .setHash(hash)\n      .setStartLine(30)\n      .setEndLine(45)\n      .setStartTokenIndex(0)\n      .setEndTokenIndex(10)\n      .build();\n    batchReportReader.putDuplicationBlocks(FILE_REF, asList(originBlock));\n\n    underTest.execute();\n\n    verifyZeroInteractions(integrateCrossProjectDuplications);\n  }","id":82660,"modified_method":"@Test\n  public void nothing_to_do_when_cross_project_duplication_is_disabled() throws Exception {\n    when(crossProjectDuplicationStatusHolder.isEnabled()).thenReturn(false);\n    analysisMetadataHolder.setBaseProjectSnapshot(baseProjectSnapshot);\n\n    ComponentDto otherProject = createProject(\"OTHER_PROJECT_KEY\");\n    SnapshotDto otherProjectSnapshot = createProjectSnapshot(otherProject);\n\n    ComponentDto otherFIle = createFile(\"OTHER_FILE_KEY\", otherProject);\n    SnapshotDto otherFileSnapshot = createFileSnapshot(otherFIle, otherProjectSnapshot);\n\n    String hash = \"a8998353e96320ec\";\n    DuplicationUnitDto duplicate = new DuplicationUnitDto()\n      .setHash(hash)\n      .setStartLine(40)\n      .setEndLine(55)\n      .setIndexInFile(0)\n      .setProjectSnapshotId(otherProjectSnapshot.getId())\n      .setSnapshotId(otherFileSnapshot.getId())\n      .setComponentUuid(otherFileSnapshot.getComponentUuid());\n    dbClient.duplicationDao().insert(dbSession, duplicate);\n    dbSession.commit();\n\n    ScannerReport.CpdTextBlock originBlock = ScannerReport.CpdTextBlock.newBuilder()\n      .setHash(hash)\n      .setStartLine(30)\n      .setEndLine(45)\n      .setStartTokenIndex(0)\n      .setEndTokenIndex(10)\n      .build();\n    batchReportReader.putDuplicationBlocks(FILE_REF, asList(originBlock));\n\n    underTest.execute();\n\n    verifyZeroInteractions(integrateCrossProjectDuplications);\n  }","commit_id":"3bebc5fffefe706a322110a76d6098d04aad6e79","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void call_compute_cpd_on_many_duplication() throws Exception {\n    when(crossProjectDuplicationStatusHolder.isEnabled()).thenReturn(true);\n    analysisMetadataHolder.setBaseProjectSnapshot(baseProjectSnapshot);\n\n    ComponentDto otherProject = createProject(\"OTHER_PROJECT_KEY\");\n    SnapshotDto otherProjectSnapshot = createProjectSnapshot(otherProject);\n\n    ComponentDto otherFIle = createFile(\"OTHER_FILE_KEY\", otherProject);\n    SnapshotDto otherFileSnapshot = createFileSnapshot(otherFIle, otherProjectSnapshot);\n\n    ScannerReport.CpdTextBlock originBlock1 = ScannerReport.CpdTextBlock.newBuilder()\n      .setHash(\"a8998353e96320ec\")\n      .setStartLine(30)\n      .setEndLine(45)\n      .setStartTokenIndex(0)\n      .setEndTokenIndex(10)\n      .build();\n    ScannerReport.CpdTextBlock originBlock2 = ScannerReport.CpdTextBlock.newBuilder()\n      .setHash(\"b1234353e96320ff\")\n      .setStartLine(10)\n      .setEndLine(25)\n      .setStartTokenIndex(5)\n      .setEndTokenIndex(15)\n      .build();\n    batchReportReader.putDuplicationBlocks(FILE_REF, asList(originBlock1, originBlock2));\n\n    DuplicationUnitDto duplicate1 = new DuplicationUnitDto()\n      .setHash(originBlock1.getHash())\n      .setStartLine(40)\n      .setEndLine(55)\n      .setIndexInFile(0)\n      .setProjectSnapshotId(otherProjectSnapshot.getId())\n      .setSnapshotId(otherFileSnapshot.getId());\n\n    DuplicationUnitDto duplicate2 = new DuplicationUnitDto()\n      .setHash(originBlock2.getHash())\n      .setStartLine(20)\n      .setEndLine(35)\n      .setIndexInFile(1)\n      .setProjectSnapshotId(otherProjectSnapshot.getId())\n      .setSnapshotId(otherFileSnapshot.getId());\n    dbClient.duplicationDao().insert(dbSession, duplicate1);\n    dbClient.duplicationDao().insert(dbSession, duplicate2);\n    dbSession.commit();\n\n    underTest.execute();\n\n    Class<ArrayList<Block>> listClass = (Class<ArrayList<Block>>) (Class) ArrayList.class;\n    ArgumentCaptor<ArrayList<Block>> originBlocks = ArgumentCaptor.forClass(listClass);\n    ArgumentCaptor<ArrayList<Block>> duplicationBlocks = ArgumentCaptor.forClass(listClass);\n\n    verify(integrateCrossProjectDuplications).computeCpd(eq(CURRENT_FILE), originBlocks.capture(), duplicationBlocks.capture());\n\n    Map<Integer, Block> originBlocksByIndex = blocksByIndexInFile(originBlocks.getValue());\n    assertThat(originBlocksByIndex.get(0)).isEqualTo(\n      new Block.Builder()\n        .setResourceId(CURRENT_FILE_KEY)\n        .setBlockHash(new ByteArray(originBlock1.getHash()))\n        .setIndexInFile(0)\n        .setLines(originBlock1.getStartLine(), originBlock1.getEndLine())\n        .setUnit(originBlock1.getStartTokenIndex(), originBlock1.getEndTokenIndex())\n        .build()\n      );\n    assertThat(originBlocksByIndex.get(1)).isEqualTo(\n      new Block.Builder()\n        .setResourceId(CURRENT_FILE_KEY)\n        .setBlockHash(new ByteArray(originBlock2.getHash()))\n        .setIndexInFile(1)\n        .setLines(originBlock2.getStartLine(), originBlock2.getEndLine())\n        .setUnit(originBlock2.getStartTokenIndex(), originBlock2.getEndTokenIndex())\n        .build()\n      );\n\n    Map<Integer, Block> duplicationBlocksByIndex = blocksByIndexInFile(duplicationBlocks.getValue());\n    assertThat(duplicationBlocksByIndex.get(0)).isEqualTo(\n      new Block.Builder()\n        .setResourceId(otherFIle.getKey())\n        .setBlockHash(new ByteArray(originBlock1.getHash()))\n        .setIndexInFile(duplicate1.getIndexInFile())\n        .setLines(duplicate1.getStartLine(), duplicate1.getEndLine())\n        .build()\n      );\n    assertThat(duplicationBlocksByIndex.get(1)).isEqualTo(\n      new Block.Builder()\n        .setResourceId(otherFIle.getKey())\n        .setBlockHash(new ByteArray(originBlock2.getHash()))\n        .setIndexInFile(duplicate2.getIndexInFile())\n        .setLines(duplicate2.getStartLine(), duplicate2.getEndLine())\n        .build()\n      );\n  }","id":82661,"modified_method":"@Test\n  public void call_compute_cpd_on_many_duplication() throws Exception {\n    when(crossProjectDuplicationStatusHolder.isEnabled()).thenReturn(true);\n    analysisMetadataHolder.setBaseProjectSnapshot(baseProjectSnapshot);\n\n    ComponentDto otherProject = createProject(\"OTHER_PROJECT_KEY\");\n    SnapshotDto otherProjectSnapshot = createProjectSnapshot(otherProject);\n\n    ComponentDto otherFIle = createFile(\"OTHER_FILE_KEY\", otherProject);\n    SnapshotDto otherFileSnapshot = createFileSnapshot(otherFIle, otherProjectSnapshot);\n\n    ScannerReport.CpdTextBlock originBlock1 = ScannerReport.CpdTextBlock.newBuilder()\n      .setHash(\"a8998353e96320ec\")\n      .setStartLine(30)\n      .setEndLine(45)\n      .setStartTokenIndex(0)\n      .setEndTokenIndex(10)\n      .build();\n    ScannerReport.CpdTextBlock originBlock2 = ScannerReport.CpdTextBlock.newBuilder()\n      .setHash(\"b1234353e96320ff\")\n      .setStartLine(10)\n      .setEndLine(25)\n      .setStartTokenIndex(5)\n      .setEndTokenIndex(15)\n      .build();\n    batchReportReader.putDuplicationBlocks(FILE_REF, asList(originBlock1, originBlock2));\n\n    DuplicationUnitDto duplicate1 = new DuplicationUnitDto()\n      .setHash(originBlock1.getHash())\n      .setStartLine(40)\n      .setEndLine(55)\n      .setIndexInFile(0)\n      .setProjectSnapshotId(otherProjectSnapshot.getId())\n      .setSnapshotId(otherFileSnapshot.getId())\n      .setComponentUuid(otherFileSnapshot.getComponentUuid());\n\n    DuplicationUnitDto duplicate2 = new DuplicationUnitDto()\n      .setHash(originBlock2.getHash())\n      .setStartLine(20)\n      .setEndLine(35)\n      .setIndexInFile(1)\n      .setProjectSnapshotId(otherProjectSnapshot.getId())\n      .setSnapshotId(otherFileSnapshot.getId())\n      .setComponentUuid(otherFileSnapshot.getComponentUuid());\n    dbClient.duplicationDao().insert(dbSession, duplicate1);\n    dbClient.duplicationDao().insert(dbSession, duplicate2);\n    dbSession.commit();\n\n    underTest.execute();\n\n    Class<ArrayList<Block>> listClass = (Class<ArrayList<Block>>) (Class) ArrayList.class;\n    ArgumentCaptor<ArrayList<Block>> originBlocks = ArgumentCaptor.forClass(listClass);\n    ArgumentCaptor<ArrayList<Block>> duplicationBlocks = ArgumentCaptor.forClass(listClass);\n\n    verify(integrateCrossProjectDuplications).computeCpd(eq(CURRENT_FILE), originBlocks.capture(), duplicationBlocks.capture());\n\n    Map<Integer, Block> originBlocksByIndex = blocksByIndexInFile(originBlocks.getValue());\n    assertThat(originBlocksByIndex.get(0)).isEqualTo(\n      new Block.Builder()\n        .setResourceId(CURRENT_FILE_KEY)\n        .setBlockHash(new ByteArray(originBlock1.getHash()))\n        .setIndexInFile(0)\n        .setLines(originBlock1.getStartLine(), originBlock1.getEndLine())\n        .setUnit(originBlock1.getStartTokenIndex(), originBlock1.getEndTokenIndex())\n        .build());\n    assertThat(originBlocksByIndex.get(1)).isEqualTo(\n      new Block.Builder()\n        .setResourceId(CURRENT_FILE_KEY)\n        .setBlockHash(new ByteArray(originBlock2.getHash()))\n        .setIndexInFile(1)\n        .setLines(originBlock2.getStartLine(), originBlock2.getEndLine())\n        .setUnit(originBlock2.getStartTokenIndex(), originBlock2.getEndTokenIndex())\n        .build());\n\n    Map<Integer, Block> duplicationBlocksByIndex = blocksByIndexInFile(duplicationBlocks.getValue());\n    assertThat(duplicationBlocksByIndex.get(0)).isEqualTo(\n      new Block.Builder()\n        .setResourceId(otherFIle.getKey())\n        .setBlockHash(new ByteArray(originBlock1.getHash()))\n        .setIndexInFile(duplicate1.getIndexInFile())\n        .setLines(duplicate1.getStartLine(), duplicate1.getEndLine())\n        .build());\n    assertThat(duplicationBlocksByIndex.get(1)).isEqualTo(\n      new Block.Builder()\n        .setResourceId(otherFIle.getKey())\n        .setBlockHash(new ByteArray(originBlock2.getHash()))\n        .setIndexInFile(duplicate2.getIndexInFile())\n        .setLines(duplicate2.getStartLine(), duplicate2.getEndLine())\n        .build());\n  }","commit_id":"3bebc5fffefe706a322110a76d6098d04aad6e79","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void call_compute_cpd_on_one_duplication() throws Exception {\n    when(crossProjectDuplicationStatusHolder.isEnabled()).thenReturn(true);\n    analysisMetadataHolder.setBaseProjectSnapshot(baseProjectSnapshot);\n\n    ComponentDto otherProject = createProject(\"OTHER_PROJECT_KEY\");\n    SnapshotDto otherProjectSnapshot = createProjectSnapshot(otherProject);\n\n    ComponentDto otherFIle = createFile(\"OTHER_FILE_KEY\", otherProject);\n    SnapshotDto otherFileSnapshot = createFileSnapshot(otherFIle, otherProjectSnapshot);\n\n    String hash = \"a8998353e96320ec\";\n    DuplicationUnitDto duplicate = new DuplicationUnitDto()\n      .setHash(hash)\n      .setStartLine(40)\n      .setEndLine(55)\n      .setIndexInFile(0)\n      .setProjectSnapshotId(otherProjectSnapshot.getId())\n      .setSnapshotId(otherFileSnapshot.getId());\n    dbClient.duplicationDao().insert(dbSession, duplicate);\n    dbSession.commit();\n\n    ScannerReport.CpdTextBlock originBlock = ScannerReport.CpdTextBlock.newBuilder()\n      .setHash(hash)\n      .setStartLine(30)\n      .setEndLine(45)\n      .setStartTokenIndex(0)\n      .setEndTokenIndex(10)\n      .build();\n    batchReportReader.putDuplicationBlocks(FILE_REF, asList(originBlock));\n\n    underTest.execute();\n\n    verify(integrateCrossProjectDuplications).computeCpd(CURRENT_FILE,\n      Arrays.asList(\n        new Block.Builder()\n          .setResourceId(CURRENT_FILE_KEY)\n          .setBlockHash(new ByteArray(hash))\n          .setIndexInFile(0)\n          .setLines(originBlock.getStartLine(), originBlock.getEndLine())\n          .setUnit(originBlock.getStartTokenIndex(), originBlock.getEndTokenIndex())\n          .build()\n        ),\n      Arrays.asList(\n        new Block.Builder()\n          .setResourceId(otherFIle.getKey())\n          .setBlockHash(new ByteArray(hash))\n          .setIndexInFile(duplicate.getIndexInFile())\n          .setLines(duplicate.getStartLine(), duplicate.getEndLine())\n          .build()\n        )\n      );\n  }","id":82662,"modified_method":"@Test\n  public void call_compute_cpd_on_one_duplication() throws Exception {\n    when(crossProjectDuplicationStatusHolder.isEnabled()).thenReturn(true);\n    analysisMetadataHolder.setBaseProjectSnapshot(baseProjectSnapshot);\n\n    ComponentDto otherProject = createProject(\"OTHER_PROJECT_KEY\");\n    SnapshotDto otherProjectSnapshot = createProjectSnapshot(otherProject);\n\n    ComponentDto otherFIle = createFile(\"OTHER_FILE_KEY\", otherProject);\n    SnapshotDto otherFileSnapshot = createFileSnapshot(otherFIle, otherProjectSnapshot);\n\n    String hash = \"a8998353e96320ec\";\n    DuplicationUnitDto duplicate = new DuplicationUnitDto()\n      .setHash(hash)\n      .setStartLine(40)\n      .setEndLine(55)\n      .setIndexInFile(0)\n      .setProjectSnapshotId(otherProjectSnapshot.getId())\n      .setSnapshotId(otherFileSnapshot.getId())\n      .setComponentUuid(otherFileSnapshot.getComponentUuid());\n    dbClient.duplicationDao().insert(dbSession, duplicate);\n    dbSession.commit();\n\n    ScannerReport.CpdTextBlock originBlock = ScannerReport.CpdTextBlock.newBuilder()\n      .setHash(hash)\n      .setStartLine(30)\n      .setEndLine(45)\n      .setStartTokenIndex(0)\n      .setEndTokenIndex(10)\n      .build();\n    batchReportReader.putDuplicationBlocks(FILE_REF, asList(originBlock));\n\n    underTest.execute();\n\n    verify(integrateCrossProjectDuplications).computeCpd(CURRENT_FILE,\n      Arrays.asList(\n        new Block.Builder()\n          .setResourceId(CURRENT_FILE_KEY)\n          .setBlockHash(new ByteArray(hash))\n          .setIndexInFile(0)\n          .setLines(originBlock.getStartLine(), originBlock.getEndLine())\n          .setUnit(originBlock.getStartTokenIndex(), originBlock.getEndTokenIndex())\n          .build()),\n      Arrays.asList(\n        new Block.Builder()\n          .setResourceId(otherFIle.getKey())\n          .setBlockHash(new ByteArray(hash))\n          .setIndexInFile(duplicate.getIndexInFile())\n          .setLines(duplicate.getStartLine(), duplicate.getEndLine())\n          .build()));\n  }","commit_id":"3bebc5fffefe706a322110a76d6098d04aad6e79","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private void visitComponent(Component component) {\n      int indexInFile = 0;\n      CloseableIterator<ScannerReport.CpdTextBlock> blocks = reportReader.readCpdTextBlocks(component.getReportAttributes().getRef());\n      try {\n        while (blocks.hasNext()) {\n          ScannerReport.CpdTextBlock block = blocks.next();\n          dbClient.duplicationDao().insert(\n            session,\n            new DuplicationUnitDto()\n              .setHash(block.getHash())\n              .setStartLine(block.getStartLine())\n              .setEndLine(block.getEndLine())\n              .setIndexInFile(indexInFile)\n              .setSnapshotId(dbIdsRepository.getSnapshotId(component))\n              .setProjectSnapshotId(projectSnapshotId)\n            );\n          indexInFile++;\n        }\n      } finally {\n        blocks.close();\n      }\n    }","id":82663,"modified_method":"private void visitComponent(Component component) {\n      int indexInFile = 0;\n      CloseableIterator<ScannerReport.CpdTextBlock> blocks = reportReader.readCpdTextBlocks(component.getReportAttributes().getRef());\n      try {\n        while (blocks.hasNext()) {\n          ScannerReport.CpdTextBlock block = blocks.next();\n          dbClient.duplicationDao().insert(\n            session,\n            new DuplicationUnitDto()\n              .setHash(block.getHash())\n              .setStartLine(block.getStartLine())\n              .setEndLine(block.getEndLine())\n              .setIndexInFile(indexInFile)\n              .setSnapshotId(dbIdsRepository.getSnapshotId(component))\n              .setComponentUuid(component.getUuid())\n              .setProjectSnapshotId(projectSnapshotId));\n          indexInFile++;\n        }\n      } finally {\n        blocks.close();\n      }\n    }","commit_id":"3bebc5fffefe706a322110a76d6098d04aad6e79","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void persist_cpd_text_block() throws Exception {\n    when(crossProjectDuplicationStatusHolder.isEnabled()).thenReturn(true);\n    reportReader.putDuplicationBlocks(FILE_REF, singletonList(CPD_TEXT_BLOCK));\n\n    underTest.execute();\n\n    Map<String, Object> dto = dbTester.selectFirst(\"select hash as \\\"hash\\\", start_line as \\\"startLine\\\", end_line as \\\"endLine\\\", index_in_file as \\\"indexInFile\\\", \" +\n      \"snapshot_id as \\\"snapshotId\\\", project_snapshot_id as \\\"projectSnapshotId\\\" from duplications_index\");\n    assertThat(dto.get(\"hash\")).isEqualTo(CPD_TEXT_BLOCK.getHash());\n    assertThat(dto.get(\"startLine\")).isEqualTo(30L);\n    assertThat(dto.get(\"endLine\")).isEqualTo(45L);\n    assertThat(dto.get(\"indexInFile\")).isEqualTo(0L);\n    assertThat(dto.get(\"snapshotId\")).isEqualTo(FILE_SNAPSHOT_ID);\n    assertThat(dto.get(\"projectSnapshotId\")).isEqualTo(PROJECT_SNAPSHOT_ID);\n  }","id":82664,"modified_method":"@Test\n  public void persist_cpd_text_block() throws Exception {\n    when(crossProjectDuplicationStatusHolder.isEnabled()).thenReturn(true);\n    reportReader.putDuplicationBlocks(FILE_REF, singletonList(CPD_TEXT_BLOCK));\n\n    underTest.execute();\n\n    Map<String, Object> dto = dbTester.selectFirst(\"select hash as \\\"hash\\\", start_line as \\\"startLine\\\", end_line as \\\"endLine\\\", index_in_file as \\\"indexInFile\\\", \" +\n      \"snapshot_id as \\\"snapshotId\\\", component_uuid as \\\"componentUuid\\\", project_snapshot_id as \\\"projectSnapshotId\\\" from duplications_index\");\n    assertThat(dto.get(\"hash\")).isEqualTo(CPD_TEXT_BLOCK.getHash());\n    assertThat(dto.get(\"startLine\")).isEqualTo(30L);\n    assertThat(dto.get(\"endLine\")).isEqualTo(45L);\n    assertThat(dto.get(\"indexInFile\")).isEqualTo(0L);\n    assertThat(dto.get(\"snapshotId\")).isEqualTo(FILE_SNAPSHOT_ID);\n    assertThat(dto.get(\"componentUuid\")).isEqualTo(FILE.getUuid());\n    assertThat(dto.get(\"projectSnapshotId\")).isEqualTo(PROJECT_SNAPSHOT_ID);\n  }","commit_id":"3bebc5fffefe706a322110a76d6098d04aad6e79","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void persist_many_cpd_text_blocks() throws Exception {\n    when(crossProjectDuplicationStatusHolder.isEnabled()).thenReturn(true);\n    reportReader.putDuplicationBlocks(FILE_REF, Arrays.asList(\n      CPD_TEXT_BLOCK,\n      ScannerReport.CpdTextBlock.newBuilder()\n        .setHash(\"b1234353e96320ff\")\n        .setStartLine(20)\n        .setEndLine(15)\n        .build()));\n\n    underTest.execute();\n\n    List<Map<String, Object>> dtos = dbTester.select(\"select hash as \\\"hash\\\", start_line as \\\"startLine\\\", end_line as \\\"endLine\\\", index_in_file as \\\"indexInFile\\\", \" +\n      \"snapshot_id as \\\"snapshotId\\\", project_snapshot_id as \\\"projectSnapshotId\\\" from duplications_index\");\n    assertThat(dtos).extracting(\"hash\").containsOnly(CPD_TEXT_BLOCK.getHash(), \"b1234353e96320ff\");\n    assertThat(dtos).extracting(\"startLine\").containsOnly(30L, 20L);\n    assertThat(dtos).extracting(\"endLine\").containsOnly(45L, 15L);\n    assertThat(dtos).extracting(\"indexInFile\").containsOnly(0L, 1L);\n    assertThat(dtos).extracting(\"snapshotId\").containsOnly(FILE_SNAPSHOT_ID);\n    assertThat(dtos).extracting(\"projectSnapshotId\").containsOnly(PROJECT_SNAPSHOT_ID);\n  }","id":82665,"modified_method":"@Test\n  public void persist_many_cpd_text_blocks() throws Exception {\n    when(crossProjectDuplicationStatusHolder.isEnabled()).thenReturn(true);\n    reportReader.putDuplicationBlocks(FILE_REF, Arrays.asList(\n      CPD_TEXT_BLOCK,\n      ScannerReport.CpdTextBlock.newBuilder()\n        .setHash(\"b1234353e96320ff\")\n        .setStartLine(20)\n        .setEndLine(15)\n        .build()));\n\n    underTest.execute();\n\n    List<Map<String, Object>> dtos = dbTester.select(\"select hash as \\\"hash\\\", start_line as \\\"startLine\\\", end_line as \\\"endLine\\\", index_in_file as \\\"indexInFile\\\", \" +\n      \"snapshot_id as \\\"snapshotId\\\", component_uuid as \\\"componentUuid\\\", project_snapshot_id as \\\"projectSnapshotId\\\" from duplications_index\");\n    assertThat(dtos).extracting(\"hash\").containsOnly(CPD_TEXT_BLOCK.getHash(), \"b1234353e96320ff\");\n    assertThat(dtos).extracting(\"startLine\").containsOnly(30L, 20L);\n    assertThat(dtos).extracting(\"endLine\").containsOnly(45L, 15L);\n    assertThat(dtos).extracting(\"indexInFile\").containsOnly(0L, 1L);\n    assertThat(dtos).extracting(\"snapshotId\").containsOnly(FILE_SNAPSHOT_ID);\n    assertThat(dtos).extracting(\"componentUuid\").containsOnly(FILE.getUuid());\n    assertThat(dtos).extracting(\"projectSnapshotId\").containsOnly(PROJECT_SNAPSHOT_ID);\n  }","commit_id":"3bebc5fffefe706a322110a76d6098d04aad6e79","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n\tpublic int doStartTag() {\n\t\tHttpServletRequest request =\n\t\t\t(HttpServletRequest)pageContext.getRequest();\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)request.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tif (themeDisplay == null) {\n\t\t\treturn SKIP_BODY;\n\t\t}\n\n\t\tpageContext.setAttribute(\"themeDisplay\", themeDisplay);\n\t\tpageContext.setAttribute(\"company\", themeDisplay.getCompany());\n\t\tpageContext.setAttribute(\"account\", themeDisplay.getAccount());\n\t\tpageContext.setAttribute(\"user\", themeDisplay.getUser());\n\t\tpageContext.setAttribute(\"realUser\", themeDisplay.getRealUser());\n\t\tpageContext.setAttribute(\"contact\", themeDisplay.getContact());\n\n\t\tif (themeDisplay.getLayout() != null) {\n\t\t\tpageContext.setAttribute(\"layout\", themeDisplay.getLayout());\n\t\t}\n\n\t\tif (themeDisplay.getLayouts() != null) {\n\t\t\tpageContext.setAttribute(\"layouts\", themeDisplay.getLayouts());\n\t\t}\n\n\t\tpageContext.setAttribute(\"plid\", new Long(themeDisplay.getPlid()));\n\n\t\tif (themeDisplay.getLayoutTypePortlet() != null) {\n\t\t\tpageContext.setAttribute(\n\t\t\t\t\"layoutTypePortlet\", themeDisplay.getLayoutTypePortlet());\n\t\t}\n\n\t\tpageContext.setAttribute(\n\t\t\t\"scopeGroupId\", new Long(themeDisplay.getScopeGroupId()));\n\t\tpageContext.setAttribute(\n\t\t\t\"permissionChecker\", themeDisplay.getPermissionChecker());\n\t\tpageContext.setAttribute(\"locale\", themeDisplay.getLocale());\n\t\tpageContext.setAttribute(\"timeZone\", themeDisplay.getTimeZone());\n\t\tpageContext.setAttribute(\"theme\", themeDisplay.getTheme());\n\t\tpageContext.setAttribute(\"colorScheme\", themeDisplay.getColorScheme());\n\t\tpageContext.setAttribute(\n\t\t\t\"portletDisplay\", themeDisplay.getPortletDisplay());\n\n\t\t// Deprecated\n\n\t\tpageContext.setAttribute(\n\t\t\t\"portletGroupId\", new Long(themeDisplay.getScopeGroupId()));\n\n\t\treturn SKIP_BODY;\n\t}","id":82666,"modified_method":"@Override\n\tpublic int doStartTag() {\n\t\tHttpServletRequest request =\n\t\t\t(HttpServletRequest)pageContext.getRequest();\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)request.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tif (themeDisplay == null) {\n\t\t\treturn SKIP_BODY;\n\t\t}\n\n\t\tpageContext.setAttribute(\"themeDisplay\", themeDisplay);\n\t\tpageContext.setAttribute(\"company\", themeDisplay.getCompany());\n\t\tpageContext.setAttribute(\"account\", themeDisplay.getAccount());\n\t\tpageContext.setAttribute(\"user\", themeDisplay.getUser());\n\t\tpageContext.setAttribute(\"realUser\", themeDisplay.getRealUser());\n\t\tpageContext.setAttribute(\"contact\", themeDisplay.getContact());\n\n\t\tif (themeDisplay.getLayout() != null) {\n\t\t\tpageContext.setAttribute(\"layout\", themeDisplay.getLayout());\n\t\t}\n\n\t\tif (themeDisplay.getLayouts() != null) {\n\t\t\tpageContext.setAttribute(\"layouts\", themeDisplay.getLayouts());\n\t\t}\n\n\t\tpageContext.setAttribute(\"plid\", new Long(themeDisplay.getPlid()));\n\n\t\tif (themeDisplay.getLayoutTypePortlet() != null) {\n\t\t\tpageContext.setAttribute(\n\t\t\t\t\"layoutTypePortlet\", themeDisplay.getLayoutTypePortlet());\n\t\t}\n\n\t\tpageContext.setAttribute(\n\t\t\t\"scopeGroupId\", new Long(themeDisplay.getScopeGroupId()));\n\t\tpageContext.setAttribute(\n\t\t\t\"permissionChecker\", themeDisplay.getPermissionChecker());\n\t\tpageContext.setAttribute(\"locale\", themeDisplay.getLocale());\n\t\tpageContext.setAttribute(\"timeZone\", themeDisplay.getTimeZone());\n\t\tpageContext.setAttribute(\"theme\", themeDisplay.getTheme());\n\t\tpageContext.setAttribute(\"colorScheme\", themeDisplay.getColorScheme());\n\n\t\tPortletDisplay portletDisplay = themeDisplay.getPortletDisplay();\n\n\t\tpageContext.setAttribute(\"portletDisplay\", portletDisplay);\n\n\t\tString portletId = portletDisplay.getId();\n\n\t\ttry {\n\t\t\tPortletSettings portletCompanyPortletSettings =\n\t\t\t\tPortletSettingsFactoryUtil.getCompanyPortletSettings(\n\t\t\t\t\tthemeDisplay.getCompanyId(), portletId);\n\n\t\t\tpageContext.setAttribute(\n\t\t\t\t\"portletCompanyPortletSettings\", portletCompanyPortletSettings);\n\n\t\t\tPortletSettings portletInstancePortletSettings =\n\t\t\t\tPortletSettingsFactoryUtil.getPortletInstancePortletSettings(\n\t\t\t\t\tthemeDisplay.getLayout(), portletId);\n\n\t\t\tpageContext.setAttribute(\n\t\t\t\t\"portletInstancePortletSettings\",\n\t\t\t\tportletInstancePortletSettings);\n\n\t\t\tPortletSettings portletGroupPortletSettings =\n\t\t\t\tPortletSettingsFactoryUtil.getGroupPortletSettings(\n\t\t\t\t\tthemeDisplay.getSiteGroupId(), portletId);\n\n\t\t\tpageContext.setAttribute(\n\t\t\t\t\"portletGroupPortletSettings\", portletGroupPortletSettings);\n\t\t}\n\t\tcatch (SystemException se) {\n\t\t\tthrow new RuntimeException(se);\n\t\t}\n\t\tcatch (PortalException pe) {\n\t\t\tthrow new RuntimeException(pe);\n\t\t}\n\n\t\t// Deprecated\n\n\t\tpageContext.setAttribute(\n\t\t\t\"portletGroupId\", new Long(themeDisplay.getScopeGroupId()));\n\n\t\treturn SKIP_BODY;\n\t}","commit_id":"262924105493e5066a68eba1727db95ba0ec1564","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\r\n   * Refreshes item list and coordinates if the selection has changed. So far\r\n   * only numerical data is considered for plotting.\r\n   */\r\n  void refreshAxis() {\r\n    if(attr == null) return;\r\n    if(Token.eq(attr, Token.token(\"\")))\r\n      return;\r\n    final Data data = GUI.context.data();\r\n    final StatsKey key = isTag ? data.tags.stat(data.tags.id(attr)) :\r\n      data.atts.stat(data.atts.id(attr));\r\n    numeric = key.kind == Kind.INT || key.kind == Kind.DBL;\r\n    if(numeric) {\r\n      min = key.min;\r\n      max = key.max;\r\n//      nrCaptions = 10;\r\n    } else {\r\n      cats = key.cats.keys();\r\n      nrCats = cats.length;\r\n      nrCaptions = nrCats;\r\n    }\r\n\r\n    final int[] items = scatterData.pres;\r\n    co = new double[items.length];\r\n    for(int i = 0; i < items.length; i++) {\r\n      int p = items[i];\r\n      final int limit = p + data.size(p, Data.ELEM);\r\n      double currentValue = -1;\r\n      p++;\r\n      while(p < limit) {\r\n        final int kind = data.kind(p);\r\n        if(kind == Data.ELEM) {\r\n          final byte[] currName = data.tag(p);\r\n          if((Token.eq(attr, currName)) && isTag) {\r\n            final int attSize = data.attSize(p, kind);\r\n            final byte[] value = data.text(p + attSize);\r\n            currentValue = calcPosition(value);\r\n            break;\r\n          }\r\n        } else if(kind == Data.ATTR) {\r\n          final byte[] currName = data.attName(p);\r\n          if((Token.eq(attr, currName)) && !isTag) {\r\n            final byte[] value = data.attValue(p);\r\n            currentValue = calcPosition(value);\r\n            break;\r\n          }\r\n        }\r\n        p++;\r\n      }\r\n      co[i] = currentValue;\r\n    }\r\n  }","id":82667,"modified_method":"/**\r\n   * Refreshes item list and coordinates if the selection has changed. So far\r\n   * only numerical data is considered for plotting.\r\n   */\r\n  void refreshAxis() {\r\n    if(attr == null) return;\r\n    if(Token.eq(attr, Token.token(\"\")))\r\n      return;\r\n    final Data data = GUI.context.data();\r\n    final StatsKey key = isTag ? data.tags.stat(data.tags.id(attr)) :\r\n      data.atts.stat(data.atts.id(attr));\r\n    numeric = key.kind == Kind.INT || key.kind == Kind.DBL;\r\n    if(numeric) {\r\n      numType = key.kind == Kind.INT ? TYPEINT : TYPEDBL;\r\n      min = key.min;\r\n      max = key.max;\r\n    } else {\r\n      cats = key.cats.keys();\r\n      nrCats = cats.length;\r\n//      nrCaptions = nrCats;\r\n    }\r\n\r\n    final int[] items = scatterData.pres;\r\n    co = new double[items.length];\r\n    for(int i = 0; i < items.length; i++) {\r\n      int p = items[i];\r\n      final int limit = p + data.size(p, Data.ELEM);\r\n      double currentValue = -1;\r\n      p++;\r\n      while(p < limit) {\r\n        final int kind = data.kind(p);\r\n        if(kind == Data.ELEM) {\r\n          final byte[] currName = data.tag(p);\r\n          if((Token.eq(attr, currName)) && isTag) {\r\n            final int attSize = data.attSize(p, kind);\r\n            final byte[] value = data.text(p + attSize);\r\n            currentValue = calcPosition(value);\r\n            break;\r\n          }\r\n        } else if(kind == Data.ATTR) {\r\n          final byte[] currName = data.attName(p);\r\n          if((Token.eq(attr, currName)) && !isTag) {\r\n            final byte[] value = data.attValue(p);\r\n            currentValue = calcPosition(value);\r\n            break;\r\n          }\r\n        }\r\n        p++;\r\n      }\r\n      co[i] = currentValue;\r\n    }\r\n  }","commit_id":"b9fa048211fe1762e46c1279837e916fbd616ad2","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n   * Returns a string array with all distinct keys\r\n   * and the keys of the specified set.\r\n   * @return key array\r\n   */\r\n  String[] getStatKeys() {\r\n    Data data = GUI.context.data();\r\n    \r\n    final Names tags = data.tags;\r\n    final StringList sl = new StringList();\r\n    for(int i = 1; i <= tags.size(); i++) {\r\n      if(tags.counter(i) == 0) continue;\r\n      final StatsKey key = tags.stat(tags.id(tags.key(i)));\r\n      final Kind kind = key.kind;\r\n      if(kind == Kind.DBL || kind == Kind.INT || kind == Kind.CAT && \r\n          key.cats.size() <= 20) {\r\n        sl.add(Token.string(tags.key(i)));\r\n      }\r\n    }\r\n    \r\n    final Names atts = data.atts;\r\n    for(int i = 0; i <= data.atts.size(); i++) {\r\n      if(data.atts.counter(i) == 0) continue;\r\n      final StatsKey key = atts.stat(atts.id(atts.key(i)));\r\n      final Kind kind = key.kind;\r\n      if(kind == Kind.DBL || kind == Kind.INT || kind == Kind.CAT && \r\n          key.cats.size() <= 20) {\r\n        sl.add(\"@\" + Token.string(atts.key(i)));\r\n      }\r\n    }\r\n    final String[] vals = sl.finish();\r\n    Arrays.sort(vals);\r\n    \r\n    return vals;\r\n  }","id":82668,"modified_method":"/**\r\n   * Returns a string array with all distinct keys\r\n   * and the keys of the specified set.\r\n   * @return key array\r\n   */\r\n  String[] getStatKeys() {\r\n    Data data = GUI.context.data();\r\n    \r\n    final Names tags = data.tags;\r\n    final StringList sl = new StringList();\r\n    for(int i = 1; i <= tags.size(); i++) {\r\n      if(tags.counter(i) == 0) continue;\r\n      final StatsKey key = tags.stat(tags.id(tags.key(i)));\r\n      final Kind kind = key.kind;\r\n      if(kind == Kind.DBL || kind == Kind.INT || kind == Kind.CAT && \r\n          key.cats.size() <= 50) {\r\n        sl.add(Token.string(tags.key(i)));\r\n      }\r\n    }\r\n    \r\n    final Names atts = data.atts;\r\n    for(int i = 0; i <= data.atts.size(); i++) {\r\n      if(data.atts.counter(i) == 0) continue;\r\n      final StatsKey key = atts.stat(atts.id(atts.key(i)));\r\n      final Kind kind = key.kind;\r\n      if(kind == Kind.DBL || kind == Kind.INT || kind == Kind.CAT && \r\n          key.cats.size() <= 50) {\r\n        sl.add(\"@\" + Token.string(atts.key(i)));\r\n      }\r\n    }\r\n    final String[] vals = sl.finish();\r\n    Arrays.sort(vals);\r\n    \r\n    return vals;\r\n  }","commit_id":"b9fa048211fe1762e46c1279837e916fbd616ad2","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\r\n  public void paintComponent(final Graphics g) {\r\n    super.paintComponent(g);\r\n    g.setColor(new Color(90, 90, 150, 90));\r\n    \r\n    final int w = getWidth();\r\n    final int h = getHeight();\r\n    if(w + h != viewDimension) {\r\n      viewDimension = w + h;\r\n      plotChanged = true;\r\n    }\r\n\r\n    g.fillRect(0, 0, w, h);\r\n    plotWidth = w - 2 * XMARGIN;\r\n    plotHeight = h - 2 * YMARGIN;\r\n    \r\n//    overdraw plot background for non value items\r\n    g.setColor(GUIConstants.color2);\r\n    g.fillRect(XMARGIN + NOVALUEBORDER, YMARGIN, plotWidth - NOVALUEBORDER, \r\n      plotHeight - NOVALUEBORDER);\r\n    \r\n    //draw axis and grid\r\n    drawXaxis(g);\r\n    drawYaxis(g);\r\n    \r\n    // draw items\r\n    if(scatterData.size == 0) return;\r\n    if(plotImg == null || plotChanged)\r\n      plotImg = createPlotImage();\r\n    g.drawImage(plotImg, 0, 0, this);\r\n\r\n    if(focusedItem != -1)\r\n    drawItem(g, scatterData.xAxis.co[focusedItem], \r\n        scatterData.yAxis.co[focusedItem], true);\r\n    plotChanged = false;\r\n  }","id":82669,"modified_method":"@Override\r\n  public void paintComponent(final Graphics g) {\r\n    super.paintComponent(g);\r\n    g.setColor(new Color(90, 90, 150, 90));\r\n    \r\n    final int w = getWidth();\r\n    final int h = getHeight();\r\n    if(w + h != viewDimension) {\r\n      viewDimension = w + h;\r\n      plotChanged = true;\r\n    }\r\n\r\n    g.fillRect(0, 0, w, h);\r\n    plotWidth = w - 2 * XMARGIN;\r\n    plotHeight = h - 2 * YMARGIN;\r\n    \r\n    // overdraw plot background for non value items\r\n    g.setColor(GUIConstants.color2);\r\n    g.fillRect(XMARGIN + NOVALUEBORDER, YMARGIN, plotWidth - NOVALUEBORDER, \r\n      plotHeight - NOVALUEBORDER);\r\n    \r\n    // draw axis and grid\r\n    drawXaxis(g);\r\n    drawYaxis(g);\r\n\r\n    // draw items\r\n    if(scatterData.size == 0) return;\r\n    if(plotImg == null || plotChanged)\r\n      plotImg = createPlotImage();\r\n    g.drawImage(plotImg, 0, 0, this);\r\n\r\n    if(focusedItem != -1)\r\n    drawItem(g, scatterData.xAxis.co[focusedItem], \r\n        scatterData.yAxis.co[focusedItem], true);\r\n    if(valueFocused) {\r\n      g.setColor(GUIConstants.color6);\r\n      final String x = mouseX > XMARGIN + NOVALUEBORDER ? \r\n          scatterData.xAxis.getValue(focusedValueX) : \"\";\r\n      final String y = mouseY < h - YMARGIN - NOVALUEBORDER ?\r\n          scatterData.yAxis.getValue(focusedValueY) : \"\";\r\n      g.drawString(\"x\" + x, XMARGIN, h - 50);\r\n      g.drawString(\"y\" + y, XMARGIN, h - 35);\r\n    }\r\n    plotChanged = false;\r\n  }","commit_id":"b9fa048211fe1762e46c1279837e916fbd616ad2","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\r\n  public void mouseMoved(final MouseEvent e) {\r\n    mouseX = e.getX();\r\n    mouseY = e.getY();\r\n    if(focus()) repaint();\r\n  }","id":82670,"modified_method":"@Override\r\n  public void mouseMoved(final MouseEvent e) {\r\n    mouseX = e.getX();\r\n    mouseY = e.getY();\r\n    \r\n    if(mouseX < XMARGIN || mouseX > getWidth() - XMARGIN + ITEMSIZE / 2 ||\r\n        mouseY < YMARGIN - ITEMSIZE / 2 || mouseY > getHeight() - YMARGIN) {\r\n      valueFocused = false;\r\n      focusedItem = -1;\r\n      repaint();\r\n    } else {\r\n      focus();\r\n      repaint();\r\n    }\r\n  }","commit_id":"b9fa048211fe1762e46c1279837e916fbd616ad2","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n   * Draws the y axis of the plot.\r\n   * @param g graphics reference\r\n   */\r\n  private void drawYaxis(final Graphics g) {\r\n    final int h = getHeight();\r\n    final int w = getWidth();\r\n    g.setColor(GUIConstants.color1);\r\n    g.drawLine(XMARGIN, YMARGIN, XMARGIN, getHeight() - YMARGIN);\r\n\r\n    final boolean numeric = scatterData.yAxis.numeric;\r\n    g.setFont(GUIConstants.font);\r\n    g.setColor(GUIConstants.color1);\r\n    final int textH = g.getFontMetrics().getHeight();\r\n    final int pHeight = plotHeight - NOVALUEBORDER;\r\n    final int nrCaptions = numeric ? (pHeight / \r\n        (textH * 2 + CAPTIONWHITESPACE)) :\r\n      scatterData.yAxis.nrCaptions;\r\n    final double range = 1.0d / (nrCaptions - 1);\r\n    for(int i = 0; i < nrCaptions; i++) {\r\n      g.setColor(GUIConstants.color1);\r\n      final int y1 = h - YMARGIN - NOVALUEBORDER - \r\n      ((int) ((i * range) * pHeight));\r\n      g.drawLine(XMARGIN - 9, y1, w - XMARGIN, y1);\r\n      g.setColor(Color.black);\r\n      String caption = new String();\r\n      if(numeric) {\r\n        final double value = scatterData.yAxis.min +\r\n          (scatterData.yAxis.max - scatterData.yAxis.min) * range * i;\r\n        caption = Double.toString(value);\r\n      } else {\r\n        caption = Token.string(scatterData.yAxis.cats[i]);\r\n      }\r\n      final int capW = BaseXLayout.width(g, caption);\r\n      g.drawString(caption, XMARGIN - capW - 15, y1 + textH / 2 - 1);\r\n    }\r\n  }","id":82671,"modified_method":"/**\r\n   * Draws the y axis of the plot.\r\n   * @param g graphics reference\r\n   */\r\n  private void drawYaxis(final Graphics g) {\r\n    final int h = getHeight();\r\n    final int w = getWidth();\r\n    g.setColor(GUIConstants.color1);\r\n    g.drawLine(XMARGIN, YMARGIN, XMARGIN, getHeight() - YMARGIN);\r\n    \r\n    scatterData.yAxis.calcCaption(plotHeight - NOVALUEBORDER);\r\n\r\n    final boolean numeric = scatterData.yAxis.numeric;\r\n    g.setFont(GUIConstants.font);\r\n    g.setColor(GUIConstants.color1);\r\n    final int textH = g.getFontMetrics().getHeight();\r\n    final int pHeight = plotHeight - NOVALUEBORDER;\r\n    final int nrCaptions = numeric ? (pHeight / \r\n        (textH + CAPTIONWHITESPACE)) :\r\n      scatterData.yAxis.nrCaptions;\r\n    final double range = 1.0d / (nrCaptions - 1);\r\n    for(int i = 0; i < nrCaptions; i++) {\r\n      g.setColor(GUIConstants.color1);\r\n      final int y1 = h - YMARGIN - NOVALUEBORDER - \r\n      ((int) ((i * range) * pHeight));\r\n      g.drawLine(XMARGIN - 9, y1, w - XMARGIN, y1);\r\n      g.setColor(Color.black);\r\n      String caption = new String();\r\n      if(numeric) {\r\n        final double value = scatterData.yAxis.min +\r\n          (scatterData.yAxis.max - scatterData.yAxis.min) * range * i;\r\n        caption = Double.toString(value);\r\n      } else {\r\n        caption = Token.string(scatterData.yAxis.cats[i]);\r\n      }\r\n      final int capW = BaseXLayout.width(g, caption);\r\n      g.drawString(caption, XMARGIN - capW - 15, y1 + textH / 2 - 1);\r\n    }\r\n  }","commit_id":"b9fa048211fe1762e46c1279837e916fbd616ad2","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n   * Draws the x axis of the plot.\r\n   * @param g graphics reference\r\n   */\r\n  private void drawXaxis(final Graphics g) {\r\n    final int h = getHeight();\r\n    final int w = getWidth();\r\n    g.setColor(GUIConstants.color1);\r\n    g.drawLine(XMARGIN, h - YMARGIN, w - XMARGIN, \r\n        h - YMARGIN);\r\n\r\n    final boolean numeric = scatterData.xAxis.numeric;\r\n    g.setFont(GUIConstants.font);\r\n    g.setColor(GUIConstants.color1);\r\n    final int textH = g.getFontMetrics().getHeight();\r\n    final int pWidth = plotWidth - NOVALUEBORDER;\r\n    final int nrCaptions = numeric ? \r\n        (pWidth / (textH * 2 + CAPTIONWHITESPACE)) :\r\n      scatterData.xAxis.nrCaptions;\r\n    final double range = 1.0d / (nrCaptions - 1);\r\n    for(int i = 0; i < nrCaptions; i++) {\r\n      g.setColor(GUIConstants.color1);\r\n      final int x1 = XMARGIN + NOVALUEBORDER + ((int) ((i * range) * pWidth));\r\n      g.drawLine(x1, YMARGIN, x1, h - YMARGIN + 9);\r\n      g.setColor(Color.black);\r\n      String caption = new String();\r\n      if(numeric) {\r\n        final double value = scatterData.xAxis.min +\r\n          (scatterData.xAxis.max - scatterData.xAxis.min) * range * i;\r\n        caption = Double.toString(value);\r\n      } else {\r\n        caption = Token.string(scatterData.xAxis.cats[i]);\r\n      }\r\n      final int capW = BaseXLayout.width(g, caption);\r\n      g.drawString(caption, x1 - capW / 2, h - YMARGIN + 25);\r\n      \r\n      // try to draw rotated string\r\n//      final int imgH = ((int) Math.pow(capW, 2));\r\n//      final BufferedImage img = new BufferedImage(capW + 50, textH + 50, \r\n//          Transparency.TRANSLUCENT);\r\n//      Graphics2D g2d = (Graphics2D) img.getGraphics();\r\n//      g2d.setFont(GUIConstants.font);\r\n//      g2d.setColor(Color.black);\r\n//      g2d.drawString(caption, 0, 0);\r\n//      AffineTransform at = new AffineTransform();\r\n//      at.rotate(Math.PI / -1.41d);\r\n//      g2d.transform(at);\r\n//      g.drawImage(img, x1, h - YMARGIN + 25, this);\r\n    }\r\n  }","id":82672,"modified_method":"/**\r\n   * Draws the x axis of the plot.\r\n   * @param g graphics reference\r\n   */\r\n  private void drawXaxis(final Graphics g) {\r\n    final int h = getHeight();\r\n    final int w = getWidth();\r\n    g.setColor(GUIConstants.color1);\r\n    g.drawLine(XMARGIN, h - YMARGIN, w - XMARGIN, \r\n        h - YMARGIN);\r\n    g.setFont(GUIConstants.font);\r\n    g.setColor(GUIConstants.color1);\r\n\r\n    final int textH = g.getFontMetrics().getHeight();\r\n    final int pWidth = plotWidth - NOVALUEBORDER;\r\n    final ScatterAxis axis = scatterData.xAxis;\r\n    axis.calcCaption(pWidth);\r\n    final int nrCaptions = axis.nrCaptions;\r\n    final double step = axis.captionStep;\r\n    final double range = 1.0d / (nrCaptions - 1);\r\n    final int type = axis.numType;\r\n    final boolean numeric = axis.numeric;\r\n    \r\n    for(int i = 0; i < nrCaptions; i++) {\r\n      g.setColor(GUIConstants.color1);\r\n      final int x = XMARGIN + NOVALUEBORDER + ((int) ((i * range) * pWidth));\r\n      g.drawLine(x, YMARGIN, x, h - YMARGIN + 9);\r\n      String caption = \"\";\r\n      if(numeric) {\r\n        final double min = axis.min;\r\n        final double captionValue = min + (i * step);\r\n        if(type == ScatterAxis.TYPEINT)\r\n          caption = Integer.toString((int) captionValue);\r\n        else\r\n          caption = \"double\";\r\n      } else {\r\n        caption = Token.string(axis.cats[i]);\r\n      }\r\n      \r\n      // draw rotated caption labels\r\n      final int capW = BaseXLayout.width(g, caption);\r\n      final int imgH = 160;\r\n      int imgW = 160;\r\n      final BufferedImage img = new BufferedImage(imgW, imgH, \r\n          Transparency.BITMASK);\r\n      Graphics2D g2d = (Graphics2D) img.getGraphics();\r\n      g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, \r\n          RenderingHints.VALUE_ANTIALIAS_ON);\r\n      g2d.setFont(GUIConstants.font);\r\n      g2d.setColor(Color.black);\r\n      g2d.rotate(Math.sin(30), imgW, 0 + textH);\r\n      g2d.drawString(caption, imgW - capW, 0);\r\n      g.drawImage(img, x - imgW + textH + 4, h - YMARGIN + 14, this);\r\n    }\r\n  }","commit_id":"b9fa048211fe1762e46c1279837e916fbd616ad2","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n   * Locates the nearest item to the mouse pointer. \r\n   * @return item focused\r\n   */\r\n  private boolean focus() {\r\n    int dist = Integer.MAX_VALUE;\r\n    int currFocusedItem = -1;\r\n    if(mouseX < XMARGIN || mouseX > getWidth() - XMARGIN + ITEMSIZE / 2 ||\r\n        mouseY < YMARGIN - ITEMSIZE / 2 || mouseY > getHeight() - YMARGIN) {\r\n      focusedItem = -1;\r\n      return true;\r\n    }\r\n    \r\n    for(int i = 0; i < scatterData.size; i++) {\r\n      final int x = calcCoordinate(true, scatterData.xAxis.co[i]);\r\n      final int y = calcCoordinate(false, scatterData.yAxis.co[i]);\r\n      final int distX = Math.abs(mouseX - x);\r\n      final int distY = Math.abs(mouseY - y);\r\n      if(distX <= FOCUSOFFSET && distY <= FOCUSOFFSET) {\r\n        final int currDist = distX * distY;\r\n        if(currDist < dist) {\r\n          dist = currDist;\r\n          currFocusedItem = i;\r\n        }\r\n      }\r\n    }\r\n    if(focusedItem != currFocusedItem) {\r\n      focusedItem = currFocusedItem;\r\n      if(focusedItem != -1)\r\n        notifyFocus(scatterData.pres[focusedItem], this);\r\n      return true;\r\n    }\r\n    return false;\r\n  }","id":82673,"modified_method":"/**\r\n   * Locates the nearest item to the mouse pointer. \r\n   * @return item focused\r\n   */\r\n  private boolean focus() {\r\n    // get values focused by mouse pointer\r\n    valueFocused = true;\r\n    focusedValueX = calcFocusedValue(true);\r\n    focusedValueY = calcFocusedValue(false);\r\n    \r\n    // find focused item \r\n    int dist = Integer.MAX_VALUE;\r\n    int currFocusedItem = -1;\r\n    for(int i = 0; i < scatterData.size; i++) {\r\n      final int x = calcCoordinate(true, scatterData.xAxis.co[i]);\r\n      final int y = calcCoordinate(false, scatterData.yAxis.co[i]);\r\n      final int distX = Math.abs(mouseX - x);\r\n      final int distY = Math.abs(mouseY - y);\r\n      if(distX <= FOCUSOFFSET && distY <= FOCUSOFFSET) {\r\n        final int currDist = distX * distY;\r\n        if(currDist < dist) {\r\n          dist = currDist;\r\n          currFocusedItem = i;\r\n        }\r\n      }\r\n    }\r\n    if(focusedItem != currFocusedItem) {\r\n      focusedItem = currFocusedItem;\r\n      if(focusedItem != -1)\r\n        notifyFocus(scatterData.pres[focusedItem], this);\r\n      return true;\r\n    }\r\n    return false;\r\n  }","commit_id":"b9fa048211fe1762e46c1279837e916fbd616ad2","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n   * Create new rectangles and set subtree borders.\r\n   * @param sub subtree\r\n   * @param g graphics reference\r\n   * @param c context\r\n   * @param sw screen width\r\n   * @return tree distance\r\n   */\r\n  double generateRects(final TreeSubtree sub, final Graphics g,\r\n      final Context c, final int sw) {\r\n    final int[] roots = c.current.nodes;\r\n    final int rl = roots.length;\r\n    if(rl == 0) return 0;\r\n    final double w = (sw - BORDER_PADDING) / (double) rl;\r\n    if(w <= 2) {\r\n      return -1;\r\n    }\r\n\r\n    rects = new TreeRect[rl][][];\r\n\r\n    for(int i = 0; i < rl; ++i) {\r\n      generateRects(sub, c, g, i, w);\r\n    }\r\n    return w;\r\n  }","id":82674,"modified_method":"/**\r\n   * Create new rectangles and set subtree borders.\r\n   * @param sub subtree\r\n   * @param g graphics reference\r\n   * @param c context\r\n   * @param sw screen width\r\n   * @return tree distance\r\n   */\r\n  double generateRects(final TreeSubtree sub, final Graphics g,\r\n      final Context c, final int sw) {\r\n    final int[] roots = c.current.nodes;\r\n    final int rl = roots.length;\r\n    if(rl == 0) return 0;\r\n    final double w = (sw - BORDER_PADDING) / (double) rl;\r\n    if(w < 2) {\r\n      return -1;\r\n    }\r\n\r\n    rects = new TreeRect[rl][][];\r\n\r\n    for(int i = 0; i < rl; ++i) {\r\n      generateRects(sub, c, g, i, w);\r\n    }\r\n    return w;\r\n  }","commit_id":"8e63d304588efe52409699a6cb8c5fe20f04d410","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Returns subtree-height of real big rectangles.\n   * @param px pixel position\n   * @return height\n   */\n  private int getRealBigRectangleHeight(final int px) {\n    final int p = getRealBigRectRootsPerPixel();\n    int pp = px / 2 * p;\n\n    int maxHeight = 0;\n    for(int i = pp; i < pp + p; ++i) {\n      final int h = sub.getSubtreeHeight(i);\n      if(h > maxHeight) maxHeight = h;\n    }\n    return maxHeight;\n  }","id":82675,"modified_method":"/**\n   * Returns subtree-height of real big rectangles.\n   * @param px pixel position\n   * @return height\n   */\n  private int getRealBigRectangleHeight(final int px) {\n    final int p = getRealBigRectRootsPerPixel(px);\n    int pp = px / 2 * p;\n\n    int maxHeight = 0;\n    for(int i = pp; i < pp + p; ++i) {\n      final int h = sub.getSubtreeHeight(i);\n      if(h > maxHeight) maxHeight = h;\n    }\n    return maxHeight;\n  }","commit_id":"8e63d304588efe52409699a6cb8c5fe20f04d410","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\n  public void paintComponent(final Graphics g) {\n    final Context c = gui.context;\n    final Data data = c.data;\n    if(data == null) return;\n\n    super.paintComponent(g);\n\n    gui.painting = true;\n\n    // timer\n    // final Performance perf = new Performance();\n    // perf.initTimer();\n\n    // initializes sizes\n    smooth(g);\n    g.setFont(font);\n    fontHeight = g.getFontMetrics().getHeight();\n    roots = gui.context.current.nodes;\n\n    if(paintType == PAINT_NEW_INIT) {\n      sub = new TreeSubtree(data);\n      tr = new TreeRects(gui.prop);\n    }\n    if(paintType == PAINT_NEW_INIT || paintType == PAINT_NEW_CONTEXT) \n      sub.generateBorders(c);\n\n    if(paintType == PAINT_NEW_INIT || paintType == PAINT_NEW_CONTEXT\n        || paintType == PAINT_NEW_WINDOW_SIZE || paintType == -1\n        && windowSizeChanged()) {\n      treedist = tr.generateRects(sub, g, c, getWidth());\n      rbr = treedist == -1;\n      markedImage = null;\n      setLevelDistance();\n      createNewMainImage();\n      if(gui.context.marked.size() > 0) markNodes();\n    }\n\n    g.drawImage(treeImage, 0, 0, getWidth(), getHeight(), this);\n\n    if(selection) {\n      if(selectRect != null) {\n        // draw selection\n        final int x = selectRect.w < 0 ? selectRect.x + selectRect.w\n            : selectRect.x;\n        final int y = selectRect.h < 0 ? selectRect.y + selectRect.h\n            : selectRect.y;\n        final int w = Math.abs(selectRect.w);\n        final int h = Math.abs(selectRect.h);\n        g.setColor(colormark1);\n        g.drawRect(x, y, w, h);\n      }\n      markNodes();\n    }\n\n    if(markedImage != null) g.drawImage(markedImage, 0, 0, getWidth(),\n        getHeight(), this);\n\n    // highlights the focused node\n    inFocus = focus();\n\n    if(inFocus) {\n      int focused = gui.context.focused;\n\n      if(tr.isBigRectangle(sub, frn, flv)) {\n        final int f = getMostSizedNode(data, frn, flv, frect, focused);\n        if(f >= 0) focused = f;\n      }\n\n      highlightNode(g, frn, flv, frect, focused, -1, DRAW_HIGHLIGHT);\n\n      if(SHOW_EXTRA_INFO) {\n        g.setColor(new Color(0xeeeeee));\n        g.fillRect(0, getHeight() - fontHeight - 6, getWidth(), fontHeight + 6);\n        final Data d = gui.context.data;\n        final int k = d.kind(focused);\n        final int s = d.size(focused, k);\n        final int as = d.attSize(focused, k);\n        g.setColor(Color.BLACK);\n        g.drawString(\"pre: \" + focused + \" level: \" + flv + \"  level-size: \"\n            + sub.getLevelSize(frn, flv) + \"  node-size: \" + (s - as)\n            + \"  node: \" + Token.string(ViewData.tag(gui.prop, d, focused)), 2,\n            getHeight() - 6);\n      }\n    }\n    paintType = -1;\n    gui.painting = false;\n  }","id":82676,"modified_method":"@Override\n  public void paintComponent(final Graphics g) {\n    final Context c = gui.context;\n    final Data data = c.data;\n    if(data == null) return;\n\n    super.paintComponent(g);\n    gui.painting = true;\n    \n    roots = gui.context.current.nodes;\n    if(roots.length == 0) return;\n    \n    smooth(g);\n    g.setFont(font);\n    fontHeight = g.getFontMetrics().getHeight();\n\n    // timer\n    // final Performance perf = new Performance();\n    // perf.initTimer();\n\n    // initializes sizes   \n\n    if(paintType == PAINT_NEW_INIT) {\n      sub = new TreeSubtree(data);\n      tr = new TreeRects(gui.prop);\n    }\n    \n    if(paintType == PAINT_NEW_INIT || paintType == PAINT_NEW_CONTEXT) \n      sub.generateBorders(c);\n\n    if(paintType == PAINT_NEW_INIT || paintType == PAINT_NEW_CONTEXT\n        || paintType == PAINT_NEW_WINDOW_SIZE || paintType == -1\n        && windowSizeChanged()) {\n      treedist = tr.generateRects(sub, g, c, getWidth());\n      rbr = treedist == -1;\n      markedImage = null;\n      setLevelDistance();\n      createNewMainImage();\n      if(gui.context.marked.size() > 0) markNodes();\n    }\n    \n    g.drawImage(treeImage, 0, 0, getWidth(), getHeight(), this);\n\n    if(selection) {\n      if(selectRect != null) {\n        // draw selection\n        final int x = selectRect.w < 0 ? selectRect.x + selectRect.w\n            : selectRect.x;\n        final int y = selectRect.h < 0 ? selectRect.y + selectRect.h\n            : selectRect.y;\n        final int w = Math.abs(selectRect.w);\n        final int h = Math.abs(selectRect.h);\n        g.setColor(colormark1);\n        g.drawRect(x, y, w, h);\n      }\n      markNodes();\n    }\n\n    if(markedImage != null) g.drawImage(markedImage, 0, 0, getWidth(),\n        getHeight(), this);\n\n    // highlights the focused node\n    inFocus = paintType < 0 ? focus() : false;\n\n    if(inFocus) {\n      int focused = gui.context.focused;\n\n      if(tr.isBigRectangle(sub, frn, flv)) {\n        final int f = getMostSizedNode(data, frn, flv, frect, focused);\n        if(f >= 0) focused = f;\n      }\n\n      highlightNode(g, frn, flv, frect, focused, -1, DRAW_HIGHLIGHT);\n\n      if(SHOW_EXTRA_INFO) {\n        g.setColor(new Color(0xeeeeee));\n        g.fillRect(0, getHeight() - fontHeight - 6, getWidth(), fontHeight + 6);\n        final Data d = gui.context.data;\n        final int k = d.kind(focused);\n        final int s = d.size(focused, k);\n        final int as = d.attSize(focused, k);\n        g.setColor(Color.BLACK);\n        g.drawString(\"pre: \" + focused + \" level: \" + flv + \"  level-size: \"\n            + sub.getLevelSize(frn, flv) + \"  node-size: \" + (s - as)\n            + \"  node: \" + Token.string(ViewData.tag(gui.prop, d, focused)), 2,\n            getHeight() - 6);\n      }\n    }\n    paintType = -1;\n    gui.painting = false;\n  }","commit_id":"8e63d304588efe52409699a6cb8c5fe20f04d410","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Returns number of roots per pixel in real big rects.\n   * @return number of roots\n   */\n  private int getRealBigRectRootsPerPixel() {\n    final int rl = roots.length;\n    final double w = getWidth() / 4;\n    //    final double overhead = rl % w;\n    return (int) (rl / w);\n  }","id":82677,"modified_method":"/**\n   * Returns number of roots per pixel in real big rects.\n   * @param px pixel position\n   * @return number of roots\n   */\n  private int getRealBigRectRootsPerPixel(final int px) {\n    final int rl = roots.length;\n    final double w = (getWidth() - 1) / 2d;\n    final int overhead = (int) (rl % w);\n    if(overhead <= px / 2) return (int) (rl / w) + overhead;\n    return (int) (rl / w);\n  }","commit_id":"8e63d304588efe52409699a6cb8c5fe20f04d410","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override protected boolean touchDown (float x, float y, int pointer) {\r\n\t\tboolean result = x > 0 && y > 0 && x < width && y < height;\r\n\t\tpressed = result;\r\n\t\tif (pressed) parent.focus(this);\r\n\t\treturn result;\r\n\t}","id":82678,"modified_method":"@Override protected boolean touchDown (float x, float y, int pointer) {\r\n\t\tboolean result = x > 0 && y > 0 && x < width && y < height;\r\n\t\tpressed = result;\r\n\t\tif (pressed) {\r\n\t\t\tparent.focus(this, pointer);\r\n\t\t\tthis.pointer = pointer;\r\n\t\t}\r\n\t\treturn result;\r\n\t}","commit_id":"a08bffa311cc430ddcae6f3b66b26050f05f0db4","url":"https://github.com/libgdx/libgdx"},{"original_method":"@Override protected boolean touchUp (float x, float y, int pointer) {\r\n\t\tif (!pressed) return false;\r\n\r\n\t\tparent.focus(null);\r\n\t\tpressed = false;\r\n\t\tif (clickListener != null) clickListener.clicked(this);\r\n\t\treturn true;\r\n\t}","id":82679,"modified_method":"@Override protected boolean touchUp (float x, float y, int pointer) {\r\n\t\tif (!pressed) return false;\r\n\r\n\t\tif(pointer == this.pointer) {\r\n\t\t\tparent.focus(null, pointer);\r\n\t\t}\r\n\t\tpressed = false;\r\n\t\tif (clickListener != null) clickListener.clicked(this);\r\n\t\treturn true;\r\n\t}","commit_id":"a08bffa311cc430ddcae6f3b66b26050f05f0db4","url":"https://github.com/libgdx/libgdx"},{"original_method":"/**\r\n\t * Sets the focus to the given child {@link Actor}. All subsequent touch events will be passed to this child Actor. To unset\r\n\t * the focus simply pass null.\r\n\t * \r\n\t * @param actor the Actor\r\n\t */\r\n\tpublic void focus (Actor actor) {\r\n\t\tfocusedActor = actor;\r\n\t\tif (parent != null) parent.focus(actor);\r\n\t}","id":82680,"modified_method":"/**\r\n\t * Sets the focus to the given child {@link Actor}. All subsequent touch events with the given pointer id will be passed to this child Actor. To unset\r\n\t * the focus simply pass null.\r\n\t * \r\n\t * @param actor the Actor\r\n\t */\r\n\tpublic void focus (Actor actor, int pointer) {\r\n\t\tfocusedActor[pointer] = actor;\r\n\t\tif (parent != null) parent.focus(actor, pointer);\r\n\t}","commit_id":"a08bffa311cc430ddcae6f3b66b26050f05f0db4","url":"https://github.com/libgdx/libgdx"},{"original_method":"@Override protected boolean touchUp (float x, float y, int pointer) {\r\n\t\tif (!touchable) return false;\r\n\r\n\t\tif (focusedActor != null) {\r\n\t\t\tpoint.x = x;\r\n\t\t\tpoint.y = y;\r\n\t\t\tfocusedActor.toLocalCoordinates(point);\r\n\t\t\tfocusedActor.touchUp(point.x, point.y, pointer);\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tint len = children.size() - 1;\r\n\t\tfor (int i = len; i >= 0; i--) {\r\n\t\t\tActor child = children.get(i);\r\n\t\t\tif (!child.touchable) continue;\r\n\r\n\t\t\ttoChildCoordinates(child, x, y, point);\r\n\r\n\t\t\tif (child.touchUp(point.x, point.y, pointer)) return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}","id":82681,"modified_method":"@Override protected boolean touchUp (float x, float y, int pointer) {\r\n\t\tif (!touchable) return false;\r\n\r\n\t\tif (focusedActor != null) {\r\n\t\t\tpoint.x = x;\r\n\t\t\tpoint.y = y;\r\n\t\t\tfocusedActor[pointer].toLocalCoordinates(point);\r\n\t\t\tfocusedActor[pointer].touchUp(point.x, point.y, pointer);\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tint len = children.size() - 1;\r\n\t\tfor (int i = len; i >= 0; i--) {\r\n\t\t\tActor child = children.get(i);\r\n\t\t\tif (!child.touchable) continue;\r\n\r\n\t\t\ttoChildCoordinates(child, x, y, point);\r\n\r\n\t\t\tif (child.touchUp(point.x, point.y, pointer)) return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}","commit_id":"a08bffa311cc430ddcae6f3b66b26050f05f0db4","url":"https://github.com/libgdx/libgdx"},{"original_method":"@Override protected boolean touchDragged (float x, float y, int pointer) {\r\n\t\tif (!touchable) return false;\r\n\r\n\t\tif (focusedActor != null) {\r\n\t\t\tpoint.x = x;\r\n\t\t\tpoint.y = y;\r\n\t\t\tfocusedActor.toLocalCoordinates(point);\r\n\t\t\tfocusedActor.touchDragged(point.x, point.y, pointer);\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tint len = children.size() - 1;\r\n\t\tfor (int i = len; i >= 0; i--) {\r\n\t\t\tActor child = children.get(i);\r\n\t\t\tif (!child.touchable) continue;\r\n\r\n\t\t\ttoChildCoordinates(child, x, y, point);\r\n\r\n\t\t\tif (child.touchDragged(point.x, point.y, pointer)) return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}","id":82682,"modified_method":"@Override protected boolean touchDragged (float x, float y, int pointer) {\r\n\t\tif (!touchable) return false;\r\n\r\n\t\tif (focusedActor[pointer] != null) {\r\n\t\t\tpoint.x = x;\r\n\t\t\tpoint.y = y;\r\n\t\t\tfocusedActor[pointer].toLocalCoordinates(point);\r\n\t\t\tfocusedActor[pointer].touchDragged(point.x, point.y, pointer);\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tint len = children.size() - 1;\r\n\t\tfor (int i = len; i >= 0; i--) {\r\n\t\t\tActor child = children.get(i);\r\n\t\t\tif (!child.touchable) continue;\r\n\r\n\t\t\ttoChildCoordinates(child, x, y, point);\r\n\r\n\t\t\tif (child.touchDragged(point.x, point.y, pointer)) return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}","commit_id":"a08bffa311cc430ddcae6f3b66b26050f05f0db4","url":"https://github.com/libgdx/libgdx"},{"original_method":"@Override protected boolean touchDown (float x, float y, int pointer) {\r\n\t\tif (!touchable) return false;\r\n\r\n\t\tif (debug) Gdx.app.log(\"Group\", name + \": \" + x + \", \" + y);\r\n\r\n\t\tif (focusedActor != null) {\r\n\t\t\tpoint.x = x;\r\n\t\t\tpoint.y = y;\r\n\t\t\tfocusedActor.toLocalCoordinates(point);\r\n\t\t\tfocusedActor.touchDown(point.x, point.y, pointer);\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tint len = children.size() - 1;\r\n\t\tfor (int i = len; i >= 0; i--) {\r\n\t\t\tActor child = children.get(i);\r\n\t\t\tif (!child.touchable) continue;\r\n\r\n\t\t\ttoChildCoordinates(child, x, y, point);\r\n\r\n\t\t\tif (child.touchDown(point.x, point.y, pointer)) {\r\n\t\t\t\tif (child instanceof Group)\r\n\t\t\t\t\tlastTouchedChild = ((Group)child).lastTouchedChild;\r\n\t\t\t\telse\r\n\t\t\t\t\tlastTouchedChild = child;\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}","id":82683,"modified_method":"@Override protected boolean touchDown (float x, float y, int pointer) {\r\n\t\tif (!touchable) return false;\r\n\r\n\t\tif (debug) Gdx.app.log(\"Group\", name + \": \" + x + \", \" + y);\r\n\r\n\t\tif (focusedActor[pointer] != null) {\r\n\t\t\tpoint.x = x;\r\n\t\t\tpoint.y = y;\r\n\t\t\tfocusedActor[pointer].toLocalCoordinates(point);\r\n\t\t\tfocusedActor[pointer].touchDown(point.x, point.y, pointer);\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tint len = children.size() - 1;\r\n\t\tfor (int i = len; i >= 0; i--) {\r\n\t\t\tActor child = children.get(i);\r\n\t\t\tif (!child.touchable) continue;\r\n\r\n\t\t\ttoChildCoordinates(child, x, y, point);\r\n\r\n\t\t\tif (child.touchDown(point.x, point.y, pointer)) {\r\n\t\t\t\tif (child instanceof Group)\r\n\t\t\t\t\tlastTouchedChild = ((Group)child).lastTouchedChild;\r\n\t\t\t\telse\r\n\t\t\t\t\tlastTouchedChild = child;\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}","commit_id":"a08bffa311cc430ddcae6f3b66b26050f05f0db4","url":"https://github.com/libgdx/libgdx"},{"original_method":"/**\n     * Store Connector description\n     *\n     * @param aWriter\n     * @param indent\n     * @param aConnector\n     * @throws Exception\n     */\n    @Override\n    public void storeChilds(PrintWriter aWriter, int indent, Object aConnector,\n            StoreDescription parentDesc) throws Exception {\n\n        if (aConnector instanceof Connector) {\n            Connector connector = (Connector) aConnector;\n            // Store nested <Listener> elements\n            if (connector instanceof Lifecycle) {\n                LifecycleListener listeners[] = ((Lifecycle) connector)\n                        .findLifecycleListeners();\n                storeElementArray(aWriter, indent, listeners);\n            }\n        }\n    }","id":82684,"modified_method":"/**\n     * Store Connector description\n     *\n     * @param aWriter\n     * @param indent\n     * @param aConnector\n     * @throws Exception\n     */\n    @Override\n    public void storeChilds(PrintWriter aWriter, int indent, Object aConnector,\n            StoreDescription parentDesc) throws Exception {\n\n        if (aConnector instanceof Connector) {\n            Connector connector = (Connector) aConnector;\n            // Store nested <Listener> elements\n            LifecycleListener listeners[] = connector.findLifecycleListeners();\n            storeElementArray(aWriter, indent, listeners);\n        }\n    }","commit_id":"39d70e580a160610f789a9439ea9205bc9e0a6df","url":"https://github.com/apache/tomcat"},{"original_method":"/**\n     * print a value but replace attribute name\n     *\n     * @param writer\n     * @param name\n     * @param value\n     * @see org.apache.catalina.storeconfig.StoreAppender#printValue(java.io.PrintWriter,\n     *      int, java.lang.String, java.lang.Object)\n     */\n    @Override\n    public void printValue(PrintWriter writer, int indent, String name,\n            Object value) {\n        String repl = name;\n        if (replacements.get(name) != null) {\n            repl = (String) replacements.get(name);\n        }\n        super.printValue(writer, indent, repl, value);\n    }","id":82685,"modified_method":"/**\n     * print a value but replace attribute name\n     *\n     * @param writer\n     * @param name\n     * @param value\n     * @see org.apache.catalina.storeconfig.StoreAppender#printValue(java.io.PrintWriter,\n     *      int, java.lang.String, java.lang.Object)\n     */\n    @Override\n    public void printValue(PrintWriter writer, int indent, String name,\n            Object value) {\n        String repl = name;\n        if (replacements.get(name) != null) {\n            repl = replacements.get(name);\n        }\n        super.printValue(writer, indent, repl, value);\n    }","commit_id":"39d70e580a160610f789a9439ea9205bc9e0a6df","url":"https://github.com/apache/tomcat"},{"original_method":"/**\n     * Store the relevant attributes of the specified JavaBean.\n     *\n     * @param writer\n     *            PrintWriter to which we are storing\n     * @param include\n     *            Should we include a <code>className<\/code> attribute?\n     * @param bean\n     *            Bean whose properties are to be rendered as attributes,\n     * @param desc\n     *            RegistryDescrpitor from this bean\n     *\n     * @exception Exception\n     *                if an exception occurs while storing\n     */\n    @Override\n    public void printAttributes(PrintWriter writer, int indent,\n            boolean include, Object bean, StoreDescription desc)\n            throws Exception {\n\n        // Render a className attribute if requested\n        if (include && desc != null && !desc.isStandard()) {\n            writer.print(\" className=\\\"\");\n            writer.print(bean.getClass().getName());\n            writer.print(\"\\\"\");\n        }\n\n        Connector connector = (Connector) bean;\n        String protocol = connector.getProtocol();\n        List<String> propertyKeys = getPropertyKeys(connector);\n        // Create blank instance\n        Object bean2 = new Connector(protocol);//defaultInstance(bean);\n        Iterator<String> propertyIterator = propertyKeys.iterator();\n        while (propertyIterator.hasNext()) {\n            String key = propertyIterator.next();\n            Object value = (Object) IntrospectionUtils.getProperty(bean, key);\n\n            if (desc.isTransientAttribute(key)) {\n                continue; // Skip the specified exceptions\n            }\n            if (value == null) {\n                continue; // Null values are not persisted\n            }\n            // Convert IP addresses to strings so they will be persisted\n            if (value instanceof InetAddress) {\n                value = ((InetAddress) value).getHostAddress();\n            }\n            if (!isPersistable(value.getClass())) {\n                continue;\n            }\n            Object value2 = IntrospectionUtils.getProperty(bean2, key);\n            if (value.equals(value2)) {\n                // The property has its default value\n                continue;\n            }\n            if (isPrintValue(bean, bean2, key, desc)) {\n                printValue(writer, indent, key, value);\n            }\n        }\n        if (protocol != null && !\"HTTP/1.1\".equals(protocol))\n            super.printValue(writer, indent, \"protocol\", protocol);\n\n    }","id":82686,"modified_method":"/**\n     * Store the relevant attributes of the specified JavaBean.\n     *\n     * @param writer\n     *            PrintWriter to which we are storing\n     * @param include\n     *            Should we include a <code>className<\/code> attribute?\n     * @param bean\n     *            Bean whose properties are to be rendered as attributes,\n     * @param desc\n     *            RegistryDescrpitor from this bean\n     *\n     * @exception Exception\n     *                if an exception occurs while storing\n     */\n    @Override\n    public void printAttributes(PrintWriter writer, int indent,\n            boolean include, Object bean, StoreDescription desc)\n            throws Exception {\n\n        // Render a className attribute if requested\n        if (include && desc != null && !desc.isStandard()) {\n            writer.print(\" className=\\\"\");\n            writer.print(bean.getClass().getName());\n            writer.print(\"\\\"\");\n        }\n\n        Connector connector = (Connector) bean;\n        String protocol = connector.getProtocol();\n        List<String> propertyKeys = getPropertyKeys(connector);\n        // Create blank instance\n        Object bean2 = new Connector(protocol);//defaultInstance(bean);\n        Iterator<String> propertyIterator = propertyKeys.iterator();\n        while (propertyIterator.hasNext()) {\n            String key = propertyIterator.next();\n            Object value = IntrospectionUtils.getProperty(bean, key);\n\n            if (desc.isTransientAttribute(key)) {\n                continue; // Skip the specified exceptions\n            }\n            if (value == null) {\n                continue; // Null values are not persisted\n            }\n            // Convert IP addresses to strings so they will be persisted\n            if (value instanceof InetAddress) {\n                value = ((InetAddress) value).getHostAddress();\n            }\n            if (!isPersistable(value.getClass())) {\n                continue;\n            }\n            Object value2 = IntrospectionUtils.getProperty(bean2, key);\n            if (value.equals(value2)) {\n                // The property has its default value\n                continue;\n            }\n            if (isPrintValue(bean, bean2, key, desc)) {\n                printValue(writer, indent, key, value);\n            }\n        }\n        if (protocol != null && !\"HTTP/1.1\".equals(protocol))\n            super.printValue(writer, indent, \"protocol\", protocol);\n\n    }","commit_id":"39d70e580a160610f789a9439ea9205bc9e0a6df","url":"https://github.com/apache/tomcat"},{"original_method":"/**\n     * Get all properties from Connector and current ProtocolHandler\n     *\n     * @param bean\n     * @return List of Connector Properties\n     * @throws IntrospectionException\n     */\n    protected List<String> getPropertyKeys(Connector bean)\n            throws IntrospectionException {\n        ArrayList<String> propertyKeys = new ArrayList<>();\n        // Acquire the list of properties for this bean\n        ProtocolHandler protocolHandler = bean.getProtocolHandler();\n        // Acquire the list of properties for this bean\n        PropertyDescriptor descriptors[] = Introspector.getBeanInfo(\n                bean.getClass()).getPropertyDescriptors();\n        if (descriptors == null) {\n            descriptors = new PropertyDescriptor[0];\n        }\n        for (int i = 0; i < descriptors.length; i++) {\n            if (descriptors[i] instanceof IndexedPropertyDescriptor) {\n                continue; // Indexed properties are not persisted\n            }\n            if (!isPersistable(descriptors[i].getPropertyType())\n                    || (descriptors[i].getReadMethod() == null)\n                    || (descriptors[i].getWriteMethod() == null)) {\n                continue; // Must be a read-write primitive or String\n            }\n            if (\"protocol\".equals(descriptors[i].getName())\n                    || \"protocolHandlerClassName\".equals(descriptors[i]\n                            .getName()))\n                continue;\n            propertyKeys.add(descriptors[i].getName());\n        }\n        // Add the properties of the protocol handler\n        descriptors = Introspector.getBeanInfo(\n                protocolHandler.getClass()).getPropertyDescriptors();\n        if (descriptors == null) {\n            descriptors = new PropertyDescriptor[0];\n        }\n        for (int i = 0; i < descriptors.length; i++) {\n            if (descriptors[i] instanceof IndexedPropertyDescriptor) {\n                continue; // Indexed properties are not persisted\n            }\n            if (!isPersistable(descriptors[i].getPropertyType())\n                    || (descriptors[i].getReadMethod() == null)\n                    || (descriptors[i].getWriteMethod() == null)) {\n                continue; // Must be a read-write primitive or String\n            }\n            String key = descriptors[i].getName();\n            if (replacements.get(key) != null) {\n                key = (String) replacements.get(key);\n            }\n            if (!propertyKeys.contains(key)) {\n                propertyKeys.add(key);\n            }\n        }\n        return propertyKeys;\n    }","id":82687,"modified_method":"/**\n     * Get all properties from Connector and current ProtocolHandler\n     *\n     * @param bean\n     * @return List of Connector Properties\n     * @throws IntrospectionException\n     */\n    protected List<String> getPropertyKeys(Connector bean)\n            throws IntrospectionException {\n        ArrayList<String> propertyKeys = new ArrayList<>();\n        // Acquire the list of properties for this bean\n        ProtocolHandler protocolHandler = bean.getProtocolHandler();\n        // Acquire the list of properties for this bean\n        PropertyDescriptor descriptors[] = Introspector.getBeanInfo(\n                bean.getClass()).getPropertyDescriptors();\n        if (descriptors == null) {\n            descriptors = new PropertyDescriptor[0];\n        }\n        for (int i = 0; i < descriptors.length; i++) {\n            if (descriptors[i] instanceof IndexedPropertyDescriptor) {\n                continue; // Indexed properties are not persisted\n            }\n            if (!isPersistable(descriptors[i].getPropertyType())\n                    || (descriptors[i].getReadMethod() == null)\n                    || (descriptors[i].getWriteMethod() == null)) {\n                continue; // Must be a read-write primitive or String\n            }\n            if (\"protocol\".equals(descriptors[i].getName())\n                    || \"protocolHandlerClassName\".equals(descriptors[i]\n                            .getName()))\n                continue;\n            propertyKeys.add(descriptors[i].getName());\n        }\n        // Add the properties of the protocol handler\n        descriptors = Introspector.getBeanInfo(\n                protocolHandler.getClass()).getPropertyDescriptors();\n        if (descriptors == null) {\n            descriptors = new PropertyDescriptor[0];\n        }\n        for (int i = 0; i < descriptors.length; i++) {\n            if (descriptors[i] instanceof IndexedPropertyDescriptor) {\n                continue; // Indexed properties are not persisted\n            }\n            if (!isPersistable(descriptors[i].getPropertyType())\n                    || (descriptors[i].getReadMethod() == null)\n                    || (descriptors[i].getWriteMethod() == null)) {\n                continue; // Must be a read-write primitive or String\n            }\n            String key = descriptors[i].getName();\n            if (replacements.get(key) != null) {\n                key = replacements.get(key);\n            }\n            if (!propertyKeys.contains(key)) {\n                propertyKeys.add(key);\n            }\n        }\n        return propertyKeys;\n    }","commit_id":"39d70e580a160610f789a9439ea9205bc9e0a6df","url":"https://github.com/apache/tomcat"},{"original_method":"/**\n     * Store the Context with a Backup\n     *\n     * @param aContext\n     * @throws Exception\n     */\n    protected void storeWithBackup(StandardContext aContext) throws Exception {\n        StoreFileMover mover = getConfigFileWriter((Context) aContext);\n        if (mover != null) {\n            // Bugzilla 37781 Check to make sure we can write this output file\n            if ((mover.getConfigOld() == null)\n                    || (mover.getConfigOld().isDirectory())\n                    || (mover.getConfigOld().exists() &&\n                            !mover.getConfigOld().canWrite())) {\n                log.error(\"Cannot move orignal context output file at \"\n                        + mover.getConfigOld());\n                throw new IOException(\"Context orginal file at \"\n                        + mover.getConfigOld()\n                        + \" is null, not a file or not writable.\");\n            }\n            File dir = mover.getConfigSave().getParentFile();\n            if (dir != null && dir.isDirectory() && (!dir.canWrite())) {\n                log.error(\"Cannot save context output file at \"\n                        + mover.getConfigSave());\n                throw new IOException(\"Context save file at \"\n                        + mover.getConfigSave() + \" is not writable.\");\n            }\n            if (log.isInfoEnabled())\n                log.info(\"Store Context \" + aContext.getPath()\n                        + \" separate with backup (at file \"\n                        + mover.getConfigSave() + \" )\");\n\n            PrintWriter writer = null;\n            try {\n                writer = mover.getWriter();\n                storeXMLHead(writer);\n                super.store(writer, -2, aContext);\n            } finally {\n                if (writer != null) {\n                    // Flush and close the output file\n                    try {\n                        writer.flush();\n                    } catch (Exception e) {\n                        log.error(e);\n                    }\n                    try {\n                        writer.close();\n                    } catch (Exception e) {\n                        throw (e);\n                    }\n                }\n            }\n            mover.move();\n        }\n    }","id":82688,"modified_method":"/**\n     * Store the Context with a Backup\n     *\n     * @param aContext\n     * @throws Exception\n     */\n    protected void storeWithBackup(StandardContext aContext) throws Exception {\n        StoreFileMover mover = getConfigFileWriter(aContext);\n        if (mover != null) {\n            // Bugzilla 37781 Check to make sure we can write this output file\n            if ((mover.getConfigOld() == null)\n                    || (mover.getConfigOld().isDirectory())\n                    || (mover.getConfigOld().exists() &&\n                            !mover.getConfigOld().canWrite())) {\n                log.error(\"Cannot move orignal context output file at \"\n                        + mover.getConfigOld());\n                throw new IOException(\"Context orginal file at \"\n                        + mover.getConfigOld()\n                        + \" is null, not a file or not writable.\");\n            }\n            File dir = mover.getConfigSave().getParentFile();\n            if (dir != null && dir.isDirectory() && (!dir.canWrite())) {\n                log.error(\"Cannot save context output file at \"\n                        + mover.getConfigSave());\n                throw new IOException(\"Context save file at \"\n                        + mover.getConfigSave() + \" is not writable.\");\n            }\n            if (log.isInfoEnabled())\n                log.info(\"Store Context \" + aContext.getPath()\n                        + \" separate with backup (at file \"\n                        + mover.getConfigSave() + \" )\");\n\n            PrintWriter writer = null;\n            try {\n                writer = mover.getWriter();\n                storeXMLHead(writer);\n                super.store(writer, -2, aContext);\n            } finally {\n                if (writer != null) {\n                    // Flush and close the output file\n                    try {\n                        writer.flush();\n                    } catch (Exception e) {\n                        log.error(e);\n                    }\n                    try {\n                        writer.close();\n                    } catch (Exception e) {\n                        throw (e);\n                    }\n                }\n            }\n            mover.move();\n        }\n    }","commit_id":"39d70e580a160610f789a9439ea9205bc9e0a6df","url":"https://github.com/apache/tomcat"},{"original_method":"/**\n     * filter out the default watched resources\n     *\n     * @param context\n     * @param wresources\n     * @return The watched resources\n     * @throws IOException\n     * TODO relative watchedresource\n     * TODO absolute handling configFile\n     * TODO Filename case handling for Windows?\n     * TODO digester variable subsitution $catalina.base, $catalina.home\n     */\n    protected String[] filterWatchedResources(StandardContext context,\n            String[] wresources) throws Exception {\n        File configBase = configBase(context);\n        String confContext = new File(System.getProperty(\"catalina.base\"),\n                \"conf/context.xml\").getCanonicalPath();\n        String confWeb = new File(System.getProperty(\"catalina.base\"),\n                \"conf/web.xml\").getCanonicalPath();\n        String confHostDefault = new File(configBase, \"context.xml.default\")\n                .getCanonicalPath();\n        String configFile = new File(context.getConfigFile().toURI()).getCanonicalPath();\n        String webxml = \"WEB-INF/web.xml\" ;\n\n        List<String> resource = new ArrayList<>();\n        for (int i = 0; i < wresources.length; i++) {\n\n            if (wresources[i].equals(confContext))\n                continue;\n            if (wresources[i].equals(confWeb))\n                continue;\n            if (wresources[i].equals(confHostDefault))\n                continue;\n            if (wresources[i].equals(configFile))\n                continue;\n            if (wresources[i].equals(webxml))\n                continue;\n            resource.add(wresources[i]);\n        }\n        return (String[]) resource.toArray(new String[resource.size()]);\n    }","id":82689,"modified_method":"/**\n     * filter out the default watched resources\n     *\n     * @param context\n     * @param wresources\n     * @return The watched resources\n     * @throws IOException\n     * TODO relative watchedresource\n     * TODO absolute handling configFile\n     * TODO Filename case handling for Windows?\n     * TODO digester variable subsitution $catalina.base, $catalina.home\n     */\n    protected String[] filterWatchedResources(StandardContext context,\n            String[] wresources) throws Exception {\n        File configBase = configBase(context);\n        String confContext = new File(System.getProperty(\"catalina.base\"),\n                \"conf/context.xml\").getCanonicalPath();\n        String confWeb = new File(System.getProperty(\"catalina.base\"),\n                \"conf/web.xml\").getCanonicalPath();\n        String confHostDefault = new File(configBase, \"context.xml.default\")\n                .getCanonicalPath();\n        String configFile = new File(context.getConfigFile().toURI()).getCanonicalPath();\n        String webxml = \"WEB-INF/web.xml\" ;\n\n        List<String> resource = new ArrayList<>();\n        for (int i = 0; i < wresources.length; i++) {\n\n            if (wresources[i].equals(confContext))\n                continue;\n            if (wresources[i].equals(confWeb))\n                continue;\n            if (wresources[i].equals(confHostDefault))\n                continue;\n            if (wresources[i].equals(configFile))\n                continue;\n            if (wresources[i].equals(webxml))\n                continue;\n            resource.add(wresources[i]);\n        }\n        return resource.toArray(new String[resource.size()]);\n    }","commit_id":"39d70e580a160610f789a9439ea9205bc9e0a6df","url":"https://github.com/apache/tomcat"},{"original_method":"/**\n     * Store the specified Host properties.\n     *\n     * @param aWriter\n     *            PrintWriter to which we are storing\n     * @param indent\n     *            Number of spaces to indent this element\n     * @param aContext\n     *            Context whose properties are being stored\n     *\n     * @exception Exception\n     *                if an exception occurs while storing\n     */\n    @Override\n    public void storeChilds(PrintWriter aWriter, int indent, Object aContext,\n            StoreDescription parentDesc) throws Exception {\n        if (aContext instanceof StandardContext) {\n            StandardContext context = (StandardContext) aContext;\n            // Store nested <Listener> elements\n            if (context instanceof Lifecycle) {\n                LifecycleListener listeners[] = context\n                        .findLifecycleListeners();\n                storeElementArray(aWriter, indent, listeners);\n            }\n            // Store nested <Valve> elements\n            Valve valves[] = context.getPipeline().getValves();\n            storeElementArray(aWriter, indent, valves);\n\n            // Store nested <Loader> elements\n            Loader loader = context.getLoader();\n            storeElement(aWriter, indent, loader);\n\n            // Store nested <Manager> elements\n            if (context.getCluster() == null) {\n                Manager manager = context.getManager();\n                storeElement(aWriter, indent, manager);\n            }\n\n            // Store nested <Realm> element\n            Realm realm = context.getRealm();\n            if (realm != null) {\n                Realm parentRealm = null;\n                // @TODO is this case possible?\n                if (context.getParent() != null) {\n                    parentRealm = context.getParent().getRealm();\n                }\n                if (realm != parentRealm) {\n                    storeElement(aWriter, indent, realm);\n                }\n            }\n            // Store nested resources\n            WebResourceRoot resources = context.getResources();\n            storeElement(aWriter, indent, resources);\n\n            // Store nested <InstanceListener> elements\n            String iListeners[] = context.findInstanceListeners();\n            getStoreAppender().printTagArray(aWriter, \"InstanceListener\",\n                    indent + 2, iListeners);\n\n            // Store nested <WrapperListener> elements\n            String wLifecycles[] = context.findWrapperLifecycles();\n            getStoreAppender().printTagArray(aWriter, \"WrapperListener\",\n                    indent + 2, wLifecycles);\n            // Store nested <WrapperLifecycle> elements\n            String wListeners[] = context.findWrapperListeners();\n            getStoreAppender().printTagArray(aWriter, \"WrapperLifecycle\",\n                    indent + 2, wListeners);\n\n            // Store nested <Parameter> elements\n            ApplicationParameter[] appParams = context\n                    .findApplicationParameters();\n            storeElementArray(aWriter, indent, appParams);\n\n            // Store nested naming resources elements (EJB,Resource,...)\n            NamingResources nresources = context.getNamingResources();\n            storeElement(aWriter, indent, nresources);\n\n            // Store nested watched resources <WatchedResource>\n            String[] wresources = context.findWatchedResources();\n            wresources = filterWatchedResources(context, wresources);\n            getStoreAppender().printTagArray(aWriter, \"WatchedResource\",\n                    indent + 2, wresources);\n        }\n    }","id":82690,"modified_method":"/**\n     * Store the specified Host properties.\n     *\n     * @param aWriter\n     *            PrintWriter to which we are storing\n     * @param indent\n     *            Number of spaces to indent this element\n     * @param aContext\n     *            Context whose properties are being stored\n     *\n     * @exception Exception\n     *                if an exception occurs while storing\n     */\n    @Override\n    public void storeChilds(PrintWriter aWriter, int indent, Object aContext,\n            StoreDescription parentDesc) throws Exception {\n        if (aContext instanceof StandardContext) {\n            StandardContext context = (StandardContext) aContext;\n            // Store nested <Listener> elements\n            LifecycleListener listeners[] = context.findLifecycleListeners();\n            storeElementArray(aWriter, indent, listeners);\n\n            // Store nested <Valve> elements\n            Valve valves[] = context.getPipeline().getValves();\n            storeElementArray(aWriter, indent, valves);\n\n            // Store nested <Loader> elements\n            Loader loader = context.getLoader();\n            storeElement(aWriter, indent, loader);\n\n            // Store nested <Manager> elements\n            if (context.getCluster() == null) {\n                Manager manager = context.getManager();\n                storeElement(aWriter, indent, manager);\n            }\n\n            // Store nested <Realm> element\n            Realm realm = context.getRealm();\n            if (realm != null) {\n                Realm parentRealm = null;\n                // @TODO is this case possible?\n                if (context.getParent() != null) {\n                    parentRealm = context.getParent().getRealm();\n                }\n                if (realm != parentRealm) {\n                    storeElement(aWriter, indent, realm);\n                }\n            }\n            // Store nested resources\n            WebResourceRoot resources = context.getResources();\n            storeElement(aWriter, indent, resources);\n\n            // Store nested <InstanceListener> elements\n            String iListeners[] = context.findInstanceListeners();\n            getStoreAppender().printTagArray(aWriter, \"InstanceListener\",\n                    indent + 2, iListeners);\n\n            // Store nested <WrapperListener> elements\n            String wLifecycles[] = context.findWrapperLifecycles();\n            getStoreAppender().printTagArray(aWriter, \"WrapperListener\",\n                    indent + 2, wLifecycles);\n            // Store nested <WrapperLifecycle> elements\n            String wListeners[] = context.findWrapperListeners();\n            getStoreAppender().printTagArray(aWriter, \"WrapperLifecycle\",\n                    indent + 2, wListeners);\n\n            // Store nested <Parameter> elements\n            ApplicationParameter[] appParams = context\n                    .findApplicationParameters();\n            storeElementArray(aWriter, indent, appParams);\n\n            // Store nested naming resources elements (EJB,Resource,...)\n            NamingResources nresources = context.getNamingResources();\n            storeElement(aWriter, indent, nresources);\n\n            // Store nested watched resources <WatchedResource>\n            String[] wresources = context.findWatchedResources();\n            wresources = filterWatchedResources(context, wresources);\n            getStoreAppender().printTagArray(aWriter, \"WatchedResource\",\n                    indent + 2, wresources);\n        }\n    }","commit_id":"39d70e580a160610f789a9439ea9205bc9e0a6df","url":"https://github.com/apache/tomcat"},{"original_method":"/**\n     * Store the specified Engine properties.\n     *\n     * @param aWriter\n     *            PrintWriter to which we are storing\n     * @param indent\n     *            Number of spaces to indent this element\n     * @param aEngine\n     *            Object whose properties are being stored\n     *\n     * @exception Exception\n     *                if an exception occurs while storing\n     */\n    @Override\n    public void storeChilds(PrintWriter aWriter, int indent, Object aEngine,\n            StoreDescription parentDesc) throws Exception {\n        if (aEngine instanceof StandardEngine) {\n            StandardEngine engine = (StandardEngine) aEngine;\n            // Store nested <Listener> elements\n            if (engine instanceof Lifecycle) {\n                LifecycleListener listeners[] = ((Lifecycle) engine)\n                        .findLifecycleListeners();\n                storeElementArray(aWriter, indent, listeners);\n            }\n\n            // Store nested <Realm> element\n            Realm realm = engine.getRealm();\n            if (realm != null) {\n                Realm parentRealm = null;\n                // TODO is this case possible? (see it a old Server 5.0 impl)\n                if (engine.getParent() != null) {\n                    parentRealm = engine.getParent().getRealm();\n                }\n                if (realm != parentRealm) {\n                    storeElement(aWriter, indent, realm);\n\n                }\n            }\n\n            // Store nested <Valve> elements\n            Valve valves[] = engine.getPipeline().getValves();\n            storeElementArray(aWriter, indent, valves);\n\n            // store all <Cluster> elements\n            Cluster cluster = engine.getCluster();\n            if (cluster != null) {\n                storeElement(aWriter, indent, cluster);\n            }\n            // store all <Host> elements\n            Container children[] = engine.findChildren();\n            storeElementArray(aWriter, indent, children);\n\n       }\n    }","id":82691,"modified_method":"/**\n     * Store the specified Engine properties.\n     *\n     * @param aWriter\n     *            PrintWriter to which we are storing\n     * @param indent\n     *            Number of spaces to indent this element\n     * @param aEngine\n     *            Object whose properties are being stored\n     *\n     * @exception Exception\n     *                if an exception occurs while storing\n     */\n    @Override\n    public void storeChilds(PrintWriter aWriter, int indent, Object aEngine,\n            StoreDescription parentDesc) throws Exception {\n        if (aEngine instanceof StandardEngine) {\n            StandardEngine engine = (StandardEngine) aEngine;\n            // Store nested <Listener> elements\n            LifecycleListener listeners[] = ((Lifecycle) engine)\n                    .findLifecycleListeners();\n            storeElementArray(aWriter, indent, listeners);\n\n            // Store nested <Realm> element\n            Realm realm = engine.getRealm();\n            if (realm != null) {\n                Realm parentRealm = null;\n                // TODO is this case possible? (see it a old Server 5.0 impl)\n                if (engine.getParent() != null) {\n                    parentRealm = engine.getParent().getRealm();\n                }\n                if (realm != parentRealm) {\n                    storeElement(aWriter, indent, realm);\n\n                }\n            }\n\n            // Store nested <Valve> elements\n            Valve valves[] = engine.getPipeline().getValves();\n            storeElementArray(aWriter, indent, valves);\n\n            // store all <Cluster> elements\n            Cluster cluster = engine.getCluster();\n            if (cluster != null) {\n                storeElement(aWriter, indent, cluster);\n            }\n            // store all <Host> elements\n            Container children[] = engine.findChildren();\n            storeElementArray(aWriter, indent, children);\n\n       }\n    }","commit_id":"39d70e580a160610f789a9439ea9205bc9e0a6df","url":"https://github.com/apache/tomcat"},{"original_method":"/**\n     * Store the specified Host properties and childs\n     * (Listener,Alias,Realm,Valve,Cluster, Context)\n     *\n     * @param aWriter\n     *            PrintWriter to which we are storing\n     * @param indent\n     *            Number of spaces to indent this element\n     * @param aHost\n     *            Host whose properties are being stored\n     *\n     * @exception Exception\n     *                if an exception occurs while storing\n     */\n    @Override\n    public void storeChilds(PrintWriter aWriter, int indent, Object aHost,\n            StoreDescription parentDesc) throws Exception {\n        if (aHost instanceof StandardHost) {\n            StandardHost host = (StandardHost) aHost;\n            // Store nested <Listener> elements\n            if (host instanceof Lifecycle) {\n                LifecycleListener listeners[] = ((Lifecycle) host)\n                        .findLifecycleListeners();\n                storeElementArray(aWriter, indent, listeners);\n            }\n\n            // Store nested <Alias> elements\n            String aliases[] = host.findAliases();\n            getStoreAppender().printTagArray(aWriter, \"Alias\", indent + 2,\n                    aliases);\n\n            // Store nested <Realm> element\n            Realm realm = host.getRealm();\n            if (realm != null) {\n                Realm parentRealm = null;\n                if (host.getParent() != null) {\n                    parentRealm = host.getParent().getRealm();\n                }\n                if (realm != parentRealm) {\n                    storeElement(aWriter, indent, realm);\n                }\n            }\n\n            // Store nested <Valve> elements\n            Valve valves[] = host.getPipeline().getValves();\n            if(valves != null && valves.length > 0 ) {\n                List<Valve> hostValves = new ArrayList<>() ;\n                for(int i = 0 ; i < valves.length ; i++ ) {\n                    if(!( valves[i] instanceof ClusterValve))\n                        hostValves.add(valves[i]);\n                }\n                storeElementArray(aWriter, indent, hostValves.toArray());\n            }\n\n            // store all <Cluster> elements\n            Cluster cluster = host.getCluster();\n            if (cluster != null) {\n                Cluster parentCluster = null;\n                if (host.getParent() != null) {\n                    parentCluster = host.getParent().getCluster();\n                }\n                if (cluster != parentCluster) {\n                    storeElement(aWriter, indent, cluster);\n                }\n            }\n\n            // store all <Context> elements\n            Container children[] = host.findChildren();\n            storeElementArray(aWriter, indent, children);\n        }\n    }","id":82692,"modified_method":"/**\n     * Store the specified Host properties and childs\n     * (Listener,Alias,Realm,Valve,Cluster, Context)\n     *\n     * @param aWriter\n     *            PrintWriter to which we are storing\n     * @param indent\n     *            Number of spaces to indent this element\n     * @param aHost\n     *            Host whose properties are being stored\n     *\n     * @exception Exception\n     *                if an exception occurs while storing\n     */\n    @Override\n    public void storeChilds(PrintWriter aWriter, int indent, Object aHost,\n            StoreDescription parentDesc) throws Exception {\n        if (aHost instanceof StandardHost) {\n            StandardHost host = (StandardHost) aHost;\n            // Store nested <Listener> elements\n            LifecycleListener listeners[] = ((Lifecycle) host)\n                    .findLifecycleListeners();\n            storeElementArray(aWriter, indent, listeners);\n\n            // Store nested <Alias> elements\n            String aliases[] = host.findAliases();\n            getStoreAppender().printTagArray(aWriter, \"Alias\", indent + 2,\n                    aliases);\n\n            // Store nested <Realm> element\n            Realm realm = host.getRealm();\n            if (realm != null) {\n                Realm parentRealm = null;\n                if (host.getParent() != null) {\n                    parentRealm = host.getParent().getRealm();\n                }\n                if (realm != parentRealm) {\n                    storeElement(aWriter, indent, realm);\n                }\n            }\n\n            // Store nested <Valve> elements\n            Valve valves[] = host.getPipeline().getValves();\n            if(valves != null && valves.length > 0 ) {\n                List<Valve> hostValves = new ArrayList<>() ;\n                for(int i = 0 ; i < valves.length ; i++ ) {\n                    if(!( valves[i] instanceof ClusterValve))\n                        hostValves.add(valves[i]);\n                }\n                storeElementArray(aWriter, indent, hostValves.toArray());\n            }\n\n            // store all <Cluster> elements\n            Cluster cluster = host.getCluster();\n            if (cluster != null) {\n                Cluster parentCluster = null;\n                if (host.getParent() != null) {\n                    parentCluster = host.getParent().getCluster();\n                }\n                if (cluster != parentCluster) {\n                    storeElement(aWriter, indent, cluster);\n                }\n            }\n\n            // store all <Context> elements\n            Container children[] = host.findChildren();\n            storeElementArray(aWriter, indent, children);\n        }\n    }","commit_id":"39d70e580a160610f789a9439ea9205bc9e0a6df","url":"https://github.com/apache/tomcat"},{"original_method":"/**\n     * Store Childs from this StandardService description\n     *\n     * @param aWriter\n     * @param indent\n     * @param aService\n     * @throws Exception\n     */\n    @Override\n    public void storeChilds(PrintWriter aWriter, int indent, Object aService,\n            StoreDescription parentDesc) throws Exception {\n        if (aService instanceof StandardService) {\n            StandardService service = (StandardService) aService;\n            // Store nested <Listener> elements\n            if (service instanceof Lifecycle) {\n                LifecycleListener listeners[] = ((Lifecycle) service)\n                        .findLifecycleListeners();\n                storeElementArray(aWriter, indent, listeners);\n            }\n            // Store nested <Executor> elements\n            Executor[] executors = service.findExecutors();\n            storeElementArray(aWriter, indent, executors);\n\n            Connector connectors[] = service.findConnectors();\n            storeElementArray(aWriter, indent, connectors);\n\n            // Store nested <Engine> element (or other appropriate container)\n            Container container = service.getContainer();\n            if (container != null) {\n                StoreDescription elementDesc = getRegistry().findDescription(\n                        container.getClass());\n                if (elementDesc != null) {\n                    IStoreFactory factory = elementDesc.getStoreFactory();\n                    factory.store(aWriter, indent, container);\n                }\n            }\n        }\n\n    }","id":82693,"modified_method":"/**\n     * Store Childs from this StandardService description\n     *\n     * @param aWriter\n     * @param indent\n     * @param aService\n     * @throws Exception\n     */\n    @Override\n    public void storeChilds(PrintWriter aWriter, int indent, Object aService,\n            StoreDescription parentDesc) throws Exception {\n        if (aService instanceof StandardService) {\n            StandardService service = (StandardService) aService;\n            // Store nested <Listener> elements\n            LifecycleListener listeners[] = ((Lifecycle) service)\n                    .findLifecycleListeners();\n            storeElementArray(aWriter, indent, listeners);\n\n            // Store nested <Executor> elements\n            Executor[] executors = service.findExecutors();\n            storeElementArray(aWriter, indent, executors);\n\n            Connector connectors[] = service.findConnectors();\n            storeElementArray(aWriter, indent, connectors);\n\n            // Store nested <Engine> element (or other appropriate container)\n            Container container = service.getContainer();\n            if (container != null) {\n                StoreDescription elementDesc = getRegistry().findDescription(\n                        container.getClass());\n                if (elementDesc != null) {\n                    IStoreFactory factory = elementDesc.getStoreFactory();\n                    factory.store(aWriter, indent, container);\n                }\n            }\n        }\n\n    }","commit_id":"39d70e580a160610f789a9439ea9205bc9e0a6df","url":"https://github.com/apache/tomcat"},{"original_method":"/**\n     * Store the relevant attributes of the specified JavaBean.\n     *\n     * @param writer\n     *            PrintWriter to which we are storing\n     * @param include\n     *            Should we include a <code>className<\/code> attribute?\n     * @param bean\n     *            Bean whose properties are to be rendered as attributes,\n     * @param desc\n     *            RegistryDescrpitor from this bean\n     *\n     * @exception Exception\n     *                if an exception occurs while storing\n     */\n    public void printAttributes(PrintWriter writer, int indent,\n            boolean include, Object bean, StoreDescription desc)\n            throws Exception {\n\n        // Render a className attribute if requested\n        if (include && desc != null && !desc.isStandard()) {\n            writer.print(\" className=\\\"\");\n            writer.print(bean.getClass().getName());\n            writer.print(\"\\\"\");\n        }\n\n        // Acquire the list of properties for this bean\n        PropertyDescriptor descriptors[] = Introspector.getBeanInfo(\n                bean.getClass()).getPropertyDescriptors();\n        if (descriptors == null) {\n            descriptors = new PropertyDescriptor[0];\n        }\n\n        // Create blank instance\n        Object bean2 = defaultInstance(bean);\n        for (int i = 0; i < descriptors.length; i++) {\n            if (descriptors[i] instanceof IndexedPropertyDescriptor) {\n                continue; // Indexed properties are not persisted\n            }\n            if (!isPersistable(descriptors[i].getPropertyType())\n                    || (descriptors[i].getReadMethod() == null)\n                    || (descriptors[i].getWriteMethod() == null)) {\n                continue; // Must be a read-write primitive or String\n            }\n            if (desc.isTransientAttribute(descriptors[i].getName())) {\n                continue; // Skip the specified exceptions\n            }\n            Object value = IntrospectionUtils.getProperty(bean, descriptors[i]\n                    .getName());\n            if (value == null) {\n                continue; // Null values are not persisted\n            }\n            Object value2 = IntrospectionUtils.getProperty(bean2,\n                    descriptors[i].getName());\n            if (value.equals(value2)) {\n                // The property has its default value\n                continue;\n            }\n            printAttribute(writer, indent, bean, desc, descriptors[i].getName(), bean2, value);\n        }\n\n        if (bean instanceof ResourceBase) {\n            ResourceBase resource = (ResourceBase) bean;\n            for (Iterator<String> iter = resource.listProperties(); iter.hasNext();) {\n                String name = (String) iter.next();\n                Object value = resource.getProperty(name);\n                if (!isPersistable(value.getClass())) {\n                    continue;\n                }\n                if (desc.isTransientAttribute(name)) {\n                    continue; // Skip the specified exceptions\n                }\n                printValue(writer, indent, name, value);\n\n            }\n        }\n    }","id":82694,"modified_method":"/**\n     * Store the relevant attributes of the specified JavaBean.\n     *\n     * @param writer\n     *            PrintWriter to which we are storing\n     * @param include\n     *            Should we include a <code>className<\/code> attribute?\n     * @param bean\n     *            Bean whose properties are to be rendered as attributes,\n     * @param desc\n     *            RegistryDescrpitor from this bean\n     *\n     * @exception Exception\n     *                if an exception occurs while storing\n     */\n    public void printAttributes(PrintWriter writer, int indent,\n            boolean include, Object bean, StoreDescription desc)\n            throws Exception {\n\n        // Render a className attribute if requested\n        if (include && desc != null && !desc.isStandard()) {\n            writer.print(\" className=\\\"\");\n            writer.print(bean.getClass().getName());\n            writer.print(\"\\\"\");\n        }\n\n        // Acquire the list of properties for this bean\n        PropertyDescriptor descriptors[] = Introspector.getBeanInfo(\n                bean.getClass()).getPropertyDescriptors();\n        if (descriptors == null) {\n            descriptors = new PropertyDescriptor[0];\n        }\n\n        // Create blank instance\n        Object bean2 = defaultInstance(bean);\n        for (int i = 0; i < descriptors.length; i++) {\n            if (descriptors[i] instanceof IndexedPropertyDescriptor) {\n                continue; // Indexed properties are not persisted\n            }\n            if (!isPersistable(descriptors[i].getPropertyType())\n                    || (descriptors[i].getReadMethod() == null)\n                    || (descriptors[i].getWriteMethod() == null)) {\n                continue; // Must be a read-write primitive or String\n            }\n            if (desc.isTransientAttribute(descriptors[i].getName())) {\n                continue; // Skip the specified exceptions\n            }\n            Object value = IntrospectionUtils.getProperty(bean, descriptors[i]\n                    .getName());\n            if (value == null) {\n                continue; // Null values are not persisted\n            }\n            Object value2 = IntrospectionUtils.getProperty(bean2,\n                    descriptors[i].getName());\n            if (value.equals(value2)) {\n                // The property has its default value\n                continue;\n            }\n            printAttribute(writer, indent, bean, desc, descriptors[i].getName(), bean2, value);\n        }\n\n        if (bean instanceof ResourceBase) {\n            ResourceBase resource = (ResourceBase) bean;\n            for (Iterator<String> iter = resource.listProperties(); iter.hasNext();) {\n                String name = iter.next();\n                Object value = resource.getProperty(name);\n                if (!isPersistable(value.getClass())) {\n                    continue;\n                }\n                if (desc.isTransientAttribute(name)) {\n                    continue; // Skip the specified exceptions\n                }\n                printValue(writer, indent, name, value);\n\n            }\n        }\n    }","commit_id":"39d70e580a160610f789a9439ea9205bc9e0a6df","url":"https://github.com/apache/tomcat"},{"original_method":"/**\n     * Store Server from Object Name (Catalina:type=Server)\n     *\n     * @param aServerName\n     *            Server ObjectName\n     * @param backup\n     * @param externalAllowed\n     *            s *\n     * @throws MalformedObjectNameException\n     */\n    public synchronized void storeServer(String aServerName, boolean backup,\n            boolean externalAllowed) throws MalformedObjectNameException {\n        if (aServerName == null || aServerName.length() == 0) {\n            if (log.isErrorEnabled())\n                log.error(\"Please, call with a correct server ObjectName!\");\n            return;\n        }\n        MBeanServer mserver = MBeanUtils.createServer();\n        ObjectName objectName = new ObjectName(aServerName);\n        if (mserver.isRegistered(objectName)) {\n            try {\n                Server aServer = (Server) mserver.getAttribute(objectName,\n                        \"managedResource\");\n                StoreDescription desc = null;\n                desc = getRegistry().findDescription(StandardContext.class);\n                if (desc != null) {\n                    boolean oldSeparate = desc.isStoreSeparate();\n                    boolean oldBackup = desc.isBackup();\n                    boolean oldExternalAllowed = desc.isExternalAllowed();\n                    try {\n                        desc.setStoreSeparate(true);\n                        desc.setBackup(backup);\n                        desc.setExternalAllowed(externalAllowed);\n                        store((Server) aServer);\n                    } finally {\n                        desc.setStoreSeparate(oldSeparate);\n                        desc.setBackup(oldBackup);\n                        desc.setExternalAllowed(oldExternalAllowed);\n                    }\n                } else\n                    store((Server) aServer);\n            } catch (Exception e) {\n                if (log.isInfoEnabled())\n                    log.info(\"Object \" + aServerName\n                            + \" is no a Server instance or store exception\", e);\n            }\n        } else if (log.isInfoEnabled())\n            log.info(\"Server \" + aServerName + \" not found!\");\n    }","id":82695,"modified_method":"/**\n     * Store Server from Object Name (Catalina:type=Server)\n     *\n     * @param aServerName\n     *            Server ObjectName\n     * @param backup\n     * @param externalAllowed\n     *            s *\n     * @throws MalformedObjectNameException\n     */\n    public synchronized void storeServer(String aServerName, boolean backup,\n            boolean externalAllowed) throws MalformedObjectNameException {\n        if (aServerName == null || aServerName.length() == 0) {\n            if (log.isErrorEnabled())\n                log.error(\"Please, call with a correct server ObjectName!\");\n            return;\n        }\n        MBeanServer mserver = MBeanUtils.createServer();\n        ObjectName objectName = new ObjectName(aServerName);\n        if (mserver.isRegistered(objectName)) {\n            try {\n                Server aServer = (Server) mserver.getAttribute(objectName,\n                        \"managedResource\");\n                StoreDescription desc = null;\n                desc = getRegistry().findDescription(StandardContext.class);\n                if (desc != null) {\n                    boolean oldSeparate = desc.isStoreSeparate();\n                    boolean oldBackup = desc.isBackup();\n                    boolean oldExternalAllowed = desc.isExternalAllowed();\n                    try {\n                        desc.setStoreSeparate(true);\n                        desc.setBackup(backup);\n                        desc.setExternalAllowed(externalAllowed);\n                        store(aServer);\n                    } finally {\n                        desc.setStoreSeparate(oldSeparate);\n                        desc.setBackup(oldBackup);\n                        desc.setExternalAllowed(oldExternalAllowed);\n                    }\n                } else {\n                    store(aServer);\n                }\n            } catch (Exception e) {\n                if (log.isInfoEnabled())\n                    log.info(\"Object \" + aServerName\n                            + \" is no a Server instance or store exception\", e);\n            }\n        } else if (log.isInfoEnabled())\n            log.info(\"Server \" + aServerName + \" not found!\");\n    }","commit_id":"39d70e580a160610f789a9439ea9205bc9e0a6df","url":"https://github.com/apache/tomcat"},{"original_method":"public StoreDescription unregisterDescription(StoreDescription desc) {\n        String key = desc.getId();\n        if (key == null || \"\".equals(key))\n            key = desc.getTagClass();\n        return (StoreDescription) descriptors.remove(key);\n    }","id":82696,"modified_method":"public StoreDescription unregisterDescription(StoreDescription desc) {\n        String key = desc.getId();\n        if (key == null || \"\".equals(key))\n            key = desc.getTagClass();\n        return descriptors.remove(key);\n    }","commit_id":"39d70e580a160610f789a9439ea9205bc9e0a6df","url":"https://github.com/apache/tomcat"},{"original_method":"/**\n     * Find a description for id. Handle interface search when no direct match\n     * found.\n     *\n     * @param id\n     * @return The description\n     */\n    public StoreDescription findDescription(String id) {\n        if (log.isDebugEnabled())\n            log.debug(\"search descriptor \" + id);\n        StoreDescription desc = (StoreDescription) descriptors.get(id);\n        if (desc == null) {\n            Class<?> aClass = null;\n            try {\n                aClass = Class.forName(id, true, this.getClass()\n                        .getClassLoader());\n            } catch (ClassNotFoundException e) {\n                log.error(\"ClassName:\" + id, e);\n            }\n            if (aClass != null) {\n                desc = (StoreDescription) descriptors.get(aClass.getName());\n                for (int i = 0; desc == null && i < interfaces.length; i++) {\n                    if (interfaces[i].isAssignableFrom(aClass)) {\n                        desc = (StoreDescription) descriptors.get(interfaces[i]\n                                .getName());\n                    }\n                }\n            }\n        }\n        if (log.isDebugEnabled())\n            if (desc != null)\n                log.debug(\"find descriptor \" + id + \"#\" + desc.getTag() + \"#\"\n                        + desc.getStoreFactoryClass());\n            else\n                log.debug((\"Can't find descriptor for key \" + id));\n        return desc;\n    }","id":82697,"modified_method":"/**\n     * Find a description for id. Handle interface search when no direct match\n     * found.\n     *\n     * @param id\n     * @return The description\n     */\n    public StoreDescription findDescription(String id) {\n        if (log.isDebugEnabled())\n            log.debug(\"search descriptor \" + id);\n        StoreDescription desc = descriptors.get(id);\n        if (desc == null) {\n            Class<?> aClass = null;\n            try {\n                aClass = Class.forName(id, true, this.getClass()\n                        .getClassLoader());\n            } catch (ClassNotFoundException e) {\n                log.error(\"ClassName:\" + id, e);\n            }\n            if (aClass != null) {\n                desc = descriptors.get(aClass.getName());\n                for (int i = 0; desc == null && i < interfaces.length; i++) {\n                    if (interfaces[i].isAssignableFrom(aClass)) {\n                        desc = descriptors.get(interfaces[i].getName());\n                    }\n                }\n            }\n        }\n        if (log.isDebugEnabled())\n            if (desc != null)\n                log.debug(\"find descriptor \" + id + \"#\" + desc.getTag() + \"#\"\n                        + desc.getStoreFactoryClass());\n            else\n                log.debug((\"Can't find descriptor for key \" + id));\n        return desc;\n    }","commit_id":"39d70e580a160610f789a9439ea9205bc9e0a6df","url":"https://github.com/apache/tomcat"},{"original_method":"/**\n     * Store a Context without backup add separate file or when configFile =\n     * null a aWriter.\n     *\n     * @param aWriter\n     * @param indent\n     * @param aContext\n     * @throws Exception\n     */\n    protected void storeContextSeparate(PrintWriter aWriter, int indent,\n            StandardContext aContext) throws Exception {\n        URL configFile = aContext.getConfigFile();\n        PrintWriter writer = null;\n        if (configFile != null) {\n            File config = new File(configFile.toURI());\n            if (!config.isAbsolute()) {\n                config = new File(System.getProperty(\"catalina.base\"),\n                        config.getPath());\n            }\n            if( (!config.isFile()) || (!config.canWrite())) {\n                log.error(\"Cannot write context output file at \"\n                            + configFile + \", not saving.\");\n                throw new IOException(\"Context save file at \"\n                                      + configFile\n                                      + \" not a file, or not writable.\");\n            }\n            if (log.isInfoEnabled())\n                log.info(\"Store Context \" + aContext.getPath()\n                        + \" separate at file \" + config);\n            try {\n                writer = new PrintWriter(new OutputStreamWriter(\n                        new FileOutputStream(config), getRegistry()\n                                .getEncoding()));\n                storeXMLHead(writer);\n                super.store(writer, -2, aContext);\n            } finally {\n                if (writer != null) {\n                    try {\n                        writer.flush();\n                    } catch (Exception e) {\n                        ;\n                    }\n                    try {\n                        writer.close();\n                    } catch (Throwable t) {\n                        ;\n                    }\n                }\n            }\n        } else {\n            super.store(aWriter, indent, aContext);\n        }\n    }","id":82698,"modified_method":"/**\n     * Store a Context without backup add separate file or when configFile =\n     * null a aWriter.\n     *\n     * @param aWriter\n     * @param indent\n     * @param aContext\n     * @throws Exception\n     */\n    protected void storeContextSeparate(PrintWriter aWriter, int indent,\n            StandardContext aContext) throws Exception {\n        URL configFile = aContext.getConfigFile();\n        PrintWriter writer = null;\n        if (configFile != null) {\n            File config = new File(configFile.toURI());\n            if (!config.isAbsolute()) {\n                config = new File(System.getProperty(\"catalina.base\"),\n                        config.getPath());\n            }\n            if( (!config.isFile()) || (!config.canWrite())) {\n                log.error(\"Cannot write context output file at \"\n                            + configFile + \", not saving.\");\n                throw new IOException(\"Context save file at \"\n                                      + configFile\n                                      + \" not a file, or not writable.\");\n            }\n            if (log.isInfoEnabled())\n                log.info(\"Store Context \" + aContext.getPath()\n                        + \" separate at file \" + config);\n            try {\n                writer = new PrintWriter(new OutputStreamWriter(\n                        new FileOutputStream(config), getRegistry()\n                                .getEncoding()));\n                storeXMLHead(writer);\n                super.store(writer, -2, aContext);\n            } finally {\n                if (writer != null) {\n                    try {\n                        writer.flush();\n                    } catch (Exception e) {\n                        // Ignore\n                    }\n                    try {\n                        writer.close();\n                    } catch (Throwable t) {\n                        // Ignore\n                    }\n                }\n            }\n        } else {\n            super.store(aWriter, indent, aContext);\n        }\n    }","commit_id":"0a07f5d49c1b6f96efb7047dfdd5255959330ac2","url":"https://github.com/apache/tomcat"},{"original_method":"/**\n     * Store Childs from this StandardServer descrition\n     *\n     * @param aWriter\n     * @param indent\n     * @param aObject\n     * @param parentDesc\n     * @throws Exception\n     */\n    @Override\n    public void storeChilds(PrintWriter aWriter, int indent, Object aObject,\n            StoreDescription parentDesc) throws Exception {\n        if (aObject instanceof StandardServer) {\n            StandardServer server = (StandardServer) aObject;\n            // Store nested <Listener> elements\n            if (server instanceof Lifecycle) {\n                LifecycleListener listeners[] = ((Lifecycle) server)\n                        .findLifecycleListeners();\n                storeElementArray(aWriter, indent, listeners);\n                /*LifecycleListener listener = null;\n                for (int i = 0; listener == null && i < listeners.length; i++)\n                    if (listeners[i] instanceof ServerLifecycleListener)\n                        listener = listeners[i];\n                if (listener != null) {\n                    StoreDescription elementDesc = getRegistry()\n                            .findDescription(\n                                    StandardServer.class.getName()\n                                            + \".[ServerLifecycleListener]\");\n                    if (elementDesc != null) {\n                        elementDesc.getStoreFactory().store(aWriter, indent,\n                                listener);\n                    }\n                }*/\n            }\n            // Store nested <GlobalNamingResources> element\n            NamingResources globalNamingResources = server\n                    .getGlobalNamingResources();\n            StoreDescription elementDesc = getRegistry().findDescription(\n                    NamingResources.class.getName()\n                            + \".[GlobalNamingResources]\");\n            if (elementDesc != null) {\n                elementDesc.getStoreFactory().store(aWriter, indent,\n                        globalNamingResources);\n            }\n            // Store nested <Service> elements\n            Service services[] = server.findServices();\n            storeElementArray(aWriter, indent, services);\n        }\n    }","id":82699,"modified_method":"/**\n     * Store Childs from this StandardServer descrition\n     *\n     * @param aWriter\n     * @param indent\n     * @param aObject\n     * @param parentDesc\n     * @throws Exception\n     */\n    @Override\n    public void storeChilds(PrintWriter aWriter, int indent, Object aObject,\n            StoreDescription parentDesc) throws Exception {\n        if (aObject instanceof StandardServer) {\n            StandardServer server = (StandardServer) aObject;\n            // Store nested <Listener> elements\n            LifecycleListener listeners[] = ((Lifecycle) server)\n                    .findLifecycleListeners();\n            storeElementArray(aWriter, indent, listeners);\n            /*LifecycleListener listener = null;\n            for (int i = 0; listener == null && i < listeners.length; i++)\n                if (listeners[i] instanceof ServerLifecycleListener)\n                    listener = listeners[i];\n            if (listener != null) {\n                StoreDescription elementDesc = getRegistry()\n                        .findDescription(\n                                StandardServer.class.getName()\n                                        + \".[ServerLifecycleListener]\");\n                if (elementDesc != null) {\n                    elementDesc.getStoreFactory().store(aWriter, indent,\n                            listener);\n                }\n            }*/\n            // Store nested <GlobalNamingResources> element\n            NamingResources globalNamingResources = server\n                    .getGlobalNamingResources();\n            StoreDescription elementDesc = getRegistry().findDescription(\n                    NamingResources.class.getName()\n                            + \".[GlobalNamingResources]\");\n            if (elementDesc != null) {\n                elementDesc.getStoreFactory().store(aWriter, indent,\n                        globalNamingResources);\n            }\n            // Store nested <Service> elements\n            Service services[] = server.findServices();\n            storeElementArray(aWriter, indent, services);\n        }\n    }","commit_id":"0a07f5d49c1b6f96efb7047dfdd5255959330ac2","url":"https://github.com/apache/tomcat"},{"original_method":"/**\n     * create StoreConfig MBean and load StoreRgistry MBeans name is\n     * <i>Catalina:type=StoreConfig <\/i>\n     */\n    protected void createMBean(StandardServer server) {\n        StoreLoader loader = new StoreLoader();\n        try {\n            Class<?> clazz = Class.forName(getStoreConfigClass(), true, this\n                    .getClass().getClassLoader());\n            storeConfig = (IStoreConfig) clazz.newInstance();\n            if (null == getStoreRegistry())\n                // default Loading\n                loader.load();\n            else\n                // load a spezial file registry (url)\n                loader.load(getStoreRegistry());\n            // use the loader Registry\n            storeConfig.setRegistry(loader.getRegistry());\n            storeConfig.setServer(server);\n        } catch (Exception e) {\n            log.error(\"createMBean load\", e);\n            return;\n        }\n        MBeanServer mserver = MBeanUtils.createServer();\n        InputStream descriptor = null;\n        try {\n            ObjectName objectName = new ObjectName(\"Catalina:type=StoreConfig\" );\n            if (!mserver.isRegistered(objectName)) {\n                registry.registerComponent(storeConfig, objectName, \"StoreConfig\");\n            }\n        } catch (Exception ex) {\n            log.error(\"createMBean register MBean\", ex);\n\n        } finally {\n            if (descriptor != null) {\n                try {\n                    descriptor.close();\n                    descriptor = null;\n                } catch (Exception ex) {\n                    log.error(\"createMBean register MBean\", ex);\n                }\n            }\n        }\n    }","id":82700,"modified_method":"/**\n     * create StoreConfig MBean and load StoreRgistry MBeans name is\n     * <i>Catalina:type=StoreConfig <\/i>\n     */\n    protected void createMBean(StandardServer server) {\n        StoreLoader loader = new StoreLoader();\n        try {\n            Class<?> clazz = Class.forName(getStoreConfigClass(), true, this\n                    .getClass().getClassLoader());\n            storeConfig = (IStoreConfig) clazz.newInstance();\n            if (null == getStoreRegistry())\n                // default Loading\n                loader.load();\n            else\n                // load a spezial file registry (url)\n                loader.load(getStoreRegistry());\n            // use the loader Registry\n            storeConfig.setRegistry(loader.getRegistry());\n            storeConfig.setServer(server);\n        } catch (Exception e) {\n            log.error(\"createMBean load\", e);\n            return;\n        }\n        MBeanServer mserver = MBeanUtils.createServer();\n        try {\n            ObjectName objectName = new ObjectName(\"Catalina:type=StoreConfig\" );\n            if (!mserver.isRegistered(objectName)) {\n                registry.registerComponent(storeConfig, objectName, \"StoreConfig\");\n            }\n        } catch (Exception ex) {\n            log.error(\"createMBean register MBean\", ex);\n        }\n    }","commit_id":"0a07f5d49c1b6f96efb7047dfdd5255959330ac2","url":"https://github.com/apache/tomcat"},{"original_method":"/**\n     *\n     * @param aFile\n     * @return The server file\n     */\n    protected File serverFile(String aFile) {\n\n        if (aFile == null || (aFile != null && aFile.length() < 1))\n            aFile = \"server-registry.xml\";\n        File file = new File(aFile);\n        if (!file.isAbsolute())\n            file = new File(System.getProperty(\"catalina.base\") + \"/conf\",\n                    aFile);\n        try {\n            file = file.getCanonicalFile();\n        } catch (IOException e) {\n            log.error(e);\n        }\n        return (file);\n    }","id":82701,"modified_method":"/**\n     *\n     * @param aFile\n     * @return The server file\n     */\n    protected File serverFile(String aFile) {\n\n        if (aFile == null || aFile.length() < 1)\n            aFile = \"server-registry.xml\";\n        File file = new File(aFile);\n        if (!file.isAbsolute())\n            file = new File(System.getProperty(\"catalina.base\") + \"/conf\",\n                    aFile);\n        try {\n            file = file.getCanonicalFile();\n        } catch (IOException e) {\n            log.error(e);\n        }\n        return (file);\n    }","commit_id":"0a07f5d49c1b6f96efb7047dfdd5255959330ac2","url":"https://github.com/apache/tomcat"},{"original_method":"/**\n   * Registers the given entity name in the default model group as taggable.  An entity must\n   * be registered as taggable prior to attempting any tagging operations on it.  The application\n   * constructor is an obvious place to register an entity as taggable.  If the entity does not \n   * contain a flattened to-many tags relationship, a join entity (between your entity and \"ERTag\") \n   * and a flattened tags relationship (named \"tags\") will be automatically generated.\n   * \n   * @param entityName the name of the entity to lookup\n   * @return the join entity (you can probably ignore this)\n   */\n  public static EOEntity registerTaggable(String entityName) {\n    return ERTaggableEntity.registerTaggable(EOModelGroup.defaultGroup().entityNamed(entityName));\n  }","id":82702,"modified_method":"/**\n   * Registers the given entity name in the default model group as taggable.  An entity must\n   * be registered as taggable prior to attempting any tagging operations on it.  The application\n   * constructor is an obvious place to register an entity as taggable.  If the entity does not \n   * contain a flattened to-many tags relationship, a join entity (between your entity and \"ERTag\") \n   * and a flattened tags relationship (named \"tags\") will be automatically generated.\n   * \n   * @param entityName the name of the entity to lookup\n   * @return the join entity (you can probably ignore this)\n   */\n  public static EOEntity registerTaggable(String entityName) {\n    EOEntity entity = EOModelGroup.defaultGroup().entityNamed(entityName);\n    if (entity == null) {\n      throw new IllegalArgumentException(\"There is no entity named '\" + entityName + \"' in this model group.\");\n    }\n    return ERTaggableEntity.registerTaggable(entity);\n  }","commit_id":"2ff1113cf07a57be2eb4917171e88ea9cd74863e","url":"https://github.com/wocommunity/wonder"},{"original_method":"/**\n   * Registers the given entity as taggable.  An entity must be registered as taggable prior \n   * to attempting any tagging operations on it.  The application constructor is an obvious \n   * place to register an entity as taggable.  If the entity does not contain a flattened \n   * to-many tags relationship, a join entity and a flattened tags relationship will be \n   * automatically generated. \n   * \n   * @param entity the entity to register\n   * @param tagsRelationshipName the name of the flattened to-many tags relationship\n   * @param tagEntity the ERTag entity that contains the tags for this entity\n   * @return the join entity (you can probably ignore this)\n   */\n  @SuppressWarnings(\"unchecked\")\n  public static EOEntity registerTaggable(EOEntity entity, String tagsRelationshipName, EOEntity tagEntity) {\n    EOEntity joinEntity = null;\n    EORelationship tagsRelationship = ERTaggableEntity.tagsRelationshipForEntity(entity, tagEntity);\n    if (tagsRelationship == null) {\n      joinEntity = new EOEntity();\n      joinEntity.setName(entity.name() + \"Tag\");\n      joinEntity.setExternalName(joinEntity.name());\n\n      EORelationship joinToItemRelationship = new EORelationship();\n      joinToItemRelationship.setName(entity.name());\n      for (EOAttribute itemPrimaryKey : (NSArray<EOAttribute>) entity.primaryKeyAttributes()) {\n        EOAttribute itemFKAttribute = new EOAttribute();\n        itemFKAttribute.setExternalType(itemPrimaryKey.externalType());\n        itemFKAttribute.setValueType(itemPrimaryKey.valueType());\n        itemFKAttribute.setName(\"item_\" + itemPrimaryKey.name());\n        itemFKAttribute.setColumnName(\"item_\" + itemPrimaryKey.columnName());\n        itemFKAttribute.setClassName(itemPrimaryKey.className());\n        itemFKAttribute.setWidth(itemPrimaryKey.width());\n        itemFKAttribute.setPrecision(itemPrimaryKey.precision());\n        itemFKAttribute.setScale(itemPrimaryKey.scale());\n        itemFKAttribute.setAllowsNull(false);\n        joinEntity.addAttribute(itemFKAttribute);\n\n        joinToItemRelationship.addJoin(new EOJoin(itemFKAttribute, itemPrimaryKey));\n      }\n      joinEntity.addRelationship(joinToItemRelationship);\n\n      EORelationship joinToTagRelationship = new EORelationship();\n      joinToTagRelationship.setName(tagEntity.name());\n      for (EOAttribute tagPrimaryKey : (NSArray<EOAttribute>) tagEntity.primaryKeyAttributes()) {\n        EOAttribute tagFKAttribute = new EOAttribute();\n        tagFKAttribute.setExternalType(tagPrimaryKey.externalType());\n        tagFKAttribute.setValueType(tagPrimaryKey.valueType());\n        tagFKAttribute.setName(\"tag_\" + tagPrimaryKey.name());\n        tagFKAttribute.setColumnName(\"tag_\" + tagPrimaryKey.columnName());\n        tagFKAttribute.setClassName(tagPrimaryKey.className());\n        tagFKAttribute.setWidth(tagPrimaryKey.width());\n        tagFKAttribute.setPrecision(tagPrimaryKey.precision());\n        tagFKAttribute.setScale(tagPrimaryKey.scale());\n        tagFKAttribute.setAllowsNull(false);\n        joinEntity.addAttribute(tagFKAttribute);\n\n        joinToTagRelationship.addJoin(new EOJoin(tagFKAttribute, tagPrimaryKey));\n      }\n      joinEntity.addRelationship(joinToTagRelationship);\n\n      entity.model().addEntity(joinEntity);\n\n      EORelationship itemToJoinRelationship = joinToItemRelationship._makeInverseRelationship();\n      itemToJoinRelationship.setDeleteRule(1); // cascade\n      entity.addRelationship(itemToJoinRelationship);\n\n      EORelationship itemToTagsRelationship = new EORelationship();\n      itemToTagsRelationship.setDefinition(itemToJoinRelationship.name() + \".\" + joinToTagRelationship.name());\n      entity.addRelationship(itemToTagsRelationship);\n    }\n    else {\n      EORelationship itemToJoinRelationship = (EORelationship) tagsRelationship.componentRelationships().objectAtIndex(0);\n      joinEntity = itemToJoinRelationship.destinationEntity();\n    }\n\n    NSMutableDictionary userInfo = entity.userInfo().mutableClone();\n    userInfo.setObjectForKey(Boolean.TRUE, ERTaggableEntity.ERTAGGABLE_KEY);\n    entity.setUserInfo(userInfo);\n\n    return joinEntity;\n  }","id":82703,"modified_method":"/**\n   * Registers the given entity as taggable.  An entity must be registered as taggable prior \n   * to attempting any tagging operations on it.  The application constructor is an obvious \n   * place to register an entity as taggable.  If the entity does not contain a flattened \n   * to-many tags relationship, a join entity and a flattened tags relationship will be \n   * automatically generated. \n   * \n   * @param entity the entity to register\n   * @param tagsRelationshipName the name of the flattened to-many tags relationship\n   * @param tagEntity the ERTag entity that contains the tags for this entity\n   * @return the join entity (you can probably ignore this)\n   */\n  @SuppressWarnings(\"unchecked\")\n  public static EOEntity registerTaggable(EOEntity entity, String tagsRelationshipName, EOEntity tagEntity) {\n    EOEntity joinEntity = null;\n    EORelationship tagsRelationship = ERTaggableEntity.tagsRelationshipForEntity(entity, tagEntity);\n    if (tagsRelationship == null) {\n      joinEntity = new EOEntity();\n      joinEntity.setName(entity.name() + \"Tag\");\n      joinEntity.setExternalName(joinEntity.name());\n\n      EORelationship joinToItemRelationship = new EORelationship();\n      joinToItemRelationship.setName(entity.name());\n      joinToItemRelationship.setIsMandatory(true);\n      joinToItemRelationship.setToMany(false);\n      joinToItemRelationship.setJoinSemantic(EORelationship.InnerJoin);\n      joinEntity.addRelationship(joinToItemRelationship);\n      for (EOAttribute itemPrimaryKey : (NSArray<EOAttribute>) entity.primaryKeyAttributes()) {\n        EOAttribute itemFKAttribute = new EOAttribute();\n        itemFKAttribute.setExternalType(itemPrimaryKey.externalType());\n        itemFKAttribute.setValueType(itemPrimaryKey.valueType());\n        itemFKAttribute.setName(\"item_\" + itemPrimaryKey.name());\n        itemFKAttribute.setColumnName(\"item_\" + itemPrimaryKey.columnName());\n        itemFKAttribute.setClassName(itemPrimaryKey.className());\n        itemFKAttribute.setWidth(itemPrimaryKey.width());\n        itemFKAttribute.setPrecision(itemPrimaryKey.precision());\n        itemFKAttribute.setScale(itemPrimaryKey.scale());\n        itemFKAttribute.setAllowsNull(false);\n        joinEntity.addAttribute(itemFKAttribute);\n\n        EOJoin join = new EOJoin(itemFKAttribute, itemPrimaryKey);\n        joinToItemRelationship.addJoin(join);\n      }\n\n      EORelationship joinToTagRelationship = new EORelationship();\n      joinToTagRelationship.setName(tagEntity.name());\n      joinToTagRelationship.setIsMandatory(true);\n      joinToTagRelationship.setToMany(false);\n      joinToTagRelationship.setJoinSemantic(EORelationship.InnerJoin);\n      joinEntity.addRelationship(joinToTagRelationship);\n      for (EOAttribute tagPrimaryKey : (NSArray<EOAttribute>) tagEntity.primaryKeyAttributes()) {\n        EOAttribute tagFKAttribute = new EOAttribute();\n        tagFKAttribute.setExternalType(tagPrimaryKey.externalType());\n        tagFKAttribute.setValueType(tagPrimaryKey.valueType());\n        tagFKAttribute.setName(\"tag_\" + tagPrimaryKey.name());\n        tagFKAttribute.setColumnName(\"tag_\" + tagPrimaryKey.columnName());\n        tagFKAttribute.setClassName(tagPrimaryKey.className());\n        tagFKAttribute.setWidth(tagPrimaryKey.width());\n        tagFKAttribute.setPrecision(tagPrimaryKey.precision());\n        tagFKAttribute.setScale(tagPrimaryKey.scale());\n        tagFKAttribute.setAllowsNull(false);\n        joinEntity.addAttribute(tagFKAttribute);\n\n        joinToTagRelationship.addJoin(new EOJoin(tagFKAttribute, tagPrimaryKey));\n      }\n\n      joinEntity.setPrimaryKeyAttributes(joinEntity.attributes());\n      joinEntity.setAttributesUsedForLocking(joinEntity.attributes());\n      entity.model().addEntity(joinEntity);\n\n      EORelationship itemToJoinRelationship = new EORelationship();\n      itemToJoinRelationship.setEntity(joinToItemRelationship.destinationEntity());\n      itemToJoinRelationship.setName(\"_eofInv_\" + joinToItemRelationship.entity().name() + \"_\" + joinToItemRelationship.name());\n      NSArray<EOJoin> joinToItemRelationshipJoins = joinToItemRelationship.joins();\n      for (int joinNum = joinToItemRelationshipJoins.count() - 1; joinNum >= 0; joinNum--) {\n        EOJoin join = joinToItemRelationshipJoins.objectAtIndex(joinNum);\n        EOJoin inverseJoin = new EOJoin(join.destinationAttribute(), join.sourceAttribute());\n        itemToJoinRelationship.addJoin(inverseJoin);\n      }\n      itemToJoinRelationship.setDeleteRule(1); // cascade\n      itemToJoinRelationship.setJoinSemantic(EORelationship.InnerJoin);\n      itemToJoinRelationship.setToMany(true);\n      itemToJoinRelationship.setPropagatesPrimaryKey(true);\n      entity.addRelationship(itemToJoinRelationship);\n\n      EORelationship itemToTagsRelationship = new EORelationship();\n      itemToTagsRelationship.setName(tagsRelationshipName);\n      entity.addRelationship(itemToTagsRelationship);\n      itemToTagsRelationship.setDefinition(itemToJoinRelationship.name() + \".\" + joinToTagRelationship.name());\n      entity.setClassProperties(entity.classProperties().arrayByAddingObject(itemToTagsRelationship));\n    }\n    else {\n      EORelationship itemToJoinRelationship = (EORelationship) tagsRelationship.componentRelationships().objectAtIndex(0);\n      joinEntity = itemToJoinRelationship.destinationEntity();\n    }\n\n    NSMutableDictionary userInfo = entity.userInfo().mutableClone();\n    userInfo.setObjectForKey(Boolean.TRUE, ERTaggableEntity.ERTAGGABLE_KEY);\n    entity.setUserInfo(userInfo);\n\n    return joinEntity;\n  }","commit_id":"2ff1113cf07a57be2eb4917171e88ea9cd74863e","url":"https://github.com/wocommunity/wonder"},{"original_method":"/**\n   * Registers the given entity as taggable.  An entity must be registered as taggable prior \n   * to attempting any tagging operations on it.  The application constructor is an obvious \n   * place to register an entity as taggable.  If the entity does not contain a flattened \n   * to-many tags relationship, a join entity and a flattened tags relationship will be \n   * automatically generated. \n   * \n   * @param entity the entity to register\n   * @param tagsRelationshipName the name of the flattened to-many tags relationship\n   * @return the join entity (you can probably ignore this)\n   */\n  public static EOEntity registerTaggable(EOEntity entity, String tagsRelationshipName) {\n    return ERTaggableEntity.registerTaggable(entity, tagsRelationshipName, entity.model().modelGroup().entityNamed(ERTag.ENTITY_NAME));\n  }","id":82704,"modified_method":"/**\n   * Registers the given entity as taggable.  An entity must be registered as taggable prior \n   * to attempting any tagging operations on it.  The application constructor is an obvious \n   * place to register an entity as taggable.  If the entity does not contain a flattened \n   * to-many tags relationship, a join entity and a flattened tags relationship will be \n   * automatically generated. \n   * \n   * @param entity the entity to register\n   * @param tagsRelationshipName the name of the flattened to-many tags relationship\n   * @return the join entity (you can probably ignore this)\n   */\n  public static EOEntity registerTaggable(EOEntity entity, String tagsRelationshipName) {\n    EOEntity tagEntity = entity.model().modelGroup().entityNamed(ERTag.ENTITY_NAME);\n    if (tagEntity == null) {\n      throw new IllegalArgumentException(\"There is no entity named '\" + ERTag.ENTITY_NAME + \"' in this model group.\");\n    }\n    return ERTaggableEntity.registerTaggable(entity, tagsRelationshipName, tagEntity);\n  }","commit_id":"2ff1113cf07a57be2eb4917171e88ea9cd74863e","url":"https://github.com/wocommunity/wonder"},{"original_method":"/**\n   * {@inheritDoc}\n   */\n  @Override\n  public DequeueResult dequeue(QueueConsumer consumer, QueueConfig config, ReadPointer readPointer)\n    throws OperationException {\n    return dequeueInternal(consumer, config, null, readPointer).getFirst();\n  }","id":82705,"modified_method":"/**\n   * {@inheritDoc}\n   */\n  @Override\n  public DequeueResult dequeue(QueueConsumer consumer, QueueConfig config, ReadPointer readPointer)\n    throws OperationException {\n    if(consumer instanceof StatefulQueueConsumer) {\n      return dequeue((StatefulQueueConsumer) consumer, readPointer);\n    }\n    return dequeueInternal(consumer, config, null, readPointer).getFirst();\n  }","commit_id":"c965c5946911063352804e591955e8d1927aed6e","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public DequeueResult dequeue(QueueConsumer consumer, ReadPointer readPointer) throws OperationException {\n    return dequeueInternal(consumer, consumer.getQueueConfig(), null, readPointer).getFirst();\n  }","id":82706,"modified_method":"@Override\n  public DequeueResult dequeue(QueueConsumer consumer, ReadPointer readPointer) throws OperationException {\n    if(consumer instanceof StatefulQueueConsumer) {\n      return dequeue((StatefulQueueConsumer) consumer, readPointer);\n    }\n    return dequeueInternal(consumer, consumer.getQueueConfig(), null, readPointer).getFirst();\n  }","commit_id":"c965c5946911063352804e591955e8d1927aed6e","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public void ack(QueueEntryPointer entryPointer, QueueConsumer consumer, ReadPointer readPointer)\n    throws OperationException {\n    // TODO: 1. Later when active entry can saved in memory, there is no need to write it into HBase\n    // TODO: 2. Need to treat Ack as a simple write operation so that it can use a simple write rollback for unack\n    // TODO: 3. Use Transaction.getTransactionId instead ReadPointer\n    QueuePartitioner partitioner=consumer.getQueueConfig().getPartitionerType().getPartitioner();\n\n    if (partitioner.isDisjoint()) {\n      this.table.put(makeRowKey(CONSUMER_META_PREFIX, consumer.getGroupId(), consumer.getInstanceId()),\n                     new byte[][] {makeColumnName(META_ENTRY_PREFIX, entryPointer.getEntryId()), ACTIVE_ENTRY},\n                     readPointer.getMaximum(),\n                     new byte[][] {new EntryConsumerMeta(EntryConsumerMeta.EntryState.ACKED, 0).getBytes(), INVALID_ENTRY_ID_BYTES});\n    } else {\n\n      byte[] rowKey = makeRowKey(CONSUMER_META_PREFIX, consumer.getGroupId(), consumer.getInstanceId());\n      byte[] colKey = makeColumnName(META_ENTRY_PREFIX, entryPointer.getEntryId());\n      byte[] acked = new EntryConsumerMeta(EntryConsumerMeta.EntryState.ACKED, 0).getBytes();\n\n      // verify it is not acked yet\n      OperationResult<byte[]> result = this.table.get(rowKey, colKey, readPointer);\n      if (result.isEmpty()) {\n        throw new OperationException(StatusCode.ILLEGAL_ACK, \"Entry has never been claimed. \");\n      }\n      EntryConsumerMeta meta = EntryConsumerMeta.fromBytes(result.getValue());\n      if (!meta.isClaimed()) {\n        throw new OperationException(StatusCode.ILLEGAL_ACK, \"Entry is \" + meta.getState().name());\n      }\n      // now put the new value\n      this.table.put(rowKey,\n                     new byte[][] { colKey, ACTIVE_ENTRY },\n                     readPointer.getMaximum(),\n                     new byte[][] { acked, INVALID_ENTRY_ID_BYTES} );\n    }\n  }","id":82707,"modified_method":"@Override\n  public void ack(QueueEntryPointer entryPointer, QueueConsumer consumer, ReadPointer readPointer)\n    throws OperationException {\n    if(consumer instanceof StatefulQueueConsumer) {\n      ack(entryPointer, (StatefulQueueConsumer) consumer, readPointer);\n      return;\n    }\n    ackInternal(entryPointer, consumer, readPointer);\n  }","commit_id":"c965c5946911063352804e591955e8d1927aed6e","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public void ack(QueueEntryPointer entryPointer, StatefulQueueConsumer statefulConsumer, ReadPointer readPointer) throws OperationException {\n    ack(entryPointer, (QueueConsumer) statefulConsumer, readPointer);\n    statefulConsumer.getQueueState().setActiveEntryId(INVALID_ENTRY_ID);\n  }","id":82708,"modified_method":"@Override\n  public void ack(QueueEntryPointer entryPointer, StatefulQueueConsumer statefulConsumer, ReadPointer readPointer) throws OperationException {\n    ackInternal(entryPointer, statefulConsumer, readPointer);\n    statefulConsumer.getQueueState().setActiveEntryId(INVALID_ENTRY_ID);\n  }","commit_id":"c965c5946911063352804e591955e8d1927aed6e","url":"https://github.com/caskdata/cdap"},{"original_method":"private void readEntries(QueueConsumer consumer, QueueConfig config, QueueState queueState, ReadPointer readPointer,\n                            List<Long> entryIds) throws OperationException{\n    if(entryIds.isEmpty()) {\n      queueState.setCachedEntries(CachedList.EMPTY_LIST);\n      return;\n    }\n\n    final byte[][] entryRowKeys = new byte[entryIds.size()][];\n    for(int i = 0; i < entryIds.size(); ++i) {\n      entryRowKeys[i] = makeRowKey(GLOBAL_DATA_PREFIX, entryIds.get(i));\n    }\n\n    final byte[][] entryColKeys = new byte[][]{ ENTRY_META, ENTRY_DATA };\n    OperationResult<Map<byte[], Map<byte[], byte[]>>> entriesResult =\n                                                          this.table.get(entryRowKeys, entryColKeys, readPointer);\n    if(entriesResult.isEmpty()) {\n      queueState.setCachedEntries(CachedList.EMPTY_LIST);\n    } else {\n      List<QueueStateEntry> entries = new ArrayList<QueueStateEntry>(entryIds.size());\n      for(int i = 0; i < entryIds.size(); ++i) {\n        Map<byte[], byte[]> entryMap = entriesResult.getValue().get(entryRowKeys[i]);\n        if(entryMap == null) {\n          continue;\n        }\n        EntryMeta entryMeta = EntryMeta.fromBytes(entryMap.get(ENTRY_META));\n        if (TRACE) log(\"entryId:\" +  entryIds.get(i) + \". entryMeta : \" + entryMeta.toString());\n\n        // Check if entry has been invalidated or evicted\n        if (entryMeta.isInvalid() || entryMeta.isEvicted()) {\n          if (TRACE) log(\"Found invalidated or evicted entry at \" + entryIds.get(i) +\n                           \" (\" + entryMeta.toString() + \")\");\n        } else {\n          // Entry is visible and valid!\n          assert(entryMeta.isValid());\n          byte [] entryData = entryMap.get(ENTRY_DATA);\n          entries.add(new QueueStateEntry(entryData, entryIds.get(i)));\n        }\n      }\n      queueState.setCachedEntries(new CachedList<QueueStateEntry>(entries));\n    }\n  }","id":82709,"modified_method":"private void readEntries(QueueConsumer consumer, QueueConfig config, QueueState queueState, ReadPointer readPointer,\n                            List<Long> entryIds) throws OperationException{\n    if(entryIds.isEmpty()) {\n      queueState.setCachedEntries(CachedList.EMPTY_LIST);\n      return;\n    }\n\n    final byte[][] entryRowKeys = new byte[entryIds.size()][];\n    for(int i = 0; i < entryIds.size(); ++i) {\n      entryRowKeys[i] = makeRowKey(GLOBAL_DATA_PREFIX, entryIds.get(i));\n    }\n\n    final byte[][] entryColKeys = new byte[][]{ ENTRY_META, ENTRY_DATA };\n    OperationResult<Map<byte[], Map<byte[], byte[]>>> entriesResult =\n                                                          this.table.get(entryRowKeys, entryColKeys, readPointer);\n    if(entriesResult.isEmpty()) {\n      queueState.setCachedEntries(CachedList.EMPTY_LIST);\n    } else {\n      List<QueueStateEntry> entries = new ArrayList<QueueStateEntry>(entryIds.size());\n      for(int i = 0; i < entryIds.size(); ++i) {\n        Map<byte[], byte[]> entryMap = entriesResult.getValue().get(entryRowKeys[i]);\n        if(entryMap == null) {\n          queueState.setCachedEntries(CachedList.EMPTY_LIST);\n          return;\n        }\n        byte[] entryMetaBytes = entryMap.get(ENTRY_META);\n        if(entryMetaBytes == null) {\n          queueState.setCachedEntries(CachedList.EMPTY_LIST);\n          return;\n        }\n        EntryMeta entryMeta = EntryMeta.fromBytes(entryMetaBytes);\n        if (TRACE) log(\"entryId:\" +  entryIds.get(i) + \". entryMeta : \" + entryMeta.toString());\n\n        // Check if entry has been invalidated or evicted\n        if (entryMeta.isInvalid() || entryMeta.isEvicted()) {\n          if (TRACE) log(\"Found invalidated or evicted entry at \" + entryIds.get(i) +\n                           \" (\" + entryMeta.toString() + \")\");\n        } else {\n          // Entry is visible and valid!\n          assert(entryMeta.isValid());\n          byte [] entryData = entryMap.get(ENTRY_DATA);\n          entries.add(new QueueStateEntry(entryData, entryIds.get(i)));\n        }\n      }\n      queueState.setCachedEntries(new CachedList<QueueStateEntry>(entries));\n    }\n  }","commit_id":"c965c5946911063352804e591955e8d1927aed6e","url":"https://github.com/caskdata/cdap"},{"original_method":"protected List<Long> fetchNextEntryId(QueueConsumer consumer, QueueConfig config, QueueState queueState,\n                                  ReadPointer readPointer) throws OperationException {\n    long entryId = queueState.getConsumerReadPointer();\n    QueuePartitioner partitioner=config.getPartitionerType().getPartitioner();\n    List<Long> newEntryIds = new ArrayList<Long>();\n\n    while (newEntryIds.isEmpty()) {\n      if(entryId >= queueState.getQueueWritePointer()) {\n        // Reached the end of queue as per cached QueueWritePointer,\n        // read it again to see if there is any progress made by producers\n        // TODO: use raw Get instead of the workaround of incrementing zero\n        long queueWritePointer = this.table.incrementAtomicDirtily(makeRowName(GLOBAL_ENTRY_ID_PREFIX), GLOBAL_ENTRYID_COUNTER, 0);\n        queueState.setQueueWritePointer(queueWritePointer);\n        // If still no progress, return empty queue\n        if(entryId >= queueState.getQueueWritePointer()) {\n          return Collections.EMPTY_LIST;\n        }\n      }\n\n      long startEntryId;\n      long endEntryId;\n\n      if (partitioner.isDisjoint()) {\n        startEntryId = entryId + 1;\n        endEntryId = startEntryId + (batchSize * consumer.getGroupSize()) < queueState.getQueueWritePointer() ?\n                                       startEntryId + (getBatchSize() * consumer.getGroupSize()) : queueState.getQueueWritePointer();\n      } else {\n        // For now non-disjoint partitions use batchSize = 1\n        int tempBatchSize = 1;\n        endEntryId = this.table.incrementAtomicDirtily(makeRowKey(GROUP_READ_POINTER, consumer.getGroupId()),\n                                                    GROUP_READ_POINTER, tempBatchSize);\n        startEntryId = endEntryId;\n        queueState.setActiveEntryId(endEntryId);\n      }\n\n      final int cacheSize = (int)(endEntryId - startEntryId + 1);\n      OperationResult<Map<byte[], Map<byte[], byte[]>>> headerResult;\n      if (partitioner.usesHeaderData()) {\n        final String partitioningKey = consumer.getPartitioningKey();\n        byte [][] rowKeys = new byte[cacheSize][];\n        for(int id = 0; id < cacheSize; ++id) {\n          rowKeys[id] = makeRowKey(GLOBAL_DATA_PREFIX, startEntryId + id);\n        }\n        byte[][] columnKeys = new byte[1][];\n        columnKeys[0] = makeColumnName(ENTRY_HEADER, partitioningKey);\n        headerResult = this.table.get(rowKeys, columnKeys, readPointer);\n      } else {\n        headerResult = new OperationResult<Map<byte[], Map<byte[], byte[]>>>(StatusCode.COLUMN_NOT_FOUND);\n      }\n\n      // TODO: check the case when some headers are skipped\n      for(int id = 0; id < cacheSize; ++id) {\n        final long currentEntryId = startEntryId + id;\n        if(partitioner.usesHeaderData()) {\n          final String partitioningKey = consumer.getPartitioningKey();\n          if (!headerResult.isEmpty()) {\n            Map<byte[], Map<byte[], byte[]>> headerValue = headerResult.getValue();\n            Map<byte[], byte[]> headerMap = headerValue.get(makeRowKey(GLOBAL_DATA_PREFIX, currentEntryId));\n            int hashValue = Bytes.toInt(headerMap.get(makeColumnName(ENTRY_HEADER, partitioningKey)));\n            if(partitioner.shouldEmit(consumer, currentEntryId, hashValue)) {\n              newEntryIds.add(currentEntryId);\n            }\n          } else {\n            if(partitioner.shouldEmit(consumer, currentEntryId)) {\n              newEntryIds.add(currentEntryId);\n            }\n          }\n        } else {\n          if(partitioner.shouldEmit(consumer, currentEntryId)) {\n            newEntryIds.add(currentEntryId);\n          }\n        }\n      }\n      entryId = endEntryId;\n    }\n    return newEntryIds;\n  }","id":82710,"modified_method":"protected List<Long> fetchNextEntryId(QueueConsumer consumer, QueueConfig config, QueueState queueState,\n                                  ReadPointer readPointer) throws OperationException {\n    long entryId = queueState.getConsumerReadPointer();\n    QueuePartitioner partitioner=config.getPartitionerType().getPartitioner();\n    List<Long> newEntryIds = new ArrayList<Long>();\n\n    outerLoop:\n    while (newEntryIds.isEmpty()) {\n      if(entryId >= queueState.getQueueWritePointer()) {\n        // Reached the end of queue as per cached QueueWritePointer,\n        // read it again to see if there is any progress made by producers\n        // TODO: use raw Get instead of the workaround of incrementing zero\n        long queueWritePointer = this.table.incrementAtomicDirtily(makeRowName(GLOBAL_ENTRY_ID_PREFIX), GLOBAL_ENTRYID_COUNTER, 0);\n        queueState.setQueueWritePointer(queueWritePointer);\n        // If still no progress, return empty queue\n        if(entryId >= queueState.getQueueWritePointer()) {\n          return Collections.EMPTY_LIST;\n        }\n      }\n\n      long startEntryId;\n      long endEntryId;\n\n      if (partitioner.isDisjoint()) {\n        startEntryId = entryId + 1;\n        endEntryId = startEntryId + (batchSize * consumer.getGroupSize()) < queueState.getQueueWritePointer() ?\n                                       startEntryId + (getBatchSize() * consumer.getGroupSize()) : queueState.getQueueWritePointer();\n      } else {\n        // For now non-disjoint partitions use batchSize = 1\n        int tempBatchSize = 1;\n        endEntryId = this.table.incrementAtomicDirtily(makeRowKey(GROUP_READ_POINTER, consumer.getGroupId()),\n                                                    GROUP_READ_POINTER, tempBatchSize);\n        startEntryId = endEntryId;\n        queueState.setActiveEntryId(endEntryId);\n      }\n\n      final int cacheSize = (int)(endEntryId - startEntryId + 1);\n      OperationResult<Map<byte[], Map<byte[], byte[]>>> headerResult;\n      if (partitioner.usesHeaderData()) {\n        final String partitioningKey = consumer.getPartitioningKey();\n        byte [][] rowKeys = new byte[cacheSize][];\n        for(int id = 0; id < cacheSize; ++id) {\n          rowKeys[id] = makeRowKey(GLOBAL_DATA_PREFIX, startEntryId + id);\n        }\n        byte[][] columnKeys = new byte[1][];\n        columnKeys[0] = makeColumnName(ENTRY_HEADER, partitioningKey);\n        headerResult = this.table.get(rowKeys, columnKeys, readPointer);\n      } else {\n        headerResult = new OperationResult<Map<byte[], Map<byte[], byte[]>>>(StatusCode.COLUMN_NOT_FOUND);\n      }\n\n      // TODO: check the case when some headers are skipped\n      for(int id = 0; id < cacheSize; ++id) {\n        final long currentEntryId = startEntryId + id;\n        if(partitioner.usesHeaderData()) {\n          final String partitioningKey = consumer.getPartitioningKey();\n          if (!headerResult.isEmpty()) {\n            Map<byte[], Map<byte[], byte[]>> headerValue = headerResult.getValue();\n            Map<byte[], byte[]> headerMap = headerValue.get(makeRowKey(GLOBAL_DATA_PREFIX, currentEntryId));\n            if(headerMap == null) {\n              break outerLoop;\n            }\n            byte[] hashBytes = headerMap.get(makeColumnName(ENTRY_HEADER, partitioningKey));\n            if(hashBytes == null) {\n              break outerLoop;\n            }\n            int hashValue = Bytes.toInt(hashBytes);\n            if(partitioner.shouldEmit(consumer, currentEntryId, hashValue)) {\n              newEntryIds.add(currentEntryId);\n            }\n          } else {\n            // Not able to read header\n            break outerLoop;\n          }\n        } else {\n          if(partitioner.shouldEmit(consumer, currentEntryId)) {\n            newEntryIds.add(currentEntryId);\n          }\n        }\n      }\n      entryId = endEntryId;\n    }\n    return newEntryIds;\n  }","commit_id":"c965c5946911063352804e591955e8d1927aed6e","url":"https://github.com/caskdata/cdap"},{"original_method":"private void dequeuePartitionedEntries(TTQueue queue, StatefulQueueConsumer[] consumers, int numConsumers, int totalEnqueues)\n    throws Exception {\n    ReadPointer dirtyReadPointer = getDirtyPointer();\n    for(int i=0; i<numConsumers; i++) {\n      for(int j=0; j<totalEnqueues/(2*numConsumers); j++) {\n        DequeueResult result = queue.dequeue(consumers[i], dirtyReadPointer);\n        // verify we got something and it's the first value\n        assertTrue(result.toString(), result.isSuccess());\n        assertEquals(\"value\"+i, Bytes.toString(result.getEntry().getData()));\n        // dequeue again without acking, should still get first value\n        result = queue.dequeue(consumers[i], dirtyReadPointer);\n        assertTrue(result.isSuccess());\n        assertEquals(\"value\"+i, Bytes.toString(result.getEntry().getData()));\n\n        // ack\n        queue.ack(result.getEntryPointer(), consumers[i], dirtyReadPointer);\n        queue.finalize(result.getEntryPointer(), consumers[i], -1);\n\n        // dequeue, should get second value\n        result = queue.dequeue(consumers[i], dirtyReadPointer);\n        assertTrue(result.isSuccess());\n        assertEquals(\"value\"+i, Bytes.toString(result.getEntry().getData()));\n\n        // ack\n        queue.ack(result.getEntryPointer(), consumers[i], dirtyReadPointer);\n        queue.finalize(result.getEntryPointer(), consumers[i], -1);\n      }\n\n      // verify queue is empty\n      DequeueResult result = queue.dequeue(consumers[i], dirtyReadPointer);\n      assertTrue(result.isEmpty());\n    }\n  }","id":82711,"modified_method":"private void dequeuePartitionedEntries(TTQueue queue, StatefulQueueConsumer[] consumers, int numConsumers,\n                                         int numQueueEntries, int startQueueEntry) throws Exception {\n    ReadPointer dirtyReadPointer = getDirtyPointer();\n    for(int i=1; i<=numConsumers; i++) {\n      for(int j=0; j<numQueueEntries/(2*numConsumers); j++) {\n        DequeueResult result = queue.dequeue(consumers[i], dirtyReadPointer);\n        // verify we got something and it's the first value\n        assertTrue(result.toString(), result.isSuccess());\n        int expectedValue = startQueueEntry+i+(2*j*numConsumers);\n//        System.out.println(String.format(\"Consumer-%d entryid=%d value=%s expectedValue=%s\",\n//                  i, result.getEntryPointer().getEntryId(), Bytes.toInt(result.getEntry().getData()), expectedValue));\n        assertEquals(expectedValue, Bytes.toInt(result.getEntry().getData()));\n        // dequeue again without acking, should still get first value\n        result = queue.dequeue(consumers[i], dirtyReadPointer);\n        assertTrue(result.isSuccess());\n        assertEquals(expectedValue, Bytes.toInt(result.getEntry().getData()));\n\n        // ack\n        queue.ack(result.getEntryPointer(), consumers[i], dirtyReadPointer);\n        queue.finalize(result.getEntryPointer(), consumers[i], -1);\n\n        // dequeue, should get second value\n        result = queue.dequeue(consumers[i], dirtyReadPointer);\n        assertTrue(result.isSuccess());\n        expectedValue += numConsumers;\n//        System.out.println(String.format(\"Consumer-%d entryid=%d value=%s expectedValue=%s\",\n//                  i, result.getEntryPointer().getEntryId(), Bytes.toInt(result.getEntry().getData()), expectedValue));\n        assertEquals(expectedValue, Bytes.toInt(result.getEntry().getData()));\n\n        // ack\n        queue.ack(result.getEntryPointer(), consumers[i], dirtyReadPointer);\n        queue.finalize(result.getEntryPointer(), consumers[i], -1);\n      }\n\n      // verify queue is empty\n      DequeueResult result = queue.dequeue(consumers[i], dirtyReadPointer);\n      assertTrue(result.isEmpty());\n    }\n  }","commit_id":"c965c5946911063352804e591955e8d1927aed6e","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n  public void testSingleStatefulConsumerWithRoundRobinPartitioning() throws Exception {\n    final boolean singleEntry = true;\n    final int numQueueEntries = 88;\n    final int numConsumers = 4;\n    final int consumerGroupId = 0;\n    TTQueue queue = createQueue();\n    long dirtyVersion = 1;\n\n    // enqueue some entries\n    for(int i=0; i<numQueueEntries; i++) {\n      QueueEntry queueEntry=new QueueEntryImpl(Bytes.toBytes(\"value\"+(i+1)%numConsumers));\n      assertTrue(queue.enqueue(queueEntry, dirtyVersion).isSuccess());\n    }\n\n    // dequeue it with ROUND_ROBIN partitioner\n    QueueConfig config = new QueueConfig(QueuePartitioner.PartitionerType.ROUND_ROBIN, singleEntry);\n\n    StatefulQueueConsumer[] consumers = new StatefulQueueConsumer[numConsumers];\n    for(int i=0; i<numConsumers; i++) {\n      consumers[i]=new StatefulQueueConsumer(i, consumerGroupId, numConsumers, \"group1\", config);\n    }\n\n    // dequeue and verify\n    dequeuePartitionedEntries(queue, consumers, numConsumers, numQueueEntries);\n\n    // enqueue some more entries\n    for(int i=numQueueEntries; i<numQueueEntries*2; i++) {\n      QueueEntry queueEntry=new QueueEntryImpl(Bytes.toBytes(\"value\"+(i+1)%numConsumers));\n      assertTrue(queue.enqueue(queueEntry, dirtyVersion).isSuccess());\n    }\n\n    // dequeue and verify\n    dequeuePartitionedEntries(queue, consumers, numConsumers, numQueueEntries);\n  }","id":82712,"modified_method":"@Test\n  public void testSingleStatefulConsumerWithRoundRobinPartitioning() throws Exception {\n    final boolean singleEntry = true;\n    final int numQueueEntries = 88;\n    final int numConsumers = 4;\n    final int consumerGroupId = 0;\n    TTQueue queue = createQueue();\n    long dirtyVersion = 1;\n\n    // enqueue some entries\n    for(int i=0; i<numQueueEntries; i++) {\n      QueueEntry queueEntry=new QueueEntryImpl(Bytes.toBytes(i+1));\n      assertTrue(queue.enqueue(queueEntry, dirtyVersion).isSuccess());\n    }\n\n    // dequeue it with ROUND_ROBIN partitioner\n    QueueConfig config = new QueueConfig(QueuePartitioner.PartitionerType.ROUND_ROBIN, singleEntry);\n\n    // We'll start our consumers with index 1, makes testing easier\n    StatefulQueueConsumer[] consumers = new StatefulQueueConsumer[numConsumers+1];\n    for(int i=1; i<=numConsumers; i++) {\n      consumers[i]=new StatefulQueueConsumer(i, consumerGroupId, numConsumers, \"group1\", config);\n    }\n\n    // dequeue and verify\n    dequeuePartitionedEntries(queue, consumers, numConsumers, numQueueEntries, 0);\n\n    // enqueue some more entries\n    for(int i=numQueueEntries; i<numQueueEntries*2; i++) {\n      QueueEntry queueEntry=new QueueEntryImpl(Bytes.toBytes(i+1));\n      assertTrue(queue.enqueue(queueEntry, dirtyVersion).isSuccess());\n    }\n\n    // dequeue and verify\n    dequeuePartitionedEntries(queue, consumers, numConsumers, numQueueEntries, numQueueEntries);\n  }","commit_id":"c965c5946911063352804e591955e8d1927aed6e","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n  public void testSingleStatefulConsumerWithHashPartitioning() throws Exception {\n    final String HASH_KEY = \"hashKey\";\n    final boolean singleEntry = true;\n    final int numQueueEntries = 88;\n    final int numConsumers = 4;\n    final int consumerGroupId = 0;\n    TTQueue queue = createQueue();\n    long dirtyVersion = 1;\n\n    // enqueue some entries\n    for(int i=0; i<numQueueEntries; i++) {\n      QueueEntry queueEntry=new QueueEntryImpl(Bytes.toBytes(\"value\"+i%numConsumers));\n      queueEntry.addPartitioningKey(HASH_KEY, i);\n      assertTrue(queue.enqueue(queueEntry, dirtyVersion).isSuccess());\n    }\n    // dequeue it with HASH partitioner\n    QueueConfig config = new QueueConfig(QueuePartitioner.PartitionerType.HASH, singleEntry);\n\n    StatefulQueueConsumer[] consumers = new StatefulQueueConsumer[numConsumers];\n    for(int i=0; i<numConsumers; i++) {\n      consumers[i]=new StatefulQueueConsumer(i, consumerGroupId, numConsumers, \"group1\", HASH_KEY, config);\n    }\n\n    // dequeue and verify\n    dequeuePartitionedEntries(queue, consumers, numConsumers, numQueueEntries);\n\n    // enqueue some more entries\n    for(int i=numQueueEntries; i<numQueueEntries*2; i++) {\n      QueueEntry queueEntry=new QueueEntryImpl(Bytes.toBytes(\"value\"+i%numConsumers));\n      queueEntry.addPartitioningKey(HASH_KEY, i);\n      assertTrue(queue.enqueue(queueEntry, dirtyVersion).isSuccess());\n    }\n    // dequeue and verify\n    dequeuePartitionedEntries(queue, consumers, numConsumers, numQueueEntries);\n  }","id":82713,"modified_method":"@Test\n  public void testSingleStatefulConsumerWithHashPartitioning() throws Exception {\n    final String HASH_KEY = \"hashKey\";\n    final boolean singleEntry = true;\n    final int numQueueEntries = 88;\n    final int numConsumers = 4;\n    final int consumerGroupId = 0;\n    TTQueue queue = createQueue();\n    long dirtyVersion = 1;\n\n    // enqueue some entries\n    for(int i=0; i<numQueueEntries; i++) {\n      QueueEntry queueEntry=new QueueEntryImpl(Bytes.toBytes(i+1));\n      queueEntry.addPartitioningKey(HASH_KEY, i+1);\n      assertTrue(queue.enqueue(queueEntry, dirtyVersion).isSuccess());\n    }\n    // dequeue it with HASH partitioner\n    QueueConfig config = new QueueConfig(QueuePartitioner.PartitionerType.HASH, singleEntry);\n\n    // We'll start our consumers with index 1, makes testing easier\n    StatefulQueueConsumer[] consumers = new StatefulQueueConsumer[numConsumers+1];\n    for(int i=1; i<=numConsumers; i++) {\n      consumers[i]=new StatefulQueueConsumer(i, consumerGroupId, numConsumers, \"group1\", HASH_KEY, config);\n    }\n\n    // dequeue and verify\n    dequeuePartitionedEntries(queue, consumers, numConsumers, numQueueEntries, 0);\n\n    // enqueue some more entries\n    for(int i=numQueueEntries; i<numQueueEntries*2; i++) {\n      QueueEntry queueEntry=new QueueEntryImpl(Bytes.toBytes(i+1));\n      queueEntry.addPartitioningKey(HASH_KEY, i+1);\n      assertTrue(queue.enqueue(queueEntry, dirtyVersion).isSuccess());\n    }\n    // dequeue and verify\n    dequeuePartitionedEntries(queue, consumers, numConsumers, numQueueEntries, numQueueEntries);\n  }","commit_id":"c965c5946911063352804e591955e8d1927aed6e","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n  public void testSingleStatefulConsumerWithHashPartitioning() throws Exception {\n    final String HASH_KEY = \"hashKey\";\n    final boolean singleEntry = true;\n    final int numQueueEntries = 88;\n    final int numConsumers = 4;\n    final int consumerGroupId = 0;\n    TTQueue queue = createQueue();\n    long dirtyVersion = 1;\n\n    // enqueue some entries\n    for (int i = 0; i < numQueueEntries; i++) {\n      QueueEntry queueEntry = new QueueEntry(Bytes.toBytes(i + 1));\n      queueEntry.addPartitioningKey(HASH_KEY, i + 1);\n      assertTrue(queue.enqueue(queueEntry, dirtyVersion).isSuccess());\n    }\n    // dequeue it with HASH partitioner\n    QueueConfig config = new QueueConfig(QueuePartitioner.PartitionerType.HASH, singleEntry);\n\n    StatefulQueueConsumer[] consumers = new StatefulQueueConsumer[numConsumers];\n    for (int i = 0; i < numConsumers; i++) {\n      consumers[i] = new StatefulQueueConsumer(i, consumerGroupId, numConsumers, \"group1\", HASH_KEY, config);\n    }\n\n    // dequeue and verify\n    dequeuePartitionedEntries(queue, consumers, numConsumers, numQueueEntries, 0);\n\n    // enqueue some more entries\n    for (int i = numQueueEntries; i < numQueueEntries * 2; i++) {\n      QueueEntry queueEntry = new QueueEntry(Bytes.toBytes(i + 1));\n      queueEntry.addPartitioningKey(HASH_KEY, i + 1);\n      assertTrue(queue.enqueue(queueEntry, dirtyVersion).isSuccess());\n    }\n    // dequeue and verify\n    dequeuePartitionedEntries(queue, consumers, numConsumers, numQueueEntries, numQueueEntries);\n  }","id":82714,"modified_method":"@Test\n  public void testSingleStatefulConsumerWithHashPartitioning() throws Exception {\n    final String HASH_KEY = \"hashKey\";\n    final boolean singleEntry = true;\n    final int numQueueEntries = 88;\n    final int numConsumers = 4;\n    final int consumerGroupId = 0;\n    TTQueue queue = createQueue();\n    long dirtyVersion = 1;\n\n    // enqueue some entries\n    for (int i = 0; i < numQueueEntries; i++) {\n      QueueEntry queueEntry = new QueueEntry(Bytes.toBytes(i));\n      queueEntry.addPartitioningKey(HASH_KEY, i);\n      assertTrue(queue.enqueue(queueEntry, dirtyVersion).isSuccess());\n    }\n    // dequeue it with HASH partitioner\n    QueueConfig config = new QueueConfig(QueuePartitioner.PartitionerType.HASH, singleEntry);\n\n    StatefulQueueConsumer[] consumers = new StatefulQueueConsumer[numConsumers];\n    for (int i = 0; i < numConsumers; i++) {\n      consumers[i] = new StatefulQueueConsumer(i, consumerGroupId, numConsumers, \"group1\", HASH_KEY, config);\n    }\n\n    // dequeue and verify\n    dequeuePartitionedEntries(queue, consumers, numConsumers, numQueueEntries, 0, QueuePartitioner.PartitionerType.HASH);\n\n    // enqueue some more entries\n    for (int i = numQueueEntries; i < numQueueEntries * 2; i++) {\n      QueueEntry queueEntry = new QueueEntry(Bytes.toBytes(i));\n      queueEntry.addPartitioningKey(HASH_KEY, i);\n      assertTrue(queue.enqueue(queueEntry, dirtyVersion).isSuccess());\n    }\n    // dequeue and verify\n    dequeuePartitionedEntries(queue, consumers, numConsumers, numQueueEntries, numQueueEntries, QueuePartitioner.PartitionerType.HASH);\n  }","commit_id":"a353de5a5443a40427b2b85078e889cc0e4d6f07","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n  public void testSingleStatefulConsumerWithRoundRobinPartitioning() throws Exception {\n    final boolean singleEntry = true;\n    final int numQueueEntries = 88;\n    final int numConsumers = 4;\n    final int consumerGroupId = 0;\n    TTQueue queue = createQueue();\n    long dirtyVersion = 1;\n\n    // enqueue some entries\n    for (int i = 0; i < numQueueEntries; i++) {\n      QueueEntry queueEntry = new QueueEntry(Bytes.toBytes(i + 1));\n      assertTrue(queue.enqueue(queueEntry, dirtyVersion).isSuccess());\n    }\n\n    // dequeue it with ROUND_ROBIN partitioner\n    QueueConfig config = new QueueConfig(QueuePartitioner.PartitionerType.ROUND_ROBIN, singleEntry);\n\n    StatefulQueueConsumer[] consumers = new StatefulQueueConsumer[numConsumers];\n    for (int i = 0; i < numConsumers; i++) {\n      consumers[i] = new StatefulQueueConsumer(i, consumerGroupId, numConsumers, \"group1\", config);\n    }\n\n    // dequeue and verify\n    dequeuePartitionedEntries(queue, consumers, numConsumers, numQueueEntries, 0);\n\n    // enqueue some more entries\n    for (int i = numQueueEntries; i < numQueueEntries * 2; i++) {\n      QueueEntry queueEntry = new QueueEntry(Bytes.toBytes(i + 1));\n      assertTrue(queue.enqueue(queueEntry, dirtyVersion).isSuccess());\n    }\n\n    // dequeue and verify\n    dequeuePartitionedEntries(queue, consumers, numConsumers, numQueueEntries, numQueueEntries);\n  }","id":82715,"modified_method":"@Test\n  public void testSingleStatefulConsumerWithRoundRobinPartitioning() throws Exception {\n    final boolean singleEntry = true;\n    final int numQueueEntries = 88;\n    final int numConsumers = 4;\n    final int consumerGroupId = 0;\n    TTQueue queue = createQueue();\n    long dirtyVersion = 1;\n\n    // enqueue some entries\n    for (int i = 0; i < numQueueEntries; i++) {\n      QueueEntry queueEntry = new QueueEntry(Bytes.toBytes(i + 1));\n      assertTrue(queue.enqueue(queueEntry, dirtyVersion).isSuccess());\n    }\n\n    // dequeue it with ROUND_ROBIN partitioner\n    QueueConfig config = new QueueConfig(QueuePartitioner.PartitionerType.ROUND_ROBIN, singleEntry);\n\n    StatefulQueueConsumer[] consumers = new StatefulQueueConsumer[numConsumers];\n    for (int i = 0; i < numConsumers; i++) {\n      consumers[i] = new StatefulQueueConsumer(i, consumerGroupId, numConsumers, \"group1\", config);\n    }\n\n    // dequeue and verify\n    dequeuePartitionedEntries(queue, consumers, numConsumers, numQueueEntries, 0, QueuePartitioner.PartitionerType.ROUND_ROBIN);\n\n    // enqueue some more entries\n    for (int i = numQueueEntries; i < numQueueEntries * 2; i++) {\n      QueueEntry queueEntry = new QueueEntry(Bytes.toBytes(i + 1));\n      assertTrue(queue.enqueue(queueEntry, dirtyVersion).isSuccess());\n    }\n\n    // dequeue and verify\n    dequeuePartitionedEntries(queue, consumers, numConsumers, numQueueEntries, numQueueEntries, QueuePartitioner.PartitionerType.ROUND_ROBIN);\n  }","commit_id":"a353de5a5443a40427b2b85078e889cc0e4d6f07","url":"https://github.com/caskdata/cdap"},{"original_method":"private void dequeuePartitionedEntries(TTQueue queue, StatefulQueueConsumer[] consumers, int numConsumers,\n                                         int numQueueEntries, int startQueueEntry) throws Exception {\n    ReadPointer dirtyReadPointer = getDirtyPointer();\n    for (int consumer = 0; consumer < numConsumers; consumer++) {\n      for (int entry = 0; entry < numQueueEntries / (2 * numConsumers); entry++) {\n        DequeueResult result = queue.dequeue(consumers[consumer], dirtyReadPointer);\n        // verify we got something and it's the first value\n        assertTrue(result.toString(), result.isSuccess());\n        int expectedValue = startQueueEntry + consumer + (2 * entry * numConsumers);\n        if(consumer == 0) {\n          // Adjust the expected value for consumer 0\n          expectedValue += numConsumers;\n        }\n//        System.out.println(String.format(\"Consumer-%d entryid=%d value=%s expectedValue=%s\",\n//                  consumer, result.getEntryPointer().getEntryId(), Bytes.toInt(result.getEntry().getData()), expectedValue));\n        assertEquals(expectedValue, Bytes.toInt(result.getEntry().getData()));\n        // dequeue again without acking, should still get first value\n        result = queue.dequeue(consumers[consumer], dirtyReadPointer);\n        assertTrue(result.isSuccess());\n        assertEquals(expectedValue, Bytes.toInt(result.getEntry().getData()));\n\n        // ack\n        queue.ack(result.getEntryPointer(), consumers[consumer], dirtyReadPointer);\n        queue.finalize(result.getEntryPointer(), consumers[consumer], -1, dirtyReadPointer.getMaximum());\n\n        // dequeue, should get second value\n        result = queue.dequeue(consumers[consumer], dirtyReadPointer);\n        assertTrue(result.isSuccess());\n        expectedValue += numConsumers;\n//        System.out.println(String.format(\"Consumer-%d entryid=%d value=%s expectedValue=%s\",\n//                  consumer, result.getEntryPointer().getEntryId(), Bytes.toInt(result.getEntry().getData()), expectedValue));\n        assertEquals(expectedValue, Bytes.toInt(result.getEntry().getData()));\n\n        // ack\n        queue.ack(result.getEntryPointer(), consumers[consumer], dirtyReadPointer);\n        queue.finalize(result.getEntryPointer(), consumers[consumer], -1, dirtyReadPointer.getMaximum());\n      }\n\n      // verify queue is empty\n      DequeueResult result = queue.dequeue(consumers[consumer], dirtyReadPointer);\n      assertTrue(result.isEmpty());\n    }\n  }","id":82716,"modified_method":"private void dequeuePartitionedEntries(TTQueue queue, StatefulQueueConsumer[] consumers, int numConsumers,\n         int numQueueEntries, int startQueueEntry, QueuePartitioner.PartitionerType partitionerType) throws Exception {\n    ReadPointer dirtyReadPointer = getDirtyPointer();\n    for (int consumer = 0; consumer < numConsumers; consumer++) {\n      for (int entry = 0; entry < numQueueEntries / (2 * numConsumers); entry++) {\n        DequeueResult result = queue.dequeue(consumers[consumer], dirtyReadPointer);\n        // verify we got something and it's the first value\n        assertTrue(result.toString(), result.isSuccess());\n        int expectedValue = startQueueEntry + consumer + (2 * entry * numConsumers);\n        if(partitionerType == QueuePartitioner.PartitionerType.ROUND_ROBIN) {\n          if(consumer == 0) {\n            // Adjust the expected value for consumer 0\n            expectedValue += numConsumers;\n          }\n        }\n//        System.out.println(String.format(\"Consumer-%d entryid=%d value=%s expectedValue=%s\",\n//                  consumer, result.getEntryPointer().getEntryId(), Bytes.toInt(result.getEntry().getData()), expectedValue));\n        assertEquals(expectedValue, Bytes.toInt(result.getEntry().getData()));\n        // dequeue again without acking, should still get first value\n        result = queue.dequeue(consumers[consumer], dirtyReadPointer);\n        assertTrue(result.isSuccess());\n        assertEquals(expectedValue, Bytes.toInt(result.getEntry().getData()));\n\n        // ack\n        queue.ack(result.getEntryPointer(), consumers[consumer], dirtyReadPointer);\n        queue.finalize(result.getEntryPointer(), consumers[consumer], -1, dirtyReadPointer.getMaximum());\n\n        // dequeue, should get second value\n        result = queue.dequeue(consumers[consumer], dirtyReadPointer);\n        assertTrue(result.isSuccess());\n        expectedValue += numConsumers;\n//        System.out.println(String.format(\"Consumer-%d entryid=%d value=%s expectedValue=%s\",\n//                  consumer, result.getEntryPointer().getEntryId(), Bytes.toInt(result.getEntry().getData()), expectedValue));\n        assertEquals(expectedValue, Bytes.toInt(result.getEntry().getData()));\n\n        // ack\n        queue.ack(result.getEntryPointer(), consumers[consumer], dirtyReadPointer);\n        queue.finalize(result.getEntryPointer(), consumers[consumer], -1, dirtyReadPointer.getMaximum());\n      }\n\n      // verify queue is empty\n      DequeueResult result = queue.dequeue(consumers[consumer], dirtyReadPointer);\n      assertTrue(result.isEmpty());\n    }\n  }","commit_id":"a353de5a5443a40427b2b85078e889cc0e4d6f07","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n  public void testGetVersion() throws Exception {\n    // Verify new metric datasets are properly recognized as 2.8+ version from now on\n    HBaseMetricsTableDefinition definition =\n      new HBaseMetricsTableDefinition(\"foo\", testHBase.getConfiguration(), hBaseTableUtil,\n                                      new LocalLocationFactory(tmpFolder.newFolder()), CConfiguration.create());\n    DatasetSpecification spec = definition.configure(\"cdap.system.metricV2.8\", DatasetProperties.EMPTY);\n\n    DatasetAdmin admin = definition.getAdmin(\n      new DatasetContext.Builder().setNamespaceId(Constants.SYSTEM_NAMESPACE).build(), spec, null);\n    admin.create();\n\n    MetricHBaseTableUtil util = new MetricHBaseTableUtil(hBaseTableUtil);\n    HBaseAdmin hAdmin = testHBase.getHBaseAdmin();\n    HTableDescriptor desc = tableUtil.getHTableDescriptor(hAdmin, TableId.from(spec.getName()));\n    Assert.assertEquals(MetricHBaseTableUtil.Version.VERSION_2_8_OR_HIGHER, util.getVersion(desc));\n\n    // Verify HBase table without coprocessor is properly recognized as 2.6- version\n    TableName table26 = TableName.valueOf(\"metricV2.6\");\n    hAdmin.createTable(new HTableDescriptor(table26));\n    desc = hAdmin.getTableDescriptor(table26);\n    Assert.assertEquals(MetricHBaseTableUtil.Version.VERSION_2_6_OR_LOWER, util.getVersion(desc));\n\n    // Verify HBase table with IncrementHandler coprocessor but without cdap.version on it is properly recognized as\n    // 2.7 version\n    TableName table27 = TableName.valueOf(\"metricV2.7\");\n    desc = new HTableDescriptor(table27);\n    desc.addCoprocessor(hBaseTableUtil.getIncrementHandlerClassForVersion().getName());\n    hAdmin.createTable(desc);\n    desc = hAdmin.getTableDescriptor(table27);\n    Assert.assertEquals(MetricHBaseTableUtil.Version.VERSION_2_7, util.getVersion(desc));\n  }","id":82717,"modified_method":"@Test\n  public void testGetVersion() throws Exception {\n    // Verify new metric datasets are properly recognized as 2.8+ version from now on\n    HBaseMetricsTableDefinition definition =\n      new HBaseMetricsTableDefinition(\"foo\", testHBase.getConfiguration(), hBaseTableUtil,\n                                      new LocalLocationFactory(tmpFolder.newFolder()), CConfiguration.create());\n    DatasetSpecification spec = definition.configure(\"cdap.system.metricV2.8\", DatasetProperties.EMPTY);\n\n    DatasetAdmin admin = definition.getAdmin(DatasetContext.from(Constants.SYSTEM_NAMESPACE), spec, null);\n    admin.create();\n\n    MetricHBaseTableUtil util = new MetricHBaseTableUtil(hBaseTableUtil);\n    HBaseAdmin hAdmin = testHBase.getHBaseAdmin();\n    HTableDescriptor desc = tableUtil.getHTableDescriptor(hAdmin, TableId.from(spec.getName()));\n    Assert.assertEquals(MetricHBaseTableUtil.Version.VERSION_2_8_OR_HIGHER, util.getVersion(desc));\n\n    // Verify HBase table without coprocessor is properly recognized as 2.6- version\n    TableName table26 = TableName.valueOf(\"metricV2.6\");\n    hAdmin.createTable(new HTableDescriptor(table26));\n    desc = hAdmin.getTableDescriptor(table26);\n    Assert.assertEquals(MetricHBaseTableUtil.Version.VERSION_2_6_OR_LOWER, util.getVersion(desc));\n\n    // Verify HBase table with IncrementHandler coprocessor but without cdap.version on it is properly recognized as\n    // 2.7 version\n    TableName table27 = TableName.valueOf(\"metricV2.7\");\n    desc = new HTableDescriptor(table27);\n    desc.addCoprocessor(hBaseTableUtil.getIncrementHandlerClassForVersion().getName());\n    hAdmin.createTable(desc);\n    desc = hAdmin.getTableDescriptor(table27);\n    Assert.assertEquals(MetricHBaseTableUtil.Version.VERSION_2_7, util.getVersion(desc));\n  }","commit_id":"eb1c043da4f68f1bca4e225a71cce5d83547d748","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public synchronized void updateInstance(Id.DatasetInstance datasetInstanceId, DatasetProperties props)\n    throws InstanceConflictException, IOException {\n    DatasetSpecification oldSpec = instances.get(datasetInstanceId);\n    if (oldSpec == null) {\n      throw new InstanceConflictException(\"Dataset instance with name does not exist: \" + datasetInstanceId);\n    }\n    String datasetType = oldSpec.getType();\n    DatasetDefinitionRegistry registry = getRegistryForType(datasetInstanceId.getNamespace(), datasetType);\n    Preconditions.checkArgument(registry != null, \"Dataset type '%s' is not registered\", datasetType);\n    DatasetDefinition def = registry.get(datasetType);\n    DatasetSpecification spec = def.configure(datasetInstanceId.getId(), props);\n    instances.put(datasetInstanceId, spec);\n    def.getAdmin(new DatasetContext.Builder().setNamespaceId(datasetInstanceId.getNamespaceId()).build(),\n                 spec, null).upgrade();\n  }","id":82718,"modified_method":"@Override\n  public synchronized void updateInstance(Id.DatasetInstance datasetInstanceId, DatasetProperties props)\n    throws InstanceConflictException, IOException {\n    DatasetSpecification oldSpec = instances.get(datasetInstanceId);\n    if (oldSpec == null) {\n      throw new InstanceConflictException(\"Dataset instance with name does not exist: \" + datasetInstanceId);\n    }\n    String datasetType = oldSpec.getType();\n    DatasetDefinitionRegistry registry = getRegistryForType(datasetInstanceId.getNamespace(), datasetType);\n    Preconditions.checkArgument(registry != null, \"Dataset type '%s' is not registered\", datasetType);\n    DatasetDefinition def = registry.get(datasetType);\n    DatasetSpecification spec = def.configure(datasetInstanceId.getId(), props);\n    instances.put(datasetInstanceId, spec);\n    def.getAdmin(DatasetContext.from(datasetInstanceId.getNamespaceId()), spec, null).upgrade();\n  }","commit_id":"6a8e42c02630364e26151944ee41ac1d35fdf6f8","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public synchronized <T extends DatasetAdmin> T getAdmin(Id.DatasetInstance datasetInstanceId,\n                                                          @Nullable ClassLoader classLoader)\n    throws IOException {\n\n    DatasetSpecification spec = instances.get(datasetInstanceId);\n    if (spec == null) {\n      return null;\n    }\n    List<String> availableModuleClasses = getAvailableModuleClasses(datasetInstanceId.getNamespace());\n    DatasetDefinition impl = createRegistry(availableModuleClasses, classLoader).get(spec.getType());\n    return (T) impl.getAdmin(new DatasetContext.Builder().setNamespaceId(datasetInstanceId.getNamespaceId()).build(),\n                             spec, classLoader);\n  }","id":82719,"modified_method":"@Override\n  public synchronized <T extends DatasetAdmin> T getAdmin(Id.DatasetInstance datasetInstanceId,\n                                                          @Nullable ClassLoader classLoader)\n    throws IOException {\n\n    DatasetSpecification spec = instances.get(datasetInstanceId);\n    if (spec == null) {\n      return null;\n    }\n    List<String> availableModuleClasses = getAvailableModuleClasses(datasetInstanceId.getNamespace());\n    DatasetDefinition impl = createRegistry(availableModuleClasses, classLoader).get(spec.getType());\n    return (T) impl.getAdmin(DatasetContext.from(datasetInstanceId.getNamespaceId()), spec, classLoader);\n  }","commit_id":"6a8e42c02630364e26151944ee41ac1d35fdf6f8","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public synchronized <T extends Dataset> T getDataset(Id.DatasetInstance datasetInstanceId,\n                                                       Map<String, String> arguments,\n                                                       @Nullable ClassLoader classLoader) throws IOException {\n\n    DatasetSpecification spec = instances.get(datasetInstanceId);\n    if (spec == null) {\n      return null;\n    }\n    List<String> availableModuleClasses = getAvailableModuleClasses(datasetInstanceId.getNamespace());\n    DatasetDefinition def = createRegistry(availableModuleClasses, classLoader).get(spec.getType());\n    return (T) (def.getDataset(new DatasetContext.Builder().setNamespaceId(datasetInstanceId.getNamespaceId()).build(),\n                               spec, arguments, classLoader));\n  }","id":82720,"modified_method":"@Override\n  public synchronized <T extends Dataset> T getDataset(Id.DatasetInstance datasetInstanceId,\n                                                       Map<String, String> arguments,\n                                                       @Nullable ClassLoader classLoader) throws IOException {\n\n    DatasetSpecification spec = instances.get(datasetInstanceId);\n    if (spec == null) {\n      return null;\n    }\n    List<String> availableModuleClasses = getAvailableModuleClasses(datasetInstanceId.getNamespace());\n    DatasetDefinition def = createRegistry(availableModuleClasses, classLoader).get(spec.getType());\n    return (T) (def.getDataset(DatasetContext.from(datasetInstanceId.getNamespaceId()), spec, arguments, classLoader));\n  }","commit_id":"6a8e42c02630364e26151944ee41ac1d35fdf6f8","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public synchronized void deleteInstance(Id.DatasetInstance datasetInstanceId)\n    throws InstanceConflictException, IOException {\n    DatasetSpecification spec = instances.remove(datasetInstanceId);\n    String datasetType = spec.getType();\n    DatasetDefinitionRegistry registry = getRegistryForType(datasetInstanceId.getNamespace(), datasetType);\n    Preconditions.checkState(registry != null, \"Dataset type '%s' is not registered\", datasetType);\n    DatasetDefinition def = registry.get(spec.getType());\n    def.getAdmin(new DatasetContext.Builder().setNamespaceId(datasetInstanceId.getNamespaceId()).build(),\n                 spec, null).drop();\n  }","id":82721,"modified_method":"@Override\n  public synchronized void deleteInstance(Id.DatasetInstance datasetInstanceId)\n    throws InstanceConflictException, IOException {\n    DatasetSpecification spec = instances.remove(datasetInstanceId);\n    String datasetType = spec.getType();\n    DatasetDefinitionRegistry registry = getRegistryForType(datasetInstanceId.getNamespace(), datasetType);\n    Preconditions.checkState(registry != null, \"Dataset type '%s' is not registered\", datasetType);\n    DatasetDefinition def = registry.get(spec.getType());\n    def.getAdmin(DatasetContext.from(datasetInstanceId.getNamespaceId()), spec, null).drop();\n  }","commit_id":"6a8e42c02630364e26151944ee41ac1d35fdf6f8","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public synchronized void addInstance(String datasetType, Id.DatasetInstance datasetInstanceId,\n                                       DatasetProperties props) throws InstanceConflictException, IOException {\n    if (instances.get(datasetInstanceId) != null) {\n      throw new InstanceConflictException(\"Dataset instance with name already exists: \" + datasetInstanceId);\n    }\n\n    DatasetDefinitionRegistry registry = getRegistryForType(datasetInstanceId.getNamespace(), datasetType);\n    Preconditions.checkArgument(registry != null, \"Dataset type '%s' is not registered\", datasetType);\n    DatasetDefinition def = registry.get(datasetType);\n    DatasetSpecification spec = def.configure(datasetInstanceId.getId(), props);\n    def.getAdmin(new DatasetContext.Builder().setNamespaceId(datasetInstanceId.getNamespaceId()).build(),\n                 spec, null).create();\n    instances.put(datasetInstanceId, spec);\n    LOG.info(\"Created dataset {} of type {}\", datasetInstanceId, datasetType);\n  }","id":82722,"modified_method":"@Override\n  public synchronized void addInstance(String datasetType, Id.DatasetInstance datasetInstanceId,\n                                       DatasetProperties props) throws InstanceConflictException, IOException {\n    if (instances.get(datasetInstanceId) != null) {\n      throw new InstanceConflictException(\"Dataset instance with name already exists: \" + datasetInstanceId);\n    }\n\n    DatasetDefinitionRegistry registry = getRegistryForType(datasetInstanceId.getNamespace(), datasetType);\n    Preconditions.checkArgument(registry != null, \"Dataset type '%s' is not registered\", datasetType);\n    DatasetDefinition def = registry.get(datasetType);\n    DatasetSpecification spec = def.configure(datasetInstanceId.getId(), props);\n    def.getAdmin(DatasetContext.from(datasetInstanceId.getNamespaceId()), spec, null).create();\n    instances.put(datasetInstanceId, spec);\n    LOG.info(\"Created dataset {} of type {}\", datasetInstanceId, datasetType);\n  }","commit_id":"6a8e42c02630364e26151944ee41ac1d35fdf6f8","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public synchronized void deleteAllInstances(Id.Namespace namespaceId) throws DatasetManagementException, IOException {\n    for (DatasetSpecification spec : instances.values()) {\n      String datasetType = spec.getType();\n      DatasetDefinitionRegistry registry = getRegistryForType(namespaceId, datasetType);\n      Preconditions.checkState(registry != null, \"Dataset type '%s' is not registered\", datasetType);\n      DatasetDefinition def = registry.get(spec.getType());\n      def.getAdmin(new DatasetContext.Builder().setNamespaceId(namespaceId.getId()).build(), spec, null).drop();\n    }\n    instances.clear();\n  }","id":82723,"modified_method":"@Override\n  public synchronized void deleteAllInstances(Id.Namespace namespaceId) throws DatasetManagementException, IOException {\n    for (DatasetSpecification spec : instances.values()) {\n      String datasetType = spec.getType();\n      DatasetDefinitionRegistry registry = getRegistryForType(namespaceId, datasetType);\n      Preconditions.checkState(registry != null, \"Dataset type '%s' is not registered\", datasetType);\n      DatasetDefinition def = registry.get(spec.getType());\n      def.getAdmin(DatasetContext.from(namespaceId.getId()), spec, null).drop();\n    }\n    instances.clear();\n  }","commit_id":"6a8e42c02630364e26151944ee41ac1d35fdf6f8","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public void drop(Id.DatasetInstance datasetInstanceId, DatasetTypeMeta typeMeta,\n                   DatasetSpecification spec) throws Exception {\n    DatasetType type = client.getDatasetType(typeMeta, null);\n\n    if (type == null) {\n      throw new IllegalArgumentException(\"Dataset type cannot be instantiated for provided type meta: \" + typeMeta);\n    }\n\n    DatasetAdmin admin = type.getAdmin(\n      new DatasetContext.Builder().setNamespaceId(datasetInstanceId.getNamespaceId()).build(), spec);\n    admin.drop();\n  }","id":82724,"modified_method":"@Override\n  public void drop(Id.DatasetInstance datasetInstanceId, DatasetTypeMeta typeMeta,\n                   DatasetSpecification spec) throws Exception {\n    DatasetType type = client.getDatasetType(typeMeta, null);\n\n    if (type == null) {\n      throw new IllegalArgumentException(\"Dataset type cannot be instantiated for provided type meta: \" + typeMeta);\n    }\n\n    DatasetAdmin admin = type.getAdmin(DatasetContext.from(datasetInstanceId.getNamespaceId()), spec);\n    admin.drop();\n  }","commit_id":"6a8e42c02630364e26151944ee41ac1d35fdf6f8","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public DatasetSpecification create(Id.DatasetInstance datasetInstanceId, DatasetTypeMeta typeMeta,\n                                     DatasetProperties props)\n    throws Exception {\n\n    DatasetType type = client.getDatasetType(typeMeta, null);\n\n    if (type == null) {\n      throw new IllegalArgumentException(\"Dataset type cannot be instantiated for provided type meta: \" + typeMeta);\n    }\n\n    // TODO: Note - for now, just sending the name. However, type likely needs to be namesapce-aware too.\n    DatasetSpecification spec = type.configure(datasetInstanceId.getId(), props);\n    DatasetAdmin admin = type.getAdmin(\n      new DatasetContext.Builder().setNamespaceId(datasetInstanceId.getNamespaceId()).build(), spec);\n    admin.create();\n\n    return spec;\n  }","id":82725,"modified_method":"@Override\n  public DatasetSpecification create(Id.DatasetInstance datasetInstanceId, DatasetTypeMeta typeMeta,\n                                     DatasetProperties props)\n    throws Exception {\n\n    DatasetType type = client.getDatasetType(typeMeta, null);\n\n    if (type == null) {\n      throw new IllegalArgumentException(\"Dataset type cannot be instantiated for provided type meta: \" + typeMeta);\n    }\n\n    // TODO: Note - for now, just sending the name. However, type likely needs to be namesapce-aware too.\n    DatasetSpecification spec = type.configure(datasetInstanceId.getId(), props);\n    DatasetAdmin admin = type.getAdmin(DatasetContext.from(datasetInstanceId.getNamespaceId()), spec);\n    admin.create();\n\n    return spec;\n  }","commit_id":"6a8e42c02630364e26151944ee41ac1d35fdf6f8","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public <T extends Dataset> T getDataset(Id.DatasetInstance datasetInstanceId, Map<String, String> arguments,\n                                          ClassLoader classLoader) throws DatasetManagementException, IOException {\n    DatasetMeta instanceInfo = clientCache.getUnchecked(datasetInstanceId.getNamespace())\n      .getInstance(datasetInstanceId.getId());\n    if (instanceInfo == null) {\n      return null;\n    }\n\n    DatasetType type = getDatasetType(instanceInfo.getType(), classLoader);\n    return (T) type.getDataset(new DatasetContext.Builder().setNamespaceId(datasetInstanceId.getNamespaceId()).build(),\n                               instanceInfo.getSpec(), arguments);\n  }","id":82726,"modified_method":"@Override\n  public <T extends Dataset> T getDataset(Id.DatasetInstance datasetInstanceId, Map<String, String> arguments,\n                                          ClassLoader classLoader) throws DatasetManagementException, IOException {\n    DatasetMeta instanceInfo = clientCache.getUnchecked(datasetInstanceId.getNamespace())\n      .getInstance(datasetInstanceId.getId());\n    if (instanceInfo == null) {\n      return null;\n    }\n\n    DatasetType type = getDatasetType(instanceInfo.getType(), classLoader);\n    return (T) type.getDataset(DatasetContext.from(datasetInstanceId.getNamespaceId()), instanceInfo.getSpec(),\n                               arguments);\n  }","commit_id":"6a8e42c02630364e26151944ee41ac1d35fdf6f8","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public <T extends DatasetAdmin> T getAdmin(Id.DatasetInstance datasetInstanceId, ClassLoader classLoader)\n    throws DatasetManagementException, IOException {\n    DatasetMeta instanceInfo = clientCache.getUnchecked(datasetInstanceId.getNamespace())\n      .getInstance(datasetInstanceId.getId());\n    if (instanceInfo == null) {\n      return null;\n    }\n\n    DatasetType type = getDatasetType(instanceInfo.getType(), classLoader);\n    return (T) type.getAdmin(new DatasetContext.Builder().setNamespaceId(datasetInstanceId.getNamespaceId()).build(),\n                             instanceInfo.getSpec());\n  }","id":82727,"modified_method":"@Override\n  public <T extends DatasetAdmin> T getAdmin(Id.DatasetInstance datasetInstanceId, ClassLoader classLoader)\n    throws DatasetManagementException, IOException {\n    DatasetMeta instanceInfo = clientCache.getUnchecked(datasetInstanceId.getNamespace())\n      .getInstance(datasetInstanceId.getId());\n    if (instanceInfo == null) {\n      return null;\n    }\n\n    DatasetType type = getDatasetType(instanceInfo.getType(), classLoader);\n    return (T) type.getAdmin(DatasetContext.from(datasetInstanceId.getNamespaceId()), instanceInfo.getSpec());\n  }","commit_id":"6a8e42c02630364e26151944ee41ac1d35fdf6f8","url":"https://github.com/caskdata/cdap"},{"original_method":"/**\n     * Check that all required attributes have been set\n     *\n     * @since Ant 1.5\n     */\n\tprivate void checkParameters() {\n\t\tif ( homeDir == null ) {\n\t\t\tthrow new BuildException( \"home attribute must be defined for task <\"\n\t\t\t\t\t\t\t\t\t\t+ getTaskName() + \"/>\",\n\t\t\t\t\t\t\t\t\t  getLocation() );\n\t\t}\n\n\t\tif ( projectFile == null && classLocations.size() == 0 ) {\n\t\t\tthrow new BuildException( \"either projectfile or <class/> child \" +\n\t\t\t\t\t\t\t\t\t  \"elements must be defined for task <\"\n\t\t\t\t\t\t\t\t\t\t+ getTaskName() + \"/>\",\n\t\t\t\t\t\t\t\t\t  getLocation() );\n\t\t}\n \n\t\tif ( outputFormat != null  && \n\t\t\t!( outputFormat.trim().equalsIgnoreCase(\"xml\" ) || \n\t\t\t   outputFormat.trim().equalsIgnoreCase(\"text\" ) ) ) { \n\t\t\tthrow new BuildException( \"output attribute must be either \" +\n  \t\t\t\t\t\t\t\t\t  \"'text' or 'xml' for task <\"\n\t\t\t\t\t\t\t\t\t\t+ getTaskName() + \"/>\",\n\t\t\t\t\t\t\t\t\t  getLocation() );\n\t\t}\n\t\n\t\tif ( reportLevel != null  && \n\t\t\t!( reportLevel.trim().equalsIgnoreCase(\"low\" ) || \n\t\t\t   reportLevel.trim().equalsIgnoreCase(\"medium\" ) ||\n\t\t\t   reportLevel.trim().equalsIgnoreCase(\"high\" ) ) ) { \n\t\t\tthrow new BuildException( \"reportlevel attribute must be either \" +\n  \t\t\t\t\t\t\t\t\t  \"'low' or 'medium' or 'high' for task <\" + \n\t\t\t\t\t\t\t\t\t\tgetTaskName() + \"/>\",\n\t\t\t\t\t\t\t\t\t  getLocation() );\n\t\t}\n\n\t\tif ( excludeFile != null && includeFile != null ) {\n\t\t\tthrow new BuildException(\"only one of excludeFile and includeFile \" +\n\t\t\t\t\" attributes may be used in task <\" + getTaskName() + \"/>\",\n\t\t\t\tgetLocation());\n\t\t}\n    }","id":82728,"modified_method":"/**\n     * Check that all required attributes have been set\n     *\n     * @since Ant 1.5\n     */\n\tprivate void checkParameters() {\n\t\tif ( homeDir == null && (classpath == null || pluginList == null) ) {\n\t\t\tthrow new BuildException( \"either home attribute or \" +\n\t\t\t\t\t\t\t\t\t  \"classpath and pluginList attributes \" +\n\t\t\t\t\t\t\t\t\t  \" must be defined for task <\"\n\t\t\t\t\t\t\t\t\t\t+ getTaskName() + \"/>\",\n\t\t\t\t\t\t\t\t\t  getLocation() );\n\t\t}\n\n\t\tif (pluginList != null) {\n\t\t\t// Make sure that all plugins are actually Jar files.\n\t\t\tString[] pluginFileList = pluginList.list();\n\t\t\tfor (int i = 0; i < pluginFileList.length; ++i) {\n\t\t\t\tString pluginFile = pluginFileList[i];\n\t\t\t\tif (!pluginFile.endsWith(\".jar\")) {\n\t\t\t\t\tthrow new BuildException(\"plugin file \" + pluginFile + \" is not a Jar file \" +\n\t\t\t\t\t\t\t\t\t\t\t\"in task <\" + getTaskName() + \"/>\",\n\t\t\t\t\t\t\t\t\t\t\tgetLocation());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( projectFile == null && classLocations.size() == 0 ) {\n\t\t\tthrow new BuildException( \"either projectfile or <class/> child \" +\n\t\t\t\t\t\t\t\t\t  \"elements must be defined for task <\"\n\t\t\t\t\t\t\t\t\t\t+ getTaskName() + \"/>\",\n\t\t\t\t\t\t\t\t\t  getLocation() );\n\t\t}\n \n\t\tif ( outputFormat != null  && \n\t\t\t!( outputFormat.trim().equalsIgnoreCase(\"xml\" ) || \n\t\t\t   outputFormat.trim().equalsIgnoreCase(\"text\" ) ) ) { \n\t\t\tthrow new BuildException( \"output attribute must be either \" +\n  \t\t\t\t\t\t\t\t\t  \"'text' or 'xml' for task <\"\n\t\t\t\t\t\t\t\t\t\t+ getTaskName() + \"/>\",\n\t\t\t\t\t\t\t\t\t  getLocation() );\n\t\t}\n\t\n\t\tif ( reportLevel != null  && \n\t\t\t!( reportLevel.trim().equalsIgnoreCase(\"low\" ) || \n\t\t\t   reportLevel.trim().equalsIgnoreCase(\"medium\" ) ||\n\t\t\t   reportLevel.trim().equalsIgnoreCase(\"high\" ) ) ) { \n\t\t\tthrow new BuildException( \"reportlevel attribute must be either \" +\n  \t\t\t\t\t\t\t\t\t  \"'low' or 'medium' or 'high' for task <\" + \n\t\t\t\t\t\t\t\t\t\tgetTaskName() + \"/>\",\n\t\t\t\t\t\t\t\t\t  getLocation() );\n\t\t}\n\n\t\tif ( excludeFile != null && includeFile != null ) {\n\t\t\tthrow new BuildException(\"only one of excludeFile and includeFile \" +\n\t\t\t\t\" attributes may be used in task <\" + getTaskName() + \"/>\",\n\t\t\t\tgetLocation());\n\t\t}\n    }","commit_id":"d7b5aee3da28a1babe513dc05b3d8b9eceb3db3f","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"/**\n     * Create a new JVM to do the work.\n     *\n     * @since Ant 1.5\n     */\n\tprivate void execFindbugs() throws BuildException {\n\t\tfindbugsEngine = (Java) project.createTask(\"java\");\n\n\t\tfindbugsEngine.setTaskName( getTaskName() );\n\t\tfindbugsEngine.setFork( true );\n\t\tfindbugsEngine.setDir( new File(homeDir + File.separator + \"lib\"));\n\t\tfindbugsEngine.setJar( new File( homeDir + File.separator + \"lib\" + \n                                         File.separator + FINDBUGS_JAR ) );\n\t\tfindbugsEngine.setTimeout( new Long( timeout ) );\n\n\t\tif ( debug )\n\t\t\tjvmargs = jvmargs + \" -Dfindbugs.debug=true\";\n\t\tfindbugsEngine.createJvmarg().setLine( jvmargs ); \n\n\t\taddArg(\"-home\");\n\t\taddArg(homeDir.getPath());\n\n\t\tif ( sorted ) addArg(\"-sortByClass\");\n\t\tif ( outputFormat != null && \n\t\t\t outputFormat.trim().equalsIgnoreCase(\"xml\") ) {\n\t\t\taddArg(\"-xml\");\n\t\t}\n\t\tif ( quietErrors ) addArg(\"-quiet\");\n\t\tif ( reportLevel != null ) addArg(\"-\" + reportLevel.trim().toLowerCase());\n\t\tif ( projectFile != null ) {\n\t\t\taddArg(\"-project\");\n\t\t\taddArg(projectFile.getPath());\n\t\t}\n\t\tif ( excludeFile != null ) {\n\t\t\taddArg(\"-exclude\");\n\t\t\taddArg(excludeFile.getPath());\n\t\t}\n\t\tif ( includeFile != null) {\n\t\t\taddArg(\"-include\");\n\t\t\taddArg(includeFile.getPath());\n\t\t}\n\t\tif ( visitors != null) {\n\t\t\taddArg(\"-visitors\");\n\t\t\taddArg(visitors);\n\t\t}\n\t\tif ( omitVisitors != null ) {\n\t\t\taddArg(\"-omitVisitors\");\n\t\t\taddArg(omitVisitors);\n\t\t}\n\t\tif ( auxClasspath != null ) {\n\t\t\taddArg(\"-auxclasspath\");\n\t\t\taddArg(auxClasspath.toString());\n\t\t}\n\t\tif ( sourcePath != null) {\n\t\t\taddArg(\"-sourcepath\");\n\t\t\taddArg(sourcePath.toString());\n\t\t}\n\t\tif ( outputFileName != null ) {\n\t\t\taddArg(\"-outputFile\");\n\t\t\taddArg(outputFileName);\n\t\t}\n\t\taddArg(\"-exitcode\");\n        Iterator itr = classLocations.iterator();\n        while ( itr.hasNext() ) {\n\t\t\taddArg(itr.next().toString());\n      \t} \n\n\t\tlog(\"Running FindBugs...\");\n\n\t\tint rc = findbugsEngine.executeJava();\n\n\t\tif ((rc & ExitCodes.ERROR_FLAG) != 0) {\n\t\t\tthrow new BuildException(\"Execution of findbugs failed.\");\n\t\t}\n\t\tif ((rc & ExitCodes.BUGS_FOUND_FLAG) != 0) {\n\t\t\tlog(\"Bugs were found\");\n\t\t} else {\n\t\t\tlog(\"No bugs were found\");\n\t\t}\n\t\tif ((rc & ExitCodes.MISSING_CLASS_FLAG) != 0) {\n\t\t\tlog(\"Classes needed for analysis were missing\");\n\t\t}\n\t\tif (outputFileName != null) {\n\t\t\tlog(\"Output saved to \" + outputFileName);\n\t\t}\n    }","id":82729,"modified_method":"/**\n     * Create a new JVM to do the work.\n     *\n     * @since Ant 1.5\n     */\n\tprivate void execFindbugs() throws BuildException {\n\t\tfindbugsEngine = (Java) project.createTask(\"java\");\n\n\t\tfindbugsEngine.setTaskName( getTaskName() );\n\t\tfindbugsEngine.setFork( true );\n\t\tfindbugsEngine.setTimeout( new Long( timeout ) );\n\n\t\tif ( debug )\n\t\t\tjvmargs = jvmargs + \" -Dfindbugs.debug=true\";\n\t\tfindbugsEngine.createJvmarg().setLine( jvmargs ); \n\n\t\tif (homeDir != null) {\n\t\t\t// Use findbugs.home to locate findbugs.jar and the standard\n\t\t\t// plugins.  This is the usual means of initialization.\n\n\t\t\tfindbugsEngine.setDir( new File(homeDir + File.separator + \"lib\"));\n\t\t\tfindbugsEngine.setJar( new File( homeDir + File.separator + \"lib\" + \n                                         File.separator + FINDBUGS_JAR ) );\n\n\t\t\taddArg(\"-home\");\n\t\t\taddArg(homeDir.getPath());\n\t\t} else {\n\t\t\t// Use an explicitly specified classpath and list of plugin Jars\n\t\t\t// to initialize.  This is useful for other tools which may have\n\t\t\t// FindBugs installed using a non-standard directory layout.\n\n\t\t\tfindbugsEngine.setClasspath(classpath);\n\t\t\tfindbugsEngine.setClassname(\"edu.umd.cs.findbugs.FindBugs\");\n\n\t\t\taddArg(\"-pluginList\");\n\t\t\taddArg(pluginList.toString());\n\t\t}\n\n\t\tif ( sorted ) addArg(\"-sortByClass\");\n\t\tif ( outputFormat != null && \n\t\t\t outputFormat.trim().equalsIgnoreCase(\"xml\") ) {\n\t\t\taddArg(\"-xml\");\n\t\t}\n\t\tif ( quietErrors ) addArg(\"-quiet\");\n\t\tif ( reportLevel != null ) addArg(\"-\" + reportLevel.trim().toLowerCase());\n\t\tif ( projectFile != null ) {\n\t\t\taddArg(\"-project\");\n\t\t\taddArg(projectFile.getPath());\n\t\t}\n\t\tif ( excludeFile != null ) {\n\t\t\taddArg(\"-exclude\");\n\t\t\taddArg(excludeFile.getPath());\n\t\t}\n\t\tif ( includeFile != null) {\n\t\t\taddArg(\"-include\");\n\t\t\taddArg(includeFile.getPath());\n\t\t}\n\t\tif ( visitors != null) {\n\t\t\taddArg(\"-visitors\");\n\t\t\taddArg(visitors);\n\t\t}\n\t\tif ( omitVisitors != null ) {\n\t\t\taddArg(\"-omitVisitors\");\n\t\t\taddArg(omitVisitors);\n\t\t}\n\t\tif ( auxClasspath != null ) {\n\t\t\taddArg(\"-auxclasspath\");\n\t\t\taddArg(auxClasspath.toString());\n\t\t}\n\t\tif ( sourcePath != null) {\n\t\t\taddArg(\"-sourcepath\");\n\t\t\taddArg(sourcePath.toString());\n\t\t}\n\t\tif ( outputFileName != null ) {\n\t\t\taddArg(\"-outputFile\");\n\t\t\taddArg(outputFileName);\n\t\t}\n\t\taddArg(\"-exitcode\");\n        Iterator itr = classLocations.iterator();\n        while ( itr.hasNext() ) {\n\t\t\taddArg(itr.next().toString());\n      \t} \n\n\t\tlog(\"Running FindBugs...\");\n\n\t\tint rc = findbugsEngine.executeJava();\n\n\t\tif ((rc & ExitCodes.ERROR_FLAG) != 0) {\n\t\t\tthrow new BuildException(\"Execution of findbugs failed.\");\n\t\t}\n\t\tif ((rc & ExitCodes.BUGS_FOUND_FLAG) != 0) {\n\t\t\tlog(\"Bugs were found\");\n\t\t} else {\n\t\t\tlog(\"No bugs were found\");\n\t\t}\n\t\tif ((rc & ExitCodes.MISSING_CLASS_FLAG) != 0) {\n\t\t\tlog(\"Classes needed for analysis were missing\");\n\t\t}\n\t\tif (outputFileName != null) {\n\t\t\tlog(\"Output saved to \" + outputFileName);\n\t\t}\n    }","commit_id":"d7b5aee3da28a1babe513dc05b3d8b9eceb3db3f","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"@Override\n    protected void configureFindbugsEngine() {\n\t    if (projectName != null) {\n\t\t\taddArg(\"-projectName\");\n\t\t\taddArg(projectName);\n\t\t}\n\t\tif (adjustExperimental) {\n\t\t\taddArg(\"-adjustExperimental\");\n\t\t}\n\n\t\tif ( conserveSpace ) {\n\t\t\taddArg(\"-conserveSpace\");\n\t\t}\n\t\t\tif ( workHard ){\n\t\t\taddArg(\"-workHard\");\n\t\t}\n\t\tif ( effort != null ) {\n\t\t\taddArg(\"-effort:\" + effort);\n\t\t}\n\n\t\tif ( sorted ) addArg(\"-sortByClass\");\n\t\tif ( timestampNow ) addArg(\"-timestampNow\");\n\n\t\tif ( outputFormat != null && !outputFormat.trim().equalsIgnoreCase(\"text\") ) {\n\t\t\toutputFormat = outputFormat.trim();\n\t\t\tString outputArg = \"-\";\n\t\t\tint colon = outputFormat.indexOf(':');\n\t\t\tif (colon >= 0) {\n\t\t\t\toutputArg += outputFormat.substring(0, colon).toLowerCase();\n\t\t\t\toutputArg += \":\";\n\t\t\t\toutputArg += outputFormat.substring(colon + 1);\n\t\t\t} else {\n\t\t\t\toutputArg += outputFormat.toLowerCase();\n\t\t\t\tif (stylesheet != null) {\n\t\t\t\t\toutputArg += \":\";\n\t\t\t\t\toutputArg += stylesheet.trim();\n\t\t\t\t}\n\t\t\t}\n\t\t\taddArg(outputArg);\n\t\t}\n\t\tif ( quietErrors ) addArg(\"-quiet\");\n\t\tif ( reportLevel != null ) addArg(\"-\" + reportLevel.trim().toLowerCase());\n\t\tif ( projectFile != null ) {\n\t\t\taddArg(\"-project\");\n\t\t\taddArg(projectFile.getPath());\n\t\t}\n\t\tif ( applySuppression ) {\n\t\t\taddArg(\"-applySuppression\");\n\t\t}\n\t\n\t\tif ( baselineBugs != null) {\n\t\t\taddArg(\"-excludeBugs\");\n\t\t\taddArg(baselineBugs.getPath());\n\t\t}\n\t\tif ( excludeFile != null ) {\n\t\t\taddArg(\"-exclude\");\n\t\t\taddArg(excludeFile.getPath());\n\t\t}\n\t\tif ( includeFile != null) {\n\t\t\taddArg(\"-include\");\n\t\t\taddArg(includeFile.getPath());\n\t\t}\n\t\tif ( visitors != null) {\n\t\t\taddArg(\"-visitors\");\n\t\t\taddArg(visitors);\n\t\t}\n\t\tif ( omitVisitors != null ) {\n\t\t\taddArg(\"-omitVisitors\");\n\t\t\taddArg(omitVisitors);\n\t\t}\n\t\tif ( chooseVisitors != null ) {\n\t\t\taddArg(\"-chooseVisitors\");\n\t\t\taddArg(chooseVisitors);\n\t\t}\n\n\t\tif ( auxClasspath != null ) {\n\t\t\ttry {\n\t\t\t\t// Try to dereference the auxClasspath.\n\t\t\t\t// If it throws an exception, we know it\n\t\t\t\t// has an invalid path entry, so we complain\n\t\t\t\t// and tolerate it.\n\t\t\t\tString unreadReference = auxClasspath.toString();\n\t\t\t\taddArg(\"-auxclasspath\");\n\t\t\t\taddArg(auxClasspath.toString());\n\t\t\t}\n\t\t\tcatch (Throwable t) {\n\t\t\t\tlog(\"Warning: auxClasspath \"+t+\" not found.\");\n\t\t\t}\n\t\t}\n\t\tif ( sourcePath != null) {\n\t\t\taddArg(\"-sourcepath\");\n\t\t\taddArg(sourcePath.toString());\n\t\t}\n\t\tif ( outputFileName != null ) {\n\t\t\taddArg(\"-outputFile\");\n\t\t\taddArg(outputFileName);\n\t\t}\n\t\tif ( relaxed ) {\n\t\t\taddArg(\"-relaxed\");\n\t\t}\n\t\tif ( noClassOk ) {\n\t\t\taddArg(\"-noClassOk\");\n\t\t}\n\t\tif ( onlyAnalyze != null ) {\n\t\t\taddArg(\"-onlyAnalyze\");\n\t\t\taddArg(onlyAnalyze);\n\t\t}\n\n\t\taddArg(\"-exitcode\");\n\t\tfor (ClassLocation classLocation : classLocations) {\n\t\t\taddArg(classLocation.toString());\n\t\t} \n\n\t\tif (auxAnalyzepath != null) {\n\t\t\tString[] result = auxAnalyzepath.toString().split(java.io.File.pathSeparator);\n\t\t\tfor (int x=0; x<result.length; x++) {\n\t\t\t\taddArg(result[x]);\n\t\t\t}\n\t\t}\n    }","id":82730,"modified_method":"@Override\n    protected void configureFindbugsEngine() {\n\t    if (projectName != null) {\n\t\t\taddArg(\"-projectName\");\n\t\t\taddArg(projectName);\n\t\t}\n\t\tif (adjustExperimental) {\n\t\t\taddArg(\"-adjustExperimental\");\n\t\t}\n\n\t\tif ( conserveSpace ) {\n\t\t\taddArg(\"-conserveSpace\");\n\t\t}\n\t\t\tif ( workHard ){\n\t\t\taddArg(\"-workHard\");\n\t\t}\n\t\tif ( effort != null ) {\n\t\t\taddArg(\"-effort:\" + effort);\n\t\t}\n\n\t\tif ( sorted ) addArg(\"-sortByClass\");\n\t\tif ( timestampNow ) addArg(\"-timestampNow\");\n\n\t\tif ( outputFormat != null && !outputFormat.trim().equalsIgnoreCase(\"text\") ) {\n\t\t\toutputFormat = outputFormat.trim();\n\t\t\tString outputArg = \"-\";\n\t\t\tint colon = outputFormat.indexOf(':');\n\t\t\tif (colon >= 0) {\n\t\t\t\toutputArg += outputFormat.substring(0, colon).toLowerCase();\n\t\t\t\toutputArg += \":\";\n\t\t\t\toutputArg += outputFormat.substring(colon + 1);\n\t\t\t} else {\n\t\t\t\toutputArg += outputFormat.toLowerCase();\n\t\t\t\tif (stylesheet != null) {\n\t\t\t\t\toutputArg += \":\";\n\t\t\t\t\toutputArg += stylesheet.trim();\n\t\t\t\t}\n\t\t\t}\n\t\t\taddArg(outputArg);\n\t\t}\n\t\tif ( quietErrors ) addArg(\"-quiet\");\n\t\tif ( reportLevel != null ) addArg(\"-\" + reportLevel.trim().toLowerCase());\n\t\tif ( projectFile != null ) {\n\t\t\taddArg(\"-project\");\n\t\t\taddArg(projectFile.getPath());\n\t\t}\n\t\tif ( applySuppression ) {\n\t\t\taddArg(\"-applySuppression\");\n\t\t}\n\t\n\t\tif ( baselineBugs != null) {\n\t\t\taddArg(\"-excludeBugs\");\n\t\t\taddArg(baselineBugs.getPath());\n\t\t}\n\t\tif ( excludeFile != null ) {\n\t\t\taddArg(\"-exclude\");\n\t\t\taddArg(excludeFile.getPath());\n\t\t}\n\t\tif ( includeFile != null) {\n\t\t\taddArg(\"-include\");\n\t\t\taddArg(includeFile.getPath());\n\t\t}\n\t\tif ( visitors != null) {\n\t\t\taddArg(\"-visitors\");\n\t\t\taddArg(visitors);\n\t\t}\n\t\tif ( omitVisitors != null ) {\n\t\t\taddArg(\"-omitVisitors\");\n\t\t\taddArg(omitVisitors);\n\t\t}\n\t\tif ( chooseVisitors != null ) {\n\t\t\taddArg(\"-chooseVisitors\");\n\t\t\taddArg(chooseVisitors);\n\t\t}\n\n\t\tif ( auxClasspath != null ) {\n\t\t\ttry {\n\t\t\t\t// Try to dereference the auxClasspath.\n\t\t\t\t// If it throws an exception, we know it\n\t\t\t\t// has an invalid path entry, so we complain\n\t\t\t\t// and tolerate it.\n\t\t\t\tString unreadReference = auxClasspath.toString();\n\t\t\t\tString auxClasspathString = auxClasspath.toString();\n\t\t\t\tif (auxClasspathString.length() > 100) {\n\t\t\t\t\taddArg(\"-auxclasspathFromInput\");\n\t\t\t\t\tsetInputString(auxClasspathString);\n\t\t\t\t} else {\n\t\t\t\t\taddArg(\"-auxclasspath\");\n\t\t\t\t\taddArg(auxClasspathString);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Throwable t) {\n\t\t\t\tlog(\"Warning: auxClasspath \"+t+\" not found.\");\n\t\t\t}\n\t\t}\n\t\tif ( sourcePath != null) {\n\t\t\taddArg(\"-sourcepath\");\n\t\t\taddArg(sourcePath.toString());\n\t\t}\n\t\tif ( outputFileName != null ) {\n\t\t\taddArg(\"-outputFile\");\n\t\t\taddArg(outputFileName);\n\t\t}\n\t\tif ( relaxed ) {\n\t\t\taddArg(\"-relaxed\");\n\t\t}\n\t\tif ( noClassOk ) {\n\t\t\taddArg(\"-noClassOk\");\n\t\t}\n\t\tif ( onlyAnalyze != null ) {\n\t\t\taddArg(\"-onlyAnalyze\");\n\t\t\taddArg(onlyAnalyze);\n\t\t}\n\n\t\taddArg(\"-exitcode\");\n\t\tfor (ClassLocation classLocation : classLocations) {\n\t\t\taddArg(classLocation.toString());\n\t\t} \n\n\t\tif (auxAnalyzepath != null) {\n\t\t\tString[] result = auxAnalyzepath.toString().split(java.io.File.pathSeparator);\n\t\t\tfor (int x=0; x<result.length; x++) {\n\t\t\t\taddArg(result[x]);\n\t\t\t}\n\t\t}\n    }","commit_id":"4f2d2ad529cdd9167ca9e40660ec201976cf4de3","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"static List<PropertyDefinition> propertyDefinitions() {\n    return Arrays.asList(\n      PropertyDefinition.builder(CoreProperties.CORE_VIOLATION_LOCALE_PROPERTY)\n        .defaultValue(\"en\")\n        .name(\"Locale used for issue messages\")\n        .description(\"Locale to be used when generating issue messages. It's up to each rule engine to support this global internationalization property\")\n        .onQualifiers(Qualifiers.PROJECT)\n        .category(CoreProperties.CATEGORY_GENERAL)\n        .subCategory(CoreProperties.SUBCATEGORY_L10N)\n        .build(),\n\n      PropertyDefinition.builder(CoreProperties.CORE_ALLOW_USERS_TO_SIGNUP_PROPERTY)\n        .defaultValue(\"\" + CoreProperties.CORE_ALLOW_USERS_TO_SIGNUP_DEAULT_VALUE)\n        .name(\"Allow users to sign up online\")\n        .description(\"Users can sign up online.\")\n        .type(PropertyType.BOOLEAN)\n        .category(CoreProperties.CATEGORY_GENERAL)\n        .subCategory(CoreProperties.SUBCATEGORY_SECURITY)\n        .build(),\n\n      PropertyDefinition.builder(CoreProperties.CORE_DEFAULT_GROUP)\n        .defaultValue(CoreProperties.CORE_DEFAULT_GROUP_DEFAULT_VALUE)\n        .name(\"Default user group\")\n        .description(\"Any new users will automatically join this group.\")\n        .category(CoreProperties.CATEGORY_GENERAL)\n        .subCategory(CoreProperties.SUBCATEGORY_SECURITY)\n        .build(),\n\n      PropertyDefinition.builder(CoreProperties.CORE_IMPORT_SOURCES_PROPERTY)\n        .defaultValue(\"\" + CoreProperties.CORE_IMPORT_SOURCES_DEFAULT_VALUE)\n        .name(\"Import sources\")\n        .description(\"Set to false if sources should not be imported and therefore not available in the Web UI (e.g. for security reasons).\")\n        .type(PropertyType.BOOLEAN)\n        .onQualifiers(Qualifiers.PROJECT, Qualifiers.MODULE)\n        .category(CoreProperties.CATEGORY_GENERAL)\n        .subCategory(CoreProperties.SUBCATEGORY_SECURITY)\n        .build(),\n\n      PropertyDefinition.builder(CoreProperties.CORE_FORCE_AUTHENTICATION_PROPERTY)\n        .defaultValue(\"\" + CoreProperties.CORE_FORCE_AUTHENTICATION_DEFAULT_VALUE)\n        .name(\"Force user authentication\")\n        .description(\"Forcing user authentication stops un-logged users to access SonarQube.\")\n        .type(PropertyType.BOOLEAN)\n        .category(CoreProperties.CATEGORY_GENERAL)\n        .subCategory(CoreProperties.SUBCATEGORY_SECURITY)\n        .build()\n    );\n  }","id":82731,"modified_method":"static List<PropertyDefinition> propertyDefinitions() {\n    return Arrays.asList(\n      PropertyDefinition.builder(CoreProperties.CORE_VIOLATION_LOCALE_PROPERTY)\n        .defaultValue(\"en\")\n        .name(\"Locale used for issue messages\")\n        .description(\"Locale to be used when generating issue messages. It's up to each rule engine to support this global internationalization property\")\n        .onQualifiers(Qualifiers.PROJECT)\n        .category(CoreProperties.CATEGORY_GENERAL)\n        .subCategory(CoreProperties.SUBCATEGORY_L10N)\n        .build(),\n\n      PropertyDefinition.builder(CoreProperties.CORE_ALLOW_USERS_TO_SIGNUP_PROPERTY)\n        .defaultValue(\"\" + CoreProperties.CORE_ALLOW_USERS_TO_SIGNUP_DEAULT_VALUE)\n        .name(\"Allow users to sign up online\")\n        .description(\"Users can sign up online.\")\n        .type(PropertyType.BOOLEAN)\n        .category(CoreProperties.CATEGORY_SECURITY)\n        .build(),\n\n      PropertyDefinition.builder(CoreProperties.CORE_DEFAULT_GROUP)\n        .defaultValue(CoreProperties.CORE_DEFAULT_GROUP_DEFAULT_VALUE)\n        .name(\"Default user group\")\n        .description(\"Any new users will automatically join this group.\")\n        .category(CoreProperties.CATEGORY_SECURITY)\n        .build(),\n\n      PropertyDefinition.builder(CoreProperties.CORE_IMPORT_SOURCES_PROPERTY)\n        .defaultValue(\"\" + CoreProperties.CORE_IMPORT_SOURCES_DEFAULT_VALUE)\n        .name(\"Import sources\")\n        .description(\"Set to false if sources should not be imported and therefore not available in the Web UI (e.g. for security reasons).\")\n        .type(PropertyType.BOOLEAN)\n        .onQualifiers(Qualifiers.PROJECT, Qualifiers.MODULE)\n        .category(CoreProperties.CATEGORY_SECURITY)\n        .build(),\n\n      PropertyDefinition.builder(CoreProperties.CORE_FORCE_AUTHENTICATION_PROPERTY)\n        .defaultValue(\"\" + CoreProperties.CORE_FORCE_AUTHENTICATION_DEFAULT_VALUE)\n        .name(\"Force user authentication\")\n        .description(\"Forcing user authentication stops un-logged users to access SonarQube.\")\n        .type(PropertyType.BOOLEAN)\n        .category(CoreProperties.CATEGORY_SECURITY)\n        .build()\n    );\n  }","commit_id":"3b62a04cbe51bccaa420ee387720af571256d432","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"/**\n   * @since 3.7\n   */\n  public Map<Category, Map<SubCategory, Collection<PropertyDefinition>>> propertiesByCategory(@Nullable String qualifier) {\n    Map<Category, Map<SubCategory, Collection<PropertyDefinition>>> byCategory = new HashMap<Category, Map<SubCategory, Collection<PropertyDefinition>>>();\n    if (qualifier == null) {\n      // Special categories on global page\n      byCategory.put(new Category(\"email\", true), new HashMap<SubCategory, Collection<PropertyDefinition>>());\n      byCategory.put(new Category(\"encryption\", true), new HashMap<SubCategory, Collection<PropertyDefinition>>());\n      HashMap<SubCategory, Collection<PropertyDefinition>> licenseSubCategories = new HashMap<SubCategory, Collection<PropertyDefinition>>();\n      licenseSubCategories.put(new SubCategory(\"server_id\", true), new ArrayList<PropertyDefinition>());\n      byCategory.put(new Category(CoreProperties.CATEGORY_LICENSES, false), licenseSubCategories);\n    }\n    for (PropertyDefinition definition : getAll()) {\n      if (qualifier == null ? definition.global() : definition.qualifiers().contains(qualifier)) {\n        Category category = categories.get(definition.key());\n        if (!byCategory.containsKey(category)) {\n          byCategory.put(category, new HashMap<SubCategory, Collection<PropertyDefinition>>());\n        }\n        SubCategory subCategory = subcategories.get(definition.key());\n        if (!byCategory.get(category).containsKey(subCategory)) {\n          byCategory.get(category).put(subCategory, new ArrayList<PropertyDefinition>());\n        }\n        byCategory.get(category).get(subCategory).add(definition);\n      }\n    }\n\n    return byCategory;\n  }","id":82732,"modified_method":"/**\n   * @since 3.7\n   */\n  public Map<Category, Map<SubCategory, Collection<PropertyDefinition>>> propertiesByCategory(@Nullable String qualifier) {\n    Map<Category, Map<SubCategory, Collection<PropertyDefinition>>> byCategory = new HashMap<Category, Map<SubCategory, Collection<PropertyDefinition>>>();\n    if (qualifier == null) {\n      // Special categories on global page\n      HashMap<SubCategory, Collection<PropertyDefinition>> emailSubCategories = new HashMap<SubCategory, Collection<PropertyDefinition>>();\n      emailSubCategories.put(new SubCategory(\"email\", true), new ArrayList<PropertyDefinition>());\n      byCategory.put(new Category(CoreProperties.CATEGORY_GENERAL, false), emailSubCategories);\n\n      HashMap<SubCategory, Collection<PropertyDefinition>> licenseSubCategories = new HashMap<SubCategory, Collection<PropertyDefinition>>();\n      licenseSubCategories.put(new SubCategory(\"server_id\", true), new ArrayList<PropertyDefinition>());\n      byCategory.put(new Category(CoreProperties.CATEGORY_LICENSES, false), licenseSubCategories);\n\n      HashMap<SubCategory, Collection<PropertyDefinition>> encryptionSubCategories = new HashMap<SubCategory, Collection<PropertyDefinition>>();\n      encryptionSubCategories.put(new SubCategory(\"encryption\", true), new ArrayList<PropertyDefinition>());\n      byCategory.put(new Category(CoreProperties.CATEGORY_SECURITY, false), encryptionSubCategories);\n    }\n    for (PropertyDefinition definition : getAll()) {\n      if (qualifier == null ? definition.global() : definition.qualifiers().contains(qualifier)) {\n        Category category = categories.get(definition.key());\n        if (!byCategory.containsKey(category)) {\n          byCategory.put(category, new HashMap<SubCategory, Collection<PropertyDefinition>>());\n        }\n        SubCategory subCategory = subcategories.get(definition.key());\n        if (!byCategory.get(category).containsKey(subCategory)) {\n          byCategory.get(category).put(subCategory, new ArrayList<PropertyDefinition>());\n        }\n        byCategory.get(category).get(subCategory).add(definition);\n      }\n    }\n    return byCategory;\n  }","commit_id":"3b62a04cbe51bccaa420ee387720af571256d432","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void should_return_special_categories() {\n    PropertyDefinitions def = new PropertyDefinitions();\n\n    assertThat(def.propertiesByCategory(null).keySet()).containsOnly(new Category(\"encryption\"), new Category(\"email\"), new Category(\"licenses\"));\n    assertThat(def.propertiesByCategory(null).keySet().iterator().next().isSpecial()).isTrue();\n    assertThat(def.propertiesByCategory(null).get(new Category(\"licenses\")).keySet()).containsOnly(new SubCategory(\"server_id\"));\n    assertThat(def.propertiesByCategory(null).get(new Category(\"licenses\")).keySet().iterator().next().isSpecial()).isTrue();\n  }","id":82733,"modified_method":"@Test\n  public void should_return_special_categories() {\n    PropertyDefinitions def = new PropertyDefinitions();\n\n    assertThat(def.propertiesByCategory(null).get(new Category(\"general\")).keySet()).containsOnly(new SubCategory(\"email\"));\n    assertThat(def.propertiesByCategory(null).get(new Category(\"general\")).keySet().iterator().next().isSpecial()).isTrue();\n    assertThat(def.propertiesByCategory(null).get(new Category(\"security\")).keySet()).containsOnly(new SubCategory(\"encryption\"));\n    assertThat(def.propertiesByCategory(null).get(new Category(\"security\")).keySet().iterator().next().isSpecial()).isTrue();\n    assertThat(def.propertiesByCategory(null).get(new Category(\"licenses\")).keySet()).containsOnly(new SubCategory(\"server_id\"));\n    assertThat(def.propertiesByCategory(null).get(new Category(\"licenses\")).keySet().iterator().next().isSpecial()).isTrue();\n  }","commit_id":"3b62a04cbe51bccaa420ee387720af571256d432","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void should_group_by_category() {\n    PropertyDefinitions def = new PropertyDefinitions(\n        PropertyDefinition.builder(\"global1\").name(\"Global1\").category(\"catGlobal1\").build(),\n        PropertyDefinition.builder(\"global2\").name(\"Global2\").category(\"catGlobal1\").build(),\n        PropertyDefinition.builder(\"global3\").name(\"Global3\").category(\"catGlobal2\").build(),\n        PropertyDefinition.builder(\"project\").name(\"Project\").category(\"catProject\").onlyOnQualifiers(Qualifiers.PROJECT).build(),\n        PropertyDefinition.builder(\"module\").name(\"Module\").category(\"catModule\").onlyOnQualifiers(Qualifiers.MODULE).build(),\n        PropertyDefinition.builder(\"view\").name(\"View\").category(\"catView\").onlyOnQualifiers(Qualifiers.VIEW).build()\n        );\n\n    assertThat(def.getPropertiesByCategory(null).keySet()).containsOnly(\"catGlobal1\", \"catGlobal2\");\n    assertThat(def.getPropertiesByCategory(Qualifiers.PROJECT).keySet()).containsOnly(\"catProject\");\n    assertThat(def.getPropertiesByCategory(Qualifiers.MODULE).keySet()).containsOnly(\"catModule\");\n    assertThat(def.getPropertiesByCategory(Qualifiers.VIEW).keySet()).containsOnly(\"catView\");\n    assertThat(def.getPropertiesByCategory(\"Unkown\").keySet()).isEmpty();\n\n    assertThat(def.propertiesByCategory(null).keySet()).containsOnly(new Category(\"encryption\"), new Category(\"email\"), new Category(\"licenses\"), new Category(\"catGlobal1\"),\n        new Category(\"catGlobal2\"));\n    assertThat(def.propertiesByCategory(Qualifiers.PROJECT).keySet()).containsOnly(new Category(\"catProject\"));\n    assertThat(def.propertiesByCategory(Qualifiers.MODULE).keySet()).containsOnly(new Category(\"catModule\"));\n    assertThat(def.propertiesByCategory(Qualifiers.VIEW).keySet()).containsOnly(new Category(\"catView\"));\n    assertThat(def.propertiesByCategory(\"Unkown\").keySet()).isEmpty();\n  }","id":82734,"modified_method":"@Test\n  public void should_group_by_category() {\n    PropertyDefinitions def = new PropertyDefinitions(\n      PropertyDefinition.builder(\"global1\").name(\"Global1\").category(\"catGlobal1\").build(),\n      PropertyDefinition.builder(\"global2\").name(\"Global2\").category(\"catGlobal1\").build(),\n      PropertyDefinition.builder(\"global3\").name(\"Global3\").category(\"catGlobal2\").build(),\n      PropertyDefinition.builder(\"project\").name(\"Project\").category(\"catProject\").onlyOnQualifiers(Qualifiers.PROJECT).build(),\n      PropertyDefinition.builder(\"module\").name(\"Module\").category(\"catModule\").onlyOnQualifiers(Qualifiers.MODULE).build(),\n      PropertyDefinition.builder(\"view\").name(\"View\").category(\"catView\").onlyOnQualifiers(Qualifiers.VIEW).build()\n    );\n\n    assertThat(def.getPropertiesByCategory(null).keySet()).containsOnly(\"catGlobal1\", \"catGlobal2\");\n    assertThat(def.getPropertiesByCategory(Qualifiers.PROJECT).keySet()).containsOnly(\"catProject\");\n    assertThat(def.getPropertiesByCategory(Qualifiers.MODULE).keySet()).containsOnly(\"catModule\");\n    assertThat(def.getPropertiesByCategory(Qualifiers.VIEW).keySet()).containsOnly(\"catView\");\n    assertThat(def.getPropertiesByCategory(\"Unkown\").keySet()).isEmpty();\n\n    assertThat(def.propertiesByCategory(null).keySet()).contains(new Category(\"catGlobal1\"), new Category(\"catGlobal2\"));\n    assertThat(def.propertiesByCategory(Qualifiers.PROJECT).keySet()).containsOnly(new Category(\"catProject\"));\n    assertThat(def.propertiesByCategory(Qualifiers.MODULE).keySet()).containsOnly(new Category(\"catModule\"));\n    assertThat(def.propertiesByCategory(Qualifiers.VIEW).keySet()).containsOnly(new Category(\"catView\"));\n    assertThat(def.propertiesByCategory(\"Unkown\").keySet()).isEmpty();\n  }","commit_id":"3b62a04cbe51bccaa420ee387720af571256d432","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void should_group_by_category_on_annotation_plugin() {\n    PropertyDefinitions def = new PropertyDefinitions(ByCategory.class);\n\n    assertThat(def.getPropertiesByCategory().keySet()).containsOnly(\"catGlobal1\", \"catGlobal2\");\n    assertThat(def.getPropertiesByCategory(Qualifiers.PROJECT).keySet()).containsOnly(\"catProject\");\n    assertThat(def.getPropertiesByCategory(Qualifiers.MODULE).keySet()).containsOnly(\"catModule\");\n\n    assertThat(def.propertiesByCategory(null).keySet()).containsOnly(new Category(\"encryption\"), new Category(\"email\"), new Category(\"licenses\"), new Category(\"catglobal1\"),\n        new Category(\"catglobal2\"));\n    assertThat(def.propertiesByCategory(Qualifiers.PROJECT).keySet()).containsOnly(new Category(\"catproject\"));\n    assertThat(def.propertiesByCategory(Qualifiers.MODULE).keySet()).containsOnly(new Category(\"catmodule\"));\n  }","id":82735,"modified_method":"@Test\n  public void should_group_by_category_on_annotation_plugin() {\n    PropertyDefinitions def = new PropertyDefinitions(ByCategory.class);\n\n    assertThat(def.getPropertiesByCategory().keySet()).containsOnly(\"catGlobal1\", \"catGlobal2\");\n    assertThat(def.getPropertiesByCategory(Qualifiers.PROJECT).keySet()).containsOnly(\"catProject\");\n    assertThat(def.getPropertiesByCategory(Qualifiers.MODULE).keySet()).containsOnly(\"catModule\");\n\n    assertThat(def.propertiesByCategory(null).keySet()).contains(new Category(\"catglobal1\"), new Category(\"catglobal2\"));\n    assertThat(def.propertiesByCategory(Qualifiers.PROJECT).keySet()).containsOnly(new Category(\"catproject\"));\n    assertThat(def.propertiesByCategory(Qualifiers.MODULE).keySet()).containsOnly(new Category(\"catmodule\"));\n  }","commit_id":"3b62a04cbe51bccaa420ee387720af571256d432","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private String render(DeclarationDescriptor declarationDescriptor) {\n        String text = DescriptorUtil.renderPresentableText(declarationDescriptor);\n//        text = text.replaceAll(\"<\", \"&lt;\");\n        return text;\n    }","id":82736,"modified_method":"private String render(DeclarationDescriptor declarationDescriptor) {\n        String text = DescriptorUtil.renderPresentableText(declarationDescriptor);\n        text = text.replaceAll(\"<\", \"&lt;\");\n        return text;\n    }","commit_id":"065e0f3bf91c3f388f9e82852350ca26d2ad38b7","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@Nullable\n        private JetType resolveOverloads(\n                @NotNull JetScope scope,\n                @NotNull OverloadDomain overloadDomain,\n                @NotNull List<JetTypeProjection> typeArguments,\n                @NotNull List<JetArgument> valueArguments,\n                @NotNull List<JetExpression> functionLiteralArguments) {\n            // 1) ends with a name -> (scope, name) to look up\n            // 2) ends with something else -> just check types\n\n            for (JetTypeProjection typeArgument : typeArguments) {\n                if (typeArgument.getProjectionKind() != JetProjectionKind.NONE) {\n                    semanticServices.getErrorHandler().genericError(typeArgument.getNode(), \"Projections are not allowed on type parameters for methods\"); // TODO : better positioning\n                }\n            }\n\n            boolean someNamed = false;\n            for (JetArgument argument : valueArguments) {\n                if (argument.isNamed()) {\n                    someNamed = true;\n                    break;\n                }\n            }\n\n//                JetExpression functionLiteralArgument = functionLiteralArguments.isEmpty() ? null : functionLiteralArguments.get(0);\n            // TODO : must be a check\n            assert functionLiteralArguments.size() <= 1;\n\n            if (someNamed) {\n                // TODO : check that all are named\n                throw new UnsupportedOperationException(); // TODO\n\n//                    result = overloadDomain.getFunctionDescriptorForNamedArguments(typeArguments, valueArguments, functionLiteralArgument);\n            } else {\n                List<JetType> types = new ArrayList<JetType>();\n                for (JetTypeProjection projection : typeArguments) {\n                    // TODO : check that there's no projection\n                    types.add(typeResolver.resolveType(scope, projection.getTypeReference()));\n                }\n\n                List<JetExpression> positionedValueArguments = new ArrayList<JetExpression>();\n                for (JetArgument argument : valueArguments) {\n                    JetExpression argumentExpression = argument.getArgumentExpression();\n                    if (argumentExpression != null) {\n                        positionedValueArguments.add(argumentExpression);\n                    }\n                }\n\n                positionedValueArguments.addAll(functionLiteralArguments);\n\n                List<JetType> valueArgumentTypes = new ArrayList<JetType>();\n                for (JetExpression valueArgument : positionedValueArguments) {\n                    valueArgumentTypes.add(safeGetType(scope, valueArgument, false));\n                }\n\n                OverloadResolutionResult resolutionResult = overloadDomain.getFunctionDescriptorForPositionedArguments(types, valueArgumentTypes);\n                if (resolutionResult.isSuccess()) {\n                    return resolutionResult.getFunctionDescriptor().getUnsubstitutedReturnType();\n                }\n            }\n            return null;\n        }","id":82737,"modified_method":"@Nullable\n        private JetType resolveOverloads(\n                @NotNull JetScope scope,\n                @NotNull OverloadDomain overloadDomain,\n                @NotNull List<JetTypeProjection> typeArguments,\n                @NotNull List<JetArgument> valueArguments,\n                @NotNull List<JetExpression> functionLiteralArguments) {\n            // 1) ends with a name -> (scope, name) to look up\n            // 2) ends with something else -> just check types\n\n            for (JetTypeProjection typeArgument : typeArguments) {\n                if (typeArgument.getProjectionKind() != JetProjectionKind.NONE) {\n                    semanticServices.getErrorHandler().genericError(typeArgument.getNode(), \"Projections are not allowed on type parameters for methods\"); // TODO : better positioning\n                }\n            }\n\n            boolean someNamed = false;\n            for (JetArgument argument : valueArguments) {\n                if (argument.isNamed()) {\n                    someNamed = true;\n                    break;\n                }\n            }\n\n//                JetExpression functionLiteralArgument = functionLiteralArguments.isEmpty() ? null : functionLiteralArguments.get(0);\n            // TODO : must be a check\n            assert functionLiteralArguments.size() <= 1;\n\n            if (someNamed) {\n                // TODO : check that all are named\n                throw new UnsupportedOperationException(); // TODO\n\n//                    result = overloadDomain.getFunctionDescriptorForNamedArguments(typeArguments, valueArguments, functionLiteralArgument);\n            } else {\n                List<JetType> types = new ArrayList<JetType>();\n                for (JetTypeProjection projection : typeArguments) {\n                    // TODO : check that there's no projection\n                    JetTypeReference typeReference = projection.getTypeReference();\n                    if (typeReference != null) {\n                        types.add(typeResolver.resolveType(scope, typeReference));\n                    }\n                }\n\n                List<JetExpression> positionedValueArguments = new ArrayList<JetExpression>();\n                for (JetArgument argument : valueArguments) {\n                    JetExpression argumentExpression = argument.getArgumentExpression();\n                    if (argumentExpression != null) {\n                        positionedValueArguments.add(argumentExpression);\n                    }\n                }\n\n                positionedValueArguments.addAll(functionLiteralArguments);\n\n                List<JetType> valueArgumentTypes = new ArrayList<JetType>();\n                for (JetExpression valueArgument : positionedValueArguments) {\n                    valueArgumentTypes.add(safeGetType(scope, valueArgument, false));\n                }\n\n                OverloadResolutionResult resolutionResult = overloadDomain.getFunctionDescriptorForPositionedArguments(types, valueArgumentTypes);\n                if (resolutionResult.isSuccess()) {\n                    return resolutionResult.getFunctionDescriptor().getUnsubstitutedReturnType();\n                }\n            }\n            return null;\n        }","commit_id":"065e0f3bf91c3f388f9e82852350ca26d2ad38b7","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@Override\n        public void visitIsExpression(JetIsExpression expression) {\n            // TODO : patterns and everything\n            System.out.println(\"Pattern matching is not supported yet.\");\n            result = semanticServices.getStandardLibrary().getBooleanType();\n        }","id":82738,"modified_method":"@Override\n        public void visitIsExpression(JetIsExpression expression) {\n            // TODO : patterns and everything\n            result = semanticServices.getStandardLibrary().getBooleanType();\n        }","commit_id":"065e0f3bf91c3f388f9e82852350ca26d2ad38b7","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@NotNull\n    private JetExpression deparenthesize(@NotNull JetExpression expression) {\n        while (expression instanceof JetParenthesizedExpression) {\n            expression = ((JetParenthesizedExpression) expression).getExpression();\n        }\n        return expression;\n    }","id":82739,"modified_method":"@Nullable\n    private static JetExpression deparenthesize(@NotNull JetExpression expression) {\n        JetExpression result = expression;\n        while (result instanceof JetParenthesizedExpression) {\n            result = ((JetParenthesizedExpression) expression).getExpression();\n        }\n        return result;\n    }","commit_id":"065e0f3bf91c3f388f9e82852350ca26d2ad38b7","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@Override\n        public void visitForExpression(JetForExpression expression) {\n            JetParameter loopParameter = expression.getLoopParameter();\n            JetExpression loopRange = expression.getLoopRange();\n            JetType loopRangeType = getType(scope, loopRange, false);\n            JetType expectedParameterType = null;\n            if (loopRangeType != null) {\n                if (!semanticServices.getTypeChecker().isSubtypeOf(loopRangeType, semanticServices.getStandardLibrary().getIterableType(JetStandardClasses.getNullableAnyType()))) {\n                    semanticServices.getErrorHandler().genericError(loopRange.getNode(), \"Expecting an Iterable, but found \" + loopRangeType);\n                }\n                else {\n                    TypeProjection typeProjection = loopRangeType.getArguments().get(0);\n                    if (!typeProjection.getProjectionKind().allowsOutPosition()) {\n                        expectedParameterType = JetStandardClasses.getDefaultBound();\n                    }\n                    else {\n                        expectedParameterType = typeProjection.getType();\n                    }\n                }\n            }\n\n            WritableScope loopScope = semanticServices.createWritableScope(scope, scope.getContainingDeclaration());\n\n            JetTypeReference typeReference = loopParameter.getTypeReference();\n            PropertyDescriptor propertyDescriptor;\n            if (typeReference != null) {\n                propertyDescriptor = classDescriptorResolver.resolveValueParameterDescriptor(scope.getContainingDeclaration(), scope, loopParameter);\n                JetType actualParameterType = propertyDescriptor.getOutType();\n                if (expectedParameterType != null &&\n                        !semanticServices.getTypeChecker().isSubtypeOf(expectedParameterType, actualParameterType)) {\n                    semanticServices.getErrorHandler().genericError(typeReference.getNode(), \"The loop iterates over values of type \" + expectedParameterType + \" but the parameter is declared to be \" + actualParameterType);\n                }\n            }\n            else {\n                if (expectedParameterType == null) {\n                    expectedParameterType = ErrorUtils.createErrorType(\"Error\");\n                }\n                propertyDescriptor = classDescriptorResolver.resolveValueParameterDescriptor(scope.getContainingDeclaration(), loopParameter, expectedParameterType);\n            }\n            loopScope.addPropertyDescriptor(propertyDescriptor);\n\n            JetExpression body = expression.getBody();\n            if (body != null) {\n                getType(loopScope, body, true); // TODO\n            }\n\n            result = JetStandardClasses.getUnitType();\n        }","id":82740,"modified_method":"@Override\n        public void visitForExpression(JetForExpression expression) {\n            JetParameter loopParameter = expression.getLoopParameter();\n            JetExpression loopRange = expression.getLoopRange();\n            JetType loopRangeType = getType(scope, loopRange, false);\n            JetType expectedParameterType = null;\n            if (loopRangeType != null) {\n                if (!semanticServices.getTypeChecker().isSubtypeOf(loopRangeType, semanticServices.getStandardLibrary().getIterableType(JetStandardClasses.getNullableAnyType()))) {\n                    semanticServices.getErrorHandler().genericError(loopRange.getNode(), \"Expecting an Iterable, but found \" + loopRangeType);\n                }\n                else {\n                    TypeProjection typeProjection = loopRangeType.getArguments().get(0);\n                    if (!typeProjection.getProjectionKind().allowsOutPosition()) {\n                        expectedParameterType = JetStandardClasses.getDefaultBound();\n                    }\n                    else {\n                        expectedParameterType = typeProjection.getType();\n                    }\n                }\n            }\n\n            WritableScope loopScope = semanticServices.createWritableScope(scope, scope.getContainingDeclaration());\n\n            JetTypeReference typeReference = loopParameter.getTypeReference();\n            PropertyDescriptor propertyDescriptor;\n            if (typeReference != null) {\n                propertyDescriptor = classDescriptorResolver.resolveValueParameterDescriptor(scope.getContainingDeclaration(), scope, loopParameter);\n                JetType actualParameterType = propertyDescriptor.getOutType();\n                if (expectedParameterType != null &&\n                        actualParameterType != null &&\n                        !semanticServices.getTypeChecker().isSubtypeOf(expectedParameterType, actualParameterType)) {\n                    semanticServices.getErrorHandler().genericError(typeReference.getNode(), \"The loop iterates over values of type \" + expectedParameterType + \" but the parameter is declared to be \" + actualParameterType);\n                }\n            }\n            else {\n                if (expectedParameterType == null) {\n                    expectedParameterType = ErrorUtils.createErrorType(\"Error\");\n                }\n                propertyDescriptor = classDescriptorResolver.resolveValueParameterDescriptor(scope.getContainingDeclaration(), loopParameter, expectedParameterType);\n            }\n            loopScope.addPropertyDescriptor(propertyDescriptor);\n\n            JetExpression body = expression.getBody();\n            if (body != null) {\n                getType(loopScope, body, true); // TODO\n            }\n\n            result = JetStandardClasses.getUnitType();\n        }","commit_id":"065e0f3bf91c3f388f9e82852350ca26d2ad38b7","url":"https://github.com/JetBrains/kotlin"},{"original_method":"private OverloadDomain getOverloadDomain(\n            @NotNull final JetScope scope,\n            @NotNull JetExpression calleeExpression,\n            @Nullable PsiElement argumentList\n    ) {\n        final OverloadDomain[] result = new OverloadDomain[1];\n        final JetSimpleNameExpression[] reference = new JetSimpleNameExpression[1];\n        calleeExpression.accept(new JetVisitor() {\n\n            @Override\n            public void visitHashQualifiedExpression(JetHashQualifiedExpression expression) {\n                // a#b -- create a domain for all overloads of b in a\n                throw new UnsupportedOperationException(); // TODO\n            }\n\n            @Override\n            public void visitPredicateExpression(JetPredicateExpression expression) {\n                // overload lookup for checking, but the type is receiver's type + nullable\n                throw new UnsupportedOperationException(); // TODO\n            }\n\n            @Override\n            public void visitQualifiedExpression(JetQualifiedExpression expression) {\n                // . or ?.\n                JetType receiverType = getType(scope, expression.getReceiverExpression(), false);\n                checkNullSafety(receiverType, expression);\n\n                JetExpression selectorExpression = expression.getSelectorExpression();\n                if (selectorExpression instanceof JetSimpleNameExpression) {\n                    JetSimpleNameExpression referenceExpression = (JetSimpleNameExpression) selectorExpression;\n\n                    if (receiverType != null) {\n                        result[0] = semanticServices.getOverloadResolver().getOverloadDomain(receiverType, scope, referenceExpression.getReferencedName());\n                        reference[0] = referenceExpression;\n                    }\n                } else {\n                    throw new UnsupportedOperationException(); // TODO\n                }\n            }\n\n            @Override\n            public void visitSimpleNameExpression(JetSimpleNameExpression expression) {\n                // a -- create a hierarchical lookup domain for this.a\n                result[0] = semanticServices.getOverloadResolver().getOverloadDomain(null, scope, expression.getReferencedName());\n                reference[0] = expression;\n            }\n\n            @Override\n            public void visitExpression(JetExpression expression) {\n                // <e> create a dummy domain for the type of e\n                throw new UnsupportedOperationException(expression.getText()); // TODO\n            }\n\n            @Override\n            public void visitJetElement(JetElement elem) {\n                semanticServices.getErrorHandler().genericError(elem.getNode(), \"Unsupported in call expression\"); // TODO : Message\n            }\n        });\n        return wrapForTracing(result[0], reference[0], argumentList, true);\n    }","id":82741,"modified_method":"private OverloadDomain getOverloadDomain(\n            @NotNull final JetScope scope,\n            @NotNull JetExpression calleeExpression,\n            @Nullable PsiElement argumentList\n    ) {\n        final OverloadDomain[] result = new OverloadDomain[1];\n        final JetSimpleNameExpression[] reference = new JetSimpleNameExpression[1];\n        calleeExpression.accept(new JetVisitor() {\n\n            @Override\n            public void visitHashQualifiedExpression(JetHashQualifiedExpression expression) {\n                // a#b -- create a domain for all overloads of b in a\n                throw new UnsupportedOperationException(); // TODO\n            }\n\n            @Override\n            public void visitPredicateExpression(JetPredicateExpression expression) {\n                // overload lookup for checking, but the type is receiver's type + nullable\n                throw new UnsupportedOperationException(); // TODO\n            }\n\n            @Override\n            public void visitQualifiedExpression(JetQualifiedExpression expression) {\n                // . or ?.\n                JetType receiverType = getType(scope, expression.getReceiverExpression(), false);\n                checkNullSafety(receiverType, expression);\n\n                JetExpression selectorExpression = expression.getSelectorExpression();\n                if (selectorExpression instanceof JetSimpleNameExpression) {\n                    JetSimpleNameExpression referenceExpression = (JetSimpleNameExpression) selectorExpression;\n                    String referencedName = referenceExpression.getReferencedName();\n\n                    if (receiverType != null && referencedName != null) {\n                        result[0] = semanticServices.getOverloadResolver().getOverloadDomain(receiverType, scope, referencedName);\n                        reference[0] = referenceExpression;\n                    }\n                } else {\n                    throw new UnsupportedOperationException(); // TODO\n                }\n            }\n\n            @Override\n            public void visitSimpleNameExpression(JetSimpleNameExpression expression) {\n                // a -- create a hierarchical lookup domain for this.a\n                String referencedName = expression.getReferencedName();\n                if (referencedName != null) {\n                    result[0] = semanticServices.getOverloadResolver().getOverloadDomain(null, scope, referencedName);\n                    reference[0] = expression;\n                }\n            }\n\n            @Override\n            public void visitExpression(JetExpression expression) {\n                // <e> create a dummy domain for the type of e\n                throw new UnsupportedOperationException(expression.getText()); // TODO\n            }\n\n            @Override\n            public void visitJetElement(JetElement elem) {\n                semanticServices.getErrorHandler().genericError(elem.getNode(), \"Unsupported in call expression\"); // TODO : Message\n            }\n        });\n        return wrapForTracing(result[0], reference[0], argumentList, true);\n    }","commit_id":"065e0f3bf91c3f388f9e82852350ca26d2ad38b7","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@Override\n        public void visitTryExpression(JetTryExpression expression) {\n            JetExpression tryBlock = expression.getTryBlock();\n            List<JetCatchClause> catchClauses = expression.getCatchClauses();\n            JetFinallySection finallyBlock = expression.getFinallyBlock();\n            List<JetType> types = new ArrayList<JetType>();\n            if (finallyBlock == null) {\n                for (JetCatchClause catchClause : catchClauses) {\n                    // TODO: change scope here\n                    types.add(getType(scope, catchClause.getCatchBody(), true));\n                }\n            } else {\n                types.add(getType(scope, finallyBlock.getFinalExpression(), true));\n            }\n            types.add(getType(scope, tryBlock, true));\n            result = semanticServices.getTypeChecker().commonSupertype(types);\n        }","id":82742,"modified_method":"@Override\n        public void visitTryExpression(JetTryExpression expression) {\n            JetExpression tryBlock = expression.getTryBlock();\n            List<JetCatchClause> catchClauses = expression.getCatchClauses();\n            JetFinallySection finallyBlock = expression.getFinallyBlock();\n            List<JetType> types = new ArrayList<JetType>();\n            if (finallyBlock == null) {\n                for (JetCatchClause catchClause : catchClauses) {\n                    // TODO: change scope here\n                    JetExpression catchBody = catchClause.getCatchBody();\n                    if (catchBody != null) {\n                        types.add(getType(scope, catchBody, true));\n                    }\n                }\n            } else {\n                types.add(getType(scope, finallyBlock.getFinalExpression(), true));\n            }\n            types.add(getType(scope, tryBlock, true));\n            result = semanticServices.getTypeChecker().commonSupertype(types);\n        }","commit_id":"065e0f3bf91c3f388f9e82852350ca26d2ad38b7","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@Override\n        public void visitThisExpression(JetThisExpression expression) {\n            // TODO : qualified this, e.g. Foo.this<Bar>\n            JetType thisType = scope.getThisType();\n            JetTypeReference superTypeQualifier = expression.getSuperTypeQualifier();\n            if (superTypeQualifier != null) {\n                // This cast must be safe (assuming the PSI doesn't contain errors)\n                JetUserType typeElement = (JetUserType) superTypeQualifier.getTypeElement();\n                ClassDescriptor superclass = typeResolver.resolveClass(scope, typeElement);\n                Collection<? extends JetType> supertypes = thisType.getConstructor().getSupertypes();\n                Map<TypeConstructor, TypeProjection> substitutionContext = TypeUtils.buildSubstitutionContext(thisType);\n                for (JetType declaredSupertype : supertypes) {\n                    if (declaredSupertype.getConstructor().equals(superclass.getTypeConstructor())) {\n                        result = TypeSubstitutor.INSTANCE.safeSubstitute(substitutionContext, declaredSupertype, Variance.INVARIANT);\n                        break;\n                    }\n                }\n                assert result != null;\n            } else {\n                result = thisType;\n            }\n        }","id":82743,"modified_method":"@Override\n        public void visitThisExpression(JetThisExpression expression) {\n            // TODO : qualified this, e.g. this@Foo<Bar>\n            JetType thisType = scope.getThisType();\n            JetTypeReference superTypeQualifier = expression.getSuperTypeQualifier();\n            if (superTypeQualifier != null) {\n                JetTypeElement superTypeElement = superTypeQualifier.getTypeElement();\n                // Errors are reported by the parser\n                if (superTypeElement instanceof JetUserType) {\n                    JetUserType typeElement = (JetUserType) superTypeElement;\n                    ClassDescriptor superclass = typeResolver.resolveClassByUserType(scope, typeElement);\n                    if (superclass != null) {\n                        Collection<? extends JetType> supertypes = thisType.getConstructor().getSupertypes();\n                        Map<TypeConstructor, TypeProjection> substitutionContext = TypeUtils.buildSubstitutionContext(thisType);\n                        for (JetType declaredSupertype : supertypes) {\n                            if (declaredSupertype.getConstructor().equals(superclass.getTypeConstructor())) {\n                                result = TypeSubstitutor.INSTANCE.safeSubstitute(substitutionContext, declaredSupertype, Variance.INVARIANT);\n                                break;\n                            }\n                        }\n                        if (result == null) {\n                            semanticServices.getErrorHandler().genericError(superTypeElement.getNode(), \"Not a superclass\");\n                        }\n                    }\n                }\n            } else {\n                result = thisType;\n            }\n        }","commit_id":"065e0f3bf91c3f388f9e82852350ca26d2ad38b7","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@Nullable\n    public ClassDescriptor resolveClass(JetScope scope, JetUserType userType) {\n        JetSimpleNameExpression expression = userType.getReferenceExpression();\n        if (expression == null) {\n            return null;\n        }\n        String referencedName = expression.getReferencedName();\n        if (referencedName == null) {\n            return null;\n        }\n        if (userType.isAbsoluteInRootNamespace()) {\n            return JetModuleUtil.getRootNamespaceScope(userType).getClass(referencedName);\n        }\n        JetUserType qualifier = userType.getQualifier();\n        if (qualifier != null) {\n            scope = resolveClassLookupScope(scope, qualifier);\n        }\n        return scope.getClass(referencedName);\n    }","id":82744,"modified_method":"@Nullable\n    private ClassDescriptor resolveClass(JetScope scope, JetUserType userType) {\n        JetSimpleNameExpression expression = userType.getReferenceExpression();\n        if (expression == null) {\n            return null;\n        }\n        String referencedName = expression.getReferencedName();\n        if (referencedName == null) {\n            return null;\n        }\n        ClassDescriptor classDescriptor = null;\n        if (userType.isAbsoluteInRootNamespace()) {\n            classDescriptor = JetModuleUtil.getRootNamespaceScope(userType).getClass(referencedName);\n        }\n        else {\n            JetUserType qualifier = userType.getQualifier();\n            if (qualifier != null) {\n                scope = resolveClassLookupScope(scope, qualifier);\n            }\n            if (scope == null) {\n                return null;\n            }\n            classDescriptor = scope.getClass(referencedName);\n        }\n\n        if (classDescriptor == null) {\n            semanticServices.getErrorHandler().unresolvedReference(expression);\n        }\n\n        return classDescriptor;\n    }","commit_id":"065e0f3bf91c3f388f9e82852350ca26d2ad38b7","url":"https://github.com/JetBrains/kotlin"},{"original_method":"private JetScope resolveClassLookupScope(JetScope scope, JetUserType userType) {\n        ClassDescriptor classDescriptor = resolveClass(scope, userType);\n        if (classDescriptor != null) {\n            return classDescriptor.getMemberScope(resolveTypeProjections(scope, classDescriptor.getTypeConstructor(), userType.getTypeArguments()));\n        }\n\n        NamespaceDescriptor namespaceDescriptor = resolveNamespace(scope, userType);\n        if (namespaceDescriptor == null) {\n            return JetScope.EMPTY;\n        }\n        return namespaceDescriptor.getMemberScope();\n    }","id":82745,"modified_method":"@Nullable\n    private JetScope resolveClassLookupScope(JetScope scope, JetUserType userType) {\n        ClassDescriptor classDescriptor = resolveClass(scope, userType);\n        if (classDescriptor != null) {\n            return classDescriptor.getMemberScope(resolveTypeProjections(scope, classDescriptor.getTypeConstructor(), userType.getTypeArguments()));\n        }\n\n        NamespaceDescriptor namespaceDescriptor = resolveNamespace(scope, userType);\n        if (namespaceDescriptor == null) {\n            return null;\n        }\n        return namespaceDescriptor.getMemberScope();\n    }","commit_id":"065e0f3bf91c3f388f9e82852350ca26d2ad38b7","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@NotNull\n    private JetType resolveTypeElement(final JetScope scope, final List<Attribute> attributes, JetTypeElement typeElement, final boolean nullable) {\n        final JetType[] result = new JetType[1];\n        if (typeElement != null) {\n            typeElement.accept(new JetVisitor() {\n                @Override\n                public void visitUserType(JetUserType type) {\n                    JetSimpleNameExpression referenceExpression = type.getReferenceExpression();\n                    String referencedName = type.getReferencedName();\n                    if (referenceExpression == null || referencedName == null) {\n                        return;\n                    }\n                    ClassDescriptor classDescriptor = resolveClass(scope, type);\n                    if (classDescriptor != null) {\n                        trace.recordReferenceResolution(referenceExpression, classDescriptor);\n                        TypeConstructor typeConstructor = classDescriptor.getTypeConstructor();\n                        List<TypeProjection> arguments = resolveTypeProjections(scope, typeConstructor, type.getTypeArguments());\n                        if (arguments.size() != typeConstructor.getParameters().size()) {\n                            semanticServices.getErrorHandler().genericError(type.getNode(), typeConstructor.getParameters().size() + \" type parameters expected\"); // TODO : message\n                        } else {\n                            result[0] = new JetTypeImpl(\n                                    attributes,\n                                    typeConstructor,\n                                    nullable,\n                                    arguments,\n                                    classDescriptor.getMemberScope(arguments)\n                            );\n                        }\n                    }\n                    else if (type.getTypeArguments().isEmpty()) {\n                        TypeParameterDescriptor typeParameterDescriptor = scope.getTypeParameter(referencedName);\n                        if (typeParameterDescriptor != null) {\n                            trace.recordReferenceResolution(referenceExpression, typeParameterDescriptor);\n                            result[0] = new JetTypeImpl(\n                                    attributes,\n                                    typeParameterDescriptor.getTypeConstructor(),\n                                    nullable || hasNullableBound(typeParameterDescriptor),\n                                    Collections.<TypeProjection>emptyList(),\n                                    // TODO : joint domain\n                                    JetStandardClasses.STUB\n                            );\n                        } else {\n                            semanticServices.getErrorHandler().unresolvedReference(referenceExpression);\n                        }\n                    }\n                    else {\n                        semanticServices.getErrorHandler().unresolvedReference(referenceExpression);\n                    }\n                }\n\n                @Override\n                public void visitNullableType(JetNullableType nullableType) {\n                    result[0] = resolveTypeElement(scope, attributes, nullableType.getInnerType(), true);\n                }\n\n                @Override\n                public void visitTupleType(JetTupleType type) {\n                    // TODO labels\n                    result[0] = JetStandardClasses.getTupleType(resolveTypes(scope, type.getComponentTypeRefs()));\n                }\n\n                @Override\n                public void visitFunctionType(JetFunctionType type) {\n                    JetTypeReference receiverTypeRef = type.getReceiverTypeRef();\n                    JetType receiverType = receiverTypeRef == null ? null : resolveType(scope, receiverTypeRef);\n\n                    List<JetType> parameterTypes = new ArrayList<JetType>();\n                    for (JetParameter parameter : type.getParameters()) {\n                        parameterTypes.add(resolveType(scope, parameter.getTypeReference()));\n                    }\n\n                    JetType returnType = resolveType(scope, type.getReturnTypeRef());\n\n                    result[0] = JetStandardClasses.getFunctionType(attributes, receiverType, parameterTypes, returnType);\n                }\n\n                @Override\n                public void visitJetElement(JetElement elem) {\n                    throw new IllegalArgumentException(\"Unsupported type: \" + elem);\n                }\n            });\n        }\n        if (result[0] == null) {\n            return ErrorUtils.createErrorType(typeElement == null ? \"No type element\" : typeElement.getText());\n        }\n        return result[0];\n    }","id":82746,"modified_method":"@NotNull\n    private JetType resolveTypeElement(final JetScope scope, final List<Attribute> attributes, JetTypeElement typeElement, final boolean nullable) {\n        final JetType[] result = new JetType[1];\n        if (typeElement != null) {\n            typeElement.accept(new JetVisitor() {\n                @Override\n                public void visitUserType(JetUserType type) {\n                    JetSimpleNameExpression referenceExpression = type.getReferenceExpression();\n                    String referencedName = type.getReferencedName();\n                    if (referenceExpression == null || referencedName == null) {\n                        return;\n                    }\n\n                    if (type.getTypeArguments().isEmpty() && type.getQualifier() == null) {\n                        TypeParameterDescriptor typeParameterDescriptor = scope.getTypeParameter(referencedName);\n                        if (typeParameterDescriptor != null) {\n                            trace.recordReferenceResolution(referenceExpression, typeParameterDescriptor);\n                            result[0] = new JetTypeImpl(\n                                    attributes,\n                                    typeParameterDescriptor.getTypeConstructor(),\n                                    nullable || hasNullableBound(typeParameterDescriptor),\n                                    Collections.<TypeProjection>emptyList(),\n                                    // TODO : joint domain\n                                    JetStandardClasses.STUB\n                            );\n                            return;\n                        }\n                    }\n\n                    ClassDescriptor classDescriptor = resolveClass(scope, type);\n                    if (classDescriptor != null) {\n                        trace.recordReferenceResolution(referenceExpression, classDescriptor);\n                        TypeConstructor typeConstructor = classDescriptor.getTypeConstructor();\n                        List<TypeProjection> arguments = resolveTypeProjections(scope, typeConstructor, type.getTypeArguments());\n                        if (arguments.size() != typeConstructor.getParameters().size()) {\n                            semanticServices.getErrorHandler().genericError(type.getNode(), typeConstructor.getParameters().size() + \" type parameters expected\"); // TODO : message\n                        } else {\n                            result[0] = new JetTypeImpl(\n                                    attributes,\n                                    typeConstructor,\n                                    nullable,\n                                    arguments,\n                                    classDescriptor.getMemberScope(arguments)\n                            );\n                        }\n                    }\n                }\n\n                @Override\n                public void visitNullableType(JetNullableType nullableType) {\n                    result[0] = resolveTypeElement(scope, attributes, nullableType.getInnerType(), true);\n                }\n\n                @Override\n                public void visitTupleType(JetTupleType type) {\n                    // TODO labels\n                    result[0] = JetStandardClasses.getTupleType(resolveTypes(scope, type.getComponentTypeRefs()));\n                }\n\n                @Override\n                public void visitFunctionType(JetFunctionType type) {\n                    JetTypeReference receiverTypeRef = type.getReceiverTypeRef();\n                    JetType receiverType = receiverTypeRef == null ? null : resolveType(scope, receiverTypeRef);\n\n                    List<JetType> parameterTypes = new ArrayList<JetType>();\n                    for (JetParameter parameter : type.getParameters()) {\n                        parameterTypes.add(resolveType(scope, parameter.getTypeReference()));\n                    }\n\n                    JetType returnType = resolveType(scope, type.getReturnTypeRef());\n\n                    result[0] = JetStandardClasses.getFunctionType(attributes, receiverType, parameterTypes, returnType);\n                }\n\n                @Override\n                public void visitJetElement(JetElement elem) {\n                    throw new IllegalArgumentException(\"Unsupported type: \" + elem);\n                }\n            });\n        }\n        if (result[0] == null) {\n            return ErrorUtils.createErrorType(typeElement == null ? \"No type element\" : typeElement.getText());\n        }\n        return result[0];\n    }","commit_id":"065e0f3bf91c3f388f9e82852350ca26d2ad38b7","url":"https://github.com/JetBrains/kotlin"},{"original_method":"public JvmTypeReference asPrimitiveIfWrapperType(JvmTypeReference type) {\n\t\treturn new AbstractTypeReferenceVisitor.InheritanceAware<JvmTypeReference>() {\n\n\t\t\t@Override\n\t\t\tpublic JvmTypeReference doVisitMultiTypeReference(JvmMultiTypeReference reference) {\n\t\t\t\tfor(JvmTypeReference ref: reference.getReferences()) {\n\t\t\t\t\tJvmTypeReference refAsPrimitiveIfWrapper = visit(ref);\n\t\t\t\t\tif(refAsPrimitiveIfWrapper != ref)\n\t\t\t\t\t\treturn refAsPrimitiveIfWrapper;\n\t\t\t\t}\n\t\t\t\treturn reference;\n\t\t\t}\n\t\t\t\n\t\t\t@Override\n\t\t\tpublic JvmTypeReference doVisitParameterizedTypeReference(JvmParameterizedTypeReference type) {\n\t\t\t\tif(type.getType() instanceof JvmTypeParameter) {\n\t\t\t\t\tEList<JvmTypeConstraint> constraints = ((JvmTypeParameter)type.getType()).getConstraints();\n\t\t\t\t\tfor(JvmUpperBound upperBound: filter(constraints, JvmUpperBound.class)) {\n\t\t\t\t\t\tJvmTypeReference upperBoundType = upperBound.getTypeReference();\n\t\t\t\t\t\tJvmTypeReference asPrimitive = visit(upperBoundType);\n\t\t\t\t\t\tif(asPrimitive != upperBoundType) \n\t\t\t\t\t\t\treturn asPrimitive;\n\t\t\t\t\t}\n\t\t\t\t\treturn type;\n\t\t\t\t} else if (typeReferences.is(type, Byte.class)) {\n\t\t\t\t\treturn typeReferences.getTypeForName(Byte.TYPE, type.getType());\n\t\t\t\t} else if (typeReferences.is(type, Short.class)) {\n\t\t\t\t\treturn typeReferences.getTypeForName(Short.TYPE, type.getType());\n\t\t\t\t} else if (typeReferences.is(type, Character.class)) {\n\t\t\t\t\treturn typeReferences.getTypeForName(Character.TYPE, type.getType());\n\t\t\t\t} else if (typeReferences.is(type, Integer.class)) {\n\t\t\t\t\treturn typeReferences.getTypeForName(Integer.TYPE, type.getType());\n\t\t\t\t} else if (typeReferences.is(type, Long.class)) {\n\t\t\t\t\treturn typeReferences.getTypeForName(Long.TYPE, type.getType());\n\t\t\t\t} else if (typeReferences.is(type, Float.class)) {\n\t\t\t\t\treturn typeReferences.getTypeForName(Float.TYPE, type.getType());\n\t\t\t\t} else if (typeReferences.is(type, Double.class)) {\n\t\t\t\t\treturn typeReferences.getTypeForName(Double.TYPE, type.getType());\n\t\t\t\t} else if (typeReferences.is(type, Boolean.class)) {\n\t\t\t\t\treturn typeReferences.getTypeForName(Boolean.TYPE, type.getType());\n\t\t\t\t} else if (typeReferences.is(type, Void.class)) {\n\t\t\t\t\treturn typeReferences.getTypeForName(Void.TYPE, type.getType());\n\t\t\t\t}\n\t\t\t\treturn type;\n\t\t\t}\n\t\t\t\n\t\t\t@Override\n\t\t\tpublic JvmTypeReference doVisitTypeReference(JvmTypeReference reference) {\n\t\t\t\treturn reference;\n\t\t\t}\n\t\t\t\n\t\t\t@Override\n\t\t\tprotected JvmTypeReference handleNullReference() {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}.visit(type);\n\t\t\n\t}","id":82747,"modified_method":"public JvmTypeReference asPrimitiveIfWrapperType(JvmTypeReference type) {\n\t\treturn new AbstractTypeReferenceVisitor.InheritanceAware<JvmTypeReference>() {\n\n\t\t\tprivate Set<JvmType> visiting = Sets.newHashSetWithExpectedSize(2);\n\t\t\t\n\t\t\t@Override\n\t\t\tpublic JvmTypeReference doVisitMultiTypeReference(JvmMultiTypeReference reference) {\n\t\t\t\tfor(JvmTypeReference ref: reference.getReferences()) {\n\t\t\t\t\tJvmTypeReference refAsPrimitiveIfWrapper = visit(ref);\n\t\t\t\t\tif(refAsPrimitiveIfWrapper != ref)\n\t\t\t\t\t\treturn refAsPrimitiveIfWrapper;\n\t\t\t\t}\n\t\t\t\treturn reference;\n\t\t\t}\n\t\t\t\n\t\t\t@Override\n\t\t\tpublic JvmTypeReference doVisitParameterizedTypeReference(JvmParameterizedTypeReference type) {\n\t\t\t\tif(type.getType() instanceof JvmTypeParameter && visiting.add(type.getType())) {\n\t\t\t\t\tEList<JvmTypeConstraint> constraints = ((JvmTypeParameter)type.getType()).getConstraints();\n\t\t\t\t\tfor(JvmUpperBound upperBound: filter(constraints, JvmUpperBound.class)) {\n\t\t\t\t\t\tJvmTypeReference upperBoundType = upperBound.getTypeReference();\n\t\t\t\t\t\tJvmTypeReference asPrimitive = visit(upperBoundType);\n\t\t\t\t\t\tif(asPrimitive != upperBoundType) \n\t\t\t\t\t\t\treturn asPrimitive;\n\t\t\t\t\t}\n\t\t\t\t\treturn type;\n\t\t\t\t} else if (typeReferences.is(type, Byte.class)) {\n\t\t\t\t\treturn typeReferences.getTypeForName(Byte.TYPE, type.getType());\n\t\t\t\t} else if (typeReferences.is(type, Short.class)) {\n\t\t\t\t\treturn typeReferences.getTypeForName(Short.TYPE, type.getType());\n\t\t\t\t} else if (typeReferences.is(type, Character.class)) {\n\t\t\t\t\treturn typeReferences.getTypeForName(Character.TYPE, type.getType());\n\t\t\t\t} else if (typeReferences.is(type, Integer.class)) {\n\t\t\t\t\treturn typeReferences.getTypeForName(Integer.TYPE, type.getType());\n\t\t\t\t} else if (typeReferences.is(type, Long.class)) {\n\t\t\t\t\treturn typeReferences.getTypeForName(Long.TYPE, type.getType());\n\t\t\t\t} else if (typeReferences.is(type, Float.class)) {\n\t\t\t\t\treturn typeReferences.getTypeForName(Float.TYPE, type.getType());\n\t\t\t\t} else if (typeReferences.is(type, Double.class)) {\n\t\t\t\t\treturn typeReferences.getTypeForName(Double.TYPE, type.getType());\n\t\t\t\t} else if (typeReferences.is(type, Boolean.class)) {\n\t\t\t\t\treturn typeReferences.getTypeForName(Boolean.TYPE, type.getType());\n\t\t\t\t} else if (typeReferences.is(type, Void.class)) {\n\t\t\t\t\treturn typeReferences.getTypeForName(Void.TYPE, type.getType());\n\t\t\t\t}\n\t\t\t\treturn type;\n\t\t\t}\n\t\t\t\n\t\t\t@Override\n\t\t\tpublic JvmTypeReference doVisitTypeReference(JvmTypeReference reference) {\n\t\t\t\treturn reference;\n\t\t\t}\n\t\t\t\n\t\t\t@Override\n\t\t\tprotected JvmTypeReference handleNullReference() {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}.visit(type);\n\t\t\n\t}","commit_id":"cecc44e86e0fcd1e68ff554ad50079dd38537dd6","url":"https://github.com/eclipse/xtext"},{"original_method":"protected LightweightTypeReference getRawTypeFromConstraints(ITypeReferenceOwner owner, JvmTypeParameter typeParameter, ResourceSet resourceSet) {\n\t\t\tList<JvmTypeConstraint> constraints = typeParameter.getConstraints();\n\t\t\tif (!constraints.isEmpty()) {\n\t\t\t\tOwnedConverter converter = new OwnedConverter(owner);\n\t\t\t\tif (constraints.size() > 1) {\n\t\t\t\t\tCompoundTypeReference result = new CompoundTypeReference(owner, false);\n\t\t\t\t\tfor(JvmTypeConstraint constraint: constraints) {\n\t\t\t\t\t\tif (constraint instanceof JvmUpperBound) {\n\t\t\t\t\t\t\tresult.addComponent(converter.toLightweightReference(constraint.getTypeReference()).accept(this, resourceSet));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\tLightweightTypeReference result = converter.toLightweightReference(constraints.get(0).getTypeReference()).accept(this, resourceSet);\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn createObjectReference(owner, resourceSet);\n\t\t}","id":82748,"modified_method":"protected LightweightTypeReference getRawTypeFromConstraints(ITypeReferenceOwner owner, JvmTypeParameter typeParameter, ResourceSet resourceSet) {\n\t\t\tList<JvmTypeConstraint> constraints = typeParameter.getConstraints();\n\t\t\tif (!constraints.isEmpty()) {\n\t\t\t\tOwnedConverter converter = new OwnedConverter(owner);\n\t\t\t\tif (constraints.size() > 1) {\n\t\t\t\t\tCompoundTypeReference result = new CompoundTypeReference(owner, false);\n\t\t\t\t\tfor(JvmTypeConstraint constraint: constraints) {\n\t\t\t\t\t\tif (constraint instanceof JvmUpperBound) {\n\t\t\t\t\t\t\tJvmTypeReference typeReference = constraint.getTypeReference();\n\t\t\t\t\t\t\tif (typeReference != null)\n\t\t\t\t\t\t\t\tresult.addComponent(converter.toLightweightReference(typeReference).accept(this, resourceSet));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\tJvmTypeReference typeReference = constraints.get(0).getTypeReference();\n\t\t\t\t\tif (typeReference != null) {\n\t\t\t\t\t\tLightweightTypeReference result = converter.toLightweightReference(typeReference).accept(this, resourceSet);\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn createObjectReference(owner, resourceSet);\n\t\t}","commit_id":"cecc44e86e0fcd1e68ff554ad50079dd38537dd6","url":"https://github.com/eclipse/xtext"},{"original_method":"public boolean processRow( StepMetaInterface smi, StepDataInterface sdi ) throws KettleException {\n    Object[] rowData;\n\n    if ( data.readsRows ) {\n      rowData = getRow();\n      if ( rowData == null ) {\n        setOutputDone();\n        return false;\n      }\n    } else {\n      rowData = RowDataUtil.allocateRowData( 0 );\n      incrementLinesRead();\n    }\n\n    // initialize\n    if ( first && rowData != null ) {\n      first = false;\n\n      // Make output meta data\n      //\n      if ( data.readsRows ) {\n        data.inputRowMeta = getInputRowMeta();\n      } else {\n        data.inputRowMeta = new RowMeta();\n      }\n      data.outputRowMeta = data.inputRowMeta.clone();\n      meta.getFields( data.outputRowMeta, getStepname(), null, null, this, repository, metaStore );\n\n      // Create a copy of the output row metadata to do the data conversion...\n      //\n      data.conversionMeta = data.outputRowMeta.cloneToType( ValueMetaInterface.TYPE_STRING );\n\n      // Add the variables to the row...\n      //\n      // Keep the Object[] for speed. Although this step will always be used in \"small\" amounts, there's always going to\n      // be those cases where performance is required.\n      //\n      data.extraData = new Object[meta.getFieldName().length];\n      for ( int i = 0; i < meta.getFieldName().length; i++ ) {\n        String newValue = environmentSubstitute( meta.getVariableString()[i] );\n        if ( log.isDetailed() ) {\n          logDetailed( \"field [\" + meta.getFieldName()[i] + \"] has value [\" + newValue + \"]\" );\n        }\n\n        // Convert the data to the desired data type...\n        //\n        ValueMetaInterface targetMeta = data.outputRowMeta.getValueMeta( data.inputRowMeta.size() + i );\n        ValueMetaInterface sourceMeta = data.conversionMeta.getValueMeta( data.inputRowMeta.size() + i ); // String type\n                                                                                                          // +\n                                                                                                          // conversion\n                                                                                                          // masks,\n                                                                                                          // symbols,\n                                                                                                          // trim type,\n                                                                                                          // etc\n        data.extraData[i] = targetMeta.convertData( sourceMeta, newValue );\n      }\n    }\n\n    rowData = RowDataUtil.addRowData( rowData, data.inputRowMeta.size(), data.extraData );\n\n    putRow( data.outputRowMeta, rowData );\n\n    if ( !data.readsRows ) { // Just one row and then stop!\n\n      setOutputDone();\n      return false;\n    }\n\n    return true;\n  }","id":82749,"modified_method":"public boolean processRow( StepMetaInterface smi, StepDataInterface sdi ) throws KettleException {\n    Object[] rowData;\n\n    if ( data.readsRows ) {\n      rowData = getRow();\n      if ( rowData == null ) {\n        setOutputDone();\n        return false;\n      }\n    } else {\n      rowData = RowDataUtil.allocateRowData( 0 );\n      incrementLinesRead();\n    }\n\n    // initialize\n    if ( first && rowData != null ) {\n      first = false;\n\n      // Make output meta data\n      //\n      if ( data.readsRows ) {\n        data.inputRowMeta = getInputRowMeta();\n      } else {\n        data.inputRowMeta = new RowMeta();\n      }\n      data.outputRowMeta = data.inputRowMeta.clone();\n      meta.getFields( data.outputRowMeta, getStepname(), null, null, this, repository, metaStore );\n\n      // Create a copy of the output row metadata to do the data conversion...\n      //\n      data.conversionMeta = data.outputRowMeta.cloneToType( ValueMetaInterface.TYPE_STRING );\n\n      // Add the variables to the row...\n      //\n      // Keep the Object[] for speed. Although this step will always be used in \"small\" amounts, there's always going to\n      // be those cases where performance is required.\n      //\n      int fieldsLength = meta.getFieldDefinitions().length;\n      data.extraData = new Object[fieldsLength];\n      for ( int i = 0; i < fieldsLength; i++ ) {\n        String newValue = environmentSubstitute( meta.getFieldDefinitions()[i].getVariableString() );\n        if ( log.isDetailed() ) {\n          logDetailed( \"field [\" + meta.getFieldDefinitions()[i].getFieldName() + \"] has value [\" + newValue + \"]\" );\n        }\n\n        // Convert the data to the desired data type...\n        //\n        ValueMetaInterface targetMeta = data.outputRowMeta.getValueMeta( data.inputRowMeta.size() + i );\n        ValueMetaInterface sourceMeta = data.conversionMeta.getValueMeta( data.inputRowMeta.size() + i ); // String type\n                                                                                                          // +\n                                                                                                          // conversion\n                                                                                                          // masks,\n                                                                                                          // symbols,\n                                                                                                          // trim type,\n                                                                                                          // etc\n        data.extraData[i] = targetMeta.convertData( sourceMeta, newValue );\n      }\n    }\n\n    rowData = RowDataUtil.addRowData( rowData, data.inputRowMeta.size(), data.extraData );\n\n    putRow( data.outputRowMeta, rowData );\n\n    if ( !data.readsRows ) { // Just one row and then stop!\n\n      setOutputDone();\n      return false;\n    }\n\n    return true;\n  }","commit_id":"c764d569642043237f3b4695833356c6b2d5a4b4","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private void getInfo( GetVariableMeta input ) throws KettleException {\n\n    stepname = wStepname.getText(); // return value\n    // Table table = wFields.table;\n\n    int count = wFields.nrNonEmpty();\n    input.allocate( count );\n\n    //CHECKSTYLE:Indentation:OFF\n    for ( int i = 0; i < count; i++ ) {\n      TableItem item = wFields.getNonEmpty( i );\n\n      int index = 1;\n      input.getFieldName()[i] = item.getText( index++ );\n      input.getVariableString()[i] = item.getText( index++ );\n      input.getFieldType()[i] = ValueMeta.getType( item.getText( index++ ) );\n      input.getFieldFormat()[i] = item.getText( index++ );\n      input.getFieldLength()[i] = Const.toInt( item.getText( index++ ), -1 );\n      input.getFieldPrecision()[i] = Const.toInt( item.getText( index++ ), -1 );\n      input.getCurrency()[i] = item.getText( index++ );\n      input.getDecimal()[i] = item.getText( index++ );\n      input.getGroup()[i] = item.getText( index++ );\n      input.getTrimType()[i] = ValueMeta.getTrimTypeByDesc( item.getText( index++ ) );\n    }\n  }","id":82750,"modified_method":"private void getInfo( GetVariableMeta input ) throws KettleException {\n\n    stepname = wStepname.getText(); // return value\n    // Table table = wFields.table;\n\n    int count = wFields.nrNonEmpty();\n    input.allocate( count );\n\n    //CHECKSTYLE:Indentation:OFF\n    for ( int i = 0; i < count; i++ ) {\n      TableItem item = wFields.getNonEmpty( i );\n\n      FieldDefinition currentField = input.getFieldDefinitions()[i];\n      int index = 1;\n      currentField.setFieldName( item.getText( index++ ) );\n      currentField.setVariableString( item.getText( index++ ) );\n      currentField.setFieldType( ValueMeta.getType( item.getText( index++ ) ) );\n      currentField.setFieldFormat( item.getText( index++ ) );\n      currentField.setFieldLength( Const.toInt( item.getText( index++ ), -1 ) );\n      currentField.setFieldPrecision( Const.toInt( item.getText( index++ ), -1 ) );\n      currentField.setCurrency( item.getText( index++ ) );\n      currentField.setDecimal( item.getText( index++ ) );\n      currentField.setGroup( item.getText( index++ ) );\n      currentField.setTrimType( ValueMeta.getTrimTypeByDesc( item.getText( index++ ) ) );\n    }\n  }","commit_id":"c764d569642043237f3b4695833356c6b2d5a4b4","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"/**\n   * Copy information from the meta-data input to the dialog fields.\n   */\n  public void getData() {\n    wStepname.setText( stepname );\n\n    for ( int i = 0; i < input.getFieldName().length; i++ ) {\n      TableItem item = wFields.table.getItem( i );\n\n      int index = 1;\n      item.setText( index++, Const.NVL( input.getFieldName()[i], \"\" ) );\n      item.setText( index++, Const.NVL( input.getVariableString()[i], \"\" ) );\n      item.setText( index++, ValueMeta.getTypeDesc( input.getFieldType()[i] ) );\n      item.setText( index++, Const.NVL( input.getFieldFormat()[i], \"\" ) );\n      item.setText( index++, input.getFieldLength()[i] < 0 ? \"\" : ( \"\" + input.getFieldLength()[i] ) );\n      item.setText( index++, input.getFieldPrecision()[i] < 0 ? \"\" : ( \"\" + input.getFieldPrecision()[i] ) );\n      item.setText( index++, Const.NVL( input.getCurrency()[i], \"\" ) );\n      item.setText( index++, Const.NVL( input.getDecimal()[i], \"\" ) );\n      item.setText( index++, Const.NVL( input.getGroup()[i], \"\" ) );\n      item.setText( index++, ValueMeta.getTrimTypeDesc( input.getTrimType()[i] ) );\n    }\n\n    wFields.setRowNums();\n    wFields.optWidth( true );\n\n    wStepname.selectAll();\n    wStepname.setFocus();\n  }","id":82751,"modified_method":"/**\n   * Copy information from the meta-data input to the dialog fields.\n   */\n  public void getData() {\n    wStepname.setText( stepname );\n\n    for ( int i = 0; i < input.getFieldDefinitions().length; i++ ) {\n      TableItem item = wFields.table.getItem( i );\n\n      int index = 1;\n      FieldDefinition currentField = input.getFieldDefinitions()[i];\n      item.setText( index++, Const.NVL( currentField.getFieldName(), \"\" ) );\n      item.setText( index++, Const.NVL( currentField.getVariableString(), \"\" ) );\n      item.setText( index++, ValueMeta.getTypeDesc( currentField.getFieldType() ) );\n      item.setText( index++, Const.NVL( currentField.getFieldFormat(), \"\" ) );\n      item.setText( index++, currentField.getFieldLength() < 0 ? \"\" : ( \"\" + currentField.getFieldLength() ) );\n      item.setText( index++, currentField.getFieldPrecision() < 0 ? \"\" : ( \"\" + currentField.getFieldPrecision() ) );\n      item.setText( index++, Const.NVL( currentField.getCurrency(), \"\" ) );\n      item.setText( index++, Const.NVL( currentField.getDecimal(), \"\" ) );\n      item.setText( index++, Const.NVL( currentField.getGroup(), \"\" ) );\n      item.setText( index++, ValueMeta.getTrimTypeDesc( currentField.getTrimType() ) );\n    }\n\n    wFields.setRowNums();\n    wFields.optWidth( true );\n\n    wStepname.selectAll();\n    wStepname.setFocus();\n  }","commit_id":"c764d569642043237f3b4695833356c6b2d5a4b4","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public String open() {\n    Shell parent = getParent();\n    Display display = parent.getDisplay();\n\n    shell = new Shell( parent, SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX | SWT.MIN );\n    props.setLook( shell );\n    setShellImage( shell, input );\n\n    ModifyListener lsMod = new ModifyListener() {\n      public void modifyText( ModifyEvent e ) {\n        input.setChanged();\n      }\n    };\n    changed = input.hasChanged();\n\n    FormLayout formLayout = new FormLayout();\n    formLayout.marginWidth = Const.FORM_MARGIN;\n    formLayout.marginHeight = Const.FORM_MARGIN;\n\n    shell.setLayout( formLayout );\n    shell.setText( BaseMessages.getString( PKG, \"GetVariableDialog.DialogTitle\" ) );\n\n    int middle = props.getMiddlePct();\n    int margin = Const.MARGIN;\n\n    // See if the step receives input.\n    //\n    isReceivingInput = transMeta.findNrPrevSteps( stepMeta ) > 0;\n\n    // Stepname line\n    wlStepname = new Label( shell, SWT.RIGHT );\n    wlStepname.setText( BaseMessages.getString( PKG, \"System.Label.StepName\" ) );\n    props.setLook( wlStepname );\n    fdlStepname = new FormData();\n    fdlStepname.left = new FormAttachment( 0, 0 );\n    fdlStepname.right = new FormAttachment( middle, -margin );\n    fdlStepname.top = new FormAttachment( 0, margin );\n    wlStepname.setLayoutData( fdlStepname );\n    wStepname = new Text( shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER );\n    wStepname.setText( stepname );\n    props.setLook( wStepname );\n    wStepname.addModifyListener( lsMod );\n    fdStepname = new FormData();\n    fdStepname.left = new FormAttachment( middle, 0 );\n    fdStepname.top = new FormAttachment( 0, margin );\n    fdStepname.right = new FormAttachment( 100, 0 );\n    wStepname.setLayoutData( fdStepname );\n\n    wlFields = new Label( shell, SWT.NONE );\n    wlFields.setText( BaseMessages.getString( PKG, \"GetVariableDialog.Fields.Label\" ) );\n    props.setLook( wlFields );\n    fdlFields = new FormData();\n    fdlFields.left = new FormAttachment( 0, 0 );\n    fdlFields.top = new FormAttachment( wStepname, margin );\n    wlFields.setLayoutData( fdlFields );\n\n    final int FieldsRows = input.getFieldName().length;\n\n    ColumnInfo[] colinf =\n      new ColumnInfo[] {\n        new ColumnInfo(\n          BaseMessages.getString( PKG, \"GetVariableDialog.NameColumn.Column\" ), ColumnInfo.COLUMN_TYPE_TEXT,\n          false ),\n        new ColumnInfo(\n          BaseMessages.getString( PKG, \"GetVariableDialog.VariableColumn.Column\" ),\n          ColumnInfo.COLUMN_TYPE_TEXT, false ),\n        new ColumnInfo(\n          BaseMessages.getString( PKG, \"System.Column.Type\" ), ColumnInfo.COLUMN_TYPE_CCOMBO, ValueMeta\n            .getTypes() ),\n        new ColumnInfo(\n          BaseMessages.getString( PKG, \"System.Column.Format\" ), ColumnInfo.COLUMN_TYPE_FORMAT, 3 ),\n        new ColumnInfo(\n          BaseMessages.getString( PKG, \"System.Column.Length\" ), ColumnInfo.COLUMN_TYPE_TEXT, false ),\n        new ColumnInfo(\n          BaseMessages.getString( PKG, \"System.Column.Precision\" ), ColumnInfo.COLUMN_TYPE_TEXT, false ),\n        new ColumnInfo(\n          BaseMessages.getString( PKG, \"System.Column.Currency\" ), ColumnInfo.COLUMN_TYPE_TEXT, false ),\n        new ColumnInfo(\n          BaseMessages.getString( PKG, \"System.Column.Decimal\" ), ColumnInfo.COLUMN_TYPE_TEXT, false ),\n        new ColumnInfo(\n          BaseMessages.getString( PKG, \"System.Column.Group\" ), ColumnInfo.COLUMN_TYPE_TEXT, false ),\n        new ColumnInfo(\n          BaseMessages.getString( PKG, \"GetVariableDialog.TrimType.Column\" ), ColumnInfo.COLUMN_TYPE_CCOMBO,\n          ValueMeta.getTrimTypeDescriptions() ), };\n\n    colinf[1].setToolTip( BaseMessages.getString( PKG, \"GetVariableDialog.VariableColumn.Tooltip\" ) );\n    colinf[1].setUsingVariables( true );\n\n    wFields =\n      new TableView(\n        transMeta, shell, SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI, colinf, FieldsRows, lsMod, props );\n\n    fdFields = new FormData();\n    fdFields.left = new FormAttachment( 0, 0 );\n    fdFields.top = new FormAttachment( wlFields, margin );\n    fdFields.right = new FormAttachment( 100, 0 );\n    fdFields.bottom = new FormAttachment( 100, -50 );\n    wFields.setLayoutData( fdFields );\n\n    // Some buttons\n    wOK = new Button( shell, SWT.PUSH );\n    wOK.setText( BaseMessages.getString( PKG, \"System.Button.OK\" ) );\n    wGet = new Button( this.shell, 8 );\n    wGet.setText( BaseMessages.getString( PKG, \"System.Button.GetVariables\" ) );\n    wPreview = new Button( this.shell, 8 );\n    wPreview.setText( BaseMessages.getString( PKG, \"System.Button.Preview\" ) );\n    wPreview.setEnabled( !isReceivingInput );\n    wCancel = new Button( shell, SWT.PUSH );\n    wCancel.setText( BaseMessages.getString( PKG, \"System.Button.Cancel\" ) );\n\n    setButtonPositions( new Button[] { wOK, wPreview, wGet, wCancel }, margin, wFields );\n\n    // Add listeners\n    lsCancel = new Listener() {\n      public void handleEvent( Event e ) {\n        cancel();\n      }\n    };\n    lsOK = new Listener() {\n      public void handleEvent( Event e ) {\n        ok();\n      }\n    };\n    lsGet = new Listener() {\n      public void handleEvent( Event e ) {\n        getVariables();\n      }\n    };\n    lsPreview = new Listener() {\n      public void handleEvent( Event e ) {\n        preview();\n      }\n    };\n    wGet.addListener( 13, this.lsGet );\n    wPreview.addListener( 13, this.lsPreview );\n    wCancel.addListener( SWT.Selection, lsCancel );\n    wOK.addListener( SWT.Selection, lsOK );\n\n    lsDef = new SelectionAdapter() {\n      public void widgetDefaultSelected( SelectionEvent e ) {\n        ok();\n      }\n    };\n\n    wStepname.addSelectionListener( lsDef );\n\n    // Detect X or ALT-F4 or something that kills this window...\n    shell.addShellListener( new ShellAdapter() {\n      public void shellClosed( ShellEvent e ) {\n        cancel();\n      }\n    } );\n\n    // Set the shell size, based upon previous time...\n    setSize();\n\n    getData();\n    input.setChanged( changed );\n\n    shell.open();\n    while ( !shell.isDisposed() ) {\n      if ( !display.readAndDispatch() ) {\n        display.sleep();\n      }\n    }\n    return stepname;\n  }","id":82752,"modified_method":"public String open() {\n    Shell parent = getParent();\n    Display display = parent.getDisplay();\n\n    shell = new Shell( parent, SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX | SWT.MIN );\n    props.setLook( shell );\n    setShellImage( shell, input );\n\n    ModifyListener lsMod = new ModifyListener() {\n      public void modifyText( ModifyEvent e ) {\n        input.setChanged();\n      }\n    };\n    changed = input.hasChanged();\n\n    FormLayout formLayout = new FormLayout();\n    formLayout.marginWidth = Const.FORM_MARGIN;\n    formLayout.marginHeight = Const.FORM_MARGIN;\n\n    shell.setLayout( formLayout );\n    shell.setText( BaseMessages.getString( PKG, \"GetVariableDialog.DialogTitle\" ) );\n\n    int middle = props.getMiddlePct();\n    int margin = Const.MARGIN;\n\n    // See if the step receives input.\n    //\n    isReceivingInput = transMeta.findNrPrevSteps( stepMeta ) > 0;\n\n    // Stepname line\n    wlStepname = new Label( shell, SWT.RIGHT );\n    wlStepname.setText( BaseMessages.getString( PKG, \"System.Label.StepName\" ) );\n    props.setLook( wlStepname );\n    fdlStepname = new FormData();\n    fdlStepname.left = new FormAttachment( 0, 0 );\n    fdlStepname.right = new FormAttachment( middle, -margin );\n    fdlStepname.top = new FormAttachment( 0, margin );\n    wlStepname.setLayoutData( fdlStepname );\n    wStepname = new Text( shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER );\n    wStepname.setText( stepname );\n    props.setLook( wStepname );\n    wStepname.addModifyListener( lsMod );\n    fdStepname = new FormData();\n    fdStepname.left = new FormAttachment( middle, 0 );\n    fdStepname.top = new FormAttachment( 0, margin );\n    fdStepname.right = new FormAttachment( 100, 0 );\n    wStepname.setLayoutData( fdStepname );\n\n    wlFields = new Label( shell, SWT.NONE );\n    wlFields.setText( BaseMessages.getString( PKG, \"GetVariableDialog.Fields.Label\" ) );\n    props.setLook( wlFields );\n    fdlFields = new FormData();\n    fdlFields.left = new FormAttachment( 0, 0 );\n    fdlFields.top = new FormAttachment( wStepname, margin );\n    wlFields.setLayoutData( fdlFields );\n\n    final int fieldsRows = input.getFieldDefinitions().length;\n\n    ColumnInfo[] colinf =\n      new ColumnInfo[] {\n        new ColumnInfo(\n          BaseMessages.getString( PKG, \"GetVariableDialog.NameColumn.Column\" ), ColumnInfo.COLUMN_TYPE_TEXT,\n          false ),\n        new ColumnInfo(\n          BaseMessages.getString( PKG, \"GetVariableDialog.VariableColumn.Column\" ),\n          ColumnInfo.COLUMN_TYPE_TEXT, false ),\n        new ColumnInfo(\n          BaseMessages.getString( PKG, \"System.Column.Type\" ), ColumnInfo.COLUMN_TYPE_CCOMBO, ValueMeta\n            .getTypes() ),\n        new ColumnInfo(\n          BaseMessages.getString( PKG, \"System.Column.Format\" ), ColumnInfo.COLUMN_TYPE_FORMAT, 3 ),\n        new ColumnInfo(\n          BaseMessages.getString( PKG, \"System.Column.Length\" ), ColumnInfo.COLUMN_TYPE_TEXT, false ),\n        new ColumnInfo(\n          BaseMessages.getString( PKG, \"System.Column.Precision\" ), ColumnInfo.COLUMN_TYPE_TEXT, false ),\n        new ColumnInfo(\n          BaseMessages.getString( PKG, \"System.Column.Currency\" ), ColumnInfo.COLUMN_TYPE_TEXT, false ),\n        new ColumnInfo(\n          BaseMessages.getString( PKG, \"System.Column.Decimal\" ), ColumnInfo.COLUMN_TYPE_TEXT, false ),\n        new ColumnInfo(\n          BaseMessages.getString( PKG, \"System.Column.Group\" ), ColumnInfo.COLUMN_TYPE_TEXT, false ),\n        new ColumnInfo(\n          BaseMessages.getString( PKG, \"GetVariableDialog.TrimType.Column\" ), ColumnInfo.COLUMN_TYPE_CCOMBO,\n          ValueMeta.getTrimTypeDescriptions() ), };\n\n    colinf[1].setToolTip( BaseMessages.getString( PKG, \"GetVariableDialog.VariableColumn.Tooltip\" ) );\n    colinf[1].setUsingVariables( true );\n\n    wFields =\n      new TableView(\n        transMeta, shell, SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI, colinf, fieldsRows, lsMod, props );\n\n    fdFields = new FormData();\n    fdFields.left = new FormAttachment( 0, 0 );\n    fdFields.top = new FormAttachment( wlFields, margin );\n    fdFields.right = new FormAttachment( 100, 0 );\n    fdFields.bottom = new FormAttachment( 100, -50 );\n    wFields.setLayoutData( fdFields );\n\n    // Some buttons\n    wOK = new Button( shell, SWT.PUSH );\n    wOK.setText( BaseMessages.getString( PKG, \"System.Button.OK\" ) );\n    wGet = new Button( this.shell, 8 );\n    wGet.setText( BaseMessages.getString( PKG, \"System.Button.GetVariables\" ) );\n    wPreview = new Button( this.shell, 8 );\n    wPreview.setText( BaseMessages.getString( PKG, \"System.Button.Preview\" ) );\n    wPreview.setEnabled( !isReceivingInput );\n    wCancel = new Button( shell, SWT.PUSH );\n    wCancel.setText( BaseMessages.getString( PKG, \"System.Button.Cancel\" ) );\n\n    setButtonPositions( new Button[] { wOK, wPreview, wGet, wCancel }, margin, wFields );\n\n    // Add listeners\n    lsCancel = new Listener() {\n      public void handleEvent( Event e ) {\n        cancel();\n      }\n    };\n    lsOK = new Listener() {\n      public void handleEvent( Event e ) {\n        ok();\n      }\n    };\n    lsGet = new Listener() {\n      public void handleEvent( Event e ) {\n        getVariables();\n      }\n    };\n    lsPreview = new Listener() {\n      public void handleEvent( Event e ) {\n        preview();\n      }\n    };\n    wGet.addListener( 13, this.lsGet );\n    wPreview.addListener( 13, this.lsPreview );\n    wCancel.addListener( SWT.Selection, lsCancel );\n    wOK.addListener( SWT.Selection, lsOK );\n\n    lsDef = new SelectionAdapter() {\n      public void widgetDefaultSelected( SelectionEvent e ) {\n        ok();\n      }\n    };\n\n    wStepname.addSelectionListener( lsDef );\n\n    // Detect X or ALT-F4 or something that kills this window...\n    shell.addShellListener( new ShellAdapter() {\n      public void shellClosed( ShellEvent e ) {\n        cancel();\n      }\n    } );\n\n    // Set the shell size, based upon previous time...\n    setSize();\n\n    getData();\n    input.setChanged( changed );\n\n    shell.open();\n    while ( !shell.isDisposed() ) {\n      if ( !display.readAndDispatch() ) {\n        display.sleep();\n      }\n    }\n    return stepname;\n  }","commit_id":"c764d569642043237f3b4695833356c6b2d5a4b4","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void readRep( Repository rep, IMetaStore metaStore, ObjectId id_step, List<DatabaseMeta> databases ) throws KettleException {\n    try {\n      int nrfields = rep.countNrStepAttributes( id_step, \"field_name\" );\n\n      allocate( nrfields );\n\n      for ( int i = 0; i < nrfields; i++ ) {\n        fieldName[i] = rep.getStepAttributeString( id_step, i, \"field_name\" );\n        variableString[i] = rep.getStepAttributeString( id_step, i, \"field_variable\" );\n        fieldType[i] = ValueMeta.getType( rep.getStepAttributeString( id_step, i, \"field_type\" ) );\n\n        fieldFormat[i] = rep.getStepAttributeString( id_step, i, \"field_format\" );\n        currency[i] = rep.getStepAttributeString( id_step, i, \"field_currency\" );\n        decimal[i] = rep.getStepAttributeString( id_step, i, \"field_decimal\" );\n        group[i] = rep.getStepAttributeString( id_step, i, \"field_group\" );\n        fieldLength[i] = (int) rep.getStepAttributeInteger( id_step, i, \"field_length\" );\n        fieldPrecision[i] = (int) rep.getStepAttributeInteger( id_step, i, \"field_precision\" );\n        trimType[i] = ValueMeta.getTrimTypeByCode( rep.getStepAttributeString( id_step, i, \"field_trim_type\" ) );\n\n        // Backward compatibility\n        //\n        if ( fieldType[i] == ValueMetaInterface.TYPE_NONE ) {\n          fieldType[i] = ValueMetaInterface.TYPE_STRING;\n        }\n      }\n\n    } catch ( Exception e ) {\n      throw new KettleException( \"Unexpected error reading step information from the repository\", e );\n    }\n  }","id":82753,"modified_method":"public void readRep( Repository rep, IMetaStore metaStore, ObjectId id_step, List<DatabaseMeta> databases )\n    throws KettleException {\n    try {\n      int nrfields = rep.countNrStepAttributes( id_step, \"field_name\" );\n\n      allocate( nrfields );\n\n      for ( int i = 0; i < nrfields; i++ ) {\n        fieldDefinitions[i].setFieldName( rep.getStepAttributeString( id_step, i, \"field_name\" ) );\n        fieldDefinitions[i].setVariableString( rep.getStepAttributeString( id_step, i, \"field_variable\" ) );\n        fieldDefinitions[i].setFieldType( ValueMeta.getType( rep.getStepAttributeString( id_step, i, \"field_type\" ) ) );\n\n        fieldDefinitions[i].setFieldFormat( rep.getStepAttributeString( id_step, i, \"field_format\" ) );\n        fieldDefinitions[i].setCurrency( rep.getStepAttributeString( id_step, i, \"field_currency\" ) );\n        fieldDefinitions[i].setDecimal( rep.getStepAttributeString( id_step, i, \"field_decimal\" ) );\n        fieldDefinitions[i].setGroup( rep.getStepAttributeString( id_step, i, \"field_group\" ) );\n        fieldDefinitions[i].setFieldLength( (int) rep.getStepAttributeInteger( id_step, i, \"field_length\" ) );\n        fieldDefinitions[i].setFieldPrecision( (int) rep.getStepAttributeInteger( id_step, i, \"field_precision\" ) );\n        fieldDefinitions[i].setTrimType( ValueMeta.getTrimTypeByCode( rep.getStepAttributeString( id_step, i,\n            \"field_trim_type\" ) ) );\n\n        // Backward compatibility\n        //\n        int fieldType = fieldDefinitions[i].getFieldType();\n        if ( fieldType == ValueMetaInterface.TYPE_NONE ) {\n          fieldDefinitions[i].setFieldType( ValueMetaInterface.TYPE_STRING );\n        }\n      }\n\n    } catch ( Exception e ) {\n      throw new KettleException( \"Unexpected error reading step information from the repository\", e );\n    }\n  }","commit_id":"c764d569642043237f3b4695833356c6b2d5a4b4","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public Object clone() {\n    GetVariableMeta retval = (GetVariableMeta) super.clone();\n\n    int count = fieldName.length;\n\n    retval.allocate( count );\n\n    System.arraycopy( fieldName, 0, retval.fieldName, 0, count );\n    System.arraycopy( variableString, 0, retval.variableString, 0, count );\n    System.arraycopy( fieldType, 0, retval.fieldType, 0, count );\n    System.arraycopy( fieldFormat, 0, retval.fieldFormat, 0, count );\n    System.arraycopy( currency, 0, retval.currency, 0, count );\n    System.arraycopy( decimal, 0, retval.decimal, 0, count );\n    System.arraycopy( group, 0, retval.group, 0, count );\n    System.arraycopy( fieldLength, 0, retval.fieldLength, 0, count );\n    System.arraycopy( fieldPrecision, 0, retval.fieldPrecision, 0, count );\n    System.arraycopy( trimType, 0, retval.trimType, 0, count );\n\n    return retval;\n  }","id":82754,"modified_method":"public Object clone() {\n    GetVariableMeta retval = (GetVariableMeta) super.clone();\n\n    int count = fieldDefinitions.length;\n\n    retval.allocate( count );\n    for ( int i = 0; i < count; i++ ) {\n      retval.getFieldDefinitions()[i] = fieldDefinitions[i].clone();\n    }\n    return retval;\n  }","commit_id":"c764d569642043237f3b4695833356c6b2d5a4b4","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void allocate( int count ) {\n    fieldName = new String[count];\n    variableString = new String[count];\n\n    fieldType = new int[count];\n\n    fieldFormat = new String[count];\n    fieldLength = new int[count];\n    fieldPrecision = new int[count];\n\n    currency = new String[count];\n    decimal = new String[count];\n    group = new String[count];\n\n    trimType = new int[count];\n  }","id":82755,"modified_method":"public void allocate( int count ) {\n    fieldDefinitions = new FieldDefinition[count];\n    for ( int i = 0; i < fieldDefinitions.length; i++ ) {\n      fieldDefinitions[i] = new FieldDefinition();\n    }\n  }","commit_id":"c764d569642043237f3b4695833356c6b2d5a4b4","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void check( List<CheckResultInterface> remarks, TransMeta transMeta, StepMeta stepMeta,\n    RowMetaInterface prev, String[] input, String[] output, RowMetaInterface info, VariableSpace space,\n    Repository repository, IMetaStore metaStore ) {\n    // See if we have input streams leading to this step!\n    int nrRemarks = remarks.size();\n    for ( int i = 0; i < fieldName.length; i++ ) {\n      if ( Const.isEmpty( variableString[i] ) ) {\n        CheckResult cr =\n          new CheckResult( CheckResultInterface.TYPE_RESULT_ERROR, BaseMessages.getString(\n            PKG, \"GetVariableMeta.CheckResult.VariableNotSpecified\", fieldName[i] ), stepMeta );\n        remarks.add( cr );\n      }\n    }\n    if ( remarks.size() == nrRemarks ) {\n      CheckResult cr =\n        new CheckResult( CheckResultInterface.TYPE_RESULT_OK, BaseMessages.getString(\n          PKG, \"GetVariableMeta.CheckResult.AllVariablesSpecified\" ), stepMeta );\n      remarks.add( cr );\n    }\n  }","id":82756,"modified_method":"public void check( List<CheckResultInterface> remarks, TransMeta transMeta, StepMeta stepMeta, RowMetaInterface prev,\n      String[] input, String[] output, RowMetaInterface info, VariableSpace space, Repository repository,\n      IMetaStore metaStore ) {\n    // See if we have input streams leading to this step!\n    int nrRemarks = remarks.size();\n    for ( int i = 0; i < fieldDefinitions.length; i++ ) {\n      if ( Const.isEmpty( fieldDefinitions[i].getVariableString() ) ) {\n        CheckResult cr =\n            new CheckResult( CheckResultInterface.TYPE_RESULT_ERROR, BaseMessages.getString( PKG,\n                \"GetVariableMeta.CheckResult.VariableNotSpecified\", fieldDefinitions[i].getFieldName() ), stepMeta );\n        remarks.add( cr );\n      }\n    }\n    if ( remarks.size() == nrRemarks ) {\n      CheckResult cr =\n          new CheckResult( CheckResultInterface.TYPE_RESULT_OK, BaseMessages.getString( PKG,\n              \"GetVariableMeta.CheckResult.AllVariablesSpecified\" ), stepMeta );\n      remarks.add( cr );\n    }\n  }","commit_id":"c764d569642043237f3b4695833356c6b2d5a4b4","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void setDefault() {\n    int count = 0;\n\n    allocate( count );\n\n    for ( int i = 0; i < count; i++ ) {\n      fieldName[i] = \"field\" + i;\n      variableString[i] = \"\";\n    }\n  }","id":82757,"modified_method":"public void setDefault() {\n    int count = 0;\n\n    allocate( count );\n\n    for ( int i = 0; i < count; i++ ) {\n      fieldDefinitions[i].setFieldName( \"field\" + i );\n      fieldDefinitions[i].setVariableString( \"\" );\n    }\n  }","commit_id":"c764d569642043237f3b4695833356c6b2d5a4b4","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void saveRep( Repository rep, IMetaStore metaStore, ObjectId id_transformation, ObjectId id_step ) throws KettleException {\n    try {\n\n      for ( int i = 0; i < fieldName.length; i++ ) {\n        if ( fieldName[i] != null && fieldName[i].length() != 0 ) {\n          rep.saveStepAttribute( id_transformation, id_step, i, \"field_name\", fieldName[i] );\n          rep.saveStepAttribute( id_transformation, id_step, i, \"field_variable\", variableString[i] );\n          rep\n            .saveStepAttribute( id_transformation, id_step, i, \"field_type\", ValueMeta\n              .getTypeDesc( fieldType[i] ) );\n          rep.saveStepAttribute( id_transformation, id_step, i, \"field_format\", fieldFormat[i] );\n          rep.saveStepAttribute( id_transformation, id_step, i, \"field_currency\", currency[i] );\n          rep.saveStepAttribute( id_transformation, id_step, i, \"field_decimal\", decimal[i] );\n          rep.saveStepAttribute( id_transformation, id_step, i, \"field_group\", group[i] );\n          rep.saveStepAttribute( id_transformation, id_step, i, \"field_length\", fieldLength[i] );\n          rep.saveStepAttribute( id_transformation, id_step, i, \"field_precision\", fieldPrecision[i] );\n          rep.saveStepAttribute( id_transformation, id_step, i, \"field_trim_type\", ValueMeta\n            .getTrimTypeCode( trimType[i] ) );\n        }\n      }\n    } catch ( Exception e ) {\n      throw new KettleException( \"Unable to save step information to the repository for id_step=\" + id_step, e );\n    }\n\n  }","id":82758,"modified_method":"public void saveRep( Repository rep, IMetaStore metaStore, ObjectId id_transformation, ObjectId id_step )\n    throws KettleException {\n    try {\n\n      for ( int i = 0; i < fieldDefinitions.length; i++ ) {\n        String fieldName = fieldDefinitions[i].getFieldName();\n        if ( fieldName != null && fieldName.length() != 0 ) {\n          rep.saveStepAttribute( id_transformation, id_step, i, \"field_name\", fieldName );\n          rep.saveStepAttribute( id_transformation, id_step, i, \"field_variable\", fieldDefinitions[i]\n              .getVariableString() );\n          rep.saveStepAttribute( id_transformation, id_step, i, \"field_type\", ValueMeta.getTypeDesc( fieldDefinitions[i]\n              .getFieldType() ) );\n          rep.saveStepAttribute( id_transformation, id_step, i, \"field_format\", fieldDefinitions[i].getFieldFormat() );\n          rep.saveStepAttribute( id_transformation, id_step, i, \"field_currency\", fieldDefinitions[i].getCurrency() );\n          rep.saveStepAttribute( id_transformation, id_step, i, \"field_decimal\", fieldDefinitions[i].getDecimal() );\n          rep.saveStepAttribute( id_transformation, id_step, i, \"field_group\", fieldDefinitions[i].getGroup() );\n          rep.saveStepAttribute( id_transformation, id_step, i, \"field_length\", fieldDefinitions[i].getFieldLength() );\n          rep.saveStepAttribute( id_transformation, id_step, i, \"field_precision\", fieldDefinitions[i]\n              .getFieldPrecision() );\n          rep.saveStepAttribute( id_transformation, id_step, i, \"field_trim_type\", ValueMeta.getTrimTypeCode(\n              fieldDefinitions[i].getTrimType() ) );\n        }\n      }\n    } catch ( Exception e ) {\n      throw new KettleException( \"Unable to save step information to the repository for id_step=\" + id_step, e );\n    }\n\n  }","commit_id":"c764d569642043237f3b4695833356c6b2d5a4b4","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private void readData( Node stepnode ) throws KettleXMLException {\n    try {\n      Node fields = XMLHandler.getSubNode( stepnode, \"fields\" );\n      int count = XMLHandler.countNodes( fields, \"field\" );\n\n      allocate( count );\n\n      for ( int i = 0; i < count; i++ ) {\n        Node fnode = XMLHandler.getSubNodeByNr( fields, \"field\", i );\n\n        fieldName[i] = XMLHandler.getTagValue( fnode, \"name\" );\n        variableString[i] = XMLHandler.getTagValue( fnode, \"variable\" );\n        fieldType[i] = ValueMeta.getType( XMLHandler.getTagValue( fnode, \"type\" ) );\n        fieldFormat[i] = XMLHandler.getTagValue( fnode, \"format\" );\n        currency[i] = XMLHandler.getTagValue( fnode, \"currency\" );\n        decimal[i] = XMLHandler.getTagValue( fnode, \"decimal\" );\n        group[i] = XMLHandler.getTagValue( fnode, \"group\" );\n        fieldLength[i] = Const.toInt( XMLHandler.getTagValue( fnode, \"length\" ), -1 );\n        fieldPrecision[i] = Const.toInt( XMLHandler.getTagValue( fnode, \"precision\" ), -1 );\n        trimType[i] = ValueMeta.getTrimTypeByCode( XMLHandler.getTagValue( fnode, \"trim_type\" ) );\n\n        // Backward compatibility\n        //\n        if ( fieldType[i] == ValueMetaInterface.TYPE_NONE ) {\n          fieldType[i] = ValueMetaInterface.TYPE_STRING;\n        }\n      }\n    } catch ( Exception e ) {\n      throw new KettleXMLException( \"Unable to read step information from XML\", e );\n    }\n  }","id":82759,"modified_method":"private void readData( Node stepnode ) throws KettleXMLException {\n    try {\n      Node fields = XMLHandler.getSubNode( stepnode, \"fields\" );\n      int count = XMLHandler.countNodes( fields, \"field\" );\n\n      allocate( count );\n\n      for ( int i = 0; i < count; i++ ) {\n        Node fnode = XMLHandler.getSubNodeByNr( fields, \"field\", i );\n\n        fieldDefinitions[i].setFieldName( XMLHandler.getTagValue( fnode, \"name\" ) );\n        fieldDefinitions[i].setVariableString( XMLHandler.getTagValue( fnode, \"variable\" ) );\n        fieldDefinitions[i].setFieldType( ValueMeta.getType( XMLHandler.getTagValue( fnode, \"type\" ) ) );\n        fieldDefinitions[i].setFieldFormat( XMLHandler.getTagValue( fnode, \"format\" ) );\n        fieldDefinitions[i].setCurrency( XMLHandler.getTagValue( fnode, \"currency\" ) );\n        fieldDefinitions[i].setDecimal( XMLHandler.getTagValue( fnode, \"decimal\" ) );\n        fieldDefinitions[i].setGroup( XMLHandler.getTagValue( fnode, \"group\" ) );\n        fieldDefinitions[i].setFieldLength( Const.toInt( XMLHandler.getTagValue( fnode, \"length\" ), -1 ) );\n        fieldDefinitions[i].setFieldPrecision( Const.toInt( XMLHandler.getTagValue( fnode, \"precision\" ), -1 ) );\n        fieldDefinitions[i].setTrimType( ValueMeta.getTrimTypeByCode( XMLHandler.getTagValue( fnode, \"trim_type\" ) ) );\n\n        // Backward compatibility\n        //\n        if ( fieldDefinitions[i].getFieldType() == ValueMetaInterface.TYPE_NONE ) {\n          fieldDefinitions[i].setFieldType( ValueMetaInterface.TYPE_STRING );\n        }\n      }\n    } catch ( Exception e ) {\n      throw new KettleXMLException( \"Unable to read step information from XML\", e );\n    }\n  }","commit_id":"c764d569642043237f3b4695833356c6b2d5a4b4","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public String getXML() {\n    StringBuilder retval = new StringBuilder( 300 );\n\n    retval.append( \"    <fields>\" ).append( Const.CR );\n    for ( int i = 0; i < fieldName.length; i++ ) {\n      if ( fieldName[i] != null && fieldName[i].length() != 0 ) {\n        retval.append( \"      <field>\" ).append( Const.CR );\n        retval.append( \"        \" ).append( XMLHandler.addTagValue( \"name\", fieldName[i] ) );\n        retval.append( \"        \" ).append( XMLHandler.addTagValue( \"variable\", variableString[i] ) );\n        retval\n          .append( \"        \" ).append( XMLHandler.addTagValue( \"type\", ValueMeta.getTypeDesc( fieldType[i] ) ) );\n        retval.append( \"        \" ).append( XMLHandler.addTagValue( \"format\", fieldFormat[i] ) );\n        retval.append( \"        \" ).append( XMLHandler.addTagValue( \"currency\", currency[i] ) );\n        retval.append( \"        \" ).append( XMLHandler.addTagValue( \"decimal\", decimal[i] ) );\n        retval.append( \"        \" ).append( XMLHandler.addTagValue( \"group\", group[i] ) );\n        retval.append( \"        \" ).append( XMLHandler.addTagValue( \"length\", fieldLength[i] ) );\n        retval.append( \"        \" ).append( XMLHandler.addTagValue( \"precision\", fieldPrecision[i] ) );\n        retval.append( \"        \" ).append(\n          XMLHandler.addTagValue( \"trim_type\", ValueMeta.getTrimTypeCode( trimType[i] ) ) );\n\n        retval.append( \"      <\/field>\" ).append( Const.CR );\n      }\n    }\n    retval.append( \"    <\/fields>\" ).append( Const.CR );\n\n    return retval.toString();\n  }","id":82760,"modified_method":"public String getXML() {\n    StringBuilder retval = new StringBuilder( 300 );\n\n    retval.append( \"    <fields>\" ).append( Const.CR );\n    for ( int i = 0; i < fieldDefinitions.length; i++ ) {\n      String fieldName = fieldDefinitions[i].getFieldName();\n      if ( fieldName != null && fieldName.length() != 0 ) {\n        retval.append( \"      <field>\" ).append( Const.CR );\n        retval.append( \"        \" ).append( XMLHandler.addTagValue( \"name\", fieldName ) );\n        retval.append( \"        \" ).append( XMLHandler.addTagValue( \"variable\", fieldDefinitions[i]\n            .getVariableString() ) );\n        retval.append( \"        \" ).append( XMLHandler.addTagValue( \"type\", ValueMeta.getTypeDesc( fieldDefinitions[i]\n            .getFieldType() ) ) );\n        retval.append( \"        \" ).append( XMLHandler.addTagValue( \"format\", fieldDefinitions[i].getFieldFormat() ) );\n        retval.append( \"        \" ).append( XMLHandler.addTagValue( \"currency\", fieldDefinitions[i].getCurrency() ) );\n        retval.append( \"        \" ).append( XMLHandler.addTagValue( \"decimal\", fieldDefinitions[i].getDecimal() ) );\n        retval.append( \"        \" ).append( XMLHandler.addTagValue( \"group\", fieldDefinitions[i].getGroup() ) );\n        retval.append( \"        \" ).append( XMLHandler.addTagValue( \"length\", fieldDefinitions[i].getFieldLength() ) );\n        retval.append( \"        \" ).append( XMLHandler.addTagValue( \"precision\", fieldDefinitions[i]\n            .getFieldPrecision() ) );\n        retval.append( \"        \" ).append( XMLHandler.addTagValue( \"trim_type\", ValueMeta.getTrimTypeCode(\n            fieldDefinitions[i].getTrimType() ) ) );\n\n        retval.append( \"      <\/field>\" ).append( Const.CR );\n      }\n    }\n    retval.append( \"    <\/fields>\" ).append( Const.CR );\n\n    return retval.toString();\n  }","commit_id":"c764d569642043237f3b4695833356c6b2d5a4b4","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void getFields( RowMetaInterface inputRowMeta, String name, RowMetaInterface[] info, StepMeta nextStep,\n    VariableSpace space, Repository repository, IMetaStore metaStore ) throws KettleStepException {\n    // Determine the maximum length...\n    //\n    int length = -1;\n    for ( int i = 0; i < fieldName.length; i++ ) {\n      if ( variableString[i] != null ) {\n        String string = space.environmentSubstitute( variableString[i] );\n        if ( string.length() > length ) {\n          length = string.length();\n        }\n      }\n    }\n\n    RowMetaInterface row = new RowMeta();\n    for ( int i = 0; i < fieldName.length; i++ ) {\n      ValueMetaInterface v = new ValueMeta( fieldName[i], fieldType[i] );\n      if ( fieldLength[i] < 0 ) {\n        v.setLength( length );\n      } else {\n        v.setLength( fieldLength[i] );\n      }\n      if ( fieldPrecision[i] >= 0 ) {\n        v.setPrecision( fieldPrecision[i] );\n      }\n      v.setConversionMask( fieldFormat[i] );\n      v.setGroupingSymbol( group[i] );\n      v.setDecimalSymbol( decimal[i] );\n      v.setCurrencySymbol( currency[i] );\n      v.setTrimType( trimType[i] );\n      v.setOrigin( name );\n\n      row.addValueMeta( v );\n    }\n\n    inputRowMeta.mergeRowMeta( row );\n  }","id":82761,"modified_method":"public void getFields( RowMetaInterface inputRowMeta, String name, RowMetaInterface[] info, StepMeta nextStep,\n      VariableSpace space, Repository repository, IMetaStore metaStore ) throws KettleStepException {\n    // Determine the maximum length...\n    //\n    int length = -1;\n    for ( int i = 0; i < fieldDefinitions.length; i++ ) {\n      String variableString = fieldDefinitions[i].getVariableString();\n      if ( variableString != null ) {\n        String string = space.environmentSubstitute( variableString );\n        if ( string.length() > length ) {\n          length = string.length();\n        }\n      }\n    }\n\n    RowMetaInterface row = new RowMeta();\n    for ( int i = 0; i < fieldDefinitions.length; i++ ) {\n      ValueMetaInterface v = new ValueMeta( fieldDefinitions[i].getFieldName(), fieldDefinitions[i].getFieldType() );\n      int fieldLength = fieldDefinitions[i].getFieldLength();\n      if ( fieldLength < 0 ) {\n        v.setLength( length );\n      } else {\n        v.setLength( fieldLength );\n      }\n      int fieldPrecision = fieldDefinitions[i].getFieldPrecision();\n      if ( fieldPrecision >= 0 ) {\n        v.setPrecision( fieldPrecision );\n      }\n      v.setConversionMask( fieldDefinitions[i].getFieldFormat() );\n      v.setGroupingSymbol( fieldDefinitions[i].getGroup() );\n      v.setDecimalSymbol( fieldDefinitions[i].getDecimal() );\n      v.setCurrencySymbol( fieldDefinitions[i].getCurrency() );\n      v.setTrimType( fieldDefinitions[i].getTrimType() );\n      v.setOrigin( name );\n\n      row.addValueMeta( v );\n    }\n\n    inputRowMeta.mergeRowMeta( row );\n  }","commit_id":"c764d569642043237f3b4695833356c6b2d5a4b4","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"@Test\n  public void test() throws Exception {\n    check( \"FIELDNAME\", new StringGetter() {\n      public String get() {\n        return meta.getFieldName()[0];\n      }\n    } );\n    check( \"VARIABLE\", new StringGetter() {\n      public String get() {\n        return meta.getVariableString()[0];\n      }\n    } );\n    check( \"FIELDTYPE\", new IntGetter() {\n      public int get() {\n        return meta.getFieldType()[0];\n      }\n    } );\n    check( \"FIELDFORMAT\", new StringGetter() {\n      public String get() {\n        return meta.getFieldFormat()[0];\n      }\n    } );\n    check( \"FIELDLENGTH\", new IntGetter() {\n      public int get() {\n        return meta.getFieldLength()[0];\n      }\n    } );\n    check( \"FIELDPRECISION\", new IntGetter() {\n        public int get() {\n          return meta.getFieldPrecision()[0];\n        }\n      } );\n    check( \"CURRENCY\", new StringGetter() {\n        public String get() {\n          return meta.getCurrency()[0];\n        }\n      } );\n    check( \"DECIMAL\", new StringGetter() {\n        public String get() {\n          return meta.getDecimal()[0];\n        }\n      } );\n    check( \"GROUP\", new StringGetter() {\n        public String get() {\n          return meta.getGroup()[0];\n        }\n      } );\n    check( \"TRIMTYPE\", new IntGetter() {\n        public int get() {\n          return meta.getTrimType()[0];\n        }\n      } );\n  }","id":82762,"modified_method":"@Test\n  public void test() throws Exception {\n    check( \"FIELDNAME\", new StringGetter() {\n      public String get() {\n        return meta.getFieldDefinitions()[0].getFieldName();\n      }\n    } );\n    check( \"VARIABLE\", new StringGetter() {\n      public String get() {\n        return meta.getFieldDefinitions()[0].getVariableString();\n      }\n    } );\n    check( \"FIELDTYPE\", new IntGetter() {\n      public int get() {\n        return meta.getFieldDefinitions()[0].getFieldType();\n      }\n    } );\n    check( \"FIELDFORMAT\", new StringGetter() {\n      public String get() {\n        return meta.getFieldDefinitions()[0].getFieldFormat();\n      }\n    } );\n    check( \"FIELDLENGTH\", new IntGetter() {\n      public int get() {\n        return meta.getFieldDefinitions()[0].getFieldLength();\n      }\n    } );\n    check( \"FIELDPRECISION\", new IntGetter() {\n      public int get() {\n        return meta.getFieldDefinitions()[0].getFieldPrecision();\n      }\n    } );\n    check( \"CURRENCY\", new StringGetter() {\n      public String get() {\n        return meta.getFieldDefinitions()[0].getCurrency();\n      }\n    } );\n    check( \"DECIMAL\", new StringGetter() {\n      public String get() {\n        return meta.getFieldDefinitions()[0].getDecimal();\n      }\n    } );\n    check( \"GROUP\", new StringGetter() {\n      public String get() {\n        return meta.getFieldDefinitions()[0].getGroup();\n      }\n    } );\n    check( \"TRIMTYPE\", new IntGetter() {\n      public int get() {\n        return meta.getFieldDefinitions()[0].getTrimType();\n      }\n    } );\n  }","commit_id":"c764d569642043237f3b4695833356c6b2d5a4b4","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"@Before\r\n  public void setUpLoadSave() throws Exception {\r\n    KettleEnvironment.init();\r\n    PluginRegistry.init( true );\r\n    List<String> attributes =\r\n        Arrays.asList( \"fieldName\", \"variableString\", \"fieldFormat\", \"fieldType\", \"fieldLength\", \"fieldPrecision\", \"currency\", \"decimal\", \"group\", \"trimType\" );\r\n\r\n    Map<String, String> getterMap = new HashMap<String, String>() {\r\n      {\r\n        put( \"fieldName\", \"getFieldName\" );\r\n        put( \"variableString\", \"getVariableString\" );\r\n        put( \"fieldFormat\", \"getFieldFormat\" );\r\n        put( \"fieldType\", \"getFieldType\" );\r\n        put( \"fieldLength\", \"getFieldLength\" );\r\n        put( \"fieldPrecision\", \"getFieldPrecision\" );\r\n        put( \"currency\", \"getCurrency\" );\r\n        put( \"decimal\", \"getDecimal\" );\r\n        put( \"group\", \"getGroup\" );\r\n        put( \"trimType\", \"getTrimType\" );\r\n      }\r\n    };\r\n    Map<String, String> setterMap = new HashMap<String, String>() {\r\n      {\r\n        put( \"fieldName\", \"setFieldName\" );\r\n        put( \"variableString\", \"setVariableString\" );\r\n        put( \"fieldFormat\", \"setFieldFormat\" );\r\n        put( \"fieldType\", \"setFieldType\" );\r\n        put( \"fieldLength\", \"setFieldLength\" );\r\n        put( \"fieldPrecision\", \"setFieldPrecision\" );\r\n        put( \"currency\", \"setCurrency\" );\r\n        put( \"decimal\", \"setDecimal\" );\r\n        put( \"group\", \"setGroup\" );\r\n        put( \"trimType\", \"setTrimType\" );\r\n      }\r\n    };\r\n    FieldLoadSaveValidator<String[]> stringArrayLoadSaveValidator =\r\n        new ArrayLoadSaveValidator<String>( new StringLoadSaveValidator(), 5 );\r\n\r\n    Map<String, FieldLoadSaveValidator<?>> attrValidatorMap = new HashMap<String, FieldLoadSaveValidator<?>>();\r\n    attrValidatorMap.put( \"fieldName\", stringArrayLoadSaveValidator );\r\n    attrValidatorMap.put( \"variableString\", stringArrayLoadSaveValidator );\r\n    attrValidatorMap.put( \"fieldFormat\", stringArrayLoadSaveValidator );\r\n    attrValidatorMap.put( \"currency\", stringArrayLoadSaveValidator );\r\n    attrValidatorMap.put( \"decimal\", stringArrayLoadSaveValidator );\r\n    attrValidatorMap.put( \"group\", stringArrayLoadSaveValidator );\r\n    attrValidatorMap.put( \"trimType\", new PrimitiveIntArrayLoadSaveValidator( new IntLoadSaveValidator( ValueMetaBase.getTrimTypeCodes().length ), 5 ) );\r\n    attrValidatorMap.put( \"fieldLength\", new PrimitiveIntArrayLoadSaveValidator( new IntLoadSaveValidator( 100 ), 5 ) );\r\n    attrValidatorMap.put( \"fieldPrecision\", new PrimitiveIntArrayLoadSaveValidator( new IntLoadSaveValidator( 9 ), 5 ) );\r\n    attrValidatorMap.put( \"fieldType\", new PrimitiveIntArrayLoadSaveValidator( new NonZeroIntLoadSaveValidator( 7 ), 5 ) );\r\n\r\n    Map<String, FieldLoadSaveValidator<?>> typeValidatorMap = new HashMap<String, FieldLoadSaveValidator<?>>();\r\n    loadSaveTester =\r\n        new LoadSaveTester( testMetaClass, attributes, new ArrayList<String>(), new ArrayList<String>(),\r\n            getterMap, setterMap, attrValidatorMap, typeValidatorMap, this );\r\n  }","id":82763,"modified_method":"@Before\r\n  public void setUpLoadSave() throws Exception {\r\n    KettleEnvironment.init();\r\n    PluginRegistry.init( true );\r\n    List<String> attributes = Arrays.asList( \"fieldDefinitions\" );\r\n\r\n    Map<String, String> getterMap = new HashMap<String, String>() {\r\n      {\r\n        put( \"fieldDefinitions\", \"getFieldDefinitions\" );\r\n      }\r\n    };\r\n    Map<String, String> setterMap = new HashMap<String, String>() {\r\n      {\r\n        put( \"fieldDefinitions\", \"setFieldDefinitions\" );\r\n      }\r\n    };\r\n\r\n    FieldDefinition fieldDefinition = new FieldDefinition();\r\n    fieldDefinition.setFieldName( \"fieldName\" );\r\n    fieldDefinition.setFieldLength( 4 );\r\n    fieldDefinition.setCurrency( null );\r\n    fieldDefinition.setFieldPrecision( 5 );\r\n    fieldDefinition.setFieldType( ValueMetaInterface.TYPE_NUMBER );\r\n    fieldDefinition.setGroup( \"group\" );\r\n    fieldDefinition.setVariableString( \"variableString\" );\r\n\r\n    FieldLoadSaveValidator<FieldDefinition[]> fieldDefinitionLoadSaveValidator =\r\n        new ArrayLoadSaveValidator<FieldDefinition>( new FieldDefinitionLoadSaveValidator( fieldDefinition ), 5 );\r\n\r\n    Map<String, FieldLoadSaveValidator<?>> attrValidatorMap = new HashMap<String, FieldLoadSaveValidator<?>>();\r\n    attrValidatorMap.put( \"fieldName\", fieldDefinitionLoadSaveValidator );\r\n\r\n    Map<String, FieldLoadSaveValidator<?>> typeValidatorMap = new HashMap<String, FieldLoadSaveValidator<?>>();\r\n    typeValidatorMap.put( FieldDefinition[].class.getCanonicalName(), fieldDefinitionLoadSaveValidator );\r\n\r\n    loadSaveTester =\r\n        new LoadSaveTester( testMetaClass, attributes, Collections.emptyList(), Collections.emptyList(), getterMap,\r\n            setterMap, attrValidatorMap, typeValidatorMap, this );\r\n  }","commit_id":"c764d569642043237f3b4695833356c6b2d5a4b4","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"@Test\n    @Transactional\n    public void testInterfaceFilter(){\n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(new AlarmCriteria(new InterfaceFilter(\"192.168.1.1\")));\n        assertEquals(1, alarms.length);\n        \n        alarms = m_jdbcWebAlarmRepo.getMatchingAlarms(new AlarmCriteria(new InterfaceFilter(\"192.168.1.1\")));\n        assertEquals(1, alarms.length);\n    }","id":82764,"modified_method":"@Test\n    @Transactional\n    public void testInterfaceFilter(){\n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(new AlarmCriteria(new InterfaceFilter(\"192.168.1.1\")));\n        assertEquals(1, alarms.length);\n    }","commit_id":"fa5cf4c2bdca60d2e865ffd40c1c2d3d8f35b826","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @Transactional\n    public void testNegativeServiceFilter(){\n        AlarmCriteria criteria = getCriteria(new NegativeServiceFilter(12, null));\n        \n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(1, alarms.length);\n        \n        alarms = m_jdbcWebAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(1, alarms.length);\n    }","id":82765,"modified_method":"@Test\n    @Transactional\n    public void testNegativeServiceFilter(){\n        AlarmCriteria criteria = getCriteria(new NegativeServiceFilter(12, null));\n        \n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(1, alarms.length);\n    }","commit_id":"fa5cf4c2bdca60d2e865ffd40c1c2d3d8f35b826","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @Transactional\n    public void testExactUeiFilter(){\n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(new AlarmCriteria(new ExactUEIFilter(\"test uei\")));\n        assertEquals(0, alarms.length);\n        \n        alarms = m_daoAlarmRepo.getMatchingAlarms(new AlarmCriteria(new ExactUEIFilter(\"uei.opennms.org/test\")));\n        assertEquals(1, alarms.length);\n        \n        alarms = m_jdbcWebAlarmRepo.getMatchingAlarms(new AlarmCriteria(new ExactUEIFilter(\"test uei\")));\n        assertEquals(0, alarms.length);\n        \n        alarms = m_jdbcWebAlarmRepo.getMatchingAlarms(new AlarmCriteria(new ExactUEIFilter(\"uei.opennms.org/test\")));\n        assertEquals(1, alarms.length);\n    }","id":82766,"modified_method":"@Test\n    @Transactional\n    public void testExactUeiFilter(){\n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(new AlarmCriteria(new ExactUEIFilter(\"test uei\")));\n        assertEquals(0, alarms.length);\n        \n        alarms = m_daoAlarmRepo.getMatchingAlarms(new AlarmCriteria(new ExactUEIFilter(\"uei.opennms.org/test\")));\n        assertEquals(1, alarms.length);\n    }","commit_id":"fa5cf4c2bdca60d2e865ffd40c1c2d3d8f35b826","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @Transactional\n    public void testNodeNameLikeFilter(){\n        AlarmCriteria criteria = getCriteria(new NodeNameLikeFilter(\"mr\"));\n        \n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(0, alarms.length);\n        \n        alarms = m_jdbcWebAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(0, alarms.length);\n    }","id":82767,"modified_method":"@Test\n    @Transactional\n    public void testNodeNameLikeFilter(){\n        AlarmCriteria criteria = getCriteria(new NodeNameLikeFilter(\"mr\"));\n        \n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(0, alarms.length);\n    }","commit_id":"fa5cf4c2bdca60d2e865ffd40c1c2d3d8f35b826","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @Transactional\n    public void testSeverityBetweenFilter(){\n        AlarmCriteria criteria = getCriteria(new SeverityBetweenFilter(OnmsSeverity.CLEARED, OnmsSeverity.MAJOR));\n        \n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(1, alarms.length);\n        \n        alarms = m_jdbcWebAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(1, alarms.length);\n    }","id":82768,"modified_method":"@Test\n    @Transactional\n    public void testSeverityBetweenFilter(){\n        AlarmCriteria criteria = getCriteria(new SeverityBetweenFilter(OnmsSeverity.CLEARED, OnmsSeverity.MAJOR));\n        \n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(1, alarms.length);\n    }","commit_id":"fa5cf4c2bdca60d2e865ffd40c1c2d3d8f35b826","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @Transactional\n    public void testAfterFirstEventTime(){\n        AlarmCriteria criteria = getCriteria(new AfterFirstEventTimeFilter(new Date()));\n        \n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(0, alarms.length);\n        \n        alarms = m_jdbcWebAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(0, alarms.length);\n    }","id":82769,"modified_method":"@Test\n    @Transactional\n    public void testAfterFirstEventTime(){\n        AlarmCriteria criteria = getCriteria(new AfterFirstEventTimeFilter(new Date()));\n        \n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(0, alarms.length);\n    }","commit_id":"fa5cf4c2bdca60d2e865ffd40c1c2d3d8f35b826","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @Transactional\n    public void testNegativeNodeFilter(){\n        AlarmCriteria criteria = getCriteria(new NegativeNodeFilter(11, m_appContext));\n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(1, alarms.length);\n        \n        alarms = m_jdbcWebAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(1, alarms.length);\n        \n        NegativeNodeFilter filter = new NegativeNodeFilter(11, m_appContext);\n        assertEquals(\"node is not 11\", filter.getTextDescription());\n    }","id":82770,"modified_method":"@Test\n    @Transactional\n    public void testNegativeNodeFilter(){\n        AlarmCriteria criteria = getCriteria(new NegativeNodeFilter(11, m_appContext));\n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(1, alarms.length);\n        \n        NegativeNodeFilter filter = new NegativeNodeFilter(11, m_appContext);\n        assertEquals(\"node is not 11\", filter.getTextDescription());\n    }","commit_id":"fa5cf4c2bdca60d2e865ffd40c1c2d3d8f35b826","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @Transactional\n    public void testLogMessageMatchAnyFilter(){\n        AlarmCriteria criteria = getCriteria(new LogMessageMatchesAnyFilter(\"log\"));\n        \n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(1, alarms.length);\n        \n        alarms = m_jdbcWebAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(1, alarms.length);\n    }","id":82771,"modified_method":"@Test\n    @Transactional\n    public void testLogMessageMatchAnyFilter(){\n        AlarmCriteria criteria = getCriteria(new LogMessageMatchesAnyFilter(\"log\"));\n        \n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(1, alarms.length);\n    }","commit_id":"fa5cf4c2bdca60d2e865ffd40c1c2d3d8f35b826","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @Transactional\n    public void testIPLikeFilter(){\n        AlarmCriteria criteria = new AlarmCriteria(new IPAddrLikeFilter(\"192.168.1.1\"));\n        \n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(1, alarms.length);\n        assertEquals(\"192.168.1.1\", alarms[0].getIpAddress());\n        \n        alarms = m_jdbcWebAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(1, alarms.length);\n        assertEquals(\"192.168.1.1\", alarms[0].getIpAddress());\n        \n    }","id":82772,"modified_method":"@Test\n    @Transactional\n    public void testIPLikeFilter(){\n        AlarmCriteria criteria = new AlarmCriteria(new IPAddrLikeFilter(\"192.168.1.1\"));\n        \n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(1, alarms.length);\n        assertEquals(\"192.168.1.1\", alarms[0].getIpAddress());\n    }","commit_id":"fa5cf4c2bdca60d2e865ffd40c1c2d3d8f35b826","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @Transactional\n    public void testServiceFilter(){\n        AlarmCriteria criteria = getCriteria(new ServiceFilter(1, null));\n        \n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(0, alarms.length);\n        \n        alarms = m_jdbcWebAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(0, alarms.length);\n    }","id":82773,"modified_method":"@Test\n    @Transactional\n    public void testServiceFilter(){\n        AlarmCriteria criteria = getCriteria(new ServiceFilter(1, null));\n        \n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(0, alarms.length);\n    }","commit_id":"fa5cf4c2bdca60d2e865ffd40c1c2d3d8f35b826","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @Transactional\n    public void testBeforeFirstEventTimeFilter(){\n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(new AlarmCriteria(new BeforeFirstEventTimeFilter(new Date())));\n        assertEquals(1, alarms.length);\n        \n        alarms = m_jdbcWebAlarmRepo.getMatchingAlarms(new AlarmCriteria(new BeforeFirstEventTimeFilter(new Date())));\n        assertEquals(1, alarms.length);\n        \n        alarms = m_daoAlarmRepo.getMatchingAlarms(new AlarmCriteria(new BeforeLastEventTimeFilter(new Date())));\n        assertEquals(1, alarms.length);\n        \n        alarms = m_jdbcWebAlarmRepo.getMatchingAlarms(new AlarmCriteria(new BeforeLastEventTimeFilter(new Date())));\n        assertEquals(1, alarms.length);\n    }","id":82774,"modified_method":"@Test\n    @Transactional\n    public void testBeforeFirstEventTimeFilter(){\n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(new AlarmCriteria(new BeforeFirstEventTimeFilter(new Date())));\n        assertEquals(1, alarms.length);\n        \n        alarms = m_daoAlarmRepo.getMatchingAlarms(new AlarmCriteria(new BeforeLastEventTimeFilter(new Date())));\n        assertEquals(1, alarms.length);\n    }","commit_id":"fa5cf4c2bdca60d2e865ffd40c1c2d3d8f35b826","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @Transactional\n    public void testNegativePartialUEIFilter(){\n        AlarmCriteria criteria = getCriteria(new NegativePartialUEIFilter(\"uei.opennms.org\"));\n        \n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(0, alarms.length);\n        \n        alarms = m_jdbcWebAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(0, alarms.length);\n    }","id":82775,"modified_method":"@Test\n    @Transactional\n    public void testNegativePartialUEIFilter(){\n        AlarmCriteria criteria = getCriteria(new NegativePartialUEIFilter(\"uei.opennms.org\"));\n        \n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(0, alarms.length);\n    }","commit_id":"fa5cf4c2bdca60d2e865ffd40c1c2d3d8f35b826","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @Transactional\n    public void testNegativeInterfaceFilter(){\n        AlarmCriteria criteria = new AlarmCriteria(new NegativeInterfaceFilter(\"192.168.1.101\"));\n        \n        Alarm[] alarms = m_jdbcWebAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(1, alarms.length);\n        \n        alarms = m_daoAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(1, alarms.length);\n    }","id":82776,"modified_method":"@Test\n    @Transactional\n    public void testNegativeInterfaceFilter(){\n        AlarmCriteria criteria = new AlarmCriteria(new NegativeInterfaceFilter(\"192.168.1.101\"));\n        \n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(1, alarms.length);\n    }","commit_id":"fa5cf4c2bdca60d2e865ffd40c1c2d3d8f35b826","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @Transactional\n    public void testNegativeSeverityFilter(){\n        AlarmCriteria criteria = getCriteria(new NegativeSeverityFilter(OnmsSeverity.CRITICAL));\n        \n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(1, alarms.length);\n        \n        alarms = m_jdbcWebAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(1, alarms.length);\n    }","id":82777,"modified_method":"@Test\n    @Transactional\n    public void testNegativeSeverityFilter(){\n        AlarmCriteria criteria = getCriteria(new NegativeSeverityFilter(OnmsSeverity.CRITICAL));\n        \n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(1, alarms.length);\n    }","commit_id":"fa5cf4c2bdca60d2e865ffd40c1c2d3d8f35b826","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @Transactional\n    public void testBeforeLastEventTime(){\n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(new AlarmCriteria(new BeforeLastEventTimeFilter(new Date())));\n        assertEquals(1, alarms.length);\n        \n        alarms = m_jdbcWebAlarmRepo.getMatchingAlarms(new AlarmCriteria(new BeforeLastEventTimeFilter(new Date())));\n        assertEquals(1, alarms.length);\n    }","id":82778,"modified_method":"@Test\n    @Transactional\n    public void testBeforeLastEventTime(){\n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(new AlarmCriteria(new BeforeLastEventTimeFilter(new Date())));\n        assertEquals(1, alarms.length);\n    }","commit_id":"fa5cf4c2bdca60d2e865ffd40c1c2d3d8f35b826","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @Transactional\n    public void testAlarmTypeFilter(){\n        Alarm[] alarm = m_daoAlarmRepo.getMatchingAlarms(new AlarmCriteria(new AlarmTypeFilter(3)));\n        assertEquals(0, alarm.length);\n        \n        alarm = m_jdbcWebAlarmRepo.getMatchingAlarms(new AlarmCriteria(new AlarmTypeFilter(3)));\n        assertEquals(0, alarm.length);\n        \n        alarm = m_daoAlarmRepo.getMatchingAlarms(new AlarmCriteria(new AlarmTypeFilter(1)));\n        assertEquals(1, alarm.length);\n        \n        alarm = m_jdbcWebAlarmRepo.getMatchingAlarms(new AlarmCriteria(new AlarmTypeFilter(1)));\n        assertEquals(1, alarm.length);\n    }","id":82779,"modified_method":"@Test\n    @Transactional\n    public void testAlarmTypeFilter(){\n        Alarm[] alarm = m_daoAlarmRepo.getMatchingAlarms(new AlarmCriteria(new AlarmTypeFilter(3)));\n        assertEquals(0, alarm.length);\n        \n        alarm = m_daoAlarmRepo.getMatchingAlarms(new AlarmCriteria(new AlarmTypeFilter(1)));\n        assertEquals(1, alarm.length);\n    }","commit_id":"fa5cf4c2bdca60d2e865ffd40c1c2d3d8f35b826","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @Transactional\n    public void testNegativeAcknowledgeByFilter(){\n        AlarmCriteria criteria = new AlarmCriteria(new NegativeAcknowledgedByFilter(\"non user\"));\n        \n        Alarm[] alarms = m_jdbcWebAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(1, alarms.length);\n        \n        alarms = m_daoAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(1, alarms.length);\n    }","id":82780,"modified_method":"@Test\n    @Transactional\n    public void testNegativeAcknowledgeByFilter(){\n        AlarmCriteria criteria = new AlarmCriteria(new NegativeAcknowledgedByFilter(\"non user\"));\n        \n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(1, alarms.length);\n    }","commit_id":"fa5cf4c2bdca60d2e865ffd40c1c2d3d8f35b826","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @Transactional\n    public void testNegativeExactUeiFilter(){\n        AlarmCriteria criteria = getCriteria(new NegativeExactUEIFilter(\"uei.opennms.org/bogus\"));\n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(1, alarms.length);\n        \n        alarms = m_jdbcWebAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(1, alarms.length);\n    }","id":82781,"modified_method":"@Test\n    @Transactional\n    public void testNegativeExactUeiFilter(){\n        AlarmCriteria criteria = getCriteria(new NegativeExactUEIFilter(\"uei.opennms.org/bogus\"));\n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(1, alarms.length);\n    }","commit_id":"fa5cf4c2bdca60d2e865ffd40c1c2d3d8f35b826","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @JUnitTemporaryDatabase // Relies on specific IDs so we need a fresh database\n    public void testAlarmIdFilter(){\n        AlarmIdFilter filter = new AlarmIdFilter(1);\n        \n        Event[] events = getMatchingDaoEvents(filter);\n        assertEquals(1, events.length);\n        \n        events = getMatchingJdbcEvents(filter);\n        assertEquals(1, events.length);\n    }","id":82782,"modified_method":"@Test\n    @JUnitTemporaryDatabase // Relies on specific IDs so we need a fresh database\n    public void testAlarmIdFilter(){\n        AlarmIdFilter filter = new AlarmIdFilter(1);\n        \n        Event[] events = getMatchingDaoEvents(filter);\n        assertEquals(1, events.length);\n    }","commit_id":"fa5cf4c2bdca60d2e865ffd40c1c2d3d8f35b826","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @Transactional\n    public void testNegativeInterfaceFilter(){\n        NegativeInterfaceFilter filter = new NegativeInterfaceFilter(\"192.168.1.1\");\n        \n        Event[] events = getMatchingDaoEvents(filter);\n        assertEquals(1, events.length);\n        \n        events = getMatchingJdbcEvents(filter);\n        assertEquals(1, events.length);\n        \n        filter = new NegativeInterfaceFilter(\"27.0.0.1\");\n        \n        events = getMatchingDaoEvents(filter);\n        assertEquals(2, events.length);\n        \n        events = getMatchingJdbcEvents(filter);\n        assertEquals(2, events.length);\n    }","id":82783,"modified_method":"@Test\n    @Transactional\n    public void testNegativeInterfaceFilter(){\n        NegativeInterfaceFilter filter = new NegativeInterfaceFilter(\"192.168.1.1\");\n        \n        Event[] events = getMatchingDaoEvents(filter);\n        assertEquals(1, events.length);\n        \n        filter = new NegativeInterfaceFilter(\"27.0.0.1\");\n        \n        events = getMatchingDaoEvents(filter);\n        assertEquals(2, events.length);\n    }","commit_id":"fa5cf4c2bdca60d2e865ffd40c1c2d3d8f35b826","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @Transactional\n    public void testIfIndexFilter(){\n        IfIndexFilter filter = new IfIndexFilter(11);\n        \n        Event[] events = getMatchingDaoEvents(filter);\n        assertEquals(1, events.length);\n        \n        events = getMatchingJdbcEvents(filter);\n        assertEquals(1, events.length);\n        \n        events = getMatchingDaoEvents(new IfIndexFilter(1));\n        assertEquals(0, events.length);\n        \n        events = getMatchingJdbcEvents(new IfIndexFilter(1));\n        assertEquals(0, events.length);\n    }","id":82784,"modified_method":"@Test\n    @Transactional\n    public void testIfIndexFilter(){\n        IfIndexFilter filter = new IfIndexFilter(11);\n        \n        Event[] events = getMatchingDaoEvents(filter);\n        assertEquals(1, events.length);\n        \n        events = getMatchingDaoEvents(new IfIndexFilter(1));\n        assertEquals(0, events.length);\n    }","commit_id":"fa5cf4c2bdca60d2e865ffd40c1c2d3d8f35b826","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @Transactional\n    public void testExactUEIFilter(){\n        ExactUEIFilter filter = new ExactUEIFilter(\"uei.opennms.org/test2\");\n        \n        Event[] events = getMatchingDaoEvents(filter);\n        assertEquals(1, events.length);\n        assertEquals(\"uei.opennms.org/test2\", events[0].getUei());\n        \n        events = getMatchingJdbcEvents(new ExactUEIFilter(\"uei.opennms.org/test\"));\n        assertEquals(1, events.length);\n        assertEquals(\"uei.opennms.org/test\", events[0].getUei());\n    }","id":82785,"modified_method":"@Test\n    @Transactional\n    public void testExactUEIFilter(){\n        ExactUEIFilter filter = new ExactUEIFilter(\"uei.opennms.org/test2\");\n        \n        Event[] events = getMatchingDaoEvents(filter);\n        assertEquals(1, events.length);\n        assertEquals(\"uei.opennms.org/test2\", events[0].getUei());\n    }","commit_id":"fa5cf4c2bdca60d2e865ffd40c1c2d3d8f35b826","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @Transactional\n    public void testAfterDateFilter(){\n        AfterDateFilter filter = new AfterDateFilter(yesterday());\n        \n        Event[] events = getMatchingDaoEvents(filter);\n        assertEquals(2, events.length);\n        \n        events = getMatchingJdbcEvents(filter);\n        assertEquals(2, events.length);\n    }","id":82786,"modified_method":"@Test\n    @Transactional\n    public void testAfterDateFilter(){\n        AfterDateFilter filter = new AfterDateFilter(yesterday());\n        \n        Event[] events = getMatchingDaoEvents(filter);\n        assertEquals(2, events.length);\n    }","commit_id":"fa5cf4c2bdca60d2e865ffd40c1c2d3d8f35b826","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @Transactional\n    public void testLogMessageSubstringFilter(){\n        LogMessageSubstringFilter filter = new LogMessageSubstringFilter(\"is a test\");\n        \n        Event[] events = getMatchingDaoEvents(filter);\n        assertEquals(1, events.length);\n        \n        events = getMatchingJdbcEvents(filter);\n        assertEquals(1, events.length);\n    }","id":82787,"modified_method":"@Test\n    @Transactional\n    public void testLogMessageSubstringFilter(){\n        LogMessageSubstringFilter filter = new LogMessageSubstringFilter(\"is a test\");\n        \n        Event[] events = getMatchingDaoEvents(filter);\n        assertEquals(1, events.length);\n    }","commit_id":"fa5cf4c2bdca60d2e865ffd40c1c2d3d8f35b826","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @Transactional\n    public void testDescriptionSubstringFilterTest(){\n        DescriptionSubstringFilter filter = new DescriptionSubstringFilter(\"test event\");\n        \n        Event[] events = getMatchingDaoEvents(filter);\n        assertEquals(1, events.length);\n        assertEquals(\"This is a test event\", events[0].getDescription());\n        \n        events = getMatchingJdbcEvents(filter);\n        assertEquals(1, events.length);\n        assertEquals(\"This is a test event\", events[0].getDescription());\n    }","id":82788,"modified_method":"@Test\n    @Transactional\n    public void testDescriptionSubstringFilterTest(){\n        DescriptionSubstringFilter filter = new DescriptionSubstringFilter(\"test event\");\n        \n        Event[] events = getMatchingDaoEvents(filter);\n        assertEquals(1, events.length);\n        assertEquals(\"This is a test event\", events[0].getDescription());\n    }","commit_id":"fa5cf4c2bdca60d2e865ffd40c1c2d3d8f35b826","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @JUnitTemporaryDatabase // Relies on specific IDs so we need a fresh database\n    public void testServiceFilter(){\n        ServiceFilter filter = new ServiceFilter(2, m_appContext);\n        \n        Event[] events = getMatchingDaoEvents(filter);\n        assertEquals(0, events.length);\n        \n        events = getMatchingJdbcEvents(filter);\n        assertEquals(0, events.length);\n        \n        filter = new ServiceFilter(1, m_appContext);\n        \n        events = getMatchingDaoEvents(filter);\n        assertEquals(1, events.length);\n        \n        events = getMatchingJdbcEvents(filter);\n        assertEquals(1, events.length);\n    }","id":82789,"modified_method":"@Test\n    @JUnitTemporaryDatabase // Relies on specific IDs so we need a fresh database\n    public void testServiceFilter(){\n        ServiceFilter filter = new ServiceFilter(2, m_appContext);\n        \n        Event[] events = getMatchingDaoEvents(filter);\n        assertEquals(0, events.length);\n        \n        filter = new ServiceFilter(1, m_appContext);\n        \n        events = getMatchingDaoEvents(filter);\n        assertEquals(1, events.length);\n    }","commit_id":"fa5cf4c2bdca60d2e865ffd40c1c2d3d8f35b826","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @Transactional\n    public void testLogMessageMatchesAny(){\n        LogMessageMatchesAnyFilter filter = new LogMessageMatchesAnyFilter(\"This is a\");\n        \n        Event[] events = getMatchingDaoEvents(filter);\n        assertEquals(1, events.length);\n        \n        events = null;\n        \n        events = getMatchingJdbcEvents(filter);\n        assertEquals(1, events.length);\n    }","id":82790,"modified_method":"@Test\n    @Transactional\n    public void testLogMessageMatchesAny(){\n        LogMessageMatchesAnyFilter filter = new LogMessageMatchesAnyFilter(\"This is a\");\n        \n        Event[] events = getMatchingDaoEvents(filter);\n        assertEquals(1, events.length);\n    }","commit_id":"fa5cf4c2bdca60d2e865ffd40c1c2d3d8f35b826","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @Transactional\n    public void testNegativeExactUeiFilter(){\n        NegativeExactUEIFilter filter = new NegativeExactUEIFilter(\"uei.opennms.org/test2\");\n        \n        Event[] events = getMatchingDaoEvents(filter);\n        assertEquals(1, events.length);\n        \n        events = getMatchingJdbcEvents(filter);\n        assertEquals(1, events.length);\n        \n        filter = new NegativeExactUEIFilter(\"uei.opennms.org/nontest\");\n        \n        events = getMatchingDaoEvents(filter);\n        assertEquals(2, events.length);\n        \n        events = getMatchingJdbcEvents(filter);\n        assertEquals(2, events.length);\n    }","id":82791,"modified_method":"@Test\n    @Transactional\n    public void testNegativeExactUeiFilter(){\n        NegativeExactUEIFilter filter = new NegativeExactUEIFilter(\"uei.opennms.org/test2\");\n        \n        Event[] events = getMatchingDaoEvents(filter);\n        assertEquals(1, events.length);\n        \n        filter = new NegativeExactUEIFilter(\"uei.opennms.org/nontest\");\n        \n        events = getMatchingDaoEvents(filter);\n        assertEquals(2, events.length);\n    }","commit_id":"fa5cf4c2bdca60d2e865ffd40c1c2d3d8f35b826","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @Transactional\n    public void testNodeNameLikeFilter(){\n        NodeNameLikeFilter filter = new NodeNameLikeFilter(\"node1\");\n        \n        Event[] events = getMatchingDaoEvents(filter);\n        assertEquals(1, events.length);\n        \n        events = getMatchingJdbcEvents(filter);\n        assertEquals(1, events.length);\n        \n        filter = new NodeNameLikeFilter(\"testNode\");\n        \n        events = getMatchingDaoEvents(filter);\n        assertEquals(0, events.length);\n        \n        events = getMatchingJdbcEvents(filter);\n        assertEquals(0, events.length);\n        \n    }","id":82792,"modified_method":"@Test\n    @Transactional\n    public void testNodeNameLikeFilter(){\n        NodeNameLikeFilter filter = new NodeNameLikeFilter(\"node1\");\n        \n        Event[] events = getMatchingDaoEvents(filter);\n        assertEquals(1, events.length);\n        \n        filter = new NodeNameLikeFilter(\"testNode\");\n        \n        events = getMatchingDaoEvents(filter);\n        assertEquals(0, events.length);\n    }","commit_id":"fa5cf4c2bdca60d2e865ffd40c1c2d3d8f35b826","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @Transactional\n    public void testSeverityFilter(){\n        SeverityFilter filter = new SeverityFilter(OnmsSeverity.CLEARED.getId());\n        \n        Event[] events = getMatchingDaoEvents(filter);\n        assertEquals(1, events.length);\n        \n        events = getMatchingJdbcEvents(filter);\n        assertEquals(1, events.length);\n        \n        filter = new SeverityFilter(OnmsSeverity.MAJOR.getId());\n        \n        events = getMatchingDaoEvents(filter);\n        assertEquals(0, events.length);\n        \n        events = getMatchingJdbcEvents(filter);\n        assertEquals(0, events.length);\n    }","id":82793,"modified_method":"@Test\n    @Transactional\n    public void testSeverityFilter(){\n        SeverityFilter filter = new SeverityFilter(OnmsSeverity.CLEARED.getId());\n        \n        Event[] events = getMatchingDaoEvents(filter);\n        assertEquals(1, events.length);\n        \n        filter = new SeverityFilter(OnmsSeverity.MAJOR.getId());\n        \n        events = getMatchingDaoEvents(filter);\n        assertEquals(0, events.length);\n    }","commit_id":"fa5cf4c2bdca60d2e865ffd40c1c2d3d8f35b826","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @Transactional\n    public void testBeforeDateFilter(){\n        BeforeDateFilter filter = new BeforeDateFilter(new Date());\n        \n        Event[] events = getMatchingDaoEvents(filter);\n        assertEquals(2, events.length);\n        \n        events = getMatchingJdbcEvents(filter);\n        assertEquals(2, events.length);\n    }","id":82794,"modified_method":"@Test\n    @Transactional\n    public void testBeforeDateFilter(){\n        BeforeDateFilter filter = new BeforeDateFilter(new Date());\n        \n        Event[] events = getMatchingDaoEvents(filter);\n        assertEquals(2, events.length);\n    }","commit_id":"fa5cf4c2bdca60d2e865ffd40c1c2d3d8f35b826","url":"https://github.com/OpenNMS/opennms"},{"original_method":"private void assert1Result(Filter filter){\n        EventCriteria criteria = new EventCriteria(filter);\n        \n        Event[] events = m_jdbcEventRepo.getMatchingEvents(criteria);\n        assertEquals(1, events.length);\n        \n        events = m_daoEventRepo.getMatchingEvents(criteria);\n        assertEquals(1, events.length);\n    }","id":82795,"modified_method":"private void assert1Result(Filter filter){\n        EventCriteria criteria = new EventCriteria(filter);\n        \n        Event[] events = m_daoEventRepo.getMatchingEvents(criteria);\n        assertEquals(1, events.length);\n    }","commit_id":"fa5cf4c2bdca60d2e865ffd40c1c2d3d8f35b826","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @Transactional\n    public void testNegativePartialUeiFilter(){\n        NegativePartialUEIFilter filter = new NegativePartialUEIFilter(\"uei.opennms.org\");\n        \n        Event[] events = getMatchingDaoEvents(filter);\n        assertEquals(0, events.length);\n        \n        events = getMatchingJdbcEvents(filter);\n        assertEquals(0, events.length);\n        \n        filter = new NegativePartialUEIFilter(\"puei.org.opennms\");\n        \n        events = getMatchingDaoEvents(filter);\n        assertEquals(2, events.length);\n        \n        events = getMatchingJdbcEvents(filter);\n        assertEquals(2, events.length);\n    }","id":82796,"modified_method":"@Test\n    @Transactional\n    public void testNegativePartialUeiFilter(){\n        NegativePartialUEIFilter filter = new NegativePartialUEIFilter(\"uei.opennms.org\");\n        \n        Event[] events = getMatchingDaoEvents(filter);\n        assertEquals(0, events.length);\n        \n        filter = new NegativePartialUEIFilter(\"puei.org.opennms\");\n        \n        events = getMatchingDaoEvents(filter);\n        assertEquals(2, events.length);\n    }","commit_id":"fa5cf4c2bdca60d2e865ffd40c1c2d3d8f35b826","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @JUnitTemporaryDatabase // Relies on specific IDs so we need a fresh database\n    public void testAcknowledgeByFilter(){\n        AcknowledgedByFilter filter = new AcknowledgedByFilter(\"TestUser\");\n        EventCriteria criteria = new EventCriteria(filter);\n        \n        Event[] events = m_daoEventRepo.getMatchingEvents(criteria);\n        assertEquals(0, events.length);\n        \n        m_daoEventRepo.acknowledgeMatchingEvents(\"TestUser\", new Date(), new EventCriteria(new EventIdFilter(1)));\n        \n        events = m_daoEventRepo.getMatchingEvents(criteria);\n        assertEquals(1, events.length);\n        assertEquals(\"TestUser\", events[0].getAcknowledgeUser());\n        \n        m_daoEventRepo.unacknowledgeAll();\n        \n        events = m_jdbcEventRepo.getMatchingEvents(criteria);\n        assertEquals(0, events.length);\n        \n        m_daoEventRepo.acknowledgeAll(\"TestUser\", new Date());\n        events = m_jdbcEventRepo.getMatchingEvents(criteria);\n        assertEquals(2, events.length);\n        \n    }","id":82797,"modified_method":"@Test\n    @JUnitTemporaryDatabase // Relies on specific IDs so we need a fresh database\n    public void testAcknowledgeByFilter(){\n        AcknowledgedByFilter filter = new AcknowledgedByFilter(\"TestUser\");\n        EventCriteria criteria = new EventCriteria(filter);\n        \n        Event[] events = m_daoEventRepo.getMatchingEvents(criteria);\n        assertEquals(0, events.length);\n        \n        m_daoEventRepo.acknowledgeMatchingEvents(\"TestUser\", new Date(), new EventCriteria(new EventIdFilter(1)));\n        \n        events = m_daoEventRepo.getMatchingEvents(criteria);\n        assertEquals(1, events.length);\n        assertEquals(\"TestUser\", events[0].getAcknowledgeUser());\n        \n        m_daoEventRepo.unacknowledgeAll();\n    }","commit_id":"fa5cf4c2bdca60d2e865ffd40c1c2d3d8f35b826","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @Transactional\n    public void testNegativeSeverityFilter(){\n        NegativeSeverityFilter filter = new NegativeSeverityFilter(OnmsSeverity.CRITICAL.getId());\n        \n        Event[] events = getMatchingDaoEvents(filter);\n        assertEquals(2, events.length);\n        \n        events = getMatchingJdbcEvents(filter);\n        assertEquals(2, events.length);\n        \n        filter = new NegativeSeverityFilter(OnmsSeverity.CLEARED.getId());\n        \n        events = getMatchingDaoEvents(filter);\n        assertEquals(1, events.length);\n        \n        events = getMatchingJdbcEvents(filter);\n        assertEquals(1, events.length);\n    }","id":82798,"modified_method":"@Test\n    @Transactional\n    public void testNegativeSeverityFilter(){\n        NegativeSeverityFilter filter = new NegativeSeverityFilter(OnmsSeverity.CRITICAL.getId());\n        \n        Event[] events = getMatchingDaoEvents(filter);\n        assertEquals(2, events.length);\n        \n        filter = new NegativeSeverityFilter(OnmsSeverity.CLEARED.getId());\n        \n        events = getMatchingDaoEvents(filter);\n        assertEquals(1, events.length);\n    }","commit_id":"fa5cf4c2bdca60d2e865ffd40c1c2d3d8f35b826","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @JUnitTemporaryDatabase // Relies on specific IDs so we need a fresh database\n    public void testNegativeServiceFilter(){\n        NegativeServiceFilter filter = new NegativeServiceFilter(1, m_appContext);\n        \n        Event[] events = getMatchingDaoEvents(filter);\n        assertEquals(1, events.length);\n        \n        events = getMatchingJdbcEvents(filter);\n        assertEquals(1, events.length);\n        \n        filter = new NegativeServiceFilter(2, m_appContext);\n        \n        events = getMatchingDaoEvents(filter);\n        assertEquals(2, events.length);\n        \n        events = getMatchingJdbcEvents(filter);\n        assertEquals(2, events.length);\n    }","id":82799,"modified_method":"@Test\n    @JUnitTemporaryDatabase // Relies on specific IDs so we need a fresh database\n    public void testNegativeServiceFilter(){\n        NegativeServiceFilter filter = new NegativeServiceFilter(1, m_appContext);\n        \n        Event[] events = getMatchingDaoEvents(filter);\n        assertEquals(1, events.length);\n        \n        filter = new NegativeServiceFilter(2, m_appContext);\n        \n        events = getMatchingDaoEvents(filter);\n        assertEquals(2, events.length);\n    }","commit_id":"fa5cf4c2bdca60d2e865ffd40c1c2d3d8f35b826","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @Transactional\n    public void testIpAddrLikeFilter(){\n        IPAddrLikeFilter filter = new IPAddrLikeFilter(\"192.168.*.*\");\n        \n        Event[] events = getMatchingDaoEvents(filter);\n        assertEquals(1, events.length);\n        \n        events = getMatchingJdbcEvents(filter);\n        assertEquals(1, events.length);\n        \n        filter = new IPAddrLikeFilter(\"193.168\");\n        events = getMatchingDaoEvents(filter);\n        assertEquals(0, events.length);\n        \n        events = getMatchingJdbcEvents(filter);\n        assertEquals(0, events.length);\n    }","id":82800,"modified_method":"@Test\n    @Transactional\n    public void testIpAddrLikeFilter(){\n        IPAddrLikeFilter filter = new IPAddrLikeFilter(\"192.168.*.*\");\n        \n        Event[] events = getMatchingDaoEvents(filter);\n        assertEquals(1, events.length);\n        \n        filter = new IPAddrLikeFilter(\"193.168\");\n        events = getMatchingDaoEvents(filter);\n        assertEquals(0, events.length);\n    }","commit_id":"fa5cf4c2bdca60d2e865ffd40c1c2d3d8f35b826","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @Transactional\n    public void testInterfaceFilter(){\n        InterfaceFilter filter = new InterfaceFilter(\"192.168.1.1\");\n        \n        Event[] events = getMatchingDaoEvents(filter);\n        assertEquals(1, events.length);\n        assertEquals(\"192.168.1.1\", events[0].getIpAddress());\n        \n        events = getMatchingJdbcEvents(filter);\n        assertEquals(1, events.length);\n        assertEquals(\"192.168.1.1\", events[0].getIpAddress());\n        \n    }","id":82801,"modified_method":"@Test\n    @Transactional\n    public void testInterfaceFilter(){\n        InterfaceFilter filter = new InterfaceFilter(\"192.168.1.1\");\n        \n        Event[] events = getMatchingDaoEvents(filter);\n        assertEquals(1, events.length);\n        assertEquals(\"192.168.1.1\", events[0].getIpAddress());\n    }","commit_id":"fa5cf4c2bdca60d2e865ffd40c1c2d3d8f35b826","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @Transactional\n    public void testNegativeNodeFilter(){\n        NegativeNodeFilter filter = new NegativeNodeFilter(m_dbPopulator.getNode2().getId(), m_appContext);\n        \n        Event[] events = getMatchingDaoEvents(filter);\n        assertEquals(2, events.length);\n        \n        events = getMatchingJdbcEvents(filter);\n        assertEquals(2, events.length);\n        \n        filter = new NegativeNodeFilter(m_dbPopulator.getNode1().getId(), m_appContext);\n        \n        events = getMatchingDaoEvents(filter);\n        assertEquals(1, events.length);\n        \n        events = getMatchingJdbcEvents(filter);\n        assertEquals(1, events.length);\n        \n        assertEquals(\"node is not node1\", filter.getTextDescription());\n    }","id":82802,"modified_method":"@Test\n    @Transactional\n    public void testNegativeNodeFilter(){\n        NegativeNodeFilter filter = new NegativeNodeFilter(m_dbPopulator.getNode2().getId(), m_appContext);\n        \n        Event[] events = getMatchingDaoEvents(filter);\n        assertEquals(2, events.length);\n        \n        filter = new NegativeNodeFilter(m_dbPopulator.getNode1().getId(), m_appContext);\n        \n        events = getMatchingDaoEvents(filter);\n        assertEquals(1, events.length);\n        \n        assertEquals(\"node is not node1\", filter.getTextDescription());\n    }","commit_id":"fa5cf4c2bdca60d2e865ffd40c1c2d3d8f35b826","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @Transactional\n    public void testPartialUeiFilter(){\n        PartialUEIFilter filter = new PartialUEIFilter(\"uei.opennms.org/t\");\n        \n        Event[] events = getMatchingDaoEvents(filter);\n        assertEquals(2, events.length);\n        \n        events = getMatchingJdbcEvents(filter);\n        assertEquals(2, events.length);\n        \n        filter = new PartialUEIFilter(\"unknown\");\n        \n        events = getMatchingDaoEvents(filter);\n        assertEquals(0, events.length);\n        \n        events = getMatchingJdbcEvents(filter);\n        assertEquals(0, events.length);\n    }","id":82803,"modified_method":"@Test\n    @Transactional\n    public void testPartialUeiFilter(){\n        PartialUEIFilter filter = new PartialUEIFilter(\"uei.opennms.org/t\");\n        \n        Event[] events = getMatchingDaoEvents(filter);\n        assertEquals(2, events.length);\n        \n        filter = new PartialUEIFilter(\"unknown\");\n        \n        events = getMatchingDaoEvents(filter);\n        assertEquals(0, events.length);\n    }","commit_id":"fa5cf4c2bdca60d2e865ffd40c1c2d3d8f35b826","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @JUnitTemporaryDatabase // Relies on specific IDs so we need a fresh database\n    public void testNodeFilter(){\n        NodeFilter filter = new NodeFilter(1, m_appContext);\n        \n        Event[] events = getMatchingDaoEvents(filter);\n        assertEquals(1, events.length);\n        \n        events = getMatchingJdbcEvents(filter);\n        assertEquals(1, events.length);\n        \n        filter = new NodeFilter(2, m_appContext);\n        \n        events = getMatchingDaoEvents(filter);\n        assertEquals(0, events.length);\n        \n        events = getMatchingJdbcEvents(filter);\n        assertEquals(0, events.length);\n        \n        assertEquals(\"node=node2\", filter.getTextDescription());\n    }","id":82804,"modified_method":"@Test\n    @JUnitTemporaryDatabase // Relies on specific IDs so we need a fresh database\n    public void testNodeFilter(){\n        NodeFilter filter = new NodeFilter(1, m_appContext);\n        \n        Event[] events = getMatchingDaoEvents(filter);\n        assertEquals(1, events.length);\n        \n        filter = new NodeFilter(2, m_appContext);\n        \n        events = getMatchingDaoEvents(filter);\n        assertEquals(0, events.length);\n        \n        assertEquals(\"node=node2\", filter.getTextDescription());\n    }","commit_id":"fa5cf4c2bdca60d2e865ffd40c1c2d3d8f35b826","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @Transactional\n    public void testNegativeAcknowledgedByFilter(){\n        NegativeAcknowledgedByFilter filter = new NegativeAcknowledgedByFilter(\"TestUser\");\n        \n        Event[] events = getMatchingDaoEvents(filter);\n        assertEquals(2, events.length);\n        \n        events = null;\n        \n        events = getMatchingJdbcEvents(filter);\n        assertEquals(2, events.length);\n        \n        m_daoEventRepo.acknowledgeAll(\"TestUser\", new Date());\n        \n        events = getMatchingDaoEvents(filter);\n        assertEquals(0, events.length);\n        \n        events = getMatchingJdbcEvents(filter);\n        assertEquals(0, events.length);\n    }","id":82805,"modified_method":"@Test\n    @Transactional\n    public void testNegativeAcknowledgedByFilter(){\n        NegativeAcknowledgedByFilter filter = new NegativeAcknowledgedByFilter(\"TestUser\");\n        \n        Event[] events = getMatchingDaoEvents(filter);\n        assertEquals(2, events.length);\n        \n        events = null;\n        \n        m_daoEventRepo.acknowledgeAll(\"TestUser\", new Date());\n        \n        events = getMatchingDaoEvents(filter);\n        assertEquals(0, events.length);\n    }","commit_id":"fa5cf4c2bdca60d2e865ffd40c1c2d3d8f35b826","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @JUnitTemporaryDatabase // Relies on specific IDs so we need a fresh database\n    public void testServiceFilter(){\n        ServiceFilter filter = new ServiceFilter(2, null);\n        OutageCriteria criteria = new OutageCriteria(filter);\n        \n        Outage[] outages = m_daoOutageRepo.getMatchingOutages(criteria);\n        assertEquals(2, outages.length);\n        \n        outages = m_jdbcOutageRepo.getMatchingOutages(criteria);\n        assertEquals(2, outages.length);\n    }","id":82806,"modified_method":"@Test\n    @JUnitTemporaryDatabase // Relies on specific IDs so we need a fresh database\n    public void testServiceFilter(){\n        ServiceFilter filter = new ServiceFilter(2, null);\n        OutageCriteria criteria = new OutageCriteria(filter);\n        \n        Outage[] outages = m_daoOutageRepo.getMatchingOutages(criteria);\n        assertEquals(2, outages.length);\n    }","commit_id":"fa5cf4c2bdca60d2e865ffd40c1c2d3d8f35b826","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @JUnitTemporaryDatabase // Relies on records created in @Before so we need a fresh database\n    public void testRecentOutagesFilter(){\n        RecentOutagesFilter filter = new RecentOutagesFilter();\n        OutageCriteria criteria = new OutageCriteria(filter);\n        \n        Outage[] outages = m_daoOutageRepo.getMatchingOutages(criteria);\n        assertEquals(3, outages.length);\n        \n        outages = m_jdbcOutageRepo.getMatchingOutages(criteria);\n        assertEquals(3, outages.length);\n    }","id":82807,"modified_method":"@Test\n    @JUnitTemporaryDatabase // Relies on records created in @Before so we need a fresh database\n    public void testRecentOutagesFilter(){\n        RecentOutagesFilter filter = new RecentOutagesFilter();\n        OutageCriteria criteria = new OutageCriteria(filter);\n        \n        Outage[] outages = m_daoOutageRepo.getMatchingOutages(criteria);\n        assertEquals(3, outages.length);\n    }","commit_id":"fa5cf4c2bdca60d2e865ffd40c1c2d3d8f35b826","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @JUnitTemporaryDatabase // Relies on records created in @Before so we need a fresh database\n    public void testLostServiceDateBeforeFilter(){\n        LostServiceDateBeforeFilter filter = new LostServiceDateBeforeFilter(new Date());\n        OutageCriteria criteria = new OutageCriteria(filter);\n        \n        Outage[] outages = m_daoOutageRepo.getMatchingOutages(criteria);\n        assertEquals(3, outages.length);\n        \n        outages = m_jdbcOutageRepo.getMatchingOutages(criteria);\n        assertEquals(3, outages.length);\n    }","id":82808,"modified_method":"@Test\n    @JUnitTemporaryDatabase // Relies on records created in @Before so we need a fresh database\n    public void testLostServiceDateBeforeFilter(){\n        LostServiceDateBeforeFilter filter = new LostServiceDateBeforeFilter(new Date());\n        OutageCriteria criteria = new OutageCriteria(filter);\n        \n        Outage[] outages = m_daoOutageRepo.getMatchingOutages(criteria);\n        assertEquals(3, outages.length);\n    }","commit_id":"fa5cf4c2bdca60d2e865ffd40c1c2d3d8f35b826","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @JUnitTemporaryDatabase // Relies on records created in @Before so we need a fresh database\n    public void testRegainedServiceDateBeforeFilter(){\n        RegainedServiceDateBeforeFilter filter = new RegainedServiceDateBeforeFilter(new Date());\n        OutageCriteria criteria = new OutageCriteria(filter);\n        \n        Outage[] outages = m_daoOutageRepo.getMatchingOutages(criteria);\n        assertEquals(1, outages.length);\n        \n        outages = m_jdbcOutageRepo.getMatchingOutages(criteria);\n        assertEquals(1, outages.length);\n    }","id":82809,"modified_method":"@Test\n    @JUnitTemporaryDatabase // Relies on records created in @Before so we need a fresh database\n    public void testRegainedServiceDateBeforeFilter(){\n        RegainedServiceDateBeforeFilter filter = new RegainedServiceDateBeforeFilter(new Date());\n        OutageCriteria criteria = new OutageCriteria(filter);\n        \n        Outage[] outages = m_daoOutageRepo.getMatchingOutages(criteria);\n        assertEquals(1, outages.length);\n    }","commit_id":"fa5cf4c2bdca60d2e865ffd40c1c2d3d8f35b826","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @JUnitTemporaryDatabase // Relies on records created in @Before so we need a fresh database\n    public void testInterfaceFilter(){\n        InterfaceFilter filter = new InterfaceFilter(\"192.168.1.1\");\n        OutageCriteria criteria = new OutageCriteria(filter);\n        \n        InterfaceFilter filter2 = new InterfaceFilter(\"192.168.2.1\");\n        OutageCriteria criteria2 = new OutageCriteria(filter2);\n        \n        Outage[] outages = m_daoOutageRepo.getMatchingOutages(criteria);\n        assertEquals(2, outages.length);\n        \n        outages = m_jdbcOutageRepo.getMatchingOutages(criteria);\n        assertEquals(2, outages.length);\n        \n        outages = m_daoOutageRepo.getMatchingOutages(criteria2);\n        assertEquals(1, outages.length);\n        \n        outages = m_jdbcOutageRepo.getMatchingOutages(criteria2);\n        assertEquals(1, outages.length);\n    }","id":82810,"modified_method":"@Test\n    @JUnitTemporaryDatabase // Relies on records created in @Before so we need a fresh database\n    public void testInterfaceFilter(){\n        InterfaceFilter filter = new InterfaceFilter(\"192.168.1.1\");\n        OutageCriteria criteria = new OutageCriteria(filter);\n        \n        InterfaceFilter filter2 = new InterfaceFilter(\"192.168.2.1\");\n        OutageCriteria criteria2 = new OutageCriteria(filter2);\n        \n        Outage[] outages = m_daoOutageRepo.getMatchingOutages(criteria);\n        assertEquals(2, outages.length);\n        \n        outages = m_daoOutageRepo.getMatchingOutages(criteria2);\n        assertEquals(1, outages.length);\n    }","commit_id":"fa5cf4c2bdca60d2e865ffd40c1c2d3d8f35b826","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @JUnitTemporaryDatabase // Relies on specific IDs so we need a fresh database\n    public void testNegativeServiceFilter(){\n        NegativeServiceFilter filter = new NegativeServiceFilter(2, null);\n        OutageCriteria criteria = new OutageCriteria(filter);\n        \n        Outage[] outages = m_daoOutageRepo.getMatchingOutages(criteria);\n        assertEquals(1, outages.length);\n        \n        outages = m_jdbcOutageRepo.getMatchingOutages(criteria);\n        assertEquals(1, outages.length);\n    }","id":82811,"modified_method":"@Test\n    @JUnitTemporaryDatabase // Relies on specific IDs so we need a fresh database\n    public void testNegativeServiceFilter(){\n        NegativeServiceFilter filter = new NegativeServiceFilter(2, null);\n        OutageCriteria criteria = new OutageCriteria(filter);\n        \n        Outage[] outages = m_daoOutageRepo.getMatchingOutages(criteria);\n        assertEquals(1, outages.length);\n    }","commit_id":"fa5cf4c2bdca60d2e865ffd40c1c2d3d8f35b826","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @JUnitTemporaryDatabase // Relies on records created in @Before so we need a fresh database\n    public void testLostServiceDateAfterFilter(){\n        LostServiceDateAfterFilter filter = new LostServiceDateAfterFilter(yesterday());\n        OutageCriteria criteria = new OutageCriteria(filter);\n        \n        Outage[] outages = m_daoOutageRepo.getMatchingOutages(criteria);\n        assertEquals(3, outages.length);\n        \n        outages = m_jdbcOutageRepo.getMatchingOutages(criteria);\n        assertEquals(3, outages.length);\n    }","id":82812,"modified_method":"@Test\n    @JUnitTemporaryDatabase // Relies on records created in @Before so we need a fresh database\n    public void testLostServiceDateAfterFilter(){\n        LostServiceDateAfterFilter filter = new LostServiceDateAfterFilter(yesterday());\n        OutageCriteria criteria = new OutageCriteria(filter);\n        \n        Outage[] outages = m_daoOutageRepo.getMatchingOutages(criteria);\n        assertEquals(3, outages.length);\n    }","commit_id":"fa5cf4c2bdca60d2e865ffd40c1c2d3d8f35b826","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @JUnitTemporaryDatabase // Relies on records created in @Before so we need a fresh database\n    public void testRegainedServiceDateAfterFilter(){\n        RegainedServiceDateAfterFilter filter = new RegainedServiceDateAfterFilter(yesterday());\n        OutageCriteria criteria = new OutageCriteria(filter);\n        \n        Outage[] outages = m_daoOutageRepo.getMatchingOutages(criteria);\n        assertEquals(1, outages.length);\n        \n        outages = m_jdbcOutageRepo.getMatchingOutages(criteria);\n        assertEquals(1, outages.length);\n    }","id":82813,"modified_method":"@Test\n    @JUnitTemporaryDatabase // Relies on records created in @Before so we need a fresh database\n    public void testRegainedServiceDateAfterFilter(){\n        RegainedServiceDateAfterFilter filter = new RegainedServiceDateAfterFilter(yesterday());\n        OutageCriteria criteria = new OutageCriteria(filter);\n        \n        Outage[] outages = m_daoOutageRepo.getMatchingOutages(criteria);\n        assertEquals(1, outages.length);\n    }","commit_id":"fa5cf4c2bdca60d2e865ffd40c1c2d3d8f35b826","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @JUnitTemporaryDatabase // Relies on records created in @Before so we need a fresh database\n    public void testNegativeInterfaceFilter(){\n        NegativeInterfaceFilter filter = new NegativeInterfaceFilter(\"192.168.2.1\");\n        OutageCriteria criteria = new OutageCriteria(filter);\n        \n        Outage[] outages = m_daoOutageRepo.getMatchingOutages(criteria);\n        assertEquals(2, outages.length);\n        \n        outages = m_jdbcOutageRepo.getMatchingOutages(criteria);\n        assertEquals(2, outages.length);\n    }","id":82814,"modified_method":"@Test\n    @JUnitTemporaryDatabase // Relies on records created in @Before so we need a fresh database\n    public void testNegativeInterfaceFilter(){\n        NegativeInterfaceFilter filter = new NegativeInterfaceFilter(\"192.168.2.1\");\n        OutageCriteria criteria = new OutageCriteria(filter);\n        \n        Outage[] outages = m_daoOutageRepo.getMatchingOutages(criteria);\n        assertEquals(2, outages.length);\n    }","commit_id":"fa5cf4c2bdca60d2e865ffd40c1c2d3d8f35b826","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @JUnitTemporaryDatabase // Relies on specific IDs so we need a fresh database\n    public void testOutageIdFilter(){\n        OutageIdFilter filter = new OutageIdFilter(1);\n        OutageCriteria criteria = new OutageCriteria(filter);\n        \n        Outage[] outages = m_daoOutageRepo.getMatchingOutages(criteria);\n        assertEquals(1, outages.length);\n        \n        outages = m_jdbcOutageRepo.getMatchingOutages(criteria);\n        assertEquals(1, outages.length);\n    }","id":82815,"modified_method":"@Test\n    @JUnitTemporaryDatabase // Relies on specific IDs so we need a fresh database\n    public void testOutageIdFilter(){\n        OutageIdFilter filter = new OutageIdFilter(1);\n        OutageCriteria criteria = new OutageCriteria(filter);\n        \n        Outage[] outages = m_daoOutageRepo.getMatchingOutages(criteria);\n        assertEquals(1, outages.length);\n    }","commit_id":"fa5cf4c2bdca60d2e865ffd40c1c2d3d8f35b826","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * <p>Constructor for AlarmCriteria.<\/p>\n     *\n     * @param ackType a {@link org.opennms.web.alarm.AcknowledgeType} object.\n     * @param filters an array of org$opennms$web$filter$Filter objects.\n     */\n    public AlarmCriteria(AcknowledgeType ackType, Filter[] filters) {\n        this(filters, null, ackType, -1, -1);\n    }","id":82816,"modified_method":"/**\n     * <p>Constructor for AlarmCriteria.<\/p>\n     *\n     * @param ackType a {@link org.opennms.web.alarm.AcknowledgeType} object.\n     * @param filters an array of org$opennms$web$filter$Filter objects.\n     */\n    public AlarmCriteria(AcknowledgeType ackType, Filter[] filters) {\n        this(filters, null, ackType, NO_LIMIT, NO_OFFSET);\n    }","commit_id":"9ebd76c017369d9283ba91fcfc6a27be2cefaebe","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * <p>Constructor for AlarmCriteria.<\/p>\n     *\n     * @param filters a org$opennms$web$filter$Filter object.\n     */\n    public AlarmCriteria(Filter... filters) {\n        this(filters, null, null, -1, -1);\n    }","id":82817,"modified_method":"/**\n     * <p>Constructor for AlarmCriteria.<\/p>\n     *\n     * @param filters a org$opennms$web$filter$Filter object.\n     */\n    public AlarmCriteria(Filter... filters) {\n        this(filters, null, null, NO_LIMIT, NO_OFFSET);\n    }","commit_id":"9ebd76c017369d9283ba91fcfc6a27be2cefaebe","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * <p>getFeed<\/p>\n     *\n     * @return a {@link com.sun.syndication.feed.synd.SyndFeed} object.\n     */\n    public SyndFeed getFeed(ServletContext servletContext) {\n        SyndFeed feed = new SyndFeedImpl();\n\n        feed.setTitle(\"Alarms\");\n        feed.setDescription(\"OpenNMS Alarms\");\n        feed.setLink(getUrlBase() + \"alarm/list.htm\");\n\n        ArrayList<SyndEntry> entries = new ArrayList<SyndEntry>();\n\n        try {\n            Alarm[] alarms;\n\n            ArrayList<Filter> filters = new ArrayList<Filter>();\n            if (this.getRequest().getParameter(\"node\") != null) {\n                Integer nodeId = WebSecurityUtils.safeParseInt(this.getRequest().getParameter(\"node\"));\n                filters.add(new NodeFilter(nodeId, servletContext));\n            }\n            if (this.getRequest().getParameter(\"severity\") != null) {\n                String sev = this.getRequest().getParameter(\"severity\");\n                for (OnmsSeverity severity : OnmsSeverity.values()) {\n                    if (severity.getLabel().toLowerCase().equals(sev)) {\n                        filters.add(new SeverityFilter(severity));\n                    }\n                }\n\n            }\n            \n            alarms = AlarmFactory.getAlarms(SortStyle.FIRSTEVENTTIME, AcknowledgeType.BOTH, filters.toArray(new Filter[] {}), this.getMaxEntries(), -1);\n\n            SyndEntry entry;\n            \n            for (Alarm alarm : alarms) {\n                entry = new SyndEntryImpl();\n                entry.setPublishedDate(alarm.getFirstEventTime());\n                if (alarm.getAcknowledgeTime() != null) {\n                    entry.setTitle(sanitizeTitle(alarm.getLogMessage()) + \" (acknowledged by \" + alarm.getAcknowledgeUser() + \")\");\n                    entry.setUpdatedDate(alarm.getAcknowledgeTime());\n                } else {\n                    entry.setTitle(sanitizeTitle(alarm.getLogMessage()));\n                    entry.setUpdatedDate(alarm.getFirstEventTime());\n                }\n                entry.setLink(getUrlBase() + \"alarm/detail.htm?id=\" + alarm.getId());\n                \n                entries.add(entry);\n            }\n        } catch (SQLException e) {\n            log().warn(\"unable to get event(s)\", e);\n        }\n        \n        feed.setEntries(entries);\n        return feed;\n    }","id":82818,"modified_method":"/**\n     * <p>getFeed<\/p>\n     *\n     * @return a {@link com.sun.syndication.feed.synd.SyndFeed} object.\n     */\n    public SyndFeed getFeed(ServletContext servletContext) {\n        SyndFeed feed = new SyndFeedImpl();\n\n        feed.setTitle(\"Alarms\");\n        feed.setDescription(\"OpenNMS Alarms\");\n        feed.setLink(getUrlBase() + \"alarm/list.htm\");\n\n        ArrayList<SyndEntry> entries = new ArrayList<SyndEntry>();\n\n        ArrayList<Filter> filters = new ArrayList<Filter>();\n        if (this.getRequest().getParameter(\"node\") != null) {\n            Integer nodeId = WebSecurityUtils.safeParseInt(this.getRequest().getParameter(\"node\"));\n            filters.add(new NodeFilter(nodeId, servletContext));\n        }\n        if (this.getRequest().getParameter(\"severity\") != null) {\n            String sev = this.getRequest().getParameter(\"severity\");\n            for (OnmsSeverity severity : OnmsSeverity.values()) {\n                if (severity.getLabel().toLowerCase().equals(sev)) {\n                    filters.add(new SeverityFilter(severity));\n                }\n            }\n\n        }\n\n        AlarmCriteria queryCriteria = new AlarmCriteria(filters.toArray(new Filter[] {}), SortStyle.FIRSTEVENTTIME, AcknowledgeType.BOTH, this.getMaxEntries(), AlarmCriteria.NO_OFFSET);\n\n        Alarm[] alarms = m_webAlarmRepository.getMatchingAlarms(queryCriteria);\n\n        SyndEntry entry;\n        \n        for (Alarm alarm : alarms) {\n            entry = new SyndEntryImpl();\n            entry.setPublishedDate(alarm.getFirstEventTime());\n            if (alarm.getAcknowledgeTime() != null) {\n                entry.setTitle(sanitizeTitle(alarm.getLogMessage()) + \" (acknowledged by \" + alarm.getAcknowledgeUser() + \")\");\n                entry.setUpdatedDate(alarm.getAcknowledgeTime());\n            } else {\n                entry.setTitle(sanitizeTitle(alarm.getLogMessage()));\n                entry.setUpdatedDate(alarm.getFirstEventTime());\n            }\n            entry.setLink(getUrlBase() + \"alarm/detail.htm?id=\" + alarm.getId());\n            \n            entries.add(entry);\n        }\n\n        feed.setEntries(entries);\n        return feed;\n    }","commit_id":"9ebd76c017369d9283ba91fcfc6a27be2cefaebe","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @Transactional\n    public void testNegativeSeverityFilter(){\n        AlarmCriteria criteria = getCriteria(new NegativeSeverityFilter(OnmsSeverity.CRITICAL));\n        \n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(1, alarms.length);\n        \n        alarms = m_jdbcWebAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(1, alarms.length);\n    }","id":82819,"modified_method":"@Test\n    @Transactional\n    public void testNegativeSeverityFilter(){\n        AlarmCriteria criteria = getCriteria(new NegativeSeverityFilter(OnmsSeverity.CRITICAL));\n        \n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(1, alarms.length);\n    }","commit_id":"9ebd76c017369d9283ba91fcfc6a27be2cefaebe","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @Transactional\n    public void testAfterFirstEventTime(){\n        AlarmCriteria criteria = getCriteria(new AfterFirstEventTimeFilter(new Date()));\n        \n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(0, alarms.length);\n        \n        alarms = m_jdbcWebAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(0, alarms.length);\n    }","id":82820,"modified_method":"@Test\n    @Transactional\n    public void testAfterFirstEventTime(){\n        AlarmCriteria criteria = getCriteria(new AfterFirstEventTimeFilter(new Date()));\n        \n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(0, alarms.length);\n    }","commit_id":"9ebd76c017369d9283ba91fcfc6a27be2cefaebe","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @Transactional\n    public void testLogMessageMatchAnyFilter(){\n        AlarmCriteria criteria = getCriteria(new LogMessageMatchesAnyFilter(\"log\"));\n        \n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(1, alarms.length);\n        \n        alarms = m_jdbcWebAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(1, alarms.length);\n    }","id":82821,"modified_method":"@Test\n    @Transactional\n    public void testLogMessageMatchAnyFilter(){\n        AlarmCriteria criteria = getCriteria(new LogMessageMatchesAnyFilter(\"log\"));\n        \n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(1, alarms.length);\n    }","commit_id":"9ebd76c017369d9283ba91fcfc6a27be2cefaebe","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @Transactional\n    public void testAlarmTypeFilter(){\n        Alarm[] alarm = m_daoAlarmRepo.getMatchingAlarms(new AlarmCriteria(new AlarmTypeFilter(3)));\n        assertEquals(0, alarm.length);\n        \n        alarm = m_jdbcWebAlarmRepo.getMatchingAlarms(new AlarmCriteria(new AlarmTypeFilter(3)));\n        assertEquals(0, alarm.length);\n        \n        alarm = m_daoAlarmRepo.getMatchingAlarms(new AlarmCriteria(new AlarmTypeFilter(1)));\n        assertEquals(1, alarm.length);\n        \n        alarm = m_jdbcWebAlarmRepo.getMatchingAlarms(new AlarmCriteria(new AlarmTypeFilter(1)));\n        assertEquals(1, alarm.length);\n    }","id":82822,"modified_method":"@Test\n    @Transactional\n    public void testAlarmTypeFilter(){\n        Alarm[] alarm = m_daoAlarmRepo.getMatchingAlarms(new AlarmCriteria(new AlarmTypeFilter(3)));\n        assertEquals(0, alarm.length);\n        \n        alarm = m_daoAlarmRepo.getMatchingAlarms(new AlarmCriteria(new AlarmTypeFilter(1)));\n        assertEquals(1, alarm.length);\n    }","commit_id":"9ebd76c017369d9283ba91fcfc6a27be2cefaebe","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @Transactional\n    public void testNegativeInterfaceFilter(){\n        AlarmCriteria criteria = new AlarmCriteria(new NegativeInterfaceFilter(\"192.168.1.101\"));\n        \n        Alarm[] alarms = m_jdbcWebAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(1, alarms.length);\n        \n        alarms = m_daoAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(1, alarms.length);\n    }","id":82823,"modified_method":"@Test\n    @Transactional\n    public void testNegativeInterfaceFilter(){\n        AlarmCriteria criteria = new AlarmCriteria(new NegativeInterfaceFilter(\"192.168.1.101\"));\n        \n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(1, alarms.length);\n    }","commit_id":"9ebd76c017369d9283ba91fcfc6a27be2cefaebe","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @Transactional\n    public void testInterfaceFilter(){\n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(new AlarmCriteria(new InterfaceFilter(\"192.168.1.1\")));\n        assertEquals(1, alarms.length);\n        \n        alarms = m_jdbcWebAlarmRepo.getMatchingAlarms(new AlarmCriteria(new InterfaceFilter(\"192.168.1.1\")));\n        assertEquals(1, alarms.length);\n    }","id":82824,"modified_method":"@Test\n    @Transactional\n    public void testInterfaceFilter(){\n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(new AlarmCriteria(new InterfaceFilter(\"192.168.1.1\")));\n        assertEquals(1, alarms.length);\n    }","commit_id":"9ebd76c017369d9283ba91fcfc6a27be2cefaebe","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @Transactional\n    public void testNegativePartialUEIFilter(){\n        AlarmCriteria criteria = getCriteria(new NegativePartialUEIFilter(\"uei.opennms.org\"));\n        \n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(0, alarms.length);\n        \n        alarms = m_jdbcWebAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(0, alarms.length);\n    }","id":82825,"modified_method":"@Test\n    @Transactional\n    public void testNegativePartialUEIFilter(){\n        AlarmCriteria criteria = getCriteria(new NegativePartialUEIFilter(\"uei.opennms.org\"));\n        \n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(0, alarms.length);\n    }","commit_id":"9ebd76c017369d9283ba91fcfc6a27be2cefaebe","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @Transactional\n    public void testNegativeExactUeiFilter(){\n        AlarmCriteria criteria = getCriteria(new NegativeExactUEIFilter(\"uei.opennms.org/bogus\"));\n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(1, alarms.length);\n        \n        alarms = m_jdbcWebAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(1, alarms.length);\n    }","id":82826,"modified_method":"@Test\n    @Transactional\n    public void testNegativeExactUeiFilter(){\n        AlarmCriteria criteria = getCriteria(new NegativeExactUEIFilter(\"uei.opennms.org/bogus\"));\n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(1, alarms.length);\n    }","commit_id":"9ebd76c017369d9283ba91fcfc6a27be2cefaebe","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @Transactional\n    public void testIPLikeFilter(){\n        AlarmCriteria criteria = new AlarmCriteria(new IPAddrLikeFilter(\"192.168.1.1\"));\n        \n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(1, alarms.length);\n        assertEquals(\"192.168.1.1\", alarms[0].getIpAddress());\n        \n        alarms = m_jdbcWebAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(1, alarms.length);\n        assertEquals(\"192.168.1.1\", alarms[0].getIpAddress());\n        \n    }","id":82827,"modified_method":"@Test\n    @Transactional\n    public void testIPLikeFilter(){\n        AlarmCriteria criteria = new AlarmCriteria(new IPAddrLikeFilter(\"192.168.1.1\"));\n        \n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(1, alarms.length);\n        assertEquals(\"192.168.1.1\", alarms[0].getIpAddress());\n    }","commit_id":"9ebd76c017369d9283ba91fcfc6a27be2cefaebe","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @Transactional\n    public void testBeforeFirstEventTimeFilter(){\n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(new AlarmCriteria(new BeforeFirstEventTimeFilter(new Date())));\n        assertEquals(1, alarms.length);\n        \n        alarms = m_jdbcWebAlarmRepo.getMatchingAlarms(new AlarmCriteria(new BeforeFirstEventTimeFilter(new Date())));\n        assertEquals(1, alarms.length);\n        \n        alarms = m_daoAlarmRepo.getMatchingAlarms(new AlarmCriteria(new BeforeLastEventTimeFilter(new Date())));\n        assertEquals(1, alarms.length);\n        \n        alarms = m_jdbcWebAlarmRepo.getMatchingAlarms(new AlarmCriteria(new BeforeLastEventTimeFilter(new Date())));\n        assertEquals(1, alarms.length);\n    }","id":82828,"modified_method":"@Test\n    @Transactional\n    public void testBeforeFirstEventTimeFilter(){\n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(new AlarmCriteria(new BeforeFirstEventTimeFilter(new Date())));\n        assertEquals(1, alarms.length);\n\n        alarms = m_daoAlarmRepo.getMatchingAlarms(new AlarmCriteria(new BeforeLastEventTimeFilter(new Date())));\n        assertEquals(1, alarms.length);\n    }","commit_id":"9ebd76c017369d9283ba91fcfc6a27be2cefaebe","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @Transactional\n    public void testNegativeAcknowledgeByFilter(){\n        AlarmCriteria criteria = new AlarmCriteria(new NegativeAcknowledgedByFilter(\"non user\"));\n        \n        Alarm[] alarms = m_jdbcWebAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(1, alarms.length);\n        \n        alarms = m_daoAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(1, alarms.length);\n    }","id":82829,"modified_method":"@Test\n    @Transactional\n    public void testNegativeAcknowledgeByFilter(){\n        AlarmCriteria criteria = new AlarmCriteria(new NegativeAcknowledgedByFilter(\"non user\"));\n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(1, alarms.length);\n    }","commit_id":"9ebd76c017369d9283ba91fcfc6a27be2cefaebe","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @Transactional\n    public void testNegativeNodeFilter(){\n        AlarmCriteria criteria = getCriteria(new NegativeNodeFilter(11, m_appContext));\n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(1, alarms.length);\n        \n        alarms = m_jdbcWebAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(1, alarms.length);\n        \n        NegativeNodeFilter filter = new NegativeNodeFilter(11, m_appContext);\n        assertEquals(\"node is not 11\", filter.getTextDescription());\n    }","id":82830,"modified_method":"@Test\n    @Transactional\n    public void testNegativeNodeFilter(){\n        AlarmCriteria criteria = getCriteria(new NegativeNodeFilter(11, m_appContext));\n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(1, alarms.length);\n        \n        NegativeNodeFilter filter = new NegativeNodeFilter(11, m_appContext);\n        assertEquals(\"node is not 11\", filter.getTextDescription());\n    }","commit_id":"9ebd76c017369d9283ba91fcfc6a27be2cefaebe","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @Transactional\n    public void testServiceFilter(){\n        AlarmCriteria criteria = getCriteria(new ServiceFilter(1));\n        \n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(0, alarms.length);\n        \n        alarms = m_jdbcWebAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(0, alarms.length);\n    }","id":82831,"modified_method":"@Test\n    @Transactional\n    public void testServiceFilter(){\n        AlarmCriteria criteria = getCriteria(new ServiceFilter(1));\n        \n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(0, alarms.length);\n    }","commit_id":"9ebd76c017369d9283ba91fcfc6a27be2cefaebe","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @Transactional\n    public void testNegativeServiceFilter(){\n        AlarmCriteria criteria = getCriteria(new NegativeServiceFilter(12));\n        \n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(1, alarms.length);\n        \n        alarms = m_jdbcWebAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(1, alarms.length);\n    }","id":82832,"modified_method":"@Test\n    @Transactional\n    public void testNegativeServiceFilter(){\n        AlarmCriteria criteria = getCriteria(new NegativeServiceFilter(12));\n        \n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(1, alarms.length);\n    }","commit_id":"9ebd76c017369d9283ba91fcfc6a27be2cefaebe","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @Transactional\n    public void testExactUeiFilter(){\n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(new AlarmCriteria(new ExactUEIFilter(\"test uei\")));\n        assertEquals(0, alarms.length);\n        \n        alarms = m_daoAlarmRepo.getMatchingAlarms(new AlarmCriteria(new ExactUEIFilter(\"uei.opennms.org/test\")));\n        assertEquals(1, alarms.length);\n        \n        alarms = m_jdbcWebAlarmRepo.getMatchingAlarms(new AlarmCriteria(new ExactUEIFilter(\"test uei\")));\n        assertEquals(0, alarms.length);\n        \n        alarms = m_jdbcWebAlarmRepo.getMatchingAlarms(new AlarmCriteria(new ExactUEIFilter(\"uei.opennms.org/test\")));\n        assertEquals(1, alarms.length);\n    }","id":82833,"modified_method":"@Test\n    @Transactional\n    public void testExactUeiFilter(){\n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(new AlarmCriteria(new ExactUEIFilter(\"test uei\")));\n        assertEquals(0, alarms.length);\n        \n        alarms = m_daoAlarmRepo.getMatchingAlarms(new AlarmCriteria(new ExactUEIFilter(\"uei.opennms.org/test\")));\n        assertEquals(1, alarms.length);\n    }","commit_id":"9ebd76c017369d9283ba91fcfc6a27be2cefaebe","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @Transactional\n    public void testNodeNameLikeFilter(){\n        AlarmCriteria criteria = getCriteria(new NodeNameLikeFilter(\"mr\"));\n        \n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(0, alarms.length);\n        \n        alarms = m_jdbcWebAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(0, alarms.length);\n    }","id":82834,"modified_method":"@Test\n    @Transactional\n    public void testNodeNameLikeFilter(){\n        AlarmCriteria criteria = getCriteria(new NodeNameLikeFilter(\"mr\"));\n        \n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(0, alarms.length);\n    }","commit_id":"9ebd76c017369d9283ba91fcfc6a27be2cefaebe","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @Transactional\n    public void testBeforeLastEventTime(){\n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(new AlarmCriteria(new BeforeLastEventTimeFilter(new Date())));\n        assertEquals(1, alarms.length);\n        \n        alarms = m_jdbcWebAlarmRepo.getMatchingAlarms(new AlarmCriteria(new BeforeLastEventTimeFilter(new Date())));\n        assertEquals(1, alarms.length);\n    }","id":82835,"modified_method":"@Test\n    @Transactional\n    public void testBeforeLastEventTime(){\n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(new AlarmCriteria(new BeforeLastEventTimeFilter(new Date())));\n        assertEquals(1, alarms.length);\n    }","commit_id":"9ebd76c017369d9283ba91fcfc6a27be2cefaebe","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    @Transactional\n    public void testSeverityBetweenFilter(){\n        AlarmCriteria criteria = getCriteria(new SeverityBetweenFilter(OnmsSeverity.CLEARED, OnmsSeverity.MAJOR));\n        \n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(1, alarms.length);\n        \n        alarms = m_jdbcWebAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(1, alarms.length);\n    }","id":82836,"modified_method":"@Test\n    @Transactional\n    public void testSeverityBetweenFilter(){\n        AlarmCriteria criteria = getCriteria(new SeverityBetweenFilter(OnmsSeverity.CLEARED, OnmsSeverity.MAJOR));\n        \n        Alarm[] alarms = m_daoAlarmRepo.getMatchingAlarms(criteria);\n        assertEquals(1, alarms.length);\n    }","commit_id":"9ebd76c017369d9283ba91fcfc6a27be2cefaebe","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Nonnull\n    public static String format(Value value) throws RepositoryException {\n        switch (value.getType()) {\n            case PropertyType.STRING:\n            case PropertyType.BOOLEAN:\n                return '\\'' + value.getString() + '\\'';\n\n            case PropertyType.LONG:\n            case PropertyType.DOUBLE:\n                return value.getString();\n\n            case PropertyType.DATE:\n                return \"xs:dateTime('\" + value.getString() + \"')\";\n\n            default:\n                throw new RepositoryException(\"Property of type \" + PropertyType.nameFromValue(value.getType()) + \" not supported\");\n        }\n    }","id":82837,"modified_method":"@Nonnull\n    public static String format(@Nonnull Value value) throws RepositoryException {\n        String s;\n        switch (value.getType()) {\n            case PropertyType.STRING:\n            case PropertyType.BOOLEAN:\n                return '\\'' + QueryUtil.escapeForQuery(value.getString()) + '\\'';\n\n            case PropertyType.LONG:\n            case PropertyType.DOUBLE:\n                return value.getString();\n\n            case PropertyType.DATE:\n                return \"xs:dateTime('\" + value.getString() + \"')\";\n\n            default:\n                throw new RepositoryException(\"Property of type \" + PropertyType.nameFromValue(value.getType()) + \" not supported\");\n        }\n    }","commit_id":"43d94296a08791945f5f6c3288a26202574e8127","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"@Test\n    public void testAdminImpersonation() throws Exception {\n        final String adminPrincipalName = userMgr.getAuthorizable(superuser.getUserID()).getPrincipal().getName();\n        Iterator<Authorizable> result = userMgr.findAuthorizables(new Query() {\n            public <T> void build(QueryBuilder<T> builder) {\n                builder.setCondition(builder.\n                        impersonates(adminPrincipalName));\n            }\n        });\n\n        Iterator<Authorizable> expected = userMgr.findAuthorizables(\"rep:principalName\", null, UserManager.SEARCH_TYPE_USER);\n        assertTrue(result.hasNext());\n        assertSameElements(expected, result);\n    }","id":82838,"modified_method":"@Test\n    public void testAdminImpersonation() throws Exception {\n        final String adminPrincipalName = userMgr.getAuthorizable(superuser.getUserID()).getPrincipal().getName();\n        Iterator<Authorizable> result = userMgr.findAuthorizables(new Query() {\n            public <T> void build(QueryBuilder<T> builder) {\n                builder.setCondition(builder.impersonates(adminPrincipalName));\n            }\n        });\n\n        Iterator<Authorizable> expected = userMgr.findAuthorizables(UserConstants.REP_PRINCIPAL_NAME, null, UserManager.SEARCH_TYPE_USER);\n        assertTrue(result.hasNext());\n        assertSameElements(expected, result);\n    }","commit_id":"43d94296a08791945f5f6c3288a26202574e8127","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"@Override\n    public void visit(Condition.Property condition) throws RepositoryException {\n        RelationOp relOp = condition.getOp();\n        if (relOp == RelationOp.EX) {\n            statement.append(condition.getRelPath());\n        } else if (relOp == RelationOp.LIKE) {\n            statement.append(\"jcr:like(\")\n                    .append(condition.getRelPath())\n                    .append(\",'\")\n                    .append(condition.getPattern())\n                    .append(\"')\");\n        } else {\n            statement.append(condition.getRelPath())\n                    .append(condition.getOp().getOp())\n                    .append(QueryUtil.format(condition.getValue()));\n        }\n    }","id":82839,"modified_method":"@Override\n    public void visit(Condition.Property condition) throws RepositoryException {\n        RelationOp relOp = condition.getOp();\n        if (relOp == RelationOp.EX) {\n            statement.append(QueryUtil.escapeForQuery(condition.getRelPath()));\n        } else if (relOp == RelationOp.LIKE) {\n            statement.append(\"jcr:like(\")\n                    .append(QueryUtil.escapeForQuery(condition.getRelPath()))\n                    .append(\",'\")\n                    .append(QueryUtil.escapeForQuery(condition.getPattern()))\n                    .append(\"')\");\n        } else {\n            statement.append(QueryUtil.escapeForQuery(condition.getRelPath()))\n                    .append(condition.getOp().getOp())\n                    .append(QueryUtil.format(condition.getValue()));\n        }\n    }","commit_id":"43d94296a08791945f5f6c3288a26202574e8127","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"@Override\n    public void visit(Condition.Contains condition) {\n        statement.append(\"jcr:contains(\")\n                .append(condition.getRelPath())\n                .append(\",'\")\n                .append(condition.getSearchExpr())\n                .append(\"')\");\n    }","id":82840,"modified_method":"@Override\n    public void visit(Condition.Contains condition) {\n        statement.append(\"jcr:contains(\")\n                .append(QueryUtil.escapeForQuery(condition.getRelPath()))\n                .append(\",'\")\n                .append(QueryUtil.escapeForQuery(condition.getSearchExpr()))\n                .append(\"')\");\n    }","commit_id":"43d94296a08791945f5f6c3288a26202574e8127","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"@Override\n    public void visit(Condition.Node condition) throws RepositoryException {\n        statement.append('(')\n                .append(\"jcr:like(@\")\n                .append(namePathMapper.getJcrName(UserConstants.REP_PRINCIPAL_NAME))\n                .append(\",'\")\n                .append(condition.getPattern())\n                .append(\"')\")\n                .append(\" or \")\n                .append(\"jcr:like(fn:name(),'\")\n                .append(QueryUtil.escapeNodeName(condition.getPattern()))\n                .append(\"')\")\n                .append(')');\n    }","id":82841,"modified_method":"@Override\n    public void visit(Condition.Node condition) throws RepositoryException {\n        statement.append('(')\n                .append(\"jcr:like(@\")\n                .append(QueryUtil.escapeForQuery(UserConstants.REP_PRINCIPAL_NAME, namePathMapper))\n                .append(\",'\")\n                .append(QueryUtil.escapeForQuery(condition.getPattern()))\n                .append(\"')\")\n                .append(\" or \")\n                .append(\"jcr:like(fn:name(),'\")\n                .append(QueryUtil.escapeNodeName(condition.getPattern()))\n                .append(\"')\")\n                .append(')');\n    }","commit_id":"43d94296a08791945f5f6c3288a26202574e8127","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"@Override\n    public void visit(Condition.Impersonation condition) {\n        String principalName = condition.getName();\n        boolean isAdmin = false;\n        try {\n            Authorizable authorizable = userMgr.getAuthorizable(new PrincipalImpl(principalName));\n            isAdmin = authorizable != null && !authorizable.isGroup() && ((User) authorizable).isAdmin();\n        } catch (RepositoryException e) {\n            // unable to retrieve authorizable\n        }\n        if (isAdmin) {\n            statement.append('@')\n                    .append(namePathMapper.getJcrName(JcrConstants.JCR_PRIMARYTYPE))\n                    .append(\"='\")\n                    .append(namePathMapper.getJcrName(UserConstants.NT_REP_USER))\n                    .append('\\'');\n        } else {\n            statement.append('@')\n                    .append(namePathMapper.getJcrName(UserConstants.REP_IMPERSONATORS))\n                    .append(\"='\")\n                    .append(condition.getName())\n                    .append('\\'');\n        }\n    }","id":82842,"modified_method":"@Override\n    public void visit(Condition.Impersonation condition) {\n        String principalName = condition.getName();\n        boolean isAdmin = false;\n        try {\n            Authorizable authorizable = userMgr.getAuthorizable(new PrincipalImpl(principalName));\n            isAdmin = authorizable != null && !authorizable.isGroup() && ((User) authorizable).isAdmin();\n        } catch (RepositoryException e) {\n            // unable to retrieve authorizable\n        }\n        if (isAdmin) {\n            statement.append('@')\n                    .append(QueryUtil.escapeForQuery(JcrConstants.JCR_PRIMARYTYPE, namePathMapper))\n                    .append(\"='\")\n                    .append(QueryUtil.escapeForQuery(UserConstants.NT_REP_USER, namePathMapper))\n                    .append('\\'');\n        } else {\n            statement.append('@')\n                    .append(QueryUtil.escapeForQuery(UserConstants.REP_IMPERSONATORS, namePathMapper))\n                    .append(\"='\")\n                    .append(QueryUtil.escapeForQuery(condition.getName()))\n                    .append('\\'');\n        }\n    }","commit_id":"43d94296a08791945f5f6c3288a26202574e8127","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"public void run()\n        {\n            String line = null;\n            BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n\n            // Check to see if we have stdin.\n            try\n            {\n                System.in.available();\n            }\n            catch (IOException ex)\n            {\n                m_stop = true;\n            }\n\n            while (!m_stop)\n            {\n                System.out.print(\"-> \");\n\n                try\n                {\n                    line = in.readLine();\n                }\n                catch (IOException ex)\n                {\n                    System.err.println(\"ShellTUI: Error reading from stdin...exiting.\");\n                    break;\n                }\n\n                synchronized (Activator.this)\n                {\n                    if (line == null)\n                    {\n                        System.err.println(\"ShellTUI: No standard input...exiting.\");\n                        break;\n                    }\n\n                    if (m_shell == null)\n                    {\n                        System.out.println(\"No impl service available.\");\n                        continue;\n                    }\n\n                    line = line.trim();\n\n                    if (line.length() == 0)\n                    {\n                        continue;\n                    }\n\n                    try\n                    {\n                        m_shell.executeCommand(line, System.out, System.err);\n                    }\n                    catch (Exception ex)\n                    {\n                        System.err.println(\"ShellTUI: \" + ex);\n                        ex.printStackTrace();\n                    }\n                }\n            }\n        }","id":82843,"modified_method":"public void run()\n        {\n            String line = null;\n            BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n\n            try\n            {\n                boolean needPrompt = true;\n                int available;\n                while (!m_stop)\n                {\n                    if (needPrompt)\n                    {\n                        System.out.print(\"-> \");\n                        needPrompt = false;\n                    }\n\n                    available = System.in.available();\n\n                    if (available == 0)\n                    {\n                        try\n                        {\n                            Thread.sleep(200);\n                        }\n                        catch (InterruptedException ex)\n                        {\n                            // No one should be interrupting this thread, so\n                            // ignore it.\n                        }\n                        continue;\n                    }\n\n                    line = in.readLine();\n                    if (line == null)\n                    {\n                        System.err.println(\"ShellTUI: No standard input...exiting.\");\n                        break;\n                    }\n                    needPrompt = true;\n\n                    line = line.trim();\n                    if (line.length() == 0)\n                    {\n                        continue;\n                    }\n\n                    synchronized (Activator.this)\n                    {\n                        if (m_shell == null)\n                        {\n                            System.out.println(\"No impl service available.\");\n                            continue;\n                        }\n\n                        try\n                        {\n                            m_shell.executeCommand(line, System.out, System.err);\n                        }\n                        catch (Exception ex)\n                        {\n                            System.err.println(\"ShellTUI: \" + ex);\n                            ex.printStackTrace();\n                        }\n                    }\n                }\n            }\n            catch (IOException ex)\n            {\n                // Any IO error causes the thread to exit.\n                System.err.println(\"ShellTUI: Unable to read from stdin...exiting.\");\n            }\n        }","commit_id":"cd48fc690366b2c178cb8005f3584b969beabdcb","url":"https://github.com/apache/felix"},{"original_method":"private synchronized void initializeService()\n    {\n        if (m_shell != null)\n        {\n            return;\n        }\n        m_shellRef = m_context.getServiceReference(\n            org.apache.felix.shell.ShellService.class.getName());\n        if (m_shellRef == null)\n        {\n            return;\n        }\n        m_shell = (ShellService) m_context.getService(m_shellRef);\n    }","id":82844,"modified_method":"private synchronized void initializeService()\n    {\n        if (m_shell == null)\n        {\n            m_shellRef = m_context.getServiceReference(\n                org.apache.felix.shell.ShellService.class.getName());\n            if (m_shellRef != null)\n            {\n                m_shell = (ShellService) m_context.getService(m_shellRef);\n            }\n        }\n    }","commit_id":"cd48fc690366b2c178cb8005f3584b969beabdcb","url":"https://github.com/apache/felix"},{"original_method":"public void start(BundleContext context)\n    {\n        m_context = context;\n\n        // Listen for registering/unregistering impl service.\n        ServiceListener sl = new ServiceListener() {\n            public void serviceChanged(ServiceEvent event)\n            {\n                synchronized (Activator.this)\n                {\n                    // Ignore additional services if we already have one.\n                    if ((event.getType() == ServiceEvent.REGISTERED)\n                        && (m_shellRef != null))\n                    {\n                        return;\n                    }\n                    // Initialize the service if we don't have one.\n                    else if ((event.getType() == ServiceEvent.REGISTERED)\n                        && (m_shellRef == null))\n                    {\n                        initializeService();\n                    }\n                    // Unget the service if it is unregistering.\n                    else if ((event.getType() == ServiceEvent.UNREGISTERING)\n                        && event.getServiceReference().equals(m_shellRef))\n                    {\n                        m_context.ungetService(m_shellRef);\n                        m_shellRef = null;\n                        m_shell = null;\n                        // Try to get another service.\n                        initializeService();\n                    }\n                }\n            }\n        };\n        try\n        {\n            m_context.addServiceListener(sl,\n                \"(objectClass=\"\n                + org.apache.felix.shell.ShellService.class.getName()\n                + \")\");\n        }\n        catch (InvalidSyntaxException ex)\n        {\n            System.err.println(\"ShellTui: Cannot add service listener.\");\n            System.err.println(\"ShellTui: \" + ex);\n        }\n\n        // Now try to manually initialize the impl service\n        // since one might already be available.\n        initializeService();\n\n        // Start impl thread.\n        m_thread = new Thread(\n            m_runnable = new ShellTuiRunnable(),\n            \"Felix Shell TUI\");\n        m_thread.start();\n    }","id":82845,"modified_method":"public void start(BundleContext context)\n    {\n        m_context = context;\n\n        // Listen for registering/unregistering impl service.\n        ServiceListener sl = new ServiceListener() {\n            public void serviceChanged(ServiceEvent event)\n            {\n                synchronized (Activator.this)\n                {\n                    // Initialize the service if we don't have one.\n                    if ((event.getType() == ServiceEvent.REGISTERED)\n                        && (m_shellRef == null))\n                    {\n                        initializeService();\n                    }\n                    // Unget the service if it is unregistering.\n                    else if ((event.getType() == ServiceEvent.UNREGISTERING)\n                        && event.getServiceReference().equals(m_shellRef))\n                    {\n                        m_context.ungetService(m_shellRef);\n                        m_shellRef = null;\n                        m_shell = null;\n                        // Try to get another service.\n                        initializeService();\n                    }\n                }\n            }\n        };\n        try\n        {\n            m_context.addServiceListener(sl,\n                \"(objectClass=\"\n                + org.apache.felix.shell.ShellService.class.getName()\n                + \")\");\n        }\n        catch (InvalidSyntaxException ex)\n        {\n            System.err.println(\"ShellTui: Cannot add service listener.\");\n            System.err.println(\"ShellTui: \" + ex);\n        }\n\n        // Now try to manually initialize the impl service\n        // since one might already be available.\n        initializeService();\n\n        // Start impl thread.\n        m_thread = new Thread(\n            m_runnable = new ShellTuiRunnable(),\n            \"Felix Shell TUI\");\n        m_thread.start();\n    }","commit_id":"cd48fc690366b2c178cb8005f3584b969beabdcb","url":"https://github.com/apache/felix"},{"original_method":"private void printUsageAndExit() {\n    System.err.printf(\"Usage: bin/hbase %s [options]\\n\", getClass().getName());\n    System.err.println(\" where [options] are:\");\n    System.err.println(\"  -h|-help         Show this help and exit.\");\n    System.err.println(\"  -threads <N>     Number of threads writing on the WAL.\");\n    System.err.println(\"  -iterations <N>  Number of iterations per thread.\");\n    System.err.println(\"  -path <PATH>     Path where region's root directory is created.\");\n    System.err.println(\"  -families <N>    Number of column families to write.\");\n    System.err.println(\"  -qualifiers <N>  Number of qualifiers to write.\");\n    System.err.println(\"  -keySize <N>     Row key size in byte.\");\n    System.err.println(\"  -valueSize <N>   Row/Col value size in byte.\");\n    System.err.println(\"  -nosync          Append without syncing\");\n    System.err.println(\"  -verify          Verify edits written in sequence\");\n    System.err.println(\"  -verbose         Output extra info; e.g. all edit seq ids when verifying\");\n    System.err.println(\"  -roll <N>        Roll the way every N appends\");\n    System.err.println(\"\");\n    System.err.println(\"Examples:\");\n    System.err.println(\"\");\n    System.err.println(\" To run 100 threads on hdfs with log rolling every 10k edits and verification afterward do:\");\n    System.err.println(\" $ ./bin/hbase org.apache.hadoop.hbase.regionserver.wal.HLogPerformanceEvaluation \\\\\");\n    System.err.println(\"    -conf ./core-site.xml -path hdfs://example.org:7000/tmp -threads 100 -roll 10000 -verify\");\n    System.exit(1);\n  }","id":82846,"modified_method":"private void printUsageAndExit() {\n    System.err.printf(\"Usage: bin/hbase %s [options]\\n\", getClass().getName());\n    System.err.println(\" where [options] are:\");\n    System.err.println(\"  -h|-help         Show this help and exit.\");\n    System.err.println(\"  -threads <N>     Number of threads writing on the WAL.\");\n    System.err.println(\"  -iterations <N>  Number of iterations per thread.\");\n    System.err.println(\"  -path <PATH>     Path where region's root directory is created.\");\n    System.err.println(\"  -families <N>    Number of column families to write.\");\n    System.err.println(\"  -qualifiers <N>  Number of qualifiers to write.\");\n    System.err.println(\"  -keySize <N>     Row key size in byte.\");\n    System.err.println(\"  -valueSize <N>   Row/Col value size in byte.\");\n    System.err.println(\"  -nocleanup       Do NOT remove test data when done.\");\n    System.err.println(\"  -nosync          Append without syncing\");\n    System.err.println(\"  -verify          Verify edits written in sequence\");\n    System.err.println(\"  -verbose         Output extra info; e.g. all edit seq ids when verifying\");\n    System.err.println(\"  -roll <N>        Roll the way every N appends\");\n    System.err.println(\"\");\n    System.err.println(\"Examples:\");\n    System.err.println(\"\");\n    System.err.println(\" To run 100 threads on hdfs with log rolling every 10k edits and verification afterward do:\");\n    System.err.println(\" $ ./bin/hbase org.apache.hadoop.hbase.regionserver.wal.HLogPerformanceEvaluation \\\\\");\n    System.err.println(\"    -conf ./core-site.xml -path hdfs://example.org:7000/tmp -threads 100 -roll 10000 -verify\");\n    System.exit(1);\n  }","commit_id":"b685cf69dae131832b0d76c06429f2d65c9cbc3c","url":"https://github.com/apache/hbase"},{"original_method":"/**\n   * Verify the content of the WAL file.\n   * Verify that sequenceids are ascending and that the file has expected number\n   * of edits.\n   * @param wal\n   * @return Count of edits.\n   * @throws IOException\n   */\n  private long verify(final Path wal, final boolean verbose) throws IOException {\n    HLog.Reader reader = HLogFactory.createReader(wal.getFileSystem(getConf()), \n        wal, getConf());\n    long previousSeqid = -1;\n    long count = 0;\n    try {\n      while (true) {\n        Entry e = reader.next();\n        if (e == null) break;\n        count++;\n        long seqid = e.getKey().getLogSeqNum();\n        if (verbose) LOG.info(\"seqid=\" + seqid);\n        if (previousSeqid >= seqid) {\n          throw new IllegalStateException(\"wal=\" + wal.getName() +\n            \", previousSeqid=\" + previousSeqid + \", seqid=\" + seqid);\n        }\n        previousSeqid = seqid;\n      }\n    } finally {\n      reader.close();\n    }\n    return count;\n  }","id":82847,"modified_method":"/**\n   * Verify the content of the WAL file.\n   * Verify that sequenceids are ascending and that the file has expected number\n   * of edits.\n   * @param wal\n   * @return Count of edits.\n   * @throws IOException\n   */\n  private long verify(final Path wal, final boolean verbose) throws IOException {\n    HLog.Reader reader = HLogFactory.createReader(wal.getFileSystem(getConf()), wal, getConf());\n    long previousSeqid = -1;\n    long count = 0;\n    try {\n      while (true) {\n        Entry e = reader.next();\n        if (e == null) {\n          LOG.debug(\"Read count=\" + count + \" from \" + wal);\n          break;\n        }\n        count++;\n        long seqid = e.getKey().getLogSeqNum();\n        if (verbose) LOG.info(\"seqid=\" + seqid);\n        if (previousSeqid >= seqid) {\n          throw new IllegalStateException(\"wal=\" + wal.getName() +\n            \", previousSeqid=\" + previousSeqid + \", seqid=\" + seqid);\n        }\n        previousSeqid = seqid;\n      }\n    } finally {\n      reader.close();\n    }\n    return count;\n  }","commit_id":"b685cf69dae131832b0d76c06429f2d65c9cbc3c","url":"https://github.com/apache/hbase"},{"original_method":"private long runBenchmark(Runnable runnable, final int numThreads) throws InterruptedException {\n    Thread[] threads = new Thread[numThreads];\n    long startTime = System.currentTimeMillis();\n    for (int i = 0; i < numThreads; ++i) {\n      threads[i] = new Thread(runnable);\n      threads[i].start();\n    }\n    for (Thread t : threads) t.join();\n    long endTime = System.currentTimeMillis();\n    return(endTime - startTime);\n  }","id":82848,"modified_method":"private long runBenchmark(Runnable runnable, final int numThreads) throws InterruptedException {\n    Thread[] threads = new Thread[numThreads];\n    long startTime = System.currentTimeMillis();\n    for (int i = 0; i < numThreads; ++i) {\n      threads[i] = new Thread(runnable, \"t\" + i);\n      threads[i].start();\n    }\n    for (Thread t : threads) t.join();\n    long endTime = System.currentTimeMillis();\n    return(endTime - startTime);\n  }","commit_id":"b685cf69dae131832b0d76c06429f2d65c9cbc3c","url":"https://github.com/apache/hbase"},{"original_method":"@Override\n  public int run(String[] args) throws Exception {\n    Path rootRegionDir = null;\n    int numThreads = 1;\n    long numIterations = 10000;\n    int numFamilies = 1;\n    boolean noSync = false;\n    boolean verify = false;\n    boolean verbose = false;\n    long roll = Long.MAX_VALUE;\n    // Process command line args\n    for (int i = 0; i < args.length; i++) {\n      String cmd = args[i];\n      try {\n        if (cmd.equals(\"-threads\")) {\n          numThreads = Integer.parseInt(args[++i]);\n        } else if (cmd.equals(\"-iterations\")) {\n          numIterations = Long.parseLong(args[++i]);\n        } else if (cmd.equals(\"-path\")) {\n          rootRegionDir = new Path(args[++i]);\n        } else if (cmd.equals(\"-families\")) {\n          numFamilies = Integer.parseInt(args[++i]);\n        } else if (cmd.equals(\"-qualifiers\")) {\n          numQualifiers = Integer.parseInt(args[++i]);\n        } else if (cmd.equals(\"-keySize\")) {\n          keySize = Integer.parseInt(args[++i]);\n        } else if (cmd.equals(\"-valueSize\")) {\n          valueSize = Integer.parseInt(args[++i]);\n        } else if (cmd.equals(\"-nosync\")) {\n          noSync = true;\n        } else if (cmd.equals(\"-verify\")) {\n          verify = true;\n        } else if (cmd.equals(\"-verbose\")) {\n          verbose = true;\n        } else if (cmd.equals(\"-roll\")) {\n          roll = Long.parseLong(args[++i]);\n        } else if (cmd.equals(\"-h\")) {\n          printUsageAndExit();\n        } else if (cmd.equals(\"--help\")) {\n          printUsageAndExit();\n        } else {\n          System.err.println(\"UNEXPECTED: \" + cmd);\n          printUsageAndExit();\n        }\n      } catch (Exception e) {\n        printUsageAndExit();\n      }\n    }\n\n    // Run HLog Performance Evaluation\n    FileSystem fs = FileSystem.get(getConf());\n    LOG.info(\"\" + fs);\n    try {\n      if (rootRegionDir == null) {\n        rootRegionDir = TEST_UTIL.getDataTestDir(\"HLogPerformanceEvaluation\");\n      }\n      rootRegionDir = rootRegionDir.makeQualified(fs);\n      cleanRegionRootDir(fs, rootRegionDir);\n      // Initialize Table Descriptor\n      HTableDescriptor htd = createHTableDescriptor(numFamilies);\n      final long whenToRoll = roll;\n      HLog hlog = new FSHLog(fs, rootRegionDir, \"wals\", getConf()) {\n        int appends = 0;\n        protected void doWrite(HRegionInfo info, HLogKey logKey, WALEdit logEdit,\n            HTableDescriptor htd)\n        throws IOException {\n          this.appends++;\n          if (this.appends % whenToRoll == 0) {\n            LOG.info(\"Rolling after \" + appends + \" edits\");\n            rollWriter();\n          }\n          super.doWrite(info, logKey, logEdit, htd);\n        };\n      };\n      hlog.rollWriter();\n      HRegion region = null;\n      try {\n        region = openRegion(fs, rootRegionDir, htd, hlog);\n        long putTime = runBenchmark(new HLogPutBenchmark(region, htd, numIterations, noSync), numThreads);\n        logBenchmarkResult(\"Summary: threads=\" + numThreads + \", iterations=\" + numIterations,\n          numIterations * numThreads, putTime);\n        if (region != null) {\n          closeRegion(region);\n          region = null;\n        }\n        if (verify) {\n          Path dir = ((FSHLog) hlog).getDir();\n          long editCount = 0;\n          for (FileStatus fss: fs.listStatus(dir)) {\n            editCount += verify(fss.getPath(), verbose);\n          }\n          long expected = numIterations * numThreads;\n          if (editCount != expected) {\n            throw new IllegalStateException(\"Counted=\" + editCount + \", expected=\" + expected);\n          }\n        }\n      } finally {\n        if (region != null) closeRegion(region);\n        // Remove the root dir for this test region\n        cleanRegionRootDir(fs, rootRegionDir);\n      }\n    } finally {\n      fs.close();\n    }\n\n    return(0);\n  }","id":82849,"modified_method":"@Override\n  public int run(String[] args) throws Exception {\n    Path rootRegionDir = null;\n    int numThreads = 1;\n    long numIterations = 10000;\n    int numFamilies = 1;\n    boolean noSync = false;\n    boolean verify = false;\n    boolean verbose = false;\n    boolean cleanup = true;\n    long roll = Long.MAX_VALUE;\n    // Process command line args\n    for (int i = 0; i < args.length; i++) {\n      String cmd = args[i];\n      try {\n        if (cmd.equals(\"-threads\")) {\n          numThreads = Integer.parseInt(args[++i]);\n        } else if (cmd.equals(\"-iterations\")) {\n          numIterations = Long.parseLong(args[++i]);\n        } else if (cmd.equals(\"-path\")) {\n          rootRegionDir = new Path(args[++i]);\n        } else if (cmd.equals(\"-families\")) {\n          numFamilies = Integer.parseInt(args[++i]);\n        } else if (cmd.equals(\"-qualifiers\")) {\n          numQualifiers = Integer.parseInt(args[++i]);\n        } else if (cmd.equals(\"-keySize\")) {\n          keySize = Integer.parseInt(args[++i]);\n        } else if (cmd.equals(\"-valueSize\")) {\n          valueSize = Integer.parseInt(args[++i]);\n        } else if (cmd.equals(\"-nosync\")) {\n          noSync = true;\n        } else if (cmd.equals(\"-verify\")) {\n          verify = true;\n        } else if (cmd.equals(\"-verbose\")) {\n          verbose = true;\n        } else if (cmd.equals(\"-nocleanup\")) {\n          cleanup = false;\n        } else if (cmd.equals(\"-roll\")) {\n          roll = Long.parseLong(args[++i]);\n        } else if (cmd.equals(\"-h\")) {\n          printUsageAndExit();\n        } else if (cmd.equals(\"--help\")) {\n          printUsageAndExit();\n        } else {\n          System.err.println(\"UNEXPECTED: \" + cmd);\n          printUsageAndExit();\n        }\n      } catch (Exception e) {\n        printUsageAndExit();\n      }\n    }\n\n    // Run HLog Performance Evaluation\n    FileSystem fs = FileSystem.get(getConf());\n    LOG.info(\"\" + fs);\n    try {\n      if (rootRegionDir == null) {\n        rootRegionDir = TEST_UTIL.getDataTestDir(\"HLogPerformanceEvaluation\");\n      }\n      rootRegionDir = rootRegionDir.makeQualified(fs);\n      cleanRegionRootDir(fs, rootRegionDir);\n      // Initialize Table Descriptor\n      HTableDescriptor htd = createHTableDescriptor(numFamilies);\n      final long whenToRoll = roll;\n      HLog hlog = new FSHLog(fs, rootRegionDir, \"wals\", getConf()) {\n        int appends = 0;\n        protected void doWrite(HRegionInfo info, HLogKey logKey, WALEdit logEdit,\n            HTableDescriptor htd)\n        throws IOException {\n          this.appends++;\n          if (this.appends % whenToRoll == 0) {\n            LOG.info(\"Rolling after \" + appends + \" edits\");\n            rollWriter();\n          }\n          super.doWrite(info, logKey, logEdit, htd);\n        };\n      };\n      hlog.rollWriter();\n      HRegion region = null;\n      try {\n        region = openRegion(fs, rootRegionDir, htd, hlog);\n        long putTime = runBenchmark(new HLogPutBenchmark(region, htd, numIterations, noSync), numThreads);\n        logBenchmarkResult(\"Summary: threads=\" + numThreads + \", iterations=\" + numIterations,\n          numIterations * numThreads, putTime);\n        if (region != null) {\n          closeRegion(region);\n          region = null;\n        }\n        if (verify) {\n          Path dir = ((FSHLog) hlog).getDir();\n          long editCount = 0;\n          FileStatus [] fsss = fs.listStatus(dir);\n          if (fsss.length == 0) throw new IllegalStateException(\"No WAL found\");\n          for (FileStatus fss: fsss) {\n            Path p = fss.getPath();\n            if (!fs.exists(p)) throw new IllegalStateException(p.toString());\n            editCount += verify(p, verbose);\n          }\n          long expected = numIterations * numThreads;\n          if (editCount != expected) {\n            throw new IllegalStateException(\"Counted=\" + editCount + \", expected=\" + expected);\n          }\n        }\n      } finally {\n        if (region != null) closeRegion(region);\n        // Remove the root dir for this test region\n        if (cleanup) cleanRegionRootDir(fs, rootRegionDir);\n      }\n    } finally {\n      fs.close();\n    }\n\n    return(0);\n  }","commit_id":"b685cf69dae131832b0d76c06429f2d65c9cbc3c","url":"https://github.com/apache/hbase"},{"original_method":"@Override\n  protected boolean readNext(HLog.Entry entry) throws IOException {\n    while (true) {\n      long originalPosition = this.inputStream.getPos();\n      if (trailerPresent && originalPosition == this.walEditsStopOffset) return false;\n      WALKey.Builder builder = WALKey.newBuilder();\n      int size = 0;\n      try {\n        int originalAvailable = this.inputStream.available();\n        try {\n          int firstByte = this.inputStream.read();\n          if (firstByte == -1) {\n            throw new EOFException(\"First byte is negative\");\n          }\n          size = CodedInputStream.readRawVarint32(firstByte, this.inputStream);\n          if (this.inputStream.available() < size) {\n            throw new EOFException(\"Available stream not enough for edit, \" +\n                \"inputStream.available()= \" + this.inputStream.available() + \", \" +\n                \"entry size= \" + size);\n          }\n          final InputStream limitedInput = new LimitInputStream(this.inputStream, size);\n          builder.mergeFrom(limitedInput);\n        } catch (InvalidProtocolBufferException ipbe) {\n          throw (EOFException) new EOFException(\"Invalid PB, EOF? Ignoring; originalPosition=\" +\n              originalPosition + \", currentPosition=\" + this.inputStream.getPos() +\n              \", messageSize=\" + size + \", originalAvailable=\" + originalAvailable +\n              \", currentAvailable=\" + this.inputStream.available()).initCause(ipbe);\n        }\n        if (!builder.isInitialized()) {\n          // TODO: not clear if we should try to recover from corrupt PB that looks semi-legit.\n          //       If we can get the KV count, we could, theoretically, try to get next record.\n          throw new EOFException(\"Partial PB while reading WAL, \" +\n              \"probably an unexpected EOF, ignoring\");\n        }\n        WALKey walKey = builder.build();\n        entry.getKey().readFieldsFromPb(walKey, this.byteStringUncompressor);\n        if (!walKey.hasFollowingKvCount() || 0 == walKey.getFollowingKvCount()) {\n          LOG.trace(\"WALKey has no KVs that follow it; trying the next one\");\n          continue;\n        }\n        int expectedCells = walKey.getFollowingKvCount();\n        long posBefore = this.inputStream.getPos();\n        try {\n          int actualCells = entry.getEdit().readFromCells(cellDecoder, expectedCells);\n          if (expectedCells != actualCells) {\n            throw new EOFException(\"Only read \" + actualCells); // other info added in catch\n          }\n        } catch (Exception ex) {\n          String posAfterStr = \"<unknown>\";\n          try {\n            posAfterStr = this.inputStream.getPos() + \"\";\n          } catch (Throwable t) {\n            LOG.trace(\"Error getting pos for error message - ignoring\", t);\n          }\n          String message = \" while reading \" + expectedCells + \" WAL KVs; started reading at \"\n              + posBefore + \" and read up to \" + posAfterStr;\n          IOException realEofEx = extractHiddenEof(ex);\n          throw (EOFException) new EOFException(\"EOF \" + message).\n              initCause(realEofEx != null ? realEofEx : ex);\n        }\n        if (trailerPresent && this.inputStream.getPos() > this.walEditsStopOffset) {\n          LOG.error(\"Read WALTrailer while reading WALEdits. hlog: \" + this.path\n              + \", inputStream.getPos(): \" + this.inputStream.getPos() + \", walEditsStopOffset: \"\n              + this.walEditsStopOffset);\n          throw new EOFException(\"Read WALTrailer while reading WALEdits\");\n        }\n      } catch (EOFException eof) {\n        LOG.trace(\"Encountered a malformed edit, seeking back to last good position in file\", eof);\n        seekOnFs(originalPosition);\n        return false;\n      }\n      return true;\n    }\n  }","id":82850,"modified_method":"@Override\n  protected boolean readNext(HLog.Entry entry) throws IOException {\n    while (true) {\n      // OriginalPosition might be < 0 on local fs; if so, it is useless to us.\n      long originalPosition = this.inputStream.getPos();\n      if (trailerPresent && originalPosition > 0 && originalPosition == this.walEditsStopOffset) {\n        return false;\n      }\n      WALKey.Builder builder = WALKey.newBuilder();\n      long size = 0;\n      try {\n        long available = -1;\n        try {\n          int firstByte = this.inputStream.read();\n          if (firstByte == -1) {\n            throw new EOFException(\"First byte is negative\");\n          }\n          size = CodedInputStream.readRawVarint32(firstByte, this.inputStream);\n          // available may be < 0 on local fs for instance.  If so, can't depend on it.\n          available = this.inputStream.available();\n          if (available > 0 && available < size) {\n            throw new EOFException(\"Available stream not enough for edit, \" +\n                \"inputStream.available()= \" + this.inputStream.available() + \", \" +\n                \"entry size= \" + size);\n          }\n          final InputStream limitedInput = new LimitInputStream(this.inputStream, size);\n          builder.mergeFrom(limitedInput);\n        } catch (InvalidProtocolBufferException ipbe) {\n          throw (EOFException) new EOFException(\"Invalid PB, EOF? Ignoring; originalPosition=\" +\n            originalPosition + \", currentPosition=\" + this.inputStream.getPos() +\n            \", messageSize=\" + size + \", currentAvailable=\" + available).initCause(ipbe);\n        }\n        if (!builder.isInitialized()) {\n          // TODO: not clear if we should try to recover from corrupt PB that looks semi-legit.\n          //       If we can get the KV count, we could, theoretically, try to get next record.\n          throw new EOFException(\"Partial PB while reading WAL, \" +\n              \"probably an unexpected EOF, ignoring\");\n        }\n        WALKey walKey = builder.build();\n        entry.getKey().readFieldsFromPb(walKey, this.byteStringUncompressor);\n        if (!walKey.hasFollowingKvCount() || 0 == walKey.getFollowingKvCount()) {\n          LOG.trace(\"WALKey has no KVs that follow it; trying the next one\");\n          continue;\n        }\n        int expectedCells = walKey.getFollowingKvCount();\n        long posBefore = this.inputStream.getPos();\n        try {\n          int actualCells = entry.getEdit().readFromCells(cellDecoder, expectedCells);\n          if (expectedCells != actualCells) {\n            throw new EOFException(\"Only read \" + actualCells); // other info added in catch\n          }\n        } catch (Exception ex) {\n          String posAfterStr = \"<unknown>\";\n          try {\n            posAfterStr = this.inputStream.getPos() + \"\";\n          } catch (Throwable t) {\n            LOG.trace(\"Error getting pos for error message - ignoring\", t);\n          }\n          String message = \" while reading \" + expectedCells + \" WAL KVs; started reading at \"\n              + posBefore + \" and read up to \" + posAfterStr;\n          IOException realEofEx = extractHiddenEof(ex);\n          throw (EOFException) new EOFException(\"EOF \" + message).\n              initCause(realEofEx != null ? realEofEx : ex);\n        }\n        if (trailerPresent && this.inputStream.getPos() > this.walEditsStopOffset) {\n          LOG.error(\"Read WALTrailer while reading WALEdits. hlog: \" + this.path\n              + \", inputStream.getPos(): \" + this.inputStream.getPos() + \", walEditsStopOffset: \"\n              + this.walEditsStopOffset);\n          throw new EOFException(\"Read WALTrailer while reading WALEdits\");\n        }\n      } catch (EOFException eof) {\n        LOG.trace(\"Encountered a malformed edit, seeking back to last good position in file\", eof);\n        // If originalPosition is < 0, it is rubbish and we cannot use it (probably local fs)\n        if (originalPosition < 0) throw eof;\n        // Else restore our position to original location in hope that next time through we will\n        // read successfully.\n        seekOnFs(originalPosition);\n        return false;\n      }\n      return true;\n    }\n  }","commit_id":"b685cf69dae131832b0d76c06429f2d65c9cbc3c","url":"https://github.com/apache/hbase"},{"original_method":"/**\n     * Returns the JUnit test suite for this package.<p>\n     * \n     * @return the JUnit test suite for this package\n     */\n    public static Test suite() {\n\n        TestSuite suite = new TestSuite(\"Tests for package \" + AllTests.class.getPackage().getName());\n        OpenCmsTestProperties.initialize(org.opencms.test.AllTests.TEST_PROPERTIES_PATH);\n        //$JUnit-BEGIN$\n        suite.addTest(new TestSuite(TestCmsBrowserMatcher.class));\n        suite.addTest(new TestSuite(TestCmsDateUtil.class));\n        suite.addTest(new TestSuite(TestCmsExportFolderMatcher.class));\n        suite.addTest(new TestSuite(TestCmsHtml2TextConverter.class));\n        suite.addTest(new TestSuite(TestCmsHtmlConverter.class));\n        suite.addTest(new TestSuite(TestCmsHtmlParser.class));\n        suite.addTest(new TestSuite(TestCmsMacroResolver.class));\n        suite.addTest(new TestSuite(TestCmsResourceTranslator.class));\n        suite.addTest(new TestSuite(TestCmsStringUtil.class));\n        suite.addTest(new TestSuite(TestCmsUriSplitter.class));\n        suite.addTest(new TestSuite(TestCmsUUID.class));\n        suite.addTest(new TestSuite(TestCmsXmlSaxWriter.class));\n        suite.addTest(new TestSuite(TestValidFilename.class));\n        //$JUnit-END$\n        return suite;\n    }","id":82851,"modified_method":"/**\n     * Returns the JUnit test suite for this package.<p>\n     * \n     * @return the JUnit test suite for this package\n     */\n    public static Test suite() {\n\n        TestSuite suite = new TestSuite(\"Tests for package \" + AllTests.class.getPackage().getName());\n        OpenCmsTestProperties.initialize(org.opencms.test.AllTests.TEST_PROPERTIES_PATH);\n        //$JUnit-BEGIN$\n        suite.addTest(new TestSuite(TestCmsBrowserMatcher.class));\n        suite.addTest(new TestSuite(TestCmsDateUtil.class));\n        suite.addTest(new TestSuite(TestCmsExportFolderMatcher.class));\n        suite.addTest(new TestSuite(TestCmsFileUtil.class));\n        suite.addTest(new TestSuite(TestCmsHtml2TextConverter.class));\n        suite.addTest(new TestSuite(TestCmsHtmlConverter.class));\n        suite.addTest(new TestSuite(TestCmsHtmlParser.class));\n        suite.addTest(new TestSuite(TestCmsMacroResolver.class));\n        suite.addTest(new TestSuite(TestCmsResourceTranslator.class));\n        suite.addTest(new TestSuite(TestCmsStringUtil.class));\n        suite.addTest(new TestSuite(TestCmsUriSplitter.class));\n        suite.addTest(new TestSuite(TestCmsUUID.class));\n        suite.addTest(new TestSuite(TestCmsXmlSaxWriter.class));\n        suite.addTest(new TestSuite(TestValidFilename.class));\n        //$JUnit-END$\n        return suite;\n    }","commit_id":"fb9bbfde765160be3217c29d26b889e94b2976ae","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Reads all bytes from the given input stream and returns the result in an array.<p> \n     * \n     * @param in the input stream to read the bytes from \n     * @return the byte content of the input stream\n     * \n     * @throws IOException in case of errors in the underlying java.io methods used\n     */\n    public static byte[] readFully(InputStream in) throws IOException {\n\n        if (in instanceof ByteArrayInputStream) {\n            // content can be read in one pass\n            return readFully(in, in.available());\n        }\n\n        ByteArrayOutputStream out = new ByteArrayOutputStream(2048);\n        if (in.available() > 0) {\n            // read the file content in available chunks\n            int offset = 0;\n            int numRead = 0;\n            do {\n                int available = in.available();\n                if (available > 0) {\n                    byte[] bytes = new byte[available];\n                    numRead = in.read(bytes, offset, bytes.length);\n                    out.write(bytes, offset, numRead);\n                    offset += numRead;\n                } else {\n                    numRead = in.read();\n                    if (numRead != -1) {\n                        out.write(numRead);\n                        offset++;\n                    }\n                }\n            } while (numRead != -1);\n        } else {\n            // read the file content byte-to-byte\n            int c;\n            while ((c = in.read()) != -1) {\n                out.write(c);\n            }\n        }\n        in.close();\n        out.close();\n        return out.toByteArray();\n    }","id":82852,"modified_method":"/**\n     * Reads all bytes from the given input stream and returns the result in an array.<p> \n     * \n     * @param in the input stream to read the bytes from \n     * @return the byte content of the input stream\n     * \n     * @throws IOException in case of errors in the underlying java.io methods used\n     */\n    public static byte[] readFully(InputStream in) throws IOException {\n\n        if (in instanceof ByteArrayInputStream) {\n            // content can be read in one pass\n            return readFully(in, in.available());\n        }\n\n        // copy buffer\n        int xferSize = in.available();\n        byte[] xfer = new byte[xferSize == 0 ? 2048 : xferSize];\n        // output buffer\n        ByteArrayOutputStream out = new ByteArrayOutputStream(xfer.length);\n\n        // transfer data from input to output in xfer-sized chunks.\n        for (int bytesRead = in.read(xfer, 0, xfer.length); bytesRead >= 0; bytesRead = in.read(xfer, 0, xfer.length)) {\n            if (bytesRead > 0) {\n                out.write(xfer, 0, bytesRead);\n            }\n        }\n        in.close();\n        out.close();\n        return out.toByteArray();\n    }","commit_id":"fb9bbfde765160be3217c29d26b889e94b2976ae","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/** Copy the given quantity of data from the given bucket to the given OutputStream. \n\t * @throws IOException If there was an error reading from the bucket or writing to the stream. */\n\tpublic static void copyTo(Bucket decodedData, OutputStream os, long truncateLength) throws IOException {\n\t\tif(truncateLength == 0) return;\n\t\tInputStream is = decodedData.getInputStream();\n\t\tbyte[] buf = new byte[4096];\n\t\tlong moved = 0;\n\t\twhile(moved < truncateLength) {\n\t\t\tint bytes = Math.min(buf.length, (int)(truncateLength - moved));\n\t\t\tis.read(buf, 0, bytes);\n\t\t\tos.write(buf, 0, bytes);\n\t\t}\n\t}","id":82853,"modified_method":"/** Copy the given quantity of data from the given bucket to the given OutputStream. \n\t * @throws IOException If there was an error reading from the bucket or writing to the stream. */\n\tpublic static void copyTo(Bucket decodedData, OutputStream os, long truncateLength) throws IOException {\n\t\tif(truncateLength == 0) return;\n\t\tif(truncateLength < 0) truncateLength = Long.MAX_VALUE;\n\t\tInputStream is = decodedData.getInputStream();\n\t\tbyte[] buf = new byte[4096];\n\t\tlong moved = 0;\n\t\twhile(moved < truncateLength) {\n\t\t\t// DO NOT move the (int) inside the Math.min()! big numbers truncate to negative numbers.\n\t\t\tint bytes = (int) Math.min(buf.length, truncateLength - moved);\n\t\t\tif(bytes <= 0)\n\t\t\t\tthrow new IllegalStateException(\"bytes=\"+bytes+\", truncateLength=\"+truncateLength+\", moved=\"+moved);\n\t\t\tbytes = is.read(buf, 0, bytes);\n\t\t\tif(bytes <= 0) {\n\t\t\t\tif(truncateLength == Long.MAX_VALUE)\n\t\t\t\t\tbreak;\n\t\t\t\tthrow new IOException(\"Could not move required quantity of data: \"+bytes);\n\t\t\t}\n\t\t\tos.write(buf, 0, bytes);\n\t\t\tmoved += bytes;\n\t\t}\n\t\tis.close();\n\t}","commit_id":"9b8cbcb349609f65aa19787b46e96d4716e2bbc0","url":"https://github.com/freenet/fred"},{"original_method":"public int read(byte[] buf, int offset, int length) throws IOException {\n\t\t\tif(ptr > dataLength) return -1;\n\t\t\tlength = Math.min(length, available());\n\t\t\tint readBytes = in.read(buf, offset, length);\n\t\t\tif(readBytes <= 0) return readBytes;\n\t\t\tptr += dataLength;\n\t\t\tpcfb.blockDecipher(buf, offset, readBytes);\n\t\t\treturn readBytes;\n\t\t}","id":82854,"modified_method":"public int read(byte[] buf, int offset, int length) throws IOException {\n\t\t\t// FIXME remove debugging\n\t\t\tif(length+offset > buf.length || offset < 0 || length < 0)\n\t\t\t\tthrow new ArrayIndexOutOfBoundsException(\"a=\"+offset+\", b=\"+length+\", length \"+buf.length);\n\t\t\tint x = available();\n\t\t\tif(x <= 0) return -1;\n\t\t\tlength = Math.min(length, x);\n\t\t\tint readBytes = in.read(buf, offset, length);\n\t\t\tif(readBytes <= 0) return readBytes;\n\t\t\tptr += readBytes;\n\t\t\tpcfb.blockDecipher(buf, offset, readBytes);\n\t\t\treturn readBytes;\n\t\t}","commit_id":"9b8cbcb349609f65aa19787b46e96d4716e2bbc0","url":"https://github.com/freenet/fred"},{"original_method":"public final int available() {\n\t\t\treturn (int) (dataLength - ptr);\n\t\t}","id":82855,"modified_method":"public final int available() {\n\t\t\tint x = (int)(dataLength - ptr);\n\t\t\treturn (x < 0) ? 0 : x;\n\t\t}","commit_id":"9b8cbcb349609f65aa19787b46e96d4716e2bbc0","url":"https://github.com/freenet/fred"},{"original_method":"public int read(byte[] bytes, int a, int b) throws java.io.IOException {\n\t\tsynchronized (tfb) {\n\t\t\tprintln(\".read(byte[], int, int)\");\n\t\t\tcheckValid();\n\t\t\treturn in.read(bytes, a, b);\n\t\t}\n\t}","id":82856,"modified_method":"public int read(byte[] bytes, int a, int b) throws java.io.IOException {\n\t\tsynchronized (tfb) {\n\t\t\tprintln(\".read(byte[], int, int)\");\n\t\t\tcheckValid();\n\t\t\t// FIXME remove debugging\n\t\t\tif(a+b > bytes.length || a < 0 || b < 0)\n\t\t\t\tthrow new ArrayIndexOutOfBoundsException(\"a=\"+a+\", b=\"+b+\", length \"+bytes.length);\n\t\t\treturn in.read(bytes, a, b);\n\t\t}\n\t}","commit_id":"9b8cbcb349609f65aa19787b46e96d4716e2bbc0","url":"https://github.com/freenet/fred"},{"original_method":"@NotNull\n    private <D extends CallableDescriptor> OverloadResolutionResults<D> performResolution(@NotNull BindingTrace trace, @NotNull JetScope scope, @NotNull JetType expectedType, @NotNull ResolutionTask<D> task, @NotNull TracingStrategy tracing) {\n        for (ResolvedCallImpl<D> candidateCall : task.getCandidates()) {\n            D candidate = candidateCall.getCandidateDescriptor();\n            TemporaryBindingTrace temporaryTrace = TemporaryBindingTrace.create(trace);\n            candidateCall.setTrace(temporaryTrace);\n\n            tracing.bindReference(temporaryTrace, candidateCall);\n            \n            if (ErrorUtils.isError(candidate)) {\n                candidateCall.setStatus(SUCCESS);\n                checkTypesWithNoCallee(temporaryTrace, scope, task.getCall());\n                continue;\n            }\n\n            boolean errorInArgumentMapping = ValueArgumentsToParametersMapper.mapValueArgumentsToParameters(task, tracing, candidateCall);\n            if (errorInArgumentMapping) {\n                candidateCall.setStatus(OTHER_ERROR);\n                checkTypesWithNoCallee(temporaryTrace, scope, task.getCall());\n                continue;\n            }\n\n            List<JetTypeProjection> jetTypeArguments = task.getCall().getTypeArguments();\n            if (jetTypeArguments.isEmpty()) {\n                if (!candidate.getTypeParameters().isEmpty()) {\n                    // Type argument inference\n\n                    ResolutionDebugInfo.Data debugInfo = trace.get(ResolutionDebugInfo.RESOLUTION_DEBUG_INFO, task.getCall().getCallElement());\n\n                    ConstraintSystem constraintSystem = new ConstraintSystemImpl(new DebugConstraintResolutionListener(debugInfo));\n\n                    // If the call is recursive, e.g.\n                    //   fun foo<T>(t : T) : T = foo(t)\n                    // we can't use same descriptor objects for T's as actual type values and same T's as unknowns,\n                    // because constraints become trivial (T :< T), and inference fails\n                    //\n                    // Thus, we replace the parameters of our descriptor with fresh objects (perform alpha-conversion)\n                    CallableDescriptor candidateWithFreshVariables = FunctionDescriptorUtil.alphaConvertTypeParameters(candidate);\n\n\n                    for (TypeParameterDescriptor typeParameterDescriptor : candidateWithFreshVariables.getTypeParameters()) {\n                        constraintSystem.registerTypeVariable(typeParameterDescriptor, Variance.INVARIANT); // TODO: variance of the occurrences\n                    }\n\n                    TypeSubstitutor substituteDontCare = ConstraintSystemImpl.makeConstantSubstitutor(candidateWithFreshVariables.getTypeParameters(), DONT_CARE);\n\n                    // Value parameters\n                    for (Map.Entry<ValueParameterDescriptor, ResolvedValueArgument> entry : candidateCall.getValueArguments().entrySet()) {\n                        ResolvedValueArgument valueArgument = entry.getValue();\n                        ValueParameterDescriptor valueParameterDescriptor = candidateWithFreshVariables.getValueParameters().get(entry.getKey().getIndex());\n\n                        JetType effectiveExpectedType = getEffectiveExpectedType(valueParameterDescriptor);\n\n                        for (JetExpression expression : valueArgument.getArgumentExpressions()) {\n                            // TODO : more attempts, with different expected types\n\n                            // Here we type check expecting an error type (that is a subtype of any type and a supertype of any type\n                            // and throw the results away\n                            // We'll type check the arguments later, with the inferred types expected\n                            TemporaryBindingTrace traceForUnknown = TemporaryBindingTrace.create(temporaryTrace);\n                            ExpressionTypingServices temporaryServices = new ExpressionTypingServices(semanticServices, traceForUnknown);\n                            JetType type = temporaryServices.getType(scope, expression, substituteDontCare.substitute(valueParameterDescriptor.getOutType(), Variance.INVARIANT));\n                            if (type != null) {\n                                constraintSystem.addSubtypingConstraint(type, effectiveExpectedType);\n                            }\n                            else {\n                                candidateCall.argumentHasNoType();\n                            }\n                        }\n                    }\n\n                    // Receiver\n                    // Error is already reported if something is missing\n                    ReceiverDescriptor receiverArgument = candidateCall.getReceiverArgument();\n                    ReceiverDescriptor receiverParameter = candidateWithFreshVariables.getReceiverParameter();\n                    if (receiverArgument.exists() && receiverParameter.exists()) {\n                        constraintSystem.addSubtypingConstraint(receiverArgument.getType(), receiverParameter.getType());\n                    }\n\n                    // Return type\n                    if (expectedType != NO_EXPECTED_TYPE) {\n                        constraintSystem.addSubtypingConstraint(candidateWithFreshVariables.getReturnType(), expectedType);\n                    }\n\n                    // Solution\n                    ConstraintSystemSolution solution = constraintSystem.solve();\n                    if (solution.getStatus().isSuccessful()) {\n                        D substitute = (D) candidateWithFreshVariables.substitute(solution.getSubstitutor());\n                        assert substitute != null;\n                        replaceValueParametersWithSubstitutedOnes(candidateCall, substitute);\n                        candidateCall.setResultingDescriptor(substitute);\n\n                        for (TypeParameterDescriptor typeParameterDescriptor : candidateCall.getCandidateDescriptor().getTypeParameters()) {\n                            candidateCall.recordTypeArgument(typeParameterDescriptor, solution.getValue(candidateWithFreshVariables.getTypeParameters().get(typeParameterDescriptor.getIndex())));\n                        }\n\n                        // Here we type check the arguments with inferred types expected\n                        checkValueArgumentTypes(scope, candidateCall);\n\n                        candidateCall.setStatus(SUCCESS);\n                    }\n                    else {\n                        tracing.typeInferenceFailed(temporaryTrace, solution.getStatus());\n                        candidateCall.setStatus(checkAllValueArguments(scope, tracing, task, candidateCall));\n                    }\n                }\n                else {\n                    candidateCall.setStatus(checkAllValueArguments(scope, tracing, task, candidateCall));\n                }\n            }\n            else {\n                // Explicit type arguments passed\n\n                List<JetType> typeArguments = new ArrayList<JetType>();\n                for (JetTypeProjection projection : jetTypeArguments) {\n                    if (projection.getProjectionKind() != JetProjectionKind.NONE) {\n                        temporaryTrace.report(PROJECTION_ON_NON_CLASS_TYPE_ARGUMENT.on(projection));\n                    }\n                    JetTypeReference typeReference = projection.getTypeReference();\n                    if (typeReference != null) {\n                        typeArguments.add(new TypeResolver(semanticServices, temporaryTrace, true).resolveType(scope, typeReference));\n                    }\n                }\n                int expectedTypeArgumentCount = candidate.getTypeParameters().size();\n                if (expectedTypeArgumentCount == jetTypeArguments.size()) {\n\n                    checkGenericBoundsInAFunctionCall(jetTypeArguments, typeArguments, candidate, temporaryTrace);\n                    \n                    Map<TypeConstructor, TypeProjection> substitutionContext = FunctionDescriptorUtil.createSubstitutionContext((FunctionDescriptor) candidate, typeArguments);\n                    D substitutedDescriptor = (D) candidate.substitute(TypeSubstitutor.create(substitutionContext));\n\n                    candidateCall.setResultingDescriptor(substitutedDescriptor);\n                    replaceValueParametersWithSubstitutedOnes(candidateCall, substitutedDescriptor);\n\n                    List<TypeParameterDescriptor> typeParameters = candidateCall.getCandidateDescriptor().getTypeParameters();\n                    for (int i = 0; i < typeParameters.size(); i++) {\n                        TypeParameterDescriptor typeParameterDescriptor = typeParameters.get(i);\n                        candidateCall.recordTypeArgument(typeParameterDescriptor, typeArguments.get(i));\n                    }\n                    candidateCall.setStatus(checkAllValueArguments(scope, tracing, task, candidateCall));\n                }\n                else {\n                    candidateCall.setStatus(OTHER_ERROR);\n                    tracing.wrongNumberOfTypeArguments(temporaryTrace, expectedTypeArgumentCount);\n                }\n            }\n            \n            task.performAdvancedChecks(candidate, temporaryTrace, tracing);\n\n            // 'super' cannot be passed as an argument, for receiver arguments expression typer does not track this\n            // See TaskPrioritizer for more\n            JetSuperExpression superExpression = TaskPrioritizer.getReceiverSuper(candidateCall.getReceiverArgument());\n            if (superExpression != null) {\n                temporaryTrace.report(SUPER_IS_NOT_AN_EXPRESSION.on(superExpression, superExpression.getText()));\n                candidateCall.setStatus(OTHER_ERROR);\n            }\n\n            recordAutoCastIfNecessary(candidateCall.getReceiverArgument(), candidateCall.getTrace());\n            recordAutoCastIfNecessary(candidateCall.getThisObject(), candidateCall.getTrace());\n        }\n\n        Set<ResolvedCallImpl<D>> successfulCandidates = Sets.newLinkedHashSet();\n        Set<ResolvedCallImpl<D>> failedCandidates = Sets.newLinkedHashSet();\n        for (ResolvedCallImpl<D> candidateCall : task.getCandidates()) {\n            ResolutionStatus status = candidateCall.getStatus();\n            if (status.isSuccess()) {\n                successfulCandidates.add(candidateCall);\n            }\n            else {\n                assert status != UNKNOWN_STATUS : \"No resolution for \" + candidateCall.getCandidateDescriptor();\n                failedCandidates.add(candidateCall);\n            }\n        }\n        \n        OverloadResolutionResults<D> results = computeResultAndReportErrors(trace, tracing, successfulCandidates, failedCandidates);\n        if (!results.singleDescriptor()) {\n            checkTypesWithNoCallee(trace, scope, task.getCall());\n        }\n        return results;\n    }","id":82857,"modified_method":"@NotNull\n    private <D extends CallableDescriptor> OverloadResolutionResults<D> performResolution(@NotNull BindingTrace trace, @NotNull JetScope scope, @NotNull JetType expectedType, @NotNull ResolutionTask<D> task, @NotNull TracingStrategy tracing) {\n        for (ResolvedCallImpl<D> candidateCall : task.getCandidates()) {\n            D candidate = candidateCall.getCandidateDescriptor();\n            TemporaryBindingTrace temporaryTrace = TemporaryBindingTrace.create(trace);\n            candidateCall.setTrace(temporaryTrace);\n\n            tracing.bindReference(temporaryTrace, candidateCall);\n            \n            if (ErrorUtils.isError(candidate)) {\n                candidateCall.setStatus(SUCCESS);\n                checkTypesWithNoCallee(temporaryTrace, scope, task.getCall());\n                continue;\n            }\n\n            boolean errorInArgumentMapping = ValueArgumentsToParametersMapper.mapValueArgumentsToParameters(task, tracing, candidateCall);\n            if (errorInArgumentMapping) {\n                candidateCall.setStatus(OTHER_ERROR);\n                checkTypesWithNoCallee(temporaryTrace, scope, task.getCall());\n                continue;\n            }\n\n            List<JetTypeProjection> jetTypeArguments = task.getCall().getTypeArguments();\n            if (jetTypeArguments.isEmpty()) {\n                if (!candidate.getTypeParameters().isEmpty()) {\n                    // Type argument inference\n\n                    ResolutionDebugInfo.Data debugInfo = trace.get(ResolutionDebugInfo.RESOLUTION_DEBUG_INFO, task.getCall().getCallElement());\n\n                    ConstraintSystem constraintSystem = new ConstraintSystemImpl(new DebugConstraintResolutionListener(debugInfo));\n\n                    // If the call is recursive, e.g.\n                    //   fun foo<T>(t : T) : T = foo(t)\n                    // we can't use same descriptor objects for T's as actual type values and same T's as unknowns,\n                    // because constraints become trivial (T :< T), and inference fails\n                    //\n                    // Thus, we replace the parameters of our descriptor with fresh objects (perform alpha-conversion)\n                    CallableDescriptor candidateWithFreshVariables = FunctionDescriptorUtil.alphaConvertTypeParameters(candidate);\n\n\n                    for (TypeParameterDescriptor typeParameterDescriptor : candidateWithFreshVariables.getTypeParameters()) {\n                        constraintSystem.registerTypeVariable(typeParameterDescriptor, Variance.INVARIANT); // TODO: variance of the occurrences\n                    }\n\n                    TypeSubstitutor substituteDontCare = ConstraintSystemImpl.makeConstantSubstitutor(candidateWithFreshVariables.getTypeParameters(), DONT_CARE);\n\n                    // Value parameters\n                    for (Map.Entry<ValueParameterDescriptor, ResolvedValueArgument> entry : candidateCall.getValueArguments().entrySet()) {\n                        ResolvedValueArgument valueArgument = entry.getValue();\n                        ValueParameterDescriptor valueParameterDescriptor = candidateWithFreshVariables.getValueParameters().get(entry.getKey().getIndex());\n\n                        JetType effectiveExpectedType = getEffectiveExpectedType(valueParameterDescriptor);\n\n                        for (JetExpression expression : valueArgument.getArgumentExpressions()) {\n                            // TODO : more attempts, with different expected types\n\n                            // Here we type check expecting an error type (that is a subtype of any type and a supertype of any type\n                            // and throw the results away\n                            // We'll type check the arguments later, with the inferred types expected\n                            TemporaryBindingTrace traceForUnknown = TemporaryBindingTrace.create(temporaryTrace);\n                            ExpressionTypingServices temporaryServices = new ExpressionTypingServices(semanticServices, traceForUnknown);\n                            JetType type = temporaryServices.getType(scope, expression, substituteDontCare.substitute(valueParameterDescriptor.getOutType(), Variance.INVARIANT));\n                            if (type != null) {\n                                constraintSystem.addSubtypingConstraint(VALUE_ARGUMENT.assertSubtyping(type, effectiveExpectedType));\n                            }\n                            else {\n                                candidateCall.argumentHasNoType();\n                            }\n                        }\n                    }\n\n                    // Receiver\n                    // Error is already reported if something is missing\n                    ReceiverDescriptor receiverArgument = candidateCall.getReceiverArgument();\n                    ReceiverDescriptor receiverParameter = candidateWithFreshVariables.getReceiverParameter();\n                    if (receiverArgument.exists() && receiverParameter.exists()) {\n                        constraintSystem.addSubtypingConstraint(RECEIVER.assertSubtyping(receiverArgument.getType(), receiverParameter.getType()));\n                    }\n\n                    // Return type\n                    if (expectedType != NO_EXPECTED_TYPE) {\n                        constraintSystem.addSubtypingConstraint(EXPECTED_TYPE.assertSubtyping(candidateWithFreshVariables.getReturnType(), expectedType));\n                    }\n\n                    // Solution\n                    ConstraintSystemSolution solution = constraintSystem.solve();\n                    if (solution.getStatus().isSuccessful()) {\n                        D substitute = (D) candidateWithFreshVariables.substitute(solution.getSubstitutor());\n                        assert substitute != null;\n                        replaceValueParametersWithSubstitutedOnes(candidateCall, substitute);\n                        candidateCall.setResultingDescriptor(substitute);\n\n                        for (TypeParameterDescriptor typeParameterDescriptor : candidateCall.getCandidateDescriptor().getTypeParameters()) {\n                            candidateCall.recordTypeArgument(typeParameterDescriptor, solution.getValue(candidateWithFreshVariables.getTypeParameters().get(typeParameterDescriptor.getIndex())));\n                        }\n\n                        // Here we type check the arguments with inferred types expected\n                        checkValueArgumentTypes(scope, candidateCall);\n\n                        candidateCall.setStatus(SUCCESS);\n                    }\n                    else {\n                        tracing.typeInferenceFailed(temporaryTrace, solution.getStatus());\n                        candidateCall.setStatus(checkAllValueArguments(scope, tracing, task, candidateCall));\n                    }\n                }\n                else {\n                    candidateCall.setStatus(checkAllValueArguments(scope, tracing, task, candidateCall));\n                }\n            }\n            else {\n                // Explicit type arguments passed\n\n                List<JetType> typeArguments = new ArrayList<JetType>();\n                for (JetTypeProjection projection : jetTypeArguments) {\n                    if (projection.getProjectionKind() != JetProjectionKind.NONE) {\n                        temporaryTrace.report(PROJECTION_ON_NON_CLASS_TYPE_ARGUMENT.on(projection));\n                    }\n                    JetTypeReference typeReference = projection.getTypeReference();\n                    if (typeReference != null) {\n                        typeArguments.add(new TypeResolver(semanticServices, temporaryTrace, true).resolveType(scope, typeReference));\n                    }\n                }\n                int expectedTypeArgumentCount = candidate.getTypeParameters().size();\n                if (expectedTypeArgumentCount == jetTypeArguments.size()) {\n\n                    checkGenericBoundsInAFunctionCall(jetTypeArguments, typeArguments, candidate, temporaryTrace);\n                    \n                    Map<TypeConstructor, TypeProjection> substitutionContext = FunctionDescriptorUtil.createSubstitutionContext((FunctionDescriptor) candidate, typeArguments);\n                    D substitutedDescriptor = (D) candidate.substitute(TypeSubstitutor.create(substitutionContext));\n\n                    candidateCall.setResultingDescriptor(substitutedDescriptor);\n                    replaceValueParametersWithSubstitutedOnes(candidateCall, substitutedDescriptor);\n\n                    List<TypeParameterDescriptor> typeParameters = candidateCall.getCandidateDescriptor().getTypeParameters();\n                    for (int i = 0; i < typeParameters.size(); i++) {\n                        TypeParameterDescriptor typeParameterDescriptor = typeParameters.get(i);\n                        candidateCall.recordTypeArgument(typeParameterDescriptor, typeArguments.get(i));\n                    }\n                    candidateCall.setStatus(checkAllValueArguments(scope, tracing, task, candidateCall));\n                }\n                else {\n                    candidateCall.setStatus(OTHER_ERROR);\n                    tracing.wrongNumberOfTypeArguments(temporaryTrace, expectedTypeArgumentCount);\n                }\n            }\n            \n            task.performAdvancedChecks(candidate, temporaryTrace, tracing);\n\n            // 'super' cannot be passed as an argument, for receiver arguments expression typer does not track this\n            // See TaskPrioritizer for more\n            JetSuperExpression superExpression = TaskPrioritizer.getReceiverSuper(candidateCall.getReceiverArgument());\n            if (superExpression != null) {\n                temporaryTrace.report(SUPER_IS_NOT_AN_EXPRESSION.on(superExpression, superExpression.getText()));\n                candidateCall.setStatus(OTHER_ERROR);\n            }\n\n            recordAutoCastIfNecessary(candidateCall.getReceiverArgument(), candidateCall.getTrace());\n            recordAutoCastIfNecessary(candidateCall.getThisObject(), candidateCall.getTrace());\n        }\n\n        Set<ResolvedCallImpl<D>> successfulCandidates = Sets.newLinkedHashSet();\n        Set<ResolvedCallImpl<D>> failedCandidates = Sets.newLinkedHashSet();\n        for (ResolvedCallImpl<D> candidateCall : task.getCandidates()) {\n            ResolutionStatus status = candidateCall.getStatus();\n            if (status.isSuccess()) {\n                successfulCandidates.add(candidateCall);\n            }\n            else {\n                assert status != UNKNOWN_STATUS : \"No resolution for \" + candidateCall.getCandidateDescriptor();\n                failedCandidates.add(candidateCall);\n            }\n        }\n        \n        OverloadResolutionResults<D> results = computeResultAndReportErrors(trace, tracing, successfulCandidates, failedCandidates);\n        if (!results.singleDescriptor()) {\n            checkTypesWithNoCallee(trace, scope, task.getCall());\n        }\n        return results;\n    }","commit_id":"8e10536ef93b8728315aa5a0e2e4f7de69347a75","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@Override\n    public void addSubtypingConstraint(@NotNull JetType lower, @NotNull JetType upper) {\n        TypeValue typeValueForLower = getTypeValueFor(lower);\n        TypeValue typeValueForUpper = getTypeValueFor(upper);\n        addSubtypingConstraintOnTypeValues(typeValueForLower, typeValueForUpper);\n    }","id":82858,"modified_method":"@Override\n    public void addSubtypingConstraint(@NotNull SubtypingConstraint constraint) {\n        TypeValue typeValueForLower = getTypeValueFor(constraint.getSubtype());\n        TypeValue typeValueForUpper = getTypeValueFor(constraint.getSupertype());\n        addSubtypingConstraintOnTypeValues(typeValueForLower, typeValueForUpper);\n    }","commit_id":"8e10536ef93b8728315aa5a0e2e4f7de69347a75","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@Override\n    @NotNull\n    public ConstraintSystemSolution solve() {\n        // Expand custom bounds, e.g. List<T> <: List<Int>\n        for (Map.Entry<JetType, KnownType> entry : Sets.newHashSet(knownTypes.entrySet())) {\n            JetType jetType = entry.getKey();\n            KnownType typeValue = entry.getValue();\n\n            for (TypeValue upperBound : typeValue.getUpperBounds()) {\n                if (upperBound instanceof KnownType) {\n                    KnownType knownBoundType = (KnownType) upperBound;\n                    boolean ok = constraintExpander.isSubtypeOf(jetType, knownBoundType.getType());\n                    if (!ok) {\n                        listener.error(\"Error while expanding '\" + jetType + \" :< \" + knownBoundType.getType() + \"'\");\n                        return new Solution().registerError(\"Mismatch while expanding constraints\");\n                    }\n                }\n            }\n\n            // Lower bounds?\n\n        }\n\n        // Fill in upper bounds from type parameter bounds\n        for (Map.Entry<TypeParameterDescriptor, UnknownType> entry : Sets.newHashSet(unknownTypes.entrySet())) {\n            TypeParameterDescriptor typeParameterDescriptor = entry.getKey();\n            UnknownType typeValue = entry.getValue();\n            for (JetType upperBound : typeParameterDescriptor.getUpperBounds()) {\n                addSubtypingConstraintOnTypeValues(typeValue, getTypeValueFor(upperBound));\n            }\n        }\n\n        // effective bounds for each node\n        Set<TypeValue> visited = Sets.newHashSet();\n        for (UnknownType unknownType : unknownTypes.values()) {\n            transitiveClosure(unknownType, visited);\n        }\n\n        for (UnknownType unknownType : unknownTypes.values()) {\n            listener.constraintsForUnknown(unknownType.getTypeParameterDescriptor(), unknownType);\n        }\n\n        for (KnownType knownType : knownTypes.values()) {\n            listener.constraintsForKnownType(knownType.getType(), knownType);\n        }\n\n        // Find inconsistencies\n        Solution solution = new Solution();\n\n        for (UnknownType unknownType : unknownTypes.values()) {\n            check(unknownType, solution);\n        }\n        for (KnownType knownType : knownTypes.values()) {\n            check(knownType, solution);\n        }\n\n        // TODO : check that all bounds are respected by solutions:\n        //  we have set some of them from equality constraints with known types\n        //  and thus the bounds may be violated if some of the constraints conflict\n        \n        listener.done(solution, unknownTypes.keySet());\n\n        return solution;\n    }","id":82859,"modified_method":"@Override\n    @NotNull\n    public ConstraintSystemSolution solve() {\n        // Expand custom bounds, e.g. List<T> <: List<Int>\n        for (Map.Entry<JetType, KnownType> entry : Sets.newHashSet(knownTypes.entrySet())) {\n            JetType jetType = entry.getKey();\n            KnownType typeValue = entry.getValue();\n\n            for (TypeValue upperBound : typeValue.getUpperBounds()) {\n                if (upperBound instanceof KnownType) {\n                    KnownType knownBoundType = (KnownType) upperBound;\n                    boolean ok = constraintExpander.isSubtypeOf(jetType, knownBoundType.getType());\n                    if (!ok) {\n                        listener.error(\"Error while expanding '\" + jetType + \" :< \" + knownBoundType.getType() + \"'\");\n                        return new Solution().registerError(\"Mismatch while expanding constraints\");\n                    }\n                }\n            }\n\n            for (TypeValue lowerBound : typeValue.getLowerBounds()) {\n                if (lowerBound instanceof KnownType) {\n                    KnownType knownBoundType = (KnownType) lowerBound;\n                    boolean ok = constraintExpander.isSubtypeOf(knownBoundType.getType(), jetType);\n                    if (!ok) {\n                        listener.error(\"Error while expanding '\" + knownBoundType.getType() + \" :< \" + jetType + \"'\");\n                        return new Solution().registerError(\"Mismatch while expanding constraints\");\n                    }\n                }\n            }\n        }\n\n        // Fill in upper bounds from type parameter bounds\n        for (Map.Entry<TypeParameterDescriptor, UnknownType> entry : Sets.newHashSet(unknownTypes.entrySet())) {\n            TypeParameterDescriptor typeParameterDescriptor = entry.getKey();\n            UnknownType typeValue = entry.getValue();\n            for (JetType upperBound : typeParameterDescriptor.getUpperBounds()) {\n                addSubtypingConstraintOnTypeValues(typeValue, getTypeValueFor(upperBound));\n            }\n        }\n\n        // effective bounds for each node\n        Set<TypeValue> visited = Sets.newHashSet();\n        for (UnknownType unknownType : unknownTypes.values()) {\n            transitiveClosure(unknownType, visited);\n        }\n\n        for (UnknownType unknownType : unknownTypes.values()) {\n            listener.constraintsForUnknown(unknownType.getTypeParameterDescriptor(), unknownType);\n        }\n\n        for (KnownType knownType : knownTypes.values()) {\n            listener.constraintsForKnownType(knownType.getType(), knownType);\n        }\n\n        // Find inconsistencies\n        Solution solution = new Solution();\n\n        for (UnknownType unknownType : unknownTypes.values()) {\n            check(unknownType, solution);\n        }\n        for (KnownType knownType : knownTypes.values()) {\n            check(knownType, solution);\n        }\n\n        // TODO : check that all bounds are respected by solutions:\n        //  we have set some of them from equality constraints with known types\n        //  and thus the bounds may be violated if some of the constraints conflict\n        \n        listener.done(solution, unknownTypes.keySet());\n\n        return solution;\n    }","commit_id":"8e10536ef93b8728315aa5a0e2e4f7de69347a75","url":"https://github.com/JetBrains/kotlin"},{"original_method":"private static boolean checkReceiverResolution (\n            @NotNull ReceiverDescriptor expectedReceiver,\n            @NotNull CallableDescriptor receiverArgument\n    ) {\n        ConstraintSystem constraintSystem = new ConstraintSystemImpl(ConstraintResolutionListener.DO_NOTHING);\n        for (TypeParameterDescriptor typeParameterDescriptor : receiverArgument.getTypeParameters()) {\n            constraintSystem.registerTypeVariable(typeParameterDescriptor, Variance.INVARIANT);\n        }\n\n        ReceiverDescriptor receiverParameter = receiverArgument.getReceiverParameter();\n        if (expectedReceiver.exists() && receiverParameter.exists()) {\n            constraintSystem.addSubtypingConstraint(expectedReceiver.getType(), receiverParameter.getType());\n        }\n        else if (expectedReceiver.exists() || receiverParameter.exists()) {\n            // Only one of receivers exist\n            return false;\n        }\n\n        ConstraintSystemSolution solution = constraintSystem.solve();\n        return solution.getStatus().isSuccessful();\n    }","id":82860,"modified_method":"private static boolean checkReceiverResolution (\n            @NotNull ReceiverDescriptor expectedReceiver,\n            @NotNull CallableDescriptor receiverArgument\n    ) {\n        ConstraintSystem constraintSystem = new ConstraintSystemImpl(ConstraintResolutionListener.DO_NOTHING);\n        for (TypeParameterDescriptor typeParameterDescriptor : receiverArgument.getTypeParameters()) {\n            constraintSystem.registerTypeVariable(typeParameterDescriptor, Variance.INVARIANT);\n        }\n\n        ReceiverDescriptor receiverParameter = receiverArgument.getReceiverParameter();\n        if (expectedReceiver.exists() && receiverParameter.exists()) {\n            constraintSystem.addSubtypingConstraint(RECEIVER.assertSubtyping(expectedReceiver.getType(), receiverParameter.getType()));\n        }\n        else if (expectedReceiver.exists() || receiverParameter.exists()) {\n            // Only one of receivers exist\n            return false;\n        }\n\n        ConstraintSystemSolution solution = constraintSystem.solve();\n        return solution.getStatus().isSuccessful();\n    }","commit_id":"6a8e53c3c67bae8d741a897fe6868447e61d34d2","url":"https://github.com/JetBrains/kotlin"},{"original_method":"public void add2Chunk(NewChunk c){\n      if(_ds == null) c.addNum(_ls[_lId],_xs[_lId]);\n      else {\n        if( _ls != null ) c.addUUID(_ls[_lId], Double.doubleToRawLongBits(_ds[_lId]));\n        else c.addNum(_ds[_lId]);\n      }\n    }","id":82861,"modified_method":"public void add2Chunk(NewChunk c){\n      if (_ds == null && _ss == null) {\n          c.addNum(_ls[_lId],_xs[_lId]);\n      } else {\n        if (_ls != null) {\n          c.addUUID(_ls[_lId], Double.doubleToRawLongBits(_ds[_lId]));\n        } else if (_ss != null) {\n          int sidx = _is[_lId];\n          int slen = _lId+1 < _is.length ? _is[_lId+1]-sidx : _sslen - sidx;\n          ValueString vstr = new ValueString().set(_ss, sidx, slen);\n          c.addStr(vstr);\n        } else\n          c.addNum(_ds[_lId]);\n      }\n    }","commit_id":"8f0549a772911727fdd1162761d8f4f4cefa28f9","url":"https://github.com/h2oai/h2o-3"},{"original_method":"private void append2slowstr() {\n    if( sparseLen() > Vec.CHUNK_SZ )\n      throw new ArrayIndexOutOfBoundsException(sparseLen());\n\n    // In case of all NAs and then a string, convert NAs to string NAs\n    if (_xs != null) {\n      _xs = null; _ls = null;\n      alloc_str_indices(sparseLen());\n      Arrays.fill(_is,-1);\n    }\n\n    if(_is != null && _is.length > 0){\n      // Check for sparseness\n      if(_id == null){\n        int nzs = 0; // assume one non-null for the element currently being stored\n        for( int i:_is) if( i != -1 ) ++nzs;\n        if( (nzs+1)*MIN_SPARSE_RATIO < len())\n          set_sparse(nzs);\n      } else {\n        if((MIN_SPARSE_RATIO*(_sparseLen) >> 1) > len())  cancel_sparse();\n        else _id = MemoryManager.arrayCopyOf(_id,_sparseLen<<1);\n      }\n\n      _is = MemoryManager.arrayCopyOf(_is, sparseLen()<<1);\n      /* initialize the memory extension with -1s */\n      for (int i = sparseLen(); i < _is.length; i++) _is[i] = -1;\n    } else {\n      _is = MemoryManager.malloc4 (4);\n        /* initialize everything with -1s */\n      for (int i = 0; i < _is.length; i++) _is[i] = -1;\n    }\n    assert sparseLen() == 0 || _is.length > sparseLen():\"_ls.length = \" + _is.length + \", len() = \" + sparseLen();\n\n  }","id":82862,"modified_method":"private void append2slowstr() {\n    if( sparseLen() > Vec.CHUNK_SZ )\n      throw new ArrayIndexOutOfBoundsException(sparseLen());\n\n    // In case of all NAs and then a string, convert NAs to string NAs\n    if (_xs != null) {\n      _xs = null; _ls = null;\n      alloc_str_indices(sparseLen());\n      Arrays.fill(_is,-1);\n    }\n\n    if(_is != null && _is.length > 0){\n      // Check for sparseness\n      if(_id == null){\n        int nzs = 0; // assume one non-null for the element currently being stored\n        for( int i:_is) if( i != -1 ) ++nzs;\n        if( (nzs+1)*MIN_SPARSE_RATIO < len())\n          set_sparse(nzs);\n      } else {\n        if((MIN_SPARSE_RATIO*(_sparseLen) >> 1) > len())  cancel_sparse();\n        else _id = MemoryManager.arrayCopyOf(_id,_sparseLen<<1);\n      }\n\n      _is = MemoryManager.arrayCopyOf(_is, sparseLen()<<1);\n      /* initialize the memory extension with -1s */\n      for (int i = sparseLen(); i < _is.length; i++) _is[i] = -1;\n    } else {\n      _is = MemoryManager.malloc4 (4);\n        /* initialize everything with -1s */\n      for (int i = 0; i < _is.length; i++) _is[i] = -1;\n      if (sparse()) alloc_indices(4);\n    }\n    assert sparseLen() == 0 || _is.length > sparseLen():\"_ls.length = \" + _is.length + \", len() = \" + sparseLen();\n\n  }","commit_id":"8f0549a772911727fdd1162761d8f4f4cefa28f9","url":"https://github.com/h2oai/h2o-3"},{"original_method":"@Override protected long at8_impl(int idx) {\n    int off = findOffset(idx);\n    if(getId(off) != idx)return 0;\n    long v = getIValue(off);\n    if( v== NAS[_valsz_log -1])throw new IllegalArgumentException(\"at8 but value is missing\");\n    return v;\n  }","id":82863,"modified_method":"@Override protected long at8_impl(int idx) {\n    int off = findOffset(idx);\n    if(getId(off) != idx)return 0;\n    long v = getIValue(off);\n    if( v== NAS[_valsz_log])\n      throw new IllegalArgumentException(\"at8 but value is missing\");\n    return v;\n  }","commit_id":"fc3da591ba5237cb0f7a78bdba10fd0c9eac6dd2","url":"https://github.com/h2oai/h2o-2"},{"original_method":"public void add( NewChunk nc ) {\n    if( nc._len == 0 ) return;\n    if(nc.sparse() != sparse()){ // for now, just make it dense\n      cancel_sparse();\n      nc.cancel_sparse();\n    }\n    if( _ds != null ) throw H2O.unimpl();\n    while( _len+nc._len >= _xs.length )\n      _xs = MemoryManager.arrayCopyOf(_xs,_xs.length<<1);\n    _ls = MemoryManager.arrayCopyOf(_ls,_xs.length);\n    if(_id != null)\n      _id = MemoryManager.arrayCopyOf(_id,_xs.length);\n    System.arraycopy(nc._ls,0,_ls,_len,nc._len);\n    System.arraycopy(nc._xs,0,_xs,_len,nc._len);\n    if(nc._id != null)\n      System.arraycopy(nc._id,0,_id,_len,nc._len);\n    for(int i = _len; i < _len + nc._len; ++i) _id[i] += _len2;\n    _len += nc._len;\n    _len2 += nc._len2;\n    nc._ls = null;  nc._xs = null; nc._id = null; nc._len = nc._len2 = 0;\n  }","id":82864,"modified_method":"public void add( NewChunk nc ) {\n    assert _cidx >= 0;\n    assert _len <= _len2;\n    assert nc._len <= nc._len2:\"_len = \" + nc._len + \", _len2 = \" + nc._len2;\n    if( nc._len2 == 0 ) return;\n    if(_len2 == 0){\n      _ls = nc._ls; nc._ls = null;\n      _xs = nc._xs; nc._xs = null;\n      _id = nc._id; nc._id = null;\n      _ds = nc._ds; nc._ds = null;\n      _len = nc._len;\n      _len2 = nc._len2;\n      return;\n    }\n    if(nc.sparse() != sparse()){ // for now, just make it dense\n      cancel_sparse();\n      nc.cancel_sparse();\n    }\n    if( _ds != null ) throw H2O.unimpl();\n    while( _len+nc._len >= _xs.length )\n      _xs = MemoryManager.arrayCopyOf(_xs,_xs.length<<1);\n    _ls = MemoryManager.arrayCopyOf(_ls,_xs.length);\n    System.arraycopy(nc._ls,0,_ls,_len,nc._len);\n    System.arraycopy(nc._xs,0,_xs,_len,nc._len);\n    if(_id != null) {\n      assert nc._id != null;\n      _id = MemoryManager.arrayCopyOf(_id,_xs.length);\n      System.arraycopy(nc._id,0,_id,_len,nc._len);\n      for(int i = _len; i < _len + nc._len; ++i) _id[i] += _len2;\n    } else assert nc._id == null;\n\n    _len += nc._len;\n    _len2 += nc._len2;\n    nc._ls = null;  nc._xs = null; nc._id = null; nc._len = nc._len2 = 0;\n    assert _len <= _len2;\n  }","commit_id":"fc3da591ba5237cb0f7a78bdba10fd0c9eac6dd2","url":"https://github.com/h2oai/h2o-2"},{"original_method":"protected void set_sparse(int nzeros){\n    if(_len == nzeros)return;\n    assert _len == _len2;\n    int zs = 0;\n    if(_ds == null){\n      assert nzeros < _ls.length;\n      _id = MemoryManager.malloc4(_ls.length);\n      for(int i = 0; i < _len; ++i){\n        if(_ls[i] == 0)++zs;\n        else {\n          _ls[i-zs] = _ls[i];\n          _xs[i-zs] = _xs[i];\n          _id[i-zs] = i;\n        }\n      }\n    } else {\n      assert nzeros < _ds.length;\n      _id = MemoryManager.malloc4(_ds.length);\n      for(int i = 0; i < _len; ++i){\n        if(_ds[i] == 0)++zs;\n        else {\n          _ds[i-zs] = _ds[i];\n          _id[i-zs] = i;\n        }\n      }\n    }\n    assert zs == (_len - nzeros);\n    _len = nzeros;\n  }","id":82865,"modified_method":"protected void set_sparse(int nzeros){\n    if(_len == nzeros)return;\n    assert _len == _len2:\"_len = \" + _len + \", _len2 = \" + _len2 + \", nzeros = \" + nzeros;\n    int zs = 0;\n    if(_ds == null){\n      assert nzeros < _ls.length;\n      _id = MemoryManager.malloc4(_ls.length);\n      for(int i = 0; i < _len; ++i){\n        if(_ls[i] == 0)++zs;\n        else {\n          _ls[i-zs] = _ls[i];\n          _xs[i-zs] = _xs[i];\n          _id[i-zs] = i;\n        }\n      }\n    } else {\n      assert nzeros < _ds.length;\n      _id = MemoryManager.malloc4(_ds.length);\n      for(int i = 0; i < _len; ++i){\n        if(_ds[i] == 0)++zs;\n        else {\n          _ds[i-zs] = _ds[i];\n          _id[i-zs] = i;\n        }\n      }\n    }\n    assert zs == (_len - nzeros);\n    _len = nzeros;\n  }","commit_id":"fc3da591ba5237cb0f7a78bdba10fd0c9eac6dd2","url":"https://github.com/h2oai/h2o-2"},{"original_method":"public void addNum (long val, int exp) {\n    if( val == 0 ) exp = 0;// Canonicalize zero\n    long t;                // Remove extra scaling\n    while( exp < 0 && exp > -9999999 && (t=val/10)*10==val ) { val=t; exp++; }\n    append2(val,exp);\n  }","id":82866,"modified_method":"public void addNum (long val, int exp) {\n    if(_ds != null){\n      assert _ls == null;\n      addNum(val*DParseTask.pow10(exp));\n    } else {\n      if( val == 0 ) exp = 0;// Canonicalize zero\n      long t;                // Remove extra scaling\n      while( exp < 0 && exp > -9999999 && (t=val/10)*10==val ) { val=t; exp++; }\n      append2(val,exp);\n    }\n  }","commit_id":"fc3da591ba5237cb0f7a78bdba10fd0c9eac6dd2","url":"https://github.com/h2oai/h2o-2"},{"original_method":"public void addNum(double d) {\n    if(_id == null || d != 0) {\n      if( _ds == null || _len >= _ds.length ) {\n        append2slowd();\n        // call addNum again since append2slow might have flipped to sparse\n        addNum(d);\n        return;\n      }\n      if(_id != null)_id[_len] = _len2;\n      _ds[_len++] = d;\n    }\n    _len2++;\n  }","id":82867,"modified_method":"public void addNum(double d) {\n    if(_id == null || d != 0) {\n      if(_ls != null)switch_to_doubles();\n      if( _ds == null || _len >= _ds.length ) {\n        append2slowd();\n        // call addNum again since append2slow might have flipped to sparse\n        addNum(d);\n        assert _len <= _len2;\n        return;\n      }\n      if(_id != null)_id[_len] = _len2;\n      _ds[_len++] = d;\n    }\n    _len2++;\n    assert _len <= _len2;\n  }","commit_id":"fc3da591ba5237cb0f7a78bdba10fd0c9eac6dd2","url":"https://github.com/h2oai/h2o-2"},{"original_method":"public byte type() {\n    if( _naCnt == -1 ) {        // No rollups yet?\n      int nas=0, ss=0, nzs=0;\n      if( _ds != null ) {\n        assert _ls==null && _xs==null;\n        for( double d : _ds ) if( Double.isNaN(d) ) nas++; else if( d!=0 ) nzs++;\n      } else {\n        assert _ds==null;\n        if( _ls != null )\n          for( int i=0; i<_len; i++ )\n            if( isNA2(i) ) nas++;\n            else {\n              if( isEnum2(i)   ) ss++;\n              if( _ls[i] != 0 ) nzs++;\n            }\n      }\n      _nzCnt=nzs;  _strCnt=ss;  _naCnt=nas;\n    }\n    // Now run heuristic for type\n    if(_naCnt == _len2)          // All NAs ==> NA Chunk\n      return AppendableVec.NA;\n    if(_strCnt > 0 && _strCnt + _naCnt == _len2)\n      return AppendableVec.ENUM; // All are Strings+NAs ==> Enum Chunk\n    // Larger of time & numbers\n    int timCnt=0; for( int t : _timCnt ) timCnt+=t;\n    int nums = _len2-_naCnt-timCnt;\n    return timCnt >= nums ? AppendableVec.TIME : AppendableVec.NUMBER;\n  }","id":82868,"modified_method":"public byte type() {\n    if( _naCnt == -1 ) {        // No rollups yet?\n      int nas=0, ss=0, nzs=0;\n      if( _ds != null ) {\n        assert _ls==null && _xs==null;\n        for( int i = 0; i < _len; ++i) if( Double.isNaN(_ds[i]) ) nas++; else if( _ds[i]!=0 ) nzs++;\n      } else {\n        assert _ds==null;\n        if( _ls != null )\n          for( int i=0; i<_len; i++ )\n            if( isNA2(i) ) nas++;\n            else {\n              if( isEnum2(i)   ) ss++;\n              if( _ls[i] != 0 ) nzs++;\n            }\n      }\n      _nzCnt=nzs;  _strCnt=ss;  _naCnt=nas;\n    }\n    // Now run heuristic for type\n    if(_naCnt == _len2)          // All NAs ==> NA Chunk\n      return AppendableVec.NA;\n    if(_strCnt > 0 && _strCnt + _naCnt == _len2)\n      return AppendableVec.ENUM; // All are Strings+NAs ==> Enum Chunk\n    // Larger of time & numbers\n    int timCnt=0; for( int t : _timCnt ) timCnt+=t;\n    int nums = _len2-_naCnt-timCnt;\n    return timCnt >= nums ? AppendableVec.TIME : AppendableVec.NUMBER;\n  }","commit_id":"fc3da591ba5237cb0f7a78bdba10fd0c9eac6dd2","url":"https://github.com/h2oai/h2o-2"},{"original_method":"public final boolean sparse(){return _id != null || _ls == null && _ds == null;}","id":82869,"modified_method":"public final boolean sparse(){return _id != null;}","commit_id":"fc3da591ba5237cb0f7a78bdba10fd0c9eac6dd2","url":"https://github.com/h2oai/h2o-2"},{"original_method":"void append2( long l, int x ) {\n    if(_id == null || l != 0){\n      if(_ls == null || _len == _ls.length) {\n        append2slow();\n        // again call append2 since calling append2slow might have changed things (eg might have switched to sparse and l could be 0)\n        append2(l,x);\n        return;\n      }\n      _ls[_len] = l;\n      _xs[_len] = x;\n      if(_id  != null)_id[_len] = _len2;\n      _len++;\n    }\n    _len2++;\n  }","id":82870,"modified_method":"void append2( long l, int x ) {\n    assert _ds == null;\n    if(_id == null || l != 0){\n      if(_ls == null || _len == _ls.length) {\n        append2slow();\n        // again call append2 since calling append2slow might have changed things (eg might have switched to sparse and l could be 0)\n        append2(l,x);\n        return;\n      }\n      _ls[_len] = l;\n      _xs[_len] = x;\n      if(_id  != null)_id[_len] = _len2;\n      _len++;\n    }\n    _len2++;\n    assert _len <= _len2;\n  }","commit_id":"fc3da591ba5237cb0f7a78bdba10fd0c9eac6dd2","url":"https://github.com/h2oai/h2o-2"},{"original_method":"private void append2slow( ) {\n    if( _len > Vec.CHUNK_SZ )\n      throw new ArrayIndexOutOfBoundsException(_len);\n    assert _ds==null;\n    if(_ls != null && _ls.length > 0){\n      if(_id == null){ // check for sparseness\n        int nzs = 0;\n        for(long l:_ls) if(l != 0)++nzs;\n        if((nzs+1)*MIN_SPARSE_RATIO < _len2){\n          set_sparse(nzs);\n          assert _len == 0 || _len  <= _ls.length:\"_len = \" + _len + \", _ls.length = \" + _ls.length + \", nzs = \" + nzs +  \", len2 = \" + _len2;\n          assert _id.length == _ls.length;\n          return;\n        }\n      } else {\n        // verify we're still sufficiently sparse\n        if((MIN_SPARSE_RATIO*(_len) >> 1) > _len2)  cancel_sparse();\n        else _id = MemoryManager.arrayCopyOf(_id,_len<<1);\n      }\n      _ls = MemoryManager.arrayCopyOf(_ls,_len<<1);\n      _xs = MemoryManager.arrayCopyOf(_xs,_len<<1);\n    } else {\n      _ls = MemoryManager.malloc8(4);\n      _xs = MemoryManager.malloc4(4);\n      _id = _id == null?null:MemoryManager.malloc4(4);\n    }\n    assert _len == 0 || _len < _ls.length:\"_len = \" + _len + \", _ls.length = \" + _ls.length;\n    assert _id == null || _id.length == _ls.length;\n  }","id":82871,"modified_method":"private void append2slow( ) {\n    if( _len > Vec.CHUNK_SZ )\n      throw new ArrayIndexOutOfBoundsException(_len);\n    assert _ds==null;\n    if(_ls != null && _ls.length > 0){\n      if(_id == null){ // check for sparseness\n        int nzs = 0;\n        for(long l:_ls) if(l != 0)++nzs;\n        if((nzs+1)*MIN_SPARSE_RATIO < _len2){\n          set_sparse(nzs);\n          assert _len == 0 || _len  <= _ls.length:\"_len = \" + _len + \", _ls.length = \" + _ls.length + \", nzs = \" + nzs +  \", len2 = \" + _len2;\n          assert _id.length == _ls.length;\n          assert _len <= _len2;\n          return;\n        }\n      } else {\n        // verify we're still sufficiently sparse\n        if((MIN_SPARSE_RATIO*(_len) >> 1) > _len2)  cancel_sparse();\n        else _id = MemoryManager.arrayCopyOf(_id,_len<<1);\n      }\n      _ls = MemoryManager.arrayCopyOf(_ls,_len<<1);\n      _xs = MemoryManager.arrayCopyOf(_xs,_len<<1);\n    } else {\n      _ls = MemoryManager.malloc8(4);\n      _xs = MemoryManager.malloc4(4);\n      _id = _id == null?null:MemoryManager.malloc4(4);\n    }\n    assert _len == 0 || _len < _ls.length:\"_len = \" + _len + \", _ls.length = \" + _ls.length;\n    assert _id == null || _id.length == _ls.length;\n    assert _len <= _len2;\n  }","commit_id":"fc3da591ba5237cb0f7a78bdba10fd0c9eac6dd2","url":"https://github.com/h2oai/h2o-2"},{"original_method":"public void addr( NewChunk nc ) {\n    long  [] tmpl = _ls; _ls = nc._ls; nc._ls = tmpl;\n    int   [] tmpi = _xs; _xs = nc._xs; nc._xs = tmpi;\n             tmpi = _id; _id = nc._id; nc._id = tmpi;\n    double[] tmpd = _ds; _ds = nc._ds; nc._ds = tmpd;\n    int      tmp  = _len; _len=nc._len; nc._len=tmp;\n    _len2=_len;\n    add(nc);\n  }","id":82872,"modified_method":"public void addr( NewChunk nc ) {\n    long  [] tmpl = _ls; _ls = nc._ls; nc._ls = tmpl;\n    int   [] tmpi = _xs; _xs = nc._xs; nc._xs = tmpi;\n             tmpi = _id; _id = nc._id; nc._id = tmpi;\n    double[] tmpd = _ds; _ds = nc._ds; nc._ds = tmpd;\n    int      tmp  = _len; _len=nc._len; nc._len=tmp;\n             tmp  = _len2; _len2 = nc._len2; nc._len2 = tmp;\n    add(nc);\n  }","commit_id":"fc3da591ba5237cb0f7a78bdba10fd0c9eac6dd2","url":"https://github.com/h2oai/h2o-2"},{"original_method":"@Test public void testInt() {\n    runTest(new double [] {1,2,Double.NaN},4,5,CXIChunk.class,CXIChunk.class,C1Chunk.class);\n    runTest(new double [] {1,2000,3},4,5,CXIChunk.class,CXIChunk.class,C2Chunk.class);\n    runTest(new double [] {Double.NaN,2000,3},400000,5,CXIChunk.class,CXIChunk.class,C4Chunk.class);\n    runTest(new double [] {1,2000,3},Double.NaN,1e10,CXIChunk.class,CXIChunk.class,C8Chunk.class);\n  }","id":82873,"modified_method":"@Test public void testInt() {\n    runTest(new double [] {1,2,Double.NaN},4,5,CXIChunk.class,CXIChunk.class,C1Chunk.class);\n    runTest(new double [] {1,2000,Double.NaN,3},4,5,CXIChunk.class,CXIChunk.class,C2Chunk.class);\n    runTest(new double [] {Double.NaN,2000,3},400000,5,CXIChunk.class,CXIChunk.class,C4Chunk.class);\n    runTest(new double [] {1,Double.NaN,2000,3},Double.NaN,1e10,CXIChunk.class,CXIChunk.class,C8Chunk.class);\n  }","commit_id":"fc3da591ba5237cb0f7a78bdba10fd0c9eac6dd2","url":"https://github.com/h2oai/h2o-2"},{"original_method":"protected Chunk makeChunk(double [] vals){\n    int nzs = 0;\n    int [] nonzeros = new int[vals.length];\n    int j = 0;\n    for(double d:vals)if(d != 0)nonzeros[nzs++] = j++;\n    Key key = Vec.newKey();\n    AppendableVec av = new AppendableVec(key);\n    NewChunk nv = new NewChunk(av,0);\n    for(double d:vals)nv.addNum(d);\n    nv.close(0,null);\n    Vec vec = av.close(new Futures());\n    return vec.chunkForChunkIdx(0);\n  }","id":82874,"modified_method":"protected Chunk makeChunk(double [] vals){\n    int nzs = 0;\n    int [] nonzeros = new int[vals.length];\n    int j = 0;\n    for(double d:vals)if(d != 0)nonzeros[nzs++] = j++;\n    Key key = Vec.newKey();\n    AppendableVec av = new AppendableVec(key);\n    NewChunk nv = new NewChunk(av,0);\n    for(double d:vals){\n      if(Double.isNaN(d))nv.addNA();\n      else if((long)d == d) nv.addNum((long)d,0);\n      else nv.addNum(d);\n    }\n    nv.close(0,null);\n    Vec vec = av.close(new Futures());\n    return vec.chunkForChunkIdx(0);\n  }","commit_id":"fc3da591ba5237cb0f7a78bdba10fd0c9eac6dd2","url":"https://github.com/h2oai/h2o-2"},{"original_method":"public static void deleteLoginProfile( AuthContext requestUser, Account account, User user ) throws AuthException {\n    if ( !Permissions.isAuthorized( VENDOR_IAM, IAM_RESOURCE_USER, Accounts.getUserFullName( user ), account, IAM_DELETELOGINPROFILE, requestUser ) ) {\n      throw new AuthException( AuthException.ACCESS_DENIED );\n    }\n    user.setPassword( null );\n  }","id":82875,"modified_method":"public static void deleteLoginProfile( AuthContext requestUser, Account account, User user ) throws AuthException {\n    if ( !(Permissions.isAuthorized( VENDOR_IAM, IAM_RESOURCE_USER, Accounts.getUserFullName( user ), account, IAM_DELETELOGINPROFILE, requestUser ) &&\n        accountAdminActionPermittedIfAuthorized( requestUser, user ) ) ) {\n      throw new AuthException( AuthException.ACCESS_DENIED );\n    }\n    user.setPassword( null );\n  }","commit_id":"24a37d598ebb228fbdaf8146ebb447976b034a46","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public static boolean allowListSigningCertificates( AuthContext requestUser, Account account, User user ) throws AuthException {\n    return Permissions.isAuthorized(\n        requestUser.evaluationContext( VENDOR_IAM, IAM_RESOURCE_USER, IAM_LISTSIGNINGCERTIFICATES ),\n        account.getAccountNumber( ),\n        Accounts.getUserFullName( user ) );\n  }","id":82876,"modified_method":"public static boolean allowListSigningCertificates( AuthContext requestUser, Account account, User user ) throws AuthException {\n    return Permissions.isAuthorized(\n        requestUser.evaluationContext( VENDOR_IAM, IAM_RESOURCE_USER, IAM_LISTSIGNINGCERTIFICATES ),\n        account.getAccountNumber( ),\n        Accounts.getUserFullName( user ) ) &&\n        accountAdminActionPermittedIfAuthorized( requestUser, user ) ;\n  }","commit_id":"24a37d598ebb228fbdaf8146ebb447976b034a46","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public static void deleteAccessKey( AuthContext requestUser, Account account, User user, String keyId ) throws AuthException {\n    if ( !Permissions.isAuthorized( VENDOR_IAM, IAM_RESOURCE_USER, Accounts.getUserFullName( user ), account, IAM_DELETEACCESSKEY, requestUser ) ) {\n      throw new AuthException( AuthException.ACCESS_DENIED );\n    }\n    user.removeKey( keyId );\n  }","id":82877,"modified_method":"public static void deleteAccessKey( AuthContext requestUser, Account account, User user, String keyId ) throws AuthException {\n    if ( !(Permissions.isAuthorized( VENDOR_IAM, IAM_RESOURCE_USER, Accounts.getUserFullName( user ), account, IAM_DELETEACCESSKEY, requestUser ) &&\n        accountAdminActionPermittedIfAuthorized( requestUser, user ) ) ) {\n      throw new AuthException( AuthException.ACCESS_DENIED );\n    }\n    user.removeKey( keyId );\n  }","commit_id":"24a37d598ebb228fbdaf8146ebb447976b034a46","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public static boolean allowReadLoginProfile( AuthContext requestUser, Account account, User user ) throws AuthException {\n    return Permissions.isAuthorized( VENDOR_IAM, IAM_RESOURCE_USER, Accounts.getUserFullName( user ), account, IAM_GETLOGINPROFILE, requestUser );\n  }","id":82878,"modified_method":"public static boolean allowReadLoginProfile( AuthContext requestUser, Account account, User user ) throws AuthException {\n    return Permissions.isAuthorized( VENDOR_IAM, IAM_RESOURCE_USER, Accounts.getUserFullName( user ), account, IAM_GETLOGINPROFILE, requestUser ) &&\n        accountAdminActionPermittedIfAuthorized( requestUser, user );\n  }","commit_id":"24a37d598ebb228fbdaf8146ebb447976b034a46","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public static void deleteSigningCertificate( AuthContext requestUser, Account account, User user, String certId ) throws AuthException {\n    if ( !Permissions.isAuthorized( VENDOR_IAM, IAM_RESOURCE_USER, Accounts.getUserFullName( user ), account, IAM_DELETESIGNINGCERTIFICATE, requestUser ) ) {\n      throw new AuthException( AuthException.ACCESS_DENIED );\n    }\n    user.removeCertificate( certId );\n  }","id":82879,"modified_method":"public static void deleteSigningCertificate( AuthContext requestUser, Account account, User user, String certId ) throws AuthException {\n    if ( !(Permissions.isAuthorized( VENDOR_IAM, IAM_RESOURCE_USER, Accounts.getUserFullName( user ), account, IAM_DELETESIGNINGCERTIFICATE, requestUser ) &&\n        accountAdminActionPermittedIfAuthorized( requestUser, user ) ) ) {\n      throw new AuthException( AuthException.ACCESS_DENIED );\n    }\n    user.removeCertificate( certId );\n  }","commit_id":"24a37d598ebb228fbdaf8146ebb447976b034a46","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public static boolean allowListAccessKeys( AuthContext requestUser, Account account, User user ) {\n    return Permissions.isAuthorized(\n        requestUser.evaluationContext( VENDOR_IAM, IAM_RESOURCE_USER, IAM_LISTACCESSKEYS ),\n        account.getAccountNumber( ),\n        Accounts.getUserFullName( user ) );\n  }","id":82880,"modified_method":"public static boolean allowListAccessKeys( AuthContext requestUser, Account account, User user ) {\n    return Permissions.isAuthorized(\n        requestUser.evaluationContext( VENDOR_IAM, IAM_RESOURCE_USER, IAM_LISTACCESSKEYS ),\n        account.getAccountNumber( ),\n        Accounts.getUserFullName( user ) ) &&\n        accountAdminActionPermittedIfAuthorized( requestUser, user ) ;\n  }","commit_id":"24a37d598ebb228fbdaf8146ebb447976b034a46","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public static AccessKey createAccessKey( AuthContext requestUser, Account account, User user ) throws AuthException {\n    if ( !Permissions.isAuthorized( VENDOR_IAM, IAM_RESOURCE_USER, Accounts.getUserFullName( user ), account, IAM_CREATEACCESSKEY, requestUser ) ) {\n      throw new AuthException( AuthException.ACCESS_DENIED );\n    }\n    return user.createKey( );\n  }","id":82881,"modified_method":"public static AccessKey createAccessKey( AuthContext requestUser, Account account, User user ) throws AuthException {\n    if ( !(Permissions.isAuthorized( VENDOR_IAM, IAM_RESOURCE_USER, Accounts.getUserFullName( user ), account, IAM_CREATEACCESSKEY, requestUser ) &&\n        accountAdminActionPermittedIfAuthorized( requestUser, user ) ) ) {\n      throw new AuthException( AuthException.ACCESS_DENIED );\n    }\n    return user.createKey( );\n  }","commit_id":"24a37d598ebb228fbdaf8146ebb447976b034a46","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public static void modifySigningCertificate( AuthContext requestUser, Account account, User user, String certId, String status ) throws AuthException {\n    if ( !Permissions.isAuthorized( VENDOR_IAM, IAM_RESOURCE_USER, Accounts.getUserFullName( user ), account, IAM_UPDATESIGNINGCERTIFICATE, requestUser ) ) {\n      throw new AuthException( AuthException.ACCESS_DENIED );\n    }\n    if ( Strings.isNullOrEmpty( status ) ) {\n      throw new AuthException( AuthException.EMPTY_STATUS );\n    }\n    if ( Strings.isNullOrEmpty( certId ) ) {\n      throw new AuthException( AuthException.EMPTY_CERT_ID );\n    }\n    Certificate cert = user.getCertificate( certId );\n    if ( cert.isRevoked( ) ) {\n      throw new AuthException( AuthException.NO_SUCH_CERTIFICATE );\n    }\n    cert.setActive( \"Active\".equalsIgnoreCase( status ) );\n  }","id":82882,"modified_method":"public static void modifySigningCertificate( AuthContext requestUser, Account account, User user, String certId, String status ) throws AuthException {\n    if ( !(Permissions.isAuthorized( VENDOR_IAM, IAM_RESOURCE_USER, Accounts.getUserFullName( user ), account, IAM_UPDATESIGNINGCERTIFICATE, requestUser ) &&\n        accountAdminActionPermittedIfAuthorized( requestUser, user ) ) ) {\n      throw new AuthException( AuthException.ACCESS_DENIED );\n    }\n    if ( Strings.isNullOrEmpty( status ) ) {\n      throw new AuthException( AuthException.EMPTY_STATUS );\n    }\n    if ( Strings.isNullOrEmpty( certId ) ) {\n      throw new AuthException( AuthException.EMPTY_CERT_ID );\n    }\n    Certificate cert = user.getCertificate( certId );\n    if ( cert.isRevoked( ) ) {\n      throw new AuthException( AuthException.NO_SUCH_CERTIFICATE );\n    }\n    cert.setActive( \"Active\".equalsIgnoreCase( status ) );\n  }","commit_id":"24a37d598ebb228fbdaf8146ebb447976b034a46","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public static void modifyAccessKey( AuthContext requestUser, Account account, User user, String keyId, String status ) throws AuthException {\n    if ( !Permissions.isAuthorized( VENDOR_IAM, IAM_RESOURCE_USER, Accounts.getUserFullName( user ), account, IAM_UPDATEACCESSKEY, requestUser ) ) {\n      throw new AuthException( AuthException.ACCESS_DENIED );\n    }\n    if ( Strings.isNullOrEmpty( keyId ) ) {\n      throw new AuthException( AuthException.EMPTY_KEY_ID );\n    }\n    if ( Strings.isNullOrEmpty( status ) ) {\n      throw new AuthException( AuthException.EMPTY_STATUS );\n    }\n    AccessKey key = user.getKey( keyId );\n    key.setActive( \"Active\".equalsIgnoreCase( status ) );\n  }","id":82883,"modified_method":"public static void modifyAccessKey( AuthContext requestUser, Account account, User user, String keyId, String status ) throws AuthException {\n    if ( !(Permissions.isAuthorized( VENDOR_IAM, IAM_RESOURCE_USER, Accounts.getUserFullName( user ), account, IAM_UPDATEACCESSKEY, requestUser ) &&\n        accountAdminActionPermittedIfAuthorized( requestUser, user ) ) ) {\n      throw new AuthException( AuthException.ACCESS_DENIED );\n    }\n    if ( Strings.isNullOrEmpty( keyId ) ) {\n      throw new AuthException( AuthException.EMPTY_KEY_ID );\n    }\n    if ( Strings.isNullOrEmpty( status ) ) {\n      throw new AuthException( AuthException.EMPTY_STATUS );\n    }\n    AccessKey key = user.getKey( keyId );\n    key.setActive( \"Active\".equalsIgnoreCase( status ) );\n  }","commit_id":"24a37d598ebb228fbdaf8146ebb447976b034a46","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public static void createLoginProfile( AuthContext requestUser, Account account, User user, String password ) throws AuthException {\n    if ( !Permissions.isAuthorized( VENDOR_IAM, IAM_RESOURCE_USER, Accounts.getUserFullName( user ), account, IAM_CREATELOGINPROFILE, requestUser ) ) {\n      throw new AuthException( AuthException.ACCESS_DENIED );\n    }\n    setUserPassword( user, password );\n  }","id":82884,"modified_method":"public static void createLoginProfile( AuthContext requestUser, Account account, User user, String password ) throws AuthException {\n    if ( !(Permissions.isAuthorized( VENDOR_IAM, IAM_RESOURCE_USER, Accounts.getUserFullName( user ), account, IAM_CREATELOGINPROFILE, requestUser ) &&\n        accountAdminActionPermittedIfAuthorized( requestUser, user ) ) ) {\n      throw new AuthException( AuthException.ACCESS_DENIED );\n    }\n    setUserPassword( user, password );\n  }","commit_id":"24a37d598ebb228fbdaf8146ebb447976b034a46","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public static Certificate uploadSigningCertificate( AuthContext requestUser, Account account, User user, String certBody ) throws AuthException {\n    if ( !Permissions.isAuthorized( VENDOR_IAM, IAM_RESOURCE_USER, Accounts.getUserFullName( user ), account, IAM_UPLOADSIGNINGCERTIFICATE, requestUser ) ) {\n      throw new AuthException( AuthException.ACCESS_DENIED );\n    }\n    if ( Strings.isNullOrEmpty( certBody ) ) {\n      throw new AuthException( AuthException.EMPTY_CERT );\n    }\n    String encodedPem = B64.url.encString( certBody );\n    for ( Certificate c : user.getCertificates( ) ) {\n      if ( c.getPem( ).equals( encodedPem ) ) {\n        if ( !c.isRevoked( ) ) {\n          throw new AuthException( AuthException.CONFLICT );        \n        } else {\n          user.removeCertificate( c.getCertificateId( ) );\n        }\n      }\n    }\n    X509Certificate x509 = X509CertHelper.toCertificate( encodedPem );\n    if ( x509 == null ) {\n      throw new AuthException( AuthException.INVALID_CERT );        \n    }\n    return user.addCertificate( x509 );\n  }","id":82885,"modified_method":"public static Certificate uploadSigningCertificate( AuthContext requestUser, Account account, User user, String certBody ) throws AuthException {\n    if ( !(Permissions.isAuthorized( VENDOR_IAM, IAM_RESOURCE_USER, Accounts.getUserFullName( user ), account, IAM_UPLOADSIGNINGCERTIFICATE, requestUser ) &&\n        accountAdminActionPermittedIfAuthorized( requestUser, user ) ) ) {\n      throw new AuthException( AuthException.ACCESS_DENIED );\n    }\n    if ( Strings.isNullOrEmpty( certBody ) ) {\n      throw new AuthException( AuthException.EMPTY_CERT );\n    }\n    String encodedPem = B64.url.encString( certBody );\n    for ( Certificate c : user.getCertificates( ) ) {\n      if ( c.getPem( ).equals( encodedPem ) ) {\n        if ( !c.isRevoked( ) ) {\n          throw new AuthException( AuthException.CONFLICT );        \n        } else {\n          user.removeCertificate( c.getCertificateId( ) );\n        }\n      }\n    }\n    X509Certificate x509 = X509CertHelper.toCertificate( encodedPem );\n    if ( x509 == null ) {\n      throw new AuthException( AuthException.INVALID_CERT );        \n    }\n    return user.addCertificate( x509 );\n  }","commit_id":"24a37d598ebb228fbdaf8146ebb447976b034a46","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public static void updateLoginProfile( AuthContext requestUser, Account account, User user, String newPass ) throws AuthException {\n    if ( !Permissions.isAuthorized( VENDOR_IAM, IAM_RESOURCE_USER, Accounts.getUserFullName( user ), account, IAM_UPDATELOGINPROFILE, requestUser ) ) {\n      throw new AuthException( AuthException.ACCESS_DENIED );\n    }\n    setUserPassword( user, newPass );\n  }","id":82886,"modified_method":"public static void updateLoginProfile( AuthContext requestUser, Account account, User user, String newPass ) throws AuthException {\n    if ( !(Permissions.isAuthorized( VENDOR_IAM, IAM_RESOURCE_USER, Accounts.getUserFullName( user ), account, IAM_UPDATELOGINPROFILE, requestUser ) &&\n        accountAdminActionPermittedIfAuthorized( requestUser, user ) ) ) {\n      throw new AuthException( AuthException.ACCESS_DENIED );\n    }\n    setUserPassword( user, newPass );\n  }","commit_id":"24a37d598ebb228fbdaf8146ebb447976b034a46","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public static Certificate createSigningCertificate( AuthContext requestUser, Account account, User user, KeyPair keyPair ) throws AuthException {\n    // Use the official UPLOADSIGNINGCERTIFICATE action here\n    if ( !Permissions.isAuthorized( VENDOR_IAM, IAM_RESOURCE_USER, Accounts.getUserFullName( user ), account, IAM_UPLOADSIGNINGCERTIFICATE, requestUser ) ) {\n      throw new AuthException( AuthException.ACCESS_DENIED );\n    }\n    X509Certificate x509 = Certs.generateCertificate( keyPair, user.getName() );\n    try {\n      x509.checkValidity( );\n    } catch ( Exception e ) {\n      throw new AuthException( \"Invalid X509 Certificate\", e );\n    }\n    return user.addCertificate( x509 );\n  }","id":82887,"modified_method":"public static Certificate createSigningCertificate( AuthContext requestUser, Account account, User user, KeyPair keyPair ) throws AuthException {\n    // Use the official UPLOADSIGNINGCERTIFICATE action here\n    if ( !(Permissions.isAuthorized( VENDOR_IAM, IAM_RESOURCE_USER, Accounts.getUserFullName( user ), account, IAM_UPLOADSIGNINGCERTIFICATE, requestUser ) &&\n        accountAdminActionPermittedIfAuthorized( requestUser, user ) )  ) {\n      throw new AuthException( AuthException.ACCESS_DENIED );\n    }\n    X509Certificate x509 = Certs.generateCertificate( keyPair, user.getName() );\n    try {\n      x509.checkValidity( );\n    } catch ( Exception e ) {\n      throw new AuthException( \"Invalid X509 Certificate\", e );\n    }\n    return user.addCertificate( x509 );\n  }","commit_id":"24a37d598ebb228fbdaf8146ebb447976b034a46","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"/** \n     * Validates an XML document et prepares it for further storage. Launches prepare and postValidate triggers.\n     * Since the process is dependant from the collection configuration, the collection acquires a write lock during the process.\n     * \n     * @param transaction\n     * @param broker\n     * @param docUri\n     * @param doValidate\n     * \n     * @return An {@link IndexInfo} with a write lock on the document. \n     * \n     * @throws EXistException\n     * @throws PermissionDeniedException\n     * @throws TriggerException\n     * @throws SAXException\n     * @throws LockException\n     */\n    private IndexInfo validateXMLResourceInternal(Txn transaction, DBBroker broker, XmldbURI docUri, CollectionConfiguration config, ValidateBlock doValidate)\n            throws EXistException, PermissionDeniedException, TriggerException, \n            SAXException, LockException, IOException {\n        //Make the necessary operations if we process a collection configuration document\n        checkConfigurationDocument(transaction, broker, docUri);\n        if (broker.isReadOnly()) throw new PermissionDeniedException(\"Database is read-only\");\n        DocumentImpl oldDoc = null;\n        boolean oldDocLocked = false;\n        try {\n            broker.getBrokerPool().getProcessMonitor().startJob(ProcessMonitor.ACTION_VALIDATE_DOC, docUri); \n            getLock().acquire(Lock.WRITE_LOCK);   \n            DocumentImpl document = new DocumentImpl(broker.getBrokerPool(), this, docUri);\n            oldDoc = documents.get(docUri.getRawCollectionPath());\n            checkPermissions(transaction, broker, oldDoc);\n            manageDocumentInformation(broker, oldDoc, document );\n            Indexer indexer = new Indexer(broker, transaction);\n            IndexInfo info = new IndexInfo(indexer, config);\n            indexer.setDocument(document, config);\n            addObserversToIndexer(broker, indexer);\n            indexer.setValidating(true);\n            // if !triggersEnabled, setupTriggers will return null anyway, so no need to check\n            info.setTrigger(\n                setupTriggers(broker, docUri, oldDoc != null, config),\n                oldDoc == null);\n            info.prepareTrigger(broker, transaction, getURI().append(docUri), oldDoc);\n            if (LOG.isDebugEnabled())\n                LOG.debug(\"Scanning document \" + getURI().append(docUri));\n            doValidate.run(info);\n            // new document is valid: remove old document\n            if (oldDoc != null) {\n                if (LOG.isDebugEnabled())\n                    LOG.debug(\"removing old document \" + oldDoc.getFileURI());\n                oldDoc.getUpdateLock().acquire(Lock.WRITE_LOCK);\n                oldDocLocked = true;\n                if (oldDoc.getResourceType() == DocumentImpl.BINARY_FILE) {\n                    //TODO : use a more elaborated method ? No triggers...\n                    broker.removeBinaryResource(transaction, (BinaryDocument) oldDoc);\n                    documents.remove(oldDoc.getFileURI().getRawCollectionPath());\n                    //This lock is released in storeXMLInternal()\n                    //TODO : check that we go until there to ensure the lock is released\n                    if (transaction != null)\n                    \ttransaction.acquireLock(document.getUpdateLock(), Lock.WRITE_LOCK);\n                \telse\n                \t\tdocument.getUpdateLock().acquire(Lock.WRITE_LOCK);\n                    \n                    document.setDocId(broker.getNextResourceId(transaction, this));\n                    addDocument(transaction, broker, document);\n                } else {\n                    //TODO : use a more elaborated method ? No triggers...\n                    broker.removeXMLResource(transaction, oldDoc, false);\n                    oldDoc.copyOf(document);\n                    indexer.setDocumentObject(oldDoc);\n                    //old has become new at this point\n                    document = oldDoc;\n                    oldDocLocked = false;\t\t\n                }\n                if (LOG.isDebugEnabled())\n                    LOG.debug(\"removed old document \" + oldDoc.getFileURI());\n            } else {\n                //This lock is released in storeXMLInternal()\n                //TODO : check that we go until there to ensure the lock is released\n            \tif (transaction != null)\n                \ttransaction.acquireLock(document.getUpdateLock(), Lock.WRITE_LOCK);\n            \telse\n            \t\tdocument.getUpdateLock().acquire(Lock.WRITE_LOCK);\n            \t\n                document.setDocId(broker.getNextResourceId(transaction, this));\n                addDocument(transaction, broker, document);\n            }\n            indexer.setValidating(false);\n            info.postValidateTrigger();\n            return info;\n        } finally {\n            if (oldDoc != null && oldDocLocked) \n                oldDoc.getUpdateLock().release(Lock.WRITE_LOCK);\n            getLock().release(Lock.WRITE_LOCK);\n            broker.getBrokerPool().getProcessMonitor().endJob();\n        }\n    }","id":82888,"modified_method":"/** \n     * Validates an XML document et prepares it for further storage. Launches prepare and postValidate triggers.\n     * Since the process is dependant from the collection configuration, the collection acquires a write lock during the process.\n     * \n     * @param transaction\n     * @param broker\n     * @param docUri\n     * @param doValidate\n     * \n     * @return An {@link IndexInfo} with a write lock on the document. \n     * \n     * @throws EXistException\n     * @throws PermissionDeniedException\n     * @throws TriggerException\n     * @throws SAXException\n     * @throws LockException\n     */\n    private IndexInfo validateXMLResourceInternal(Txn transaction, DBBroker broker, XmldbURI docUri, CollectionConfiguration config, ValidateBlock doValidate)\n            throws EXistException, PermissionDeniedException, TriggerException, \n            SAXException, LockException, IOException {\n        //Make the necessary operations if we process a collection configuration document\n        checkConfigurationDocument(transaction, broker, docUri);\n        if (broker.isReadOnly()) throw new PermissionDeniedException(\"Database is read-only\");\n        DocumentImpl oldDoc = null;\n        boolean oldDocLocked = false;\n        try {\n            broker.getBrokerPool().getProcessMonitor().startJob(ProcessMonitor.ACTION_VALIDATE_DOC, docUri); \n            getLock().acquire(Lock.WRITE_LOCK);   \n            DocumentImpl document = new DocumentImpl(broker.getBrokerPool(), this, docUri);\n            oldDoc = documents.get(docUri.getRawCollectionPath());\n            checkPermissions(transaction, broker, oldDoc);\n            manageDocumentInformation(broker, oldDoc, document );\n            Indexer indexer = new Indexer(broker, transaction);\n            IndexInfo info = new IndexInfo(indexer, config);\n            indexer.setDocument(document, config);\n            addObserversToIndexer(broker, indexer);\n            indexer.setValidating(true);\n            // if !triggersEnabled, setupTriggers will return null anyway, so no need to check\n            info.setTrigger(\n                setupTriggers(broker, docUri, oldDoc != null, config),\n                oldDoc == null);\n            info.prepareTrigger(broker, transaction, getURI().append(docUri), oldDoc);\n            if (LOG.isDebugEnabled())\n                LOG.debug(\"Scanning document \" + getURI().append(docUri));\n            doValidate.run(info);\n            // new document is valid: remove old document\n            if (oldDoc != null) {\n                if (LOG.isDebugEnabled())\n                    LOG.debug(\"removing old document \" + oldDoc.getFileURI());\n                oldDoc.getUpdateLock().acquire(Lock.WRITE_LOCK);\n                oldDocLocked = true;\n                if (oldDoc.getResourceType() == DocumentImpl.BINARY_FILE) {\n                    //TODO : use a more elaborated method ? No triggers...\n                    broker.removeBinaryResource(transaction, (BinaryDocument) oldDoc);\n                    documents.remove(oldDoc.getFileURI().getRawCollectionPath());\n                    //This lock is released in storeXMLInternal()\n                    //TODO : check that we go until there to ensure the lock is released\n//                    if (transaction != null)\n//                    \ttransaction.acquireLock(document.getUpdateLock(), Lock.WRITE_LOCK);\n//                \telse\n                \t\tdocument.getUpdateLock().acquire(Lock.WRITE_LOCK);\n                    \n                    document.setDocId(broker.getNextResourceId(transaction, this));\n                    addDocument(transaction, broker, document);\n                } else {\n                    //TODO : use a more elaborated method ? No triggers...\n                    broker.removeXMLResource(transaction, oldDoc, false);\n                    oldDoc.copyOf(document);\n                    indexer.setDocumentObject(oldDoc);\n                    //old has become new at this point\n                    document = oldDoc;\n                    oldDocLocked = false;\t\t\n                }\n                if (LOG.isDebugEnabled())\n                    LOG.debug(\"removed old document \" + oldDoc.getFileURI());\n            } else {\n                //This lock is released in storeXMLInternal()\n                //TODO : check that we go until there to ensure the lock is released\n//            \tif (transaction != null)\n//                \ttransaction.acquireLock(document.getUpdateLock(), Lock.WRITE_LOCK);\n//            \telse\n            \t\tdocument.getUpdateLock().acquire(Lock.WRITE_LOCK);\n            \t\n                document.setDocId(broker.getNextResourceId(transaction, this));\n                addDocument(transaction, broker, document);\n            }\n            indexer.setValidating(false);\n            info.postValidateTrigger();\n            return info;\n        } finally {\n            if (oldDoc != null && oldDocLocked) \n                oldDoc.getUpdateLock().release(Lock.WRITE_LOCK);\n            getLock().release(Lock.WRITE_LOCK);\n            broker.getBrokerPool().getProcessMonitor().endJob();\n        }\n    }","commit_id":"1e76eaee304cabcf4604be0b8cfb464e6856d478","url":"https://github.com/eXist-db/exist"},{"original_method":"public DoubleValue(AtomicValue otherValue) throws XPathException {\n\t\ttry {\n\t\t\tvalue = Double.parseDouble(otherValue.getStringValue());\n\t\t} catch (NumberFormatException e) {\n\t\t\tthrow new XPathException(\n\t\t\t\t\"Cannot convert '\" + Type.getTypeName(otherValue.getType()) + \n                \"(\\\"\" + otherValue.getStringValue() + \"\\\")' into an xs:double\");\n\t\t}\n\t}","id":82889,"modified_method":"public DoubleValue(AtomicValue otherValue) throws XPathException {\n\t\ttry {\n\t\t\tif (otherValue.getStringValue().equals(\"INF\"))\n\t\t\t\tvalue = Double.POSITIVE_INFINITY;\n\t\t\telse if (otherValue.getStringValue().equals(\"-INF\"))\n\t\t\t\tvalue = Double.NEGATIVE_INFINITY;\n\t\t\telse if (otherValue.getStringValue().equals(\"NaN\"))\n\t\t\t\tvalue = Double.NaN;\n\t\t\telse\t\t\t\t\t\n\t\t\t\tvalue = Double.parseDouble(otherValue.getStringValue());\n\t\t} catch (NumberFormatException e) {\n\t\t\tthrow new XPathException(\n\t\t\t\t\"Cannot convert '\" + Type.getTypeName(otherValue.getType()) + \n                \"(\\\"\" + otherValue.getStringValue() + \"\\\")' into an xs:double\");\n\t\t}\n\t}","commit_id":"04563486a8daefeb25de907eb402810985aade43","url":"https://github.com/eXist-db/exist"},{"original_method":"public Sequence eval(Sequence contextSequence, Item contextItem) throws XPathException {\n        if (context.getProfiler().isEnabled()) {\n            context.getProfiler().start(this);       \n            context.getProfiler().message(this, Profiler.DEPENDENCIES, \"DEPENDENCIES\", Dependency.getDependenciesName(this.getDependencies()));\n            if (contextSequence != null)\n                context.getProfiler().message(this, Profiler.START_SEQUENCES, \"CONTEXT SEQUENCE\", contextSequence);\n            if (contextItem != null)\n                context.getProfiler().message(this, Profiler.START_SEQUENCES, \"CONTEXT ITEM\", contextItem.toSequence());\n        }\n        \n        Sequence result;\n\t\tSequence inner = getArgument(0).eval(contextSequence, contextItem);\n\t\tif (inner.getLength() == 0)\n            result = Sequence.EMPTY_SEQUENCE;\n        else {\n    \t\tSequenceIterator iter = inner.iterate();\n    \t\tItem nextItem;\n    \t\tAtomicValue nextValue;\n    \t\tnextItem = iter.nextItem();\n    \t\tnextValue = nextItem.atomize();\n    \t\tif (!Type.subTypeOf(nextValue.getType(), Type.NUMBER))\n    \t\t\tnextValue = nextValue.convertTo(Type.DOUBLE);\n    \t\tComputableValue sum = (ComputableValue) nextValue;\n    \t\twhile (iter.hasNext()) {\n    \t\t\tnextItem = iter.nextItem();\n    \t\t\tnextValue = nextItem.atomize();\n    \t\t\tif (!Type.subTypeOf(nextValue.getType(), Type.NUMBER))\n    \t\t\t\tnextValue = nextValue.convertTo(Type.DOUBLE);\n    \t\t\tsum = sum.plus((NumericValue) nextValue);\n    \t\t}\n    \t\tresult = sum.div(new IntegerValue(inner.getLength()));\n        }\n        \n        if (context.getProfiler().isEnabled()) \n            context.getProfiler().end(this, \"\", result);        \n        \n        return result;        \n\t}","id":82890,"modified_method":"public Sequence eval(Sequence contextSequence, Item contextItem) throws XPathException {\n        if (context.getProfiler().isEnabled()) {\n            context.getProfiler().start(this);       \n            context.getProfiler().message(this, Profiler.DEPENDENCIES, \"DEPENDENCIES\", Dependency.getDependenciesName(this.getDependencies()));\n            if (contextSequence != null)\n                context.getProfiler().message(this, Profiler.START_SEQUENCES, \"CONTEXT SEQUENCE\", contextSequence);\n            if (contextItem != null)\n                context.getProfiler().message(this, Profiler.START_SEQUENCES, \"CONTEXT ITEM\", contextItem.toSequence());\n        }\n        \n        Sequence result;\n\t\tSequence inner = getArgument(0).eval(contextSequence, contextItem);      \n\t\tif (inner.getLength() == 0)\n            result = Sequence.EMPTY_SEQUENCE;\n        else {\n        \tSequenceIterator iter = inner.unorderedIterator();\n    \t\t//SequenceIterator iter = inner.iterate();    \t\t\n    \t\tComputableValue sum = null;\n    \t\twhile (iter.hasNext()) {\n    \t\t\tItem nextItem = iter.nextItem();\n    \t\t\tAtomicValue nextValue = nextItem.atomize();\n    \t\t\tif (!Type.subTypeOf(nextValue.getType(), Type.DURATION))    \t\t\t\n    \t\t\t\tnextValue = nextValue.convertTo(Type.DOUBLE);\n    \t\t\tif (sum == null)\n    \t\t\t\tsum = (ComputableValue)nextValue;\n    \t\t\telse {\n    \t\t\t\ttry {\n    \t\t\t\t\tsum = sum.plus((ComputableValue)nextValue);\n    \t\t\t\t} catch(XPathException e) {\n    \t\t\t\t\tthrow new XPathException(\"FORG0006: \" + e.getMessage(), e);    \t\t\t\t\t\n    \t\t\t\t}\n    \t\t\t}\n    \t\t}\n    \t\tresult = sum.div(new IntegerValue(inner.getLength()));\n        }\n        \n        if (context.getProfiler().isEnabled()) \n            context.getProfiler().end(this, \"\", result);        \n        \n        return result;        \n\t}","commit_id":"04563486a8daefeb25de907eb402810985aade43","url":"https://github.com/eXist-db/exist"},{"original_method":"public void testDeepEqual() throws XPathException {\n\t\tResourceSet result \t\t= null;\n\t\tString\t\tr\t\t\t= \"\";\n\t\ttry {\t\n\t\t\tresult \t= service.query(\n\t\t\t\"let $res := ('a', 'b')\" +\n\t\t\t\"let $reference := ('a', 'b')\" +\n\t\t\t\"return fn:deep-equal($res, $reference)\" );\n\t\t\tr \t\t= (String) result.getResource(0).getContent();\n\t\t\tassertEquals( \"true\", r );\n\t\t} catch (XMLDBException e) {\n\t\t\tSystem.out.println(\"testTokenize(): \" + e);\n\t\t\tfail(e.getMessage());\n\t\t}\n\t}","id":82891,"modified_method":"public void testDeepEqual() throws XPathException {\n\t\tResourceSet result \t\t= null;\n\t\tString\t\tr\t\t\t= \"\";\n\t\ttry {\t\n\t\t\tresult \t= service.query(\n\t\t\t\"let $res := ('a', 'b')\" +\n\t\t\t\"let $reference := ('a', 'b')\" +\n\t\t\t\"return fn:deep-equal($res, $reference)\" );\n\t\t\tr \t\t= (String) result.getResource(0).getContent();\n\t\t\tassertEquals( \"true\", r );\n\t\t} catch (XMLDBException e) {\n\t\t\tSystem.out.println(\"testDeepEqual(): \" + e);\n\t\t\tfail(e.getMessage());\n\t\t}\n\t}","commit_id":"04563486a8daefeb25de907eb402810985aade43","url":"https://github.com/eXist-db/exist"},{"original_method":"public void testAvg() throws XPathException {\n\t\tResourceSet result \t\t= null;\n\t\tString\t\tr\t\t\t= \"\";\n\t\ttry {\n\t\t\tresult \t= service.query( \"declare variable $c { avg((2, 2)) }; $c\" );\n\t\t\tr \t\t= (String) result.getResource(0).getContent();\n\t\t\tassertEquals( \"2\", r );\t\n\t\t\t\n\t\t\tresult \t= service.query( \"declare variable $c { avg((<a>2<\/a>, <b>2<\/b>)) }; $c\" );\n\t\t\tr \t\t= (String) result.getResource(0).getContent();\n\t\t\t//Any untyped atomic values in the resulting sequence \n\t\t\t//(typically, values extracted from nodes in a schemaless document)\n\t\t\t//are converted to xs:double values ([MK Xpath 2.0], p. 301)\n\t\t\tassertEquals( \"2.0\", r );\t\n\t\t\t\n\t\t\tresult \t= service.query( \"declare variable $c { avg(()) }; $c\" );\t\t\n\t\t\tassertEquals( 0, result.getSize());\t\t\t\t\n\n\t\t} catch (XMLDBException e) {\n\t\t\tSystem.out.println(\"testTokenize(): \" + e);\n\t\t\tfail(e.getMessage());\n\t\t}\n\t}","id":82892,"modified_method":"public void testAvg() throws XPathException {\n\t\tResourceSet result \t\t= null;\n\t\tString\t\tr\t\t\t= \"\";\n\t\tString message;\n\t\ttry {\n\t\t\tresult \t= service.query( \"avg((2, 2))\" );\n\t\t\tr \t\t= (String) result.getResource(0).getContent();\n\t\t\tassertEquals( \"2.0\", r );\t\n\t\t\t\n\t\t\tresult \t= service.query( \"avg((<a>2<\/a>, <b>2<\/b>))\" );\n\t\t\tr \t\t= (String) result.getResource(0).getContent();\n\t\t\t//Any untyped atomic values in the resulting sequence \n\t\t\t//(typically, values extracted from nodes in a schemaless document)\n\t\t\t//are converted to xs:double values ([MK Xpath 2.0], p. 301)\n\t\t\tassertEquals( \"2.0\", r );\n\t\t\t\n\t\t\tresult \t= service.query( \"avg((3, 4, 5))\" );\n\t\t\tr \t\t= (String) result.getResource(0).getContent();\n\t\t\tassertEquals( \"4.0\", r );\t\n\t\t\t\n\t\t\tresult \t= service.query( \"avg((xdt:yearMonthDuration('P20Y'), xdt:yearMonthDuration('P10M')))\");\n\t\t\tr \t\t= (String) result.getResource(0).getContent();\n\t\t\tassertEquals(\"P10Y5M\", r );\n\t\t\t\n\t\t\ttry {\n\t\t\t\tmessage = \"\";\n\t\t\t\tresult \t= service.query( \"avg((xdt:yearMonthDuration('P20Y') , (3, 4, 5)))\");\n\t\t\t} catch (XMLDBException e) {\n                message = e.getMessage();\n            }\n            assertTrue(message.indexOf(\"FORG0006\") > -1);\n            \n\t\t\tresult \t= service.query(\"avg(())\");\t\t\n\t\t\tassertEquals( 0, result.getSize());\t\n\t\t\t\n\t\t\tresult \t= service.query( \"avg(((xs:float('INF')), xs:float('-INF')))\");\n\t\t\tr \t\t= (String) result.getResource(0).getContent();\n\t\t\tassertEquals( \"NaN\", r );\n\t\t\t\n\t\t\tresult \t= service.query( \"avg(((3, 4, 5), xs:float('NaN')))\");\n\t\t\tr \t\t= (String) result.getResource(0).getContent();\n\t\t\tassertEquals( \"NaN\", r );\n\n\t\t} catch (XMLDBException e) {\n\t\t\tSystem.out.println(\"testAvg(): \" + e);\n\t\t\tfail(e.getMessage());\n\t\t}\n\t}","commit_id":"04563486a8daefeb25de907eb402810985aade43","url":"https://github.com/eXist-db/exist"},{"original_method":"public void testCompare() throws XPathException {\n\t\tResourceSet result \t\t= null;\n\t\tString\t\tr\t\t\t= \"\";\n\t\ttry {\t\n\t\t\tresult \t= service.query(\"fn:compare(\\\"Strasse\\\", \\\"Stra\\u00DFe\\\")\");\n\t\t\tr \t\t= (String) result.getResource(0).getContent();\n\t\t\tassertEquals( \"-1\", r );\n\t\t\t//result \t= service.query(\"fn:compare(\\\"Strasse\\\", \\\"Stra\\u00DFe\\\", \\\"java:GermanCollator\\\")\");\n\t\t\t//r \t\t= (String) result.getResource(0).getContent();\n\t\t\t//assertEquals( \"0\", r );\t\t\t\n\t\t} catch (XMLDBException e) {\n\t\t\tSystem.out.println(\"testTokenize(): \" + e);\n\t\t\tfail(e.getMessage());\n\t\t}\n\t}","id":82893,"modified_method":"public void testCompare() throws XPathException {\n\t\tResourceSet result \t\t= null;\n\t\tString\t\tr\t\t\t= \"\";\n\t\ttry {\t\n\t\t\tresult \t= service.query(\"fn:compare(\\\"Strasse\\\", \\\"Stra\\u00DFe\\\")\");\n\t\t\tr \t\t= (String) result.getResource(0).getContent();\n\t\t\tassertEquals( \"-1\", r );\n\t\t\t//result \t= service.query(\"fn:compare(\\\"Strasse\\\", \\\"Stra\\u00DFe\\\", \\\"java:GermanCollator\\\")\");\n\t\t\t//r \t\t= (String) result.getResource(0).getContent();\n\t\t\t//assertEquals( \"0\", r );\t\t\t\n\t\t} catch (XMLDBException e) {\n\t\t\tSystem.out.println(\"testCompare(): \" + e);\n\t\t\tfail(e.getMessage());\n\t\t}\n\t}","commit_id":"04563486a8daefeb25de907eb402810985aade43","url":"https://github.com/eXist-db/exist"},{"original_method":"public void testDistinctValues() throws XPathException {\n\t\tResourceSet result \t\t= null;\n\t\tString\t\tr\t\t\t= \"\";\n\t\ttry {\n\t\t\tresult \t= service.query( \"declare variable $c { distinct-values(('a', 'a')) }; $c\" );\n\t\t\tr \t\t= (String) result.getResource(0).getContent();\n\t\t\tassertEquals( \"a\", r );\t\n\t\t\t\n\t\t\tresult \t= service.query( \"declare variable $c { distinct-values((<a>a<\/a>, <b>a<\/b>)) }; $c\" );\n\t\t\tr \t\t= (String) result.getResource(0).getContent();\n\t\t\tassertEquals( \"a\", r );\t\n            \n            result  = service.query( \"let $seq := ('A', 2, 'B', 2) return distinct-values($seq) \" );      \n            assertEquals( 3, result.getSize() ); \n\t\t\n\t\t} catch (XMLDBException e) {\n\t\t\tSystem.out.println(\"testTokenize(): \" + e);\n\t\t\tfail(e.getMessage());\n\t\t}\n\t}","id":82894,"modified_method":"public void testDistinctValues() throws XPathException {\n\t\tResourceSet result \t\t= null;\n\t\tString\t\tr\t\t\t= \"\";\n\t\ttry {\n\t\t\tresult \t= service.query( \"declare variable $c { distinct-values(('a', 'a')) }; $c\" );\n\t\t\tr \t\t= (String) result.getResource(0).getContent();\n\t\t\tassertEquals( \"a\", r );\t\n\t\t\t\n\t\t\tresult \t= service.query( \"declare variable $c { distinct-values((<a>a<\/a>, <b>a<\/b>)) }; $c\" );\n\t\t\tr \t\t= (String) result.getResource(0).getContent();\n\t\t\tassertEquals( \"a\", r );\t\n            \n            result  = service.query( \"let $seq := ('A', 2, 'B', 2) return distinct-values($seq) \" );      \n            assertEquals( 3, result.getSize() ); \n\t\t\n\t\t} catch (XMLDBException e) {\n\t\t\tSystem.out.println(\"testDistinctValues(): \" + e);\n\t\t\tfail(e.getMessage());\n\t\t}\n\t}","commit_id":"04563486a8daefeb25de907eb402810985aade43","url":"https://github.com/eXist-db/exist"},{"original_method":"public void testSum() throws XPathException {\n\t\tResourceSet result \t\t= null;\n\t\tString\t\tr\t\t\t= \"\";\n\t\ttry {\n\t\t\tresult \t= service.query( \"declare variable $c { sum((1, 2)) }; $c\" );\n\t\t\tr \t\t= (String) result.getResource(0).getContent();\n\t\t\tassertEquals( \"3\", r );\t\n\t\t\t\n\t\t\tresult \t= service.query( \"declare variable $c { sum((<a>1<\/a>, <b>2<\/b>)) }; $c\" );\n\t\t\tr \t\t= (String) result.getResource(0).getContent();\n\t\t\t//Any untyped atomic values in the sequence are converted to xs:double values ([MK Xpath 2.0], p. 432)\n\t\t\tassertEquals( \"3.0\", r );\t\n\t\t\t\n\t\t\tresult \t= service.query( \"declare variable $c { sum((), 3) }; $c\" );\n\t\t\tr \t\t= (String) result.getResource(0).getContent();\n\t\t\tassertEquals( \"3\", r );\t\t\t\n\t\t\t\n\n\t\t} catch (XMLDBException e) {\n\t\t\tSystem.out.println(\"testTokenize(): \" + e);\n\t\t\tfail(e.getMessage());\n\t\t}\n\t}","id":82895,"modified_method":"public void testSum() throws XPathException {\n\t\tResourceSet result \t\t= null;\n\t\tString\t\tr\t\t\t= \"\";\n\t\ttry {\n\t\t\tresult \t= service.query( \"declare variable $c { sum((1, 2)) }; $c\" );\n\t\t\tr \t\t= (String) result.getResource(0).getContent();\n\t\t\tassertEquals( \"3\", r );\t\n\t\t\t\n\t\t\tresult \t= service.query( \"declare variable $c { sum((<a>1<\/a>, <b>2<\/b>)) }; $c\" );\n\t\t\tr \t\t= (String) result.getResource(0).getContent();\n\t\t\t//Any untyped atomic values in the sequence are converted to xs:double values ([MK Xpath 2.0], p. 432)\n\t\t\tassertEquals( \"3.0\", r );\t\n\t\t\t\n\t\t\tresult \t= service.query( \"declare variable $c { sum((), 3) }; $c\" );\n\t\t\tr \t\t= (String) result.getResource(0).getContent();\n\t\t\tassertEquals( \"3\", r );\t\t\t\n\t\t\t\n\n\t\t} catch (XMLDBException e) {\n\t\t\tSystem.out.println(\"testSum(): \" + e);\n\t\t\tfail(e.getMessage());\n\t\t}\n\t}","commit_id":"04563486a8daefeb25de907eb402810985aade43","url":"https://github.com/eXist-db/exist"},{"original_method":"public Event take() throws InterruptedException {\n        return queue.take();\n    }","id":82896,"modified_method":"public V take() throws InterruptedException {\n        V retval=queue.take();\n        size--;\n        return retval;\n    }","commit_id":"877457be5b5d423858fba3890e4cd8d332d53457","url":"https://github.com/belaban/JGroups"},{"original_method":"public Event take() throws InterruptedException {\n        return queue.take();\n    }","id":82897,"modified_method":"public V take() throws InterruptedException {\n        V retval=queue.take();\n        size--;\n        return retval;\n    }","commit_id":"59f2c2b945bfd2f67669f3349b1838c52307a99e","url":"https://github.com/belaban/JGroups"},{"original_method":"void process(FileIngestTask task) throws InterruptedException {\n        if (!isCancelled()) {\n            AbstractFile file = task.getFile();\n            synchronized (this) {\n                ++processedFiles;\n                if (processedFiles <= estimatedFilesToProcess) {\n                    fileTasksProgress.progress(file.getName(), (int) processedFiles);\n                } else {\n                    fileTasksProgress.progress(file.getName(), (int) estimatedFilesToProcess);\n                }\n            }\n            FileIngestPipeline pipeline = fileIngestPipelines.take();\n            List<IngestModuleError> errors = new ArrayList<>();\n            errors.addAll(pipeline.process(file));\n            fileIngestPipelines.put(pipeline);\n            if (!errors.isEmpty()) {\n                logIngestModuleErrors(errors);\n            }\n        } else {\n            taskScheduler.removeTasksForIngestJob(id);\n        }\n\n        if (taskScheduler.isLastTaskForIngestJob(task)) {\n            finish();\n        }\n    }","id":82898,"modified_method":"void process(FileIngestTask task) throws InterruptedException {\n        if (!isCancelled()) {\n            AbstractFile file = task.getFile();\n            synchronized (this) {\n                ++processedFiles;\n                if (processedFiles <= estimatedFilesToProcess) {\n                    fileIngestProgress.progress(file.getName(), (int) processedFiles);\n                } else {\n                    fileIngestProgress.progress(file.getName(), (int) estimatedFilesToProcess);\n                }\n            }\n            FileIngestPipeline pipeline = fileIngestPipelines.take();\n            List<IngestModuleError> errors = new ArrayList<>();\n            errors.addAll(pipeline.process(file));\n            fileIngestPipelines.put(pipeline);\n            if (!errors.isEmpty()) {\n                logIngestModuleErrors(errors);\n            }\n        } else {\n            taskScheduler.removeTasksForIngestJob(id);\n        }\n        taskScheduler.notifyFileIngestTaskCompleted(task);\n\n        if (!taskScheduler.hasFileIngestTaskForIngestJob(this)) {\n            finishProgressBar(fileIngestProgress);\n            if (!taskScheduler.hasDataSourceIngestTaskForIngestJob(this)) {\n                finishProgressBar(dataSourceIngestProgress);\n                finish();\n            }\n        }\n    }","commit_id":"d8648b13f76480ef6c5977e7f7574f65731dd49b","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"private void cancel() {\n        cancelled = true;\n        IngestManager.getInstance().fireIngestJobCancelled(id);\n    }","id":82899,"modified_method":"private void cancel() {\n        cancelled = true;\n        finishProgressBar(dataSourceIngestProgress);\n        finishProgressBar(fileIngestProgress);\n        IngestManager.getInstance().fireIngestJobCancelled(id);\n    }","commit_id":"d8648b13f76480ef6c5977e7f7574f65731dd49b","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"void process(DataSourceIngestTask task) throws InterruptedException {\n        if (!isCancelled()) {\n            List<IngestModuleError> errors = new ArrayList<>();\n            errors.addAll(dataSourceIngestPipeline.process(task.getDataSource(), dataSourceTasksProgress));\n            if (!errors.isEmpty()) {\n                logIngestModuleErrors(errors);\n            }\n        } else {\n            taskScheduler.removeTasksForIngestJob(id);\n        }\n\n        // Because there is only one data source task per job, it is o.k. to \n        // call ProgressHandle.finish() now that the data source ingest modules \n        // are through using the progress bar via the DataSourceIngestModuleProgress wrapper.\n        // Calling ProgressHandle.finish() again in finish() will be harmless.\n        dataSourceTasksProgress.finish();\n\n        if (taskScheduler.isLastTaskForIngestJob(task)) {\n            finish();\n        }\n    }","id":82900,"modified_method":"void process(DataSourceIngestTask task) throws InterruptedException {\n        if (!isCancelled()) {\n            List<IngestModuleError> errors = new ArrayList<>();\n            errors.addAll(dataSourceIngestPipeline.process(task.getDataSource(), dataSourceIngestProgress));\n            if (!errors.isEmpty()) {\n                logIngestModuleErrors(errors);\n            }\n        } else {\n            taskScheduler.removeTasksForIngestJob(id);\n        }\n        taskScheduler.notifyDataSourceIngestTaskCompleted(task);\n\n        if (!taskScheduler.hasDataSourceIngestTaskForIngestJob(this)) {\n            finishProgressBar(dataSourceIngestProgress);\n            if (!taskScheduler.hasFileIngestTaskForIngestJob(this)) {\n                finishProgressBar(fileIngestProgress);\n                finish();\n            }\n        }\n    }","commit_id":"d8648b13f76480ef6c5977e7f7574f65731dd49b","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"private void startFileIngestProgressBar() {\n        final String displayName = NbBundle.getMessage(this.getClass(),\n                \"IngestJob.progress.fileIngest.displayName\",\n                dataSource.getName());\n        fileTasksProgress = ProgressHandleFactory.createHandle(displayName, new Cancellable() {\n            @Override\n            public boolean cancel() {\n                if (fileTasksProgress != null) {\n                    fileTasksProgress.setDisplayName(\n                            NbBundle.getMessage(this.getClass(), \"IngestJob.progress.cancelling\",\n                            displayName));\n                }\n                IngestJob.this.cancel();\n                return true;\n            }\n        });\n        estimatedFilesToProcess = dataSource.accept(new GetFilesCountVisitor());\n        fileTasksProgress.start();\n        fileTasksProgress.switchToDeterminate((int) estimatedFilesToProcess);\n    }","id":82901,"modified_method":"private void startFileIngestProgressBar() {\n        final String displayName = NbBundle.getMessage(this.getClass(),\n                \"IngestJob.progress.fileIngest.displayName\",\n                dataSource.getName());\n        fileIngestProgress = ProgressHandleFactory.createHandle(displayName, new Cancellable() {\n            @Override\n            public boolean cancel() {\n                if (fileIngestProgress != null) {\n                    fileIngestProgress.setDisplayName(\n                            NbBundle.getMessage(this.getClass(), \"IngestJob.progress.cancelling\",\n                            displayName));\n                }\n                IngestJob.this.cancel();\n                return true;\n            }\n        });\n        estimatedFilesToProcess = dataSource.accept(new GetFilesCountVisitor());\n        fileIngestProgress.start();\n        fileIngestProgress.switchToDeterminate((int) estimatedFilesToProcess);\n    }","commit_id":"d8648b13f76480ef6c5977e7f7574f65731dd49b","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"private void startDataSourceIngestProgressBar() {\n        final String displayName = NbBundle.getMessage(this.getClass(),\n                \"IngestJob.progress.dataSourceIngest.initialDisplayName\",\n                dataSource.getName());\n        dataSourceTasksProgress = ProgressHandleFactory.createHandle(displayName, new Cancellable() {\n            @Override\n            public boolean cancel() {\n                if (dataSourceTasksProgress != null) {\n                    dataSourceTasksProgress.setDisplayName(\n                            NbBundle.getMessage(this.getClass(),\n                            \"IngestJob.progress.cancelling\",\n                            displayName));\n                }\n                IngestJob.this.cancel();\n                return true;\n            }\n        });\n        dataSourceTasksProgress.start();\n        dataSourceTasksProgress.switchToIndeterminate();\n    }","id":82902,"modified_method":"private void startDataSourceIngestProgressBar() {\n        final String displayName = NbBundle.getMessage(this.getClass(),\n                \"IngestJob.progress.dataSourceIngest.initialDisplayName\",\n                dataSource.getName());\n        dataSourceIngestProgress = ProgressHandleFactory.createHandle(displayName, new Cancellable() {\n            @Override\n            public boolean cancel() {\n                if (dataSourceIngestProgress != null) {\n                    dataSourceIngestProgress.setDisplayName(\n                            NbBundle.getMessage(this.getClass(),\n                            \"IngestJob.progress.cancelling\",\n                            displayName));\n                }\n                IngestJob.this.cancel();\n                return true;\n            }\n        });\n        dataSourceIngestProgress.start();\n        dataSourceIngestProgress.switchToIndeterminate();\n    }","commit_id":"d8648b13f76480ef6c5977e7f7574f65731dd49b","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"private void finish() {\n        List<IngestModuleError> errors = new ArrayList<>();\n        while (!fileIngestPipelines.isEmpty()) {\n            FileIngestPipeline pipeline = fileIngestPipelines.poll();\n            errors.addAll(pipeline.shutDown());\n        }\n        if (!errors.isEmpty()) {\n            logIngestModuleErrors(errors);\n        }\n        dataSourceTasksProgress.finish();\n        fileTasksProgress.finish();\n        ingestJobsById.remove(id);\n        if (!isCancelled()) {\n            IngestManager.getInstance().fireIngestJobCompleted(id);\n        }\n    }","id":82903,"modified_method":"private void finish() {\n        List<IngestModuleError> errors = new ArrayList<>();\n        while (!fileIngestPipelines.isEmpty()) {\n            FileIngestPipeline pipeline = fileIngestPipelines.poll();\n            errors.addAll(pipeline.shutDown());\n        }\n        if (!errors.isEmpty()) {\n            logIngestModuleErrors(errors);\n        }\n        ingestJobsById.remove(id);\n        if (!isCancelled()) {\n            IngestManager.getInstance().fireIngestJobCompleted(id);\n        }\n    }","commit_id":"d8648b13f76480ef6c5977e7f7574f65731dd49b","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"@Override\n        public IngestTask getNextTask() throws InterruptedException {\n            return dataSourceTasks.take();\n        }","id":82904,"modified_method":"@Override\n        public IngestTask getNextTask() throws InterruptedException {\n            DataSourceIngestTask task = dataSourceTasks.take();\n            synchronized (this) {\n                dataSourceTasksInProgress.add(task);\n            }\n            return task;\n        }","commit_id":"d8648b13f76480ef6c5977e7f7574f65731dd49b","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"private synchronized void updateFileTaskQueues(FileIngestTask taskInProgress) throws InterruptedException {\n        if (taskInProgress != null) {\n            tasksInProgress.add(taskInProgress);\n        }\n\n        // we loop because we could have a directory that has all files\n        // that do not get enqueued\n        while (true) {\n            // There are files in the queue, we're done\n            if (fileTasks.isEmpty() == false) {\n                return;\n            }\n            // fill in the directory queue if it is empty.\n            if (this.directoryTasks.isEmpty()) {\n                // bail out if root is also empty -- we are done\n                if (rootDirectoryTasks.isEmpty()) {\n                    return;\n                }\n                FileIngestTask rootTask = rootDirectoryTasks.pollFirst();\n                directoryTasks.add(rootTask);\n            }\n            //pop and push AbstractFile directory children if any\n            //add the popped and its leaf children onto cur file list\n            FileIngestTask parentTask = directoryTasks.remove(directoryTasks.size() - 1);\n            final AbstractFile parentFile = parentTask.getFile();\n            // add itself to the file list\n            if (shouldEnqueueFileTask(parentTask)) {\n                try {\n                    fileTasks.put(parentTask);\n                } catch (InterruptedException ex) {\n                    Thread.currentThread().interrupt();\n                    logger.log(Level.FINE, \"Task scheduling for ingest job interrupted\", ex); //NON-NLS\n                    return;\n                }\n            }\n            // add its children to the file and directory lists\n            try {\n                List<Content> children = parentFile.getChildren();\n                for (Content c : children) {\n                    if (c instanceof AbstractFile) {\n                        AbstractFile childFile = (AbstractFile) c;\n                        FileIngestTask childTask = new FileIngestTask(parentTask.getIngestJob(), childFile);\n                        if (childFile.hasChildren()) {\n                            directoryTasks.add(childTask);\n                        } else if (shouldEnqueueFileTask(childTask)) {\n                            try {\n                                fileTasks.put(childTask);\n                            } catch (InterruptedException ex) {\n                                Thread.currentThread().interrupt();\n                                logger.log(Level.FINE, \"Task scheduling for ingest job interrupted\", ex); //NON-NLS\n                                return;\n                            }\n                        }\n                    }\n                }\n            } catch (TskCoreException ex) {\n                logger.log(Level.SEVERE, \"Could not get children of file and update file queues: \" + parentFile.getName(), ex); //NON-NLS\n            }\n        }\n    }","id":82905,"modified_method":"private synchronized void updateFileTaskQueues() throws InterruptedException {\n        // we loop because we could have a directory that has all files\n        // that do not get enqueued\n        while (true) {\n            // There are files in the queue, we're done\n            if (fileTasks.isEmpty() == false) {\n                return;\n            }\n            // fill in the directory queue if it is empty.\n            if (this.directoryTasks.isEmpty()) {\n                // bail out if root is also empty -- we are done\n                if (rootDirectoryTasks.isEmpty()) {\n                    return;\n                }\n                FileIngestTask rootTask = rootDirectoryTasks.pollFirst();\n                directoryTasks.add(rootTask);\n            }\n            //pop and push AbstractFile directory children if any\n            //add the popped and its leaf children onto cur file list\n            FileIngestTask parentTask = directoryTasks.remove(directoryTasks.size() - 1);\n            final AbstractFile parentFile = parentTask.getFile();\n            // add itself to the file list\n            if (shouldEnqueueFileTask(parentTask)) {\n                try {\n                    fileTasks.put(parentTask);\n                } catch (InterruptedException ex) {\n                    Thread.currentThread().interrupt();\n                    logger.log(Level.FINE, \"Task scheduling for ingest job interrupted\", ex); //NON-NLS\n                    return;\n                }\n            }\n            // add its children to the file and directory lists\n            try {\n                List<Content> children = parentFile.getChildren();\n                for (Content c : children) {\n                    if (c instanceof AbstractFile) {\n                        AbstractFile childFile = (AbstractFile) c;\n                        FileIngestTask childTask = new FileIngestTask(parentTask.getIngestJob(), childFile);\n                        if (childFile.hasChildren()) {\n                            directoryTasks.add(childTask);\n                        } else if (shouldEnqueueFileTask(childTask)) {\n                            try {\n                                fileTasks.put(childTask);\n                            } catch (InterruptedException ex) {\n                                Thread.currentThread().interrupt();\n                                logger.log(Level.FINE, \"Task scheduling for ingest job interrupted\", ex); //NON-NLS\n                                return;\n                            }\n                        }\n                    }\n                }\n            } catch (TskCoreException ex) {\n                logger.log(Level.SEVERE, \"Could not get children of file and update file queues: \" + parentFile.getName(), ex); //NON-NLS\n            }\n        }\n    }","commit_id":"d8648b13f76480ef6c5977e7f7574f65731dd49b","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"synchronized boolean isLastTaskForIngestJob(IngestTask completedTask) {\n        tasksInProgress.remove(completedTask);\n        IngestJob job = completedTask.getIngestJob();\n        long jobId = job.getId();\n        for (IngestTask task : tasksInProgress) {\n            if (task.getIngestJob().getId() == jobId) {\n                return false;\n            }\n        }\n        for (FileIngestTask task : fileTasks) {\n            if (task.getIngestJob().getId() == jobId) {\n                return false;\n            }\n        }\n        for (FileIngestTask task : directoryTasks) {\n            if (task.getIngestJob().getId() == jobId) {\n                return false;\n            }\n        }\n        for (FileIngestTask task : rootDirectoryTasks) {\n            if (task.getIngestJob().getId() == jobId) {\n                return false;\n            }\n        }\n        for (DataSourceIngestTask task : dataSourceTasks) {\n            if (task.getIngestJob().getId() == jobId) {\n                return false;\n            }\n        }\n        return true;\n    }","id":82906,"modified_method":"synchronized boolean hasFileIngestTaskForIngestJob(IngestJob job) {\n        long jobId = job.getId();\n        for (IngestTask task : fileTasksInProgress) {\n            if (task.getIngestJob().getId() == jobId) {\n                return true;\n            }\n        }\n        for (FileIngestTask task : fileTasks) {\n            if (task.getIngestJob().getId() == jobId) {\n                return true;\n            }\n        }\n        for (FileIngestTask task : directoryTasks) {\n            if (task.getIngestJob().getId() == jobId) {\n                return true;\n            }\n        }\n        for (FileIngestTask task : rootDirectoryTasks) {\n            if (task.getIngestJob().getId() == jobId) {\n                return true;\n            }\n        }\n        return false;\n    }","commit_id":"d8648b13f76480ef6c5977e7f7574f65731dd49b","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"synchronized void addTasksForIngestJob(IngestJob job, Content dataSource) throws InterruptedException {\n        // Enqueue a data source ingest task for the data source. \n        DataSourceIngestTask task = new DataSourceIngestTask(job, dataSource);\n        try {\n            dataSourceTasks.put(task);\n        } catch (InterruptedException ex) {\n            Thread.currentThread().interrupt();\n            logger.log(Level.FINE, \"Task scheduling for ingest job interrupted\", ex); //NON-NLS\n            return;\n        }\n\n        // Get the top level files of the data source.\n        Collection<AbstractFile> rootObjects = dataSource.accept(new GetRootDirectoryVisitor());\n        List<AbstractFile> toptLevelFiles = new ArrayList<>();\n        if (rootObjects.isEmpty() && dataSource instanceof AbstractFile) {\n            // The data source is itself a file.\n            toptLevelFiles.add((AbstractFile) dataSource);\n        } else {\n            for (AbstractFile root : rootObjects) {\n                List<Content> children;\n                try {\n                    children = root.getChildren();\n                    if (children.isEmpty()) {\n                        // Add the root object itself, it could be an unallocated space \n                        // file, or a child of a volume or an image.\n                        toptLevelFiles.add(root);\n                    } else {\n                        // The root object is a file system root directory, get\n                        // the files within it.\n                        for (Content child : children) {\n                            if (child instanceof AbstractFile) {\n                                toptLevelFiles.add((AbstractFile) child);\n                            }\n                        }\n                    }\n                } catch (TskCoreException ex) {\n                    logger.log(Level.WARNING, \"Could not get children of root to enqueue: \" + root.getId() + \": \" + root.getName(), ex); //NON-NLS\n                }\n            }\n        }\n\n        // Enqueue file ingest tasks for the top level files.\n        for (AbstractFile firstLevelFile : toptLevelFiles) {\n            FileIngestTask fileTask = new FileIngestTask(job, firstLevelFile);\n            if (shouldEnqueueFileTask(fileTask)) {\n                rootDirectoryTasks.add(fileTask);\n            }\n        }\n\n        updateFileTaskQueues(null);\n    }","id":82907,"modified_method":"synchronized void addTasksForIngestJob(IngestJob job, Content dataSource) throws InterruptedException {\n        // Enqueue a data source ingest task for the data source. \n        DataSourceIngestTask task = new DataSourceIngestTask(job, dataSource);\n        try {\n            dataSourceTasks.put(task);\n        } catch (InterruptedException ex) {\n            Thread.currentThread().interrupt();\n            logger.log(Level.FINE, \"Task scheduling for ingest job interrupted\", ex); //NON-NLS\n            return;\n        }\n\n        // Get the top level files of the data source.\n        Collection<AbstractFile> rootObjects = dataSource.accept(new GetRootDirectoryVisitor());\n        List<AbstractFile> toptLevelFiles = new ArrayList<>();\n        if (rootObjects.isEmpty() && dataSource instanceof AbstractFile) {\n            // The data source is itself a file.\n            toptLevelFiles.add((AbstractFile) dataSource);\n        } else {\n            for (AbstractFile root : rootObjects) {\n                List<Content> children;\n                try {\n                    children = root.getChildren();\n                    if (children.isEmpty()) {\n                        // Add the root object itself, it could be an unallocated space \n                        // file, or a child of a volume or an image.\n                        toptLevelFiles.add(root);\n                    } else {\n                        // The root object is a file system root directory, get\n                        // the files within it.\n                        for (Content child : children) {\n                            if (child instanceof AbstractFile) {\n                                toptLevelFiles.add((AbstractFile) child);\n                            }\n                        }\n                    }\n                } catch (TskCoreException ex) {\n                    logger.log(Level.WARNING, \"Could not get children of root to enqueue: \" + root.getId() + \": \" + root.getName(), ex); //NON-NLS\n                }\n            }\n        }\n\n        // Enqueue file ingest tasks for the top level files.\n        for (AbstractFile firstLevelFile : toptLevelFiles) {\n            FileIngestTask fileTask = new FileIngestTask(job, firstLevelFile);\n            if (shouldEnqueueFileTask(fileTask)) {\n                rootDirectoryTasks.add(fileTask);\n            }\n        }\n\n        updateFileTaskQueues();\n    }","commit_id":"d8648b13f76480ef6c5977e7f7574f65731dd49b","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"@Override\n        public IngestTask getNextTask() throws InterruptedException {\n            FileIngestTask task = fileTasks.take();\n            updateFileTaskQueues(task);\n            return task;\n        }","id":82908,"modified_method":"@Override\n        public IngestTask getNextTask() throws InterruptedException {\n            FileIngestTask task = fileTasks.take();\n            synchronized (this) {\n                fileTasksInProgress.add(task);\n            }\n            updateFileTaskQueues();\n            return task;\n        }","commit_id":"d8648b13f76480ef6c5977e7f7574f65731dd49b","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"@Override\n    public IngestTask getNextTask() throws InterruptedException {\n        return fileTasksQueue.take();\n    }","id":82909,"modified_method":"@Override\n    public IngestTask getNextTask() throws InterruptedException {\n        FileIngestTask task = fileTasksQueue.take();\n        updateTaskQueues();\n        return task;\n    }","commit_id":"3aeb9da77f31bfe6a5a1514d4ffab995f4a756bf","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"DataSourceIngestPipeline(IngestJobContext context, List<IngestModuleTemplate> moduleTemplates) {\n        this.context = context;\n        this.moduleTemplates = moduleTemplates;\n    }","id":82910,"modified_method":"DataSourceIngestPipeline(IngestJobContext context, List<IngestModuleTemplate> moduleTemplates) {\n        this.context = context;\n\n        // Create an ingest module instance from each ingest module template\n        // that has an ingest module factory capable of making data source\n        // ingest modules. Map the module class names to the module instances\n        // to allow the modules to be put in the sequence indicated by the\n        // ingest pipelines configuration.\n        Map<String, DataSourceIngestModuleDecorator> modulesByClass = new HashMap<>();\n        for (IngestModuleTemplate template : moduleTemplates) {\n            if (template.isDataSourceIngestModuleTemplate()) {\n                DataSourceIngestModuleDecorator module = new DataSourceIngestModuleDecorator(template.createDataSourceIngestModule(), template.getModuleName());\n                modulesByClass.put(module.getClassName(), module);\n            }\n        }\n\n        // Add the ingest modules to the pipeline in the order indicated by the \n        // data source ingest pipeline configuration, adding any additional \n        // modules found in the global lookup but not mentioned in the \n        // configuration to the end of the pipeline in arbitrary order.\n        List<String> pipelineConfig = IngestPipelinesConfiguration.getInstance().getDataSourceIngestPipelineConfig();\n        for (String moduleClassName : pipelineConfig) {\n            if (modulesByClass.containsKey(moduleClassName)) {\n                modules.add(modulesByClass.remove(moduleClassName));\n            }\n        }\n        for (DataSourceIngestModuleDecorator module : modulesByClass.values()) {\n            modules.add(module);\n        }\n    }","commit_id":"b75adfa8f241fb5adf3d0e44b0c91973291b0e58","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"List<IngestModuleError> startUp() {\n        List<IngestModuleError> errors = new ArrayList<>();\n        // Create an ingest module instance from each ingest module template\n        // that has an ingest module factory capable of making data source\n        // ingest modules. Map the module class names to the module instance\n        // to allow the modules to be put in the sequence indicated by the\n        // ingest pipelines configuration.\n        Map<String, DataSourceIngestModuleDecorator> modulesByClass = new HashMap<>();\n        for (IngestModuleTemplate template : moduleTemplates) {\n            if (template.isDataSourceIngestModuleTemplate()) {\n                DataSourceIngestModuleDecorator module = new DataSourceIngestModuleDecorator(template.createDataSourceIngestModule(), template.getModuleName());\n                try {\n                    module.startUp(context);\n                    modulesByClass.put(module.getClassName(), module);\n                } catch (Exception ex) {\n                    errors.add(new IngestModuleError(module.getDisplayName(), ex));\n                }\n            }\n        }\n        // Establish the module sequence of the core ingest modules\n        // indicated by the ingest pipeline configuration, adding any\n        // additional modules found in the global lookup to the end of the\n        // pipeline in arbitrary order.\n        List<String> pipelineConfig = IngestPipelinesConfiguration.getInstance().getDataSourceIngestPipelineConfig();\n        for (String moduleClassName : pipelineConfig) {\n            if (modulesByClass.containsKey(moduleClassName)) {\n                modules.add(modulesByClass.remove(moduleClassName));\n            }\n        }\n        for (DataSourceIngestModuleDecorator module : modulesByClass.values()) {\n            modules.add(module);\n        }\n        return errors;\n    }","id":82911,"modified_method":"List<IngestModuleError> startUp() {\n        List<IngestModuleError> errors = new ArrayList<>();\n        for (DataSourceIngestModuleDecorator module : this.modules) {\n            try {\n                module.startUp(context);\n            } catch (Exception ex) {\n                errors.add(new IngestModuleError(module.getDisplayName(), ex));\n            }\n        }\n        return errors;\n    }","commit_id":"b75adfa8f241fb5adf3d0e44b0c91973291b0e58","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"List<IngestModuleError> shutDown() {\n        List<IngestModuleError> errors = new ArrayList<>();\n        for (FileIngestModuleDecorator module : this.modules) {\n            try {\n                module.shutDown();\n            } catch (Exception ex) {\n                errors.add(new IngestModuleError(module.getDisplayName(), ex));\n            }\n        }\n        return errors;\n    }","id":82912,"modified_method":"List<IngestModuleError> shutDown() {\n        List<IngestModuleError> errors = new ArrayList<>();\n        for (FileIngestModuleDecorator module : modules) {\n            try {\n                module.shutDown();\n            } catch (Exception ex) {\n                errors.add(new IngestModuleError(module.getDisplayName(), ex));\n            }\n        }\n        return errors;\n    }","commit_id":"b75adfa8f241fb5adf3d0e44b0c91973291b0e58","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"List<IngestModuleError> startUp() {\n        List<IngestModuleError> errors = new ArrayList<>();\n        // Create an ingest module instance from each ingest module template\n        // that has an ingest module factory capable of making data source\n        // ingest modules. Map the module class names to the module instance\n        // to allow the modules to be put in the sequence indicated by the\n        // ingest pipelines configuration.\n        Map<String, FileIngestModuleDecorator> modulesByClass = new HashMap<>();\n        for (IngestModuleTemplate template : moduleTemplates) {\n            if (template.isFileIngestModuleTemplate()) {\n                FileIngestModuleDecorator module = new FileIngestModuleDecorator(template.createFileIngestModule(), template.getModuleName());\n                try {\n                    module.startUp(context);\n                    modulesByClass.put(module.getClassName(), module);\n                } catch (Exception ex) {\n                    errors.add(new IngestModuleError(module.getDisplayName(), ex));\n                }\n            }\n        }\n        // Establish the module sequence of the core ingest modules\n        // indicated by the ingest pipeline configuration, adding any\n        // additional modules found in the global lookup to the end of the\n        // pipeline in arbitrary order.\n        List<String> pipelineConfig = IngestPipelinesConfiguration.getInstance().getFileIngestPipelineConfig();\n        for (String moduleClassName : pipelineConfig) {\n            if (modulesByClass.containsKey(moduleClassName)) {\n                modules.add(modulesByClass.remove(moduleClassName));\n            }\n        }\n        for (FileIngestModuleDecorator module : modulesByClass.values()) {\n            modules.add(module);\n        }\n        return errors;\n    }","id":82913,"modified_method":"List<IngestModuleError> startUp() {\n        List<IngestModuleError> errors = new ArrayList<>();\n        for (FileIngestModuleDecorator module : modules) {\n            try {\n                module.startUp(context);\n            } catch (Exception ex) {\n                errors.add(new IngestModuleError(module.getDisplayName(), ex));\n            }\n        }\n        return errors;\n    }","commit_id":"b75adfa8f241fb5adf3d0e44b0c91973291b0e58","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"FileIngestPipeline(IngestJobContext context, List<IngestModuleTemplate> moduleTemplates) {\n        this.context = context;\n        this.moduleTemplates = moduleTemplates;\n    }","id":82914,"modified_method":"FileIngestPipeline(IngestJobContext context, List<IngestModuleTemplate> moduleTemplates) {\n        this.context = context;\n\n        // Create an ingest module instance from each ingest module template\n        // that has an ingest module factory capable of making file ingest\n        // modules. Map the module class names to the module instances to allow\n        // the modules to be put in the sequence indicated by the ingest \n        // pipelines configuration.\n        Map<String, FileIngestModuleDecorator> modulesByClass = new HashMap<>();\n        for (IngestModuleTemplate template : moduleTemplates) {\n            if (template.isFileIngestModuleTemplate()) {\n                FileIngestModuleDecorator module = new FileIngestModuleDecorator(template.createFileIngestModule(), template.getModuleName());\n                modulesByClass.put(module.getClassName(), module);\n            }\n        }\n\n        // Add the ingest modules to the pipeline in the order indicated by the \n        // file ingest pipeline configuration, adding any additional modules \n        // found in the global lookup but not mentioned in the configuration to \n        // the end of the pipeline in arbitrary order.\n        List<String> pipelineConfig = IngestPipelinesConfiguration.getInstance().getFileIngestPipelineConfig();\n        for (String moduleClassName : pipelineConfig) {\n            if (modulesByClass.containsKey(moduleClassName)) {\n                modules.add(modulesByClass.remove(moduleClassName));\n            }\n        }\n        for (FileIngestModuleDecorator module : modulesByClass.values()) {\n            modules.add(module);\n        }\n    }","commit_id":"b75adfa8f241fb5adf3d0e44b0c91973291b0e58","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"List<IngestModuleError> process(AbstractFile file) {\n        List<IngestModuleError> errors = new ArrayList<>();\n        for (FileIngestModuleDecorator module : this.modules) {\n            try {\n                module.process(file);\n            } catch (Exception ex) {\n                errors.add(new IngestModuleError(module.getDisplayName(), ex));\n            }\n            if (context.isJobCancelled()) {\n                break;\n            }\n        }\n        file.close();\n        if (!context.isJobCancelled()) {\n            IngestManager.getInstance().fireFileIngestDone(file.getId());\n        }\n        return errors;\n    }","id":82915,"modified_method":"List<IngestModuleError> process(AbstractFile file) {\n        List<IngestModuleError> errors = new ArrayList<>();\n        for (FileIngestModuleDecorator module : modules) {\n            try {\n                module.process(file);\n            } catch (Exception ex) {\n                errors.add(new IngestModuleError(module.getDisplayName(), ex));\n            }\n            if (context.isJobCancelled()) {\n                break;\n            }\n        }\n        file.close();\n        if (!context.isJobCancelled()) {\n            IngestManager.getInstance().fireFileIngestDone(file.getId());\n        }\n        return errors;\n    }","commit_id":"b75adfa8f241fb5adf3d0e44b0c91973291b0e58","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"private void startDataSourceIngestProgressBar() {\n        final String displayName = NbBundle.getMessage(this.getClass(),\n                \"IngestJob.progress.dataSourceIngest.initialDisplayName\",\n                dataSource.getName());\n        dataSourceTasksProgress = ProgressHandleFactory.createHandle(displayName, new Cancellable() {\n            @Override\n            public boolean cancel() {\n                if (dataSourceTasksProgress != null) {\n                    dataSourceTasksProgress.setDisplayName(\n                            NbBundle.getMessage(this.getClass(),\n                            \"IngestJob.progress.cancelling\",\n                            displayName));\n                }\n                IngestJob.this.cancel();\n                return true;\n            }\n        });\n        dataSourceTasksProgress.start();\n        dataSourceTasksProgress.switchToIndeterminate();\n    }","id":82916,"modified_method":"private void startDataSourceIngestProgressBar() {\n        final String displayName = NbBundle.getMessage(this.getClass(),\n                \"IngestJob.progress.dataSourceIngest.initialDisplayName\",\n                dataSource.getName());\n        dataSourceIngestProgress = ProgressHandleFactory.createHandle(displayName, new Cancellable() {\n            @Override\n            public boolean cancel() {\n                if (dataSourceIngestProgress != null) {\n                    dataSourceIngestProgress.setDisplayName(\n                            NbBundle.getMessage(this.getClass(),\n                            \"IngestJob.progress.cancelling\",\n                            displayName));\n                }\n                IngestJob.this.cancel();\n                return true;\n            }\n        });\n        dataSourceIngestProgress.start();\n        dataSourceIngestProgress.switchToIndeterminate();\n    }","commit_id":"b75adfa8f241fb5adf3d0e44b0c91973291b0e58","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"void process(DataSourceIngestTask task) throws InterruptedException {\n        if (!isCancelled()) {\n            List<IngestModuleError> errors = new ArrayList<>();\n            errors.addAll(dataSourceIngestPipeline.process(task.getDataSource(), dataSourceTasksProgress));\n            if (!errors.isEmpty()) {\n                logIngestModuleErrors(errors);\n            }\n        } else {\n            taskScheduler.removeTasksForIngestJob(id);\n        }\n\n        // Because there is only one data source task per job, it is o.k. to \n        // call ProgressHandle.finish() now that the data source ingest modules \n        // are through using the progress bar via the DataSourceIngestModuleProgress wrapper.\n        // Calling ProgressHandle.finish() again in finish() will be harmless.\n        dataSourceTasksProgress.finish();\n\n        if (taskScheduler.isLastTaskForIngestJob(task)) {\n            finish();\n        }\n    }","id":82917,"modified_method":"void process(DataSourceIngestTask task) throws InterruptedException {\n        if (!isCancelled()) {\n            List<IngestModuleError> errors = new ArrayList<>();\n            errors.addAll(dataSourceIngestPipeline.process(task.getDataSource(), dataSourceIngestProgress));\n            if (!errors.isEmpty()) {\n                logIngestModuleErrors(errors);\n            }\n        } else {\n            taskScheduler.removeQueuedTasksForIngestJob(id);            \n        }\n        // taskScheduler.taskIsCompleted(task);\n\n        dataSourceIngestProgress.finish();\n        // if (!taskScheduler.hasFileIngestTasksForIngestJob()) {\n        //    finish();\n        // }\n    }","commit_id":"b75adfa8f241fb5adf3d0e44b0c91973291b0e58","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"private void finish() {\n        List<IngestModuleError> errors = new ArrayList<>();\n        while (!fileIngestPipelines.isEmpty()) {\n            FileIngestPipeline pipeline = fileIngestPipelines.poll();\n            errors.addAll(pipeline.shutDown());\n        }\n        if (!errors.isEmpty()) {\n            logIngestModuleErrors(errors);\n        }\n        dataSourceTasksProgress.finish();\n        fileTasksProgress.finish();\n        ingestJobsById.remove(id);\n        if (!isCancelled()) {\n            IngestManager.getInstance().fireIngestJobCompleted(id);\n        }\n    }","id":82918,"modified_method":"private void finish() {\n        List<IngestModuleError> errors = new ArrayList<>();\n        while (!fileIngestPipelines.isEmpty()) {\n            FileIngestPipeline pipeline = fileIngestPipelines.poll();\n            errors.addAll(pipeline.shutDown());\n        }\n        if (!errors.isEmpty()) {\n            logIngestModuleErrors(errors);\n        }\n        ingestJobsById.remove(id);\n        if (!isCancelled()) {\n            IngestManager.getInstance().fireIngestJobCompleted(id);\n        }\n    }","commit_id":"b75adfa8f241fb5adf3d0e44b0c91973291b0e58","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"void process(FileIngestTask task) throws InterruptedException {\n        if (!isCancelled()) {\n            AbstractFile file = task.getFile();\n            synchronized (this) {\n                ++processedFiles;\n                if (processedFiles <= estimatedFilesToProcess) {\n                    fileTasksProgress.progress(file.getName(), (int) processedFiles);\n                } else {\n                    fileTasksProgress.progress(file.getName(), (int) estimatedFilesToProcess);\n                }\n            }\n            FileIngestPipeline pipeline = fileIngestPipelines.take();\n            List<IngestModuleError> errors = new ArrayList<>();\n            errors.addAll(pipeline.process(file));\n            fileIngestPipelines.put(pipeline);\n            if (!errors.isEmpty()) {\n                logIngestModuleErrors(errors);\n            }\n        } else {\n            taskScheduler.removeTasksForIngestJob(id);\n        }\n\n        if (taskScheduler.isLastTaskForIngestJob(task)) {\n            finish();\n        }\n    }","id":82919,"modified_method":"void process(FileIngestTask task) throws InterruptedException {\n        if (!isCancelled()) {\n            AbstractFile file = task.getFile();\n            synchronized (this) {\n                ++processedFiles;\n                if (processedFiles <= estimatedFilesToProcess) {\n                    fileIngestProgress.progress(file.getName(), (int) processedFiles);\n                } else {\n                    fileIngestProgress.progress(file.getName(), (int) estimatedFilesToProcess);\n                }\n            }\n            FileIngestPipeline pipeline = fileIngestPipelines.take();\n            List<IngestModuleError> errors = new ArrayList<>();\n            errors.addAll(pipeline.process(file));\n            fileIngestPipelines.put(pipeline);\n            if (!errors.isEmpty()) {\n                logIngestModuleErrors(errors);\n            }\n        } else {\n            taskScheduler.removeQueuedTasksForIngestJob(id);            \n        }\n        // taskScheduler.taskIsCompleted(task);\n\n        // if (!taskScheduler.hasFileIngestTasksForIngestJob()) {\n        //    fileIngestProgress.finish();\n        //    if (!taskScheduler.hasDataSourceTasksForIngestJob()) {\n        //       finish();\n        //    }\n        // }\n    }","commit_id":"b75adfa8f241fb5adf3d0e44b0c91973291b0e58","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * Creates an ingest job for a data source.\n     *\n     * @param dataSource The data source to ingest.\n     * @param ingestModuleTemplates The ingest module templates to use to create\n     * the ingest pipelines for the job.\n     * @param processUnallocatedSpace Whether or not the job should include\n     * processing of unallocated space.\n     * @return A collection of ingest module start up errors, empty on success.\n     * @throws InterruptedException\n     */\n    static List<IngestModuleError> startIngestJob(Content dataSource, List<IngestModuleTemplate> ingestModuleTemplates, boolean processUnallocatedSpace) throws InterruptedException {\n        long jobId = nextIngestJobId.incrementAndGet();\n        IngestJob job = new IngestJob(jobId, dataSource, ingestModuleTemplates, processUnallocatedSpace);\n        ingestJobsById.put(jobId, job);\n        List<IngestModuleError> errors = job.start();\n        if (errors.isEmpty()) {\n            IngestManager.getInstance().fireIngestJobStarted(jobId);\n            taskScheduler.addTasksForIngestJob(job, dataSource);\n        } else {\n            ingestJobsById.remove(jobId);\n        }\n        return errors;\n    }","id":82920,"modified_method":"/**\n     * Creates an ingest job for a data source.\n     *\n     * @param dataSource The data source to ingest.\n     * @param ingestModuleTemplates The ingest module templates to use to create\n     * the ingest pipelines for the job.\n     * @param processUnallocatedSpace Whether or not the job should include\n     * processing of unallocated space.\n     * @return A collection of ingest module start up errors, empty on success.\n     * @throws InterruptedException\n     */\n    static List<IngestModuleError> startIngestJob(Content dataSource, List<IngestModuleTemplate> ingestModuleTemplates, boolean processUnallocatedSpace) throws InterruptedException {\n        List<IngestModuleError> errors = new ArrayList<>();\n        long jobId = nextIngestJobId.incrementAndGet();\n        IngestJob job = new IngestJob(jobId, dataSource, ingestModuleTemplates, processUnallocatedSpace);\n        job.createIngestPipelines();\n        if (job.canBeStarted()) {\n            ingestJobsById.put(jobId, job);\n            errors = job.start();\n            if (errors.isEmpty()) {\n                IngestManager.getInstance().fireIngestJobStarted(jobId);\n            } else {\n                ingestJobsById.remove(jobId);\n            }\n        }\n        return errors;\n    }","commit_id":"b75adfa8f241fb5adf3d0e44b0c91973291b0e58","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"private List<IngestModuleError> start() throws InterruptedException {\n        List<IngestModuleError> errors = startUpIngestPipelines();\n        if (errors.isEmpty()) {\n            startFileIngestProgressBar();\n            startDataSourceIngestProgressBar();\n        }\n        return errors;\n    }","id":82921,"modified_method":"private List<IngestModuleError> start() throws InterruptedException {\n        List<IngestModuleError> errors = startUpIngestPipelines();\n        if (errors.isEmpty()) {\n            startDataSourceIngestProgressBar();\n            taskScheduler.addDataSourceTask(this, dataSource);\n            startFileIngestProgressBar();\n            if (!taskScheduler.addFileTasks(this, dataSource)) {\n                finishFileIngestProgressBar();\n            }\n        }\n        return errors;\n    }","commit_id":"b75adfa8f241fb5adf3d0e44b0c91973291b0e58","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"private void startFileIngestProgressBar() {\n        final String displayName = NbBundle.getMessage(this.getClass(),\n                \"IngestJob.progress.fileIngest.displayName\",\n                dataSource.getName());\n        fileTasksProgress = ProgressHandleFactory.createHandle(displayName, new Cancellable() {\n            @Override\n            public boolean cancel() {\n                if (fileTasksProgress != null) {\n                    fileTasksProgress.setDisplayName(\n                            NbBundle.getMessage(this.getClass(), \"IngestJob.progress.cancelling\",\n                            displayName));\n                }\n                IngestJob.this.cancel();\n                return true;\n            }\n        });\n        estimatedFilesToProcess = dataSource.accept(new GetFilesCountVisitor());\n        fileTasksProgress.start();\n        fileTasksProgress.switchToDeterminate((int) estimatedFilesToProcess);\n    }","id":82922,"modified_method":"private void startFileIngestProgressBar() {\n        final String displayName = NbBundle.getMessage(this.getClass(),\n                \"IngestJob.progress.fileIngest.displayName\",\n                dataSource.getName());\n        fileIngestProgress = ProgressHandleFactory.createHandle(displayName, new Cancellable() {\n            @Override\n            public boolean cancel() {\n                if (fileIngestProgress != null) {\n                    fileIngestProgress.setDisplayName(\n                            NbBundle.getMessage(this.getClass(), \"IngestJob.progress.cancelling\",\n                            displayName));\n                }\n                IngestJob.this.cancel();\n                return true;\n            }\n        });\n        estimatedFilesToProcess = dataSource.accept(new GetFilesCountVisitor());\n        fileIngestProgress.start();\n        fileIngestProgress.switchToDeterminate((int) estimatedFilesToProcess);\n    }","commit_id":"b75adfa8f241fb5adf3d0e44b0c91973291b0e58","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * Adds one or more files to the files to be passed through the file ingest\n     * pipeline of the ingest job associated with the current context.\n     *\n     * @param files The files to be processed by the file ingest pipeline.\n     */\n    public void addFiles(List<AbstractFile> files) {\n        for (AbstractFile file : files) {\n            IngestScheduler.getInstance().addFileTaskToIngestJob(ingestJob, file);\n        }\n    }","id":82923,"modified_method":"/**\n     * Adds one or more files to the files to be passed through the file ingest\n     * pipeline of the ingest job associated with the current context.\n     *\n     * @param files The files to be processed by the file ingest pipeline.\n     */\n    public void addFiles(List<AbstractFile> files) {\n        for (AbstractFile file : files) {\n            IngestScheduler.getInstance().addFileTask(ingestJob, file);\n        }\n    }","commit_id":"b75adfa8f241fb5adf3d0e44b0c91973291b0e58","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"synchronized boolean isLastTaskForIngestJob(IngestTask completedTask) {\n        tasksInProgress.remove(completedTask);\n        IngestJob job = completedTask.getIngestJob();\n        long jobId = job.getId();\n        for (IngestTask task : tasksInProgress) {\n            if (task.getIngestJob().getId() == jobId) {\n                return false;\n            }\n        }\n        for (FileIngestTask task : fileTasks) {\n            if (task.getIngestJob().getId() == jobId) {\n                return false;\n            }\n        }\n        for (FileIngestTask task : directoryTasks) {\n            if (task.getIngestJob().getId() == jobId) {\n                return false;\n            }\n        }\n        for (FileIngestTask task : rootDirectoryTasks) {\n            if (task.getIngestJob().getId() == jobId) {\n                return false;\n            }\n        }\n        for (DataSourceIngestTask task : dataSourceTasks) {\n            if (task.getIngestJob().getId() == jobId) {\n                return false;\n            }\n        }\n        return true;\n    }","id":82924,"modified_method":"synchronized boolean wasLastTaskForIngestJob(IngestTask completedTask) {\n        tasksInProgress.remove(completedTask);\n        IngestJob job = completedTask.getIngestJob();\n        long jobId = job.getId();\n        for (IngestTask task : tasksInProgress) {\n            if (task.getIngestJob().getId() == jobId) {\n                return false;\n            }\n        }\n        for (FileIngestTask task : fileTasks) {\n            if (task.getIngestJob().getId() == jobId) {\n                return false;\n            }\n        }\n        for (FileIngestTask task : directoryTasks) {\n            if (task.getIngestJob().getId() == jobId) {\n                return false;\n            }\n        }\n        for (FileIngestTask task : rootDirectoryTasks) {\n            if (task.getIngestJob().getId() == jobId) {\n                return false;\n            }\n        }\n        for (DataSourceIngestTask task : dataSourceTasks) {\n            if (task.getIngestJob().getId() == jobId) {\n                return false;\n            }\n        }\n        return true;\n    }","commit_id":"b75adfa8f241fb5adf3d0e44b0c91973291b0e58","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"@Override\n        public IngestTask getNextTask() throws InterruptedException {\n            FileIngestTask task = fileTasks.take();\n            updateFileTaskQueues(task);\n            return task;\n        }","id":82925,"modified_method":"@Override\n        public IngestTask getNextTask() throws InterruptedException {  // RJCTODO: Does this need to be synchronized?\n            FileIngestTask task = fileTasks.take();\n            fileTasksInProgress.add(task);\n            updateFileTaskQueues();\n            return task;\n        }","commit_id":"b75adfa8f241fb5adf3d0e44b0c91973291b0e58","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"synchronized void addTasksForIngestJob(IngestJob job, Content dataSource) throws InterruptedException {\n        // Enqueue a data source ingest task for the data source. \n        DataSourceIngestTask task = new DataSourceIngestTask(job, dataSource);\n        try {\n            dataSourceTasks.put(task);\n        } catch (InterruptedException ex) {\n            Thread.currentThread().interrupt();\n            logger.log(Level.FINE, \"Task scheduling for ingest job interrupted\", ex); //NON-NLS\n            return;\n        }\n\n        // Get the top level files of the data source.\n        Collection<AbstractFile> rootObjects = dataSource.accept(new GetRootDirectoryVisitor());\n        List<AbstractFile> toptLevelFiles = new ArrayList<>();\n        if (rootObjects.isEmpty() && dataSource instanceof AbstractFile) {\n            // The data source is itself a file.\n            toptLevelFiles.add((AbstractFile) dataSource);\n        } else {\n            for (AbstractFile root : rootObjects) {\n                List<Content> children;\n                try {\n                    children = root.getChildren();\n                    if (children.isEmpty()) {\n                        // Add the root object itself, it could be an unallocated space \n                        // file, or a child of a volume or an image.\n                        toptLevelFiles.add(root);\n                    } else {\n                        // The root object is a file system root directory, get\n                        // the files within it.\n                        for (Content child : children) {\n                            if (child instanceof AbstractFile) {\n                                toptLevelFiles.add((AbstractFile) child);\n                            }\n                        }\n                    }\n                } catch (TskCoreException ex) {\n                    logger.log(Level.WARNING, \"Could not get children of root to enqueue: \" + root.getId() + \": \" + root.getName(), ex); //NON-NLS\n                }\n            }\n        }\n\n        // Enqueue file ingest tasks for the top level files.\n        for (AbstractFile firstLevelFile : toptLevelFiles) {\n            FileIngestTask fileTask = new FileIngestTask(job, firstLevelFile);\n            if (shouldEnqueueFileTask(fileTask)) {\n                rootDirectoryTasks.add(fileTask);\n            }\n        }\n\n        updateFileTaskQueues(null);\n    }","id":82926,"modified_method":"synchronized boolean addFileTasks(IngestJob job, Content dataSource) throws InterruptedException {\n        // Get the top level files of the data source.\n        Collection<AbstractFile> rootObjects = dataSource.accept(new GetRootDirectoryVisitor());\n        List<AbstractFile> topLevelFiles = new ArrayList<>();\n        if (rootObjects.isEmpty() && dataSource instanceof AbstractFile) {\n            // The data source is itself a file.\n            topLevelFiles.add((AbstractFile) dataSource);\n        } else {\n            for (AbstractFile root : rootObjects) {\n                List<Content> children;\n                try {\n                    children = root.getChildren();\n                    if (children.isEmpty()) {\n                        // Add the root object itself, it could be an unallocated space \n                        // file, or a child of a volume or an image.\n                        topLevelFiles.add(root);\n                    } else {\n                        // The root object is a file system root directory, get\n                        // the files within it.\n                        for (Content child : children) {\n                            if (child instanceof AbstractFile) {\n                                topLevelFiles.add((AbstractFile) child);\n                            }\n                        }\n                    }\n                } catch (TskCoreException ex) {\n                    logger.log(Level.WARNING, \"Could not get children of root to enqueue: \" + root.getId() + \": \" + root.getName(), ex); //NON-NLS\n                }\n            }\n        }\n\n        if (!topLevelFiles.isEmpty()) {\n            // Enqueue file ingest tasks for the top level files.\n            for (AbstractFile firstLevelFile : topLevelFiles) {\n                FileIngestTask fileTask = new FileIngestTask(job, firstLevelFile);\n                if (shouldEnqueueFileTask(fileTask)) {\n                    rootDirectoryTasks.add(fileTask);\n                }\n            }\n            updateFileTaskQueues();\n            return true;            \n        } else {\n            return false;\n        }        \n   }","commit_id":"b75adfa8f241fb5adf3d0e44b0c91973291b0e58","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"private synchronized void updateFileTaskQueues(FileIngestTask taskInProgress) throws InterruptedException {\n        if (taskInProgress != null) {\n            tasksInProgress.add(taskInProgress);\n        }\n\n        // we loop because we could have a directory that has all files\n        // that do not get enqueued\n        while (true) {\n            // There are files in the queue, we're done\n            if (fileTasks.isEmpty() == false) {\n                return;\n            }\n            // fill in the directory queue if it is empty.\n            if (this.directoryTasks.isEmpty()) {\n                // bail out if root is also empty -- we are done\n                if (rootDirectoryTasks.isEmpty()) {\n                    return;\n                }\n                FileIngestTask rootTask = rootDirectoryTasks.pollFirst();\n                directoryTasks.add(rootTask);\n            }\n            //pop and push AbstractFile directory children if any\n            //add the popped and its leaf children onto cur file list\n            FileIngestTask parentTask = directoryTasks.remove(directoryTasks.size() - 1);\n            final AbstractFile parentFile = parentTask.getFile();\n            // add itself to the file list\n            if (shouldEnqueueFileTask(parentTask)) {\n                try {\n                    fileTasks.put(parentTask);\n                } catch (InterruptedException ex) {\n                    Thread.currentThread().interrupt();\n                    logger.log(Level.FINE, \"Task scheduling for ingest job interrupted\", ex); //NON-NLS\n                    return;\n                }\n            }\n            // add its children to the file and directory lists\n            try {\n                List<Content> children = parentFile.getChildren();\n                for (Content c : children) {\n                    if (c instanceof AbstractFile) {\n                        AbstractFile childFile = (AbstractFile) c;\n                        FileIngestTask childTask = new FileIngestTask(parentTask.getIngestJob(), childFile);\n                        if (childFile.hasChildren()) {\n                            directoryTasks.add(childTask);\n                        } else if (shouldEnqueueFileTask(childTask)) {\n                            try {\n                                fileTasks.put(childTask);\n                            } catch (InterruptedException ex) {\n                                Thread.currentThread().interrupt();\n                                logger.log(Level.FINE, \"Task scheduling for ingest job interrupted\", ex); //NON-NLS\n                                return;\n                            }\n                        }\n                    }\n                }\n            } catch (TskCoreException ex) {\n                logger.log(Level.SEVERE, \"Could not get children of file and update file queues: \" + parentFile.getName(), ex); //NON-NLS\n            }\n        }\n    }","id":82927,"modified_method":"private synchronized void updateFileTaskQueues() throws InterruptedException {\n        // we loop because we could have a directory that has all files\n        // that do not get enqueued\n        while (true) {\n            // There are files in the queue, we're done\n            if (fileTasks.isEmpty() == false) {\n                return;\n            }\n            // fill in the directory queue if it is empty.\n            if (this.directoryTasks.isEmpty()) {\n                // bail out if root is also empty -- we are done\n                if (rootDirectoryTasks.isEmpty()) {\n                    return;\n                }\n                FileIngestTask rootTask = rootDirectoryTasks.pollFirst();\n                directoryTasks.add(rootTask);\n            }\n            //pop and push AbstractFile directory children if any\n            //add the popped and its leaf children onto cur file list\n            FileIngestTask parentTask = directoryTasks.remove(directoryTasks.size() - 1);\n            final AbstractFile parentFile = parentTask.getFile();\n            // add itself to the file list\n            if (shouldEnqueueFileTask(parentTask)) {\n                try {\n                    fileTasks.put(parentTask);\n                } catch (InterruptedException ex) {\n                    Thread.currentThread().interrupt();\n                    logger.log(Level.FINE, \"Task scheduling for ingest job interrupted\", ex); //NON-NLS\n                    return;\n                }\n            }\n            // add its children to the file and directory lists\n            try {\n                List<Content> children = parentFile.getChildren();\n                for (Content c : children) {\n                    if (c instanceof AbstractFile) {\n                        AbstractFile childFile = (AbstractFile) c;\n                        FileIngestTask childTask = new FileIngestTask(parentTask.getIngestJob(), childFile);\n                        if (childFile.hasChildren()) {\n                            directoryTasks.add(childTask);\n                        } else if (shouldEnqueueFileTask(childTask)) {\n                            try {\n                                fileTasks.put(childTask);\n                            } catch (InterruptedException ex) {\n                                Thread.currentThread().interrupt();\n                                logger.log(Level.FINE, \"Task scheduling for ingest job interrupted\", ex); //NON-NLS\n                                return;\n                            }\n                        }\n                    }\n                }\n            } catch (TskCoreException ex) {\n                logger.log(Level.SEVERE, \"Could not get children of file and update file queues: \" + parentFile.getName(), ex); //NON-NLS\n            }\n        }\n    }","commit_id":"b75adfa8f241fb5adf3d0e44b0c91973291b0e58","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"@Override\n        public IngestTask getNextTask() throws InterruptedException {\n            return dataSourceTasks.take();\n        }","id":82928,"modified_method":"@Override\n        public IngestTask getNextTask() throws InterruptedException { // RJCTODO: Does this need to be synchronized?\n            DataSourceIngestTask task = dataSourceTasks.take();\n            dataSourceTasksInProgress.add(task);\n            return task;\n        }","commit_id":"b75adfa8f241fb5adf3d0e44b0c91973291b0e58","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"synchronized void removeTasksForIngestJob(long ingestJobId) {        \n        // Remove all tasks for this ingest job that are not in progress. \n        Iterator<FileIngestTask> fileTasksIterator = fileTasks.iterator();\n        while (fileTasksIterator.hasNext()) {\n            if (fileTasksIterator.next().getIngestJob().getId() == ingestJobId) {\n                fileTasksIterator.remove();\n            }\n        }\n        Iterator<FileIngestTask> directoryTasksIterator = directoryTasks.iterator();\n        while (directoryTasksIterator.hasNext()) {\n            if (directoryTasksIterator.next().getIngestJob().getId() == ingestJobId) {\n                directoryTasksIterator.remove();\n            }\n        }\n        Iterator<FileIngestTask> rootDirectoryTasksIterator = rootDirectoryTasks.iterator();\n        while (rootDirectoryTasksIterator.hasNext()) {\n            if (rootDirectoryTasksIterator.next().getIngestJob().getId() == ingestJobId) {\n                rootDirectoryTasksIterator.remove();\n            }\n        }\n        Iterator<DataSourceIngestTask> dataSourceTasksIterator = dataSourceTasks.iterator();\n        while (dataSourceTasksIterator.hasNext()) {\n            if (dataSourceTasksIterator.next().getIngestJob().getId() == ingestJobId) {\n                dataSourceTasksIterator.remove();\n            }\n        }\n    }","id":82929,"modified_method":"synchronized void removeQueuedTasksForIngestJob(long ingestJobId) {\n        // Remove all tasks for this ingest job that are not in progress. \n        Iterator<FileIngestTask> fileTasksIterator = fileTasks.iterator();\n        while (fileTasksIterator.hasNext()) {\n            if (fileTasksIterator.next().getIngestJob().getId() == ingestJobId) {\n                fileTasksIterator.remove();\n            }\n        }\n        Iterator<FileIngestTask> directoryTasksIterator = directoryTasks.iterator();\n        while (directoryTasksIterator.hasNext()) {\n            if (directoryTasksIterator.next().getIngestJob().getId() == ingestJobId) {\n                directoryTasksIterator.remove();\n            }\n        }\n        Iterator<FileIngestTask> rootDirectoryTasksIterator = rootDirectoryTasks.iterator();\n        while (rootDirectoryTasksIterator.hasNext()) {\n            if (rootDirectoryTasksIterator.next().getIngestJob().getId() == ingestJobId) {\n                rootDirectoryTasksIterator.remove();\n            }\n        }\n        Iterator<DataSourceIngestTask> dataSourceTasksIterator = dataSourceTasks.iterator();\n        while (dataSourceTasksIterator.hasNext()) {\n            if (dataSourceTasksIterator.next().getIngestJob().getId() == ingestJobId) {\n                dataSourceTasksIterator.remove();\n            }\n        }\n    }","commit_id":"b75adfa8f241fb5adf3d0e44b0c91973291b0e58","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"void addFileTaskToIngestJob(IngestJob job, AbstractFile file) {\n        FileIngestTask task = new FileIngestTask(job, file);\n        if (shouldEnqueueFileTask(task)) {\n            try {\n                fileTasks.put(task);\n            } catch (InterruptedException ex) {\n                Thread.currentThread().interrupt();\n                logger.log(Level.FINE, \"Task scheduling for ingest job interrupted\", ex); //NON-NLS\n            }\n        }\n    }","id":82930,"modified_method":"void addFileTask(IngestJob job, AbstractFile file) {\n        FileIngestTask task = new FileIngestTask(job, file);\n        if (shouldEnqueueFileTask(task)) {\n            try {\n                fileTasks.put(task);\n            } catch (InterruptedException ex) {\n                Thread.currentThread().interrupt();\n                logger.log(Level.FINE, \"Task scheduling for ingest job interrupted\", ex); //NON-NLS\n            }\n        }\n    }","commit_id":"b75adfa8f241fb5adf3d0e44b0c91973291b0e58","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"@Override\n  public void initComponent() {\n    // default model persistence (.mps files)\n    ModelDigestHelper.getInstance().addDigestProvider(new DigestProvider() {\n      @Override\n      public Map<String, String> getGenerationHashes(@NotNull IFile iFile) {\n        if (iFile == null) return null;\n        try {\n          VirtualFile file = VirtualFileUtils.getVirtualFile(iFile);\n          if (file == null) return null;\n\n          final Map<String, String>[] valueArray = new Map[]{null};\n          FileBasedIndex.getInstance().processValues(ModelDigestIndex.NAME, FileBasedIndex.getFileId(file), file,\n              new ValueProcessor<Map<String, String>>() {\n                @Override\n                public boolean process(VirtualFile file, Map<String, String> values) {\n                  valueArray[0] = values;\n                  return true;\n                }\n              }, new EverythingGlobalScope());\n          return valueArray[0];\n        } catch (IndexNotReadyException ignored) {\n        } catch (ProcessCanceledException ignored) {\n        }\n        return null;\n      }\n    });\n    // binary model persistence (.mpb files)\n    ModelDigestHelper.getInstance().addDigestProvider(new DigestProvider() {\n      @Override\n      public Map<String, String> getGenerationHashes(@NotNull IFile iFile) {\n        if (iFile == null) return null;\n        try {\n          VirtualFile file = VirtualFileUtils.getVirtualFile(iFile);\n          if (file == null) return null;\n\n          final Map<String, String>[] valueArray = new Map[]{null};\n          FileBasedIndex.getInstance().processValues(BinaryModelDigestIndex.NAME, FileBasedIndex.getFileId(file), file,\n              new ValueProcessor<Map<String, String>>() {\n                @Override\n                public boolean process(VirtualFile file, Map<String, String> values) {\n                  valueArray[0] = values;\n                  return true;\n                }\n              }, new EverythingGlobalScope());\n          return valueArray[0];\n        } catch (IndexNotReadyException ignored) {\n        } catch (ProcessCanceledException ignored) {\n        }\n        return null;\n      }\n    });\n    // language module files (.mpl files)\n    ModelDigestHelper.getInstance().addDigestProvider(new DigestProvider() {\n      @Override\n      public Map<String, String> getGenerationHashes(@NotNull IFile iFile) {\n        try {\n          VirtualFile file = VirtualFileUtils.getVirtualFile(iFile);\n          if (file == null) return null;\n\n          final Map<String, String>[] valueArray = new Map[]{null};\n          FileBasedIndex.getInstance().processValues(LanguageModelDigestIndex.NAME, FileBasedIndex.getFileId(file), file,\n              new ValueProcessor<Map<String, String>>() {\n                @Override\n                public boolean process(VirtualFile file, Map<String, String> values) {\n                  valueArray[0] = values;\n                  return true;\n                }\n              }, new EverythingGlobalScope());\n          return valueArray[0];\n        } catch (IndexNotReadyException e) {\n        } catch (ProcessCanceledException e) {\n        }\n        return null;\n      }\n    });\n  }","id":82931,"modified_method":"@Override\n  public void initComponent() {\n    // default model persistence (.mps files)\n    ModelDigestHelper.getInstance().addDigestProvider(new BaseModelDigestProvider(ModelDigestIndex.NAME));\n    // binary model persistence (.mpb files)\n    ModelDigestHelper.getInstance().addDigestProvider(new BaseModelDigestProvider(BinaryModelDigestIndex.NAME));\n    // language module files (.mpl files)\n    ModelDigestHelper.getInstance().addDigestProvider(new BaseModelDigestProvider(LanguageModelDigestIndex.NAME));\n  }","commit_id":"d292e453b74246049038f1dd9783f821c600d823","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  public InputFilter getInputFilter() {\n    return new InputFilter() {\n      @Override\n      public boolean acceptInput(VirtualFile file) {\n        return file.getFileType().equals(MPSFileTypeFactory.LANGUAGE_FILE_TYPE);\n      }\n    };\n  }","id":82932,"modified_method":"@NotNull\n  @Override\n  public InputFilter getInputFilter() {\n    return new InputFilter() {\n      @Override\n      public boolean acceptInput(@NotNull VirtualFile file) {\n        return file.getFileType().equals(MPSFileTypeFactory.LANGUAGE_FILE_TYPE);\n      }\n    };\n  }","commit_id":"d292e453b74246049038f1dd9783f821c600d823","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  public InputFilter getInputFilter() {\n    return new InputFilter() {\n      @Override\n      public boolean acceptInput(VirtualFile file) {\n        FileType fileType = file.getFileType();\n        return fileType.equals(MPSFileTypeFactory.MPS_FILE_TYPE)\n            || fileType.equals(MPSFileTypeFactory.MPS_ROOT_FILE_TYPE)\n            || fileType.equals(MPSFileTypeFactory.MPS_HEADER_FILE_TYPE);\n      }\n    };\n  }","id":82933,"modified_method":"@NotNull\n  @Override\n  public InputFilter getInputFilter() {\n    return new InputFilter() {\n      @Override\n      public boolean acceptInput(@NotNull VirtualFile file) {\n        FileType fileType = file.getFileType();\n        return fileType.equals(MPSFileTypeFactory.MPS_FILE_TYPE)\n            || fileType.equals(MPSFileTypeFactory.MPS_ROOT_FILE_TYPE)\n            || fileType.equals(MPSFileTypeFactory.MPS_HEADER_FILE_TYPE);\n      }\n    };\n  }","commit_id":"d292e453b74246049038f1dd9783f821c600d823","url":"https://github.com/JetBrains/MPS"},{"original_method":"/** Sets the z-index of this actor. The z-index is the index into the parent's {@link Group#getChildren() children}, where a\r\n\t * lower index is below a higher index. Setting a z-index higher than the number of children will move the child to the front.\r\n\t * Setting a z-index less than zero is invalid. */\r\n\tpublic void setZIndex (int index) {\r\n\t\tif (index < 0) throw new IllegalArgumentException(\"ZIndex cannot be < 0.\");\r\n\t\tGroup parent = this.parent;\r\n\t\tif (parent == null) return;\r\n\t\tArray<Actor> children = parent.children;\r\n\t\tif (children.size == 1) return;\r\n\t\tif (!children.removeValue(this, true)) return;\r\n\t\tif (index >= children.size)\r\n\t\t\tchildren.add(this);\r\n\t\telse\r\n\t\t\tchildren.insert(index, this);\r\n\t}","id":82934,"modified_method":"/** Sets the z-index of this actor. The z-index is the index into the parent's {@link Group#getChildren() children}, where a\r\n\t * lower index is below a higher index. Setting a z-index higher than the number of children will move the child to the front.\r\n\t * Setting a z-index less than zero is invalid. */\r\n\tpublic void setZIndex (int index) {\r\n\t\tif (index < 0) throw new IllegalArgumentException(\"ZIndex cannot be < 0.\");\r\n\t\tGroup parent = this.parent;\r\n\t\tif (parent == null) return;\r\n\t\tArray<Actor> children = parent.children;\r\n\t\tif (children.size == 1) return;\r\n\t\tindex = Math.min(index, children.size - 1);\r\n\t\tif (index == children.indexOf(this, true)) return;\r\n\t\tif (!children.removeValue(this, true)) return;\r\n\t\tchildren.insert(index, this);\r\n\t}","commit_id":"89f52571eb63530a548747bd4fc321366d5d760d","url":"https://github.com/libgdx/libgdx"},{"original_method":"public void didAppendToResponse(WOElement element, WOResponse response, WOContext context) {\n        if (_markupEnabled) {\n            try {\n                CharSequence contentStr = (CharSequence) _contentField.get(response);\n                if (contentStr != null) {\n                    List<MarkerStats> markerList = _markerList.get();\n                    MarkerStats markerStats = markerList.remove(markerList.size() - 1);\n                    int startIndex = markerStats._index;\n                    int markerIndex = indexOf(contentStr, PFMarkup._marker, startIndex);\n                    if (markerIndex != -1) {\n                        replace(contentStr, markerIndex, markerIndex + PFMarkup._marker.length(), \"\");\n                        startIndex = markerIndex;\n\n                        int tagIndex = -1;\n                        int endIndex = contentStr.length();\n                        for (int i = startIndex; i < endIndex; i++) {\n                            char ch = contentStr.charAt(i);\n                            if (ch == '<') {\n                                if (i < endIndex - 1 && contentStr.charAt(i + 1) != '/' && contentStr.charAt(i + 1) != '!') {\n                                    tagIndex = i;\n                                    break;\n                                }\n                            }\n                        }\n\n                        if (tagIndex != -1) {\n                            int attributeOffset = -1;\n                            boolean spacesFound = false;\n                            for (int i = tagIndex; i < endIndex; i++) {\n                                char ch = contentStr.charAt(i);\n                                if (ch == ' ') {\n                                    spacesFound = true;\n                                } else if (ch == '>' || ch == '/') {\n                                    if (attributeOffset > tagIndex + 1) {\n                                        attributeOffset = i;\n                                    }\n                                    break;\n                                } else if (spacesFound) {\n                                    attributeOffset = i;\n                                    break;\n                                }\n                            }\n                            if (attributeOffset != -1) {\n                                String profilerID = markerStats._stats.cssID();\n                                String profilerIDAttributeName = \"class\";\n                                if (regionMatches(contentStr, attributeOffset, profilerIDAttributeName, 0, profilerIDAttributeName.length())) {\n                                    int openQuoteIndex = indexOf(contentStr, \"\\\"\", attributeOffset);\n                                    if (openQuoteIndex != -1) {\n                                        insert(contentStr, openQuoteIndex + 1, profilerID + \" \");\n                                    }\n                                } else {\n                                    insert(contentStr, attributeOffset, \" \" + profilerIDAttributeName + \"=\\\"\" + profilerID + \"\\\" \");\n                                }\n                            }\n                        }\n                    }\n                }\n            } catch (Throwable t) {\n                throw new RuntimeException(\"Failed to replace markers in the response.\", t);\n            }\n        }\n    }","id":82935,"modified_method":"public void didAppendToResponse(WOElement element, WOResponse response, WOContext context) {\n        if (_markupEnabled) {\n            try {\n                CharSequence contentStr = (CharSequence) _contentField.get(response);\n                if (contentStr != null) {\n                    List<MarkerStats> markerList = _markerList.get();\n                    MarkerStats markerStats = markerList.remove(markerList.size() - 1);\n                    int startIndex = markerStats._index;\n                    int markerIndex = indexOf(contentStr, PFMarkup._marker, startIndex);\n                    if (markerIndex != -1) {\n                        replace(contentStr, markerIndex, markerIndex + PFMarkup._marker.length(), \"\");\n                        startIndex = markerIndex;\n\n                        int tagIndex = -1;\n                        int endIndex = contentStr.length();\n                        for (int i = startIndex; i < endIndex; i++) {\n                            char ch = contentStr.charAt(i);\n                            if (ch == '<') {\n                                if (i < endIndex - 1 && contentStr.charAt(i + 1) != '/' && contentStr.charAt(i + 1) != '!') {\n                                    tagIndex = i;\n                                    break;\n                                }\n                            }\n                        }\n\n                        if (tagIndex != -1) {\n                            String profilerIDAttributeName = \"class\";\n                            String profilerIDAttributeStart = \" \" + profilerIDAttributeName + \"=\\\"\";\n                            boolean foundClassAttribute = false;\n                            int closeOffset = StringUtils.indexOf(contentStr, '>', tagIndex);\n                            int attributeOffset = StringUtils.indexOf(contentStr, profilerIDAttributeName, tagIndex);\n                            if (attributeOffset == -1 || attributeOffset > closeOffset) {\n                                char ch = contentStr.charAt(closeOffset - 1);\n                                if (ch == '/') {\n                                    attributeOffset = closeOffset - 1;\n                                } else {\n                                    attributeOffset = closeOffset;\n                                }\n                            } else {\n                                attributeOffset += profilerIDAttributeStart.length() -1;\n                                foundClassAttribute = true;\n                            }\n                            String profilerID = markerStats._stats.cssID();\n                            if (foundClassAttribute) {\n                                insert(contentStr, attributeOffset, profilerID + \" \");\n                            } else {\n                                insert(contentStr, attributeOffset, profilerIDAttributeStart + profilerID + \"\\\"\");\n                            }\n                        }\n                    }\n                }\n            } catch (Throwable t) {\n                throw new RuntimeException(\"Failed to replace markers in the response.\", t);\n            }\n        }\n    }","commit_id":"9f4a75ba3a60d6d3afa34d1649ca60959a9f27d0","url":"https://github.com/wocommunity/wonder"},{"original_method":"public void clear(final String tablename) throws IOException {\n    \tsuper.clear(tablename);\n    \tthis.bookmarks.cleanCache(tablename);\n    }","id":82936,"modified_method":"public void clear(final String tablename) throws IOException {\n    \tsuper.clear(tablename);\n    \tthis.bookmarks.clearIndex(tablename);\n    }","commit_id":"f5324b27f2826e3c3de9647f9c3c9f28e012ca8f","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public YMarkTables(final Tables wt) {\n    \tthis.worktables = (WorkTables)wt;\n    \tthis.cache = new ConcurrentARC<String, byte[]>(50,1);\n    }","id":82937,"modified_method":"public YMarkTables(final Tables wt) {\n    \tthis.worktables = (WorkTables)wt;\n    \tthis.folders = new YMarkIndex(this.worktables, TABLES.FOLDERS.basename());\n    \tthis.tags = new YMarkIndex(this.worktables, TABLES.TAGS.basename());\n    }","commit_id":"f5324b27f2826e3c3de9647f9c3c9f28e012ca8f","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public HashSet<String> getBookmarks(final String index_table, final String[] keyArray) throws IOException, RowSpaceExceededException {\n    \tfinal HashSet<String> urlSet = new HashSet<String>();\n\t\turlSet.addAll(getBookmarks(index_table, keyArray[0]));\n\t\tif (urlSet.isEmpty())\n\t\t\treturn urlSet;\n\t\tif (keyArray.length > 1) {\n\t\t\tfor (final String keyname : keyArray) {\n\t\t\t\turlSet.retainAll(getBookmarks(index_table, keyname));\n\t\t\t\tif (urlSet.isEmpty())\n\t\t\t\t\treturn urlSet;\n\t\t\t}\n\t\t}\n\t\treturn urlSet;\t\t\n\t}","id":82938,"modified_method":"public void deleteBookmark(final String bmk_user, final byte[] urlHash) throws IOException, RowSpaceExceededException {\n        final String bmk_table = TABLES.BOOKMARKS.tablename(bmk_user);\n    \tTables.Row bmk_row = null;\n        bmk_row = this.worktables.select(bmk_table, urlHash);\n        if(bmk_row != null) {\n            final String tagsString = bmk_row.get(YMarkTables.BOOKMARK.TAGS.key(),YMarkTables.BOOKMARK.TAGS.deflt());\n            tags.removeIndexEntry(bmk_user, tagsString, urlHash);\n            final String foldersString = bmk_row.get(YMarkTables.BOOKMARK.FOLDERS.key(),YMarkTables.FOLDERS_ROOT);\n            folders.removeIndexEntry(bmk_user, foldersString, urlHash);\n    \t\tthis.worktables.delete(bmk_table,urlHash);\n        }\n    }","commit_id":"f5324b27f2826e3c3de9647f9c3c9f28e012ca8f","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public HashSet<String> getBookmarks(final String index_table, final String keyname) throws IOException, RowSpaceExceededException {\n\t\tfinal String cacheKey = index_table+\":\"+keyname;\n\t\tif (this.cache.containsKey(cacheKey)) {\n\t\t\treturn keysStringToSet(new String(this.cache.get(cacheKey)));\n\t\t} else {\n\t\t\tfinal Tables.Row idx_row = this.worktables.select(index_table, getKeyId(keyname));\n\t\t\tif (idx_row != null) {\t\t\t\t\t\t\n\t\t\t\tfinal byte[] keys = idx_row.get(INDEX.URLS.key);\n\t\t\t\tthis.cache.put(cacheKey, keys);\n\t\t\t\treturn keysStringToSet(new String(keys));\n\t\t\t}\n\t\t}\n\t\treturn new HashSet<String>();\n\t}","id":82939,"modified_method":"public void deleteBookmark(final String bmk_user, final String url) throws IOException, RowSpaceExceededException {\n    \tthis.deleteBookmark(bmk_user, getBookmarkId(url));\n    }","commit_id":"f5324b27f2826e3c3de9647f9c3c9f28e012ca8f","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public final static byte[] keySetToBytes(final HashSet<String> urlSet) {\n    \tfinal Iterator<String> urlIter = urlSet.iterator();\n    \tfinal \n    \tStringBuilder urls = new StringBuilder(urlSet.size()*20);\n    \twhile(urlIter.hasNext()) {\n    \t\turls.append(TAGS_SEPARATOR);\n    \t\turls.append(urlIter.next());\n    \t}\n    \turls.deleteCharAt(0);\n    \treturn urls.toString().getBytes();\n    }","id":82940,"modified_method":"public final static byte[] keySetToBytes(final HashSet<String> urlSet) {\n    \treturn keySetToString(urlSet).getBytes();\n    }","commit_id":"f5324b27f2826e3c3de9647f9c3c9f28e012ca8f","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public void addBookmark(final HashMap<String,String> bmk, final String bmk_user) {\n\t\tfinal String bmk_table = bmk_user + TABLES.BOOKMARKS.basename();\n\t\tfinal String folder_table = bmk_user + TABLES.FOLDERS.basename();\n\t\tfinal String tag_table = bmk_user + TABLES.TAGS.basename();\n\t\t\n\t\tTables.Row bmk_row = null;\n\t\tbyte[] urlHash = null;     \t\t\n\t\t\n\t\ttry {\n\t\t\turlHash = getBookmarkId(bmk.get(BOOKMARK.URL.key()));\n\t\t} catch (MalformedURLException e) {\n\t\t\tLog.logInfo(BOOKMARKS_LOG, \"Malformed URL:\"+bmk.get(BOOKMARK.URL.key()));\n\t\t\treturn;\n\t\t}\n\t\tif (urlHash != null) {\n\t\t\ttry {\n\t\t\t\tbmk_row = this.worktables.select(bmk_table, urlHash);\n\t\t\t} catch (IOException e) {\n\t\t\t\tLog.logException(e);\n\t\t\t} catch (RowSpaceExceededException e) {\n\t\t\t\tLog.logException(e);\n\t\t\t}\n\n\t        if (bmk_row == null) {\n\t        \tData data = new Data();\n\t            for (BOOKMARK b : BOOKMARK.values()) {\n\t            \tswitch(b) {\n\t    \t\t\t\tcase DATE_ADDED:\n\t    \t\t\t\tcase DATE_MODIFIED:\n\t    \t\t\t\t\tif(bmk.containsKey(b.key())) {\n\t    \t\t\t\t\t\tdata.put(b.key(), bmk.get(b.key()));\n\t    \t\t\t\t\t} else {\n\t    \t\t\t\t\t\tdata.put(b.key(), String.valueOf(System.currentTimeMillis()).getBytes());\n\t    \t\t\t\t\t}\n\t    \t\t\t\t\tbreak;\n\t    \t\t\t\tcase TAGS:\n\t    \t\t\t\t\tif(bmk.containsKey(b.key())) {\n\t    \t\t\t\t\t\tfinal String[] tagArray = bmk.get(b.key()).split(TAGS_SEPARATOR);                    \n\t    \t\t\t\t\t\tfor (final String tag : tagArray) {\n\t    \t\t\t\t\t\t\tthis.worktables.bookmarks.updateIndexTable(tag_table, tag, urlHash, INDEX_ACTION.ADD);\n\t    \t\t\t\t\t\t}\n\t    \t\t\t\t\t\tdata.put(b.key(), bmk.get(b.key()));\n\t    \t\t\t\t\t}\n\t    \t\t\t\t\tbreak;\n\t    \t\t\t\tcase FOLDERS:\n\t    \t\t\t\t\tif(bmk.containsKey(b.key())) {\n\t    \t\t\t\t\t\tfinal String[] folderArray = bmk.get(b.key()).split(TAGS_SEPARATOR);                    \n\t    \t\t\t\t\t\tfor (final String folder : folderArray) {\n\t    \t\t\t\t\t\t\tthis.worktables.bookmarks.updateIndexTable(folder_table, folder, urlHash, INDEX_ACTION.ADD);\n\t    \t\t\t\t\t\t}\n\t    \t\t\t\t\t\tdata.put(b.key(), bmk.get(b.key()));\n\t    \t\t\t\t\t}\n\t    \t\t\t\t\tbreak;\t\n\t    \t\t\t\tdefault:\n\t    \t\t\t\t\tif(bmk.containsKey(b.key())) {\n\t    \t\t\t\t\t\tdata.put(b.key(), bmk.get(b.key()));\n\t    \t\t\t\t\t}\n\t            \t }\n\t             }\n\t             try {\n\t            \t Log.logInfo(BOOKMARKS_LOG, \"Add URL:\"+bmk.get(BOOKMARK.URL.key()));\n\t            \t this.worktables.insert(bmk_table, urlHash, data);\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tLog.logException(e);\n\t\t\t\t}\n\t        }\n\t\t}\n\t}","id":82941,"modified_method":"public void addBookmark(final String bmk_user, final HashMap<String,String> bmk, final boolean importer) throws IOException, RowSpaceExceededException {\n\t\tfinal String bmk_table = TABLES.BOOKMARKS.tablename(bmk_user);\n        final String date = String.valueOf(System.currentTimeMillis());\n\t\tfinal byte[] urlHash = getBookmarkId(bmk.get(BOOKMARK.URL.key()));\n\t\tTables.Row bmk_row = null;\n\n\t\tif (urlHash != null) {\n\t\t\tbmk_row = this.worktables.select(bmk_table, urlHash);\n\t        if (bmk_row == null) {\n\t        \t// create and insert new entry\n\t        \tfinal Data data = new Data();\n\t            for (BOOKMARK b : BOOKMARK.values()) {\n\t            \tswitch(b) {\n\t    \t\t\t\tcase DATE_ADDED:\n\t    \t\t\t\tcase DATE_MODIFIED:\n\t    \t\t\t\t\tif(bmk.containsKey(b.key())) {\n\t    \t\t\t\t\t\tdata.put(b.key(), bmk.get(b.key()));\n\t    \t\t\t\t\t} else {\n\t    \t\t\t\t\t\tdata.put(b.key(), String.valueOf(System.currentTimeMillis()).getBytes());\n\t    \t\t\t\t\t}\n\t    \t\t\t\t\tbreak;\n\t    \t\t\t\tcase TAGS:\n\t    \t\t\t\t\tif(bmk.containsKey(b.key())) {\n\t    \t\t\t\t\t\tthis.tags.insertIndexEntry(bmk_user, bmk.get(b.key()), urlHash);\n\t    \t\t\t\t\t\tdata.put(b.key(), bmk.get(b.key()));\n\t    \t\t\t\t\t} else {\n\t    \t\t\t\t\t\tthis.tags.insertIndexEntry(bmk_user, b.deflt(), urlHash);\n\t    \t\t\t\t\t\tdata.put(b.key(), b.deflt());\t\n\t    \t\t\t\t\t}\n\t    \t\t\t\t\tbreak;\n\t    \t\t\t\tcase FOLDERS:\n\t    \t\t\t\t\tif(bmk.containsKey(b.key())) {\n\t    \t\t\t\t\t\tthis.folders.insertIndexEntry(bmk_user, bmk.get(b.key()), urlHash);\n\t    \t\t\t\t\t\tdata.put(b.key(), bmk.get(b.key()));\n\t    \t\t\t\t\t} else {\n\t    \t\t\t\t\t\tthis.folders.insertIndexEntry(bmk_user, b.deflt(), urlHash);\n\t    \t\t\t\t\t\tdata.put(b.key(), b.deflt());\t\n\t    \t\t\t\t\t}\n\t    \t\t\t\t\tbreak;\t\n\t    \t\t\t\tdefault:\n\t    \t\t\t\t\tif(bmk.containsKey(b.key())) {\n\t    \t\t\t\t\t\tdata.put(b.key(), bmk.get(b.key()));\n\t    \t\t\t\t\t}\n\t            \t }\n\t             }\n            \t this.worktables.insert(bmk_table, urlHash, data);\n\t        } else {\t\n            \t// modify and update existing entry\n                HashSet<String> oldSet;\n                HashSet<String> newSet;\n\t        \tfor (BOOKMARK b : BOOKMARK.values()) {\n\t            \tswitch(b) {\n\t    \t\t\t\tcase DATE_ADDED:\n\t    \t\t\t\t\tif(!bmk_row.containsKey(b.key))\n\t    \t\t\t\t\t\tbmk_row.put(b.key(), date); \n\t    \t\t\t\t\tbreak;\n\t    \t\t\t\tcase DATE_MODIFIED:\n\t    \t\t\t\t\tbmk_row.put(b.key(), date); \n\t    \t\t\t\t\tbreak;\n\t    \t\t\t\tcase TAGS:\n\t    \t            \toldSet = keysStringToSet(bmk_row.get(b.key(),b.deflt()));\n\t    \t            \tif(bmk.containsKey(b.key())) {\n\t    \t            \t\tnewSet = keysStringToSet(bmk.get(b.key()));\n\t    \t            \t\tif(importer) {\n\t\t    \t            \t\tnewSet.addAll(oldSet);\n\t\t    \t            \t\tbmk_row.put(b.key(), keySetToString(newSet));\n\t\t    \t            \t\toldSet.clear();\n\t    \t            \t\t} else {\n\t    \t            \t\t\tbmk_row.put(b.key, bmk.get(b.key()));\n\t    \t            \t\t}\n\t    \t            \t} else {\n\t    \t            \t\tnewSet = new HashSet<String>();\n\t    \t            \t\tbmk_row.put(b.key, bmk_row.get(b.key(), b.deflt()));\n\t    \t            \t}\n\t    \t            \tthis.tags.updateIndexEntry(bmk_user, urlHash, oldSet, newSet);\t    \t\t\t\t\t\n\t    \t            \tbreak;\n\t    \t\t\t\tcase FOLDERS:\n\t    \t\t\t\t\toldSet = keysStringToSet(bmk_row.get(b.key(),b.deflt()));\n\t    \t\t\t\t\tif(bmk.containsKey(b.key())) {\n\t    \t            \t\tnewSet = keysStringToSet(bmk.get(b.key()));\n\t    \t            \t\tif(importer) {\n\t\t    \t            \t\tnewSet.addAll(oldSet);\n\t\t    \t            \t\tbmk_row.put(b.key(), keySetToString(newSet));\n\t\t    \t            \t\toldSet.clear();\n\t    \t            \t\t} else {\n\t    \t            \t\t\tbmk_row.put(b.key, bmk.get(b.key()));\n\t    \t            \t\t}\n\t    \t            \t} else {\n\t    \t            \t\tnewSet = new HashSet<String>();\n\t    \t            \t\tbmk_row.put(b.key, bmk_row.get(b.key(), b.deflt()));\n\t    \t            \t}\n\t    \t            \tthis.folders.updateIndexEntry(bmk_user, urlHash, oldSet, newSet);\n\t    \t\t\t\t\tbreak;\t\n\t    \t\t\t\tdefault:\n\t    \t\t\t\t\tif(bmk.containsKey(b.key())) {\n\t    \t\t\t\t\t\tbmk_row.put(b.key, bmk.get(b.key()));\n\t    \t\t\t\t\t} else {\n\t    \t\t\t\t\t\tbmk_row.put(b.key, bmk_row.get(b.key(), b.deflt()));\n\t    \t\t\t\t\t}\n\t            \t }\n\t             }\n                // update bmk_table\n                this.worktables.update(bmk_table, bmk_row); \n            }\n\t\t}\n\t}","commit_id":"f5324b27f2826e3c3de9647f9c3c9f28e012ca8f","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public void handleText(char[] data, int pos) {\n    \tswitch (state) {\n    \t\tcase NOTHING:\n    \t\t\tbreak;\n    \t\tcase BOOKMARK:\n\t\t\t\tthis.bmk.put(YMarkTables.BOOKMARK.TITLE.key(), new String(data));\n\t\t\t\tthis.bmk.put(YMarkTables.BOOKMARK.FOLDERS.key(), this.folder);\n\t\t\t\tbreak;\n    \t\tcase FOLDER:\n    \t\t\tthis.folder = this.folder + YMarkTables.FOLDERS_SEPARATOR + new String(data);\n    \t\t\tbreak;\n    \t\tcase FOLDER_DESC:\n    \t\t\tLog.logInfo(YMarkTables.BOOKMARKS_LOG, \"YMarksHTMLImporter - folder: \"+this.folder+\" desc: \"+new String(data));\n    \t\t\tbreak;\n    \t\tcase BMK_DESC:\n    \t\t\tthis.bmk.put(YMarkTables.BOOKMARK.DESC.key(), new String(data));\n    \t\t\tbreak;    \t\t\t\n    \t\tdefault:\n    \t\t\tbreak;\n    \t}\n\t}","id":82942,"modified_method":"public void handleText(char[] data, int pos) {\n    \tswitch (state) {\n    \t\tcase NOTHING:\n    \t\t\tbreak;\n    \t\tcase BOOKMARK:\n\t\t\t\tthis.bmk.put(YMarkTables.BOOKMARK.TITLE.key(), new String(data));\n\t\t\t\tthis.bmk.put(YMarkTables.BOOKMARK.FOLDERS.key(), this.folder);\n\t\t\t\tthis.bmk.put(YMarkTables.BOOKMARK.PUBLIC.key(), YMarkTables.BOOKMARK.PUBLIC.deflt());\n\t\t\t\tthis.bmk.put(YMarkTables.BOOKMARK.VISITS.key(), YMarkTables.BOOKMARK.VISITS.deflt());\n\t\t\t\tbreak;\n    \t\tcase FOLDER:\n    \t\t\tthis.folder = this.folder + YMarkTables.FOLDERS_SEPARATOR + new String(data);\n    \t\t\tbreak;\n    \t\tcase FOLDER_DESC:\n    \t\t\tLog.logInfo(YMarkTables.BOOKMARKS_LOG, \"YMarksHTMLImporter - folder: \"+this.folder+\" desc: \"+new String(data));\n    \t\t\tbreak;\n    \t\tcase BMK_DESC:\n    \t\t\tthis.bmk.put(YMarkTables.BOOKMARK.DESC.key(), new String(data));\n    \t\t\tbreak;    \t\t\t\n    \t\tdefault:\n    \t\t\tbreak;\n    \t}\n\t}","commit_id":"f5324b27f2826e3c3de9647f9c3c9f28e012ca8f","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public void endElement(final String uri, final String name, String tag) {\n        if (tag == null) return;\n        tag = tag.toLowerCase();\n        if(XBEL.BOOKMARK.tag().equals(tag)) {\n\t\t\t// write bookmark\n        \tif (!this.bmk.isEmpty()) {\n\t\t\t\tthis.bmk.put(YMarkTables.BOOKMARK.FOLDERS.key(), this.folder);\n        \t\ttry {\n\t\t\t\t\tthis.bookmarks.put(this.bmk);\n\t\t\t\t\tbmk = new HashMap<String,String>();\n\t\t\t\t} catch (InterruptedException e) {\n\t\t\t\t\tLog.logException(e);\n\t\t\t\t}\n\t\t\t}\n        \tthis.state = STATE.FOLDER;\n        } else if (XBEL.FOLDER.tag().equals(tag)) {\n        \tthis.state = STATE.NOTHING;\n        \t// go up one folder\n        \tif(!folder.equals(YMarkTables.FOLDERS_IMPORTED)) {\n\t    \t\tfolder = folder.replaceAll(\"(/.[^/]*$)\", \"\");\n\t    \t\tthis.state = STATE.FOLDER;\n        \t}        \t\n        }\n    }","id":82943,"modified_method":"public void endElement(final String uri, final String name, String tag) {\n        if (tag == null) return;\n        tag = tag.toLowerCase();\n        if(XBEL.BOOKMARK.tag().equals(tag)) {\n\t\t\t// write bookmark\n        \tif (!this.bmk.isEmpty()) {\n\t\t\t\tthis.bmk.put(YMarkTables.BOOKMARK.FOLDERS.key(), this.folder);\n        \t\ttry {\n\t\t\t\t\tthis.bookmarks.put(this.bmk);\n\t\t\t\t\tbmk = new HashMap<String,String>();\n\t\t\t\t} catch (InterruptedException e) {\n\t\t\t\t\tLog.logException(e);\n\t\t\t\t}\n\t\t\t}\n        \tthis.state = STATE.FOLDER;\n        } else if (XBEL.FOLDER.tag().equals(tag)) {\n        \tthis.state = STATE.NOTHING;\n        \t// go up one folder\n        \tif(!folder.equals(YMarkTables.FOLDERS_IMPORTED)) {\n\t    \t\tfolder = folder.replaceAll(\"(/.[^/]*$)\", \"\");\n\t    \t\tthis.state = STATE.FOLDER;\n        \t}        \t\n        } else if (XBEL.INFO.tag().equals(tag)) {\n        \tthis.state = STATE.BOOKMARK;\n        }\n    }","commit_id":"f5324b27f2826e3c3de9647f9c3c9f28e012ca8f","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public void startElement(final String uri, final String name, String tag, final Attributes atts) throws SAXException {\n        if (tag == null) return;\n        tag = tag.toLowerCase();              \n        if (XBEL.BOOKMARK.tag().equals(tag)) {\n            this.bmk = new HashMap<String,String>();\n            this.bmk.put(YMarkTables.BOOKMARK.URL.key(), atts.getValue(uri, YMarkTables.BOOKMARK.URL.xbel_attrb()));\n            this.bmk.put(YMarkTables.BOOKMARK.DATE_ADDED.key(), atts.getValue(uri, YMarkTables.BOOKMARK.DATE_ADDED.xbel_attrb()));\n            this.bmk.put(YMarkTables.BOOKMARK.DATE_VISITED.key(), atts.getValue(uri, YMarkTables.BOOKMARK.DATE_VISITED.xbel_attrb()));\n            this.bmk.put(YMarkTables.BOOKMARK.DATE_MODIFIED.key(), atts.getValue(uri, YMarkTables.BOOKMARK.DATE_MODIFIED.xbel_attrb()));\n            state = STATE.BOOKMARK;\n            this.parsingValue = false;            \n        } else if(XBEL.FOLDER.tag().equals(tag)) {\n        \tthis.state = STATE.FOLDER;\n        } else if (XBEL.DESC.tag().equals(tag)) {\n            if(this.state == STATE.FOLDER) {\n            \tthis.keyname = null;\n            \tthis.state = STATE.FOLDER_DESC;            \t\n            } else if (this.state == STATE.BOOKMARK) {\n            \tthis.keyname = YMarkTables.BOOKMARK.DESC.key();\n            } else {\n            \tLog.logInfo(YMarkTables.BOOKMARKS_LOG, \"YMarksXBELImporter - state: \"+this.state+\" tag: \"+tag);\n            \tthis.parsingValue = false;\n            \treturn;\n            }\n        \tthis.parsingValue = true;\n        } else if (XBEL.TITLE.tag().equals(tag)) {\n            if(this.state == STATE.FOLDER) {\n            \tthis.keyname = null;\n            } else if (this.state == STATE.BOOKMARK) {\n            \tthis.keyname = YMarkTables.BOOKMARK.TITLE.key();\n            } else {\n            \tLog.logInfo(YMarkTables.BOOKMARKS_LOG, \"YMarksXBELImporter - state: \"+this.state+\" tag: \"+tag);\n            \tthis.parsingValue = false;\n            \treturn;\n            }\n        \tthis.parsingValue = true;\n        } else {\n        \tthis.parsingValue = false;\n        \tthis.state = STATE.NOTHING;\n        }\n        \n    }","id":82944,"modified_method":"public void startElement(final String uri, final String name, String tag, final Attributes atts) throws SAXException {\n        if (tag == null) return;\n        tag = tag.toLowerCase();              \n        if (XBEL.BOOKMARK.tag().equals(tag)) {\n            this.bmk = new HashMap<String,String>();\n            this.bmk.put(YMarkTables.BOOKMARK.URL.key(), atts.getValue(uri, YMarkTables.BOOKMARK.URL.xbel_attrb()));\n            this.bmk.put(YMarkTables.BOOKMARK.DATE_ADDED.key(), atts.getValue(uri, YMarkTables.BOOKMARK.DATE_ADDED.xbel_attrb()));\n            this.bmk.put(YMarkTables.BOOKMARK.DATE_VISITED.key(), atts.getValue(uri, YMarkTables.BOOKMARK.DATE_VISITED.xbel_attrb()));\n            this.bmk.put(YMarkTables.BOOKMARK.DATE_MODIFIED.key(), atts.getValue(uri, YMarkTables.BOOKMARK.DATE_MODIFIED.xbel_attrb()));\n            state = STATE.BOOKMARK;\n            this.parsingValue = false;            \n        } else if(XBEL.FOLDER.tag().equals(tag)) {\n        \tthis.state = STATE.FOLDER;\n        } else if (XBEL.DESC.tag().equals(tag)) {\n            if(this.state == STATE.FOLDER) {\n            \tthis.keyname = null;\n            \tthis.state = STATE.FOLDER_DESC;            \t\n            } else if (this.state == STATE.BOOKMARK) {\n            \tthis.keyname = YMarkTables.BOOKMARK.DESC.key();\n            } else {\n            \tLog.logInfo(YMarkTables.BOOKMARKS_LOG, \"YMarksXBELImporter - state: \"+this.state+\" tag: \"+tag);\n            \tthis.parsingValue = false;\n            \treturn;\n            }\n        \tthis.parsingValue = true;\n        } else if (XBEL.TITLE.tag().equals(tag)) {\n            if(this.state == STATE.FOLDER) {\n            \tthis.keyname = null;\n            } else if (this.state == STATE.BOOKMARK) {\n            \tthis.keyname = YMarkTables.BOOKMARK.TITLE.key();\n            } else {\n            \tLog.logInfo(YMarkTables.BOOKMARKS_LOG, \"YMarksXBELImporter - state: \"+this.state+\" tag: \"+tag);\n            \tthis.parsingValue = false;\n            \treturn;\n            }\n        \tthis.parsingValue = true;\n        } else if (XBEL.INFO.tag().equals(tag)) {\n        \tthis.parsingValue = false;\n        \tthis.state = STATE.INFO;\n        } else {\n        \tthis.parsingValue = false;\n        \tthis.state = STATE.NOTHING;\n        }\n        \n    }","commit_id":"f5324b27f2826e3c3de9647f9c3c9f28e012ca8f","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public static serverObjects respond(final RequestHeader header, final serverObjects post, final serverSwitch env) {\n        sb = (Switchboard) env;\n        final serverObjects prop = new serverObjects();\n        \n        final userDB.Entry user = sb.userDB.getUser(header); \n        final boolean isAdmin = (sb.verifyAuthentication(header, true));\n        final boolean isAuthUser = user!= null && user.hasRight(userDB.Entry.BOOKMARK_RIGHT);\n        \n        if(isAdmin || isAuthUser) {\n        \tfinal String bmk_table = (isAuthUser ? user.getUserName() : YMarkTables.USER_ADMIN)+YMarkTables.TABLES.BOOKMARKS.basename();\n        \tfinal String tag_table = (isAuthUser ? user.getUserName() : YMarkTables.USER_ADMIN)+YMarkTables.TABLES.TAGS.basename();\n        \tfinal String folder_table = (isAuthUser ? user.getUserName() : YMarkTables.USER_ADMIN)+YMarkTables.TABLES.FOLDERS.basename();\n        \t\n            byte[] urlHash = null;\n            String url =\"\";\n    \t\tif(post.containsKey(YMarkTables.BOOKMARK.URL.key())) {\n                try {\n                \turl = post.get(YMarkTables.BOOKMARK.URL.key(),YMarkTables.BOOKMARK.URL.deflt());\n                \tboolean hasProtocol = false;\n                \tfor (YMarkTables.PROTOCOLS p : YMarkTables.PROTOCOLS.values()) {\n                \t\thasProtocol = url.toLowerCase().startsWith(p.protocol());\n                \t}\n                \tif (!hasProtocol) {\n                        url=YMarkTables.PROTOCOLS.HTTP.protocol(url);\n                    }\n                \turlHash = YMarkTables.getBookmarkId(url);\n        \t\t} catch (MalformedURLException e) {\n        \t\t\tLog.logException(e);\n        \t\t}\n    \t\t} else if (post.containsKey(YMarkTables.BOOKMARKS_ID)) {\n    \t\t\turlHash = post.get(YMarkTables.BOOKMARKS_ID).getBytes();\n    \t\t}\n    \t\tif(urlHash == null) {\n    \t\t\tprop.put(\"result\", \"0\");\n    \t\t\treturn prop;\n    \t\t}\n\n            // read old entry from the bookmarks table (if exists)\n            Tables.Row bmk_row = null;\n            try {\n                bmk_row = sb.tables.select(bmk_table, urlHash);\n            } catch (IOException e) {\n                Log.logException(e);\n            } catch (RowSpaceExceededException e) {\n                Log.logException(e);\n            }\n            \n            // insert or update entry\n            final byte[] date = String.valueOf(System.currentTimeMillis()).getBytes();\n            try {\n                if (bmk_row == null) {\n                    // create and insert new entry\n                    Data data = new Data();          \n                    final String tagsString = YMarkTables.cleanTagsString(post.get(YMarkTables.BOOKMARK.TAGS.key(),YMarkTables.BOOKMARK.TAGS.deflt()));                \n                    final String foldersString = YMarkTables.cleanFoldersString(post.get(YMarkTables.BOOKMARK.FOLDERS.key(),YMarkTables.FOLDERS_UNSORTED));\n                    \n                    data.put(YMarkTables.BOOKMARK.URL.key(), url.getBytes());\n                    data.put(YMarkTables.BOOKMARK.TITLE.key(), post.get(YMarkTables.BOOKMARK.TITLE.key(),YMarkTables.BOOKMARK.TITLE.deflt()));\n                    data.put(YMarkTables.BOOKMARK.DESC.key(), post.get(YMarkTables.BOOKMARK.DESC.key(),YMarkTables.BOOKMARK.DESC.deflt()));\n                    data.put(YMarkTables.BOOKMARK.PUBLIC.key(), post.get(YMarkTables.BOOKMARK.PUBLIC.key(),YMarkTables.BOOKMARK.PUBLIC.deflt()));\n                    data.put(YMarkTables.BOOKMARK.TAGS.key(), tagsString.getBytes());\n                    data.put(YMarkTables.BOOKMARK.VISITS.key(), YMarkTables.BOOKMARK.VISITS.deflt().getBytes());\n                    data.put(YMarkTables.BOOKMARK.FOLDERS.key(), foldersString.getBytes());\n                    data.put(YMarkTables.BOOKMARK.DATE_ADDED.key(), date);\n                    data.put(YMarkTables.BOOKMARK.DATE_MODIFIED.key(), date);\n                    data.put(YMarkTables.BOOKMARK.DATE_VISITED.key(), date);\n                    sb.tables.insert(bmk_table, urlHash, data);                    \n\n                    final String[] folderArray = foldersString.split(YMarkTables.TAGS_SEPARATOR);                    \n                    for (final String folder : folderArray) {\n                    \tsb.tables.bookmarks.updateIndexTable(folder_table, folder, urlHash, YMarkTables.INDEX_ACTION.ADD);\n                    } \n                    \n                    final String[] tagArray = tagsString.split(YMarkTables.TAGS_SEPARATOR);                    \n                    for (final String tag : tagArray) {\n                    \tsb.tables.bookmarks.updateIndexTable(tag_table, tag, urlHash, YMarkTables.INDEX_ACTION.ADD);\n                    } \n\n                    \n                } else {\t\n                \t// modify and update existing entry\n                    bmk_row.put(YMarkTables.BOOKMARK.TITLE.key(), post.get(YMarkTables.BOOKMARK.TITLE.key(),bmk_row.get(YMarkTables.BOOKMARK.TITLE.key(),YMarkTables.BOOKMARK.TITLE.deflt())).getBytes());\n                    bmk_row.put(YMarkTables.BOOKMARK.DESC.key(), post.get(YMarkTables.BOOKMARK.DESC.key(),bmk_row.get(YMarkTables.BOOKMARK.DESC.key(),YMarkTables.BOOKMARK.DESC.deflt())).getBytes());\n                    bmk_row.put(YMarkTables.BOOKMARK.PUBLIC.key(), post.get(YMarkTables.BOOKMARK.PUBLIC.key(),bmk_row.get(YMarkTables.BOOKMARK.PUBLIC.key(),YMarkTables.BOOKMARK.PUBLIC.deflt())).getBytes());\n                   \n                    HashSet<String> oldSet;\n                    HashSet<String>newSet;\n                    \n                    final String foldersString = YMarkTables.cleanFoldersString(post.get(YMarkTables.BOOKMARK.FOLDERS.key(),YMarkTables.BOOKMARK.FOLDERS.deflt()));\n                \toldSet = YMarkTables.keysStringToSet(bmk_row.get(YMarkTables.BOOKMARK.FOLDERS.key(),YMarkTables.BOOKMARK.FOLDERS.deflt()));\n                \tnewSet = YMarkTables.keysStringToSet(foldersString);\n                    updateIndex(folder_table, urlHash, oldSet, newSet);\n                \tbmk_row.put(YMarkTables.BOOKMARK.FOLDERS.key(), foldersString.getBytes());\n                    \n                    final String tagsString = YMarkTables.cleanTagsString(post.get(YMarkTables.BOOKMARK.TAGS.key(),YMarkTables.BOOKMARK.TAGS.deflt()));\n                \toldSet = YMarkTables.keysStringToSet(bmk_row.get(YMarkTables.BOOKMARK.TAGS.key(),YMarkTables.BOOKMARK.TAGS.deflt()));\n                \tnewSet = YMarkTables.keysStringToSet(tagsString);\n                \tupdateIndex(tag_table, urlHash, oldSet, newSet);\n                \tbmk_row.put(YMarkTables.BOOKMARK.TAGS.key(), tagsString.getBytes());\n                \t            \t\n                    // modify date attribute\n                    bmk_row.put(YMarkTables.BOOKMARK.DATE_MODIFIED.key(), date);                \n                    \n                    // update bmk_table\n                    sb.tables.update(bmk_table, bmk_row);                 \n                }\n            } catch (IOException e) {\n                Log.logException(e);\n            }\n            prop.put(\"result\", \"1\");\n        } else {\n        \tprop.put(YMarkTables.USER_AUTHENTICATE,YMarkTables.USER_AUTHENTICATE_MSG);\n        }\n        // return rewrite properties\n        return prop;\n    }","id":82945,"modified_method":"public static serverObjects respond(final RequestHeader header, final serverObjects post, final serverSwitch env) {\n\t\tfinal Switchboard sb = (Switchboard) env;\n        final serverObjects prop = new serverObjects();\n        \n        final userDB.Entry user = sb.userDB.getUser(header); \n        final boolean isAdmin = (sb.verifyAuthentication(header, true));\n        final boolean isAuthUser = user!= null && user.hasRight(userDB.Entry.BOOKMARK_RIGHT);\n        \n        if(isAdmin || isAuthUser) {\n        \tfinal String bmk_user = (isAuthUser ? user.getUserName() : YMarkTables.USER_ADMIN);\n\n            String url = post.get(YMarkTables.BOOKMARK.URL.key(),YMarkTables.BOOKMARK.URL.deflt());\n\t\t\tboolean hasProtocol = false;\n\t\t\tfor (YMarkTables.PROTOCOLS p : YMarkTables.PROTOCOLS.values()) {\n\t\t\t\thasProtocol = url.toLowerCase().startsWith(p.protocol());\n\t\t\t}\n\t\t\tif (!hasProtocol) {\n\t\t\t    url=YMarkTables.PROTOCOLS.HTTP.protocol(url);\n\t\t\t}\n    \t\t\n        \tfinal HashMap<String,String> data = new HashMap<String,String>();        \n            \n            data.put(YMarkTables.BOOKMARK.URL.key(), url);\n            data.put(YMarkTables.BOOKMARK.TITLE.key(), post.get(YMarkTables.BOOKMARK.TITLE.key(),YMarkTables.BOOKMARK.TITLE.deflt()));\n            data.put(YMarkTables.BOOKMARK.DESC.key(), post.get(YMarkTables.BOOKMARK.DESC.key(),YMarkTables.BOOKMARK.DESC.deflt()));\n            data.put(YMarkTables.BOOKMARK.PUBLIC.key(), post.get(YMarkTables.BOOKMARK.PUBLIC.key(),YMarkTables.BOOKMARK.PUBLIC.deflt()));\n            data.put(YMarkTables.BOOKMARK.TAGS.key(), YMarkTables.cleanTagsString(post.get(YMarkTables.BOOKMARK.TAGS.key(),YMarkTables.BOOKMARK.TAGS.deflt())));\n            data.put(YMarkTables.BOOKMARK.FOLDERS.key(), YMarkTables.cleanFoldersString(post.get(YMarkTables.BOOKMARK.FOLDERS.key(),YMarkTables.FOLDERS_UNSORTED)));\n            \n            try {\n\t\t\t\tsb.tables.bookmarks.addBookmark(bmk_user, data, false);\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t    Log.logException(e);\n\t\t\t\t} catch (RowSpaceExceededException e) {\n\t\t\t}\n            prop.put(\"result\", \"1\");\n        } else {\n        \tprop.put(YMarkTables.USER_AUTHENTICATE,YMarkTables.USER_AUTHENTICATE_MSG);\n        }\n        // return rewrite properties\n        return prop;\n    }","commit_id":"f5324b27f2826e3c3de9647f9c3c9f28e012ca8f","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public static serverObjects respond(final RequestHeader header, final serverObjects post, final serverSwitch env) {\n        sb = (Switchboard) env;\n        final serverObjects prop = new serverObjects();\n        \n        final userDB.Entry user = sb.userDB.getUser(header); \n        final boolean isAdmin = (sb.verifyAuthentication(header, true));\n        final boolean isAuthUser = user!= null && user.hasRight(userDB.Entry.BOOKMARK_RIGHT);\n        \n        if(isAdmin || isAuthUser) {     \t\n        \tfinal String bmk_table = (isAuthUser ? user.getUserName() : YMarkTables.USER_ADMIN)+YMarkTables.TABLES.BOOKMARKS.basename();\n        \tfinal String tag_table = (isAuthUser ? user.getUserName() : YMarkTables.USER_ADMIN)+YMarkTables.TABLES.TAGS.basename();\n        \tfinal String folder_table = (isAuthUser ? user.getUserName() : YMarkTables.USER_ADMIN)+YMarkTables.TABLES.FOLDERS.basename();\n        \t\n            byte[] urlHash = null;\n            \n            try {\n\t        \tif(post.containsKey(YMarkTables.BOOKMARKS_ID)) {\n\t        \t\turlHash = post.get(YMarkTables.BOOKMARKS_ID).getBytes();\n\t        \t} else if(post.containsKey(YMarkTables.BOOKMARK.URL.key())) {\n\t\t\t\t\turlHash = YMarkTables.getBookmarkId(post.get(YMarkTables.BOOKMARK.URL.key()));\n\t        \t} else {\n\t        \t\tprop.put(\"result\", \"0\");\n\t        \t\treturn prop;\n\t        \t}\n\t            Tables.Row bmk_row = null;\n\t            bmk_row = sb.tables.select(bmk_table, urlHash);\n\t            if(bmk_row != null) {\n\t\t            final String tagsString = bmk_row.get(YMarkTables.BOOKMARK.TAGS.key(),YMarkTables.BOOKMARK.TAGS.deflt());\n\t\t            removeIndexEntry(tag_table, tagsString, urlHash);\n\t\t            final String foldersString = bmk_row.get(YMarkTables.BOOKMARK.FOLDERS.key(),YMarkTables.FOLDERS_ROOT);\n\t\t            removeIndexEntry(folder_table, foldersString, urlHash);\n\t            }\n\t\t\t\tsb.tables.delete(bmk_table,urlHash);\n\t        \tprop.put(\"result\", \"1\");\n\t\t\t} catch (IOException e) {\n\t\t\t\tLog.logException(e);\n\t\t\t} catch (RowSpaceExceededException e) {\n\t\t\t\tLog.logException(e);\n\t\t\t}\n        } else {\n        \tprop.put(YMarkTables.USER_AUTHENTICATE,YMarkTables.USER_AUTHENTICATE_MSG);\n        }       \n        // return rewrite properties\n        return prop;\n\t}","id":82946,"modified_method":"public static serverObjects respond(final RequestHeader header, final serverObjects post, final serverSwitch env) {\n        sb = (Switchboard) env;\n        final serverObjects prop = new serverObjects();\n        \n        final userDB.Entry user = sb.userDB.getUser(header); \n        final boolean isAdmin = (sb.verifyAuthentication(header, true));\n        final boolean isAuthUser = user!= null && user.hasRight(userDB.Entry.BOOKMARK_RIGHT);\n        \n        if(isAdmin || isAuthUser) {     \t\n        \tfinal String bmk_user = (isAuthUser ? user.getUserName() : YMarkTables.USER_ADMIN);\n            byte[] urlHash = null;\n            try {\n\t        \tif(post.containsKey(YMarkTables.BOOKMARKS_ID)) {\n\t        \t\turlHash = post.get(YMarkTables.BOOKMARKS_ID).getBytes();\n\t        \t} else if(post.containsKey(YMarkTables.BOOKMARK.URL.key())) {\n\t\t\t\t\turlHash = YMarkTables.getBookmarkId(post.get(YMarkTables.BOOKMARK.URL.key()));\n\t        \t} else {\n\t        \t\tprop.put(\"result\", \"0\");\n\t        \t\treturn prop;\n\t        \t}\n\t        \tsb.tables.bookmarks.deleteBookmark(bmk_user, urlHash);\n\t        \tprop.put(\"result\", \"1\");\n\t\t\t} catch (IOException e) {\n\t\t\t\tLog.logException(e);\n\t\t\t} catch (RowSpaceExceededException e) {\n\t\t\t\tLog.logException(e);\n\t\t\t}\n        } else {\n        \tprop.put(YMarkTables.USER_AUTHENTICATE,YMarkTables.USER_AUTHENTICATE_MSG);\n        }       \n        // return rewrite properties\n        return prop;\n\t}","commit_id":"f5324b27f2826e3c3de9647f9c3c9f28e012ca8f","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public static serverObjects respond(final RequestHeader header, final serverObjects post, final serverSwitch env) {\n        sb = (Switchboard) env;\n        prop = new serverObjects();\n        \n        boolean tags = false;\n        \n        final userDB.Entry user = sb.userDB.getUser(header); \n        final boolean isAdmin = (sb.verifyAuthentication(header, true));\n        final boolean isAuthUser = user!= null && user.hasRight(userDB.Entry.BOOKMARK_RIGHT);\n    \tfinal TreeSet<String> bookmarks = new TreeSet<String>();\n        \n        if(isAdmin || isAuthUser) {\n        \tfinal String bmk_table = (isAuthUser ? user.getUserName() : YMarkTables.USER_ADMIN)+YMarkTables.TABLES.BOOKMARKS.basename();\n        \tfinal String tag_table = (isAuthUser ? user.getUserName() : YMarkTables.USER_ADMIN)+YMarkTables.TABLES.TAGS.basename();\n        \tfinal String folder_table = (isAuthUser ? user.getUserName() : YMarkTables.USER_ADMIN)+YMarkTables.TABLES.FOLDERS.basename();\n        \t\n\t    \tif(post.containsKey(YMarkTables.BOOKMARK.TAGS.key())) {\n\t    \t\ttags = true;\n\t    \t\tfinal String[] tagArray = YMarkTables.cleanTagsString(post.get(YMarkTables.BOOKMARK.TAGS.key())).split(YMarkTables.TAGS_SEPARATOR);\n\t    \t\ttry {\n\t\t\t\t\tbookmarks.addAll(sb.tables.bookmarks.getBookmarks(tag_table, tagArray));\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tLog.logException(e);\n\t\t\t\t} catch (RowSpaceExceededException e) {\n\t\t\t\t\tLog.logException(e);\n\t\t\t\t}\n\t    \t} else if(post.containsKey(YMarkTables.BOOKMARK.FOLDERS.key())) {\n\t    \t\tfinal String[] folderArray = YMarkTables.cleanFoldersString(post.get(YMarkTables.BOOKMARK.FOLDERS.key())).split(YMarkTables.TAGS_SEPARATOR);\n                try {                \t\n\t\t\t\t\tif(tags)\n\t\t\t\t\t\tbookmarks.retainAll(sb.tables.bookmarks.getBookmarks(folder_table, folderArray));\n\t\t\t\t\telse\n\t\t\t\t\t\tbookmarks.addAll(sb.tables.bookmarks.getBookmarks(folder_table, folderArray));\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tLog.logException(e);\n\t\t\t\t} catch (RowSpaceExceededException e) {\n\t\t\t\t\tLog.logException(e);\n\t\t\t\t}\n\t    \t}\n\t    \t\n\t    \tputBookmarks(bookmarks, bmk_table);\n\t    \t\n        } else {\n        \tprop.put(YMarkTables.USER_AUTHENTICATE,YMarkTables.USER_AUTHENTICATE_MSG);\n        }\n        // return rewrite properties\n        return prop;\n\t}","id":82947,"modified_method":"public static serverObjects respond(final RequestHeader header, final serverObjects post, final serverSwitch env) {\n        sb = (Switchboard) env;\n        prop = new serverObjects();\n        \n        boolean tags = false;\n        \n        final userDB.Entry user = sb.userDB.getUser(header); \n        final boolean isAdmin = (sb.verifyAuthentication(header, true));\n        final boolean isAuthUser = user!= null && user.hasRight(userDB.Entry.BOOKMARK_RIGHT);\n    \tfinal TreeSet<String> bookmarks = new TreeSet<String>();\n        \n        if(isAdmin || isAuthUser) {\n        \tfinal String bmk_user = (isAuthUser ? user.getUserName() : YMarkTables.USER_ADMIN);\n        \t\n\t    \tif(post.containsKey(YMarkTables.BOOKMARK.TAGS.key())) {\n\t    \t\ttags = true;\n\t    \t\tfinal String[] tagArray = YMarkTables.cleanTagsString(post.get(YMarkTables.BOOKMARK.TAGS.key())).split(YMarkTables.TAGS_SEPARATOR);\n\t    \t\ttry {\n\t\t\t\t\tbookmarks.addAll(sb.tables.bookmarks.tags.getBookmarks(bmk_user, tagArray));\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tLog.logException(e);\n\t\t\t\t} catch (RowSpaceExceededException e) {\n\t\t\t\t\tLog.logException(e);\n\t\t\t\t}\n\t    \t}\n\t    \tif(post.containsKey(YMarkTables.BOOKMARK.FOLDERS.key())) {\n\t    \t\tfinal String[] folderArray = YMarkTables.cleanFoldersString(post.get(YMarkTables.BOOKMARK.FOLDERS.key())).split(YMarkTables.TAGS_SEPARATOR);\n                try {                \t\n\t\t\t\t\tif(tags)\n\t\t\t\t\t\tbookmarks.retainAll(sb.tables.bookmarks.folders.getBookmarks(bmk_user, folderArray));\n\t\t\t\t\telse\n\t\t\t\t\t\tbookmarks.addAll(sb.tables.bookmarks.folders.getBookmarks(bmk_user, folderArray));\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tLog.logException(e);\n\t\t\t\t} catch (RowSpaceExceededException e) {\n\t\t\t\t\tLog.logException(e);\n\t\t\t\t}\n\t    \t}\n\t    \tputBookmarks(bookmarks, YMarkTables.TABLES.BOOKMARKS.tablename(bmk_user));\n\t    \t\n        } else {\n        \tprop.put(YMarkTables.USER_AUTHENTICATE,YMarkTables.USER_AUTHENTICATE_MSG);\n        }\n        // return rewrite properties\n        return prop;\n\t}","commit_id":"f5324b27f2826e3c3de9647f9c3c9f28e012ca8f","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public static serverObjects respond(final RequestHeader header, final serverObjects post, final serverSwitch env) {\n        sb = (Switchboard) env;\n        final serverObjects prop = new serverObjects();\n        final userDB.Entry user = sb.userDB.getUser(header); \n        final boolean isAdmin = (sb.verifyAuthentication(header, true));\n        final boolean isAuthUser = user!= null && user.hasRight(userDB.Entry.BOOKMARK_RIGHT);\n                \n        if(isAdmin || isAuthUser) {\n        \tfinal String bmk_user = (isAuthUser ? user.getUserName() : YMarkTables.USER_ADMIN);        \t\n        \tif(post.containsKey(\"htmlfile\")){\n\t\t\t\ttry {\n\t\t\t\t\tfinal ByteArrayInputStream byteIn = new ByteArrayInputStream(post.get(\"htmlfile$file\").getBytes(\"UTF-8\"));\n\t\t\t\t\tif(byteIn !=null) {\n\t\t\t\t\t\tfinal YMarksHTMLImporter htmlImporter = new YMarksHTMLImporter(byteIn, 100);\n\t\t\t            Thread t = new Thread(htmlImporter, \"YMarks - HTML Importer\");\n\t\t\t            t.start();\n\t\t\t            HashMap<String,String> bmk;\n\t\t\t            while ((bmk = htmlImporter.take()) != YMarkTables.POISON) {\n\t\t\t            \tsb.tables.bookmarks.addBookmark(bmk, bmk_user);\n\t\t\t            }\n\t\t\t\t\t}\n\t\t\t\t} catch (UnsupportedEncodingException e) {\n\t\t\t\t\tLog.logException(e);\n\t\t\t\t//} catch (IOException e) {\n\t\t\t\t//\tLog.logException(e);\n\t\t\t\t}\n\t\t\t\tprop.put(\"result\", \"1\");\n        \t}\n        \tif(post.containsKey(\"xbelfile\")){\n\t\t\t\ttry {\n\t\t\t\t\tfinal ByteArrayInputStream byteIn = new ByteArrayInputStream(post.get(\"xbelfile$file\").getBytes(\"UTF-8\"));\n\t\t\t\t\tif(byteIn != null) {\n\t\t\t\t\t\tfinal YMarksXBELImporter xbelImporter = new YMarksXBELImporter(byteIn, 100);\n\t\t\t            Thread t = new Thread(xbelImporter, \"YMarks - HTML Importer\");\n\t\t\t            t.start();\n\t\t\t            HashMap<String,String> bmk;\n\t\t\t            while ((bmk = xbelImporter.take()) != YMarkTables.POISON) {\n\t\t\t            \tsb.tables.bookmarks.addBookmark(bmk, bmk_user);\n\t\t\t            }\n\t\t\t\t\t}\n\t\t\t\t} catch (UnsupportedEncodingException e) {\n\t\t\t\t\tLog.logException(e);\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tLog.logException(e);\n\t\t\t\t}\n\t\t\t\tprop.put(\"result\", \"1\");\n        \t}\n        }\n        // return rewrite properties\n        return prop;\n\t}","id":82948,"modified_method":"public static serverObjects respond(final RequestHeader header, final serverObjects post, final serverSwitch env) {\n        final Switchboard sb = (Switchboard) env;\n        final serverObjects prop = new serverObjects();\n        final userDB.Entry user = sb.userDB.getUser(header); \n        final boolean isAdmin = (sb.verifyAuthentication(header, true));\n        final boolean isAuthUser = user!= null && user.hasRight(userDB.Entry.BOOKMARK_RIGHT);\n                \n        if(isAdmin || isAuthUser) {\n        \tfinal String bmk_user = (isAuthUser ? user.getUserName() : YMarkTables.USER_ADMIN);        \t\n        \tif(post.containsKey(\"htmlfile\")){\n        \t\tByteArrayInputStream byteIn = null;\n\t\t\t\ttry {\n\t\t\t\t\tbyteIn = new ByteArrayInputStream(post.get(\"htmlfile$file\").getBytes(\"UTF-8\"));\n\t\t\t\t} catch (UnsupportedEncodingException e) {\n\t\t\t\t\tLog.logException(e);\n\t\t\t\t}\n        \t\tif(byteIn !=null) {\n\t\t\t\t\tfinal YMarksHTMLImporter htmlImporter = new YMarksHTMLImporter(byteIn, 100);\n\t\t            Thread t = new Thread(htmlImporter, \"YMarks - HTML Importer\");\n\t\t            t.start();\n\t\t            HashMap<String,String> bmk;\n\t\t            while ((bmk = htmlImporter.take()) != YMarkTables.POISON) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tsb.tables.bookmarks.addBookmark(bmk_user, bmk, true);\n\t\t\t\t\t\t} catch (IOException e) {\n\t\t\t\t\t\t\tLog.logWarning(YMarkTables.BOOKMARKS_LOG.toString(), \"IOException for URL: \"+bmk.get(YMarkTables.BOOKMARK.URL.key()));\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t} catch (RowSpaceExceededException e) {\n\t\t\t\t\t\t\tLog.logException(e);\n\t\t\t\t\t\t}\n\t\t            }\n\t\t\t\t}\n        \t}\n        \tif(post.containsKey(\"xbelfile\")){\n\t\t\t\ttry {\n\t\t\t\t\tfinal ByteArrayInputStream byteIn = new ByteArrayInputStream(post.get(\"xbelfile$file\").getBytes(\"UTF-8\"));\n\t\t\t\t\tif(byteIn != null) {\n\t\t\t\t\t\tfinal YMarksXBELImporter xbelImporter = new YMarksXBELImporter(byteIn, 100);\n\t\t\t            Thread t = new Thread(xbelImporter, \"YMarks - HTML Importer\");\n\t\t\t            t.start();\n\t\t\t            HashMap<String,String> bmk;\n\t\t\t            while ((bmk = xbelImporter.take()) != YMarkTables.POISON) {\n\t\t\t            \ttry {\n\t\t\t\t\t\t\t\tsb.tables.bookmarks.addBookmark(bmk_user, bmk, true);\n\t\t\t\t\t\t\t} catch (RowSpaceExceededException e) {\n\t\t\t\t\t\t\t    Log.logException(e);\n\t\t\t\t\t\t\t}\n\t\t\t            }\n\t\t\t\t\t}\n\t\t\t\t} catch (UnsupportedEncodingException e) {\n\t\t\t\t\tLog.logException(e);\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tLog.logException(e);\n\t\t\t\t}\n\t\t\t\tprop.put(\"result\", \"1\");\n        \t}\n        }\n        // return rewrite properties\n        return prop;\n\t}","commit_id":"f5324b27f2826e3c3de9647f9c3c9f28e012ca8f","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public void f(@Nullable String s4) {\n    @NotNull String s = nulFunc();\n    String s3 = \"\";\n    if (s != null) {\n      String s2 = s;\n      s2.charAt(2);\n      s3 = null;\n    }\n    s.charAt(2);\n    s3.charAt(2);\n    s4.charAt(3);\n  }","id":82949,"modified_method":"public void f(@Nullable String s4) {\n    String s = nulFunc();\n    s.charAt(2);\n    String s3 = \"\";\n    if (null == s) {\n      String s2 = s;\n      s2.charAt(2);\n      s3 = null;\n    }\n    nulFunc().charAt(2);\n    s.charAt(2);\n    s3.charAt(2);\n  }","commit_id":"cb3c3bea7adafadf213861c5de7049377a4e9ed6","url":"https://github.com/JetBrains/MPS"},{"original_method":"public Map<SNode, NullableState> fun(Map<SNode, NullableState> input, ProgramState state) {\n      Map<SNode, NullableState> result = new HashMap<SNode, NullableState>();\n      Instruction instruction = state.getInstruction();\n      result.putAll(input);\n      NullableState nullableState = NullableState.UNKNOWN;\n      SNode node = (SNode) instruction.getUserObject(\"expression\");\n      if (instruction instanceof notNullInstruction) {\n        nullableState = NullableState.NOTNULL;\n      }\n      if (instruction instanceof nullableInstruction) {\n        nullableState = NullableState.NULLABLE;\n      }\n      if (SNodeOperations.isInstanceOf(node, \"jetbrains.mps.baseLanguage.structure.VariableReference\")) {\n        node = SLinkOperations.getTarget(SNodeOperations.cast(node, \"jetbrains.mps.baseLanguage.structure.VariableReference\"), \"variableDeclaration\", false);\n      }\n      if (node != null) {\n        result.put((SNode) node, nullableState);\n      }\n      if (instruction instanceof WriteInstruction) {\n        WriteInstruction write = (WriteInstruction) instruction;\n        SNode value = (SNode) write.getValue();\n        if (SNodeOperations.isInstanceOf(value, \"jetbrains.mps.baseLanguage.structure.VariableReference\")) {\n          value = SLinkOperations.getTarget(SNodeOperations.cast(value, \"jetbrains.mps.baseLanguage.structure.VariableReference\"), \"variableDeclaration\", false);\n        }\n        NullableState valueState = result.get(value);\n        if (valueState == null) {\n          valueState = NullableState.NOT_INIT;\n        }\n        result.put((SNode) write.getVariable(), valueState);\n      }\n      return result;\n    }","id":82950,"modified_method":"public Map<SNode, NullableState> fun(Map<SNode, NullableState> input, ProgramState state) {\n      Map<SNode, NullableState> result = new HashMap<SNode, NullableState>();\n      Instruction instruction = state.getInstruction();\n      result.putAll(input);\n      NullableState nullableState = NullableState.UNKNOWN;\n      SNode node = (SNode) instruction.getUserObject(\"expression\");\n      if (instruction instanceof notNullInstruction) {\n        nullableState = NullableState.NOTNULL;\n      }\n      if (instruction instanceof nullableInstruction) {\n        nullableState = NullableState.NULLABLE;\n      }\n      if (instruction instanceof nullInstruction) {\n        nullableState = NullableState.NULL;\n      }\n      if (SNodeOperations.isInstanceOf(node, \"jetbrains.mps.baseLanguage.structure.VariableReference\")) {\n        node = SLinkOperations.getTarget(SNodeOperations.cast(node, \"jetbrains.mps.baseLanguage.structure.VariableReference\"), \"variableDeclaration\", false);\n      }\n      if (node != null) {\n        result.put((SNode) node, nullableState);\n      }\n      if (instruction instanceof WriteInstruction) {\n        WriteInstruction write = (WriteInstruction) instruction;\n        SNode value = (SNode) write.getValue();\n        if (SNodeOperations.isInstanceOf(value, \"jetbrains.mps.baseLanguage.structure.VariableReference\")) {\n          value = SLinkOperations.getTarget(SNodeOperations.cast(value, \"jetbrains.mps.baseLanguage.structure.VariableReference\"), \"variableDeclaration\", false);\n        }\n        NullableState valueState = result.get(value);\n        if (valueState == null) {\n          valueState = NullableState.NOT_INIT;\n        }\n        result.put((SNode) write.getVariable(), valueState);\n      }\n      return result;\n    }","commit_id":"cb3c3bea7adafadf213861c5de7049377a4e9ed6","url":"https://github.com/JetBrains/MPS"},{"original_method":"public NullableAnalyzerRunner(SNode node) {\n    super(null, null);\n    myNode = node;\n    {\n      DataFlowConstructor rule = new RuleNotEqualsNull();\n      String conceptName = \"jetbrains.mps.baseLanguage.structure.IfStatement\";\n      if (!(myApplicableMap.containsKey(conceptName))) {\n        myApplicableMap.put(conceptName, new LinkedList<DataFlowConstructor>());\n      }\n      myApplicableMap.get(conceptName).add(rule);\n    }\n    {\n      DataFlowConstructor rule = new RuleNullNotEquals();\n      String conceptName = \"jetbrains.mps.baseLanguage.structure.IfStatement\";\n      if (!(myApplicableMap.containsKey(conceptName))) {\n        myApplicableMap.put(conceptName, new LinkedList<DataFlowConstructor>());\n      }\n      myApplicableMap.get(conceptName).add(rule);\n    }\n    {\n      DataFlowConstructor rule = new RuleNotEqualsNullAnd();\n      String conceptName = \"jetbrains.mps.baseLanguage.structure.IfStatement\";\n      if (!(myApplicableMap.containsKey(conceptName))) {\n        myApplicableMap.put(conceptName, new LinkedList<DataFlowConstructor>());\n      }\n      myApplicableMap.get(conceptName).add(rule);\n    }\n    {\n      DataFlowConstructor rule = new RuleIfNullReturn();\n      String conceptName = \"jetbrains.mps.baseLanguage.structure.IfStatement\";\n      if (!(myApplicableMap.containsKey(conceptName))) {\n        myApplicableMap.put(conceptName, new LinkedList<DataFlowConstructor>());\n      }\n      myApplicableMap.get(conceptName).add(rule);\n    }\n    {\n      DataFlowConstructor rule = new RuleIfNullEqualsReturn();\n      String conceptName = \"jetbrains.mps.baseLanguage.structure.IfStatement\";\n      if (!(myApplicableMap.containsKey(conceptName))) {\n        myApplicableMap.put(conceptName, new LinkedList<DataFlowConstructor>());\n      }\n      myApplicableMap.get(conceptName).add(rule);\n    }\n    myConceptRules.add(new RuleMethodCall());\n    myConceptRules.add(new RuleNullLiteral());\n    myConceptRules.add(new RuleFieldReference());\n    myConceptRules.add(new RuleAfterDotExpression());\n    myConceptRules.add(new RuleVariableDeclaration());\n    myProgram = new MPSProgramBuilder(DataFlowManager.getInstance()).buildProgram(myNode);\n    prepareProgram();\n    myAnalyzer = new NullableAnalyzerRunner.NullableAnalyzer();\n  }","id":82951,"modified_method":"public NullableAnalyzerRunner(SNode node) {\n    super(null, null);\n    myNode = node;\n    {\n      DataFlowConstructor rule = new RuleNotEqualsNull();\n      String conceptName = \"jetbrains.mps.baseLanguage.structure.IfStatement\";\n      if (!(myApplicableMap.containsKey(conceptName))) {\n        myApplicableMap.put(conceptName, new LinkedList<DataFlowConstructor>());\n      }\n      myApplicableMap.get(conceptName).add(rule);\n    }\n    {\n      DataFlowConstructor rule = new RuleNullNotEquals();\n      String conceptName = \"jetbrains.mps.baseLanguage.structure.IfStatement\";\n      if (!(myApplicableMap.containsKey(conceptName))) {\n        myApplicableMap.put(conceptName, new LinkedList<DataFlowConstructor>());\n      }\n      myApplicableMap.get(conceptName).add(rule);\n    }\n    {\n      DataFlowConstructor rule = new RuleNotEqualsNullAnd();\n      String conceptName = \"jetbrains.mps.baseLanguage.structure.IfStatement\";\n      if (!(myApplicableMap.containsKey(conceptName))) {\n        myApplicableMap.put(conceptName, new LinkedList<DataFlowConstructor>());\n      }\n      myApplicableMap.get(conceptName).add(rule);\n    }\n    {\n      DataFlowConstructor rule = new RuleIfNullReturn();\n      String conceptName = \"jetbrains.mps.baseLanguage.structure.IfStatement\";\n      if (!(myApplicableMap.containsKey(conceptName))) {\n        myApplicableMap.put(conceptName, new LinkedList<DataFlowConstructor>());\n      }\n      myApplicableMap.get(conceptName).add(rule);\n    }\n    {\n      DataFlowConstructor rule = new RuleIfNullEqualsReturn();\n      String conceptName = \"jetbrains.mps.baseLanguage.structure.IfStatement\";\n      if (!(myApplicableMap.containsKey(conceptName))) {\n        myApplicableMap.put(conceptName, new LinkedList<DataFlowConstructor>());\n      }\n      myApplicableMap.get(conceptName).add(rule);\n    }\n    {\n      DataFlowConstructor rule = new WhileNotNull();\n      String conceptName = \"jetbrains.mps.baseLanguage.structure.WhileStatement\";\n      if (!(myApplicableMap.containsKey(conceptName))) {\n        myApplicableMap.put(conceptName, new LinkedList<DataFlowConstructor>());\n      }\n      myApplicableMap.get(conceptName).add(rule);\n    }\n    myConceptRules.add(new RuleMethodCall());\n    myConceptRules.add(new RuleNullLiteral());\n    myConceptRules.add(new RuleFieldReference());\n    myConceptRules.add(new RuleAfterDotExpression());\n    myConceptRules.add(new RuleVariableDeclaration());\n    myProgram = new MPSProgramBuilder(DataFlowManager.getInstance()).buildProgram(myNode);\n    prepareProgram();\n    myAnalyzer = new NullableAnalyzerRunner.NullableAnalyzer();\n  }","commit_id":"cb3c3bea7adafadf213861c5de7049377a4e9ed6","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void performActions(Program o, SNode node) {\n    if (!(IOperation_Behavior.call_operandCanBeNull_323410281720656291(SLinkOperations.getTarget(node, \"operation\", true)))) {\n      {\n        int position = 0;\n        position = ((Program) (o)).getEnd(SLinkOperations.getTarget(node, \"operand\", true));\n        ((Program) (o)).insert(new notNullInstruction(SLinkOperations.getTarget(node, \"operand\", true)), position, true);\n      }\n    }\n  }","id":82952,"modified_method":"public void performActions(Program o, SNode node) {\n    if (!(IOperation_Behavior.call_operandCanBeNull_323410281720656291(SLinkOperations.getTarget(node, \"operation\", true)))) {\n      {\n        int position = ((Program) (o)).getEnd(SLinkOperations.getTarget(node, \"operand\", true));\n        Instruction instruction = new notNullInstruction(SLinkOperations.getTarget(node, \"operand\", true));\n        instruction.setSource(node);\n        ((Program) (o)).insert(instruction, position, true);\n      }\n    }\n  }","commit_id":"cb3c3bea7adafadf213861c5de7049377a4e9ed6","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void performActions(Program o, SNode node) {\n    if (SLinkOperations.getTargets(SLinkOperations.getTarget(node, \"variableDeclaration\", false), \"annotation\", true) != null) {\n      for (SNode annotation : SLinkOperations.getTargets(SLinkOperations.getTarget(node, \"variableDeclaration\", false), \"annotation\", true)) {\n        String name = SPropertyOperations.getString(SLinkOperations.getTarget(annotation, \"annotation\", false), \"name\");\n        if (SLinkOperations.getTarget(annotation, \"annotation\", false) == SNodeOperations.getNode(\"f:java_stub#org.jetbrains.annotations(org.jetbrains.annotations@java_stub)\", \"~Nullable\")) {\n          {\n            int position = 0;\n            position = ((Program) (o)).getEnd(node);\n            ((Program) (o)).insert(new nullableInstruction(SLinkOperations.getTarget(node, \"variableDeclaration\", false)), position, true);\n          }\n        }\n        if (SLinkOperations.getTarget(annotation, \"annotation\", false) == SNodeOperations.getNode(\"f:java_stub#org.jetbrains.annotations(org.jetbrains.annotations@java_stub)\", \"~NotNull\")) {\n          {\n            int position = 0;\n            position = ((Program) (o)).getEnd(node);\n            ((Program) (o)).insert(new notNullInstruction(SLinkOperations.getTarget(node, \"variableDeclaration\", false)), position, true);\n          }\n        }\n      }\n    }\n  }","id":82953,"modified_method":"public void performActions(Program o, SNode node) {\n    if (SLinkOperations.getTargets(SLinkOperations.getTarget(node, \"variableDeclaration\", false), \"annotation\", true) != null) {\n      for (SNode annotation : SLinkOperations.getTargets(SLinkOperations.getTarget(node, \"variableDeclaration\", false), \"annotation\", true)) {\n        String name = SPropertyOperations.getString(SLinkOperations.getTarget(annotation, \"annotation\", false), \"name\");\n        if (SLinkOperations.getTarget(annotation, \"annotation\", false) == SNodeOperations.getNode(\"f:java_stub#org.jetbrains.annotations(org.jetbrains.annotations@java_stub)\", \"~Nullable\")) {\n          {\n            int position = ((Program) (o)).getEnd(node);\n            Instruction instruction = new nullableInstruction(SLinkOperations.getTarget(node, \"variableDeclaration\", false));\n            instruction.setSource(node);\n            ((Program) (o)).insert(instruction, position, true);\n          }\n        }\n        if (SLinkOperations.getTarget(annotation, \"annotation\", false) == SNodeOperations.getNode(\"f:java_stub#org.jetbrains.annotations(org.jetbrains.annotations@java_stub)\", \"~NotNull\")) {\n          {\n            int position = ((Program) (o)).getEnd(node);\n            Instruction instruction = new notNullInstruction(SLinkOperations.getTarget(node, \"variableDeclaration\", false));\n            instruction.setSource(node);\n            ((Program) (o)).insert(instruction, position, true);\n          }\n        }\n      }\n    }\n  }","commit_id":"cb3c3bea7adafadf213861c5de7049377a4e9ed6","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void performActions(Program o, SNode node) {\n    SNode m = node;\n    if (SLinkOperations.getTargets(SLinkOperations.getTarget(m, \"baseMethodDeclaration\", false), \"annotation\", true) != null) {\n      for (SNode annotation : SLinkOperations.getTargets(SLinkOperations.getTarget(m, \"baseMethodDeclaration\", false), \"annotation\", true)) {\n        String name = SPropertyOperations.getString(SLinkOperations.getTarget(annotation, \"annotation\", false), \"name\");\n        if (SLinkOperations.getTarget(annotation, \"annotation\", false) == SNodeOperations.getNode(\"f:java_stub#org.jetbrains.annotations(org.jetbrains.annotations@java_stub)\", \"~Nullable\")) {\n          {\n            int position = 0;\n            position = ((Program) (o)).getEnd(node);\n            ((Program) (o)).insert(new nullableInstruction(node), position, true);\n          }\n        }\n        if (SLinkOperations.getTarget(annotation, \"annotation\", false) == SNodeOperations.getNode(\"f:java_stub#org.jetbrains.annotations(org.jetbrains.annotations@java_stub)\", \"~NotNull\")) {\n          {\n            int position = 0;\n            position = ((Program) (o)).getEnd(node);\n            ((Program) (o)).insert(new notNullInstruction(node), position, true);\n          }\n        }\n      }\n    }\n  }","id":82954,"modified_method":"public void performActions(Program o, SNode node) {\n    SNode m = node;\n    if (SLinkOperations.getTargets(SLinkOperations.getTarget(m, \"baseMethodDeclaration\", false), \"annotation\", true) != null) {\n      for (SNode annotation : SLinkOperations.getTargets(SLinkOperations.getTarget(m, \"baseMethodDeclaration\", false), \"annotation\", true)) {\n        if (SLinkOperations.getTarget(annotation, \"annotation\", false) == SNodeOperations.getNode(\"f:java_stub#org.jetbrains.annotations(org.jetbrains.annotations@java_stub)\", \"~Nullable\")) {\n          {\n            int position = ((Program) (o)).getEnd(node);\n            Instruction instruction = new nullableInstruction(node);\n            instruction.setSource(node);\n            ((Program) (o)).insert(instruction, position, true);\n          }\n        }\n        if (SLinkOperations.getTarget(annotation, \"annotation\", false) == SNodeOperations.getNode(\"f:java_stub#org.jetbrains.annotations(org.jetbrains.annotations@java_stub)\", \"~NotNull\")) {\n          {\n            int position = ((Program) (o)).getEnd(node);\n            Instruction instruction = new notNullInstruction(node);\n            instruction.setSource(node);\n            ((Program) (o)).insert(instruction, position, true);\n          }\n        }\n      }\n    }\n  }","commit_id":"cb3c3bea7adafadf213861c5de7049377a4e9ed6","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void performActions(Program o, SNode node) {\n    {\n      int position = 0;\n      position = ((Program) (o)).getEnd(node);\n      ((Program) (o)).insert(new nullableInstruction(node), position, true);\n    }\n  }","id":82955,"modified_method":"public void performActions(Program o, SNode node) {\n    {\n      int position = ((Program) (o)).getEnd(node);\n      Instruction instruction = new nullInstruction(node);\n      instruction.setSource(node);\n      ((Program) (o)).insert(instruction, position, true);\n    }\n  }","commit_id":"cb3c3bea7adafadf213861c5de7049377a4e9ed6","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void performActions(Program o, SNode node) {\n    if (SLinkOperations.getTargets(node, \"annotation\", true) != null) {\n      for (SNode annotation : SLinkOperations.getTargets(node, \"annotation\", true)) {\n        String name = SPropertyOperations.getString(SLinkOperations.getTarget(annotation, \"annotation\", false), \"name\");\n        if (SLinkOperations.getTarget(annotation, \"annotation\", false) == SNodeOperations.getNode(\"f:java_stub#org.jetbrains.annotations(org.jetbrains.annotations@java_stub)\", \"~Nullable\")) {\n          {\n            int position = 0;\n            position = ((Program) (o)).getEnd(node);\n            ((Program) (o)).insert(new nullableInstruction(node), position, true);\n          }\n        }\n        if (SLinkOperations.getTarget(annotation, \"annotation\", false) == SNodeOperations.getNode(\"f:java_stub#org.jetbrains.annotations(org.jetbrains.annotations@java_stub)\", \"~NotNull\")) {\n          {\n            int position = 0;\n            position = ((Program) (o)).getEnd(node);\n            ((Program) (o)).insert(new notNullInstruction(node), position, true);\n          }\n        }\n      }\n    }\n  }","id":82956,"modified_method":"public void performActions(Program o, SNode node) {\n    if (SLinkOperations.getTargets(node, \"annotation\", true) != null) {\n      for (SNode annotation : SLinkOperations.getTargets(node, \"annotation\", true)) {\n        String name = SPropertyOperations.getString(SLinkOperations.getTarget(annotation, \"annotation\", false), \"name\");\n        if (SLinkOperations.getTarget(annotation, \"annotation\", false) == SNodeOperations.getNode(\"f:java_stub#org.jetbrains.annotations(org.jetbrains.annotations@java_stub)\", \"~Nullable\")) {\n          {\n            int position = ((Program) (o)).getEnd(node);\n            Instruction instruction = new nullableInstruction(node);\n            instruction.setSource(node);\n            ((Program) (o)).insert(instruction, position, true);\n          }\n        }\n        if (SLinkOperations.getTarget(annotation, \"annotation\", false) == SNodeOperations.getNode(\"f:java_stub#org.jetbrains.annotations(org.jetbrains.annotations@java_stub)\", \"~NotNull\")) {\n          {\n            int position = ((Program) (o)).getEnd(node);\n            Instruction instruction = new notNullInstruction(node);\n            instruction.setSource(node);\n            ((Program) (o)).insert(instruction, position, true);\n          }\n        }\n      }\n    }\n  }","commit_id":"cb3c3bea7adafadf213861c5de7049377a4e9ed6","url":"https://github.com/JetBrains/MPS"},{"original_method":"protected String replaceStructureIdComparator(\n\t\tString sql, boolean isFinderQuery) {\n\n\t\tString insertText =\n\t\t\t\"structureId != ? AND structureId IS NOT NULL\";\n\n\t\tif (CustomSQLUtil.isVendorOracle()) {\n\t\t\tinsertText = \"structureId IS NOT NULL\";\n\t\t}\n\n\t\tinsertText = StringUtil.add(\" AND (\", insertText, StringPool.BLANK);\n\t\tinsertText = StringUtil.add(insertText, \") \", StringPool.BLANK);\n\n\t\tString textToBeReplaced =\n\t\t\t\"(structureId = ? [$AND_OR_NULL_CHECK$]) [$AND_OR_CONNECTOR$]\";\n\n\t\tsql = StringUtil.replace(sql, textToBeReplaced, \"\");\n\n\t\tif (isFinderQuery) {\n\t\t\tsql = StringUtil.insert(sql, insertText, sql.indexOf(\"ORDER\"));\n\t\t}\n\t\telse {\n\t\t\tsql = StringUtil.add(sql, insertText, StringPool.BLANK);\n\t\t}\n\n\t\treturn sql;\n\t}","id":82957,"modified_method":"protected String replaceStructureIdComparator(String sql) {\n\t\tString insertSQL = \"structureId != ? AND structureId IS NOT NULL\";\n\n\t\tif (CustomSQLUtil.isVendorOracle()) {\n\t\t\tinsertSQL = \"structureId IS NOT NULL\";\n\t\t}\n\n\t\tinsertSQL = \" AND (\" + insertSQL + \") \";\n\n\t\tString removeSQL =\n\t\t\t\"(structureId = ? [$AND_OR_NULL_CHECK$]) [$AND_OR_CONNECTOR$]\";\n\n\t\tsql = StringUtil.replace(sql, removeSQL, StringPool.BLANK);\n\n\t\tint pos = sql.indexOf(\"ORDER BY\");\n\n\t\tif (pos == -1) {\n\t\t\tsql = sql + insertSQL;\n\t\t}\n\t\telse {\n\t\t\tsql = StringUtil.insert(sql, insertSQL, pos);\n\t\t}\n\n\t\treturn sql;\n\t}","commit_id":"4cd9ffd6159c9fc49b08fa8d46d62ad00412072a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public List<JournalTemplate> findByC_G_T_S_N_D(\n\t\t\tlong companyId, long groupId, String[] templateIds,\n\t\t\tString structureId, String structureIdComparator, String[] names,\n\t\t\tString[] descriptions, boolean andOperator, int start, int end,\n\t\t\tOrderByComparator obc)\n\t\tthrows SystemException {\n\n\t\ttemplateIds = CustomSQLUtil.keywords(templateIds, false);\n\t\tnames = CustomSQLUtil.keywords(names);\n\t\tdescriptions = CustomSQLUtil.keywords(descriptions);\n\n\t\tSession session = null;\n\n\t\ttry {\n\t\t\tsession = openSession();\n\n\t\t\tString sql = CustomSQLUtil.get(FIND_BY_C_G_T_S_N_D);\n\n\t\t\tif (groupId <= 0) {\n\t\t\t\tsql = StringUtil.replace(sql, \"(groupId = ?) AND\", \"\");\n\t\t\t}\n\n\t\t\tsql = CustomSQLUtil.replaceKeywords(\n\t\t\t\tsql, \"templateId\", StringPool.LIKE, false, templateIds);\n\n\t\t\tif (structureIdComparator.equals(StringPool.NOT_EQUAL)) {\n\t\t\t\tsql = replaceStructureIdComparator(sql, true);\n\t\t\t}\n\n\t\t\tsql = CustomSQLUtil.replaceKeywords(\n\t\t\t\tsql, \"lower(name)\", StringPool.LIKE, false, names);\n\t\t\tsql = CustomSQLUtil.replaceKeywords(\n\t\t\t\tsql, \"lower(description)\", StringPool.LIKE, true, descriptions);\n\n\t\t\tsql = CustomSQLUtil.replaceAndOperator(sql, andOperator);\n\t\t\tsql = CustomSQLUtil.replaceOrderBy(sql, obc);\n\n\t\t\tSQLQuery q = session.createSQLQuery(sql);\n\n\t\t\tq.addEntity(\"JournalTemplate\", JournalTemplateImpl.class);\n\n\t\t\tQueryPos qPos = QueryPos.getInstance(q);\n\n\t\t\tqPos.add(companyId);\n\n\t\t\tif (groupId > 0) {\n\t\t\t\tqPos.add(groupId);\n\t\t\t}\n\n\t\t\tqPos.add(templateIds, 2);\n\n\t\t\tif (structureIdComparator.equals(StringPool.EQUAL)) {\n\t\t\t\tqPos.add(structureId);\n\t\t\t\tqPos.add(structureId);\n\t\t\t}\n\n\t\t\tqPos.add(names, 2);\n\t\t\tqPos.add(descriptions, 2);\n\n\t\t\tif (structureIdComparator.equals(StringPool.NOT_EQUAL)) {\n\t\t\t\tif (CustomSQLUtil.isVendorOracle()) {\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tqPos.add(structureId);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn (List<JournalTemplate>)QueryUtil.list(\n\t\t\t\tq, getDialect(), start, end);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new SystemException(e);\n\t\t}\n\t\tfinally {\n\t\t\tcloseSession(session);\n\t\t}\n\t}","id":82958,"modified_method":"public List<JournalTemplate> findByC_G_T_S_N_D(\n\t\t\tlong companyId, long groupId, String[] templateIds,\n\t\t\tString structureId, String structureIdComparator, String[] names,\n\t\t\tString[] descriptions, boolean andOperator, int start, int end,\n\t\t\tOrderByComparator obc)\n\t\tthrows SystemException {\n\n\t\ttemplateIds = CustomSQLUtil.keywords(templateIds, false);\n\t\tnames = CustomSQLUtil.keywords(names);\n\t\tdescriptions = CustomSQLUtil.keywords(descriptions);\n\n\t\tSession session = null;\n\n\t\ttry {\n\t\t\tsession = openSession();\n\n\t\t\tString sql = CustomSQLUtil.get(FIND_BY_C_G_T_S_N_D);\n\n\t\t\tif (groupId <= 0) {\n\t\t\t\tsql = StringUtil.replace(sql, \"(groupId = ?) AND\", \"\");\n\t\t\t}\n\n\t\t\tsql = CustomSQLUtil.replaceKeywords(\n\t\t\t\tsql, \"templateId\", StringPool.LIKE, false, templateIds);\n\n\t\t\tif (structureIdComparator.equals(StringPool.NOT_EQUAL)) {\n\t\t\t\tsql = replaceStructureIdComparator(sql);\n\t\t\t}\n\n\t\t\tsql = CustomSQLUtil.replaceKeywords(\n\t\t\t\tsql, \"lower(name)\", StringPool.LIKE, false, names);\n\t\t\tsql = CustomSQLUtil.replaceKeywords(\n\t\t\t\tsql, \"lower(description)\", StringPool.LIKE, true, descriptions);\n\n\t\t\tsql = CustomSQLUtil.replaceAndOperator(sql, andOperator);\n\t\t\tsql = CustomSQLUtil.replaceOrderBy(sql, obc);\n\n\t\t\tSQLQuery q = session.createSQLQuery(sql);\n\n\t\t\tq.addEntity(\"JournalTemplate\", JournalTemplateImpl.class);\n\n\t\t\tQueryPos qPos = QueryPos.getInstance(q);\n\n\t\t\tqPos.add(companyId);\n\n\t\t\tif (groupId > 0) {\n\t\t\t\tqPos.add(groupId);\n\t\t\t}\n\n\t\t\tqPos.add(templateIds, 2);\n\n\t\t\tif (structureIdComparator.equals(StringPool.EQUAL)) {\n\t\t\t\tqPos.add(structureId);\n\t\t\t\tqPos.add(structureId);\n\t\t\t}\n\n\t\t\tqPos.add(names, 2);\n\t\t\tqPos.add(descriptions, 2);\n\n\t\t\tif (structureIdComparator.equals(StringPool.NOT_EQUAL)) {\n\t\t\t\tif (CustomSQLUtil.isVendorOracle()) {\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tqPos.add(structureId);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn (List<JournalTemplate>)QueryUtil.list(\n\t\t\t\tq, getDialect(), start, end);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new SystemException(e);\n\t\t}\n\t\tfinally {\n\t\t\tcloseSession(session);\n\t\t}\n\t}","commit_id":"4cd9ffd6159c9fc49b08fa8d46d62ad00412072a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public int countByC_G_T_S_N_D(\n\t\t\tlong companyId, long groupId, String[] templateIds,\n\t\t\tString structureId, String structureIdComparator, String[] names,\n\t\t\tString[] descriptions, boolean andOperator)\n\t\tthrows SystemException {\n\n\t\ttemplateIds = CustomSQLUtil.keywords(templateIds, false);\n\t\tnames = CustomSQLUtil.keywords(names);\n\t\tdescriptions = CustomSQLUtil.keywords(descriptions);\n\n\t\tSession session = null;\n\n\t\ttry {\n\t\t\tsession = openSession();\n\n\t\t\tString sql = CustomSQLUtil.get(COUNT_BY_C_G_T_S_N_D);\n\n\t\t\tif (groupId <= 0) {\n\t\t\t\tsql = StringUtil.replace(sql, \"(groupId = ?) AND\", \"\");\n\t\t\t}\n\n\t\t\tsql = CustomSQLUtil.replaceKeywords(\n\t\t\t\tsql, \"templateId\", StringPool.LIKE, false, templateIds);\n\n\t\t\tif (structureIdComparator.equals(StringPool.NOT_EQUAL)) {\n\t\t\t\tsql = replaceStructureIdComparator(sql, false);\n\t\t\t}\n\n\t\t\tsql = CustomSQLUtil.replaceKeywords(\n\t\t\t\tsql, \"lower(name)\", StringPool.LIKE, false, names);\n\t\t\tsql = CustomSQLUtil.replaceKeywords(\n\t\t\t\tsql, \"lower(description)\", StringPool.LIKE, true, descriptions);\n\n\t\t\tsql = CustomSQLUtil.replaceAndOperator(sql, andOperator);\n\n\t\t\tSQLQuery q = session.createSQLQuery(sql);\n\n\t\t\tq.addScalar(COUNT_COLUMN_NAME, Type.LONG);\n\n\t\t\tQueryPos qPos = QueryPos.getInstance(q);\n\n\t\t\tqPos.add(companyId);\n\n\t\t\tif (groupId > 0) {\n\t\t\t\tqPos.add(groupId);\n\t\t\t}\n\n\t\t\tqPos.add(templateIds, 2);\n\n\t\t\tif (structureIdComparator.equals(StringPool.EQUAL)) {\n\t\t\t\tqPos.add(structureId);\n\t\t\t\tqPos.add(structureId);\n\t\t\t}\n\n\t\t\tqPos.add(names, 2);\n\t\t\tqPos.add(descriptions, 2);\n\n\t\t\tif (structureIdComparator.equals(StringPool.NOT_EQUAL)) {\n\t\t\t\tif (CustomSQLUtil.isVendorOracle()) {\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tqPos.add(structureId);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tIterator<Long> itr = q.list().iterator();\n\n\t\t\tif (itr.hasNext()) {\n\t\t\t\tLong count = itr.next();\n\n\t\t\t\tif (count != null) {\n\t\t\t\t\treturn count.intValue();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn 0;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new SystemException(e);\n\t\t}\n\t\tfinally {\n\t\t\tcloseSession(session);\n\t\t}\n\t}","id":82959,"modified_method":"public int countByC_G_T_S_N_D(\n\t\t\tlong companyId, long groupId, String[] templateIds,\n\t\t\tString structureId, String structureIdComparator, String[] names,\n\t\t\tString[] descriptions, boolean andOperator)\n\t\tthrows SystemException {\n\n\t\ttemplateIds = CustomSQLUtil.keywords(templateIds, false);\n\t\tnames = CustomSQLUtil.keywords(names);\n\t\tdescriptions = CustomSQLUtil.keywords(descriptions);\n\n\t\tSession session = null;\n\n\t\ttry {\n\t\t\tsession = openSession();\n\n\t\t\tString sql = CustomSQLUtil.get(COUNT_BY_C_G_T_S_N_D);\n\n\t\t\tif (groupId <= 0) {\n\t\t\t\tsql = StringUtil.replace(sql, \"(groupId = ?) AND\", \"\");\n\t\t\t}\n\n\t\t\tsql = CustomSQLUtil.replaceKeywords(\n\t\t\t\tsql, \"templateId\", StringPool.LIKE, false, templateIds);\n\n\t\t\tif (structureIdComparator.equals(StringPool.NOT_EQUAL)) {\n\t\t\t\tsql = replaceStructureIdComparator(sql);\n\t\t\t}\n\n\t\t\tsql = CustomSQLUtil.replaceKeywords(\n\t\t\t\tsql, \"lower(name)\", StringPool.LIKE, false, names);\n\t\t\tsql = CustomSQLUtil.replaceKeywords(\n\t\t\t\tsql, \"lower(description)\", StringPool.LIKE, true, descriptions);\n\n\t\t\tsql = CustomSQLUtil.replaceAndOperator(sql, andOperator);\n\n\t\t\tSQLQuery q = session.createSQLQuery(sql);\n\n\t\t\tq.addScalar(COUNT_COLUMN_NAME, Type.LONG);\n\n\t\t\tQueryPos qPos = QueryPos.getInstance(q);\n\n\t\t\tqPos.add(companyId);\n\n\t\t\tif (groupId > 0) {\n\t\t\t\tqPos.add(groupId);\n\t\t\t}\n\n\t\t\tqPos.add(templateIds, 2);\n\n\t\t\tif (structureIdComparator.equals(StringPool.EQUAL)) {\n\t\t\t\tqPos.add(structureId);\n\t\t\t\tqPos.add(structureId);\n\t\t\t}\n\n\t\t\tqPos.add(names, 2);\n\t\t\tqPos.add(descriptions, 2);\n\n\t\t\tif (structureIdComparator.equals(StringPool.NOT_EQUAL)) {\n\t\t\t\tif (CustomSQLUtil.isVendorOracle()) {\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tqPos.add(structureId);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tIterator<Long> itr = q.list().iterator();\n\n\t\t\tif (itr.hasNext()) {\n\t\t\t\tLong count = itr.next();\n\n\t\t\t\tif (count != null) {\n\t\t\t\t\treturn count.intValue();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn 0;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new SystemException(e);\n\t\t}\n\t\tfinally {\n\t\t\tcloseSession(session);\n\t\t}\n\t}","commit_id":"4cd9ffd6159c9fc49b08fa8d46d62ad00412072a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static String insert(String s, String text, int offset) {\n\t\tif ((s == null) || (text == null)) {\n\t\t\treturn null;\n\t\t}\n\n\t\ttry {\n\t\t\tStringBuilder sb = new StringBuilder(s);\n\t\t\tsb.insert(offset, text);\n\t\t\treturn sb.toString();\n\t\t}\n\t\tcatch (StringIndexOutOfBoundsException siobe) {\n\t\t\treturn null;\n\t\t}\n\t}","id":82960,"modified_method":"public static String insert(String s, String insert, int offset) {\n\t\tif (s == null) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (insert == null) {\n\t\t\treturn s;\n\t\t}\n\n\t\tif (offset > s.length()) {\n\t\t\toffset = s.length();\n\t\t}\n\n\t\tStringBuilder sb = new StringBuilder(s);\n\n\t\tsb.insert(offset, insert);\n\n\t\treturn sb.toString();\n\t}","commit_id":"4cd9ffd6159c9fc49b08fa8d46d62ad00412072a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Test\n    public void testInProcessCassandraServer()\n            throws UnsupportedEncodingException, InvalidRequestException,\n            UnavailableException, TimedOutException, TException,\n            NotFoundException {\n        Cassandra.Client client = getClient();\n\n        String key_user_id = \"1\";\n\n        long timestamp = System.currentTimeMillis();\n        ColumnPath cp = new ColumnPath(\"Standard1\");\n        cp.setColumn(\"name\".getBytes(\"utf-8\"));\n\n        // insert\n        client.insert(\"Keyspace1\", key_user_id, cp, \"Ran\".getBytes(\"UTF-8\"),\n                timestamp, ConsistencyLevel.ONE);\n\n        // read\n        ColumnOrSuperColumn got = client.get(\"Keyspace1\", key_user_id, cp,\n                ConsistencyLevel.ONE);\n\n        // assert\n        assertNotNull(\"Got a null ColumnOrSuperColumn\", got);\n        assertEquals(\"Ran\", new String(got.getColumn().getValue(), \"utf-8\"));\n    }","id":82961,"modified_method":"@Test\n    public void testInProcessCassandraServer()\n            throws UnsupportedEncodingException, InvalidRequestException,\n            UnavailableException, TimedOutException, TException,\n            NotFoundException, AuthenticationException, AuthorizationException {\n        Cassandra.Client client = getClient();\n\n        client.login(\"Keyspace1\", null);\n\n        String key_user_id = \"1\";\n        long timestamp = System.currentTimeMillis();   \n\n        // insert\n        ColumnParent colParent = new ColumnParent(\"Standard1\");\n        Column column = new Column(\"name\".getBytes(\"utf-8\"), \"Ran\".getBytes(\"UTF-8\"), timestamp);\n        \n        client.insert(key_user_id.getBytes(), colParent, column, ConsistencyLevel.ONE);\n\n        // read\n        ColumnPath cp = new ColumnPath(\"Standard1\");\n        cp.setColumn(\"name\".getBytes(\"utf-8\"));\n\n        ColumnOrSuperColumn got = client.get(key_user_id.getBytes(), cp,\n                ConsistencyLevel.ONE);\n\n        // assert\n        assertNotNull(\"Got a null ColumnOrSuperColumn\", got);\n        assertEquals(\"Ran\", new String(got.getColumn().getValue(), \"utf-8\"));\n    }","commit_id":"a63f5b67d7376cef48da2b2f6e0eaec159f7a8ab","url":"https://github.com/apache/cassandra"},{"original_method":"public void redraw(java.io.Writer out) throws java.io.IOException {\n\t\tfinal StringWriter bufout = new StringWriter();\n\t\tsuper.redraw(bufout);\n\t\tfinal StringBuffer buf = bufout.getBuffer();\n\n\t\tfinal Execution exec = Executions.getCurrent();\n\t\tfinal String ATTR_RESPONSES = \"zk_argResponses\";\n\t\tfinal Collection responses = (Collection)exec.getAttribute(ATTR_RESPONSES);\n\t\tif (responses != null) {\n\t\t\tfinal String s = ZkFns.outResponseJavaScripts(responses);\n\t\t\tfinal int j = buf.indexOf(\"<\/body>\");\n\t\t\tif (j >= 0) {\n\t\t\t\tbuf.insert(j, \"\\n<\/script>\\n\")\n\t\t\t\t   .insert(j, s)\n\t\t\t\t   .insert(j, \"<script type=\\\"text/javascript\\\">\\n\");\n\t\t\t} else {\n\t\t\t\tbuf.append(\"<script type=\\\"text/javascript\\\">\\n\")\n\t\t\t\t   .append(s)\n\t\t\t\t   .append(\"\\n<\/script>\\n\");\n\t\t\t}\n\t\t\texec.removeAttribute(ATTR_RESPONSES); //turn off page.dsp's generation\n\t\t}\n\n\t\tout.write(buf.toString());\n\t}","id":82962,"modified_method":"public void redraw(java.io.Writer out) throws java.io.IOException {\n\t\tfinal StringWriter bufout = new StringWriter();\n\t\tsuper.redraw(bufout);\n\t\tfinal StringBuffer buf = bufout.getBuffer();\n\n\t\tfinal Execution exec = Executions.getCurrent();\n\t\tfinal String ATTR_RESPONSES = \"zk_argResponses\";\n\t\tfinal Collection responses = (Collection)exec.getAttribute(ATTR_RESPONSES);\n\t\tif (responses != null) {\n\t\t\tint j = buf.indexOf(\"<\/body>\");\n\t\t\tif (j < 0) j = buf.length();\n\t\t\tbuf.insert(j, \"\\n<\/script>\\n\")\n\t\t\t   .insert(j, ZkFns.outResponseJavaScripts(responses))\n\t\t\t   .insert(j, \"<script type=\\\"text/javascript\\\">\\n\");\n\n\t\t\texec.removeAttribute(ATTR_RESPONSES); //turn off page.dsp's generation\n\t\t}\n\n\t\tout.write(buf.toString());\n\t}","commit_id":"9388fbd2bc8840d5dde032a42ed9109d200a412e","url":"https://github.com/zkoss/zk"},{"original_method":"public void redraw(java.io.Writer out) throws java.io.IOException {\n\t\tfinal StringWriter bufout = new StringWriter();\n\t\tsuper.redraw(bufout);\n\t\tfinal StringBuffer buf = bufout.getBuffer();\n\n\t\tfinal Execution exec = Executions.getCurrent();\n\t\tfinal String ATTR_ACTION = \"zk_argAction\";\n\t\tfinal String action = (String)exec.getAttribute(ATTR_ACTION);\n\t\tif (action != null) {\n\t\t\tfinal String s1 = ZkFns.outLangStyleSheets();\n\t\t\tfinal String s2 = ZkFns.outLangJavaScripts(action);\n\t\t\tfinal int j = buf.indexOf(\"<\/head>\");\n\t\t\tif (j >= 0) {\n\t\t\t\tbuf.insert(j, '\\n').insert(j, s2).insert(j, s1);\n\t\t\t} else {\n\t\t\t\tbuf.append(s1).append(s2);\n\t\t\t}\n\t\t\texec.removeAttribute(ATTR_ACTION); //turn off page.dsp's generation\n\t\t}\n\n\t\tout.write(buf.toString());\n\t}","id":82963,"modified_method":"public void redraw(java.io.Writer out) throws java.io.IOException {\n\t\tfinal StringWriter bufout = new StringWriter();\n\t\tsuper.redraw(bufout);\n\t\tfinal StringBuffer buf = bufout.getBuffer();\n\n\t\tfinal Execution exec = Executions.getCurrent();\n\t\tfinal String ATTR_ACTION = \"zk_argAction\";\n\t\tfinal String action = (String)exec.getAttribute(ATTR_ACTION);\n\t\tif (action != null) {\n\t\t\tint j = buf.indexOf(\"<\/head>\");\n\t\t\tif (j < 0) j = buf.length();\n\t\t\tbuf.insert(j, '\\n')\n\t\t\t\t.insert(j, ZkFns.outLangJavaScripts(action))\n\t\t\t\t.insert(j, '\\n')\n\t\t\t\t.insert(j, ZkFns.outLangStyleSheets());\n\n\t\t\texec.removeAttribute(ATTR_ACTION); //turn off page.dsp's generation\n\t\t}\n\n\t\tout.write(buf.toString());\n\t}","commit_id":"9388fbd2bc8840d5dde032a42ed9109d200a412e","url":"https://github.com/zkoss/zk"},{"original_method":"@Override\n\tpublic void sendNotificationEvent(\n\t\t\tlong companyId, long userId, NotificationEvent notificationEvent)\n\t\tthrows ChannelException {\n\n\t\tChannelHub channelHub = getChannelHub(companyId);\n\n\t\tchannelHub.sendNotificationEvent(userId, notificationEvent);\n\n\t\tif (!ClusterInvokeThreadLocal.isEnabled()) {\n\t\t\treturn;\n\t\t}\n\n\t\tMethodHandler methodHandler = new MethodHandler(\n\t\t\t_storeNotificationEventMethodKey, companyId, userId,\n\t\t\tnotificationEvent);\n\n\t\tClusterRequest clusterRequest = ClusterRequest.createMulticastRequest(\n\t\t\tmethodHandler, true);\n\n\t\ttry {\n\t\t\tClusterExecutorUtil.execute(clusterRequest);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new ChannelException(\"Unable to notify cluster of event\", e);\n\t\t}\n\t}","id":82964,"modified_method":"@Override\n\tpublic void sendNotificationEvent(\n\t\t\tlong companyId, long userId, NotificationEvent notificationEvent)\n\t\tthrows ChannelException {\n\n\t\tChannelHub channelHub = fetchChannelHub(companyId);\n\n\t\tif (channelHub != null) {\n\t\t\tchannelHub.sendNotificationEvent(userId, notificationEvent);\n\t\t}\n\n\t\tif (!ClusterInvokeThreadLocal.isEnabled()) {\n\t\t\treturn;\n\t\t}\n\n\t\tMethodHandler methodHandler = new MethodHandler(\n\t\t\t_storeNotificationEventMethodKey, companyId, userId,\n\t\t\tnotificationEvent);\n\n\t\tClusterRequest clusterRequest = ClusterRequest.createMulticastRequest(\n\t\t\tmethodHandler, true);\n\n\t\ttry {\n\t\t\tClusterExecutorUtil.execute(clusterRequest);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new ChannelException(\"Unable to notify cluster of event\", e);\n\t\t}\n\t}","commit_id":"76f6df0c1a8f28663028765203f7bc546336334b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic void destroyChannel(long companyId, long userId)\n\t\tthrows ChannelException {\n\n\t\tChannelHub channelHub = getChannelHub(companyId);\n\n\t\tchannelHub.destroyChannel(userId);\n\n\t\tif (!ClusterInvokeThreadLocal.isEnabled()) {\n\t\t\treturn;\n\t\t}\n\n\t\tMethodHandler methodHandler = new MethodHandler(\n\t\t\t_destroyChannelMethodKey, companyId, userId);\n\n\t\tClusterRequest clusterRequest = ClusterRequest.createMulticastRequest(\n\t\t\tmethodHandler, true);\n\n\t\ttry {\n\t\t\tClusterExecutorUtil.execute(clusterRequest);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new ChannelException(\n\t\t\t\t\"Unable to destroy channel across cluster\", e);\n\t\t}\n\t}","id":82965,"modified_method":"@Override\n\tpublic void destroyChannel(long companyId, long userId)\n\t\tthrows ChannelException {\n\n\t\tChannelHub channelHub = fetchChannelHub(companyId);\n\n\t\tif (channelHub != null) {\n\t\t\tchannelHub.destroyChannel(userId);\n\t\t}\n\n\t\tif (!ClusterInvokeThreadLocal.isEnabled()) {\n\t\t\treturn;\n\t\t}\n\n\t\tMethodHandler methodHandler = new MethodHandler(\n\t\t\t_destroyChannelMethodKey, companyId, userId);\n\n\t\tClusterRequest clusterRequest = ClusterRequest.createMulticastRequest(\n\t\t\tmethodHandler, true);\n\n\t\ttry {\n\t\t\tClusterExecutorUtil.execute(clusterRequest);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new ChannelException(\n\t\t\t\t\"Unable to destroy channel across cluster\", e);\n\t\t}\n\t}","commit_id":"76f6df0c1a8f28663028765203f7bc546336334b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void doSendInvite(\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tlong groupId = ParamUtil.getLong(actionRequest, \"groupId\");\n\t\tlong[] receiverUserIds = getLongArray(actionRequest, \"receiverUserIds\");\n\t\tString[] receiverEmailAddresses = getStringArray(\n\t\t\tactionRequest, \"receiverEmailAddresses\");\n\t\tlong invitedRoleId = ParamUtil.getLong(actionRequest, \"invitedRoleId\");\n\t\tlong invitedTeamId = ParamUtil.getLong(actionRequest, \"invitedTeamId\");\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tif (!UserLocalServiceUtil.hasGroupUser(\n\t\t\t\tgroupId, themeDisplay.getUserId())) {\n\n\t\t\treturn;\n\t\t}\n\n\t\tServiceContext serviceContext = ServiceContextFactory.getInstance(\n\t\t\tactionRequest);\n\n\t\tPortletURL portletURL = PortletURLFactoryUtil.create(\n\t\t\tactionRequest, PortletKeys.SITE_REDIRECTOR, themeDisplay.getPlid(),\n\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\tportletURL.setParameter(\"struts_action\", \"/my_sites/view\");\n\t\tportletURL.setParameter(\"groupId\", String.valueOf(groupId));\n\n\t\tGroup group = GroupLocalServiceUtil.getGroup(groupId);\n\n\t\tportletURL.setParameter(\n\t\t\t\"privateLayout\", String.valueOf(!group.hasPublicLayouts()));\n\n\t\tportletURL.setWindowState(LiferayWindowState.NORMAL);\n\n\t\tString createAccountURL = PortalUtil.getCreateAccountURL(\n\t\t\tPortalUtil.getHttpServletRequest(actionRequest), themeDisplay);\n\n\t\tcreateAccountURL = HttpUtil.addParameter(\n\t\t\tcreateAccountURL, \"redirect\", portletURL.toString());\n\n\t\tserviceContext.setAttribute(\"createAccountURL\", createAccountURL);\n\n\t\tString loginURL =\n\t\t\tthemeDisplay.getPortalURL() + themeDisplay.getURLSignIn();\n\n\t\tloginURL = HttpUtil.addParameter(\n\t\t\tloginURL, \"redirect\", portletURL.toString());\n\n\t\tserviceContext.setAttribute(\"loginURL\", loginURL);\n\n\t\tMemberRequestLocalServiceUtil.addMemberRequests(\n\t\t\tthemeDisplay.getUserId(), groupId, receiverUserIds, invitedRoleId,\n\t\t\tinvitedTeamId, serviceContext);\n\n\t\tMemberRequestLocalServiceUtil.addMemberRequests(\n\t\t\tthemeDisplay.getUserId(), groupId, receiverEmailAddresses,\n\t\t\tinvitedRoleId, invitedTeamId, serviceContext);\n\t}","id":82966,"modified_method":"protected void doSendInvite(\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tlong groupId = ParamUtil.getLong(actionRequest, \"groupId\");\n\t\tlong[] receiverUserIds = getLongArray(actionRequest, \"receiverUserIds\");\n\t\tString[] receiverEmailAddresses = getStringArray(\n\t\t\tactionRequest, \"receiverEmailAddresses\");\n\t\tlong invitedRoleId = ParamUtil.getLong(actionRequest, \"invitedRoleId\");\n\t\tlong invitedTeamId = ParamUtil.getLong(actionRequest, \"invitedTeamId\");\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tif (!UserLocalServiceUtil.hasGroupUser(\n\t\t\t\tgroupId, themeDisplay.getUserId())) {\n\n\t\t\treturn;\n\t\t}\n\n\t\tServiceContext serviceContext = ServiceContextFactory.getInstance(\n\t\t\tactionRequest);\n\n\t\tPortletURL portletURL = PortletURLFactoryUtil.create(\n\t\t\tactionRequest, PortletKeys.SO_NOTIFICATION, themeDisplay.getPlid(),\n\t\t\tPortletRequest.RENDER_PHASE);\n\n\t\tportletURL.setParameter(\"mvcPath\", \"/notifications/view.jsp\");\n\t\tportletURL.setParameter(\"p_p_state\", WindowState.MAXIMIZED.toString());\n\n\t\tserviceContext.setAttribute(\"redirectURL\", portletURL.toString());\n\n\t\tString createAccountURL = getCreateAccountURL(\n\t\t\tPortalUtil.getHttpServletRequest(actionRequest), themeDisplay);\n\n\t\tserviceContext.setAttribute(\"createAccountURL\", createAccountURL);\n\n\t\tString loginURL =\n\t\t\tthemeDisplay.getPortalURL() + themeDisplay.getURLSignIn();\n\n\t\tserviceContext.setAttribute(\"loginURL\", loginURL);\n\n\t\tMemberRequestLocalServiceUtil.addMemberRequests(\n\t\t\tthemeDisplay.getUserId(), groupId, receiverUserIds, invitedRoleId,\n\t\t\tinvitedTeamId, serviceContext);\n\n\t\tMemberRequestLocalServiceUtil.addMemberRequests(\n\t\t\tthemeDisplay.getUserId(), groupId, receiverEmailAddresses,\n\t\t\tinvitedRoleId, invitedTeamId, serviceContext);\n\t}","commit_id":"bb845e9c8bc014609b30368115e7b191b89de6a6","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public MemberRequest updateMemberRequest(String key, long receiverUserId)\n\t\tthrows PortalException, SystemException {\n\n\t\tMemberRequest memberRequest = memberRequestPersistence.findByKey(key);\n\n\t\tvalidate(memberRequest, 0);\n\n\t\tmemberRequest.setModifiedDate(new Date());\n\t\tmemberRequest.setReceiverUserId(receiverUserId);\n\n\t\tmemberRequestPersistence.update(memberRequest);\n\n\t\treturn memberRequest;\n\t}","id":82967,"modified_method":"public MemberRequest updateMemberRequest(String key, long receiverUserId)\n\t\tthrows PortalException, SystemException {\n\n\t\tMemberRequest memberRequest = memberRequestPersistence.findByKey(key);\n\n\t\tvalidate(memberRequest, 0);\n\n\t\tmemberRequest.setModifiedDate(new Date());\n\t\tmemberRequest.setReceiverUserId(receiverUserId);\n\n\t\tmemberRequest = memberRequestPersistence.update(memberRequest);\n\n\t\tif (receiverUserId > 0) {\n\t\t\tsendNotificationEvent(memberRequest);\n\t\t}\n\n\t\treturn memberRequest;\n\t}","commit_id":"bb845e9c8bc014609b30368115e7b191b89de6a6","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected void sendEmail(\n\t\t\tString emailAddress, MemberRequest memberRequest,\n\t\t\tServiceContext serviceContext)\n\t\tthrows Exception {\n\n\t\tlong companyId = memberRequest.getCompanyId();\n\n\t\tGroup group = groupLocalService.getGroup(memberRequest.getGroupId());\n\n\t\tUser user = userLocalService.getUser(memberRequest.getUserId());\n\n\t\tUser receiverUser = null;\n\n\t\tif (memberRequest.getReceiverUserId() > 0) {\n\t\t\treceiverUser = userLocalService.getUser(\n\t\t\t\tmemberRequest.getReceiverUserId());\n\t\t}\n\n\t\tString fromName = PrefsPropsUtil.getString(\n\t\t\tcompanyId, PropsKeys.ADMIN_EMAIL_FROM_NAME);\n\t\tString fromAddress = PrefsPropsUtil.getString(\n\t\t\tcompanyId, PropsKeys.ADMIN_EMAIL_FROM_ADDRESS);\n\n\t\tString toName = StringPool.BLANK;\n\t\tString toAddress = emailAddress;\n\n\t\tif (receiverUser != null) {\n\t\t\ttoName = receiverUser.getFullName();\n\t\t}\n\n\t\tString subject = StringUtil.read(\n\t\t\tgetClassLoader(),\n\t\t\t\"com/liferay/so/invitemembers/dependencies/subject.tmpl\");\n\n\t\tString body = StringPool.BLANK;\n\n\t\tif (memberRequest.getReceiverUserId() > 0) {\n\t\t\tbody = StringUtil.read(\n\t\t\t\tgetClassLoader(),\n\t\t\t\t\"com/liferay/so/invitemembers/dependencies/\" +\n\t\t\t\t\t\"existing_user_body.tmpl\");\n\t\t}\n\t\telse {\n\t\t\tbody = StringUtil.read(\n\t\t\t\tgetClassLoader(),\n\t\t\t\t\"com/liferay/so/invitemembers/dependencies/\" +\n\t\t\t\t\t\"new_user_body.tmpl\");\n\t\t}\n\n\t\tsubject = StringUtil.replace(\n\t\t\tsubject,\n\t\t\tnew String[] {\n\t\t\t\t\"[$MEMBER_REQUEST_GROUP$]\", \"[$MEMBER_REQUEST_USER$]\"\n\t\t\t},\n\t\t\tnew String[] {\n\t\t\t\tgroup.getDescriptiveName(serviceContext.getLocale()),\n\t\t\t\tuser.getFullName()\n\t\t\t});\n\n\t\tString createAccountURL = (String)serviceContext.getAttribute(\n\t\t\t\"createAccountURL\");\n\n\t\tif (Validator.isNull(createAccountURL)) {\n\t\t\tcreateAccountURL = serviceContext.getPortalURL();\n\t\t}\n\n\t\tcreateAccountURL = HttpUtil.addParameter(\n\t\t\tcreateAccountURL, \"key\", memberRequest.getKey());\n\n\t\tString loginURL = (String)serviceContext.getAttribute(\"loginURL\");\n\n\t\tif (Validator.isNull(loginURL)) {\n\t\t\tloginURL = serviceContext.getPortalURL();\n\t\t}\n\n\t\tloginURL = HttpUtil.addParameter(\n\t\t\tloginURL, \"key\", memberRequest.getKey());\n\n\t\tbody = StringUtil.replace(\n\t\t\tbody,\n\t\t\tnew String[] {\n\t\t\t\t\"[$ADMIN_ADDRESS$]\", \"[$ADMIN_NAME$]\",\n\t\t\t\t\"[$MEMBER_REQUEST_CREATE_ACCOUNT_URL$]\",\n\t\t\t\t\"[$MEMBER_REQUEST_GROUP$]\", \"[$MEMBER_REQUEST_LOGIN_URL$]\",\n\t\t\t\t\"[$MEMBER_REQUEST_USER$]\"\n\t\t\t},\n\t\t\tnew String[] {\n\t\t\t\tfromAddress, fromName, createAccountURL,\n\t\t\t\tgroup.getDescriptiveName(serviceContext.getLocale()), loginURL,\n\t\t\t\tuser.getFullName()\n\t\t\t});\n\n\t\tInternetAddress from = new InternetAddress(fromAddress, fromName);\n\n\t\tInternetAddress to = new InternetAddress(toAddress, toName);\n\n\t\tMailMessage mailMessage = new MailMessage(\n\t\t\tfrom, to, subject, body, true);\n\n\t\tMailServiceUtil.sendEmail(mailMessage);\n\t}","id":82968,"modified_method":"protected void sendEmail(\n\t\t\tString emailAddress, MemberRequest memberRequest,\n\t\t\tServiceContext serviceContext)\n\t\tthrows Exception {\n\n\t\tlong companyId = memberRequest.getCompanyId();\n\n\t\tGroup group = groupLocalService.getGroup(memberRequest.getGroupId());\n\n\t\tUser user = userLocalService.getUser(memberRequest.getUserId());\n\n\t\tUser receiverUser = null;\n\n\t\tif (memberRequest.getReceiverUserId() > 0) {\n\t\t\treceiverUser = userLocalService.getUser(\n\t\t\t\tmemberRequest.getReceiverUserId());\n\t\t}\n\n\t\tString fromName = PrefsPropsUtil.getString(\n\t\t\tcompanyId, PropsKeys.ADMIN_EMAIL_FROM_NAME);\n\t\tString fromAddress = PrefsPropsUtil.getString(\n\t\t\tcompanyId, PropsKeys.ADMIN_EMAIL_FROM_ADDRESS);\n\n\t\tString toName = StringPool.BLANK;\n\t\tString toAddress = emailAddress;\n\n\t\tif (receiverUser != null) {\n\t\t\ttoName = receiverUser.getFullName();\n\t\t}\n\n\t\tString subject = StringUtil.read(\n\t\t\tgetClassLoader(),\n\t\t\t\"com/liferay/so/invitemembers/dependencies/subject.tmpl\");\n\n\t\tString body = StringPool.BLANK;\n\n\t\tif (memberRequest.getReceiverUserId() > 0) {\n\t\t\tbody = StringUtil.read(\n\t\t\t\tgetClassLoader(),\n\t\t\t\t\"com/liferay/so/invitemembers/dependencies/\" +\n\t\t\t\t\t\"existing_user_body.tmpl\");\n\t\t}\n\t\telse {\n\t\t\tbody = StringUtil.read(\n\t\t\t\tgetClassLoader(),\n\t\t\t\t\"com/liferay/so/invitemembers/dependencies/\" +\n\t\t\t\t\t\"new_user_body.tmpl\");\n\t\t}\n\n\t\tsubject = StringUtil.replace(\n\t\t\tsubject,\n\t\t\tnew String[] {\n\t\t\t\t\"[$MEMBER_REQUEST_GROUP$]\", \"[$MEMBER_REQUEST_USER$]\"\n\t\t\t},\n\t\t\tnew String[] {\n\t\t\t\tgroup.getDescriptiveName(serviceContext.getLocale()),\n\t\t\t\tuser.getFullName()\n\t\t\t});\n\n\t\tString redirectURL = (String)serviceContext.getAttribute(\n\t\t\t\"redirectURL\");\n\n\t\tif (Validator.isNull(redirectURL)) {\n\t\t\tredirectURL = serviceContext.getCurrentURL();\n\t\t}\n\n\t\tString loginURL = (String)serviceContext.getAttribute(\"loginURL\");\n\n\t\tif (Validator.isNull(loginURL)) {\n\t\t\tloginURL = serviceContext.getPortalURL();\n\t\t}\n\n\t\tloginURL = HttpUtil.addParameter(loginURL, \"redirect\", redirectURL);\n\n\t\tredirectURL = HttpUtil.addParameter(\n\t\t\tredirectURL, \"key\", memberRequest.getKey());\n\n\t\tString createAccountURL = (String)serviceContext.getAttribute(\n\t\t\t\"createAccountURL\");\n\n\t\tif (Validator.isNull(createAccountURL)) {\n\t\t\tcreateAccountURL = serviceContext.getPortalURL();\n\t\t}\n\n\t\tcreateAccountURL = HttpUtil.addParameter(\n\t\t\tcreateAccountURL, \"redirect\", redirectURL);\n\n\t\tbody = StringUtil.replace(\n\t\t\tbody,\n\t\t\tnew String[] {\n\t\t\t\t\"[$ADMIN_ADDRESS$]\", \"[$ADMIN_NAME$]\",\n\t\t\t\t\"[$MEMBER_REQUEST_CREATE_ACCOUNT_URL$]\",\n\t\t\t\t\"[$MEMBER_REQUEST_GROUP$]\", \"[$MEMBER_REQUEST_LOGIN_URL$]\",\n\t\t\t\t\"[$MEMBER_REQUEST_USER$]\"\n\t\t\t},\n\t\t\tnew String[] {\n\t\t\t\tfromAddress, fromName, createAccountURL,\n\t\t\t\tgroup.getDescriptiveName(serviceContext.getLocale()), loginURL,\n\t\t\t\tuser.getFullName()\n\t\t\t});\n\n\t\tInternetAddress from = new InternetAddress(fromAddress, fromName);\n\n\t\tInternetAddress to = new InternetAddress(toAddress, toName);\n\n\t\tMailMessage mailMessage = new MailMessage(\n\t\t\tfrom, to, subject, body, true);\n\n\t\tMailServiceUtil.sendEmail(mailMessage);\n\t}","commit_id":"bb845e9c8bc014609b30368115e7b191b89de6a6","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public MemberRequest addMemberRequest(\n\t\t\tlong userId, long groupId, long receiverUserId,\n\t\t\tString receiverEmailAddress, long invitedRoleId, long invitedTeamId,\n\t\t\tServiceContext serviceContext)\n\t\tthrows PortalException, SystemException {\n\n\t\t// Member request\n\n\t\tUser user = userLocalService.getUserById(userId);\n\n\t\tDate now = new Date();\n\n\t\tlong memberRequestId = counterLocalService.increment();\n\n\t\tMemberRequest memberRequest = memberRequestPersistence.create(\n\t\t\tmemberRequestId);\n\n\t\tmemberRequest.setGroupId(groupId);\n\t\tmemberRequest.setCompanyId(user.getCompanyId());\n\t\tmemberRequest.setUserId(userId);\n\t\tmemberRequest.setUserName(user.getFullName());\n\t\tmemberRequest.setCreateDate(now);\n\t\tmemberRequest.setModifiedDate(now);\n\t\tmemberRequest.setKey(PortalUUIDUtil.generate());\n\t\tmemberRequest.setReceiverUserId(receiverUserId);\n\t\tmemberRequest.setInvitedRoleId(invitedRoleId);\n\t\tmemberRequest.setInvitedTeamId(invitedTeamId);\n\t\tmemberRequest.setStatus(InviteMembersConstants.STATUS_PENDING);\n\n\t\tmemberRequestPersistence.update(memberRequest);\n\n\t\t// Email\n\n\t\ttry {\n\t\t\tsendEmail(receiverEmailAddress, memberRequest, serviceContext);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new SystemException(e);\n\t\t}\n\n\t\t// Notifications\n\n\t\tsendNotificationEvent(memberRequest);\n\n\t\treturn memberRequest;\n\t}","id":82969,"modified_method":"public MemberRequest addMemberRequest(\n\t\t\tlong userId, long groupId, long receiverUserId,\n\t\t\tString receiverEmailAddress, long invitedRoleId, long invitedTeamId,\n\t\t\tServiceContext serviceContext)\n\t\tthrows PortalException, SystemException {\n\n\t\t// Member request\n\n\t\tUser user = userLocalService.getUserById(userId);\n\n\t\tDate now = new Date();\n\n\t\ttry {\n\t\t\tUser receiverUser = userLocalService.getUserByEmailAddress(\n\t\t\t\tserviceContext.getCompanyId(), receiverEmailAddress);\n\t\t\t\n\t\t\treceiverUserId = receiverUser.getUserId();\n\t\t}\n\t\tcatch(Exception e) {\n\t\t}\n\n\t\tlong memberRequestId = counterLocalService.increment();\n\n\t\tMemberRequest memberRequest = memberRequestPersistence.create(\n\t\t\tmemberRequestId);\n\n\t\tmemberRequest.setGroupId(groupId);\n\t\tmemberRequest.setCompanyId(user.getCompanyId());\n\t\tmemberRequest.setUserId(userId);\n\t\tmemberRequest.setUserName(user.getFullName());\n\t\tmemberRequest.setCreateDate(now);\n\t\tmemberRequest.setModifiedDate(now);\n\t\tmemberRequest.setKey(PortalUUIDUtil.generate());\n\t\tmemberRequest.setReceiverUserId(receiverUserId);\n\t\tmemberRequest.setInvitedRoleId(invitedRoleId);\n\t\tmemberRequest.setInvitedTeamId(invitedTeamId);\n\t\tmemberRequest.setStatus(InviteMembersConstants.STATUS_PENDING);\n\n\t\tmemberRequestPersistence.update(memberRequest);\n\n\t\t// Email\n\n\t\ttry {\n\t\t\tsendEmail(receiverEmailAddress, memberRequest, serviceContext);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new SystemException(e);\n\t\t}\n\n\t\t// Notifications\n\n\t\tif (receiverUserId > 0) {\n\t\t\tsendNotificationEvent(memberRequest);\n\t\t}\n\n\t\treturn memberRequest;\n\t}","commit_id":"bb845e9c8bc014609b30368115e7b191b89de6a6","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"@Override\n\tpublic void doView(\n\t\t\tRenderRequest renderRequest, RenderResponse renderResponse)\n\t\tthrows IOException, PortletException {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)renderRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\ttry {\n\t\t\tif (themeDisplay.isSignedIn()) {\n\t\t\t\tHttpServletRequest request = PortalUtil.getHttpServletRequest(\n\t\t\t\t\trenderRequest);\n\n\t\t\t\tHttpSession session = request.getSession();\n\n\t\t\t\tString memberRequestKey = (String)session.getAttribute(\n\t\t\t\t\tWebKeys.MEMBER_REQUEST_KEY);\n\n\t\t\t\tif (Validator.isNotNull(memberRequestKey)) {\n\t\t\t\t\tMemberRequestLocalServiceUtil.updateMemberRequest(\n\t\t\t\t\t\tmemberRequestKey, themeDisplay.getUserId());\n\n\t\t\t\t\tsession.removeAttribute(WebKeys.MEMBER_REQUEST_KEY);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tList<SocialRequest> socialRequests =\n\t\t\t\tSocialRequestLocalServiceUtil.getReceiverUserRequests(\n\t\t\t\t\tthemeDisplay.getUserId(),\n\t\t\t\t\tSocialRequestConstants.STATUS_PENDING, QueryUtil.ALL_POS,\n\t\t\t\t\tQueryUtil.ALL_POS);\n\n\t\t\tList<MemberRequest> memberRequests =\n\t\t\t\tMemberRequestLocalServiceUtil.getReceiverStatusMemberRequest(\n\t\t\t\t\tthemeDisplay.getUserId(),\n\t\t\t\t\tInviteMembersConstants.STATUS_PENDING, QueryUtil.ALL_POS,\n\t\t\t\t\tQueryUtil.ALL_POS);\n\n\t\t\tif (socialRequests.isEmpty() && memberRequests.isEmpty()) {\n\t\t\t\trenderRequest.setAttribute(\n\t\t\t\t\tWebKeys.PORTLET_DECORATE, Boolean.FALSE);\n\t\t\t}\n\n\t\t\tinclude(viewTemplate, renderRequest, renderResponse);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tsuper.doView(renderRequest, renderResponse);\n\t\t}\n\t}","id":82970,"modified_method":"@Override\n\tpublic void doView(\n\t\t\tRenderRequest renderRequest, RenderResponse renderResponse)\n\t\tthrows IOException, PortletException {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)renderRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\ttry {\n\t\t\tList<SocialRequest> socialRequests =\n\t\t\t\tSocialRequestLocalServiceUtil.getReceiverUserRequests(\n\t\t\t\t\tthemeDisplay.getUserId(),\n\t\t\t\t\tSocialRequestConstants.STATUS_PENDING, QueryUtil.ALL_POS,\n\t\t\t\t\tQueryUtil.ALL_POS);\n\n\t\t\tList<MemberRequest> memberRequests =\n\t\t\t\tMemberRequestLocalServiceUtil.getReceiverStatusMemberRequest(\n\t\t\t\t\tthemeDisplay.getUserId(),\n\t\t\t\t\tInviteMembersConstants.STATUS_PENDING, QueryUtil.ALL_POS,\n\t\t\t\t\tQueryUtil.ALL_POS);\n\n\t\t\tif (socialRequests.isEmpty() && memberRequests.isEmpty()) {\n\t\t\t\trenderRequest.setAttribute(\n\t\t\t\t\tWebKeys.PORTLET_DECORATE, Boolean.FALSE);\n\t\t\t}\n\n\t\t\tinclude(viewTemplate, renderRequest, renderResponse);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tsuper.doView(renderRequest, renderResponse);\n\t\t}\n\t}","commit_id":"bb845e9c8bc014609b30368115e7b191b89de6a6","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public void deleteSocialRelation(\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tlong userId = ParamUtil.getLong(actionRequest, \"userId\");\n\t\tint type = ParamUtil.getInteger(actionRequest, \"type\");\n\n\t\tSocialRelationLocalServiceUtil.deleteRelation(\n\t\t\tthemeDisplay.getUserId(), userId, type);\n\t}","id":82971,"modified_method":"public void deleteSocialRelation(\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tlong[] userIds = getUserIds(actionRequest);\n\n\t\tint type = ParamUtil.getInteger(actionRequest, \"type\");\n\n\t\tfor (long userId : userIds) {\n\t\t\ttry {\n\t\t\t\tif (userId == themeDisplay.getUserId()) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tSocialRelationLocalServiceUtil.deleteRelation(\n\t\t\t\t\tthemeDisplay.getUserId(), userId, type);\n\t\t\t}\n\t\t\tcatch (PortalException pe) {\n\t\t\t}\n\t\t}\n\t}","commit_id":"a806d7c999d6ad4308a2cd2da0cfeb9fb4df586d","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public void getContacts(\n\t\t\tResourceRequest resourceRequest, ResourceResponse resourceResponse)\n\t\tthrows Exception {\n\n\t\tString keywords = ParamUtil.getString(resourceRequest, \"keywords\");\n\t\tint socialRelationType = ParamUtil.getInteger(\n\t\t\tresourceRequest, \"socialRelationType\");\n\t\tint start = ParamUtil.getInteger(resourceRequest, \"start\");\n\t\tint end = ParamUtil.getInteger(resourceRequest, \"end\");\n\n\t\tJSONObject jsonObject = JSONFactoryUtil.createJSONObject();\n\n\t\tJSONObject optionsJSONObject = JSONFactoryUtil.createJSONObject();\n\n\t\toptionsJSONObject.put(\"end\", end);\n\t\toptionsJSONObject.put(\"keywords\", keywords);\n\t\toptionsJSONObject.put(\"socialRelationType\", socialRelationType);\n\t\toptionsJSONObject.put(\"start\", start);\n\n\t\tjsonObject.put(\"options\", optionsJSONObject);\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)resourceRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tGroup group = themeDisplay.getScopeGroup();\n\t\tLayout layout = themeDisplay.getLayout();\n\n\t\tLinkedHashMap<String, Object> params =\n\t\t\tnew LinkedHashMap<String, Object>();\n\n\t\tif (group.isUser() && layout.isPublicLayout()) {\n\t\t\tparams.put(\n\t\t\t\t\"socialRelation\",\n\t\t\t\tnew Long[] {group.getClassPK()});\n\t\t}\n\t\telse if (socialRelationType != 0) {\n\t\t\tparams.put(\n\t\t\t\t\"socialRelationType\",\n\t\t\t\tnew Long[] {\n\t\t\t\t\tthemeDisplay.getUserId(), new Long(socialRelationType)\n\t\t\t\t});\n\t\t}\n\n\t\tList<User> users = UserLocalServiceUtil.search(\n\t\t\tthemeDisplay.getCompanyId(), keywords,\n\t\t\tWorkflowConstants.STATUS_APPROVED, params, start, end,\n\t\t\tnew UserLastNameComparator(true));\n\n\t\tint usersCount = UserLocalServiceUtil.searchCount(\n\t\t\tthemeDisplay.getCompanyId(), keywords,\n\t\t\tWorkflowConstants.STATUS_APPROVED, params);\n\n\t\tjsonObject.put(\"count\", usersCount);\n\n\t\tLiferayPortletResponse liferayPortletResponse =\n\t\t\t(LiferayPortletResponse)resourceResponse;\n\n\t\tJSONArray jsonArray = JSONFactoryUtil.createJSONArray();\n\n\t\tfor (User user : users) {\n\t\t\tJSONObject userJSONObject = JSONFactoryUtil.createJSONObject();\n\n\t\t\tuserJSONObject.put(\"emailAddress\", user.getEmailAddress());\n\t\t\tuserJSONObject.put(\"jobTitle\", user.getJobTitle());\n\t\t\tuserJSONObject.put(\"firstName\", user.getFirstName());\n\t\t\tuserJSONObject.put(\"lastName\", user.getLastName());\n\t\t\tuserJSONObject.put(\n\t\t\t\t\"portraitURL\", user.getPortraitURL(themeDisplay));\n\n\t\t\tPortletURL viewSummaryURL =\n\t\t\t\tliferayPortletResponse.createRenderURL();\n\n\t\t\tviewSummaryURL.setWindowState(LiferayWindowState.EXCLUSIVE);\n\n\t\t\tviewSummaryURL.setParameter(\n\t\t\t\t\"mvcPath\", \"/contacts_center/view_user.jsp\");\n\t\t\tviewSummaryURL.setParameter(\n\t\t\t\t\"userId\", String.valueOf(user.getUserId()));\n\n\t\t\tuserJSONObject.put(\"viewSummaryURL\", viewSummaryURL.toString());\n\n\t\t\tjsonArray.put(userJSONObject);\n\t\t}\n\n\t\tjsonObject.put(\"users\", jsonArray);\n\n\t\twriteJSON(resourceRequest, resourceResponse, jsonObject);\n\t}","id":82972,"modified_method":"public void getContacts(\n\t\t\tResourceRequest resourceRequest, ResourceResponse resourceResponse)\n\t\tthrows Exception {\n\n\t\tString keywords = ParamUtil.getString(resourceRequest, \"keywords\");\n\t\tint socialRelationType = ParamUtil.getInteger(\n\t\t\tresourceRequest, \"socialRelationType\");\n\t\tint start = ParamUtil.getInteger(resourceRequest, \"start\");\n\t\tint end = ParamUtil.getInteger(resourceRequest, \"end\");\n\n\t\tJSONObject jsonObject = JSONFactoryUtil.createJSONObject();\n\n\t\tJSONObject optionsJSONObject = JSONFactoryUtil.createJSONObject();\n\n\t\toptionsJSONObject.put(\"end\", end);\n\t\toptionsJSONObject.put(\"keywords\", keywords);\n\t\toptionsJSONObject.put(\"socialRelationType\", socialRelationType);\n\t\toptionsJSONObject.put(\"start\", start);\n\n\t\tjsonObject.put(\"options\", optionsJSONObject);\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)resourceRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tGroup group = themeDisplay.getScopeGroup();\n\t\tLayout layout = themeDisplay.getLayout();\n\n\t\tLinkedHashMap<String, Object> params =\n\t\t\tnew LinkedHashMap<String, Object>();\n\n\t\tif (group.isUser() && layout.isPublicLayout()) {\n\t\t\tparams.put(\n\t\t\t\t\"socialRelation\",\n\t\t\t\tnew Long[] {group.getClassPK()});\n\t\t}\n\t\telse if (socialRelationType != 0) {\n\t\t\tparams.put(\n\t\t\t\t\"socialRelationType\",\n\t\t\t\tnew Long[] {\n\t\t\t\t\tthemeDisplay.getUserId(), new Long(socialRelationType)\n\t\t\t\t});\n\t\t}\n\n\t\tList<User> users = UserLocalServiceUtil.search(\n\t\t\tthemeDisplay.getCompanyId(), keywords,\n\t\t\tWorkflowConstants.STATUS_APPROVED, params, start, end,\n\t\t\tnew UserLastNameComparator(true));\n\n\t\tint usersCount = UserLocalServiceUtil.searchCount(\n\t\t\tthemeDisplay.getCompanyId(), keywords,\n\t\t\tWorkflowConstants.STATUS_APPROVED, params);\n\n\t\tjsonObject.put(\"count\", usersCount);\n\n\t\tLiferayPortletResponse liferayPortletResponse =\n\t\t\t(LiferayPortletResponse)resourceResponse;\n\n\t\tJSONArray jsonArray = JSONFactoryUtil.createJSONArray();\n\n\t\tfor (User user : users) {\n\t\t\tJSONObject userJSONObject = JSONFactoryUtil.createJSONObject();\n\n\t\t\tuserJSONObject.put(\"emailAddress\", user.getEmailAddress());\n\t\t\tuserJSONObject.put(\"jobTitle\", user.getJobTitle());\n\t\t\tuserJSONObject.put(\"firstName\", user.getFirstName());\n\t\t\tuserJSONObject.put(\"fullName\", user.getFullName());\n\t\t\tuserJSONObject.put(\"lastName\", user.getLastName());\n\t\t\tuserJSONObject.put(\n\t\t\t\t\"portraitURL\", user.getPortraitURL(themeDisplay));\n\t\t\tuserJSONObject.put(\"userId\", String.valueOf(user.getUserId()));\n\n\t\t\tPortletURL viewSummaryURL =\n\t\t\t\tliferayPortletResponse.createRenderURL();\n\n\t\t\tviewSummaryURL.setWindowState(LiferayWindowState.EXCLUSIVE);\n\n\t\t\tviewSummaryURL.setParameter(\n\t\t\t\t\"mvcPath\", \"/contacts_center/view_resources.jsp\");\n\t\t\tviewSummaryURL.setParameter(\n\t\t\t\t\"userId\", String.valueOf(user.getUserId()));\n\n\t\t\tuserJSONObject.put(\"viewSummaryURL\", viewSummaryURL.toString());\n\n\t\t\tjsonArray.put(userJSONObject);\n\t\t}\n\n\t\tjsonObject.put(\"users\", jsonArray);\n\n\t\twriteJSON(resourceRequest, resourceResponse, jsonObject);\n\t}","commit_id":"a806d7c999d6ad4308a2cd2da0cfeb9fb4df586d","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public void requestSocialRelation(\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tlong userId = ParamUtil.getLong(actionRequest, \"userId\");\n\t\tint type = ParamUtil.getInteger(actionRequest, \"type\");\n\n\t\tif (SocialRelationLocalServiceUtil.hasRelation(\n\t\t\t\tuserId, themeDisplay.getUserId(),\n\t\t\t\tSocialRelationConstants.TYPE_UNI_ENEMY)) {\n\n\t\t\treturn;\n\t\t}\n\n\t\tSocialRequest socialRequest = SocialRequestLocalServiceUtil.addRequest(\n\t\t\tthemeDisplay.getUserId(), 0, User.class.getName(),\n\t\t\tthemeDisplay.getUserId(), type, StringPool.BLANK, userId);\n\n\t\tsendNotificationEvent(socialRequest, themeDisplay);\n\t}","id":82973,"modified_method":"public void requestSocialRelation(\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tlong[] userIds = getUserIds(actionRequest);\n\n\t\tint type = ParamUtil.getInteger(actionRequest, \"type\");\n\n\t\tfor (long userId : userIds) {\n\t\t\ttry {\n\t\t\t\tif (userId == themeDisplay.getUserId()) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (SocialRelationLocalServiceUtil.hasRelation(\n\t\t\t\t\t\tuserId, themeDisplay.getUserId(),\n\t\t\t\t\t\tSocialRelationConstants.TYPE_UNI_ENEMY)) {\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tSocialRequest socialRequest =\n\t\t\t\t\tSocialRequestLocalServiceUtil.addRequest(\n\t\t\t\t\t\tthemeDisplay.getUserId(), 0, User.class.getName(),\n\t\t\t\t\t\tthemeDisplay.getUserId(), type, StringPool.BLANK,\n\t\t\t\t\t\tuserId);\n\n\t\t\t\tsendNotificationEvent(socialRequest, themeDisplay);\n\t\t\t}\n\t\t\tcatch (PortalException pe) {\n\t\t\t}\n\t\t}\n\t}","commit_id":"a806d7c999d6ad4308a2cd2da0cfeb9fb4df586d","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public void addSocialRelation(\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tlong userId = ParamUtil.getLong(actionRequest, \"userId\");\n\t\tint type = ParamUtil.getInteger(actionRequest, \"type\");\n\n\t\tboolean blocked = SocialRelationLocalServiceUtil.hasRelation(\n\t\t\tuserId, themeDisplay.getUserId(),\n\t\t\tSocialRelationConstants.TYPE_UNI_ENEMY);\n\n\t\tif (type == SocialRelationConstants.TYPE_UNI_ENEMY) {\n\t\t\tSocialRelationLocalServiceUtil.deleteRelations(\n\t\t\t\tthemeDisplay.getUserId(), userId);\n\t\t}\n\t\telse if (blocked) {\n\t\t\treturn;\n\t\t}\n\n\t\tSocialRelationLocalServiceUtil.addRelation(\n\t\t\tthemeDisplay.getUserId(), userId, type);\n\n\t\tif (blocked) {\n\t\t\tSocialRelationLocalServiceUtil.addRelation(\n\t\t\t\tuserId, themeDisplay.getUserId(), type);\n\t\t}\n\t}","id":82974,"modified_method":"public void addSocialRelation(\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tlong[] userIds = getUserIds(actionRequest);\n\n\t\tint type = ParamUtil.getInteger(actionRequest, \"type\");\n\n\t\tfor (long userId : userIds) {\n\t\t\ttry {\n\t\t\t\tif (userId == themeDisplay.getUserId()) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tboolean blocked = SocialRelationLocalServiceUtil.hasRelation(\n\t\t\t\t\tuserId, themeDisplay.getUserId(),\n\t\t\t\t\tSocialRelationConstants.TYPE_UNI_ENEMY);\n\t\n\t\t\t\tif (type == SocialRelationConstants.TYPE_UNI_ENEMY) {\n\t\t\t\t\tSocialRelationLocalServiceUtil.deleteRelations(\n\t\t\t\t\t\tthemeDisplay.getUserId(), userId);\n\t\t\t\t}\n\t\t\t\telse if (blocked) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\n\t\t\t\tSocialRelationLocalServiceUtil.addRelation(\n\t\t\t\t\tthemeDisplay.getUserId(), userId, type);\n\t\n\t\t\t\tif (blocked) {\n\t\t\t\t\tSocialRelationLocalServiceUtil.addRelation(\n\t\t\t\t\t\tuserId, themeDisplay.getUserId(), type);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (PortalException pe) {\n\t\t\t}\n\t\t}\n\t}","commit_id":"a806d7c999d6ad4308a2cd2da0cfeb9fb4df586d","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"@Override\n\tpublic void serveResource(\n\t\t\tResourceRequest resourceRequest, ResourceResponse resourceResponse)\n\t\tthrows PortletException {\n\n\t\ttry {\n\t\t\tString id = resourceRequest.getResourceID();\n\n\t\t\tif (id.equals(\"exportVCard\")) {\n\t\t\t\texportVCard(resourceRequest, resourceResponse);\n\t\t\t}\n\t\t\telse if (id.equals(\"exportVCards\")) {\n\t\t\t\texportVCards(resourceRequest, resourceResponse);\n\t\t\t}\n\t\t\telse if (id.equals(\"getContacts\")) {\n\t\t\t\tgetContacts(resourceRequest, resourceResponse);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsuper.serveResource(resourceRequest, resourceResponse);\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new PortletException(e);\n\t\t}\n\t}","id":82975,"modified_method":"@Override\n\tpublic void serveResource(\n\t\t\tResourceRequest resourceRequest, ResourceResponse resourceResponse)\n\t\tthrows PortletException {\n\n\t\ttry {\n\t\t\tString id = resourceRequest.getResourceID();\n\n\t\t\tif (id.equals(\"exportVCard\")) {\n\t\t\t\texportVCard(resourceRequest, resourceResponse);\n\t\t\t}\n\t\t\telse if (id.equals(\"exportVCards\")) {\n\t\t\t\texportVCards(resourceRequest, resourceResponse);\n\t\t\t}\n\t\t\telse if (id.equals(\"getContact\")) {\n\t\t\t\tgetContact(resourceRequest, resourceResponse);\n\t\t\t}\n\t\t\telse if (id.equals(\"getContacts\")) {\n\t\t\t\tgetContacts(resourceRequest, resourceResponse);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsuper.serveResource(resourceRequest, resourceResponse);\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new PortletException(e);\n\t\t}\n\t}","commit_id":"a806d7c999d6ad4308a2cd2da0cfeb9fb4df586d","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"/**\n     * Adds a new selection cell.<p>\n     * \n     * @param value the value of the select option \n     * @param text the text to be displayed for the select option \n     */\n    public void addOption(String value, String text) {\n\n        CmsSelectCell cell = new CmsSelectCell(value, text);\n        m_valueLabels.put(value, text);\n        m_selector.add(cell);\n        if (m_first) {\n            selectValue(value);\n            m_firstValue = value;\n        }\n        m_first = false;\n\n    }","id":82976,"modified_method":"/**\n     * Adds a new selection cell.<p>\n     * \n     * @param value the value of the select option \n     * @param text the text to be displayed for the select option \n     */\n    public void addOption(String value, String text) {\n\n        CmsSelectCell cell = new CmsSelectCell(value, text);\n        boolean first = m_valueLabels.isEmpty();\n        m_valueLabels.put(value, text);\n        m_selector.add(cell);\n        if (first) {\n            selectValue(value);\n            m_firstValue = value;\n        }\n    }","commit_id":"b5792a51f7375ada4e2ef04593f4c1550f809a7f","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Creates a new select box.<p>\n     */\n    public CmsSelectBox() {\n\n        initWidget(uiBinder.createAndBindUi(this));\n        m_openerLabel.addStyleName(CSS.selectBoxOpener());\n        m_selectBoxState = new CmsStyleVariable(m_opener, m_selector);\n        m_selectBoxState.setValue(CSS.selectBoxClosed());\n\n        m_opener.addStyleName(CSS.selectBoxSelected());\n        m_openClose = new CmsImageButton(CmsImageButton.ICON.triangle_1_e, CmsImageButton.ICON.triangle_1_s, false);\n        m_openClose.addStyleName(CSS.selectIcon());\n        m_panel.add(m_openClose);\n        m_openClose.addClickHandler(new ClickHandler() {\n\n            /**\n             * @see com.google.gwt.event.dom.client.ClickHandler#onClick(com.google.gwt.event.dom.client.ClickEvent)\n             */\n            public void onClick(ClickEvent event) {\n\n                if (m_popup.isShowing()) {\n                    close();\n                } else {\n                    open();\n                }\n            }\n        });\n\n        m_popup.setWidget(m_selector);\n        m_popup.addStyleName(CSS.selectorPopup());\n\n        m_selector.setStyleName(CSS.selectBoxSelector());\n        m_popup.addCloseHandler(new CloseHandler<PopupPanel>() {\n\n            /**\n             * @see CloseHandler#onClose(CloseEvent)\n             */\n            public void onClose(CloseEvent<PopupPanel> e) {\n\n                close();\n            }\n        });\n    }","id":82977,"modified_method":"/**\n     * Creates a new select box.<p>\n     */\n    public CmsSelectBox() {\n\n        m_panel = uiBinder.createAndBindUi(this);\n        initWidget(m_panel);\n        m_openerLabel.addStyleName(CSS.selectBoxOpener());\n        m_selectBoxState = new CmsStyleVariable(m_opener, m_selector);\n        m_selectBoxState.setValue(CSS.selectBoxClosed());\n\n        m_opener.addStyleName(CSS.selectBoxSelected());\n        m_openClose = new CmsImageButton(CmsImageButton.ICON.triangle_1_e, CmsImageButton.ICON.triangle_1_s, false);\n        m_openClose.addStyleName(CSS.selectIcon());\n        m_panel.add(m_openClose);\n        m_openClose.addClickHandler(new ClickHandler() {\n\n            /**\n             * @see com.google.gwt.event.dom.client.ClickHandler#onClick(com.google.gwt.event.dom.client.ClickEvent)\n             */\n            public void onClick(ClickEvent event) {\n\n                if (m_popup.isShowing()) {\n                    close();\n                } else {\n                    open();\n                }\n            }\n        });\n\n        m_popup.setWidget(m_selector);\n        m_popup.addStyleName(CSS.selectorPopup());\n\n        m_selector.setStyleName(CSS.selectBoxSelector());\n        m_popup.addCloseHandler(new CloseHandler<PopupPanel>() {\n\n            /**\n             * @see CloseHandler#onClose(CloseEvent)\n             */\n            public void onClose(CloseEvent<PopupPanel> e) {\n\n                close();\n            }\n        });\n    }","commit_id":"b5792a51f7375ada4e2ef04593f4c1550f809a7f","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Constructs a new select box from a list of key-value pairs.<p>\n     * \n     * The first component of each pair is the option value, the second is the text to be displayed for the option value.<p>\n     * \n     * @param items the items\n     */\n    public CmsSelectBox(List<CmsPair<String, String>> items) {\n\n        this();\n        for (CmsPair<String, String> item : items) {\n            addOption(item.getFirst(), item.getSecond());\n        }\n    }","id":82978,"modified_method":"/**\n     * Constructs a new select box from a list of key-value pairs.<p>\n     * \n     * The first component of each pair is the option value, the second is the text to be displayed for the option value.<p>\n     * \n     * @param items the items\n     */\n    public CmsSelectBox(List<CmsPair<String, String>> items) {\n\n        this();\n        setItems(items);\n    }","commit_id":"b5792a51f7375ada4e2ef04593f4c1550f809a7f","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Displays the resource info.<p>\n     * \n     * @param info the resource info\n     */\n    void displayResourceInfo(CmsResultItemBean info) {\n\n        m_uploadTarget = CmsResource.getFolderPath(info.getPath());\n        m_buttonHandler.setTargetFolder(m_uploadTarget);\n        m_uploadButton.setTitle(Messages.get().key(Messages.GUI_GALLERY_UPLOAD_TITLE_1, m_uploadTarget));\n        if (m_hasImage) {\n            CmsCroppingParamBean cropping = CmsCroppingParamBean.parseImagePath(getFormValueAsString());\n            String imagePath = info.getViewLink();\n            String dimension = info.getDimension();\n            int marginTop = 0;\n            if (cropping.isCropped()) {\n                dimension = cropping.getTargetWidth() + \" x \" + cropping.getTargetHeight();\n                String[] dimensions = dimension.split(\"x\");\n                cropping.setOrgWidth(CmsClientStringUtil.parseInt(dimensions[0].trim()));\n                cropping.setOrgHeight(CmsClientStringUtil.parseInt(dimensions[1].trim()));\n                CmsCroppingParamBean restricted = cropping.getRestrictedSizeParam(110, 165);\n                imagePath += \"?\" + restricted;\n                marginTop = (110 - restricted.getTargetHeight()) / 2;\n            } else {\n                imagePath += \"?__scale=w:165,h:110,t:1,c:white,r:2\";\n            }\n            Element image = DOM.createImg();\n            image.setAttribute(\"src\", imagePath);\n            image.getStyle().setMarginTop(marginTop, Unit.PX);\n            m_imagePreview.setInnerHTML(\"\");\n            m_imagePreview.appendChild(image);\n            m_resourceInfoPanel.add(new CmsImageInfo(info, dimension));\n        } else {\n            CmsListItemWidget widget = new CmsListItemWidget(info);\n            OpenCloseHandler handler = new OpenCloseHandler();\n            widget.addCloseHandler(handler);\n            widget.addOpenHandler(handler);\n            widget.setIcon(CmsIconUtil.getResourceIconClasses(info.getType(), info.getPath(), false));\n            m_resourceInfoPanel.add(widget);\n            int width = m_resourceInfoPanel.getOffsetWidth();\n            if (width > 0) {\n                widget.truncate(\"STANDARD\", width);\n            }\n        }\n        fireResize();\n    }","id":82979,"modified_method":"/**\n     * Displays the resource info.<p>\n     * \n     * @param info the resource info\n     */\n    void displayResourceInfo(CmsResultItemBean info) {\n\n        m_uploadTarget = CmsResource.getFolderPath(info.getPath());\n        m_buttonHandler.setTargetFolder(m_uploadTarget);\n        m_uploadButton.setTitle(Messages.get().key(Messages.GUI_GALLERY_UPLOAD_TITLE_1, m_uploadTarget));\n        if (m_hasImage) {\n            setImagePreview(info.getViewLink());\n            m_resourceInfoPanel.add(new CmsImageInfo(info, info.getDimension()));\n        } else {\n            CmsListItemWidget widget = new CmsListItemWidget(info);\n            OpenCloseHandler handler = new OpenCloseHandler();\n            widget.addCloseHandler(handler);\n            widget.addOpenHandler(handler);\n            widget.setIcon(CmsIconUtil.getResourceIconClasses(info.getType(), info.getPath(), false));\n            m_resourceInfoPanel.add(widget);\n            int width = m_resourceInfoPanel.getOffsetWidth();\n            if (width > 0) {\n                widget.truncate(\"STANDARD\", width);\n            }\n        }\n        fireResize();\n    }","commit_id":"238c8531802dc4068c3d4cf0e772f5c5fc80c9d6","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Internal method which opens the gallery dialog.<p>\n     */\n    protected void openGalleryDialog() {\n\n        if (m_popup == null) {\n            m_popup = createPopup();\n            m_popup.center();\n        } else {\n            m_popup.searchElement(getFormValueAsString());\n        }\n    }","id":82980,"modified_method":"/**\n     * Internal method which opens the gallery dialog.<p>\n     */\n    protected void openGalleryDialog() {\n\n        if (m_popup == null) {\n            m_popup = createPopup();\n            m_popup.center();\n        } else {\n            m_popup.searchElement(getCurrentElement());\n        }\n    }","commit_id":"238c8531802dc4068c3d4cf0e772f5c5fc80c9d6","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * @see org.opencms.gwt.client.ui.input.I_CmsFormWidget#getFormValue()\n     */\n    public Object getFormValue() {\n\n        return m_textbox.getValue();\n    }","id":82981,"modified_method":"/**\n     * @see org.opencms.gwt.client.ui.input.I_CmsFormWidget#getFormValue()\n     */\n    @Override\n    public Object getFormValue() {\n\n        return getFormValueAsString();\n    }","commit_id":"238c8531802dc4068c3d4cf0e772f5c5fc80c9d6","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * @see org.opencms.gwt.client.ui.input.I_CmsFormWidget#reset()\n     */\n    public void reset() {\n\n        m_textbox.setValue(\"\");\n    }","id":82982,"modified_method":"/**\n     * @see org.opencms.gwt.client.ui.input.I_CmsFormWidget#reset()\n     */\n    @Override\n    public void reset() {\n\n        setFormValueAsString(\"\");\n    }","commit_id":"238c8531802dc4068c3d4cf0e772f5c5fc80c9d6","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * On text box change.<p>\n     * \n     * @param event the event\n     */\n    @UiHandler(\"m_textbox\")\n    void onTextBoxChange(ValueChangeEvent<String> event) {\n\n        fireChange(false);\n        if (m_infoTimer != null) {\n            m_infoTimer.cancel();\n            m_infoTimer = null;\n        }\n        m_infoTimer = new InfoTimer(event.getValue());\n        m_infoTimer.schedule(300);\n    }","id":82983,"modified_method":"/**\n     * On text box change.<p>\n     * \n     * @param event the event\n     */\n    @UiHandler(\"m_textbox\")\n    void onTextBoxChange(ValueChangeEvent<String> event) {\n\n        fireChange(false);\n        if (m_infoTimer != null) {\n            m_infoTimer.cancel();\n            m_infoTimer = null;\n        }\n        m_infoTimer = new Timer() {\n\n            @Override\n            public void run() {\n\n                updateResourceInfo(getFormValueAsString());\n                clearInfoTimer();\n            }\n        };\n        m_infoTimer.schedule(300);\n    }","commit_id":"238c8531802dc4068c3d4cf0e772f5c5fc80c9d6","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/** \n     * Constructs a new gallery widget.<p>\n     * \n     * @param configuration the gallery configuration \n     */\n    public CmsGalleryField(I_CmsGalleryConfiguration configuration) {\n\n        m_buttonHandler = new CmsDialogUploadButtonHandler(new Supplier<I_CmsUploadContext>() {\n\n            public I_CmsUploadContext get() {\n\n                return new I_CmsUploadContext() {\n\n                    public void onUploadFinished(Collection<CmsFileInfo> uploadedFiles) {\n\n                        if ((uploadedFiles != null) && !uploadedFiles.isEmpty()) {\n                            setValue(m_uploadTarget + uploadedFiles.iterator().next().getFileName(), true);\n                        }\n                    }\n\n                };\n            }\n        });\n        m_buttonHandler.setIsTargetRootPath(false);\n        m_uploadButton = new CmsUploadButton(m_buttonHandler);\n        m_uploadButton.setText(null);\n        m_uploadButton.setButtonStyle(ButtonStyle.TRANSPARENT, null);\n        m_uploadButton.setImageClass(I_CmsImageBundle.INSTANCE.style().uploadIcon());\n        initWidget(uibinder.createAndBindUi(this));\n        this.addUploadZone(m_uploadDropZone);\n        m_configuration = configuration;\n        I_CmsLayoutBundle.INSTANCE.galleryFieldCss().ensureInjected();\n        m_opener.setButtonStyle(ButtonStyle.TRANSPARENT, null);\n        m_opener.setImageClass(I_CmsImageBundle.INSTANCE.style().popupIcon());\n    }","id":82984,"modified_method":"/** \n     * Constructs a new gallery widget.<p>\n     * \n     * @param configuration the gallery configuration \n     */\n    public CmsGalleryField(I_CmsGalleryConfiguration configuration) {\n\n        m_buttonHandler = new CmsDialogUploadButtonHandler(new Supplier<I_CmsUploadContext>() {\n\n            @Override\n            public I_CmsUploadContext get() {\n\n                return new I_CmsUploadContext() {\n\n                    @Override\n                    public void onUploadFinished(Collection<CmsFileInfo> uploadedFiles) {\n\n                        if ((uploadedFiles != null) && !uploadedFiles.isEmpty()) {\n                            setValue(m_uploadTarget + uploadedFiles.iterator().next().getFileName(), true);\n                        }\n                    }\n\n                };\n            }\n        });\n        m_buttonHandler.setIsTargetRootPath(false);\n        m_uploadButton = new CmsUploadButton(m_buttonHandler);\n        m_uploadButton.setText(null);\n        m_uploadButton.setButtonStyle(ButtonStyle.TRANSPARENT, null);\n        m_uploadButton.setImageClass(I_CmsImageBundle.INSTANCE.style().uploadIcon());\n        m_main = uibinder.createAndBindUi(this);\n        initWidget(m_main);\n        initUploadZone(m_uploadDropZone);\n        m_configuration = configuration;\n        I_CmsLayoutBundle.INSTANCE.galleryFieldCss().ensureInjected();\n        m_opener.setButtonStyle(ButtonStyle.TRANSPARENT, null);\n        m_opener.setImageClass(I_CmsImageBundle.INSTANCE.style().popupIcon());\n    }","commit_id":"238c8531802dc4068c3d4cf0e772f5c5fc80c9d6","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Creates the gallery pop-up.<p>\n     * \n     * @return the gallery pop-up\n     */\n    private CmsGalleryPopup createPopup() {\n\n        I_CmsGalleryWidgetHandler handler = new I_CmsGalleryWidgetHandler() {\n\n            public void setWidgetValue(String resourcePath, CmsUUID structureId, CmsCroppingParamBean croppingParameter) {\n\n                String path = resourcePath;\n                // in case of an image check the cropping parameter\n                if ((croppingParameter != null) && (croppingParameter.isCropped() || croppingParameter.isScaled())) {\n                    path += \"?\" + croppingParameter.toString();\n                }\n                setValue(path, true);\n                m_popup.hide();\n            }\n        };\n        m_configuration.setCurrentElement(getFormValueAsString());\n        return new CmsGalleryPopup(handler, m_configuration);\n    }","id":82985,"modified_method":"/**\n     * Creates the gallery pop-up.<p>\n     * \n     * @return the gallery pop-up\n     */\n    private CmsGalleryPopup createPopup() {\n\n        I_CmsGalleryWidgetHandler handler = new I_CmsGalleryWidgetHandler() {\n\n            @Override\n            public void setWidgetValue(String resourcePath, CmsUUID structureId, CmsCroppingParamBean croppingParameter) {\n\n                setValueFromGallery(resourcePath, structureId, croppingParameter);\n            }\n        };\n        m_configuration.setCurrentElement(getCurrentElement());\n        return new CmsGalleryPopup(handler, m_configuration);\n    }","commit_id":"238c8531802dc4068c3d4cf0e772f5c5fc80c9d6","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * @see com.google.gwt.event.dom.client.HasFocusHandlers#addFocusHandler(com.google.gwt.event.dom.client.FocusHandler)\n     */\n    public HandlerRegistration addFocusHandler(FocusHandler handler) {\n\n        return m_textbox.addFocusHandler(handler);\n    }","id":82986,"modified_method":"/**\n     * @see com.google.gwt.event.dom.client.HasFocusHandlers#addFocusHandler(com.google.gwt.event.dom.client.FocusHandler)\n     */\n    public HandlerRegistration addFocusHandler(FocusHandler handler) {\n\n        return addDomHandler(handler, FocusEvent.getType());\n    }","commit_id":"238c8531802dc4068c3d4cf0e772f5c5fc80c9d6","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Updates the resource info.<p>\n     * \n     * @param path the resource path\n     */\n    void updateResourceInfo(final String path) {\n\n        m_resourceInfoPanel.clear();\n        if (CmsStringUtil.isEmptyOrWhitespaceOnly(path)) {\n            m_resourceInfoPanel.setVisible(false);\n            if (m_hasImage) {\n                removeStyleName(I_CmsLayoutBundle.INSTANCE.galleryFieldCss().hasImage());\n            }\n        } else {\n            m_resourceInfoPanel.getElement().getStyle().clearDisplay();\n            if (m_hasImage) {\n                addStyleName(I_CmsLayoutBundle.INSTANCE.galleryFieldCss().hasImage());\n            }\n            CmsRpcAction<CmsResultItemBean> action = new CmsRpcAction<CmsResultItemBean>() {\n\n                @Override\n                public void execute() {\n\n                    getGalleryService().getInfoForResource(path, m_configuration.getLocale(), this);\n                }\n\n                @Override\n                protected void onResponse(CmsResultItemBean result) {\n\n                    displayResourceInfo(result);\n                }\n            };\n            action.execute();\n        }\n        fireResize();\n    }","id":82987,"modified_method":"/**\n     * Updates the resource info.<p>\n     * \n     * @param path the resource path\n     */\n    void updateResourceInfo(final String path) {\n\n        m_resourceInfoPanel.clear();\n        if (CmsStringUtil.isEmptyOrWhitespaceOnly(path)) {\n            m_resourceInfoPanel.setVisible(false);\n            if (m_hasImage) {\n                removeStyleName(I_CmsLayoutBundle.INSTANCE.galleryFieldCss().hasImage());\n                m_imagePreview.setInnerHTML(\"\");\n            }\n        } else {\n            m_resourceInfoPanel.getElement().getStyle().clearDisplay();\n            if (m_hasImage) {\n                addStyleName(I_CmsLayoutBundle.INSTANCE.galleryFieldCss().hasImage());\n            }\n            CmsRpcAction<CmsResultItemBean> action = new CmsRpcAction<CmsResultItemBean>() {\n\n                @Override\n                public void execute() {\n\n                    getGalleryService().getInfoForResource(path, m_configuration.getLocale(), this);\n                }\n\n                @Override\n                protected void onResponse(CmsResultItemBean result) {\n\n                    displayResourceInfo(result);\n                }\n            };\n            action.execute();\n        }\n        fireResize();\n    }","commit_id":"238c8531802dc4068c3d4cf0e772f5c5fc80c9d6","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Initializes this class.<p>\n     */\n    public static void initClass() {\n\n        // registers a factory for creating new instances of this widget\n        CmsWidgetFactoryRegistry.instance().registerFactory(WIDGET_TYPE, new I_CmsFormWidgetFactory() {\n\n            /**\n             * @see org.opencms.gwt.client.ui.input.form.I_CmsFormWidgetFactory#createWidget(java.util.Map)\n             */\n            public I_CmsFormWidget createWidget(Map<String, String> widgetParams) {\n\n                CmsGalleryConfigurationJSO conf = CmsGalleryConfigurationJSO.parseConfiguration(widgetParams.get(\"configuration\"));\n                CmsGalleryField galleryField = new CmsGalleryField(conf);\n                return galleryField;\n            }\n        });\n    }","id":82988,"modified_method":"/**\n     * Initializes this class.<p>\n     */\n    public static void initClass() {\n\n        // registers a factory for creating new instances of this widget\n        CmsWidgetFactoryRegistry.instance().registerFactory(WIDGET_TYPE, new I_CmsFormWidgetFactory() {\n\n            /**\n             * @see org.opencms.gwt.client.ui.input.form.I_CmsFormWidgetFactory#createWidget(java.util.Map)\n             */\n            @Override\n            public I_CmsFormWidget createWidget(Map<String, String> widgetParams) {\n\n                CmsGalleryConfigurationJSO conf = CmsGalleryConfigurationJSO.parseConfiguration(widgetParams.get(\"configuration\"));\n                CmsGalleryField galleryField = new CmsGalleryField(conf);\n                return galleryField;\n            }\n        });\n    }","commit_id":"238c8531802dc4068c3d4cf0e772f5c5fc80c9d6","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Adds the upload drop zone event handlers.<p>\n     * \n     * @param element the drop zone element\n     */\n    private native void addUploadZone(JavaScriptObject element)/*-{\n                                                                                                   \n                                                                                                   var self=this;\n\n                                                                                                   function dragover(event) {\n                                                                                                   event.stopPropagation();\n                                                                                                   event.preventDefault();\n                                                                                                   self.@org.opencms.ade.galleries.client.ui.CmsGalleryField::onDragOver()();\n                                                                                                   }\n\n                                                                                                   function dragleave(event) {\n                                                                                                   event.stopPropagation();\n                                                                                                   event.preventDefault();\n                                                                                                  self.@org.opencms.ade.galleries.client.ui.CmsGalleryField::onDragOut()();\n                                                                                                   }\n\n                                                                                                   function drop(event) {\n                                                                                                   event.preventDefault();\n                                                                                                   var dt = event.dataTransfer;\n                                                                                                   var files = dt.files;\n                                                                                                   self.@org.opencms.ade.galleries.client.ui.CmsGalleryField::onDragOut()();\n                                                                                                   self.@org.opencms.ade.galleries.client.ui.CmsGalleryField::openUploadWithFiles(Lcom/google/gwt/core/client/JavaScriptObject;)(files);\n                                                                                                   }\n\n                                                                                                   element.addEventListener(\"dragover\", dragover, false);\n                                                                                                   element.addEventListener(\"dragexit\", dragleave, false);\n                                                                                                   element.addEventListener(\"dragleave\", dragleave, false);\n                                                                                                   element.addEventListener(\"dragend\", dragleave, false);\n                                                                                                   element.addEventListener(\"drop\", drop, false);\n\n                                                                                                   }-*/;","id":82989,"modified_method":"/**\n     * Initializes the upload drop zone event handlers.<p>\n     * \n     * @param element the drop zone element\n     */\n    private native void initUploadZone(JavaScriptObject element)/*-{\n                                                                                                   \n                                                                                                   var self=this;\n\n                                                                                                   function dragover(event) {\n                                                                                                   event.stopPropagation();\n                                                                                                   event.preventDefault();\n                                                                                                   self.@org.opencms.ade.galleries.client.ui.CmsGalleryField::onDragOver()();\n                                                                                                   }\n\n                                                                                                   function dragleave(event) {\n                                                                                                   event.stopPropagation();\n                                                                                                   event.preventDefault();\n                                                                                                  self.@org.opencms.ade.galleries.client.ui.CmsGalleryField::onDragOut()();\n                                                                                                   }\n\n                                                                                                   function drop(event) {\n                                                                                                   event.preventDefault();\n                                                                                                   var dt = event.dataTransfer;\n                                                                                                   var files = dt.files;\n                                                                                                   self.@org.opencms.ade.galleries.client.ui.CmsGalleryField::onDragOut()();\n                                                                                                   self.@org.opencms.ade.galleries.client.ui.CmsGalleryField::openUploadWithFiles(Lcom/google/gwt/core/client/JavaScriptObject;)(files);\n                                                                                                   }\n\n                                                                                                   element.addEventListener(\"dragover\", dragover, false);\n                                                                                                   element.addEventListener(\"dragexit\", dragleave, false);\n                                                                                                   element.addEventListener(\"dragleave\", dragleave, false);\n                                                                                                   element.addEventListener(\"dragend\", dragleave, false);\n                                                                                                   element.addEventListener(\"drop\", drop, false);\n\n                                                                                                   }-*/;","commit_id":"238c8531802dc4068c3d4cf0e772f5c5fc80c9d6","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Splits the value in all its informations.<p>\n     * First part is the URL of the image. The second one describes the scale of this image.<p>\n     * The last one sets the selected format.<p>\n     * \n     * @param value that should be split\n     * @return the URL of the image without any parameters\n     */\n\n    private String splitValue(String value) {\n\n        m_croppingParam = CmsCroppingParamBean.parseImagePath(value);\n        String path = \"\";\n        String params = \"\";\n        if (value.indexOf(\"?\") > -1) {\n            path = value.substring(0, value.indexOf(\"?\"));\n            params = value.substring(value.indexOf(\"?\"));\n        } else {\n            path = value;\n        }\n        int indexofscale = params.indexOf(PARAMETER_SCALE);\n        if (indexofscale > -1) {\n            String scal = \"\";\n            int hasmoreValues = params.lastIndexOf(\"&\");\n            if (hasmoreValues > indexofscale) {\n                scal = params.substring(indexofscale, params.indexOf(\"&\")).replace(PARAMETER_SCALE, \"\");\n            } else {\n                scal = params.substring(indexofscale).replace(PARAMETER_SCALE, \"\");\n            }\n            if (!scal.equals(m_scaleValue)) {\n                m_scaleValue = scal;\n            }\n            params = params.replace(PARAMETER_SCALE + m_scaleValue, \"\");\n\n        }\n        int indexofformat = params.indexOf(PARAMETER_FORMAT);\n        if (indexofformat > -1) {\n            int hasmoreValues = params.lastIndexOf(\"&\");\n            if (hasmoreValues > indexofformat) {\n                m_selectedFormat = params.substring(indexofformat, hasmoreValues).replace(PARAMETER_FORMAT, \"\");\n            } else {\n                m_selectedFormat = params.substring(indexofformat).replace(PARAMETER_FORMAT, \"\");\n            }\n            params = params.replace(PARAMETER_FORMAT + m_selectedFormat, \"\");\n            m_formatSelection.selectValue(m_selectedFormat);\n        }\n        int indexofdescritption = params.indexOf(PARAMETER_DESC);\n        if (indexofdescritption > -1) {\n            int hasmoreValues = params.lastIndexOf(\"&\");\n            if (hasmoreValues > indexofdescritption) {\n                m_description = params.substring(indexofdescritption, hasmoreValues).replace(PARAMETER_DESC, \"\");\n            } else {\n                m_description = params.substring(indexofdescritption).replace(PARAMETER_DESC, \"\");\n            }\n            params = params.replace(PARAMETER_DESC + m_description, \"\");\n            m_description = URL.decode(m_description);\n            m_descriptionArea.setFormValueAsString(m_description);\n        }\n        if (!path.isEmpty()) {\n            String imageLink = CmsCoreProvider.get().link(path);\n            CmsCroppingParamBean restricted;\n            if (m_croppingParam.getScaleParam().isEmpty()) {\n                m_image.setUrl(imageLink + \"?__scale=w:165,h:110,t:1,c:white,r:2\");\n            } else {\n                restricted = m_croppingParam.getRestrictedSizeParam(110, 165);\n                m_image.setUrl(imageLink + \"?\" + restricted);\n                m_image.getElement().getStyle().setMarginTop((110 - restricted.getTargetHeight()) / 2, Unit.PX);\n            }\n\n        }\n        return path;\n\n    }","id":82990,"modified_method":"/**\n     * Parses the value and all its informations.<p>\n     * First part is the URL of the image. The second one describes the scale of this image.<p>\n     * The last one sets the selected format.<p>\n     * \n     * @param value that should be parsed\n     * \n     * @return the URL of the image without any parameters\n     */\n\n    private String parseValue(String value) {\n\n        m_croppingParam = CmsCroppingParamBean.parseImagePath(value);\n        String path = \"\";\n        String params = \"\";\n        if (value.indexOf(\"?\") > -1) {\n            path = value.substring(0, value.indexOf(\"?\"));\n            params = value.substring(value.indexOf(\"?\"));\n        } else {\n            path = value;\n        }\n        int indexofscale = params.indexOf(PARAMETER_SCALE);\n        if (indexofscale > -1) {\n            String scal = \"\";\n            int hasmoreValues = params.lastIndexOf(\"&\");\n            if (hasmoreValues > indexofscale) {\n                scal = params.substring(indexofscale, params.indexOf(\"&\")).replace(PARAMETER_SCALE, \"\");\n            } else {\n                scal = params.substring(indexofscale).replace(PARAMETER_SCALE, \"\");\n            }\n            if (!scal.equals(m_scaleValue)) {\n                m_scaleValue = scal;\n            }\n            params = params.replace(PARAMETER_SCALE + m_scaleValue, \"\");\n\n        }\n        int indexofformat = params.indexOf(PARAMETER_FORMAT);\n        if (indexofformat > -1) {\n            int hasmoreValues = params.lastIndexOf(\"&\");\n            if (hasmoreValues > indexofformat) {\n                m_selectedFormat = params.substring(indexofformat, hasmoreValues).replace(PARAMETER_FORMAT, \"\");\n            } else {\n                m_selectedFormat = params.substring(indexofformat).replace(PARAMETER_FORMAT, \"\");\n            }\n            params = params.replace(PARAMETER_FORMAT + m_selectedFormat, \"\");\n            m_formatSelection.selectValue(m_selectedFormat);\n        }\n        int indexofdescritption = params.indexOf(PARAMETER_DESC);\n        if (indexofdescritption > -1) {\n            int hasmoreValues = params.lastIndexOf(\"&\");\n            if (hasmoreValues > indexofdescritption) {\n                m_description = params.substring(indexofdescritption, hasmoreValues).replace(PARAMETER_DESC, \"\");\n            } else {\n                m_description = params.substring(indexofdescritption).replace(PARAMETER_DESC, \"\");\n            }\n            params = params.replace(PARAMETER_DESC + m_description, \"\");\n            m_description = URL.decode(m_description);\n            m_descriptionArea.setFormValueAsString(m_description);\n        }\n        if (!path.isEmpty()) {\n            String imageLink = CmsCoreProvider.get().link(path);\n            setImagePreview(imageLink);\n\n        } else {\n            m_imagePreview.setInnerHTML(\"\");\n        }\n        return path;\n\n    }","commit_id":"238c8531802dc4068c3d4cf0e772f5c5fc80c9d6","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Initializes this class.<p>\n     */\n    public static void initClass() {\n\n        // registers a factory for creating new instances of this widget\n        CmsWidgetFactoryRegistry.instance().registerFactory(WIDGET_TYPE, new I_CmsFormWidgetFactory() {\n\n            /**\n             * @see org.opencms.gwt.client.ui.input.form.I_CmsFormWidgetFactory#createWidget(java.util.Map)\n             */\n            public I_CmsFormWidget createWidget(Map<String, String> widgetParams) {\n\n                CmsGalleryConfigurationJSO conf = CmsGalleryConfigurationJSO.parseConfiguration(widgetParams.get(\"configuration\"));\n                CmsImageGalleryField galleryField = new CmsImageGalleryField(conf);\n                return galleryField;\n            }\n        });\n    }","id":82991,"modified_method":"/**\n     * Initializes this class.<p>\n     */\n    public static void initClass() {\n\n        // do nothing\n    }","commit_id":"238c8531802dc4068c3d4cf0e772f5c5fc80c9d6","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Sets the widget value.<p>\n     * \n     * @param value the value to set\n     * @param fireEvent if the change event should be fired\n     */\n    public void setValue(String value, boolean fireEvent) {\n\n        value = splitValue(value);\n        m_textbox.setValue(value);\n        if (fireEvent) {\n            fireChange(true);\n        }\n    }","id":82992,"modified_method":"/**\n     * Sets the widget value.<p>\n     * \n     * @param value the value to set\n     * @param fireEvent if the change event should be fired\n     */\n    @Override\n    public void setValue(String value, boolean fireEvent) {\n\n        value = parseValue(value);\n        m_textbox.setValue(value);\n        if (fireEvent) {\n            fireChange(true);\n        }\n    }","commit_id":"238c8531802dc4068c3d4cf0e772f5c5fc80c9d6","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/** \n     * Constructs a new gallery widget.<p>\n     * \n     * @param configuration the gallery configuration\n     */\n    public CmsImageGalleryField(I_CmsGalleryConfiguration configuration) {\n\n        initWidget(uibinder.createAndBindUi(this));\n        m_configuration = configuration;\n        generatesFormatSelection();\n        m_descriptionArea.getTextArea().setStyleName(I_CmsLayoutBundle.INSTANCE.globalWidgetCss().textAreaBox());\n        m_descriptionArea.getTextAreaContainer().addStyleName(\n            I_CmsLayoutBundle.INSTANCE.globalWidgetCss().textAreaBoxPanel());\n        m_descriptionArea.setRows(3);\n        m_descriptionArea.getTextAreaContainer().onResizeDescendant();\n\n        m_formatSelection.getOpener().addStyleName(I_CmsLayoutBundle.INSTANCE.globalWidgetCss().selectBoxSelected());\n        m_formatSelection.getSelectorPopup().addStyleName(I_CmsLayoutBundle.INSTANCE.globalWidgetCss().selectBoxPopup());\n\n        m_opener.setButtonStyle(ButtonStyle.TRANSPARENT, null);\n        m_opener.setImageClass(I_CmsImageBundle.INSTANCE.style().popupIcon());\n\n        m_imageField.add(m_image);\n    }","id":82993,"modified_method":"/** \n     * Constructs a new gallery widget.<p>\n     * \n     * @param configuration the gallery configuration\n     */\n    public CmsImageGalleryField(I_CmsGalleryConfiguration configuration) {\n\n        super(configuration);\n        setHasImage(true);\n        m_descriptionArea = new CmsTextArea();\n\n        m_descriptionArea.addStyleName(org.opencms.ade.galleries.client.ui.css.I_CmsLayoutBundle.INSTANCE.galleryFieldCss().descriptionField());\n        m_descriptionArea.getTextArea().setStyleName(I_CmsLayoutBundle.INSTANCE.globalWidgetCss().textAreaBox());\n        m_descriptionArea.getTextAreaContainer().addStyleName(\n            I_CmsLayoutBundle.INSTANCE.globalWidgetCss().textAreaBoxPanel());\n        m_descriptionArea.setRows(3);\n        m_descriptionArea.getTextAreaContainer().onResizeDescendant();\n        m_formatSelection = new CmsSelectBox();\n        m_formatSelection.addStyleName(org.opencms.ade.galleries.client.ui.css.I_CmsLayoutBundle.INSTANCE.galleryFieldCss().formats());\n        m_formatSelection.getOpener().addStyleName(I_CmsLayoutBundle.INSTANCE.globalWidgetCss().selectBoxSelected());\n        m_formatSelection.getSelectorPopup().addStyleName(I_CmsLayoutBundle.INSTANCE.globalWidgetCss().selectBoxPopup());\n        ValueChangeHandler<String> changeHandler = new ValueChangeHandler<String>() {\n\n            public void onValueChange(ValueChangeEvent<String> event) {\n\n                fireChange(false);\n            }\n        };\n        addToMain(m_formatSelection);\n        addToMain(m_descriptionArea);\n        m_descriptionArea.addValueChangeHandler(changeHandler);\n        m_formatSelection.addValueChangeHandler(changeHandler);\n        generatesFormatSelection();\n        m_resourceInfoPanel.setVisible(false);\n        addStyleName(org.opencms.ade.galleries.client.ui.css.I_CmsLayoutBundle.INSTANCE.galleryFieldCss().hasImage());\n    }","commit_id":"238c8531802dc4068c3d4cf0e772f5c5fc80c9d6","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Returns a position info representing the dimensions of all visible child elements of the given panel (excluding elements with position:absolute).\n     * If the panel has no visible child elements, it's outer dimensions are returned.<p>\n     * \n     * @param panel the panel\n     * \n     * @return the position info\n     */\n    public static CmsPositionBean getInnerDimensions(Element panel) {\n\n        return getInnerDimensions(panel, 1);\n    }","id":82994,"modified_method":"/**\n     * Returns a position info representing the dimensions of all visible child elements of the given panel (excluding elements with position:absolute).\n     * If the panel has no visible child elements, it's outer dimensions are returned.<p>\n     * \n     * @param panel the panel\n     * \n     * @return the position info\n     */\n    public static CmsPositionBean getInnerDimensions(Element panel) {\n\n        return getInnerDimensions(panel, 2);\n    }","commit_id":"238c8531802dc4068c3d4cf0e772f5c5fc80c9d6","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * The default constructor. \n     */\n    public CmsFormRow() {\n\n        initWidget(uiBinder.createAndBindUi(this));\n\n    }","id":82995,"modified_method":"/**\n     * The default constructor. \n     */\n    public CmsFormRow() {\n\n        Widget main = uiBinder.createAndBindUi(this);\n        initWidget(main);\n        main.addStyleName(I_CmsInputLayoutBundle.INSTANCE.inputCss().highTextBoxes());\n    }","commit_id":"8f2e8a53886acc6907e01aee5895a0f15c95a9a6","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Shows the problem count in the panel.<p>\n     * \n     * @param numProblems the number of resources with publish problems\n     */\n    private void showProblemCount(int numProblems) {\n\n        m_problemsPanel.clear();\n        if (numProblems > 0) {\n            String message = Messages.get().key(Messages.GUI_PUBLISH_DIALOG_PROBLEM_1, \"\" + numProblems);\n            m_problemsPanel.add(new InlineLabel(message));\n            m_problemsPanel.setVisible(true);\n        }\n        m_checkboxProblems.setVisible(numProblems > 0);\n    }","id":82996,"modified_method":"/**\n     * Shows the problem count in the panel.<p>\n     * \n     * @param numProblems the number of resources with publish problems\n     */\n    private void showProblemCount(int numProblems) {\n\n        m_problemsPanel.clear();\n        if (numProblems > 0) {\n            HorizontalPanel errorBox = new HorizontalPanel();\n            Label warnIcon = new Label();\n            String styleName = org.opencms.gwt.client.ui.css.I_CmsLayoutBundle.INSTANCE.dialogCss().warningSprite();\n            warnIcon.addStyleName(styleName);\n            String message = Messages.get().key(Messages.GUI_PUBLISH_DIALOG_PROBLEM_1, \"\" + numProblems);\n            errorBox.add(warnIcon);\n            errorBox.add(new Label(message));\n            m_problemsPanel.add(errorBox);\n            m_problemsPanel.setVisible(true);\n        }\n        m_checkboxProblems.setVisible(numProblems > 0);\n    }","commit_id":"8f2e8a53886acc6907e01aee5895a0f15c95a9a6","url":"https://github.com/alkacon/opencms-core"},{"original_method":"public String buildPath(LiferayPortletURL portletURL) {\n\t\tString friendlyURLPath = null;\n\n\t\tString jspPage = GetterUtil.getString(\n\t\t\tportletURL.getParameter(\"jspPage\"));\n\n\t\tif (jspPage.equals(\"/admin/view_article.jsp\")) {\n\t\t\tString resourcePrimKey = GetterUtil.getString(\n\t\t\t\tportletURL.getParameter(\"resourcePrimKey\"));\n\n\t\t\tfriendlyURLPath = \"/admin/article/\" + resourcePrimKey;\n\n\t\t\tportletURL.addParameterIncludedInPath(\"jspPage\");\n\t\t\tportletURL.addParameterIncludedInPath(\"resourcePrimKey\");\n\t\t}\n\n\t\tif (friendlyURLPath != null) {\n\t\t\tWindowState windowState = portletURL.getWindowState();\n\n\t\t\tif (!Validator.equals(windowState, WindowState.NORMAL)) {\n\t\t\t\tfriendlyURLPath += StringPool.SLASH + windowState;\n\t\t\t}\n\n\t\t\tportletURL.addParameterIncludedInPath(\"p_p_id\");\n\t\t}\n\n\t\treturn friendlyURLPath;\n\t}","id":82997,"modified_method":"public String buildPath(LiferayPortletURL portletURL) {\n\t\tString friendlyURLPath = null;\n\n\t\tString resourceID = GetterUtil.getString(portletURL.getResourceID());\n\n\t\tString jspPage = GetterUtil.getString(\n\t\t\tportletURL.getParameter(\"jspPage\"));\n\n\t\tif (resourceID.equals(\"rss\")) {\n\t\t\tfriendlyURLPath = \"/knowledge_base/rss\";\n\n\t\t\tportletURL.addParameterIncludedInPath(\"p_p_cacheability\");\n\t\t\tportletURL.addParameterIncludedInPath(\"p_p_lifecycle\");\n\t\t\tportletURL.addParameterIncludedInPath(\"p_p_resource_id\");\n\t\t}\n\t\telse if (jspPage.equals(\"/admin/view_article.jsp\")) {\n\t\t\tString resourcePrimKey = GetterUtil.getString(\n\t\t\t\tportletURL.getParameter(\"resourcePrimKey\"));\n\n\t\t\tfriendlyURLPath = \"/admin/article/\" + resourcePrimKey;\n\n\t\t\tWindowState windowState = portletURL.getWindowState();\n\n\t\t\tif (!Validator.equals(windowState, WindowState.NORMAL)) {\n\t\t\t\tfriendlyURLPath += StringPool.SLASH + windowState;\n\t\t\t}\n\n\t\t\tportletURL.addParameterIncludedInPath(\"jspPage\");\n\t\t\tportletURL.addParameterIncludedInPath(\"resourcePrimKey\");\n\t\t}\n\n\t\tif (friendlyURLPath != null) {\n\t\t\tportletURL.addParameterIncludedInPath(\"p_p_id\");\n\t\t}\n\n\t\treturn friendlyURLPath;\n\t}","commit_id":"0f7d2ff9e2bfff0953e459f3364998beabbe6c48","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public void populateParams(\n\t\tString friendlyURLPath, Map<String, String[]> params) {\n\n\t\taddParam(params, \"p_p_id\", _PORTLET_ID);\n\t\taddParam(params, \"p_p_lifecycle\", \"0\");\n\t\taddParam(params, \"p_p_mode\", PortletMode.VIEW);\n\n\t\tString[] urlParams = StringUtil.split(\n\t\t\tfriendlyURLPath, StringPool.SLASH);\n\n\t\tif (urlParams.length < 3) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (urlParams[2].equals(\"article\")) {\n\t\t\tif (urlParams.length >= 4) {\n\t\t\t\taddParam(params, \"jspPage\", \"/admin/view_article.jsp\");\n\t\t\t\taddParam(params, \"resourcePrimKey\", urlParams[3]);\n\t\t\t}\n\n\t\t\tif (urlParams.length >= 5) {\n\t\t\t\taddParam(params, \"p_p_state\", urlParams[4]);\n\t\t\t}\n\t\t}\n\t}","id":82998,"modified_method":"public void populateParams(\n\t\tString friendlyURLPath, Map<String, String[]> params) {\n\n\t\taddParam(params, \"p_p_id\", _PORTLET_ID);\n\t\taddParam(params, \"p_p_lifecycle\", \"0\");\n\t\taddParam(params, \"p_p_mode\", PortletMode.VIEW);\n\n\t\tString[] urlParams = StringUtil.split(\n\t\t\tfriendlyURLPath, StringPool.SLASH);\n\n\t\tif (urlParams.length < 3) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (urlParams[2].equals(\"rss\")) {\n\t\t\taddParam(params, \"p_p_cacheability\", ResourceURL.PAGE);\n\t\t\taddParam(params, \"p_p_lifecycle\", \"2\");\n\t\t\taddParam(params, \"p_p_resource_id\", \"rss\");\n\t\t}\n\t\telse if (urlParams[2].equals(\"article\")) {\n\t\t\tif (urlParams.length >= 4) {\n\t\t\t\taddParam(params, \"jspPage\", \"/admin/view_article.jsp\");\n\t\t\t\taddParam(params, \"resourcePrimKey\", urlParams[3]);\n\t\t\t}\n\n\t\t\tif (urlParams.length >= 5) {\n\t\t\t\taddParam(params, \"p_p_state\", urlParams[4]);\n\t\t\t}\n\t\t}\n\t}","commit_id":"0f7d2ff9e2bfff0953e459f3364998beabbe6c48","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"private static AbstractPlanNode replaceInsertPlanNodeWithUpsert(AbstractPlanNode root) {\n        if (root == null) return null;\n\n        List<AbstractPlanNode> inserts = root.findAllNodesOfType(PlanNodeType.INSERT);\n        if (inserts.size() == 1) {\n            InsertPlanNode insertNode = (InsertPlanNode)inserts.get(0);\n\n            UpsertPlanNode upsertNode = new UpsertPlanNode(insertNode);\n\n            assert(insertNode.getParentCount() == 1);\n            AbstractPlanNode parent = insertNode.getParent(0);\n            parent.clearChildren();\n            parent.addAndLinkChild(upsertNode);\n\n            assert(insertNode.getChildCount() == 1);\n            AbstractPlanNode child = insertNode.getChild(0);\n            child.clearParents();\n            upsertNode.addAndLinkChild(child);\n        }\n\n        return root;\n    }","id":82999,"modified_method":"private static AbstractPlanNode replaceInsertPlanNodeWithUpsert(AbstractPlanNode root) {\n        if (root == null) return null;\n\n        List<AbstractPlanNode> inserts = root.findAllNodesOfType(PlanNodeType.INSERT);\n        if (inserts.size() == 1) {\n            InsertPlanNode insertNode = (InsertPlanNode)inserts.get(0);\n\n            UpsertPlanNode upsertNode = new UpsertPlanNode(insertNode);\n\n            assert(insertNode.getParentCount() <= 1);\n            if (insertNode == root) {\n                root = upsertNode;\n            } else {\n                AbstractPlanNode parent = insertNode.getParent(0);\n                parent.clearChildren();\n                parent.addAndLinkChild(upsertNode);\n            }\n\n            assert(insertNode.getChildCount() == 1);\n            AbstractPlanNode child = insertNode.getChild(0);\n            child.clearParents();\n            upsertNode.addAndLinkChild(child);\n        }\n\n        return root;\n    }","commit_id":"c3aa1ce53b3f06dcf6db46a7c53f789e0d2ad80c","url":"https://github.com/VoltDB/voltdb"}]